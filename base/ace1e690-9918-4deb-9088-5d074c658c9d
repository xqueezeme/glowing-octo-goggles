{
    "title": "The Hunger Ch. 07",
    "pages": [
        "Please read chapters 1-6 before beginning this chapter. While this chapter can be read as a stand alone story it is entirely dependent on the events of the earlier chapters. This is a bit of a transitional chapter and may not have the \"action\" that earlier and subsequent chapters do. A writer thrives on your feedback. Please take a moment to vote and leave a comment if you feel so inclined. I hope you enjoy my scribbling.\n\n++++++++++++++++++\n\nMy two hour drive home from the camp was the first real time I had had for in depth introspection and reflection. I used it well; although I'm not sure it had the results I hoped for. I suppose I was left with as many questions as answers. I suppose the key question was \"What the hell does all this mean?\" I obviously needed to do some serious work on my self-image. I had always thought of myself as a fairly liberated and uninhibited lover. However, in the context of the events of the previous couple of days that image was shattered. Had I enjoyed myself? Absolutely, but I was still left with the nagging question of whether this previously untapped explosion of sexuality was really me, or just some sort of one-time aberration. The analytical side of my personality referred to it as a \"statistical anomaly.\" On the other hand, I couldn't help but wonder if there was a simpler answer. Had I just tapped into a previously buried part of my sexuality? They say that we are, to some degree, the product of our environment. Had the environment that Jim and Sharon exposed me to uncovered a part of me that had been lying dormant due to more mundane nature of my sex life?\n\nI had always thought I had a healthy libido. I liked sex as much as most single women I supposed. Admittedly, my sex life was somewhat lacking, but I had always attributed that to the less then inspiring skills of my lovers. I was left wondering if my perception of their lack of skills had more to do with my own inhibitions then their talents in bed.\n\nI did make one significant break through in this self analysis. When my mind turned to the memories of the time and pleasure I shared with Sharon and the other women at the party, it was pretty clear that I was in fact a full blown bisexual. I could not kid myself about that any longer, at least not with any degree of honesty. What I had shared with them, both emotionally and physically, left no doubt in my mind. My curiosity about women was what led me into this in the first place, wasn't it? My suspicions were definitely confirmed. What was not shocking was the sexual attraction I had enjoyed. That had been a key part of my fantasy life for a long time. \n\nWhat really surprised me was the emotional link I felt towards Sharon. My attraction to her was clearly more then just sexual. Playing with the other women at the party had been fun, but I felt something much deeper with Sharon. I had sought out a playmate, a kindred spirit, but what I felt developing was something much more complicated and involved. Sure I cared for Jim too, but that was not as hard for me to accept. My feelings towards him fit more tidily in my mostly heterosexual view of the world. The fact that he was married to another woman, on the other hand, was perhaps a bit more difficult to digest.\n\nMy thoughts of Jim brought me back to an even bigger question. How would I, a single woman, fit into their life together, and they into my own? The concept of polyamory was something foreign to me. I was barely familiar with the term, something I recall reading as some minor reference to in a long ago college human sexuality course. As I turned into my apartment complex I decided that this was a concept that perhaps required a bit of research and I made a note to myself to search the internet for more information on this topic that had previously been so foreign to me.\n\nAs I unloaded my overnight bag I saw the bag of goodies that Sharon had sent home with me. Flashbacks hit me like a bolt of lightning as I saw it. I had maintained a level of mild arousal on my way home as my brain filled with a mixture of sexual imagery and lifestyle questions that resulted from those images. That arousal blossomed when I saw the bag. What was happening to me? How could I be this turned on after everything I had experienced over the weekend? Wasn't there some limit to what my body and libido needed? It was if the more sex I got, the more I needed. Could I be turning into some sort of sex addict? I was familiar with the concept of sex addiction, but I never really took it seriously and had always considered it as some sort of weird psychological manifestation. I certainly didn't feel weird. Was I a bit confused? Yes. Weird? No. Actually what I felt deep down, when I was truly honest with myself, was more like empowerment and enlightenment.\n\nI hurried into my apartment and was soon out of clothes and in my bed. My trusty vibrator was in my hand and I had a quick and satisfying orgasm while images of writhing bodies, male and female, filled my head. My hunger was satiated, at least temporarily, and I sank into a heavy sleep. \n\nI wish I could say that my demons and issues were put to rest, but they weren't. As my week went on I tried to bury myself in my work to keep my mind involved in the every day details of my professional life. However, my thoughts continued to stray back to the questions that bedeviled me. My appetite for sex did not wane in the least. Masturbation, which had previously been a couple of times a week release for me, became a major part of my life. A quick masturbation session in the shower or at bedtime turned into major sessions of self love. By the end of the day my eyes were constantly on the clock, waiting until that magic time when I could flee my office for the confines of my home and indulge my passions. \n\nI noticed other changes in my outlook on life as well. I was much more aware of the people around me. I found myself admiring both men and women I encountered in the office, in a restaurant at lunch, or even just on the street. I quickly developed little mini-fantasies about these people. Were they good lovers, inventive, exploratory, long lasting, or kinky? What did they look like naked? Did she shave her pussy? Did he have a big cock? Is she into women or would she like to be? Does she like it in the ass?\n\nWhile I tried to maintain the cool, calm professional demeanor on the outside that most of my co-workers had come to associate with me, I was a sexual turmoil on the inside. My mind was like a crack in a dam. Once the crack formed, the flood soon followed. This turmoil was offset to some degree by the intensity with which I addressed my work. Only by submerging myself in my work was I able to hold the sexual demons at bay. \n\nIt wasn't like these changes were unnoticed. My boss made several complimentary remarks about the work that I was turning out, not only about the quality but the quantity as well. I was like a woman possessed, she stated. Lisa, my only real friend at work, made several comments about how I seemed to \"glow,\" as she put it. She made several inquiries about whether I had a new boyfriend while we shared a quick salad at lunch. I didn't think she could handle the truth, so I did my best to fend off her questions. I was just barely able to handle the truth myself. I couldn't help thinking to myself, \"If you only knew Lisa, if you only knew.\"\n\nOther changes had crept into my life as well. My work attire was usually shed almost immediately upon entering my apartment. I quickly grew more comfortable being in just my skin. My apartment's thermostat was adjusted accordingly to compensate for this new facet of my life. The long tee shirts, sweats, and pajamas that had previously been my normal lounge wear was left buried in a dresser drawer.\n\nI also found myself digging into my lingerie drawer for the sexier lingerie that I normally reserved for a \"hot date.\" These items became part of my day to day lingerie instead of just special occasions. It was if they allowed me to stay in touch with my sexual and sensual self even while covered in my more practical work wardrobe. My plain Jane, \"practical,\" bras and panties soon took their place at the bottom of the drawer. Cotton and nylon were replaced by lace, silk, and satin. My full cut bras and panties were replaced with demicups and thongs. Pantyhose were replaced with thigh highs and garter belts. I suppose my outer wear changed as well, if to a lesser degree. I began to dress a little more attractively. The skirts to my usual business suits became shorter, the slacks a little tighter, and cotton blouses gave way to silk. I also gravitated towards higher heeled shoes as my normal emphasis on comfort gave way to style and appearance. I found myself developing a new found appreciation for just how good my legs looked in heels and deciding that adding a few more pairs to my collection was called for after my next paycheck. These changes were noticed at work of course, especially by my friend Lisa. I was able to dismiss them as a simple revamping of my \"style.\" \n\nAs I alluded to earlier, my masturbatory patterns were changing and developing as well. I began to set my alarm clock 30 minutes earlier to allow myself time for more then just a \"quick cum,\" as I had thought of it, in the shower. My day typically began with a long, drawn out session in which I brought myself to the edge repeatedly and allowed my body to build to a really wonderful orgasm. Long gone were the days in which my morning sessions were just a \"release.\" If nothing else, I had learned the advantages of orgasmic quality over expedience. I was quickly becoming a connoisseur of fine orgasms just like some people savored fine wine, cognac or cigars. \n\nI found that these pre-dawn adventures gave me a better out look on life during the day. I was more relaxed and confident at the office, even if my mind was still filled with occasional flashes of fantasy and sexual imagery. I started to think of these episodes as my \"breaks.\" Just as some people needed occasional cigarette or coffee breaks, I needed \"fantasy breaks.\" More then once they were interrupted by an un-knowing co-worker who walked into my office with my feet kicked up and a smile on my face. I was able to dismiss these, when asked, as just a bit of daydreaming about an upcoming vacation. I was careful that my suit coat or blazer covered my turgid nipples and I certainly hoped that the smell of my wet pussy was not noticeable. On more then one occasion I was forced into using panty liners that I had begun to carry with me for this purpose. I resisted the urge to slink off to the ladies restroom for quick masturbation breaks although I did feel the urge. I just stored up the passion and saved it for when I got home. \n\nMy night time masturbatory sessions became much more elaborate and drawn out. This was the time devoted to fully exploring my new found sexuality. Sharon's gifts were put to good use, especially after I had a couple of days to recover from the weekend, particularly my well used ass and nipples. \n\nI was very familiar with the old idea that to be a good lover you have to know how to make love to yourself first. I had read more then one article in magazines like Cosmo on this topic. I guess I had never truly appreciated that concept. The recent events in my life made these ideas crystalline clear in my consciousness. My appetite for sex, and especially for exploratory sex, was voracious. When I wasn't actually doing it, I was thinking about it and planning the next session. I went so far as to make a trip to the drug store to lie in supplies for these sessions. I began to devote time to creating a scene for my night time self love sessions. I bought bubble bath so that I can enjoy a long relaxing soak in preparation. Candles, wine, and a good supply of disposable enemas was also included. I also stocked up on lube because I realized the small bottle that Sharon had provided would not last long at the rate I was going. I even broke out my satin sheets that I usually saved for when I was expecting to bring home a potential lover. I was willing to take the time and spend the money to create the sort of atmosphere that I felt was conducive to my future explorations.\n\nMy exploration was rather expansive. My experience with Jim and Sharon and at the party had opened up a lot of possibilities to me that I was anxious to explore, both physically as well as psychologically. My night time forays into the world of self induced pleasure were accompanied by some pretty wild fantasies. It seemed that whatever inhibitions I had had were gone and my mind was free to consider options I had never even imagined before. These fantasies were interspersed with a lot of very hot memories as well. Sometimes it was hard to tell where the memories stopped and the fantasies began. One thing that I noticed about my fantasies, as opposed to those from before, was they were no longer fanciful. My fantasies before had never been about things that I would necessarily consider doing in real life. They were more of the \"what if\" variety. Now I found my thoughts were devoted to creating scenarios for future, real world exploration. \n\nI made some wonderful discoveries about my sexual likes and interests. Yes, I did truly enjoy my new found anal eroticism. My most explosive orgasms usually involved some sort of anal play, whether it is with my fingers, the plug or beads that Sharon gave me, or one of my other toys. I became fastidious in keeping my rear passage clean for anal exploration and I even invested in an enema bag for most extensive \"cleaning.\" I even found that giving myself an enema could be an enjoyable experience, rather then just a \"chore.\" \n\nOne of my most memorable orgasms came from using the anal beads which I found out were deliciously fun. Pulling them out when my orgasm peaked led to a wonderful climax. This revelation led to a quick trip to my computer to order a couple more sets of beads in various sizes from an online toy site so that I could explore this variation more completely. \n\nI also found that I love the full feeling of the plug, even though it lacked the thrusting power of Jim's cock. I found that wearing it for extended periods around my apartment kept my arousal level elevated, but without creating an overwhelming need for immediate release. It was a sort of self induced tease that I learned to appreciate. It also had a secondary benefit. I discovered that keeping it in place was not always easy and it provides a good source of exercise for my sphincter and glutes as I wore it around the apartment. I also discovered something else as a result of using it that led to very hot fantasies and a resolve to explore them more fully. One night I had been wearing the plug for a couple of hours and after moving to the bedroom I had the idea of fucking myself with a favorite dildo. Having both my ass and cunt filled at the same time resulted in a series of earth shattering orgasms. It was definitely in the \"fireworks\" category.\n\nI also found out that my experiences with erotic pain had not been a fluke. I had always liked my breasts treated a little roughly but I, nor my lovers, had ever taken it to the extreme that I had gone to over the weekend. I tried out the nipple clamps and while I did enjoy them, I found out that timing was the key. If I wasn't sufficiently aroused, they were just plain painful and that the pain numbed after I had worn them for a while. I learned to adjust them and as my arousal level increased, so did the pressure that I applied. Perhaps their best use, I found, was when I pulled them off as I came. The blood rushed back into my nips and the sensation always added to my explosion. I also found that holding the connecting chain in my mouth and tugging on my nipples while my hands were otherwise occupied was an interesting experience. \n\nMy experiments with erotic pain were not limited to the clamps. I dug out some clothes pins I sometimes used for hanging up hand washed items and tried using them on other parts of my body. My breasts, belly, and labia were all subjected to their bite. One of my most intense experiences came when I tried using them one on my clit when I was near my peak. I actually passed out from that. The intense pain and pleasure really did a number on me. The pain, without accompanying pleasure, when I awoke, was not very pleasant however, and I decided this may not be something I would try on a regular basis. At least not when I was alone.\n\nI even tried a little self-administered spanking. I experimented with my hand, an antique hair brush, a plastic ruler, and even a kitchen spatula. While I enjoyed the warm glow on my ass, I found that it lost something without the presence of a lover to deliver the swats. Perhaps I needed a domineering lover to trigger the sort of deep seated feelings that my sub side needed to fully enjoy this sort of activity. I did find that spanking my pussy as part of my frequent masturbation sessions was interesting and very arousing and it became a regular part of my masturbatory repertoire. \n\nAll of the attention to the pleasure that my body was capable of providing led to another positive by-product. I started going back to the gym and worked out with a vengeance. I was determined to get myself in the best possible condition I could. If nothing else, I thought, it would help my stamina. My time in the gym as well as my sexual workouts at home resulted in better quality sleep then I had enjoyed in a long time. By the time I was in bed, to sleep, not play, I slept well and awoke rested and full of energy. \n\nWhile my body was well exercised, sexually and otherwise, my mind was also kept busy. I tried to devote at least an hour in the evenings to explore online. The world was my oyster and my interests seemed to be far ranging. A rapidly growing list of bookmarks filled my browser. For the most part I sought out informative, resource oriented sites rather then the more prevalent porn varieties. However, I will admit to spending more then a little time surfing some porn sites, usually with one hand busy in my crotch. \n\nIf you looked at my bookmarks, you would find sites devoted to Naturism, swinging, polyamory, bisexuality, and even BDSM. I had decided that if I was going to accept my new sexuality and lifestyle, I was at least going to try to understand the ground rules. I couldn't really define what my lifestyle was at that point, but I was willing to explore the possibilities. Most of all I was surprised to find out there were so many people out there like me. That is, people with similar desires, needs, interests, and dare I say kinks? I was particularly interested in reading material written by female writers that shared the same feeling that I did. It gave me a warm feeling to know that I was not alone. Deep within me, I knew that I was never truly alone. If nothing else, Sharon and Amy had taught me that. Still, it was good to know that I was not as unique in my feelings as I had previously thought. \n\nI also dove into a couple of erotic story sites. I was familiar with a few and had availed myself of them in the past for \"jill off\" material. Now though, I saw them a little differently. Again, I was drawn to stories by female authors whose experiences, or at least their fantasies, mirrored my own. I did find a lot of stories that did nothing for me, or even revolted me to some degree. I quickly learned how to scan through a story to see if it was something I would find interesting before investing the time needed to read it. Mostly though, I found them a good source of fantasy material. They were fresh material that helped me open my horizons to other possibilities for further sexual exploration. \n\nI quickly found that I was drawn to a couple of categories of stories. Group sex, especially stories about swinging and 3-somes, bisexual and lesbian, and BDSM stories seemed to grab my interest more often then not. Not that I was limited to those types of stories alone. I was looking for options and I forced myself to explore outside of my favorites. Sometimes this resulted in more questions then answers, especially if it was a story that was pretty \"out there,\" and I found myself being aroused by it. Some of the BDSM stories were like that. While I could never see myself living as a 24/7 slave, I did find myself being occasionally aroused by this type of story. Some of the fetish oriented stories resulted in a similar response. One well written bisexual story in which one of the main characters was lactating led to some very warm memories of Terri, who I had met at Mike and Amy's party. ",
        "My reading was not limited to the internet. I tore through the book, The Ethical Slut, which Sharon had sent home with me. She was absolutely right; it did turn out to be a wonderful tool in my acceptance of my sexuality. Again, I found there are others like me and not only do they exist but the book set out a sort of loose guide towards how to treat others in regards to this type of lifestyle. The suggestions did not just cover how to treat lovers in bed, but also in regards to your out of bed relationships with significant others as well as more casual sexual acquaintances. It talked about how it was possible to have lovers in your life on various levels and how to enjoy being with them. It helped guide me towards a new found sense of acceptance and self-awareness. It was OK, after all, to enjoy sex for the sake of the pleasure alone. It didn't make me a bad person, or even a pervert for that matter. Enjoying sex was a healthy thing, both physically and psychologically, and perhaps spiritually in its own way. I finished the book with an entirely new definition of the word slut and began to accept that term as part of my own sexual self-identity and vocabulary.\n\nI chatted with Sharon almost every night online. She did not contact me on Monday, saying that she wanted to give me some time to recover and reflect. She mainly listened as I poured out everything that was going on in my life and my brain. She later said it was like I went through an accelerated version of what she had herself gone through at one point in her life. What she discovered in months or even years was happening to me in mere days. She called me \"motivated\" and the word \"epiphany\" was used on a couple of occasions. I couldn't help but smile at that. When I thought about it I had to agree. I had never gone about anything in my life in a half hearted manner. It was all or nothing and that extended to both my personal and professional life. When I took something on, I did so with a certain degree of devotion and ferocity. Perhaps re-inventing my sexuality was no different.\n\nMostly though, she provided me with support and comfort. She was the big sister I never had. Our online chats could have just as easily occurred in a pink bedroom with rock star posters and with us dressed in flannel night gowns as we discussed the guys we liked at school. Obviously, the subject matter was a bit more mature than that, but our time together had that sort of feel to it. She was my peer and my mentor at the same time. I think she got a pretty good kick out of it. She told me that she was reporting the majority of our chats back to Jim and he was enjoying it as well. She hinted that she and Jim had enjoyed more then one enjoyable sex session after she shared the latest details of my burgeoning sexuality. Apparently I was also serving as a catalyst for them as well. \n\nOur chats broke down to two different categories. The first discussion concerned the details of my sexual exploration, both physical and mental. That was pretty easy for me. She usually listened to what I was trying during my masturbation sessions and the kinds of material I was reading online and in \"Slut.\" She merely offered a few suggestions, usually a favorite web site or something similar. The second category was what I came to refer to as \"what does this all mean?\" I could sense that she was re-assured by the progress I had made in this regard. Our chats acted as a good gauge of how well I was actually doing. By talking to her, it forced me to put a lot of discordant thoughts into some sort of intelligible form. Talking to her helped me organize my own introspection to the point that it all started to make sense to me as well. For that I will eternally be grateful to Sharon. My various thoughts, feelings, emotions, and physical sensations were all starting to form some sort of cohesiveness that allowed me to at least prepare to make some decisions about my life. I wasn't there yet, and perhaps wouldn't be there at any point in the immediate future, but I could begin to see the light at the end of the tunnel. It was all starting to make sense.\n\nWhen I told Sharon about going back to the gym, she had some good suggestions on how to incorporate that as part of my sexual exploration that I incorporated into my workouts. The next evening I was mounted on an exer-cycle with my trusty plug buried in my ass and the cycle seat doing a great job of pushing it in further. I hope the other occupants didn't recognize the wet stain between my thighs was anything other than sweat because I was flowing like a river. I reported the results back to Sharon later that evening and she seemed pleased. I also told her that I had really gotten into people watching at the gym and had added a few of the regulars there as characters in my fantasies. \n\nWhen I told her about the results with the plug, I said that it sure helped my motivation to continue working out. She said she had another suggestion and the next day I was visiting an adult bookstore near where I worked in search of something that she called \"duotone balls.\" I had no idea what they were, but the cute girl that worked there showed me what they were, all the while grinning broadly. I was in a hurry to get to the gym but decided that another trip to this store was called for. I not only wanted to see what other items might catch my eye, but possibly to get to know the cute clerk a little better as well.\n\nThe duotone balls were an absolute success. They were rapidly incorporated into my repertoire. They resulted in a moderate level of arousal while I worked out that I found very enjoyable. I did manage to remember to throw some panty liners into my workout bag this time to prevent any embarrassing stains. I found that the duotones had their best effect while I was on the stair climber. They forced me to do kegels while I was exercising to keep them in. They did try to slip out once, but a quick trip to the locker room to re-insert them took care of that problem and I soon had the knack of wearing them. I had always been pretty conscientious about doing kegels to keep my pussy well toned, but I thought a few more certainly wouldn't hurt as part of my workouts. I did revert to a quick \"jill off\" orgasm in the shower after my workout, but it was just an appetizer for more extensive exploration when I got home. After that, the duotones and the plug found a permanent home in my workout bag.\n\nOn Wednesday, during a phone call with Sharon, I got the question from her that I had been hoping for ever since I had left. She asked if I wanted to come back to the camp and spend the weekend with them. She offered to give me some time to think it over but I quickly accepted. I did inform her that I did have one possible conflict. I had been exchanging emails and a phone call with Ken and Lynn and they had extended an invitation to spend the evening with them on Saturday. Sharon was very accommodating and said that she and Jim wouldn't have a problem with me slinking off to go play with Ken and Lynn. She chuckled as she said \"slink off.\" \n\nSharon was quiet for a minute and then said, \"One thing I should warn you about though.\"\n\n\"What's that?\" I replied.\n\n\"Ken and Lynn can be pretty intense if you know what I mean. They tone it down at parties but when they are playing in the privacy of their home they tend to cut loose,\" she stated. \n\n\"By intense, you mean that they are into BDSM?\" I asked. \n\n\"Uuuuuhhh, yes, exactly,\" she said. \n\n\"Well, I sorta got a hint about that at the party. I just sensed that and when we talked yesterday the topic came up. To be honest, I'm more then a little intrigued.\"\n\nA pretty extensive conversation followed about BDSM and how practitioners of that lifestyle made up a sub-set of the swinging lifestyle. She explained that they usually keep a pretty low profile when playing with other couples that were not into BDSM. Non-BDSM couples were referred to as a \"vanillas.\" \n\nI told Sharon that I appreciated being forewarned and went on to tell her that my \"research\" gave me at least a basic idea of what to expect. She accepted that I was a big girl and knew what I was doing and our conversation moved on to the more practical matters of making plans for my trip back to the camp. \n\nAfter I finally said my goodbyes to Sharon I fired off an email to Ken and Lynn and accepted their offer. I was looking forward to a new adventure.\n\nMy \"play time\" that night was particularly passionate. My fantasies were filled with images of playing with Sharon and Jim and also of Ken and Lynn. My fantasies of Ken and Lynn were even wilder. At least with Sharon I had some basis to know what to expect. Playing with Ken and Lynn was a total unknown to me and my imagination had no limits. \n\nI was quite distracted on Thursday, or should I just say more than usual? I again buried myself in work and tried to stay focused. I did manage to slide out for lunch and a quick shopping trip. I wanted to pick up a few things to wear for the weekend. My limited \"slut wear\" wardrobe was a little thin. I had fired off a quick email to Sharon in the morning and asked her advice as to what I should wear, if anything, for my date with Ken and Lynn. She gave me a few suggestions and I ventured out at lunch to find something along the lines of her suggestions. There is a lingerie and dance wear store near my office that I thought would have something appropriate. I did some quick power shopping and grabbed a take out salad to eat back at my desk. Thankfully the afternoon was a blur as I buried myself in a new project I had been assigned.\n\nI didn't even look at the clock until it was 5:30. I decided to wrap up my work, call it a day and head to the gym. When I got to the gym I stripped out of my work clothes and stepped on the scales. I was happy to see that I had lost 2 pounds. My goal wasn't really to lose weight, but it was nice to see that my efforts were have some results. I was more interested in toning and body sculpting. My arms and legs could use a little tightening, and a bit more muscles on my chest and ass wouldn't hurt either. \n\nI took my work out bag to the enclosed toilet to insert my plug, which I had decided to wear for my workout. I caught the eye of a cute, young female trainer who I thought might have seen the plug inside my unzippered bag. She gave me a big smile that reinforced my conclusion. I was embarrassed and excited at the same time. I couldn't help but think of her as I lubed and inserted the plug. I was gradually learning to relax and accept it and it was getting easier as time went on.\n\nI started my work out on the bike and I made eye contact with the trainer a few times. We exchanged smiles and it was almost like we were flirting with our eyes and smiles across the gym. I recall seeing her around the gym before, but to be honest I hadn't really paid much attention to her. It seemed like there was always something new catching my attention lately. I couldn't help admiring her and my mind wandered back to Cathy, my body builder lover from the party. It wasn't that their bodies were all that similar. Cathy was much taller and more heavily muscled. The trainer was more petite and compact but I couldn't help but admire her fit body. She was wearing a t-shirt and shorts with the gym's logo on them. The best way I can describe her is as being \"tight.\" I had her pegged as an aerobics instructor, or something similar. She had the body of someone that had always been an athlete or fitness fanatic. Her breasts were small and rode high on her chest. Perhaps her best feature was her ass. It was definitely of the \"bubble butt\" variety but it was clear as I watched her that it was all muscle, and not flabby at all. Her youth, blond hair, blue eyes, along with her body were like a sign that said, \"cheer leader.\" \n\nIf grinding away on the bike with the plug in my ass hadn't already done the job, looking at, and thinking about the trainer certainly had me in an aroused state. My nipples were making their presence known through the thin fabric of my leotard for anyone that cared to look. I hung a towel around my neck to cover them. I was glad I had the foresight to use a panty liner because my pussy was leaking profusely. I had considered using the duotones and the plug together and I was suddenly glad I hadn't. I think I might have overwhelmed the absorbent capacity of the panty liner. My labia were swollen and my arousal was further increased by my pumping thighs. I tried to concentrate on my workout, but when I started to do kegels in rhythm with my pedaling, it just increased my arousal to another level. My ass contracted around the plug as I did the kegels and this only added to the sensations flooding my body. I was definitely in heat. The fact that I was in public added a wicked element that just turned up my lust to a higher degree. My hard nipples seemed as if they were ready to explode through the fabric covering them. I realized that my passion was causing me to push my workout even harder and I was pedaling faster as my lust grew. I lost track of the trainer as she circulated around the floor, providing suggestions to the various people in the gym. I was jolted back into reality when I heard her voice next to me. \n\n\"You're really pushing it tonight, aren't you,\" I heard her say.\n\n\"Yea, I guess so. I just needed to work off a little frustration,\" I replied, our eyes meeting. \n\n\"Tough day at work?\" she asked.\n\n\"Yea, that too,\" I replied. \n\nShe giggled and her eyes sort of lit up when she did. My pussy throbbed. I was in full tilt lust for this little hard bodied girl. She wasn't much more then a girl I thought, maybe 20 or 21 years old. I suddenly felt very old.\n\n\"The bike is really good for general aerobic workouts. Is there anything you would like some help with, meaning anything else you would like to accomplish at the gym?\" she said. Did I see a glint in her eyes that could indicate a double meaning to her statement, I wondered?\n\n\"Well, now that you mention it, I was thinking earlier about doing some other exercise to help do a little bit of body sculpting. To be honest I have never done any weight training and I am a little bit intimidated by it,\" I replied. I couldn't help but notice a change in her smile. Was she happy that I had asked for her help? Hmmmm... Perhaps I wasn't the only one that was feeling an attraction here. That thought caused another involuntary spasm in my pussy and I couldn't help but wonder what I was getting myself into. \n\n\"Why don't you follow me over to the weight area and we can talk about your goals and perhaps come up with a simple program to achieve it. I promise to keep it simple and let you work your way into it,\" she said. Her smile was infectious and at that point I think I would have followed her anywhere. \n\nAs I got off the bike and began to follow her she said, \"By the way, my name is Heather.\" Of course it is, I couldn't help thinking snidely, definitely a cheer leader. Her name fit her appearance and perky personality. \n\n\"Nice to meet you Heather, I'm Kim,\" I replied, trying to keep a straight face.\n\nAs we walked she asked me about my goals and I repeated to her my earlier thoughts. When I told her that I though my breasts could be helped out a little with a little work on my pecs, she looked down at her own chest, looked up at me, grinned, and said \"I know the feeling.\"\n\nI didn't miss a beat and replied, \"Maybe you just need a second opinion, they look pretty good to me.\" I couldn't believe it, here I was flirting with this girl and throwing sexual innuendos at her like a brazen hussy. I would have never even considered saying anything like that only a short time ago. I had said it without even thinking. It just rolled off my lips. Perhaps some of the changes that had occurred to me were starting to make their selves known.\n\nWhen we got around to talking about my ass she said she had the perfect exercise for that. I snuck a peek at her ass and asked, \"Are you speaking from personal experience here, because if this exercise is your secret, I definitely want to know what it is.\"\n\nHeather blushed at my not so subtle compliment of her ass and said, \"Well, that is partly genetics and partly exercise, but your glutes don't look like they need a lot of work, perhaps just a little toning. I'd be happy to help you with a program and help, err... monitor your progress,\" she said, her voice softer to keep from being over heard.\n\nDamn, this girl could dish it out as well as she received it. I've never been a big flirter, but I was really enjoying the bantering back and forth with Heather. Her non-verbal cues were stepped up a notch as well. I was getting lost in her eyes and her smile. Was I just fooling myself? Could this girl be attracted to me, or was she just enjoying flirting with me?\n\nHer hands were touching my body as she showed me which muscles to concentrate on as she led me through my workout. My pussy twitched and clit throbbed in sympathy whenever she touched me. Damn, she was turning me on. \"Why?\" I asked myself. It wasn't like I was going without sex. My libido was definitely super charged lately and sex was always hanging there, always in the background, in almost every facet of my life. I forced myself to concentrate on the workout, but my mind was constantly wandering. I couldn't help wondering what Heather would taste like, what she sounded like when she reached orgasm, and how her nipples would feel between my lips. These thoughts, and many others, flashed through my mind like lightning.\n\nFinally she was through with me. I experienced a combined feel of relief and loss that my time with her was over. Those feeling were exacerbated by her parting comments to me.\n\n\"Why don't you cool down for a bit, take a shower and then take a soak in the hot tub? My shift is almost over and I'll join you in a few minutes and we can discuss your new training regime.\"\n\n\"OK, sounds like a plan,\" I managed to say. I skipped my usual cool down and rushed to the shower and stripped out of my soaked workout outfit in record time. My body was flushed and warm, from both the exercise and my arousal. I decided that I liked the flushed feeling that the weight workout had caused. Once I was under the warm spray of the water, my fingers flew to my pussy for relief. The plug was still in my ass and as always, its presence increased my pleasure. My orgasm was quick and especially intense and I struggled to muffle my moans of pleasure. I hoped that the sound of the flowing water helped to cover the sounds of pleasure that did manage to slip past my lips. I let my pent up fantasies of Heather flood my brain as I diddled myself to a climax. The orgasm was much needed but hardly satisfying. I was still in need of more, but it was just enough to take the edge off my passion until I got home where I could allow myself the freedom to really let go.\n\nMy gym had a separate men's and women's hot tub in the locker room. It was not unusual for the women to soak nude after their workout. The new found freedom I felt in nudism allowed me to especially enjoy this feature of the gym. After I had soaped up and regained some sense of normality, I removed the plug, stashed it in the zip lock bag I saved for this purpose and wrapped in a towel, I headed for the warm waters of the spa. \n\nI settled in and closed my eyes and reclined my head back on the edge of the tub. The water felt good. Heather had pushed me beyond my normal workout and I knew I would be sore in the morning. It was late and near closing time and I was the only occupant of the tub. I could hear other women in the locker room as they dressed. The sound of conversations and slamming locker doors faded into a dull background. My mind once again wandered as I thought about Heather and my reaction to her. I had come to the conclusion that she would simply supply me with some nice new fantasy material for my forays into self loving when my reverie was interrupted as I heard foot steps approaching.",
        "I opened my eyes and looked in the direction of the foot steps. It was Heather. She was nude and I caught myself when I realized I was gawking. She was a goddess! I forced my eyes to focus on her face but couldn't help checking her out more extensively as she stepped into the spa. Her breasts had the firmness of youth and were topped with small Hershey kiss nipples that stood up proudly. Her belly displayed a six pack of muscles that told of her devotion to fitness. The muscles of her arms and legs stood out in stark relief but were not bulky. Her pussy was trimmed and I noticed she had a \"landing strip\" similar to my own. It was when she turned around to step into the water that I almost gasped. Her ass was a piece of art. It was an ass that I couldn't help but imagine worshipping for hours upon hours. Her cheeks stood out proudly, seemingly begging to be kissed. I couldn't help but get a quick flash of her shaved pussy as she backed into the spa. \"Was that on purpose?\" I asked myself. \n\nMy appreciation of Heather's body was abruptly interrupted when she sank into the water and she moved over near me in the large tub. She was near enough that we could have an intimate conversation yet still allow us each some degree of personal space. Our eyes met and she smiled that charming smile that I had quickly learned to associate with her.\n\nShe was still in her professional mode and our conversation was back to suggestions about my workout. Despite her \"cheerleader looks\" and the type of personality and intelligence I stereotypically associated with it, I was rapidly beginning to appreciate that she was in fact a very intelligent and well spoken young woman. Her stock was definitely on the rise. When the conversation about my new workout regime, my goals, and the path to achieve them finally tailed off, I was able to manipulate the conversation to Heather herself. I began to probe and ask questions about her and she opened up.\n\nShe explained that she was 21, a full time college student, and worked at the gym part time in the evenings to help subsidize the money her parents provided for college. She explained that her job here was so that she could afford a small apartment that allowed her to get out the dorms. She was a senior and was planning on going into physical therapy or possibly going to chiropractic school. \"Yes,\" I remembered thinking, \"she's definitely not just another dumb blond cheerleader.\" The fact of the mater was that she was in fact a cheerleader for her college football team but with the season over, and this being her senior year with graduation looming, that part of her life was history.\n\nI pressed on for a few more details about her. When I asked her if she had a boyfriend, she got quiet for a moment and then said no, that she and her most recent lover had broken up a few months before. She also said, without being asked, that she lived alone. When I said something about how I had to struggle through college with a series of roommates she explained that she was able to supplement her income with private training sessions that she did in addition to working at the gym. My dirty little mind couldn't help thinking of a very private, very intimate training session with her. \n\nWhen I asked a follow up question about her ex-boyfriend, she grew quiet again, blushed slightly, looked at me, and said, \"My lover was a woman. I'm not really a lesbian, if that is what you are thinking, but I have had male and female lovers in the past. The most recent one just happened to be a woman.\"\n\nI saw a look in her eyes that seemed like she was desperate for understanding, and perhaps, something else, acceptance maybe? Could she be a kindred soul, a devote bisexual lost in a heterosexual dominated world? It seemed like it. I sensed a certain need in her to connect with me, at least on a level of understanding. I some how sensed her revelation to me concerning her sexuality was not an easy, especially with someone she only knew from her professional life. I could understand that took more then a little courage. She seemed to need me to show her that she had not just made a major blunder. I felt a need to reassure her and at the same time I felt a degree of sisterhood with this young woman. \n\n\"That's cool,\" I replied. \"I'm bi too, although it's something pretty new in my life.\" I was with a woman for the first time very recently,\" I added, not wanting to get into explicit details. At the same time I wanted to reciprocate the openness she had shared with me. \n\nI could see the relief flow across her face at my own revelation. After that, the subject was dropped and our conversation was all over the place as we exchanged details about ourselves. There was a bonding that was taking place that was a little bit of a mystery to me. On one level we were working on developing a friendship like only two women can, and at the same time there was a definite sexual element. Even in my limited experience with female lovers I could tell the attraction was there. The earlier flirting was a not so subtle hint, but now that we had laid our cards on the table, so to speak, it had opened things up between us. This was so different then the early stages of a relationship with a man. My early stages with Sharon had been primarily online and by the time I had met her in person, sex between us was almost a given. \n\nOne thing she said really caught my attention. She said that she had been in committed relationships in the past and now she was more interested in \"playing the field\" for a while. I admitted that I had lovers, a couple, but that we were not exclusive, and then added \"at least not sexually exclusive.\" That got a smile from her. Yes, definitely a kindred spirit. \n\nI noted the time on the clock on the wall and after offering my apologies I said I needed to go. I still needed to pack for my weekend at the camp. I explained to Heather that I was going to be gone for the weekend.\n\n\"Are you going to be with your lovers?\" she asked\n\n\"As a matter of fact, yes,\" I replied. \n\n\"Well... I hope you have fun,\" she said, grinning broadly. \n\n\"I'm planning on it.\" I responded, returning her smile. \n\nI checked on her work schedule and we made plans for her to walk me through another workout the following week, upon my return. When I asked her if she would like to join me for coffee or a drink after she got off work, she said she would like that and then added \"It's a date.\"\n\nMy head spun for a moment as I came to grips with that. I had a date, with a woman. Not only had I asked a woman out on a date without even thinking about it, but she had accepted. The fact that I found absolutely gorgeous was just icing on top of the cake. My, my my; how my world was changing. I really needed to talk to Sharon!\n\nHeather got out of the spa and we went to go get dressed together. I couldn't help but check her out and I noticed something else. I wasn't the only one doing a little gawking as well. I noticed her eyes on my body. She seemed to like what she saw and I was relieved. Our eyes met, she smiled at me and any sense of pretense was dropped as we openly appreciated each other. I was in a bit of a stir once again. Sharon once told me that one of the greatest aphrodisiacs was being appreciated and desired. Her words suddenly hit home with me and I understood them with a flash of crystalline clarity. The fact that Heather desired me was apparent. Of course this desire was more then returned by myself. \n\nWe exchanged phone numbers before saying goodbye. I promised to give her a call when I got back in town so that we could firm up our plans. \n\nMy drive home with the gym was one filled with new and somewhat confusing thoughts. My car was on auto pilot. I have no idea how I got home. \n\nThat night, my mind was full of images of Heather as I frantically masturbated. I came hard while imagining her lips sucking hard on my clit and her tongue flickering over its exposed head while her fingers strummed my G-spot. My masturbatory session the next morning was much the same but was also mixed with sweet memories of my time with Sharon and Jim. \n\nHeather was obviously a wild card that I was not expecting and I was glad that I would soon be able to talk to Sharon about her. Sharon was much more then my lover. She had become sister, sounding board, mentor, and the rock that I clung to in a sea of swirling sexuality. The last week had given me the needed time to come to terms with a lot of things. However, the answers I had found raised even more questions that I needed her help to resolve. Of course Heather raised more then a few questions as well and I longed for Sharon's counsel on how to proceed with her. \n\nI tried to focus on work, at least for one more day. My weekend at the camp was so close now and I desperately needed the sort of emotional and sexual freedom it offered. It was almost like the camp had become a sort of shelter in the storm in my mind. It was the place where I could be myself and express my new found inner self. This part of me was what I had begun to refer to as my \"Inner Ethical Slut\" in my thoughts. \n\nI threw the overnight bag and makeup bag that I had packed and set off to work. Shortly after I arrived I was called into my boss's office. \"What now?\" I asked. My mind flashed through a lot of the things that I had done lately to see if there was something that I could be called onto the carpet for. I couldn't come up with anything but I realized that you never knew. \n\nThose imagined transgressions went out the window shortly after I arrived at Ellen's office and she asked me to have a seat. She explained that the company was closing this office and combining it with the office in Denver as a cost cutting move. Denver? Would this mean a transfer, I wondered? Did I want to go to Denver? All these thoughts went through my mind in milliseconds. \n\nMy boss gave a few seconds to ruminate on these thoughts and then said that she and the \"higher ups\" were very pleased with my work. There were going to be lay-offs associated with the changes but I wasn't going to be one of them. As a matter of fact, they were offering me a promotion if I wanted it. In addition, I wouldn't have to move.\n\n\"Huh,\" I finally spoke, but in a less then eloquent manner. I'm sure my confusion was written all over my face. \n\nShe went on to explain that the promotion I was being offered was to an outside sales position. I could office out of my home and they would give me an allowance to set up a home office. I was free to live anywhere in the general area. There would be a little over night travel but only one or two nights per week. In addition I was going to be given a company car. \n\nI had been working in the marketing department so this was not a huge move for me. I had, however, always worked at a desk job but did a lot of the coordinating with the folks in sales. I already knew most of our larger clients. I quickly came to the conclusion that this was something I could handle and a challenge I would relish. After discussing a few details, Ellen called in the head of sales, Carl, who would be my new boss. He went over the details of my compensation package which included a higher salary, a bonus plan, as well as a pretty generous expense account. The car was definitely a bonus as I had already thought about replacing my 8 year old Toyota, especially now that frequent trips to the camp seemed to be looming on the horizon. \n\nI asked if I could have the weekend to think it over, even though I had already made my decision in my own mind. For appearance sake I didn't want to seem too anxious. I did offer the appropriate level of enthusiasm so that my bosses' didn't think I was too cool about this opportunity.\n\nAfter Carl had left, I stayed and talked with Ellen. I considered her a friend, although not a close one and I wanted her advice. Ellen had served as a mentor during my early days with the company and she had been the one that helped me learn the rules of interoffice politics. She whole heartedly backed the promotion and said she would be thinking about me while she was freezing in Denver. She was close enough to retirement age to feel that she had to accept the relocation to Denver that had been offered to her but I got the impression that she wasn't wild about the idea. The fact that I was not only keeping my job but getting a promotion out of the deal was a win/win situation in her opinion. She also swore me to secrecy about the move because a lot of my co-workers weren't going to be notified for another couple of weeks. They were still deciding who was going to be laid off and who was going to be offered a transfer. When the word broke about my new job, the official story was that it was just a transfer to sales. \n\nWhen we were finished discussing the promotion I asked her if I could take off a little early. She knew I had been putting some extra hours lately and had no problem with allowing me to leave early. She asked if I had big plans for the weekend and I simply explained that I was taking a little road trip to visit friends and wanted to try to beat the traffic. She wished me a good trip and an enjoyable visit as I got up to leave. If she only knew how enjoyable it was going to be!\n\nThe rest of the day was a lot slower. I mainly finished up a few little projects that I had been putting off. I even managed to slip out to the lingerie store at lunch time. I splurged a little bit on a few things that I had taken note of during my visit the previous day. I felt I deserved it. The owner of the store recognized me and I think she was happy to see that she had a new regular customer. I also decided to do some major shopping after my raise went into affect but I wanted to check out some other stores before indulging in a major shopping spree. I was turning into a lingerie and slut wear junkie but I suppose it was just part of my transformation. \n\nAt 3 o'clock I tidied up my desk and climbed into my car. Before I got on the road I stopped at a convenience store and changed into shorts, a tank, and sandals for the drive. I was starting to have a harder and harder time dealing with being stifled by my conservative work attire. I also bought a soda for the road and was soon heading away from the city and towards the camp.\n\nDriving on the highway has always been a relaxing time for me and this was no different. I set the cruise control to a comfortable speed that allowed me to navigate without having to devote much thought to the light traffic. It was a time that allowed me to do lot of thinking. While my mind was not in the turmoil that it had been in the previous Sunday during my drive home from the camp, I still had a lot to consider. The list was pretty long: the new job and how it would affect my lifestyle, both positively and negatively; my relationship with Sharon and Jim; Heather; and my planned evening with Ken and Lynn.\n\nWhen I was thinking about Sharon and Jim my thoughts broadened a bit to the camp in general. It was within my sales territory and there was no reason why I couldn't move there. As a matter of fact it was more centrally located in my territory then where I was currently living. I was going to have to move anyway, my little one bed room apartment wasn't going to work if I was officing out of my home. It simply wasn't large enough and I could afford something larger anyway. I had long ago reached a point in my career where I could afford something larger then my little efficiency apartment, but I was comfortable there and hated the idea of moving. I decided to talk to Jim about it and see if there was anything available at the camp and at least explore that possibility. I put that train of thought to rest after considering what it would be like to actually live in the camp full time. My brain was flooded with erotic images as I considered the possibilities as well as the freedom I had come to appreciate during my short stay there. Being more then a weekend visitor to Jim and Sharon's house had its own appeal. \n\nMy thoughts during the early part of the trip were mostly devoted to more practical matter. The new job and my housing situation were the items at the top of the list. The analytical part of my brain worked out a mental \"things to do\" list that could largely wait until Monday. After I put those things to rest, my mind turned to things of a more erotic nature. \n\nHeather! Did she want me as much as I wanted her? I was pretty sure the answer to that was a definite yes, but I was still unsure of myself. Would I be happy dating a woman? I was pretty sure of the answer but I still had a lot of unknowns. \n\nJim and Sharon were less of an unknown. Sex was definitely not an issue. The previous weekend, if nothing else, had shown me that we very compatible in that regard. My key questions, however, had to do with the practical aspects and the possibility of a long term relationship with them. Was this something I wanted, and did they, on what level and with what terms? I realized these were all things that could be answered with time and I resolved myself to relax and allow these questions to answer their selves. Sharon had hinted that she wanted to have a discussion along these lines with me sometime during the weekend. I wondered if Sharon and Jim were asking themselves the same questions.\n\nKen and Lynn was another unknown but one of extreme possibilities. I couldn't help thinking what they would be like. Admittedly there was a certain degree of doubt in my mind. Was I getting in over my head with them? Was this something I really wanted, to explore my sub side? My gut, and my pussy, said yes. My brain, on the other hand, was telling me I was jumping off into the unknown. It was almost like I had an angel and devil sitting on my shoulder. I suppose the devil won because I finally decided that they represented a \"nothing ventured, nothing gained,\" kind of scenario.\n\nI had pretty well decided to relax and accept the adventure and opportunities this weekend provided by the time I reached the exit towards the camp. I was somewhat amused as I noticed that my simmering level of arousal increased the closer that I got to the camp. By the time I was punching in the code that Jim had given me to open the large imposing gate into the camp, it had almost reached a boil.\n\n\"OK Kim, here we go, let's have some fun,\" I said to myself as I drove into the camp itself. \n\n++++++++++++++++++\n\nPlease stay tuned for Chapter 8 of The Hunger for the continuing details of Kim's experiences. Please take a moment to vote if you enjoyed this story. Please check out my other stories as well. Stay tuned to this same bat time and bat channel. Thank you. "
    ],
    "authorname": "CorsetLvr",
    "tags": [
        "anal plug",
        "swinging",
        "anal beads",
        "exploration",
        "nipple clamps",
        "masturbation",
        "polyamory",
        "toys",
        "threesome",
        "eroticism"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-hunger-ch-07"
}