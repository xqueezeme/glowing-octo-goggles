{
    "title": "Kelsey's World Ch. 28",
    "pages": [
        "\"Oh my God, you're Cinnamon Sugar!\" the nervous woman said. Her name was Ruthie. She stood, barefoot and naked under her white bathrobe, nearly trembling. \"You cut off your hair!\"\n\n\"Oh,\" Kelsey said, putting her hand on her neck to feel for the hair that wasn't there. \"Yeah, I did. You nervous, Honey? Wanna drink or somethin'?\" \n\n\"I said no in the dressing room, but...is it all right if I change my mind?\"\n\n\"Sure, Honey! Tucker loves it when it's a party, right, Tuck? We'll have a couple with ya.\"\n\n\"Absolutely,\" Tucker said.\n\nCharity stood next to Kelsey, looking on in fascination. The inside of a porn studio was only slightly like what she'd expected. There were beds and fancy cameras and lights, but everything sparkled with cleanliness and everyone who worked there felt instantly like old friends.\n\n\"What are we havin', Ruthie?\" Tucker asked.\n\n\"Scotch?\"\n\n\"Oh! Jackpot, sweetheart! My favorite!\"\n\nRuthie smiled, and it felt good. \"I'm so pleased to meet you,\" she said to Kelsey after Tucker walked away. \"I just love everything you've done here.\"\n\n\"Oh, thanks, Honey. That's nice of you to say.\"\n\n\"Do you work here, too?\" Ruthie asked Charity.\n\n\"No, I'm a friend of Kelsey's. We're just visiting.\"\n\n\"That's my name. Kelsey. It's great to meet you, Ruthie,\" Kelsey said, extending her hand for a formal handshake. \"You're gonna have so much fun with Ralphy. He'll take care of you. He's super nice.\"\n\nRuthie's face blushed a little. She didn't know what to say. She was hoping Ralphy would take care of her \u2014 she hadn't had sex in months, and his blue-collar hard-body turned her on something fierce.\n\n\"I have this...fear that he won't like me,\" Ruthie finally said.\n\n\"Oh, Honey! I'll guarantee you that's not happenin'. He loves older girls. You probably know Donna Deeper, right. From the website?\"\n\n\"Yeah, I've seen her.\"\n\n\"She's like twenty years older than him, probably about your age. You're just as pretty in a different kind of way,\" Kelsey said, stretching the truth a bit. \"And you've seen Ginny, probably, the girl he did all those awesome scenes with when they were starting out. She's even older, Honey. Trust me, he'll like you. He'll make you cum wicked if you just let yourself go.\"\n\nRuthie smiled shyly. Tucker brought out a tray laden with plastic cups, each one with a double shot of good scotch in it. She took a big sip from one while Tucker walked away to serve Marsha and Jamar.\n\n\"Want a little tip, Honey?\" Kelsey said in a quieter voice. Ruthie nodded, hanging on every word. \"I don't know how you feel about asses, but Ralphy goes off big if you stick your finger in his ass when he cums. You'll be able to tell when he's almost there. Wait 'till the last couple seconds and then stick your finger way in there. Twirl it around while he's cumin'. There's like a gland or somethin'. He likes it more than any guy I've ever seen.\"\n\n\"Oh, my God! Kel!\" Ralphy said when he walked over. \"You're a sight for sore eyes! Did you come back for good?\"\n\n\"Hi Ralphy!\" she said, hugging him tight. \"No, just visiting, Honey. I brought my friend, Charity, to show her around.\"\n\n\"Hi, Charity. I love that name. And you, you must be my Ruthie. You ready to have some fun, baby?\"\n\n\"Hi...Ralphy,\" Ruthie said, nervously.\n\n\"He's even hotter in person, right?\" Kelsey said.\n\nRuthie was excited but terrified as she looked up into Ralphy's eyes.\n\n\"How we doin' Ruthie?\" Tucker said, after consulting with Jamar over near the cameras. \"You wanna give it a try, or do you wanna work on that drink some more?\"\n\nShe poured what was left of it down her throat. \"Could I have another one?\"\n\n\"Sure, Sweetheart,\" Tucker said.\n\nMarsha poured a big splash in her cup. Kelsey signaled Charity and they left Ruthie and Ralphy alone so they could get to know each other a little.\n\n\"This's gonna be good,\" Kelsey said quietly to Charity. \"Ruthie really needs it, and Ralphy's real good with girls like her.\"\n\nThey wandered over to talk to Jamar while he checked out the cameras.\n\n\"So Charity, you're one of Kelsey's teacher friends?\" he asked.\n\n\"Yes. I'm still kinda new at it.\"\n\nKelsey smiled. She could tell by Charity's demeanor that Jamar turned her on. \"Jamar, you been doin' any scenes lately?\" she asked.\n\n\"No,\" he said, sounding disappointed. \"Boss hasn't had anything for me lately.\"\n\n\"You guys should totally do a scene,\" Kelsey said. \"I'd watch that.\"\n\nJamar smiled his big, light-up-a-room smile. \"Charity, were you thinkin' of givin' it a try?\"\n\nCharity looked flustered. \"No, I can't. It's not really something a teacher can do.\"\n\n\"Ah, right. Yes,\" Jamar said. \"Bummer.\"\n\nCharity's eyes flared when she realized Jamar was into the idea, but she had to stick to her guns. No way could she be on a porn website.\n\nKelsey and Charity stood near Jamar when Ruthie's amateur scene got underway. It took the nervous woman a few minutes to get used to things, but once she settled in a bit Ralphy did his thing and swept her right off her feet. He was on fire, and Ruthie burned right along with him.\n\n\"He always picks up his game when he's got an audience,\" Tucker whispered in Kelsey's ear. \"You guys should stop by more often.\"\n\nRuthie was howling as she slammed herself down repeatedly on Ralphy's powerful upthrusts. She was on a hard ride that jiggled every bit of her aging body, jarring lose more happy nerve cells than she'd felt in a decade.\n\n\"Oh ffuuck! Fuck me Ralphy! Oh God!!\"\n\nKelsey wanted to cheer her on, but she held her tongue. Ruthie had a melt-down. Ralphy flung her onto her knees and fucked her hard from behind, filling the echoey studio with the sounds of slapping body flesh and womanly shrieks.\n\nThe intense session went on for another half an hour, leaving Ruthie looking like she'd had the fucking of a lifetime, worn to a frazzle with an almost mystical looking smile on her face. When it was all over Charity was nearly breathless with horniness.\n\n\"Is it always like this?\" she asked Kelsey.\n\n\"No, but quite a few of 'em really need it bad. The guys love it when they get a woman like that, and it all just sorta spirals into somethin' super hot.\"\n\nA little while later, Kelsey and Charity were chatting with Tucker in his office when Ralphy was on his way out. He gave Kelsey a big hug.\n\n\"You should come back to work here, kiddo,\" he said. \"We all miss the shit outta you.\"\n\n\"I miss you guys, too,\" she said. \"I promise I'll visit more often.\"\n\nA few minutes after Ralphy left, Marsha brought Ruthie into the office. The still somewhat shell-shocked woman looked completely different in her street clothes. Charity suddenly had the feeling Ruthie was someone's mother, someone's grandmother, someone's aunt.\n\n\"Ruthie, you did awesome, baby,\" Tucker said, handing her a check in an envelope. \"Did you have fun?\"\n\nShe didn't know what to say, but she couldn't help smiling. \"I don't think fun quite covers it,\" she said. \"Will you tell Ralphy I...I...loved it? I feel like a new woman.\"\n\n\"Good, Ruthie, I'm glad,\" Tucker said. \"I'll absolutely tell him. You know, I've seen him with a lot of girls, and, he had one hell of a good time today.\"\n\nRuthie's eyes beamed with pride. She stuffed the envelope in her purse without looking at it. She caught Kelsey's eye and hugged her. \"What a fun life you must have,\" she said quietly in the young redhead's ear. She hugged Marsha, too, and headed for the door. \"Thank you everybody,\" she said.\n\n\"Thanks Ruthie,\" Tucker said. \"Keep in touch. We'd love to have you come again.\"\n\nRuthie smiled as she walked out into the daylight of the city street. She had a feeling she'd be back for more.\n\n\"She was awesome,\" Kelsey said. \"I love that shit.\"\n\n\"Yup. That's what it's all about,\" Tucker said.\n\n\"So, I got a favor to ask,\" Kelsey said. \"How much would you charge for a private scene? Not for the website, you know? Charity and Jamar. You guys could make up a DVD for her, you know? So she can see what it's like to be a porn star.\"\n\n\"Kel!\" Charity said. \n\nKelsey smiled. She knew if one word was all Charity could come up with to protest the idea, it was happening.\n\n\"Kelsey, you've made so much money for me, you know I'd never ask for any money from you for anything. Are you cool with this Charity? Wanna have some fun in front of the cameras?\"\n\n\"I guess so,\" she said, looking cute and shy. \"Would Jamar...want to?\"\n\n\"Ha!\" Tucker laughed. \"Is the Pope catholic? Let's do it.\"\n\nThey all walked down the hall to the editing room where Jamar was already settling in to work on Ruthie's session.\n\n\"That Ruthie was somethin' else, huh boss?\" he said.\n\n\"Jamar, you up for a scene right now, buddy?\" Tucker asked. \"Charity wants to try things out, just a private session.\"\n\nJamar's happy face looked at Charity. She looked shy but excited. She didn't say a word.\n\n\"Yeah, boss! You runnin' the cameras?\"\n\n\"Yup. Let's hit it. I gotta get outta here in a couple hours. You wanna do wardrobe, sweetheart, or just roll right into it?\" he asked Charity.\n\n\"Wardrobe,\" Kelsey said. \"Come on Marsh, let's do her up nice.\"\n\nThe three girls headed toward the dressing room. Charity felt like she was dreaming as she walked down the dark hall. Kelsey knew just the lingerie to put her in \u2014 a pale green bra/pantie/garter belt set that was cut perfectly for Charity's ass-i-licious body. Marsha did a quick hair and makeup job on her. The energy was fast and furious in the dressing room, and Charity was swept away into the real-life fantasy of it all. She'd only spoken ten words since Kelsey broke the idea back in Tucker's office, and the walk back down the hallway in her lingerie was silent, too, with Kelsey holding her hand.\n\nJamar didn't say a word when he got his first good look at Charity's glorious sexiness under the lights. His happy eyes drank in every inch of her, zeroing in on the stunning ass he was about to pummel into jiggling ecstasy.\n\nAfter watching Ruthie, Charity sort of knew the drill \u2014 a quiet studio with the crew watching, lights all around with the unblinking eye of the cameras trained on every move, a big microphone hanging overhead to pick up every sexy sigh and every lascivious scream. All of it excited Charity more than she thought it would.\n\n\"Got any tips for me?\" she asked Kelsey, a little nervously, wondering if Jamar had any triggers like Ralphy did.\n\n\"You don't need any,\" Kelsey said. \"Look at him. He's almost drooling. Just go for it, he's super fun. I'll tell you this, he's an ass man. When he sees the way your pussy looks when you bend over you better be ready, Honey. He's gonna fuck the shit outta you.\"\n\nCharity's eyes flared. She was a bit self conscious about the way her pussy looked in Richie and Erin's photos. When she was on her hands and knees it was so much bigger looking than the other girls. It was almost freakish, Charity thought, the way it drew the eye, all puffy and prominent. But the boys and the men all seemed to think it was something special, so she was getting used to it.\n\nJamar was in a white terrycloth robe, working with Tucker to get the cameras dialed in. Charity watched them, picturing Jamar naked, the way she'd seen him in Kelsey's porn scenes. She was pretty sure he was going to be the new record holder in the 'biggest cock I've ever had' category, and the thought gave her goosebumps. Standing there in her skimpy lingerie would have been exciting enough, but the anticipation of what was to come had her pulse racing.\n\n\"Ready everybody?\" Tucker asked.\n\nKelsey took Charity's hand and walked her over to Jamar at the side of the big bed. She thought about saying something to Jamar like, \"Do her good, Honey,\" but she didn't. She just winked at him and retreated into the shadows behind the cameras.\n\n\"All right Charity, nothing formal here,\" Tucker said. \"Jamar'll give you some guidance. Just follow his lead and have fun. Remember, nobody's gonna see this but you. You can watch it with your man when you're seventy, show him how unbelievably sexy you were. I shouldn't say were. I'm pretty sure you'll still be plenty sexy when you're seventy. All right, cameras are rolling.\"\n\nJamar started slow. Being the studio's editor as well as the cameraman, he liked to have at least a few seconds of nothing but eye contact to work with at the beginning of a scene. Charity's beautiful, excited eyes were magical.\n\nThe sexy stare-down sent Charity's heart rate even higher. She looked into Jamar's eyes, and at his beautiful face, a face that radiated masculine sexuality without looking rough or hard. A tall, ebony-skinned Jamaican with a shining smile was just about the sexiest thing she could imagine at the moment.\n\nThat same feeling amped up and went right off the charts a moment later when Jamar opened his robe and let it slip down his arms. Charity was stunned. \n\n\"How do you look like that?\" she quietly asked, letting her gaze drift over the most perfect body she'd ever seen.\n\nJamar smiled sweetly. He reached for her hand, lifted her arm and twirled her, slowly, like a ballerina on a music box. \"How do you look like that?\" he said, drinking in all of her pointy titted, perfect ass beauty. \"Damn!\"\n\nCharity's eyes flared. She'd never felt such sexual tension before. A similar sensation always hit her when she was with Bobby, especially the first time they were together, at the party with everyone watching, but the feeling she got with Jamar, under the lights and in front of the cameras, was something altogether spectacular. She nearly had a breathless seizure when his massive cock swelled before her eyes.\n\nKelsey knew what she'd do in such a situation, and she smiled when Charity made the move \u2014 dropping slowly to her knees, letting her hands slide down Jamar's muscled brown skin to his hips. Her tongue reached out for the dark tip of Jamar's quickly hardening cock, tickling it at first, and then scooping it into her mouth.\n\n\"Ohhh, Charity!\" Jamar moaned. \"God you are a sexy girl!\"\n\nIt only took a few hands-free plunges of Charity's head before the massive cock disappeared down her throat. She held it there for a moment, the biggest she'd ever conquered, while Jamar groaned his approval, deep and guttural. \n\nKelsey giggled silently to herself. She loved that Charity went for it like that \u2014 a pornstar-worthy move right at the outset. \n\nThe blowjob evolved into one for the ages. Charity was completely in love with the big cock by the end of it, worshiping it with her sexy mouth. Jamar could scarcely believe how orally talented Charity was, but then he glanced at Kelsey and knew why. The young school teacher had learned from one of the best. Kelsey smiled when she saw the look on Jamar's face. She wanted to cheer Charity on, but she held her tongue because the cameras were rolling.\n\nUp on the big bed a few minutes later, Charity was on her hands and knees, looking back over her shoulder at her new favorite man. Jamar peeled the pale-green lace panties down over the curve of her ass, getting his first look at what was waiting for him.\n\n\"My God, Charity!\" he said. The beautiful pussy nearly glowed under the studio lights, adorning her spectacular ass like a masterpiece painting hung on a museum wall. \"You are unbelievable!\" The words, sprinkled with Jamaican accent fairy dust, made Charity swoon.\n\nWith her panties still around her thighs, Jamar buried his face in the fleshy beauty, breathing in Charity's scent, licking up her juicy treasure. His mouth watered from all the deliciousness, adding to her wetness. From the way Jamar was moaning and breathing, and the enthusiastic way he was eating her, Charity knew it was only a matter of moments before she felt his big cock inside her.\n\nWhen it happened, with a growing fullness that took her breath away, she could only stutter out a few wordless utterances. Wide eyed and open mouthed, she absorbed Jamar's length into herself, deeper than any man had gone before.\n\n\"That's a fuckin' cock!\" she said when he was all the way in, her voice so breathy no one but Jamar could understand her.\n\n\"That's a fuckin' pussy!\" he hissed, gasping at Charity's otherworldly tightness. \"Ffffuuckk!\"\n\nNeither of them could quite believe the sensations they were feeling, both their bodies charged with a new kind of electricity, a new kind of high.\n\n\"Fffuucckk!\" Charity breathed, her eyes as wide as saucers as the fucking commenced.\n\nKelsey almost had an orgasm from doing nothing but watching. She knew how good Jamar felt inside her, and could only imagine what he was doing to Charity.\n\n\"Holy God!\" Jamar said after three or four long, deep thrusts. \"Holy God!\"\n\nTwo more thrusts and it was over. He backed his big cock out, already spurting and throbbing. Charity's tight pussy had squeezed out a big helping of his warm seed to keep for itself, and the rest splattered and splashed on the writhing curves of her ass. Jamar groaned loud as he corralled the spewing cock in his hand to try and control the mess. It was a lost cause \u2014 warm, sticky cum was everywhere. \n\nKelsey and Tucker and Marsha were speechless. They'd never seen Jamar loose control like that, and certainly never so quickly.\n\n\"Ffuuckk, girl!\" Jamar said. \n\nHe forced his messy meat back into the fire. Charity yelped when she felt it inside her again, heading deep. In a matter of seconds she erupted into a leg shaking orgasm. Jamar fucked right through it, holding tight to her shapely hips. The two lovers were loud and their bodies were on fire. Charity's first porn session was underway.\n\n\"Cut!\" Tucker yelled an hour later. \"That was awesome, Sweetheart. You were born for porn.\"\n\n\u2014\n\nKelsey heard the FedEx truck rumble up the long gravel driveway. She loved flirting with the cute drivers, so she hurriedly put on the gossamer thin robe she kept by the side door for such occasions. It was really a swimsuit cover-up, meant to show off a bikini underneath. On that day, in early December, it's sole purpose was aiding and abetting a nearly naked flirt with an unsuspecting deliveryman.\n\n\"Hi! Got somethin' for me?\" she said, smiling as she stood in the open doorway. The cold air raised goosebumps on her, and her nipples sprang to attention.\n\n\"Charity Witbro?\" the man asked. He tried to control his wandering eyes, but it was a lost cause.\n\n\"She's my roommate.\"\n\n\"I need her signature for this one,\" he said. He smiled a little when he realized Kelsey loved being on display.\n\n\"Char!\" she yelled. \"Come here. A cute guy wants you.\"\n\nFootsteps were heard upstairs.\n\n\"So, you guys keepin' busy?\" Kelsey asked, leaning casually against the door frame.\n\n\"Yeah. Christmas stuff's just startin' to pick up.\"\n\nCharity bounded down the stairs like a teenager, her shorty robe giving glimpses of bare ass. It wasn't tied tightly, allowing a long, deep-V look at her cleavage.\n\n\"Roy's got a present for ya,\" Kelsey said, reading the deliveryman's name off his jacket. \"I bet I know what it is. Looks like a DVD, huh? Wanna come in and watch it with us, Roy?\"\n\n\"Kel!\" Charity said, her face blushing bright red. \"Thanks,\" she said when she'd signed Roy's electronic pad. \n\n\"Enjoy the weekend,\" he said, taking one last look at the girls before departing.\n\n\"He wanted to fuck us,\" Kelsey said when she closed the door. \"That'd be so fun, wouldn't it? Just drag a guy in and double-team him for like ten minutes and then just push him out the door?\"\n\n\"You're crazy,\" Charity said, eyeing the padded envelope from Tucker.\n\n\"Says the nympho pornstar schoolteacher,\" Kelsey smiled. \"Crack that baby open. We should have some people over tonight and watch it. We could do popcorn and stuff.\"\n\nCharity's eyes showed her excitement at the idea. \"Really?\" she asked.\n\n\"Gimme that,\" Kelsey said, taking the package. \"I'm lockin' it up. Nobody sees it until tonight.\"",
        "It was short notice, with nightfall only a few hours away, so Kelsey called Margie. She'd heard Margie toot her car horn driving past the house less than an hour ago, so she was pretty sure she was home.\n\n\"Hi, Honey,\" Kelsey said into the phone. \"You and Ryan wanna come over tonight? Charity's got a surprise she wants to show everybody.\"\n\n\"Oh, Kel, we would, but Alicia and Joey are coming for dinner. I already have half the food made.\"\n\n\"That's cool. Bring 'em with you, after you guys eat. You'll wanna see this. It's good.\"\n\n\"Oh. Well, yeah, we can do that if you want. You sure you want to entertain all of us on short notice?\"\n\n\"Absolutely, Honey! We'll be lookin' for 'ya.\"\n\n\u2014\n\n\"Jesus!\" Joey said quietly. \"That's what high definition was meant for!\"\n\n\"Fuck, Char, you look wicked,\" Kelsey said. \"I've never seen a pussy look so fuckin' good. It sucks you can't put this on Tucker's website. You'd be a star, Honey.\"\n\nCharity smiled shyly as she sat on the couch in her bra and panties, beaming with pride. She put some more popcorn in her mouth, but she barely knew she was doing it. Watching herself doing wanton, triple X-rated things on the laptop monitor was surreal, especially since there was a small crowd gathered around, watching it with her.\n\nEveryone watched intently, in various states of dress and undress, sipping drinks and munching popcorn as Jamar worked his way through all his porn star moves, taking Charity on the ride of her life.\n\n\"We need a big screen TV,\" Kelsey said. \"We could all pool our money.\"\n\nNobody answered her. They were focused on the way Charity looked, her cute, elementary school teacher face radiating bliss from deep inside as Jamar's massive cock pistoned up into her at a hundred miles an hour.\n\nPopcorn being chewed was the only sound in the room when Charity screamed through the little laptop speaker, wildly orgasmic on Jamar's long tongue as she tried to keep his slippery cock in her mouth during a writhing, red-hot sixty-nine.\n\n\"Jesus!\" Joey muttered again, when Charity rode Jamar's long length to a stuttering, garbled meltdown.\n\n\"She had so many orgasms, you guys,\" Kelsey said. \n\nCharity giggled. Her eyes were wide as she watched herself being pummeled again from behind by Jamar's long, quick, powerful thrusts.\n\n\"Joey, you remember how tight she is?\" Kelsey asked. \"Fuck her right here on the rug, while we all watch.\"\n\nJoey looked at Alicia. She didn't object, and he silently thanked God that she was the one he married.\n\n\"Charity?\" he said, his eyes doing most of the asking.\n\n\"I guess,\" she said. She was so horny her panties were damp with wetness.\n\n\"Do her doggie like Jamar is,\" Kelsey said. \"I'll back it up so we can watch both at the same time.\"\n\nJoey flung off his shirt and took off his pants like they were on fire.\n\n\"Christ, Joe!\" Alicia said. \"Act like a teenager why don't ya!\"\n\nJoey looked a little embarrassed, but he was ready and didn't want to waste any time.\n\nCharity was excited and giggley when Joey reached for her hand. he led her to the middle of the rug and kissed her, his rigid cock pressed hard against her belly. His hands caressed her back and slid down to her satin covered ass. He felt the dampness.\n\n\"On your knees, Baby,\" he breathed in her ear. \"Oh my God, I gotta see that pussy again.\"\n\nCharity giggled again. She thought back to the party at the house when she'd first met Joey, fucking him like a slut just a few minutes after he'd arrived, right there by the front door.\n\n\"My pussy?\" she teased. \"You wanna see my pussy?\"\n\nHer hands were behind her back, unhooking her bra. Joey dropped to his knees and slid her panties down her legs. She stepped out of them just as Joey's mouth made contact with her crotch, lapping up the glistening wetness of her softest spot.\n\n\"Fuck!\" Charity sighed.\n\nJoey pulled her down, onto her hands and knees. He pushed her legs apart. He nestled between them on his knees and pressed his fat cock into her squishy heat. Kelsey turned up the volume on the laptop, but it couldn't compete with Charity in the flesh...\n\n\"Fuck me!...Ohhh, God yeah!...Fuck me!\"\n\nThe gathering of friends watched in awe. Kelsey's world was rockin' again. "
    ],
    "authorname": "riverboy",
    "tags": [
        "porn",
        "making porn",
        "party",
        "interracial",
        "jamaican",
        "black cock",
        "porn star"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/kelseys-world-ch-28"
}