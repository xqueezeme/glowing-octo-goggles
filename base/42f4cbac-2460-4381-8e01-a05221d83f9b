{
    "title": "Naughty and Nice Ch. 04",
    "pages": [
        "\"Remember Amanda's party when we more or less announced our relationship?\" Lauren looked at me with a mischievous smile.\n\n\"How could I forget?\"\n\n\"What you might not remember is that Amanda said she'd be 'watching us two.' Then I kind of replied 'Yes, you will.'\"\n\n\"I think I remember. You said that would be a good hint for a wicked girl like Amanda.\"\n\n\"Nice memory. And Amanda remembers too. In fact, she joked about it last week, saying something like she supposed to be watching our behavior, but she knows she's missing all the naughty moments.\"\n\n\"Ain't that the truth.\"\n\nLauren laughed. Then she looked down. \"If you wanted, we could let her see a little deeper into our relationship.\"\n\nSuddenly, my cock got hot and pushed into my pants. \"What do you have in mind?\"\n\n\"Amanda is always the instigator in our friendship. I thought that maybe we could turn the tables a bit and mess with her mind. Would you think it's too crazy if we asked her to watch us fool around?\"\n\n\"You mean like full-on sex?\"\n\n\"Maybe even more. I don't know why, but I've got an itch to show her how you satisfy my private weakness.\"\n\nI think a spurt of pre-cum bubble out of my cock. \"You mean...?\"\n\n\"Bryan, you know what I mean. Think you could handle that?\"\n\n\"You want me making love to your ass while Amanda watches?\"\n\n\"By George, I think he's got it!\"\n\nWe both laughed, but Lauren's little joke also gave me some time to wrap my head around what she was saying. Based on some of the crazy hot things my naughty girlfriend had already initiated, I figured she was serious.\n\n\"Lauren, I think you've got my number as far as our relationship. If it means I get my hands on your hot little body, I'll do about anything.\"\n\nLauren smiled. \"That's why I love you.\" Then she spun into my lap. \"Why don't we rehearse our performance?\"\n\nLater, after we had showered, I took Lauren into my arms. \"I'm willing to rehearse as much as we need.\"\n\n\"I figured that, you horn-dog. But I think we have it down. I'm inviting Amanda over for dinner and a show this weekend. And I'm going to ask her to spend the night. I bet she won't be able to drive, she'll be so horny.\"\n\nThe next evening, Lauren came over again. \"I like to ask my questions personally. Amanda and I talked, and she is definitely in. I didn't give her all the details--just a hint that we would be extra naughty. She said she didn't know if she could watch without playing with herself. I trust you're okay with that?\"\n\n\"I may blow it if I look over and see that.\"\n\nLauren laughed. \"That's okay. I know you have more in you. Especially with another girl in the room. So don't worry about it.\"\n\nLauren and I planned a good meal for Amanda, and we started preparing Saturday early afternoon. We finished chopping up some ingredients, and Lauren got them stored in the fridge. She came into my arms.\n\n\"Bryan.\"\n\n\"Yes, Lauren?\"\n\n\"I wanted to set some expectations for the evening.\"\n\n\"I'm all ears.\"\n\nLauren looked deep into my eyes and spoke clearly. \"You may be planning to take things cautiously tonight. Don't. Make love to me like you would if we were alone. Don't hold back.\"\n\nI cupped her ass and gave her a deep kiss. \"Message received.\"\n\n\"Now it's time for me to prepare, Bryan. I have some very thorough washing to do. So I will be as squeaky clean as I've ever been. Get the hint?\"\n\n\"Hint taken.\"\n\n\"Good. Come over about 5:30 to get ready for Amanda at 6?\"\n\n\"Got it.\"\n\nI cleaned up and presented myself at Lauren's door at 5:30. I had already brought the wine and flowers earlier, so I walked over with nothing but anticipation.\n\n\"Wow, it smells great!\" I remarked as I kissed Lauren and walked in..\n\n\"Thank you, Bryan. Beef burgundy is Amanda's favorite. This will be a night to remember for her.\"\n\n\"For all of us.\"\n\nLauren laughed. \"Well said.\"\n\nWe got things ready and treated Amanda to her favorite dinner. We all enjoyed the evening, and the anticipation added spice to our conversation. We cleared the plates and sat back down with the rest of our wine.\n\n\"Shall we transition to part two of the evening?\" Lauren asked.\n\n\"If it's as good as part one, I'm in for a treat,\" Amanda offered.\n\nLauren laughed, then looked down to gather her thoughts. Then she looked up again.\n\n\"Amanda, you always tell me that you suspect I have an extensive naughty side. It took Bryan's little speech on the subject to start opening that up. I had my eye on him, but I decided to move things along when he said he wanted women a little--or a lot--naughty, and he would respect their privacy because he didn't want them to suppress their desires out of fear. We started dating, and I learned I could trust him. I started to open up, and he responded very positively. Since then, we've been taking each other on some amazing journeys, and I've been sharing more and more of my secrets. Bryan is more than I could have imagined.\"\n\n\"Nice to know that my intuition was correct, and that the two of you fit so well together. And Bryan, how has this been working for you?\"\n\n\"Never, in a thousand years, would I have thought that I could meet someone like Lauren. She's smart, friendly, accomplished, and beautiful, but she's also a sexual goddess. She brings out parts of me that I didn't know existed. I'm the luckiest guy in the world.\"\n\n\"Yes you are. I can tell that there's something deeply sexual going on between the two of you. You put out an aura that just screams 'major backstory here.'\"\n\nLauren laughed. \"If you only knew. However, I'd like to share a little of that backstory tonight. Amanda, I trust that you'll be okay with a little naughty behavior?\"\n\n\"Lauren, you know that I've confessed that passion rubs off on me. And that I've wanted to watch a couple make love. So for both of you, know that I want this. If there's passion, I'm good with anything. And Bryan, I know Lauren told you I'm going to get off on this. So don't be surprised if my hands wander and some clothing moves out of place.\"\n\nI laughed. \"That is certainly no problem.\"\n\nBoth ladies laughed with me. Then Amanda added, \"I'll confess a secret, since you've been confessing some of yours. I love to masturbate, and I've thought about you two a few times when I've been getting myself off. My pussy will be rubbed raw in the morning from reliving this all night. So please, let loose and don't worry about me. I will be in a very good place.\"\n\n\"Why you naughty little thing!\" Lauren exclaimed. \"That's going to make me even hotter than I already am. Let's move to the bedroom and get started before I melt down.\"\n\nWe followed Amanda in, who exclaimed how inviting the room was.\n\n\"Thank you, and please make yourself comfortable,\" Lauren replied.\n\nI had helped Laurent set up the bedroom for the evening, so I was prepared for the bed already turned down, the lighting to be good, the candles to be romantic, and Amanda's chair to be strategically placed for a good view. There were also bottles of water on the nightstand as well as on a small table beside Amada's chair.\n\nBut I also noticed a small bag of very fine cloth sitting on the nightstand next to a rolled up towel of plush cotton. A companion towel lay rolled up on Amada's table. Lauren must have made some additional private preparations for the evening. She saw that I noticed and whispered. \"Might as well have everything convenient.\"\n\nI squeezed her ass, and she giggled in reply.\n\nAmanda sat down in her chair and crossed her legs.\n\n\"Thank you for the ringside view,\" she said.\n\n\"You're welcome, and please let us know if we should adjust our position to give you a better angle.\"\n\nAmanda laughed. \"I think all of the angles are going to be good.\"\n\nLauren turned to me and moved close. She took my hands and put them around her, and I bent down to kiss her. We stood at the end of the bed where Amanda could see both of us.\n\nWhen my lips touched Lauren's, I felt the heat and passion burst out. Wow. She was hot to trot. Any nervousness I had melted away in the face of that heat. I responded, and Lauren climbed even higher knowing that I was with her. My hands roamed her back, then they cupped her ass. Lauren moaned loud enough for Amanda to easily hear.\n\nMy hands roamed possessively over Lauren's body. At the same time, her lips possessed mine, and at a deeper level, she possessed this moment. She had set the situation up, and she had told me how to act. In the heightened sense of passion coiling through my brain, some thoughts snapped together in a new way. My submissive little girlfriend had been directing a lot of our relationship. I was lead actor in the scenes, but she was writing the script. And it was a damn fine one, too.\n\nI chuckled to myself as I realized what I had gotten myself into. Lauren pulled back and looked up, a question in her eyes.\n\n\"It suddenly hit me how often I get in these crazy hot situations with you. And how you instigate every single one, and you egg me on to boot.\"\n\nI saw a couple of gears click, and Lauren's eyes widened in recognition. A blush crept up her neck.\n\nAmanda piped up. \"I told you that Lauren was a thoroughly wicked girl that kept it carefully hidden. Now you're figuring out what it's going to be like.\"\n\nI smiled back at Lauren. \"I wouldn't want to be anywhere else.\" I leaned in and kissed her again, and I could feel another layer of passion in her lips. I had discovered something about the two of us that was always there, but not recognized. She was thanking me for discovering, and accepting, who she could be.\n\nWe made out for a while, neither in a hurry to break the spell. But I could feel us both heating up, so I made a move, bringing a hand up to cup Lauren's breast. I heard a sigh from Amanda's direction, and it hit me that this was probably the first sexual thing she had seen with her own eyes. People kiss and caress all the time, but they don't typically go further in public. Lauren's body tingled in my hands as similar thoughts went through her fevered mind.\n\nWith the sexual ice broken, I reached down to the hem of Lauren's dress. She hummed approval, so I lifted it up, and she raised her arms to help me. The lifting material revealed Lauren's sheer white bra, her excited nipples clearly visible in the material. Lauren unbuttoned my shirt and lifted it off, then she reached around to unhook her bra. I helped her pull the material away, and then she moved in for another kiss. I pulled her close and rasped my chest across her hard nipples, feeling her groan into my mouth. Lauren always loved that feeling, and I gave her a long time to enjoy it while we loved each other with our lips.\n\nThen it was time to move things along. I gently twisted her waist, and she took the hint, turning in my arms while her breath caught to display herself to Amanda. I nuzzled her neck, and she turned to find my lips again. My hands cupped her breasts, and I gave Amanda an intimate view of how Lauren liked her nipples pleasured.\n\nAfter a suitable period of hotting her up, Lauren surprised me by breaking the kiss and looking directly at Amanda. I raised my eyes and did the same. I jolted to see Amanda's hooded eyes deep into the lust zone. She had crossed her legs, and one hand absently drifted along her upper thigh. I knew where that hand wanted to go.\n\nThe same conclusions must have occured to Lauren, because she reached up and unbuttoned her jeans herself. Wow. I expected her to want my leading this, but she felt comfortable enough to bare herself to her friend. I knelt to help her, and I peeled the tight denim over her hips and then worked the jeans off while she held my shoulder for balance.\n\nI played with Lauren's chest a little longer, then I dropped my hands to cup her ass and tease around her panties. She moaned, but he also took my fingers and hooked them inside the waistband.\n\nReally? I thought to myself. She wants to be naked while I keep my pants on?\n\nI took the hint and started easing the material down, but kept it slow in case I missed the idea.\n\n\"Mm-hmm,\" Lauren sighed,\n\nWith that affirmation, my hands confidently slid under the material, and I started sliding it down. Amanda cocked an eyebrow, and I saw some messages flash in her eyes. I kneeled again to get the panties off, and Lauren's excitement washed over my nose. I rose behind her and cupped her breasts again. They rode tight in my hands, and I could feel Lauren's excitement come off her skin like smoke. I looked up at Amanda while she studied her friend with frank intent.\n\nAfter a suitable period of feeling Lauren up, I twisted her in my arms again. She winked and moved in for a long kiss while my hands descended to show Amanda how I played with her friend's ass. I started gentle and moved to more vigorous caresses and squeezes. Lauren gave her friend a good soundtrack, sighing and moaning to show she was loving this.\n\nFinally, I felt her hands move to my belt, and she unbuckled it, then moved to work my fly loose. Kneeling, she got my pants off then reached for my boxers. When my erection sprung free, Amanda uttered \"Nice,\" and Lauren giggled. She got the boxers off, then kissed up my leg, around my balls, then out along my cock. When she got to the head, she took it inside, then popped off with a snack of her lips.\n\n\"Get there a little later,\" she announced while she kissed her way back up to my lips. We made out a while longer, then I guided her back to the bed. I laid her down near Amanda's chair, then I kissed my way down Lauren's jawline and on to her upper chest. After a little teasing, my lips ranged along the slope of her breast. Finally, I captured her nipple in my lips. Lauren arched her back and cradled my head while I pleasured the hard nub, then I ranged over to the other. I could feel her hips start humping the air, and I knew I had her where I wanted her.\n\nI began my long, tortuous journey down Lauren's body. She knew I was teasing her, but she patiently endured my attack, continuing to stroke my hair while I kissed and nibbled down her sides and abdomen.\n\n\"Damn, girl, does he always tease you like this?\" Amanda's amused voice drifted over us.\n\n\"I think he's showing off,\" came the exasperated reply. I chuckled and continued my exploration. I worked over her upper legs, then finally, slowly, zeroed in on her burning pussy lips.\n\nAfter teasing the poor girl long enough, I turned to pleasuring, licking outside for a bit and then lapping up Lauren's center. She moaned, and Amanda rustled in her seat. I played with Lauren's inner lips for a while then moved to circling the hood of her clit.\n\n\"Yesssss,\" Lauren responded. I kept up the action until I felt Lauren shift and push her pussy into my tongue. With this signal, I started writing the alphabet directly on the exposed knob of her clit. Lauren's legs grew tense, and her breath got rapid.\n\n\"OK, the teasing was worth it. You look pretty happy, girl.\" Amanda's voice had lost the edge and replaced that with admiration.\n\n\"Oh, yeah,\" Lauren managed to get out, and both ladies laughed. Those were the last words out of Lauren for a while. Her tensed, and tensed some more, then she bucked into my face with a long, keening moan. Her pussy spasmed against my lips, and she writhed around me, releasing the tension from every muscle in her body. I flattened my tongue to let her ride her orgasm out just the way she liked, and she rode out a long one.\n\nEventually, she sagged back into the bed, spent.\n\n\"Oh, God, Bryan, that was wonderful.\" I soothed her pussy while she recovered, then she tugged me up, and we made out while Amanda squirmed beside us. I felt a tug on my hips, and I twisted under Lauren while she straddled me, rubbing her pussy along the underside of my rampant cock. We kissed some more, then she raised herself and used her hands to shake out her hair. This thrust her chest out, and it hit me that she wanted Amanda to see her nipples getting hard again. Lauren lightly stroked my erection, and then lifted herself to place me at her burning pussy lips. She slowly sank down, letting Amanda see my cock part her lips and push inside. We both groaned, and Lauren didn't stop her slow descent until her ass was flattened on my hips.\n\nLauren placed her hands on my pecs and used them as anchors so she could drive me into all of her hidden recesses. She looked deep into my eyes, telling me to enjoy the love she was giving me.\n\n\"You two look beautiful,\" Amanda said. Then she giggled. \"And hot, too.\" That's when we heard some more rustling, and I was sure that one of Amanda's hands had wandered inside her panties.\n\nLauren winked, then slinked a hand between her legs. Amanda gasped. I'm sure she didn't expect that.\n\n\"Damn, girl, you need to stop holding back.\"\n\nWe all laughed at that one, then Lauren started working her clit. I could feel her fingers dance over my shaft while she frigged herself. The eroticism of the moment triggered my body to start its journey to orgasm. Lauren saw the change, and her fingers sped up as she moved with me. We could both hear the sounds of Amanda's fingers rubbing under her clothes, and a sense of heat flowed through me to share this with her.\n\nI reached up to play with Lauren's breasts, and she arched her back to push them into my hands. Her nipples jutted out, snapping under my rasps. Her pussy gripped my cock in a fiery embrace, stimulating every nerve ending from tip to base. Her hips writhed over mine, continuing to drive my cock into every hidden place inside her. Lauren was just so damn sexy, her natural instincts honed for lovemaking.\n\nWe drove each other higher and higher. Lauren's fingers sped to a blur, flinging little droplets from her drenched folds. Amanda moaned, caught up in Lauren's eroticism just as I was. I clamped down on the pressure building inside, then I twisted Lauren's nipples just the way she liked before a big orgasm. Her breath stopped, her back bowed in tension, then she exploded, arching her back, whipping her hair over her head, and crying out. I watched as long as I could, then screwed my eyes shut while a convulsion swept through me. My back bowed off the bed, driving my cock deep into Lauren while I shot ropes of cum into her spasming pussy. Some sort of hoarse grunts escaped my throat, but it was hard to know with my brain on overload.\n\nWhen I could think again, I opened my eyes to find Lauren's very satisfied pair looking into mine. We gazed for a while, then she lowered herself and pressed her lips to mine for a long, languorous makeout session. My body felt really good, and her lips expressed the same feeling. She pulled back again, and her eyes asked Ready? I nodded, and she lifted her hips while I gently eased out of her. She turned over on her back and cuddled beside me.\n\n\"Wow, that was fantastic. We need to do that more often,\" she said to the ceiling.\n\nAmanda and I laughed.\n\n\"I don't think Bryan's going to argue with you, missy,\" Amanda offered. I felt Lauren chuckle beside me.\n\n\"Was the show good for you?\" Lauren asked.\n\n\"Yummy. I had a great orgasm watching. You were a hot little thing riding Bryan. Nice to see him letting you take charge.\"\n\n\"I'm a lucky girl, Amanda. Bryan lets me play in any position. I figure we'd take a short break to recover, then we'll show you another one.\"\n\n\"Bryan's got a second round in him?\"\n\n\"Always.\"\n\n\"Damn, Lauren. That's just unfair. Can I borrow him sometime?\"\n\nLauren laughed. \"I know how lucky I am. My job is to keep Bryan so happy that he can't think about other girls. Plus, he likes the naughty ones, and that definitely fits me.\"\n\n\"I remember telling Bryan that a big naughty streak ran in you.\"\n\n\"I think he's figuring that out.\"\n\n\"Oh, yeah,\" I answered. Both ladies laughed.\n\n\"Let's take a refreshment break and then see what other trouble we can get into. I'll get us some hot washcloths to clean up.\" Lauren got up and went into the bathroom, still comfortable in her nudity around Amanda. She came back with two, and even got Amanda to blush a bit when she gave her one.",
        "\"Guessing I needed one too?\"\n\n\"Mm-hmm. Fingers and...other places.\"\n\n\"And maybe it's time to get these silly clothes off?\"\n\n\"They do tend to get in the way.\"\n\n\"Lauren, here you are the instigator again.\"\n\nLauren just laughed and came over to me. I could hear Amanda taking off her clothes and draping the towel over her chair, but my attention was on Lauren's hands gently cleaning our combined fluids from my cock. Then she handed me the cloth, and I gently cleaned the creampie leaking from her pussy.\n\nLauren reached over and found the water, and we drained a bottle each. Then she turned to Amanda.\n\n\"Ready for round two?\"\n\n\"No clothing in the way this time.\" I looked over, and my cock jumped to see Amanda completely naked. I knew she had a tight body from volleyball, but it really showed now. Her breasts sat proud on her chest, and her nipples were perked up from the visual\u2014and other\u2014stimulation that was going on. She sat with her legs casually crossed, but I figured that would change when her fingers got busy.\n\n\"She looks good, doesn't she?\" Lauren asked.\n\n\"Really good.\"\n\n\"Might have to let you get kinky with me to get your attention back.\"\n\n\"That would probably work, yes.\"\n\nLauren laughed. She reached over and placed the cloth bag beside us. \"Supplies are inside when you need them.\"\n\nThen she got up on her knees facing Amanda. I knew what she wanted, so I came in behind her, snuggling close and kissing her neck.\n\n\"Mmmn, I definitely want more of that. And before we get carried away, I want to give you permission to look, Bryan. I know I will.\"\n\n\"Thanks, babe.\" I reached around to cup her breasts while she turned her head for a searching kiss. Our lips connected with passion, and her breasts rode pebbled and tight in my hands. I rasped my palms over the hard points of her nipples, and she moaned into my lips. Her hips shifted, and she lined my cock up with the cleft of her ass and started grinding into me.\n\nWe jotted each other up for a while, then I released her lips to give her neck a rest. She lolled her head while I kissed her neck, then I worked on her ears. Excited sighs urged me on. I trailed down to the base of her neck again, and she dropped her head forward and pulled her hair out of the way to give me access. She leaned forward, and I took the hint, trailing kisses across her upper back. Lauren leaned further, and I went lower between her shoulder blades.\n\nLauren pulled in a deep breath, then she sighed In some sort of decision. She shuffled her legs, turning slightly away from Amanda. I shifted with her and got an affirmative hum. She turned some more, and my pulse jumped to realize that she was angling to give Amanda a better view for what she had planned. She got where she wanted, then she leaned her head back for another makeout session.\n\nFinally, she tilted her head forward again, and I kissed down her back while she lowered herself. I had to pull away from her hips to keep going, and she then dropped all the way to her forearms. She shifted her legs apart while I kissed her hips, and it hit me that she was displaying all of her charms to Amanda.\n\nSome rustling behind me indicated that Lauren's seduction was affecting Amanda, too. I kissed the globes of Lauren's ass, and she shuddered in pleasure. I ventured inward, and Lauren answered with a clear Mm-hmm. She definitely wanted Amanda to know who was directing this.\n\nI took my hands and caressed Lauren's ass while I slowly zeroed in. When I brushed her pucker, she shuddered and moaned.\n\n\"Oh, my God!\" Amanda exclaimed.\n\nI gave Lauren a thorough warm-up, mixing kisses and licks around her pucker while Amanda squirmed behind me. Lauren arched her back and let me have my way with her. On an impulse, I reached between her legs and lightly brushed a finger through her folds, finding her pussy hot, swollen, and dripping with lust.\n\n\"I am so hotted up,\" Lauren said. Then she lifted back up and handed me the small bag. \"I thought you could lie down and I would hot you up while you got me ready. Sound good?\"\n\n\"Perfect.\"\n\n\"Everything good over there, Amanda?\"\n\nWe looked over to see Amanda cupping a breast and running her other hand along her thighs.\n\n\"You've definitely got me hotted up, Lauren.\"\n\nWe both laughed, and Lauren pointed me down. I did as she said, and she swung over me, once again giving Amanda an intimate view of the treasures between her legs. My attention jumped south when I felt the warmth of her mouth engulf my cock. I got busy and pulled a bottle of lube out of the bag, coated a finger, and started lubricating and relaxing the ring of muscle around her anus. Some more lube, and I slowly pushed inside to a hum of approval from Lauren.\n\nLauren pleasured my cock expertly, not going too fast. I knew she was working to get me slate hard just when her ass was ready. She had relaxed around my single finger, so I withdrew, coated another, and slowly worked them inside. Once again, Lauren just relaxed herself and my fingers slid in easily. I gently twisted them around, opening her up completely. Lauren plunged down, putting a vacuum on my cock, and I got rock hard in her mouth.\n\nShe popped off and reached back for the lube. I gave it to her, and she lubed me up herself, twisting her fingers around my length and adding more for good measure.\n\n\"I'm ready. I need you badly,\" she said. She let me withdraw my fingers, then she settled on the bed beside me. Amanda gasped when Lauren spread her legs, lifted her feet in the air, and arched her back to hike her ass. Lauren was going to show Amanda everything: my cock penetrating her upturned ass and her busy fingers strumming her exposed and inflamed pussy.\n\nI got myself in position over her while her hand squirmed between her legs. I\n\nlined up my cock with her anus and gently pushed forward. Lauren hiked herself back to encourage me. The rings of her ass opened up, and the head of my cock slipped inside.\n\n\"Oh yeah, keep going,\" Lauren insisted, so I did, slowly pushing inside until I my hips were pressed against the cheeks of her ass. Her fingers brushed up against my cock, and I jolted to know that she was already playing with her pussy. I pulled back and gently pushed forward to a throaty moan from below. With a few more passes, I could tell that Lauren was deeply relaxed.\n\nI started a slow but firm rhythm, putting some weight into Lauren's ass each time I bottomed out. I knew she liked the deep penetration, and I figured she wanted to share that desire with Amanda as well.\n\nSoon, Lauren's hips bucked back at me. This was her signal to pick up the pace, so I did, heading her instructions not to hold back. She grunted and kept going, just pushing back and working her pussy. Then she shocked me.\n\n\"Give it to me, baby. Fuck my ass!\"\n\nA hot wave rolled through me. I mean, I knew that Lauren was passionate. But damn, here was my girlfriend confessing everything to her closest friend. So I gave her what she wanted and drove my cock hard and fast into her molten ass. Our hips slapped together while Lauren's fingers danced over her quivering pussy.\n\nI saw Lauren look back at Amanda and mouth Oh, fuck! I took a look myself and jolted to see Amanda's legs spread over the arms of the chair, one set of fingers pushing into her swollen, dripping sex and the other set dancing over her clit. That was just too fucking hot, but then so was the lust-bomb of a girlfriend under me.\n\nI felt Lauren tense up, and I drove into her again and again at the same time that I squeezed back on my own explosion. We both existed in that timeless place before orgasm. Icy hot tingles raced through my muscles, and my cock burned with sexual heat. I hung on the edge, and then a white-hot wave crashed through me. I cried out, and it joined another animal cry below me. Cum surged up my cock, struggled past Lauren's clamping ass, and sprayed deep into her bowels. Each shot was an explosion of pure pleasure.\n\nSomewhere in the haze I heard Amanda cry out, and I turned to see her head thrown back and her body convulsing. That sent another erotic wave rolling through me, and my cock kept spurting. I had never cum for so long.\n\nFinally, the spasms died out, and Lauren's body relaxed under me and sank into the sheets. I followed her down and met her lips when she turned her head for a kiss. We reconnected after the fiery passion of before, but Lauren still pressed her hips into mine, keeping my cock nestled securely inside her. When she relaxed again, I nuzzled her neck, feeling her body purr under me. I knew how erotic the afterglow was for her, especially for her sensitive ass.\n\nI gave her the full treatment until she took a deep breath and let out a sigh.\n\n\"I think I'm ready.\"\n\nI kissed her neck and gently pulled out of her. We both jumped slightly when her sphincter closed around the head of my cock, but soon I eased beside her and she rolled back into me, pressing her ass into my hips and pulling my hand to her breast. Lauren liked me cuddling her body, and apparently she wanted to share that too with Amanda. It also gave her an easy view of her friend, and we both looked.\n\nAmanda remained splayed open on the chair, one hand tracing along her pussy while another brushed a breast. She gave a little wave, and we all laughed.\n\n\"Damn, girl, you think you know someone. I had you pegged for a naughty little thing, but I never knew how passionate you could be. That show could melt the sheets on the bed. And you, Bryan, you bring out the best in her. If either of you ever want to break up, I'm calling the psychiatric ward.\"\n\nShe continued. \"And what the hell was that show, Lauren? There's not a corner of your body that I don't know everything about. I could almost feel that cock ramming your ass and those fingers dancing over your clit. You really put yourself out there.\"\n\n\"I just wanted to share that with you, Amanda, and not have you miss anything. Also, it kind of turned me on.\"\n\n\"You think?\"\n\nWe all laughed.\n\n\"Anyway, Amanda, thanks for playing along tonight. You helped me fulfill a fantasy, and it was easy to let loose in front of you when you showed a little skin yourself.\"\n\n\"Happy to help my dirty little friend fulfill her fantasies. And it fulfilled one of mine as well. Way better than any video I've seen. You guys could make a living performing.\"\n\n\"What do you think, Bryan?\" Lauren's amused voice said in front of me.\n\n\"I'm not ready for the life of glamour and the paparazzi.\"\n\nBoth ladies cracked up. \"I guess that puts a stake in that dream,\" Lauren said. \"We'll have to satisfy our adoring fans with private shows.\"\n\n\"Count me in if you ever want to do something like that again. My little pussy got a much-needed workout this evening. I need to find a guy like Bryan for some personal training on a regular basis. His sessions are really working for you, Lauren. You have that happy and well-sexed glow about you.\"\n\nLauren snuggled into me. \"Bryan does know exactly how to keep my body purring.\"\n\n\"And you, Bryan?\"\n\n\"Lauren is a love-goddess, Amanda. I know how lucky I am. But she's more than just a perfect playmate. She has also captured my heart.\"\n\nLauren shivered in my embrace, and I felt goose bumps break out on her skin. Her body snuggled back again.\n\n\"You've got your girlfriend glowing in your arms, Bryan. I think it's time to go to bed and let you two share some private moments.\"\n\nAmanda gathered her things, and Lauren got up to see her to her room. There were some whispers, and what sounded like a long hug and kiss. I guess it didn't bother them that they were both still naked.\n\nBut that thought was erased when Lauren came back in the room, closed the door, rolled me on my back, and straddled my hips. Her shining eyes looked into mine.\n\n\"Tell me again about that 'captured your heart' part, slowly, and in excruciating detail.\"\n\nSo I did.\n\n**** The End ****\n\nAs authors, one of the greatest rewards is getting comments on our work--it's what drives us to write more. How did this story make you feel? What does it make you think of? How did it affect you? Please take a moment to vote and offer comments, or click the link to send me personal feedback\u2014I'll even respond! It means a lot."
    ],
    "authorname": "Antonio_y_Cleopatra",
    "tags": [
        "exhibitionism",
        "friends",
        "playful",
        "romance",
        "watching"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/naughty-and-nice-ch-04"
}