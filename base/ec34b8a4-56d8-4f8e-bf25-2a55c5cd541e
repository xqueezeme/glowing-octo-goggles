{
    "title": "Fantasy Man Pt. 03",
    "pages": [
        "\"Corbin. Corbin, Corbin, Corbin,\" Sam said, pointing with a corner of his pizza crust. \"She's coming over.\"\n\nCorbin and his roommate sat together in the cafeteria amid a sea of other students. Sam's plates were piled high with everything good and right in the world - mostly carbs and sweet, sweet sugar. Corbin poked at a pile of vegetables in front of him, looking for any remains of the chopped chicken he added to it. Sadly, there did not seem to be any left, and he would have to start in on the actual greenery.\n\nBut Jessica Nakamura, his sex sensei, his love guru, and perhaps most bizarre of all, his friend, made for a great distraction. Her jeans shouted an ode to joy every time they moved with her slim frame. Her red long-sleeved top plunged low, with a saucy choker-like strand of fabric across the base of her neck, connecting the two shoulders of the top. A whole lot of eyes fixated on her, and she gave Corbin a knowing smile as she swooped in close.\n\n\"This will really get them talking,\" she murmured as she sat down right next to him.\n\n\"No kidding,\" Corbin said.\n\nLooking down at her French dip, she added out of the corner of her mouth, \"Wrap an arm around my shoulders, then lean in and give me a kiss on the cheek.\"\n\nCorbin did, barely able to contain his laughter as a couple guys at the next table visibly groaned. Sam's fork clattered on his platter and he gaped at the pair of them. Jessica glanced at him as Corbin let go of the hug.\n\n\"I didn't catch your name.\"\n\n\"It's, um... Sam? Sam. Sam. Hi. I'm Sam.\"\n\n\"Hi, Sam,\" she said. \"I'm Jessica.\"\n\n\"Nakamura. I know,\" he whimpered. \"Should I... I should go again, shouldn't I?\"\n\n\"Why?\" Jessica and Corbin asked as one. She gestured at his platter and two plates. \"Sit. Eat. I'm going to be coming around a lot so you'll have to get used to me eventually.\"\n\n\"Coming around a lot?\" Sam asked. \"Okay.\"\n\n\"Thought you wouldn't mind,\" Jessica said, stealing a baby carrot from Corbin and crunching the tip between her front teeth. Sam looked like he might faint.\n\nCorbin said, \"So... is it cliched if I ask you if you come here often?\"\n\nJessica poked him with the remaining two-thirds of the carrot. \"Dork. I do, actually. I used to keep more food at home, but I was rushing back between classes. It made more sense to eat here. Besides, I have a small scholarship that pays for it.\" She took a bite of her small side salad, swallowed, and asked, \"So Sam, where are you from?\"\n\n\"Shawney. My mom manages a grocery store and my dad drives a taxi.\" Sam hesitated. \"I guess you didn't ask for my whole life story, huh?\"\n\nJessica's eyes twinkled. \"No, but that's great. I love Shawney.\"\n\n\"You've been there?\"\n\n\"Mm hm,\" she said around a bite of her sandwich. When she swallowed, she said, \"I had a job nannying up there for a month. Really nice town. I like the ice cream place, um, Norbert's?\"\n\nSam lit up. \"Norbert's is great! Oh wow, you really have been there.\"\n\nCorbin said, \"You know, I don't think you and I ever talked about where you're from, Jessica.\"\n\n\"We didn't, did we?\" she asked, amused. \"Kinda jumped straight into it.\" That made Sam's eyes go huge again, and he tore into his next slice of pizza watching them like he had a new favorite TV show. \"I'm from Norrell. Small college town, about four hours from here.\" She winked at Sam. \"And my mom works for the electric company and my dad's an inspector.\"\n\n\"Like a detective?\" Sam asked.\n\n\"With the city,\" she clarified, smiling. \"He makes sure buildings are up to code. That sort of thing. Your turn, Corbin.\"\n\n\"From Oleander, South Dakota,\" he said, \"my dad works at Best Buy, and my mom is an assistant principal.\"\n\n\"Oooh, she must have been hell on the rules,\" Jessica said.\n\n\"You have no idea,\" Corbin said.\n\nThey finished off their meals. Sam had to run back to the dorm, and said goodbye at least three times. Corbin shook his head when he left. \"I think you've got a new fan.\"\n\n\"Poor guy. Is he always that nervous?\"\n\n\"Oh yeah. During orientation, he was wearing a Sonic the Hedgehog shirt. This girl comes up to him and tells him she thinks it's awesome, and is he a fan, and what did he think about the last few games. Sam, he gets real nervous and all he can say is, 'Oh, you have nice socks.' She waited around another minute for him to say something else.\"\n\n\"Oh no,\" Jessica said.\n\n\"Yup. I felt terrible for both of them. We see her from time to time and they'll both walk a mile around each other.\"\n\nJessica grinned. \"So... what are you up to tonight?\"\n\n\"I've got it off. They need me to work the swim meet this weekend. Why?\"\n\nJessica leaned in and brushed her lips against his ear. Both of them were well aware how many people were watching, and Corbin blushed. \"Because I still need to give you a lesson in licking my pussy before you go after Brooke.\"\n\n\"So. Your place?\"\n\nJessica chuckled and kissed his cheek before pulling back. \"Yes. I have to babysit at seven. What time is your last class?\"\n\n\"It gets out at four.\"\n\n\"Perfect. I'll pick you up afterwards.\"\n\nCorbin looked sidelong at Jessica. \"About Brooke. Are we doing the right thing?\"\n\n\"What do you mean?\"\n\n\"We're kind of being predatory, aren't we? She just broke up with Kenny.\"\n\nJessica frowned. \"You know... you're not wrong.\"\n\n\"It was fun to imagine,\" Corbin said.\n\n\"Mm hm,\" Jessica said, but she had a far-off look to her. \"Well. I should get going. Let's do tonight anyways, okay?\"\n\n\"Looking forward to my first lesson,\" Corbin said. He winked.\n\n\"Don't wink.\" He did again, and Jessica poked his chest. \"See you tonight.\"\n\n* * *\n\nJessica and Brooke didn't share any classes, and with a full afternoon, it gave Jessica only a few minutes to call her friend in between. Otherwise, she might not have been irritated in the slightest when Shea Valli, one of her fellow psychology majors, called out her name after class.\n\nShea was just her type - tall, lean, and muscled in that way people who worked with their hands a lot could be, and he had a square-jawed, hard face that looked ten years older than he actually was. She crushed on him their freshman and sophomore years, but he was still involved with his high school sweetheart back then, and after that, she was lost in Lionel.\n\nAs she was digging through her purse, Shea caught up to her. \"Hey Jessica, got a minute?\"\n\n\"Oh, sure,\" Jessica said, grabbing her phone anyways. \"What's up? How are you?\"\n\n\"I'm good, but how are you? I've heard a lot of things.\" He said more quietly, \"Did Mr. Kilton really try to...?\"\n\n\"Yes. He did,\" Jessica said.\n\n\"Damn sorry. I'd kick his ass if he was still around. Heard you talked to the dean and the cops.\"\n\nJessica smiled tightly. \"Word really does get out.\"\n\n\"Aw, sorry. Honest, I'm just trying to find out if you're okay.\"\n\nShe softened a little at that. \"Yes. I talked to them this morning. Besides firing him, I don't know if they can do much. But he's gone from here, and that's okay for now. Shea, I'm sorry, I really need to make a phone call.\"\n\n\"Oh, sure. Hey, if you need anything, an escort to your car, someone to talk to, anything...\"\n\n\"I will let you know, thanks.\"\n\nJessica watched him walk away, admiring his butt in his jeans. He looked back just in time to catch her. Nothing for it, so she thumbed through her contacts and called Brooke.\n\nHer friend picked up. \"Hey Jess! How'd your meeting go?\"\n\n\"Urgh. We can talk about that later. I'm going to say something crazy, so hear me out.\"\n\n\"Okay,\" Brooke said, sounding cheerful. \"What's up?\"\n\nJessica took a deep breath and said, \"Want to help me teach Corbin how to, ah, go down?\"\n\n\"Go down?\"\n\n\"You know,\" Jessica murmured into the phone, looking all around.\n\nDead silence, then Brooke said, \"What?\"\n\n\"I'm on a mission. Remember when we were saying he would be fantastic in bed if the right woman taught him? Well... I decided to help him.\"\n\n\"No,\" Brooke said. \"Are you serious?\"\n\n\"Yes. I'm going to be, I don't know, his wingman. With benefits. It sounds so sleazy when I say it like that.\"\n\n\"You think?\" Brooke asked. \"What the hell, Jessica?\"\n\n\"He could be amazing. After he got out of the hospital, I helped him hit on a clerk at a department store. They had sex right there in the dressing rooms. It was ridiculously hot.\" Jessica waited for a pair of students to pass out of earshot, then said quieter, \"We're talking about him sleeping with a few other women on campus. I may have mentioned you thought he was cute. And I... I said I could help him be with you.\"\n\n\"Jesus...\"\n\n\"I know, I shouldn't have, but don't tell me you're not curious.\"\n\n\"You shouldn't have put a target on my back. That's really shitty.\"\n\n\"I know,\" Jessica said impatiently. \"It was a spur of the moment thing and it was totally my fault. But at lunch he told me he really didn't want to do anything to you because he thought, you know, because of what happened with Kenny, he might be taking advantage of you.\"\n\n\"God, he is the sweetest.\" Brooke sighed irritably. \"What are you planning?\"\n\n\"That depends on you. He was all over the place when he ate me out, but I think he can learn. Tell me you'll say yes. Because I have something really, really fun in mind for tonight and you're going to like it any way it goes.\"\n\nBrooke chewed it over, then said, \"What if one of the women he sleeps with, he hits it off with them? What if he hits it off with me?\"\n\nJessica stopped walking and did a tiny dance. \"Then you hit it off. I won't be jealous.\"\n\n\"And what if I want it to be a one-time thing?\"\n\n\"So far, he hasn't really shown me any signs he's super clingy.\"\n\n\"Jessica, you know someone's going to get hurt here. You or him, or someone you two take down.\"\n\n\"It's not really taking down-\"\n\n\"Yeah, it is. And it's really shitty and it's... kind of hot. I like the idea of training our own stud.\"\n\n\"Right?\" Jessica asked.\n\n\"But you know someone, somewhere down the line is going to have their heart crushed. And with everything you just went through with Lionel...\"\n\n\"Corbin's just a friend with benefits.\"\n\n\"Does he know that?\" Brooke asked.\n\n\"Yes,\" Jessica said.\n\nSofter, Brooke said, \"Do you?\"\n\nJessica thought about resting next to him in the hospital bed and brushing his then wild hair out of his eyes. With a mental shove, she pushed the picture away. \"Yes,\" she said firmly.\n\nBrooke sighed. \"Fine. But you owe me.\"\n\n\"You're in?\"\n\n\"Yes, I'm in. Where are we doing this?\"\n\n* * *\n\nCorbin wanted to run, not walk, out of Dr. Pamela Windsor's class, but he knew he owed her a proper apology for the previous week when he was so distracted by her good looks he failed to pay attention in class. That led to some embarrassment between both of them when she realized his dilemma after class. Not his best moment.\n\nWhen the class ended, he texted Jessica to tell her he'd just be a minute saying sorry to his professor and then he'd meet her in the parking lot. Dr. Windsor's eyes fell on him and the tiniest flicker of a smirk crossed her lips. He blushed, and waited for everyone else to clear out again.\n\n\"Another personal problem, Mr. Block?\" she asked, turning off her presentation for that day.\n\nHe chuckled and stood up. \"No. Not this time.\"\n\n\"So very glad you could contain yourself.\"\n\n\"I just wanted to say I'm sorry. That was... well, it was stupid and embarrassing.\"\n\n\"Correct on both counts. But thank you for the apology.\" She leaned against her desk. \"I understand from Dr. Angelo you had some trouble the other day with a couple students and the athletic director. Are you all right?\"\n\nDr. Angelo was Corbin's advisor, a jovial older man and the one who convinced him to apply to Agramonte, despite the distance from home. Corbin didn't bother correcting Dr. Windsor about Kenny's title. He nodded. \"I had to stay overnight at the hospital. They were worried about a concussion. But I was fine, so they let me go.\"\n\n\"Well, I'm very glad to have you back.\"\n\n\"Thanks. And I really do hope to make it up to you this year. I'm a better student than that. And I guess I'd like to think I'm a better man.\"\n\n\"Then I look forward to you proving it to me,\" Dr. Windsor said.\n\nA knock at the door. Corbin and Dr. Windsor both turned, and Corbin nearly choked. The same jeans still kissed Jessica's slim legs, but her new black off-the-shoulder top plunged down so far it was a small miracle it clung to her breasts.\n\n\"Dr. Windsor,\" Jessica said, smiling wide as she strode towards Corbin. \"It's good to see you.\"\n\n\"Jessica!\" Dr. Windsor exclaimed. \"How are you? Love the top, but it must be breezy.\"\n\nJessica laughed and roped an arm around Corbin's waist. \"It is, and I'm good. When Corbin told me whose class he came from, I had to pop up and say hello. How's your semester?\"\n\nStudents started to file in for Dr. Windsor's next class. She looked at them and smiled distractedly, then returned her attention to Jessica. \"Hectic but It always settles down somewhat in October. Are you doing okay?\"\n\n\"Yes. I take it you... heard?\"\n\n\"Sasha might have told me a thing or two, and the other faculty talks.\"\n\n\"Well, thanks to Corbin, I'm okay.\" Jessica leaned up and gave him a kiss on the cheek, holding it for a good long moment. \"Well, we should let you get to it.\"\n\n\"Big plans for the evening?\"\n\n\"Mm hm,\" Jessica said. She didn't elaborate any further, but Corbin couldn't help blushing. \"Tell Sasha I said hello. I really need to catch up with her.\"\n\n\"She'd love that. You two have fun.\"\n\nJessica took Corbin's hand and walked with him through the sea of students coming in. Under her breath, she told him, \"On the count of three, look back at her. One. Two.\" She reached down and squeezed his ass. \"three.\" Corbin glanced back and saw Dr. Windsor watching. She looked away hurriedly, and he did too. \"Was she looking?\"\n\n\"Yes.\"\n\nJessica grinned. \"Good.\"\n\n* * *\n\nThey pulled into Jessica's driveway, and before they got out, she said immediately, \"Hands. Let me see them.\"\n\nHe held them out. Remembering their first time together, Corbin got on the ball about keeping the nails trimmed, and she nodded as she inspected them. When she was done, he kept one of hers in his, and murmured, \"Hey. Thank you. I don't mean for the sex. Just... thanks. I like being with you.\"\n\nJessica studied him. \"No attachments, big man,\" she murmured, but she didn't pull her hand away.\n\n\"I know,\" Corbin said. He squeezed, and let her go.\n\nThey made their way up the sidewalk, but at the door, Jessica stopped him. Without a word, she wrapped her arms around Corbin and hugged him tight. \"I like being with you too,\" she murmured. \"And you are going to love tonight.\"\n\n\"How could I not?\" he asked.\n\nShe let him in, and took his hand again to pull him upstairs after they kicked off their shoes. Corbin followed gleefully, surprised he wasn't at all nervous about his first lesson in giving oral pleasure. He was with Jessica. Everything was okay. She made it okay.\n\nJessica's bedroom door was closed. She stopped him and leaned up to kiss him. \"Ready?\" she asked.\n\n\"God, yes.\"\n\n\"I wasn't asking you,\" she said, a twinkle in her eyes.\n\n\"What?\"\n\nShe opened the door. Resting on her back on Jessica's sheets was Brooke, her blonde hair spilling out around her on the pillows in full waves. She was nude save for a gossamer camisole which was so sheer he could see the pink of her pussy lips and her light brown nipples.\n\n\"What? Brooke?\" he asked.\n\n\"I think so,\" Brooke said, and Jessica snickered. She tugged Corbin into the room as Brooke stretched luxuriously on the bed, the hem of the camisole riding up to the bottom of her pussy. Corbin couldn't stop staring. \"So... hey.\"\n\n\"Hi,\" Corbin breathed. Jessica moved to him, her slim fingers going for his belt.\n\n\"Before we do anything, Corbin, we need to talk,\" Brooke said. She slid one shoulder of her camisole down nearly to her nipple, and Corbin groaned. \"Jessica's told me she wants to teach you to become the biggest playboy on campus.\"\n\n\"Um. Yeah, I guess so,\" Corbin said as Jessica loosened his belt and began to work on his jeans.\n\n\"It's hot. I'm not going to lie, that's a really fun idea. But you're at a crossroads. You can either be like Kenny and just try to fuck whoever's around, or you can be someone women can have fun and be safe with. Someone who is up front about what you want.\"\n\n\"You know I don't want to be like Kenny,\" Corbin said, stung.\n\n\"I do. Jessica told me you didn't want to make me a target because of how he treated me.\" She slipped her hem upward and traced her bright pink lips. Corbin swallowed. \"No woman on campus is just a pussy to be used. I want you to know that. I'll help you two with your plans, but you have to promise me you'll always be up front with them about what it is you want. No leading them on. No hurting them. If it's obvious one of them wants a relationship, you either say yes and end this game or you let them down gently.\"\n\nJessica slid his pants and boxers down, freeing his hardening member. Brooke pinched her pussy lips, squirming as she stared.\n\n\"Brooke,\" Corbin said quietly. \"I think you're beautiful, and you've been a friend to me. I don't want to screw that up, but if you're up for it, I'd sure like to have some fun with you tonight. No pressure, no strings.\" He cocked his head. \"Like that?\"\n\n\"Perfect,\" Brooke breathed. \"Get your shirt off, then come here.\"\n\n\"Welcome to your first lesson,\" Jessica said, rising up. She gripped his cock and stroked it while she leaned in and kissed him.\n\nHe squeezed her butt and hurried out of his shirt. \"How, um, how are we going to do this? Are you sticking around?\"\n\n\"Oh yes,\" Jessica said. \"You're going to join Brooke. I'll talk you through it, but I think you remember the gist of what I told you.\"\n\n\"Pay attention to what she likes, watch the nails, and make voices like Donald Duck.\"\n\nBrooke giggled. \"Yep. Nailed it.\"\n\nHe hurried to the bed and climbed up between Brooke's knees. Jessica laid a hand on his ankle and shook her head. \"Sometimes you'll want to go down right away on a woman, especially if you're in the heat of the moment. But times like this, when you're first getting to know each other and things are slow and easy, don't just rush for her pussy.\"\n\n\"I certainly wouldn't mind a good kiss or two to start things off,\" Brooke murmured.\n\n\"I can do that,\" Corbin said. He crawled up along her body, his stomach brushing hers.\n\nJessica ran her hand along his calf, and said, \"And a kiss sometimes is hottest when you blaze a trail to her lips. Try her collar first.\" He did, loving the soft strawberry scent and the warmth of Brooke's tanned skin. Without being told, he moved his lips further up, kissing her neck in a few different spots. She moaned softly with one of them, and he teased it for a moment longer, his hand slipping under her back. The wispy camisole felt so soft under his fingers but he longed to have the blonde beauty skin to skin against him.\n\nThe weight on the bed shifted. Jess knelt beside them now, still dressed, watching. She caught his eye and smiled. He assumed that meant he was doing a good job and moved up further still, kissing Brooke's chin. Her fingers came up to his head, sliding through his long hair.\n\n\"I love your new haircut,\" she murmured. \"And you look so good clean-shaven.\"\n\n\"Thanks,\" Corbin murmured, trailing his lips up her cheek to her lips. They kissed once, a soft, almost chaste brush before he pulled back, looking into her eyes. \"Every time I look at you, I think of the sun and sand and perfect days.\" He trailed his fingers through her hair with his free hand. \"It's the hair, the eyes. You're gorgeous.\"\n\nBrooke's mouth parted, and her cheeks burned hot. Jessica said, \"I told you he was a natural at the sweet talk.\"\n\n\"Plus I like the booty,\" Corbin said, slipping his hand underneath her down to the part in question and squeezed it.",
        "Brooke laughed and pulled his head back down so she could kiss him properly. Jess murmured, \"Now, a good kiss, just part your lips. A little tongue is okay but-\"\n\nBrooke broke away from Corbin long enough to glance at her friend. \"He's got this part covered pretty well.\" Corbin laughed low and kissed the other side of her chin. She pointed at her earlobe. \"Not all women are going to like it, but suck that into your mouth. Gently. Then graze it with your teeth.\"\n\nHe did, and Brooke arched her back, her hands digging into his skin. She must have really loved that. He knew enough not to stay there for long and let her earlobe go to kiss her again. Her hands roamed his back now, stopping and squeezing every now and again. One of her legs roped around his and she panted softly against his lips, \"Okay, stud, Make love to me with your tongue.\"\n\n\"Hear what she said, Corbin?\" Jessica asked. \"You can tell a lot about what a woman wants just by listening. If she'd said 'eat me,' she probably would want you to dive down there and have some fun. But she said...\"\n\n\"'Make love to me with your tongue,'\" Corbin said, getting it. \"So, go slower and be more gentle.\"\n\n\"Exactly,\" Brooke said. She reached behind her for another pillow and Corbin helped her with it so she could sit up higher and watch him. He kissed her one more time, then snaked his way back down her body.\n\n\"And when she says she wants something, give it to her, but don't be shy about playing along the way,\" Jessica said, tracing his back with her fingernails. \"Kiss her. Run your tongue along her skin. Tease her. It can be fun to make them squirm.\"\n\nHe did just that, nuzzling Brooke's neck and drawing a breath moan from her. He slid his fingers under her butt as he kissed the hollow, and she ground up at him in response. It didn't seem faked, either. Shock turned to warmth. He was turning Brooke on. Amazing.\n\nHer hands left him and came to the straps of her camisole. She tugged them aside and pushed up just far enough to pull the cups down. Corbin drank in the sight of her pink nipples, then leaned down to kiss around one. They were hard and ready for his attention, and she twitched under him as he avoided direct contact.\n\n\"That's good,\" Jessica breathed. \"Tease her just like that.\"\n\n\"Nooo, suck them,\" Brooke protested, giving Jessica a dark look. Corbin chuckled, and instead, kissed along the side, then back to the valley of her cleavage. He took his time to the other nipple, then looking up into Brooke's eyes, he finally relented and sucked it into his mouth. So engrossed in her, he almost didn't notice Jessica sliding her hand underneath the other woman to take his. He let the hand be guided out. She placed it firmly on Brooke's other breast.\n\n\"Use your thumb,\" she encouraged him, though it was throaty and deep. He wondered if Jessica might not be getting turned on too.\n\nHe listened, though, and brushed Brooke's nipple with his thumb as he sucked and licked the other. He may have been inexperienced but he wasn't a virgin, and when he swapped back to the other nipple, instead of thumbing the other, he dropped his hand lower, sliding across the fabric of the camisole until he cupped her sex.\n\n\"Oh, God, yes,\" Brooke breathed. \"Finger me, baby.\"\n\n\"Gently now,\" Jessica reminded him. He grunted around Brooke's nipple and slowly eased a finger into Brooke. Her response was immediate. Her ankle around his kicked, and her butt jerked like she wanted to thrust up against him.\n\nHer walls were tight around his finger, and so slick. He worked it in and out of her gently as he sucked away on her nipples. She gripped the back of his head, and he glanced up at her. \"I'm not hurting you, am I? Like, scratching you or anything?\"\n\n\"You're doing... perfect,\" she grunted, her thighs parting wide. \"When you're fingering a woman... mmm... at that angle, use the heel of your hand. Kinda... rub it around my clit and my mound. Like you're grinding on me.\"\n\nHe tried it, and asked, \"Like that?\"\n\n\"Little harder?\"\n\nHe tried again, and Brooke squirmed. \"Yesss, like that, oh fuck that's good.\"\n\nJessica kissed his shoulder. \"When something's obviously good for a woman, stick with it. Let her guide you to the next step if she wants one. But when someone says 'just like that,' you go just like that. No harder, no change-ups.\"\n\n\"Got it,\" he said, and moved his mouth to Brooke's other nipple again. \"Want me to eat you out, Brooke, or just like this?\"\n\n\"Just like this, Corbin, you're going to make me come just like this. And then you can go down on me. Okay?\"\n\n\"Sure,\" he said. Brooke, the woman he'd lusted after for weeks now, was going to come and he was helping her. He was in heaven. \n\n\"Add another finger,\" she murmured. The way she looked down on him there, her blonde hair out of place and hanging down over one eye, her reddened cheeks, the apparent desire in her, it was so hot.\n\nSo why not say it?\n\nHe slid another finger into Brooke's pussy, looking up at her from her nipple. \"You're incredible like this, Brooke. So sexy. The hair, the way you're looking at me.\"\n\n\"Corbin,\" she moaned. \"I can't wait for later. When it's your turn I want you to take me.\"\n\n\"How do you want it?\" he asked her, fingering her faster now more out of his own need than any instinct, but given the way she was rocking against his fingers in response, Brooke really didn't seem to mind.\n\n\"From behind,\" she hissed. \"I want you fucking me from behind. I want you ramming that big fucking cock inside me.\"\n\n\"Shit,\" Jessica breathed. \"You're doing good, baby.\"\n\n\"He's doing incredible, Jessica. I'm so close. Kiss me, honey. Kiss me again and make me come.\"\n\nCorbin rushed up to her, his fingers pumping in and out with soft squelching noises. Brooke grabbed the back of his head with frantic need and crushed her lips to his. A hand joined his - Brooke's, he thought at first, but only later realized the truth, that hers were still around his head. Jessica teased the other woman's lips, stroking them, unable to stay out of the game.\n\n\"Cooorrrbin!\" Brooke moaned. \"Ohhh, ooh, right there, right like that, oh fuck, I'm com-ming!\"\n\nShe twisted hard, wriggling side to side as she gushed upon his fingers. Jessica growled, \"Kiss her again, then get down there and taste her.\"\n\nHe couldn't help himself. He drove his tongue into her mouth and toyed with hers. She kissed him just as hard back, her hand dropping to his ass and squeezing hard before she gasped, \"Do it, do it, make love to me with your tongue, baby.\"\n\nHe pulled his fingers out of her and Jessica hurried around the bed, Corbin dropped down between Brooke's legs, and as he tongued up her wetness, Jessica took his hand. He didn't know what was happening, only that a moment later, warmth enveloped his fingers. He looked over, shocked, and she sucked them harder, blushing. Then she looked up at Brooke.\n\n\"Is that okay?\"\n\n\"Come here,\" Brooke murmured. Jessica did, and Corbin watched as they kissed above him. Jessica stroked Brooke's cheek as their lips met in gentle sways. The almost inaudible smacks made him swallow hard. \"I think he likes that.\"\n\nJessica looked down and grinned. \"I think so too.\" She looked back up at Brooke. \"You and I, we'll play later?\"\n\n\"Oh yes. You just made my day.\"\n\n\"Mine too,\" Jessica murmured, and kissed her again before dropping back down to Corbin. She grinned and kissed his shoulder. \"So. Now you know.\"\n\n\"That was... wow,\" he croaked.\n\n\"Words finally escape him,\" Brooke said, wriggling and getting more comfortable.\n\nHe chuckled and brought his lips to her pussy. First he kissed along her lips, glancing occasionally at Jessica for reassurance. She nodded, smiling, and ran a hand through his long hair. Brooke's lips still glistened from her orgasm and Corbin lapped it up experimentally. There wasn't much of a taste besides the soaps she used. He did notice she seemed to like the flicks of his tongue and kept it up.\n\n\"Take your thumbs and spread the tips of her lips gently apart. Just a little,\" Jessica said. He did, and she scooted in closer. \"Now tease back up along her until you reach that point, just below her clit there.\" He did, and noticed how Brooke involuntarily tensed. \"It's not just about the clit, or the nipple, or the other erogenous zones you'll find a woman likes. It's about teasing those areas around them. Get creative. Women are sensitive in so many different ways. Brooke, honey, lift your knees.\"\n\nThe blonde did, watching with satisfied eyes as Jessica got right up on the action. \"Now, slide that tongue back down her. Right to the base of her pussy.\" Corbin did, watching Jessica. \"Go just a little lower. Not quite to her bud, but right along that stretch of flesh there.\" Corbin did. Brooke didn't really give a reaction. Jessica shrugged. \"Some women like to be teased there too. I love it.\"\n\n\"I like anal, but not really any tongue action south of the border,\" Brooke said. Corbin couldn't help gaping up at her. She giggled and gestured at her pussy. \"Maybe someday I'll let you have some fun back there. But for now...\"\n\n\"Sure,\" Corbin croaked. Brooke just told him he might get to take her ass. Brooke. Fantasy goddess. He brought his lips back to her pussy, and took a good, long deep dive with his tongue, driving up to her clit. Jessica didn't say anything this time, only watching, He swirled through Brooke's depths like that, up and down, up and down, taking his time, feeling her respond to it with tiny jerks.\n\n\"My clit, Corbin, please...\" Brooke begged, and he gladly slid back up to her button, licking all around her hood. She liked him fingering her before so he decided to go for that again, and slid two fingers back inside her as he licked her clit. \"Yesss!\"\n\n\"Every woman likes something a little different with their clit,\" Jessica murmured. She was on her knees now, stripping out of her top. \"Brooke?\"\n\n\"Just keep doing that, flicks, mm, mm hm,\" Brooke moaned. \"Now suck it.\"\n\nCorbin did, taking her button between his lips and experimentally teasing it with the tip of his tongue. That did it for Brooke, and hard. She clawed at the bedspread, her knees widening, and she gasped, \"Oh fuck oh fuck oh fuck, finger me harder...\"\n\nHe did, pumping his fingers in and out of her while he sucked and licked her clit. One of her fists balled up and she hit the sheets, her head bending back, her breasts thrusting upward. Jessica was naked now and came back up Brooke's body. She bent over and sucked one of Brooke's nipples into her mouth, teasing it only a moment before bringing her lips again to Brooke's, their kisses as loud and wet to his ears as his fingers sliding in and out of Brooke's tight pink folds.\n\nJessica reached for something on her nightstand and tossed them back beside Corbin. Condoms. She broke away long enough to gasp, \"When she comes, fuck her.\"\n\n\"Yesss!\" Brooke hissed. \"Fuck me, Corbin, get that fucking dick inside me, I'm your slut tonight.\"\n\nCorbin fought the urge to lose control, to attack Brooke's pussy the way he had that first awkward time with Jessica. Instead, he focused on Jessica's words to feel out what Brooke liked and stick with it. He sucked and licked her clit, fingering her fast but not manically. Her knees kicked and he glanced up to see Jessica's fingers running circles around Brooke's nipple.\n\nHe did decide to experiment again, what he thought would be a small move. He pulled his two slick fingers out of Brooke, making her mewl, but next time added a third. It was tight, but she accepted him with a wet slurp, her walls trying to pull him deeper. Her ass shot up off the bed and she yelped, \"Oh fuck! Corbin! Jess... mmm... mmm! Oh!\"\n\nJessica kissed Brooke again, her breath cutting off as her pussy convulsed around Corbin's fingers. Warmth shot against his fingers.\n\n\"Now,\" Jessica panted, \"fuck her now, she came.\"\n\nCorbin pulled his fingers free and sat up on his knees. He grabbed a condom, unwrapped it, and rolled it onto his rock-hard prick as Jessica guided a breathless Brooke onto her hands and knees, her ass jutting up high as she crossed her delicate tanned arms in front of her. Corbin lined up behind her, and needed no advice this time. He gripped his cock and brought it to Brooke's wet lips. With a grunt, he hilted himself inside her, pushing far and deep as she arched her back and cried out, \"Yes! Fuck me!\"\n\nHer ass was rounder and more muscular than Jess's, and he loved the white tan lines disappearing where his cock connected with her body. Brooke was so goddamn athletic and hot, and he couldn't help driving in and out of her with wild abandon. His hands fell to her waist and he yanked her back to meet his every hard thrust until she was rocking back out of instinct.\n\nJessica flipped onto her back beside Brooke. Her slim hands roamed her body as she spread her knees wide, watching Corbin. He stared back, his desire burning in his eyes, and she kissed the air before one hand dipped down to her ready sex. She slid her fingers through her folds, working her wet walls with expert care and spreading her hips even wider in a show for him.\n\nIn that moment, Corbin realized something. Much as he loved fucking Brooke, it was Jessica he wanted in that moment. It was a pebble of a thought, something errant he'd forget about until later, but pebbles precede avalanches. He had one of the sexiest asses in college ramming back against him, but it was Jessica Nakamura who drove every other desire from his mind.\n\n\"Slide down to me,\" he said. \"I want to touch you while I'm fucking her.\"\n\nJessica licked her lips and shimmied down the bed until her pussy was within his reach. With one hand still on Brooke's waist, he dropped the other to Jessica's sex.\n\nShe gripped his hand in hers, their gazes burning for each other as he eased two fingers inside her. There was no way to keep an even rhythm with how hard he was fucking Brooke, but it didn't matter. Jessica played with her own clit as he fingered her erratically. Neither of them paid any attention to the blonde as she sputtered out gasps that she was coming again. Neither of them cared much at that point about the lessons. They knew what they wanted. They knew who they wanted.\n\nBrooke hadn't gotten the message. When she came again for a second time, she collapsed forward onto her arms, rocking with Corbin's continued thrusts. Corbin finally looked away from Jessica. \"You all right?\" he asked.\n\n\"God yes,\" she gasped. \"Let me get on my back. I want to eat out Jessie.\"\n\nHe pulled out and she nearly collapsed. Jessica chuckled throatily and helped her friend onto her back. She got up on her knees and gripped Corbin's cock as she kissed him. \"Let me,\" she murmured, and guided him to Brooke's puffy folds. Jessica let go and squeezed his butt as he slid back into the stunning blonde. He turned his head and kissed Jessica. She moaned against his lips, and finally broke away.\n\n\"I like missionary,\" Jessica said. \"I think it's really intimate. But if you want to vary things up, try this. Do what I do, but with the other shoulder.\"\n\nShe took Brooke's ankle and lifted it up to Corbin's shoulder. He mirrored it, and Brooke wiggled with pleasure. \"That gets you nice and deep inside me, stud,\" she breathed. Her blonde hair was now well and truly mussed, obscuring her face. She pushed it out of the way, smiling contentedly. \"But let me show you one of my favorites. Bring that ankle over to my other one and cross it.\"\n\nCorbin did just that, noticing immediately how he slid another half inch or so into Brooke. \"Got it,\" he said.\n\nShe dropped her legs back to the either side of his knees and grinned. \"But if I'm going to be making Jessica come, then I don't want to get cramped.\"\n\nJessica stroked Corbin's back. \"What would you like to look at when you're fucking her. My front or back?\"\n\n\"You know I love looking into your eyes,\" he said, \"but now I'm in a mood to look at your butt too.\"\n\nShe laughed and squeezed his in response. With that, she crawled on her knees slowly up the bed as he began to thrust back and forth inside Brooke again. The sashay of Jessica's ass did nearly as much for him as the pussy gripping him tight, and he grunted with pleasure. She tossed him a look over her shoulder, her grin naughty and knowing, and lifted one knee up and over Brooke's face.\n\nTheir blonde friend pulled Jessica down to her mouth, and Jessica looked over her shoulder again. \"Corbin, she's licking my pussy,\" she whimpered.\n\n\"Fuck,\" he groaned.\n\n\"Like the view? Like me sitting on her face?\"\n\n\"Yeah,\" he grunted, gripping Brooke's thighs and lifting them so he could plough into her harder and harder. Sweat glistened on his forehead and chest now. How he held on so long he didn't know but he wanted to see Brooke or Jessica through one more orgasm and vowed to himself to not come until then.\n\n\"I think we've fucked him wordless,\" Brooke said underneath Jessica. Jess giggled at that and began to rock her hips against Brooke's mouth. Her hands came back and rested on her own ass as she stared at Corbin over her shoulder. As much fun as he was having with Brooke, he wanted her so badly in that moment. He wanted her on her knees. He wanted her on her back. He wanted her riding him again. He wanted Jessica in every position he could have her, and he very nearly came.\n\nEasy, he told himself. You can hang on. You can do this.\n\nWith that, he steadied his pace, no longer manically fucking Brooke. He settled for a hard, slower rhythm, his release still on the horizon but under control. He gripped and squeezed Brooke's thighs, her ass, loving again the warmth of her as he stared at Jessica's bottom rocking on the blonde's chin.\n\n\"Brooke, mmm, Brooke, I've thought about this a lot.\"\n\n\"Mmmm,\" Brooke moaned against her.\n\n\"Lick right there, right like that, nnn huh...\"\n\nSlurp slurp slurp. Slap slap slap. Sounds of their fucking were the only noises for a few minutes. Jessica's pace increased on Brooke's mouth, and her hands left her ass to do something else he couldn't see, presumably to play with her tits and clit. He was just starting to think about telling Jessica to flip around so he could watch when she began to thrust harder, clearly riding an edge.\n\n\"Yesss, Brooke, just like that, fuck, I'm going to cream so hard on your pretty face.\"\n\n\"Give me it,\" Brooke gasped against her. Her hands gripped Jessica's ass. She hauled back and smacked one, hard, and it came so damn close to sending Corbin over the edge.\n\n\"Again,\" Jessica whimpered, \"spank me again.\"\n\nBrooke did, and Jessica straightened like a board. Her fingers shot up to her hair and she drove down hard one last time, shouting, \"Fuck! Brooke!\"\n\nShe came with a sharp jolt, laughing for just a brief moment before toppling sideways. Brooke's face gleamed with her juices and she grinned up at Corbin as she ran her tongue around her lips. \"Yummy Jessica come,\" she moaned.\n\nJessica repositioned herself quickly, her lips against Brooke's face. Corbin realized with a start she was licking up her own juices. She cast him a quick look before coming back down near his side again. Her hand went to Brooke's clit and she asked, \"Still haven't come?\"\n\n\"No,\" Corbin groaned. \"So close.\"\n\n\"Let's try to get her there one more time,\" Jessica said, and he nodded. She rubbed Brooke's clit while he brought her legs up again the way she liked. Jessica's head dipped to her friend's bobbing tits again and she licked and sucked a nipple into her mouth as Corbin rammed harder and harder into Brooke. The blonde kept up a whimpering tempo, almost boneless with the pleasure she was receiving.\n\nCorbin wasn't going to make it. It was too much. But then Brooke spoke.\n\n\"Nnngh, nnngh, it's so good, it's so good... never been f-fucked like th-this...\"\n\nAnimal instinct took him over and his need for release gave way to pure male pride. His cock throbbing, he plunged into Brooke time and time again, Jessica's fingers brushing him on occasion as she strummed her friend's clit hard. She sucked and played with Brooke's tits, but it wasn't until she kissed Brooke's collarbone almost by accident that the blonde shot over the edge yet again.",
        "\"Fuuuu-uuuhhhhh-uck!\" Brooke cried, so shrill and so sharp Corbin nearly covered his ears. She shivered and shook, one hand coming up to her lips as tears of pleasure slid down her cheeks. She took one great big shivering breath and gasped, \"Can't, can't, can't...\"\n\n\"She needs you to pull out,\" Jessica said hurriedly.\n\nCorbin did, his cock throbbing. Jessica snatched the condom off him and jerked his prick. She came to him, kissing him hard as she held him over Brooke's belly. His first shot of come arced and hit her in the neck, the rest spraying down her tits, her stomach. She gasped at how much he came, but Corbin never heard her words. He was staring into Jessica's eyes and realizing how deeply in trouble he was.\n\nWhen they all came down, Jessica and Corbin helped Brooke into the shower first. She was exhausted, and Corbin hurried downstairs to grab her a glass of ice water while Jessica helped her clean up. When he came back into the bathroom, he was treated to the sight of the two embracing, nude under the shower's flow.\n\n\"You two are really beautiful together,\" he said. \"Thank you for letting me watch you two.\"\n\n\"God, thank you,\" Brooke said. \"I'm feeling like I might collapse I'm so worn out. Can I crash here tonight?\" she asked Jessica.\n\n\"Of course,\" Jessica murmured. \"Any time. Same to you, Corbin.\"\n\n\"Really?\" he asked, baffled and pleased.\n\nShe chuckled. \"Yes, really. Just text ahead in case I have a guy over.\"\n\nAnd like that, the tension that had been building between them all day burst, and Corbin remembered her words. No attachments. Friends with benefits.\n\n\"Yeah. Yes, of course!\" he said, sounding too chipper and knowing it.\n\nBrooke looked like she might say something, then shook her head. She turned in the shower's spray and brushed a washrag down between her thighs. \"I'll order Chinese for you and me later, Corbin. Sound good?\"\n\n\"Oh, I'm trying to watch what I eat,\" he said.\n\n\"Don't worry, I got you covered. Only question is, do you like beef or chicken with your broccoli?\"\n\n\"Uh, beef, I suppose,\" he said, still trying to work out the sting of Jessica's words. Move past it, he told himself. You know what this is.\n\n\"Good choice,\" Brooke said. \"Here, swap me spots. I really do need that water.\"\n\nThey did. Jessica gave him a dazzling smile, and he prided himself on returning it reasonably well. They washed each other with a generous amount of groping their favorite parts of each other, and eventually returned back to her bedroom.\n\nShe dressed for her babysitting job in the same jeans she wore that day and a simple tee. As she did her hair, she told the other two to make themselves at home, and she'd be back around midnight. Jessica gave them both a long kiss, then hurried out of there to grab a coffee before she had to go take care of her kids.\n\nBrooke and Corbin headed downstairs to the living room and crashed in front of the Tv. Brooke lounged with her feet on his lap, staring more at him than the comedy they were watching. Finally, she asked, \"You okay?\"\n\n\"After what we just did, how could I not be?\" he asked, chuckling.\n\n\"Hm,\" Brooke said, but let it go.\n\n* * *\n\nJessica liked the Nicolier family. The father, Jacques, was a thirty-something with the best stories about his days filming as part of a crew for a ghost-hunting show set in the Canadian wilderness. His wife, Erica, had a more ordinary past as a chef, but her own stories of kitchen mishaps were just as enthusiastically told, with roars of laughter from her husband to accompany them, even if the stories must have been told dozens of times to people they knew. Every week they liked to go on a date night, and this time was a semi-formal dinner with friends.\n\nErica answered the door in an ankle-length red dress. She was just this side of plump, and the effect her rouge had on her cheeks really made her eyes pop. \"You look incredible!\" Jessica said, grinning.\n\n\"I wish,\" Erica said, but gave her a glowing smile anyways. \"The hair's a mess. We had to hold off a storm by letting Mandolin dress up too, so I ran short on time.\"\n\nJessica chuckled. \"Here, let me.\"\n\nErica stood still while Jessica mussed her reddish-brown hair, then swept it to either side of her cheeks. With a bun already held up by a hair pin, it gave her a messy chic look. \"There,\" Jessica said, satisfied. \"Run a comb through both sides and I think you're good.\"\n\nErica dashed into the bathroom to look, and Jacques said, \"Wow wow wow. Yes. Go with that.\"\n\n\"I want my hair like that,\" a tiny voice grumbled. \n\nTheir daughter, Mandolin - and Jessica loved that name, as ridiculous as it might be - was cute as a button, and at four, past the worst stages of her early childhood development, though there were plenty of potty errors and fits to keep Jessica on her toes.\n\n\"I can help you do that when your mom and dad leave, honey,\" Jessica said.\n\n\"Really?\"\n\nJessica grinned. \"Yes, really.\" Her phone buzzed and she glanced at it.\n\nBilly Calcagni, the wrestler who helped protect Corbin, sent her a text.\n\n-Call when u r not busy\n\nShe typed a quick response.\n\n-At job. Will be late.\n\n-ok\n\nShe stuffed the phone away just in time for Mandolin to streak out of the bathroom, a blur in a frilly blouse, big poofy skirt, and adorable white shoes.\n\n\"Hello, Mandolin,\" Jessica called after her disappearing ward for the night.\n\n\"Hi, Jessica,\" Mandolin hollered back as she ran for her bedroom.\n\nErica stepped back out and gave Jessica a hug. \"Oh, that looks fantastic. I swear, I should pay you extra to come half an hour early just for makeup and hair.\"\n\n\"Hey, as long as I don't have class, we can figure something out,\" Jessica said.\n\nErica raised her eyebrows. \"An extra twenty?\" she asked cautiously.\n\n\"That sounds like a deal to me.\"\n\nJacques stepped out, putting on a steel watch. \"I hope she's not too off the walls. She wormed her way into a couple extra cookies.\"\n\n\"There are vegetables and dip in the fridge,\" Erica said, \"and she didn't eat much for dinner so if you can get her to nibble on anything not loaded with sugar, please.\"\n\n\"I'll definitely try,\" Jessica said. It went unspoken that she could help herself too. The Nicoliers had always been pleasant like that. Not everyone was. Jessica found that the people she loved working for the most were the ones who weren't shy about telling her to make herself at home. \n\n\"Mandy, come out and give us a kiss goodbye,\" Erica called.\n\n\"I'm playing!\"\n\n\"Mandy...\" her father said reproachfully.\n\nMandolin gave a very audible huff even several rooms away and stormed back out. Some attempt had been made to braid her hair but it was haphazard and already tugged mostly free. She ran to her mom, gave her the requisite brush of her lips against her cheek, then her dad got a much bigger kiss. Jessica saw the hurt in Erica's eyes and could commiserate. She had been a holy terror to her own mom most her life and favored her own dad until college.\n\nWhy had that changed? Jessica wondered as she saw the Nicoliers out the door. Becoming responsible for herself when she was a sophomore and out of the dorms certainly didn't hurt. Her mother had always been so strict and Jessica rebelled against it. Now she realized with a certain degree of forlornness her mother had been trying to prevent the very situations Jessica kept finding herself lost in, like with Lionel and his girlfriends.\n\nEarly in the evening, and already she was feeling like she needed a good cry. Jessica smiled to herself, and sought out Mandolin, already back in her room, seated on the floor and playing hair stylist with one of her own dolls. Jessica sat too, watching the child play. The ironic thing about having spent so long rebelling against her mother was that she herself turned out to be a pretty good disciplinarian when it came to kids. She didn't let her mother's iron rule turn her into someone who would let her kids get away with murder, but Jessica thought she didn't run too hard in the opposite direction, either. Or she'd like to think so, anyways. Some of the kids would have said otherwise, of course, but they believed any enforcement of the rules was a personal attack.\n\nWhat kind of mother would she make? Would she be as good with her own children as she was the kids she babysat? Jessica didn't know, but she wanted to find out. She knew she wanted to be a mother someday. The need beat in her very core ever since she was sixteen and holding a sleeping baby she'd just changed five minutes ago, the first time on her own. It was that realization, Jessica thought, that made her start to realize the depth to which her own mother loved her and why she felt the need to protect her daughter so stringently.\n\nLike a rocket, Mandolin was up and tugging Jessica out to the backyard to run around and play airplanes, one of her favorites. As they ran and swooped with their arms outstretched, Jessica thought the child looked remarkably like a fairy out of an old fantasy cartoon with her poofy skirt fluttering in the breeze. She laughed with the little girl, and played, and carefully, somberly cleaned up her knee when she tripped over a rock and banged it on the ground. And as Mandolin was showing her a new game they were playing in preschool, Jessica caught herself crying a little bit, not because of any of her own pain, but for being so hurtful to her mother. For never pulling her in like this, to trust her to be the one to clean up her scrapes, to eat her meals without sniffing at it to see if her mom snuck in corn or black pepper, Jessica's two childhood hated foods.\n\nLater, as Jessica grated carrots for Mandolin, the child came in from watching a cartoon and asked, \"Are you okay, Jessica/\"\n\n\"Yes, sweetie,\" Jessica said, sniffing and dabbing at the corner of her eyes. \"I'm okay.\"\n\n\"Are you crying because you're hungry too?\"\n\nJessica laughed. A mother someday. She hoped if she had one, her daughter would love her sometimes.\n\nMandolin changed into her pajamas and crashed an hour later, a hard stop that left her in a pile beside a heap of toys. Jessica lifted her up, and the child wrapped her arms around her neck and tucked in. Jessica walked her to her bed and tucked the little one in. She picked up the toys, tidied up, and quietly shut the door on Mandolin curling up into a ball, dreaming the kinds of wild adventures only the littles could dream.\n\nJessica headed for the living room and pulled out her phone. She still needed to call Billy back, but first came a call to her mom. Kimberley picked up on the third ring. \"Hello?\" her mom asked. \"No, it doesn't need green chiles. Leave it, honey.\"\n\nJessica laughed and sniffed all at once. \"Dad helping cook again?\"\n\n\"Oh yes. He thinks the turkey pot pie needs something more exciting.\"\n\n\"Well, it couldn't hurt to try,\" Jessica's dad Ollie huffed in the background.\n\n\"And if you want soup for dinner, go ahead, because that's how it will turn out. Soupy,\" Kimberley said pleasantly. Jessica knew that voice. That was the \"this mess is your fault if you go through with it\" voice. It was usually followed an hour or two later by the \"now you clean it up,\" harsher tone. \"Sorry, honey. Are you okay?\"\n\n\"No,\" Jessica murmured. \"I'm missing you.\"\n\nImmediately, her mom's good humor disappeared. \"Is something the matter?\"\n\n\"Is she okay?\" Ollie asked.\n\n\"That's what I'm asking her.\"\n\nJessica smiled to herself. \"Do you remember when I was, mm, fourteen or fifteen, and I wanted to go to that party? Dad was gone for the week, you had to work, and you begged me not to go?\"\n\n\"Yes,\" her mother said. \"Of course. Jessica, you're scaring me.\"\n\n\"I'm okay. I really am. I just...\" Jessica sighed. \"You told me not to go, and I went anyways. That was the first time I ever tried beer and I got so sick. You didn't say anything to me back home. You just held my hair and put me in bed. Remember?\"\n\n\"I do,\" Kimberley said, sniffing. \"Well... I probably said a few things under my breath, but yes.\"\n\nJessica laughed and wiped away another tear. \"I was thinking about that tonight, and a million other things I'm sorry for. I guess it's just a night to reminisce. That guy I was dating, the older one you thought was really creepy, we broke up. A week or so ago.\"\n\n\"Ohhh, honey, I'm sorry.\"\n\n\"No, it's okay, it's really okay. I was hurting for a while but I feel all right. I was thinking tonight about how hard I fought with you when I was younger, and then again last year when I started dating him, and... I don't know. You were right about so much. I love you, Mom. Hey, um, instead of coming home Thanksgiving morning and driving home the next day, could I maybe stay the whole weekend?\"\n\nKimberley was silent a moment, the only sound her quiet sniffing. She always cried very softly, and sometimes without tears at all, just wracks of her body. \"I love you too, sweetheart, and of course we want you home. As long as you want to be here.\"\n\n\"Thank you.\"\n\n\"Promise me you're okay, sweetheart. You're not... depressed, are you?\"\n\n\"No. Just emotionally drained. That's not the only thing that happened this week.\" She filled her mother in on everything. She hadn't meant to ever talk about Ken Kilton with them or talk about the Men Are Assholes party, but she did, mentioning everything but hooking up with Corbin in the days since.\n\n\"Oh my God, Jessica,\" Kimberley breathed. \"He didn't... he didn't rape you, did he?\"\n\n\"No. No, thank God. Corbin stopped him before he could do anything more than, um, touch me. And my friends London and Dakota kept me safe after that.\"\n\n\"I'm so glad that young man didn't take advantage of you.\"\n\n\"He's a really great guy. I've been hanging out with him some the last few days since the footballers trashed his car.\" Not exactly a lie, and enough of a truth that Jessica didn't feel too bad about it. \"You'd like him.\"\n\n\"Well, you give him a hug from me. I'm so sorry that happened.\"\n\n\"Me too,\" Jessica said. She sighed. \"Anyways. I love you. I just had to get that off my chest. You're the best mom in the world and I never told you that enough.\"\n\nHer mother clicked her tongue. \"Of course I am. You got lucky.\" They both laughed, though there wasn't much humor to it. \"Text me the next few nights before you go to bed. Just... humor me. To let me know you're okay.\"\n\n\"I will. Bye, Mom.\"\n\n\"Goodbye, honey.\"\n\n* * *\n\nAfter a few minutes to check on Mandolin and clean up the house, Jessica sacked back out on the couch and called Billy.\n\n\"Hey, Jessica!\" he said cheerfully.\n\n\"Hi Jess!\" his girlfriend Bethani chimed in.\n\n\"Hey, you two!\" Jessica said, feeling much more herself. \"Billy, I didn't get much of a chance to say thank you the other day. You looking out for Corbin means a lot.\"\n\n\"Aw, hey, he's a good dude. And he's why I texted you. We're going to get the car back soon. I was thinking about surprising him with it and doing a fundraiser at the same time.\"\n\n\"What are you planning?\"\n\n\"The Bends,\" Bethani shouted gleefully.\n\n\"Ohhhh no,\" Jessica said. \"Oh God no.\"\n\nThe Bends was a legendary annual tradition on campus. It was thrown each fall by the Representatives, nine seniors who were hand-picked by the nine previous seniors to unofficially run and oversee all the campus's biggest parties. The Bends itself was one of the group's most popular outings.\n\nIt was, at its core, a scavenger hunt. Teams of four registered with the Representatives and the people helping them, and then were given a list of items to procure or tasks to complete around campus. Pictures were required, with bonus points awarded for video footage. The fastest to the finish line was generally the winner, but there had been a few years when additional bonuses eked out a victory for someone else.\n\nYears before Jessica came to school there, the Bends was known for its depravity and insanity. Alcohol poisonings happened every year, and some dumbasses always wound up disqualifying themselves for drunk driving. There were now rules in place to offset the dangers, but it was still a crazy experience, one Jessica vowed never again to rejoin.\n\n\"Now why would you say no?\" Billy asked.\n\n\"You know damn well,\" Jessica said.\n\nHe snickered, and Bethani attempted a terrible evil laugh. The one and only time Jessica tried the Bends, one of the tasks was to bounce on a trampoline topless (or bottomless for the guys) and take a selfie. Under the influence of her archnemesis Jose Cuervo, Jessica volunteered and promptly bounced herself right into a broken arm.\n\nShe did get the selfie, though.\n\n\"Anyways, we're going to charge a hundred bucks a team,\" Billy said. \"If we get twenty teams, that's everything replaced and a little extra cash for the kid. And two hundred fifty for the winners.\"\n\nKid? Jessica flashed back on Corbin steadily fucking Brooke, holding out forever with that intense look to his eyes. He seemed so sleepy outside of bed, but when he was in the middle of it, it was like a switch was flipped and he came alive.\n\nJessica shivered pleasantly and said, \"Twenty teams? That's a lot to hope for.\"\n\n\"It's really not,\" Bethani said. \"We had eighteen last year and there wasn't a cause. I've been talking with the sororities and they're all in to either help or sign up. Then you get the frat boys and the freshmen and sophomores, and there's your twenty easy.\"\n\n\"Just in case, if there's any costs left when it's done, let me know,\" Jessica aid, standing up and stretching.\n\n\"We will,\" Bethani said.\n\n\"What can I help with?\"\n\n\"We'll need some help decorating and setting some stuff up around campus the day of,\" Billy said. \"Besides that, well, here's the thing. We want you and Corbin to be the guests of honor. And our guests, they need a couple escorts. Because you're going to be a part of the scavenger hunts.\"\n\n\"How so?\" Jessica asked, grinning.\n\n\"You'll see. But who would you think would be a good fit for Corbin? Two women to keep him company all evening?\"\n\nJessica thought about saying she'd do it, but she remembered her words to Corbin earlier. No attachments. She was already deeply invested in the guy and had to get her feelings in check. No falling in love. Not this fast after Lionel. Corbin was a project, a rebound. A friend, yes, and... well, the second-best lover of her life and in serious contention for taking over the number one spot, but still.\n\nNo falling for him.\n\nRight.\n\n\"Sasha,\" Jessica said. \"Windsor. I want to introduce the two of them anyways, and this is a good reason to.\"\n\n\"Oh yeahhh, they would make a cute couple,\" Bethani said thoughtfully. Why did that make Jessica want to grind her teeth? \"I can see that.\"\n\n\"Brooke Wallace for the other one. She's-\" in bed with him right now and I'm not, Jessica thought. \"-hit it off with him pretty well too.\"\n\n\"Brooke and Corbin?\" Billy asked. \"Huh. Wouldn't have thought.\"\n\n\"Why not?\" Jessica asked. \"I mean besides their connection to Kenny, they're really great. He's cleaned up a lot and she... she's beautiful and kind and funny, and everything a guy could really fall for.\"\n\n\"Okay,\" Billy said. \"I really didn't mean anything by it.\"\n\n\"How about you?\" Bethani asked. \"Who do you want for an escort?\"\n\n\"Um.\" She settled on the first name and face that came to mind. \"Shea, maybe, if he's around. Besides that, surprise me. You know my type. Lots of muscles, lots of inches.\"\n\n\"Sure,\" Bethani said. \"Listen, Jessica, if you and Corbin are a thing, we can back off. This is just for fun. We have other ideas or you two can go together or...\"\n\n\"No,\" Jessica said firmly. \"It's not like that. It's really not. I just... think he's a great guy. He's good in bed, so whoever you send with him, make sure they drink lots of water beforehand.\"\n\nBethani giggled. \"And how would you know?\"\n\n\"Oh, I think you can imagine,\" Jessica said. \"Let me know the details and how I can help. I should go check on the girl I'm babysitting. Talk soon?\"",
        "\"Of course,\" Bethani said.\n\n* * *\n\nJessica crept into her own house just after midnight, amused at the need but she wanted to be quiet to avoid waking her friends. The only lights on were the nightlights. Her childhood fear of the dark had never quite left her, as embarrassing as it was.\n\nShe changed out of her clothes and slipped on a robe in the downstairs bathroom, not wanting to wake up Corbin or Brooke. The house was old, and there was no helping the creak of the floorboards, but she managed to get up to her bedroom with only a few squeaks.\n\nThe tiny bit of light from the hallway nightlights outlined two forms on the bed. Corbin rested facedown on the side Jessica preferred. Brooke faced him, her body curved about like a bow, one arm underneath her pillow.\n\nJessica watched them for a while from the doorway, smiling faintly. This was so... homey. Lionel had never spent the night. She stayed at his house a few times but never the other way around. Corbin staying there seemed right somehow. Like he'd always belonged there.\n\nSomething in Jessica's heart crumbled and all the pretenses fled her mind at that moment. Yes. She was falling for Corbin. The goofy freshman had already worked his way into her heart and there was no more denying that. But it didn't change things. She would help him become the man he could be, and then things would run their course, as they always did for her. He would fall in love with a Brooke, or a Sasha, or even a Dr. Windsor, and... it would end. It had to. That was her lot in life.\n\nBut Jessica could be happy now with him, and take the small moments when she could. She let her robe fall to the side and stepped closer to the bed. She reached out, and with shaking fingers, stroked his cheek. He shifted, looking up at her with those sleepy, soulful eyes and smiling too.\n\n\"I missed you,\" Jessica whispered.\n\nHe moved backwards, and she slid into bed, facing him. Her hand stayed at his cheek and she stared into his eyes for long minutes. Then her lips came to his, soft, gentle kisses in the dark. He smelled of soap and his kisses tasted like her toothpaste. She smiled against his lips and his hand came down to her side, her back. His fingers splayed out and he pulled her tighter to him, his leg hooking around hers. She liked that and a breathy, almost inaudible moan escaped her. Her hand at his cheek went further down, trailing his shoulder, his arm, his chest, his stomach.\n\nHis hardness swelled between them, resting against her stomach. Jessica stroked him as they began to kiss anew, and his own fingers brushed her mound, her sex. She let go just long enough to pull the covers up over them both and returned to him, helping him, staring into his eyes and willing him not to hurt her even if she already knew this one was going to tear her apart worse than Lionel could ever do.\n\nAnd it was okay, because she would get to have him for however long she could.\n\nJessica moved her hand to Corbin's butt and pulled him to her until he was resting on top of her, one hand beside her shoulder, his cock still against her stomach. Their lips met again and again as warmth spread through her. He slid down her body, working in the darkness to find her nipples with his tongue and his mouth.\n\nShe ran her fingers through his long hair as he dipped lower still, his mouth brushing her belly, her mound, her hips. She whimpered when he finally kissed her cunt, and arched her butt to meet his tongue as it slid through her. This was so much better than their first time together, so very right, and she gripped his hair, clinging him to her as she tried not to make a sound.\n\nTwo fingers slid into her and his tongue dragged against her clit, making her jump with the sudden, unexpected pleasure. Jessica crossed her feet on his back, her ass rising up as the sensations threatened to overwhelm her. For long minutes his tongue played and his fingers danced in and out of her, and she rose with it, dancing with the sensations coursing through her.\n\nShe had to let go of his hair to ball up a fist and stuff it against her mouth, cresting so hard and so fast she almost couldn't fight back the laugh bubbling up instinctually out of her. The warmth just kept going and going, rolling through her with such sharp highs. The orgasm left her motionless, left her breathless, thoughtless, her body and Corbin's magnificent tongue her only connection to this world.\n\nHe kept going.\n\nHis fingers slid in and out of her, so very wet. Her butt came slowly back down and she breathed through her nose, still fighting off her body's natural need to laugh. Senses finally returned to her but she felt like she was floating. His tongue, his fingers, she felt all these things, but it was like she was two women, one being made whole again, the other letting go.\n\nSlowly Jessica returned to him, her Corbin.\n\n\"I need you,\" she whispered.\n\nHe rose up her body, lips at her chin, her cheek. Into her ear, he breathed, \"I don't know where the condoms are.\"\n\nHer mind fluttered through hazy thoughts. Her IUD, she re-upped it in the summer, it was okay, it was okay, he could pull out when he was ready, it would be okay. She didn't realize she was breathing the words out loud until her hand circled his prick and she snapped back to the moment. His tip pressed against her sex and she whispered into his ear, \"Please, Corbin.\"\n\nHe sank into her, their bodies joining slowly, joyfully. Their skin knew what their hearts were trying to fight, and bound to each other anyways. His hand dipped down to her thigh, her hip, and then he was lifting it just slightly. So gentle and so slow he found Jessica's depths and she pulled his face to her, kissing him, tasting herself on his lips.\n\nHe rocked. There was no better word for it. His length ground against her spot sending endless short bursts of pleasure through her. Already well-satisfied, Jessica wrapped her arms around him and hung on. Their bodies slid against one another under the comforter and it was so good, so wonderfully good. He rocked, and her body thrilled to it, taking all of him and willing Corbin to never leave.\n\nHe dropped a hand to her mound and she joined him, keeping him right there, rubbing the soft stretch of skin there. It was good, so good, and her legs came up, her knees rising almost to her breasts. She gasped in the darkness, the loudest sound either of them made yet. Full. So full and so warm and so very whole again.\n\nJessica came again. It wracked her hard but she stayed silent, her chin dipping to her collar, her eyes squeezing shut. His forehead rested against hers, his breath ragged. They rocked together again, his hips rolling with more urgency. Had to be close.\n\n\"Jessica...\" he breathed.\n\nShe meant to tell him to pull out, but the thought of Corbin leaving her in that moment was too much and she dug her nails in, her forehead still to his, her hips rocking too.\n\n\"Jessica.\" Louder, more urgent.\n\n\"Just... just...\" she panted, but he pulled out of her, a sharp gesture that left her whimpering with need. She wanted him to spill inside her. She wanted to feel him bloom. Her legs dropped and warmth streaked across her belly, her pelvis.\n\nCorbin collapsed beside her, his breaths slowly evening out as they kissed in the afterglow. His arm wrapped around her protectively, and slowly he sank down into the murk.\n\nAnd over his shoulder, cast in only the faintest hint of light, Brooke watched them, eyes gleaming. She and Jessica stared at each other for a long minute. \"No one gets hurt. Your words,\" Brooke whispered.\n\nStung, Jessica flipped over onto her other side. Corbin pulled her back to him, his warmth lighting her up all over again despite Brooke's words ringing in her ears.\n\nNo one gets hurt.\n\n(Note from Ian Snow - much like New Man, this story is going to start branching out into other categories than Erotic Coupling. Thanks for reading!)"
    ],
    "authorname": "Ian_Snow",
    "tags": [
        "ffm",
        "harem",
        "menage",
        "oral",
        "romance",
        "threesome",
        "group sex"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/fantasy-man-pt-03"
}