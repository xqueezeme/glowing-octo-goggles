{
    "title": "A Tutor for Samuel Pt. 02",
    "pages": [
        "It has taken me a long while to write this sequel, and I apologize to those who felt the first installment left too many plot threads hanging. I always intended to follow up but Covid-19 turned my work life upside down and I simply have not been able to find the time to get back to it.\n\nBelatedly, here it is. I hope you find it was worth the wait. I also hope you and yours are staying safe and healthy during these trying times. As always, thank you for taking the time to read my work.\n\n-------------------------------\n\nThe wind whipped through Linda's hair as she drove, and she brushed the offending strands out of her face with an irritated gesture. Normally, she would have had the windows up and the air conditioning on in her car, but that feature was on the fritz, and she hadn't been able to afford to get it fixed, not with the cost of moving back to her old hometown. That fact left her with windows down as her only means of making the late summer heat bearable.\n\n\"Just another reason I didn't want to come back here,\" she mumbled under her breath.\n\nIt was a thought she voiced and quickly regretted. Linda knew she had an excellent reason for returning after all these years, and his name was Sam.\n\nAn image of her young lover lept into her mind, blond hair swept back out of his handsome face as he stared down at where she lay naked and pinned beneath his powerful, muscular body, his cock poised...\n\n\"Shit!\" snapped Linda, yanking the wheel to avoid a branch that had fallen across her side of the narrow two-lane road.\n\n\"Get your head out of your ass!\" she thought.\n\nIt would be beyond humiliating to get in an accident because her attention had been distracted by thoughts of sex.\n\nThen again, it wasn't like she didn't have a good reason for them. A drought of nine years would get to anyone, and Linda's self-imposed exile from love had left her far more wanting than she had ever realized. Sam had changed all that. He had brought her out of her shell and made her feel beautiful again for the first time since walking into the bedroom she shared with her husband all those years ago to find him in bed with her sister. A memory whose pain seemed to be fading away now, making her wonder why she had clung to it for so long.\n\nSam was her miracle, and she would have moved heaven and earth for him, or at least moved across the country.\n\n\"Home...never thought I would see this place again.\"\n\nLinda turned off the highway and aimed her car up the private drive that led to her parent's residence. The sprawling ancestral home of the Siler's had been in her family for many generations. Linda had grown up here surrounded by the trappings of old family wealth. It was a life she had turned her back on. In some ways, her sister driving her away had been a blessing, making her realize that she could get by on her own without the crutch of her family's money to fall back on. \n\nThe house looked out of place if not out of time as well, more like a Georgian plantation house than a typical New England mansion. Linda pulled her car to a stop, shutting off the engine and listening to the ticking sound of it cooling while her eyes took in the hanging ivy that wrapped the pillars of the wide front porch. She gave a mighty sigh, opening the car door and shutting it behind her, steeling herself for what lay ahead.\n\nThe old brass knocker gave off a hollow sound that echoed deep into the ancient structure. Linda waited patiently and was thrilled when the first face she saw was a friendly one. \n\n\"Ms. Linda! We didn't know you were coming! Get on up here, Child! Give me a hug!\"\n\nLizzie Jones had been her parent's housekeeper for as long as Linda could recall. When she had been just a child, Linda had often found herself following along behind Lizzie's wide thighs while the large African woman worked with the rest of the staff to keep the house tidy. \n\nThe years were starting to show in the larger woman's face. The wrinkles of time etching deep grooves in her dark skin. When Linda had last seen her, Lizzie's hair had still been mostly dark black curls, but now those ebony ringlets were shot through with gray. Still, her hug was like that of a momma bear, filled with love and protectiveness that age had not diminished in the slightest.\n\n\"You should have called. I would have had the chef put on something special for you. One of your favorites.\"\n\n\"That's okay. I didn't want to make a fuss.\"\n\n\"Or...Were you worried you would find out Gina was here and lose your nerve?\"\n\nLinda winced. Lizzie had always been able to see right through her. There was no hiding anything from her watchful eyes.\n\n\"Don't you worry. Gina is out for tonight with some young stud from your daddies gun club. Arthur or Avery or something...who can keep track?\"\n\n\"Are my parents at home?\"\n\n\"Your mother is here. She's out by the pool reading. Your dad is in town at some meeting, but he promised to be back in time for dinner.\"\n\nLinda stepped inside, looking up at the gargantuan chandelier that dominated the entryway.\n\n\"You should know. Your brother is here as well.\"\n\nShe turned at this news, eyes reflecting the surprise that she felt.\n\n\"Trevor? I thought he was still in rehab out in Colorado?\"\n\n\"Just got back.\"\n\nLinda's younger brother had led a troubled life. Drinking, drugs, and depression, the big three had dogged his steps like loyal beasts of burden doing their best to drag him down. Many folks assumed that his overindulgence and constant erratic behavior were the natural fall out from a life of privilege that he hadn't acquired the strength of character to handle, but Linda knew otherwise. Trevor's demons had been birthed by one fact that their overbearing father had never been able to accept.\n\nThe simple truth that his only son was a homosexual.\n\n\"Where is he?\"\n\n\"Upstairs in the library last time I saw him. He's only been back for a few days and spends most of his time avoiding your father.\"\n\n\"How is he doing?\"\n\nLizzie shrugged, \"Seems clean to me, at least for now. How long will it last this time? That's anyone's guess.\"\n\nLinda nodded and headed toward the stairs deciding that seeing her wayward brother might be a better place to start this family reunion than with her sometimes judgmental mother.\n\n\"Do you want me to tell your mother you're here?\"\n\n\"God, no! I'll get to her soon enough...\" groaned Linda.\n\nLizzie shook her head as the younger Siler vanished from her sight.\n\nIt looked to be an interesting evening ahead.\n\nThe smell of old leather that Linda had come to equate with her parent's library assaulted her nose as soon as she walked through the big oak doors. Floor to ceiling bookcases lined the walls covered in massive volumes, many of them antique or even original printings. As a child, this place had been special to Linda. She had been the only one of the children to take much of an interest in it. Even now, her eyes drifted over to the far corner where several astronomy texts sat gathering dust in the late evening sunlight that slanted in through the windows. They had remained untouched in the years since she had fled these hallowed halls. \n\nOne thing that wasn't untouched was the massive oak desk that sat roughly in the middle of the room. It had belonged, originally, to Linda's great-grandfather and, at the moment, was the landing place for her brother Trevor's size 11 feet.\n\n\"Dad would skin you alive if he saw you with your feet on Great-Grandpa's desk,\" she said with a smile.\n\nTrevor's feet separated into a \"V,\" revealing his handsome face. He and Linda shared a similar look, both with light brown hair and sea-green eyes though Trevor's were deeper set and seemed possessed of a profound sadness, old eyes in a young face.\n\n\"Holy Shit! Linda!\"\n\nThe youngest Siler shot up from where he had been sitting, covering the distance between them in a few long strides and lifting his sister into an unrestrained hug that made her ribs creak.\n\n\"Easy...Trevor! You're going to make my stuffing come out!\" she warned, laughing.\n\nHe put her back on her feet but stayed close, touching her face.\n\n\"My...my...makeup? When did you start painting your face again, Sis?\"\n\n\"It's a recent thing,\" she admitted.\n\n\"Oh! My God! This can only mean one thing. Who is he?\" asked Trevor, eyes opening wide with excitement.\n\n\"Why do you assume it's a boy?\" she teased.\n\n\"I wouldn't care either way, but if we both flip to the dark side, it might finally put dad in an early grave. So, give me details, Girl! I want to know everything right down to the size of his...\"\n\n\"You can stop right there! I don't kiss and tell.\"\n\n\"So...there's been kissing?\" asked Trevor with a smirk and a raised brow.\n\nLinda gave her brother a playful shove, stepping away toward the window.\n\n\"His name is Sam.\"\n\n\"Sam? I like it. Strong, simple, a good, solid, manly name! Tell me the rest of him fits that profile.\"\n\n\"It does, but don't get any ideas...\"\n\n\"I leave the stealing of peoples significant others to Gina,\" joked Trevor and immediately regretted it when Linda's face fell.\n\n\"Sorry, Sweetie. That was insensitive of me.\"\n\n\"Not untrue, though.\"\n\nTrevor nodded, \"When do I get to meet this new interest that has brightened my favorite sister's life and pulled her from her funk?\"\n\n\"Soon. I wanted to lay the groundwork first. Sam's great, but...\"\n\n\"I sense impending drama,\" remarked Trevor when Linda didn't finish her sentence.\n\n\"Sam's wonderful, smart, funny, handsome, and we get along so well, but he is kind of on the young side.\"\n\n\"Young? How young, exactly?\"\n\n\"Uh...college age...early...college age.\"\n\n\"As in just started? Wow, I thought my coming home from rehab would be the talk of the house. I never imagined you would upstage me.\" \n\n\"I wasn't trying to court controversy. It just sort of happened.\"\n\n\"Mom and dad are going to shit! This is awesome!\"\n\n\"You're not making me feel better about this, Trevor. I was nervous enough about coming back here already.\"\n\nHer brother came over to her, putting an arm around her shoulder.\n\n\"It's been long enough. I know you had good reasons for leaving. What Gina did to you...it was just plain wrong. There's no excuse, and we both know it wasn't the first time, but we've missed you.\"\n\n\"All of you?\"\n\n\"Gina loves you in her own screwed up way, but if you want to sock her in the nose, I'll hold her arms for you.\"\n\nLinda laughed, \"I'm over it. Sam made me realize how much of my life I had wasted on hating her and Greg.\"\n\n\"This Sam sounds special.\"\n\n\"You have no idea. I never imagined when I first met him how much he would change my life.\"\n\n\"Well, all I can say is that any man, however young, that could put a smile back on your face deserves respect in my book.\"\n\n\"I hope Mom and Dad feel the same way.\"\n\n\"Mom will be an easy hurdle. She only ever wanted all of us to be happy. Though I wish she had less tolerance for Gina's antics. It gets a little tiresome listening to her make excuses for our bitchy older sister. Dad, on the other hand, we've all seen how welcoming he is when it comes to accepting the unconventional.\"\n\n\"Have you spoken to him since you got back?\"\n\nTrevor pulled his arm away, moving off to look out the back window at the wide expanse of the estates seemingly endless landscape.\n\n\"No. I've only been home a few days, but we've been scrupulously avoiding one another. It's probably better that way. He doesn't mind covering up my mistakes, but it's easier to write a check than to face the problem head-on.\"\n\n\"How are you feeling?\"\n\n\"Are you asking me how bad I want a drink right now?\"\n\nLinda tilted her head and frowned, and expression of sad empathy on her features.\n\n\"I'm okay, Linda. The doctors say my head has never been screwed on so straight.\"\n\n\"Trevor...\"\n\n\"I know you've heard that before, but trust me, I'm done staring at sterile white walls. Whether Dad accepts me or not, I think I'm ready to move past it.\"\n\nShe came in for another hug, and he clung to his sister tightly, kissing the top of her head.\n\n\"Ready to go see, Mom?\"\n\n\"I'm never ready, but let's go anyway.\"\n\nThey found their mother together. She was sitting in the sun at a marble-topped table, flipping through a fashion magazine.\n\n\"Linda! What a pleasant surprise!\" \n\nMarion Siler was a miniature version of her two youngest children though her light-brown hair was streaked with gray and cut short, dropping just below her neckline. She hugged Linda close but hesitated as she pulled back, eying her critically.\n\n\"Oh! You look so pretty, Dear. I see you found a use for my Christmas gift finally. Just look at you, makeup, clothes that fit...somethings changed?\"\n\n\"Someone has a boyfriend,\" said Trevor in a teasing voice, and Linda abruptly smacked him on the shoulder.\n\n\"I wasn't going to lead with that!\" she said in exasperation while Trevor gave her a wink.\n\n\"What's this about a boyfriend?\" \n\n\"It's good to see you, Mother.\" \n\nMarion raised an eyebrow at the way her daughter ignored the question.\n\n\"You have been away far too long, Sweetie. Why don't we sit in the sun, it's such a nice day. I'll have Lizzie send out some lemonade.\"\n\nThe three of them assembled around the table with Trevor trying to put his feet on the marble and his mother swatting them aside.\n\n\"Didn't I teach you any better than that? I don't know what your obsession is with putting your filthy feet on everything!\"\n\n\"Just getting comfortable, Mom.\"\n\nShe frowned at Trevor but quickly turned her attention back to Linda.\n\n\"You should have let us know you were coming for a visit. We would have had a nice party or something.\"\n\n\"It's more than a visit. I...Uh...I'm moving back.\"\n\n\"You want to move back home?\"\n\n\"Well, back to town. I just signed a lease on an apartment.\"\n\n\"What brought this on? I mean, certainly, we're thrilled that you're back, but after all these years, why now?\"\n\n\"Boyfriend...\" mumbled Trevor under his breath.\n\nLinda shot him a dirty look.\n\n\"Is that right? Does this mysterious boyfriend have something to do with your return?\"\n\n\"I was going to get to that part,\" said Linda, annoyed that her brother had maneuvered the conversation for his amusement.\n\n\"His name is Sam and, yes, he's the reason I came back here. He's over at Whitmore and...\"\n\n\"You're dating a professor at Whitmore? How did you two even meet?\"\n\n\"He's not part of the faculty, Mom. He's...um...A student, actually...\"\n\n\"Working on his doctorate?\" asked Marion hopefully.\n\n\"No, he isn't quite that far along.\"\n\n\"Robbing the cradle,\" whispered Trevor and Linda kicked him under the table, but her mother didn't appear to hear him.\n\nLizzie interrupted the conversation with a tray of freshly squeezed lemonade in tall, frosted glasses. \n\n\"Oh! It does my heart good to see the family together again like this...You and Trevor have been gone too long.\"\n\n\"Not just back for a visit either. Back to stay, apparently,\" cut in Marion.\n\n\"Is that right? This calls for a party! Why everyone is going to be so excited to see you're back! Don't you think so, Miss Marion?\"\n\n\"Absolutely! We should call that caterer we used for Cybil Westfield's homeless fund raiser. What was their name? Caulfelds...Caulfields...\"\n\n\"Caldwell's, if I remember right,\" offered Lizzie.\n\n\"That's it! Oh...so much to do...We need the caterer and flowers, music...\"\n\nTrevor and Linda looked on in amusement as their mother darted up from the table and grabbed Lizzie by the arm, pulling her back toward the house while spouting a long list of instructions for this sudden party. They had grown used to this kind of behavior from their mother growing up, focus was not her strong suit.\n\n\"Oh! Linda! Bring that boyfriend of yours to dinner tonight. Your father and I would love to meet him. Seven o'clock sharp!\" shouted Marion before she vanished inside.\n\nThen again, she never missed as much as they thought.\n\n\"Shit...\" said Linda.\n\n\"Maybe this will go down better as a surprise?\" \n\nLinda shot Trevor a dirty look, \"The only thing Dad hates worse than something being unconventional is a surprise. If we combine the two, he might just shoot Sam and I both on the spot.\"\n\n\"You could still go in and talk to her about it.\"\n\n\"Are you kidding? You know how Mom gets when she's in planning mode. I would never get her attention now. No, we will just have to face things head-on tonight. Maybe it is for the best, just get it over with like ripping off a Band-Aid. Hell, I'm a grown woman now, and I can date who I want!\"\n\n\"So you're not afraid of Dad? I'm impressed. I hope Sam feels the same way.\"\n\n\"He'll be fine,\" she answered, but her voice lacked conviction.\n\n\"Should be a memorable dinner, I can hardly wait.\"\n\n\"Yeah, memorable...\"\n\nLinda's apartment was nothing like the massive edifice where her parents lived. A modest two-bedroom in a decent neighborhood near Whitmore college, it at least had the advantage of being conveniently located near her boyfriend. \n\nThe very same boyfriend who was currently wearing a groove in her carpet as he paced back and forth.\n\n\"I thought you didn't want me to meet your family right away?\"\n\n\"I know. This isn't how I had planned it, but with my family, that's par for the course,\" said Linda from the other side of her bedroom door where she was changing.\n\n\"Well, it's no big deal. Parents love me. I'm very charming, you know?\"\n\n\"I've heard that rumor,\" laughed Linda, opening the door.\n\n\"Whew! Are you trying to distract me? We'll be late for dinner,\" said Sam, eying his girlfriend appreciatively.\n\nShe had changed into a tasteful, but still somewhat revealing cocktail-dress of pale-green fabric with dangling gold earrings that contrasted nicely with it. Her hair fell around her face in graceful layers, and her lips shined invitingly in the dying light coming through the window. Sam moved in immediately, sliding his arms around her waist.\n\n\"We don't have time...\" said Linda, though she made no move to extricate herself from him.\n\n\"Then you, Sweetie, shouldn't be so damn beautiful...\" whispered Sam.\n\n\"You'll mess up my makeup,\" she warned him as he leaned toward her.\n\n\"That's a chance we'll just have to take.\"\n\nHis powerful kiss made her knees shake, and instinctively she slid her arms up around his neck. Their warm lips slid perfectly together, Linda sighing gently in the back of her throat. Sam's tongue began to work it's magic, joining hers in a soft embrace. Linda could feel her willpower fading, body readying itself with a surge of blood flooding into her chest, tightening her nipples into hard, erect cherries. She would have loved nothing more than to have her young lover carry her to the bedroom and rip her clothes from her body, but she had been right, this wasn't the time.\n\n\"Sam...Baby...We need to go,\" she said, breaking their hungry kiss.\n\n\"Are you sure? We couldn't be just a little late?\" \n\nThe thought was tempting, but she knew how well that would go over with her father.\n\n\"I'm sorry, Sweetie. You'll just have to try and keep your libido in check. I promise I will make it up to you later.\"\n\n\"You'd better,\" he said with a lascivious grin.\n\nA short time later, they were in the car and approaching her parent's home when Linda sighed heavily, knowing she needed to prepare Sam for what was about to come.\n\n\"Everything okay? You seem tense. I told you I could handle your family. There's no need to worry.\"\n\n\"Sam...I should have been more upfront with you about exactly what my family is like. I don't think anyone can be entirely prepared to meet them.\"\n\n\"I don't understand.\"\n\n\"The thing is, Sam, I come from money, old family money.\"\n\n\"What...like you're rich?\"\n\n\"Well, not me, personally. I turned my back on that when I graduated from school and moved out. I wanted to make my way and not be leaning on the family wealth.\"\n\n\"So how much money are we talking about exactly?\"",
        "Linda had turned up the private drive, and she nodded toward her parent's house.\n\n\"That much.\"\n\n\"Holy shit...\" whispered Sam staring at the biggest house he had ever seen in person. \n\n\"How many families live here?\"\n\n\"Just mine.\"\n\n\"Did you ever get lost as a kid?\"\n\n\"Once or twice,\" she admitted pulling the car to a stop.\n\nLinda turned in her seat, \"Please don't be intimidated. At the end of the day, their still just people. My dad puts his pants on one leg at a time just like you.\"\n\n\"Are you sure? It looks like he could pay to get someone to do that for him.\"\n\nShe put her hand over his, squeezing it gently.\n\n\"Just be yourself. I know if given a chance, they will be just as smitten with you as I am,\" offered Linda while secretly hoping her dad didn't eat Sam alive.\n\n\"What did you tell them about me?\"\n\nLinda hesitated, and Sam immediately picked up on it, \"You didn't mention my age.\"\n\n\"Trevor knows, but...no...I didn't get a chance to tell anyone else.\"\n\n\"Um...You probably should have been upfront with them. This is going to feel like an ambush from their perspective.\"\n\n\"Maybe...,\" she conceded, \"I could have done this better, it's true, but it shouldn't be that big of a deal. I mean, you've always said my age doesn't matter to you, so if my family cares about me, it won't matter to them.\"\n\nLinda managed to say the words with a conviction that she, herself, was certainly not feeling.\n\n\"I hope you're right.\"\n\nLizzie answered the door on the first knock, and if she was surprised upon seeing Sam for the first time, she didn't show it.\n\n\"This strapping young fellow must be the boyfriend Trevor was going on about?\"\n\n\"Sam Morrison. It's a pleasure,\" said Sam offering Lizzie his hand to shake.\n\n\"No, Sir! That will not do! You get in here and give me a proper hug.\"\n\nSam quickly found himself crushed to Lizzie's more than ample bosoms while the large woman gave him a powerful squeeze.\n\n\"It's wonderful to see you two together. What a gorgeous couple y'all make,\" observed Lizzie as she pulled away. Sam's face reddened with embarrassment, but he tried to take it in stride.\n\n\"I think Linda takes care of the looks department. I'm just here to open jars and lift heavy stuff,\" he joked.\n\n\"Don't sell yourself short, Killer. Linda's descriptions did not do you justice,\" said Trevor, descending the stairs to join them.\n\nLinda had warned Sam about her flamboyant brother, and he just smiled at the remark.\n\n\"You must be Trevor, Linda's told me some stories.\"\n\n\"Horrible exaggerations, I'm sure,\" laughed Trevor, shaking hands with Sam, \"I never tied her to chairs and left her to free herself, or stole her stuffed animals and hid them in out of the way places.\"\n\n\"You did both those things!\" protested Linda.\n\n\"Don't let her kid you. She volunteered to be tied up. Linda was convinced when she was ten that she was going to be a great escape artist like Harry Houdini, but all she ever did was struggle for a few minutes and then scream until I let her go.\"\n\n\"I got out a few times.\"\n\n\"Only when I made the ropes so loose anyone could have wiggled free,\" said Trevor with a wink in Sam's direction, \"So, does she still...like to get tied up?\"\n\n\"Trevor!\"\n\n\"You don't have to answer. I can tell from her blush...\" \n\nLizzie clapped her hands together to break up the banter.\n\n\"You folks best head out onto the patio. You don't want to keep your parents waiting.\"\n\nThe three of them fell in together, walking through a house that dwarfed any that Sam had ever been inside. He tried valiantly not to be thrown by the trappings of wealth, but it wasn't easy. \n\nThe sun was setting, but it was still hot outside. Sam felt sweat break out across his forehead, but it was only partly from the heat. His first view was of a woman that looked like a more compact, petite version of Linda, which he rightly assumed to be her mother. Marion Siler was facing sideways, talking to a much taller man with close-cropped dark-brown hair and the steely eyes of a predatory hunter. Sam felt a shudder pass through him at how much this gentleman reminded him of his own father.\n\n\"Mom, Dad, this is Sam,\" said Linda calmly.\n\nMarion, to her credit, managed to hide any adverse reaction beyond a slightly raised eyebrow as she took Sam's hand in her own.\n\n\"Sam...it's nice to meet you...you're uh...well...you're so welcome in our home,\" she managed to say. It was clear she was fighting not to mention how young he looked.\n\nIf only her father had shown such restraint.\n\n\"Is this your idea of a joke, Linda?\" he asked in a deep baritone, \"I have to say, I never did understand your sense of humor.\"\n\n\"It's not a joke, Dad. This is my boyfriend, Sam.\"\n\nSam tried to ignore the sudden tension and stepped up to the bigger man, hand extended outward.\n\n\"Sam Morrison, Sir, it's a pleasure to meet you.\"\n\nFor a space of several seconds, Sam's hand hung in the air untouched. Linda's father eyed it with distaste as if Sam might have something catching, but at last, years of carefully ingrained manners took over, and he took it in his own, however reluctantly.\n\n\"Thank you for inviting me to dine with you,\" offered Sam, hoping to elicit a verbal response from the imposing figure who was scrutinizing him like a bug under a microscope.\n\n\"You're more than welcome,\" cut in Marion when it appeared that Linda's father would never speak.\n\n\"Right...Sam, is it? James Siler,\" said the big man at last.\n\nHe released Sam's hand, but his expression didn't change.\n\n\"Mr. Siler. You have a very impressive home,\" remarked Sam hoping to push past the awkwardness and get some kind of conversation going.\n\n\"It's been in my husband's family for several generations. They trace their lineage back to the original colonists,\" said Marion.\n\n\"Is that right? Wow!\" said Sam, honestly impressed.\n\n\"How do you know Linda?\" rumbled James suddenly.\n\nBefore Sam could answer, everyone heard Trevor mumble, \"babysitter?\" under his breath.\n\nSam swallowed hard, thinking the real answer didn't sound much better.\n\n\"We were neighbors,\" cut in Linda.\n\n\"I used to spend time at the telescope with Linda back in the day,\" said Sam, not mentioning he had been all of twelve-years-old at the time.\n\n\"Are you an astronomy professor as well?\" asked Marion.\n\n\"No...I took a class once, but my interest is more in the form of a hobby.\"\n\n\"What do you do for a living?\" \n\nThere was another awkward pause, and Sam decided to bite the bullet and get things out in the open.\n\n\"I don't have a job. I'm a full-time student at Whitmore.\"\n\n\"In the doctorate program?\" asked Marion hopefully, while Linda rolled her eyes at her mom, going to that well again.\n\nSam smiled wanly, \"In my second year. I'm a sophomore.\"\n\nThis piece of news drew a scowl from James, who was clearly waiting for the punchline to a joke that wasn't coming. \n\nThankfully, before anyone could ask a follow-up question, Lizzie appeared in the doorway to call everyone to dinner.\n\nLinda took Sam's hand in hers as they walked back toward the house.\n\n\"It's going to be okay,\" she whispered to him.\n\nHe merely raised an eyebrow at that. Things certainly didn't seem like they were headed in a good direction.\n\nThe Siler dining room looked like something out of a stage production of \"Camelot.\" The enormous oak table was very spacious. James walked to the head of it, fixing Sam with a glare that made him want to slip underneath the tabletop and not come out until the meal was over.\n\nTwo servants came in carrying trays of food and moved in concert around the table, laying out steaming bowls of soup. Sam eyed the milky liquid curiously, glancing at Linda, who mouthed back, \"clam chowder.\"\n\n\"When in Rome,\" thought Sam tasting some for himself.\n\nIt was a bit salty, but not too bad.\n\n\"Something wrong with your soup?\"\n\nSam looked up, thinking the question had been directed at him, but James was looking down the table at his son. Trevor pushed the bowl back, making a disgusted face.\n\n\"I never did care for clam chowder.\"\n\n\"We can get you something else, Dear,\" said Marion.\n\n\"The boy needs to eat what's put before him,\" grumbled James, \"I don't like seeing good food go to waste.\"\n\n\"I'm not a child, Dad,\" snorted Trevor.\n\n\"When you behave like one, that's how you'll be treated.\"\n\nTrevor met his father's steely gaze with one of his own. The tension in the room ratcheted up quickly.\n\n\"I've never had clam chowder before, not exactly a west coast dish. It's pretty good, though, maybe a little salty,\" cut in Sam.\n\nHis sudden comment distracted everyone as he had intended.\n\n\"It's a New England staple. My mother used to make homemade chowder when I was growing up,\" said James, scooping another spoonful into his mouth.\n\n\"With my mother it was homemade pasta. She used to roll her own and make the most delicious Italian dishes.\"\n\n\"She doesn't anymore?\" asked Marion.\n\nSam ducked his head slightly, running his spoon through the steaming liquid in front of him.\n\n\"My...my mother passed away when I was a teen.\"\n\n\"Oh...I'm sorry, Dear,\" said Marion awkwardly. \n\nThe room got quiet, and Sam berated himself for bringing up his mother. He had only meant to turn the conversation away from Trevor, not make things even more dreary for everyone.\n\n\"What are you studying at Whitmore?\" asked James at last, breaking the silence.\n\n\"Technically, I'm a business major, but I'm thinking of changing to something in the sciences.\"\n\nLinda looked up from her soup bowl in surprise, \"You never mentioned you were thinking about changing.\"\n\n\"I had this mentor that opened my eyes to the wonders of the universe,\" replied Sam with a sly smile.\n\n\"Ha! You'll be joining a long line of starving scientists if you take that route. Best to stick with your first instinct.\"\n\nLinda had begun to return her boyfriend's smile, but her face fell at her dad's words.\n\n\"There's more to life than adding more money to your bank account,\" she said quietly.\n\n\"Spoken like a true liberal arts major,\" laughed James.\n\n\"Why do you always have to put her down? So she didn't want to spend her life moving piles of money around. Linda's smarter than anyone of us in this room.\"\n\nJame's eyes flashed at the challenge in Trevor's tone.\n\n\"Your father was teasing her,\" said Marion, trying for a laugh that quickly faltered when she realized she was the only one making a sound.\n\n\"You have some room to talk. At least Linda has managed to get by on her own. I'll give her that much. While Trevor over here...Well, you seem to have no compunction about siphoning money from your trust fund.\"\n\nTrevor scowled and sat up taller in his chair. It was obvious to Sam that he was witnessing an old family quarrel about to flare up again, and he mentally struggled for a way to deflect the conversation yet again.\n\nA knock at the front door saved him the trouble. They distantly heard Lizzie answering it, and the sounds of laughter and conversation in the hallway before a new face joined them.\n\n\"Look who came to dinner afterall. I'll send out another bowl of soup,\" said Lizzie, moving in the direction of the kitchen.\n\n\"Gina! I didn't think you were coming tonight,\" said Marion, standing to embrace her eldest daughter.\n\n\"I heard that my dear sister was back in town. It's been a long time, Linda.\"\n\n\"Not long enough.\" \n\nLinda's reply, said quietly to the floor through clenched teeth, didn't reach Gina's ears, but Sam heard it clearly and winced. \n\nHe watched as his girlfriend scooted her chair back and came around the table to face her older sibling. The one who had made a game out of ruining her life.\n\n\"So...this is the infamous Gina,\" he thought.\n\nThere were times in the recent past when Sam had tried to imagine how Gina would look. From Linda's descriptions, he had pictured a cross between a Greek goddess and a particularly nasty vampire. It turned out; he hadn't been as far off the mark as one might guess.\n\nGina was beautiful. There was no denying that. \n\nSeveral inches taller than Linda, she stood on a very toned pair of long legs. The kind a woman got from spending hours on the treadmill. They vanished into a short, black, designer dress that had been altered to accentuate every curve of Gina's shapely figure. Her skin was fair, bordering on alabaster, with a translucent quality that made her appear almost inhumanly perfect without a mole or a freckle to blemish it. \n\nThe dress had been cut to tastefully, but very obviously, show off her large, firm breasts, bigger than Linda's by at least a full cup size. \n\nYes, there was a lot to physically appreciate about Gina Siler, but when he reached her face, he felt an unease settle over him. Not because she wasn't attractive, quite the contrary, her face was just like the rest of her a vision of beauty carved from ivory. Gina had the high cheekbones and full lips of a makeup model, the latter covered with a dark lipstick that contrasted brilliantly with her skin tone. Her shoulder-length hair was a deep shade of mahogany brown that perfectly set off her green eyes. \n\nNo, Sam's unease came from the lack of warmth he saw reflected at him. \n\nGina was smiling, but the expression didn't reach her eyes and would have died there even if it had made the journey. She had eyes like her father, the baleful gaze of a predator that measured each moment by its need to devour the weaker beings in its path. \n\nA vampire indeed, cold and calculating, waiting to feed.\n\n\"Hello, Gina.\"\n\nLinda stopped just out of her older sister's reach, not affording her the opportunity to pull her into a conciliatory hug. Her tone was wary, laced with the pain from their last encounter, however long ago. Gina managed to manufacture an expression of sympathy, eyes welling at the corners with tears.\n\n\"Oh, Linda. If I had a dime for every time I've thought about what a terrible thing I did to you. I know you can't forgive me. Hell, I can't forgive myself. I've thought about what I would say to you if I ever saw you again, but words don't seem adequate. Is there any chance, any at all, that you could find it in yourself to allow me to mend the distance between us?\"\n\nIt was a carefully rehearsed speech. Gina adding just the right amount of sadness and a hint of trembling fear to her voice.\n\nLinda didn't speak. She just stood and fixed her sister with a stare that betrayed nothing of what she was thinking.\n\n\"I think it would be wonderful to see you, two girls, getting along again,\" prodded their mother.\n\nSam shook his head slightly. He knew Linda well enough to catch the flicker of resentment in her eyes. She might not dwell on what happened between them anymore, but she wasn't ready to forgive.\n\n\"Oh...please, Linda. Tell me we can try?\" begged Gina.\n\nBefore she could answer, Gina suddenly threw herself into Linda's arms, sobbing softly. It was an award-winning performance, and Sam saw Trevor miming a slow clap as Linda awkwardly held the bigger woman.\n\nMarion Siler jumped up from the table and joined her girls, embracing both of them.\n\n\"It does my heart good to see you two willing to put your differences behind you,\" she said, nearly weeping herself.\n\nLinda turned her head just enough that Sam could read the look of disdain that was plastered there. Gina wasn't fooling her one bit.\n\n\"Your soup is getting cold,\" said James from the far end of the table, clearly uncomfortable with all this emotional nonsense.\n\nGina pulled herself away, and with a last pat on her sisters back, she came around to take a seat to Sam's left, stopping to reach out a hand.\n\n\"Gina Siler. You must be Linda's boyfriend. Mom mentioned you on the phone.\"\n\nHer smile seemed almost genuine this time. A gentle pulling back of full lips from perfectly white teeth. Sam shifted in his chair, not entirely able to suppress a very male reaction to the voluptuous and attractive Gina. Her eyes roved across his young, very firm body, and he saw a glint of desire light her dark orbs.\n\n\"It's nice to meet you,\" he stammered, fighting a rising nervousness.\n\nNow he knew what a trapped animal felt like before being devoured by a hungry beast.\n\n\"I hope you enjoy lamb chops, Sam. It's one of our chef's specialties,\" said Marion.\n\nGrateful for an excuse to tear his eyes away from Gina, Sam nodded at Linda's mother.\n\n\"Sounds delicious. Thanks.\"\n\n\"Dad said you were out on a date last night. Who was the latest victim?\" asked Trevor.\n\nGina laughed, \"Garret White. His parents own that company in Boston that makes custom made yachts. All he could talk about was boats. It was boring.\"\n\n\"So he didn't rate the full treatment. Just a hand job then?\"\n\n\"Trevor! I will not have that kind of trash talk at my table! Apologize to your sister,\" snapped James.\n\n\"Sorry,\" he said with a sly grin that said he didn't mean it.\n\nIf Gina was offended, she didn't show it, and Sam got the feeling this kind of banter was typical for these two. He quietly wondered just what sort of bizarre family dynamic he had wandered into here.\n\nThe main course arrived, and the conversation dropped off as everyone concentrated on their food. Sam didn't mind the silence, and the food was genuinely excellent. He surveyed the table between bites, noting that Linda was avoiding making eye contact with her sister. \n\n\"So, I hear there's going to be a party?\" commented Gina to the room.\n\n\"Oh! Yes! Lizzie and I are working up something to celebrate Linda's return home. I'm sure you would want to help,\" answered Marion.\n\n\"Of course! I would love to pitch in. We should have a band and an open bar, maybe?\"\n\n\"Because loud music and alcohol go over so well with you. I still remember you throwing up all over Aunt Bertha at my twenty-first birthday party,\" laughed Trevor.\n\n\"Jesus Christ! I'm trying to eat here!\" complained James.\n\nGina winked at Trevor before turning her attention back to Sam, making him squirm in his chair.\n\n\"How about you, Sam? Do you like a good dance party? Got any moves you want to show off?\"\n\n\"I'm not much of a dancer; I'm afraid.\"\n\n\"Oh! That's okay. I used to dabble in choreography. I would be happy to teach you.\"\n\n\"I've seen the kind of dancing you're best at, Gina. I think Sam would rather you keep your clothes on,\" said Trevor.\n\n\"That's it! Trevor, you can leave this table,\" said James in a tone that offered no hope of negotiation.\n\nTrevor didn't argue; he just wiped his mouth and hands with a napkin, and with one last smile at everyone gathered around, he departed whistling to himself as he went.\n\n\"Even in silence that kids a smart-ass,\" grumbled James.\n\nDessert was some flaming dish that Sam had never heard of, but it did have a wonderful flavor if a bit too sweet for his palate. \n\nWhen the last plate was cleared from the table, the servants came out to offer coffee to anyone who wanted it. Sam was thinking about having a cup when Linda's dad stood up and motioned in his direction.\n\n\"Sam, why don't you and I take a little walk. I'd like to get to know you better.\"\n\nNervously, Sam scooted back from the table, and with a worried look at Linda, he fell in behind the imposing back of James Siler. \n\nThe older man led him through a maze of corridors deeper into the mansion. Though he had offered this walk as a way of giving them time to talk, James never spoke a word content to plod along quietly until they reached a pair of heavy, wide, oak doors. The room behind was an office with bookcases lining the walls and a giant wooden desk covered in papers and manila folders. \n\nJames took a seat, pausing to pull a cigar from a box on the corner of the desk and making a big show of snipping off the end and lighting the tip. A cloud of pungent smoke surrounded his head while he stared at Sam without offering him a seat.\n\n\"Nice office,\" said Sam at last.\n\n\"What's your game, Kid?\"\n\n\"I beg your pardon?\"",
        "\"You heard me. What's your game? What's this all about?\"\n\n\"I honestly don't know what you're talking about.\"\n\n\"I'm talking about you and my daughter. It's clear this isn't a weird practical joke, so I'm going to assume that your relationship with her is real, at least as far as she knows.\"\n\n\"It is real. I care about Linda very much.\"\n\n\"Right...and I'm supposed to believe that? That a good-looking young gent like yourself just happened to fall for an older woman connected to a very wealthy family? You think you're the first to try and weasel your way into my family fortune by seducing one of my daughters?\"\n\n\"Sir, you're entitled to believe whatever you like, but I swear to you my feelings for Linda are genuine.\"\n\n\"Ha! You're a good actor, Kid. I'll give you that much. I bet Linda looked like a ripe target to you. This poor girl jilted years ago and living a hermits life. It must have seemed like the opportunity of a lifetime.\"\n\nSam was starting to shift on his feet. He had been intimidated at first by this older, more experienced man with all the trappings of wealth and power that surrounded him, but the more he talked, the angrier Sam was getting. He bristled at the accusation that he was faking his feelings for Linda for a big payday.\n\n\"I had no idea until we turned in front of your house that Linda even had money. She never talked much about her family before today, and I'm starting to see why.\"\n\nJames took a long pull on his cigar, letting the smoke pour from between his lips, \"Watch yourself, Son. This is my house and my family you're messing with.\"\n\n\"I don't appreciate being accused of something when I haven't done anything. Bring Linda in here and let her speak for herself. She can tell you I knew nothing about the money.\"\n\n\"You wouldn't be much of a conman if your let your mark know what you were up to. No...there's no reason to drag Linda into this thing. We can settle our differences right now, and you can still come out ahead. That's what you want, isn't it?\"\n\nBefore Sam could answer, James reached into a drawer and pulled out a checkbook, grabbing a fountain pen from the holder on the desk in front of him.\n\n\"I'm going to make this out to cash. What do you think? A nice, even number, say fifty-thousand?\"\n\nSam gritted his teeth and stood from the chair.\n\n\"You know something, Mr. Siler? You remind me a lot of my dad. He thinks you can solve every problem by throwing money at it as well. This is one problem that isn't going away easily. I love your daughter, and all the zeros you write on that check isn't going to change that.\"\n\nIt was the first time James Siler could recall being speechless in his life when the young man in front of him turned on his heel and walked out his study door.\n\nSam stood outside in the corridor, shaking like a leaf on a tree, and it took several long breaths before he could bring himself to start walking back down the long hall in front of him. \n\n\"The nerve of that son of a bitch! Where does he get off trying to...\"\n\nHe stopped half-way down the hallway when it suddenly hit him what he had said in his moment of anger back in Mr. Siler's office.\n\n\"I love Linda...holy shit...\" \n\nIt wasn't like the idea hadn't occurred to him before, but this was the first time he had ever said it out loud. The words bounced around inside his head, made his heart race. He liked the way they sounded and wondered if Linda would as well.\n\nWas it too soon?\n\nHe had no idea. There were no hard fast rules for relationships. He was old enough to know that much, but his situation with Linda was unique, and they had never talked about the depth of their feelings, at least, not yet. \n\nSam mused on the situation as he tried to retrace his steps back to the dining room. It took him fifteen minutes, and several wrong turns before he had to admit that he was lost.\n\n\"Linda wasn't kidding. I could see how she could have gotten lost in here as a kid,\" he mumbled.\n\n\"If you're looking for the bathroom, you're not even close,\" came a female voice from behind him.\n\nSam turned and found himself looking into the dark, mysterious pools that were Gina Siler's eyes.\n\n\"Uh...I think I got turned around somewhere.\"\n\n\"It happens. This place is a maze. Come with me, Little Mouse, we wouldn't want you to get lost here forever.\"\n\nGina stepped close, looping one arm around Sam's and steering him back down the way she had come. She was wearing a strong perfume that filled Sam's nose with the smell of lilacs as they walked together. \n\n\"Ummm...Do you work out? You've got arms like steel,\" said Gina, squeezing his bicep admiringly. \n\n\"Yeah...sometimes. Look, if you could just show me to Linda, that would be great.\"\n\n\"I'm glad to see my father didn't eat you. He has that reputation,\" she replied, ignoring his request.\n\n\"We had a bizarre chat. I don't think he likes me very much.\"\n\n\"My dad doesn't like anyone very much. I wouldn't take it personally. You have to tell me how you and Linda met and got together? I bet that is a fascinating story.\"\n\n\"I'm sure Linda would love to tell it herself.\"\n\nGina stopped, pulling Sam to a halt beside her.\n\n\"You don't trust me, do you? I'm not surprised. I'm sure Linda had nothing good to say about me.\"\n\n\"She said the two of you had...issues in the past.\"\n\n\"Is that how she put it?\" said Gina, a wicked little smile playing across her lips.\n\n\"I'm guessing she told you about Greg? He used us both, you know. I admit it. I let myself get sucked in by his guile and charm. He played the martyr so well, and I've always had a weakness for men in need. I went where I shouldn't have, and I'm willing to take the blame for that part, but you weren't there, Sam, you didn't see how vindictive Linda got afterward. I mean, I'm her sister, her flesh and blood, and she wouldn't even talk to me about it. I would have done anything to heal the wounds between us.\"\n\nGina laid it all out so reasonably in a voice so laced with hurt and pain that Sam almost felt sorry for her. \n\n\"I got the impression that Greg wasn't the first.\"\n\n\"Oh, we had our share of tripping over each other when it came to boys when we were younger, but what sisters don't have that happen? I would never have let it come between us the way Linda has in the past. She can be a bit petty that way.\"\n\n\"I've never known Linda to be petty about anything,\" he replied defensively.\n\n\"Sweetie! Don't get me wrong, I love her to pieces, but you didn't grow up with her. She had the 'Little Miss Innocent' act perfected by the time she was a teen. I always got the blame whenever there was drama. I didn't take it personally though it was just the typical growing pains between two siblings.\"\n\nSam being an only child, didn't know how to answer that. He had often longed to have a brother or sister to share his burdens with, but he doubted any relationship he would have had with them would resemble what passed for sibling love in this family.\n\nGina started walking again, pulling Sam along. She eventually led him back into the foyer outside the dining room. Linda was there talking to her mother, and she frowned when she spotted her sister arm-in-arm with her boyfriend.\n\n\"I found the poor boy wandering lost, but don't worry, I brought him back safe and sound,\" announced Gina.\n\nShe patted Sam's arm one last time, seeming to linger on his bicep giving it a parting squeeze.\n\n\"Um...Um...We will have to spend more time together now there you're dating my sister. I can't wait to get to know you better.\"\n\nGina walked off with a wave at her mother and sister. Linda came straight over to Sam while shooting daggers with her eyes at Gina's retreating backside.\n\n\"Is everything okay? How did it go with my dad?\"\n\n\"I think maybe we should talk about it in the car,\" said Sam.\n\nMarion Siler walked them out, stopping to hug Sam.\n\n\"I'm glad you came to see us, Sam. I hope we see more of you. Any man who can put a smile on Linda's face is welcome here.\"\n\nHe sensed that, unlike her daughter, Marion was genuine, and he was glad at least one family member seemed normal and didn't have an agenda.\n\nAs soon as they were in the car, he let out a long breath.\n\n\"That was something,\" he said, not sure how to characterize the experience.\n\n\"I should have given you more warning about how quirky my family can be.\"\n\n\"Quirky? Is that what you call it? You're dad offered me fifty grand to break up with you.\"\n\nLinda slammed on the breaks.\n\n\"He did what!?\"\n\nSam recounted his encounter with her father while Linda stewed in the driver's seat, her face getting redder the whole time.\n\n\"I can't believe it. I mean, I know my dad can be controlling and manipulative, but...I'm so sorry, Sam. He had no right to treat you that way, and that is exactly what I'm going to tell him!\"\n\n\"It's fine. I think I made my thoughts on the matter clear to him. Besides, I would never dump you for fifty-thousand bucks. It would have to be six figures, at least.\"\n\nLinda glanced over and saw the teasing grin on her boyfriend's face.\n\n\"Sam!\" she said, smacking his arm and returning his playful smile.\n\n\"We probably shouldn't be idling in the middle of the road,\" he pointed out.\n\n\"Oh! Right!\" \n\nLinda got the car moving again and drove them back to her apartment. Sam followed her inside, where she tossed her purse on the couch and went to the fridge to get a drink. He watched her, leaning on the kitchen counter while she drank a glass of apple juice.\n\nAs she sat the glass in the sink and began to wash it out, she tossed off an idle comment over her shoulder.\n\n\"You didn't tell me what you thought of Gina?\"\n\n\"I don't see how you two grew up as sisters. You're nothing alike. She's...kind of scary.\"\n\n\"Not many guys think that,\" replied Linda turning around.\n\n\"I found her intimidating like your father.\"\n\n\"Do you think she's pretty?\"\n\nSam drew a breath, this was one of those questions that were always a trap with a girl, but he sensed that she wanted honesty, so that is what he gave her.\n\n\"Yes. Gina is not unattractive. I would go so far as to say she is probably one of the four or five prettiest women I've ever met.\"\n\n\"Jesus! Sam...You don't have to go that far.\"\n\nHe stepped away from the counter, walking over to stand in front of his girlfriend.\n\n\"Gina is very pretty, but you're beautiful, Linda.\"\n\nShe had been looking down at his approach, but she looked back up now.\n\n\"Pretty...Beautiful...What's the difference?\"\n\n\"The difference is that lots of girls are pretty. They have pretty eyes or pretty skin. Their ass looks great in a pair of jeans. Beautiful girls? Those are a lot rarer. They have all the things the pretty girls have, but it goes so much deeper. They're beautiful because of what is on the inside, their heart and soul. The way they care about more than just themselves. The way they make every day a little better just by being there. A guy is truly lucky when he meets a girl like that. I was truly lucky.\"\n\n\"Oh...Sam.\"\n\n\"Your sister is pretty, Linda, but you're more beautiful than she could ever be and...I love you.\"\n\nLinda's eyes filled with tears, and she threw herself into her boyfriend's arms.\n\n\"Sam...Oh...God, Baby...I love you, too...I love you so much!\"\n\nThe right time, after all.\n\nSam wiped at her tears with the back of his hand, smiling at her distress as she fought to gain control over her emotions run wild. She laughed self-consciously, reaching up to rub her nose.\n\n\"I must look like shit.\"\n\n\"No...you don't.\"\n\nHer face took on an expectant look as Sam brought his lips to hers for a soft, gentle kiss. \n\nThey parted but immediately came back together, feeling the sudden rising heat between them that always seemed to trigger when they were alone. A desire both struggled not to give in to at times when more pressing real-life matters reared their ugly heads.\n\nThere were no such distractions to worry about now. \n\nLinda sighed as Sam slid his tongue into her mouth, kissing her more deeply, ratcheting up the growing excitement between them. She pulled him closer, wrapping her arms around his young athletic body, joined her tongue to his in a slick, pleasurable dance. \n\nTheir soft moans filled the tiny kitchen, lips sliding around faster, tongues darting back and forth, breaths coming in noisy unison.\n\nSam broke free, bringing his warm, moist lips to Linda's neck, rubbing them on the silky flesh he found there. She held one hand to the back of his head, biting her lower lip as the passion inside her swelled.\n\n\"Sam...Baby...I need you.\"\n\nHe pulled back, eyes shining with the fire he felt for her but didn't bother to answer her with words. His actions spoke more than loudly enough.\n\nLinda's expression registered surprise that quickly turned to mutual lust when Sam casually ripped her blouse open, sending buttons flying all over the tile floor.\n\n\"Oh! Sam!\" she cried, giving him a wicked, inviting smile.\n\nThey had made love many times in the recent past, but with perhaps the exception of their first night together, they all paled in comparison with the way Sam Morrison took her at that moment. \n\nLinda's feet left the kitchen floor as he lifted her and carried her straight backward, placing her on the edge of the counter, the sink right behind her. Her shirt ended up quickly tossed aside, and Sam didn't waste time with the hooks on her bra instead just yanking down both cups and covering her already fully erect, dark-pink nipples with his mouth, sucking them roughly, adding fast flicks of his tongue. \n\n\"Oh! God! YES!\" \n\nHis hands were all over her breasts, squeezing them tight while he covered her areolas with hot kisses and long, sexy licks. Linda pulled his mouth back to hers, showing him just how turned on he was making her by almost choking him with her tongue in a wild, passionate French kiss. He let her off the narrow counter long enough for her to unzip her skirt and push it off on the floor while he removed his shirt and began to unbuckle his belt.\n\n\"Let me,\" she gasped, dropping to her knees.\n\nSam leaned slightly back to get a good view while his girlfriend hungrily engulfed his cock between her full, pink lips and started to suck him more frantically than ever. Linda was grunting like an animal in heat, mouth going fast and hard up and down his shaft, hands rubbing and massaging his cock and balls with such insistence it appeared like she was trying to swallow the whole package. He made to grab onto the counter with one hand, throwing his head back and gasping for breath.\n\n\"Jesus! Linda! Fuck! I've never seen you so hungry!\"\n\n\"Ummmm...MMMpphhhh...Fuck, I want you so bad, Sam...I want to feel...UMMmmmm...Mmmmphhhmm...every inch of you!\"\n\nHer feet left the floor once again, Linda's tight ass deposited precariously on the edge of the sink while Sam pushed her legs apart. She was wearing a narrow thong that barely got in the way as he slid the thin piece of lacy silk aside and, with no hesitation, plunged his wet cock right into Linda's well-lubricated vagina. The puffy lips guarding her entrance parted wide and stretched almost obscenely around the base of his thick shaft as it rammed home, the swollen head burying itself deep.\n\n\"YES! OH FUCK! SAM!\" screamed Linda.\n\nThey started to share a brutal looking fuck, bodies writhing on the kitchen counter, Sam's hips a blur between Linda's legs. Her cries of pleasure reverberated off the walls, mixing with Sam's grunts and groans into a symphony of aroused sexual passion. \n\nAt some point, Linda leaned further back to give Sam an even better angle, wanting him deeper, to feel all of him that she could. Inadvertently, her back hit the faucet sending cool water pouring into the basin. Taking a sudden inspiration from the sound of it, Sam reached behind her and filled his hands, promptly dumping it right onto her chest. Linda's nipples lept even further outward, areolas tightening into cherry-red circles. She let out her loudest cry yet when he quickly followed up by taking her now dripping breasts into his mouth, letting his warm tongue steal the chill from her tortured nips.\n\nLinda returned the favor, reaching behind her to gather some water into her palms and spreading it all over Sam's chest, licking and kissing his stiff nipples. They began to rub each other with wet hands, sharing hot kisses moisened by the water that dripped from their damp hair.\n\nTheir sloppy, wet, fuck gathered speed, desperation written on Sam's face as his balls surged with the pent up need to release.\n\n\"Oh! Linda! LINDA! I...I can't stop it!\"\n\n\"Cum inside me! Fill me, Sam! I want to feel you cum in me so bad! Look at me! Look in my eyes, Sam!\"\n\nHe stared into his lover's wide eyes, seeing the fire certainly, the wildness of her need naked and bared to him, but there was something more there now. There was an even more profound intensity to her gaze, a longing that he realized only he could fill. \n\nHim, Sam Morrison, the man she loved.\n\n\"I'm going to cum,\" he whispered tightly.\n\n\"So am I...\" she gasped.\n\n\"Linda...Oh! Linda! I love youuuuuu!\" he cried, arching his back and letting his cock explode as deep in her as he could.\n\n\"SAM! I feel it! Ah! So warm! Ohhhh! SAM! I love youuuuu!\"\n\nThey clung to one another while their bodies shook, mutual orgasms making them tremble and strain, Sam's seed flooding Linda's womb in creamy waves.\n\n\"Sam...that was so good,\" said Linda quietly, leaning up to kiss his firm mouth.\n\nHe carefully brought her down off the cabinet, making sure she had good footing on the slippery floor before releasing her.\n\nLinda turned to shut off the faucet then glanced around at her now somewhat water-logged kitchen.\n\n\"We made a mess.\"\n\n\"That's what I like about you, Sweetheart, nothing escapes you.\"\n\nShe laughed, throwing her arms around her boyfriend's neck.\n\n\"We can clean it up later. I think I want the comfort of a bed next.\"\n\n\"Whatever makes you happy.\"\n\n\"So young, and you've already figured out the secret of a good relationship.\"\n\nIt was Sam's turn to laugh while he lifted the woman he loved into his arms and carried her to the bedroom.\n\nA NIGHT OUT -\n\nSam liked to study outside if the weather permitted and today had so far been gorgeous. He sat at a table near the student union flipping through a textbook while his roommate, Derek, lounged across from him, taking notes on a yellow legal pad.\n\n\"I don't know how I ever talked myself into the idea of going pre-med.\" \n\n\"I thought it was because you already had a leg up after being a medic in the army?\" said Sam.\n\nThe fact that Derek had turned out to be four years older than him had come as a surprise. The gregarious youth came off as much younger, and Sam had to admit he had been a bit intimidated when he had first found out thinking his friend seemed so much more worldly to him now. Derek dismissed Sam's concerns with a wave of one meaty hand, explaining that his stint in the army had paid for his college and hadn't been all that exciting.\n\n\"I was a line medic. I wrapped a few broken bones, patched up some cuts and bruises. All of that is a long way from being a real doctor.\"\n\n\"You're a smart guy, Derek. If you put your mind to it, I have no doubt you will make a fine physician. Heck, think of all the pretty young nurses you'll be able to impress.\"\n\n\"It's one of the things that keeps me going,\" admitted Derek with a chuckle.\n\n\"You didn't say how dinner went with Linda's family? Were they shocked to find out she was dating a younger guy?\"\n\nSam closed the book in front of him, leaning back and taking a deep breath.\n\nI have to say it was probably one of the oddest dinners I've ever attended. Let me tell you, out of her family, Linda is the most normal one. The rest of them are all some level of nuts.\"\n\n\"Like how nuts?\"\n\nSam filled him in briefly, including about how Linda's father had tried to buy him off.",
        "\"Wow! He has some nerve, huh? Unless you took the money, in which case you're buying dinner.\"\n\n\"Ha! I didn't, but you're right. He did have a lot of nerve. I sort of feel sorry for his family. It was clear to me that Linda's dad is very manipulative. I'm betting that's where her older sister got it from.\"\n\n\"This older sister...\"\n\n\"Gina.\"\n\n\"Right, Gina. Didn't you say she was tall, dark-haired, and pretty? Kind of like a fair-skinned Kim Kardashian?\"\n\n\"Something like that. Why?\"\n\n\"Because I think she's coming up behind you right now.\"\n\nSam turned in his seat and winced when he realized Derek was right. Gina Siler was coming up the sidewalk, drawing more than a few stares from passersby. Her outfit was the most likely reason since she was wearing a crop top that barely contained her large breasts and jeans that looked painted on. \n\n\"I think someone is trying too hard,\" commented Derek under his breath.\n\nSam had to agree though Gina didn't look embarrassed by her overt display of feminine assets. He had to admit, for a woman pushing forty, she could have easily passed for being ten years younger. \n\n\"Hey, Sam! I thought that was you,\" said the tall brunette stopping near the table.\n\n\"Gina. What a surprise. This is my roommate, Derek.\"\n\n\"A pleasure,\" he said, but Gina barely acknowledged him with a nod.\n\n\"What brings you to campus?\"\n\n\"Well...Truthfully, I was looking for you. I was on my way to your dorm when I saw you sitting here.\"\n\n\"How did you know where to find me?\" asked Sam, confused.\n\n\"Oh...yeah...See, my family donates a lot of money to the college, so it just took a few phone calls to find out where you lived.\"\n\nSam didn't know what to say to that, and a tense silence followed this pronouncement. \n\n\"I can see that you two need to talk. I'll see you back at the dorm, Sam.\"\n\nThe older student got a pleading look from Sam but left with a grin.\n\n\"Asshole...\" muttered Sam.\n\nGina didn't seem to hear as she joined Sam at the table. Sitting so close, her perfume almost choked off his air.\n\n\"What can I do for you?\" he asked politely.\n\n\"I heard what happened between you and Dad,\" she said sympathetically, \"I just wanted to make sure you weren't going to let him run you off. I mean, it's obvious how good you are for Linda, and I wouldn't want him to ruin that for her.\"\n\n\"Watching out for your sister?\"\n\n\"I don't seem like the type from what Linda has told you, do I? Maybe I'm trying to turn over a new leaf? You know, make up for my sordid past.\"\n\n\"Are you?\"\n\nGina managed to look embarrassed, turning her eyes away from Sam to watch other students passing them. \n\n\"I won't lie. Linda and I have had our differences, and maybe, just maybe, I could have been nicer to her about certain things.\"\n\n\"Things like stealing her boyfriends?\"\n\nGina's eyes flashed, and she gave a mirthless chuckle.\n\n\"A lot of that was just what I told you before, fickle teenage shenanigans. The only serious relationship I messed with was the one between her and Greg.\"\n\n\"I think Linda would disagree, and besides, even if you thought it was all in good fun, clearly Linda didn't. Why didn't you stop?\"\n\nGina looked down at the table, licked her shiny red lips in thought.\n\n\"Jealousy. Linda had good-looks and brains. All I had was the looks. The only advantage I had over her was maybe I was a bit prettier, a bit more desirable to your average male, so perhaps I played on that a little more than I should have. Hey! I was young and selfish! Who wasn't at that age?\"\n\nSam would have been willing to bet Linda hadn't been.\n\n\"Let's not dwell on the past. We should be talking about the future. I'm glad you brought Linda home, we've missed her these past nine years.\"\n\n\"Your dad doesn't seem quite so thrilled.\"\n\n\"He's just protective of his girls. You know how dads can be about their daughters, but I can tell just by looking at you that you're one of the good ones. Frankly, I'm a little jealous.\"\n\nSam felt a tickle on his thigh and looked down to see Gina's hand on it. He looked back up at her raising an eyebrow.\n\n\"Sorry...old habits. I have trouble not flirting with a good-looking guy.\"\n\n\"I should probably get back to studying,\" murmured Sam, standing from the table. \n\n\"Wait! Don't run off so soon. I was hoping we could get to know each other better.\"\n\n\"This isn't a good time, Gina.\"\n\n\"How about we do lunch tomorrow? My treat.\"\n\n\"Is Linda invited?\"\n\n\"Bring whomever you like,\" she replied, but he caught no small hint of disappointment in her voice, \"even that Eric guy.\"\n\n\"Derek.\"\n\n\"Sure, him.\"\n\nGina stood up with him, and before he could move away, threw her arms around his neck in a hug. He stumbled, trying to hold her, and she took advantage of their nearness to plant a swift, soft kiss on his cheek.\n\n\"See you soon,\" she whispered in his ear.\n\nSam watched her walk away, shaking his head.\n\n\"Turn over a new leaf...my ass.\"\n\nHe found Derek sitting at his desk a short time later in their dorm room and tossed a pillow in his direction.\n\n\"Thanks for leaving me alone out there!\"\n\nDerek laughed, smacking the fluffy projectile out of the air, \"Sorry, Dude. I couldn't resist. What happened after I left? She looked like she wanted to have you for lunch.\"\n\nSam flopped onto his bed, tossing his books aside.\n\n\"Gina tried to feed me some song and dance about her just wanting the best for Linda and making sure I wasn't going to get scared off by her dad, but I doubt her motives are that pure. I think she just likes the forbidden fruit if you get my meaning.\"\n\n\"The girl who only likes candy when it belongs to someone else? I know the type. So what are you going to do about it? Tell Linda?\"\n\n\"Linda will probably figure it out on her own, eventually. I'm kind of hoping that if I keep dissuading her, she will lose interest and move on to easier fishing somewhere else. It would be nice if we could all co-exist together. Gina is a shark, but she's still my girlfriend's sister.\"\n\n\"I don't envy you your new family dynamic.\"\n\n\"I guess you have to take the good with the bad in any relationship, but I grant you I had no idea the amount of crazy that was running rampant through this crew.\"\n\nSam had no idea how much he was about to find out that was true.\n\nThat night, he met Linda for dinner at her apartment. He had decided not to mention Gina's trip to campus that day, and he and Linda were focused on enjoying their meal and talking about her new job at a private teaching academy.\n\n\"I forgot how pampered some of the kids of the idle rich are in this town. I gave out the most basic homework assignment today, and you would have thought I had asked them to write the whole thing in their blood.\"\n\n\"Didn't you used to be one of those kids?\"\n\n\"I admit I probably enjoyed the privilege of my parent's wealth on more than one occasion, but I like to think I tried to keep some perspective.\"\n\n\"I can't even imagine you playing the role of the spoiled rich kid.\"\n\n\"It was a role Gina found easier to play than I did.\"\n\nSam made a face at the mention of Linda's sister. One she didn't miss.\n\n\"I warned you my sister was going to be a lot to stomach,\" she said sympathetically, \"Given my dad's behavior, I guess I should say that about most of my family.\"\n\n\"Your mom seems nice, and Trevor seems like he can be a good guy when he wants to be. He dotes on you.\"\n\n\"Trevor's a doll most of the time, but he has a lot of issues.\"\n\n\"You mean with the drugs and alcohol?\"\n\nLinda nodded, \"He says he has cleaned up for good this time, but I wonder how long before my dad pushes him too far, and he turns back to his old habits for comfort.\"\n\n\"Is his being gay that difficult for your dad to accept?\"\n\n\"I know in this day and age you would think it would be a lot easier to be out in the open about it, but this town is still very conservative, and my family is one of the community's founders. We're seen as the standard-bearers for old-world values, and that doesn't include what some folks around here see as deviant sex practices.\"\n\n\"Wow...I guess I am far from home.\"\n\n\"Times are starting to change as the old wealthy families get taken over by a younger generation, but for now, it's hard to find acceptance.\"\n\nLinda had barely stopped speaking when her cellphone rang. She went to answer it while Sam carried their dirty plates to the kitchen.\n\n\"Gina! Calm Down! I can't understand you when you're yelling. What! Well, how bad is he hurt? Huh? Then call an ambulance! You can't! Why? Oh! For God's sake...Just stay where you are. We're coming to you.\"\n\n\"What was that all about?\" asked Sam with concern.\n\nLinda was grabbing for her purse, tossing her phone inside as she turned.\n\n\"Trevor and Gina were out, and he's gotten into some kind of trouble. I'm not sure what. It was hard to make heads or tails out of what Gina was babbling about on the phone. I did get an address and a name.\"\n\n\"Let's go,\" advised Sam.\n\nThe address turned out to be a bar on the outskirts of town. It was packed for a weeknight with a parking lot bulging with cars. The sounds of loud music came blaring from inside every time the door was opened. \n\nLinda called Gina back as soon as they arrived, and she directed them to where she was parked. \n\nThey found her expensive B.M.W. convertible in a parking spot on the far edge of the lot. Gina was pacing back and forth, clearly agitated as they pulled up.\n\n\"What's going on? Where's Trevor?\"\n\n\"He's in the backseat! We separated for a little while because he met someone he was interested in, and then the next thing I know, he's texting me that he was in the parking lot and...\"\n\n\"What was he doing in a bar in the first place? He's not supposed to be drinking!\" snapped Linda.\n\n\"He wasn't,\" said Gina defensively, \"Trevor and Dad got into it, and he just wanted to get out of the house. He begged me to take him with me. I told him where I was going, and he promised to stick to soda or water if I let him tag along. I didn't see the harm.\"\n\n\"Jesus, Gina...\" said Linda with exasperation.\n\nWhen she opened the car door, their eyes all fell on Trevor, who had seen better days. He looked totally disheveled, hair messed up, clothes dirty as if he had rolled across the parking lot. His face was lightly bruised on one side, and he was holding his ribs.\n\n\"Trevor! What the hell happened to you?\" asked Linda while kneeling.\n\n\"I proved once again that I have delightful taste in men. This rather strapping looking blond-haired gentleman enticed me into a potential liaison off the premises. I have to admit that I was so taken in by his physique and piercing blue eyes that I was a willing slave to my hormones. Sadly, it was all a ruse to allow him and some of his former prep-school buddies to play whack the gay pi\u00f1ata. At least they stayed mostly away from my face. OUCH!\"\n\nLinda had tried to move his hand to get a look at his ribs, but Trevor jumped when she touched him.\n\n\"We should get you to a hospital. You could have some broken ribs...\" observed Sam from over Linda's shoulder.\n\n\"I can't. Dad would find out in a heartbeat, and the word would go out all over town. It was the same reason I wouldn't let Gina call the cops. I have enough on my plate without giving Dad even more reasons to hate me.\"\n\n\"Certainly, the doctors could be trusted to keep patient confidentiality?\"\n\n\"Oh, Sam! If only that were true. You're talking about a hospital that has two wings named after my family. I doubt anyone there would be able to keep their mouths shut if James Siler's son came into the emergency room after getting destroyed by some ruffians.\"\n\n\"He's right. We can't take him to the hospital,\" said Gina matter-of-factly.\n\n\"We can't very well leave him in your back seat. He could be seriously hurt,\" pointed out Linda angrily.\n\nThe two sisters looked as if they were about to tear into each other when Sam stepped between them.\n\n\"Let's take him back to your apartment for now. I know someone who might be able to help,\" he said in as calm a tone as he could manage.\n\nGina turned on her heel with a grunt of disgust in Linda's direction and got into the driver's side of the car while Sam carefully shut the door after checking that Trevor was buckled in.\n\n\"Who do you know that can help?\" asked Linda as they slipped back into her car.\n\n\"I have a friend who has seen worse than this, I imagine.\"\n\nIt took Sam three tries to get Derek to answer his cell. He had been in the middle of a hard-fought battle royale on his Playstation and not happy about being interrupted. As soon as Sam explained the importance of the situation though, Derek agreed to meet him at Linda's apartment.\n\n\"I need to pick up a few things on the way. Give me thirty minutes,\" advised Derek.\n\nThe trio had managed to gingerly get Trevor out of the car and onto Linda's spare bed by the time a knock came at the door.\n\n\"I can't thank you enough for coming,\" said Sam upon opening the door.\n\nDerek nodded as he entered, \"If he's hurt that badly, he should still be going to the emergency room.\"\n\n\"Good luck convincing him of that.\"\n\nTrevor was lying on the bed, keeping up a steady commentary on the inadequacies of Linda's department store mattress. His eyes lit up when Derek walked in the room, and he tried to straighten up but winced and groaned in the process.\n\n\"Don't move around too much!\" said Derek with concern.\n\n\"Whatever you say, Doctor,\" replied Trevor in a tight, pain-filled voice.\n\nDerek set to work checking Trevor over while the others looked on. After satisfying himself that the other man didn't have any broken ribs, he helped Trevor sit up so that he could get his shirt off him.\n\n\"Undressing me? You haven't even bought me dinner yet,\" said Trevor jokingly.\n\nDerek laughed while handing Trevor's shirt to Linda.\n\n\"You're lucky you're in such good shape. The extra muscle mass probably helped protect your ribs.\"\n\n\"Are you saying it's obvious I work out?\"\n\n\"He can't be hurt that bad if he has the presence of mind to flirt,\" whispered Sam to Linda.\n\n\"Trevor flirting is a reflex action. At least your roommate is taking it in stride.\"\n\n\"Yeah. One thing I learned about Derek early on, in addition to his time as a soldier, is that he is equal opportunity in that regard.\"\n\n\"Oh?\"\n\n\"He more or less swings from both sides of the plate. Don't worry. He told me long ago that I'm not his type, plus I'm spoken for already,\" teased Sam.\n\n\"Yes, you are,\" said Linda with a smile, squeezing her boyfriend's arm. \n\n\"Can we get some more light in here?\" asked Derek while laying out some helpful stuff he had picked up at the pharmacy along the way.\n\n\"I have a flashlight in the kitchen,\" said Linda.\n\nAfter retrieving the flashlight, Derek chased the others out while he cleaned Trevor's wounds and bandaged his ribs. He exited the room an hour later, stretching as he joined the other three in the apartment's small living room.\n\n\"As I said, your bother is a lucky guy. It's mostly just a lot of bruising. He's going to be sore as hell in the morning and for the next few days, but he'll live. I would still prefer that he see a real doctor, there could be deeper injuries I'm missing, but otherwise, he should be okay.\"\n\n\"We can't let Dad see him until his face heals up,\" said Gina from where she lounged in a chair across from the couch.\n\nLinda looked around and shrugged, \"I suppose he could stay with me for the time being.\"\n\n\"It would probably be a good idea for someone to stay with him for tonight and tomorrow. Just in case I'm wrong and he gets worse.\"\n\n\"I have to give an exam at the academy tomorrow. I can't miss work,\" said Linda.\n\nDerek and Sam had a similar problem leaving all eyes on Gina.\n\n\"Hey! I have yoga in the morning and a Pilates class in the...You know what, I can watch him, no problem,\" said Gina, course-correcting her words when she saw the incredulous looks being directed back at her.\n\nSam walked Derek out while the two sisters discussed handing off Trevor in the morning.\n\n\"I appreciate you coming, Derek. You were a life-saver.\"\n\n\"Ah! Man...I do love being a hero. Don't worry about it. I'll come by after class tomorrow and see how he's doing. You know, for all the rich-boy bluster, he is kind of hot in a narcissistic way.\"\n\n\"I think you just summed up Trevor Siler in one sentence.\"\n\nDerek chuckled at that as he walked away to his car.\n\nBy the time he returned, things had settled down inside. Gina was getting ready to leave, and Linda was helping Trevor to bed, careful not to touch his sore ribs.\n\n\"Been a long time since you tucked me into a bed,\" teased Trevor.\n\n\"Get some sleep...if you need anything?\"\n\n\"I'll be fine. Derek gave me some Tylenol P.M. I'll sleep, that crap always knocks me right out.\"\n\n\"I'm glad you weren't hurt too bad.\"\n\n\"So am I. I'm thankful you and Sam were there. He's a good guy, by the way, Sam, I mean. Derek's no slouch either but not for the same reason...\"\n\nLinda smiled, \"Yeah, Sam is as good as they come.\"\n\n\"You're in love with him, aren't you?\"\n\nShe blushed slightly, a bit of pink coloring on her fair cheeks.\n\n\"Yes,\" she admitted timidly.\n\n\"You don't sound sure.\"\n\n\"It isn't that I don't love him. I just...feel like I'm waiting for the other shoe to drop sometimes. I haven't had much luck in my life when it comes to relationships.\"\n\n\"A lot of that wasn't your doing.\"\n\nLinda looked at the door, imagining Gina on the other side.\n\n\"I know.\"\n\n\"Do you?\"\n\nShe looked back, frowning, \"What's that supposed to mean?\"\n\n\"I always wondered if you ran away after Greg because you were angry with Gina, or scared that you lost him because you weren't good enough to keep him.\"\n\n\"I was tired. Tired of finishing second to my sister. I wanted space to lead my life without her interfering in it.\"\n\n\"Yet you moved to the other side of the country and became practically a shut-in? It doesn't sound like you were leading much of a life to me.\"\n\n\"What do you know about it? Do you have any idea what it's like to be betrayed over and over by someone whose love is supposed to be unconditional?\" shot back Linda, her voice going up in volume.\n\n\"Actually, I kind of do,\" replied Trevor with a sad smile.\n\n\"Oh...right. I'm sorry, Trevor. I guess Greg and Gina is still a trigger for me. You're right, though. I didn't run away just to put distance between Gina and I. When I hit the opposite coast, I sank into a depression, blamed myself for what happened. I guess I quit for a long while and decided never to deal with that kind of betrayal again by walling myself off from the possibility.\"\n\n\"How did that work out for you?\"\n\n\"I was miserable,\" she answered in a hushed tone, \"I didn't admit it to myself, but I was miserable the whole time. Sam saved me. He came along and made me see what a fool I had been for so long.\"\n\n\"So, you see? There's nothing to be afraid of, Linda. If I were you, I would celebrate what you have with Sam. There are no guarantees in life, but the two of you have a good thing. Don't mess it up by thinking you don't deserve it.\"\n\nTrevor let out a yawn, and Linda came closer, pulling up the blanket.\n\n\"You need to sleep. We can talk in the morning.\"\n\n\"I like my eggs scrambled with bacon and my coffee with two sugars.\"\n\n\"Oh, I can see that living with you is going to be a hoot!\"\n\n\"I can't help it. I'm high maintenance but very decorative.\"\n\nLinda snapped off the light with a shake of her head and slowly closed the bedroom door behind her.\n\nShe found Gina had gone, and Sam was sitting alone on her couch, flipping through T.V. stations. \n\nLinda joined him, curling up against his side as he slipped an arm around her drinking in the fresh wildflower smell of her hair.\n\n\"Did you get the boy down?\"\n\n\"Very funny, but, yes, Trevor is sleeping.\"\n\nSam acknowledged her with a sigh, settling at last on an old Rock Hudson movie on cable.",
        "\"Is this all too much?\" she asked quietly.\n\n\"Is all what too much?\"\n\n\"My family. All this drama. I'm sure you never bargained on it when you got with me. I would understand if you were having second thoughts.\"\n\nHe muted the volume, shifting on the couch to look into Linda's worried eyes.\n\n\"Do you think you're going to get rid of me that easy? Every family has its drama. I only care about two things. You and I. Everything else is just the background noise of life. Sometimes it's a pleasant distraction, and sometimes it's a pain in the ass, but it doesn't change how I feel about you.\"\n\n\"You're too good to be true,\" she said, touching his face.\n\nThey shared a soft kiss and then another, lips sliding slowly together and parting. \n\n\"How heavy a sleeper is your brother?\"\n\n\"Why? You plan on making some noise?\"\n\n\"I think you might...\" said Sam, pulling her closer.\n\n\"I love that confidence.\"\n\n\"Here's something else you'll love,\" he whispered, leaning in to kiss her neck.\n\n\"Oh...yes, please...\" groaned Linda softly.\n\nHis tongue traced a hot line down toward her collar bone, making her shudder in Sam's strong arms. Those same strong arms that suddenly encircled her body and lifted her with ease.\n\n\"Where are we going?\" she whispered.\n\n\"Somewhere we can drown out those constant moans of yours.\"\n\n\"I'm not the only one that makes some noise, you know!\"\n\n\"I don't think you realize how loud you get,\" chuckled Sam.\n\nTheir destination turned out to be her bathroom, where Sam gave the shower handle a turn sending a cascade of warm water blasting outward. He turned and pulled Linda back to him, covering her rich, full lips with his and sliding quickly into a deep, passionate French kiss that made her knees shake. His hands slipped under he t-shirt, stripping it off over her head to expose the white, lacy bra she wore underneath.\n\n\"I never get tired of looking at you,\" he said in a voice that was growing thicker by the second.\n\nLinda let out a long, ragged breath as Sam descended on her chest, divesting her of her bra's restraining material. A small avalanche of flesh was unleashed, her large, round tits bouncing free to come to rest on her chest. Sam covered her perfect mounds with his hands, squeezing them, making her already swollen, erect nipples leap out even further for his inspection. She couldn't hold back a louder groan when he began to suckle her deep, pink nips and was glad he had turned the shower on first.\n\n\"Told you...\" he said with a grin, as she tried and failed to keep her voice down.\n\n\"Shut up and get in this shower with me,\" whimpered Linda.\n\nSam removed his clothes in record time.\n\nThe curtain parted, and they stepped in together, hot water splashing across their bodies. Linda took charge, wrapping her arms around Sam's neck and bringing his lips back to hers, kissing him deeply before breaking free to cover his hairy chest with more kisses, letting her tongue run over his six-pack abs as she sank to her knees. Sam's cock, long, fat and hard, dripped with water the reddish-purple head puffed up with blood from his arousal. She didn't break stride, taking him into her mouth, letting that sweet head run far into the back of her throat. Sam flinched, head falling back and a series of grunts and groans slipping past his lips while his girlfriend's head bobbed up and down between his legs.\n\n\"Now who's making noise?\" she teased, letting his slick, spit-covered cock pop free.\n\nSam's answer was to scoop her back into his arms, lifting her body and pushing her against the tile beneath the pouring shower head. Water broke around her breasts like boulders in the rapids of a mighty river. He lowered her onto his erect penis, the fleshy head sinking into her pink flesh.\n\n\"Ah! Sam...\" she moaned, grabbing onto his shoulders.\n\nHe made hot, desperate love to her, pounding her tight pussy, the heat of the shower nothing compared to the heat coming off their writhing bodies. Linda bit her lower lip, barely able to take the intensity of the waves of pleasure that ran wildly through her body. It had never been like this before with anyone. Sam was taking her to plateaus of wanton, naked desire she hadn't known existed. Her breathing became ragged, hips thrusting forward to meet her boyfriend's powerful thrusts, wet skin smacking loudly in the confines of her small bathroom. \n\n\"Oh! MY! FUCKING GOD! SAM! It's...so...SO GOOD...So good with you! AH! I'm going to cream your cock so hard!\" cried Linda, digging her nails into his broad shoulders.\n\nHe pressed his mouth to hers, and she took his tongue gratefully, desperate to stifle the scream that threatened to break out from inside her chest. Their movements became faster, water thrown free to splatter against the shower curtain. They moaned together into one another's mouths, reaching their limit at the same time, unrestrained feelings of sweet release shooting through their coupled bodies, one hard orgasm after another, making them tremble. Sam's quivering prick strained and erupted with a fountain of steamy cum that coated Linda's insides. He held her close, waiting until they could both stand before lowering her back down so that her feet found the shower floor. The whole time their lips never parted.\n\n\"I love you, Linda,\" said Sam tenderly, stroking her face with the back of his hand.\n\n\"I love you,\" she echoed, putting her hand over his, leaning up to kiss him again.\n\n\"Do you want me to wash you off?\" she offered after they moved away from one another.\n\n\"Did you think we were done getting dirty?\" Sam asked with a raised brow.\n\n\"I guess not...\" replied Linda happily as he led her back into his embrace.\n\nEconomics lectures were easily Sam's least favorite, and this one was no exception. Professor Reinhardt had been droning on for the better part of an hour in his clipped German accent, while Sam fought to stay awake. He looked at his watch, happy to see that only a few minutes remained before he would be released from this torture.\n\nAs soon as the professor wound down, Sam was up and collecting his notes, making a hasty exit.\n\nIt had been more than a week since Trevor's unfortunate run-in at the club, and he was healing fast, thankfully. The bruises on his face were already almost gone, and he was getting around much better now with the soreness fading from his ribs. He was still tender to the touch to be sure, but it looked as if he would be able to return home soon. This was good news to Sam and Linda also because they had found their sex life greatly curtailed by Trevor's arrival. \n\nThe crowd of students thinned out as he moved past the student union headed for the parking lot. He hadn't had time to visit his girlfriend in the last few days due to his class load and her work, but he knew she was supposed to get off early today, and he was looking forward to popping by and spending some time with her. The drive over didn't take long, and he parked across the street from her apartment complex, making his way on foot. \n\nLinda had given him a key, so there was no need to knock, and he let himself in, enjoying the cool air-conditioned interior. \n\nThe apartment was quiet, Trevor's door shut, and no sound was coming from the other side. This wasn't unusual. Sam had discovered that Trevor was quite the night-owl, often napping during the day and staying up until all hours. It was one of the things that had made having sex with Linda difficult. \n\nLeaving his book bag on the couch, he made his way to the kitchen for a soft drink. \n\nSam was just about to pull the tab when the door to Linda's bedroom opened, but it wasn't his girlfriend that came walking out.\n\nIt was her sister, Gina, clad only in a white towel, using a smaller one to dry her hair. She stopped in surprise, a smile lighting her face when she recognized her guest.\n\n\"Sam! I wasn't expecting you.\"\n\n\"I wasn't expecting you either. I just stopped by because Linda usually gets off early on Thursdays.\"\n\n\"Yeah, actually she got held up tutoring one of her kids. I decided to do some aerobics here while I waited since I was going to miss my class. I got all sweaty, and I didn't figure Linda would mind if I used her shower.\"\n\n\"How's Trevor?\" asked Sam, trying to avert his eyes from Gina's semi-naked form. \n\nShe seemed to sense his discomfort, and it clearly amused her. Rather than return to the bedroom to put her clothes back on, she came closer, still rubbing at her wet hair.\n\n\"Doing much better, sleeping right now. He was never a day person. I swear, I think that boy is part vampire.\"\n\n\"He's not the only one.\"\n\n\"I beg your pardon?\" asked Gina, turning her head to let the water run out of one ear.\n\n\"Nothing. I guess if you got this, I'll just catch up with Linda later,\" said Sam, moving toward his book bag. Gina neatly side-stepped, cutting him off.\n\n\"You're always in such a rush. I get the feeling sometimes that you don't like me, Sam?\"\n\n\"I like you just fine. I...just have some homework I need to get to.\"\n\n\"Do I make you nervous?\"\n\n\"I'm not sure what you mean?\"\n\n\"Oh...I think you do. You haven't been able to take your eyes off me since I walked through that door. It doesn't bother me, you know. I like the way you look at me...\"\n\n\"I wasn't looking at you anyway, special, Gina. I mean, you are just wearing a towel. That is kind of unusual, so I suppose I was staring at that but don't get the wrong idea.\"\n\n\"Oh! Sam! You are so precious. I love this shy boy routine.\"\n\n\"I'm not shy. I was just being honest,\" he retorted.\n\n\"Honest? So...you honestly wouldn't want to see a bit more...like if this towel was to slip accidentally?\"\n\nGina reached up and unhooked the corner of the towel where she had tucked it in to hold it around her middle, letting the upper half slip down enough to expose the creamy tops of her huge breasts.\n\n\"What happened to turning over a new leaf?\" asked Sam, swallowing hard and wanting to avert his eyes that had seemed to take on a mind of their own and stayed glued to Gina's body.\n\n\"I want to be a good girl, Sam, but it's not easy with you around. Don't you...think I'm just, maybe, a little bit desirable?\"\n\nGina let the towel slip a bit more, coming open in the middle to reveal her stomach, she had to hold both sides now to keep it from falling away entirely.\n\n\"This isn't going to happen, Gina. So you can stop playing games,\" said Sam as sternly as he could manage, which wasn't much, his voice sounding weak and high pitched, not manly at all. \n\n\"We're all alone, Sam. No one has to know. You can't tell me you're not at least a little curious about what it would be like to be with me? I promise you, whatever my sister can do, I can do much, much better...and as for our bodies, does Linda's compare?\"\n\nGina dropped the towel.\n\nSam had to give her credit. Gina had the kind of body men in the past had crossed oceans and fought wars to claim. Her breasts were much larger than Linda's but surprisingly firm, sitting high and wide on her chest. If they were surgically enhanced, it had been done in such a professional way he couldn't tell. They were symmetrical and round with large, wine-red areolas covered in tiny love bumps and small but very pert nipples that poked out invitingly from their centers. Unlike Linda, Gina shaved carefully between her legs, turning her pubic hairs into a single thin landing strip that seemed to point the way to her pouty, dark pink labia. She didn't have an ounce of fat on her frame, and her skin was a flawless, creamy white all the way to her toes. \n\nLicking her thick lips, Linda's sister started to close the gap between them.\n\n\"I've wanted you since I first saw you at my house. We could be so good together...I can just feel it.\"\n\nShe stopped less than an arm's length away, nibbling on her lower lip and managing to look like a lost, virginal young waif.\n\n\"Don't think, Sam. Just go with what you desire...Take me to bed...I promise you won't be the same after...\"\n\nGina started to move toward him, put her hands on his chest, darkly painted nails running across his shirt up toward his neck. Her mouth was moving toward his, lips parting for a forbidden kiss.\n\nIt would have been so easy to give in. Gina was a stunning woman, and Sam had no doubt she had probably forgotten more about giving pleasure than he would ever know. \n\nHe put his hands on top of hers, squeezed them lightly. Gina took it as a good sign and smiled seductively.\n\n\"I'm going to make you cum so hard you'll forget your own name,\" she whispered.\n\n\"No.\"\n\nHer eyes had been fluttering shut, head moving upwards toward Sam's when his single spoken word stopped her. \n\nSam took her hands off his chest and pushed them away, taking a step back.\n\n\"I don't want this, Gina. I never did. Go put your clothes on before Linda shows up. You know Linda, right? Your sister. The woman I'm in love with.\"\n\nHer face registered shock. In all her years, Gina Siler had never been turned down by a man before, and she simply was not prepared to process that happening now.\n\n\"Are you serious? You would rather have Linda than me?\"\n\n\"Yes,\" said Sam with absolute conviction.\n\n\"You aren't farsighted, are you? I mean, you can see my body, right?\"\n\n\"The very fact you would say something like that just underlines how shallow you are, Gina. Christ! I've stepped in deeper puddles.\"\n\nThat did it. \n\nGina's eyes flashed with angry fire. He was pretty sure it was the first real emotion he had seen her display.\n\n\"Fuck you, Sam!\" she snapped, spinning on her heel. \n\n\"I already told you. No thanks!\" said Sam to her back as she fled into Linda's bedroom.\n\n\"That went well,\" he said to the closed door.\n\nNot knowing what else to do, Sam let himself out, failing to notice Trevor's bedroom door that had parted a crack during he and Gina's exchange, opening the rest of the way. Trevor stood there looking back and forth between the closed door to Linda's bedroom and the front door that Sam had exited through, stroking his jaw in thought before chuckling to himself and returning to bed.\n\nLIFE OF THE PARTY -\n\nThe following weekend, Trevor returned to his parent's home, much to Linda's relief and just in time for her coming home party. Marion Siler had spared no expense to welcome her youngest daughter back, and the guest list was filled with prominent members of local high society. Given the nature of the gathering, it was a black-tie affair, and Sam stood in the mirror, struggling to put his on.\n\n\"Let me help you,\" said Linda with an impatient click of her tongue.\n\n\"Sorry, I haven't attended a lot of affairs where I needed to wear a tuxedo,\" groused Sam.\n\n\"You look very handsome in it. At least you will when we get your tie on straight.\"\n\n\"I'm glad you like it because I feel like I'm slowly being crushed in this thing.\"\n\n\"Tuxedos are supposed to look good, not necessarily feel good.\"\n\n\"Then, it's doing its job.\"\n\nLinda stepped back, eying her handiwork.\n\n\"There! Perfect! You'll be the hottest guy there.\"\n\n\"With the hottest girlfriend,\" he added.\n\nLinda was dressed to the nines in an outfit similar to what she had worn to their first date at Antonio's all those months ago, simple black lace that conformed perfectly to her figure. \n\nA knock at the door cut off Linda's reply, and Sam strolled over to open the door revealing the grimacing face of his roommate.\n\n\"This party better be worth me forcing myself into this outfit of torture!\" groused Derek, pulling at the tight collar on his tuxedo.\n\n\"We thought you would enjoy a night of rubbing elbows with the rich and filthy. At least the food should be good,\" said Sam, slapping his buddy on the shoulder.\n\n\"My parent always put out a good spread; it's true. We thought inviting you would be a nice reward for helping with Trevor,\" threw in Linda.\n\n\"I'm just kidding. I appreciate the invite. It beats Pop-Tarts and cold spaghetti at the dorm. Are we ready to roll?\"\n\n\"That we are!\" said Linda, reaching for her keys.\n\n\"Shotgun!\" yelled Derek.\n\n\"Nice try,\" laughed Sam, indicating with a wave of his thumb where his buddy would be sitting on the ride out.\n\nDerek proved to be just as impressed with the vast edifice that was the Siler's home as Sam had been.\n\n\"I feel like I'm in an episode of 'Downton Abbey,'\" he said, exiting the car to look in awestruck wonder at the house Linda had grown up in.\n\n\"You watched 'Downton Abbey?'\"\n\nDerek looked a bit sheepish but nodded, \"Yeah...My mom loved that show and made me watch it with her.\"\n\n\"Made you? I'll bet...\"\n\nA valet took Linda's keys, raising an eyebrow at her car that certainly didn't look very impressive in line with the more expensive vehicles driven by the other party-goers. \n\nThey made their way inside to find tables bulging with various extravagant foods. There seemed to be a certain theme to each one, and Derek made a beeline for a table that was covered with seafood dishes from crab wraps to giant prawns in some sort of white wine sauce. He returned with a heaping plate that made both Sam and Linda laugh.\n\n\"I have a thing for seafood, okay?\" said Derek.\n\n\"I can see that. Just save some for the rest of us.\"\n\nDerek made to reply to Sam's barb when Trevor came sweeping up to them arms extended wide as if he was going to gather them all into a giant hug. Unlike the other attendee's he had disdained the traditional tuxedo and gone with an all-white jacket and dress pants that made him look like he was ready for a night at the disco, circa 1977.\n\n\"Awesome! My two favorite people and the man who saved my life! This party is looking up!\"\n\n\"I hardly saved your life, but I will gladly take the credit,\" laughed Derek.\n\n\"Oh! Such modesty. That's what I like best about you,\" shot back Trevor, though his eyes roved over Derek's muscular young body, saying something different entirely.\n\n\"I see you decided that the tuxedo look wasn't for you,\" observed Linda.\n\n\"Can't help it. I always feel the need to stand out.\"\n\n\"I doubt anyone wouldn't notice you,\" said Derek, eliciting a sly smile from Trevor.\n\n\"Trevor! Your mom wants to talk to you in the kitchen!\" called Lizzie, breezing by with a large platter of lobster tails in her hands.\n\n\"Rats! It's always something. You three don't have all the fun without me. I'll be back in two shakes!\"\n\nTrevor was gone just as quickly as he had come, in a breathless rush.\n\n\"He has a lot of energy,\" commented Derek.\n\n\"Been that way, his whole life. He's a human dynamo,\" agreed Linda.\n\nThe sound of music drew the trio outside, where they discovered a live orchestra playing for an appreciative crowd of guests. Part of the back lawn had been converted into a dance floor, and a few couples were taking advantage of it.\n\nSam bowed formally, extending his hand to Linda.\n\n\"Would the lady care to dance?\"\n\nLinda giggled like a schoolgirl, taking his hand in hers.\n\n\"Yes...the lady very much would.\"\n\nWhile Derek watched, they joined the growing crowd on the dance floor, cutting such a cute figure that they drew smiles from many of the older couples.\n\n\"We're getting stared at,\" noted Linda.\n\n\"They've probably never seen such a strikingly beautiful girl before.\"\n\n\"Sam! Don't make me blush!\" said Linda, ducking her head bashfully.\n\n\"I'm only speaking the truth.\"\n\nShe pulled her gaze back up and favored her boyfriend with a brilliant smile, \"I don't remember the last time I felt this happy.\"\n\n\"I hope I had something to do with that?\"\n\n\"You had everything to do with it, Sam.\"\n\n\"I wish your dad looked half as happy as you do.\"\n\nSam turned Linda around so that she could see what he had observed already, her dad scowling at the edge of the dance floor, clearly not thrilled at the sight of the two of them together.\n\n\"Don't worry about my dad. He's had that same sour look plastered to his face since I was a teenager.\"\n\nDespite Linda's dismissal, Sam couldn't help but be intimidated. James Siler was very good at delivering a mean look. ",
        "When the music ended, they met back up with Derek and snagged some food for themselves.\n\n\"Can you watch my plate? I need to use the little girl's room,\" asked Linda.\n\n\"Sure, Babe,\" replied Sam.\n\nLinda paused to touch up her lipstick, brushing back a stray hair away from the side of her face. Deep down, she was worried at how much trouble her dad might cause for Sam. Frowning at her reflection, Linda decided she would have to corner her father before the evening was over and make it plain to him that she wouldn't stand for him mistreating Sam or threatening him in any way.\n\n\"And I thought my biggest problem was going to be seeing Gina again,\" she thought.\n\nAs if the universe were listening, that was exactly who she ran into when she exited the restroom. \n\nHer older sister looked down at her, the height difference between the two of them exaggerated by Gina's high-heels. Linda noted that her sister was wearing a dress very similar to hers, and felt a pang of jealously at how much better the more voluptuous girl was filling it out.\n\n\"Oh! Good! I'm glad I ran into you. I wanted to tell you how happy it's made me to see us all pull together to help Trevor. I think it's the first time since we were kids that we've had a moment like this, two sisters leaning on each other. I hope it's a sign that we can rebuild that close relationship we once had,\" said Gina.\n\n\"Close relationship? When were we ever close?\"\n\n\"Don't be that way. I know I was a bit of a shit to you in the past. I thought we could start fresh and make this recent challenge a building block for the future. I want to be able to spend time with you and be the kind of sister you deserve.\"\n\nGina had always been good at sounding sincere when she wanted something, and Linda wondered at what that might be and whether she could trust her older sibling.\n\n\"You've changed, huh?\"\n\n\"I'm trying, Linda. If you would give me a chance, I could show you. Why, I imagine that you and Sam and I could be quite a threesome.\"\n\n\"Oh, really?\" said Linda suspiciously.\n\n\"Not that kind of threesome!\" laughed Gina, giving her sister a playful shove, \"You know, unless you're into that sort of thing?\"\n\nWhen Linda's eyes got bigger, Gina tried to brush her comment off, \"I'm just kidding, Silly Goose! You and Sam are perfect together. I should be so lucky.\"\n\n\"Look, Gina. I need to think about all this. You and I don't have the best history, and as much as Mom wants us be friendlier, I need to see more from you. Trust takes time to build.\"\n\n\"I understand perfectly. All I'm asking for is a chance!\"\n\nThe bigger girl pulled Linda into a hug that she reluctantly returned before she turned on her heels and left, vanishing back into the party crowd.\n\n\"Between her and dad, I wish I had skipped my coming home party,\" mumbled Linda, following in her sister's wake.\n\nTrevor had been temporarily put in charge of managing the kitchen, much to his displeasure, but he never liked to let his mother down, so he did as he was asked. Once all the food was out, he had slipped away to clean up and rejoin the party. This was how he found himself in a prime position to overhear Linda and Gina's conversation outside one of the many downstairs restrooms. He had to bite his lip to keep from making a noise of shock when Gina had professed her willingness to build a new relationship with Linda.\n\n\"Yeah, I can tell how sincere you are, Sis. Wasn't that you throwing your naked body at Sam not so very long ago?\" he thought.\n\nStill, he wasn't sure it was his place to get in the middle of things. \n\nHe waited for them both to leave before exiting the dark edge of the hallway he had been occupying just out of their line of sight. Taking a leisurely walk back to the party, he mulled over whether or not to tell Linda what he had heard. He was so lost in thought he nearly ran right into his father, who was standing smack in his path.\n\n\"Oh! Sorry...didn't see you there.\"\n\n\"Head in the clouds, as usual, Son?\"\n\n\"I have some things on my mind. Important things.\"\n\n\"I'm sure you do. Why don't you run down to the wine cellar and let the steward know we need ten more bottles of the red up here.\"\n\nTrevor nodded and turned to leave.\n\n\"Don't drink anything while your down there,\" grumbled his dad in a parting shot.\n\n\"Why do you have to do that?\"\n\n\"Do what?\"\n\n\"Always take a shot at me. Always treat me like a child.\"\n\n\"Is this going to be another therapy session? That French counselor cost me three-hundred-an-hour to tell me you were having issues with authority. Like I didn't know that already.\"\n\n\"Why don't you say what's really on your mind, Dad? What's bugging you? It isn't that I behave immaturely sometimes or that I've had my substance problems in the past. Those were all symptoms of the real problem, and we both know it. Why can't you just say what bothers you about me is my need to be with other men?\"\n\n\"This is neither the time nor the place for this conversation, Trevor! Just go get the wine.\"\n\n\"No! I want to talk about this now! You're always ducking me! Are you so ashamed of me you can't face even talking to me about it?\"\n\nJames Siler turned to leave, ignoring his son. Momentarily enraged, Trevor tried to grab him by the arm, but the bigger man reacted angrily, pushing his son's arm aside and shoving him back. Trevor doubled over, grabbing at his still very sore ribs.\n\n\"Jesus! Trevor! You don't just grab people like...Hey...What's wrong with you? I barely touched you,\" said James, finally showing a hint of concern at his son's red-faced look of pain.\n\n\"It's nothing,\" he replied in a tight voice, fighting down the urge to throw up.\n\n\"Look...Trevor. We can discuss your situation at a more appropriate time, okay?\"\n\n\"Afraid I'll ruin the party, Dad?\" he asked, still rubbing his side.\n\nJames frowned, \"Just get the wine, huh? And don't be such a pansy. I got shoved a few times when I was younger and never whined this much.\"\n\n\"Right...Whatever you say, Dad,\" answered Trevor bitterly.\n\nHe left his father standing in the hallway, watching him shaking his head in disappointment.\n\nBy the time he arrived at the wine cellar, his pain had abated somewhat, so he could offer the steward assistance in bringing up the wine. He carried a box of four, careful not to drop the expensive bottles.\n\n\"Dad would take their cost out of my hide,\" he thought.\n\nThe kitchen had settled down from the madhouse it had been earlier, and he set the box on the edge of the counter, stopping to take a breath.\n\n\"Are you okay?\"\n\nLinda let the swinging door to the kitchen shut as she came over to her brother.\n\n\"Sure.\"\n\n\"You look at a little pale.\"\n\n\"My ribs are still giving me some trouble. It's nothing to worry about.\"\n\n\"Should I get Derek to take a look?\"\n\n\"Hm...Now there's a thought! Maybe you could bring him to my room. I feel the need to lie down,\" said Trevor, melodramatically throwing a hand across his eyes.\n\n\"Seriously,\" said Linda, trying not to encourage him by laughing, \"are you sure you're okay?\"\n\n\"I'll be fine, but it's sweet that you care. Speaking of Derek and by extension, Sam. Where are those two strapping young fellows?\"\n\n\"They discovered the billiard room and were pretending to be pool sharks the last time I say them.\"\n\n\"Maybe I will go give them a lesson in how it's done.\"\n\nLinda had pulled one of the bottles from the box Trevor had brought up, turning it in her hand and watching the light play off the deep red liquid.\n\n\"You know, Gina came to me trying to make up. I still don't know how I feel about that woman. I mean, she is my sister and all, but there is something there...I just can't bring myself to trust her again.\"\n\n\"Go with that feeling,\" said Trevor under his breath.\n\n\"What?\"\n\n\"Nothing...I think I'll go have that game of pool.\"\n\nLinda stepped in front of him, cutting him off from leaving.\n\n\"What do you know?\"\n\n\"I know something?\"\n\n\"Don't be coy with me, Trevor Siler. I know when you're hiding something. You're a crap liar.\"\n\n\"Really, Linda? The things you accuse me of...ouch!\"\n\nShe reached across the counter and grabbed his hand, twisting his pinky finger.\n\n\"This is such bullshit! You were always torturing me when we were kids!\"\n\n\"And you always folded like a cheap card table. Now! Out with it! What do you know?\"\n\n\"You're not going to like it.\"\n\n\"I'll be the judge of that.\"\n\nTrevor sighed and told Linda what he had seen and heard at her apartment the afternoon Sam had shown up looking for her. As his tale unfolded, Linda's face darkened into a mask of fury that made him take a step backward.\n\n\"That bitch...\"\n\n\"Now, Sis. We both know Gina has always been the selfish one. The good news is that Sam kicked her to the curb! So, no worries, right?\"\n\nLinda didn't answer but spun away, heading for the door with her fists clenched.\n\n\"Well...probably safer to stay here, but then again, I wouldn't miss this for the world,\" said Trevor quietly to himself before following after her.\n\nHe entered the main living room, one with enough square footage to be most people's primary residence and quickly spotted Linda headed out one of the glass doors to the back lawn. Sprinting across the room, dodging around a waiter carrying a tray of empty wine glasses, he reached the door just in time to see what Linda already had, that Gina was standing outside near a long, white cloth-covered table containing a huge crystal punch bowl. She was talking with one of their fathers business partners, brushing back her hair in a flirting gesture.\n\nTrevor opened the door and darted outside himself just as Linda reached their sister and grabbed her by one arm, spinning her around.\n\n\"Linda! What the hell has gotten into you?\"\n\n\"Want to rebuild our relationship, huh? How are you going to go about that, Gina? Is chasing my boyfriend all over town and stripping for him part of the plan?\"\n\n\"I don't know what you're talking about!\" snapped Gina defensively.\n\n\"I think you two need some space,\" said Harland Mathers, the business partner, who beat a hasty and prudent retreat.\n\n\"The other day at my apartment? You were coming out of the shower? Ring any bells?\"\n\nGina licked her lips in thought, trying to decide how much of the truth to tell, but given the look of anger on Linda's face, she opted in a rare moment for honesty.\n\n\"Okay...So maybe I got a little carried away. Can you blame me? Have you looked at Sam?\"\n\n\"After what happened with Greg...How could you try to do this to me again?\"\n\n\"Ever hear the story of the fox and the scorpion, Dear? I can't help my nature.\"\n\n\"That's it? That's your excuse? No apology?\" shouted Linda.\n\nTheir altercation was starting to draw the attention of many of the other guests, some of whom began to stroll over in their direction to see what was going on. Linda ignored the growing crowd keeping her attention focused solely on her duplicitous sister.\n\n\"Oh! For God's sake, Linda. Nothing happened! Sam wasn't interested, okay! Heck, you should take it as a long-overdue win. It's the first time you ever managed to hang on to a boyfriend when they could have had me.\"\n\nWhat happened next, Gina never saw coming. In all their years together, she had only seen her younger sister run when things got bad between them. Linda was the type that avoided confrontation, that hid her head and pretended that it didn't bother her when Gina had swooped in and took something that belonged to her even when that something had been someone's heart. It was the way things had always been between them, but she didn't recognize how much her sister had changed in their time apart, or more specifically, in the time since Sam had come into her life. \n\nTheir height difference presented a challenge, but Linda overcame it by simply jumping straight up and smashing her fist right into Gina's nose.\n\nCaught completely by surprise, Gina was thrown backward, tripped over her heels, and ended up crashing into the table behind her sending one very expensive, antique punch bowl and all its contents to the ground. Bright red liquid poured across the grass, nearly matching the color of blood that was pouring out of Gina Siler's injured face.\n\n\"What the FUCK! I think you broke my fucking nose!\" yelled Gina, trying to staunch the flow with the sleeve of her dress.\n\n\"I'm just getting started!\" yelled Linda, tackling her older sister back onto the ground.\n\nThe two women began to wrestle back and forth, getting covered in mud and punch in equal measure while the other party goers looked on in horror.\n\n\"What in the blazes is going on here?\" yelled James Siler as he arrived to find his daughters locked in mortal combat. He froze at the unexpected sight, the two women now up on their knees and pulling at each other's hair.\n\nBefore he could react, an arm suddenly slipped around his shoulders, and he turned to stare into his son's grinning visage.\n\n\"And you thought I was going to be the one to ruin the party!\" said Trevor.\n\nThe guests had gone. The party ended prematurely by Linda and Gina's impromptu cage match on the back lawn. \n\nNow, the three siblings stood shoulder to shoulder together in their father's study while he paced angrily back and forth in front of them. Standing at the back of the room, Marion Siler, Sam, and Derek watched quietly.\n\n\"Humiliating! Fucking humiliating! People will be talking all over town about it! This family will be living down this embarrassment for years!\"\n\n\"I don't know, Dad, give Gina a chance I'm sure she can whip up a scandal to distract the masses,\" offered Trevor.\n\n\"Screw you, Trevor,\" snarled Gina.\n\n\"I don't need any smart ass comments from you!\" said James loudly, stopping to shove his finger in Trevor's face before stepping over to Gina.\n\n\"As for you! Would it kill you to keep your legs crossed for once! Jesus Christ, Gina! Why can't you try to fuck a guy who isn't with someone else? Is that too hard for you to wrap your head around?\"\n\nGina started to cry, winced, and put a hand on her swollen nose.\n\n\"What about what Linda did to me?\"\n\nJames puffed on his cigar for a moment, pulling it from between his teeth and looking at the ground before he answered.\n\n\"I...uh...hate to say it, but that was probably deserved. Honestly, I didn't think you had it in you,\" he said, finally looking up.\n\nHis tone indicated approval, and Linda pushed a smile onto her face.\n\n\"I am sorry about the party, Dad.\"\n\n\"Yeah, well, you can bet you will be paying your mother back for that punch bowl! God! What were you thinking? If you wanted to kick Gina's ass, couldn't you have waited until after the party?\"\n\n\"That's what you really care about, isn't it? Your reputation! This family's reputation! When Gina slept with Greg, all you cared about was keeping the whole thing quiet.\"\n\n\"That's not true!\"\n\n\"Isn't it? You never said a word to comfort me until after I agreed to keep the divorce quiet and not make a big deal out of it. I think you were happy that I decided to leave town so there wouldn't be any friction between Gina and me at the social club.\" \n\n\"Linda...That's not fair. We stood by you through that whole mess. I paid for everything and...\"\n\n\"I didn't want your money, Dad! I wanted you to care! I wanted you to protect me! I was your little girl, and all you were worried about was whether the story would make the local papers.\"\n\n\"That is such an oversimplification, Linda. It's just like you to be so caught up in your problems you miss the big picture! If I could just have one kid that understands the importance of this family's place in this community.\"\n\n\"Like you have any idea what being a family means,\" grumbled Trevor.\n\n\"I've had enough of your mouth for one day!\" blasted James rounding on his son so harshly that he bumped into him. Like earlier, Trevor winced in pain and gripped his side. Derek broke away from the door and came over to steady him. \n\n\"Lean on me,\" he said, and Trevor managed to smile despite his ribs.\n\n\"Gladly,\" said Trevor, putting one arm around Derek's broad shoulders.\n\nJames rolled his eyes at the look the two men were sharing. An expression that wasn't lost on Linda.\n\n\"Trevor was hurt because of you.\"\n\n\"What are you talking about?\"\n\n\"Linda...don't...\" wheezed Trevor.\n\n\"No...He needs to hear this. Trevor got jumped several weeks back by some bullies who beat the crap out of him. He reached out to Sam and me for help, and all through that ordeal, all he was worried about was what you would think. What would happen if the police or the newspapers found out? You've drilled it into him for so many years that all that's important around this house is our reputation, so much so he would rather have died in that parking lot than gotten real help.\"\n\nJames looked back and forth between Linda and Trevor, his face turning pale.\n\n\"I didn't know anything about that. Is that why he was staying with you?\"\n\n\"Oh! Trevor!\" cried Marion, coming over to put a hand on her son's arm, \"You should have told us! Can you help me get him to the couch in the other room? I'm going to call Dr. Seever to come over and take a look at you.\"\n\n\"Now just a damn minute! Seever is a club member...\"\n\n\"Seriously, Dad?\" yelled Linda.\n\nJames Siler rarely got stared down by anyone, but if looks could kill, the one in Linda's eyes would have blown any man to pieces. He stopped short of what he had been about to say and just nodded as Derek and Marion led Trevor out of the room.\n\n\"Let's go, Sam.\" \n\nLinda turned her back on her father and made her way to where her boyfriend stood waiting patiently by the door.\n\n\"We're not done here, Linda! We need to talk about this.\"\n\n\"No,\" said Sam, speaking for the first time, \"We are done here. It's been a long day and high time I got Linda home.\"\n\n\"This is just as much your fault. I knew you were going to be trouble...\" James started to say.\n\n\"Shut up, Dad,\" said Linda tiredly, letting Sam slip his arm around her waist.\n\n\"I won't be talked to that way by you!\" said James, but Sam threw him a look that nearly matched his girlfriends in the intimidation department.\n\n\"Watch what you say next. This is my family you're messing with,\" said Sam in a low, menacing tone.\n\nLinda looked at him with wonder on her face, then snuggled closer as he led her out the twin doors of her father's study.\n\n\"Family?\" she said with a tilt of her head and a knowing smile as they walked together back up the long hallway.\n\n\"Well, no rush, but...\"\n\nShe laughed, squeezing his hand.\n\n\"I love you, Sam.\"\n\nHe hugged her closer and kissed the top of her head.\n\nThey found Trevor lying on a couch in the den, Derek close by his side and holding his hand.\n\n\"Thanks for sticking up for me back there,\" he said.\n\n\"It was my pleasure. Are you going to be alright?\"\n\n\"Doctor Derek here thinks so, and that's good enough for me.\"\n\n\"I think he will be okay, but we should probably let a real doctor be the judge of that,\" said Derek.\n\n\"A real doctor is on the way,\" said Marion, entering the room while putting her cellphone away.\n\nShe joined Derek and Trevor on the couch, stroking Trevor's hair back out of his face.\n\n\"I'm so sorry, Sweetie. Sorry that you didn't feel like you could talk to us about what happened. I promise things are going to change around here.\"\n\nSam noted the angry tone in Marion's voice and suspected that James Siler was in for a bad night.\n\n\"Linda and I were just heading out. Derek?\"\n\nHis friend smiled at Trevor before answering, \"Don't worry about me. I'll get an Uber back to campus.\"\n\nSam shared a smile with Linda before nodding, \"Sure...No problem.\"\n\n\"Let me walk you out,\" said Marion.\n\nLinda kissed her brother on the cheek before joining her mother and boyfriend. The trio stopped at the massive front doors, and Marion reached out to both her daughter and Sam at the same time.\n\n\"I know this wasn't exactly the heartwarming welcome home party you deserved.\"",
        "\"I'm sorry about the punch bowl, Mom.\"\n\n\"Don't worry about that, Dear. It was a wedding gift from your grandmother. Frankly, I always thought it was butt ugly, but I couldn't tell your father his mother has no taste.\"\n\nThey all laughed at that.\n\n\"Don't let what happened today sour you on coming back, please. I know your father can be a stubborn ass sometimes, but there is good in him, he just needs some help finding it.\"\n\n\"I won't, but don't expect me to be in a hurry to see Gina any time soon.\"\n\nMarion nodded, \"I understand. She may never grow up. Your father and I let her down. She was our first, and we made a lot of mistakes, let her run wild for too long. It may be too late now, but it's hard to give up on your children. When you have your own someday, you'll understand.\"\n\n\"As for you, Sam. I expect to see more of you. I think Linda has found herself a fine young man, and I don't mean 'young' as a bad thing! You've already shown more maturity than Greg ever did.\"\n\n\"Thanks.\"\n\n\"It's getting late, and I know you want to get home. Drive safely,\" she finished giving each of them a parting hug.\n\nThe car ride back to Linda's was quiet, just the distant sound of music on the radio to keep them company. It had been a busy day, and they were both worn out.\n\n\"How's your hand?\" asked Sam, breaking the silence at last.\n\n\"It's a little sore. I had no idea it hurt so much to hit someone in the face. They make it look so easy in the movies.\"\n\nSam chuckled, \"Yeah. You surprised me. I'm sorry I missed it.\"\n\n\"I surprised myself, but I had nine years of built-up resentment, so I guess it was bound to come out.\"\n\n\"I bet Gina wishes you had kept a lid on it.\"\n\n\"That will teach her to get too close to my man!\"\n\nSam reached over to pull her right hand off the steering wheel and kissed her bruised knuckles.\n\n\"Remind me to stay on your good side...\"\n\nWhen they reached Linda's apartment, she switched off the engine but didn't immediately get out of the car.\n\n\"Can we just sit here for a minute,\" she asked softly.\n\n\"Sure.\"\n\nThey leaned their seats back and looked up at the night sky through the front window.\n\n\"Jupiter's rising,\" whispered Sam, pointing at the bright ball that had just broken over the treetops in the distance.\n\n\"You know something about astronomy?\"\n\n\"A thing or two. I had this great teacher once...\"\n\n\"Just once? I bet you've had her way more than that,\" teased Linda.\n\n\"Not often enough, you can be sure.\"\n\nThey shared a soft kiss keeping their heads close together after their lips parted.\n\n\"My family is a mess.\"\n\n\"I noticed that.\"\n\n\"I'm glad you're here.\"\n\n\"It would take more than a quirky relative or two to scare me away. Remind me to tell you about my Uncle Nolan and his tendency to sleepwalk naked.\"\n\nLinda made a face and laughed, \"I can't wait to hear about it.\"\n\nShe looked back through the window, noticing another bright object below Jupiter.\n\n\"Saturn's rising too.\"\n\n\"It's not the only thing.\"\n\n\"Why, Mr. Morrison, are you coming on to your teacher?\"\n\n\"What do you think?\"\n\n\"I think this car is too small to fool around in.\"\n\n\"As a scientist, you know that the only way to test a theory is through proper experimentation,\" said Sam pulling her into his seat.\n\n\"We're going to get in trouble.\"\n\n\"I'm willing to take that chance.\"\n\n\"You're incorrigible, Samuel Morrison.\"\n\n\"Which is why you love me.\"\n\nThey kissed again, mouths pressing tighter, \"It's one reason, but not the only one, and I do love you, Sam. I love you with all my heart.\"\n\n\"I love you too.\"\n\nSam pulled her tighter to him.\n\n\"Is that a gear shift in your pocket?\"\n\n\"Shut up and kiss me...\"\n\nThere were no more words as the windows of Linda's car started to fog over obscuring the rising planets in the sky."
    ],
    "authorname": "darkoverlord6",
    "tags": [
        "college guy sleeps with his teacher",
        "hot oral sex",
        "hot young guy older woman",
        "mature romance",
        "older woman",
        "sex in the shower",
        "sexy teacher",
        "teacher and student",
        "younger man"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/a-tutor-for-samuel-pt-02"
}