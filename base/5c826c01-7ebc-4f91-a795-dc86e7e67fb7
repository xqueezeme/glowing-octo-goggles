{
    "title": "Celtic Mist Ch. 15",
    "pages": [
        "HE shall love my soul as though\n\nBody were not at all,\n\nHe shall love your body\n\nUntroubled by the soul,\n\nLove cram love's two divisions\n\nYet keep his substance whole.\n\n--- W.B. Yeats\n\nDeclan and Aoife fled Rossnalough Manor, skirting north round Enniscorthy town under the midnight sky. With their bloody clothes, they kept to the dark fields and pastures alongside the road, passing shadowed cottages and dim shapes of ploughs, carts, and ruminating animals. Only one person did they spy on the road at this hour: a man on horseback, galloping towards Enniscorthy. In the darkness, the man's garb --- uniform or civilian --- was not discernable. Aoife guessed him to be the courier of some urgent message.\n\nWhere the lane turned off towards Fleetwood's farm, they continued straight ahead in an easterly direction.\n\nNo words did they utter as they strode side by side across the dark countryside, each preoccupied by their own thoughts --- if 'thoughts' was the proper term. Ever since fleeing Rossnalough Manor, Aoife knew only an overwhelming giddy feeling --- a maelstrom of sensations that could scarce be deemed coherent 'thoughts'. Her heart was racing out of proportion to the exertion of their pace, her stomach was fluttering, and her hands were shaking --- all of which surged anew when images from the confrontation with Blaylock flashed before her.\n\nIn contradistinction to her mind, her body operated purposefully, and her senses tingled with heightened acuity. Her eyes darted about the dark landscape to pick out shapes and movement...the faint glow of a cat's eyes by a barn...the silhouette of a bird sweeping across the sky. Her ears perked to the sounds of crickets, owls, wind stirring leaves, the creak of a loose shutter. The metallic odor of blood and sulphur of gunpowder rose from their clothes, but above that were detectable the variable scents of earth, animals, and chimney smoke from cottages. As they scaled walls, her fingers skimmed the jagged, cool edges of stones and soft draping vines. The ends of the dagger sheath and pistol holster tapped against her thighs as she walked, and the unfamiliar weight of the cartridge belt shifted round her hips.\n\nBy such vivid details did Aoife dispel any doubts that the fateful events had indeed transpired --- together they had succeeded, so they had! 'Twas no dream! Beside her, Declan seemed to be in a like state, the alert glint of his eyes visible in the starlight as he scanned their surroundings.\n\nSome two hours later, they arrived at the forest. In the adjacent field, Aoife found the landmark of a blackthorn tree and led them into the woods. Once among the tall trees, the canopy of leaves shut out the stars and they were in nigh complete blackness, frustrating Aoife's recognition of the sequence of landmarks that she had used previously to return to the waterfall.\n\nGnarled tree trunks emerged from the darkness before them as they advanced with slow steps. An owl hooted somewhere nearby. At length, she found the fallen tree she remembered...then a little further the odd-shaped knot in the trunk of an oak...then the strangely twisted branch of an ash...and finally the double trunks of a maple...at which point the burble of flowing water became audible.\n\nAt the marker of a small pile of stones, Aoife ducked under the boughs of pine trees and within minutes they were standing on the banks of the pool below the waterfall. A ribbon of night sky showed in the break in the foliage above the stream, and the stars dimly shone on the speckled stones and highlighted the cascading flow. For several moments they stood in silent contemplation, the rush of the water and the cool, mossy air enveloping them.\n\nDeclan cleared his throat. \"I'll build a fire,\" he said in a low, rasping voice. He set aside his knapsack and began to search for sticks, soon disappearing in the darkness under the surrounding trees. Aoife retrieved the soap from her bag and moved downstream to the end of the pool where the water swirled and tumbled through a maze of stones.\n\nA glance showed Declan still absent, and she kicked off her shoes and stripped, unsticking the blood-drenched garments from her skin and submerging them in an eddy of cold water among the rocks --- all of them, even the torn shirt and the soldier's confiscated breeches. Aoife knelt on the bank to scrub them.\n\nBy and by, Declan returned and began building a fire on the bank upstream from her, near the base of the falls, and she saw his quick look in her direction. Pragmatic instinct had prevailed when she had doffed her clothes, but now in his presence she felt shy of her nakedness. Reassuring herself that she was sufficiently shrouded in darkness to preserve her modesty, she finished her task. Even when he had kindled a decent blaze, she was still protected from the light by the distance and intervening boulders and plants between them.\n\nAs if such a thing mattered at this juncture! And yet...even after the trial they had endured together...even after teetering on the edge of her grave, she felt the involuntary nervous excitement in her body at the knowledge that she was alone with this young man...and she was stark naked.\n\nIt came to her that the last time she had seen him prior to this night was at the courthouse...when, hidden under the judges' bench, he had traced 'I love you' in her palm...and had ravished her cunny with his mouth...rousing the exquisite torment that had culminated in the astounding, rapturous release against his lips.\n\nA warm throb grew deep in her belly.\n\nAoife wrung out the wet garments, then picked her way among the stones and ferns along the bank. Nearing the crackling fire, she peeped from the shelter a large boulder --- Declan was engrossed in loading the two pistols they had taken.\n\n\"Give me your clothes --- I'll wash them,\" she urged, her voice hoarse.\n\nFrom the other side of the rock came the soft noises of him undressing, and she faced away, resisting her curiosity. Coat, shirt, breeches, drawers, and stockings one at a time flipped across the top of the stone.\n\nAoife split the piece of soap and stretched her arm over the barrier between them. \"Soap.\"\n\n\"Ta.\"\n\nBack at her washing station, she beheld him in the pool, vigorously splashing and ducking his head under the water as he bathed. For her own part, the congealing blood was sticky on the skin of her belly and thighs, and when at length she had wrung out the final item, she rejoiced to finally be able herself to slip into the invigorating embrace of the pool.\n\nFrom the far end, she paddled her way upstream, pausing to scrub her skin everywhere with a fan of pine needles and soap, then she exhaled and upended herself in the water, diving to the pure blackness at the bottom.\n\n'Twas even colder here --- she sat for a moment with her hands and hair waving slowly, feeling the ancient stone beneath her. The pulse that had been pounding in her ears ever since Blaylock had walked into his office was at last lulled to a slow, faraway thudding by the cold, sinuous current...purifying her...quenching her past wounds.\n\nShe burst through the surface gasping, her hair streaming back from her face. Her paddling hand inadvertently brushed against Declan's. He was a few feet away, the firelight touching upon the contours of his face above the rippling water...his teeth were chattering but his expression was otherwise unreadable as he looked at her.\n\n\"Pardon,\" she murmured and swam further upstream till the mist from the falls enveloped her.\n\nA motion on the bank drew her attention, and she observed Declan standing by the fire, facing away from her, stripping the water from his skin with his hands. Her curious eyes followed his motions, observing in fascination his naked body in the restless illumination of the flames...his wide back, his taut, rounded buttocks, and his strong limbs. Aoife's belly fluttered...she ducked her head under the water again to cool her hot face.\n\nWhen she surfaced, she considered the falls above her, then glanced back to the firepit. Declan was now seated upon a stone by the fire, his back courteously towards her.\n\nTaking the offered opportunity, Aoife clambered up the wet stones to the flat rock that received the gushing plume and stood behind it to quickly soap her hair. Her head fully lathered, she peeked round the falls to assure herself he was yet facing away, then stepped under the water to rinse clean...the flowing water strumming over her breasts and mound as stirringly it had before, but this time she dallied not. Soon she dived into the pool below.\n\nDeclan, yet naked, was crouched by his knapsack when her head again broke the surface. Aoife swam to the side with her lips trembling from the chill, searching the bank uncertainly. He extracted a cloth bundle from the bag.\n\n\"Are ye finished?\" he asked, standing with the bundle in front of his privates.\n\nShe nodded.\n\n\"Here's me cloak if ye want.\" He sat again, placing the garment on the stone behind him before presenting his back to her. As cold as she had grown, Aoife wasted no time climbing out of the pool, whisking the droplets of water from her skin, and wringing out her hair.\n\nShe unrolled the cloak and swung it round her shivering, bare body...the memory flooding her of the first time she had donned his coat...back in September after she had fallen into the river. Yet again his cloak was offered to cover her wet body...but how much had happened since then! This cloak was more like a cape --- sleeveless and fastening at the neck.\n\nThus clad, Aoife immediately went downstream to the rocks where she had left the wet clothes and gathered them up. Returning to the fire with her teeth chattering and the gooseflesh rising over her skin, she spread the garments over stones closer to the warmth of the flames. Declan was stirring the fire with a stick, but paused to help her, stretching his arms to drape items over the stones nearby his seat.\n\n\"Aoife, sit by the fire and warm yourself,\" he murmured, nodding at the moss-coated stone next to him.\n\nShe glanced round, avoiding looking at him. No other stones by the fire were the proper height for a seat, so she squelched her nervousness and sat next to him, adjusting the folds of the wool cloak so as to keep a few inches of space between their thighs.\n\nThey both gazed straight ahead at the fire.\n\nIn truth, Aoife's sporting side had to acknowledge that the awkward scene was not without humor: here they were sitting side by side --- he stark naked, she covered from neck to toe by the oversized cloak --- both silently staring at the flames. 'Twas beyond reason...the memory of his nakedness had haunted her for months, and now he was sitting right next to her, stripped to the skin! A shiver ran through her body, seemingly in the wake of departing lucid thought. She chanced a furtive side glance at the unclothed young man beside her...wicked lass that she was.\n\nNotwithstanding the fantastical situation, Declan was clearly endeavoring to be tactful. He was leaning forward with his elbows on his knees and his chin on his hands --- his wet hair close to the heat --- and the position shielded his privates from a casual glance. No embarrassment did she sense on his part, but rather a chivalrous regard for her.\n\nDid she have anything dry in her knapsack to offer him as clothing? Then she was ashamed to realize that 'twas only the long-engrained idea of propriety that had provoked the thought...not her own inclinations, for she could scarce smother the image of the first time she had seen him naked...when she had gaped at his...ahem...natural charm. Aye, now seated next to him on the stone, her wayward eyes could not stop peeking at the line of dark hair visible below his navel. Even when she forced her gaze forward upon the fire, she could still see from the corner of her eye his muscular arm and thigh with their dusting of hairs.\n\nA different giddy feeling now overwhelmed her, and the pattering of her heart spiraled out to her belly and limbs. Averting her eyes, Aoife likewise leant forward with her elbows upon her knees and combed her fingers through her wet tresses as she meditated upon the crackling flames and watched the sparks that floated towards the heavens.\n\n'Twas wonderfully warm sitting before the fire, and the shaking of her body presently eased. From the dark woodland about them, she heard the churring melody of a nightjar.\n\n\"How are ye fairing?\" Declan said at length, his voice, like hers, raspy from Blaylock's attempted strangulation.\n\n\"Better...now.\"\n\nHis face turned towards hers, and she ventured a look in his direction. Both were leaning forward with their chins on their hands. In the flickering light, Aoife could see the bruises and lacerations upon his brow, nose, cheekbones, and among the bristles on his jaw. The lids of his right eye were swollen and red, and his lower lip had a beaded line of dried blood where it had split.\n\nThose lips had been glued to her cunny at their last encounter...\n\nThe green of his eyes seemed to ebb and flow in the flames...his pupils were slightly dilated as his gaze rested upon her eyes then dropped to her lips. He cleared his throat...and they both turned back to the firepit.\n\nA nightingale's chirp sounded above the crackling flames.\n\nDeclan's face spoke to the mighty battle that had evidently waged whilst she was unconscious. Aoife remembered Blaylock tossing her backwards onto the oak trunk and pinning her down by the throat. Her vision had clouded grey and white, and she remembered her final, fading feeling: despair at her failure...despair that she would never see Clodagh again for she had not had the goodness that would have assuredly elevated her sister to Heaven.\n\nWhen she had regained consciousness clad only in the rags of her clothes, she quickly had become aware of the violent scuffle underway by the fireplace...the brutal smashing of fists into bone and flesh, grunts, and oaths...Blaylock and Declan in a death struggle.\n\nNot so much at the time than after Declan and she had made their escape did she appreciate that, despite being helpless and essentially naked under Blaylock's hands, there was no alteration to her privates...no pain, no blood...to suggest that he had achieved his intended triumph in that regard. She could only surmise that Declan had once again rescued her.\n\nIn the moment, her attention had instead been fixed in horror upon the sight of Declan being felled by Blaylock slamming the crystal decanter over his head. Aoife had leapt atop the lid of the trunk and jerked her dagger from the wall where Blaylock had thrown it.\n\nShe shivered. 'Twas done! They had committed murder, so they had...if that was even the proper term for their act...but given all that had passed, no hint of remorse detracted from her present sensation of righteous exultation. Henceforth, no part of her mind need ever be occupied by that villainous man!\n\nNow the thing to do was assess Declan's injuries, a last vestige of rational thought prompted her. In her bag she had a small pottery jar of the unguent she had made for Rory Redmond. Aye, Declan's being naked should only be regarded as advantageous in that light...to better tend to his injuries, she told herself.\n\nIn her peripheral vision, she sensed his face turning slightly towards her, felt his eyes upon her. Her knees fidgeted self-consciously.\n\nThe fire once again absorbed his attention.\n\nAfter a few minutes, Aoife stealthily eased her knee furthest from him a few inches open, and parted the front of the cloak, draping the edges over each kneecap such that the warmth of the fire flowed up between her thighs under the cover of the cloth...her purpose hopefully undetected by the lad next to her. She did need to dry herself, she argued...she was only being discreet.\n\nThe heat was heavenly upon her bare skin, licking in waves between her legs...soon joining forces with the heat rushing down into her belly from her heart. 'Twas as if two rays were radiantly battering at her center from opposing directions, gamboling together upon the swelling spot that shamefully expanded and pulsed...naked under the cloak. Were he sitting opposite her, 'twould no doubt be quite visible to him.\n\nThe irony of her scruples at this point did not escape her --- a few days ago under the judges' bench, her limbs had been shockingly akimbo, and his breath, like the heat of the present fire, had wafted up betwixt them till his mouth buried itself at their juncture...aye...that mouth right there next to her...surrounded by the dark bristles on his upper lip and chin. Too real flashed the remembered spatter of his warm seed christening the insides of her thighs.\n\nA faint sensation of fluid tickled between her secret lips...was it just the water from the stream, or ---?\n\n'Twas merely the elation of the night that was reverberating in her body, she reasoned.\n\nOnce more Aoife sensed Declan's gaze directed at her. Was he too thinking on their last meeting? She blushed...then cupped her hands over her hot cheeks, striving to appear casual. A moment later she straightened and pushed back slightly from the heat, her fingers in the moist moss on the stone.\n\nDeclan seemed discomfited as well: he too shifted upon the stone, lifting and bending the leg closer to her to cross his ankle over his other knee. The muscles in his limbs flexed momentarily. Again he leant forward, his elbow on his raised thigh and his other arm folded across his lap with his hand dangling by his hip next to her. She stole a glance at him...she could see an ill-defined white scar upon his knee, his broad hand with the fresh lacerations round the knuckles, and the rope abrasions on his wrists...but his hunched posture now shrouded even the previously appreciable trail of dark hair below his navel.\n\nAoife strove to arrange her jumbled thoughts...to tame the volatile quavering in her belly with a sobering contemplation of practical considerations. What was next for them...for her? As soon as the clothes were dry enough, they could go to Fleetwood's farm...sleep the rest of the night...and be there to assist with the final preparations for the rising, which was now fewer than twenty-four hours away.\n\nBut she did not want to think sensibly...she did not want to think at all.\n\nA rustling and cracking came from the direction of the trees next to them.\n\nDeclan lunged for a pistol and dagger. \"Grab your weapons and hide,\" he muttered and, unmindful of his nakedness, ducked under the pine boughs.\n\nAoife did as instructed, crouching in the shadow of a large boulder. From the dark woods she briefly heard his footsteps on the twigs and leaves before the rush of the waterfall became the only sound in the night air.\n\nBy God, could the Yeomen have tracked them here?! Her heart thudded and she cocked the pistol, her ears straining.\n\nSeveral minutes passed with naught but the flowing water to be heard.\n\nThen a snapping sound.\n\nShe tensed and raised the pistol.\n\n\"Aoife, 'tis I,\" Declan called. \"Dinna shoot!\" He appeared from under the sweeping, dark greenery. Peering round the stone, she beheld him in the sphere of firelight, a few feet away, his bare privates level with her face. She turned abruptly back, her cheeks flaming and her lips parting.\n\n\"Aoife? Where are ye?\"\n\nShe steadied herself with a deep breath and stood up from behind the stone. He was now directly before her, a couple of feet away, holding a leather belt and returning the weapons to their sheaths.\n\n\"'Twas just a deer.\"\n\n\"Oh?\" She set her knife and pistol down atop the boulder next to them, keeping her line of sight above his waist...upon his wide, bare chest disconcertingly before her face...upon the lean muscles there and in his belly...\n",
        "\"Aye, we're safe.\" He was looking down at her, his gaze steady, his pupils reflecting the flames.\n\nShe nodded. Her eyes lifted to his face and she saw the truth in his features, from the earnestness of his eyes to the wry humor of his full, strong lips...the truth that had ever been there before her blind eyes. And she saw the bruises and lacerations...the badges of war...earned in defending both her and justice.\n\nDespite his cloak enveloping her small body, Aoife felt an acute, overwhelming nakedness without the armor of her hostility and suspicion to shield her from those intense green eyes. The blood surged outward from her heart, and the discordant urges to laugh or cry...or both simultaneously...swelled in her throat and eyes.\n\nHis arms reached for her at the same moment that hers reached for him...her hands bursting out from between the edges of the cloak to fling about his neck as she stretched up on her toes, whilst his were at once under the garment and round her back. Her bare body was pressed to his warm naked form...full along the length of her thighs and torso...so impossibly sweet, the heat of skin meeting skin!\n\nDeclan's head plunged down to her upraised face...his mouth covering hers, his lips soft and hard at the same time, as her own moved and parted and bit at him. The blood rushed in her ears and between her legs like the waterfall, its turbulent flow now thrumming in that hidden place.\n\nHis arms scooped lower round her waist and back, drawing her up even more tightly against him, lifting her off her feet as his head tilted and his tongue pushed between her lips. She sucked at it...wrestled with it...twined her own with his velvety, wet muscle. Voluptuous sensation flooded her...all panting breaths and fervent lips and the taste of their intermingled spittle with a raw hint of blood from his split lip. His stubble roughed the skin round her lips with his ravenous kisses.\n\nBelow, their bodies molded together...her breasts squeezed against his chest, her belly to his...and where her thighs joined, no intervening garments were present to shield her from the shameless stiff truncheon that probed in her maiden notch...nudging the aching morsel there. Aoife felt dizzy --- she was possessed --- she was lost in the embrace of this strong young man and was nigh swooning with the longing that she had long fought.\n\nDeclan set her back to her feet, but only to tug at the buttons of the cloak below her chin, in a moment tossing the garment aside. Breathing heavily, his eyes roved over her nakedness, starting and ending at her eyes, even as hers likewise absorbed the sight of his body, following her fascination despite her shyness. There it was, just as she had recalled it in many a dream and musing: the astounding fleshy column rearing upright from the short, dark curls and flaunting its taut, rosy treasure sac below.\n\nAoife stared, both feart and awed at his beautiful machine --- the veins bulging and the broad, ruddy mushroom head uncapped --- primitive and beastlike in its state of readiness for copulation. Aye, copulation! With her, if she so wished! It needn't remain a daydream! Something that only other lads and lasses did! Her corresponding part was in a like state of arousal, the pressure aching in her swollen lips and bud, the fluid blossoming in the crevice. Aye, their bodies could join as Nature intended...there was nothing to intercede...nothing save for her fear and shame.\n\nDeclan again caught her up against him and fed upon her mouth, but now his large, calloused hands in a frenzy traveled over her body, panting hoarsely as he felt all her treasures...cupping her breasts...sliding down her back to stroke and squeeze her bottom...sweeping to the front to clasp her mound...then his fingers, clumsy with his fervor, searched between her lips...oh!...they were on that little nubbin, finding and rubbing the erect flesh!\n\n\"Ooo!\" she whispered, wriggling. Her own hand without further ado grasped at the thing she wanted.\n\nOh! Oh, sweet Medb! What a magnificent treat for a lass to hold! Hard like iron, but alive and throbbing and covered in satiny skin...its thickness overfilling the curve of her captivated palm. She inhaled, her awkward hand roving over the thrilling toy...tugging it...feeling the pulsing ridges in the shaft and the protruding, arcing flange of the head. Declan was groaning as his enraptured gaze followed her motions --- aye, she must be doing it properly!\n\nInstinct, curiosity, and her brief education through the grille of the wardrobe door prompted her gripping fist to stroke up and down the turgid stanchion. As the cuff of skin slid, she eagerly capped and uncapped his splendid helmet-shaped crown...gaping with all her eyes till, within a few strokes, clear fluid welled up from the tiny mysterious hole in the tip of his cock. What...was he spending?\n\n\"Oh!\" She gasped as he seized the backs of her thighs and lifted her off the ground, opening her legs and planting brazenly her against his belly. Her cheeks burned at the blatant candidness of the action, but her arms wrapped round his neck and her legs round his waist as he strode away from the firepit with his hands under her buttocks. Oh Medb! This was no dream...they were here true, completely stripped and in each other's arms. Her heart pounded.\n\nIn less than a day, Declan would be heading off into battle with the United Irishmen, and neither fear nor shame mattered anymore...nothing mattered save the entreaty of Love.\n\nAoife clung to him, her fingers laced in his thick, damp hair, lost to everything save for the feel of him...the strength of his body, carrying her as if she weighed nothing...the scent of his warm skin where her blushing face was buried against his neck, his bristles scratching her temple...the firm muscles of his belly caressing her spread cunny as her body bobbed up and down against him with each step.\n\nA few steps, then her weight shifted to one side as he ducked under the pine boughs and stepped over low plants --- her limbs squeezed him yet more fiercely. Declan sank to his knees, holding her astride his lap, his rigid cock snug to her mound. His open lips nipped from her neck to her cheek to her mouth, where their tongues again entwined amidst ragged breaths.\n\nHis hand curled round her bottom and delved between her legs --- nothing was left untouched by his voracious survey...his big fingers were all over her secret parts, feeling her bud, her lips, her cleft, her bottom hole...stroking and palpating the sensitive flesh...feeling the swollen, wet state of her female organ. Her knees squirmed on the ground by his hips.\n\n\"Aoife!\" he groaned.\n\nWith a sudden shift of his arms and legs, they were tumbling onto the soft ground...a fleeting scent of pine needles and flowers then he was atop her. Oh God! She trembled under the weight of his large body...why he was at least twice her size! Then his blunt instrument lodged between her petals, and rapturous bedlam ensued. Oh Medb! 'Twas about to happen! That fearsome object had been an enthralling plaything in her hand, but now the broad head was bludgeoning for admittance at the tiny unbreached opening from whence her monthlies escaped.\n\nTheir open mouths separated and panted next to each other as they struggled to join their organs. Aoife's tense arms held fast round his back, and her knees drew up higher alongside his flanks. Three times in quick succession did her resisting maidenhead rebuff him, sending his cockhead skidding forward or back from the slippery target.\n\nSupporting himself on one elbow, Declan abruptly reached down between them and she felt his knuckles against her inner thigh...he was holding his battering ram to the mark as he engaged once more. This time his charge defied all deflection --- the pressure swiftly mounted as his weight bore down mercilessly onto that one point --- her cunny lips effaced and the wet membrane valiantly strained. Owww...Oh! Was it possible for a matter of disproportion to prevent some lads and lasses from having congress?\n\nThere was a sudden rupture, and a ring of pain rapidly opened between her legs --- Aoife's teeth bit her lower lip and her forehead pressed to his temple. The stinging circle expanded and expanded...expanded impossibly wide round the relentless marauder. Her upraised knees quaked, her fingers dug into his back, and her breath came in short gasps. Oh God! Declan was inside her! He had gotten through! Oh Medb...the pain was unearthly...!\n\nHis breath dragged through his teeth. He let go his cock and his elbow thudded on the ground above her shoulders --- her head was now in the firm grasp of his hands as his pelvis hunched against her. In shock Aoife realized that the invasion was not yet complete. With three vigorous, grunting thrusts he drove the formidable engine full into her body, the force sliding her over the pine needles.\n\n\"Declan!\" she whimpered, heaving against him.\n\nHis fingers tightened in her hair as he paused, the weight of his lower body pinning her, his indriven pillar buried to the hilt. \"Aoife!\" he growled against her lips...his tongue took her mouth, penetrating her at both ends.\n\nAoife writhed under him, stunned. The burning pain had been stanched by the extraordinary pressure inside her belly...in three resolute shoves, her innocent vagina had been bluntly stretched and filled...aye, gloriously filled and overcrammed! Declan and she were fully joined, so they were!\n\nThe mysteries of Eros were fast laid bare to the na\u00efve lass as her overexcited lover set to, rough and grunting with urgency, his hips humping...driving his engorged privy member in and out of her shaking body.\n\nAoife's head tossed from side to side, her arms clutched round Declan's back, and she moaned and gasped --- incoherent with Love's revelation. He was enormous on top of her, this wondrous, strapping young man...his muscular arms encircling her...his weight crushing her...his brawny organ impaling her...impaling her again and again and again. Oh, sweet Medb! They were having intercourse! They were fucking! Oh, Declan! We're fucking! Wanton joy suffused her.\n\nIf she had thought that the titillation of her secret places by his tongue had been an entrancing pleasure, she was astounded by the sensations mounting where his piston was serving up its unabashed lecherous instruction. The rubbing and rubbing of that knob and spit inside her was rousing a deeper, tenser, voluptuous pleasure that transcended the creamy, lasciviously pumping junction of their privates. Again and again did her greedy sheath clamp round its plunderer.\n\nHer guileless body knew only wanting --- wanting for the stalwart male body atop her and the hard organ that drove into her. She could no longer distinguish intention versus primitive emotion as the muscles tensed in her belly, bottom, and legs in edifying beneficence...tilting her hips up and presenting her standing pip to the libidinous, back and forth friction of his pelvis. \"Ohhh...ohh,\" she moaned. As the pleasure swelled inside and out, her knees drew up further and spread even wider to lewdly expose her wee bud and orifice to his frenzied thrusts.\n\nHot skin to skin, their naked bodies undulated together upon the ground, connected at their sex organs. In the darkness under the trees, the silhouette of Declan's head and powerful shoulders moved atop her in Love's scandalous cadence, his arms gathering her to him. His face was but inches away, yet scarce a glint of his eyes was visible. Aoife's hands slid down his back to grasp his flexing buttocks, and she ground her throbbing morsel against him. The increasing chaos of their breaths against each other's lips foretold the crisis.\n\nWeight, skin, breath, bud, and...oh God!...overstuffed cunny --- the ecstasy coalesced tighter in their conjoint forge. Short and fast came her breaths in spates as her muscles collected taut, her tremoring pelvis rising...\n\n...rising...\n\n...rising...\n\nHer breath halted with a tiny squeak. Oh oh! It was happening again! As it had at the courthouse but more forceful...more profound! Her arched body hovered --- impaled and quaking --- then the exquisite fluttering heat expanded both inside and out before unleashing in a storm.\n\nAoife squealed at the wondrous bliss, shuddering and rocking upon Declan's plunging iron. He groaned, his motions coming swifter, harder...his fingers shook against her scalp and he bit at her quivering open lips. The pressure of his cock within her palpitating vagina astonishingly magnified yet further. With a hoarse cry, he gave a final thrust full in to the ballocks. The muscles in his arse bunched under her hands and she held fast, gasping as she took the spasming jolts of his organ...the bursts reverberating again and again deep inside her belly.\n\nTheir bodies strained together, momentarily motionless, cock and cunny fused in deepest conjunction, then they collapsed, panting harshly.\n\nThe hammering pulse ebbed in Aoife's ears, melding into the muffled flow of the waterfall.\n\nShe lay limp, insensible to Declan withdrawing from her body, insensible to the rivulet of spunk and blood welling from her freshly initiated orifice...insensible to everything save the rapture. She was floating...drifting...she was swimming in an endless warm haven...\n\n'Twas some time later when Aoife at last came to herself, still in the torpor of Eros, to discover Declan covering her body with his cloak. He eased himself to the ground murmuring something she could not make out, then curled up behind her under the wool cape.\n\n* * * * *\n\nWHO could blame had I loved that face,\n\nEre my eye could twice explore her;\n\nYet it is for the fairy intelligence there,\n\nAnd her warm, warm heart, I adore her.\n\n--- Charles Wolfeby\n\nDeclan's eyes eased open to behold in the grey morning light the large, lichen-speckled boulders near his head, and he heard the steady flow of water. The events of the previous night came back to him in a rush: the savage battle with Blaylock, the grim triumph of justice, their flight from Rossnalough Manor...\n\n...and the violent passion that had resulted in the rending of Aoife's virginity on this very spot. Even now they lay in the sheltered crevice next to the falls --- between the stones and under the sweeping pine boughs where he had concealed himself two weeks ago whilst watching her bathe...the happy day when he had first discovered Michael's identity.\n\nThey were presently lying spoon fashion on the bed of fragrant pine needles, naked under his cloak --- Aoife's head was nestled against his neck, her back curved into his chest and belly, and her bottom was snug to his pelvis. She was asleep. Declan's lower arm was folded under his head, and his upper arm was wrapped round her torso. Against her buttocks, his morning stiffstander pressed plaintively. Declan tilted his head to nuzzle her hair...inhaling the faint nettle scent of the soap. The brown color had washed out, and her tresses fanned out, even more red than the dried pine needles under them.\n\nThe unbounded emotions flooded him. Aoife...his Aoife...he was besotted. After months of longing, he had not fathomed how yet more sweetly his heart could ache. What had overcome him last night he could not explain...he had not meant to be so rough...in any of his amorous musings that had addressed her innocence, he had imagined a gentler, more measured coupling.\n\nIn truth, the joy of once again finding this beloved lass after having lost her had long surpassed all other considerations. In his yearning thoughts, he had not pondered overlong whether or nay she was virgin still. If, in the intervening months apart, she had lain with another lad, he would have been jealous, aye so he would...but his love for her would not have faltered.\n\nLast night, even hours after the deadly confrontation with their mutual enemy, his body had continued in a state of agitation...an agitation that had never before persisted after his victories in the boxing ring...and that agitation had transmogrified unchecked into a rutting fervor.\n\nIn the shifting firelight, there had been an intense, artless expression in her pale blue eyes that had catapulted him into action without further thought. The primal urge to penetrate her nubile female body and fill her with his seed was the only sensation of which he had been conscious.\n\nDespite his rational feelings, Declan could not deny a rudimentary, possessive, male jubilation at the sensation of her virgin flesh rupturing round his battering weapon. Within seconds his organ had forcefully ploughed open a wondrous, heretofore untouched channel, and as she had whimpered his name, he had nigh wept with the unworldly pleasure of experiencing the consummation he had craved since he had first laid eyes upon this fair maiden.\n\nBut Aoife, the darling lass, had not recoiled from the blunt and painful exigencies of Love's demands...her own fumbling eagerness evidenced a like urgency on her part, and he had felt the rapturous transports of her body upon his cock that had sent him over the brink in spasming ecstasy.\n\nThe sleep of amorous bliss that had followed had not been without disruption. Declan had woken when Aoife, evidently in the spell of a nightmare, had thrashed and cried out in her sleep. Holding her close, he had stroked her hair and kissed her damp neck, murmuring till she fell into a more easeful sleep --- after which he had risen to assure himself of their undisturbed sanctuary. After scouting the nearby dark woods, he had returned to stoke the firepit and turn the garments on the stones to expose the reverse sides to the heat before returning to again lie next to the slumbering maid.\n\nNow with the morning light, he felt her warm, lithe body molded to his...felt his cock determinedly probing between her buttocks...felt the tip of her breast repeatedly nosing into his palm with the motion of her slow breaths. More than anything he yearned to mount her again...to join their bodies in the transcendent, raw motions of Love.\n\nAlas, his drowsy state had dissolved too quickly to shield him from the tumult of sensations that now took possession of him, both physical and metaphysical, thwarting his randy bent. Gingerly he slid out from under the cloak and stood, tucking the wool garment round her. Thankfully, 'twas voluminous enough to fully cover her small body from neck to toe.\n\nWith his stiff cock swaying, Declan stepped out from under the pine boughs onto the bank of the pool where the fire had burnt down to embers. His sore body protested --- limbs, belly, head, hands --- in the manner with which he was accustomed following a fight, and looking down, he beheld the usual bruises on his arms and torso.\n\nWith a humorous shake of his head, he realized that every episode of sexual congress in his life so far had been preceded by a fight...God grant he need not every time be punched in the face ere he mounted a lass! He grinned, his split lip stinging.\n\nBut novel this time was an unfamiliar sensation of tenderness in his throat. He palpated his voice box. Choking was most certainly a violation of Broughton's rules of boxing, Declan thought wryly. Last night he had been so roused...from murderous rage to desperate defense to fevered lust...that he had been insensible to the injuries he had sustained.\n\nHe breathed deeply. The air was cool, and the morning mist was heavy, lacing among the tree limbs and hovering upon the water, scented with moss and fire smoke. Over the plume of the falls, the vapor was hazily spotted with pink and purple flowers.\n\nThe garments on the stones were cold but dry save for a residual dampness in the collar and cuffs of their coats --- and Aoife had succeeded in removing the bloodstains. Declan pulled on his breeches and shirt, which was torn from the collar to his belly. On a quick patrol of the vicinity, he heard the intermittent melodies of blackbirds, robins, and song thrush among the green trunks and rustling leaves but found no evidence of human activity.",
        "Returning to the falls, he addressed himself to the embers, using dry twigs and leaves to presently kindle a decent fire.\n\nSeveral paces downstream he padded over the cool, damp stones up to the edge of the water, opening his breeches to piss. There round the base of his cock was the feathery circlet of dried blood from Aoife's virginity. In wonder he stared at it. Of all the blood he had seen in his life, none before had ever stirred him so as this tender trace...not even Blaylock's sanguinary expiration.\n\nLove!\n\nJoy and despair overwhelmed him.\n\nDeclan forced his thoughts away from the exquisite sensations that had attended the winning of this rare token and emptied his bladder ere walking back to the falls. He bent to peer under the pine boughs at the dear lass --- she was yet asleep, the red of her hair glowing above the brown wool cloak. He straightened and his eyes soon fixed upon the ceaseless flowing water as he looked inwardly.\n\nThree days ago, he had been standing on this very spot...pondering the troubles that tortured his heart: Blaylock...Aoife...Ireland.\n\nOne trouble had been resolved since then: Blaylock. Together Aoife and he had dispatched him to Hell. Did Declan Muldowney rejoice? Aye. Exult? Aye.\n\nBut his triumph in this regard was tempered by a more sober understanding. His mother, father, and brother were long dead, and he had lived nine years in ignorance of their murders...in ignorance of his identity. He felt in his heart that the deed he had done was righteous and necessary...and yet this justice would not restore the lives of his family members, nor wipe away the years of hardship he had experienced. No justice --- neither formal law nor revenge --- could ever accomplish that restoration.\n\nThe crimes against Aoife's family had been more recent...how did this justice sit with her?\n\nAnd was this trouble in truth resolved? The scene of carnage left behind in Blaylock's office would no doubt provoke a hunt for him, for not all the witnesses were dead. Three other Yeomen had seen him before he was brought to Blaylock's chamber: the two guards and Lieutenant Drury. True, they ken not his name, but he supposed that his appearance was distinctive enough to launch a search.\n\nWere there any clues to point to Aoife's presence in the room? Declan wracked his brains --- the three Yeomen who knew of Aoife O'Farrell's involvement no longer lived. She had thrown the remnants of her garments into the fire...what else...her dagger she had taken, her pistol was the same as those carried by the Yeomen and did not indicate the presence of another outsider.\n\nDeclan's pupils dilated --- the Yeomen who had knocked at the door, concerned after the first gunshot! They had entered and seen Blaylock gripping the neck of the boot black! Shite! A hunt might be underway for Michael as well!\n\nBut, he reminded himself --- God willing, all this was presumably within hours to be a moot point when the rising began tonight. With the attack of the United Irishmen and Defenders, the Yeomen would have more pressing concerns than tracking down the missing boot black.\n\nAye. Tonight.\n\nWith the looming battle, Declan's second trouble spiraled into an even more acute dilemma.\n\nAoife! Fate had been merciful to his long-beguiled heart and allowed his love to be requited...if was it indeed love on Aoife's part. Or had their encounter merely been a strange twisting of the night's unfettered excitement? How he wished he could have seen her face as they swived upon the ground! In the darkness, only the glimmer of her eyes had been visible...too faint to read her expression.\n\nBut perhaps Nature had known best...he had scarce been able to contain himself last night, so aroused had he been by the sensations of touch and sound alone: Aoife's lissome body writhing and heaving under him, her smooth limbs clutching him, her breath hot against his cheek, her wee, slippery cunny rising to taking his thrusts...her moans and panting nigh inseparable from his own. Declan's eyes closed and his fists clenched as the ache of wanting swelled again.\n\nHis heart now felt a new torment --- the clock ticking inexorably towards the impending rising. Tonight the men would amass with their pikes and guns. Where would he be on the morrow? Would he be alive? Mortally wounded? In prison? Transported to Van Diemen's land? How long would the rebellion last? What would the upcoming days, weeks, and months hold?\n\nWhat would become of Aoife? Would she continue to work as a seamstress? For weeks now she had, in her guise of Michael, prepared side by side with the rebels --- her patriotic fervor equal to anyone's. Did she intend to go into battle as Michael? Would she be in the thick of the fighting?\n\nDeclan was distraught at that possibility. Aye, she had every right to fight for her country, just as the men did --- 'twas not for him to dictate what expression her devotion should take. But he could not escape the truth that she had not the strength of a man...guns, pikes, and knives could only go so far. How could he remain stalwart in battle when he would be consumed with worry about her?\n\nDeclan collected himself and turned away from the rushing falls to duck under the pine boughs and step over the irises and ferns. The wee lass was yet asleep upon the soft bed of pine needles between the stones. She was lying on her back, only her head and one upturned palm visible above the cloak.\n\nHe sank to his knees next to her hip, his eyes tracing over the small shape under the wool cloth and continuing to her face. Her fiery locks were spread upon the ground about her, and her thick, russet eyebrows curved over her milky skin. A fringe of long, heavy lashes rested upon her cheeks. His eyes lingered upon the shadowed parting of her pulpy, rose-colored lips...the pressure stirred in his throat and groin.\n\nAh, Morrigan...what have ye wrought?\n\nAt every moment of weighty struggle in Declan's young life, the Morrigan --- that black-winged goddess of fate and death --- had guided him to his destiny. The most recent sign had been the ebon feather that had pointed him to this waterfall to discover the lass who possessed his heart. Aye, the Morrigan had guided him to his present quandary, and Declan --- striving to understand the goddess's intent --- was beset with anguish.\n\nIn some sanctuary hidden away from all the troubles of the outside world, he wanted only to lie with this prized lass...fucking and fucking...stopping only to eat and sleep. That was one part of him.\n\nThe other part knew that he could not forsake his Erin --- downtrodden by centuries of English rule. Tonight he would take up his weapons and march into battle to fight for her freedom.\n\nHe had not been...was not afraid of death...not on his own behalf. But he had on the brink of battle discovered an otherworldly joy that now made life infinitely precious. Not knowing whether he would ever see Aoife again, a lifetime of love needed to be crammed into the few, fleeting hours remaining in the day.\n\nFrom his kneeling position, Declan stretched out to lie upon his side next to her, his shirt and breeches touching the bundled cloak. He propped his head on his elbow and continued to study her face, grateful that the swelling of his black eye had not fully closed it to obstruct the vision before him. By and by he raised his hand and softly brushed a stray lock of wavy, red hair back from her pale forehead. She stirred, russet lashes lifting slowly.\n\nThe sudden, faery blue of her irises was the brightest thing in the misty grotto, and Declan was transfixed as she looked up at him, their faces a foot apart. A lovely blush rose upon her cheeks, then her lips curved in a hint of a smile. But her eyes were smiling more.\n\nHis eager heartbeat rushed into his throat, erupting over his lips as a grin. He attempted to say good morning, but the words came out as a croak.\n\nThere was a movement of the wool garment and her hand nearest him emerged from under the collar to reach towards him. She pulled aside the torn placket of his white shirt, and her brows drew together as her fingers grazed the front of his neck. The motion of her arm shifted the cloak down to bare her own neck and collarbones --- as well as the reddish bruises and fingermarks from Blaylock's assault. Declan's fingers made a like appraisal, touching her neck.\n\n\"Your neck looks like a right black pudding,\" he rasped.\n\n\"Yours too. And your eye.\" She looked worried.\n\n\"'Twill be fine...so long as you dinna stab it with a stick.\" He shook his head. \"What the Devil was that anyway?\"\n\n\"A knitting pin.\"\n\n\"Christ! I'll never make the mistake of crossing ye whilst you're knitting!\"\n\nShe smiled. Then her countenance came over triumphant, eyes agleam. \"We did it!\" she exulted, her voice soft and throaty.\n\n\"Aye, so we did,\" he agreed. One corner of his mouth lifted. \"And we killed Blaylock.\"\n\nHer fingers paused on his shirt placket, her eyes in a moment widening in comprehension. He grinned...now she was laughing. Never before had he seen her laugh...how bonnie she was! An ache rose in Declan's heart. There were precious few causes for joy in Ireland...and he had been gifted with one.\n\nHer gaiety subsided as their gazes grew intent.\n\nDeclan inhaled and exhaled deeply. From her collarbone, his fingers traveled up her neck to trace over her face, marveling at her strange beauty...marveling at the novel sensation of gazing his fill without concealing his emotions. His fingertip caressed the smooth skin of her forehead and the curves and angles of her rosy cheeks, then followed the arc of a lush brow. Down the long slim nose his forefinger slid, lifting off the slight uptilt of the tip. 'Twas a mystifying puzzle: the harmony of delicate and strong features with the spirit in her luminous eyes.\n\nAoife's hand had slipped down from his bruised neck and, between the torn edges of his shirt, her fingertips were stirring in the hair upon his chest...rousing his heart to a faster beat.\n\nHer glowing eyes were fixed upon his as his finger moved down from her nose to outline the shape of her small, plump-lipped mouth, feeling the silky skin and tender flesh. As the pad of his rapt finger tested the moist parting, her lips opened to nip at him playfully.\n\nBy instinct, his digit pressed gently into her mouth...a moment later a distorted groan escaped his battered voice box at the sucking clasp of her lips and velvet tongue. His cockstand surged in his breeches. Her hand moved from his chest to his shoulder, an urgent beckoning evident in the movement of her fingers at the awkward angle.\n\nDeclan saw in her gaze an entreaty equal to his own. In an instant, his finger was replaced by his mouth, joining with hers...so warm, so soft...moving together in the shared breath through their parted lips. His lower lip was swollen from the punches he had taken, but paradoxically the clumsiness rendered the sensation yet more voluptuous, yet more raw.\n\nHe shifted over her atop the cloak, eagerly taking her into his arms, but trying not to crush her. When he felt her wriggling under him, he realized she was endeavoring to drag the entrapped cloak out from between their bodies. With a momentary easing of his weight off her, she pulled the garment aside and tugged at his shirt. There was a brief glimpse of her nakedness, then the cloak covered them both.\n\nAgain their mouths fused. Declan's fingers laced in her hair, whilst her arms encircled his neck. The hunger was as keen as last night...but yet more profound, and they tarried with the new-felt desperation of their circumstances...lingering over every sensation in unspoken accord. For several minutes, their open lips softly nipped and sucked at each other, the damp skin intermittently adhering and easing apart, ere their tongues at last partook in the amorous communion.\n\nEven then, the poignant sensuousness was protracted...the warm muscles dreamily...wetly entwined. The sweetness of Aoife's mouth was an intoxicant to Declan's senses, flooding him with a surfeit of libidinous yearnings. Embracing this lass, he was lost to the outside world...lost to everything save the urge to experience all of Love's joys with her.\n\nTheir mouths fed upon each other in wordless wanting, Aoife's arms tightening round him, her fingers in the hair at his nape. His upper body partially covered hers --- his weight supported on his hip, elbow, and knee --- the latter separating her legs as it pressed against the ground between them.\n\nGliding down from her head, his hand burrowed under the cloak. As it explored lower, he felt the rise and fall of her chest with her quickened breathing, then his fingers made an enraptured survey of the enticing terrain hidden under the garment...the slim torso...the coy protrusion of her tempting, small teats...the soft nubbins of her nipples.\n\nHis fondling grew more passionate and their mouths separated but remained open, his hovering over hers, and their gazes locked together. Cupping one breast then the other, he gently squeezed and stroked each warm, springy handful, feeling the buds entrancingly stiffen, feeling her breaths come faster, and seeing her eyes grow lustrous.\n\nAn incoherent rasping sound came from his throat as his excited fingers toyed with her sensitive flesh. Ducking his head under the cloak, he began kissing her upper chest below her collar bones, striving to keep the cloak in place so she wouldn't be cold. But as his lips traveled lower onto the rise of her breasts, Aoife pushed the cloak down past his shoulders, lifting her head to watch him in wonder.\n\nThere before his face, naked in the misty woodland, were her quivering, milk-white orbs with the dainty, standing rosebud peaks. His heart racing, Declan moaned and bent to strew kisses upon the luscious flesh, his tongue coming out to lap at the crests with soft passes, painting them with his spittle so that they glistened in the morning light. Clasping one breast, he compressed it upwards and covered the end with his open mouth, latching on to the sweet, resilient flesh and suckling deeply, feeling the tip elongate further with the caresses of his lips and tongue.\n\nAoife's fingers twined in his hair, and she whimpered, her body slowly arching. After several moments, he let her teat slip from his lips and sighed at the vision of her swollen, vivid pink nipple. Again he bent his head, now tickling it with feathery kisses...the pale mound trembled in his palm.\n\nFuddled with the spell of Eros, Declan drew the cloak away entirely, baring her body to his gaze.\n\nHis eyes in fervent lust traveled over her nakedness.\n\nHer further knee tilted nervously inward, pressing against the outside of his thigh that rested between her legs. If not for the obstruction of his leg, the movement might have succeeded in partially shielding her mound from his covetous examination, but lying alongside her as he was, propped on his elbow, he had a bewitching view down her flat belly, past her tiny oval navel, to the fiery crested wee hillock.\n\nWhen his eyes lifted, he saw the brightening color in her cheeks and her uncertain hand clasping a handful of the discarded cloak at her side. In that pause, soft birdsong sounded over the flow of waterfall.\n\n\"Oh love, you're so wondrous fair, so ye are!\" he croaked. Her lips parted. More slowly did Declan drink in the sight of her exposed charms, dazed at his first daylight view of a lass full naked at his side in mutual amorous accord. Despite her petiteness and slimness from a life of toil, Nature had not slighted her in the blossoming bounty of female beauty. Inwardly, Declan shook his head in rueful disbelief that she had succeeded in passing as a lad among dozens of men.\n\nIn the early hazy light under the trees, her smooth, milky skin glowed, accentuating the nubile outline of her form against the amber colored pine needles under her: the concavity of her slender waist...the graceful curve of her hips...the junction of her strong, lilting thighs...all displaying to perfection that saucy mount at the center adorned with its bit of red thistledown. He could not stop looking at it.\n\nUnconsciously holding his breath, Declan's hand moved deliberately down from her breasts, stroking in a meandering path, adoring the tender details of her light, curving form, noting a reddish bruise on her flank, no doubt acquired in last night's affray. His large hand with its dark tracing of hair on the back and the congealed lacerations over his knuckles was a stark contrast to the delicacy of her pale skin.\n\nHe lingered for a moment upon her warm, satiny belly, then he lifted his hand from her...pausing poised over the prize, the pulse beating in every finger. Through the pine boughs and dissolving vapor above, a ray of light illuminated the miraculous spot, setting the demure patch of faery fluff aglow. The lacy growth flaunted rather than concealed the provocative contours of the little mound under it.\n\nAt length, with a slow exhalation of breath, the tips of Declan's fingers descended and --- as light as a butterfly's wings --- grazed against the very surface of the radiant halo. Aoife shivered. Again he brushed across it and felt the infinitesimally soft crinkle of her curls. With his eyes traveling back and forth between her face and mound, he caressed her more purposefully, reveling in the ebullient bounce of the silky hair...twirling his fingers in it, gently tugging it, petting the rise of flesh under it.\n\nHer body grew subtly restless --- her breath quickening, her knee pressing more firmly against his thigh that separated her legs. Amorous impulse struggled in her countenance, fighting the hesitant expression there in possession. Aye, last night's hurried coupling had been shrouded in the darkness, and her shyness no doubt was fortified by the unabashed revelations of Eros in the candid morning light.\n\nDeclan bent to press his mouth to her open lips, kissing her as his hand cupped her vulva...his palm covering her hair and his fingers curling between her legs, sighing at the warm, impudent bulge of her mound and lips. Even as his tongue snaked into her mouth, his fingers delved in her fuzz for the notch at the front of her split...his middle finger dipping down to find the spot of which he was now cognizant...the spot that he had felt last night...the magical bud...aye, clitoris...oh God! Aoife's little clitoris was far from quiescent...'twas already fair swollen!\n\n\"Ohhh!\" she whispered, her hips rising slightly.\n\nWith gentle motions, Declan rubbed the sensitive button...the pad of his fingertip rolling the firm morsel, stroking it, palpating it. Lifting his mouth from hers, his breath came in rasping pants as he watched her face to gauge her response --- feeling her own breathing rapidly increase against his cheek, mingling with his. Unmistakable desire had won out in her eyes. \"Oh, Aoife...\" he murmured, jubilant at pleasuring her. His lips brushed hers ere looking down again.\n\nLying beside her, he could not see past the curve of her mound, but below the hollowing of her belly with her breaths, he beheld his hand between her thighs...his middle finger lewdly arching up and down as he roused her plaything. Her knee had now happily tensed in the opposite sense, rotating outward to increase the space between her legs, and Declan delayed not in taking advantage of the enhanced exposure. His finger stroked back from her clitoris, identifying by feel the soft fullness of the outer lips, then the delicate, moist edges of the inner lips.\n\nHis eager exploration soon grew more focused --- between his forefinger and middle finger, he parted her inner petals. An urgent groan escaped him as he felt the hot, honeyed cleft...his fingertip pressed reverently between her lips, finding the tiny wellspring of the enchanting fluid. And he felt in awe the evidence of his cock's successful work, for where last night his finger had found no admittance, he was now able to wriggle the tip up into the snug, wet aperture. They moaned together.",
        "In a paroxysm of craving, Declan sprang up, getting both of his knees between her legs and pointedly casting his fevered gaze upon her privates. Aoife demurred momentarily, one leg drawing up protectively.\n\n\"Oh pray, sweet love, let me see your dear cunny!\" he implored, bending his head to kiss her upraised knee. His finger burrowed between her now pressed together lips and tickled her little pip, touch guiding him as he sought out her eyes. As her legs slowly opened, he kept his eyes upon hers, fascinated by the mix of defiance, shame, and excitement in her countenance.\n\nAt last, his gaze dropped.\n\n\"Jaysis!\" he breathed. Her knees were bent, and her legs were partially spread. His organ had been rigid and straining in his breeches --- ready to mount her since he had first knelt next to her. Notwithstanding its plaintive surging, his yearning to dally full measure with this lass in Love's game won out. Declan sank down to his belly and elbows, gaping with all his eyes at the incomparable vision. There but a foot away was the precious article that he had been longing for years to see --- completely bare and defenseless.\n\nEncouraged by her provocative acquiescence, his hands pushed upon the back of her thighs, lifting her toes off the pine needles as he rolled her hips even further up so that he could see it all --- from her mound to her bottom hole. Aoife's face was flaming red, but she held the position with her knees drawn up towards her shoulders. Next to her hip, he noticed her fist gripping the cloth of the cloak.\n\nThe extreme posture displayed her female parts most advantageously --- shamelessly thrusting them out for him to see, and the sudden abundance of treasures overwhelmed Declan with carnal joy. He thanked her with a profusion of kisses upon her charms, her fresh lass scent enflaming him. Methodically his eyes devoured the lascivious sight...his racing, rutting mind piecing together past impressions formed by touch and brief glimpses with the beauties now full displayed before him.\n\nHer little mossy hillock at the front separated into a pair of softly puffed, pale pink outer lips boasting a sprinkling of bright red hairs. Between them, Declan now perceived that the sweet communion of the more vividly pink, dainty inner lips formed a coy hood over her clitoris. Together they delineated a flower or diminutive butterfly. The bawdy picture was rendered complete by the wee, clenched dimple of her light pink anus below. The libidinous rosiness of her secret openings was set in striking contrast with the surrounding paleness of her thighs and round buttocks.\n\nDeclan's finger eagerly resumed its former place, fondling her bud, and discovered the caresses were soon causing it to grow stiffer and stiffer yet...likewise her little wet lips. Indeed, the increasing turgor was causing the sensitive excrescence to stand erect and the inner lips to thicken and fan open in primitive supplication. He could not resist her...moaning, he bent his head to lap at the stiff nubbin with soft, fluttering strokes.\n\n\"Hoooo!\" she blurted. Oh, how fine her lovely body squirmed! The fragrant pine needles stirred about her.\n\nRaising his head, Declan's fingers returned to part her lips yet further, and he groaned to behold the quick of the matter at the rear of her split --- the lacerated edges of her maidenhead encircling and closing over the tiny, dewy orifice of her vagina. His lips lowered again to press kisses of gratitude upon the wounded aperture that had so valiantly borne the broadside of his greedy devotion last night. As he lifted his mouth, a shimmering droplet welled up from within and slowly stretched down to the pleated skin of her bottom hole. In answer, his cockstand throbbed in his breeches and emitted its corresponding preparatory fluid.\n\nNow the tip of his forefinger tarried in the hidden inlet, gloating upon the wondrous lubricity and gradually working its way up the warm, squeezing channel. Oh, paradise! Aoife's head lifted, her eyes beseeching as her cunny clamped upon his probing digit. His heated gaze held hers as he gently rubbed and rubbed in the slippery, nipping passage, teasing her for several moments ere easing out his finger. The large digit was shiny with her lass fluid and was yet connected to her opening by a glowing string of the egg-white-like nectar. Her eyes were wide circles as he raised the bedewed finger to his lips and sucked it clean...a devilish grin overspreading his face.\n\nWith his breeches blatantly tented and his emotions equally undisguised in his face, Declan rose and crawled over her, covering her mouth with his to share the intoxicating essence of her cunny. \"Aoife...\" he muttered between hoarse breaths, helping her as she tugged his shirt over his head. Together they struggled at the buttons of his breeches.\n\n\"What is this, pray? More black pudding?\" she murmured, peeling the laboring fabric from round his aching staff.\n\n\"Aye, love. 'Tis a fine blood sausage ye conjured up in me breeches.\" He rose to his feet to yank off the garment, she sitting up to assist. He now stood full stripped before her.\n\nAoife leant back upon her hands with her raised knees pressed together and blocking the view of her maiden toy. She stared up him, her big aqua eyes moving over his body with shy curiosity, her cheeks flushing as her gaze came to rest upon his engorged organ. 'Twas standing rigid, brazenly uncapped and keen for amorous engagement, the crown glossed with anticipation.\n\nHer eyes lifted to his and they stared at each other, their expressions entreating. For a moment, the only sound was the cascade of the waterfall --- then she sank back onto her elbows and opened her knees.\n\nWide.\n\nMost wide, indeed.\n\nHer wee pinky slit parted and spread open in the morning light.\n\n\"Oh sweet love!\" he cried, falling to his knees between her legs, his rampant weapon tautly swaying. Heart thudding, he lay forward on her, and her arms at once went round his neck, pulling him close. Their mouths blent in an unrestrained mix of kisses, hot breaths, and incoherent sounds as Declan reached down between them to angle his cock to the target, lodging it between her lips and widening the groove as Nature guided him to the proper place.\n\nNot so rough this time, Declan admonished his overeager steed as he began to push. In the reality of daylight, the lecherous endeavor seemed an astonishing proposition. She was so little under his large body --- the most petite lass he had ever touzled. He mustn't hurt her...mustn't tear her or crush her. But, he reminded himself, last night they had managed to join their sexual organs according to Nature's intent --- with most ecstatic results.\n\nAoife's body tensed as his broad crown tested her recently breached orifice. Gently he pushed against the restricted quarters at the entrance, assessing her face as he felt the slick flesh begin to dilate...she whimpered but did not retreat from the bluff invasion. Easy lad, easy now. The slow, careful venture most acutely magnified the erotic sensations. Under the steady pressure, he felt her small hole distend and distend, at last yielding and taking the bulbous head inside her body...\n\n\"A-a-ahh!\" Her breath faltered.\n\nHe moaned...his cockhead was now encased in the hot grip of her cunny, the constriction of her hymeneal ring appreciable round his shaft just below the prominent flange.\n\nBuoyed by the delicious, successful foray, Declan pressed on...a deliberate advance into her vagina, both of them groaning as the thick pillar forged its way inch by inch up the narrow, compressive sheath, stretching it gloriously wide.\n\nKeeping the brunt of his weight on his elbows and knees, he gathered her to him as he buried himself inside her body...embedded himself to the cods in the luscious embrace of Aoife's female organ...the firm portal of her womb a triumphant crown atop his cockhead. His heartbeat whooshed in his ears with the rushing waterfall. Sweet Jaysis! Aoife!\n\nHe was reeling with the transcendent act of penetrating this lass...the heat, the wetness, the squeezing sensations along his length as her small pelvis bravely accepted the uncompromising overfilling. Her arms and legs wrapped round him, her breasts pressed to him, and her tongue met his. For several moments, their fused bodies simply strained together, claiming every last measure of Love's wanton junction.\n\n\"Aoife, I love you!\" he gasped as their mouths came apart. \"Oh Declan...\" her whisper quavered, \"I love you so!\" Their eyes glazed in mutual, voluptuous joy at the profound joining.\n\nDeclan began to move in her, again restraining the violence of passion to savor the act of copulation --- imprinting every sublime sensation in his memory, yet denying the prospect that these stolen, rapturous moments might soon be his last solace. He thrust inside her, with each stroke feeling the tight, plush clasp of her muscular channel...the lubricious molding of her flesh to his robust helmet and to every bulging ridge and vein in his shaft...oh what a rare, fine fit! As her limbs clung to him, her hips rocked up and down to fortify the driving rhythm of his piston. Her soft love noises were sweet sustenance to his desperate ears.\n\nHad any passerby happened upon the intimate scene, they might have been shocked by the entwined lad and lass --- both stark naked --- heaving and pumping together upon the ground amid the flowers and pine needles, their unchaste panting and moans mingling with the gushing of the nearby waterfall. Yet when viewed with the pure eye of faery discernment...when seen in the context of the singing birds and nodding forest flowers witnessing the act...'twas evident that the young lovers were but creatures of Nature themselves, primally joined at their male and female parts according to Her purpose.\n\nDeclan sat up, his weight upon his widespread knees between her legs, and his enraptured gaze roved over the wee lass writhing in abandon below him. The flame of her red hair was a wild tumble upon the ground, and her lovely face was rendered lovelier still by the transports of sexual congress...her lush lashes hovered at half-mast over her shining eyes, her cheeks glowed, and her open mouth panted.\n\nLower, her pert breasts most delightfully bounced and shifted with his thrusts, the nipples standing stiff. Her left arm was flung back upon the needles above her head, revealing a tiny, coy wisp of red hair in her armpit, whilst her right hand clasped his flexing thigh by her hip. And still lower, his eyes at last arrived at the spot where they were united.\n\nDeclan stared transfixed.\n\nOnly once before in his life had he briefly glimpsed his weapon embroiled in the thick of Love's battlefield --- with Marianne Burke when she rode astride him, and the mirror had fleetingly shown him what was what.\n\nNow with Aoife, all lay flagrantly...beautifully exposed before his eyes...every blessed detail! And naught prevented him from studying the lascivious display at his leisure...as much leisure as a lad who was nigh on the brink of spilling his seed could have.\n\nHer tender little lips were lewdly distorted from their usual vertical configuration into a wide, straining circle about his throbbing engine...the junction of her swollen clitoris with the inner lips now resembling a wishbone by dint of the remarkable distention of the latter. Her outer lips, in flagrante, reminded him of an earthen, Celtic ring fort, with the red hair as a scattering of flowers...but this fort's defenses had not been prepared for the blunt invasion of a hefty weapon directly into the center...forcing the walls outward. He grunted in exultation, taking the bawdy metaphor to absurdity.\n\nIndeed, with no obstruction to his awed eyes, Declan watched his cock penetrate her cunny...over and over...pushing into and sliding out of the heavenly, pulsing stricture of her vagina as she whimpered and sighed, her hips bobbing in a tense dance. As the sturdy column emerged from her body, her inner petals clung tight, and his hot skin glistened with its coating of her nectar. Then he flexed his buttocks, gaping at the extraordinary sight of her tautly stretched orifice taking his vigorous staff...taking it and taking it till the ring of her overburdened lips sealed to his belly at the base of his cock and his ballocks pressed to her bottom hole.\n\nHis groans at the spectacle prompted Aoife to rise onto her elbows in evident eagerness to see it too. She craned her head forward and curled her hips up, and Declan slowed his thrusts so that her wide, stunned eyes might follow the motions of his piston...in and out...in and out...his short, dark curls meshing with her fiery red ones with each deep sheathing. But soon he realized that she could not fully see the critical junction as he could...if only for a piece of mirror to share with her the astounding sight of their engorged, shiny organs...joined and pumping together!\n\nHe eased completely out of her --- the dilated aperture squeezing closed, and his cock snapping up to his belly. With his fist wrapped round the base, he tilted it to show her his lusty one-eyed beast, well-oiled from the ruddy knob to the short hairs with Love's lubrication. \"See how I love ye, lass?\" he rasped, his eyes pinning hers...and when he saw the plea in her incandescent blue eyes, he growled and mounted her again, arse clenching as he drove full into her with one unwavering thrust to the hilt...the narrow tube dilating over him.\n\n\"Unnnhhhh!\" she moaned. Her head fell back, and her hand gripped his thigh. As he worked her squeezing passage, her other hand came down and her curious fingers unabashedly explored what she could not see directly...feeling her own effaced cunny lips and, between them, the indriven instrument of her sweet torment.\n\nWith the added stimulation of her fingers upon his eager machine, Declan felt the relentless tightening of his belly, thighs, and ballocks. Seeing her finger now go to her imploring, erect clitoris and play with it as he had secretly witnessed that first time at the waterfall, his body thrilled in ribald delight. Oh, ye sweet, darling lass!\n\nThe pleasure swelled more and more intense...and Declan could scarce control his hips as he drove into her, varying the depth and speed of his excursions, striving to heed the urgent messages of her body upon his organ. Her vagina was fast growing tauter and even more compressive as his cockhead rhythmically rubbed half-way inside her. Upon her bud, her finger was dancing up and down, and he touched her forearm to feel the fluttering of the small muscles there. \"Aye, love...aye!\" he groaned.\n\nDeclan's grunts were spilling unchecked now at the infallible approach of Eros's crisis and the glory of this lass rising in the throes of ecstasy with him. Aoife's knees were up by her shoulders --- her hips tilted and her spread vulva offered up to his stroking cock. Eyes closed and head arched back, her yearning little quim climbed and climbed onto the impaling spit. Declan pushed deeper into the exquisite, trembling pressure of her love-sheath, hearing her chaotic panting...gasping himself as the tension coiled in his limbs and belly, swelling in his muscles...sending surges of pleasure into his pounding organ.\n\n\"Oh, God!\" he whispered.\n\nAoife's pants abruptly stilled, and her tensed body froze. \"O-O-OH!\" she burst out. \"Oh Declan!!\" Her sweet vagina in a voluptuous rush began to ripple and spasm upon him, and her hips rocked up and down. Oh Love! Aoife was spending on his cock! Oh God! The beauty of her face in her ecstasy was impossibly erotic.\n\nIn that instant he was gone.\n\nThe rapture at once uncoiled in his pelvis, limbs, and chest...the waves of pressure expanding in a joyous deluge from his stones to his cockhead as the muscles in his buttocks knotted. Ploughing full in to lift her womb upon his crown, he cried out her name with the eruption, filling her with plume upon exuberant plume of Love's blissful geyser.\n\nFor several moments their enjoined, swollen sex organs vibrated and heaved...their bodies striving together ere the ease flooded them. The onslaught of radiance was so profound that Declan was helpless to do anything save lay forward upon her, panting and laughing in the embrace of Aoife's limbs --- her own panting a happy music by his ear.\n\n* * * * *\n\nDeclan's consciousness surfaced before his eyes opened...his soul was buoyed by a supreme beatific clarity. He heard the muffled rush of the waterfall and the birdsong in the trees above, and he smelt the faint scent of pine needles. A smile formed upon his swollen lips as his eyelids slowly lifted.\n\nWhat the ---?! He was alone under the cloak!\n\nAoife! In an instant he was on his feet. Shite! Had she again fled him --- like she had from the stone cromleach last year?\n\nPushing through the low-hanging pine boughs, he discovered her upon the bank of the stream by the falls and his frantic heartbeat eased. She was standing behind a large, table-level moss and lichen speckled boulder, clad in her white linen shirt and plying a needle and thread to the blue breeches that they had commandeered from the fallen Yeoman.\n\nAs Declan emerged from under the trees, Aoife glanced up at him then back down, seeming embarrassed. Without the spell of sensuality immediately enveloping them, Declan felt a nervous excitement at the prospect of conversing with her, and realizing he was stark naked, grabbed his drawers from a stone and ducked back into the sheltered grotto.\n\nOnly his breeches could he find upon the ground. After pulling them on over the drawers, he again stepped onto the bank, bare-chested, where he scanned the garments yet on the stones. \"Have ye seen me shirt?\"\n\nAoife set aside her stitching and rummaged in her knapsack. \"Will ye sit?\" She nodded towards the stone where they had sat last night. \"I'll get your wounds sorted.\"\n\n\"Dinna trouble yourself --- they're fine.\" His voice was still hoarse.\n\nShe shook her head and came out from behind the stone --- she was wearing naught but her shirt. \"Sit.\"\n\nDeclan at once forgot his tough stance and sat as ordered as she stepped up before him. With the difference in their height and his seated position, his face was level with her chest. At her prompting touch, he raised his face, perusing her with keen interest as she surveyed his injuries. He thought her the loveliest creature he had ever seen, and his heart stirred with tormented joy.\n\nNow full dry, her thick, wavy hair formed a tousled, red halo about her head and neck, ending a couple of inches below her shoulders. Her lips were subtly swollen and the surrounding skin was rosy --- a telltale of his vigorous kisses and scratchy beard stubble. She had mended her torn shirt whilst he slept, and the white linen garment, hanging to her upper thighs, was loose enough to disguise the bonnie figure under it. But it did drape her jaunty breasts most suggestively, and with the movement of her arms, Declan detected their intermittent jiggling under the limp fabric.\n\nAoife was presently standing between his spraddled legs, and with her small hand on his chin, was turning his face from side to side. In her inspection, her luminous blue eyes --- but a foot away --- momentarily encountered his avid regard, and her cheeks colored. Averting her gaze, she uncorked a small pottery jar, and with a fingertip began applying a cool, tingling balm to the lacerations on his face and scalp.\n\n\"What is that?\" he asked.\n\n\"More of the unguent I made for Rory Redmond's back.\" Her fingers parted the bristles on his jaw to access a wound therein.\n\nDeclan appreciated the distraction of her ministrations. After having shared with this sweet lass the most intimate of amorous acts, both rough and tender, he now in the frank light of day found himself tongue-tied with the force of his emotions. His eyes lowered to trace over her bare legs. When he had been so agog over her other exposed charms, he had not fully savored her pretty limbs: the roundness of her thighs that tapered to her knees, the swell of her calves flowing into her slim ankles...the graceful contours belying their strength.",
        "Upon the mossy stone below, her bare, white feet were between his, the difference in size striking --- how adorable her wee toes were next to his! The thought came to him that earlier that morning, swiving upon the ground, they had been in the opposite configuration: his feet between hers. He shifted upon the stone as his body stirred at the memory.\n\nAoife gently touched his black eye as she murmured, \"The skin here is sound, but it might help the swelling.\" The dabbing fingertip tickled upon his skin. \"'Tis fearsome purple, so it is...can ye see proper with it?\"\n\nClosing his good eye, he tilted his head to the side and looked at her from between the swollen lids. \"If what is presently before me is the finest lass in all Ireland, then my sight is true.\"\n\nAoife's reddish-brown lashes flicked, and her eyes rolled. \"Lift your arm and let me see that knife wound,\" she commanded.\n\nDeclan complied, raising his right arm and resting his forearm atop his head. Twisting, he observed a slash some three inches long upon his flank; 'twas not deep and the blood had clotted along it. So engrossed had he been in their concupiscent exertions that he had not marked the pain of the injury.\n\nAoife bent to examine the wound and with the motion, the edge of the shirt slid up a bit, exposing the faint crease where her thigh and buttock met and an inch or so of her creamy cheek. Declan's gaze fastened upon the bewitching sight. How saucily her pert bottom swelled out from her lithe thigh! His lips separated in longing to explore the tender flesh...he wanted to slide his hands under that teasing fabric and grasp her ripe buttocks...to turn her round and bend her over before him...!\n\nThe fabric folds in the front of his breeches straightened under the increasing pressure within. Aoife's eyes shifted down for the briefest moment, then, as her cheeks reddened further, she applied unguent to the slash. \"I thought it might need to be sewn, but it looks fine and thread would only increase the chance of festering,\" she explained.\n\nDeclan cleared his throat, struggling to master his randy urges. \"How did ye come by a needle and thread?\"\n\nAoife dabbed the balm upon the abrasions on his wrists. \"I keep them hidden in my knapsack. When pretending to be a lad, you never know what emergencies might arise.\"\n\n\"So being as how I always carry them meself.\" He grinned, his split lip twinging.\n\n\"Aye, you lads are in constant need of mending, so ye are.\" Aoife wrapped and knotted a strip of fabric about his waist as a bandage. \"Done.\" She straightened and indicated a nearby stone. \"There's your shirt.\"\n\nWhilst Aoife returned to her sewing on the breeches, Declan stood and stretched, his body stiff and sore from last night's fight. Donning more garments was not at all what he desired at this moment, but he retrieved his shirt, noting a neat row of new stitches closing the rent up the front. \"I see your point about mending. Ta.\"\n\nAs he tucked in his shirttail and rebuttoned his breeches, he watched Aoife work, attaching a small strip of linen near the waistband. Absorbed in her task, her pale blue eyes were alert, and her small, white hands quick. \"What are ye doing?\" he inquired.\n\n\"Adding loops for the rope belt.\"\n\nDeclan nodded. At length his brooding gaze lifted to the stream and woods. From the embers in the firepit and the angle of the rising sun he guessed that he had slept for a couple of hours. The morning was slipping away, he fretted...the urge to once more take her into his arms had come over him full force and fought with his awareness of the other impending claim upon his heart.\n\nHis eyes followed a quivering, pink petal passing on the restless surface of the water. Nay, they could not stay here hidden away from the world forever.\n\nAoife finished her alteration and pulled on the breeches, Declan suffering a pang at a fleeting glimpse of her red cunny patch as she smoothed down the shirttail. He inhaled and expelled a long breath.\n\nShe was repacking her knapsack when he at last spoke. \"Are ye hungry? Maybe we should find some vittles.\"\n\nHer aqua eyes fixed upon his for a moment, then she nodded.\n\nThey finished dressing in silence, sitting on the stone to don their stockings. Aoife put on her frayed, brown wool coat, buttoning it over the noticeable curves of her unbound bosom and stowing her damaged waistcoat in the knapsack. \"Think ye that they'll be looking for us?\" she asked.\n\nDeclan had been pondering the same question. \"Perhaps. More likely for me than you.\"\n\n\"I wonder if the sentries at the gate will have marked my not leaving and connect it to what happened?\"\n\nAye, she had a good point.\n\n\"I suppose I'm still a lad then, since a lass in lad's clothes might be more noteworthy,\" she mused.\n\nDeclan nodded slowly. \"Let's cover these bruises on our necks as best we can. And stay off the roads.\"\n\nAoife used a strip of fabric to tie her hair back into a lad's queue, and another rag as a neckerchief. Declan found his own neckerchief in his bag as well as his wool cap and used them to conceal what wounds he could. There was naught he could do about the black eye and swollen lip.\n\nWith their knapsacks slung on their backs, they made their way through the woods. Surrounded by the peaceful, rustling green shadows, ancient trees, and chirping birds where they had stolen these otherworldly moments together, it seemed impossible to Declan that Ireland was on the brink of war, and that he would be in the thick of it tonight. As the sound of the falls receded behind them, the despair of Fate's ill-timed joke was heightened by the prospect of once more rejoining the harsh outside world."
    ],
    "authorname": "astushkin",
    "tags": [
        "outdoors",
        "size difference",
        "first time",
        "pubic hair",
        "deflowering",
        "big cock",
        "creampie",
        "cream pie",
        "worship"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/celtic-mist-ch-15"
}