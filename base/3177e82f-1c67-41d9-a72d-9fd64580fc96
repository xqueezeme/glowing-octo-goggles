{
    "title": "Behind the Green Veil Ch. 06",
    "pages": [
        "-------------- Orkideh -------------\n\nOur hotel was not far from downtown Montreal near McGill University. I picked this location not because it was a happening area but because it was far away from my sister's neighborhood on the other side of the city. Jackson and I were walking downtown along Rue Sainte Catherine that is lined with shops and restaurants. \n\nIt was a lovely spring day, bright and sunny with a slight breeze. I regretted that I couldn't dress appropriately for the weather. Instead, afraid of being recognized, I was covered from head to toe, complete with hijab and large sunglasses. Jackson was dressed casually in pressed jeans and a light turtleneck that hugged his broad shoulders and tight biceps perfectly. I had to stop myself from randomly pausing in the street to just kiss him. \n\nDuring our walk Jackson asked me about what had happened to the secret memo that had people chasing us and that put our lives in danger in New York. I filled him in on how all of us who had copies of the memo tried to devise a plan get it out and how news organizations refused to publish it because they couldn't find anyone to verify its authenticity. Then I also told him about our friend who had tried to send his copy of the memo and had disappeared, and how we all basically gave up, fearful for our lives and for our families' lives. \n\n\"You guys were brave,\" he told me. \"You did what you could.\"\n\n\"Then why have I felt like such a coward?\" The question went unanswered. Jackson just squeezed my hand and kissed it as we continued walking, silently contemplating. \"Isn't that the definition of cowardly?\" I continued, \"when you fail to do what is right because you are too preoccupied with protecting your own ass?\"\n\n\"You guys didn't sit on the information, you tried to get it out but no one would listen.\"\n\n\"I didn't personally take the risk,\" I countered, \"and expose my copy of the file. Even if the newspapers wouldn't publish it, I could have posted it online, tried other means to get the truth out.\"\n\n\"You know with all the information out there that just randomly posting it online would only have a very slim chance of making an impact, but it would have put you and your families' lives at risk.\"\n\n\"And that's exactly why I feel like a coward,\" I exclaimed, \"because I was afraid to take a bigger risk. Plus, we all just got so demotivated. I think that's what makes me feel the worst. All the revolutions that gave us such hope during the Arab Spring were all either defeated or co-opted. They either remained puppet governments for Western interests or they were overrun by religious fanatics. It was the same folly that happened in Iran after the revolution from the Shah in 1979. I think that crushed me the most.\"\n\n\"Orkideh,\" he said, drawing my name out and stopping us on the sidewalk, \"every cause worth fighting for needs people who are willing to dedicate their lives to it, perhaps give their lives. But just as important as having that commitment is knowing when you need to survive, to live to wage a smarter fight tomorrow, one that you might actually win.\"\n\nWe began walking again, in more silence as I contemplated what he said. His words were no doubt meant to make me feel less guilty, but I had to admit there was wisdom there. On the other hand, I knew all too well how easily the ethic of self preservation could freeze a person into inaction indefinitely. Iran was filled with those people and I had grown up with them all around me. It always seemed like cowardice to me and I detested it. But surely I didn't want to die in vain. How to strike a balance? \n\nAt that moment we happened upon this cute little lingerie boutique called --. Jackson suggested that we go inside, sensing an opportunity to brighten our mood. I hesitated. \n\n\"Let me treat you to some new sexy undies,\" he suggested as we stood in front of the store. He was being respectful of my need to remain discrete with our affection in public but the look in his eyes told me that he wanted to suck on my neck and tell me just what he would do to me back in the hotel while wearing some new lingerie.\n\n\"I don't know if that's a good idea,\" I stammered. \n\n\"Why not?\"\n\n\"Do you really want to buy me something that I wear once or twice for you and then take home to wear for Br-... for someone else?\" I asked, avoiding the mention of my husband's name. \n\n\"I'm trying -- to think about that,\" he answered somberly, hurt clouding over his eyes. \n\n\"Not that I would want to wear them for him,\" I tried to recover, \"but it would look strange for me to return home with new sexy underwear that I never wore for him. They would be impossible for me to hide, and I sure wouldn't want to just throw them away after this weekend, good lingerie is too expensive.\" \n\n\"Well,\" he pondered, \"let me watch you try some on, then. Let me have that image to take with me. Let it be our foreplay for when we go back to the hotel afterward.\"\n\n\"As if we need it,\" I said softly. Truthfully, I was getting horny just at the thought of modeling for him. But I was also still hesitant -- extremely self-conscious about doing such a thing in a public place. In my head I could hear all my conservative uncles (and one or two of my older aunts!) back in Tehran railing against the negative influence that Western mores had on Islamic women. For them, such an act would definitely fall into the category of turning oneself into a whore. Almost immediately I felt a sense of shame come over me and I hated myself for still being so susceptible to their judgments even while 8,000 miles away. \n\nJackson could see the conflicted turmoil on my face and rushed me into the store before I could change my mind. \n\nThere were two women working in the store -- one younger who looked to be about 25, and an older woman who looked to be in her 40s and carried herself as if she were the manager or owner. Perhaps detecting my nervousness -- I suspect it was obvious from my dress -- the older woman gave her younger colleague a knowing look and came over to offer her assistance. \n\nThis woman knew her craft. She was friendly yet spoke softly to me, aware of my fears about discretion. She introduced herself as Marie, and asked if we were looking for something specific or just browsing. Feeling comfortable, I took my hijab and sunglasses off and shook her hand. We explained that we were browsing. She briefly pointed out the different sections where we could find different kinds of panty and lingerie sets.\n\n\"Take your time and figure out what you like, what you may want to try on,\" Marie explained. \"When you're ready, we have a private fitting area in the back and a 'hubby's couch' where he can wait comfortably until you are ready to show him what you're trying on.\" She said the latter part seeing the wedding bands on both of us, assuming that we were married. I wasn't about to correct her. \n\n\"If you want to try on any corsets,\" Marie continued, \"those can be a bit tricky at first and I can help show you. But take your time and enjoy yourselves, and just let me know if you have any questions.\" Seeing how her demeanor had put me at ease, she left us alone to explore. The fact that there were no other shoppers in the store also made me feel at ease. \n\nJackson had an insatiable appetite to see me in all kinds of outfits, so it took us a while to gather everything I would to try on. He had impeccable taste in women's underwear, even though I found it hard to imagine ever wearing a corset or a bustier in my real life. It wasn't that I didn't enjoy wearing sexy bras and panties, it was just that the bustier and garters seemed a bit much. Nevertheless, I was getting turned on just watching Jackson's excitement grow from his anticipation. He was like a kid in a candy store, and I was the candy. \n\nWhen I was ready to try some things on, Marie led us back to the fitting rooms and pulled the curtain on the largest one for me. Jackson was about to follow me inside when Marie stopped him and directed him toward the couch by the entrance to the back hallway where the fittings rooms were. \n\n\"Down boy,\" she laughed knowingly. \"A little anticipation is a good thing. Let her call you in when she's ready.\" He put on a fake pout but complied with her orders. I couldn't help but smile and Marie gave me a knowing look that made me blush. Sensing the electricity between Jackson and I, she whispered to me to make sure that I left my current panties on while trying on any others. Then while still smiling, a stern look came over her eyes to let me know that under no circumstances were we to get carried away and start fooling around back there. I thanked her and tried to assure her with my own eyes that we would be good. \n\nWhen I was ready I called Jackson in. When he came through the curtain and saw me he gave me a look that made me feel foolish for ever hesitating to come into this store with him. A smokey, sinister look clouded over his eyes that spoke of all the bad and naughty things he planned to do to me. There was a fire in his eyes as he looked me up and down, shamelessly objectifying me, burning my flesh with his piercing gaze and making it blush. \n\nFor a moment I doubted whether I would keep my promise to Marie about not fooling around in the fitting room, knowing that I would comply with anything Jackson demanded of me. My own reflected gaze instantly noticed the bulge in his pants and I half expected him to command me to get down on my knees and give him relief. I had to wonder just who I was in realizing how happy I would be to comply with such a command. \n\nInstead, Jackson walked up to me and attacked my lips with his own. He kissed me deeply, passionately for thirty seconds then just as briefly broke the kiss and stepped away, leaving me breathless and in danger of having to buy the pair of panties I was supposed to be just trying on. Moaning, he took out his phone and began taking pictures. \n\nThe babydolls didn't turn him on as much as the bustiers and the teddies. To my surprise, he liked the lace boyleg panties more than he liked the thongs. I asked him why as he positioned me against the mirror and took a picture of me from behind. \"I like the way the lace frames and hugs your butt,\" he told me, the bulge growing in his pants, \"it makes you look even sexier than the thongs.\"\n\nI asked him what he did with the other pictures he took of me in New York. Unabashedly, he told me how he masturbated to them with my panties pressed up against his face. The revelation made me throb between my legs. Bashfully I confessed to him how I did the same every time I was in the bath or shower over the past two years. If it was even possible, his erection grew stronger from my confession. I could see it, batting against the front of his jeans trying to get to me. I started getting wet, too wet. \n\n\"Jackson,\" I whispered, \"if you get me too excited I will leak through my panties and stain the store's merchandise, and we will have to buy everything!\" \n\n\"Well, we certainly can't let that happen,\" he said all too calmly, approaching me with a prowl. In a flash his hands were at my side, pulling down the boyleg panties and my soaked thong underneath it. In the next instant I felt his hand sliding over my glistening folds before two thick fingers were thrust inside of me. I hissed from both shock an appreciation at his touch. My hips started rocking all on their own, gyrating in a circular motion while mounted on his digits. But just as suddenly those invading digits were gone, leaving me pouting from the withdrawal. Jackson intently stared into my eyes as he brought his sticky fingers up to his nose, inhaled deeply, then stuck them into his mouth. \n\n\"I can't decide what I want to do to you more, eat you or fuck you,\" he growled in my ear, his erection pressed into my belly, making me moan. \n\nThe sound of new voices entering the store brought me out of my reverie and I froze. It wasn't just the fact that there were other people in the store, it was the specific tenor of the voices that worried me. I told Jackson to go out and see who they were. \n\n\"Oh my goodness,\" I heard Marie exclaim, \"do you two have a sister? There's a woman in the back fitting rooms that looks just like you two.\" I panicked. My heart was beating at a million beats per second. \n\n\"We do,\" I heard my sister Fatemeh's voice reply to Marie, \"but she lives in the states and won't be here for another two days,\" my oldest sister Naseem continued. Fatemeh is the sister closest to me in age, and we have been mistaken for twins in the past. \n\n\"Uncanny,\" I heard Marie say. \"Don't they look like your wife?\"\n\n\"I do see the resemblance,\" I heard Jackson's voice answer, \"but my wife's an only child.\" I could not help but smile. It was nothing to be proud of but I could not help but marvel at how -- like me -- Jackson knew how to lie with such smooth ease. Growing up in an ultra-religious autocratic theocracy, lying was a matter of survival. The irony was that he was the one person in the world to whom I never had to lie. I knew I was the same for him. \n\n\"When she comes out, you will see what I'm talking about,\" I heard Marie say. Then I heard what I prayed were Jackson's footsteps coming back my way as my sisters explained that they were shopping for a week's worth of honeymoon outfits. A pang of guilt struck me as I knew I should have been with them, laughing together as we shopped and ran errands in final preparations for the wedding. More than feeling guilty I was scared to death. How in the fucking hell was I going to make it out of there without being seen?!\n\nJackson stepped back into my changing room and saw the look of horror on my face. The stunned smile on his face told me that he recognized that we had a problem. He was also surprised at how quickly I had managed to get dressed. \n\n\"Wow! Your sister's kind of cute,\" he joked trying to bring levity to the situation. It brought back sore childhood memories of when all the boys I liked seemed to only pay attention to her. I wasn't amused. I hit him in his stomach to let him know as much.\n\n\"I will scratch your eyes out if you even look her way,\" I whispered to him, jokingly deadly serious. \n\n\"Orkideh,\" he said softly as he came to embrace me, his own demeanor changing. \"You have to know that no one else has ever come close to...,\" he sighed, gathering his thoughts. \"I would have married you, in a heartbeat. I was ready to spend my life with you.\" He was letting me know in no uncertain terms that his eyes would have been only for me had I not walked away. I felt doubly shitty. \n\nAs was becoming common, Jackson had a plan to save my ass. \n\n\"There's a service entry door just to the right back here. I'm betting it leads to the delivery alley out back,\" he explained, picking up some the lingerie I had been trying on. \"I'm gonna go buy one of these. While I have Marie distracted at the register you need to sneak out the back. We have to go quickly, though. If your sisters come back here and start trying things on, we are going to be stuck in here for a while.\"\n\n\"Which ones are you going to purchase?\" I inquired. Jackson inspected the crotch of the boyleg panties he had in his hand then put them to his nose. \n\n\"Definitely this one,\" he said with a grunt. I turned red with embarrassment. Through trial and error he found one more that was no longer clean. \"Hand me the rest of them so I can take them up to the front, lest she think you are back here stuffing them in your purse or something.\"\n\n\"Why would she think that?\" I asked perplexed.\n\n\"The back door has an alarm on it and it might go off. Don't panic if it does, just walk calmly and briskly away.\"\n\n\"I can do this, remember?\" I assured him. \"New York, our hotel, the taxi, the police?\" \n\n\"I was so impressed with you that day,\" he smiled. \n\n\"Good, so you know that I've got this. Now go, before they come back here!\"\n\n\"Ok, ok. Just give me two minutes. Wait until you hear me say, 'thank you very much for all of your help' and that will let you know I've completed the purchase. That way if the alarm does go off I can just skip out the front quickly.\"\n\n\"Alright,\" I said, giving him a quick kiss. \"Meet me at the Starbucks around the corner -- I'll be there in ten minutes.\" He agreed and left to put our plan in motion. \n\nAs luck would have it, the alarm did go off. I walked calmly out of the building as if nothing was happening. I heard a meek voice call out \"hey!\" just as I turned the corner and I quickly immersed myself in a crowd of people walking by. My heart was beating out of my chest, and I was a nervous wreck sitting in the Starbucks waiting for Jackson to arrive but no one would know it from just looking at me. \n\nI usually love coffee but it was the last thing I needed just then. When Jackson finally came through the door I hugged him tightly before dragging him to a bar I had spotted across the street along the way. The bartender looked shocked when I walked up to him and ordered three shots of Knob Creek: one for Jackson and two for me. The bartender looked doubly shocked when I downed them immediately. I guess he had never seen a woman wearing a hijab walk into a bar and order straight bourbon before. It was turning out to be a weekend of many firsts for me. \n\nThe experience left me jarred. I just wanted to get away, to be someplace where I wasn't under anyone else's scrutiny. Instead, Jackson and I just made a beeline back to our hotel. It was a nice sanctuary but I was starting to feel claustrophobic spending all of our time in there. \n\n--------------- Jackson ----------------\n\nAt some point in the middle of the night/early morning, the raw power of a dream I was having about Orkideh woke me up. Upon stirring, I discovered why the dream had been so potent. Tangled up in each other, my senses were filled with her in every way. We were spooning. My face was buried in her hair and I had been breathing in her scent for a while. I had one arm snaked under her armpit with my hand pressed into her midsection, holding her close to me. My other arm was draped over her, cupping her breast in my palm. We slept naked and I could feel her soft skin pressed into me all the way down to my shins. The most erotic thing was that I had a raging erection, nestled tightly in the crack of her ass. When I stirred my hips were grinding into her of their own volition. I moaned, feeling the comforting warmth of her cleft. \n\nMy stirring elicited her own rupture from sleep, and she groggily inquired as to what I was doing awake. In response I slid my erection almost out of the valley between her cheeks and then pressed it back into her, planting a kiss to the top of her head. She groaned, but I couldn't tell if it was one of arousal or frustration at being awakened. \n\n\"I would think after last night that you would need a good ten hours of sleep to recover,\" she replied, pushing her ass back to meet me.\n\n\"Normally you'd be right, but it was the force of my dream that woke me up.\"\n\n\"Ooh,\" she cooed, as if I had a naughty secret. \"Tell me about the dream.\"\n\n\"I don't know if I can,\" I hesitated. \n\n\"Were you dreaming of someone else?\" she demanded. I could feel her body tense up as she prepared to pull herself out of my embrace. \n\n\"No, my love,\" I told her, holding her tight and raining more kisses down on top of her head. \"Of course it was with you.\"\n\n\"Then tell me,\" she pleaded, relaxing back into me. She used her cheeks to squeeze and hug my erection for added incentive.\n\n\"Well,\" I hesitated further, trying to find my words through the fog of raw lust that was still clouding my brain. \"We were making love... but not in the conventional way.\" My dick swelled in her cleft with just the thought of what I was about to share with her. She inhaled suddenly at the sensation, then pressed her backside into me even more. \n",
        "\"What were you doing to me?\" she whispered as her nipple started to stiffen in my palm. I gently began rolling it with my thumb and forefinger. \n\n\"Well, I had just put my...\" I trailed off, thinking better of how I wanted to explain it. \n\n\"Tell me, Jackson,\" she pleaded again, her voice becoming raspier. I decided to give her the story from the beginning.\n\n\"We were at a movie theater,\" I began, \"but we were sitting in the back. For some reason, there was a couch back there. My head was in your lap and you were feeding me fruit while we watched the movie.\"\n\n\"Then what happened?\"\n\n\"Every time you put a piece of fruit in my mouth I sucked on your fingers, and soon I was hungry for more than just fruit. I guess you can say I was hungry for your fruit.\" That admission elicited another small moan and tight squeeze of her ass around my shaft. \"I turned over on my side until I was facing your tummy. I lifted your shirt and began tonguing your belly button. You were so ticklish there that you had to pinch me to stop before you yelled out in the theater.\"\n\n\"I -- ticklish there,\" she confirmed. \"It makes all the muscles in my abdomen jump when you do that to me.\" \n\n\"I decided to leave your tummy alone because I had more devilish desires in mind, so I turned all the way over until I was face down in your lap. You were wearing a skirt, and I began massaging your thighs, inching your skirt up as I went. You protested, worried about the people around us in the theater. I ignored you. I was kissing and nibbling on your thighs which made it impossible for you to resist. I rolled your skirt all the way up until I could press my nose down into you, to see if you liked what I was doing to you.\"\n\n\"And? Tell me what you found,\" she said breathlessly as I moved my palm to take in her other breast. \"Describe it to me.\"\n\n\"I didn't even have to take a deep breath,\" I said, grinding into her ass just a little bit harder. My hips started doing a circular motion. The heat between us was causing her cleft to get sweaty. Combined with my leaking pre-cum, she was just moist enough where my shaft could begin to slide up and down. \"Your scent was unmistakable. I smelled your rampant approval of what I was doing to you. \" There were more moans out of her, and her hips started to match my circular motion, grinding back into me. \n\n\"My appetite fully stoked, I got off the couch and got down on my knees between your legs. Then you really started to panic, afraid that I was about to take things too far for a public place.\"\n\n\"You were being a naughty boy,\" she whispered. \"I can't let you naughty boys do bad things to me,\" she said, reciting my dream as if she had the same one herself.\n\n\"You clamped one hand defensively over your pussy and tried to hold your legs shut, and you put the other hand on my head and tried to push me away.\"\n\n\"Did that make you give up and try to be good, respectful of my honor?\"\n\n\"Hell no,\" I said calmly, now using both hands to twist her nipples as I relayed the story. \"Your resistance just made me want you more. I licked and sucked at the tender inner flesh of your thighs. Within minutes you had spread them for me willingly, as wide as they could go. The next thing I knew you were scooting down in your seat, pressing the wet crotch of your panties directly in my face. I pulled the sodden fabric aside and began eating you earnestly, not caring that the entire theater could hear me devouring your sex, drinking your sweet honey.\" \n\nHearing this made Orkideh shift in my arms, moving up higher in the bed next to me until my cock slipped from between the cheeks of her ass and slid into the wet softness of her inner thighs. It was my turn to groan, feeling her arousal. \n\n\"Don't stop,\" she said impatiently, \"tell me more.\" In our new positioning her head was level with mine. I moved her hair out of my way and pressed my face into her neck before continuing. \n\n\"Then something strange happened. A guy who worked at the theater came walking through with his flashlight, telling everyone to put away their cell phones -- no talking and no texting. He walked right by us and shined his light directly on us. I could see his flashlight reflected in the wetness of your sex and all over your inner thighs. I thought we were busted and he was going to kick us out. But all he said was 'remember no cell phones' and just kept walking.\" Orkideh gasped, feeling genuine embarrassment. I continued, smiling to myself. \n\n\"I kept eating you, lost in how good you taste. But I was frustrated because your panties kept getting in my way. Finally I just pulled them off completely and put them in my pocket.\" A low moan escaped out of her, and her breathing grew more ragged still. \"I turned you over and put you on your knees with your butt up in the air, then I buried my face back into you and kept eating.\" I stopped talking and started sucking on her neck, just enjoying the heat of her creamy thighs. I was a bit hesitant wondering how she might respond to the next part of the dream. \n\n\"Tell me,\" was all she said, knowing or perhaps hoping where the narrative was going. She began urgently trying to rub her sex against my shaft. I started slowly thrusting into her, the top of my cock rubbing into the lips of her pussy, but the angle wasn't right for me to enter.\n\n\"I feasted on you,\" I said breathlessly, moaning and unable to contain my own excitement. \"I feasted on you in a public theater, with my tongue deep in your pussy and my nose pressed up higher, smelling you there.\"\n\n\"Fucking hell!\" she hissed, and I felt a fresh gush of her nectar wash over my crown. \"Tell me,\" was all she said again and I felt her fingers begin to play at her clit. I knew what she wanted to know. \n\n\"You smelled... funky, earthy, kinky,\" I said, groaning at the thought. \n\n\"Is that what you remember?\" she asked, acknowledging that I had her in this position once before until she stopped me from going further. \n\n\"Yesss!\" I answered, the heat growing in me to a fever pitch, \"and it makes me want to taste you there,\" I admitted\n\n\"It doesn't smell like... dirty stuff back there?\"\n\n\"No, my flower,\" I said, making reference to her name. \"I cleaned you thoroughly back there. It just smelled like... concentrated you, but the most secret and hidden part of you; the forbidden part of you. Like an espresso shot of your pheromones. I want to taste you there because I love you, because I want all of you inside of me. I want to smell all of you, kiss all of you, taste all of you... be inside all of you.\" The further admission made Orkideh begin thrusting back into me, arching her back, trying to get me inside of her hungry pussy. \"So I started moving my lips,\" I said, going back to the dream, \"kissing you higher, licking you there, tasting you there.\"\n\n\"Tell me,\" she pleaded. I could feel the vibrations in her body indicating her hand moving furiously over her clit. Again, I knew what she wanted to know. \n\n\"Your flavor mesmerized me in its pungency, your muskiness was like a drug. I just licked around the outside for a little while, savoring your flavor and your body's reaction. Soon my hunger grew too strong to resist and I tried to push my tongue inside of you but you were too tight. You were squeezed shut like a knot in a rope, pulled so tight you can't get it out. So I went back and forth between licking your ass, licking your pussy and licking your clit until you came.\" \n\nI felt Orkideh tremble at the dirtier, more graphic language, and I knew I was getting to her. \"You came violently, trying not to shout into the theater, using the couch cushions to muffle your cries. Once you calmed down you relaxed, and I was finally able to force my tongue inside.\" \n\nHer fingers left her pussy with a squelching noise that betrayed her arousal then found their way into my mouth, giving me a taste of her nectar in the present. I grunted as I licked the slightly salty juices off of her digits. This woman knew me so well... she knew hot to get what she wanted. The moment her flavor hit my brain my hips shifted and her back arched simultaneously, allowing my tip to find her center and push its way inside. Her body welcomed me in with a contraction of her inner muscles which made me groan in ecstasy. \n\n\"I ate you thoroughly, noisily\" I told her as I started a slow rhythm thrusting into her steamy pussy. Orkideh took her fingers from my mouth and threw off the blankets, suddenly too hot beneath the comforter. Her hand rushed back to her sex and began rubbing her clit furiously as the pace of our thrusting increased. \n\n\"And no one from the theater said anything?\"\n\n\"Strangely, a woman came over to us and asked if I wanted to eat her popcorn. I peeled my face out of your ass just long enough to tell her 'no.' She said that hers had more butter on it but I shooed her away. Then I buried my face back in you. You began thrusting back into me and your dirty little whole was twitching with excitement while I swirled my tongue around inside of you.\"\n\n\"You are positively one sick and depraved individual, Jackson William,\" she told me, rutting back to meet my strokes. \n\n\"And you love it, don't you?\" I challenged her, sinking my teeth into the flesh of her shoulder and increasing the force behind my thrusts. Her free hand reached back to weave her fingers through my hair, raking her nails against my scalp. \n\n\"Then what did you do to me?\" she asked, avoiding my question. \n\n\"I switched from my tongue to my fingers, trying to loosen you further. You were grunting as I plied you open with first one finger and then two. The people in the theater kept shushing us, but we ignored them.\"\n\n\"Then what?\" she asked, barely audible. \"Tell me what you made me do.\" \n\n\"I withdrew my fingers and took one last taste of you -- all of you -- then I stood up behind you, positioning myself. I made you spread for me so I could take what I wanted. You complied obediently. Reaching back to hold yourself open to me, you arched your back and pushed your ass out to me. I could see the glow from the movie screen reflecting off your wetness as your scent filled the theater.\"\n\n\"The whole movie theater was smelling my pussy?\" she enquired, her breath now ragged.\n\n\"Yes, everyone in there could smell you and the effect was like a drug affecting the entire crowd. Couples started kissing madly and touching each other, shedding their clothes. I couldn't wait any longer. I invaded your pussy first, wetting myself in the dripping mess you were making. Then I pulled out of you. Even in the darkness of the theater I could see my dick all shiny from how wet you were. I moved my tip up a little higher and started to push. You were panting loudly from the pressure, and the people in the theater were starting to watch us, playing with themselves. I had just pushed the head of my dick inside you when I woke up.\"\n\n------------- Orkideh -------------\n\nBy the time he finished retelling his dream, we were full out fucking. Unsatisfied with the lack of leverage behind his strokes as we lay side by side, Jackson rolled over fully on top of me, pulled my hips slightly in the air, and then started pounding me into the mattress. There was no mistaking how much his fantasy had aroused me. My treacherous body had my secret on full display, dripping down my thighs, filling the room with the smell of my desire to let Jackson do all of those nasty things to me. \n\nWe were already both close. I continued rubbing my clit while he slammed into my upturned ass, the smacking sounds of his thrusts echoing throughout the room. He started lunging into me, making all sorts of unintelligible sounds, and I felt his cock swell with its imminent explosion. We exploded together, calling for each other, grunting, clawing, trying to pull the other closer. Jackson flipped me over quickly, almost violently, and slammed his dick back into my spasming pussy before falling on top of me to claim my mouth with his own. My legs instinctively wrapped around him and I hugged him with my thighs while my arms hugged him around his neck. We shared a long, deep, wet and sloppy kiss while he throbbed inside my flooded passage, our bodies both twitching uncontrollably at the force of our orgasms. \n\nThere were no words. We both knew. It took his erection a while to fully subside and slip out of me, but I didn't mind. I loved that moment between us even though I felt dangerously exposed. Eventually our heart beats slowed and we shifted our position, laying side by side but still facing each other. I knew that I needed to get up and pee but I wanted to just stay there and drift off to sleep held snugly in his arms. Not peeing after sex leaves me vulnerable to a UTI, and the last thing I wanted for this long weekend was to wake up sore down there in all the wrong ways. So reluctantly, I peeled myself away to go pee. When I got back, Jackson was on his back snoring. When he felt my body slide back next to him he stirred and wrapped his arms around me once again. I pulled the blankets over us and we started to drift off to sleep. Without thinking, my mouth uttered one last thing before I lost consciousness. \n\n\"Jackson?\"\n\n\"Hmm?\" he answered, barely awake. \n\n\"I love you, too,\" I said, pulling his hand up to my face and kissing it. I felt his lips press into the side of my face while his arms held me tighter. My fate was sealed. It was the last thing I remember before drifting off to sleep. \n\nWhen I woke up the next morning I was a changed woman. I was nervous as hell, feeling so exposed, but even more so I felt liberated. We were both thrumming with excited energy, me a bit anxious as well, knowing that by the end of the day I was going to submit to Jackson in every way. But it was also our last full day together so there was a heavy emotional weight in the room as well.\n\nTo his credit, Jackson didn't try to rush straight into it, so to speak. There was a cool, unhurried confidence to him that morning. He knew he was going to have his way with me yet patient enough to let me decide my exact moment of surrender. It was the first morning he didn't start off by rubbing his face in my sex to get my scent all over him. His affection was no less demanding, however. Other than to let me go pee, Jackson wouldn't let me out of his arms. He just held me close to him and kissed me about the face, whichever part of my face was closest to his lips in any particular second. \n\nAfter a while both of our stomachs were growling so I reached for the phone and the room service menu. Before I knew what was happening my new liberated self had forgone my usual breakfast of assorted fruit, Greek yogurt and pastries and instead I ordered a breakfast filled with pork: an applewood bacon, sun-dried tomato and goat cheese omelet; Grand Marnier French toast with a side of maple sausage; and a Virginia country ham steak with home-fried potatoes. Jackson looked at me with his mouth agape, totally shocked. \n\n\"Holy shit, what's gotten into you?\" he chuckled, remembering that I had grown up not eating pork and never went near it.\n\n\"You have,\" I answered simply then locked my lips onto his. \n\nI love meat, my whole family does. The whole vegetarian craze never appealed to me, though I do enjoy eating healthy. I just also enjoy a meal anchored by a nice cut of fish, chicken, beef, or my favorite lamb. But as any person from an Islamic country will tell you, we are raised and taught that pigs are the filthiest of animals, but physically and spiritually. I never even had an opportunity to try pork growing up because it wasn't sold in any markets nor was it served in any restaurants. But I was in the mood for breaking taboos. We ravished the food. After stuffing ourselves, we took turns in the bathroom then showered together. Not that he needed any instruction, but I bent over long enough for Jackson to make sure that he cleaned me thoroughly. \n\nWhile Jackson brushed his teeth and combed his hair, I packed a backpack for an outing. I wanted to go someplace where we wouldn't be recognized and I had an idea. Something told me that I might need a blanket so I looked in the closet and found the extra one that the hotel provided. I stuffed it into my oversized backpack just in case my plan worked out. \n\n------------------ Jackson ----------------\n\nOrkideh wouldn't tell me where we were going, only that it was someplace she hoped we could go to enjoy the outdoors without fear of being recognized. She handed me the keys, though, and told me to drive.\n\n\"How can I drive if I don't know where we're going?\"\n\n\"Don't worry, I'll tell you where to turn,\" she answered, piquing my curiosity. \"Besides, this will let me mess with you while you drive, instead of you messing with me,\" she teased. \n\nShe was probably right -- I might have been tempted to caress her thigh and let my fingers tickle the sensitive flesh in between while she drove -- but her tease turned out to be an idle threat. At first. During the first hour of the car ride we spent the whole time listening to music, switching Ipods and introducing each other to more of our favorite music. It was non-erotic, but very intimate all the same. \n\nAs we got past the city limits Orkideh started to relax, and her hijab and sunglasses come off. With her hair now loose, she opened her side window to let the wind blow through it, soaking up sun with her face. Beyond her physical beauty she conveyed such a free spiritedness in that moment that was even more enduring. I sat dumbfounded contemplating why people from her part of the world would want to cover all of that beauty up.\n\nOrkideh was wearing a classy but beautifully sexy sun dress. Soon after losing her hijab and sunglasses she also took her shoes off and put her feet up on the dashboard, tempting me with her smooth thighs. I could not resist reaching out to her and to my surprise she did not swat my hand away like she did when we were driving to the hotel from the airport. \n\nI rubbed the inside of her thighs until they became warm, almost hot to the touch. When I first started she kept them modestly closed but after ten minutes or so they were spread wide, welcoming further digital exploration. My hand drifted to the front of her midnight blue boy-leg panties, the same pair I bought for her the day before. There I rubbed until a wet spot formed, coating my fingers in her moisture. I brought her fingers to my nose and inhaled deeply, letting her see, but I ddin't put them in my mouth. Instead, I reached back for her sex and try to move her panties to the side. A close call where we almost wreck makes her think twice and slap my hand away. \n\n\"Both hands on the wheel,\" she insists, \"or I'm pulling my dress down for the rest of the drive.\"\n\nI complied and her own fingers took over where mine left off. She got her fingers wet and brought them to my face. My hunger was growing and she knew that I was by that point dying to taste her but she denied me. Instead, she let me get a second whiff but when I tried to capture her sticky fingers between my lips she pulled them away. Over and over she teased me like that, driving me crazy. It wasn't long before a large tent in my pants caught her eye. As she smiled mischievously, I knew I was in for it.\n\nI struggled to keep my eyes on the road as she put her fingers back in her sex. \n\n\"This is a first for me,\" she admitted breathlessly while staring down at her lewd act. \n\n\"Don't you dare try and lie to me and claim that you never masturbated before.\"\n\n\"No silly,\" she smiled, removing her fingers momentarily to observe their wetness. \"It's the first time I've done this while not in the shower or the bath. As a little girl, that was the only place we had any privacy. But I was so ashamed of the behavior that as I grew up I could never just lay in my bed and do it, let alone let anyone watch,\" she added, groaning the last part. \"For the first two years I tried to suppress my desire to do this while thinking of you. About two years ago, I lost the battle to resist those fantasies and for these past couple of years, every shower, every bath...\" her voice trailed off into groans as my ears picked up the unmistakable squish of finger banging. I glanced over to find her right hand working at a blurry pace.  ",
        "I let out a groan of my own and contemplated pulling over to the side of the road. Not yet satisfied in my torture, Orkideh removed her hand a second time and reached out toward my face but again she would not let me take her fingers into my mouth. Going in for the kill, she wiped her stickiness all over my face, quickly dodging when I tried to snag her slimy pungent digits with my lips. She was generous enough to leave a little just under my nose. I reached out with my tongue and licked it up hungrily. \n\n\"Tell me more about what you did while thinking of me,\" I groaned, hoping to drive her need to a fever pitch. \n\nShe turned red, closing her legs over her hand buried in her pussy, obstructing my view. I told her how I snuck out of bed the night after our first phone conversation to find my hidden box of her memories, and then masturbated to them while saddened that her panties no longer held her smell. My revelation seemed to push a button inside of her. Orkideh took a deep breath and looked up at me, spreading her legs again. It was all I could do to look at the road and not keep my eyes glued on her. \n\n\"I dreamed about our intellectual connection,\" she said breathlessly, and I could hear her fingers sloshing around in her sex, so wet she was. \"I also dreamed about your scent,\" she continued as her eyes closed dreamily, \"I never forgot about how good you smelled, or how good you tasted. I loved how we both needed to smell and taste each other...\" \n\nHer words trailed off into moans as her fingers sped up and she slid down further in the seat. She pulled her legs up even further, until I could see her cute tinier orifice, glistening from the juices leaking down from her pussy. I thought she was going to cum but then she slowed herself, deliberately, and her voice resumed in a whisper. \n\n\"Worst of all, I could never stop thinking about how you touched me here and made it a new erogenous zone for me.\" I glanced over and saw her wet middle finger leave her pussy, drop down an inch, circle around at the tiny little opening and then slowly push inside. I almost came in my pants as I drifted into oncoming traffic. \n\n------------- Orkideh ----------------\n\nI never felt so stupid in all of my life. I screamed, seeing the large truck coming right for us, its horn blaring. The word \"Peterbuilt\" will be forever etched into my brain. That little oval symbol above the grill of the truck seemed to pass within inches of my face as Jackson swerved further left to avoid a collision by a matter of inches. We ended up on the opposite shoulder facing oncoming traffic that was zooming by on our right. Horns continued to blare at us for facing the wrong way on the wrong side of the highway. Jackson pushed further to the left, into the grass as he slowed the car to a stop. \n\nMy knuckles were white as I gripped the door handle with one hand and had the other pressed against the dashboard to brace for impact. My breathing ragged, it was a few minutes before either of us could speak. My heart was beating in my chest so hard I could hear it, and thought I could hear Jackson's too. Finally Jackson reached over to me and took me in his arms. Words weren't really needed -- we were both just glad that we were safe. \n\nAppropriately chastised for our risky behavior, we resumed our focus on music for the rest of the trip, though Jackson held my hand the whole way. Our destination was the --, about two hours drive outside of Montreal, situated between a lake and a mountain. My sister had told me about it a couple of years ago: its beautiful lake, majestic trees, and wonderful vistas. Most important to me, I felt confident that there would be no one there who knew either of us. If only for that afternoon, we could be free. \n\nAs we pulled into the parking lot as the southeast end of the park, we saw a lot of people there also with the same idea to enjoy this day while immersed in nature. I lost my nerve and put my hijab and sunglasses back on. Jackson grabbed the backpack that held our water, some light snacks and the blanket we swiped from the hotel. \n\nWe started out walking an easy path, hiking along a trail called the--. At the trail's summit we had an absolutely spectacular panoramic view of the Adirondacks. A cool breeze flowed over the summit, making me shiver. Jackson took me into his arms to warm me. That's when he removed my hijab and tucked it in my purse. \n\n\"No one's going to recognize us out here,\" he sad softly as he leaned down to kiss me. I thought it was only going to be a quick peck so I let him, not realizing that his lips intended to claim mine for a longer period, preparing the way for his tongue to follow. I found his kisses so addictive that I couldn't physically pull my lips away, so I pinched him and nodded toward the other couple standing not twenty feet away from us when he pulled back to see what was wrong. They were also enjoying the view, and I knew that there would be more on the way to join us shortly, given how many people we came across while hiking. Jackson simply chuckled and didn't press me, but the devious sound of his laughter told me he had more in store for me. \n\nIt had been a short hike, less than an hour, so we decided to take another trail to give us a different view of the park. We chose a trail named --, which took us along the shores of -- I laughed as Jackson tried to imitate a true French speaker while reading the sign indicating the lake ahead of us. He told me that he had taken three years of French but used it so infrequently that it always took him a while to get back into the practice and remember his vocabulary. \n\nThe lake was beautiful and peaceful, reflecting the majestic peaks of the two mountains that rose above its opposite shore. Jackson held my hand as we walked along the water's edge. I know it sounds like such a small thing, but for that afternoon it really started to feel like we were in our own little world where we were free to be a loving couple, not hiding in secret. There were many couples out there, and some families with kids in tow. Some people were getting in the water and swimming. We found a large flat rock along the shore's edge and took a seat. Jackson just held me quietly while we watched the water sparkle under the mid-day sun. Eventually I began to relax and the tension slowly eased out of my shoulders. \n\n\"I'm so happy you texted me,\" he whispered in my ear, his warm breath raising tiny bumps along my neck. I tilted my head to give him further access and he took it, his lips claiming the area just under my jaw. The nerve endings there seemed to have a direct line of communication with my sex and I clamped my legs shut to combat the sudden urge I had to spread them as wide as possible and invite his touch down there. \n\nJackson turned my head toward his face and removed my sunglasses, my last vestige of anonymity. My heart started racing as I knew what was coming. This time I didn't stop him. When his lips found mine, I greeted his tongue with my own. \n\nWe kissed like teenagers, when you kissed forever because kissing was as far as you were willing to go. It wasn't \"get-a-room-because-you-two-are-dry-humping-in-public\" kissing, but it was deep, soulful kissing nonetheless. I got lost in his lips, so wonderfully plush and pillowy. I felt a rush of adrenaline as the kiss deepened, letting go of my nervousness about the people around us. \n\nFor those few minutes while we sat savoring the taste of each other's mouths, there was no war going on, no friends disappearing or dying, no religious zealots policing my behavior, no longing for the home to which I could never return, no marriage vows being broken. There was just the incredible connection we felt for each other, consummated in the caress of his tongue sliding against my own. Starting to feel too comfortable, lost in the way that his lips claimed me, never satiated and ever hungrier for more. I had to stop us when my mind drifted into a fantasy of laying out our blanket and letting him make love to me right there on the lake shore. \n\n\"I could do this all day, you know,\" I hummed into his neck. \n\n\"I could do this all my life, you know.\" I had no good response to such an admission so I just sat there, letting it live in the moment. \n\nI made to stand up so we could continue walking but Jackson held me down. \n\n\"Give me a second,\" he said in a hushed tone as he reached into his jeans to adjust the large tent erected in his pants. He was trying to use my body to shield him from others' view. I couldn't help myself and laughed out loud, drawing a couple of stares in our direction. \n\n\"I'll get you for that,\" he promised softly in my ear as I continued giggling. \n\n\"I can't wait,\" I teased, wiggling my butt back into his hardness as I stood. \"Oy!\" I yelped when I felt his fingers pinch my rear. I elbowed him in his stomach and took off running, leaving the lake behind. \n\nWe continued our hike into an oak forest where we fell under the spell of the --: a magical wetland where towering trees sprang forth out of a shallow sea of still water. Traipsed across the water was a boarded trail suspended above pontoons that led our way. \n\nAs we hiked, every time we found ourselves secluded Jackson grabbed me and spun me around for a kiss. We made out until we heard someone else coming along and then nervously broke away. For some reason, kissing out in the open on the lake shore seemed more acceptable, whereas kissing along the hiking path when no one was around seemed more clandestine, where any second someone could turn a corner and catch us. \n\nInevitably we did get caught. When it happened, we would let them pass while pretending that we had stopped to just look at the foliage and the fauna, or like we were trying to find one of the flying squirrels supposedly inhabiting these woods. At one point, things started to get carried away. Jackson pushed me up against a large tree and began making out with me with more urgency. I moaned with pleasure as his mouth took mine with force, taking my misgivings and kissing them to oblivion. Not satisfied that both my hijab and sunglasses were off, he found the scrunchy holding my hair in a bun and pulled it away, raking his fingers through my tresses as they fell past my shoulders. His hands moved over my body, hot through the material of my sundress, rubbing me all over and making my skin yearn for his unimpeded touch. Up and down my back, around my waist, and up and down my hips -- he wasn't touching me in any places inappropriate for public space but damn if I didn't want him to. \n\nGreedy with my own need to feel his skin, my hands scrambled hungrily beneath his shirt. I grew bolder as my hunger increased, palming his abdomen before moving up to his pecks where I played with his nipples until they were hard little nubs. I broke the kiss and buried my face in his neck where I began to lick at his delicious skin, slightly salty from our day of hiking under the Canadian sun. He shivered before forcing my face up to sink his tongue back into my mouth. I clung to him tightly as the intensity grew. His own hunger mounting, his mouth left mine and moved downwards, licking a trail of kisses along my jaw toward my hair line. \n\n\"I can't ever seem to get enough of you,\" he said gruffly in my ear. I moaned and tilted my head as he worked lower, kissing my neck and then biting into my shoulder. I moaned even louder as I felt his erection press insistently into my stomach.\n\n\"Nor I, you,\" I responded breathing raggedly. His lips traced my plunging neckline straight to my breasts and lingered there in my cleavage, his breath warm against the rise of my flesh. I froze as his hand swept down from my waist to my knees before rushing back up, this time under my dress. His fingers felt hot to the touch as they made contact with the bare tender skin of my thigh. \n\nJackson was bold, too bold for my comfort as his touch moved inwards, daring for someone to catch us up against that tree with my dress scandalously looped over his wrist and his hand who knows where. His invading fingers pressed between my thighs demanding access. \n\n\"Stop it! Be good,\" I whispered, hoping to arrest things before they reached a fever pitch beyond return. The caution in my mind was betrayed by my body when I took a trembling step to the side, allowing his hand to explore the soft skin within. His touch painted progressively wider circles, tickling my inner thighs and making the sensitive skin there tremble in his palm. \n\n\"Don't worry, I plan on being very good,\" he replied lustfully. I shivered with panicked arousal when his rough fingers finally made contact with the lacey fabric covering my leaky core. In Farsi, I demanded that he stop immediately when he began caressing my juicy center with firm but gentle strokes through my sodden panties, suddenly at a loss to remember my English vocabulary. When his fingers edged beneath the elastic to reach behind my cotton barrier I nearly melted as his digits slid deep between my folds. Perhaps he mistook my admonishment for encouragement. Perhaps he didn't care.\n\nThe squelching wetness seemed to reverberate throughout the forest glen, adding to my shame. Jackson had a lecherous smile across his lips when they found mine again, mocking my embarrassment. My body went rigid in his arms as I cried out into his mouth while his fingers danced in my dripping sex. \n\nThough my mind wanted desperately for him to stop, I resigned myself to the pending mini orgasm that was fast approaching. This made it all the more jarring when his hand suddenly left my oozing little gash and covered my mouth as he pulled me around to the side of the tree facing away from the trail. I swallowed hard as I tried to comprehend what was going on while the pungent smell of my horny cunt flooded my brain. It was then that I heard the voices approaching, a man and a woman's, getting louder as they drew closer to us on the trail. Jackson gave me the 'shush' sign with the clean index finger of his left hand while he pushed the other slimy, glistening fingers of his right hand between my lips, forcing me to taste myself. With smoky eyes he watched my reaction. Red with shame, I sucked the musky tang away until his digits were clean. His lips smashed into mine, sharing the taste. \n\n\"Good, huh?\" he asked once the couple had passed, licking the last remnants of my cream from around my lips. Before I could think of anything even approaching a sensible response, he placed his hands upon my waist, allowing them to glide sensuously over my hips as he slowly knelt before me. Grabbing fistfuls of my dress, he bunched the fabric up around my middle, holding it there while he pressed a kiss between my thighs.\n\n\"Yum,\" he murmured approvingly while burrowing his nose in the thin lacy material covering my pubes. \"I've been happy to do this for past lovers but only with you do I crave it like a drug. Your smell, your taste,\" he mumbled between licks, \"drives me fucking crazy!\"\n\nOur passion was quickly building to a fever pitch as I angled my hips to press my covered sex into his face. I yelped as he suddenly snagged the waistband of my panties with his teeth and tore them away. My hand uselessly tried to push his head back as he rooted against me, his determination to have me overpowering my desire to maintain some sense of decorum. \"Jackson, you can't!\" I pleaded as he pushed my legs further apart, planting nibbling kisses along my inner thighs as they betrayed my better judgment and opened for him. \"Oh God, you --!\"\n\nYes he could. And he did. \n\nHis insistent tongue pushed inwards as his hands resumed their firm grip on my hips, tasting me in one long, swirling swipe then another as my fingers combed uselessly through his hair. It was only on the third spine-tingling pass that I managed to snatch a handful of his tight wooly curls and pull his head away. The look on his face was wild as he groaned his discontent, the sound vibrating right into my womb.\n\nJackson relented to my demand to cease and desist but my panties were too ruined to be put back on. He palmed the torn and drenched fabric as he pulled me back onto the trail. Taking my hand, he walked with an urgent purpose, his eyes searching the landscape intently. I trailed behind him in a fog of lust and fear as the arousal from my unprotected sex ran down my inner thighs. I desperately needed to cum but I was deathly afraid to let Jackson take me there.\n\nSoon thereafter Jackson found what he was looking for: a small opening in the trees that seemed to lead to somewhere off of the official trail and off the beaten path. We treaded deeper into the majestic oak forest. There were signs all over the park telling us that it was forbidden to venture off the official trails. As if he had sniffed it out, we shortly came to a clearing in the trees that led to a small grassy meadow. Jackson marched us right to the middle and took our blanket out of the backpack. I panicked. \n\nSensing my fear, Jackson didn't tear right into me like I know he wanted to. Instead we just lay down and cuddled. His strong arms gave me the sense of security I needed and I gradually found my nerve. \n\nWith my resolve stiffened, I determined that I was not going to be a passive participant in what may lie ahead. It being our last full day together, I wanted to drive Jackson just as crazy as he was driving me. The tent in his pants had not decreased in the least and I reached for it, salivating. I pushed him back to rest on his elbows as I undid his pants. His erection bobbed eagerly inside, anxious for my touch. He groaned his appreciation as I pulled down his boxers and jeans at the same time. I was too excited to bother with his shoes so I left them around his knees as I grabbed hold of my prize.\n\nI didn't tease. I sucked him greedily, hungrily, with the sole purpose of making him call out my name. I bobbed with a purpose, pausing only to lave his spongy mushroom head at the top of each descent. With each of his moans I grew bolder, shifting to gobble up his hairy balls while humming my eagerness to taste their contents. My psyche fed on the look he gave me, in awe of the raw nasty slut I was becoming right before his eyes. It was love, lust and amazement all in one stare, accompanied by a steady chorus of grunts and groans as I drove him forward. \n\nStrong hands lay pressure to my head, trying to slow my urgency, trying to retain some control, trying to hold onto some sense of dignity before I made him scream out like a teenage girl at a rock concert. I forced my head down further, gagging, trying to get my nose into his pubes, demanding a wild orgasm out of him. That's when I heard someone shout out, only it wasn't the shout from Jackson that I had been craving. \n\nI pulled up immediately, a desperate look of fear on my face. Only the throbbing tip leaking pre-cum remained in my mouth before his strong hands stopped my retreat. With Jackson's wrists blocking my vision on either side I could not see who's voice it might have been, but I would have sworn I heard them yell, \"what the...!\" My hands left his shaft and scrotum as I tried in vain to push myself up against the blanket to take my head out of his crotch. \n\nJackson's eyes bore into mine as he held me steady with an iron grip. He saw the desperate need in my eyes to flee even the slightest hint of public scrutiny. He didn't even look around to check who might have found us, so far off the regular trail. It was as if he didn't care, his concentration solely on me. Pre-cum continued to dribble out of his slit as he slowly shook his head, a feral look in his eyes. My tongue lapped at the salty appetizer, oblivious to my mind's panicked anguish. \n\nThat was the final straw for Jackson. His fingers strengthened their grip on my scalp as he pulled my face back into him. When his spongy head hit the resistance of the narrow opening of my esophagus he forced the rest of his tumescent cock in anyway, oblivious to my need to breath. Wiry hairs pressed into my face and my nose was filled with the heady smell of his male musk that I crave religiously. I felt a surge of power within his flesh run down the length of my tongue. His twitching cock expanded in my neck before it exploded. ",
        "Jackson was screaming, yelling my name as a torrent of his seed splashed inside of me. With his dick so deep down my throat, the first spurts shot straight into my chest. He felt me pushing back but this time he knew I was no longer trying to get away, only trying to make sure that not all of his cherished cream shot past my taste buds. My windpipe still cut off, breathing was only a distant third priority. \n\nThe grip on my head relented to let me back off a bit and breathe but no sooner had I taken two spurts on my tongue than my nose was full of his pubic hairs again. Over and over he drilled my face as his yells turned into grunts and moans. I swallowed, gagged, drooled, and tried to breathe. Once his head became too sensitive his balls stopped slamming into my chin and he tried to gently move me away. That's when I went into revenge mode. Looping my arms around his thighs I held on tight and tortured his drooling tip with my tongue. He cried out in the meadow all over again, clawing desperately and trying to get my mouth away from his glans. \n\nAt that point my conscience finally regained consciousness and I remembered that someone just might have been watching me perform that lewd act upon him. But before my horror and shame could fully set in Jackson flipped me over and threw my dress up over my abdomen, exposing my naked sex to the skies. \n\nOn my back looking up at the puffy white clouds, Jackson pressed my legs up into my chest while he baptized his face in my drenched sex. This area of the park had those elusive flying squirrels, and they flew overhead as he buried his face in my folds, deep French kissing my pussy. His nose and upper lip massaged my clit but his tongue stayed deep in my hole for the longest time, gathering all the moisture from my pink inner walls and sucking it into his mouth. His strong hands gripped my legs just below my knees, holding my legs back against and spread in a demand of maximum access to my sex. \n\nThe air was filled with the sound of birds chirping in the trees and the sound of him greedily devouring my pussy, grunting in his feral hunger. I used my muscles to try and hug his tongue with each thrust, kissing him back with my pussy. Without direct clitoral stimulation by his tongue he had me in a holding pattern of continual bliss without relief. I tried to shift my hips and push my clit in his mouth but he held me firmly in place. \n\nI realized he was doing it on purpose. If I came I would get too sensitive and push him away. By not letting me cum he could gorge himself on my smell and my taste and drink me to his heart's content, belly full. Occasionally he pulled his tongue out of me only to wipe his entire face in my pussy until it was all shiny and wet. At one point he stuck his nose directly in my hole to snort my musky nectar directly into his brain as if he were inhaling a potent drug. His raw and wild hunger for me made my pussy gush out her cream just that much more, and he lapped it up with a look of total bliss across his face. \n\nMy reservations flowed out of me with my leaking desire. Jackson seemed to know instinctively how to stoke that desire to a burning inferno. He knew when to tease me and when to indulge; when to deny giving me what I was too scared to admit I wanted until I was on the verge of begging, and then when to spoil me with his wicked tongue. He knew exactly how to extract the deepest passion from me, how to coax my sex into fluttering around his tongue while drooling shamelessly into his mouth. What he was doing to me left my own mouth dry, hungry only for a taste of him to quench my thirst. \n\nOne appetite satiated, Jackson turned me over and arranged me in a position that I could hold comfortably for a while. I felt vulnerable and exposed with my shoulders down on the blanket and my hips up in the air. His large hands began rubbing the cheeks of my ass, giving the muscles there a deep message. Strong fingers bit into my taut flesh, pulling, groping, until finally he spread my cheeks apart and held them open, staring at my pursed little star, tightly guarded with nervous tension. I felt the heat from his face as he drew closer, and goose bumps broke out all over me when I felt his warm breath blowing over both my holes. A sharp intake of air broke the silence of meadow. \n\n\"You filthy bastard,\" I whispered into the blanket realizing where he was smelling me. I felt my whole body turn red with embarrassment, tingling all over. My heart was beating out of my chest both with trepidation and anticipation. \n\n-------------- Jackson ----------------\n\nI studied her wrinkled little aperture nestled between the taut globes of her ass, trying to remember every detail in case I never saw it again. My lips searched out one of her cheeks, sucking the juicy flesh into my mouth before sinking my teeth into it. Her body shuddered as my touch met her flesh. Orkideh hissed at the sudden nip of pain then sighed as my tongue soothed it away. I repeated the same on her other cheek, my tongue laving her smooth flesh until both orbs glistened in the afternoon sun. \n\nPlanning on being there for a while, I adjusted my position to sit comfortably behind her. I paid full attention to every detail. Her golden olive skin slowly transitioned to brown around the lips of her sex and around the tinier orifice twitching nervously above, the melanin more concentrated there. Her labia were splayed open and plush with blood, exposing her pink insides that were shiny and glistening in the sun light. Her musky nectar oozed out to cover her entire vulva, indicating her excitement. Her smell was pungent in the air around us. I inhaled until my lungs were full, over and over, insatiable when it came to her.\n\n\"Such a tease,\" she whispered breathlessly. \n\nI turned my full attention to that part of her that had consumed my every sexual fantasy for the greater part of four years. Those tightly pursed folds of flesh, a mix of browns and reds that made up her pursed little opening. I studied how the melanin in her skin became more concentrated toward the center. That lovely, musky little center that beckoned me and called to my soul, tense with conflicting nervous energies: fear, shame, nervousness, and a desire strong enough to make her brave them all.\n\nSome people prefer pink assholes and find them aesthetically more pleasing. I loved the fact that the skin of her little pucker was brown, darker than the rest of her. Psychologically, it was more of a mind fuck: the brown hues a constant reminder of what that hole is usually used for, making it impossible to avoid thinking about the nasty and taboo nature of the act. \n\nI wondered if I had a problem, if my overwhelming desire to kiss her deeply in this spot was an indication that I had become sick and twisted. Surely French kissing her tiny forbidden orifice would bring her pleasure but that didn't explain why -- from the moment I met her -- that my soul's deepest desire was to share this level of intimacy with her. It was the singular fantasy that fueled my strongest orgasms since I met her -- making love to Orkideh where we indulged every source of ecstasy and broke every taboo. Our affair was taboo of its own merit but giving me her ass to do with as I pleased, that was the biggest forbidden taboo of them all. \n\nThe Freudians believe that the anus is closely connected to the deepest recesses of the human psyche. I happen to agree with them. In that respect I didn't just want to fuck her ass. I wanted to love it, claim it, and make it my own. Her body she would return to Brian. I wanted her soul.\n\nI gorged myself with the smell of her. My nostrils flared as the heady scent of her funky hole saturated my sinuses. In that narrow valley between her taut cheeks there was no hint of her perfume or her body moisturizer, just all her. Her musky, primitive aroma intoxicated my brain and made me crazy with need for her. I held her just out of reach while my eyes and nose drank her in, challenging myself to see how long I could wait before devouring her. My appetite for her was ravenous -- as well it should be after 4 years waiting. My eyes drew closed as I lost my struggle and my face moved closer to her flesh, irresistibly drawn by the pungency of her forbidden treasure.\n\n---------------- Orkideh -------------\n\nI was losing my mind with nervous anticipation before I felt the tip of his nose nuzzling the cleft between my cheeks. When he found his target he held it there pressed tightly against my most intimate place and continued to breathe me in. His lips were pressed right up against mine, and soon he began deep French kissing my pussy while his nose tried to burrow deeper into its smaller, tighter neighbor. It was as if he were trying to actually get his nose inside of me to take in more of my scent. If I had any morals left I would have been disgusted with both him and myself. Instead I leaked a steady stream of approval and excitement into his mouth. Soon he was rubbing his entire face in the cleft between my cheeks, wiping my anus across his every feature as he did my pussy earlier. I felt his eyelids bat across my little bud and I thought I would go crazy with need. \n\n\"Stop teasing me!\" I hissed, barely audible to his ears. \n\nHe grunted in response and I moaned as I finally felt his warm tongue work its way up my crack to center on my tiny orifice. \n\n\"You want me to stop teasing you, baby?\" he asked, mocking my growing need and frustration. His lips moved against my wrinkled skin as he spoke while his fingers pull me further open. Finally his tongue made contact with my tiny little folds and just about came undone. That first contact sent a nervous spasm through me that started in my sphincter and moved up my spine in a wave that made the hairs on my head stand on edge. The wave then moved back down my body until exiting through my toes while my legs kicked out my nervous energy. \n\nJackson took long, slow licks across my hole, savoring what he found and going back for more. I squealed and beat my feet against the blanket. Broad strokes eventually became targeted jabs, circling about the center then trying to push inside. At first my panicked sphincter held tight against his demand at entry. Then I began to relax, allowing just the slightest breach. If there was any feeling in the world as deliciously naughty as a tongue probing at your backside, I couldn't remember it. My whole body tingled as every nerve ending in me came alive. \n\nMy tight little orifice began to open up to his tongue like a thirsty flower opening its petals to catch the rain. He took advantage of my relaxation to push in deeper. With his lips pressed in an airtight seal around my anus he sucked at my funky little hole while his tongue wiggled around inside. It was the dirtiest and most perverse thing I could ever imagine. It was also wickedly and exquisitely pleasurable. In my mind I was disgusted but my body betrayed me as I felt myself pushing back into his face, trying to get more of his tongue inside of me. I surprised myself, my ass just as insatiable for him as he was hungry for it. My toes curled and my pussy gushed against his chin with every thrust of his tongue deep into my funky depths. I looked underneath me and saw a trail of my juices dripping down his neck across his Adam's apple. \n\nThe kinky bastard sucked at my dirty little orifice with abandon, as if he was hungry for all the earthy flavors inside. I was scandalized but it felt so good I couldn't bring myself to make him stop. I knew I was empty and clean -- he had cleaned me thoroughly himself that morning -- but the perverse and taboo nature of it gave me a wicked thrill and fresh goose bumps broke out all over my flesh. I didn't think an asshole could ever be clean enough for a person to do what Jackson was doing to me yet here he was indulging in it, indulging in me -- in a public park no less! I swooned at the thought. \n\nI could try to lie to myself but he knew this was what I secretly wanted. He knew that when we last saw each other four years ago he had sparked a desire inside of me for him to penetrate deep into my psyche and break through these ultimate taboos I had grown up with. He knew by how wet I got as he told me about his perverted dream and the hot sex we had afterward. And he knew that the only safe space for me to experience it was with him. \n\nI could have told Brian that I was curious about ass play and asked him to do these things to me, with me. But Brian was a breast man, not an ass man. Brian might agree and be up for trying it, but Jackson was tongue-fucking my ass like his life depended on it, sucking on my hole like it was his favorite meal. That just wasn't in Brian's heart. Jackson ate my ass like it fed a deep and starving part of his soul, just as he had done with my pussy that first night. Smelling and tasting me in my most intimate places was a spiritual thing for him and I was moved almost to tears to think of how similar we were in that respect. It was the kind of connection I craved most in a partner. It was the kind of connection I was missing. \n\nI pushed my ass back into his face harder and tried to relax my sphincter muscle as much as possible to let more of his tongue inside of me. His large, strong hands took a commanding grip of my cheeks, spreading them apart as wide as possible and pulling my ass back into him. His hot breath grew faster with his excitement, blasting out of his nostrils up my crack which sent tingles up my spine. Meanwhile, his rough chin stubble lightly scratched the tender sensitive skin in the cleft of my ass, the contrast making my whole body shiver. Every single nerve ending from my clitoris to the top of my ass crack was on fire. \n\nDeep groans of satisfaction echoed through the meadow, sometimes his and sometimes my own. Obscene noises escaped from his lips as he slurped at my dark passage. I was lightheaded with how good it felt to have his thick tongue probing me so deeply, its tip circling the inner walls of my rectum finding sensitive nerve endings I never knew existed. If Allah truly intended this to be sinful there is no way he should have made it feel this good, I thought. I concentrated hard, trying to use my muscles back there to reciprocate the deep French kiss I was receiving. I flexed my anus, sucking at his tongue with my sphincter and pulling it deeper into my depths. He loved my body's response to him and increased the intensity of his ministrations -- if that was even possible -- devouring my ass shamelessly. \n\nA bit of nervousness and apprehension flashed through me as I contemplated exactly what it meant that he was doing this to me. I wondered if I had the courage to return the favor to him, and if he would even want that? I felt I should -- not out of obligation -- but simply because I didn't want to hold anything back with him this time and I wanted to make him feel as good as he was making me feel and more. I wanted to be the best he'd ever had. Not because of my ego but because I couldn't give him the lifetime of love I felt that he deserved, that -- deserved. Since I couldn't give him a lifetime of love, I wanted to give him the love of a lifetime. But just the thought of it I found disgusting even though the feeling was divine. Sure, he had cleaned me thoroughly when we showered together that morning, but it was still an anus we were talking about here. I seriously doubted that I would have the courage to try such a thing and not gag. \n\nBut that wasn't what I was most afraid of. I was most afraid because I knew he was going to take my \"other\" virginity after this. I knew that anal sex was his secret kink. I learned that when we first met on the plane three years ago and I spotted the pornographic movies on his laptop. They all had anal sex themes. It was why I got so nervous during our first shower together when he tried to put his finger in me and wash me back there, and why I couldn't let him stick his tongue in my ass the first time he tried it that next morning. \n\nIt wasn't because I didn't like it. It was sinfully pleasurable in the way that the sweetest fruit is always that which is forbidden. But I feared what he would want next and I knew I didn't have the willpower or the desire to say no. I wanted to experience all he had to give me but I knew that there was no way that I could go back to Brian and look him in the eye knowing that I let some relative stranger who I had just met on the plane completely deflower my ass the way Jackson was about to do now, under the great blue sky in a public park! Because I had denied myself then, that secret desire stayed with me through these past few years, haunting my inner thoughts with unfulfilled need. He knew I was lying when he asked me if I enjoyed him kissing me back there after I scrambled away from him. That lie had finally caught up with me. \n\nThe feeling of two of his fingers sliding into my pussy while his tongue continued to worship my smaller hole brought me back to the present. \"Oh fuck,\" I moaned as his two digits began giving me a deep pussy massage while his lips remained locked in a deep French kiss with my anus. I looked underneath me and saw him crouched between my spread legs as he dined on my asshole and that's when I saw it. His shaft bobbed in front of him, rock hard again without receiving any physical stimulation. The entire head of his dick was shiny with all the pre-cum oozing out of it, a line of \"drool\" hanging from its tip. My mouth watered and I wished I could take him in my mouth while he did this to me. I reached back to get some of pre-cum on my fingers then slurped them into my mouth loud enough for him to hear. \n\nThat's when it dawned on me that the immense pleasure I was feeling was almost incidental to this lewd act as far as he was concerned -- he was eating my ass for his own enjoyment, as if he -- to taste me there. I felt my pussy gush at the realization that he was so into me like that, that he craved such a deep level of intimacy with me. The emotional intensity reverberated through my lower body with every thrust of his tongue. \n\nHis tongue didn't just go in and out of me. With every thrust he forced his face into my crack as far as it would go while his tongue swirled around inside me, searching, reaching, driving me crazy. My forebrain screamed revulsion at such a repulsive act. When his thumb began massaging my clit in time with his fingers pressing deep in my pussy, all the stimulation to the pleasure center of my brain closed the door on such protests. \n\nHe brought me to the brink and held me there in delicious torture. I began rutting my ass back into his face, now desperate for the orgasm to which he had brought me so close. Panic overcame me as suddenly his mouth and fingers were no longer where I craved them and he was quickly flipping me over on my back. I pulled my legs up instinctively, grabbing them behind my knees to hold them up on my chest, opening myself completely to him. I nervously wondered if this was the moment that he would take my ass with his cock and use it for his continued pleasure. Instead, he dove back in with his mouth and this time looked me dead in the eye as his tongue forced its way back inside my anus and licked circles around my inner ring. My hands went to caress his face and snaked through his woolly hair as he feasted on me with a dreamy look. The feeling was too exquisite, and my toes curled above my head at the wicked sensation. Then suddenly his mouth moved up to capture my clit as his slimy fingers that were in my pussy found their way to my ass. \n\nJackson began to move his middle finger within the snug confines of my anus. Slick with my juices and his saliva his digit slid right into me and curled upwards while he whipped my clit with his tongue. I saw stars. When he felt my hole relax enough he added a second finger, dilating my nervously constricted ring wider and wider. My back arched and I felt my body being lifted, elevated by the rush. Higher and higher I went until finally my orgasm crashed into me, slamming me back down onto the blanket and wracking my body in spasms. ",
        "I screamed out to the sky with the sweet release as convulsions wracked my body. Jackson wrapped his one free arm around my thigh and held onto me for dear life as my body thrashed about. I could feel his strength as he somehow managed to keep his lips around my clit. He stayed on it until the feeling became too intense and I began trying to push his face away. He perceptively dropped his mouth lower to cover the entrance to my pussy and began to suck out my gushing juices, moaning appreciatively as he gulped down my nectar. \n\nAfter my body calmed down he slowly drew his sticky fingers out of my ass and sniffed them, closing his eyes, relishing my stink. I watched horrified. He moaned as my darkest scent filled his lungs and then he kissed a trail up my body. His lips rained light kisses up my belly and between my breasts, then around my neck to my ear. \n\n\"You were absolutely delicious,\" he growled deeply then kissed a line along my jaw bone just up to my lips and then stopped without actually kissing me there. Perhaps he saw the worried look on my face and so he just stayed there looking deep into my eyes, a few inches just above my face. I saw a look of deep affection there, but there was also a knowing look he was giving me, as if he knew what I was going to do next. I didn't even know what I was going to do next! Did he know me that well? \n\nAs if proving him right, my nose slowly drifted toward his mouth as I began to nervously sniff him. A pungent aroma greeted my senses though my biggest fear was unrealized. The whole lower half of his face was wet and it reeked with the smell of what he had been doing. I could smell my pussy on him but there was a funkier, muskier smell overpowering that. It was a kinky smell of ass but not a dirty one. It was very different from the smell of my pussy, though definitely in the primitive, sexual family of pheromone-laden scents that spoke directly to the lower half of my body. Had he cleaned me that well and had my fears been truly unfounded? As if sensing my disbelief he opened his mouth to let my nose investigate further. \n\nI got closer, intimately pushing my nose directly into his mouth and smelling inside. My senses were greeted with the same musky smell of my pussy and my ass, but none of the dirty smell of which I was so afraid. My fears and defenses broke down as I nuzzled my nose in his mouth. He let his tongue dance along the entrance to my nostrils and I pulled away.\n\n\"That tickles,\" I laughed, then quickly pushed my lips into his to finally take the kiss we both craved. I kissed him deeply, wanting to share all the kinky flavors of our love that his mouth had to offer. Our tongues danced together as he shifted his weight on top of me and his dripping erection found the entrance to my hungry pussy and slid inside. \n\nHe made slow, passionate love to me while lying on my back with my ankles up over his shoulders, grinding his cock deep in my gooey pussy while his tongue danced in my mouth. My heart was pounding in my chest with both excitement and nervousness and I knew he could feel it. I stopped kissing him long enough to lick his face clean then slid my tongue back into his mouth. We weren't racing toward an orgasm at that point, just relishing being together and the sensation of each other's bodies. \n\nI knew what he was doing -- giving me time to mentally prepare for what was to come next. Having him in my pussy was like being home and I could just relax and take him there. He took his time, giving me all the time I needed. When the beating of my heart calmed down we both knew that I was ready. Without exchanging a word he stopped thrusting in me and pulled his swollen dick out of my drenched sex. We held eye contact as I reached down between us and grabbed hold of his slimy cock and moved his swollen mushroom head down to where he needed me most. \n\nI didn't have to tell him to go slow -- I knew he wouldn't hurt me. He gently caressed my face and kissed me tenderly as he began to push himself into my forbidden passage. At first he got nowhere. My body tensed and my anus clamped tightly shut. \n\n\"Relax, my love\" he said softly, cupping my face in his right hand. He caressed my cheek tenderly as he looked deep into my eyes. I took a deep breath and felt my moist brown little hole begin to spread for him and we both let out a groan. A deep, animalistic grunt forced its way out of my lungs when his fat tip finally crowned past my tight muscular ring. He stopped with just his head lodged inside me, pausing to let me get used to the feeling.\n\nI felt my sphincter flex anxiously around his \"--,\" the head of his cock, twitching with fear and nervous excitement. Jackson groaned at the sensation of my tightness gripped strongly around his pulsing head. He felt much too big for my tiny little orifice and I felt it would be impossible to take him fully inside of me. We have an expression in Farsi, \"--.\" It means 'a hippo's cock in your ass,' which was pretty much how I felt just then. I felt like I was being split wide open as his deliciously swollen dick staked its claim in my virgin hole. We were in a public park and a stranger could walk by at any moment and see how he was rudely violating me. Yet I was so consumed with excitement -- my body thrumming with horniness -- that I was unwilling to tell him to stop. For some strange reason I felt like I needed him buried deep down in my musky depths. I felt an intense and undeniable longing pulling at me from within, a longing for his heat, his pressure, for the sensation of being filled, even if it killed me. \n\nHis fingers had loosened me but my body continued to tighten from nervousness, making his further entry extremely uncomfortable and nearly impossible. I my flesh would start tearing, and again I doubted whether I could really go through with it. But his dick was so thickly greased with my shameless excitement that my virgin hole's tight resistance was futile. I grimaced at the sting of his continued violation, my body struggling to catch up to the resolve in my mind. \"Try to relax and take deep breaths,\" he told me between soft kisses. I struggled to breathe deep enough as a million thoughts rushed through my head: fear, guilt, pain, and ...\n\nHe let go of my face and wrapped his arms around my head and shoulders, holding me tight to him. His furious heart beat reverberated out of his chest and into mine, giving voice to all the emotion between us that we were both so scared to speak. I realized in that moment that I had been holding my breath because of the feelings that we had not spoken. But I also realized in that moment that we didn't have to. We both felt it and we knew it, and with that knowledge I found my breath. I inhaled and exhaled deeply signaling my surrender, body and soul. The mental block removed, I felt my sphincter relax a bit which allowed his dick to continue its slow progression deeper into my musky channel. \n\nHis cock was thrumming with a powerful energy, hard and unbendable as it fought through the valiant resistance being put up by my anus. He stretched me with his girth; the skin of my anus forced wide open and pulled tight to accommodate his surge inside of me. Breath came as a struggle as he crammed more of himself into me and my body attempted to get used to the feeling. \n\nThere was more resistance when the head of his cock pushed through my rectum and came to the natural bend in my colon. But Jackson was relentless. The firm muscles in his thighs bulged with determination and pushed forward. Deep movements in my gut indicated that my insides were shifting, moving to get out of his way as he invaded deeper virgin territory, making a straight passage where no natural one existed. Every inch introduced my body to a new definition of being full. \n\nI suppose that when one has to \"go\" really bad, one might feel full back there but that full sensation was nothing like this one. This was a throbbing fullness, a sexually charged fullness. More than just fullness, I felt impaled with a feral lust. The fact that I was impaled by my secret lover also made it a deliciously naughty and forbidden fullness, heightening our pleasure. \n\nHis fit within me was so snug that every detail of his cock was vivid in my mind, so much so that I could have drawn a picture. I could feel the vein that ran along the top of his dick as well as the one that ran underneath, the ring where his foreskin had been circumcised away, and the crown around his head. Every surge of blood pumping from his heart expanded his cock just the slightest amount and forced my hole open that much wider. It was incredibly intimate, feeling -- heart beat inside of -- body. \n\nFor all of his cool demeanor, his heart was racing with emotion. Feeling that one tiny bit of vulnerability from him was what I needed to lose the last of my mental reservations. I pushed my pelvis up into him to take his final inch. The dept of his penetration forced the air out of my lungs with a grunt. Curly hairs around the base of his shaft tickled my gaped little hole, giving me chills. \n\nI tried to breathe but it felt like the head of his cock was pressed up against my diaphragm preventing me from filling my lungs with air. Still, he didn't start thrusting in me right away. Instead, he gave my body time to adjust to the intrusion while his tongue continued to slowly dance in my mouth. Finally he couldn't hold back any longer and began thrusting into me in slow, measured strokes. When he did I quickly learned that I had not actually taken all of him as each stroke of his shaft seemed to push a little deeper into me and the force behind his thrusts steadily grew in urgency.\n\nSoon I found myself whimpering in despair every time he withdrew then sobbing with pleasure as he plunged in deeper, my flesh aching as he nudged into yet more virgin terrain. With my knees pressed up into my breasts and his chest pressed into the back of my thighs, Jackson made slow but passionate love to my ass with even, forceful strokes as our tongues remained entwined. A steady stream of excitement dribbled out of my splayed open pussy down into my ass cleft, keeping his shaft well lubed.\n\nFrom his moans I could tell that he was enjoying me but to my dismay he remained in full control. He knew my body so well, knew to make love to me like this while my body got used to having him in me back there. But he also knew that stoking my fire like this would inevitably lead to me needing more. It was what I always needed from him, what probably got me off better than any other aspect of our love making: the feel of him losing total control inside of me. \n\nI didn't have to say a word. When he sensed my need and my readiness he withdrew his tumescent shaft from my humid depths, shiny and dripping. I immediately felt a rush of cool air flow into my bowels through the gaped open hole that only seconds ago was a clenched little knot. His strong hands flipped me over like a little rag doll to put my full ass on display before him. I rose on extended arms but a strong hand at the small of my back pushed me down and positioned me so that only my ass was up in the air. Without thinking both of my hands reached back to spread and reveal my every secret, and I wondered when I had become such a good little whore. Cool mountain air blew across both of my exposed holes, making me twitch involuntarily. I heard a low growl rumble out of his deep chest as he studied me. \n\n\"Ooh, do that again.\" \n\n\"Do what?\" I whispered, clueless as to what he wanted. \n\n\"Wink for me,\" he chuckled sinisterly, presumably at my innocence that he was taking. \n\nI tried my best to do as instructed, mimicking the muscle movements of stopping my pee in full stream. Judging by his reaction, I must have done it right. \n\n\"So fucking sexy!\" he hissed. I felt him move urgently and I thought he was going to ram right back into me but he didn't. I gasped in shock as I felt his tongue dart back down into me instead. He wedged his face deep in my cleft while he speared me. My anus now distended, I felt his tongue wiggling around in me much deeper than it had before, somewhere in my rectum where a tongue had no business being. \n\n\"Oh bloody hell!\" I growled between gritted teeth. But before I could get used to the feeling he had pulled his tongue right back out, then slammed his rigid dick right back in. \n\nOnce he began to thrust fully into me the tickling of his hairs sent goosebumps up the crack of my ass and up my spine, all the way to my neck. His low swinging balls began to slap into my splayed open slit with every thrust, hitting my clit and becoming wet with my juices. It felt like his -- was somewhere up in my chest every time he bottomed out in me and I just felt wonderfully full of his delicious flesh, wonderfully full of him, wonderfully full of a heady mix of lust and love that was threatening to make me lose my head. Jackson wasn't just fucking my ass -- he was fucking my mind. I was high on the heated mental rush of my biggest taboo being brazenly violated in a public place. \n\nThe worst was when he withdrew after each thrust, leaving me feeling empty. Soon my body tried to take matters into her own hands to prevent each little disaster of emptiness. I wantonly began thrusting back into him in a willful display of my complete submission to being thoroughly sodomized. I was desperate to feel the fullness from each of his powerful thrusts. Every time he lunged deep inside of me my body spasmed to take an iron grip of his rigid flesh, squeezing him as tight as she could to hold him and keep him there. This just served to feed his raw lust, making him growl, and bringing his muscular hips crashing down into my buttocks at a faster pace. \n\nBefore long he was rutting into me and grunting incoherently, his huge balls slapping my wantonly splayed open and empty pussy. If his tongue had been sweet and loving to me earlier, his dick grew brutal. I was suddenly scared to death, fearful that my body couldn't take it. But at the same time, I had never felt more alive in my life. \n\nThe combination of his saliva and my pussy juice had me well lubed but as we began to sweat the addition of even more moisture caused the chorus of fucking sounds coming from behind me to reach a fever pitch. The most obscene squishing sounds reverberated throughout the clearing as he rammed in and out of my rectum. He began lunging into me so hard that I couldn't stay on my knees -- the force of his thrusts pushing me down on my stomach. \n\nJackson didn't miss a stroke and began pounding my ass into the ground. Deeper groans, two octaves lower than my earlier ones, began flowing incoherently out of my lips. I bit down into the blanket to mask the obscene noises I was making afraid my screams might draw an audience. My fists also clenched the polyester material. \n\nIn this position two things changed. With nowhere for my body to go to absorb his thrusts, the pounding he was giving me felt all the more powerful and overwhelming. More importantly, the angle in which he was entering my ass meant that each downward thrust pushed the head of his shaft right into that sweet, spongy spot on the front inside wall of my pussy. \n\nSuddenly I felt myself being pushed toward an orgasm; one of those deep ones, far off in the distance that take a long time to arrive but that crash into you like a freight train when they come. For a spell, I couldn't think, talk or move. All I could do was just hang on for dear life and take being pounded as my legs flailed behind me. It was as if there was a dark pain deep within him, kept hidden from the rest of the world, that he needed to work out by fucking the shit out of my body's most guarded passage. Finding my voice, I started mumbling obscenities in Farsi, shocked at my body's reaction. He slowed his thrusts and brought his lips to my ear. \n\n\"No, not this time. As sexy as it sounds when you talk dirty in Farsi, for this I want to hear it in English.\"\n\nI groaned in protest at his slowed thrusts. I wiggled my ass around his hardness, trying to get him to resume his pace. He wasn't having it.\n\n\"Tell me or I'll pull out,\" he threatened, knowing that I was loving it. But I knew that he was loving it just as much as I was, if not more, so I reasoned it was an idle threat. I repeated my obscenity in Farsi, dramatically accentuating the lustful desire in my voice, daring him to leave me. He thrust deeply within me one more time then pushed up on extended arms and began to slowly pull his sweet cock out of my hungry ass. I could feel the inner flesh of my rectal passage being pulled out with him as I desperately tried to hug him with my sphincter muscle and keep him inside. When only his head was left in me he paused and we both waited with baited breath. He blinked first; point for me.\n\n\"My God, Orkideh, this looks so fucking good, me inside you like this.\" His lust-filled eyes burned into my flesh as he took in the lewd sight of his dick sticking out of my ass. \n\n\"No fair,\" I pouted. \"I wish I could see, too.\" He thought about it for a moment then reached over to where our clothes were piled, grabbing for his pants. I turned my head to see him pull away with his phone. Then I heard the click of the camera app as he took a picture of us. He handed the phone to me. God, what an erotic sight it was! I had seen my anus once before when I was a young teen, first taking a mirror to examine myself. I remembered a crinkled little star held tightly shut. What I saw now was gaped wide open to accommodate him, the skin just around the anus slightly darker than the rest of my olive complexion. Seemingly forced into my greatly expanded orifice was a steel veiny rod, his chocolate brown skin shiny with our juices. The bulbous tip was hidden inside of me and the rest of his shaft looked poised to slam down into my core. \n\nIt was embarrassingly pornographic, and it turned me on immensely. My sex grew sloppy with added excitement just from the sight. My body tightened my sphincter to squeeze him appreciatively as I handed the phone back to him. Wiggling my hips, I pushed back to let him know what I wanted. He took the hint and took a few more pictures as he resumed an agonizingly slow pace stroking in and out of my stretched little hole. Point two for me. When I felt his pubes again tickling my gaped open anus he took one final picture and handed the phone back to me. \n\nI gasped as I scrolled through each successive picture. My body's visceral reactions to the pornographic images continued as Jackson brought his weight down on my back and began raining kisses against the side of my face. On the screen my crinkled little star stretched to grip him fiercely and I could see the tension in my tiny brown orifice increasing as he sank deeper into me with each progressive shot. The next picture made me gasp out loud. He had captured his cock withdrawing, pulling my insides out with him -- the focus zoomed-in close. The pink inner flesh of my rectal wall was hugging him, clinging to his shaft in a vain attempt to prevent its escape. A filthy, whorish desire welled up in me that I couldn't give voice to and my mouth watered. The damp spot on the blanket underneath my hips grew larger as my pussy wept tears of joy.\n\nThe final image of his cock buried down to its base in my ass actually caught my breath in my throat. I studied it intently as he watched my reaction over my shoulder. My once chaste little anus had wantonly devoured his shaft and made it completely disappear somewhere deep inside my bowels. All I could see was his course and curly pubes, slick with my juices and pressed tightly up against my impossibly stretched and distended hole. He could tell from the way my ass kept squeezing around him, hugging him while keeping his mushroom head throbbing somewhere deep in my abdomen, that the added visual of my ass being deflowered was turning me on immensely. ",
        "\"Can I tell you a secret?\" he asked softly.\n\n\"Anything,\" I moaned, bringing my fingers back to run through his course hair. \n\n\"I dreamed of sharing this intimacy with you from the moment we met,\" he whispered, sliding his tongue into my ear and making me squirm. I squeezed him with my ass appreciatively. \n\n\"Well, since we're confessing secrets...\" I hesitated for a bit then blurted it out. \"I have fantasized about giving myself to you completely, every day since the day we parted,\" I admitted, turning my head to take his tongue in my mouth. With his whole weight on top of me, one of my breasts in each of his hands, he slowly started grinding his solid pole into my hungry little aperture again. I shamelessly groaned my appreciation. \n\nThe feeling of complete helplessness and possession, the closeness... my pussy creamed the blanket below us, widening the wet spot under my hips. His surging blood continued expanding his turgid shaft in my bowels, a split second behind the thumping of his beating heart that I felt through my back. We stayed like that for a minute with him holding me tight and kissing me while his dick throbbed deep in my colon. It felt exquisite but his slowed thrusts had put my approaching orgasm on hold. My now scandalously hungry orifice wanted to feel his powerful thrusts slamming into me again. Finally he broke the kiss and cleared his throat, bringing me back to his earlier request. \n\n\"Now, you were saying something?\"\n\n\"Come on, baby,\" I pleaded, but we both knew it wasn't what I said earlier in Farsi. Jackson began to pull out of me and I tried with all my might to squeeze him tight and trap him in my ass, but when his crown slipped past my ring I panicked and relented. \n\n\"Please don't stop fucking me,\" I said breathlessly. \n\n\"What'd you say?\" he teased, halting his withdrawal. \n\n\"Fuck me, my love. Fuck my tight, dirty little ass,\" I gasped, sucking the head of his cock with my sphincter muscle for emphasis. \"Fuck it hard.\"\n\nHe came back down on me with his entire weight and slammed his full length back into my ass. He worked his arms underneath me to grab hold of my shoulders for leverage then started fucking the shit out of me. He took my ass and owned it, forcing my body to acquiesce to his will. \n\nAgain I was reminded to be careful what I wish for. I thought I wanted him to fuck me harder but as he began to lose himself and his cock claimed deeper territory in my intestinal tract I wondered if my body would survive the pounding onslaught he was dishing without permanent damage. \n\nHe lifted himself and brought each hand to push down onto my shoulders, both to hold me in place and for added leverage on his thrusts. His full weight upon me had me pinned as he punished my poor little anus, lost in his pleasure. My eyes flew open wide as I felt the full power of his thrusts and his dick slammed into me much deeper than it had before. \n\nHe wasn't slamming into my ass in a straight in and out motion. Jackson leaned into me at the end of every stroke, centering his full weight at the fulcrum of his hips, making sure my ass was fully impaled with each thrust. Each impalement put pressure on my diaphragm, forcing deep grunts out of my lungs each time his rigid flesh invaded my bowels.\n\nI could barely breathe as he began to maniacally lunge into my tight little star. I feared my flesh would surely tear as his dick rutted wildly in my rectum. The deeper he probed the more of my secrets he revealed until my true most private self was on full display -- moaning my appreciation at being made into his dirty little whore. \n\nUnintelligible babble escaped from his mouth interlaced with urgent commands to give him my \"tight little ass.\" I did as commanded -- had no choice, really. I could tell he had reached that point of no return and I couldn't stop him if I wanted to. I didn't want to, but all I could do was grab the blanket and hold on for dear life. \n\nIt was exhilarating yet scary as hell all at the same time. His orgasm was close and I felt his shaft swell even bigger as his explosion neared. I screamed at the added stretching of my anus, certain that my flesh would need stitching. Yet still, I wanted more.\n\nMy body possessed, I somehow found the strength to start rutting back against him, forcing my ass up to take him at the deepest angle. I felt a hand underneath me rubbing my clit furiously and I realized it was my own. He knew I was close so he began grinding his cock into me at every down stroke. A deranged, guttural groan came out of me. It was immediately followed by another, only deeper than the last, a possessed gurgling emanating from the most secret recesses of my psyche. A second later I felt a damn burst from within. Looking underneath me, I saw a gentle torrent streaming down off his swinging balls.\n\nWhen he felt me explode beneath him Jackson grabbed my hair, pulling my head back as he slammed into me even harder. \"Yes, you sexy bitch\" he whispered, \"cum on that dick in your sweet ass.\" Shocked at being so turned for being so rudely called out of my name, I came again, tearing apart, exploding from the pleasure as my sphincter spasmed around his shaft. Then he was growling, yelling at the top of his lungs above me as his orgasm overtook him. He pressed his cock all the way into me and held it there as his seed burst inside me. He flooded my ass with his cum, painting my bowels in his spunk, soothing the tender walls of my rectum that he had fucked so raw, marking the territory as forever his own.\n\nI felt every detail. I felt his cock expand and relax, expand and relax, swelling with every surge. I could feel the cum travel up his shaft before exploding out of his head. I could also feel the muscles twitching at his base and I could feel the blood surging through his veins. I could feel every gush of his hot cum splashing up into my colon and I could feel the head of his cock through the rectal wall throbbing against my g-spot. Our bodies made lewd squishing noises as his dick resumed slicing through my now flooded passage. \n\nThe most paradoxical feeling overcame me at that moment. One the one hand, in having such a mind-numbing orgasm from his cock slamming so deeply and mercilessly into my ass, my body never felt so completely owned by another human being. On the other hand, I had never felt so free and liberated. He had made me into his dirty little anal whore and made me love it. \n\nHaving an orgasm from anal sex was a completely different experience than having one from oral or vaginal sex. First was just the shock. I had decided to give Jackson my ass for his pleasure and for the joy I took from pleasing him. I expected it to be intimate and had faith that he would be tender with me and try not to hurt me, but I never imagined that I would or could have my own orgasm from it. I was wrong on both counts, dead wrong. He was tender to begin with but the end was anything but gentle as he rammed my ass mercilessly as his orgasm overtook him. I had to admit that I loved that most of all. Then there was the fullness, the indescribable feeling of being overwhelmingly full of someone you care so deeply about, hard and throbbing inside you, feeling how much turned on they get for you. \n\nAfter the shock there was the shame. There's that part of our upbringing that we can never quite shake that reminds us that good girls don't let boys fuck them in the ass, and they certainly don't like it. And after coming down my throat earlier, my entire GI track was flooded with his seed. So I couldn't help feeling like a dirty whore as my body thrashed about underneath him, wracked with spasm after spasm from how hard I was coming. \n\nThere was no way to hide it, no way to pretend that I wasn't having the most intense orgasms of my life. That realization made me feel all the more like a dirty whore, knowing he was watching me convulse underneath him with his throbbing cock still pressed deep into my dark passage. But strangely, feeling like a dirty whore only made my orgasm stronger, feeling safe that I knew Jackson wasn't judging me. I knew the intimacy we were sharing was sacred to both of us, and that this act -- now my life's deepest secret -- would remain only between us. Yes, the irony occurred to me that my life's biggest secret was taking place openly in a public park. That just added to the exhilaration. \n\nFinally, there was the sheer intensity of the experience. Because I could feel every little detail with him in my ass as compared to my pussy, it made the intimacy of the experience all the greater and also added to the intensity. The air around us had even started to reek of the combined smell of sweat, my pussy, and what can only be described as the unique musky smell of anal sex. In the end, the sensory overload was all too much for me. I came unabashedly, shamelessly, crying out for him. \n\nWhen our orgasms finally subsided I indicated that I needed him to pull out of me. I could definitely feel that my anus had taken some abuse, and she needed a rest. I could hear the mess we had made as he slowly pulled his dick out of me. I turned around and saw that his cock was dripping with our juices, a frothy ring covering his base. He collapsed on top of me and wrapped me in his arms, looking deep into my eyes. I caressed his face as we just stared at each other for a moment, catching our breath. He was sweaty and my nipples slid across the hairs on his chest, bringing a shiver down my spine. We didn't have to say a word, telling each other with our eyes just how special that experience had been for both of us. \n\nFinally our lips came together. The kiss was soft, slow, and very tender -- exactly the opposite of the frenzied intensity with which we had just been fucking. Yes, we had been fucking. He started out making love to me but in the end he had been fucking my ass, hard and raw. I could still feel him back there, slightly sore from the pounding he had given me, but it was a wonderful soreness that I wouldn't have traded for anything.\n\n\"What did you just do to me, Jackson?\" I wondered out loud. \n\nFor the longest time we just lay together and cuddled. When we stopped sweating and got a little chilly, we pulled the blanket over ourselves. Eventually I needed to do something about the mess that was starting to leak out of me. I asked Jackson to hand me the shredded material of my ripped panties to wipe up and he looked at me like I was crazy. I suppose he had other plans for those. Luckily, I had a few tissues in my purse. They would have to do. We walked back to the car in silence, just holding hands. I was in a daze, with a wad of tissues stuffed up my backside to stop my leaking. \n\nIt was our last night. Unlike the last time when it came down to our last hours together, this time instead of becoming tense and distant with each other, Jackson wouldn't let me go or stop kissing me. We stopped off on the way home to get some food to take back to the hotel. After eating and a bath together, we just cuddled up and kissed for the rest of the night, barely saying a word. \n\n--------------- Jackson ----------------\n\nWhen I awoke the next morning I had a flashback to that fateful flight home from Malaysia four years ago that brought Orkideh into my life and into my heart. I remembered the torrent of emotions I went through over the next 48 hours after boarding that plane: my initial malaise at coming home to a darker, meaner U.S.; the pure joy of meeting Orkideh and falling in love with her; the intense let-down from learning that she was engaged; the fright from being chased by Iranian agents; the rush at giving into our passion; and then the heartbreak of letting her go. Loving her gave me hope that maybe, just maybe, love can conquer all the obstacles that lay before us. It was a hope that was all but crushed upon learning of her marriage. \n\nShe stirred from sleep and reached for me, interrupting my thoughts. We held each other tight until the need to pee overtook us both, and I let her go first. After the toilet flushed I heard the sound of her brushing her teeth and I couldn't wait any longer. I barged in the bathroom and started peeing while she had a mouth full of toothpaste. \n\nOrkideh giggled and stepped closer to watch me relieve myself. When I was done, she took a wad of tissue and dabbed the head of my penis. With just that slightest touch I grew hard. I hurriedly brushed my own teeth and then we rushed back to bed, making love softly, then harder, then softly again. We both cried the whole time. \n\nWe showered and dressed, both of us more mature this time and not getting angry with each other to mask the pain from the fact that we were saying goodbye. We drove to the airport just holding hands, quietly affirming our love with the occasional squeeze and caress. \n\nOrkideh insisted on sharing our final kiss in the car before we walked into the airport. Her other family members were flying in that day, her husband's plane would land in an hour, and she couldn't take the risk of being recognized. When she walked me from the car to the security checkpoint her hijab and sunglasses were once again hiding her features. \n\nWhen she left me at security all she could do was squeeze my hand. There was more emotion in that squeeze than most people get in full body contact. I saw two little rivulets of moisture roll down her cheeks from underneath her sunglasses and I lost it, pulling her into me. I held onto her for the longest time, burying her face in my chest and kissing the top of her head. It was the best I could do to try and keep her hidden. \n\nWading through security and walking to my gate I came back to my thoughts of that morning. I couldn't really say that I had hope, knowing that I wouldn't see her again. But I wasn't so depressed, either. Love hurts, but she was worth the pain. \n\nI sat down on the plane a felt my phone buzz. It was a text message from Orkideh. \"What are your plans for Memorial Day weekend?\"\n\n--------------- -------------------- "
    ],
    "authorname": "Jayded_Lust",
    "tags": [
        "forbidden love",
        "adultery",
        "anal",
        "rimming",
        "exhibitionism",
        "oral sex",
        "romance",
        "squirting",
        "middle east",
        "iran"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/behind-the-green-veil-ch-06"
}