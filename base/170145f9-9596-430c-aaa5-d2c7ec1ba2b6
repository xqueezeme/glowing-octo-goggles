{
    "title": "Halloween Hell Pt. 03",
    "pages": [
        "This work of FICTION contains themes of non-consent, humiliation, abuse and other related kinks. This is meant as entertainment to bring enjoyment, not as something that should be carried out. If this offends you, please do not read.\n\n\"R-Rebecca, where are you taking us?\" I ask, trying not to sound nervous, but I know it shows. I look around and the scene is from a horror movie. It's a neighborhood street like you might find in any neighborhood anywhere, only the end of it is dark as there are no street lamps at all. I mean, there are some, but they are all burnt out, leaving the end cul-du-sac looking very scary.\n\n\"I told you Sara. Part of your initiation,\" Rebecca says in an almost emotionless tone. She's walking in front with myself and Lilly following behind her. Unlike myself, Lilly looks upbeat and happy, as if she's having the best time. This may sound mean, but all those \"blond\" jokes I think were about her. Ditzy doesn't describe her properly at all.\n\nRebecca came into the sorority today and called on myself and Sara for a special initiation. This isn't all that weird as we are both pledges, and Full Sisters can call on pledges to do initiations. Most of them are stupid and silly, meant to humiliate you and make sure you can handle yourself. So far the worst I've seen is that they made one girl wear only her underwear while at the house, and that was to try and get her to love her own body. Overall it is a good sorority as they are all about helping you make it in college.\n\nWhat concerns me is that it's Rebecca doing this. She and I had a brief fight not to long ago. It wasn't anything too bad or even physical. I had started to talk to a guy named John that's in one of my classes. We never got any further past sending flirty texts before I found out that he had been on several dates with Rebecca. At once I broke it off as I didn't want to be with anyone that like that, who lines up several women for himself.\n\nOnly Rebecca saw it as me moving in on her man. I told her that wasn't the case and that I didn't know. We talked it out and I told her the honest truth, but I'm not sure she believed me. But she's been fine towards me. No rude comments or anything like that. Just acting like normal. Only when she doesn't think anyone is looking, I can see her glaring at me.\n\n\"This is something I had to do last year when I was 18, like the two of you,\" Rebecca explains, with it being one of the few things she's said the entire trip.\n\n\"I love a mystery!\" Sara chimes in happily. For a moment I look at her, thinking how she has no clue that this could be something bad. After all Sara is in Rebecca's bad graces too. A couple of weeks ago we were at the beach wearing bikinis with the sorority's initials on them, when Sara told Rebecca that her left boob looked smaller than her right, and maybe she should stuff it to look normal.\n\nMany of the girls had to inform Sara that having slightly different sized boobs is normal, and there's nothing wrong with it, to which Sara stated she would get surgery if that was the case. Granted Sara is very much an airhead, but I saw Rebecca's face that day. She was PISSED, especially for it to be said in front of so many people.\n\n\"Here we are,\" Rebecca says as we are fully into the darkened part of the street. Now that I'm in this area, it's not as scary as a I thought it would be. The houses are well kept and look good. I thought for sure they would looked scary and haunted but that isn't the case at all. Just an area with no streetlamps.\n\nRebecca then points across the street to one of the houses in the cul-du-sac. I follow where she points and get a shiver up my spine. It's a house with all sorts of trash and engine parts all over the yard. The grass looks like it hasn't been cut in forever and I think I smell beer from the place way over here.\n\n\"All you have to do is go over there, and tell the man, 'trick or treat.' That's it,\" Rebecca says, glee now in her voice. It's more than glee. I think she's holding back her glee as she is so excited. It is extremely creepy for some reason, as she is holding back what is really about to happen.\n\n\"Ok!\" Sara says and starts walking forward at once. I nearly shout for her to stop, but don't. Instead I look at Rebecca to try and see if this is just a silly prank or some sort of evil setup. But she looks at me with an unreadable expression, making it seem like I'm the asshole for thinking this is a setup.\n\nAfter giving me a 'well, you going?' look, she motions for me to start walking. Not wanting to, I do begin to walk. We both know if I refuse, I can be kicked out of the sorority. Rebecca is a Full Sister after all. And I can see people siding with her if I complain and say I didn't do it because I was scared.\n\nAs I follow behind Sara as she walks across the road, I tell myself that I'm overreacting. That this isn't anything bad. That it's just a prank. They do pranks on pledges all the damn time. It's nothing to get upset or scared over.\n\nBut as I get closer, I see the man Rebecca referred to, and I get scared. He's sitting in a lawn chair in the midst of his yard, completely in the dark. He looks like a shadow in the midst of the outlines of all the trash and junk scatters in his yard. And all around him are empty beer cans, like hundreds of them, not to mention few cases of beer sitting next to him. Even in the dark I can see him watching us as we get closer.\n\n\"Trick or Treat!\" Sara says brightly as she hops onto the sidewalk in front of the house. A couple of moments later, I step up on it as well, but I don't say anything. The closer I get to the guy, the more my skin crawls as this doesn't feel right. I mean, on the far other end of the street, kids are trick or treating and everything seems normal. You hear screams of kids, adults laughing and teenagers being teenagers. But here? It feels wrong. I mean, why are there no trick or treaters here? Why is it all dark?\n\nThe man, who is still in the dark tilts his head as if to look beyond us. When he does, I look behind me to see Rebecca still on the other side of the street. She looks right at the man and then waves a knowing wave. Right after she turns and starts to walk off at a brisk pace.\n\nMy eyes narrow on her, as the fear that we've been set up increases greatly. She almost runs as she goes, desperate to get out of here. Only she stops once she is in the safety of the streetlamps where she looks back at us.\n\n\"Alright then,\" the man says with a sigh, as if he's bored. To this he tosses his empty beer can behind him and grabs him a new one from the case next to him. After adjusting himself in his chair, he turns his focus on us. Only he doesn't say anything more. Just sits and looks at us.\n\n\"Just had to come here. Had to come here and get taught a fucking lesson for being so fucking dumb, huh?\" The man tells us. He says this calmly, but it doesn't feel calm. It actually feels the opposite, like he's dying to leap up and attack us. It's so intense and unexpected that I can't think of what to do but stand here.\n\n\"Get your clothes off,\" the man says in a gruff, no-nonsense voice. My eyes widen at this as a cold pang of fear rushes up my back. Did he really just say that? No, no way. I mean, the way he said it was like someone saying, \"get off my property please.\"\n\n\"I'm sorry, what?\" I ask, in disbelief of what I think I heard. If this is a joke, it's not funny. It's actually scary as all hell. Not even Sara laughs.\n\n\"Look ya dumb fat bitch, get your clothes off now, unless you want to piss me off,\" he says in what is a clear warning. I gasp at his extremely rude and blunt insult. I know I'm not a stick figure like Sara is, but I've never had any issue getting a date. Yes, I'm on the larger side, but I know I'm very beautiful. I've been called a BBW many, many times. Also it doesn't hurt when you have M cups for breasts and a large butt for people to grab. But I wouldn't ever call someone like me fat.\n\n\"Oh! I get it!\" Sara suddenly chimes is, as if the lightbulb went off in her head. She then laughs and points at the very creepy man, as if she's in on the joke. The man doesn't react at all.\n\n\"I've seen this before on TikTok. He's one of those mean personal trainer guys. Makes you get naked then yells at you while telling you to do exercises. I watch those vids all the time. Some of them are real funny too. Can't believe I'm going to get to be on one!\" Sara tells me, having no clue the danger that we (probably) are in.\n\nAs if all is right in the world, she removes her sandals to become barefoot in this trash-strewn yard. Next she unbuttons her pants. While she keeps undressing, I look at the guy who is maybe 5 feet away.\n\nWhat scares me even worse about him is that he isn't even watching Sara get undressed like most guys would. They would be locked onto her, trying to take in everything about her body. But not this guy. He's still sitting in his chair, head laying back, downing another beer. He doesn't seem to care at all that a woman is getting naked right in front of him. In fact, he looks annoyed.\n\n\"What's it going to be Fat Tits?\" The man asks while not looking at me. To this, I get another harsh pang of reality. What am I going to do? The smart and best thing would be to turn and run. To get the hell out of here. But I can't do that, can I? If I did, I would be leaving Sara alone with this nutjob. And I doubt I could convince her to go with me as she thinks this is some trend.\n\nIf I do run off, Rebecca could have me kicked out. I mean, I'm sure I could explain it to the others, how this isn't right, but what if they agree with her? What if it is a silly prank, and I'm just making it worse? Do I want to risk ruining my chances of a good collegiate environment?\n\nAnd then a new thought pops in my head, one that I have never felt before...I am scared to go. I'm scared of this guy, for real. What if I try to take off, and he comes after me? What would he do then? Would it make him even madder, to which he might do something worse than what he's thinking of doing now? Would I even be able to out run him?\n\n\"I...I'm doing it,\" I tell him to try and keep him calm before he gets upset. When I say this, he doesn't react. Not even a head nod to show he heard me.\n\nFeeling cold from fear, I untie my sneakers and pull them and my socks off. As I do this, Sara finishes removing every snitch of clothing she had on. She's always been a free soul in that regard, willing to get naked whenever as she's not ashamed of her body. With a smile she stands next to me, naked, an arm covering her ample chest and her other hand cupping her lady part. I can feel her excitement as she thinks she's about to go viral on TikTok.\n\nI feel both of them watch me as I unbutton my jeans now. I pull them down, exposing my Halloween based panties. Once off, I fold my jeans and put them with my shoes, then pull up my top. When I do, I feel so strange and weird. I mean, I'm undressing OUTSIDE. Sure, it's dark here, but it's still outside. The people in the nearby houses could for sure see if they look out.\n\nI am not ashamed of my body at all, but at the moment I do feel humiliated. I'm just a bigger girl, but not fat. I have no gut to speak of, not that I have flat abs. I'm just plump. Yet now his eyes are making me feel the opposite of beautiful. They make me feel like a freak on stage to look at.\n\nFinally, I'm in my bra and panties. I consider just stopping but know he will say something. So...I unclasp my bra, allowing my large breasts to become free. As my bra drops, I cover my breasts with my arm, trying to hide as much of them as I can. Next I pull down my panties, immediately cupping myself like Sara as I am exposed completely.\n\n\"Happy now?\" I ask the man, a flare of anger coming out as I am completely naked. Both of us are. Butt-naked in his front yard, just because we are pledges.\n\n\"There's always some dumb bitch that comes here. Like you are attracted here for some reason,\" he says in a tone that states we must be stupid.\n\n\"Look man, we are just here because the soro-\" I start but he cuts me off by pointing at me and growling. The way he does it is extremely scary, as it's very primal and animistic.\n\n\"Listen Big Tits. You think I care? You think anyone cares? I've raped dozens of bitches that stood right where you are, and I'm going to fuck even more. Neighbors don't give a shit. As long as it's not them or their loved ones, they leave me the fuck alone. They don't want to see me mad, because when I get mad, I get mean. I get creative. I get evil,\" he tells me in what is clearly meant to say, 'shut up now.'\n\n\"Is...is this not...the PT challenge then?\" Sara asks in a soft, scared tone, looking between myself and him. Neither of us answer, with me not doing it because I'm too scared and the guy because he probably doesn't care. Slowly I see the color on her face begin to fade as she finally sees the danger we are in.\n\n\"Put ya clothes on the pit,\" the man grunts, motioning to the right with his head. Turning that direction, I see a barbeque pit about 10 feet away in his yard. To this, Sara and I look at each other, both of us extremely scared.\n\nLooking at it, I know there's only one reason he wants our clothes on it. But fear keeps me from saying anything about it through. If I put my clothes on it, he'll set them ablaze, leaving us naked as can be.\n\n\"But not your bra or panties, Fat Tits. I got something special for them. Now get going!\" He yells the last part very loud. So loud in fact that both Sara and I jump a bit as it startled us. Hell, the entire street probably heard him.\n\nSara begins to move at once and when I see this, I start moving as well in pure reaction. She bends over and gathers up all of her clothes very quickly, probably having no clue what he means to do with them. But, being a bit cowardly, I do the same thing, getting my shoes, top and jeans while leaving my bra and panties on the ground.\n\nSara and I start walking side by side, both of us clinging our clothes to the front of our naked bodies. As we walk, I hear her whimpering as she's finally caught on how much trouble we are in. That this guy is crazy. That he's some sort of criminal pervert.\n\nWe reach the barbeque pit and place our clothes on it. Once it is done, we go back to covering our naked bodies as we don't know what else to do. I do consider screaming \"RUN\" so Sara knows to go with me, but again...what if he catches us? To be honest, it'll be me he catches after all. Sara can outrun me, so she'll get to freedom while I would be the one that catches hell. And if what he says is true, us screaming won't do anything but make him mad as everyone nearby will ignore it.\n\n\"Move under the branch. Make sure you are facing each other and get your damn hands up,\" the man growls. It's only now that he starts to stand. He seems to keep getting taller and taller as he stands up completely, towering clear over the two of us even if he's far back.\n\n\"W-What is he going to do?\" Sara asks in a whisper as she walks to the location he told. She started to walk at once, without question or even thinking. I on the other hand, stay where I am as I consider if there's another way out of this.\n\n\"W-We can leave. Leave and never come back,\" I then offer the man as I stand there, still trying to cover myself with my hands. If he really hates us, this could be the best thing for everyone. He doesn't have to look at us and we don't get hurt. It'll be perfect.\n\n\"Don't make me repeat myself Fat Tits,\" is his reply, then downs the rest of his can of beer. Hearing this makes the last bit of hope I had die. I turn with my head lowered and begin to walk to where Sara is already standing. She's there, both of her hands up in the air like in a robbery, her naked body displayed.\n\nI try not to look at her as she faces me since she is so very naked. I've seen her naked before, but this feels different. Her C cup breasts jiggle as she whimpers and her landing strip seems more pronounced than ever. Overall, she looks very much like someone that is about to have sex if they want it or not.\n\n\"W-What's he going to do?\" She asks again as I step up. Looking up, I see just the one huge branch coming off the tree. I then realize he means us to be close together. Like, so close we probably could kiss as there's no way otherwise.\n\n\"I don't know,\" I lie, as I have an idea he means to fuck the two of us. But maybe it's better not to scare her with such a statement. So, I take a deep breath and try not to feel Sara looking down at me as she refuses to look anywhere else.\n\nFinally, I let go of my body and lift my hands. When I do, my large bust comes out to Sara's view, as does my shaved womanhood. And when I do this, I happen to catch her eyes widen. Forgetting what is happening, she looks me up and down, looking at my naked body completely.\n\n\"P-Please, there must be another way out of this,\" I beg the man as he comes up to our side. He doesn't respond but grabs Sara's left hand. He wraps a dirty looking rope to her wrist after making a loop. Once this is tied, he tosses it over the branch, and proceeds to tie the other end around my right wrist. Then he moves to grab Sara's left wrist to repeat the process.\n\nHe's tying us to each other, only making the branch be what keeps us in place. Why would he do that? Wouldn't it be better to tie us each to the branch? If he's doing it like this, it means there must be a reason and that scares me.\n\n\"You two have a choice while I do this next bit. Either the words, 'I'm stupid and deserve to be fucked up the ass' comes out of your mouths, or...you best get to kissing,\" he says, pausing to check our bounds. Both of our hands are high up now, making it that if one pulls, the other gets stretched. And we are standing so close that I have to keep leaning back or risk my breasts rubbing against Sara.\n\n\"WAIT, what?!\" I say in shock at what his 'options' are, but then get a surprise. Sara leans over and puts her face on mine. Her lips meet mine and proceeds to kiss me. I'm very much surprised by this and try to lean/move back, but I can't. I'm tied in place to her, making it impossible for me to get out of her way.\n\nI protest as I feel her put her tongue in my mouth, making it a full blown kiss. My protests are loud but I don't do anything mean like close my mouth as I don't want to hurt her. She's just scared and is doing what she thinks is right.\n\nI keep protesting as I want to tell this asshole what a creep he is. That we are not tools in whatever lesbian fantasy he may have. That he should go online to one of his bookmarked porn sites if he wants to see this.\n\nThen all other thoughts leave me when the fire starts. On the pit, the pile of clothes sit, burning away. It's such a site that Sara stops kissing me to look at it, her own whimpering louder than ever. I look at it too, realizing that not only are our clothes being destroyed, he's lighting us up. That people will stop to look at what is clearly a high fire. The fire cuts through the night very well, almost like it's aim is to show off the two scared naked women tied to this branch.\n\n\"Why? Why are you doing this?\" I demand, my anger and fear getting the better of me. It overrides the humiliation of being naked and tied up, even of being kissed. It gives me the power and urge to try and claw the man's eyes out if I could.\n\n\"Because I can,\" he says in a way that implies I should know. Then he slaps my bare ass hard, making me yelp as he walks by. As he walks off, he laughs at me.\n\n\"I didn't say stop,\" he then growls as both Sara and I look at him. At once Sara leans back over to put her lips on mine. She kisses me with a lot of energy while I just stand there and take it. But in the corner of my eye I see the bastard look at us, and a part of me gets scared he might get upset that I'm not kissing her back. With that tidbit of fear, I open my lips and kiss her back, my face burning red with this humiliation.",
        "\"Now, whenever bitches like you have to poke your nose into my business, I enjoy showing the world what you really are. I have no clue what you were before you came here, a doctor, lawyer, even the president of the country, but what you are when you are here, is just a stupid bitch whose body is meant to fuck and be punished,\" the man explains in a very calm manner as he moves around the yard.\n\n\"Sure, this isn't the Ritz or a fancy porno shop, but I do have the tools to make you see what you really are,\" he continues to say as he moves behind me, my lips kissing Sara's soft lips. Behind me, I hear him doing something, like collecting items or maybe even pushing something.\n\n\"Spread ya legs,\" the bastard then orders from right behind me. I groan at this loudly, showing that I don't want to be raped. That I'm not ready for it. That I don't deserve any of this just because some guy I went out with is an asshole and his would be girlfriend got mad about it.\n\nI spread my legs as he wants, but he doesn't move behind me like I thought he would. Instead he wheels something huge between my legs. Whatever it is, it has wheels and a small engine. It is wheeled between my legs, and hits Sara's legs, which she spreads for as well. A moment later, the thing is between and below both of us, the ends of it right beneath us.\n\nThe man doesn't say anything at all, not even when Sara and I stop kissing. Instead he moves away, only to return quickly. When he returns, he has a 3-foot metal pole in one hand and something else in another. He proceeds to take the object in his other hand and insert it on top of the pole.\n\n\"Oh dear me,\" I gasp as I see what the object is finally; a dildo. A purple fat dildo. He puts it on top of the pole, then turns it as if screwing it in.\n\n\"Don't...don't you dare,\" I warn, as if I could do anything. The bastard pays no attention to me as he turns to look at Sara. Kneeling down, he puts the dildo right between her legs. He has to feel around with it for a bit, but does put it at her opening. As he does this, Sara looks down in horror, and then looks to me, begging me to do something as her womanhood is about to be violated.\n\nSara lets out a loud yelp as he shoves the dildo inside of her. Granted, he doesn't do it painfully, but he's not gentle either. He slides the thing in deep inside of her, where Sara's eyes widen more and more as she feels it go deeper inside. With it placed all the way inside of her, the bastard then slides the other end of the pole into the machine below us, so she's stuck in a one-bar prison. The poor girl is now on her tiptoes to try and find comfort.\n\nI frantically look around at the other houses. Surely they heard Sara scream. Surely one of them is calling the police. They saw the fire, saw us and are calling the police. They would have heard screams, looked outside and saw the scene, thanks to the fire lighting us so well, and now are calling the police, right? RIGHT?\n\n\"No, no, no, don't do it!\" I beg and plead as the man leaves and returns with another pole with a dildo attached. He then kneels next to me. I attempt to move away from him, but find that I can't. The machine between my legs makes it impossible for me to move my feet as there's nowhere else to step.\n\nI let out a loud guttural groan as he puts the tip of the dildo right between my pussy lips on the first try and inserts it. My groan gets louder as it slides in deeper and deeper, pushing apart my pussy walls as it violates me. To my horrible surprise, I find I am extremely wet. I'm not sure why, but it makes it very easy for him to insert the damn thing.\n\n\"S-Stop...please,\" I beg as he keeps shoving the thing inside, to which at least 8 inches have to be inside me, making my body tense. It's the largest thing I've ever had inside of me. Largest and fattest as it makes me feel like my womanhood is being pushed apart.\n\nFinally, he does stop shoving it in, and I feel him place the pole into the slot on the machine below, trapping me in this prison as well. I see now why Sara moved to her tiptoes, as it's an effort to realize some of the feeling of the damn thing being so deep inside you.\n\n\"Don't worry, blade's been removed,\" the bastard oddly says as he stands to the side of Sara and I. He then leans over and grabs something on the machine that's between us. I gasp as he pulls back on what is a pull cord, something I wasn't expecting. When he does this, I instantly know what the machine is, and my eyes widen. It's a lawnmower. A fucking lawnmower.\n\nWhen he pulls on the cord, it doesn't come to life, but the lawnmower does rattle a bit. As the dildos are connected to the lawnmower, I feel this very clearly inside me as the dildo moves a bit. Again, my eyes widen as I realize what this is about to do. What he is about to do to us.\n\nI open my mouth to demand that he stop, but the words never come out as the lawnmower without the blade comes to life. Instantly the motor starts and the entire thing vibrates as well as spitting out wind and noise. And then the dildo inside me starts to vibrate, HARD.\n\n\"You bastard!\" I yell as an intense feeling of pleasure starts inside me as I've never had a dildo this deep in me, nor had anything vibrate this hard. I fight as hard as I can not to give into the pleasure, to keep fighting it, but it's hard. Something about this whole situation makes it hard, as I've never been so scared, dominated or humiliated before.\n\nLooking across, I see Sara's eyes already rolling back as she's given in at once. Hell, her entire bottom half vibrates from the lawnmower due to her being a toothpick in terms of size. I even hear her moan from the vibrations. It's soft, but it is clear moans of pleasure.\n\nSeconds feel like minutes as the vibrations are steady and deep. My heart pounds a mile a minute as I keep trying to fight the pleasure. The vibrations are so deep. Like they are inside the pleasure center of my soul. But I know I can't give in. I have to fight it. But I know it's pointless. It's going to win in the end.\n\nAfter only 30 seconds or so, I let go. I allow my body to relax, and instantly the feeling of pleasure jumps from a 4 to a 10. Moans start to come from me, moans louder than Sara's who is damn near screaming her moans. My eyes close and I feel a deep and humiliating orgasm coming forward from this. It doesn't help that I can feel my breasts jiggling and shaking from the vibrations, making me feel like an object to be watched and humiliated.\n\n\"There. Now the neighborhood can see how fucking huge ya fat tits are,\" the bastard says and laughs a cruel laugh. Swimming in dark pleasure, I manage to flutter my eyes open to look at him. Only he's not anywhere near us.\n\nTurning my head some, I see he's almost at the sidewalk. He's right next to a flagpole that is a bit bent so the top is crooked. And he's pointing upward.\n\nFlying high at the top of the flagpole, flapping in the wind...are my bra and panties. Hanging like a flag my bra is on top, looking straight and starched as the wind constantly blows, while my panties do the same. They flap gently, but stay out, revealing how large both are.\n\nSeeing this floods me with humiliation and I cum. It acts like the match that lights the dynamite and my orgasm is unleashed. May the world forgive me...I cum.\n\nMy moans are extremely loud as my body actually moves up and down the pole, fucking myself with the vibrating stick. I do this not by any conscious thought, but because my body takes over and gives into the pleasure. I keep fucking myself like this, feeling wave after wave of humiliating pleasure moving over me.\n\nIt's the vibrations. They are too intense. They make me bounce up and down on this pole to the point that I feel my tits bouncing. And my moans become so loud I know everyone in the nearby houses hear it. Hell, they probably hear the clapping of my tits as they bounce due to me fucking myself.\n\nThis is unlike any orgasm I've had before. It's so intense. It's too intense. It literally takes my breath away to the point I fear I may pass out or my heart will stop. The orgasm is just so deep, like it's inside my emotions and not physical at all.\n\nThen a sharp pain starts on my back. A very sharp pain that comes right after a 'crack' sound. It's so painful that I cry out, nearly ending my orgasm. Right after, I feel a line over my back sting horribly. It's so mean that I arch my back to try and get the pain to stop.\n\n\"Did..\" the bastard growls and swings his belt again. It strikes right across my bare ass, making the same crack sound. Once again, the sharp pain sings, making me scream again as it is so sharp, so real.\n\n\"I...\" he growls and whips my ass again with it. He makes sure to hit both cheeks, leaving a long red welt. Now I feel each hit he's made, all of them stinging that bad sting.\n\n\"Say...\" he keeps on, whipping me again. This time he hits almost on my thighs, making it even more painful than before.\n\n\"You...\" he growls, whipping me again, only this time right across my back. I try to tense up, but I'm still orgasming as the lawnmower keeps vibrating.\n\n\"Could...\" he continues, whipping my ass again, this time much, much harder. Even the crack sound sounds louder as he hits extremely hard.\n\n\"Cum?\" He finishes, hitting me again. At this, I start sobbing. Sobbing from the pain, from the humiliation, from the dildo in my pussy, from the vibrations and from my orgasm. I cry and Sara's moans fill the night air as she to begins to cum. At this, he begins to whip her in the same way he did me, making her shriek as it seems to amplify her orgasm as her moans double in loudness.\n\nI sob and sob, overwhelmed by all that I'm feeling. Never in my life did I think I would be naked outside with a dildo shoved in my cootch. Or that I would cum off a fucking lawnmower. Or that I would let anyone do this to me.\n\n\"Just for that, you get to stay like that till the gas runs out,\" he tells Sara and I, making it seem like this is the punishment for cumming without his say so. My sobbing pauses when I hear this as that could be an hour! I have no clue how much gas is in the damn thing. It could be all night for all I know!\n\n\"P-Please, I'm sorry, I should have asked you first,\" I tell him, degrading myself lower than I thought possible. In my voice I try to show that I fully accept that he is in control, and because of it, in control of if and when I orgasm. I accept that if it means he will remove this from inside me.\n\nHe looks at me at this, as if unsure if I'm being for real. I can only hang here and try not to feel the vibrations that keep going, or feel how raw my pussy is starting to feel. Already I know I'm going to cum again as I can feel it, but I have to fight it this time. Really fight it.\n\n\"Just for that, I think you should really do something about those tits of yours, don't you agree?\" he then asks, and I know this is a test. That if I say the right response, he might let me out of this. But if I say the wrong thing, he'll make it worse. So, closing my eyes for more tears to fall, I nod my head yes.\n\n\"I...I agree. Something should be done,\" I whimper, knowing whatever he has planned for my breasts isn't going to be good. As I say this, I can feel them jiggling comically for him to look at.\n\n\"Should be done to what?\" He is quick to ask, as if making a point to humiliate me as much as he can. That he wants me to say that I want it done to my breasts.\n\nI let out a few more sobs but do get hold of myself. Then I take a deep breath to calm myself the best I can. What makes this worse is that another orgasm is about to hit me. I can feel it growing and growing, and him humiliating me like this only makes it build faster.\n\n\"Should be done to my fat tits,\" I answer with a sniffle. To this, he laughs. Laughs and walks off, enjoying making me say such a horrible thing. Not that Sara heard. She's still crying out and moaning from the whipping and the vibrations to the point I could scream in her ear and she wouldn't hear.\n\nThe bastard walks off and looks about his yard, searching through the trash. I'm left with my pussy on fire, knowing I'm going to cum again any moment, but fighting to keep it down. Even if I ask if I can orgasm, I know he will say no and hurt me when I do anyway as I can't stop it.\n\n\"Found it,\" the man calls out, reappearing like a ghost to my side. I open my eyes as I found I had closed them in an effort to block out the sweet, steady vibrating. Oh how I want to cum.\n\n\"Nooooooo,\" I groan as I see what he's holding. In his hands he has thick, braided coiled up rope. It hangs off his hand, looking 50 years old and dusty. Of course, he laughs at my reaction.\n\n\"Tell your friend what's about to happen. Make sure she hears,\" he then orders. Sara has stopped moaning and now just breathes hard as she hangs on her bounds almost limp. It does start to be a problem for me as she rests on her bounds, it puts more and more weight on me since the ropes tying us together are connected. The more she relaxes, the more stretched out I become.\n\nI hold back tears as I look at Sara. I've actually had my breasts tied up before. A few times actually. Granted the rope used was meant for such things, and it was smoother and nicer. His rope looks painful and hard. And I know he isn't going to be gentle at all. That he's really going to make them squeeze and hurt.\n\n\"Sara,\" I say, my voice surprising me as it's a yell. Instantly she seems to come to as she opens her eyes to look at me. When she does this, I wish she hadn't. I wish she stayed in her own daze so I won't have to have her hear me say such a horrible sentence.\n\n\"He's bout to tie up my fat tits because they are so huge,\" I yell for her and the world to hear. I yell so loud I hear it echo back to me. When I do, I hear him laughing, making it that he's having a great time. As I say this, I feel my pussy tingle, those horrible words making me even more aroused. That debasing myself like this is some secret fantasy of mine.\n\n\"No...please sir. Don't do that to her,\" Sara then begs the man as he moves behind me. Then a strand of rope is put over me, where he positions it under my breasts. Feeling the coarseness of it, I whimper. I whimper and look at Sara, acting like she can do something.\n\nOnly the vibrations keep coming. And I try to hold back my orgasm by breathing like Sara was, but I know it's about to burst. I fight it hard, only I can feel him tightening the rope, lifting my breasts some as he wraps rope around my left boob.\n\nI cum, again. My eyes close and I moan loudly. Waves of pleasure come over me, making me feel like my clit was exploded into nothing but humiliating pleasure. Only this time I don't fuck myself on the dildo. I don't because I can feel him, weaving and moving the rope over my breasts, painfully tightening them, which only makes the orgasm even more intense.\n\nWhen it finally fades, I look down at my breasts. Each one is tied tight with the thick, coarse rope. They are now lifted up some, not to mention turning a darker shade. But he's also tossed the other end of the rope that is tied over the branch. It hangs down between Sara and I, making it look like a pulley system but for my tits.\n\n\"Got something special for you,\" the man tells Sara as he moves behind her. He presses up against her, and then reaches for the rope. He pulls on it, and almost instantly I grunt as the rope has no slack. It makes me try and lift up as he pulls on my breasts.\n\nI try to arch my back to ease the tension, but with the dildo buried in me, I'm stuck. All I can do now is look at him as my head is arched. When I look at him, I see he was waiting for me to look as he holds up a very large metal hook in which the hook part is sanded down so it's not sharp. In fact, it looks like a ball.\n\nSmiling at me, he takes the end of the rope and threads it into the eye of the hook. After it is tied off, he grabs Sara's hair.\n\n\"Bend over baby,\" the man mocks and pushes Sara by the hair. She starts to bend, making her arms stretch as the bounds don't have any give since they are tied to me.\n\n\"No! Don't!\" I beg the man, only the words come out more like moans as the vibrations start to get overwhelming again. Also, begging him in this position, being so helpless only makes me feel more aroused. Like I'm really starting to love this.\n\nSara begs as well, but it's no use. The man carefully and slowly inserts the hook anally. When he does, Sara groans and shudders as the object violates her in such a strange way. I mean...to have a hook in your ass?\n\nThe man backs away once he sets it, to which Sara slowly starts to stand again. Only when she does, the rope tightens as it presses against her back. This makes it get even more taut, to which my tits are pulled upward more.\n\n\"S-Sara! Please!\" I beg, trying to remind her that we are connected. Only Sara doesn't listen and stands up straight, making me arch even more to point my tits upward.\n\n\"No....not again!\" I yell out as another orgasm is about to hit. This time it's not just the vibrations doing it. It's everything. From being naked and put on display, to having my tits tied like this and lifted. That it's happening to Sara as well, as if we are sex slaves.\n\n\"I have something much better for you,\" I hear the man say behind me. I'm so focus on trying to block the orgasm that I didn't notice him move. Not that I could anyway as the sound of the lawnmower combined with the fact I'm looking upward makes it impossible to see him.\n\nMy ass cheeks are now spread, making me gasp. Then I feel something hard press against that private, private hole. My body becomes tense to this, but it doesn't matter as he's already starting to press it against me, forcing it inside.\n\n\"Go ahead and tell her what I'm about to do,\" the man says as he forces his cock deeper into my ass. Granted, I've had anal sex before, but not like this. This is primal. This is mean. This is hotter than I think I can take.\n\n\"S-S-Sara,\" I stammer out, knowing the orgasm is going to burst forth at any moment. To this she tries to look at me, bent over slightly as the anal hook is buried in her. Her eyes are unfocused and I'm pretty sure she's fighting to block her orgasm too for fear of being whipped.\n\n\"He's....he's going to....fuck my ass,\" I inform her right as he presses against me, his cock going very deep inside me. The feeling of it, combined with the dildo vibrating is overwhelming and for a moment I forget everything. I forget my name, where I am, or why this is even happening.\n\nHe's fucking my ass now. I feel him moving his cock back and forth, going up my ass and back. His cock is rock hard and he's furiously fucking me. This isn't sex. It's not even fucking. It's hate-fucking. Like he's doing this for his pleasure, but to teach me a lesson. That it is punishment.\n\n\"The two of you have 30 seconds to cum,\" he says as he rams his cock up my ass, slamming against my body as he does. The moment he says this, I let go. I stop trying to hold back and let my orgasm take over.\n\nSara and I scream in pleasure as we cum together. Only since we are so close, when she bends over more as she cums, she puts her face into my tits, making it even more intense. My body shudders and squirms as I cum, starting to buck violently. And as I cum, I feel him still fucking my ass, hard. That his cock is going to make it impossible to sit for a month.\n\nIt is the best orgasm I've ever had. It's dark and humiliating, but intense and beautiful. I never knew I could feel something like it, ever. It's better than any drug or drink I've never had. It's so intense that I want to feel it forever. To bathe in the waves of dark pleasure, uncaring of who sees me like this or what they may think.\n\nLike a whore, I moan and moan as he fucks my ass while I cum. I moan feeling how tight my breasts are or how this position makes the dildo press forward, making the vibrations press on my clit. Oh gosh, I never want this to end. Never.",
        "When I come out of it, I find that I am extremely tired. I'm not sure but I think I might have blacked out. I say this because I'm no longer tied up. I mean my hands are no longer tied about me and I'm on the ground. I'm still naked, and the rope is still around my tits.\n\nI winch as I feel how my ass feels ripped apart. It throbs as if his cock is still inside of me. To add to it, my pussy feels almost the same as I swear I still feel the vibrations even if the dildo is no longer in me. My entire downstairs feels so roughly used and abused.\n\nTrying to figure what happened, I look around. The lawnmower is gone, and the fire is out, but I'm still in the yard of the guy. And then I spot him and Sara. She's on her knees, the hook still in her ass in front of him. He has her hair in his hands and is face fucking her roughly.\n\nI lay there, hurting, tired and feeling very content, as horrible as that sounds. I've never felt more relaxed in my life. So relaxed that I don't really care about anything.\n\n\"There you go, there you go,\" the man croons. I turn to look and see him cum on Sara's face. Streams of cum shoot out, hitting her directly across the face. To her credit, she doesn't really react. She just takes it without saying anything. Not even when he wipes his cock over her cheek.\n\nThe man then backs up and pulls his pants up. He walks back to his seat where he gets another beer. Acting as if nothing bad happened at all, he sits back in his chair and drinks his beer, leaving Sara and I as we are.\n\n\"Alright bitches, stand up,\" he says after a good couple of minutes. Neither Sara nor I say anything to this, but we do stand up. It takes me a while to stand as my legs feel like jelly. Even now I feel phantom waves of pleasure move over me, haunting me. I can see this is true for Sara as well. After several moments, the two of us are standing.\n\n\"Hands up,\" he says and he's not even looking at us now. Instead he's looking down the road to see who is still out. From the looks of it, it's mostly adults as the time for trick or treating is over.\n\nSara and I lift our tired hands again. I don't know about her, but mine feel like they weigh 500 pounds. With my hands in the air, I take the few steps to be standing next to Sara again.\n\n\"Fat Tits, start walking,\" he orders, to which I'm confused. Walk where? To him? He's like 5 feet away. Wouldn't he say 'get over here' instead if that's the case? Because of this, I just look at him confused.\n\n\"Stupid bitch, get the fuck off my property,\" he growls. And so, in disbelief I turn and start to walk. My bare feet are on his grass, but then I step onto the sidewalk. The thing is, I'm still naked. Not to mention the rope is still around my tits...and connected to Sara. I'm about to walk away like this.\n\nI step into the street and when I do I feel the rope tighten and Sara cry out. I stop walking at this, knowing what it is doing to Sara as it is still most likely going over her shoulder and down her back. But the man yells at me to walk again, so I do. When I do, I feel the rope stay taut and with a lot of tension, but Sara's walking now too. That he basically wants either her to feel the hook deeper in her ass, or wants me to feel my tied tits lifted.\n\nWe walk like this to the other side of the street. I want to tell Sara to walk a bit faster so the rope won't be tight, but I know she won't. Already she is matching my speed, which means she is doing what she thinks the guy wants, which is to keep our distance so we both will be in pain.\n\nOnce on the sidewalk, we keep walking. Neither of us says anything and both of us keep our hands up. Our naked bodies are on full display, showing how we were fucked, whipped and anally used.\n\nAs we walk, I see Rebecca up ahead on the sidewalk. She's in her safety zone of the streetlamp, far from the grasp of that man. Seeing her, I keep walking, knowing she knew what would happen.\n\nWhen we approach, I can see the evil smile on her face. The smile that says that she hoped we would return like this. That this is exactly what she wanted.\n\n\"You have to be naked and keep your hands up until you are all the way home. Otherwise he'll come after you,\" she says and starts to lead the way. She cheerfully walks, leading us through crowds of adults hanging out and partying for Halloween. Crowds in which half stare at us like this, while the other half look away.\n\nAs we walk, I try not to get aroused again as I feel like I want to cum again just from being looked at like this. It'll be so easy to touch myself as I'm not tied any longer, but I force myself not to so I don't fall any further into the blackhole of being pathetic.\n\nIt's only now as I look at Rebecca that I begin to wonder how she knew of that guy. I mean, the way she just talked about him, about keeping our hands up is as if she's been in this same position. Oh dear...if that's true...then next Halloween I know a few people to take to him."
    ],
    "authorname": "creativeboyinspring",
    "tags": [
        "noncon",
        "public",
        "anal",
        "punishment",
        "bondage",
        "bdsm",
        "mean",
        "toys"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/halloween-hell-pt-03"
}