{
    "title": "I'll Need to Change the Sheets",
    "pages": [
        "\"Excuse me, can I get past?\"\n\nI looked up to see a woman trying to manoeuvre a baby's push-chair between tables and chairs that were too close together. My legs were stretched out, adding to the inconvenience. I stood up and moved one of the chairs closer to my table.\n\n\"I'm sorry. I'm in the way, that's not very helpful. Can you get through?\"\n\n\"I can now, thanks.\"\n\nHer voice sounded vaguely familiar, and I rabbited through my head, trying to place her. She turned and looked at me, and broke into a sun embracing smile.\n\n\"David, is that you?\"\n\nWith a sudden rush, who she was came hurtling back to me.\n\n\"Bec?\"\n\nShe grinned, just as vibrant and alive as she'd been back then, when I knew her, watched her blossom. She was a woman now, older, but the girl she once was, still there. Bec. Rebecca.\n\n\"It is you. God, how long's it been? Must be ten years, surely?\" She stepped towards me and hugged her body close to mine, pressing herself against me, just as she had every week of the year I knew her. I held her in a tight embrace, her pressing curves immediately familiar, the force of her, undiminished. She was softer, a little heavier, but the same Bec, pressing herself against me. Her hair tickled my cheek, just like it always did.\n\n\"It's so good to see you.\" She let me go, with a squeeze of my arm.\n\n\"Yes, it's me. And to see you.\" I pulled out the impeding chair for her. \"Please, join me, have a seat. Are you here for coffee? I'll get it. You should look after your little one.\"\n\nHer child, wrapped up tightly in a little coat and a woollen beanie, looked up at me with that serious, studying gaze that babies have. I was observed, and this little thing, maybe six, seven months old, seemed very certain who he saw. \"Who's this?\" I asked.\n\n\"He's my best little man. Daniel. Dan. Danny. Depends on my mood, who he is.\" She laughed, a mother's love for her son, so obvious.\n\n\"Hey, Dan. Good to meet cha.\" I chose the middle ground between formality and affection. After all, we'd only just met. He stared at me, unblinking. I'd forgotten how small they were, little babies; my own son grown and a man, a few years younger than Bec.\n\nThat's how I knew her. Sons and daughters, families and schools. Bec was the daughter of my daughter's netball coach when my girl was in junior high school, and every Friday night for a year, I got to know her, sitting together while the younger girls played. She was a lovely promise of a young woman then, and here she was, that promise fulfilled, and with a baby.\n\nI was getting too old, time passing too quickly. It was more than ten years ago, more like twelve or thirteen. But age dropped away like a cascade, and her body hugging mine felt like yesterday. Her smile had always been for today, never tomorrow. Bec, being younger then, had no sense of time streaming in any direction, whereas I always did, growing older, being responsible, being married, having children, being fettered.\n\n\"A hot choc would be lovely, thanks.\" Bec reminded me where we were.\n\nI went into the caf\u00e9 and ordered another latte for me and a hot chocolate for Bec. When I came out, she'd parked the pusher in between two tables, up against the wall out of the way, and had Danny on her hip the way confident mothers do, bouncing him on one arm while she tucked a blanket around him. She smiled up at me as I returned to the table, and again I saw the younger woman in her face, the girl who'd captivated me.\n\n\"Being a mum suits you,\" I said. \"You don't seem to be frazzled by it all.\"\n\nShe laughed. \"Thanks. I seem to get most things right.\"\n\nI remembered my own little children; how Maureen took to motherhood easily, the shared joy of Paul our first, but also the subtle push away from me with Felicity, our second. I wasn't needed as much with her, the daughter for her mother; but I never said anything then, and say nothing now.\n\nBec stroked her boy's hair, and I remembered the softness of a baby's skin. \"May I?\" I asked, wanting permission before taking what wasn't mine to take.\n\nShe nodded, and with the back of my fingers I touched the child's cheek, to feel such softness again. I gave Danny my little finger and he gripped it, looking at me intently with his serious gaze. I widened my eyes, oh in surprise, and Danny looked from me to his mother, then laughed in the way only a delighted child laughs, full of joy, that continuous chuckle, that catching of breath to keep up. I opened my eyes wide again and Danny repeated his gurgle. This time Bec laughed too, in a sharing of joy with her child.\n\n\"He likes you,\" she said.\n\n\"You always were a good dad.\" She placed her hand on mine.\n\n\"You knew with me, that was part of it? My dad not there, and all that.\" Her comment came out of the blue. It was half a question, half a statement, confirming what I'd often felt about Bec, that she'd wanted a father figure, but at the same time testing and trusting at a special time in her life.\n\n\"I reckon I did, yes.\" How could I not?\n\nBec smiled again, her eyes softening with her own memories. \"I was pretty naughty, wasn't I? Sitting on your lap all those times. Just as well we didn't do anything, eh!\" She grinned. \"I bet you wanted to.\"\n\nI was taken aback by her confidence then, and her straightforward confidence now.\n\n\"I did, yes,\" honesty being my only answer, my only defence. She'd been far too knowing as a teenager.\n\n\"I knew it,\" she said. \"I always knew it.\"\n\nAnd as quickly as she'd said it, Bec turned to her child and fussed with him. I felt that something had been placed on the table for both of us to take away, best left unspoken. Back then, neither of us had said a word. But she looked at me now, and her gaze was as intense as her son's.\n\nThe refreshments arrived, and the moment, for that's surely what it was, passed. Rebecca gave me the five minute potted summary of her life since school, which included the fact that she was repeating her mother's experience, bringing up a fatherless child.\n\n\"He tried, I suppose, the hopeless bugger, but he couldn't look after himself, let alone me and a baby.\" Bec didn't seem angry or resentful. She'd always been practical. \"I just got on and did what was needed. Mum's been great, really helpful, so I manage.\"\n\n\"You seem to be doing okay.\"\n\n\"Yeah, I am. I always knew I could do it. Be a good mum.\" She didn't doubt herself.\n\nDanny became fractious. \"Hold on, honey,\" she said. \"Wait for Mummy to look after herself.\"\n\nShe had a last drink from her mug and placed it on the table, pushing it towards the centre so it wouldn't accidentally get bumped and drop.\n\nBec looked across at me, followed by a quick look around the caf\u00e9. \"They're good here. Nobody minds a baby on the tit.\"\n\nAnd with practised efficiency, and I could never work out how women did it, Bec lifted her jumper, shifted Danny closer in her arms, and placed him on her nipple. She looked down at her son, in that moment the most important bond in the world, then looked across at me. The pure bliss of the milk letting down showed on her face.\n\nSuddenly, I felt even closer to Bec, but the moment was too intimate, and I looked away.\n\n\"Don't,\" she said softly. \"I always liked the way you looked at me. It's nice, you with me now.\"\n\nSo I watched Bec as she suckled her baby, and thought she was very beautiful. Which she wasn't, not really. There was nothing astonishingly special about Bec. She was a girl from the suburbs, down to earth, destined to make of life what she could. She'd never been born with a silver spoon in her mouth, and was probably a much better person for it.\n\nShe shifted Danny to her other breast, but he wasn't there for long. She looked at me and smiled. \"He's a bugger. He used to take off both breasts, but now he barely touches the second. He always leaves me with a boob full of milk.\"\n\n\"That's exactly what Paul used to do.\"\n\n\"Oh really? What did Maureen do?\"\n\n* * * *\n\n\"Love, can you burp him? He's left me a full tit again.\"\n\nMaureen nudged me to sit up and take Paul. He was warm and content, nearly asleep already with the last night-time feed full in his belly. I placed a bib on my shoulder and his warm little body against my chest, and began to pat his back.\n\n\"Harder,\" said Maureen. \"He's swaddled so he doesn't scratch. You need to get through the layers.\"\n\nI applied more pressure, and sure enough, after a moment there was a burp and the sweet smell of a little sick on the bib.\n\n\"Can you take him through?\" Maureen asked. \"This bloody pump is hopeless.\"\n\nShe was trying to express the surplus milk, and for several nights had struggled. Paul always took both breasts during the day, but at night when he woke for his last feed, he'd decided he was full on one tit, and left Maureen to deal with the other. She'd said she wanted to breast feed him until he was at least one, so this night time change in behaviour was a hassle she wanted to get on top of. Or wean him six months earlier, which she didn't want to do.\n\nI slid out of bed with our baby on my shoulder, floppy and asleep already. I took him through to the other bedroom where the cot and change table were set up. Maureen had a day bed made up in the room too, and many times I'd get home from work and find them both together, fast asleep with the light of the dropping sun streaming through the window. I envied them that bond, that closeness. So I didn't mind at all the pad through to the next room to put my boy down in his cradle.\n\nI settled Paul down in the cot and gazed in wonder at his little face. I gently touched his cheek with my lips, constantly amazed at the softness of his skin. My tiny boy. I couldn't imagine him growing bigger. He wiffled and sighed like a gust of wind at the window. Good. I knew he'd sleep now, till morning. I pulled the door to, leaving the glow of the night light casting a small dim triangle on the floor. \"Night night, little fella,\" I whispered, blowing him a last kiss.\n\nI went through to the loo and had a last pee. I didn't flush, because Maureen would have her last pee too, and flush then. It was our small contribution to drought relief, to save water.\n\nReturning to the bedroom, I found Maureen still struggling with the attachment for the expressing device, and getting cross and tired with it. \"Bloody silly thing. Probably invented by a man.\" She dropped it to the floor. \"Get me a towel, would you, love? I'll just leak all night and be sodden in the morning.\"\n\n\"Why don't I take it off?\" I asked, the thought arriving from nowhere.\n\n\"What?\" Maureen asked. \"You mean suck on my boob, take off the milk?\"\n\n\"Yes. I've got a mouth, a tongue. Has to be better than that thing,\" I said, waving vaguely at the floor where she'd dropped the cold rubber cup. It was dark, so I couldn't see her reaction. There was silence between us for a few seconds, then she spoke.\n\n\"I guess it's worth a try. But wouldn't it be a bit weird, you having his milk?\"\n\n\"It can't be any worse than all these other body fluids we're seeing, that come with a baby. It has to be better than your gadget. I promise I won't bite.\"\n\nThere was another long moment of silence. I don't suppose the idea had ever entered Maureen's head before. She put her fingers to her nipple, where milk was still beading. \"You won't mind the taste?\"\n\n\"I don't know the taste. Sweet, I guess, judging by his sicks.\"\n\nIt was sweet. And warm. And I didn't know what letting down was like, but when Maureen's milk let down and started to flow, I knew what contentment felt like.\n\nSo did Maureen. \"Oh my god, that's so... sensual.\"\n\nI shifted my body to get more comfortable, to find an angle that didn't drag on her breast.\n\nOn the second night we arranged pillows differently, and my cock was hard against her leg. After I'd finished the milk from her breast, Maureen stroked come from my cock without saying a word.\n\n* * * *\n\n\"Let me process that,\" said Rebecca. \"I'd never have imagined Maureen doing that, not in a million years.\"\n\nShe looked down at her breasts, where her own milk was spreading in two wide patches on her blouse. \"My god, look at me. That's from you telling me that.\"\n\nI'd not mentioned the stroking.\n\nBec tugged her coat around to cover herself. \"It's not often that happens. Sometimes I don't even notice, until another woman, usually much older, gives me a nod to my chest.\"\n\nShe looked at me. \"That was sweet.\" She touched my hand again. \"It must have been special, sharing milk with your son. How long did you say?\"\n\n\"Six months,\" I replied. \"Until she weaned Paul. And me, I guess.\"\n\nThere must have been a look on my face, for Bec asked, \"Did you do it again, with Felicity?\"\n\n\"I wanted to, but it didn't happen. Flick always took both breasts, then one day bit Maureen on the nipple and that was it. Instant weaning. It took a month for the milk to stop, and there was no way Maureen was letting me near her breasts.\"\n\nBec looked at me for a very long time. \"It wasn't just practical, was it? It was sexual. Intensely private. But sexual, with Maureen. And then it wasn't.\"\n\nI nodded, and swallowed.\n\n\"You'd do it again, wouldn't you? If you could.\"\n\nI nodded again, expecting nothing.\n\nBec pursed her lips, thoughtful.\n\nThe moment passed, and we chatted for a while longer, before Bec said, \"I have to go. What's your number?\"\n\n* * * *\n\nA week later Bec rang me. \"David, about that arrangement we made...\"\n\n\"What arrangement?\"\n\nThere was a pause, and the line crackled. \"Oh. That must have been me, thought it. We talked about it.\"\n\n\"Bec, what are you on about?\"\n\n\"Breast milk. Your craving for it. If you wanted to do it. With me. My milk, I mean...\"\n\nThis time I was silent. This time I was processing what Bec was saying.\n\n\"David, are you there? God, it's a stupid idea. I thought...\"\n\n\"Bec. I don't know what to say. I mean...\" I was at a loss for words. \"You??\"\n\nThere was a much longer silence, then I heard Bec draw a deep breath. \"I'm going to start again, just say it the once. And to confess, I don't know what I'm doing, but I -\"\n\n\"Bec?\"\n\n\"Yes?\"\n\n\"Yes,\" I said. \"I'm saying yes.\"\n\nI think we were both waiting for common sense to walk back in the door. But it didn't. Bec finally spoke.\n\n\"I wanted stuff to happen when I was seventeen, but you were too sensible, an adult, so it didn't. But I'm thirty now, and... now I'm an adult too, a mature woman. And you're a man who...\"\n\n\"Wanted you, Bec.\"\n\nI interrupted her flow of justification, to make myself responsible. But I didn't know what I was doing either. This was intense sex we were contemplating, intimacy beyond any usual measure of the word, combined with memories of illicit feelings we'd obviously kept locked away, not from each other but from the world. This was a powder keg for both of us.\n\n\"I planned on you saying yes,\" she said, \"because Danny is with his Gran for the afternoon. And I'm out with Grace.\"\n\n\"Does Grace know?\" I asked.\n\n\"If you come over, she will. I'll tell her something, if I have to. I'm going to text you my address. One o'clock. If you can make it.\"\n\n\"Bec.\"\n\n\"Yes?\"\n\n\"I'll be there.\"\n\n\"Thank god for that.\" And she ended the call.\n\nAt one o'clock I parked in the street a few houses up from the apartment block Bec lived in.\n\n- Down the drive to the back of the block, on the ground floor to the left. Apartment 9 -\n\nI followed the instructions in the text Bec sent me, and found myself facing a fly-screen and a front door, under a little porch. Across the drive from the building there was a high Stratco fence, and three coloured wheelie bins lined up in a row. I hoped for Bec's sake there was a little garden out the other side, with some grass and a few plants at least.\n\nI pressed the door bell and waited.\n\n\"Just a sec.\" I heard Bec's voice call out, then some footsteps. A turn of the lock, and the door opened inwards. \"David. You came. I wasn't sure if you would.\"\n\n\"I'm here, Bec. Of course I came.\" I should have come sooner. But we'd enrolled the kids into another school and moved away, and Bec, I thought, became a fond memory of a girl on Friday nights at the Rec Centre.\n\nBut this was a new Bec, Rebecca all grown up.\n\nShe stood before me wearing a comfortable pair of track pants and a fleecy top. I'd come to her, after all, and there was no wooing here, no seduction. Well, none of the usual kind, with high heels and lipstick and candle lit dinners. Both of us knew this was a foregone conclusion, our time limited, dictated by a distant child.\n\nThere was a more practical reason for Bec's clothing, her top at least. There were two spreading patches at her breasts, dark against the grey cloth. \"It's ridiculous,\" she said. \"This is the second top I've soaked since this morning. As soon as I started thinking what I'm going to do to you, what you're going to do to me, both tits started leaking.\"\n\nShe looked up at me with a cheerful grin. \"No secrets, no... what's that word? Dec something.\"\n\n\"Decorum?\"\n\n\"That's the one. I never did know how to be polite. I always...\"\n\n... stepped forward into my arms, throwing her arms around me in a tight hug. She was fleshier now than back then, her breasts softer and bigger with their milk, but her body just as forceful, pressing against mine, hungry for affection.\n\nOn the first Friday night we'd been introduced we all said, \"Hi,\" and learned each other's names. The next Friday, Bec had a hug for Maureen and Felicity - the older netball girl greeting the little rookie and the mum. The Friday after that, I was hugged too, the solitary dad welcomed into this world of women. And when the younger team were getting their pre-game briefing, Bec and I would sit out of the way, by a window overlooking the courts.\n\n\"You can grab my bum now,\" she said with a giggle. \"I always wanted you to do that.\"\n\nHer mouth came up to mine in a wet lipped kiss, hungry for me.\n\nHungry for her, I tilted Bec's head up, pulling her mouth onto mine. We pushed back against the door frame, and I spread my legs for balance.\n\n\"And that,\" she whispered, before kissing me harder, her tongue probing.\n\n\"Fuck, seriously?\" She pulled away and looked down at her chest. Big dark nipples showed through the wet clinging cloth. \"I'm wetting myself here. You'd better get this off,\" she said, and started to undo the buttons of my shirt. \"Or you'll get soaked too.\"\n\nI'd not particularly thought through what might happen, but Bec's body was taking over, mine responding. As she pulled the shirt up out of my pants and off my shoulders, she brushed the bulge of my hardening cock. She looked at me, broke into a huge smile, and said, \"Come with me.\"\n\nShe took me by the hand and led me through to the kitchen. \"Sit here,\" she said. \"Back in a mo.\"\n\nI sat at the kitchen table, wondering what she was up to. I heard the bang of a wardrobe door and the slide of a drawer, then a short silence.\n\n\"Ta da!\"\n\nI stared at Bec with what must have been a stunned look on my face. She turned around quickly, and the swirl of a dark green, pleated netball skirt lifted up to show sports shorts underneath. She slunk towards me in a pastiche of the Dance of the Seven Veils, her big breasts swinging, braless under the wet soaking top. She placed her hand on my shoulder, pushed me back onto the chair, then turned towards the table. She leaned forward, placed both hands on it, and her big breasts swayed. The gorgeous fullness of her ass was right in front of me, clad in the short tight skirt.\n\n\"They still fit,\" she said proudly. \"After all these years. Just!\" She slapped her ass. Her legs were bare, her thighs a little dimpled with cellulite, her muscles still tight. She'd always been a fit, healthy girl; not fat, but not skinny either.\n\nAnd with no subtlety, no declaration, Bec sat on my lap and ground herself back onto my crotch. She flicked the hem of the skirt up as she sat, so it circled around her thighs and hid everything from prying eyes.",
        "\"My God, I was wicked. So simple, that's all I had to do!\"\n\n\"And wriggle,\" I said. \"You'd push back against my cock. I'd get half hard and you'd clench the cheeks of your ass, and no-one knew.\"\n\n\"I knew,\" she remembered. \"And if we won, I'd get home and my pussy would be so wet. I don't know how many times I jilled, thinking what your cock would be like. In me.\" She looked back at me with her toothy smile. \"But only when we won. I always was a sporty girl, playing for a reward.\"\n\n\"How often did you win?\" I wondered how lucky I was, like a four leaf clover or a lucky rabbit.\n\n\"Quite often, actually. We were a good team.\" She kissed me. \"But I was the only girl with my own special coach.\"\n\nBec placed my hand up under her top, where I found a full, hot breast, sticky with milk. She leaned back against me, and sighed. \"You were the right man for me then. Safe. You let me explore.\"\n\nShe was comfortable against me, her lush body moulding itself around mine. \"I discovered then, how horny I got with my periods. My boobs would get bigger and tighter, really ache. My fingers were ever so busy.\"\n\nI held her breasts, gently playing with a nipple, squeezing the other one, feeling its weight. I could feel the stickiness, and smell it, that sweet honey, sweet milky smell. My cock throbbed, and she squeezed against it.\n\n\"You probably knew, subconsciously. How couldn't you, a ripe young body on your lap?\"\n\n\"Riper now,\" I said, lifting the bottom edge of Bec's top, to pull it up over her head.\n\n\"No periods for a while. Bigger boobs.\" Her voice softened and her eyes became drowsy and heavy as I began to explore her glorious, full breasted body. \"I enjoyed being pregnant, feeling my body change.\"\n\n\"Let's go to bed,\" I proposed. I wanted her body next to mine. \"Get comfortable, really get to know each other after all this dreaming. I think we've some catching up to do.\"\n\n\"That would be lovely, yes. Can we be really slow, though? I mean, we raced our tops of because of my milk, but the rest of it... we should have some mystery.\"\n\nI nodded. \"That suits me.\" I wanted the slow revelation of this gorgeous woman, as much as she wanted me.\n\nBec took my hand and led me into her bedroom. She looked a bit incongruous, her bare torso with full proud breasts bare naked for my eyes, and the short netball skirt tight on her backside and her gorgeous round belly. I've always been partial to the curve of a woman's belly in a tight skirt, the way tops of thighs might be ever so slightly wider than hips. I liked that sturdy musculature, and Bec had it.\n\nMy cock was thick and full, swelling tight against my jeans, restrained but aching to be free.\n\n\"Who's to be naked first?\" I asked.\n\n\"Well, I've seen myself with no gear on, and when it's warm I often prance around nude, or just in panties... so I guess it must be you. Since I've not seen you naked.\" She touched my chest. \"Mind you, you've...\" Bec laughed. \"What am I saying? You've not seen me naked, either. Imagined me, I bet. But that's not the same, is it?\n\n\"I chatter when I'm a bit nervous, in case you hadn't noticed.\"\n\n\"Sssh then,\" I whispered, embracing her body again, her hot breasts against me, her tongue and mine probing with little slow fucks into our mouths. As we kissed, she put both hands up to her ponytail and pulled the band tighter, pulling her hair back from her face.\n\n\"Gets it up out of the way, before I get down to business.\"\n\nI expect she always did it before doing something important. I could loosen it later, to let her hair fall on a pillow, or over my gut when she took me in her mouth. I wanted to be taken by this woman so much.\n\n\"Take me however you want, David.\" Bec looked up at me with longing in her eyes. \"Love me a little, when you do.\"\n\nWith those words, our mood changed, and I knew I was being given something precious. I suppose we both might have been lonely, with our defences down; but now that we were together, we were no longer alone.\n\nI dropped to my knees before her, kissing her dimpled belly with its silvery slides of stretched skin from her pregnancy, kissing the little trail of hair from her navel down into the waist band of the sports shorts she wore. I found the button and zip of the skirt, and slid it down her legs. I could smell her arousal already. I yearned to cup my mouth over her sex, to inhale her like a dark red wine on my tongue. I breathed her in.\n\nBec sighed, and placed her hands in my hair.\n\n\"I don't shave. You won't mind?\"\n\nEven though we'd said, no rush, those words sent a surge of pleasure through me. I loved women who kept their hair au naturel. Bec had thick dark hair, so I was in for a delight. \n\nShe smiled down at me. \"You don't mind at all, do you?\"\n\nI looked up at her, and with two fingers on each side of the waist band pulled the waist band down. \"Not at all.\n\n\"You tease.\" I laughed. \"These won't last long.\" I pulled a pair of little skimpy panties down too, and tossed both garments aside. The crotch of the panties was dark with her wetness. I grabbed them back and inhaled her scent.\n\n\"I'm wet everywhere, already? My god, I'm dirty horny!\"\n\nIn front of me was a dark triangle of hair pointing down to her clitoris, already peaking out from its hood, with plump labia below. Sure enough, Bec had little curls of hair right at the tops of her thighs. I leaned in close to her body and took another deep breath, breathing her in.\n\nI stood up, cupping Bec's pussy in my palm to feel her heat, then guided her to the bed, where she lay back against stacked pillows. The afternoon sun was warm through the window, and outside there were some shrubs with tiny flowers. It was quiet, just the faint hum of traffic a long way away. We were in a world of our own.\n\nI knelt above her so she could see the thick bulge in my jeans, and so I could see her body, the lush swell of her breasts and hips. Bec was a glorious sight, all curves and flesh with a blaze of freckles between her breasts and dark brown areolae already beading with milk.\n\n\"You've got pearls on your breasts,\" I said, gently rubbing several of the milky drops into her skin.\n\n\"I've got whole bottles,\" she replied, squeezing a nipple between two fingers to urge up more milk.\n\n\"You're such a class act.\" I chuckled, but didn't get distracted. I leaned down to a breast for a taste. Then to her other breast for another taste. Back to the first source of pleasure, and this time I took a whole mouthful of breast to completely surround the nipple, and sucked. I lay beside her, to better take the big nipple into my mouth.\n\nBec held my head to her breast, and I suckled, and was soon rewarded when her milk began to flow. I drank it down, the milk sweet and warm. She sighed with her own pleasure, and I suckled some more, to the point where I didn't need to suck, just swallow.\n\nMy cock strained against my jeans, in a thick, sideways ridge. I was in heaven, with Bec's hot nurturing warmth in my mouth, her beautiful body close to mine. It felt like coming home after a long time away.\n\n\"Not all at once, baby,\" she whispered. \"Don't be a greedy boy.\"\n\nThe endearment thrilled through me, and the softness in her voice got to me. I moved up the bed to kiss her, and Bec took the taste of herself, her life giving milk, from my lips. \"I can see why you like it,\" she murmured. \"It tastes like honey sweet milk at night-time.\"\n\nShe ran her fingers down my chest to the waistband of my jeans, then rubbed over the thick ridge of my cock. \"What have we got here, babe?\" She trailed her fingers along it. \"Something for a greedy girl?\"\n\nShe pushed me onto my back, and with her heavy breasts drooping she knelt over me, her ass and wet pussy within reach of my fingers. I touched her slowly, running my fingers along the glide of her lips, slowly pushing inside. Bec pushed back onto my fingers, clenching on them with a strong grip of her cunt. \"Nnhh... ooh, that's good.\"\n\nShe undid the button of my jeans, undid the buckle of the belt, and slowly unzipped the zip. A bead of milk dropped from a nipple as her breasts swung over my belly.\n\n\"Let's see,\" she said softly to herself, and peeled the sides of the jeans apart. \"Help me get these off, baby, they're tight.\"\n\nI lifted my backside and tugged the waist of the jeans down. Bec pulled them down my legs and shoved them to the floor. She came slowly back up the bed and lay her head on my belly, her eyes only inches away from the ridge of my cock, straining against the cloth of the black briefs I wore.\n\n\"These won't last long.\" She repeated my earlier words, and tugged the waist band up to reveal the head of my cock. She peaked inside, as if to find treasures, then pulled the briefs down my thighs. My shaft immediately became rigid, hard with its full length.\n\n\"Ooo, that's very nice. Bigger than I imagined.\" Bec measured me with two hands around the shaft, to know the length and thickness. She looked back at me, with a glint in her eyes and a smile on her lips, then took my cock head into her mouth. She sucked me slowly, her fingers lightly gliding up and down the shaft.\n\nI lay back with my eyes closed, slowly easing my fingers in and out of her pussy, matching her slow suck with my slow finger fuck. We did this for some minutes, our slow movements almost hypnotic. I became aware of a hot stickiness between us, where Bec's breasts were pressing against my chest.\n\n\"I'm all sticky messy,\" she said, sleepily, \"but I could do this forever, just suck you.\"\n\n\"Me too, but I also want to suckle while I fuck you. If we get it right, we can come together as the milk begins to flow. I shouldn't bring her into this, but Maureen and I...\"\n\n\"David, it's okay. If you hadn't done it with Maureen, we wouldn't be doing this now. She's not in the room, but we are.\"\n\nBec lay on her side and held her arms out to me. \"It's okay, baby, I'll look after you.\"\n\nMy eyes prickled with the edge of tears, and Bec must have seen them bright. \"Sssh, baby, sssh. Here's my hot dripping milk, drink to your heart's content. I've got you.\"\n\nSafe in Bec's embrace, I took her breast in my mouth, and she took the head of my cock and lined it up to her sex. \"Hush now, just fuck me, baby.\" Her voice was soft, almost a croon, a sing-song lullaby. She was so wet I slid easily into her. Bec spread her legs a little wider, and I found an angle where I could suck on her thick nipple as I fucked her slowly.\n\n\"Ohhh, fuck yes, that's wonderful, wonderful. Keep doing... that.\" I sucked harder, and swallowed some milk; and fucked her a little faster. \"Oh my fucking goodness... keep... doing... that...\"\n\nI fucked Bec faster, the slap of my cock hammering into her pussy. She took her free breast in her hand, squeezing the nipple between her fingers until milk spurted from it.\n\n\"Fuck me harder, baby, I'm gonna come on your cock.\"\n\nBec was grabbing me into her, her hands gripping my ass. She pulled my head up from her breast, slamming her mouth against mine in a hungry, deep tongued kiss. I felt the intensity, the strength of her passion rise, her body writhing beneath mine in her pleasure.\n\n\"Harder, baby, harder... ohh fuck. This is so... fucking good. Keep... doing... that.\"\n\nShe repeated her mantra, her plea, her moans of desire, and I quickened my thrusts into her. I grabbed Bec's hands and stretched her arms high above her head, holding her there as I arched my back, plunging my length deep into her cunt, her tight gripping cunt. Oh fuck, my orgasm was coming, rising, building like hot lava in the base of my spine. All I was was a long hard cock, my years of lust for this girl grabbing me, gripping me, hammering me into her cunt, Bec's deep magnificent cunt.\n\nI somehow managed to grab a weeping milk seeping breast, squeezing it hard, seeing the milk pulse and shoot. I mashed my lips onto her mouth again, fucking her harder, delirious in my frantic fuck. I grabbed her wrists again and saw how her breasts bounced and shook, moving on her chest as I fucked her. Bec's eyes opened wider, surprised at my ardour, my passion, my hard pounding fuck.\n\n\"Take me, Bec, take me, ohhhh, fuu...uck. I'm going to come.\"\n\nI managed my final statement as I reached that inevitable place, that point of no stopping, that place where...\n\n\"Keep doing that, baby, I'm coming too.\" Bec's eyes opened even wider in surprise as her orgasm thundered over her, and the gripping squeeze of her body triggered my final explosion, and with a loud moan I shot my seed into Bec's sweet open body in long repeated pulses, thrusting into her hot willing pussy, my cock deep inside her. Another spasm shook me, and I collapsed onto Bec, her hot sticky body, breasts wet with her milk, under mine.\n\nAfter a very long moment, during which we both shuddered with mini orgasm after-shocks, Bec nudged me off her, onto my side.\n\n\"Here you are babe, come take my milk, come for your feed.\"\n\nShe offered her nipple to me, and I suckled on Bec's loving breast. She held my head against her body, and sighed as the milk let down. \"Take the whole breast, darling, take it all.\"\n\nI did. I took the whole loving cup, the whole offering, and drank it down, pouring her into my soul. Bec was already in my heart, but this was a new place, a loving intimate place, seldom known.\n\nShe gently stroked my hair as I suckled from her, my belly filling warm. I sighed with contentment. Every now and then I'd look up to her face, to be greeted by soft eyes, Bec's gentle smile. \"Sssh, baby, I've got you. Keep going.\"\n\nI'd never been so grateful for a mother's love, not since my own mother died.\n\nWhen I was done, when the breast was soft and empty, Bec placed two fingers on my lips in a kiss. \"Sleepy time now, darling, nap time for me. You can have the other one later.\"\n\nWith that promise I realised how clever Bec was, an instinctive ability to combine future promises with immediate pleasure, her ability to live in the now and not worry about tomorrow, but secure in the knowledge that tomorrow would come, and she'd deal with it then. Ever so practical, Bec.\n\nShe pulled a light quilt over us, and shifted in the bed so I could have the wet patch. \"That's the biggest wet patch I've ever seen,\" she said, and cuddled up to me, her bottom pressed back against my softening cock, sticky from all our juices. I spooned her, holding her breasts in my hands, and it wasn't long before I heard a little contented sigh as her breath slowed and Bec fell asleep in my arms. It wouldn't have been much longer, and I followed.\n\nLong enough to be woken from a dream.\n\nBec stirred. \"On your back, David. I'm horny hungry with a breast about to burst. Leave it to me, and I'll get it sorted.\"\n\nShe'd already established I was hard again, her hand on my straining prick. She knelt over me, her big breasts oddly asymmetrical now, one soft and hanging low, the other big and full, milk leaking already. Blue veins traced under the pale stretched skin of the bigger breast and a spray of freckles clustered in the valley between them, as if they had to run to one side.\n\nBec reached behind her head and pulled her ponytail tight, back off her face, out of the way. She had a serious look on her face as she knelt forward, took the shaft of my cock in one hand, and centred it inside her plump lips, swollen with blood and sex and her heat.\n\n\"I'm so fucking horny, love, so leave it to me. Rebecca knows what to do, when she gets like this. Years of practice, and a good imagination.\n\n\"I'm remembering a man, years ago, who'd look at me. I was a silly young thing...\"\n\nShe eased down onto me, the first inch.\n\n\"With a hot teenage body I didn't know anything about...\"\n\nThe second inch.\n\n\"But he obviously did, being older...\"\n\nThe third. Bec's control over me was supreme, then and now.\n\n\"And he knew I was too young to play with...\"\n\nShe moved up on my shaft, then slid back down, to fully lubricate the slide and the grip. Her full breast was beading drops of milk, and still she kept looking at me. Her eyes had gone very dark.\n\n\"So I played with him, sitting on his lap every Friday night at eight, before the Junior's game. I'd frig myself later. Only when we won, Bec's sporty girl reward.\"\n\nShe grinned, and continued her long descent. Her muscle control was fabulous, her slow desire divine.\n\n\"Ooo fuck, this is good.\" She distracted herself from the story. \"Better than I imagined, but oh my god, I imagined good.\"\n\nAnother inch, and her pussy was hot around my cock. I could feel her burning heat with every throb. Seeing my cock half in her, half out, was amazing - it shone with her creamy shine, my previous come leaking out. I was fucking my own cream pie - except that Bec was fucking me. I throbbed with each bit of her story.\n\n\"I'd been bad, stolen Mum's dildo. Naughty Mum. I told her later, but I guess she knew. She must have bought another one, because I kept hers...\" Bec giggled, thinking of her naughty mother, no doubt.\n\n\"How are you doing there, baby? You're awfully quiet.\"\n\nShe clenched on me, and I pulsed in reply. \"Thinking of your mum!\" I said.\n\nBec hit me, laughing. \"You're more alive than that old pink rod, Mister Percival. I know, I know, he was a pelican in that old movie.\"\n\nI was nearly all the way inside her now, and milk was streaming down her breast, down her belly, trailing white rivers onto my skin. Bec's eyes were closed as she continued her story, leaning forward, leaning over me. Her breast leaked milk, drip by drop, falling onto my chest. This was glorious, bathing in Bec's creamy fluids, my own all part of the mix. No wonder our sliding was easy.\n\nI watched, fascinated, as Bec squeezed her nipple with two fingers, and with her other hand, pulled back the hood of her clit. The little shaft of it was a deep red, like a bruise. She swirled a finger over it, flinching with the intense pleasure. She soothed herself with milky fingers.\n\n\"I learned to masturbate properly, those late Friday nights, that plastic cock in me, wishing it was yours. I never thought that I'd one day fuck you like this.\" She opened her eyes dreamily, and kept moving on my cock, up and down.\n\nShe leaned forward to drop her full breast into my mouth. \"Suck hard, baby, really make me flow. I'm going to do special fingers.\" She started moving on me, one hand on the base of my cock, the fingers of her other hand playing with herself. \"Your big cock, by the way... so much better than my old plastic dick.\" Bec grinned, and got down to business. She'd already pulled back her hair.\n\nI guessed Bec's masturbation technique, even though my cock filled her and she was able to grind her body down hard against mine, came from her younger days flying solo, holding that dildo firm in her pussy. I could feel her moving on me, changing angles, and watched, fascinated, at the way she rubbed her clit between two fingers, rolling and twisting it, stroking the sides of its shaft. She was determined to come, I could see it on her face. She was rough with herself, rougher than I'd ever be.\n\n\"I'd look at myself in a mirror, full length on my wardrobe door. My dildo was your cock in my mind, fucking me, fucking me, fucking me. Sometimes really really hard, till it kind of hurt. But hurt really good. Sometimes, not often, in my ass, if I remembered lotion and got it from the bathroom. I was so fucking hot, David. If only you were there.\" She started to fuck me, up and down, sliding up and down. \"I think I probably loved you, if I knew what love was.\" She laughed. \"More likely, lust. And desire.\" \n\nI didn't expect that revelation. I put my hands up to her face, to caress her, to feel her soft warm skin. She looked at me, and her eyes were far away; or maybe it was me in the distance, looking back.\n\n\"You should have loved someone your own age.\"\n\n\"I know that, but I didn't. All the boys my age were only interested in one thing, but you made me feel like a young woman.\" She kept moving on me. \"But I'm older now, far more certain.\"",
        "\"Certain of what?\" I wondered.\n\n\"That some things will last me forever.\"\n\nAs her arousal began to climb, Bec's milk started to flow, beads of milk like tiny pearls at first, bubbling from around her nipple, then a steadier, pulsing flow. She rubbed her hands over her weeping breast, then over her belly, my belly, her face and my face. She was making a splendid mess, bathing in her milk, coating our skins with it.\n\n\"This is so gloriously pervy,\" she said, delight and amazement in her voice. She placed both hands around her big tit and squeezed. \"So much milk.\" She smeared milk on my face, then hers.\n\nBec looked down at her sliding cunt on my cock, then looked at me with a different look. \"So much cock.\"\n\nShe stopped moving, and I felt a gripping squeeze on my shaft, deep within her.\n\n\"I think,\" she said, in a low husky voice, a new Bec emerging, \"I think I want you to fuck me doggie.\" She slid herself off me. \"I really want you to fuck me. Fuck me hard, so I can't get away.\"\n\nBec rolled onto her side, then got up on her hands and knees, thrusting her cunt and the dark brown star of her ass-hole before my eyes. She was swollen and wet, her cunt lips a rich, glorious purple red, shining with her juice, and my juice, dripping out in a filthy creamy mess. I wanted to eat her, lick it all up, swallow it all down.\n\nShe looked back at me, her eyes half closed like a drug induced dream. \"Just fuck me any way you want. You can take me in the ass if you like.\"\n\nMy prick jumped at the offer, but I thought, not today. \"Can we rain-check on that?\"\n\nBec grinned. \"We'll see. I'll check the forecasts...\"\n\nWith one hand she pulled one ass cheek aside so I could see the dark brown star of her sphincter, as a final temptation, before falling forward onto the bed, her arms stretched forward like a sphinx. Her breasts were pressed against the sheets, her body arched up to present her centre to me, swollen and wet. I could smell her, taste our come at the back of my mouth. I breathed her in, the sweet ripe aroma of her body like an orchid in a hot house.\n\nI got behind her, the shaft of my cock huge and shining, the veins around it thick and dark. I looked at both our sexes for a moment, thinking, this is why those Japanese artists drew them so big. With her hair pulled back tight, Bec had unknowingly channelled a geisha from Edo, the ancient floating world; and now here she was, in mine.\n\nIt was my turn to tease her, to take Bec slowly, inch by slow tantalising inch. I placed the head of my cock between her thick red lips and held it there. I reached one hand under her belly to find her clitoris. I placed the pad of my thumb on her dark rosette. I was like a priest with a holy ritual, a sacred three course sacrament.\n\nOutside, some magpies burst into their lyrical, warbling song.\n\nI waited, the moment building, Bec's whole body twitching, tense with anticipation.\n\nI leaned forward, took Bec's tight pony tail in my hand and gently pulled her head back, stretching her throat, arching her back, poised ready to pull on her hair. \"Push back on me, Bec,\" I whispered.\n\nShe did. And in one fantastic swoon I sank into her, pulled back, and did it again, until I filled her. Bec moaned. I pulled back on her hair. She bucked forward, like a filly about to bolt. She didn't need restraints, she didn't need taming, she could easily take me. She'd taken me long ago.\n\nI was the wild animal, as I fucked her, hard, spiralling out of control. The slap of my thighs against her ass was quick and sharp, my thrusts fast into her. There was no finesse here, no gentleness, just a hard fast fuck, a growl from my throat echoed by a moan from hers.\n\n\"Oh fuck, oh fuck, ohhh... fuuuckk. Fuck me, you filthy milk drinking man.\" Bec pushed hard back against me, wanting every inch of my cock deep inside her belly. I fucked her faster, reaching under her body for those fabulous tits. The sheets were sodden with the milk from her breasts, both leaking now.\n\n\"Ohh, fuck, my milk. I'm letting down without you sucking. My tits are coming. Fuuck, fuuck, nghh, so good. Keep... doing... that.\"\n\nI screwed her like a man possessed, until with a long growl from the back of my throat, I felt the orgasm rising from the base of my spine. \"I'm going to...\" I tried to hold back the final eruption, that first jet of semen, but I couldn't.\n\n\"Hold still,\" Bec almost shouted. \"I want to feel you...\"\n\nCome. That first, back arching spasm where my fluid pulsed into Bec, that stopping moment where the whole world held its breath...\n\n\"That's it, baby, shoot that come into me, oh god yes, I can feel it... ohh yes. Come for Bec, mmmm...\"\n\nMy orgasm surged three, four times, then...\n\n\"Ngghhh, ohhh fuh...kk.\" With long keening sound, almost a scream, Bec came too, shuddering and squirming on my shaft. Her orgasm clenched one last throb from me, as if her body needed every surge, every seed, to replace all the milk I'd taken from her.\n\nI collapsed onto her, gripped and anchored inside. Bec's legs gave way, and she too collapsed onto the bed, her breath coming in panting gasps. Our bodies were coated with a sheen of sweat, adding more silkiness to our skin.\n\n\"Don't move,\" she whispered. \"I like your heavy weight on me.\" She sighed with pleasure. \"I like your heavy weight in me.\" She clenched, and I was still hard.\n\nI nuzzled and kissed her ear, my breath hot on her neck. Bec reached behind her head and tugged the tight band from her hair. She pulled her hair to the pillow, turned her head towards mine.\n\n\"There,\" she said, and touched a place on her neck. \"Kiss me there, it's my favourite place.\"\n\nHer skin was soft there and I felt her pulse on my lips. Or felt the softness of my lips on her skin. I didn't quite know which part of Bec was mine, nor which part of me was hers.\n\n\"That was very fierce, David. How did you know what I wanted?\" Her voice was low, like when she told her story before. A continuation, I guess.\n\n\"I don't know. Body language, maybe?\" I chuckled at her question, and loved the way she asked it. I took her hand in mine, lacing our fingers together.\n\n\"Other hand, too,\" she said, taking mine between her fingers.\n\n\"I reckon,\" she went on, \"our bodies knew. They remembered, where our minds had forgotten.\"\n\n\"We hadn't forgotten. Just needed to be reminded.\"\n\n\"Mmmm.\" She sounded very content, satiated and full.\n\nI was still inside her, held tight.\n\nAfter a few minutes, Bec moved from under me, and my softness left a trail on her leg. She rolled over, the sheet sticking to her breasts and belly. She curled into my arms in a sticky embrace.\n\n\"You're good for me, David. We're doing this again, I can tell you that for certain.\"\n\nI wasn't going to argue with Bec, not when she'd made up her mind. She'd always known what she wanted.\n\n\"Come on, we need to get up.\" The sounds of the outside world snuck back into the room. It was late in the afternoon.\n\n\"One thing though. I'll need to change the sheets.\"\n\n\u00a9 Electricblue66 2021"
    ],
    "authorname": "electricblue66",
    "tags": [
        "breastfeeding",
        "lactation",
        "breast milk",
        "milk",
        "younger woman",
        "older man",
        "cafe society",
        "romance"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/ill-need-to-change-the-sheets"
}