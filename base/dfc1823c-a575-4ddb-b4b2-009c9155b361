{
    "title": "My Bottom and Me",
    "pages": [
        "Hello dear readers and fans. I decided to take a short break from writing The Hunger to work on something else that I have been planning for a while. This is a bit different for me. I have frequently said, when asked, that my stories are not truly autobiographical. Rather, they are based on real life experiences, but not necessarily in the context that they may be portrayed in the stories themselves. I have made no secret of the fact that those experiences may be thickly layered with what I call \"embellishment.\" I suppose you could also call it creative license. What embellishment that may occur in this story is mostly just from filling in gaps in my memory of the events portrayed here or otherwise trying to make the story more readable. \n\nThis story is a break from that description of my stories. It is, for the most part, autobiographical. While I don't intend to post it as a \"how to\" story, there is a large degree of that in the story. The first part is going to be a little dry, as it gives historical background and perspective. Please bear with me through this. I promise it will get to the juicier parts. I hope you enjoy it, and as always, I do request your votes and comments.\n\n+++++++++++++++++++++\n\nMy attitude towards anal sex is what I have referred to in the past as a love/hate relationship. Many of you that are familiar with my stories may be somewhat surprised by that because of the role that anal sex plays in many of my stories. I would explain that as being the result of my change in attitude over the years. Anal sex was not something I have always enjoyed. This story is intended to document and explain that change, and describe how it came about over the years.\n\nI, like many women of my generation, based my attitude on anal sex on what I can only describe as traumatic early experiences. As I look back now, I recognize that these experiences were with mostly inept, insensitive, and inexperienced lovers. Mostly, they were young men that had no clue as to the techniques required for successfully making love to my rear passage. Many looked at a woman's ass as an alternative vagina. Furthermore, they were even less knowledgeable when it came to the female psychology of anal sex. \n\nWhile I find it easy to blame these young men, I have also learned to assume some share of the responsibility as well. I guess you can say this is part of my maturation as a woman. I have learned to accept the fact that I allowed this to happen to me and that I was just as ignorant as my lovers. Of course, this was at a time before the internet and readily available printed materials on the subject, like those that exist today. Anal sex was like most other sexual activities, we simply learned by trial and error. However, in this case, the errors almost entirely overwhelmed the successes.\n\nOver the years, I had discussed this with many other women and a few male lovers. What I learned was that I was not unique in this regard. Many women have shared their horror stories as well. Many were similar, and some even more traumatic than my own. The common thread that ran through them was the same inexperience and insensitivity that I have now learned to recognize.\n\nSurprisingly, I discovered that porn, both written and video, had a large part to play in the attitude and approach that many men had towards anal eroticism. I can't really say that proper technique plays a large role in any depiction of anal sex in most porn genres, even today in a time that I like to think of as more sexually \"enlightened.\" I still read stories here on Literotica, that, at their best, can be best described as \"improbable,\" and at worst are simply scary. \n\nI have posted in the Lit forum about the fact that I feel writers have an obligation to depict sexuality in a form that is accurate and believable. Often, while writing, I have put myself in the shoes of a young man or woman that are reading my stories, and felt the need to portray sex in a way that has some accuracy and educational content. For better or worse, our society lacks any effective form of sex education. Erotica, unfortunately, fills that void to some degree. I was shocked to see that many writers did not share this belief, and some that were plainly hostile to it. The response by other authors to my forum posts was filled with language such as \"it's just a fantasy\" and \"the need to suspend disbelief.\"\n\nI have a hard time with those concepts because I somehow doubt that many readers, especially the young and inexperienced, are able to differentiate \"fantasy\" and real life. I suppose that largely depends on how outlandish the fantasy. Sometimes a fantasy can go to such an extreme that even the most na\u00efve reader can appreciate that this is not real life. The problem comes with stories that are more subtle with their \"fantasy\" aspects. \n\nI won't go into my early anal sex history very much, other than to say it was painful and brief. The fact that my lovers during this period often thought that anal sex was something appropriate to \"surprise me\" with certainly didn't help. Anal sex, as I alluded to earlier, was lacking in lube, sensitivity, preparation, and skill by both my lovers and myself. These early experiences were when I was in college and my attitudes towards anal sex were largely dominated by concerns over pain, hygiene, and social taboos. \n\nMany years passed during which anal sex was largely non-existent in my sex life. There was an occasional finger or tongue used to try to please me, but my conditioning had made me reject much more than that. For the most part, I didn't get much in the way of pleasure from these occasional forays. There were occasional lovers, both male and female, that attempted to go beyond these attempts but I always made it clear that my ass was a \"no go zone\" and simply not part of my sexual repertoire. \n\nI suppose you could say that my attitude towards anal sex began to change after I met and began to live with Judy. My relationship with Judy was primarily as a roommate, and secondarily as occasional lovers. We were each other's \"bootie call\" friend during dry times in our love lives. Judy was, for lack of a better term, a vocal advocate and aficionado of anal sex. Anal sex, simply put, was her \"thing.\" I can still recall frequent occasions spent lying in my bed listening to her through the thin walls of our apartment, as she encouraged her male lover, and occasional female lover, to even greater heights of anal eroticism. She was extremely vocal in this regard and needless to say, very uninhibited as well. \n\nI do admit that listening to her was a huge turn on and usually left me masturbating in my bed as I listened to her and her lover. Even though my mind was having a hard time consciously accepting anal sex, my body, and sub-conscious mind, was not. Some of my most memorable self-induced orgasms were accompanied by the sounds and mental images of Judy's anal extravaganzas. \n\nAs time went on, and as I became more comfortable with her as a lover, her encouragement was expanded to include me. I discovered that she enjoyed nothing more than my lubed fingers (or dildo or vibe) buried in her ass and my tongue on her clit. This combination never failed to bring her to large, and sometimes several, body jolting orgasms. \n\nHer love of anal sex was not simply limited to receiving. She was an enthusiastic giver as well. At first, my inhibitions were sufficient to limit her to the occasional use of a single finger or an occasional tongue in or on my bottom. I was always up tight about the whole cleanliness thing, even if she was not. Judy ultimately accepted my hang-ups and anal exploration was never more than a minor part of our foreplay or the build up towards what I thought of as \"normal sex.\" Perhaps this fact was the reason why our relationship, if you can call it that, never progressed beyond that of \"fuck buddies.\" \n\nThe topic of anal sex, and Judy's attitude and enjoyment of it, was eventually discussed during a pillow talk session after a particularly heated sexual encounter. My eyes were opened by this discussion, and for the first time, I started to re-consider my own attitudes. This was certainly not the first time I had discussed anal sex with another women, but it was the first time that I had met someone that didn't share my own negative impressions about it. Judy was, is nothing else, a huge advocate and cheerleader for the joys of anal sex. \n\nFirst, I realized that the pain issue was something akin to a self-fulfilling prophecy. My early experiences had all be painful and as a result I was not able to relax enough for it to be anything other than painful. If I couldn't relax my anal sphincter, any attempt at penetration was going to be nothing short of rape. My mind simply would not allow my ass to do anything except tighten up in anticipation of what my mind was convinced was sure to be a painful experience. \n\nSecond, she explained that hygiene was not the major issue that I had thought it to be. She explained that the rectum was usually largely empty most of the time. Yes, there were some nasty germs there, but as long as a lover didn't switch back to your pussy after being in your ass, that wasn't really a big issue. Besides, you can always use a condom. She further described how she had started including enemas as part of her pre-date preparation and how much that had helped her overcome her own hygiene concerns. She even said that she had come to the point that she got some enjoyment from the ritual of cleaning her ass and preparing it for sex. \n\nLastly, she told me how she had had similar issues with the taboo nature of anal sex. She described how a wonderful lover had helped her overcome that and open herself to the possibilities for pleasure in that part of her body. She said she was eternally grateful to that lover for his assistance in her discovery process. Besides, she explained, anal sex was a lot more \"main stream\" now that a lot of women were allowing themselves to explore their sexuality. \n\nThat point really got me thinking. I had always prided myself on my ability to be open to sexual exploration and how in touch I was with my sexuality. I realized that to some degree, I had kept a firm lock on that possibility and there was some hypocrisy in my attitude. I eventually came to the conclusion that I had perhaps never really given anal sex a fair shake. \n\nUnfortunately, my employer promoted me and transferred me out of state a few weeks after this conversation. I did get with Judy once more before I left and I allowed myself to open up to some limited anal exploration. Our discussion and some later follow up chats, were far from forgotten, and I often referred back to them in my mind. If nothing else, Judy was successful in that I was at least allowing myself to start considering the possibilities. \n\nAnal eroticism slowly began to establish a foothold, at least to a limited degree, in my sex and fantasy life. When I say my sex life, I am primarily referring to a few exploratory experiences during my more enthusiastic masturbation sessions. It was definitely not something I was ready to share with a lover at that point. Besides, as a result of my re-location, I was out of the social scene for a while, and mostly celibate. \n\nMy lack of a social life was greatly exacerbated by the fact that my new position required a lot of business travel. The result of all this was that I had a lot of free time on my hands, much of it spent in a hotel room in towns I knew little about. I was never the type to become a hotel \"lounge lizard\" and was more likely to spend free time in my room with a bottle of wine and a good book or watching TV. \n\nThe lack of a social life had one immediate impact. I had always been a devotee of masturbation, even when I was in a relationship. However, it now became my sexual mainstay. Masturbation for me was always a long drawn out affair and I certainly had the time to devote to it. During this period, it developed into an art form. Much of my reading material was of an erotic nature. I rarely passed through an airport without picking up a copy of Penthouse Forum, Variations, or something similar. I had a couple of trusty vibrators that were part of my travel kit. Many evenings were spent reading erotic stories and bringing myself to wonderful, full body orgasms. Needless to say, I spent a lot of money on batteries during this period and spares were also part of my travel kit. \n\nMy job change forced me to start reconsidering a lot of aspects in my life, professionally and eventually personally. I spent a lot of the time in the hotels devoted to this reconsideration. I think this period was when I first became truly comfortable with my sexuality. A lot of that had to do with acceptance and finally flushing a lot of societal conventions from my brain. I had finally rid myself of a lot of the \"good girl\" notions about sexuality that my family and society in general had force fed me. I came away with an attitude that could be mainly described as \"if it feels good, do it.\"\n\nAnal sex was not left out of this sexual rejuvenation. I have always been what some may describe as a goal oriented, type A personality. Anal sex, or rather my exploration and eventual enjoyment of it, became one of those goals. I can even remember sitting in a hotel room, one stormy night in Tulsa, jotting down incremental goals and the steps needed to achieve them. Admittedly, I was honest enough with myself that I realized all these goals might not be necessarily achievable and the entire project may end in failure. However, I was not going to give up without a sincere effort. For several months afterwards, I referred to this as \"the project\" whenever I thought about it. The rest of that week was devoted to refining the plan. By the time I got home that weekend, I was ready to begin. \n\nThis was in the mid 90's and by then the early form of the web had taken shape. It certainly wasn't as expansive as it is now, but I decided to do some searches on the topic of anal sex and see what was available. Online porn was in its infancy and I found more than a little porn devoted to anal sex. I dismissed most of it and focused on sites that were more oriented to \"how to\" and tutorials. There was certainly not a lot, but enough that I got some good ideas and information from them.\n\nWith my background research complete, I made a trip to the drugstore for step two. I did so late at night at a 24-hour store so that no one I knew would see me, or at least I hoped so. I stocked up with a couple of different types of lube and enema products. I got some Fleet disposable enemas, as well as an enema/douche bag. I decided to try both and see which I preferred for both at home and when I was on the road. Lube was limited to KY and I seem to recall that Astroglide had just become available in drug stores, and I got both. I also got a box of condoms. Luckily, I got one of those clerks that didn't even notice what I was buying. She looked tired and half-asleep and my embarrassment was minimized. \n\nLater that weekend I made a trip across town for my first visit to an adult bookstore. This was before the large adult megaplexs and online shopping was still very sparse. I had been told by a friend that this store was \"the best.\" I didn't really know what to expect. The few vibrators that I owned had either been a gift from a lover or purchased at a lingerie store or in the \"novelty\" section of a store like Spenser's Gifts. I knew that neither a lingerie store, nor Spenser's was going to have the \"specialty\" products that I was looking for. \n\nI'm not sure what my friend's opinion of what \"best\" implied, but I thought the place looked seedy. I can say that it did seem to be clean. I went early in the morning in the hope that the \"perverts\" wouldn't be there yet. Actually, it was almost empty. There was one couple in the main shop area with me and they were over looking at videos. I assume the rest of the few cars in the parking lot belonged to people that were in the back in the video booths.\n\nI quickly found the toy section and spent a few minutes looking over the selection. There wasn't a lot, but enough that I found a few things that were along the lines of what I was searching for. I grabbed them and beat a hasty retreat from the store. The clerk seemed bored and other than asking me if I needed extra batteries, we had little in the way of conversation. I paid and was driving home within a few minutes. \n\nThe rest of the weekend was spent on errands, laundry, paying bills, and preparing for my next trip. I didn't have the time available to devote to the drawn out session I was planning and I decided to wait until the following week while I was on the road. I packed up all my supplies in the bottom of a small bag and covered them with toiletries.\n\nI went into the office on Monday and worked until late. My flight was a late morning flight on Tuesday. I got in and out of the airport and through the rental car agency with no problems. By late afternoon I was settling into my hotel room and making phone calls to confirm my appointments for the week. I ordered a salad from room service and after I finished eating, I began to plan the rest of my evening. \n\nI began by drawing a hot bath. I soaked for a while and shaved my pits, legs, and trimmed my pussy. I decided to try out the Fleets enema first and I retrieved it from the bottom of my overnight bag. I carefully read the directions and had to go retrieve the lube to apply to the applicator tip on the Fleets container. I did this while letting the Fleets warm in the sink that I had filled with hot water. Following the directions, I prepared a second Fleets for a final rinse while I was getting everything else ready. \n\nWhen everything was ready, I got on my knees on the floor and tried to push the applicator into my ass. The lube didn't help because the tip kept sliding around. After a minute or so, I finally got it positioned correctly and started to slowly slide it in while forcing myself to relax. It felt odd, but not much different from a finger. It definitely wasn't entirely uncomfortable.\n\nThe flood of fluid that followed was definitely something I wasn't used to or prepared for and the feeling of liquid in my bowels was something I associated with something a lot less pleasant. I realized that association was largely mental, and not a physical reaction. I lay on the towel on the floor for several minutes, absorbing the feeling of the liquid seeping deeper into my colon and doing its job. Finally, I moved to the toilet and released the fluid. I then repeated the process with a fresh Fleet's for a final rinse. \n\nNow that I was all clean and \"fresh,\" I moved to the bedroom and prepared to continue my experiment. I had laid out a few toys and brought the bottle of lube with me from the bathroom. I put a towel over the bedding before climbing into bed. \n\nFor that first time, I limited myself to inserting first one, then later a second finger in my ass. While I generally found the sensation enjoyable, I noted a couple of things. First, my short arms made reaching my ass a little difficult and limited me to the positions I could be in. Second, the positions I was limited to made my other favorite masturbatory accompaniments, such as reading erotic stories, almost impossible. While it was a good first attempt, it had its limitations. \n\nI quickly recognized that I needed to move on to small toys that would \"extend\" my reach. Having gained confidence in my ability to accept two fingers I next tried a small vibrator that was about the same diameter as my fingers. I made sure to wipe the lube off my fingers because the vibe didn't have a base that would prevent it from getting \"lost\" inside me. Besides, I was more interested in determining my ability to handle the girth of the toy than the depth. ",
        "I was extremely happy with the results. The feeling of the vibe slightly stretching my ass, combined with its vibrations and those produced by another vibe on my clit, resulted in a very nice \"happy ending.\" It was my first anal orgasm and if nothing else, I had confirmed that I was able to receive pleasure from my ass. It was, by my own reckoning, a very good and intense orgasm, as compared to other self-induced orgasms. I particularly liked the feeling of my ass clenching around the vibe as I was cumming. \n\nAs I said before, this was largely a confidence building exercise for me and I had reached a first crucial step. Actually, there were two steps achieved. The enema had solved my cleanliness hang up, and the vibe had reassured me that my ass was more than capable of producing sexual pleasure. I hadn't felt self-conscious at all about any hygiene issues and was happy to see that there wasn't a mess to clean up on either my fingers of the vibe. \n\nOn the downside, the vibe did not really solve my hands free issues. I resolved to explore other toys and masturbation options that may be a solution to that issue. I devoted some thought to that as I lay in bed, basking in the afterglow, and allowing my mind to devote itself to problem solving. I came up with a few ideas before drifting off into a sexually satiated slumber. \n\nI awoke the following morning and having a full day planned. I didn't really have the time to devote to further exploration. Instead, I limited myself to a quick orgasm with the assistance of the water from a hand held shower massager, one of my favorite \"quickie\" techniques. I did devote a little extra time to making sure my ass was clean of any residual lube that may have left over from the previous evening. I also remembered to clean the vibe with some antibacterial soap that I had brought along for that purpose. \n\nAs I said, I had a busy day and didn't really get a chance to think much about my \"project\" until much later that evening. When I got back to hotel, after eating a small dinner alone, I got out of my clothes and began to prepare myself again. Following my bath, I decided to try to use the enema bag instead of the Fleets. I set about preparing it by first determining a water temperature. I finally found the right mix of hot and cold water that approached a temp that was slightly higher than body temperature. I then added a mild detergent called Castile that had been recommended in one of my online searches. Not knowing any better, I filled the two quart bag completely with the thought that I could shut it off if it got too much for me. I hung it from the shower curtain bar with some rope that I had brought so that it wasn't too high and the resulting pressure too great. After lubing my bottom and the applicator tip, I assumed what is called the \"Sim's position\" which was on my side, with my top leg bent, and the bottom one out stretched on a towel on the floor. \n\nThe tip was soon in my ass and I found that I had to hold it in place so that it wouldn't slip out. I decided that I may have over done it some and to try using a little less lube next time. I released the clip on the hose and soon felt the warm water filling my ass. I stopped and started the flow several times, again following the online suggestions. This allowed my rectum to fill and then drain into my colon. Towards the end, I felt really full and felt some cramping begin. I had been forewarned about this during my research and it was not unexpected. I stopped the flow until the cramps lessened while massaging my belly. I was somewhat amazed when I looked up and saw that the bag was empty. I had taken the entire two quarts. When I looked down, I was also amazed to see a noticeable bulge in my abdomen. I rubbed by belly and for the first time took stock of how I felt. The feeling of fullness was somewhat enjoyable and maybe arousing to some degree after I had gotten past the cramps. My other hand moved to my breasts and I caressed them as I laid there and absorbed the sensations coming from my abdomen. \n\nAfter several minutes, I got up and waddled to the toilet. When I released the tight clench of my sphincter, the liquid flowed out in a gush. Actually, it came in a series of gushes. I thought it would never stop, but it finally did. I then prepared a clear water flush and repeated the process. The cramps were not as bad this time and I thought it went even easier than the first time.\n\nAfter I had finished the flush and emptying process, I moved to the bedroom again. As I walked, I noticed something else. I have since referred to it mentally as the \"cleaned out feeling\" that I get from an enema. This was not something I noted with the smaller Fleets. It actually felt pretty darn good. Not only was I confident of my cleanliness, I felt good about the way I had emptied myself. Perhaps it was a side benefit of enemas, and a pleasant one at that. \n\nI repeated the previous night's preparations and soon had two lubed fingers in my ass. This time I tried moving them so as to stretch my rear opening a bit and even finger fucked myself for a while. I had decided to try a small anal plug that I had bought. That turned out to be a not very successful experiment. While I was able to insert it without much difficulty, it wasn't large enough to stay in place without holding it, and the lube caused it to pop out frequently. I found a solution to this and dug out a tight thong from my bag. Once I had the thong wrapped around my thighs, I reinserted the plug and pulled the thong into place so that the strap that passed between the cheeks of my ass pushed against the base of the plug and kept it in place. That worked well, I instantly decided. \n\nI grabbed one of my erotic books and decided to read for a while with the plug in. I occasionally gripped the plug with my ass and I found the feeling to be a turn on. When my arousal, from both the plug and my reading material, reached a sufficient level, I added a vibrating egg to the front of the thong. The thong held it in place against my clit when I pressed my thighs together and I went back to reading. I slowly increased the power level on the egg as I got more aroused and got more into the story that I was reading. I was soon pinching my nipples with one hand, using my other to hold my book, and rapidly approaching orgasm. What followed, to say the least, was a very satisfying finish. I found that I particularly enjoyed repeatedly squeezing down on the plug in my ass as the sensations of the orgasm flowed through my body.\n\nI had to quickly shut off the vibe that was still buzzing away against my over sensitive clit. I decided to leave the plug in place for a while as I laid there while recovering from my orgasm and enjoying the after glow.\n\nIt was still relatively early and I wasn't yet ready for sleep. I suddenly had an idea, took the egg and placed it in the small hollow at the base of the plug, and then wrapped the thong strap over it to keep it in place. This caused the front of the thong to press tightly against my pussy, which was somewhat enjoyable in itself. The tightness of the strap caused the plug to push even deeper into my ass. I turned on the power to the plug and felt the vibrations transferred to the plug, which in turn vibrated in my ass. This became a favorite technique that I would repeat many times and with numerous variations. I returned to my reading and again slowly increased the power level as my arousal grew.\n\nSooner than I had expected, my arousal was at a fever pitch and I couldn't help but toss my book aside and shoved my hand into the thong to fondle my clit and pussy lips. That quickly had the desire effect and I fired off into another, even more intense orgasm. My climax left me panting for breath and moaning softly as I languished in its warm afterglow. I was done for the night and after removing the thong, egg, and plug, I wrapped them in a handy washcloth to be cleaned later, and fell into a wonderful sleep. \n\nThe following day was another hectic one that generally followed the pattern of my prior day. It was my last full day on the road and I was happy to be heading home the following day. I did have a few spare moments to myself and I used them to plan that evenings anal experiments. \n\nI used the bag again that night and again noted the \"cleaned out\" feeling. I was quickly beginning to appreciate that as time went on. I recall lying on the floor with a swollen belly thinking that I would save my remaining Fleets for times when I needed a fast clean out. The bag had quickly become my preferred method. \n\nI did two experiments that evening. The first was using anal beads in my ass. I had a little bit of trouble getting them into my ass with my slippery, lubed fingers. I decided that having a lover help me put them in would be a lot more practical. While they were not that large and they didn't really \"stretch\" me, I did become a fan of them when I pulled them out of my ass as I reached my peak. The added sensation of my sphincter opening and closing around them as I slowly pulled them out, one at a time, while my sphincter was simultaneously spasming in orgasm was a very delightful addition to my climax.\n\nThe second experiment involved a medium sized dildo that was about the size of an smallish penis. I was somewhat enthusiastic in my use of it and it was the first time I really got the feeling that comes from having my ass \"fucked.\" It was also the first time that I felt a little stretched. I took my time inserting it, slowly inching it in, between pauses to allow myself to relax enough to accept more of it. That in itself was a valuable lesson.\n\nFucking my ass with the dildo was a huge turn on and I couldn't help but fantasize that it was a flesh and blood cock attached to a real man in my ass, and not a latex imitation. However, it wasn't sufficient by itself to drive me over the peak to orgasm. A few deft strokes of a finger on my clit was all it took to solve that problem. As I was quivering in orgasm, I imagined the feeling of a hard cock throbbing as it came in my ass. \n\nWhen I was getting ready to depart the next morning, I threw a medium sized plug and the lube in my carry on bag, almost as an after thought. I had a breakfast meeting appointment and I was soon after it concluded I was on my way to the airport. As I was driving to the airport I noticed a large adult \"emporium\" on the way. On a whim, I decide to pull in and kill some time before my flight. I again browsed the toy section and saw one thing that really got my attention. It was a dildo, about 8 inches long and fairly thick. It was not remarkable, or different from a similar sized one I already had except for the fact that it had a suction cup on the bottom. The suction cup could be used to securely attach it to almost any solid surface. As I looked at it, I flashed back to the full feeling of the medium sized dildo I had used. On one level, it scared me, while on another it excited me with the idea of its bulk buried in my ass. I decided to get it. If it didn't work out as an anal toy I thought it would still work well in my pussy. \n\nThe other item that caught my attention was something called a contour T vibrator. It looked like I could probably hold it in my ass without a hand and it had a cross piece that prevented it from going in too far and getting lost. I didn't really have a vibe that was designed for my ass and was quickly adding it to my growing collection. \n\nI packed my new purchases away in the bottom of my suitcase and was soon on my way home. When I got to the airport and checked in, I went to the bathroom. As I was sitting on the toilet, I saw my overnight bag sitting there at my feet in the stall and I had an idea. I retrieved the plug and lube and I soon had the plug lubed up. I squatted over the toilet and lubed my ass as well. I had, by this point, figured out how much lube to use. I used enough to get the job done, but not so much that it created a mess or caused the toy to slip out easily.\n\nThe medium plug was the largest toy I had used so far. When I got ready to insert it, I had to summon a certain degree of courage to do so. I calmed myself mentally when I realized my anxiety was only going to make relaxing more difficult. I went through a little calming exercise that I had learned from a former lover that was into yoga. \n\nI nestled the tip of the plug against the opening of my ass and tried to push it in. I quickly met resistance. Part of the problem was the way I was bent over in the confines space of the stall. I rethought my approach and then placed the base of the plug on the toilet seat. Holding the base of the plug, I squatted over it and used my weight to sit down on the plug, thus forcing it in deeper. The first few inches went in OK. I then reached a point where the stretching turned to pain. I stopped and refocused on relaxing. I tried to continue and made it another inch or so before I had to stop again. I repeated this several times. The pain got to the point where it never went completely away but at least it decreased to a manageable level. To be honest, the pain, at least in its milder forms, was almost a turn on. It certainly kept me focused on what I was doing and the \"naughty\" nature of my actions. I had to try hard to keep from making any noise. My body wanted to groan with both pain and pleasure but my mind forced me to remain quiet. The groans turned into almost inaudible whimpers. \n\nI finally reached the point, after what seemed like forever, where my ass was stretched around the widest point of the plug. With one final settling of my hips, my ass closed around the neck of the plug and it was firmly planted inside me. I gasped as the feeling in my ass changed from one of pain and unending stretching to one of complete fullness.\n\nI rested for a moment and then prepared to make my exit towards the gate. I had to rotate the plug slightly so that the based rested between the cheeks of my ass. I pulled up my thong and made sure the strap covered the based of the plug even though I was sure that I wouldn't have the same slippage problem I had with the smaller plug. The larger difference in size between the neck and width of the plug was more than enough to keep it locked in my ass until I was ready to take it out.\n\nWalking through the airport was an interesting experience, even more so because I was wearing heels. I admit that my heart skipped a few beats as I went through the security checkpoint but managed to calm myself with the thought that the plug did not contain any metal that could be picked up by the metal detector. Of course, my gate was all the way at the end of a long concourse and every step was a reminder of the plug in my ass. I forced myself to focus on the details of picking up my boarding pass and not on the wicked sensations coming from ass.\n\nMy timing was perfect. The time I killed at the adult store and in the restroom got me to the gate just minutes before my flight was boarding and I was soon walking down the jet-way, finding my seat, storing my carry-on, and getting myself situated. I was in my preferred window seat and the flight was not full. An elderly lady sat on the aisle and the middle seat was unoccupied. For the first time since inserting it, I was able to focus on the fullness invading my ass. The airline seat and thong provided enough pressure to keep it pressed deep in my ass. I started to relax and clench my ass muscles around the plug and felt myself getting turned on. My mind wandered as I did so, and I found that I was aroused by the idea of the secret use of the toy while being surrounded by all the people in the cramped confines of the plane. \n\nThe elderly lady tried to engage me in conversation. I struggled with maintaining my composure as she went into detail about her visit to see her grandkids. I felt the moisture saturating the fabric of my thong as she showed me pictures of her beloved and I squeezed my thighs together in time with the contractions of my anal muscles. I just put on my most tolerant smile and complimented her on having such a lovely family. In reality, I was looking at the pictures of her attractive son and daughter-in-law and thinking lewd thoughts of them rolling in bed with me. Fantasies of her son pounding my ass while the cute face of the daughter-in-law was buried between my thighs filled my head. Those thoughts certainly did not help the moist condition of my panties.\n\nI finally had more than I could stand. I excused myself, squeezed by the older woman; my plug filled ass just inches from her face, and made my way to the lavatory. Within seconds of latching the door to the lavatory, my dress was pulled up and my fingers were jammed into the thong and strumming happily away on my clit. I must have under estimated my level of arousal. It was just a few moments before I had reached my peak and came hard. I struggled to remain quiet as bolts of pleasure shot through my body. The muscles in both my ass and pussy spasmed in sympathetic harmony as my orgasm crashed upon me. \n\nI somehow managed to clean up a little bit afterwards. A wad of toilet paper was in place in my panties, soaking up the fluids still leaking from my pussy. I touched up my makeup and brushed my hair. Content that I looked at least half-way presentable once again, I returned to the cabin. I was happy to see that the older woman was napping when I returned. I managed to squeeze by her without waking her. Once back in my seat, I allowed myself to enjoy the warm glow of post-orgasmic relaxation and nodded off myself.\n\nThe rest of my trip home was unremarkable except for the fact that the presence of the plug kept me at a simmering low level of arousal. I have since come to the conclusion, after wearing it many times in public under similar circumstances, that the arousal is partly due to the physical sensations, but also from the idea of \"secretly\" wearing it in public. I suppose it may be somewhat similar to the thrill that an exhibitionist gets from flashing in public. Exhibitionism has never really been my thing, but I like to think I am honest enough with myself about my sexuality to see the similarities. \n\nI learned one more valuable lesson from that experience. Lube has a tendency to dry out over time and removing the plug was not as easy as I had thought. I once again improvised and took it out in the shower. Once the bulge was past my opening, it slid out easily. That has become somewhat of standard operating procedure for me when I leave it in for a prolonged period. I was a little shocked at the feeling of \"emptiness\" I felt after removing it. The smaller toys I had used before that time had only left me with a hint of that feeling. To be honest, I have come to think of it as one of my least favorite things about anal sex. All in all though, it is not so bad as to outweigh the other more pleasurable aspects of anal eroticism. \n\nThe rest of the week was busy with preparing reports and my sex life was basically put on hold until the following weekend. I did, however, plan to devote a good part of the weekend to exploring. Other than a few domestic chores, my lame social life left with me with plenty of time to devote to my new fascination with anal eroticism. I looked forward to it with all the enthusiasm of a new devotee'. By that point, I was far past the curious stage. I was definitely hooked. \n\nSaturday started early with a shower and a quick orgasm, thanks to my handy hand-held shower-head. I decided to go ahead and treat myself to an enema. Getting dressed to go out and run some errands to the grocery store, car wash and dry cleaners included inserting the medium plug once again. It went in a little easier and quicker, but I still struggled some with the largest part of it.\n\nI couldn't help but fantasize about a few attractive men and women I passed in the grocery store. I imagined that they knew I had the plug in my ass and how they would react. Would they be shocked, aroused, or just think me weird, I asked myself? The cute, young clerk at the dry cleaners was a mini-fantasy all to herself. I imagined her licking my ass while she retrieved my clothes and took my money. I felt my juices trickling down my thigh from my saturated panties as I walked back to my car. The self service car wash was another new experience. I learned that I liked being physical activity while wearing the plug. I felt the need to clench down on the plug while I was moving and stretching as I washed my car so that it wouldn't slip out. Needless to say, I was very turned on by the time I got back to my apartment. I forced myself to restrain my need to masturbate until I had finished putting away groceries and my dry cleaning. ",
        "What followed was another lovely session of self loving. My ever faithful, AC powered massager vibe on my clit, the plug in my ass, and a favorite lesbian porn video were the perfect combination that I needed to meet my immediate need for satisfaction. I came to three or four very satisfying orgasms that left me glad that I had remembered to put a towel underneath me. I was totally wiped out afterwards and fell asleep with the plug still buried deep in my ass. \n\nI awoke later that afternoon and was instantly aware of the pressure in my back side. Looking at the clock, I noted the time and was concerned that I might have left it in too long. A quick shower took care of that. Feeling refreshed and hungry I prepared a meal. The bagel that I had that morning was long gone and my earlier activity had left me in need of energy. \n\nI spent the rest of what was left of the day dealing with domestic chores. I noticed that I attacked the chores with an unusual degree of enthusiasm. I also recognized the fact that I was eager to get them done so that I could return to more enjoyable activities in my bed. It seems as if I had discovered a new form of motivation and reward. In the back of my mind, I was constantly reminded of the new dildo I had bought while on the road. It had been unpacked, washed and sat unused, waiting for me in my nightstand drawer with the rest of my growing toy collection. As I cleaned and did laundry, my mind was occupied with thoughts of how it might be best employed. By the time I was done, a rough plan had been formed in my mind. I would later wear the plug while doing housework and found it an enjoyable way to do what I otherwise thought of as a menial, boring drudgery. The combination of physical activity and wearing the plug would work as well at home as it had at the car wash. It certainly made vacuuming a lot more fun.\n\nAfter I was done, I forced myself to take some time to relax before beginning my next session. A couple of glasses of wine added to my level of relaxation. I used the time to prepare for the next event as thoughts of the dildo danced in my head. \n\nWhen I had reached the point where I was too horny to hold off any longer, I set my plan in motion. My earlier preparations had included placing a wooden chair in my bedroom in front of the TV. On a nearby stool, I had a full glass of wine, my vibrating egg and a bottle of lube within easy reach. One of my new anal sex DVD's was in the player. Finally, the new suction based dildo was sitting in the chair. I had already made a trip to the bathroom and emptied my bladder. I had also moved an antique floor mirror so that it was strategically placed and it allowed me to watch myself. I was ready for a night of fun and pleasure. My nipples were tight, my pussy fluttering, and my ass clenching in anticipation. Because I had more time to devote to the session, I had decided on a different game plan. Rather than rush towards anal sex, I decided on saving it for dessert. I planned on devoting some attention to my neglected pussy first. \n\nI licked the suction cup of the dildo and with a squelch of air it was quickly anchored to the seat of the chair. I applied a thin coat of lube to it, wiping the excess onto my already engorged pussy lips. I had hung a moist washcloth on the back of the chair and I used it to remove the residue. I hit play on the DVD player remote and as the obligatory promos played, I straddled the chair and managed to seat the head of the dildo into the opening of my pussy. I slowly allowed myself to slide down, and the dildo did a good job of filling and stretching me. Its girth was sufficient to stretch my pussy to an enjoyable degree and it's length was enough to reach far enough into me to be nice without bruising my cervix. I just sat there for a few moments, absorbing the feeling of the dildo inside me and contracting my pussy muscles around it. I do recall thinking that this was a nice way to practice my kegel exercises. \n\nBy that time the movie had started and the thin opening plot soon dissolved into the first sex scene. I started to hump on the dildo, riding it, and imagining it was a flesh and blood cock. I started slowly, only moving back and forth so that it further stretched my pussy. By the time the first scene of the movie had reached its peak, I was thrusting up and down on the invading monster. My moans of pleasure mixed with those of the buxom, blond porno starlet coming from the TV as her ass was spread and fucked by a typical, well hung, porno stud. I had somehow managed to retrieve the egg and it was humming away in my hand, which had moved to my swollen, exposed clit.\n\nThe sensations produced by the egg and dildo, as well as my free hand playing with my nipple, were quickly bringing me to my peak. I realized that I was coordinating my climb to ecstasy with that of the actress on the TV. If her passion was faked, it was not evident, I was happy to note. Fake female orgasms were one of my turn-offs about most commercial porn. Her enthusiasm was clear, as was her eager participation. I watched her driving her hips back to meet the large cock filling her ass and it caused me to increase the tempo and length of the thrusts of the dildo into my pussy. My legs were burning from the exertion of fucking myself, but it only added to the experience. \n\nThe actress's on-screen orgasm was quickly followed by own, following her only seconds later. It seemed like she was the catalyst that helped me find my own release. Her cries melted into my own as we both seemed to share our pleasure. My eyes drifted to the mirror and I watched my body spasm and writhe atop the dildo as I convulsed through my orgasm. \n\nI paused the DVD and settled back down on the dildo which was still embedded in my quivering pussy. The egg had long since been discarded during my orgasm and was annoyingly buzzing away on the stool. My over-sensitive clit couldn't handle more of its vibrations. I sat back against the back of the chair and allowed myself to rest. I was still shivering with the after shocks of what had been a very good orgasm and my mind was enshrouded in clouds of post-orgasmic bliss. When I was able to do so, I looked at myself in the mirror and noted that I looked like I had melted into the chair. The base of the dildo just barely peeked out between my thighs and was coated with a heavy layer of my juices that shone in the soft light from the paused DVD. \n\nI managed to rouse myself enough to shut off the increasingly annoying buzz of the egg and grab my wine glass for a sip. My mouth and throat were dry, no doubt the result of my loud moans, groans, and eventual screams of release. My head cleared a bit and I felt the lactic acid burn in my calves, thighs, and ass. I remember thinking that it was better than 30 minutes on the stair climber at the gym, and a lot more fun. I relaxed for a few more minutes and finalized my plans for what would come next. My ass was twitching, almost as if it knew that its turn was coming. \n\nI slowly became more eager to proceed. I re-lubed the dildo, this time a little more heavily, although it was still wet from my pussy. That was soon followed by one, then two lubed fingers in my ass and I applied a bit more lube around the opening. I grabbed for the washcloth and wiped the excess from my hands. I was all ready for Act II of the evening's performance. \n\nI hit play on the DVD player just before I re-straddled the dildo and placed it at the opening to ass. I gasped as the sizeable head slowly slid through my sphincter and it closed around it. I continued inching downwards slowly as the shaft filled me. I once again felt the odd mixture of pleasure and pain that came from having my ass stretched and penetrated. Finally, after what seemed like long minutes, I felt the cool surface of the chair against my ass cheeks and I knew that I had it all in me. I stopped and analyzed the sensations and considered the experience. The dildo was thick, but not as thick as the medium plug. I wasn't stretched nearly as much as I had been by the plug but it did reach a lot deeper and I could feel it buried in the depths of my gut. My previous orgasm had seemed to help me relax and made a note to explore that more later. I suddenly realized that the dildo was bigger than the majority of men and I had had little trouble accepting it in my back door. Perhaps I might be ready for the real thing, I thought. \n\nThat thought only lasted for a moment before my thought returned to my more immediate needs. I looked at the mirror and saw my ass flattened against the chair and my tilted pussy, exposed, wet, swollen, and gaping. I reached over and grabbing the egg, inserting it in my pussy. I left it turned off for the moment but enjoyed the feeling of it inside me. It exerted a little pressure against my slowly swelling G-spot and I clenched down on it with my PC muscles. \n\nThe sound from the TV re-directed my attention in that direction. I took a moment to figure out what was happening on the DVD. A lithe, athletic looking brunette with short hair and firm, small breasts was preparing to slide her strap on dildo into the ass of the blond kneeling in front of her. The target of her strap on was in turn engaged in an enthusiastic 69 with a buxom redhead beneath her. My arousal was suddenly jolted up several notches as I took in the scene before me. This definitely pushed some of my bisexual buttons and even came close to a few of my wilder erotica inspired fantasies. \n\nAlmost subconsciously, I began to ride the dildo that was buried in my rear passage as I watched the developing action on the screen before me. I could almost see the blond relaxing as the dildo slid into her butt. The dildo was not nearly as thick as the one in my own ass, but she seemed to be more than able to easily accept it. Her groans into the pussy of the redhead certainly seemed to indicate her enjoyment of being penetrated. \n\nBefore I realized it, I was thrusting up and down on the dildo and taking half of it on every stroke. I turned the egg on low and welcomed the sensation of it slowly throbbing against my G-spot. \n\nThe brunette on the DVD was rapidly thrusting into the blonde and I matched her pace on my own dildo without even thinking about it. My body seemed to be on autopilot. My mind was also on autopilot. Various scenes and fantasies flashed through my mind: the brunette fucking me, my fantasy man taking my ass for the first time, the tongue of the redhead pleasuring my clit. It all jumbled together in a mixed up collage of erotic images. My eyes glanced over to the mirror and I almost didn't recognize the woman it was reflecting. My hair was sweaty and plastered to my scalp. My entire body glistened with perspiration and I briefly became fixated on the obscene image of the dildo as I repeatedly drove it deep into my ass with increasing enthusiasm. I was the total image of sexual abandonment and need; an image that both shocked and further aroused me. \n\nI had increased the length of the thrusts to the point that the head of the dildo was pressing against the inner rings of my sphincter on the up strokes. I turned up the egg to medium power and it obediently responded to my needs. I experimented with clenching my muscles of my pussy and ass in time to the thrusts and was pleasantly surprised with the resulting sensations. I recognized the signs of my approaching orgasm. The burn in the muscles of my legs and ass returned but it seemed to just melt into all the other sensations that were flooding my body. I hadn't touched my clit for fear that it would set me off too soon. I was that close and I didn't want this new experience to end just yet. I was happily experiencing what I sometimes call an \"almost orgasm,\" and I wasn't ready to give that up.\n\nPreviously, my hands had either been resting on my thighs or the seat of the chair, assisting my lower body in rising and lowering myself on the chair. I moved them to my breasts and they softly caressed the curves of my tits. This was just a tease. My nipples craved attention. Soon, my fingers were pulling and pinching my engorged nips and bolts of lightning seemed to flow directly from them to my clit. The result was that I was pushed to the very edge of orgasm. I existed on the precipice, waiting for the coup de gras that was all I needed to give the release I increasingly needed. \n\nAll the while, the scene on the DVD was ratcheting up in intensity. I could see the blonde's ass cheeks clinching in synchronicity with the thrusts of the brunette. Her moans of pleasure increased in volume as a result of the dual action of the dildo and the redhead's talented mouth. It seemed as if she was on the edge of her own ultimate conclusion. Her screams of release into the redhead's pussy pushed me over the edge and my hand fell from my nipple and attacked my clit. I thrust the dildo hard into my ass and felt my own orgasm flow through my body like molten lava. I came, and came hard. My inflamed body jerked and thrashed while remaining anchored to the latex cock impaling my asshole. My mind flashed to the vision of a male lover's cock swelling, throbbing, and unloading his hot semen into the depths of my ass. \n\nI slumped back in the chair and floated for a long while in the fog of my post-orgasmic haze. The sounds from the DVD droned in the background and the egg buzzed on in my pussy. It was a while before I could manage to shut it off, and only after it had become a nuisance. \n\nI looked at myself in the mirror once again. Two things struck me in that image. The first was that I was a total wreck. I rarely recalled a time when I looked so totally disheveled. The second was how totally fucked I looked. I had what I called that \"rode hard and put up wet\" look that I usually only associated with my most satisfying and energetic sexual romps with a talented lover. It was not the look that I had ever previously associated with masturbation.\n\nMy ass was sore, but not in a totally unpleasant way. The soreness seemed to blend in with the other tingles and after shocks that I felt. I clenched my ass on the dildo a few times and it seemed to set off a new round of post orgasm tremors in my body. \n\nI finally decided that I needed to make a move and clean myself up. I was once again reminded of the empty feeling as I stood and allowed the dildo to slide from my ass. I noted that the chair was covered in my juices. I had squirted, as I often do when I have a really intense cum. This is especially true when my G-sport is being stimulated. After wiping up the fluid, I turned and looked at my ass in the mirror, expecting to see a gaping chasm. My anus had already closed and other than the shine of some left over lube, you couldn't really tell that I had just fucked my ass to oblivion and back. \n\nI took care of a few housekeeping items: turning off the TV, and grabbing the dildo and egg to be cleaned. I made my way to the bathroom and deposited them by the sink to be dealt with later. I felt the burn in my muscles as I moved and knew that it would probably be worse the following day. On top of that, my nipples ached from the self-abuse that had been administered to them. Soap and shampoo took care of my other immediate needs. I grabbed my now tepid wine as I made my way to bed. I took a few sips to quench my thirst and was soon sleeping contentedly. \n\nI was right. I awoke the following morning and my lower body ached with the soreness that I had only experienced after my most energetic workout at the gym. My asshole was sore too after the double workout I had given it with the plug and dildo. I quickly decided that a day of rest and relaxation was called for. Admittedly, there was some regret in that decision. \n\nI spent the majority of the day being lazy. A bagel, coffee, the Sunday paper, and morning news shows were enough to occupy my mind, at least for a while. However, that afternoon, in between paying bills and other weekend chores that a life on the road required, my mind did devote itself to some analysis of recent events. \n\nI have always been a fairly analytical person, both at work and in my personal life. I have a hard time just taking things as they come. I need to figure out how everything fits into my life and in what cubicle it should be stored. This had often been a problem in my previous relationships and I have frequently been accused of not having a romantic bone in my body. I don't feel that is true, but everything has its place in my life. My recent sexual exploration was no different.\n\nDuring this session of introspection, I came to a few conclusions. The first was that, yes, I did enjoy anal sex. I was ready to take the mental leap necessary to freely admit that, at least to myself. The second was that I was open to exploring it with future lovers, at least on a limited basis. The qualifier on that conclusion was based more on my hesitancy based on past experiences than my acceptance of future possibilities. Third, that I was ready to acknowledge, at least to my self, that anal eroticism was now officially part of my sexual repertoire. Fourth, that at least until I found a lover to share this part of me with, it would remain firmly ensconces as a part of my masturbatory life. I was left feeling content with my decisions and how they all fit into my new, more self-aware sexuality. \n\nI thought that the experiment was a success. I had entered into it with two goals in mind. The first was to discover if I had some sort of latent anal sexuality. The second was, based on the decision of part one, to build confidence in my ability to enjoy it. The recent events had definitely satisfied both goals. \n\nI must add, as a side note, that my earlier commitment to take a day off from sex was short lived. That night, beads were back in my ass while my big AC plug in massager did a number on my clit. The beads were a compromise, as I felt that my ass couldn't handle anything much larger, at least not without a few days rest. My session that night was much more relaxed and far less enthusiastic then the night before. My orgasm was a sweet and comforting release that was highlighted by the extraction of the beads as I reached my peak. \n\nAnal sex continued to be a major part of my masturbation sessions after that time. While common, it was not something I used extensively as I had in the week that I just described. It was something I saved for times when I had the time to relax and enjoy. The analytical part of my brain broke masturbation down into two categories. The first were what I thought of as \"housekeeping orgasms.\" Those were those that were necessary as part of the routine maintenance of my sexuality and body and were usually characterized as quick, goal driven sessions, often carried out in the morning as part of my preparations for the day or as a means to sleep better in the evening. The second type were my \"gourmet sessions.\" They were those where I could devote the time and energy to explore and bring myself to a long, slow building orgasm that were usually of the more earth shattering variety. Anal sex was usually reserved for the second variety, although a finger in my ass or a small toy was not unheard of in the previous type. \n\nAs I traveled the country for my job, I often stopped in adult stores and slowly added to my anal toy collection. Some were successes and some were failures that were later discarded, or vanished in the back of a drawer, or the bottom of a box. One of these was a large plug that I found I could accept, admittedly not very comfortably, but was really out of the range that my petite frame could handle. I found that I was not the \"size queen\" that I thought. \n\nWearing the plug under my clothes became a more common event. I tried wearing it to the gym once and found that I greatly enjoyed it. I finally broke down and bought a second plug and lube that found a permanent, discrete home at the bottom of my gym bag. I also discovered a vaginal toy called duotone balls that accompanied the plug in my bag and I often alternated using them, and on rare occasions used both simultaneously. They both made my time spent pedaling away on a stationary bike more enjoyable, not to mention some of the lower body weight training machines. ",
        "A few months later, my road of self-discovery had a highlight when I went to a convention in my old home city. I contacted my ex-roommate Judy and told her of my upcoming visit. She was happy to hear from me and was very insistent that I plan on staying over the following weekend with her. Admittedly, the idea was at the back of my mind before I called and it didn't take a lot of convincing on her part to get me to agree. Part of me was happy to spend time with a former lover. Part of me also knew that it was going to be my first opportunity to try out my new skills with someone I cared for and trusted. I suppose I was also seeking someone that I could share this new found part of my sexuality with. I don't really mean just in bed. I guess that I also felt the need for a friend I could talk to about it who I knew would be accepting and supportive. \n\nJudy insisted that I pack something appropriate to wear out and that we would hit the town. I knew that probably meant a nightclub and possibly one of the local lesbian clubs that she occasionally frequented. I added a \"LBD\" and a few of my more casual items from my wardrobe for the trip. Of course, my anal kit was now an established part of my travel items and I had even added some things that were left permanently packed. \n\nThe weekend spent with Judy, and the emotional build-up before, was wonderful. She was initially pleasantly surprised and shocked over the changes that had occurred in me since we were last together. We spent a good part of the weekend in bed playing. Much of that play was focused on providing pleasure to each other's assholes. \n\nI won't go into a lot of the details of that weekend other than to mention a few of my more notable experiences. The first was that giving each other enemas was a rather unique and intimate experience and one that I have since come to enjoy more with other lovers. We spent a lot of time kissing and just holding each other while our bottoms filled and I thoroughly loved it. The second was that I found I loved having her tongue rimming my ass. She had tried this before, but I guess my mental reservations kept me from being open to the experience. My orgasm with her tongue in my ass and fingers on my clit was one for the record books. Third, our excursion to a lesbian club with both our asses plugged was so very hot. I can't remember a time when I got so horny from just dancing and making out with someone. The plug was a constant reminder of what was to come later after we got back to her apartment and my pussy was literally drooling the entire time. Last, but not least, my ass was fucked for the first time by someone else. The trip to the club was followed by her removing my plug and replacing it with a strap on dildo. While not as big as the dildo I used for that purpose, it was more than enough to do a good job. I found I loved the feel of her hips slamming into my ass cheeks, the feeling of her hands holding my hips and I even liked the way she later spanked my ass in time with her thrusts. My orgasm was no less intense, and perhaps more so, than those produced by my solo experiences. It was certainly nice to have someone to snuggle with after my orgasm exploded in my body.\n\nAs I mentioned earlier, I was in need of someone to talk to about my anal discoveries and there was no one better than Judy. She was largely responsible for my journey of discovery and served as a good metric for my progress. She turned out to be more than just a sympathetic, understanding listener. She turned into a good mentor as well. She was free with her suggestions and personal recommendations for further experimentation. What few areas that I lacked in the area of confidence were quickly resolved by our pillow talk discussions. Of course, the fact that these discussions were spread out between some very satisfying romps, didn't hurt at all. She even made some suggestions about how to go about \"training\" a man to make love to my ass. This topic was something that was starting to pop up on my radar screen on a more frequent basis. I think my weekend with Judy made me finally recognize the fact that I was over my past trauma and ready to move on and explore with a male lover. \n\nMy farewell with Judy was sad, joyous, and overlaid with more than a little residual horniness. We shared kisses and tears as we said our goodbyes. That weekend spent with her was one that I can clearly point out as a turning point in my sexual history. Sometimes the word epiphany comes to mind. \n\nI returned to my hum drum, largely non-social life of work and masturbation. I was starting to make a few friends, but none that I could share the intimate details of my life, at least not like I could with Judy. \n\nOn one business trip to San Francisco I stopped into a really cool store that was largely devoted to toys. It became an instant favorite for a couple of reasons. First, it was owned and ran by women. Second, as I found out later, most of the employees were also partial owners through an employee ownership plan. Third, they only sold items that passed the employees \"road test.\" Lastly, they were very open about discussing the pros and cons of the items they sold. It was the first time that I can really say that anyone actually gave me anything approaching customer service at that kind of store. \n\nI wound up buying my first strap on harness and two dildos to go with it. One of the dildos was medium sized and similar to the one that Judy had used on me. The second was larger intended more for vaginal use than anal. I didn't have a lover in mind to use these with, but I thought a selection was important for any future lovers. As a matter of fact, I have no idea why I even bought them other than the hope that I may have someone to share them with in the future. It was becoming increasingly clear to me that I was in desperate need of someone to share my bed. \n\nThat eventually did happen a few weeks later. I met Cathy when a co-worker almost forced me to go with her and her girlfriend to a lesbian club one weekend. The co-worker was openly gay and she seemed to immediately recognize a similar attraction to the fairer sex in me. \n\nAnyway, Cathy and I became an item, at least to a limited extent. Cathy is married and she and her husband have an agreement that allows her to go out occasionally in search of feminine company that her sexuality required. That was what she was doing at the club that night; that is, searching for a wife for the night. What can I say? I was a little drunk, feeling care free, and above all, very horny and needy. Our relationship evolved into something that would best be described as \"fuck buddies.\" We both knew it was temporary and had no future, but we both were satisfied with the short term benefits of our relationship. She was devoted to her husband and family, but at the same time she had needs that were not satisfied by home and hearth. She is a wonderful, experienced lover, but unfortunately did not share my new found love of incorporating anal eroticism into the bedroom. It wasn't that my ass was totally ignored, nor hers for that matter, but it never was more than a occasional part of our sex together. It remained no more than an occasional diversion that she happily engaged in, although largely just to please me.\n\nCathy and I are still good friends to this day, and occasional lovers. Her place is permanently marked in my memory because she filled a void in my life and because I was with her when I met Gary. I won't go into the details about how I met Gary at this time. That is another story in and of itself that I hope to share with you one day. \n\nAfter we met, Gary and I became lovers on our third date. I was itchy and horny by that point but forced myself to take it slow. From the beginning, I saw more in him than a potential fuck buddy and I was determined to build the basis of a relationship before taking him into my bed. My discipline surprised me. I was sexually attracted to him from the beginning and that attraction continued to simmer and build through our first two dates. \n\nHe turned out to be a wonderful lover, I am happy to say. He was everything I had dreamed of in a lover, tough and forceful when I needed him to be, and sensitive and gentle when I needed that too. I thought of him as my \"lesbian trapped in a man's body.\" He entered my life at a point when I had mostly given up on the concept of a \"Mr. Right.\" At that point in my life I would have simply been happy with a \"Mr. Right Now.\" \n\nIt amazed me how he could somehow sense my needs, even when I hadn't even given voice to them. It was like he had a sixth sense. That is not to say that I was totally silent on the subject of my needs. I almost immediately developed the kind of trust and intimacy with him that allowed me to open up and share all my dreams, fantasies, kinks, and sexual needs. That included my sexual history. When it came up, I shared my failed early experiences with anal and even some of my successful recent experiences. I told him that I was open to exploring that with him, but I was waiting for the right time. He accepted that and I never felt that I was pressured by him in any way. When it happened, it would be when I was ready and on my terms. That was a huge relief for me. \n\nI eventually shared a few details of my bisexuality with him. As with anal sex, he was accepting and never pushy about that. That was an even bigger relief to me. My status as a bisexual woman had been a deal breaker with more than a few men in my past. It seemed that most men were either threatened by it, or saw as it an opportunity for me to serve the role of providing them their porn inspired threesome fantasies. The few times that I gave in to this desire to live out their fantasies, I found that they often featured themselves in the role as both the male porno stud and director. These experiences were mostly frustrating when the guy turned out to be neither mentally or physically capable of living up to the details of his fantasy, much less mine. \n\nGary, on the other hand, seemed relaxed and comfortable with my proclamations about my sexuality. He was a widower; his wife had been killed in a traffic accident a few years before. She was bi as well and he, like Cathy's husband, had seemed to work out his issues with it and learned to accept it as just part of her sexuality that he was not able to satisfy, at least directly. I had always envied Cathy's relationship as some sort of ideal and finding Gary seemed to help me find my own ideal. \n\nI had been dating Gary for a little over a month when we went out to dinner to celebrate his birthday. While sitting in the restaurant I leaned over and whispered to him, \"I have a special present for you later.\" He saw the playful gleam in my eye and knew something was up. \n\n\"Yea, what's that?\" he asked.\n\n\"It's something no man has ever had before,\" I replied, smiling at him.\n\n\"Care to elaborate,\" he asked. I am sure he knew where this was going but he was more than willing to continue playing my game. I was sure that he was just enjoying having me put words to it. \n\n\"Well, I was trying to come up with a very special birthday present for you and I thought that my anal cherry would qualify as being special,\" I whispered. \n\n\"Yea...\" he stumbled for a moment, \"I suppose that would definitely qualify as being special.\" \n\n\"As a matter of fact, its all ready for you right now.\" I continued.\n\n\"How's that?\" he inquired. \n\n\"Well, I made sure it was all clean and lubed for you, and right now I'm sitting here with an anal plug in my tight little asshole so that its ready to be filled my your big ole cock. By the way, I'm not wearing any panties either and I have to squeeze the plug real tight to hold it in so that I don't embarrass myself here in the middle of the restaurant.\" \n\nMy hand that was resting on his thigh felt his cock lurch in his slacks in response to the bombshell that I had just delivered. It was clear that I had his attention and the teasing nature of my words got his cock's attention as well. Needless to say, we didn't stay for dessert, at least not at the restaurant. Dessert was waiting for us in my bedroom after we got home. \n\nHmmm, what can I say about the first time I experienced Gary's cock in my ass: hot, intimate, lusty, passionate, and above all, loving. As it turned out, he had far more patience then I did. I was in heat and ready to feel him driving into my asshole. I think that fact amused him. He took advantage of it and used it to tease me, first with his mouth and tongue, and later with his cock driving into my pussy. During this time, he teased my ass by gently nudging the plug that was still in me, keeping my needy ass ready for him. \n\nI had always loved his very thick, slightly above average length cock in my pussy. It filled me and satisfied me in ways that I could have never imagined. His patience, staying power and endurance were better than any previous male lover's. I loved the way that he always made sure I came, usually several times, before he filled my pussy with his seed. With all that said, vaginal intercourse that night was just a warm up, just foreplay. Nevertheless, he did bring me to a great orgasm as he fucked my pussy.\n\nAs I recovered from my orgasm, I saw him reaching for the lube that I had left strategically placed on my nightstand. I felt a rush of excitement flow through my body as I realized now was the time. I flipped over into a doggy position as he lubed his cock. I felt him tugging on the plug and gasped as it slid out, leaving me with that empty feeling that I knew was going to be short lived this time. The feeling of the plug was replaced by that of his thick finger as he lubed up the wrinkled opening to my ass. I concentrated on relaxing and getting into that calm place that I had practiced so many times before. His finger entered me and spread additional lube inside. I unconsciously grunted when a second slippery finger joined the first in my tunnel.  \n\n\"You OK?\" he asked, a little concerned.\n\n\"Yea, feels good, go on,\" I replied, trying to reassure him. He continued lubing me, refreshing the lube that had previously been applied on the plug.\n\nI felt his fingers withdraw and were quickly replaced by the head of his cock against my anus. Gary has a large head on his cock that I loved in my pussy but I knew that it would be a little difficult to accept in my ass. It was not like the cone shaped plug that tapered gradually, the first part of his cock to enter me would be the widest. \n\nI had thought that Gary would push into me quickly and had at least mentally resigned myself to this fact. What he did next surprised me, and made me appreciate him as a lover even more.\n\n\"I'm going to hold still, just push back onto me as fast as you are comfortable with,\" he said. \n\nAnd that is exactly what I did. I won't say that there wasn't some pain. Maybe pain is not accurate. Let's just say there was some discomfort, but when I felt the full girth of his cock head push into my ass and my sphincter sealed around his shaft, I felt a mixture of emotions and feelings: accomplishment, pride, relief, love, and yes, more than just a little pleasure. \n\nI took a moment to catch my breath and then I continued on, pushing his cock deeper and deeper into my ass. This was something I was familiar with and confident I could handle. It was little different than inserting the plug or dildo with a few noticeable exceptions. The first being that after I got the plug fully inserted, I was able to close around the neck and my sphincter was not fully stretched. The second, was that Gary was thicker than the dildo and kept my ass stretched more than I had ever experienced. The third was this was warm, throbbing male flesh of a man I cared deeply for and not the cold, unfeeling latex of a plug or dildo to which I had become accustomed.\n\nThe feeling of his mushroom shaped cock head spreading me as I worked him in deeper was also something new. With that said, I wouldn't say that it was unpleasant, just different. Another thing that I had not considered was that his cock was warm, even warmer than my latex or silicone toys that I pre-heated in warm water. I also thought I could feel his pulse beating in his cock. \n\nI was sort of lost in this myriad of sensations and was surprised when I felt my ass checks come to rest against his hips. I wiggled my ass around a little to make sure I had it all and another fraction of an inch slipped in. I just let him soak in my ass for a moment and absorbed all the different sensations coming from my bottom.\n\n\"Are you OK,\" Gary asked, the love and concern evident in his voice.\n\n\"Mmmm, yea, lovely... feels good... just give me a minute,\" I groaned. \n\n\"Take all the time you need, I'm not going anywhere,\" he chuckled.\n\n\"Good, I'm glad,\" I responded and experimentally clasped my muscles around my lover's cock. \n\n\"Oh yeah, that felt good,\" he exclaimed.\n\n\"Yea, I liked it too,\" I responded.\n\nI started moving back and forth slowly, fucking his cock in small increments that increased as my confidence and comfort level grew. I felt his hands on my back and ass caressing me as I tried him on for size. \n\nEncouraged and emboldened by my body's response, I asked my lover to join in on the activities, \"Fuck me Gary, slowly at first, fuck my ass, please...\" I pled, the lust almost dripping from my words. . \n\nGary responded by gently grasping my hips. His cock slid an inch from my ass and slowly returned to its resting place deep in me before stopping for a moment. He continued to repeat this, over and over, the length of his strokes gradually increasing. I lowered my head onto my arms and just allowed him to take over control. \n\nThat was something that surprised me, that is, the control aspect of him fucking my ass. Sex with Gary had always been more of a give and take proposition. That was not what I felt at that moment though. I had given up control to him to fuck me, to use my ass, and in so doing, I was receiving pleasure in return. The quicker and deeper his thrusts became, the more this feeling grew in me.\n\nGary was taking his time, slowly increasing the intensity of the fucking that he was delivering to my ass. I recognized that he was being his gentle, sensitive self and making sure that he was giving me time to adjust. I was more than comfortable now and ready for more and decided that I needed to tell him so. My mind and body was ready for than just gentle lovemaking. I needed to be fucked and fucked hard and fast. \n\n\"Gary, baby?\"\n\n\"Yes sweetie?\" he replied.\n\n\"I need you to fuck me now, I'm ready. Take me... use me... give me your best,\" I gasped. \"I'm not a china doll. I'll let you know if it's to much, OK? I promise,\" I said, my lust almost dripping from my words.\n\nIt wasn't as if Gary immediately began to plunder my ass with the bludgeon of his cock, but the rate of the increased tempo certainly picked up its pace. My cries of pleasure were soon echoing in my bedroom and my hips involuntarily snapped back to meet his thrusts, crushing my ass cheeks against his hips and flinging his low hanging balls against my splayed pussy lips. My ass was completely open and accepting his cock, allowing its slippery length to slide freely into my hot depths. I decided that maybe I was a little too open and starting to contract my ass around his cock as it slid inwards. He seemed to appreciate this additional stimulus as much as I did. His grunts were soon mixing with my own cries of joy. \n\n\"Oh yes... fuck me... fuck my ass with your cock...\" I unthinkingly cried out in passion. Gary responded by increasing the pace, power and the urgency of his thrusts.\n\nMy level of arousal had increased to the point that I knew, from my solo experiences, that I needed more. I slid my hand down to my clit and began to work it over. I started first with a gentle caress but that soon escalated to more urgent rubbing and pinches. The rough treatment of my clit seemed to blend perfectly with the odd pain/pleasure emanating from my ass. ",
        "My arousal was quickly reaching a peak and I knew I was not far from orgasm. I encouraged Gary to add to the myriad of sensations bombarding my body and mind. \n\n\"Gary... spank me... please... spank my ass,\" I cried out.\n\nHis hand landed on my exposed ass with a mild swat. It wasn't what I had in mind at all, and I told him so.\n\n\"Harder, spank me harder,\" I directed. The force of the blows slowly increased as I provided direction on what I needed and he adjusted their strength accordingly. The spanking of my reddening ass was yet another sensation that blended into what was quickly becoming a case of sensory overload. \n\nMy orgasm seemingly came out of nowhere and I was soon loudly screaming in orgasmic pleasure. I pinched my clit hard and a bolt of pleasure/pain shot through my body like a bolt of lightning. My ass contracted wildly around Gary's still thrusting cock in time with my uterine contractions. I vaguely heard Gary's characteristic, masculine grunts of pleasure and knew he was close to cumming himself. He didn't slow down his thrusts one bit and I felt my quivering body rolling into another orgasm. My first orgasm just flowed into the next and I was barely able to distinguish where one stopped and the other started. As orgasm flowed through me, I recognized the now familiar bellow that usually signals the beginning of Gary's release.\n\nGary's cock swelled and throbbed as his cock spewed deep into my ass. He held himself deep in my ass and jerked in time with the jets of cum that he was pumping into me. I could feel him cumming in me like I had never experienced with a man in my pussy. It was hot, wet and wonderful and the feeling of it was enough to push me over into a third smaller orgasm. \n\nI was exhausted. I slumped down onto my belly and Gary followed me, his cock still embedded in my ass. He was courteously supporting his weight above me but the feel of him on top of me was reassuring and intimate as I languished in my full body haze.  \n\nAfter a few minutes, I squeezed his wilting cock with my ass. It felt nice. That signaled to him that I had at least partially returned to the land of the living. \n\n\"Ready?\" he asked.\n\n\"MMmmmm,\" I managed to moan. \n\nHis semi-rigid cock slid out of my ass slowly. It was a lot nicer than removing the plug and I didn't have quite the empty feeling when his shrunken cock retreated. He reclined next to me and draped his large arm over me as I continued my recovery. It felt good to be held by him after such a huge orgasmic experience. The physical contact was reassuring and allowed us to re-connect after our orgasms. \n\nHe eventually got up, went to the bathroom to pee and clean up. I could hear him washing up in the bathroom and made a note that he was as conscientious about hygiene as I was. He returned with a warm washcloth to clean me up as well, for which I was eternally grateful. We settled into a comforting snuggle and drifted off to sleep. \n\nGary's birthday and his present was a turning point in our relationship. It got a lot deeper soon after that. The experience that I had shared with him had opened the door to a new level of intimacy, love, and desire between us. I moved in with him a few months later and that eventually led to marriage a few years later. A few more years down the road and we added Tracey to our relationship and we now live happily in a triad. \n\nGary and I continue to enjoy and share the joys of anal sex. Over the years we have continue to experiment and have added many techniques to the things we enjoy together. Anal sex has become a mainstay of our sex life when Tracey or I are having our periods. Gary introduced me to swinging and I expanded my circle of anal lovers to a few select others. When Tracey came along, I became her mentor for many things, including anal sex. She is now, if possible, an even more devoted fan of anal eroticism than I am. She particularly likes double penetration with Gary and me sharing her ass and pussy. \n\nWell, that's it. This turned out a lot longer than I had originally intended and I hope you managed to struggle through the more clinical parts. I suppose that you did if you are reading this. Anyway, I appreciate you devoting the time to get to the finish line. \n\n+++++++++++++++++++++\n\nPlease take a moment to vote and comment if you enjoyed this story. Please check out my other stories as well. Stay tuned to this same bat time and bat channel for my next contribution. Thank you."
    ],
    "authorname": "CorsetLvr",
    "tags": [
        "anal",
        "toys",
        "anal masturbation",
        "female masturbation"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/my-bottom-and-me"
}