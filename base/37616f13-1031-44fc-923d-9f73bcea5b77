{
    "title": "Good Hearted Ch. 02",
    "pages": [
        "When Ethan woke the next morning, he felt different. It wasn't just his first kiss and first blow-job, but something else entirely. Then he remembered how is cock grew and he threw back his blankets and pulled down the front of his underwear. Alas, it was just as normal as always. Maybe it only grows bigger when you really want it to, thought Ethan. A wistful smile crept across his face. His encounter with the nurse, Becky, was fresh in his mind. Just thinking about it caused his cock to swell. It took eighteen years for his first sexual encounter of any kind, and Ethan prayed silently that it wouldn't take that long for his second. \n\nHe rolled out of bed and got ready for school. As he headed for the door, he stuck his head into his mother's room just to reassure himself that she was home safely from her night shift at the hospital. She was wrapped in her blankets, deep in dreamland. Ethan wished her happy dreams and grabbed a bagel from the bag in the kitchen and a bottle of orange juice from the refrigerator before he let himself out the front door and began his sixteen block walk to school.\n\nWhen he arrived at school, Ethan could feel eyes following him. From each clique of students gathered around the outdoor commons, he knew they were watching him and talking about him. In his head, Ethan wished they would just leave him alone. He wished they would stop being so selfish and focus on making the world a better place, instead of holding up their classmates to their imaginary standards. When he looked up, Ethan couldn't find anyone paying him any attention at all.\n\n\"Hello Ethan,\" a quiet familiar voice called from behind him. He turned to face her with a smile. \"It's great to see you in school. There was a rumor that you were jumped and nearly beaten to death. And yesterday three gang members were arrested right over there and taken away. The whole school was talking about it. Everyone says it's because they tried to kill you. It doesn't look like they tried very hard, I don't even see any bruises.\"\n\nAlexa Wilson had been in the same grade as Ethan since kindergarten. She was his oldest acquaintance, his best friend, though Ethan was a loner and Alexa kept to herself as well. Like Ethan, she only had one parent, her father, who kept strict watch over her. Alexa was an honor roll student like Ethan. She was a talented musician, which Ethan was not. But as far as Ethan knew, she'd never been on a date either, so that was another thing they had in common. \n\n\"Well Lexa, you can see the stories were greatly exaggerated. I got beat up a little but I am ok now.\" \n\nAlexa looked visibly relieved. Ethan had no idea how much Alexa liked him. Since the fourth grade she had a crush on Ethan, but she knew her father wouldn't approve. She never said anything to Ethan, and even now, when she thought she had lost him to violence, she couldn't work up the nerve to tell him the truth. Alexa had resigned herself to being dateless until college. Maybe later if her father had his way. He was loving, but he was very restrictive.\n\n\"You know Lex, that beating may have finally knocked some sense into me. You are the only girl I have ever liked, even when we were little, and I have never asked you out. I am going to change that. Would you go out with me? On a date?\" \n\nHis words jolted her. She never thought Ethan would ever make the first move. She smiled but said nothing, trying to put her thoughts into some semblance of logic. Ethan had no idea where the courage to ask her out had come from. Maybe it came from the confidence that grew when Becky told him he was a great kisser. Maybe it stemmed from his near-death experience that jolted him out of his rut. In any case, he had asked the question he'd never had the courage to ask.\n\n\"Oh Ethan, I'd love to go on a date with you. But my father would never allow it. He won't let me date anyone. Ever!\" she said with an apologetic sigh.\n\n\"Not even if I ask him nicely?\" joked Ethan, acting more confident than he felt, trying to put Alexa at ease. \"Do you think he'd give me a chance to ask?\"\n\n\"I don't know Ethan. He can be very intimidating. Let me think about it.\"\n\nEthan wished he could find a way to make Alexa happy and to make her father understand he would protect his daughter. \n\n\"The offer stands until you tell me yes or no. I am not going to give up. Anyway, I have to go and see my teachers and get my assignments so I can start catching up on my homework,\" he said as he started toward the entrance to the building. \"Let's sit together at lunch, OK?\"\n\n\"Yeah, ok, sure,\" Alexa stammered. She'd sat at the same table as Ethan before, hundreds of times, but never had they sat together as part of a plan. \"I'll see you then.\" But Ethan was gone. Alexa couldn't help but wonder what had come over Ethan. He seemed so much more mature than before.\n\nEthan's classes passed like molasses dripping in winter. Nothing his teachers said held his interest like Alexa. He accumulated a mountain to assignments to catch up on and his mind was only on her. She was the female equivalent of Ethan, smaller than most of the girls in the senior class. While she was attractive, she wasn't one of the pretty or popular girls. Because of her bookish ways, and her over-protective father, she wasn't considered to be dateable when she was considered at all. But when she smiled, everything changed. When Alexa smiled, her face glowed a light from her soul. She didn't know how much it buoyed Ethan's heart when she smiled at him. When she smiled, she was more than pretty, she was the most beautiful thing on earth or in the heavens. Ethan thought of her smile and couldn't help but smile himself.\n\n\"Ethan Rome!\" rebuked Mr. Miller, his Calculus teacher, breaking his reverie. \"Since you find differential equations so amusing, why don't you explain to the class what they are and how they are different from each other.\"\n\nEthan found his daydream shattered and his real life a study in panic. He desperately wished he could explain the four types of differential equations in such a way that everyone would understand them and Mr. Miller would be happy and leave him be.\n\n\"The four types of basic differential equations are separable, homogenous, linear and exact. While their names give you an idea of their differences, I find it easy to classify equations when I look at them this way...\" Ethan started as he rose from his seat and approached the board. He continued to speak for fifteen minutes and when he was done he looked down at the floor.\n\n\"That seems so much easier to understand Mr. Miller, is he right?\" asked Caroline Mack from one of the front row desks. \n\n\"Yes Miss Mack, Ethan is absolutely correct,\" he replied. \"I hope you all took good notes. Ethan has given us all new insights in how to approach classifying differential equations.\"\n\nHe turned to face Ethan. \"He also has a gift for mathematics and would make an excellent math instructor if he so desired.\"\n\nEthan blushed at the praise. He rushed to return to his seat and to fade from the spotlight. The class continued and Ethan tried to pay attention, but his mind was locked onto thoughts of Alexa. The bell finally rang and Ethan hurried for the door. On his way to the dining hall, Ethan felt a shove from the side. He turned to figure out who was accosting him and found it was a freshman student. The freshman hadn't meant to run into Ethan, but he had no choice. Four of the school's biggest bullies were teasing him. All four were senior lettermen on the football team and Ethan was sure it would take all four of their IQs to reach a measurable number. \n\n\"Hey look, it's the Timex nerd, Ethan Rome!\" called one of the pimple-faced meatheads. \"He takes a lickin' and keeps on tickin'!\" \n\nThey all laughed. Ethan silently wished he could make those meatheads spend their time sticking up for little guys like this freshman instead of picking on people because they were bigger and stronger. Ethan grabbed the abused freshman and stepped between him and the bullies. He stood his ground when the four lineman approached to continue their torment of the frightened young teen.\n\n\"You guys are better than this,\" Ethan admonished quietly, his voice so low that only the bullies could hear. \"Don't you remember back in third grade when the sixth graders picked on you? I know you hated it. I know it made you cry. Now you guys could rule the school and make sure none of the little guys get picked on anymore and you are doing the picking! It just seems like a waste of time to me. Wouldn't you rather be heroes?\" \n\nThe words washed over the four bigger seniors like icy water. They stopped their forward progress and gave his words some real thought. Then they looked at each other and Ethan could see the shame forming in their eyes. Shame for becoming the kind of bullies they used to loathe.\n\n\"Aw man, Ethan. Why'd you have to go and do that? I forgot all about those bullies,\" said one of the football players. \"Come here kid!\" he gestured to the freshman. \"We thought we were being funny and I guess we were being assholes. We're sorry. It won't happen again. Will it guys?\" They all murmured apologies and tried to smooth it over with the victim. \n\nEthan resumed his walk to the dining area where he finally caught a glimpse of Alexa in the sea of tables and teenagers. He strode up to her.\n\n\"Hey, is this seat taken?\" he asked with a smile.\n\n\"I'm saving it for someone special,\" she replied with a mischievous grin.\n\n\"Lucky for me, my mom thinks I'm someone special, so I guess you are saving it for me.\"\n\n\"Then you should sit down before someone EXTRA special comes along,\" she teased. Ethan sat in a rush.\n\n\"I've got it all figured out,\" stated Ethan, changing the subject. \"Your dad is a lawyer, right?\" Alexa nodded. \"Then I'll just present my case as your date and protector and he will review the evidence and find in my favor. Simple, right?\"\n\n\"Oh Ethan! You wouldn't stand a chance,\" she said chucking her shoulder against his. \"He's brutal in the courtroom. He puts away criminals for a living. Just wait before asking him. I'll try to get him in the mood to say yes.\"\n\n\"How long?\"\n\n\"Until after the funeral.\"\n\n\"What funeral?\"\n\n\"His.\" And they both broke up laughing.\n\n\"Well, I can't actually afford to take you on a date yet, so don't get too worried. First, I need to get a job, then I need to get paid, and THEN I'll have the wherewithal to properly ask your father's permission to date his only daughter, the goddess of my heart.\"\n\nAlexa blushed bright red and turned her face toward the table. She secretly wished Ethan WOULD ask her father and her father WOULD give his blessing. She wanted to go on a date with Ethan in the worst way. She wanted Ethan to be her first boyfriend and her first kiss. She tried to think of something else. In her heart she knew these thoughts would only leave her frustrated and lonely. But she felt hopeful that Ethan would somehow make her father see it would be alright for her to go on a date with a boy. Especially one so kind-hearted as Ethan Rome.\n\nEthan met with Alexa after the final bell. \n\n\"I really can't stay too long, my dad gets worried and upset if I don't get home and call him by 3:30 each day. I'll see you tomorrow?\" she asked hopefully, clutching her violin to her chest, her book bag slung over her shoulder.\n\n\"You are going to see so much of me you are going to think we are Siamese twins. I've decided you are going to be my first girlfriend Alexa Wilson,\" stated Ethan with only a bit of a boast. \"I can't believe it's taken me 12 years to figure it out.\"\n\n\"Me either,\" answered Alexa with another blush. \"I guess I'll see you tomorrow.\" She turned and walked away. Ethan continued to watch her, until she was at the end of the school grounds. When she turned and caught his eye and smiled, Ethan's heart filled with joy. He flashed a broad smile back. Then he turned and fairly sprinted downtown to the library. \n\n\"I have to give my notice as a volunteer,\" he explained to Helen Walters, the circulation librarian who managed the volunteers. \"You see, I know this girl, and I kind of want to take her on a date, on a hundred dates, and my looks being what they are, I figured a job would help so I could actually pay for the dates, and you know what I mean, right? You were young and in love once, I am sure.\" \n\n\"What do you mean 'were young and in love once'? I am not THAT old Ethan Rome. But if it's a job you are looking for, maybe I can help. What kind of job are you looking for?\"\n\n\"Something part-time that pays well enough, I guess. I can only work after school and on weekends.\"\n\n\"It just so happens we have a job as an at-large tutor that is right up your ally. We were going to mention it to you, but you seemed so content doing your own thing we never brought it up.\"\n\n\"What does an at-large tutor do?\" asked Ethan, very much interested.\n\n\"Most of our tutors are subject-specific and age-range specific. An at-large tutor works with different age students and different subject matters, probably on a daily basis. That's why we thought you were ideal for the job. You have always had a way with the other children and you know a lot about a lot of different subjects. How about we give it a trial run for two weeks and then see if you like it as much as I hope?\" she offered.\n\n\"Sounds like a deal to me. When can I start?\" Ethan asked with a broad smile.\n\n\"In about fifteen minutes,\" the librarian replied. \n\n\"Why fifteen minutes?\" asked Ethan.\n\n\"It's going to take that long to get your paperwork done and get you a time card number so you can clock in and get to work,\" she laughed. \"But don't worry, we always have more kids that need help than tutors who can help them.\"\n\nFifteen minutes later Ethan found himself seated in one of the study rooms of the libraries second floor. Students who needed assistance would come to his room and he would help them either alone or in pairs if they were needing help with the same subject. There was a timid knock at the door. A junior high student that Ethan knew by sight was standing there.\n\n\"Hector Reyes! Come in. You get to be my first official pupil.\" \n\nHector was big boy for his age. At 13 he already had hair sprouting on his upper lip, dark like the thick hair covering his head. His English was good enough for Hector to be understood.\n\n\"Mr. Rome-a,\" he started formally. \"I am needing help with my algebra.\" \n\n\"First, Hector, call me Ethan,\" Ethan replied with a smile. \"Second, you can relax, I am fluent in algebra. Come sit, let's see what you need and how I can help you get it.\" In his head, Ethan wished he could speak Spanish so that Hector could understand what he was trying to communicate better.\n\nThe two reviewed Hector's homework and Ethan began to explain the logic of algebra to Hector and the pair worked for two hours before a knock at the door interrupted them. Hector's father was there to pick up his son.\n\n\"Papa, this is Mr. Ethan Rome-a,\" Hector said rising. \"He has helped me to understand algebra so much better.\"\n\n\"Your Spanish is impressive, Mr. Ethan,\" stated the elder Reyes, extending his hand. \"Where did you learn it?\" \n\nThis caught Ethan by surprise. He hadn't been speaking Spanish to Hector, though Hector had been speaking better English during the session. Unsure if Hector's father was pulling a joke or not, Ethan went along with it.\n\n\"I guess I picked it up on the streets,\" he replied sheepishly, not knowing what else to say.\n\n\"It's very impressive. Thank you for helping my son. If it's not too much trouble, can he continue to come back to see you until he catches up with his classmates? He's going to be the first Reyes to go to college and be somebody!\"\n\n\"Papa, I don't want to go to college. I want to go to work like you and my uncles.\"\n\n\"No son, you won't be going to work like your uncles and me. You are going to be a boss, a foreman. You are going to run crews of guys like your uncles and me. You are smart and you are strong. You will be someone special!\"\n\n\"I guess I will see you tomorrow, Ethan,\" said Hector as he walked out with his father. \"I am understanding algebra much better. Thank you.\"\n\nIt was nearing six o'clock and no other students were waiting to see a tutor, so Ethan made his way down to the main desk to clock out for the night. The librarian was placing a stack of books that needed to be re-shelved on one of the carts where the books were segregated. Each cart carried books for a particular floor. They accumulated all day until they could be returned to the stacks. \n\n\"Let me help you with those,\" said Ethan with a smile. \"I can get them back on the shelves in a minute.\" He grabbed two carts and noted which sections the books came from. One cart he put in dumbwaiter for the fifth floor and the other in a dumbwaiter for the sixth floor. \"If you send up four and three when I send the carts down, it won't take me very long to get these back in the stacks. I know you have more cataloging to do.\"\n\n\"You are always so helpful, Ethan. You have a good heart. But shelving six carts of books will take two hours. Let me help you.\" \n\nEthan shook his head and called over his shoulder as he jogged up the broad marble staircase that rose the six floors up the center of the main city library, \"I got this. No worries. I'll have it done in fifteen minutes.\"\n\nHe climbed to the top, two steps at a time, and reached the sixth floor just as the rickety dumbwaiter full of books rattled to a stop. He opened the outer door and the inner according door and pulled the cart out. Ethan glanced over the cart of books, reading each Library of Congress number before he started moving through the stacks. Without breaking stride, and barely slowing down, he slid the volumes exactly in place on each shelf, precisely where they belonged. Ethan didn't even notice that he wasn't looking at the spine of each book again as he moved through the stacks. He would reach a spot where a book belonged and he would pull the correct volume of the cart and slip it into place. He re-shelved thirty books on the sixth floor in under three minutes. He shoved the cart back into the dumbwaiter and sent it rattling down to the circulation desk.\n\nThe loaded dumbwaiter was waiting on five so he unloaded that cart, glanced at their catalog numbers, and moved through the stacks quickly and efficiently. Ethan never back-tracked, never rechecked the spine, never missed. He sent the book cart back down and headed to the fourth floor where another full cart was waiting. He jogged through the stacks, sliding volumes in their proper places and moving on. Ethan didn't notice his new ability to memorize an entire cart of books with a glance. To him it felt old-hat, both normal and natural. In short work he was back on the first floor, gathering his personal belongings. Re-shelving six carts of books on six floors took him less than fifteen minutes.\n\n\"Ethan, one minute please,\" said Helen as he was getting his coat on. \"Why didn't you put bilingual on your paperwork?\"\n\n\"I'm not bilingual, Mrs. Walters. I only speak English,\" he replied honestly.\n\n\"Mr. Reyes thinks otherwise. He told Mrs. Altuvia that he spoke to you and thought you were a nice young man. Did you speak to Mr. Reyes?\" \n\n\"Yes, I did,\" he admitted. \"But we only spoke in English.\"\n\n\"That's odd. Mr. Reyes always speaks to Mrs. Altuvia is our bilingual librarian. She is the only person who ever speaks to Mr. Reyes. Mr. Reyes doesn't speak English.\"\n\nEthan didn't know what to say. He carried on a conversation with the man a half hour before. \n\n\"Is Mrs. Altuvia still in the back? I'd like to speak to her.\" Helen Walters nodded and Ethan walked around the long counter and through the door to the open office littered with desks, books, papers and forms. \n\n\"Mrs. Altuvia, can I speak to you for a minute?\"",
        "\"Certainly Ethan. And let me tell you much we missed you while you were gone. It's such a delight to see you back with us. And also let me add what a great first impression you made on Mr. Reyes. He was delighted at how respectful and thoughtful you were with his son. He was also impressed by your easy conversation in Spanish.\"\n\n\"That's just it, Mrs. Altuvia. I didn't speak Spanish with him. I don't know how to speak Spanish. His English was very good, almost without a trace of accent.\"\n\n\"Ethan, you speak wonderful Spanish. I am quite impressed. You have all the proper tenses and forms and the correct inflections,\" she complimented.\n\n\"I am confused,\" Ethan admitted. \"I've never spoken Spanish.\"\n\nMrs. Altuvia laughed. \"Stop being so modest Ethan. What do you think you are speaking right now?\"\n\n\"English, of course,\" he replied confused.\n\n\"Oh don't be silly, Ethan. We've only been speaking Spanish since you walked in.\" Mrs. Altuvia gave him a look like she was being made fool of and didn't like it.\n\n\"Mrs. Altuvia, do you think it's possible to go into a coma and come out with the ability to speak another language without having to learn it first? And to not know you are speaking it when you do?\"\n\n\"I suppose anything is possible,\" she admitted. \"Do you really not know you are speaking Spanish right now?\" Ethan shook his head no and shrugged his shoulders. He was beginning to panic. Something strange was happening and he didn't know what to make of it.\n\n\"Wait here Ethan, let me get Mrs. Walters. I want to do an experiment.\" She left the office area briefly and came back in with the circulation librarian.\n\n\"Ethan doesn't believe he can speak Spanish. Can you reassure him that he can?\" Mrs. Altuvia turned her attention back to Ethan. \"Ethan, would you please read from this newspaper for me.\" She handed him La Prensa, the Mexico City daily paper. He started reading from the first column. \"That will be enough. Now would you read from this paper.\" She handed him that day's edition of the New York Times. Ethan read a few paragraphs before glancing up. The two librarians were standing shoulder to shoulder and both had their mouths wide open.\n\n\"Ethan, when did you learn to read so well in Spanish?\" asked Mrs. Walters. Ethan's brows knitted together with concern. \n\n\"What do you mean?\" \n\nShe pointed at the Mexican paper. \"It's in Spanish, Ethan.\" \n\nEthan rubbed his eyes and looked again. Then the letters began to swim on the page and rearranged themselves into a foreign language. But Ethan could still read them as if they were English.\n\n\"I don't understand this. I've never read in Spanish before.\" His voice was rising. This was too strange for him and he began to feel a little more panicked. \n\n\"Ethan, relax. I am sure there's a logical explanation for this. Perhaps your injuries unlocked some hidden ability with languages that was already there and you didn't realize,\" reassured Mrs. Walters.\n\n\"Do you really think so?\" asked Ethan, eager to find a logical explanation other than he was going crazy.\n\n\"Of course, that must be it. Why don't you go home now and I will do a little research and see what the medical journals have to say about uncovering spontaneous abilities.\" She patted his shoulder to reassure him. He made his way to the door and out into the chilly night, though now the cold didn't bother him in the least. He found it refreshing and invigorating.\n\nAs he passed the stoop of Becky's building he thought about ringing her up. But Ethan was torn. If he was to have a real chance of dating Alexa, he would have to commit to a monogamous relationship, even if they weren't officially dating yet. Still, Ethan has promised to stop by that evening and didn't want her waiting in her apartment for him to stop by and think he had stood her up. He knew he should be straightforward with her. The more he thought about Becky, the more he wished her nothing but the best. He wanted her to find a man worthy of her. Someone that would kiss her in the manner she desired. He wished her a large, healthy, and happy family, full of love and laughter. Ethan climbed the stoop and pressed the button.\n\n\"Yes? Who is it?\"\n\n\"It's Ethan. Is it okay if I come up?\"\n\n\"Of course!\" she replied as the door buzzed.\n\nWhen he was behind the door of her apartment, Ethan was careful to keep his distance. \n\n\"Becky, you are very attractive and very sexy, but I need to tell you something,\" he started before unburdening his story to her. He spoke at length about Alexa Wilson and how much she made his heart sing, and that Becky had unlocked a level of confidence that he never accessed before. When he finally finished, Becky gathered him in with a fierce hug.\n\n\"That's OK Ethan. I understand. She's a very lucky young lady. If you kiss her like you kissed me, she will be yours forever,\" she said with feeling. \"My only regret is that I didn't get to be your first in other things as well.\" She squeezed his cock to imply her ultimate desire. \"If you ever change your mind, my door is always open to you.\"\n\nAfter brief good-byes and a chaste kiss on the cheek, Ethan found himself back on the street, oblivious to the chill wind. When he again approached the alley where the old man was beaten, he found it occupied once again. This time there were six young gang-bangers, and when they spied Ethan they jumped from the shadows to block his path.\n\n\"So you're the snitch who sent our brothers to jail, aren't you?\" sneered one greasy-faced boy.\n\n\"If by your brothers you mean those three bullies who beat an old man nearly to death and put me in a coma for half a week, then yes I am the one who told the police who they are. But what they chose to do sent them to jail.\" Ethan didn't know what to do. Each of them were bigger and stronger than him. He was stalling, trying to figure out way to stay out of the hospital or worse. Ethan knew that each gang member had fought several times in order to be in the gang. Ethan wished he knew how to fight, just to protect himself. \"I suppose you six are here to finish the job they started, aren't you?\"\n\n\"You've got it. When you are dead, you won't be able to testify at their trial and they will be back on the street where they belong,\" was the menacing reply. Ethan couldn't think of a response. He was frozen with fear.\n\n\"Not so fast, you worthless punk,\" said a creaking voice from deep in the alley. All heads turned as the old man Ethan had tried to save before shuffled out of the shadows. \"If you all leave right now, I'll convince Ethan to show you mercy. If you are as stupid as you look, I'll be glad to give evidence to the police that Ethan acted in self-defense when he beats each of you to within an inch of your pitiful lives.\"\n\nThey all laughed. \"HIM? He's so scrawny he wouldn't last three minutes against my kid sister, let alone any one of us.\"\n\n\"That sounds like a challenge, big man,\" said the old man, stepping up to face the gang leader. \"If Ethan only nearly kills you, will that be enough to convince the you and the rest of your friends to leave him alone now and forever?\"\n\n\"Sure, you old bastard. I'll take him on. After I break his skinny neck with my bare hands, these boys are going to do the same to you,\" greasy face boasted.\n\n\"There is only one rule to this fight,\" warned the old man. \"Whatever you say you are going to do to Ethan, he will visit that pain on you. Be careful what you say. And for the rest of you, if you want to live to have a chance to change your miserable lives, you'd better watch what happens carefully.\"\n\nThe old man walked over to Ethan and grabbed him by the right wrist. He leaned and whispered to Ethan, \"Who you are, you have always been. Who you will be, you will always become. You do not seek to kill or maim, you do not boast or gloat or revel in the pain of others. But pain is the only lesson that some men learn. When you meet one of these men, you must be the teacher. Whatever he threatens to do to you, you will do to him. Do you understand?\" \n\nEthan nodded, feeling something strange happening in his body. His birthmark began to burn, as if a current was entering his body through his wrist.\n\n\"I am going to break both of your arms and both of your legs, then I am going to...\" Snarled grease-face.\n\n\"ENOUGH!\" screamed Ethan. \"Don't say another word. I don't want to kill you.\" His voice shook and rumbled like thunder. His body trembled, not in fear. Ethan could feel a summoning. It was a power so great that he knew with certainty that greasy-face would soon be on the ground screaming in agony.\n\nThe fight, if you could call it a fight, lasted only seconds. The big gang leader attacked and Ethan slipped under his punch. While ducking, he rotated to the right and broke his left arm. Before the bully realized it, Ethan spun back to the left and shot his fist out into the right arm of his attacker. It too shattered. With a kick like a mule Ethan broke the right femur and spun a hammer fist into the left, shattering that leg as well. The screams of pain caused lights on both sides of the alley to come on as people came to their windows to see what was taking place.\n\n\"Now do the five of you need further demonstration? Or do you foreswear vengeance against Ethan now and always? And by so swearing, accept the punishment for breaking your vows?\" asked the old man.\n\n\"What's the punishment?\" asked one of the braver remaining thugs.\n\n\"Death, of course. The only punishment for breaking a vow such is this is that you forfeit your life. You can see Ethan is capable of rendering the strongest of you helpless. Do you think he could not kill with a single blow? Now go and get an ambulance. Get your friend to the hospital. He will be needing your help wiping his ass for the next six weeks. Come Ethan.\" The old man turned, unconcerned by the writhing bully screaming for his mother in the alley. \n\nWhen Ethan and the old man left the alley far enough behind, Ethan spoke. \n\n\"Mr. -- I'm afraid I don't know your name. My name is Ethan Rome, and I am sure glad you are okay. I thought those boys beat you to death in that alley the other night.\"\n\n\"You can call me Zefs. My old friends do. Or they used to before they all died. It's just me left. And you don't have to worry about me in any fight. I may be old and tired beyond the years, but I do not lose in any fight. Just as you won't ever lose a fight, judging by your performance tonight. The secret is to only fight as a last resort and to win at all costs when you have to fight.\"\n\n\"Zefs? What kind of name is that?\"\n\n\"Old Greek name. It's been in my family for thousands of years. My parents thought it was an honor. Sometimes it's a burden.\"\n\nEthan nodded in understanding because he thought he should. \"How is it you know me? You called me by name, but I don't ever remember meeting you before.\"\n\n\"I am an old friend of your father. I vowed to look after you until you came of age and came into your inheritance.\"\n\n\"Inheritance? Like rich?\"\n\nZefs chuckled. He pointed at the birthmark. \"Your inheritance. The gift your father left you.\"\n\n\"This mark? I never even saw it before, not until the night in the alley when I thought you were going to be killed.\"\n\n\"That mark. The mark that revealed itself when you began to show who you are.\"\n\n\"Who I am? What are you talking about?\"\n\n\"You gave no thought to your own peril when you tried to intervene on behalf of someone in grave danger. You showed bravery and self-sacrifice. Only a young man destined for wonderful things shows that kind of natural promise. That and your lifetime of being a good boy, kind and considerate.\"\n\n\"You aren't making any sense. But honestly, not much has made sense since that night we first met.\"\n\n\"It will all make sense in due time. It's late. You need to get some rest. Tomorrow is a big day for you. A big day to be sure. I'll be seeing you later Ethan. Good night!\" \n\nBefore Ethan could ask another question, the old man had vanished into the darkness down the street. He let himself into the building and then into his apartment. Ethan spent the next three hours catching up on some of his missed assignments. When he tired and reached a stopping point, he headed to bed.\n\nLaying on his bed he let his mind travel back over the last few weeks and the sudden changes that were coming at him. When he got to the fight, he rose from bed and went into the bathroom to study himself in the mirror. He was curious to understand how he beat that gang leader without getting so much as a scratch. Without his shirt, Ethan looked like the same slight young man he was just weeks before. He studied his hands, the ones that had broken bones an hour before. They looked unremarkable to him. Except for his birthmark. His birthmark appeared to be darker, a deeper red. As he examined it, he traced it with his finger. Ethan could swear he saw it outlined by glowing light, but the outline disappeared as quickly as it started. He grinned at his reception. \"BOO!\" he shouted, feeling sheepish about thinking he was undergoing some sort of physical change.\n\nEthan crawled back into bed and pulled the covers over his head. In moments he was deep in slumber, having the most vivid dreams about good fighting evil and right defending against wrong. He was a mythical warrior summoned by the gods, then he was a valiant knight fighting for his queen, and then he was a benevolent teacher, raising a group of children in the old ways. Ethan didn't know what the old ways were, but he felt confident he could teach them. \n\nWhen the morning came, Ethan felt a strange warmth in his groin. He slipped his hand inside his briefs to find his morning erection rigid. His cock felt strange to him, much larger than before, but the effect didn't last. By the time he rose from bed it was its usual size and shape. He took a shower, dressed for school and then checked on his mother as he was leaving. Instead of being snug, she was completely uncovered. She wore a light nightgown that was hiked above her waist. Even though she was forty and lived a hard life, Sylvia Rome was an attractive woman. Ethan pulled down her nightgown for modesty, and then arranged the covers over her. He could tell she was hot. Ethan sat on the edge of the bed and placed his hand on her forehead. She was burning up. Ethan wished he knew what to do to make her feel better. He went to the bathroom and got a cool water wash cloth and a glass of water and two aspirin. He began to wipe her forehead, waking her.\n\n\"Ethan, what time is it?\"\n\n\"7:30. You are burning up. Take these. Drink this.\" He handed her the aspirin and the water.\n\n\"I'll be ok Ethan. I just need some sleep. I haven't had much lately. My body is run down. Thank you for checking on me.\" She patted his arm to reassure him. \"Now you'd better get to school before you catch what I've got.\" She gave him a weak smile and settled back under her covers. Ethan leaned in and kissed her forehead. Already she felt cooler. He left their apartment and started for the school.\n\nEthan could see Alexa waiting for him by the entrance to the school. The cliques of students around the commons openly stared at Ethan. Word had gotten around quickly that he had broken both arms and both legs of the leader of the most dangerous gang in the neighborhood. Classmates were looking at him oddly and giving him a wide berth. Two of the gang members from the night before were loitering under a nearby tree. When they spotted Ethan, one took off and the remained where he was to keep an eye on Ethan. Alexa approached him, oblivious to the stares of others.\n\n\"Good morning Ethan,\" she said with a smile. \"You sure look handsome today.\" Ethan blushed and turned away to keep her from noticing.\n\n\"You look very pretty today too, Alexa. You look pretty every day. And when you smile at me, it's like Heaven is opening up and joy itself shines on me.\" Now it was Alexa's turn to blush.\n\n\"Ethan! Don't tease,\" she tried to play off his comment. \n\n\"I'm not teasing. And I've changed my mind. I am coming to your house tonight to convince your father to let you go on a date with me.\"\n\nHer face changed, a look of panic replaced her happy countenance. \"Oh Ethan, please don't! If he says no, then I won't be able to see you anymore. I couldn't take that. Just wait, the time will be right, I promise,\" she pleaded.\n\n\"Don't worry Alexa. I have a strong feeling everything will work out,\" he said confidently. His confidence was contagious enough to bolster Alexa's spirits and return most of her smiling outlook.\n\n\"Well, since you seem so sure, I guess it will be ok. But what about your job hunt?\"\n\n\"Oh I am done looking for a job. Meet the newest tutor at the main library downtown. Ethan Rome, at your service,\" he said with a flourish. He went on to describe his first tutoring session, leaving out the ability to speak new languages. She listened with pride in her eyes.\n\n\"When do you get paid?\" she asked.\n\n\"I'm not sure. I kind of forgot to ask. Why?\" \n\n\"I want to know when our first date will be,\" she teased. \n\nThe bell rang. She slipped her arm in his and they both joined the crowds shuffling in. Flanking the door was a crowd of gang members, including the five from the night before. Ethan moved in front of Alexa, hoping to protect her. One of the boys from the alley stepped forward.\n\n\"Ethan, can we speak to you?\" he looked directly at Alexa. \"Privately.\" \n\nEthan looked him in the eyes and couldn't detect any malice.\n\n\"Sure. I have sixth period free. Meet me back here. Are all of you coming?\" They nodded. \"I'll see you then I guess.\" He continued to walk to the door and one of the gang members opened the door for Ethan and Alexa. Something strange was happening, but Ethan didn't care. He had school to focus on a strategy to figure out. He had to think of some way to convince Alexa's father that his little girl would be safe with him.\n\nWhen the bell announcing sixth period sounded, Ethan walked out onto the common patio. The gang was there. All except their leader.\n\n\"What's your name?\" asked Ethan of the boy who had asked for the meeting. \n\n\"They call me Ant,\" he replied.\n\n\"Ant? Why? It's not because you are small,\" laughed Ethan.\n\n\"No, it's because I am freakishly strong.\" As a demonstration of his strength, he walked over and picked up a cement bench and raised it to waist high. It had to weigh four hundred pounds. Ant was freakishly strong.\n\n\"Can any of you others do that?\" Ethan asked the gathered gang. They all laughed and shook their heads no. \n\n\"Maybe two of us together could,\" someone shouted.\n\n\"Can you?\" asked Ant. It wasn't a challenge really. Ant was looking for confirmation of what he was thought about Ethan.\n\n\"I don't know. I've never tried. Do you want me to?\" he asked. Ant nodded.\n\nEthan grabbed one end of the bench, intent on testing it to see if he could even budge it. To his surprise he lifted the end easily. Now it rested on its end and one side of the pedestal legs. He walked around to the other side and gripped it with both hands and hoisted it up in the air until it was above his head. He could hear gasps of amazement from the gang.\n\nEthan slowly set it back down on the end and left it there. It took three of the gang members to return it safely to the ground. \n\nAnt spoke to his cohorts. \"Do you see what I mean? He's twice as strong as I am. HE should be our new leader.\" He turned to Ethan. \"What do you say? Do you want to lead our gang?\"\n\n\"No! Of course not. First you beat me near death, then your old boss tries to kill me, and now you want me to be your leader? Your friend?\" Ethan couldn't help but laugh at the absurdity of the situation.\n\n\"We aren't all like Bull. We've never really had a chance to choose our own leadership.\"\n\nEthan could feel the desperation for leadership and direction that these lost young men felt. But Ethan was always a loner, he had no idea how to lead a group of peers. ",
        "\"I am not making any promises, but I will give it some consideration. You should too. I have never been part of a gang and I have never been a leader. There would be a bunch of changes in the way you operate. But I will give you an answer Monday, same time, same place.\"\n\n\"That sounds fair Ethan,\" replied Ant. \"Right guys?\" They all agreed or murmured something that didn't sound like objections.\n\nEthan spent the rest of the period completing more of his overdue assignments. At the end of the school day, he met Alexa outside.\n\n\"I'll be done at the library around 6:40. I'll be at your house around 7:00. Will your dad be home by then?\"\n\n\"Yes, I'm afraid so.\" Alexa still wasn't convinced this was a clever idea. \n\nEthan watched her walk to the end of the block, turn and smile, and then disappear. He ran the eight blocks to the library before he realized he never ran anywhere. When he pulled up, he wasn't breathing hard. Whatever was happening to Ethan, he was beginning to see the benefits.\n\nEthan spent the afternoon tutoring Hector in algebra. When his father arrived to walk him home, Ethan greeted him warmly. After they left, Ethan went down to the circulation desk and pushed two carts onto the dumbwaiters again. As they rose up the center of the building, Ethan sprinted up the steps. Again he realized he wasn't winded. He dashed through the stacks, instead of pushing the cart, he carried an arm's length of books. He slipped them back into place and dashed to the fifth floor. In no time he was back on the ground floor.\n\n\"Ethan, you can't possibly be done shelving those books. Are you certain you are putting them back where they belong?\" asked Mrs. Walters.\n\n\"I solemnly swear that I put each and every book back where it belongs, no mistakes,\" he replied with a grin. \"I would not break the librarian code to never incorrectly shelve a book.\"\n\n\"You know there's no such code!\" laughed the circulation librarian.\n\n\"There should be!\" chortled Ethan as he grabbed he coat and book bag. \"The Helen Walters Shelve It Right Code.\"\n\n\"Oh you are cheeky! Good night Ethan. We will see you tomorrow,\" she called to his disappearing shape as it left the library.\n\nEthan zig-zagged through the blocks to Alexa's. He'd been to her house before, when he was in the third grade and she had a birthday party. She invited the entire class. \n\nThe house was part of a row of houses that lined the streets in this part of the neighborhood. He opened the iron gate and climbed up onto the stoop and rang the bell. Alexa opened the door.\n\n\"Hi Ethan,\" she whispered. \"I was hoping you changed your mind.\" She smiled wistfully and touched his arm as he entered.\n\n\"Who is it Alexa?\" came a voice from down the hallway that separated the first floor of the home into two sides.\n\n\"It's Ethan Rome,\" responded Alexa.\n\n\"Ethan Rome? That boy from your class? What does he want?\" His voice was getting louder. Mr. Wilson appeared two doorways down, wiping his hands on a dish towel. \"What do you want?\" It was more a challenge than a question.\n\n\"I've come to speak to you, Mr. Wilson,\" replied Ethan, hoping he sounded more confident than he felt.\n\n\"You have, have you? Well, come on back. I'm busy with dinner. Alexa set another place at the table, this young man looks famished. You'll join us for dinner.\" It wasn't a request.\n\n\"I'd be honored, sir.\"\n\n\"Sir huh?\" replied the lawyer skeptically. \"We'll see.\"\n\nWilson led the way into the kitchen and Ethan followed. Once in the kitchen, the smell of dinner was overwhelming Ethan's senses.\n\n\"What is that you are preparing?\" he asked. \"I've never smelled anything so wonderful before.\" He followed his nose to a pan simmering on the stove.\n\n\"Chicken Cacciatore. You mean to tell me you've never seen Chicken Cacciatore before?\"\n\n\"No sir. My mom works nights and I usually make my own meals. We don't eat out very often.\" Getting take-home Chinese food was a big splurge at Ethan's, on those rare occasions he and his mother sat down for dinner together. \n\nThe look on Wilson's face began to soften. He showed Ethan what he was doing and how he used the knife to mince the garlic and parsley to add to the dish. Ethan seldom strayed far from the stove and its wonderful smell. Soon the chicken had simmered long enough, Ethan helped carry the food to the dining room across the hall. \n\nAlexa appeared when she heard the kitchen door open. She searched Ethan's face for some kind of sign but he gave the barest of shrugs in reply. Soon they were all seated and Mr. Wilson turned to Ethan and asked if he would like to say grace.\n\n\"I'm sorry, sir. We don't say grace at our house. I don't know how to say grace.\" Ethan knew this wasn't a good impression to make.\n\n\"You don't? Well to be honest, neither do we. All the blessing I could ever want is in that young lady right there. Hand me your plate.\" Wilson heaped a generous portion of chicken in red sauce, over a huge helping of pasta. Ethan helped himself to the salad after Alexa had served herself.\n\n\"Care for a glass of wine to wash it down?\" Wilson asked, waving a bottle of Italian red at Ethan's stemmed wine glass.\n\n\"No, thank you. I don't drink.\"\n\n\"Never?\"\n\n\"No sir.\"\n\n\"It's impolite to refuse an offer made by your host. The proper response is to hold out your glass and say, 'Just a small glass for me, thank you.' Now would you like a glass of wine?\"\n\nEthan held out his glass, \"Just a small glass for me, if you please.\" Wilson poured just over two ounces in the eight-ounce glass. He poured the same for his daughter and filled his nearly full. \n\n\"Dig in.\"\n\nThe trio ate in silence and Ethan was glad. This was the best meal he'd had in a very long time. He savored every bite. He struggled to finish the huge portion he'd been given, but he didn't want to stop. He slowed but continued to enjoy every bite. He even managed a sip or two of wine. When he finished he realized the Wilson's were both watching him with a look of admiration.\n\n\"Well done, young man,\" stated Wilson. \"Alexa clear the dishes, your young man has something he'd like to ask.\" \n\nAlexa did as she was told and disappeared into the kitchen across from the dining room.\n\n\"Well, Mr. Rome, you've come to ask a question. Out with it.\"\n\nEthan nearly panicked. In the end, he decided the best course was direct and straightforward. \n\n\"Mr. Wilson, I've come to ask your permission to take your daughter on a date.\" He raised his eyes to meet those of her father and waited from the explosion that was about to come.\n\n\"Ethan, before I give you my answer, I am going to ask you a few questions. Fair enough?\"\n\n\"Yes sir,\" he replied evenly, wondering what kind of questions he was about to be asked.\n\n\"Are you a good student?\" he started.\n\n\"Yes sir,\" Ethan replied without any boast.\n\n\"Do you have a job?\" Wilson continued.\n\n\"Yes sir,\" Ethan replied without embellishment.\n\n\"Why do you want to take my daughter on a date?\" he asked evenly.\n\nEthan was caught flat-footed. He tried to think of the right answer to the question.\n\n\"Well sir, I've never been on a date before. I've always been shy around girls. I've never even asked one out before. Alexa is the only girl who I would even consider asking on a date.\"\n\n\"Even if her father is an over-protective bear who would like nothing more than to tear anyone limb from limb when they ask for permission to date his daughter?\" His question was more of a veiled threat. \"One last question. Did you nearly kill a gang-banger last night?\"\n\n\"No sir. But I did break both his arms and both his legs,\" Ethan admitted.\n\n\"Was that supposed to be funny?\" asked Wilson, unimpressed with Ethan's nonchalance. \n\n\"No sir. It's what happened. He and his gang were going to kill me to keep me from testifying against their members who jumped an old man and then jumped me in an alley not far from here.\"\n\n\"I know all about that, Mr. Rome. I am the prosecutor who is going to put those three in jail for two counts of attempted murder.\" He paused before he gave his answer. \"You are an honest young man, I can appreciate that. You have a good heart and I can appreciate that too. But this is my only daughter and letting her go, even for a moment, is a big step for me. To let her go on a date with someone who appears to attract trouble with gangs wouldn't be wise at all, would it.\" \n\nEthan said nothing. He prayed Alexa's father was asking a rhetorical question. So far, he hadn't heard yes or no.\n\n\"I'll permit you to take her on ONE date, to a place I approve of, for a duration I approve of, on the day and time I approve of. And that will be after I am certain you are free and clear of the gang that's after you.\"\n\nThe door from the kitchen burst open and Alexa came flying across the hall and leapt into her father's lap. She threw her arms around his neck and hugged him tight. \n\n\"Oh Daddy! Daddy! Daddy! You've made me the happiest young woman in the city!\" Wilson couldn't help but smile. He glanced over her shoulder to Ethan. \n\n\"If she's ever less than this happy after a date with you, they won't find enough of you to bury.\" \n\nEthan smiled thinly and nodded in agreement. \n\n\"Yes of course, sir. Thank you, Mr. Wilson,\" he said standing up. \"I should be going. I still have some homework to catch up on. I'll come back again when I am prepared to ask Alexa on a date and then you can finish laying down the rules. Good night. I'll show myself out.\"\n\nThey insisted on walking him to the door. Alexa walked him to the gate. Before she let him go, she pulled him close and put a demure peck on his cheek.\n\n\"Ethan, I am so proud of you! And so happy for us! I can't wait. I'll hardly be able to sleep tonight I am so excited!\" Ethan wished her good night and that he hoped she slept well. Then he turned into the chilly night, the chill that didn't seem to reach him anymore, and jogged towards home.\n\nAs Ethan jogged, he took a moment to realize that he wasn't really a jogger. And the jogging didn't seem to tire him. He sped up. He covered the blocks easily with a loping stride. Still he didn't tire. He hardly increased his respiration. He ran flat out, stoops and trees flashed by as he ran through pools of light and spans of darkness. He felt exhilarated. This must be part of the inheritance that Zefs had promised. \n\n\"Help me! Help me! Somebody please help me!\" Ethan skidded to a stop. He heard a voice but he couldn't tell what direction it had come from. \"Oh my God! I don't want to die like this! Why won't someone come?\" Ethan looked all directions in a panic. The voice seemed to be coming from everywhere and nowhere at the same time. Ethan lowered his head and closed his eyes. He tried to concentrate on where the cries for help originated. He slowly turned around, hoping to hear another clue. He was certain that somewhere a woman was in trouble. \"Leave me alone! LEAVE ME ALONE! Just go away!\" \n\nThere it was again. Ethan crossed the street and pulled on the door to an apartment building. It was locked tight. He was certain that the woman in trouble was behind the door. He wished he could get to her. In desperation, he grabbed the handle and yanked. The door burst open. Ethan ran past the row of brass mailboxes to a doorway under the stairs. He pulled it open and plunged down a staircase into the darkness below. He could hear muffled cries below. When he reached the bottom of the stairs he could see a man in a dark hoodie holding a blonde girl down with his body. He was struggling to take her pants off and hold his hand over her mouth at the same time.\n\n\"SHUT UP, BITCH! Just take it and I'll let you live. If you keep yelling, I am going to crush your fucking throat!\" \n\nEthan grabbed the man by his hood and yanked him off of the terrified girl. His mind was a maelstrom of rage. His fist flashed out of the darkness and struck the attacker in the throat. The girl saw her attacker's eyes grow wide as he realized the blow had crushed his windpipe. She watched as he struggled to breathe. She could see he only had minutes to live. She screamed.\n\nThe scream penetrated the rage controlling Ethan and brought him back to reality. He looked at the dying rapist with no emotion at all. The man had brought this fate on himself when he attacked an innocent. Ethan felt justice was being served. Ethan looked at the girl.\n\n\"Is he dead?\" she asked in a breathless whisper.\n\n\"Not yet. Soon. Do you want to tell him anything before he departs this earth and descends into the hell he has bought with his actions?\" Ethan was propping up the man now, keeping him from collapsing.\n\n\"Does... Does he have to die?\" she asked with more concern than the man deserved.\n\n\"No, I suppose not,\" Ethan answered after a brief reflection. \"But I suspect the world is better off if his story ends here.\"\n\n\"Please mister, if you can save him, would you? Please?\" She was begging mercy for a man who had shown her none. Ethan felt something in his heart for her. He whispered into the dying man's ear.\n\n\"You will live. You will never attack another human being again. You will spend the rest of your life attempting to be worthy of the gift she is giving you. From now on, you will serve only others. You will never think of yourself first. You will live a life of redemption and celibacy. Should you ever disobey my command, I will know. No matter where you go, no matter how much time passes, I will know. And when I catch up to you again, I won't kill you quickly. I will end your life so slowly, so painfully, I will make you beg for death a thousand years before I send you to hell.\" Ethan grabbed the man's throat with his right hand and immediately he took in great breaths. The rapist wretched and spewed his stomach's contents on the dirty basement floor. He fell to his knees sobbing.\n\n\"I'm so sorry!\" he said through spasms of sobs and pain. \"I am so sorry.\" Ethan took the woman by the hand and guided her out of the basement and out of the building.\n\n\"Are you ok? Where do you live?\" She gave him the address. Ethan walked her home. On the way he introduced himself and she introduced herself as Carrie Church. She thanked him profusely for coming to his aid and begged him to let her do something to show her appreciation. He refused he offers and watched her as she finally relented to go inside and shut the door. When he heard it lock, he turned back towards home. In a few strides he was running. Running and wondering how he had heard the girls screams so clearly when she was trapped in the cellar of that apartment building, being smothered by her attacker. \n\nEthan nearly ran past his own building before he broke his reverie and his stride. He mounted the stairs quickly and emptied his books onto the table in the kitchen. Ten minutes later he was deep into the last of his past due assignments. \n\nEthan felt a hand on his shoulder.\n\n\"Ethan honey, you should go to bed,\" his mother said softly. \"You fell asleep at the table. You are doing too much, honey. You should slow down. You've only been out of the hospital a few days.\"\n\n\"Mom, tell me about my father,\" he said as he pulled her down to a chair at the table. \"I only remember he left when I was young, and I don't remember what he looked like.\"\n\n\"Ethan, the man you remember as a youngster wanted to be your dad,\" she began.\n\n\"Wanted to be? You mean he wasn't?\" Ethan had a sinking feeling in his stomach. \n\nShe shook her head no. \"He was a good man, and he wanted to be a good father. But one day he changed his mind and left. I never saw or heard from him again.\"\n\n\"What about the old man? He told me he knew my father.\"\n\n\"What old man?\" she asked.\n\n\"He said is name was Zefs. He said it was an old family name,\" Ethan explained.\n\nThe look on her face told Ethan she knew the old man. \"You've met him? You've met Zefs?\" He nodded. \"Zefs knows your father very well.\" \n\n\"Do you mean my father is still alive?\" he blurted out.\n\n\"Yes I suppose he is.\" She looked at her hands. Ethan waited for more information but she wasn't giving him any.\n\nThere were so many questions and Ethan didn't know where to start.\n\n\"I know you have a thousand questions, but you need to get a couple hours of sleep before school and I am dead tired. We can talk about this on Saturday. You need to get to bed. Now go!\" \n\nEthan rose and followed his mother's order. When he got to bed, he was certain he wouldn't be able to sleep but he was wrong. He went to sleep like struck by a thunderbolt and drifted into dreamless slumber.\n\nIn the morning Ethan went through his waking routine on auto-pilot. It was only when he checked on his sleeping mother that he remembered her revelation. He looked down on her sleeping form and for the first time looked at her as a woman. He imagined what she was like when she was younger. As a woman, Ethan could see why men found her attractive. She was attractive. Her scantily clad shape exposed without covers showed promising curves and dips. As he looked at her, Ethan felt a strange arousal. He blushed and step across the room and covered his mother modestly. And then he quietly left, guilty for having sexual thoughts about his mother.\n\nThe jog to school cleared his mind and as he approached the outdoor commons, he thought only of Alexa Wilson. His heart swelled with affection. He spied her waiting near the door. \n\n\"Ethan, you were so brave last night. No one has ever come to our house and fit right in with my father before. I was afraid it was an act. Ethan, what's wrong?\" She could see he was a thousand miles away. She reached up and stroked his cheek. Her gentle touch brought him back to the present. He told her about the night before. Then he told her everything else since the attack in the alley. When he finished, the bell sounded and everyone filed in. He left out a few details, particularly where Becky Hearn took part.\n\n\"We will talk more at lunch,\" she promised, pulling him down and giving him a peck on the cheek. \"So much has been happening around you, we can surely figure out a way to make sense of it.\"\n\nEthan spent the morning turning in his completed assignments from his time in the hospital. In between classes he noticed that the mood of the high school had changed. Students he didn't know where smiling at him, offering casual greetings, being more, well, polite. It wasn't only Ethan that students were being politer to, they were politer to each other. The normal tension between cliques of students seemed to have lessened or disappeared altogether. Ethan put it down to just another bizarre occurrence that had to have some logical reason. \n\nWhen he entered the cafeteria for his lunch with Alexa, Ethan took note that many of the implied boundaries were being flaunted. Athletes were sitting nearer to math nerds, hair chicks were conversing with the goth chicks. Gang bangers were, where were they? Ethan wondered. The football players were laughing and talking to other students like the old friends they used to be, instead of overprivileged assholes.\n\nEthan pulled up his customary seat across from Alexa and shifted his focus onto her. Even Alexa was different. She had her hair pulled back and held in a clip behind her head. Ethan even detected a little makeup around her eyes. Instead of a sweatshirt, Alexa was wearing a button front shirt with the top two buttons undone. It wasn't exactly showing off her cleavage, but for Alexa it was as racy as he could remember seeing her.\n\n\"You look so beautiful, Alexa. Glowing. Like there's a light inside that's leaking out,\" he stated after taking her all in.\n\n\"I feel like there's a light inside me Ethan. I can't help it if it leaks out,\" she admitted with a giggle.\n\nEthan didn't want to hope that she was glowing for the same reason he was glowing. He said nothing. Alexa continued.\n\n\"Of course it's because of you Ethan. I've had a crush on you for forever. But now it's different. Now it feels like all my dreams are coming true. My dad even acted, well, normal at breakfast this morning. I didn't get a three-minute reminder speech to hurry straight home after school. In fact, when I asked if I could go to the library after school to work on my homework he said it would be fine, as long as I had someone to walk me home after. Would you walk me home after?\"",
        "\"Of course.\" She reached across the table and grabbed his hand with the briefest display of public affection. An electrical current passed between the two, synchronizing their heartbeats. When Alexa let go, the connection remained but grew fainter until Ethan thought he may have only imagined it. The look in Alexa's eyes told him differently. The bell rang, signaling the end of the lunch period and the two young lovebirds shuffled out with their peers and into the rest of the school day.\n\nAfter the last bell, Ethan met up with Alexa and together they walked to the library. When they arrived, Alexa spread out her homework in a private study carrel near where Ethan set up to tutor. Hector Reyes arrived a brief time later and the two began another tutoring session in algebra. Half way through Ethan stopped Hector.\n\n\"You really don't need any tutoring in algebra Hector. You have a very good grasp of the subject.\"\n\n\"I know, Mr. Ethan. I got an A on my exam today. But I learn so much from you, I want to continue to have you as my tutor.\"\n\n\"Are there any other subjects you need extra help in?\" Ethan asked.\n\nHector looked crestfallen as he slowly shook his head no.\n\n\"Then I think you should do your homework while I help another student. When you are finished, I will check it over, okay?\" Ethan said encouragingly. Hector smiled and gathered his books and took them to a carrel nearby. \n\nThe next student who came to Ethan for help was a junior at Ethan's high school. She was one of the exchange students who spent a year in the city before returning back to their home country. \n\n\"My name is Xian Le, I am needing a tutor in English and Physics please,\" she stated while looking at the floor in front of her shoes. Ethan immediately felt sorry for her, being so far from home, speaking a foreign language, living with strangers. He stood up and beckoned her to sit down. \n\n\"I will do what I can to help you with both. If I talk too fast, or if you need me to repeat something, please say so. My name is Ethan and I am here to help you.\"\n\nXian Le looked Ethan right in the eye as he spoke. Her eyes grew wide as spoke. A big grin crossed her face. \n\n\"Thank you so much! The nice lady downstairs said you would be a perfect tutor. She was right. How do you know how to speak Mandarin so well? Have you been to China?\"\n\nBy now Ethan was barely shocked that he was speaking Chinese. So many strange things had happened, he was beginning to believe anything was possible. \n\n\"It's something I picked up quite recently,\" he admitted. \"I hope you don't find my American accent difficult.\"\n\n\"You speak perfectly. As if you grew up in my city,\" she said encouragingly.\n\n\"Thank you. If it's all right with you, let's begin.\"\n\nThey spent an hour and forty-five minutes on her physics homework. During that time, Ethan would correct Xian Le's English, arranging the nouns and verbs in the correct order, so she was also being tutored in conversational English at the same time. When their session was over, Xian gathered her books and gave Ethan a quick nod and shy smile and left. Hector entered and thrust out his finished homework. \n\n\"This is excellent Hector. You are a great student.\"\n\n\"Thank you, Mr. Ethan,\" the young boy beamed with pride. Hector left and Alexa entered the room.\n\n\"Oh Mr. Ethan, I have trouble with my homework, can you please tutor me too?\" she asked with a flirtatious smile.\n\n\"Of course, Miss. But you will have to see Mrs. Walters downstairs to be fit into my schedule.\"\n\n\"You can't make room in your busy schedule for ONE more student?\" she teased.\n\n'I guess I'll have to tutor you privately, after hours,\" he agreed, while his thoughts were on something far more physical than intellectual.\n\n\"I think I'd like that,\" she admitted, her voice soft and sensual. \n\nInside Ethan he felt something compelling him to act out on his thoughts. His sexual thoughts. In his mind he could see himself sweeping Alexa off her feet and making passionate, almost violent, love to her right on the table. The image was real and so powerful it threatened to overtake him. He could feel her desire was equal to his and it scared her. He fought it back, knowing that to act now would be a violation of some kind of pact of honor he had not only with her, but her father and his mother and the rest of the world. It took all of his will to force down his arousal. At last he regained control of his sexual appetite and took a deep breath. As he exhaled, so did Alexa.\n\n\"Did that just happen?\" she asked confused. \"What was that?\"\n\nEthan shook his head and lifted his shoulders. \"I don't know. I mean, I've imagined kissing you before, but I've never imagined much more than that. Did you see what I saw?\"\n\n\"If it was you and I and this table here?\" she replied with her hand on the study table, \"I think it pretty much was.\"\n\n\"I'm sorry Alexa. I don't know what came over me. Nothing like that's ever happened to me before.\"\n\n\"It happens to me all the time,\" Alexa answered. When Ethan looked up she laughed. \"KIDDING! Nothing like that has ever happened to anyone before. Come on, you'd better walk me home before my father comes looking for me.\" \n\n\"Just give me a couple more minutes and I'll be ready.\"\n\nEthan left her at the circulation desk while he made short work of re-shelving six carts of books for the librarian.\n\nAs they walked down the street, Ethan didn't feel the cold. Alexa shivered as they walked. Ethan removed his coat, took her backpack from her, and put his coat around her. She tried to protest.\n\n\"It's okay, really. The cold doesn't bother me at all anymore. Just another one of the changes I am going to have to get used to. By the way, I speak Chinese now.\" \n\nShe looked at him as if to elicit an explanation, but Ethan grinned sheepishly and shrugged. She gave up waiting and changed the subject.\n\n\"Ethan, be honest with me, do you think when we make love it will be like what happened in the library?\" Ethan stopped.\n\n\"I suppose it could be, if we allow it to. I think it will happen that way if that's what we want.\" He started walking again.\n\n\"I liked it. It was scary and exciting at the same time. I don't want my first time to be like that, but I think I will want to experience that kind of fire. At least once. Or twice,\" she confessed.\n\n\"I know what you mean. I want my first time to be a little less violent and a lot more magical.\"\n\n\"It will be, Ethan. I promise.\" \n\nShe slipped her arm in his and they walked the rest of the way in silence. When they arrived at her house, Ethan walked her to the door. Mr. Wilson poked his head out of the kitchen and called a greeting to them both. Ethan said goodnight and left, forgetting his coat. \n\nIt didn't matter. His blood was at a near boil and he was fighting a compulsion he didn't understand. Ethan began to run. He ran faster than he had ever run before, never tiring, covering block after block of darkened street. He covered miles before his blood had cooled enough to allow him to turn toward home. But his footfalls didn't take him home, they took him back to Becky Hearn's apartment building. He was looking for answers and some force had directed him to her stoop. Before he realized it, he was pressing her bell. \n\n\"Yes?\" she said through the intercom.\n\n\"It's Ethan. Can I come up for a minute?\" he asked, uncertain why he was there, but certain he was going to find out.\n\n\"Of course,\" she answered cheerfully. \n\nThe door buzzed and Ethan entered and climbed the stairs to her apartment. Becky answered the door in a t-shirt and black yoga pants. Seeing her dressed like that stirred Ethan's blood again. He was fighting his nature.\n\n\"It's alright Ethan, I know why you are here. That's why I let you up. I have been hoping and praying you would come back to me and let me be your first. There is something inside you that you are afraid of, isn't there?\" \n\nEthan nodded.\n\n\"And you afraid to let anyone see it, aren't you?\"\n\nHe nodded again.\n\n\"And you are hoping that I will understand and help you make sense of it, aren't you?\"\n\nEthan looked her in the eyes. \"Yes.\"\n\n\"Put your books down and kiss me Ethan. Let it out. This is how you will understand. Kiss me.\"\n\nEthan did as he was told. This kiss was far different from his first. This kiss was eighteen years of unspent sexuality unleashed on a willing partner who only had a little inkling of what was to come. The harder he kissed her, the harder she kissed him back, as if his desire only made her passion grow stronger. Ethan let his hands roam her back, the curves of her hips, her sides. She reached around and gripped his hips firmly, pulling his groin into hers. Ethan's palms found the sides of her breasts. He slid his thumbs and forefingers around until they teased her nipples. Her heart was racing and she pulled him desperately tighter. Ethan broke the kiss only to kiss the side of her face, then her neck. She inhaled sharply at the physical sensations his mouth was giving her. His hands cupped her breasts, squeezing them roughly. He rolled her nipples between his fingers. She shuddered at the gratifying mixture of uncertainty and intent.\n\n\"Take me to the bedroom,\" she commanded huskily. \n\nEthan complied with an easy strength. He carried her into her bedroom and stood her at the end of the bed. She reached down and slipped out of her t-shirt, exposing him to the first breasts he'd ever laid eyes on. Becky was thin but not bony. Her breasts though small and pointy, were perfect on her frame. She slipped her thumbs into her waistband and pushed her yoga pants into a puddle at her feet. When she stood up, Ethan got his first look at a shaved pussy. His erection threatened to burst his zipper. Becky grabbed the sides of his shirt and worked it until it was free of his pants. She pulled it off over his head. Ethan wasn't big, but he was definitely fitter than she thought. She had a fleeting thought that he was taller than she remembered. His stomach was flat and his pectorals pleasingly firm. She unbuckled his belt and pulled at his pants until his button let loose. She released is zipper and giggled when his manhood threatened to spring out, ignoring his briefs. She turned Ethan until his back was to the bed and then she pushed him down. Nude, she knelt at his feet and removed his shoes and socks. Then she removed his pants, leaving him only in his bulging briefs. Her fingernails danced lightly on his thighs until they reached his waistband. She carefully lifted his underwear past his swollen cock and then tugged at them until they were on the floor as well. Becky climbed the bed, straddling his cock, riding the underside of it with her pussy. She pressed her naked breasts against his chest and her mouth against his. Ethan's erection burned with want. He could feel it growing longer, thicker. The head turned purple and the veins were rigid on the shaft. The texture of it caused sensual overload for Becky. She rubbed her pussy harder and harder on his thickened shaft, unable to control herself. Her breath was little gasps that she gulped between the waves of pre-orgasmic pleasure. Becky's nails scratched Ethan's chest. She pinched his nipples and twisted. The pain distracted Ethan long enough for Becky to position herself with his engorged head at the entrance to her sex. With a sudden thrust, she plunged his manhood deep into her needy cunt and screamed. She almost ripped Ethan's nipples from his chest. But no pain was greater than Ethan's pleasure. He thrust his hips up into Becky, raising her off the bed. He forced his cock into her fullest depths. \n\nInside Ethan's mind a battle raged. The best part of him had wanted to hold himself back until Alexa could be his first. Ethan felt ruled by a compulsion to couple with Becky. Only Becky. The coupling was not for the physical pleasure of release, but to find a key. The key would open a gateway to greater understanding. Ethan was using Becky to get answers, just as she was using him for carnal pleasure.\n\nWith a swift move, Ethan flipped Becky onto her back, his cock still embedded deep in her womb. His hips moved of their own accord, grinding and thrusting. He covered her mouth with his and their tongues fought even as Ethan began to plunge into her carnal channel. Together they coupled with ferocity, Ethan plunging into her, she pushing her pelvis up to meet his stroke. The thrusts caused her to grunt in a manner that Ethan found pleasantly sexual. As her pussy grew accustomed to his new girth, his thrusts sped up. The sounds of their bodies coming together added to the symphony of their sexual congress. \n\nIn a matter of minutes Ethan felt the rise of his climax. He had to concentrate on not losing control. Becky sensed this.\n\n\"It's okay Ethan. I want you to cum inside me. Fill me with your seed. I need it more than I've needed anything in the world. Let yourself go. Do it. Do it now!\" \n\nEthan relaxed what little control he had left and his semen gushed forth, filling her pussy with warm, fertile sperm. She bucked against him, her orgasm controlling everything now. She could feel his hot cock expanding and the fluid blasting out the tip. She hooked her heels behind his legs and locked him into the v of her groin. She held her breath as she bucked with pleasure. \n\nEthan collapsed on her, utterly spent. Her body melted against his, sated at last. She was content to lay like this forever. \n\nInside his head, Ethan felt like a curtain lifted and he could see into parts of his life he'd never knew existed. The mark on his arm was his birthmark and his father had been someone very special. His mother had been a woman like Becky Hearn. He was the product of a similar furious coupling nineteen years before. But this wasn't history repeating itself. It was more like his sacred obligation to give her a daughter. Becky's daughter would be someone very special and important to the world. \n\nEthan propped himself on his elbows, his cum-soaked cock still hard and still embedded in the woman who claimed his virginity. He grinned as she looked up at him, pleased with the results of their lovemaking. \n\n\"You have come far in a few weeks Ethan. Now you are prepared to go farther.\"\n\n\"Not yet I'm not,\" he answered with a sly grin. His lips found hers and she felt his cock stirring deep inside her. \n\n\"Let me back on top,\" she ordered. \"It's my turn to be in control.\"\n\nEthan rolled them over until she was on top. He folded his hands behind his head and watched as she ground her pussy on his groin, his cock moving back and forth in her cunt, battering her g-spot as she moved from side to side. Suddenly Becky stopped.\n\n'You are going to love this!\" she boasted, bringing her knees up until her feet were flat on the bed. Then she swung her leg over Ethan's torso and spun around, placing her knees beside his thighs and her hands on his knees. In this position Ethan could see his cock sliding in and out of her slit, her labia gripping his cock as she pulled off, only to disappear when she pushed down. \n\n\"You are right. I do love this.\" \n\nEthan gripped her hips and held her tight as he spent his second load into her womb. He could see it oozing out, pooling at the bottom of his shaft, matting his pubic hair. Ethan let go of her hips and relaxed into the bed to catch his breath. Becky collapsed against his chest, still impaled on his teen erection. She extended her legs until she completely covered him. Ethan buried his face in her hair, breathing deep of her pheromones and shampoo. \n\nAfter a few minutes he was roaming her warm skin with his fingers. He played with her abdomen, tracing the bones at the bottom of her ribcage. He ran his fingers between her breasts and along her neck. When it tickled, she flinched, squeezing her pussy around his cock, which still throbbed occasionally in her cunt. When she flinched, her pussy expelled his cum. They union was sloppy and slippery. \n\n\"Are you going to stay hard forever?\" she asked as she turned her head a quarter to tease him.\n\n\"I think that's the point of great sex, isn't it? To stay hard and just keep going at it all night long.\"\n\n\"One more, big boy. Then we need to shower and you need to go home. You are only 18 and I am 26 and pregnant.\"\n\n\"You are only a little pregnant,\" he teased. \"It's time you got really pregnant.\"\n\nHe wrapped his arms around her and began to nuzzle her neck. His cock moved slowly in and out of her sex. In this position he put abundant pressure on her spongy g-spot and almost no pressure on her clit. To remedy this, he put both hands in her groin, rubbing her folds as his cock slid in and out. This combination of sensations was new to Becky. She stiffened as her arousal climbed. Every muscle in her tensed. Ethan rocked her body using his hands on her groin. He could sense her building pleasure, like he tapped into the electricity that flashed through her nervous system. Her pussy spasmed on his plunging rod, milking his shaft. Ethan didn't last long. Tapping into her sensuality was overloading his own pleasure centers. Ethan didn't realize it was a two-way conduit. Becky was growing more aroused because Ethan was growing more aroused. It was a vicious cycle of pleasure. Ten minutes of slow grinding and they exploded in pleasure. \n\nIt took twenty minutes for the pair to regain enough strength to finally uncouple. Becky stood on shaking legs. \n\n\"I'll start the shower. It takes a couple minutes for the hot water to reach this apartment. I'll holler when its warm enough.\" \n\nShe walked unsteadily toward the bathroom that opened off the side of the bedroom. Ethan heard the water running. When he heard the curtain open, he struggled to his feet. He walked gingerly into the bathroom, into the billowing clouds of steam escaping from the old-fashioned claw foot tub that served as Becky's shower. Ethan stood at the toilet, emptying his bladder. His cock seemed to be retaining its new, improved size. He felt a slight smile cross his face. When he finished peeing, he turned to the sink and washed he hands. He wiped the steam from the mirror to look himself in the eyes. His reflection was different. Ethan could swear he was taller than before. His muscles more defined. He laughed to himself at the absurdity of the notion. \n\n\"Ethan, are you going to get in or not?\" came Becky's voice from the shower.\n\n\"Certainly. But you have to promise to keep your wanton hands to yourself,\" he warned as he climbed into the scalding water with the mother would be the mother of his daughter. \n\n\"No promises,\" she giggled. \"Now get in here.\"\n\nEthan slipped the curtain back and climbed inside. His cock was already beginning to thicken and lengthen. He'd sleep in tomorrow, he promised. It was a promise he wouldn't break."
    ],
    "authorname": "OregonDavid",
    "tags": [
        "first time",
        "mind control",
        "school boy",
        "erotic coupling"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/good-hearted-ch-02"
}