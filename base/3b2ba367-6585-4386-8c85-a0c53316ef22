{
    "title": "Bed of Rose's - Jos",
    "pages": [
        "copyright by Joesephus\n\n*\n\nSeveral authors are coming out with stories based on the song, \"This Bed Of Rose's.\" There are two main versions of this song, one by Tanya Tucker with the main character (other than Rose) being a young girl and a version by The Statler Brothers with the main character a young man. Having a choice of male or female for the main character offers many options for variations in the story line.\n\nThe genesis of this story was an exchange of emails between Josephus and I and we decided it would be fun to have stories written by different authors based on the same starting story source, released at more or less the same time. We quickly added techsan and each of us invited two additional authors to participate. We hope you enjoy the stories coming out of this \"invitational challenge.\"\n\nRegards, Dynamite Jack\n\n*\n\n\"I don't give handouts to street bums, but I know how you can earn a fast twenty-five if you're hungry enough, Dick.\"\n\nThere it was, my name isn't Dick. I'd known it was possible but it still made my stomach turn to think that I'd sunk to contemplating becoming a male prostitute.\n\nI heard a female voice behind me. \"Why, Councilman Shultz, you've never offered me less than a fifty, and paid for a hotel room. If you've decided to work the other side of the street, do you really want to be cheap about it, and on a fine Sunday morning too?\"\n\nI turned to look at the attractive woman who'd just announced she was a whore. I didn't know if I should be grateful or angry. In my heart I didn't think I could go through with it, but I was awfully hungry. I hadn't had a full meal in almost three days. The woman shot me a glance, and I couldn't read her expression.\n\nAs I stood, she examined me closely. \"This boy looks mighty hungry, you sure you want him nibbling on your tube steak? Besides, they still might not impeach Nixon, but...\"\n\nHe pulled a hundred from a fat wad, looked right at Rose, and said, \"I'm still drunk from last night. Why don't you take the boy for breakfast, you can keep the change. Rose, you won't have to mention this to anyone, will you?\"\n\nRose smiled as she said, \"You know I'm the soul of discretion, I never talk about my customers, and you're still one of my regulars, aren't you?\"\n\n\"Sure, Rose, next time my wife's out of town I'll give you a call,\" he mumbled before he hurried off.\n\nI'd seen my share of hookers since I'd been put in the foster care system at eight, and I'd seen even more in the three weeks since I'd been given a hundred dollars, my clothes, and the system's hardy well-wishes the day after my eighteenth birthday. Now I was on my own, with no place to sleep and no money. Between scholarships and student loans I had enough to pay for books, tuition and fees for my first year at State. I just needed to find a way to live and eat while I went to school. With my advanced placement courses and the courses I'd tested out of, I was going to be starting with 42 hours, a sophomore. \n\nI'd done everything I could to find a job, but in a college town with more students than townies, jobs didn't grow on trees, and this was a slow time for the economy. What jobs were available were impossible for me with my lupus. Yeah, I know, almost all the people with lupus are female, but that just makes it harder on guys like me. For those that don't know, lupus is an autoimmune disease, sort of the opposite of AIDS where the immune system begins to attack itself. That results in inflammation, and eventually tissue damage. \n\nI watched my would-be customer turn a corner and turned back to the woman named Rose.\n\n\"Thanks...\"\n\n\"Don't thank me. I just didn't want to lose one of my better customers.\"\n\nMy stomach rumbled. \"Well thanks anyway, I'm awfully hungry but I guess I'm not hungry enough for tube steak; are you going to buy me breakfast or keep that all for yourself?\"\n\nShe smiled, hooked her arm in mine, and led me to a Village Inn where she ordered breakfast for me. While we waited she pulled my life story out of me...  Parents killed in a car accident on New Years Eve. Dad was over the legal limit and the insurance company refused to pay. I didn't have any relatives and I went into foster care. I didn't like it and bounced around every few months.\n\nFinally a biology teacher took me under his wing and I fell in love with school. He got married, left teaching, and moved to Europe with a new job and a fat paycheck. I'd lost track of him but I started doing well in all my courses. I still didn't get along with my foster families; a kid with lupus will put a strain on any family. Still, I hadn't understood the consequences until I was kicked out of the system.\n\nI was feeling pretty sorry for myself and was close to tears when the waitress brought my food. Rose pulled the plate from in front of me and said, \"Stop blubbering like a child. You made your bed, don't start complaining that it's got lumps in it. God gave you a hill to climb, a place where you could stand above the crowd, and all you've done is complain that no one will carry you to the top! Climbing hills is what gives you the muscles to conquer mountains, boy!\n\n\"Stand on you own hind legs like the man you're supposed to be. Hell, you could join the Army tomorrow and they'd take care of you until you shipped out.\"\n\nI couldn't keep the whine out of my voice, \"No, I can't. The army won't take me. My lupus is mild, but I do have photosensitivity. I'll never be able to work outside. If I can work a scam to get room and board, I'll be a doctor in six years. Then I'll be on easy street.\"\n\n\"I thought college and med school took eight years.\"\n\n\"It does, but with the hours they're giving me, I can get out of college in two. I'll have to take 20 hours a semester and go all summer, but the sooner I get out the sooner I stop running up bills and start making real money\"\n\nRose looked thoughtful, \"So all you need is room and board? You and I might be able to work something out.\"\n\nI took a deep breath as she pushed the plate back in front of me. I'd already decided that no matter what happened I wouldn't put myself where I'd be tempted to break the law again. An arrest record would keep me out of med school and that was my ticket out of this hell I was living in.\n\n\"I'm sorry Rose, but I don't want to make my money on the streets. I don't know what you need, but I can't fall out if I'm going to med school. There has to be a legal way to...\"\n\n\"I'm talking about a very legal job. I have a special-needs child and I need someone to take care of him while I'm working. It won't pay much, but it will give you room and board and there's nothing illegal in that.\"\n\nI could feel my heart pounding; I knew there was probably a hook that I wouldn't like. If the system had taught me anything, it was that nothing comes without a price, and generally a price higher than you wanted to pay.\n\n\"Just how special are his needs, and how old is he?\"\n\nRose dug in her purse and pulled out a picture of a cute boy in a wheelchair. \"What's wrong with him?\"\n\nI couldn't miss the pain in Rose's face. \"He was born with spina bifida six years ago. I didn't know my husband had started doing heavy drugs until Scott was born. He took off while I was still in the hospital, and died of an overdose before I could find him. We didn't have any insurance and Scott is going to need special surgeries until he's an adult. Working as a whore is the only way I can make enough to get Scott what he needs.\" \n\nI looked down at my plate, I didn't recall eating anything, but all that was left was the extra syrup for the pancakes that came with the eggs and sausage. I licked my lips, and while I was trying to decide what I should do about her offer, Rose signaled the waitress and ordered a chicken and cheese omelet for me.\n\nI didn't say anything while I waited. My mind was going a million miles an hour, the job might be honest, but the money wasn't. Finally, I snorted. I'd been awfully tempted just a few minutes ago to cross that street. I wasn't in any position to throw stones.\n\n\"All I'll need to do is take care of the kid? I won't be getting involved with your business? You don't work out of your house or anything do you?\"\n\n\"No, I don't work out of my house. It's not much of a house; I need to save every penny for Scott. Look, why don't you come with me and check it out. If you don't like it, what have your lost?\"\n\nWhen we got to her house, what I saw was a two-room efficiency. The bed was the pull-out kind and the closet was bigger than the bathroom. The second room was just barely big enough for the special hospital bed.\n\nRose saw my expression. \"You'll sleep in my bed at night, I won't be here. You will not sleep in it when I'm here during the day. If this works out, maybe I can find something a little bigger. Scott's in the hospital now. He had another surgery. He'll be there for another three days. That'll give you time to settle in.\"\n\nShe paused, looked hard at me, and seemed to make a decision. \"I've only been arrested once. The judge and the cops know why I do what I do. I'm an honest whore, but I'm bound to get caught up in a sweep again before too long. I will plead guilty and I'll probably do 30 to 90 days in county jail. Our county is smart enough to know you can't fine a whore as much as jail time will cost her. I've got money set back to cover Scott's expenses when that happens. I'll make sure I put back enough to cover you too, but if you don't take good care of Scott, there won't be any excuse that'll keep me from ripping you apart. Is that clear? If you play it straight, this will work for both of us. If you try to rip me off, I'll make you sorry you were ever born.\"\n\nI thought about it and then said, \"What happens if he gets sick or needs to go to the hospital while you're locked up. I presume you don't want child protective services to know you have a kid... they'll take him from you, but how am I supposed to manage something like that?\"\n\n\"Old Miss Holster across the street has my power of attorney. She can't take care of Scott, but she'll sign anything that needs signing.\"\n\n<P align=center>** ** ** ** **</p>\n\nI won't pretend that the next two years were easy; they weren't. I would have left the first week if it hadn't been for Scott. I've never seen courage like Scott's. I know he was in constant pain. As someone with lupus, I understand how debilitating constant pain can become. Not only didn't Scott complain, he was cheerful.\n\nAnytime my lupus erupted, Scott spent almost as much time taking care of me as I did taking care of him. If it hadn't been that he was still in diapers when I started, I think it would have been almost fun. \n\nStill, I'll never forget the first time Rose was caught in a sweep. Rose didn't work the street at that point, but she was using one of the hot sheets motels that whores use. She had the misfortune of opening her door at the wrong time and was busted\n\nPeople who live at the bottom rungs of society have a whole different set of survival tools from folks in the middle and upper class. Do you know the hours of the local food bank, or how long past expiration dates food is still good? Do you have the number of Legal Aid memorized? Do you know the difference between a decent bail bondsman and a rip off? How about how to get decent medical care when you can't pay without going to an emergency room? I knew those things and more, and so did Rose.\n\nMost people at the bottom don't spend their lives there unless they're an addict, mentally ill, a criminal, or have physical problems like Scot and I. Getting by without money takes a huge amount of time, time that can't be spent working or moving up in the world.\n\nThe first time Rose was arrested, I used some of my contacts to get her released on bail. I lined up a decent lawyer to help her beat her case. I expected a pat on the back. By trading favors, I'd rigged it so it wasn't going to cost Rose a dime.\n\nInstead she ripped me a new one. \"I'm a whore. I'm guilty and I will pay the price for breaking the law. I will not fight it, and I won't waste the taxpayer's money. \"Don't you EVER do something like this again!\"\n\nI then got a long lecture on integrity and the lessons of Dr. Martin Luther King. Dr. King never objected to being arrested for breaking the segregation laws. He acknowledged the right of society to make and enforce those laws even while he proclaimed them immoral. Thus, he never sought to evade the consequences of breaking the law, unlike later protestors on other subjects. \n\nDr. King was one of Rose's heroes and if he didn't try to evade the consequences of his actions, neither would she. It was the only time I almost got kicked out. My penance was to read and to write a twenty-page single-spaced paper on a book by Dr. Stephen Carter called \"Integrity.\" \n\nIt was one of the most important books I ever read. I hadn't given a lot of thought to morality or ethics. Food on the table and clothes on my back seemed more important. After that Rose brought me book after book, ostensibly so I could teach Scott. However, while I read those books while falling asleep, the learned lessons on how to be a man, were pivotal in who I became.\n\nWhat I learned from Rose put my expensive education at State to shame. Rose taught me how to be a man and accept the consequences for my actions. \n\nIt was when I applied to medical school that I finally figured out how special Rose was in my life. Johns Hopkins offered me a scholarship that would not only pay my tuition, but offered a grant large enough to cover all my living expenses. I decided I wanted Rose and Scott to move with me. I knew she couldn't take a chance of setting up her trade in a town where the police didn't know her. So, after visiting with some of the less respectable folks there, I figured out a scam that would get the state to cover Scott's medical expenses. It doesn't matter what it was, it was legal, if you looked at it the right way.\n\nI thought she'd jump at the chance. I knew how much she hated doing what she was doing. She flatly refused. For several weeks I was inundated with books on ethics and honesty. I enrolled at State with a full scholarship.\n\n<P align=center>** ** ** ** **</p>\n\nA little less than two year later, my world fell apart. I was lying on our bed before I changed the sheets. For over a year I'd get peace from inhaling Rose's scent and daydreaming about making a life together once I'd finished school. \n\nWhy would a street smart twenty-year-old summa cum laude graduate and medical student fall in love with a thirty-eight-year-old whore? That's hard to answer. First, Rose might be a whore but she wasn't a slut. She did what she had to do for the people she loved. She put them first and didn't worry about the cost to herself. She never talked about her work, but it didn't take a genius to see what it cost her to sell her body.\n\nThen there was the way she took care of me. I didn't realize for a while that my favorite goodies were always on hand when I needed to study. When my lupus would flair up, she'd spend hours applying the expensive lotions she'd bought to help. If I had to study late, she'd take the night off and feed me coffee or quiz me until I was ready. Rose didn't have much education, but she was one of the smartest people I'd ever met.\n\nNext was the way she made me laugh. I never realized just how bitter and shriveled my soul had become. Rose would poke fun at herself and at me in a way that made me laugh. She had the funniest stories and she had a talent for telling them. \n\nMost important was her character. The way I was raised, honesty was optional, to be used only if there was an advantage to it. A look of disappointment was all it took to break me of that. Other negative character traits were harder, but Rose had the highest standards I'd ever seen and she made me want to emulate them. Being around Rose made me a better person and I'll always love her for that.\n\nLast and least important, Rose was beautiful. I didn't see it for a long time, but the way she carried herself would have put a queen to shame. Her smile lit her whole face, and when she took care of Scott, I know the old masters would have died to paint her as the Madonna. The way I reacted to her beauty and her scent let me know that I didn't view her as some sort of surrogate mother.\n\nFinal exams had pushed me beyond what I'd thought were my limits. Rose had been a lifesaver; she kept the coffee fresh and drilled me for hours on my new vocabulary.\n\nMy reverie was broken by a call from Rose. She'd been busted in a street sweep. I hadn't known she'd been reduced to streetwalking as she got older. When I hung up I mumbled, \"I'll get her off the streets even if I have to marry her now!\"\n\nThree days later I was shocked when Rose walked through the door. Impulsively I wrapped her in my arm and I tried to kiss her. She normally allowed that, but this time she pulled back. As part of her pre-trial process they'd run a standard set of blood tests. Rose was one the first to get AIDS. She hadn't known. She was only 38 years old, Scott was 10.\n\nShe'd always had her johns use condoms, even for blow jobs, but one must have failed. The county dropped all charges, they didn't want to have to pick up the cost of treating Rose, and they knew she had too many assets to claim indigent status for free care at the county's expense.\n\nI'd lived with Rose for four years and I'd never seen her cry. I looked for some sign now, but her eyes were desert dry. When I pressed her, she laid out her future in the starkest of terms and then chased me out to \"get some books for Scott.\" If she ever cried I didn't see it.\n\nI did go to school, but not to the library. Instead I went to see some of the law school professors. I then visited with the school administration and one of my medical professors who'd taken me under his wing.\n\nThe whole process took several days, but when I had my ducks in a row I confronted Rose. \"Rose, I want you to marry me.\"\n\nI couldn't have shocked her more if I'd sprouted wings. \"Rose, I've talked to law professors and to others, and I think I've got a plan we can both live with. I've got health insurance through the school. Even if we get married it won't cover you or Scott. However, if we get married and I adopt Scott it will cover his pre-existing condition in two years as a minor. I can't get you any insurance but this is completely legal for Scott.\"\n\nI watched a host of emotions fleet across Rose's face. \"It might be legal, but it is right? I can't ask someone else to accept my responsibilities.\"\n\n\"No, you can't. But we aren't asking for anything. It's the way the policy is written. However, I can't cover Scott's medical needs if he's only a friend, and I won't be able to adopt him at my age unless we're married. Look, you can't work, but I can trade professional services to get care for you and Scott until he's covered and until I'm making enough to pay for your care.\"\n\nRose looked suspicious, \"What professional services are you going to trade. I'm not letting you go on the street especially if you're married to me and you're Scott's father!\"\n\nI had to smile. \"No, Rose, my medical professional service...\"\n\n\"You won't be a doctor for two more years. After that you'll still have to do your internship and residence...\"\n\n\"That's true, but one of my professors is willing to loan me his services on my promise to pay his gift forward. I've also arranged to get you enrolled in some of the med school's experimental treatments. I don't want to sound like I'm bragging, Rose, but you and I make a good team. My grades have me in the top three in my class, and I'm already being courted for my internship by some of the better training hospitals. I'm leaning toward Duke, but John Hopkins is hinting at a rather nice package.\"",
        "Rose staggered back and sat down hard. \"You know I'm proud of you, but this still sounds like charity. Besides, I'm not going to let you marry a diseased whore just to skirt the rules...\"\n\nI interrupted her. \"Rose, don't pretend you don't know I love you. I've loved you for years. My daydream has been to find you while you're working. I'd have the biggest diamond you've ever seen. I'd tell you I was the last man you'd ever be with, then I'd bring you back here and we'd finally make love. Rose, I don't have much of a ring, but will you marry me?\"\n\nFor the first time I saw tears in Rose's eyes.\n\nEpilogue:\n\nRose lasted for almost three years with all the experimental treatments we were able to get. She never complained even when the pain was too much for the drugs. She lived long enough to see me accepted for a residence program to become a heart surgeon. On her deathbed she saw Scott walk all the way across the room without even a cane to shave for the first time. When she hugged him she called him \"her brave young man.\"\n\nI held her in my arms as she died in our bed at home. It was one of the few times I didn't honor her wishes. I wept.\n\nThis bed of Rose's that I lay on\nWhere I was taught to be a man\nThis bed of Rose's where I'm livin'\nIs the only kind of love I understand...\n\nI would like to thank CopyCarver, SweetErika for their help on this story. "
    ],
    "authorname": "Joesephus",
    "tags": [],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/bed-of-roses-jos"
}