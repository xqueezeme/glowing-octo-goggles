{
    "title": "If I Fell",
    "pages": [
        "\"Did you hear that Jason Benson is going to be in town for the Fourth?\" asked my friend, Jeff. \"It was short notice, but the town fathers decided to make him the grand marshal of the parade. They figured Mayor Kane did it last year and he'll probably do it again next year. What's more American than a war hero in your town's Independence Day parade?\"\n\n\"No, Jeff, I hadn't heard that,\" I replied quietly. \"He must be pretty high up the military ladder by now. He was a captain years ago.\"\n\n\"He's a colonel and in line to climb even higher pretty soon,\" agreed Jeff. \"He was wounded in Baghdad a year ago and has all kinds of medals and citations. He'll be running the Pentagon before he's done!\"\n\nI mulled Jeff's news over for a minute. Jason Benson had been our town's version of Jack Armstrong, All American Boy. He played quarterback on the high school football team and shortstop in baseball. He made all-state in both. He graduated first in his class and had division I universities competing for his attendance at their institutions. He received an appointment to West Point and graduated near the top of that class there, as well as played football and baseball. \n\nThis was all very good, for him. He was an accomplished, extremely capable athlete, soldier, and citizen. I had to concede that. He was many things that I wasn't. Normally, it wouldn't have mattered very much to me. If it had been anyone else, I would have been truly happy for his success.\n\nYou've probably guessed my problem. He dated Sarah, who was now my wife, while they were in high school. Back then, everyone seemed to feel that Sarah was his perfect match. She had also been an amazing athlete, salutatorian in her class, coming in just behind Jason, and the most beautiful girl Williamsport had ever seen. Somehow, they separated after Jason left for West Point and Sarah for Temple. They never got back together.\n\nI was two years ahead of them in school. I wasn't the class genius, but I did okay. I majored in engineering at a state school. As computers became more a part of every day life, I gravitated to software programming. I worked for a few companies before I got up the nerve to start my own.\n\nI still haven't figured out exactly how I conned Sarah into marrying me, but I did. That was the single greatest accomplishment of my life, or at least the best I ever managed on my own. Our two daughters were a joint effort and the source of tremendous pride for us both.\n\nSarah never spoke much about Jason. She knew I wasn't comfortable with that part of her life. Invariably, well meaning people in the community would bring his name up from time to time. I always marveled that these people seemed to think I should admire and idolize Jason and admit how great he and Sarah would have been together. It was like I had no feelings, or worth, when Jason was discussed. No one seemed to have any doubts that Sarah would have been far better off if she had only managed to hang on to Jason.\n\nTo their credit, Sarah's parents never suggested anything remotely close to that scenario. I had even seen Sarah's mother become quite annoyed at a family picnic years ago when a cousin implied that Sarah should have married Jason.\n\n\"Only a fool would say something so hurtful and ignorant!\" she admonished the stunned cousin in front of a suddenly silent gathering. \"If you had any idea what a wonderful husband and father Greg is, you'd never make such a stupid statement!\"\n\nSarah had smiled at her mom's sudden outburst and squeezed my hand under the picnic table. Sarah always treated me with love and respect and never acknowledged any suggestion that I wasn't the best possible husband she could have found. So, what was my problem? It was the long shadow of Jason Benson, hero and all around great guy. It seemed like I was always compared to him and found wanting, both in my mind, and the minds of the madding crowd. \n\nMy conversation with Jeff ended when my daughter, April, stole the basketball from the other team's guard and outran everyone for an easy lay-up. My daughters both played basketball in a summer league. April was sneaky fast and aggressive as hell. The girls handling the ball on the other team really hated to play against her. I had only seen one girl that could dribble a basketball past her without having it stolen, and that was my older daughter, June.\n\nJune was long legged and moved with an easy grace that made her appear to be letting up when she played. She was going to Temple in the fall with a scholarship in volleyball. It could have been basketball, but she just preferred volleyball. April was going into her junior year and was the main cog in the basketball team that hoped to win districts and try for states. \n\nI never tired of watching my daughters play sports. They were good at whatever sport they played. They always gave it all they had. That is how competitive sports are intended to be played. Combined with the speed and athleticism they had inherited from Sarah, they were simply the best. June had recently graduated top in her class. That had really helped the Temple coaches decide to award her a scholarship. April was in a three-way battle for top honors in her class.\n\nI climbed out of the bleachers as they game ended. The girls were shaking hands with, and hugging, their opponents. I waited for them before I made my way to the parking lot.\n\n\"Pretty good game, wasn't it, Dad?\" grinned June. \"April wouldn't even let them get the ball past half court. The coach finally asked her to give their guards a break and back off a little.\"\n\n\"Yeah, she sounded like you, Dad. She said that we were playing for fun, as well as to win. She didn't want us to ruin the other team's morale by crushing them too badly,\" chuckled April. \"June pretty much stopped shooting after the first half to give them a chance to get in the game, and she was still the high scorer.\" \n\n\"Well girls, the summer league is supposed to be a good time for all the kids. When we started it, we discussed what the goals were going to be and we decided to promote sportsmanship and team play,\" I recalled. \"Coach Simons did an excellent job tonight.\"\n\n\"You're always trying to make everyone happy, Dad, except when you're playing against us in the driveway. You've never let up on April or me when we play at home,\" observed June.\n\n\"That's because you two are mentally and physically tough. I wanted you to learn to never give up and play as hard as you can. In league games at school, no one takes it easy on you, do they?\" I asked. \"You have to know what type of competition you're in and play accordingly. Do you think I'd do as well in business if I didn't let my clients win at golf most of the time?\"\n\n\"That's a tough one, Dad! It probably does help that you lose to your clients, but June can whip your butt in golf. I don't think you're letting them win,\" laughed April. \"You're not the world's best golfer.\"\n\n\"Regardless, young lady,\" I admonished April; \"I know enough to look like I'm trying as hard as I can and I'm gracious when I lose. That's the secret to winning at business while on the golf course.\"\n\n\"It's a good thing you explained that to June, Dad, because she'd be kicking butt and losing business all over the place. She does the opposite from you. She looks like she isn't even trying and plays great,\" boasted April about her sister. \"She needs to watch you closer so she can learn some of your techniques, liking slicing all the time.\"\n\nWe were pulling in the driveway so I didn't bother trying to frame a suitable response. I had always been able to coach and teach the kids in sports better than I ever actually played them. Sarah was the natural athlete and the girls inherited it from her. I was the one that had to learn every trick of any game to even try to compete. \n\nSarah drove in right behind us. The girls started in telling her all about their day and how their game went. As I followed them into the house, I shook my head in amazement. How did I manage to have three such incredible women in my life?\n\nSarah was the top honcho at the local hotel and convention center, which was part of a major chain. She had started there after she graduated with a degree in hotel management. Her parents wanted her to be a lawyer, but Sarah knew what she wanted and she went for it. Like everything else she tried, she was very good at it. Two years ago she had reached the top and had even turned down a promotion recently that would have required moving to Kansas.\n\n\"Was anything special going on today, Sarah?\" I asked. \"You looked a little more dressed up than usual, and you had to stay late. Are the corporate big boys in town for the holiday?\"\n\n\"No, but you certainly are observant, Greg,\" admitted Sarah. \"The day after tomorrow is the Fourth and we always sponsor the grand marshal's float, as you know. This year the paper wanted to get some pictures to print before the parade.\"\n\nWhy did I suddenly get a queasy stomach? I realized that it was what Sarah didn't say that gave me cause to worry.\n\n\"Was our golden boy and war hero there for the pictures, Sarah? You seemed to have forgotten to mention that he was going to be in town, as well as be the grand marshal at the parade. Any chance he'll be in the pictures with you?\" I probed.\n\nSarah played with her hands and looked to see if the girls were in the room. She seldom showed any nerves so this caught my attention.\n\n\"Jason was there, Greg. Our hotel has donated a suite for the use of our local military hero. It's just good public relations. His parents moved away from Williamsport a few years ago. He had no place to stay. We decided to donate a suite to a local man that had been wounded in service to our country and is serving as grand marshal at the Fourth of July parade,\" reasoned Sarah as her voice rose slightly. \"It's just good business and there's no reason to get all worked up about it.\"\n\n\"Then why are you getting worked up?\" I responded immediately.\n\n\"I'm not! Well, maybe I am a little,\" conceded Sarah. \"It's just that we have always tried to avoid the subject of Jason. I know how you feel about our dating back in school, and how annoying it is when people, even after all these years, keep throwing his name at you, and me. This is strictly business, Greg. You are my husband and the only man I love, or have ever loved. You need to believe that.\"\n\n\"It's sure good to hear you say it, Sarah, and I want to believe you. The question that comes to mind is this. Why did you feel it necessary to keep the information about Jason's return from me?\"\n\n\"I just told you that I know it's a sore subject and I didn't want you to worry, or get upset,\" reasoned Sarah. \"He simply doesn't mean anything to me.\"\n\n\"In that case, there should be no reason for me to be upset and certainly no reason for you to keep any information from me, is there?\" I asked.\n\n\"Well, no, there really isn't, Greg. I'm so glad we have this out in the open and are discussing it. It seems like the specter of Jason has hung over us ever since we were married.\"\n\n\"Or longer,\" I added. \"So, do you have any more activities scheduled that include the General?\"\n\n\"Colonel Benson will be the grand marshal at the parade and then feted at an informal affair at the hotel on the following day,\" confessed Sarah. \"There will be some snacks and beverages provided by the hotel and folks will have the opportunity to fawn over him.\"\n\n\"Can I assume that you will be the hostess of this fawning?\" I asked.\n\n\"Yes, Greg, I am the fawn overseer. That is part of my job. If someone is going to reap goodwill and press from this, it had damn well better be me,\" asserted Sarah. \"Do you have a problem with it?\"\n\n\"I don't see that it would matter, Sarah. The die is cast and the plans are made. I wasn't privy to them, but I'll survive, as long as what you tell me is true. He means nothing to you, right? You won't get all doe-eyed at the fawning?\"\n\nSarah was showing the telltale signs of being annoyed at my statement until she caught my little pun. Then she broke into a grin and hugged me.\n\n\"Greg, I love you so much! You're the only buck that ever attracts this doe's eyes, or any other body parts,\" she laughed.\n\n\"I hope that applies for everything of yours that comes in pairs and not just your eyes, Sarah, and as well as anything that may be one of a kind,\" I smiled.\n\n\"You know that's all I have, Baby,\" cooed Sarah. \"It's all one of a kind and it's all yours!\"\n\nAs we passed through the living room, we explained to the girls that we were both too tired to eat and were going to bed. They would have to get by on eating what was leftover from yesterday's roast beef.\n\n\"Too tired?\" laughed June. \"Then we'd better not hear any noises coming from your room! Last time you guys were this tired, you kept us up half the night!\" \n\n\"Oh dear!\" blushed Sarah as I closed our bedroom door. \"Maybe we'd better wait until the girls are asleep. We don't want them to think we're doing it.\"\n\n\"They already know we're \"doing it\" as you put it, Sarah,\" I pointed out as I freed her breasts from her low top and began to nibble on them. They think we're in love.\"\n\n\"Well, as long as we don't mislead them,\" sighed Sarah as she worked on my shirt buttons. \"Just don't make me moan so loud this time!\"\n\nThe next evening I casually asked Sarah how her day went as she was making dinner. She knew that I was really asking about Jason and if anything happened between them.\n\n\"It went well, Greg. Jason is even more dynamic and forceful than he was in high school. I guess being an officer and going to war has sharpened his natural leadership skills,\" replied Sarah.\n\n\"Sarah, let's get something straight right now,\" I quickly responded. \"When I told you that I expected you to be open and honest about Jason, I sure as hell didn't mean for you to tell me what an incredible guy he is! I want honest opinions about what a pompous ass he is and how glad you are that you married me. That's the kind of honesty I'm looking for here.\"\n\n\"Greg, the guy may be an army ranger and a war hero, all tanned and lean and tougher than an old hunk of rawhide, but he can't compare to you!\"\n\n\"That's more like it. Tell me more,\" I prompted.\n\n\"Sure, Jason had to take a call from the President of the United States this afternoon, congratulating him and thanking him for his meritorious service, but you served as vice president of the Elks Club two years ago. Jason isn't even a member!\" stated Sarah with a straight face.\n\n\"It figures,\" I nodded. \"The damn guy probably thinks he's too good for the Elks. He'll certainly never attain the status of treasurer of the soccer club, either. What a freakin' loser!\"\n\n\"Exactly what I was thinking, Dear,\" agreed Sarah. \"He'll probably botch up his interview on Fox News after the parade tomorrow, too. The book he's working on will be dull as hell. There's a real good chance he won't make general before he's fifty.\"\n\n\"That's what I'm talking about!\" I almost shouted. \"The damn pussy probably hasn't ever changed a diaper in his entire life, either. That's the real acid test. Medals should be awarded for that! Anybody can take a bullet in the ass.\"\n\n\"I have to admit it, Greg. It does help when we speak the truth and discuss everything like adults,\" laughed Sarah. \"No guy can compare to the guy I have!\"\n\n\"Don't you forget it either,\" I warned. \"If you want to be there when my troops surge, you'd better play your cards right. My plans for their deployment can be changed right up to the last second.\"\n\n\"Those troops had better not surge prematurely or they'll be bivouacked out in the cold, Buster, and so will their reinforcements,\" retorted Sarah. \"You'll know when it's safe to deploy the whole brigade. I'll decide where and when that surge will occur.\" \n\n\"You always get to decide,\" I whined. \"Why can't I be the one to determine where my troops get stationed?\"\n\n\"Oh, you can, Dear,\" countered Sarah. \"You decide if you want them in a tissue, or someplace of my choosing, but more to the little guys' liking. You've demonstrated over the years that I can't trust you to make that decision. If I turn my back on you for a second you're trying to deploy them where no man has gone before.\"\n\n\"It's just that the troops want to explore that final frontier, Sarah. They're courageous little soldiers and they're willing to travel anywhere in the universe, including black holes,\" I suggested with a smile.\n\n\"Believe me when I tell you that anything that enters that black hole will never survive, Greg. It will simply cease to exist. It would be the end of your army, as well as the rocket in which they travel,\" cautioned Sarah. \n\n\"Okay, Sarah. I understand,\" I conceded. \"It's just human nature that when they can travel anywhere in the solar system except Uranus, that's where they want to go.\" \n\n\"Sweetheart, be damn glad that Venus is available for them. That's a planet any normal man would love to visit and it's really under explored and under-utilized. I don't think your guys would be too happy to be banned from there, or to arrive and find other troops already in control,\" warned Sarah with a wicked grin. \n\nI grabbed Sarah and brought her against my chest and held her tight. When she raised her head up to look at me, I placed my lips over hers and pressed them down firmly. Sarah was responding and her mouth began to open slightly to allow me access.\n\n\"Why don't you two get a room!\" groaned April as she wandered into the room. \"This is the kitchen, where my food is prepared.\"\n\nSarah blushed and tried to get away from me, but I wouldn't let her go. She quickly looked up at me again. I gave her another kiss and then released her.\n\n\"Boy, Dad, you really like Mom, don't you?\" grinned April. \"Think I'll ever find a guy like you to love me?\"\n\n\"Not before you finish college, you won't!\" I exclaimed. \"I think the problem for you will be beating them off.\"\n\nSarah gasped and April turned bright red. Then I realized what I had said.\n\n\"Taking a stick and hitting them to keep them away!\" I rephrased my statement. \"You'll have to fight them off. Do you understand what I mean?\"\n\nApril kept glowing a bright red. I felt my face flush as I turned and headed for the garage. I had suddenly remembered the back yard needed to be mowed. Raising daughters isn't always easy.\n\nThe parade was a great success and the cable news stations had crews covering it. Colonel Benson was a man on the upswing. He epitomized everything the media looked for on Independence Day. I watched his interview later that evening and had to admit he spoke well, looked great, and made a person proud to be an American.\n\nThe day after the parade was hectic. Sarah left early to be sure everything would be perfect for the open house they were having for Benson. The fact that one cable news crew stayed overnight at her hotel did little to alleviate her nerves. If her hotel was going to be on the news, it had better look perfect!\n\nI decided to show Sarah that I really did appreciate her and all she did for me and the girls. I stopped in to see Jeff at his family's jewelry store. I listened to a few suggestions he made and decided on a pair of diamond earrings. Jeff tried to talk me into the matching necklace, but I was already over budget. I decided that it would be something I could buy Sarah another time to match her earrings.\n\nI wandered around the main conference room, watching Colonel Benson pressing the flesh with all his adoring fans. He was gracious and humble. I had to give it to him. He was really making a good impression with the denizens of his old home town. The fact the every one in town already held the belief that his shit didn't stink didn't hurt his ability to delight.\n\nSarah was overseeing everything and doing a great job. It was a well run affair and the hotel was creating a lot of goodwill locally. It was supposed to finish by six and at six thirty there were still a few hangers on and camp followers unwilling to leave until the free food and drink was gone.",
        "I knew things would be finished soon, so I slipped into Sarah's office. I had decided to surprise her with the earrings and then take her to a neighbor's party after dinner, where she could show them off to her friends.\n\nI had been waiting for Sarah for fifteen minutes when I decided to use her bathroom while I waited. I had just finished washing my hands when I heard her office door close. I felt my big smile evaporate when I realized a masculine voice was speaking. I hadn't closed the bathroom door completely and the conversation was easily followed. \n\n\"Sarah, I know I keep saying it, but you look fantastic! Just being near you drives me crazy. You're still the most beautiful woman I've ever made love to.\"\n\nMy gut twisted around and I felt the sweat bead on my forehead. I felt weak and had to lean on the sink to stabilize myself.\n\n\"That's very flattering, Colonel, but I have to ask you to please not speak to me like that. I'm quite happily married now and don't want to give you the wrong impression,\" replied Sarah. \"That was over twenty years ago and is best forgotten.\"\n\n\"Sarah, I know that you still feel something for me. I've seen it the past several days while we've been working together, and please call me Jason,\" replied the smooth hero bastard. \"The only reason I agreed to spend the holiday here was to see you again. I have to say it was worth it, too!\"\n\n\"I'm sure that you wanted to let the people in your old home town have the pleasure of having you here for the parade, Jason. You are a hometown boy that made good. Everyone takes a lot of pride in your adventures and success. You are, after all, a real war hero,\" concluded Sarah.\n\n\"Sarah, come up to my room right now!\" pleaded Benson. \"I have to leave early tomorrow morning. Come and let me make love to you again. That will be your special way of thanking me for everything I've done for the country, and for you, really.\"\n\nI was close to throwing up! If I started barfing, Sarah would know I was eavesdropping on her conversation. I reminded myself to take slow, deep breaths and managed to regain control of my stomach.\n\n\"I'm married, Jason. My husband would suspect something immediately,\" reasoned Sarah. \"He would be extremely upset, to say the least.\"\n\n\"I saw him hanging around, Sarah. He's not the type to give any trouble. I've had hundreds of men like him under my command. They never challenge me. He wouldn't dare say anything to you,\" reasoned Benson. \"Coaching girls' soccer and changing diapers doesn't prepare a man for battle.\"\n\nI could hear the contempt in Benson's voice as he chuckled at his own comment. He didn't seem to hold me in vary high regard.\n\n\"Jason, why don't you stay a few extra days if you want to see more of me?\" asked my devoted wife. \"I can keep your room for you with no trouble, and no charge.\"\n\n\"I can't, Sarah. My orders are to report to Washington tomorrow. It's all part of climbing the ladder, going up the chain of command. I've invested over twenty years and a lot of blood in this, and I'm getting close. I sure don't want to screw it up at this point.\"\n\n\"Is it true that you Rangers have some kind of thing about not leaving a fellow Ranger behind, Jason?\" asked Sarah with way too much enthusiasm to suit me. \n\n\"That's right, Sarah. We take an oath and we live by it. Without that trust and knowledge that our brothers are watching our backs, we'd never be able to survive,\" responded Jason with obvious pride. \"Come on up to my room, Sarah. You have the chance to have a real hero make love to you tonight.\"\n\n\"That's very tempting, Jason,\" answered Sarah. \"It's just that there are a few things I don't quite understand. Maybe you can explain them to me first?\"\n\n'Sure, Sarah,\" Jason replied quickly. \"I'll be glad to explain anything so we can hurry up and relive the glory days!\"\n\n\"Well, Jason, let's start with this. Why do you feel that you are so much better than my husband? I know you have trained and gone to war and been decorated numerous times. Do heroes have to have medals and badges to be a hero?\"\n\n\"I don't think I get your question,\" Benson answered slowly. \"Your husband never risked his life. He never went to war. He hid behind your skirts and coached girls' soccer and went to PTA meetings. He really didn't do anything very courageous.\"\n\n\"Greg took over the soccer team our daughters played on when the coach broke her femur in a car accident and no one else was willing. He didn't even know the rules. He always watched football, not soccer,\" continued Sarah. \"He studied books and read things on the internet so he could do it. He had a tough time and made some mistakes, but he kept the team going. He did that for our daughters, and the other girls on the team.\"\n\n\"Greg helped take care of my father after his stroke so my mother could have some rest. He was never especially close to Dad, but he willingly bathed and fed him. The reason? Because he loves me. He's my hero, Jason,\" stated Sarah.\n\n\"I'm sure he's a good guy, Sarah. I didn't intend to demean him. It's just that after doing what I've done over the years, it's hard to feel too much respect for men that don't do what I do,\" answered Benson.\n\n\"That's not a satisfactory response, Jason. Greg worked nights one year so he could attend the girls' activities. He worked two jobs for another year so we could save enough money for a down payment on our house. He caught our daughter June smoking in our garage with a couple of her friends when she was sixteen. He took her over his knee in front of them and spanked her good. She cried and told him she hated him and ran to her room. He never slept that entire night, he was so worried about her. The next day she apologized and promised to never smoke again. Then she hugged him,\" reminisced Sarah. \"That's how a man raises his family, Jason.\"\n\n\"My next question is this. How could you ask me to forsake my oath? You have so much pride in yours and will risk your life to live by it, yet you had no trouble suggesting that I break mine,\" said Sarah more then a bit heatedly. \"You have contempt for those that break their oath and then you ask me to break mine.\"\n\n\"Then you tell me that you have so much time invested in your career and don't feel I'm worth risking it's loss,\" continued Sarah. \"How about my career and my investment? You think nothing of asking me to take the chance of losing my job, and ruining my marriage while you brag to me about yours. Do you really feel so much contempt for me and my life? Is it so beneath yours? Haven't I spent twenty years building my life, my marriage, my career?\" she demanded.\n\n\"When you put it that way, Sarah, I can see where I might have been a little out of line. It's just that you're so beautiful and we have such wonderful memories together,\" replied Benson nervously.\n\n\"Those wonderful memories are yours, not mine, Jason,\" answered Sarah. \"I remember regret that I wasn't able to give Greg the honor of being my first. I remember how self centered you were. I remember being relieved when you left for West Point and seldom came back to Williamsport. Those are my memories!\"\n\n\"Wow! I had no idea you felt that way, Sarah,\" Benson responded stiffly. \"If you'll excuse me, I'll be on my way.\"\n\nWith that, I heard the door open and close rather sharply. I remained in the bathroom, worried that Sarah would enter and realize I heard the entire conversation. Luckily, I heard her office door open and close again. She had left.\n\nI waited until I was pretty certain that the coast was clear and headed for my car. I called Jeff as I walked across the parking lot.\n\nI was in the kitchen, helping the girls make dinner when Sarah entered from the garage. I had been on pins and needles waiting and I had no patience left.\n\n\"Sarah, I'm so glad to have you home!\" I exclaimed as I hugged her to me.\n\n\"Greg, I was just finishing up some paperwork,\" explained Sarah. \"I wasn't, you know, doing anything...\"\n\nI pressed my lips against hers and held her tightly to my chest. My heart felt like it was going to burst. After a very long time, I pulled my lips from Sarah's.\n\n\"Wow! Dad is really glad to see you, isn't he, Mom?\" laughed June. \"I hope my husband greets me like that after twenty years of marriage.\"\n\nSarah was looking at me closely. I could tell she was trying to determine exactly why I seemed so glad to see her and why I apparently didn't need any explanations about her being late.\n\n\"I hope you do find a husband like mine, June,\" agreed Sarah. \"He's full of surprises, and he sure loves his family!\"\n\nI pulled a small, beautifully wrapped package out of a drawer and handed it to Sarah. She took it from my hands carefully and stared at it.\n\n\"Mom! Open it!\" cried April. \"I can't wait to see what it is!\"\n\nSarah's hands seemed to tremble as she tugged at the wrapping. She discarded the paper and held the box in her hand. Then she slowly opened it.\n\nThree sets of eyes began to tear up simultaneously. Oohs and aahs filled the room. The girls scooped up the necklace and placed it around Sarah's neck and hooked it. They each took charge of an ear and soon had the earrings in place. Then all three women turned to me. \n\n\"Dad! Are they tears?\" asked June. "
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "hero",
        "colonel",
        "war",
        "iraq",
        "parade",
        "fourth of july"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/if-i-fell"
}