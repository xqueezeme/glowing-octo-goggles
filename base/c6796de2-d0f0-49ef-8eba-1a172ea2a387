{
    "title": "A Ring Named Ezzie Pt. 06",
    "pages": [
        "Just as a heads up this chapter contains some thoughts of incest. Mother/Daughter & Mother/Son. They are not full blown adventures just thoughts, but you never know what the future holds for Ben.\n\nAs always I appreciate all the comments.\n\nThe free publicity from Natalie on the morning news was Awsome. Sorting through literally hundreds of emails, not so much. It literally took me most of a day just to weed out the junk, and stupid shit. Once that was done approximately 320 emails became 40. So for round numbers 90% of the emails from the morning news were junk.\n\nFrom there 36 were lower priced homes in other areas of the state. I give them to Ron to farm out to his other offices local to them. That left 4. 1.2% of the 320 emails!\n\nThey all look decent, and if they aren't already under contract etc it will be great, but one catches my eye. An email from Lisa, she mentions her husband works for the same brokerage firm Beth's boyfriend BJ does. I reach out to BJ by text.\n\nME - I have a semi work related question. Can you call me when you get a minute?\n\nBJ - will be calling from desk phone\n\nA few seconds later a strange number is calling. \"Hi BJ. Well this is BJ right?\" I say.\n\nHe laughs. \"Yes it's me.\"\n\n\"I should remind you, I am calling from a recorded line.\" He says.\n\nGot It. \"I understand BJ. I have hopefully a simple question. I got an email from what I am guessing is a high up executives wife in your firm. I got an email from a Lisa Cohen, she mentions her husband...\"\n\n\"Dick Cohen?\" BJ asks with a little reverence.\n\n\"Yes, that's him. So you know him?\" I ask\n\n\"Um yeah I know of him. He is a big rainmaker in the company. I don't know him personally though.\" BJ says. \"Hey umm listen. Like I said I am at work and I have a conference call I have to get on. Can we catch up some other time? Maybe get a beer like we usually do?\"\n\nLike we usually do? He is giving me a brush off to get off the recorded line. \"Sure BJ. That would be great.\" I say.\n\n\"Great, I will text you and we can set a time. Talk to you later.\" And BJ hangs up. That was weird. I am 99% sure he didn't want to say something on the recorded line.\n\nI text him.\n\nME - Call me tonight\n\nBJ - after 6pm.\n\nI have had enough for today. I send back a pretty generic email to the other three, and play the wait and see game. I close up the laptop and call it a day. I turn and see Mr B's supplier contracts in the folders. Fuck I have been putting this off.\n\nI start pouring over them. Two of them are a little older agreements originally agreed to based on lower sales. Not only does Mr B give them more business the last two years since another supply house closed, but he will be giving them even more with the Reynolds contract I got him.\n\nI look at my watch, it's later than I thought. I text Karen.\n\nME - If you will give me 20 minutes with your Dad I will come over and take you out to dinner.\n\nKaren - I am going to get a complex. I swear sometimes you want to talk to my Dad more than me.\n\nME - NEVER!\n\nKaren - It's a good thing I love you\n\nME - See you soon.\n\nI splash some water on my face, round up the contracts and head out. I tell Mom on the way through the kitchen I am taking Karen out to dinner. I hear an I love you as the screen door closes behind me.\n\nI head over to Karen's. She greets me with a big kiss and hug. \"Alright, alright. A father doesn't want to see this.\" I hear Mr B say as he rounds the corner. He points at me. \"You! Let's talk business.\"\n\nI smile at Karen and mouth. \"I love you.\" And follow Mr B.\n\nWe talk about business. I lay out my numbers and ideas. \"Sounds good.\" Says Mr B. \"I will send you the contact information I have for them. Call them, set up an appointment and renegotiate the deal.\"\n\n\"Umm, you don't want to be there?\" I ask.\n\n\"Ben, you don't need me. You are more than capable of doing this. You know your stuff and know the numbers better than I do. Go do it. Make me proud.\" He says.\n\n\"Yes sir I will.\" I say a bit shocked.\n\nKaren and I head out for dinner. I take her to a restaurant attached to the mall. I am thinking after dinner we will walk around the mall. Since she knows it's coming, I was thinking about stopping at a jeweler and find out her ring size and maybe what style she likes and doesn't.\n\nI enjoy just being with her. Talking to her, looking into her eyes, and listening to her laugh. We are talking about Uncle Ray's Labor Day party. I am glad Uncle Ray has mellowed out some. I think it took Karen yelling at him in the car, but I am glad for it. We are walking around the mall, and approaching a big jeweler.\n\n\"Ezzie, could you release Karen from the, no talking to other people about the proposal while we are in the store, and then put it back in place?\" I ask.\n\n\"I can Ben.\" Ezzie says.\n\nI would swear Ezzie has a little attitude with me asking her to keep Karen from talking. Ezzie doesn't say in my head, but she doesn't have to. Great, now my magic ring doesn't want to talk to me. I can't win.\n\nKaren looks up, and realizes I am steering us towards the jeweler. \"Really?\" She squeals.\n\n\"Easy Karen. We are just looking, and finding out your ring size and maybe what style you like and don't like.\" I say.\n\nShe squeezes my arm tight to her. \"I Love You. I Love You. I Love You.\"\n\nI smile and walk us into the store. An hour later we walked out. I have learned a couple of things, most importantly Karen's ring size, and that she doesn't like square diamonds. I was a bit of a cheapskate with her in the store. She would look at a slightly bigger nicer one and I would say quietly to her. \"Wow, these get expensive.\"\n\nAfter a comment like that she would usually turn and look at a slightly smaller version. While I have every intention of buying a slightly bigger ring than what she was originally looking at.\n\nAnyway we leave the store and Karen is floating on cloud nine. Ezzie hasn't said anything to me since earlier. Karen heads to the ladies room. I sit on a bench and say \"Out with it Ezzie.\"\n\n\"Out with what Ben? I don't understand what you are asking?\" Says Ezzie.\n\n\"Oh I think you do Ezzie. You disapprove of me asking you to keep Karen from talking to anyone about me proposing to her.\"\n\n\"Ben, it's not my place to disapprove. I am just here to do as you wish.\"\n\nI swear I could hear smugness in her voice. \"You know for someone that is 700 plus years old, you are acting like a child.\"\n\n\"Sure, turn this on me, make it about me being childish. Let's skip over the part where you are changing the woman you love.\" She yells in my head.\n\nI sigh. \"Ezzie, come on. You know I am not trying to change her.\"\n\n\"I thought you were different Ben, but I guess the temptation of having me on your finger is too great. It's too easy to make everything simple and easy, even if it means changing the woman you love.\"\n\n\"Come on Ezzie, you know why I am doing it.\"\n\n\"No, what I know is I was happy when you agonized over a small white lie about your summer job. What I was happy about was you asking me to warn you about changing Karen. Then like every other man that I have served, you changed the woman you claim to love. If you truly love her. You love her as she is. There is no need to change her.\" She says.\n\n\"If she slips Ezzie...\". I don't get to finish my thought.\n\n\"What if you slip Ben? Your Mother? Mrs B?\"\n\nJust then I see Karen heading over to me on the bench. She pats my face. \"Hey, what's wrong? You look upset.\" Karen says.\n\nI turn to face Karen. \"Honey, you know I love your parents. I would never want to disappoint them. Please promise me you won't let it slip that I all but proposed to you, and told you about the talk I had with your Dad.\"\n\nShe hugs me softly. Holding my head against her with one hand and rubbing my back with the other and just hugs me. After a minute she pulls back and looks at me.\n\n\"I haven't said the vows yet, but when I said yes to you. I was saying to you, yes I will Love, Honor and Cherish you for as long as I live. I will Honor you Benjamin, and do as you asked I promise.\" She leans in and kisses me.\n\nWe break the kiss and she hugs me again. \"Isn't it Love, Honor and Obey?\" I ask.\n\nShe tightens her grip in my hair, and pulls my head back. With a big smile on her face. \"Do you want to live long enough to say those vows?\"\n\nI laugh. \"Yes.\"\n\n\"And what were those vows?\" She asks.\n\n\"Um Love, Honor and Umm.\" Her grip tightens in my hair. \"Cherish, Cherish.\" I say.\n\nShe releases my hair and rubs my scalp. \"You are so smart.\" She laughs as we hug. My phone chooses this moment to ring, and I don't care. I just hold Karen to me.\n\n\"Ok Ezzie. I won't ask you to make Karen not talk about it.\" I say in my head. I can feel Ezzie's happiness.\n\nI look at my phone after we are walking again. Oh shit BJ. I stop walking for a minute and text him.\n\nME - BJ out with Karen last minute. Can I call you in an hour or so?\n\nBJ - NP\n\n\"What are you texting BJ about?\" Karen asks as she sees his name on my screen.\n\n\"Just asking him about someone that works there. I got an email from his wife about selling their house after Natalie gave the world my email.\" I tell her.\n\nWe get to the car. I open the door and let her in. Before I can get the keys in the ignition her hands are grabbing my dick. She leans over towards me and starts undoing my pants. I lift my hips and she pulls them down some.\n\nShe smiles up at me. \"Now I want to show you how I will express my love for you.\" She puts her head in my lap and sucks half of me into her mouth. She goes crazy sucking and licking me. She feels me getting excited, and she turns it into a slow lazy blow job. \"Nope, not so fast. I want to drag this out. I want you to see stars when you cum. I want you to fill my mouth with your cum\".\n\nI moan as I reach down and recline the seat a little more. If she wants to drag this out I will lay back and enjoy it.\n\nShe has taken me to the edge twice, and stopped in time. I am getting there again. \"Please Karen, don't slow down again. Please let me cum.\"\n\nShe pulls off me and stares up at me. \"I won't stop as long as you promise to shoot all of it in my mouth.\" She sinks her mouth back down, and I just groan.\n\nShe is relentless. Bobbing up and down, sucking as she goes. She will not stop. She is twisting and stroking me. She knows she is going to make me cum, and she wants me to cum in her mouth. I can't help but reach down and hold her head down on me and loudly groan. As my stomach clenches, I cum in her mouth with four good shots.\n\nI relax back into the seat and sigh. \"Fuck that was good.\"\n\nKaren climbs up beside me and on my chest. \"God it was so Big Ben.\"\n\nI don't hear her clearly, or I am not thinking clearly. \"Honey, you know I am just average.\"\n\nShe laughs. \"No silly. I had to swallow twice when you filled my mouth.\"\n\n\"Oh\". Is the only answer I have.\n\nShe lays against me rubbing my chest. \"God I can't wait until we are married and living together and I can do that whenever I want.\"\n\n\"Amen.\" I say, and Karen slaps my chest giggling.\n\nI drop her off and head home. Mom & Dad are already upstairs so I sit on the couch and call BJ.\n\nAfter the pleasantries BJ gets right to it. \"So the long and short of it is Dick is a dick!\" He says\n\n\"That bad?\" I ask.\n\n\"No joke Ben. He is by far the biggest personal broker the company has. Commissions, and performance bonuses alone he makes almost 2 million a year, and that's just what I know of since I compile the numbers at year end.\" Says BJ. \"He has had people fired because he didn't like them. He is not a guy to mess with. If you are on his good side, you are golden. If not, well having him not know you is better than having him not like you.\" Says BJ.\n\n\"So if he likes someone like you?\" I ask.\n\n\"Well I would be brought onto his team. Which would mean getting on the team that consistently has the highest sales and commissions. Hopefully it would mean getting him to notice me in a good way.\" Says BJ\n\n\"BJ, is he top dog because of volume or skill?\" I ask.\n\n\"I honestly don't know Ben.\"\n\n\"Do you maybe know someone who could pull the last 12 months of transactions so we can see?\" I ask.\n\n\"I could, but where are you going with this Ben?\" He asks.\n\n\"Lets just say I am having the beginnings of an idea, and I may need a skilled investor to help me with it.\"\n\nI thank BJ for his time and end the call. I then pull up my email and send Mrs Cohen a personal email. I tell her I would be happy to talk to her about listing her home, and if need be help her and her husband find a new one.\n\nThe next day I reach out to Mr B's two suppliers and arrange for meetings. I get lucky and schedule them both later that afternoon back to back. The first meeting was at the supplier Mr B does less business with. I went into the meeting with certain numbers in my head. The rep I met with was a nice guy. I had Ezzie find out what he was thinking for numbers. He was actually thinking the same numbers I was to get more business, and willing to offer another 1/2 point if we take delivery of maintenance supplies, (filters etc) a pallet at a time. It's easy to agree and sign.\n\nThe second guy, is an asshole.\n\n\"Ben, he doesn't want to budge on the old numbers. He wants Mr B to come in and negotiate, he isn't happy Mr B sent some snot nosed college kid.\" Says Ezzie.\n\nOh I don't think so. \"Ezzie, have him match the previous places offer, and after it's signed have him regret it. Let him know this snot nosed college kid outsmarted him.\"\n\n\"It's done Ben.\"\n\nLater that day I go to the shop. I catch Mr B helping the guys unload a truck. I tell him about the two meetings. I tell him what a nice guy one was, and what an ass the second guy was.\"I think he was peeved you sent a kid to negotiate for you.\"\n\n\"I think he will be more upset when he starts losing some of my business. I would rather buy from a place that respects my employees.\" He says.\n\nI find it funny. \"I am an employee now?\" I laugh.\n\nHe looks at me for a moment, and puts an arm around my shoulder as he walks inside with me. \"No worse, you are family Ben.\"\n\nHe catches me off guard with that one. \"Wow, Thanks Mr B. That means a lot to me.\"\n\nMr B is thrilled with the new agreement. He starts talking about building floor to ceiling shelves to accommodate the bulk supply orders.\n\nHe smiles at me. \"Come on inside. Let's have a celebratory cigar and drink.\"\n\nWe are sitting there with a very strong scotch, and a cigar. Two guys come in and laugh. \"I knew when I smelled the cigar you would have the scotch out.\" One guy says as he comes in. \"Come on, fill those other two glasses up.\"\n\nMr B hands out two more glasses. \"What are we drinking to?\"\n\nMr B points to me. \"Ben here renegotiated new terms with our suppliers. He will be saving us some money.\"\n\n\"Great so we all get a raise?\"\n\nMr B laughs. \"Pick one. A raise or a good glass of scotch?\"\n\nThe quiet guy knocks back the glass, and holds it out for a refill. \"Fuck it, good scotch.\"\n\nWe all laugh. The guys leave and Mr B smiles at me. \"I have a surprise for you when you get home.\" Says Mr B.\n\nWhat? \"Ezzie what did he do?\"\n\n\"He talked to your Dad today and invited your parents up to Ray's new cabin for the weekend over Labor Day. Mr B's sister can't make it, and he thought it would be a good little get away. You and Karen are getting an inflatable mattress in the small office downstairs.\" Says Ezzie.\n\nI could have had the cabin to myself and now, I am on an inflatable mattress in a 10x10 room. Great! \"And am I going to like this surprise?\" I ask.\n\n\"Probably not, but your Dad and I will.\" He laughs\n\nYeah Mom & Dad probably will enjoy it. It's beautiful up there, but I play along. \"Great.\" I playfully moan.\n\nMom is home and greets me with a big smile and a hug. She looks at me. \"So I guess we are having a family to be gathering on Labor Day.\" She says.\n\nI play dumb. \"What are you talking about?\"\n\nHer smile gets bigger. \"Mr B talked to your Dad today and invited us all up to Uncle Ray's new cabin for the Labor Day weekend. Looks like the in-laws are getting together.\"\n\nI look surprised and a little put off. \"Mom! You can not talk like that. If you slip around Karen..\"\n\nShe hugs me tight. \"I won't Honey, I promise. I am just so happy for you.\"\n\nI hug her back. \"I know Mom.\"\n\nI retreat to my room and check my real estate emails. What do you know, Lisa Cohen replied. She would like to set up a time to meet.\n\nI reply back anytime works really, and ask for the address for the house to run some comps. Her first email told me the general neighborhood, but no address.\n\nShe sends a reply about 15 minutes later with that address, and can I meet tonight at 7:00pm.\n\nI run the address to see it's value. Holy shit this is nicer than Natalie's house. This thing is a small mansion. Holy crap! I reply to the email 7:00pm is great.\n\nI spend the next hour pouring over information. This should easily be 2.5-3 million.\n\nI download lots of comps to show them on my iPad, I have printed and electronic contracts ready to go. Three million is a $150,000 commission. There is no way I am not getting that listing.\n\nI arrive at 6:55pm. I don't want them upset if I am late. On the drive over Ezzie and I go over the game plan. Mr & Mrs will think I am the best agent they have ever dealt with, and they will recommend me to anyone that talks to them about buying or selling a house. They will both think a full 5% commission is more than fair for the personal attention.\n\nThis part of it is pretty simple since Ezzie and I have done it before, but I want to lay the groundwork for Mr Cohen, and BJ. I mention knowing BJ. He doesn't recognize his name.\n\n\"Ezzie I want Mr Cohen to personally call BJ in work in the AM and offer him a spot on his team. Mr Cohen is going to want to take BJ under his wing and teach him Everything he knows about banking, brokerage & finance. When he thinks of BJ he thinks of him being his prot\u00e9g\u00e9.\"\n\n\"No problem Ben.\"\n\nI walk in and out of their house within an hour, a signed contract, and an Open House this Saturday. Shit at this rate who needs a finance degree. Well, I do so I can open my own brokerage firm some day.\n\nI call Ron and tell him about the new listing. He is Very Excited. I promise to scan and email him the signed contract. I promise to bring the original to the office after I have a signed Offer from the open house to go with it.\n\nI stop at Karen's hoping to catch her before work. She opens the door in shorts and a tee shirt. She is not dressed for work, and she has a Huge Smile on her face. \"Got any plans next week?\n\n\"I thought we were going to Uncle Ray's at the end of the week?\" I say.\n\n\"Nope! We are going Sunday.\" She says.\n\nI look at her. I can see it in her eyes. \"Sunday? What about the coffee shop? What's the catch?\"\n\nShe starts acting like a kid caught in a lie. \"Well Umm... Uncle Ray doesn't have the time to finish cleaning out some stuff they left behind. Some construction job at work is way behind. I told him I would, if we could go up early.\" She says.\n\n\"What about your job?\" I ask.\n\n\"I just quit two weeks early.\" She says with a smile.\n\n\"That's awesome, but are we just throwing out what he doesn't want?\" I ask.\n\n\"Yes he got a dumpster.\" Karen says.\n\n\"What! He has a dumpster!\" I say. \"How much shit is he getting rid of?\"\n\n\"He cleaned upstairs. We just have to clean the downstairs. He ran out of time. We have to go food shopping to stock the kitchen.\" She comes in close to me. \"Five days and four nights all alone with me.\" She says quietly.\n\nI look down at her. \"You play dirty.\"\n\nShe giggles. \"You don't want to play dirty with me?\" She says and she hugs me.\n\n\"I have good news too.\" I say. \"I got another listing.\"\n\nI can't finish. Karen screams and hugs me. \"I have to do an Open House Saturday, I am sure it will sell fast.\" I say. \" Right now I am taking you to dinner to celebrate. Maybe you will put on that flowered sundress I like?\"",
        "She puts on the dress and we head out for Chinese. A Poo Poo platter, extra chicken fingers and 3 Scorpion Bowls later. We are stuffed and Karen is very happy.\n\nShe doesn't want to go home. She wants to go to the bar. She leans into me in the car. \"Buy me another drink and you might get lucky.\"\n\n\"I might? What if I buy you two drinks?\" I ask.\n\nShe pulls me to her and kisses me hard. \"Oh you will definitely get lucky then.\"\n\nFuck it. To the bar we go. It's late by the time we head home. We aren't in the car for 2 minutes. \"I have to pee.\" She says.\n\nUgh. I take her home. The house is dark as I walk her in. She walks into the downstairs bath and I go sit on the couch. \"Ezzie, are Mr & Mrs B asleep.\"\n\n\"They are Ben.\"\n\n\"Ezzie, will you tell me the minute they wake up, if they do?\"\n\n\"I will Ben.\"\n\n\"Thank you Ezzie.\"\n\nKaren comes into the room smiling at me. She stands in front of me and holds my head to her chest. \"I am horny.\" She whispers as she rubs my hair. I reach up and pull the shoulder straps off her arms and down until her dress is under her boobs. I turn my head and nibble and suck on her nearest nipple. As I am teasing her nipple I reach under her dress for her ass.\n\nShe has no underwear on. I look up at her and smile. \"When did you lose your underwear?\" I ask.\n\nShe giggles. \"I figured without the bra I should just go commando for you.\"\n\n\"How did I ever miss that?\" I ask.\n\nStill giggling. \"I think you were too busy watching the girls jiggle under my dress.\"\n\n\"I do love the girls.\" I say as I turn to her other nipple and bite a bit hard. Karen moans kind of loud. \"Ssshhh. Do you want to wake your parents up.\"\n\n\"God that feels nice.\" She moans.\n\nI push her back and stand up. I move her to the arm of the sofa, and bend her over it. I nudge her head down into a pillow. \"Moan into the pillow.\" I crouch behind her, lift up her dress, spread her cheeks and lick.\n\nShe moans into the pillow as she spreads her thighs and pushes her butt up a bit for me to get a better angle at licking her pussy.\n\nI lick and suck her like a man possessed. Every now and then to change it up I go too high and lick and poke my tongue in her ass. With the first lick of her ass. She gasps out a little loud away from the pillow. \"I pinch her ass. \"Karen, make a choice. Have me eat you to orgasm and moan into the pillow, or you can blow me and I can leave. We can't wake up your parents.\"\n\nShe stuffs the pillow in her mouth. I stick my tongue between her pussy lips. God I want to make her cum. I want to taste her juices in my mouth.\n\nMy tongue is feeling worn out when she gets a little wetter and I feel her stiffening as she moans into the pillow, and orgasms.\n\nI waste no time. I stand up, drop my pants and push into her. Her moans deepen into a groan, and I would swear she tries to pull away. I hold her against the arm of the couch and start fucking her. She keeps her face buried in the pillow. What the pillow can't muffle is the wet fucking and slapping sounds being made as I fuck her.\n\nI am not pretending to do anything but fuck her. I want to cum and to send her to bed with my cum inside of her. She keeps groaning into the pillow only now instead of trying to pull away she trying to hump back as I fuck her. She isn't having much luck since I am holding her down with my body weight on my arms. I release some pressure on her hips so she can push back against me.\n\nGod her pussy feels so nice. I can feel her gripping me as I fuck her. There is no way I am lasting long.\n\nKaren pulls her face from the pillow. \"Please.\" She begs quietly. \"Cum with me. I am so close. Please don't stop.\" She pulls the pillow back to her mouth and groans as my answer is to just fuck her harder.\n\nI watch her ass cheeks ripple as I fuck her. I feel her pussy squeeze me. I listen to her juices making the slapping skin louder. I pull her hips to me as I push in one last time with a groan, and cum inside of her.\n\nI stay buried inside her. She gives little shivers around me as we both catch our breath. \"Ben, I have to get up.\" Karen says. I step back and help her up. She spins around and hugs me. I look down and see her head against me sideways. I can see and feel her boobs squished against me as she hugs me. She stays like that for a moment. \"I could hug you and listen to your heart beating in my ear every night for the rest of my life.\"\n\n\"Well that's kind of the plan.\" I say.\n\n\"So I can sleep with you tonight?\" She asks.\n\n\"I wish. Your Father would Kill Me if he found me in your bed in the morning.\" I say.\n\nShe giggles. \"God he would lose his mind.\"\n\nI smooth her dress down, and pull up the straps. She just smiles and watches as I help her dress. \"I don't want you to go. I want to cuddle with you.\" She says as she holds my hands tight.\n\n\"Karen, I can not go up to your room.\" I tell her.\n\n\"No. Right here on the couch. Fully dressed. I want to fall asleep in your arms. Please!\" She pleads with me.\n\nI walk to my pants, and start putting them on. \"Jesus I just can't say no to you.\"\n\nKaren is absolutely glowing she is so happy. I sit back on the chaise part of the couch and she snuggles in beside me. I reach over and pull a small throw blanket over Karen's legs. \"I am not cold.\" She says.\n\n\"I don't want you flashing your Mom or Dad if they see us like this. Again, he will kill me, because you went commando.\" I say.\n\nShe rests her head against me with a sigh. In just a few minutes she is asleep. I lay there stroking her hair softly as she sleeps. I try not to nod off. I really don't want her parents finding us asleep together like this. I sit there for probably twenty minutes or so, when Ezzie speaks up.\n\n\"Mrs B is awake and coming downstairs.\"\n\n\"Thank you Ezzie.\" I say as I hear the floorboards squeak, and then the stairs. Mrs B walks in wearing a bathrobe and she smiles as she sees me awake holding Karen.\n\n\"You two are so cute.\" She says quietly. \"Give me your phone.\"\n\n\"What?\" I ask.\n\nShe holds her hand out. \"Your phone. I want to take a picture.\"\n\nI hand her my phone and smile. After she clicks the picture. \"Umm she might be a little drunk.\" I say.\n\nMrs B looks at me. \"A little drunk, or threw up and passed out drunk?\"\n\n\"Oh no ma'am. Just tipsy and sleepy.\" I say.\n\n\"Ok. Let's get sleeping beauty to bed.\" She leans over and shakes Karen's arm. \"Sweetie, wake up.\"\n\n\"Go away Mom.\" Karen mumbles.\n\nMrs B gets a little firmer. \"Karen Wake Up.\"\n\nKaren opens her eyes. She smiles at me, and then sees her Mom. \"Hi Mom.\"\n\n\"Hi yourself. Time to get up and go to bed. Ben needs to go home.\" Mrs B says.\n\n\"Mmmoooommm nnooooo.\" Whines Karen.\n\n\"Now young lady. Get up before your Dad wakes up.\"\n\nKaren sighs. \"Fine.\" She kisses my cheek. \"I love you.\"\n\n\"I love you too.\" I say.\n\nMrs B takes Karen by the arm, and I get up. \"Ben, make sure you lock the door on the way out.\" Mrs B tells me.\n\n\"Yes ma'am.\" I say as I walk towards the door\n\nI wake the next morning to a ringing phone. It's BJ. I look at the clock. Isn't he at work? \"Hello.\"\n\n\"What did you do Ben?\" He asks\n\nI am just waking up. \"What are you talking about?\"\n\n\"Cohen called me.\" He says.\n\n\"Oh yeah Cohen. And?\" I ask.\n\n\"Ben, what the fuck? How?\" He asks.\n\nI laugh. \"Do you not want it?\"\n\n\"Of course I will take it, but how did you do it?\" He asks.\n\n\"Shouldn't you be working right now?\" I ask dodging the question.\n\n\"I am in my car with my stuff in a box driving to Cohen's office. He is in a different building. Now stop dodging my question. How did you do this Ben & why?\" He asks.\n\n\"How is simple. He liked me, I am a people person. I told him I knew you and you knew your stuff.\" I say.\n\n\"Ok so now why Ben? No offense but you barely know me.\" He says.\n\nI laugh. \"Think of the Six Degrees of Separation with Kevin Bacon. I like Karen, Karen likes Beth, Beth likes you, and I did like you when we met. I know Beth certainly does. Beth is Karen's best friend, so I slipped in a good word for you.\"\n\n\"All I can say is Thank You. I am buying dinner Saturday night. I will have Beth set it up with Karen. I am pulling up to the new office and I have to go.\" He says.\n\n\"No problem, BJ. Good Luck.\"\n\nI get up and stretch. As my Grandfather used to say. I need to shit, shower & shave. I head to the bathroom.\n\nI am dressed and head downstairs for coffee. My Mom is there. \"Good morning sleepyhead. You had a late night.\" She says with a smile. \"Let me see the picture.\"\n\n\"Seriously! You two have already been talking?\" I ask.\n\nMy Mom just holds out her hand for my phone. I pull up the photo and pass it to her. \"Oh you two are so cute.\"\n\n\"Oh Jesus.\" I moan.\n\nI take my phone and send her the photo. She smiles at me. \"I am sending it to Mrs B now.\"\n\nOh god. I text the photo to Karen.\n\nME - Our Mom's are already at it\n\nKaren - Aww we are cute. Not to mention I love falling asleep against you.\n\nME - I love you against me period\n\nKaren - (Lots of heart emojis)\n\nME - Off to do the yard work my Dad figures I can do since I don't have a real job.\n\nKaren - Maybe I will stop by later and watch you work.\n\nME - In my favorite string bikini?\n\nKaren - um with your Mom home how about shorts and a tank top\n\nME - party pooper\n\nAbout two hours later after doing the front lawn and bushes. I move to the back, and Karen shows up with a Gatorade for me and iced coffee for her and Mom. I go to hug her and Karen backs up. \"Eewww no. You are a sweaty mess. I kinda like the look, but it's look don't touch. I am bringing your Mom her coffee.\" And Karen walks in the house.\n\nShut down just like that. Not even a kiss. I swig the Gatorade and go back to work. I look up a bit later. Karen and Mom are on the deck drinking their coffee and watching me. I never noticed with my music going in my ears.\n\n\"Ezzie, what are they talking about?\" I ask.\n\n\"Karen just told your Mom she likes the look of a hot sweaty guy, but doesn't want to touch a sweaty guy. You Mom is agreeing and telling her how much you look like you Dad, and how you remind her of your Dad doing the yard work when they first bought the house. Your Mom is remembering how hot you Dad was.\" Ezzie says\n\n\"Ezzie, someday you and I need to sit down and discuss what TMI is.\"\n\n\"What TMI is....oh I see...well you asked me didn't you?\" She says.\n\nI just laugh in my head. \"Thank you Ezzie.\"\n\nI finish up about 30 minutes later and I put away the mower and clippers. I walk to the deck. I go to sit and my Mom barks out. \"Don't you dare.\"\n\nI stop. \"What?\" I ask.\n\nMy Mom gives me that Mom look. \"You are hot, sweaty and grimy. You are not sitting on my new cushions. Go shower.\"\n\nI smile as I think of Karen joining me. I swear my Mom just read my mind. \"And no Karen isn't helping you. Go take a cold shower before I hose you off.\"\n\n\"MOM!\" I yell.\n\n\"Mrs C.\" Gasps Karen.\n\n\"What? You think I wasn't young once? You think I don't see you two looking at each other? Do you expect me to believe you two slept in separate beds when you went away overnight?\" Mom says with a smile.\n\n\"Jesus, Mom please stop. I am going. I am going. Just stop. Please!\" I walk into the house with my hands raised in surrender.\n\nI take a shower, order two pizzas and take a six pack of beers out to the deck to join my Mom and Karen.\n\nAs I sit I realize I haven't told my Mom about the new listing I got. I tell her and she jumps up and hugs me. She is so proud of me.\n\nWe sit and talk about Labor Day at Uncle Ray's. I show my Mom the pictures from the listing. The doorbell rings and my Mom jumps. \"Relax Mom. It's the pizza I ordered.\"\n\n\"You ordered pizza and didn't ask us if we wanted anything.\" Says Mom.\n\n\"That's right. Imagine that I ordered pizza without my Mommy's permission, and I ordered my Mommy and my girlfriend their favorite salads too.\" I say with a smile as I head to the door.\n\nI head back through the kitchen and Karen is there. I have the pizza and salad in my hands so I can't stop her. She grabs me through my shorts, and rubs me. I grow quickly in her hand. She lets go of me and giggles \"Good now we are both horny.\" She says as she walks out to the deck with plates, silverware and an extra wiggle.\n\n\"You bitch.\" I mutter with a smile. Two can play at that game. \"Ezzie, while we are eating lunch today. Every time Beth is mentioned I want Karen to imagine having lesbian sex. Every time Uncle Ray's cabin is mentioned have her imagine me fucking her ass.\"\n\n\"Done Ben.\" Says Ezzie.\n\nWe sit down and start eating. \"Karen, BJ said he wanted to meet for dinner Saturday night. Did Beth reach out to you?\"\n\nKaren pauses for just a moment. \"Um no.\" She says as she takes a drink.\n\n\"I will send a text in the group chat. So you and Beth can figure out where we are going.\" I say.\n\nThe lunch continues. I talk about dinner tomorrow night, and my Mom asks about the cabin. I bet Karen is a lot hornier than me right now. It's cruel but funny watching her squirm in her seat.\n\nLunch is done and my Mom walks in the house with the trash. I see Karen's eyes follow her. \"Ezzie, what is Karen thinking?\"\n\n\"She is imagining leaning against you while your Mom licks her.\" Says Ezzie.\n\n\"Oh my god. She thinks of that. I teased her with that back at the lake earlier this summer.\" I think.\n\n\"Yes Ben, she thinks of it from time to time.\" Says Ezzie.\n\nI hold Karen's hand in mine. \"Oh my god. You are imagining having sex with my Mom.\" I whisper to her.\n\nHer eyes go wide and she looks at me. \"Ezzie, make her tell the truth please.\"\n\n\"Done Ben.\"\n\n\"Remember Karen. No lies between us.\" I say.\n\nJust then my Mom comes back out with her purse. \"I have to run a Quick errand.\" She stresses the quick. \"You two behave.\" She kisses my cheek, and heads to her car.\n\n\"Ezzie, where is Mom going?\"\n\n\"To the market for a few things she needs for dinner.\"\n\nI look at Karen and raise my eyes at her. \"God. Fine. Yes ever since you told me of seeing your Mom with Barbara, well... I think of her sometimes. She is a beautiful woman.\"\n\n\"Both our Moms are.\" I say.\n\nKaren's eyes go wide. \"Oh my God! Have you thought of my Mom?\"\n\nWell I told her I want no secrets between us. \"I have in the past.\"\n\nKaren looks at me. \"No secrets right?\"\n\n\"Of course.\" I say.\n\n\"Would you be mad if I said I didn't want to be with BJ again?\" She asks quietly.\n\n\"What? No! I thought you enjoyed it?\" I say surprised.\n\n\"I enjoyed the physical part, the feeling full, but I kept thinking after it was another man. I don't want another man. I want only you. We can try it again sometime with toys. Are you mad?\"\n\nI push my chair back and hold my arms open for her to come sit on my lap. I hold her to me and hug her. \"Why did you wait so long to say something?\" I ask.\n\n\"I kept bouncing it around in my head. I didn't want to disappoint you. If you liked it, we can do it again. I will do it for you.\" She says as she is snuggled against me.\n\n\"Now you have me worried Karen. I love that you want to do things for me, but I want you to like it too. Do you feel that way about when you have played with Beth?\" I ask.\n\nShe smiles up at me. \"Oh no. Beth and I have talked. We both liked that a lot. We have joked we may only need one bed next semester.\"\n\nI smile back at her. \"Jesus there is a thought I won't get out of my head anytime soon. What about when I fucked your bum?\"\n\n\"Oh god, I have to be ready, but no I liked that. I really felt like you were taking me. It turned me on a lot.\"\n\n\"When I have been rough?\"\n\nShe pats my cheek. \"Ben, you would never hurt me. If you ever get too rough I will let you know. I have loved our soft love making and our hard sex.\"\n\nI decide to push it a little. \"What if I tied you down, blindfolded you and had my way with you?\"\n\nShe pulls her head back and stares at me. \"Seriously?\"\n\n\"You only live once.\" I say with a smile.\n\n\"What if I want to tie you down?\" She asks with a glitter in her eyes.\n\n\"What's good for the goose is good for the gander. It doesn't hurt to try right?\" I ask.\n\nShe kisses me hard. \"I am so turned on right now.\"\n\n\"A big part of me wants to take you to my room and lock the door. I could deal with my Mom's looks, but I don't think you would like it.\" I tell her.\n\n\"Oh god. I think that would be worse than when my Mom found me.\"\n\nI hug her. As I hold her I slip my hand in her shorts. Karen doesn't argue. She stares at me with lust in her eyes and spreads her legs. I press the palm of my hand down on her clit and rub my fingers along her lips. She is wet. She reaches up and puts her hand behind my head. \"Please use your fingers.\"\n\nMy answer is to curl my two middle fingers into her. She just sighs. \"Oh. Oh. I don't want you to ever stop.\"\n\nI continue to push my fingers in and out and tease her. \"So when my Mom comes home you want me to keep fingering you?\"\n\nShe thinks she is out doing me. \"No, I want her to take over.\" She says with a big smile.\n\n\"So if you get to have sex with my Mom, do I get to have sex with your Mom?\" I ask.\n\n\"You want to fuck my Mom? Really?\" She asks.\n\n\"Ezzie please make Karen vividly imagine what I am telling her.\"\n\n\"I will Ben.\" Ezzie tells me.\n\n\"Imagine you're naked on your couch. My Mom is between your legs eating you out.\" I say.\n\n\"Oh god you are mean.\" She sighs.\n\n\"You are laying there with your eyes closed enjoying my Mom's tongue on you when I call your name. You open your eyes and see me bending your naked Mom over the other arm of the couch. You watch as I hold her hips and push into her from behind.\" I say.\n\n\"Don't you dare stop. I swear I can see it happening.\" Karen says.\n\nWell she isn't complaining. \"You watch your Mom's face as I fuck her. The lust on her face, her eyes a little wide and her mouth open as she moans and sighs.\" Karen has her fingers in my hair. Her eyes are closed. Her hips are humping.\n\n\"Please,harder. I am so close.\" She begs.\n\nI push harder on her clit and try to finger her a little faster. \"What are you seeing Karen? Tell me. Cum for me.\"\n\n\"Oh god. Your Mom is licking me while she reaches up and pulls on my nipples. I am watching you fuck my Mom. Her boobs are shaking and she looks like she is about to cum.\"\n\nI pivot my hand so now I am just fingering her. Again a little faster and harder than I was when I was pressing on her clit. \"Like you are about to cum for me?\"\n\nShe humps and moans for just a few seconds and then grabs my wrist and holds it still against her. I feel her pussy quiver and grip my fingers as she cums. She goes limp against me and gently pulls my hand out of her shorts.\n\n\"I can't believe I was seeing it so clearly in my head. Your Mom's hair was spread out as she went down on me. Her fingers were teasing my nipples. My Mom was definitely enjoying you fucking her, and the whole time you were just watching me. God you had me so worked up.\" Karen says.\n\nJust then we hear Mom's car in the driveway. Karen almost falls off me as she heads inside to go to the bathroom. I pick up my beer, and as I take a drink I smell Karen's juices on my hand. I quickly pour beer on my hand to rinse it off. I put down the bottle and open a new one.\n\nMom comes along and looks at the spilled beer. \"What did you do?\" She asks.\n\n\"I knocked it over. No biggie.\" I say.\n\nKaren comes walking out. My Mom looks at her as she walks in. She hooks her thumb at me. \"My son is a slob.\"\n\nThe open house is slow. I get one honest person that's interested and can afford it. Thanks to Ezzie, they leave me a signed offer. $2,900,000 x 5% - $5000 for Ron, I will have a $140,000 commission! I am dancing when I leave there. I drive to the office and leave the paperwork with Ron. He is amazed how fast I can turn a listing.\n\nI hop in the car and head to Karen's. I pick her up, and we head to the restaurant. As we walk into the restaurant, BJ & Beth are at the bar. The girls start chatting and Bj talks quietly to me.",
        "\"Hey I am sorry if I overstepped at the hotel.\" Says BJ.\n\n\"What makes you think that?\" I ask. \"I thought we all had fun. Wait did Beth say something to you?\" I ask. \"Let me be clear. Both Karen and I had fun, but she then had nagging thoughts after that she felt she cheated on me. It was not you, it was her being with another guy. She is ok playing with Beth, just not another guy.\" I say.\n\n\"Oh, ok. I was concerned for a bit.\" Says BJ. Just then the Ma\u00eetre d' shows us to our table.\n\nWe place our orders and BJ raises a toast thanking me for the good word with Cohen. I toast Cohen for listing and selling his house with me.\n\nI then get a tad serious for a moment about the night at the hotel. \"Ezzie I want everyone at the table to answer the questions I am about to ask about the hotel room honestly, no holding back.\"\n\n\"Ok Ben.\"\n\n\"I want to have a frank and honest discussion with everyone about the hotel.\" I say.\n\nKaren speaks up. \"Beth and I talked.\"\n\n\"Yes, but I think there was something lost in translations. Did everyone enjoy the night, and the fun we all had together? I know I did.\" I say. Everyone nods or says yes.\n\n\"Ok so now before Beth and Karen talked, Karen and I talked.\" I look at Beth and BJ. \"Before those conversations did either of you have any regrets? Would you have done it again?\"\n\nNeither have regrets, and yes would do it again. \"Same here.\" I look at Karen. I can tell she is embarrassed. \"Honey, no secrets. Tell them what you told me.\"\n\nShe gulps her drink, and smiles at me. \"I hate you.\" She takes Beth's hands in hers. \"Honey, I Loved everything we did together, and can't wait to do it again. I have no problem being with a woman.\" She takes BJ's hands. \"BJ, it was so different and amazing to have both of you in me. I loved everything you and I did, but then I started to feel after that by fucking you I cheated on Ben.\"\n\nBJ's face drops. \"Karen, I never wanted that.\"\n\nKaren squeezes his hand in hers. \"Sshhh, I know. We were all having fun. It was just fucking another man. I can't explain it other than to say I am a one guy woman. I am happy to repeat it ALL except another man and me fucking.\"\n\nBeth giggles \"There goes another shot at both guys.\"\n\nKaren interrupts her. \"Why? I loved watching Ben & BJ gang up on you. Honey, I am ok with EVERYTHING except actually having sex with another man.\" Karen looks down at her lap. \"The only man that gets that is my Ben.\"\n\nKaren looks at me, smiles and bends forward for a kiss.\n\nI smile. \"So you would blow BJ while I fuck you?\" I ask.\n\nKaren smiles at BJ. \"Absolutely.\"\n\nI take it a step further. \"How about riding me, blowing BJ and Beth fucks your ass with a dildo?\"\n\nKaren laughs. \"Am I happy and well lubed?\"\n\n\"Of course.\" I answer.\n\n\"Then I would say I need another drink.\"\n\nWe all laugh as I motion for the waitress for a round. We leave the restaurant well fed and the women are tipsy. BJ refuses to even allow me to leave the tip.\n\nWe walk outside and there is a horse drawn carriage sitting in the street. The ladies start Oohhh & Aahhhhing. BJ speaks up. \"Hey ladies. Do you like our ride?\" He asks, pointing to the carriage as they squeal in delight.\n\nWe climb up into the carriage. There are two bottles of champagne on ice waiting for us. The two girls sit together on a bench. So BJ and I get the rear facing seat looking at the girls. I stop and really look at Karen.\n\nShe has a snug fitting stretchie type of dress on. It is showing a healthy amount of cleavage, and has a layered lace material at the bottom. With the right back lighting I bet the silhouette of her legs, hips and ass would look great.\n\nWe all fall silent for a moment, and I look at BJ. \"BJ you have to let me give you something. Dinner and this, you have to let me give you money.\" I say.\n\nHe shakes his head. \"Ben, because of you with commissions and base I will make 3-4x what I was. This is all on me.\" He hands me a thumb drive. \"This is the info you asked for. Cohen knows his stuff.\"\n\n\"Good, learn everything you can from him.\" I say.\n\nOne of the girls clears her throat. We both look over and stare. Beth laughs. \"Now we have their attention.\" The two of them are sitting there flipping their dresses up and flashing us.\n\nBeth looks at me. \"Swap with me.\"\n\nWe swap spots so the couples are together. Karen hugs my arm to her.\n\nFor the next two hours we take the scenic route around town. We sit there talking, laughing and drinking champagne to the sound of the horses clip clopping along the asphalt road.\n\nThe carriage horseman stops back at the valet parking lot. We hop out and the driver hands the girls some carrots to feed the horses.\n\nWe stand around and talk by the cars. This was just dinner tonight. The girls are tipsy. BJ and I promise to stay in touch, and we drive off.\n\nAt first Karen is rubbing my thigh and telling she is horny, and by the time we pull onto the highway Karen's eyes are closed and she is softly breathing in her sleep.\n\nI pull into her driveway and shake her awake. \"Honey, you are home.\" I say as I see her Mom's silhouette in the kitchen window. \"Honey, you need to wake up.\"\n\nHer eyes flicker open. She smiles at me. \"Are you going to Take Me inside.\" She asks, putting the emphasis on Take Me.\n\n\"Well since your Mom is up, I am going to Walk you inside.\" I say.\n\n\"Damn it. I want you.\" She sighs.\n\n\"Hold that thought.\" I get out and open her door. As I help her out and walk up the driveway. \"I love hearing you say that, and starting tomorrow we have Uncle Ray's cabin all to ourselves. I will warn you though, I have plans for Sunday night. It will be a no saying no kind of night. You are mine! I am going to have sex with you every way possible. You won't be falling asleep Sunday night, you will be passing out.\"\n\n\"Oh my god Ben you just made me nervous and very excited.\" Karen says looking up at me.\n\nI lean down and kiss her good night. \"I think you will like it. The backpack is full now. I don't think an extra butt plug will fit in it\"\n\nHer eyes go wide. \"What did you buy?\"\n\nI kiss her cheek. \"You will see, well maybe you won't actually see.\" I say as I walk back to the car.\n\nI am barely home and Karen is texting me.\n\nKaren - You have to tell me. What did you buy?\n\nME - You will find out tomorrow\n\nKaren - Come on tell me\n\nInstead I send her a blurred out photo of the receipt that came in the box that was delivered today. You can see the store name, blurred out items purchased, and a total cost over $300.\n\nKaren - OH MY GOD. WHAT DID YOU BUY?\n\nME - Repeat after me. No saying No, or I could just leave the bag at home.\n\nKaren - You are being a brat\n\nME - ok I will leave the bag at home\n\nKaren - FINE. No saying No. ok. Your the boss.\n\nME - I Love You\n\nKaren - I Love You too. I don't know why sometimes LOL\n\nME - I am thinking Boss doesn't sound right. Maybe Master.\n\nKaren - oh Jesus. Good night.\n\nI toss some bags in the car and head to Karen's. She gets in and off we go. We are about an hour into the ride, and she is being shameless. She is telling me she was so worked up last night she played with herself so she could relax and fall asleep. Then she woke up this morning and started thinking about no saying no today and got horny again. So while showering she used the shower massager to orgasm again.\n\nShe sits there telling me this as she rubs her hands all over her body. \"God, now I am horny again.\" She pushes her shorts off, reaches into her purse and pulls out a vibrator. I hear it hum to life and she softly moans as she holds it against her clit.\n\nShe smiles at me. \"I know how much you love to watch.\"\n\nI shake my head. \"What's wrong Ben? Do you want me to stop? Well you did say today is a No saying No day, but if it's bothering you?\" She says with a big smile on her face.\n\n\"No, by all means continue if you want to. I am good, but you are going to pay for this at the cabin.\" I say.\n\n\"Pay for what? I thought you liked to watch me. Oh wait, you're driving. Oh and we just passed the rest stop. There won't be another one for Miles. Oh what a shame.\" She says with a soft moan as she pushes the toy in her pussy. \"Did you want to fuck me?\"\n\n\"You just remember this moment when I attack you later.\" I say.\n\nShe starts pushing on the toy harder. \"Oh are you going to fuck me hard?\"\n\n\"I am going to fuck your mouth, your ass and your pussy all day and night. My dick gets hard I am fucking you until I can't cum anymore or you pass out.\" I say.\n\n\"God yes. Fuck me. Fuck me hard.\" She moans. She is now fucking herself and rubbing her clit.\n\n\"Do it baby.\" I say. \"Cum for me for the first of many times today. I am going to tease you, fuck you and just torture you today until you cum over and over again.\"\n\n\"Oh. Oh. Oh fuck yeeaaahhhh.\" She moans as she first holds the toy deep inside her, and then pulls it out. She shuts it off, and drops it on the seat with a sigh.\n\nAfter a moment she pulls her legs up onto the seat, and sits curled up. \"That was nice. Did you enjoy watching?\" She asks.\n\n\"That was mean. You waiting until after the rest stop to do that.\" I say.\n\nShe just smiles and giggles. She doesn't realize what I have planned for her. It's taking everything I have to not just pull over and fuck her. The rest of the ride is uneventful. I have the evil thought of making her wear the remote controlled toy in the supermarket, but I have a plan.\n\nWe get to the new cabin and we lug everything in. I tell her to take care of the groceries, and I take the luggage to the bedroom. As quickly as I can I put the tie down under and on the mattress, and leave the wrist and ankle cuffs on the bed.\n\nI walk out to the kitchen and she is organizing things in the cabinet. I hug her from behind and nuzzle her neck. \"Now you are going to pay for the stunt in the car.\" I say.\n\n\"Oh please, make me pay.\" She moans.\n\nI pull her shirt off over her head and unclip her bra. It falls off her arms onto the counter as I pinch and pull on her nipples. I push her shorts and underwear down over her hips. \"Naked Now!\" I breathe in her ear.\n\n\"Yes sir.\"\n\nI bite her earlobe. \"I told you before. Call me Master.\"\n\nShe moans with the bite. \"Yes Master.\" As I feel her legs kick off her shoes and shorts.\n\nI reach into my pocket and pull out a blindfold that came in the kit I ordered. It's a decent one that will keep her from seeing anything as long as it stays in place.\n\nI put it over her head, and she gasps as I do. \"You are blindfolding me.\"\n\n\"Yes I want you to just feel what I am about to do to you.\" I say.\n\n\"Oh God.\" She moans as I take her hand. I pull her to the bedroom.\n\nI pull her to the side of the bed. \"Lay in the middle of the bed.\"\n\nShe feels her way onto the bed, and lays down. She is close enough. I straddle her body and grab the wrist restraints. I grab an arm and start wrapping the fur lined strap to her wrist. I push her arm up and click her in. She pulls on her arm when I let it go.\n\n\"Oh god, are you tying me to the bed?\" She asks a bit nervously.\n\n\"For starters. Then I am going to torture you for torturing me in the car.\" I say.\n\nAs I click in her second arm her voice catches. \"I was just teasing you. I wasn't torturing you.\" I can hear the nervousness in her voice. I climb off her, and head to the foot of the bed.\n\n\"Ezzie is Karen ok.\"\n\n\"She is very nervous about not being able to see or move, and what exactly you have planned.\"\n\nI grab her legs and pull her down so her arms are snug. \"What's wrong Karen? You look a little nervous.\"\n\n\"I.. Umm... this is all new to me.\" She says as I pull the strap tight, and move to her other leg.\n\nOnce she is tied down I step back and look at her. \"Wow you look sexy.\" I go to the side of the bed and run my hand from her ankle to her pussy. I run my fingers through her lips. \"It seems you are excited.\" I say as I rub my fingers around her wet lips. \"Are you ready to scream in pleasure?\"\n\nShe moans as I rub her. I reach out with my other hand and pull her nipple up. \"Oh Fuck!\" She yelps.\n\n\"I asked you a question.\" I say.\n\n\"Yes I am ready.\" She says. I release her nipple, and she sighs in relief.\n\nI pull her other nipple. \"Now answer the question, and address me properly.\"\n\n\"Yes Master, I am ready!\" She says very quickly.\n\nI rub her nipples. \"Good girl. You may think you are.\" I lean down close to her. \"But you have no clue what's in store for you.\"\n\nI reach into the backpack and pull out the remote controlled vibrator. It's a teardrop shaped base with a rubber antenna. I lick it to get it wet, and rub it between her lips.\n\n\"What's thaaaaat?\" She asks as I pop it inside her.\n\n\"This is an App controlled vibrator. I can be in the same room or in another state. As long as we are connected to the internet I can do this.\" I say as I bump it on low.\n\nI see her stomach flinch. \"That's on low. This is high.\" I flip it on high from the App.\n\nHer hips try to bump up, and she gasps in surprise. \"Oh Shit.\" She says as she quivers. I leave her on high for a minute, and then bring her down. I can see her body relax.\n\n\"Now, since I couldn't properly watch you earlier I am going to watch you now. This is the random setting.\" I say, and five seconds later she moans as it changes. I can see the pulsing pattern and intensity on the screen. It goes high and fast. She gasps at the change.\n\nI sit in the arm chair and watch as she gasps, squirms and humps. I add remarks here and there. \"That's a high one. That looks like you liked that.\" She just lays there gasping and moaning. It was just a few minutes in and it looked like she was about to cum when it slowed down. \"Oh so close. Maybe next time.\"\n\nHer body relaxes into the bed and she moans. I hear her phone ding. I has to be Beth wondering how the cabin is. I get up quietly and get it from the kitchen. Sure enough it's Beth. I text her back asking her to FaceTime.\n\nI answer it and Beth is a little surprised to see me. \"Hi Ben, is Karen there.\"\n\n\"She is a little tied up. Let me show you the place.\" I take my time and show her around the place on FaceTime. I walk into the bedroom. \"And as you can see Karen has gotten very comfortable on the bed.\" Karen's hands are balled into fists. She is constantly thrashing. She is red and flushed.\n\n\"Ben, what are you doing to her?\" Beth asks.\n\nI turn the phone to me. \"She thought it would be funny to torture and tease me in the car while we drove up here. I am returning the favor.\"\n\nI point the phone at her pussy. She is soaked, the bed is wet and the antenna is Very obvious. \"That is a vibrator controlled by this.\" I hold up my phone so she can see the screen. As I turn it, it goes from a low/med to high pulsing. Karen humps and gasps. I hold the phone to show Karen squirming on the bed. \"Karen, are you close again?\"\n\n\"Yes!\" She gasps.\n\n\"Have you cum already?\" I ask.\n\n\"Twice.\" And she sighs in disappointment as it slows down.\n\n\"Promise to be good and I will make it three and turn it off.\" I say.\n\n\"I promise.\"\n\n\"Ok say goodbye to Beth on FaceTime.\" I say.\n\n\"Oh god, she isn't?\" Karen moans\n\n\"Honey, are you ok? Do I need to tell Ben to let you loose.\" Says Beth.\n\n\"No I am okkkkk.\" She says. I show Beth my screen. The toy is on a high setting.\n\n\"Ok Beth. I have to go torture the woman I love. I will have her call you soon.\" I hang up the phone. \"So you are ready to cum again?\" I don't wait for and answer I flick it to full power, and leave it there.\n\nKaren lets out a small shriek. Her hips are jumping. She is thrashing, and within two minutes she is cumming hard. She actually screams, and a moment later pleading. \"Please, you promised.\"\n\n\"What did I promise?\" I ask\n\n\"Please you promised after number three that if I was good you would shut it off.\" Her stomach muscles are spasming. She gasps.\n\nThen it clicks in her head. \"Please Master, I will be good. I promise.\"\n\n\"Good girl.\" I say as I turn it off. I watch her whole body sink into the bed as she sighs. I walk around the bed and unclip her. After laying still for a minute Karen reaches down for the toy.\n\nI correct her. \"That stays. Just in case you misbehave and we have to go for number four.\"\n\nShe smiles. \"Yes Master. I am just feeling it.\" She says as she runs her fingers along the antenna. I bend down to her head. \"I am going to strip, and then I am going to fuck your mouth like I bet you have never had it done before.\"\n\n\"Oh Jesus.\" She moans. \"What else are you planning?\"\n\n\"I told you. You are mine today. I thought about spanking you for teasing me in the car, but both our parents would kill me if they saw a red mark on your ass under your bathing suit. So the paddle will have to wait for colder weather.\"\n\n\"Oh shit.\" She mutters.\n\n\"Now get off the bed. Grab a pillow for your knees, and kneel on the floor.\"\n\nShe smiles at me. \"May I take off the blindfold Master?\"\n\n\"Did I tell you to take it off?\"\n\n\"No Master.\" She says with a big smile.\n\nShe kneels on the pillow. I take an X piece from the kit and click her wrists to it behind her back. I pull her arms down straight and connect the other two rings on the X to her ankles.\n\nI then reach in for the piece I have been looking forward to trying. \"Open nice and wide.\" I tell her. I am sure she is expecting my dick in her mouth. Instead she gets a rubber coated metal ring. I put it behind her teeth in her mouth, and now she can't close her mouth.\n\nShe is trying to complain as I buckle it behind her head, but it just comes out garbled nonsense.\n\nI look down and smile. Even with the mask on she looks sexy. Well if I am being honest she looks slutty and dirty. I decide to tell her. \"God you always look so sexy to me, but right now you just look slutty and dirty.\"\n\n\"Ezzie, what is she thinking?\"\n\nShe is nervous. The gag is uncomfortable, and she is restrained, and blindfolded with her mouth held open. She did like you calling her slutty.\"\n\n\"Ezzie, if it truly gets too much for her please let me know.\"\n\n\"I will Ben. Right now she is waiting for you to put yourself in her mouth.\"\n\n\"Let's not disappoint her then.\"\n\nI step forward and push my dick in the ring. I hold her head. \"This is just the first fucking for today, your ass and your pussy are next. In that order. After that I will make love to you, but today. I am Fucking You. I am taking you and making you mine.\"\n\nAs I say this I slowly fuck in and out of her mouth. She starts gurgling and gasping for air while I am in her mouth. I pull out and kneel down. I nibble on her ear. \"I Love you and I have never wanted to just Fuck you more than I do right now. Breath like we tell people to do in swimming lessons. When you turn your head suck in some air. When I pull back some. Suck in some air.\"\n\nI stand back up and push into the back of her mouth. Almost all the way. I pull back and push in. I pull out far enough for her to get a good breath in. On one of my pulls back, I softly say. \"Here we go.\"\n\nI push in until I tap the back of her mouth/throat. She gurgles and gags. I pull back and push again, and again. I pull out for her to get a breath and keep pushing her down on me. Her nose is against me and she is gagging some. I know it's bad, but her gagging feels great.\n\nI pull back and I hear her cough and suck in a breath. I push back and pull her back against me. Her gagging is a little less. I pull back and fuck her mouth. I pull out, and look at her. She is a mess of drool. \"Fuck you really look slutty now.\" I push back in and start fucking her mouth with about half strokes. In and out, in and out. She is making wet sloppy sounds as I fuck her drooling mouth. She is making wah wah wah sounds with every stroke. Jesus this is sexy.\n\n\"Ezzie is she ok? I want to get a tad rougher.\"\n\n\"She is waiting for you to cum. She knows you are close. She is concerned about you cumming and her mouth held open like this. She is concerned she won't be able to swallow.\"",
        "I flip the blindfold over her head. Karen blinks and looks up at me. \"Jesus, you look so slutty and sexy. I am going to add my cum to all the drool on you. Are you ready?\"\n\nHer eyes sparkle as she shakes her head yes. I hold her head in my hands and push into the back of her mouth. Just before she gags I pull back. In and out. As deep as I can go. Her tongue flicking under me as I do.\n\nI pull out at the last moment, and warn her. \"Close your eyes.\" The first two shots come out with such force they land on her cheek and ricochet up over her eyes and onto her forehead. The remaining shots land on her stretched out lips and in her mouth.\n\nI stand there catching my breath. I look up and Karen has one eye opened and one closed. Cum has dripped off her forehead onto her eye. I reach down and undo the buckle and slowly pull the gag out.\n\nShe slowly stretches out her jaw and moans. \"Oh my god. That was intense.\" She looks up at me. \"Can I get off the floor please Master.\"\n\nI smile as I think I have one last thing to do. I reach under her armpits and heave her tied body onto the bed. She rolls and lands on her side. I pick up one of the socks I took off and wipe her eye clean, and then grab my phone.\n\n\"Before I let you free. I want to give you a reward.\" I turn the vibrator back on. She gasps and then moans. I play with the settings. \"Tell me what you like and I will leave it there until you cum.\"\n\nShe seems to like about 60-70% power, and a certain buzzing pattern. I lock the two in, and lean down towards her face. \"You were such a trooper with the gag. This orgasm is your reward.\n\nI sit back and watch her for less than five minutes. Her body is rocking. She is moaning and groaning. Getting louder and louder until she finally yells out as she orgasms.\n\nI stay good to my word. I turn the toy off. I then reach down and unclip all four restraints. She moves her arms and legs and rolls over on the bed. I lay behind her and softly rub her back.\n\nI watch her first lick her lips clean and then use her fingers to scoop the worst of my cum off her face. She licks her fingers clean one final time and pulls my arm I was rubbing her back with around her and snuggles against me.\n\nI hug her to me, and she holds my arm tight to her. \"Are you planning on using that again on me?\" She asks softly.\n\n\"Why do you ask?\"\n\n\"I feel like I just got a thousand dental x-rays. Can I ask that we put that back in the bag and leave it there until next time?\" She asks.\n\n\"What did I tell you would happen today?\"\n\nShe sighs. \"No saying no.\"\n\n\"I did say that, but what else did I say I was going to do to you?\" I ask.\n\nShe thinks for a minute. \"Fuck my mouth, ass and pussy?\"\n\n\"That's right. Did I fuck your mouth?\" I ask.\n\n\"Did you ever.\"\n\n\"Then yes the gag can go back in the bag. What was number two on the list?\" I ask with a smile on my voice.\n\nShe sighs. \"My ass.\"\n\n\"So I guess your bum will need a butt plug before you get dressed.\"\n\n\"Oh fuck.\" She moans\n\n\"For now let's just lay here holding each other.\" I say.\n\n\"I like that idea.\" She starts to undo a wrist restraint.\n\n\"Did I tell you to take that off?\"\n\n\"No. I just thought...\"\n\nI interrupt her. \"They stay on as a reminder today that you are mine, and so I can tie you up at a moment's notice.\"\n\nShe spins around on the bed and kisses me. \"Yes Master. Today I am all yours to play with as you see fit.\" She has a huge smile on her face.\n\nI roll over onto my back and hold my arm out for her to snuggle into me. \"Come here my sexy, slutty slave.\"\n\nShe lays against me, and kisses my chest as she relaxes against me. We lay like this for a while until I pat her ass. \"Come on, we have a house to clean. Go get washed up, and dressed. No bra though.\n\nShe heads to the bathroom, and I head for the backpack. I grab the medium plug and the anal lube. I hear her flush and I head in. \"I almost forgot your plug.\" I say as I walk in.\n\nKaren is leaning against the vanity and doesn't argue. She spreads her legs and pushes her ass out. I toss the gag in the sink. \"Wash that off while we are in here.\"\n\nShe turns on the hot water and starts cleaning it. I take a lubed finger and push it in her ass. She lets out the slightest of moans as I finger her ass to lube it up. I pull my finger out, spread some lube on the plug, and nudge it in. This is the medium plug and she takes 3/4 of it no problem. If she can do that she can do it all. I keep steady pressure on it until it pops in her ass.\n\nAs the thickest part pushes in she grunts a little. I pat her ass. \"Good girl! We will let that stretch you for a bit, then you get the large one.\" I say as I walk out of the bathroom.\n\nWe start tossing out the furniture he doesn't want. A bookcase, an end table, odds and ends like that. I use a sledgehammer Uncle Ray left to break up the bigger items, as Karen carries out some small items. Whenever I get the chance I slap her ass to try and wiggle the plug. It becomes a game. I try to smack her ass, she tries to avoid it.\n\nI head back in to help clean out drawers etc. Karen starts sorting through them. Keep this. Throw out that. We pile up about a dozen or so books to keep from the bookcase, and have about half the contents in the drawers that we started with. She sorts, and I take it to the dumpster.\n\nI come back in and she is bent over looking at something. I just stare at her ass. I head to the bedroom for the large plug. I reach in and had almost forgotten. The big one has a remote. I grab it and put it in my pocket, and I head back to Karen.\n\nShe turns when she hears me coming. I grab her by her hips and turn her back around, and pull her shorts down. \"Time for an upgrade.\"\n\nI pull on the plug in her. Little by little, harder and harder, I pull, release, pull, release until it pops out. I then push it in and out so the widest point stretches her. She moans as I push it in and out.\n\nI finally pull it out, squeeze in some fresh lube and push in the big one. She takes it all until she gets to the widest point. She took so much of it so fast I just keep pushing like I did before. As her ass swallows it, she moans out. \"Oh god this one is so thick.\"\n\nI reach down and pull her shorts up. \"What else needs to be thrown out.\" I ask.\n\n\"Umm. I Umm. God I don't know. Give me a minute.\" She says.\n\nI am smiling while I wait for Karen to regain her composure. \"Would you like to take a break?\" I ask.\n\n\"Yes.\"\n\n\"Great, let's go to town and look around. See what's there and get some lunch.\" I say.\n\nShe gives me a look. \"I suppose the plug stays in.\"\n\n\"Oh absolutely.\" I say with a smile. \"Because when we get back I am taking it out and fucking your ass.\"\n\nIt's funny watching Karen fidgeting in the car seat. I intentionally find every bump and pothole. I stop at a gas station and they direct me to a local shopping area.\n\nWe get there and pull into a bar/restaurant. We sit in a booth and order burgers and fries and two beers. After Karen takes a drink I click the remote for the butt plug.\n\nKaren's eyes go a little wide and she moans. \"Please no.\"\n\nI give her a look with a smile. \"Are you saying no on a No saying no day?\" I ask as I hold up the remote with my finger on the button.\n\n\"No. I was asking please not here. Not in public. Please don't make me orgasm in public.\" She pleads.\n\n\"Orgasm? No, that's not happening here. Tease you and torturing you? Oh yeah that's happening. When we get home. You are getting tied back to the bed. I am just trying to decide in what position.\" I say.\n\nShe looks at me with a questioning look. I open a pdf copy of different positions that was on the website I bought the stuff from, and hand it to her.\n\nHer eyes go a little wide again, as I watch her flip the screen. \"I am trying to decide between face down with me on top of you, or you on your back with your arms tied to the bottom, and your legs bent over your head and tied to the top.\"\n\nHer face looks a little concerned.\n\n\"Ezzie, is she ok. Did she not like being restrained?\"\n\n\"No, she is confused. She Loves making love to you. She loves when it gets a little rough, but she is concerned how she can get excited by being tied up.\"\n\n\"Thank you Ezzie.\"\n\nI reach out and take the phone and hold Karen's hands in mine. I soften my voice. Karen you know I Love You right.\"\n\n\"Of course.\" She answers.\n\n\"And you Love Me?\"\n\nShe smiles. \"You know I do.\"\n\n\"So why are you concerned with liking be tied up?\" I ask. \"Can't we try different things and see what we like?\"\n\n\"Oh my god. How do you read me so easily? How did you know I was thinking that?\" She asks.\n\nI laugh it off. \"I can read your mind.\" I squeeze her hands. \"Seriously. Talk to me. What are you feeling or thinking?\"\n\nShe just looks at me. \"Ok, let's try this. Did you like being tied to the bed, and unable to move?\"\n\nShe smiles. I laugh. \"Ok that's a yes. Did you like when I tied your wrists and ankles together while you were on your knees?\" I ask.\n\n\"I did but that ring was A Lot to take. On one hand you were taking me and I Loved it, but that ring was very uncomfortable, but I was turned on knowing you were enjoying just using my mouth. Can we maybe use the ring on only special occasions? I would be fine with you just doing that without the ring.\" She asks.\n\n\"Special occasions it is.\" I say quickly. \"You know what else happens on special occasions?\" I click the remote to medium and then high.\n\nKaren gasps, and the waitress comes over with the food. \"I am sorry miss I didn't mean to startle you.\" She says.\n\nShe turns and walks away. I click it off and I can see Karen's body slump a little as she relaxes. She looks at me. \"That was mean doing that then.\"\n\nI laugh. \"I never saw her coming. It was kind of funny watching you trying to hold it together while she was at the table. I promise it's off while we eat.\" I hold up my empty hands and pick up my burger. We are both hungry after our busy morning. We polish off our burgers in no time.\n\nWe walk around the same town center area. The restaurant, a pizza shop (I grab a takeout menu & they deliver to the cabin) an ice cream shop, and a small general store.\n\nI see a maybe 15-20ft motor boat with a raised seat on the front for fishing and benches in the back. It's used, and not too expensive. It would save a lot of paddling. I stop and look at it.\n\nKaren likes it. She thinks it would be fun to run around the lake on. I walk into the General Store and ask about it. I talk to the manager about it.\n\nI have Ezzie find out his lowest acceptable amount and offer $300 more if he brings it to the house, puts it in the water and fills it with gas. He readily agrees. He has a blank bill of sale ready. He offers to do a manual sale through the store for the price, and can have it delivered by 3pm. I agree to all of that and slide my card.\n\nKaren can't believe I bought the boat. \"What our Dad's are getting older, and this is a big lake. Plus we can take it out too.\" I say.\n\n\"We can?\" She almost squeals.\n\n\"Sure right after I fuck your ass.\"\n\nShe smiles at me. \"Then get your slutty slave home Master.\"\n\nFuck yes! I step on the gas a little harder, and click the butt plug on high. Karen spasms in the seat and almost screams. \"Shit! Oh god. Oh Wow.\" She is just gasping and writhing in the seat.\n\nIt is so AWSOME watching her. She is obviously loving it. I try to watch her and the road. It's an old crappy road that circles around the lake. I have to pay more attention to it than her.\n\nI am pretty sure she just came, but now I have traffic to contend with. I can't watch her. Thank god the cabin is just a few minutes away. I pull up to the house and shut off the ignition.\n\n\"Please Master. I don't think I can walk like this.\" She pleads\n\nI love that she is getting into it. \"Strip in the car, and I will shut it off until you are in the house.\" I say.\n\nShe doesn't answer but strips. We can't be seen from the road, and there are no neighbors for probably 50 yards. She is naked in the car. Her nipples are swollen and hard. I shut off the vibe.\n\n\"Thank you.\" She sighs\n\nWe walk in the house, and I turn it back on high. Shit she was right. Her legs buckle as she yelps and falls to the floor. I smile at her. \"We are back in the house.\" I click it off. \"If you aren't on the bed in 20 seconds you get the other toy in your pussy while I fuck your ass.\"\n\nShe looks up at me and smiles as she stays on the floor, and takes her time getting up and slowly walks to the bedroom.\n\n\"Ezzie, does she want to toy while I fuck her.\"\n\n\"Yes Ben. She wants it hard. She wants you to take her again like you did in the grass at Uncle Ray's old place.\" She says.\n\nGod, decisions, decisions. How do I want to tie her down?\n\n\"She is torn. She wants to be face down on the bed, but she wants to watch you as you cum.\"\n\n\"Thank you Ezzie. It looks like I will be switching and flipping her over part way through.\"\n\nI walk up behind her and spank her ass cheek. She yelps. \"Get moving.\"\n\nWe get into the bedroom and I push her face first onto the bed. I crawl over her on her back and start strapping her arms down and then her legs.\n\nI stand up and admire my handy work. I grab the vibrator, lube and pull up the app. I rub some lube on the vibrator and push it right in. She is soaked. I didn't need any lube after all.\n\nI start pulling on the plug she moans as I pull a little harder and harder until it pops out. Her ass almost spits it out at me. She gasps as it finally pops out. I squeeze a big blob of lube on her ass, and rub some on me.\n\nI line up and push in before she can close up. I push in her ass balls deep with one firm stroke. \"Oh Fuck!\" She yells out. I stay deep in her ass, set the vibrator for about 3/4 power and random frequencies, and turn it on. I feel her whole body jump in surprise and she lets out what almost sounds like a growl.\n\nHoly Shit. That toy feels really strange vibrating inside of her, and kind of good. I brace myself on her ass holding her to the bed and start fucking. God I love the way her ass squeezes me. Now add to that the vibrator buzzing against me as I push in and out.\n\nShe hasn't stopped writhing under me moaning and grunting as I fuck her ass harder and harder. She looks back at me over her shoulder. \"Fuck me Ben. Make me yours like you did under the stars.\" She smiles at me with an evil smile. \"I bet you can't make me say the word?\"\n\n\"Ezzie, is she serious?\"\n\n\"Yes Ben she wants you to fuck her as hard as you can. She wants you to take her while she is tied to the bed.\"\n\n\"Ezzie, can you promise me you will listen to her, and if it's too much you will tell me.\"\n\n\"Of course Ben.\"\n\nI pull off a pillowcase and shove it in her mouth. She stares at me wide eyed. \"No safe word for you tonight.\" I grab her hips and start fucking her as hard as I can.\n\nNo more words come out of her mouth. Now it's just constant grunting as I fuck her ass. It's joined by the slapping of skin as I fuck in and out of her ass. Fuck I am close. I was going to flip her, but now I am just cumming in her ass.\n\nI keep fucking her. \"Karen I am so close. I am going to fill your ass with cum.\"\n\nHer only acknowledgement is a muffled \"Uh Huh.\"\n\nI give it a little extra effort. The vibrator is pushing closer to the point of no return faster than I want to admit. I grunt and slam in one last time and stay deep in her ass. Karen groans into the pillowcase shoved in her mouth as I cum in her ass.\n\nI fall forward on her a bit. I slowly pull the impromptu gag out of her mouth. She is breathing heavily. \"Oh fuck. Oh Fuck. Oooohhhhhhh!\"\n\nI feel her clench down on me as she cums. The vibrator is still buzzing away. Her hips hump a little. \"Oh god please take it out.\"\n\nI bump my hips a little bit while I am still deep in her ass. \"Take what out?\" I ask.\n\n\"Both.\" She gasps.\n\n\"What happened to you brave words earlier? I bet you can't make me say the word.\" I ask, as I pick up my phone and throw the app up to 100, and start slow steady ass fucking again. Just fucking back and forth in and out. \"All you have to do is say the word.\"\n\nKaren gasps as the toy picks up speed and I started fucking her again, but says nothing.\n\n\"Ezzie is she ok? Is she close to cumming?\"\n\n\"She is getting closer, her bum is sore but she won't say the safe word. As long as you want to fuck her ass she will let you as long as it doesn't start really hurting.\" Says Ezzie.\n\nGod I Love this girl. Let me give her an out. \"I think I need a break. I will just put the plug back in you on high until you concede.\" I say as I pull out of her ass with a pop. She clenches down on me a little bit as I pull out.\n\n\"Independence. Independence. Please, I give. Not the plug again, Please.\" She says quickly. I squeeze a little numbing lube onto her semi open ass and with one finger rub it around her open bum.\n\n\"Sshh, it's ok. We are done. You were amazing.\" I say as I pick up the phone and shut off the vibrator. I drop the phone and reach for the antenna and pull it out of her. As it pulls out of her a big string of goo stays connected and stretched between it and her pussy. It finally drops off the toy and falls back across their thigh.\n\nI lay beside her and wipe the hair from her face. She looks wiped out. I have given her a good ass fucking and she took it like a pro.\n\n\"Ezzie please make sure Karen knows I love her more than I have ever loved anyone before.\"\n\n\"She knows this Ben.\"\n\nKaren's face gets a little emotional. She shakes her wrists. \"Please let me loose. I want to hug you.\"\n\nI reach down and unhook her ankles first, so when her arms are loose she can move her body. I unhook her wrists and she throws her arms around me.\n\nShe just hugs me. I hear her sniffle a little. I pull back a bit and look at her. She is crying a little. \"Hey, what's wrong? Crying after I just gave you my A game is really doing wonders for my self esteem.\"\n\nShe slaps my arm. \"Shut up you jerk. It's a combination of I can't believe how much I love you, I can't believe the fucking you just gave me, and how much I enjoyed it. I am just a little emotional.\"\n\n\"Whew! For a moment I was afraid they were tears of disappointment.\" I say as I wipe fake sweat from my forehead.\n\nShe giggles. \"You're an ass!\"\n\nI look her in the eyes. \"I can be an ass, but I am an ass that loves you like crazy.\"\n\nShe wraps me up again in another hug. \"I Love You too.\"\n\nI see the alarm clock on the nightstand. \"And we have a boat being delivered real soon.\" I hop up and head to the bathroom. I wash up and come out to get my clothes off the floor and get dressed. I look up and Karen is asleep. Since we were on top of the spread I grab a large beach towel and cover her, and I walk out quietly closing the door.\n\nI am sitting outside with a beer when a pickup pulls into the driveway with the boat in tow. He hops out and we walk down to the shore to take a look. He doesn't want to leave tire marks in the grass and dirt.\n\nHe offers to take me to the public boat ramp. Get the boat in the water, and he will drive the trailer back here and leave it off to the side out of the way, and I can drive the boat back.\n\nSounds like a plan. I hop in the truck. 20 minutes later I am pulling the boat up to the dock, and tying it up. The trailer is already here, and Karen is sitting on the deck.\n\nShe comes down to the dock smiling. \"Why didn't you wake me?\"\n\nWe stand on the dock and I hold her in my arms. \"Hey it's not often a guy can say he wore out a woman. Plus you deserved a small nap after that.\"\n\nShe smiles at me. \"That was harder than July 4th.\" She says.\n\n\"Ezzie, did I actually hurt her.?\"\n\n\"No Ben but she is sore, but she thinks it's a good sore. She did enjoy it.\" Ezzie says.\n\nI know I didn't, but I ask the same. \"I didn't hurt you did I?\"\n\nShe puts her hand on my chest. \"Ben, you would never hurt me. I do think when you pulled out saying you were putting the plug back in it was to get me to say Uncle though.\"",
        "I can help but smirk. \"Oh you brat.\" She says as she slaps my chest. \"I knew it. You just wait until I have you tied to a bed!\"\n\nI bend down and give her a long loving kiss. \"I can't wait.\" I say with a smile as I break the kiss\n\nShe smiles at me. \"Will you take me for a ride?\"\n\n\"On the boat?\" I ask with a smile.\n\nAnother slap on the chest. \"Yes!\"\n\nI untie the boat and we go for a ride. The house cleaning is calling though. We return to the dock and tie it up.\n\nWe realize our shopping list is growing. We need more than just the local general store. I pull up the area online and I am surprised to find a real shopping center about 40 minutes from here.\n\nWe decide to head out and do a big shopping to stock the place with food, cleaning stuff and other essentials. By the time we get back and the stuff is put away the sun is setting.\n\nI take dinner out to the grill. We eat dinner at a picnic table on the deck. The plates are cleared and we are enjoying a drink after watching the sunset.\n\nI turn and look at Karen. I think it's time for the 3rd round. I stand up and pull her to her feet. I wrap my arms around her and kiss her. I reach down and pull her shirt up. We break the kiss and she steps back lifting her arms for me to pull her shirt off. I reach behind her and pull her to me for another kiss. As we kiss I unclip her bra, and she pulls it down and off.\n\nI reach between us and tease her nipples. As I feel them swell and harden I bend down and suck one and then the other into my mouth. Karen moans and runs her fingers through my hair. I drop to my knees and pull her shorts and panties off. I push them to her ankles and she steps out of them.\n\nI pick her up under her bum and carry her a few steps to the picnic table. I sit her on the edge of it and push her back as I crouch down and kiss her pussy lips.\n\nKaren softly gasps and moans as I softly kiss and lick her all over her pussy top to bottom. I shift and drop to my knees. As I move my face back to her I stick my tongue out and slip it between her lips.\n\nI push in and lick up. I feel her shiver a tick as she moans a little louder. As much as I want to fuck her. I want to tease her and make her cum by going down on her. I keep licking, kissing, and nibbling all around her pussy. I decide to turn up the heat and start sucking her clit into my mouth while I flick my tongue across it.\n\nThis she really likes. She gasps loudly when I suck on her clit. When I feel her getting close, I back off and resume gentle kisses and licks to her pussy. She moans in disappointment.\n\n\"Please Ben!\" She pleads.\n\n\"Please what?\" I ask as I flick my tongue between her lips.\n\n\"I don't care if you tie me to this god damn table, just fuck me please.\" She pleads.\n\nTied to the table. Hmmm I hadn't thought of that. I get up and take Karen's hand and put it on her pussy. \"Keep the motor running. I will be right back.\n\nAs I head inside I realize I can't tie her to the table. No rope or straps long enough. Maybe clip her wrists to her legs, or her arms clipped together holding her legs. No, I don't want her legs closed tight. Hopefully I can put the ankle straps low enough on her legs to clip her wrists to her legs and hold her spread wide. God she will look sexy.\n\nI get back outside and she smiles as she sees the restraints. I put them on her wrists and then legs. Luckily they are big enough to attach a few inches above her ankles and I can clip the wrist to the leg.\n\nBy the time I am done she is spread wide open. She looks so fucking sexy. Her legs spread wide, her pussy lips parted and wet Jesus. I so want to just stick my dick in her, but I have a plan. I kneel back down and continue eating her out.\n\nKaren moans before my mouth even gets to her pussy. \"Ben you promised to fuck me.\"\n\nI smile at her from between her legs. \"No, you said you didn't care if I tied you to the table. You just wanted me to fuck you. I never answered you. I am going to fuck you. Right after I eat you to orgasm.\"\n\nI stand up \"Have Fun Ezzie!\" I take Ezzie off. I reach over to Karen's right hand and put it on her finger. \"You are going to get really lucky tonight.\"\n\nI bend back down and lick and suck her her clit relentlessly. Her panting and gasping gets faster and louder. Her hips start humping up and down. \"Oh shit Oh Fuck Please Ben dont stop.\" she pleads.\n\nI pull my mouth off her \"Please don't stop, Who?\"\n\nShe gets a huge smile on her face. \"Please Master, make your slutty slave cum.\"\n\nI dive back in. I suck her clit into my mouth. I grasp it between my teeth and nibble on it while I flick my tongue across the tip of it.\n\n\"Jesus. Fuck.\" she gasps\n\nI bite harder and tug a little \"AAAHHHHHH!\" She screams and cums. Her juices are drooling out of her. I lick and lick her lips. I want all of that sweet juice. When I think I have most of it up I stand up and push myself in her. She is still reeling from her orgasm, and yelps out as my hardon invades her. Her closed eyes are wide open all of a sudden. \"Fuck. Fuck. Fuck. Oh Shit.\" She says as I fuck her.\n\nI would swear one orgasm just rolled into another. Her pussy has been spasming, and clenching me hard since I started fucking her. She hasn't stopped panting and moaning. I am watching her hands just clench and open. She doesn't know what to do with them. She cant grab the bed sheets like she will lots of times when she is cumming hard. Her head and shoulders keep rolling up, and then dropping back to the table. Her body doesn't know what to do with itself. Her movements are restricted by....CRACK!\n\nHoly shit the picnic table starts to tilt. Karen screams. I stop fucking her for a moment. I unclip her ankles and pick her up. She starts to cuddle into me when I lower us to the grass. I flip her over face down, clip her wrists together behind her back, I clip her ankles together, and pull her up onto her knees. Her head is turned to the left in the grass. I get behind her and resume fucking her hard.\n\nShe is grunting with almost every stroke. She was close a moment ago. I want to make her cum from a good hard fucking. I am holding her waist, watching her ass cheeks jiggle as I fuck her. I listen to the slapping of our bodies. I look up and watch Karen's face as I feel her orgasm happen. Her hands are now stretched open wide with her fingers spread, her body gives small spasms, as her pussy clenches me tight. I look at her face. From my vantage point it looks like her eyes are half rolled up in her head, and she lets out one long, loud moan.\n\nAs she orgasms I feel her start to fall over. I pull her up straight. \"Oh no you don't my sexy little slut. I am not quite done with you.\" I grab the flesh on her hips/ass cheeks and use it to hold her up and I keep pounding her. She is gasping and moaning with every stroke. She is done. I don't need Ezzie to tell me she is done, but I am not. I keep fucking her hard. Jesus, I am just gliding in and out of her. She is more than soaked. Her pussy feels fucking fantasic, before I know it I am starting to pant and grunt myself. I fuck into her one last time and explode inside of her pussy. God I feel like my guts are trying to shoot out of me I cum so hard.\n\nI loosen my grip on Karen's hips and she falls over onto her side. She looks exhausted & sated at the same time. I sit back on my haunches and catch my breath. As I look at her I see my cum starting to leak down over her thigh. Our eyes meet, she just whispers \"Wow!\"\n\nI laugh. \"I was thinking the same thing. We owe Uncle Ray a picnic table.\"\n\nShe giggles and tries to turn to look. She realizes she can't bound like she is. She just looks at me, asking with the look to be let loose. I crawl over to her, and unclip her wrists. She moves her arms and tries to stretch her shoulders. I reach down, and undo her legs.\n\nI stand up and reach my hand down to help her up. She stands up, but seems unsteady. I scoop her up in my arms and head in. We walk by the picnic table and see one of the side A frame pieces cracked and broken. She covers her eyes with her hand and giggles \"Oh My God.\" as she buries her face in my chest. I walk us into the bedroom and lay her on the bed. She lays back into the soft bed. One by one I gently remove each restraint. I leave her on the bed to go close up. When I come back into the bedroom, Karen is under the covers and holding the covers up for me to join her. She snuggles against me, takes Ezzie off and slides it on my finger. \"Every time you give me your lucky ring we have Amazing sex. I mean tonight was just Wow.\"\n\nI don't ask Ezzie anything. I can feel her overwhelming pleasure as she slips back on my finger. \"I am glad you enjoyed it, Ezzie. Goodnight.\"\n\nWe snuggle against one another and drift off. I can't help but think if I am going to share my life with Karen, I should tell her about Ezzie."
    ],
    "authorname": "ao1701e",
    "tags": [
        "mind control",
        "anal",
        "bondage",
        "incest"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/a-ring-named-ezzie-pt-06"
}