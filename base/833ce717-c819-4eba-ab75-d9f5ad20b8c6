{
    "title": "In The Library Ch. 02",
    "pages": [
        "I moved through the next days in a daze, catching the memory of that hour and trying to resolve if it was a dream or a nightmare, sleeping or awake. It made no sense and I could not share it with anyone for surely they would think I was mad. I was mad, mad with the vision of her, in a mad maze. \n\nAs more days passed I found myself eating to build up my strength. At night my cock would rise and waken me from dreams of smoke and brimstone, hot and cold, shivering and sweating. But I would not touch myself, I needed to keep the heat because she was so cold and had drained me. As more days passed, the vision faded to a memory and I thought a fever must have peaked that afternoon in the library, as she could not have been real.\n\nSome two weeks later I was again in the library, again finishing a long day's research, and again unthinking went to my quiet place at the end of the stacks, at the end of the building. The afternoon was again drowsy and slow, the library lulled and quiet. As I was about to make myself comfortable I wondered what was on the top shelf, that my black and white vision had placed up so high on that day dream of madness or hallucination. \n\nI expected to see a full shelf of material, maybe a set of dictionaries or reference books but instead found a series of bound leather volumes, each volume marked with a year and the month. There were a number of gaps in the series and I had no way of knowing which volume the dark librarian had put back - but obviously that was the explanation: the gaps were there because the material was being used by someone else for research, and nothing had been put back that day because she was not real. I shook my head at my strange train of thought, but reached for a volume anyway. \n\nClimbing down from the steps I settled myself into the chair and opened the big journal. Inside I found it was a series of newspapers from the 1920s, rough black inked headlines and a feature photograph on the front page of each edition. \n\nFlicking through the pages there were politicians and personalities from the city, names long forgotten but vaguely remembered - the university had been founded in those days and some of the older campus buildings would have been built in that era. \n\nAs I flicked through the newspapers I realised that there were several articles featuring the same names, the same family. Intrigued, I turned back until I found the first story which was accompanied by a small photograph of a family. The faces were small and blurred; it looked like a wealthy family with father and mother and two daughters. It was difficult to make out their ages or any clear features, but one of them was clearly a debutante. \n\n\"Grace, the eldest daughter of Mr and Mrs ___________ of Eastside, was introduced to society...\" The girl was tall, well figured, her face half hidden under a wide brimmed hat, her long dark hair falling in a swirl around her shoulders, her hand resting on the shoulder of the younger girl, her sister. And in the faded unclear picture, I felt that this was my vision in the library - Grace. But how could this be, more than eighty years later?\n\nAs I read, I slowly came to realise that the library was again sheathed with a veil of silence. The noises of the building were muted, background voices were fading, and outside the window a flash of movement caught my eye. A brightly coloured lorikeet splayed its wings as it landed outside the window... and behind me a shadow swirled against the wall and my heart stopped and thumped down into my chest as my madness whirled around me again and she was there. \n\nThat same exquisite face but somehow now surrounded in a blaze of colour, extraordinary vivid green eyes, swirls of iridescent blue and green shimmered around her body, long slender legs and long body slinked in front of me. But how could this be? \n\nIt was her, but somehow not - her presence before had been voluptuous and curves, now she was long and lean and slender but still undeniably the same essence of woman. I could not imagine someone so different yet so much the same. But I was numbed and knew what to expect but could not know what to expect as she was the same woman but so different.\n\nShe moved the tome of papers away from my lap and sat herself upon me, luscious long legs stretching to the floor, her long body, long and lean sheathed in multi-coloured iridescent silk, stretched against mine; and she placed the palm of her hand against my lips. I shuddered as her hand was cold against my lips. But she slowly pressed one cold finger between my lips and turned my face to look at her. Her eyes were black and deep, and pierced my soul. \n\nSilently, her eyes commanded me to kiss and caress her hand and palm and delicate wrist. It was then that I noticed a fine trace of veins and colour on her forearm - her veins blue and fine, and her skin was covered with a fine tracery of iridescent colour, like smoke had been tattooed onto her skin.\n\nI touched my lips to her palm once again and began to caress and suck on her fingers as if they were small cocks, eager to be pulled straight and hard as they pulsed into my mouth. First one delicate little finger, fine and small, then each finger in turn pressed between my lips as if they were tasting my mouth and teasing my tongue, exploring my mouth as a honey bee seeks nectar, or as a leech seeks blood. I was repulsed and aroused simultaneously, my mouth as if it had a mind of its own was seeking out those long probing fingers and the delicate web of skin at the base of each one. \n\nI sucked each long finger into my mouth and to the back of my throat, sucking down hard and nipping her flesh with my teeth. As I suckled on her fingers I felt each one warm, and then there were two. Two fingers now, forcing my mouth open more with a wider pole of flesh. As she suckled her fingers into her mouth I felt her other hand trace a line down my chest, pausing at each button of my shirt and popping each button free. \n\nSoon enough I was bare to the belt of my jeans and her hand brushed firmly onto my roused cock trapped inside the denim. She gripped my fullness and then her hand was gone. Entranced, I watched her hand crawl like a spider to the top of her own blouse and the same movements repeated themselves on her cloth, iridescent lace and brilliant colours, as each pearl button popped loose. \n\nShe turned ever so slightly away from me so that both of her breasts were exposed within their half cup brassiere. Rouge nipples, half hidden by the lace of her lingerie, pushed erect, tips long as the end of her finger.\n\nI was astonished to see that the markings on her skin continued into the gentle cleaved valley between her breasts, long swirling patterns almost liquid on her flesh, patterned over the swell of each pushing warmth of breast. Her breasts were like an open wine glass, perfectly sculpted but skin patterned as if with fire and water. \n\nHer smooth belly was also laced with colour and movement, her tight muscles almost fluttering with each breath as she sighed beneath my lips. \n\nNow my tongue traced a pattern on her delicate wrist, and then a long slow lick up the smooth skin of her arm to the crux of her elbow, smooth and cupped. \n\nShe slowly and rhythmically began to bend her arm and each time it bent a small fold of skin presented itself to my tongue and to my fingers. I caressed it gently, as one would the lips between a woman's thighs, as if it were a small delicate cunt, a slip of erotic flesh far away from the usual place. \n\nMy mouth and tongue slowly moved higher, up towards the pit of her arm, my fingers trailing over the soft smooth flesh of her forearm and then her upper arm. Both my hands were now tracing the ends of my fingers over her arms, smooth yet strangely textured. \n\nHer skin was soft, like down, but somehow not like flesh. However, I no longer cared about the strangeness of her flesh as she was starting to respond to the firm touch of my fingers, her body undulating in my lap, her tight ass pushing hard against my cock still trapped in my jeans, her sweet full breasts pushing against my chest. \n\nThe lace of her bra caught my hard hot nipples and caused a delicious sensation as she moved her flesh and cloth against my bare chest. Sighing into my neck, she brought a hand to the front of her glorious chest and un-snicked the clasp of her lace frothed bra and gently pulled one cup aside. Cupping one pearlescent fleshed breast in her small hand she offered the mound to my mouth. \n\nHer nipple was red, long and engorged and peaked hard from the curve of her flesh. It was as if her nipple itself was pulling the mound of her breast tightly upwards towards my mouth, her nipple so tight and pointed, corrugated on the tip of her breast. I suckled my lips around the tight nub and pulled as much of her breast into my mouth as I could, my tongue swirling around her tight hard, hot hard thrust of flesh. Beneath me her body jerked and astonished, I felt a warm flow into my mouth.\n\nMy god, I was suckling her breast and she was streaming warm milk into my mouth! I drank down the warm liquid, which was sweet like honey and even smoother. Her breast milk was delicious to taste and it felt that the more I suckled the more there was. She was feeding me now, one hand caressing my hair, the other still insistent and hard on the cloth over my cock. I could hear and almost feel a soft warbling in her throat as she let down her milk into my eager mouth. \n\nAnd then she pulled herself away from me, her engorged nipple popped from my mouth. I looked down at the rich red bud at the tip of her breast and saw that it was beading small drops of milk, just as my cock would bead small drops of pre-cum when it was thick and hard. I could feel her fast pulse under my fingers, one hand near the top of her arm, the other resting gently against her hard pulsing belly.\n\nHolding my head to her chest with one hand, she raised her body from my lap and twisted herself onto the chair. With her other hand she eased out the buckle of my belt, and unthreaded the leather. She twisted undone the button of my jeans and pushed them down away from my body. I managed to raise my ass from the chair and she pulled the waist of my jeans down, and my jockey shorts. \n\nMy cock snapped free, hard against my belly and again I heard a growl from deep in her throat. Her clever hand reached around the shaft of my cock and squeezed once, hard. Her fingernails were clasped around my shaft and the sharp ends of her nails pushed into my flesh, five strong points of possession.\n\nI was trapped, one taloned hand around my pulsing shaft, the other still holding my head against her warm breasts. She shifted her body again, and her other splendid tight full breast was pressed into my mouth. Again, I felt her breast swell as it filled my mouth, and my tongue swirled the hard hot nipple. But this time, her other hand started a slow steady movement up and down my cock, her fingers now tightly squeezing, now softly stroking. \n\nThe sharp ends of her nails traced tightly down my hot flesh and then the tips of her fingers gently caressed my balls, squeezing. And then the palm of her hand rotated around the soft hair on my sac, causing them to pull in tight. \n\nHer hand slowly moved from the base of my cock to the tip of my cock, nipping and caressing the helmet; and then down once more to the base of my belly. I felt a sharp finger press against the pucker of my ass and then gone, palm up the shaft and over the head of my throbbing phallus.\n\nAnd as she relentlessly stroked and scratched and probed my cock and thrust a sharp finger nail into the little hole on the head, and then my tighter hole at the base of my body, I felt her breast start to thrust into my mouth with the same urgent rhythm. As I sucked on her full hot nipple she would pull up on my shaft. As I swirled my tongue around her engorged nub she would swirl her palm around the head of my cock. \n\nAs I caressed and pressed the palm of my hand onto the hot stickiness of the breast that had given up its milk, she would caress and press the palm of her hand around my tightening balls. As I would press my tongue against the hot end of her nipple, she would press the end of her finger against the tight warmth of my asshole. \n\nAs I thrust my tongue into the flesh of her breast, she would press her finger into my hole. And we set up a full rhythm of cock and hand and nipple and mouth, finger and stroke and palm and press, both of us getting tighter and more urgent now, yet still tantalising holding our pace. \n\nIt was as if we both knew we should alternate fast and slow, scratch and smooth, nail and palm, suckle and push, but ever increasingly stroke and twist, palm pressing balls and finger pushing hard into my hole, tongue pushing hard around her breast and yet again our pace quickened and our heat was shared and her finger probed up and my tongue probed down, and the head of my cock filled hot and hard with blood and her nipple filled hot and hard with blood and I began to throb from my base and felt my come start to rise through by shaft and I heard a long moaning sigh as she laced her finger up my cock and twisted over its purple head. \n\nAnd with a shudder she let down her milk and grasped my cock and pulled one last time and I pulsed against her hand and over her belly, and her warm milk flowed in to my mouth, honey warm and smooth. And her milk flowed so plentifully as I suckled her breast and she cooed and milked my cock to pull the last long stream of come from my throbbing balls.\n\nAs I continued to suckle the milk from her tight hard nipple, she swept the warm milk of my come from her belly, sticky between her fingers and into her mouth. So we drank of each other but who was feeding who? Both our bodies shuddered in the aftermath of our ecstasy and our mouths, stick with each other's juices, touched and we fiercely kissed, pulling each other's tongues into our own hot mouths and shared the hot fluids from our bodies in some devilish nectar.\n\nBut never a word was spoken, just my hot breath heaving in my own aftermath, and her faster breath trembling in her throat. Her heart beat fluttered, a fast pulse on her neck, and again, that warble from deep in her throat, slower and somehow contented.\n\nWe eased into comfort on each other, her head with its long lustrous hair resting peacefully on my shoulder, my hand caressing her soft silken hair. One of her hot small hands pressed against my chest and my nipple, the other curled peacefully around my shrinking cock.\n\nIf anybody had peered into that darkened alcove they would have seen a slender young woman draped along her boyfriend's body, diaphanous cloth swirling around the length of her back, her long legs shimmering under the folds of her long gown.\n\nAnd her flesh still glowed and flickered with colour, like a hundred tattoos all moving together, every colour of the rainbow glowing. \n\nAnd then she moved away from me, and I saw that she had a patch of whiteness in the middle of her belly where my hot seed had spilled, like a burn on her hot flesh. \n\nGazing into my eyes with her dark dark glance, she reached to the mound of each breast and gently cupped them into the froth of lace and took them away from my eyes. And she buttoned up the pearl buttons on her blouse, flicked her long hair away from her beautiful face, and with one long hot kiss from her crimson lips and one final caress of the hair on my head, she left me. Like a breath of wind on a hot day, the air swirled and she was gone. \n\nOne small word echoed on the air: \"later\" she sighed, and I knew that this was not the end, that some magic and mystery was still singing on the wind. In the distance a door banged shut, the stillness in the library started to move. \n\nAnd outside, on the lawn, a bright lorikeet flitted up from the grass; and as it did so I saw a blaze of white feathers on its body, catching the light of the dying sun with a bright flash of brilliant white, surrounded by reds and yellows and blues, a brilliant iridescent bird."
    ],
    "authorname": "electricblue66",
    "tags": [
        "erotic encounter",
        "coming on belly",
        "succubus",
        "bare breasts",
        "bird",
        "long hair",
        "male masturbation",
        "breast milk"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/in-the-library-ch-02"
}