{
    "title": "NewU Pt. 05",
    "pages": [
        "Alright Ladies and Gentlemen. \n\n \n\nWelcome to NewU, Part 5. There is so much to discuss and such little time to do it in. First of all, your patience and continued support while this chapter was being crafted is more than I could ever asked for, let alone deserved. I am not going to lie, this chapter was a struggle. I had written something pretty decent within a week or two of the previous chapter being posted, then my laptop died and took the whole thing with it. Note to the writers out there, there is nothing on earth more valuable than a memory stick.\n\n \n\nSecondly, this lockdown dragging on longer than any of us first envisaged hasn't helped either. Instead of being able to write in the days when the kids were in school, I was relegated to only being able to write at nights. Three children breathing over your neck is not conducive to the creation of erotic fiction.\n\n \n\nThirdly, writers block is a thing.\n\n \n\nThis is a much longer chapter than I originally planned, I tried separating it into two but, to be honest, I couldn't find a suitable place to split it, and anywhere I tried just ruined it, so in thanks for your patience, you are getting a double feature. As an added bonus, there is sex scene included that is longer than the entirety of the last chapter... something to look forward to.\n\n \n\nDespite the months that have passed since my last installment, the steady stream of comments and emails has been a constant motivation and I can't thank you all enough. There are so many people to thank for their part in making this chapter what it is, from my editors and proofreaders to friends who have encouraged me to keep going when the night has been darkest. Chloe, Heavens, Claire, Shadow and, most of all, Sophie. This wouldn't have happened without you. And for the rest of you, keep an eye out in the postscript for Sophie's name again. It is one you won't want to forget.\n\n \n\nI hope you enjoy.\n\n \n\n* * * * * * * * * * * * * * * * * \n\n \n\n \n\n\"Alright, let's summarize,\" I said to Jeeves as he sat on one end of the plush leather sofa. His appearance and posture still reminded me of a Victorian age butler, even if his personality had changed. I was pacing. I always paced. I wasn't aware of any direct link between your legs' movement and the ability to think more clearly. Still, if I needed to unscramble my thoughts, I had to be moving. Jeeves' mildly amused smirk followed me around the bunker as I wandered.\n\nIt was the morning after consultation, and, of course, the morning after Becky had... well... committed herself to me. The rush of new developments over those few hours had been a little overwhelming and still not quite as settled in my mind as well as I would have liked. It would be a while before my brain had acclimatized itself to its new way of processing information, but for now, I needed someone to talk to. So, with no other option available, I decided to talk to myself.\n\n\"The most obvious point,\" I continued, rounding the pedestal in the middle of the room and glancing at Jeeves, \"Is that this isn't all in my head.\" I pointed at the ceiling and twirled my finger around, illustrating to Jeeves what I was talking about before quickly remembering the gesture's futility. I was literally talking to myself; he would get it... I would get it... whatever.\n\n\"Well, technically, this is in your head.\" He replied with no small amount of amusement. I cast him a narrow-eyed look. \"But no, the physical manifestations of your abilities are difficult to overlook.\" He continued with a small smirk. \"There is a considerable distinction between knowing you have these powers and seeing them at work.\"\n\nOnly my eyebrows, in a single bounce above my eyes, seemed capable of articulating that level of understatement. \"Which brings us onto the next point.\" I went on broodingly, \"This!\" I swept my arms down my body, flicking my hands out as I did, gesturing to the miraculous levels of healing my body had achieved in the few short days since my awakening.\n\n\"Is almost completely healed.\" Jeeves finished for me. \"Doc Matthews was right; we aren't all the way there yet, but I'd give it a few more days, and you will be back to full physical health.\" His smug grin was infectious, I could feel its mirror curl my own lips.\n\n\"And then there is Becky,\" I said, Jeeves' grin spreading wider. \"I mean, I seemed to have missed a lot with her. This whole... err...\"\n\n\"Submissive.\" Jeeves supplied the word that my train of thought had lost. Asshole\n\n\"Submissive thing.\" I continued with a nod. \"How did I not see that coming? And how did I know what to do?\"\n\n\"Well, to be fair,\" Jimmy replied with a shrug, \"There were a few hints if you were paying attention. But her opening up to you like that is more an issue of trust than of attraction or personality. I'd recommend not questioning it and just go with it.\" A wry grin was the only thing distorting his otherwise formal appearance. \"But as for knowing what she wanted, that's simple: she told you.\"\n\n\"She told me?\" I asked with another narrow-eyed glance. \"You mean, like, she thought it, and I kinda automatically knew...\"\n\nJeeves gave a simple nod. \"Handy trick, isn't it, sir?\" His smug little smirk was almost infectious. \"Perhaps you should consider a career in law enforcement.\"\n\n\"So, in terms of health,\" I said, choosing not to give his suggestion more than a cursory amount of consideration. \"When do you think I will be able to, you know, move around and stuff?\"\n\n\"You are ready now, sir.\"\n\n\"Now?\"\n\n\"Now.\" I stopped pacing and stared at him. We both knew that this was not the time for being vague. His grin spread a little. \"You are already capable of full mobility, albeit with some very mild discomfort.\"\n\n\"How mild are we talking?\" I asked.\n\n\"There will be a small amount of ... aching\", He said simply. \"But nothing that you would consider painful.\"\n\n\"So, if I was to get up now...\"\n\n\"I wouldn't recommend it, Sir.\"\n\n\"Why not?\"\n\n\"You are about to have visitors. Two of them.\"\n\nA minute or so later, the door to my room swung open, Doctor Matthews walked in first with Philippa close behind. My eyebrows dropped immediately as my brain started to process what was happening; Philippa was talking over her shoulder to someone who was following her into the room, someone who -- at least as far as my powers were concerned -- wasn't even there.\n\nThe woman who stepped into view behind Phillipa was a goddess!\n\nBeauty is a strange concept, and the mantra that it is in the eye of the beholder is undoubtedly an accurate one. But there are some people who, despite differences in individual tastes, are objectively gorgeous. But even by those standards, the strawberry blonde-haired spectacle in front of me was the epitome of beauty. Stunning long and luxurious hair was pulled back into a loose ponytail that fell onto her shoulder blades. Her deep, molten brown eyes were fixed on some paperwork in her delicate hands. Everything about her screamed feminine magnificence, from her button nose and full pouting lips to the soft curve of her jawline and elegantly slender neck. I found myself staring at parts of her body that I had never noticed on another woman before. I mean seriously, how attracted can you be to a chin?\n\nNo sooner had she come into view, however, I quickly realized that this woman was the empty space in my ability to read minds that had puzzled me the previous day -- the blank space that Philippa had been talking about me to. My powers seemed to be working fine on everyone else; Doc Matthews was trying to think of a gift for his wife on their anniversary, and Philippa was wondering if my dick really was as big as Becky had described, but this new woman was giving off nothing. It was like I was only able to see her mind as a void, conspicuous in its absence.\n\nAnother thing that became clearer as she stepped into the room was that she was making a concerted effort not to look at me.\n\nErr... Jeeves?\n\n\"On it, sir.\"\n\nDoc Matthews was well inside the room by this point, idly checking his paperwork against the charts at the bottom of my bed while Phillipa and the mystery woman made their way towards the machinery at my side. My eyes followed them suspiciously as they came closer, Marco's words bouncing around my head.\n\nInquisitors have limited resistance to our powers.\n\nIf you ever see one, you need to leave. Stop what you are doing, don't use your powers, stand up, and walk away... it's the only way of avoiding them safely\n\nI could feel my palms getting sweaty, alarm bells, and literal sirens were starting to sound in my head. I could almost see the flashing red light in my bunker as Jeeves frantically tried to get a handle on the situation.\n\nI couldn't read her. I couldn't even feel her presence, it was like looking into a black hole; the only way of knowing it was there, was the absence of everything else. She was an inquisitor; it was the only explanation. The 'Red Alert' program of my powers was now in full swing; I was ready for a fight.\n\nI could feel my senses heighten. I became acutely aware of everything: the beads of sweat forming at my brow, the calluses on the doctor's fingers as he flicked through his paperwork, the perfectly applied nail varnish on Philippa's, the nervous flick of the mystery woman's eyes as she struggled to look anywhere other than me. The sounds of footsteps as people passed the still-open door to my room, and every mind within a few miles came into crystal clear and effortless focus. Every mind except the one standing to the side of my bed.\n\nEvery muscle of my body felt like it was on a hair-trigger, willing, and able to defend myself if the need arose. The telekinesis part of my power was ready to rock as well, I may not be able to read her mind, but I sure-as-shit could launch her ass through the window with little more than a thought. Five stories of thin air and gravity would be more than enough to offset her resistance to my powers. Becky and I were becoming close, Philippa and Becky were friends, so by association, I felt an almost protective instinct towards Philippa. If this Inquisitor tried anything violent that could jeopardize my nurse, I was ready to ...\n\nPhilippa pulled me out of my thoughts. \"And how are you today?\" She asked with a smile. \"Looking forward to your first therapy session?\"\n\n\"Hmm?\" I blinked a few times as I forced my concentration away from the mystery woman, \"Oh right. Yeah, I'm good. Just... err... you know, eager to get on with it.\" My eyes flicked instantly back to the intruder.\n\nPhilippa didn't need to follow my eye line to know what I was looking at. \"Men...\" she giggled. \"put a beautiful woman anywhere near them, and they lose the ability to speak.\" She frowned for a second. \"Wait, you two haven't met yet, have you?\" I shook my head cautiously, my eyes still fixed on the threat as hers stayed rooted on Philippa. \"Well, that would explain it. Pete, this is Charlotte, Charlotte, this is Pete.\" She leaned into Charlotte and said in a hushed, conspiratorial voice, \"He is the one I was telling you about.\"\n\nCharlotte smiled and nodded weakly, having no choice but to finally turn to look at me. As soon as our eyes met, I knew something was wrong. She was terrified.\n\nThis doesn't make any sense, why is she afraid? \"Jeeves? Are you getting this?\"\n\n\"I am Sir. But something else is bothering me.\"\n\n\"Well, don't leave me in suspense!\" \n\n\"Marco said that Inquisitors always work in teams. There are no other voids in the area, she is alone. He also said they would have a glowing 'aura' around her, there isn't one.\"\n\nI looked up at Charlotte, trying to keep the confusion and suspicion out of my eyes. \"It's nice to meet you, Charlotte,\" I said as calmly as possible. It was habit more than anything, maybe a little instinct, but I held my hand out to shake hers.\n\nHer eyes flicked down to my outstretched hand in abject terror, she swallowed hard, seemed to resign herself to something and reached her hand out to meet mine.\n\nAs soon as our fingers touched, existence fell away.\n\n* * * * * * * * * * * * * * * * * * * * * * * * * *\n\nI found myself in a meadow, the sun high in the sky, and a gentle breeze kissing the skin of my neck. Ankle-high grass and wildflowers bloomed in every direction as far as the eye could see. It was beautiful; no trees, no signs of civilization, and certainly no hospital\u2014just me.\n\nAnd Charlotte.\n\nShe crossed the few feet between us, her hand-rearing back and slapping me hard across the face. \"What the fuck is wrong with you?!\" My head shot to the side, my own hand instinctively coming up to cradle my burning cheek. \"Why the hell were you blocking me?! I thought you were a fucking Inquisitor, you Asshole!\"\n\nI could only blink a few times before my tongue remembered its role. \"Err... what?\"\n\n\"What do you mean, what?\" She screamed back, her fear melting into burning fury as she started pacing back and forth in front of me, her eyes blazing in anger. \"What the fuck is your problem?!\"\n\n\"Jeeves? What the hell is she talking about?\"\n\n\"I have no idea, Sir.\"\n\n\"Excellent, thanks for the help.\" I turned my head back and looked back at the fair-haired beauty. \"Do you mind if we start at the beginning?\" I said, letting my hand drop from my cheek, \"Because I don't have the slightest clue what you are talking about.\"\n\nHer pacing stopped. \"It's a simple question.\" She said, her eyes boring into me, \"Why -- were -- you -- blocking -- me?\"\n\nI took a deep breath, I don't know why, but Charlotte was starting to piss me off. \"What -- the -- fuck -- is -- blocking?\"\n\n\"Jesus fucking Christ! Did you awaken yesterday?\" She blurted in frustration; her fists clenched at her sides.\n\n\"No, Wednesday,\" I answered sharply.\n\nMy reply seemed to knock her off her stride. She blinked a few times before her eyebrows dropped into a deep frown. \"Wednesday?\" She paused for a second to watch me nod, an arched eyebrow on my face. It took a few more moments, but her eyes suddenly widened in realization. \"It's you! You are the guy who came into his powers in adulthood!\" Her speech had quickened dramatically.\n\n\"Wednesday,\" I confirmed again.\n\n\"I'd heard some whispers about you, but...\" her pacing had stopped by now, and she looked at me the same way a scientist would look at a new species of frog. \"That doesn't explain why you were block... ah, let me guess. Marco.\" She threw her hands up and went back to pacing.\n\n\"You know Marco?\"\n\nShe nodded with a derisive snort. \"Oh yeah, I know Marco. The guy is fucking useless! You were duelling me.\"\n\nNormally I'd consider myself a pretty patient guy. Still, this woman seemed to be stamping on every last one of my nerves. \"Look. We are going to need to take a big fucking step back here because I don't have the first God Damned idea what you are talking about. What the hell is duelling?\"\n\nCharlotte was still pacing, another snort of contemptuous laughter escaping her lips. \"Yup, that's Marco. He hasn't taught you anything. Let me guess, he appeared in the middle of the night, unlocked your room, told you how great his Library is, gave you some cryptic warning about the inquisitors, and then Fucked off!\"\n\n\"Err... yeah, actually. He said that...\"\n\n\"You didn't have anything else to learn? Yeah, he says that to everyone. Like I said, fucking useless!\" She stopped her pacing again and turned to face me. \"Well, if you want something done right...\" A deck chair appeared on the ground next to her, and she dropped herself elegantly into it. She looked at me, expectantly for a few seconds before rolling her eyes. \"We are inside our minds,\" She waved her hand around the field. \"Normal rules of physics don't apply. Think of something you want, and you get it.\"\n\nI scrunched my eyebrows, shrugged, thought for a second, and a deck chair -- identical to Charlotte's -- appeared on the ground in front of me. \"A quick learner.\" Charlotte nodded as I dropped into it. Her face was already infinitely more relaxed than it had been a few moments ago, \"But you lose points for poor imagination.\" She finished with a teasing grin, looking at my new piece of furniture. It was the first time I had seen her smile; she was dazzling. With a wry grin spreading across my face, I concentrated again, and a beer appeared in my hand. Charlotte's smile widened, \"A Very quick learner.\" She finished with a nod.\n\nShe crossed one of her legs over the other, flashing the skin on her low-cut red summer dress, one that she definitely wasn't wearing in the hospital. The thin straps draped off her shoulders in a way that managed to completely please the eye, the plunging neckline leaving barely enough of her skin covered to still be considered elegant. The material ended close enough to her knee to be called proper, but far enough away to still be interesting. I arched an eyebrow and looked down at my own body, surprised to find myself dressed in a pair of smart-looking dark blue jeans and a tight white polo shirt. I didn't even have time to form the question before Charlotte started to speak.\n\n\"Right, the first thing you should know is that I'm not part of the 'club.'\" She bounced two fingers in air quotes on either side of her head to illustrate the last word. \"And I'd prefer to keep it that way. If Marco or anyone else asks about me, your only acceptable answer is 'Charlotte who?'\"\n\n\"The Club?\" I asked with a frown.\n\nCharlotte seemed to be a little taken aback by my question, as if she had expected that nugget of information to pass unnoticed. Hey eyebrows dropped into a slight frown and her tongue dated out to nervously wet her lips. \"Okay, that's a very long and complicated story that we will definitely get back to another day. But, in short, many of our kind are part of their own little society. There are rules and a class structure and all this other stuff that resembles the middle ages. 'The club' is what we call them.\"\n\n\"We?\"\n\nCharlotte gritted her teeth a little, again seemingly surprised that I was following all this. \"A few hundred years ago, a sect broke away from the main body. Much more progressive and liberal in their ideas, but utterly condemned by 'The Club'. My parents were part of this sect. We aren't so much in hiding as we were back then, but we don't really associate with them, and if we find new members before they do, we bring them into the fold. Its all very complicated and we really don't have time for that now.\"\n\nI simply nodded, letting the issue slide.\n\n\"Now, the first thing you have to think about, when it comes to blocking and duelling, is murder.\"\n\nI blinked. \"Sorry?\"\n\n\"I'm sure that you've had time to think about your powers, and one of the first things that almost everyone adds is a way to defend themselves.\" She started, sipping from a drink of her own as it appeared in her hand. My mind quickly thought back to all the martial arts I had added, not to mention the telekinesis and 'red alert' program \"There is only a finite number of martial arts out there so if one of us was to try to attack another one, more often than not, they would end up fighting someone with the same amount of skill that they have. Then there is the issue of healing, which I'm sure you are more than aware of now. It takes a hell of a lot of damage to actually kill one of us outright. You following?\"\n\n\"I think so.\"\n\n\"So, the only way to do it is to sneak up on them.\" She continued with a nod. \"But if someone can read the minds of anyone around them, then sneaking up on them becomes impossible. The only way around that is to block them. That is what you were doing to me, you were blocking my ability to read you. There are only ever two reasons for someone to block you, either they are a high-born inquisitor...\" she held her hand up to cut off my question before it was asked, \"and we will get to them later, or an Evo who means you harm.\"",
        "\"Evo?\"\n\n\"Oh, yeah. Evo, that's what we call ourselves. Evolution, Evo, genius, right?\" Charlotte shook her head with a roll of her eyes. \"Anyway, so if one Evo wanted to hurt another, it must be done in the mind. You try to block the person you are targeting; then try to get into their minds to do the damage. If the target detects you, they can gauge your intent and stand their ground -- if they think they can win -- or escape. It's also a way for the attacker to size up the target, they can still read them even though they are blocking them at the same time.\"\n\nMy understanding nod was interrupted by a thought, one doubtless provided by Jeeves. \"Wait. If that's the case and I was blocking you, why couldn't I read you?\"\n\nCharlotte's brows furrowed almost immediately. \"You couldn't read me either?\"\n\n\"No. You were just a... void.\" I shrugged, struggling to find the last word.\n\nCharlotte sat in silence for a minute, her eyes fixed on an invisible point on the ground between us, her brows locked in thought. \"... shit.\"\n\n\"What?\"\n\n\"I need you to think.\" She said slowly. \"How did Marco react when you first came out of your room after your awakening? You remember that sudden surge of power? How did he act?\"\n\nI cast my mind back before answering. \"Actually, now I think about it, he was a little freaked out. I had to calm him down, he looked like he was ready to bolt.\"\n\nCharlotte's face lit up in a dazzlingly lyrical giggle; it was like her every feature was bathed in light. Her eyes danced, and her full lips parted and bouncing as she laughed. In that moment, not Venus, Aphrodite, nor Helen of Troy could have held a candle to Charlotte's beauty. I was stunned into awed silence.\n\n\"Hooo,\" she panted as her laughter finally died down, a hand coming up to dab underneath one of her eyes, \"What I would've given to have seen that.\" She chuckled again before calming herself. \"Ok, so the only explanation is that you are ridiculously powerful.\"\n\nI could only squint in confused silence as she continued.\n\n\"A mind isn't just a room, and there is no way it can be represented as one.\" She explained slowly. \"What Marco called his Library is just a way for us to access our abilities. The mind, in its entirety, is infinitely more complex than that. It is a hive of activity. It contains everything from controlling our breathing, heartbeat, and nervous system, directing our physical movements to storing and accessing memories. From understanding the relationships with the people in our lives, processing knowledge, to processing our understanding of concepts fundamental to life, like financial value and the passage of time. There are so many facets that it cannot be manifested in a single room. Instead, it creates a city. If the room is our mind's manifestation of our abilities, the city is its manifestation of itself.\"\n\nI would be lying if I said I was following any of this at this point. The look on my face was obviously giving it away.\n\n\"Each city has a city wall to defend itself from attack.\" She explained after a short but amused pause. \"Some small and weak, others are tall and impenetrable.\" Somehow my mind flashed back to the palisade of stacked twigs that guarded Marco's mind against mine when my powers were first awakened. \"The size of your wall depends on the strength of your ability. So, in our case, the only explanation is that your walls were too strong for me to breach and read you without you letting me, and you couldn't read me because you don't know how.\"\n\nJeeves, are you following any of this.\n\n\"In a manner of speaking, yes, Sir. I can't tell you if what she is saying is true or not, but there is a certain logic to it.\"\n\n\"So, just to make sure I'm getting this,\" I said with a sceptical frown. \"There is an entire city in your head and one in mine too.\"\n\n\"Well, we are in our heads, so technically our cities are here. But yes.\" She said with a smirk. I made an exaggerated gesture of looking around with a dramatically confused look of my face, turning in my chair to peer over my shoulder before facing Charlotte again.\n\n\"Are they, like, far away or something?\" I asked in humorous sarcasm.\n\n\"Actually, mine is right behind me. You can't see it because I'm still blocking you. I'm assuming yours is somewhere behind you as well.\"\n\n\"Ah.\" I looked back over my shoulder.\n\nThere was a long pause as I turned back to face the grinning beauty in front of me. With her legs crossed in the deck chair, her arms laid out on the rests, and the martini glass balanced between her delicate fingers. She gave off an air of unquantifiable confidence, maybe even arrogance. The shit-eating grin on her face was doing nothing to assuage the look. However, her eyes were staring back into mine with ferocious intensity, totally at odds with the curl of her wet and shining lips.\n\n\"Ok. I'm gonna go out on a limb here and trust you.\" She said as face grew more serious. \"Allowing someone into your city is an incredibly intimate act for an Evo; you are literally letting someone into your mind. It is far more intimate than sex. But you could have done some god-awful things to Becky and Philippa, and you didn't, I checked. So, I'm going to trust you. But remember, I am a nurse. Fuck me over, and I will castrate you and make it look like an accident.\" Her threat was accompanied by a playful, albeit nervous smile as she stood from her seat, silently waiting for me to do the same and stepping towards me when I was I upright. She reached out her hand for mine. \"Physical touch for Evos is kind of a gateway. I don't mean like an accident brush, but a conscious, willing touch is basically a way for us to...\" she seemed to be struggling to find the words \"... I don't know, accept that we are the same, and mean each other no harm.\"\n\nOur fingers brushed together. A spark of something, a warm tingle, emanated from my hand and up my arm to my very core. It wasn't like Marco, where I could see every aspect of his life, but I instinctively and instantly knew that Charlotte was a friend. She was more than capable of inflicting both physical and mental harm upon me but was utterly devoid of the will. It was like someone putting a gun to your head but knowing -- absolutely knowing &#xad;-- that they had no intention of pulling the trigger.\n\nJudging by how her body and expression seemed to relax, she knew the same was true for me. We both let out a contented and relieved sigh as a medieval city, complete with high curtain walls, shimmered into existence behind her. She stepped beside me and turned to face it, both of us staring, only one of us trying to reset their jaw from its new home next to my feet.\n\nIt was beautiful, as far as a city could be, like something out of a movie. I knew enough about history to know that medieval cities were dank, odorous, and dangerous places in reality. But this was more like the idealized version you would see in movies such as The Lord of the Rings. It looked warm, friendly, almost inviting. Faded grey stones made up the 20ft high walls, beyond which, the tops of stone buildings could be made out above the ramparts and plumes of chimney smoke punctuated the clear blue sky. But dominating the skyline was the top of a mighty looking castle, its towers piercing the heavens at each of the four corners and a single, taller tower jutting up in the center. It looked like an off-grey version of the Disney castle I had seen in so many movies as a child. There was something distinctly fairytale about it all. It suited Charlotte perfectly, although I couldn't come up with a single reason why I thought that.\n\nHer fingers curled around mine, snapping me out of my reverie. \"C'mon.\" She said with a warm smile. \"I'll show you around. It's been a while since I've had a man inside me.\" She finished with a wink and lead me towards the small gatehouse and into her city.\n\nI'm not going to pretend to be able to remember all the intricacies of the conversation that flowed over the course of the next few hours. Charlotte explaining -- and in many cases, re-explaining -- how the city worked with a degree of patience that would make Mother Theresa blush in embarrassment. However, for the sake of expediency, I will try to summarize what I learned without the bumbling confusion that plagued those sun-filled and fondly remembered hours.\n\nThe tour of the city was an education in metaphors; every single building in the town had a purpose, a purpose that roughly translated into a function of the mind. The city clinic, a small, squat, thatched building nestled up against the walls on the western edge of town, was responsible for the body's ability to register pain and heal itself. The bank aided the understanding of value, risk, and reward. The forge was where the mind stored its knowledge on how to do manual tasks. Everything from changing a car tire to tying your shoelaces and the Library, an enormous building close to the center of town, housed all of Charlotte's knowledge. The school next door was where that knowledge was put into practical use. Training as a nurse for all those years was all well and good, but knowing how to do something and being able to actually do it were, apparently, two very different things.\n\nThe buildings in each person's city, according to Charlotte, changed depending on that person's life and needs. An engineer or a manual laborer, for example, would have a much higher dependency on the forge, meaning that the building would be larger and closer to the center of town. A person who had spent their whole lives dealing with chronic illness would require a larger clinic. But there were three buildings which, if I understood them correctly, were essential and central in everyone: The Market, the Palace, and the Well.\n\nThe Market, with the exchanging of goods and commodities, dealt with the body's core functions: breathing, heartbeat, dictating the intake of food, and so on. It was a bustling hive of activity with countless people carting goods between one store and another. Charlotte would explain that those people were representations of actual people in her life, a shadow -- if you will -- of the impression that person had left on her life and her mind. Everyone from vaguely remembered classmates, through the teachers and friends who had shaped her formative years, right up to the closest friends and family. All of them were represented as people inhabiting her city. None of them had any real purpose, but their presence brought life to the town in the same way that their presence had given meaning and value to Charlotte's life.\n\nThe Palace, the next of the three core buildings, was essentially the home of the conscious and subconscious mind. This governing facility monitored and controlled all aspects of the city. According to Charlotte, if I spent enough time wandering around in my own version of it, I would eventually find my bunker. It was another one of those buildings that was more of a fairytale representation of what a medieval fortress would have looked like- meant to look beautiful rather than to fill any real military or defensive purpose. Its five tall towers jutted into the sky like elegant fingers grasping at the heavens, almost silver in the bright sunlight. A large, marble-like staircase led to the main door. However, I got the impression from Charlotte's demeanor that going inside was a step too far for today's tour.\n\nI was starting to see what Charlotte had meant when she talked about the intimacy of being inside her city. In a very literal sense, I was walking around the deepest recesses of her mind. She may have been friends with Becky and Philippa for years, but an hour of walking around her city would allow me to know her on a much deeper level than even her closest family. It was a staggering amount of trust to put into someone. For a normal person, sex was about as intimate as a physical activity could get; one person being inside another, sharing DNA, it was the closest they could be to being a single entity. This was so much more. Her entire being was open to me. It was only her trust in me that told her that I would not use that information to my own advantage, or worse, do anything that could, literally, damage her mind. The Palace was the physical manifestation of that and was, at this point, off-limits.\n\nThe last of the three buildings was the Well. The Well represented an Evo's power. The depth of the Well determined the strength of one's abilities, it was from this Well that all the gifts and abilities that our powers gave us, drew their strength. Charlotte, Marco, and, I assumed, all of the other adult Evo's had been used to their powers for the majority of their lives. On the other hand, I was still getting used to differences between my old life and my new one. So, I was surprised beyond my ability to describe, when the Well turned out to be just that: a small stone circle, descending into darkness. I got the metaphor, a place from which her power was drawn, but for such a drastic difference it made to a person's life, I guess I expected more.\n\nAll of these buildings came in to play when you looked at it from the perspective of Duelling. The purpose of a duel was to gain access into someone's city, either through brute force and literally going through the walls, or through some form of subterfuge, going over them, under them, convincing the person to grant you entrance and then betraying them, and so on. Although Duelling was done as a sport amongst 'the club' -- as Charlotte called them -- in a hostile attack, that person could do a hell of a lot of damage depending on what buildings they chose to focus on.\n\nShe told me the story of someone who was Duelling for sport. The participants got a little too carried away, a fire was started, which quickly consumed the city's mustering field, and that person lost the ability to walk. If an attacker targeted the Well, they could drain a victim of their powers, attack the Palace and you could shut the mind off from the body and leave the victim in a 'locked-in' vegetative state. The destruction of the Market would kill a person outright; they would literally forget how to breathe. The Library could be raided for knowledge or memories. The school could be damaged to stop a victim from being able to use the knowledge they had gained and, in an attack which sounded very personal to me, new inhabitants could be added to the city, shadows of people whose only purpose was to cause mayhem. The literal definition of a mental illness.\n\nIf physically attacking an Evo in the real world was impossible for another, an attack on their mind was more than capable of causing unimaginable levels of harm. I was starting to understand why Charlotte had been so terrified when she first met me. The prospect of what could be done was certainly a sobering thought.\n\nI couldn't tell you how long we wandered around her city, but a large portion of it was spent with our hands locked into each other's, fingers curled together. For an expression usually reserved for open lovers, it seemed like such a simple and unimportant act compared with the surroundings we found ourselves in. I wasn't the first who had been inside her city; there had been people who had beaten her at Duelling for sport and entered her city in triumph, despite Charlotte's apparent disdain for 'the club,' it was clear that this hadn't always been the case. She had fought them every step of the way, they had breached her walls, but none of them had been invited. I was the first. There was something indescribably flattering about that. There was one problem, though.\n\nI had absolutely no idea how to return the gesture.\n\nWe had wandered back out of her city and found ourselves, once again, standing in the picturesque meadow where we had first arrived. With the exception of Charlotte's city -- and I had no real way of knowing which side of the town we had left -- there were no landscape markets to judge where we were in the meadow. Yet, I somehow instinctively knew that this was the place where we had been sat a few hours earlier. I was so convinced that I found myself looking around for the lawn chairs we had been sat on.\n\nNow that I understood how the cities worked, I sort of knew, roughly, where mine should be, but instead, we found ourselves staring out at the vacant meadow. \"Why can't we see it?\" I asked simply as my eyes gave up wandering the wilderness and instead looked down at Charlotte's fingers still curled around mine.\n\n\"Honestly, I have no idea.\" She said, a concerned look painted over her exquisite features. \"But I do have a theory.\"\n\n\"Care to share?\"\n\nThere was a long pause, her eyes, like mine, fixed on our entwined fingers. \"You're not a very trusting person, are you?\"\n\nI licked at my suddenly dry lips. The simple answer was no. My parents had taught me the folly of placing my trust in anyone. Only Jimmy had managed to fully ingratiate himself to me, and I still couldn't work out how he had managed to do that. I shook my head softly.\n\nCharlotte nodded, a gentle but reassuring smile pulling at her lips. \"You don't let people in,\" she said in a voice barely above a whisper. \"In this case, that is manifested literally. Whether it is conscious or not, you are hiding your mind from me, not letting me in.\"\n\n\"I'm... I'm not doing it intentionally,\" I said weakly, giving her hand a soft squeeze.\n\n\"Oh, I know.\" She said warmly. \"Our minds can come up with some pretty elaborate ways to protect us from harm, none of which we have any real control over.\" There was a pause as she turned to face me, I took a step to the side to meet her too. \"I want you to kiss me.\"\n\n\"Sorry?\"\n\n\"Just... Trust me.\"\n\nThe inches between us could have been miles for the intensity that suddenly filled each one. I could feel her heartbeat above the pounding of my own, my face struggling to suppress the shock as they gradually started to beat in sync, to beat as one. She leaned a little closer as I mirrored her movements, edging nearer to her as her eyes dropped closed, and her warm breath caressed the skin around my lips.\n\nThe first touch was soft, barely a touch at all, a brushing of her full lips against my dry ones. It was delicate, like the beat of a butterfly's wings, just long enough to inhale her breath and feel the warmth of her skin.\n\nThere was a pause. Then we melted into each other.\n\nThe second touch was not soft. It was passion, it was heat, her lips pressed into mine with the force of a long-lost lover, starved of intimacy since before she could remember. Her head tilted to one side as mine leaned to the other, pressing deeper into the kiss as our lips opened and our tongues met in that timeless dance.\n\nThis wasn't a simple kiss. I knew instinctively that this was not a kiss I would ever share with Becky. It was a melding of souls; I could feel her energy pouring into me, like an almost imperceptible tingle under the skin. I felt something open in me, and my energy flowed back into her. A soft, almost whimpered moan pushed past her tongue and out to my ears. My hand reached up to cup her cheek, my fingers teasing the skin on the hairline at the back of her neck, tangling in her hair as my thumb softly stroked the warm skin of her face. I poured myself into her, and she did the same to me. This was so much more than a kiss; it took the gateway of our touch from earlier to a whole new level. Her life, her character, her pride, her flaws, her insecurities, her very soul; I could see it all. At that moment, I loved her. I loved her more than I imagined it was possible for one person to love another. She knew everything there was to know about me and accepted me completely. I knew this without a word needing to be said. I knew just as much about her, and as our kiss pressed our bodies, minds, and souls together, she knew that she had all of me.",
        "A single tear slowly trickled down her cheek as, out of nowhere, my city slowly faded into existence behind us.\n\nShe broke away, her hand moving up to run her fingers through my hair, her eyes never leaving mine as my thumb brushed away the tear from her cheek before we both turned to look at my city.\n\n\"Well...\" she finally said as we stared up at the solid white Marble walls stretching hundreds of feet above our heads. \"... that explains a lot.\"\n\nSize is all about perception. Nothing is really big or small until it is compared to something else or looked at from a specific perspective. The Pyramids are pretty big compared to a pizza box, but they are infinitesimally small compared to, say, the sun. Her walls were high; mine was enormous, almost unendingly tall, it was like what I'd imagine a mouse would feel looking up at the Empire State Building. Her walls were strong; large stone blocks fitted together to give it an unarguable strength. Mine seemed to be made out of a single piece of solid pale white marble, not a crack or crevasse to be seen. The only word I could find to describe their apparent strength was... eternal. I couldn't imagine anything breaching those walls. Charlotte's awe-struck face was telling me that she was thinking the same. Even looking from side to side, the walls seemed to stretch out forever, dwarfing not only Charlottes walls, but her entire city.\n\nCharlotte's eyes flicked up, craning her neck and squinting her eyes against the sun as she looked up to the top of my walls, the summit scratching against the clouds. She looked to her right, along the curvature of the wall as it stretched off into the distance, then leaned forward, looking past me to follow the wall to the left. Her eyes finally met mine. Her expression was one of abject astonishment.\n\n\"Not what you were expecting?\" I asked in puzzlement.\n\n\"Err... no\", she said, as if the answer should be obvious. \"No, it is not.\"\n\nI nodded slowly, my eyes scanning the walls, it seemed that the question dawned on Charlotte at the same time as me. \"How do we get in?\" she asked carefully. \"I can't see a gate, and I'll be damned if I'm gonna try to walk around this thing looking for one.\"\n\nJeeves? Little help?\n\n\"Take her hand, sir.\" The disembodied voice sounded in my head.\n\nI re-took Charlotte's hand, unsure of when I had let it go. Her eyes flicked down from mine as she let our fingers curl together. \"Now, 'will' yourself to the top of the wall.\"\n\nWill myself? Jeeves, this isn't the 60s, the power of the mind is not... Woah! There was whooshing sensation of indescribable movement, accompanied by a surprised squeak from my companion and suddenly, we were on top of the wall.\n\n\"How did you do tha.... Oh my god!\" Charlotte's eyes had turned from mine and out over my city, her jaw hanging loose, and an expression of wonder painted across her dazzling face. As soon as my gaze followed hers, I understood why. \"It's... beautiful.\" She said, barely above a whisper.\n\nIf Charlotte's city was fashioned after medieval town, mine was like the city out of Tron. A Sprawling metropolis of towering skyscrapers and elaborate monoliths stretching as far as the eye could see, each building was bathed in beams of colored light. The scale and position of each building in Charlotte's city was dependant on their importance to the mind, mine seemed to be spread over the city, interspersed with monuments and residential structures- something that was distinctly lacking in my companion's city -- and each of them seemed to massive. My clinic was a hospital, my forge was a factory, my Market place was a sprawling transport hub, and my Palace was an immense monolith that dwarfed every other building in sight. There seemed to be no differentiation between them in terms of importance. If a building was present, it was massive.\n\nEven from our place on the lofty walls, I instinctively knew what each building and monument represented. Statues and parks memorialized moments and people from my life; there was a statue of Stacy Granger, another of her sister. My parents, I knew, had their own likenesses out there as well, as did the many well remembered and formative examples of their discipline. Jimmy held a place of importance, so did Becky and a few others, and somewhere out in the sprawling metropolis, I knew that a dedication to Charlotte was being constructed.\n\nEverything was bathed in an eerie blue-white glow, bolts of white light flashing up and down the sparsely populated streets, each one representing a thought, an idea, an emotion, or an impulse. My 'shadows' -- being a socially introverted and secluded man -- were few and far between, but they were there. They wandered around the maze of streets, gathering in parks and plazas as my mind wandered from thought to thought. Despite being sparse in numbers, they contributed to the whole, and that whole made the city buzz with life and energy.\n\nThe most startling difference between Charlotte's city and mine, however, was the well. Whereas hers was a small stone circle in the center of town, mine was a series of enormous powerplants dotted around the city, not only capable of producing vast and seemingly endless supplies of power but almost impossible to attack effectively. As I looked more carefully, the mental defenses I had developed from childhood to protect me from the abuse of my parents became clearer. Everything was compartmentalized. If someone managed to breach the colossal walls somehow, they were by no means guaranteed to get any further, smaller inner walls crisscrossed the city, each building was locked and secured, I was almost totally impenetrable to the outside.\n\nThe thought of that -- and what it meant -- made me sad.\n\nCharlotte, on the other hand, was still staring out at the city in wide-eyed wonder. Her eyes followed the bolts of light through the streets; they traced the outlines of soaring structures, squinted at the statues and plazas, and occasionally flicked back to me in abject awe. \"I have never seen anything like this,\" she said eventually. \"I have been inside my fair share of cities, but this...\" her words trailed off as her train of thought left the station without her. Asshole\n\n\"Why is it so different?\" I asked slowly after it became clear she was saying no more.\n\nHer mouth opened and closed a few times, her mind scrambling to think of an answer to the question she had been asking herself as well. \"I can't even begin to guess.\" She finally conceded. \"But what I can say is that we don't have anywhere near enough time to explore this properly.\" She finished with a nod toward the urban sprawl, \"We're about to start looking... odd. We've gotta go back.\"\n\n* * * * * * * * * * * * * * * * * * *\n\n\"... to meet you too, Pete. I have heard lots about you.\" Charlotte smiled demurely as her hand shook mine. I blinked a few times, once again finding myself on my back in my hospital room, Charlotte still dressed in her nurse scrubs and Philippa smirking from her place next to her.\n\n\"We will have to get back to your city another time.\" Her disembodied voice sounded in my mind, \"But I'm glad to finally be able to read you\"\n\n\"I'm looking forward to it.\" I thought back, suddenly realizing that the glowing knot of excitement and happiness in my senses was, in fact, coming from the beauty shaking my hand. The tingle of that kiss still teased my lips, and her mind giggled lyrically as I unconsciously ran my tongue over it. \"I still have questions about 'The Club'\"\n\n\"We will catch up soon, I promise.\" Charlotte's voice went on as her fingers let go of mine. \"And I will tell you everything. But do yourself a favor, be careful around Marco if you see him again before you see me. I don't trust him.\"\n\nShe turned her attention back to Philippa, \"You're right, he is a charmer.\" She said with a giggle, nodded to me with a smile, and then turned to help Doc Matthews with whatever it was that he was doing. There was a staggering amount of casual flirting being done by the nurses in this hospital, and the Doc seemed completely oblivious to all of it. I couldn't tell you why I thought that was so amusing.\n\nPhilippa's voice pulled me out of my thoughts. \"You'll be taken down to the physiotherapist after visiting hours,\" she said, her lips still curled up in an amused smirk as my eyes left Charlotte's impossibly attractive rear and flicked back to her. \"So, once Doctor Matthews has finished, I'm going to help you dress into something more appropriate, and, as soon as visiting hours are finished, an orderly will be up to take you to your appointment. Sound good?\"\n\n\"And I'm gonna get my eyes on that package\" Her mind finished for her.\n\n\"Sounds like a plan.\" I said with a growing smile, easily flirting back with...\n\nJimmy... dammit. Don't forget about Jimmy. You are NOT going to fuck a girl he likes\n\n\"I hate to bring this up, sir. But he has gone after girls you have liked in the past.\" Jeeves pitched in.\n\nShut up, Jeeves.\n\n\"Yes, Sir\"\n\nMy eyes flicked between my guests as the minutes ticked by. Charlotte, now readable, was struggling to concentrate on anything that Doc Matthews was saying. Her eyes kept flicking back to mine with a mixture of excitement, relief, and amazement. Despite my unassuming looks and vulnerable position, the discovery of my powers and the sight of my walls and the city beyond it consumed her thoughts. It wasn't sexual, but that kiss had unlocked something, there was a bond between us, a closeness, an intimacy even. It was as new to her as it was to me, and both of us seemed to be enjoying the glow of it. The fact that I was more powerful than she was able to properly comprehend, gave me an air of mystery and superiority that piqued her curiosity in just the right way. She was intrigued.\n\nPhilippa, on the other hand, was wet. She was veritably soaking; she could feel her wetness coating the insides of her thighs with every movement. It occurred to me that while Becky's concern over my wellbeing had limited the effects of my powers on her, and Charlotte was, as far as I could tell, pretty much immune to them. Philippa had no such luxuries and had been growing increasingly attracted to me as time went on. Living with and feeling the effects of her almost uncontrollable arousal every time she was near me. She was a seductress at the best of times, enjoying the build-up, the tease, and the anticipation that, for her, made the inevitable marathon sex session all the better. Her eyes were burning into me with a hunger that I could scarcely quantify.\n\nThe Doctor was also distracted. If he didn't find a suitable gift for his wife, he would end up on the couch again. He really hated that fucking couch.\n\nAfter another few minutes, Charlotte and the Doc seemed to have finished their tasks and said their goodbyes, Charlotte flicking her eyes to Philippa and back to me with a knowing grin before following Matthews out of the room.\n\nMy eyes followed them as they left before turning back towards Philippa. I watched as she locked the door behind them and walked back towards me. She was almost vibrating in arousal, stopping at the side of my bed with some folded clothes in her hand. It didn't even occur to me to wonder where they had come from, or if they would fit my new body, my attention was pulled elsewhere. Her eyes burned with hunger; her scrub top peaked on her chest over her diamond-hard nipples, and her legs ground together to scratch an itch that she knew wouldn't be scratched today, not by me anyway.\n\n\"Right,\" she said with a sly grin. \"Time to get you naked.\"\n\nI arched a playful eyebrow at her. It was hard not to let that kind of arousal rub off on me, and I could already feel my resolve concerning Jimmy faltering. What's more, I was starting to feel more confident; confidence around women was never something I had felt before, but knowing how she was feeling and her thoughts towards me was an edge that I didn't have in my old life.\n\n\"I am all yours.\" I smiled back.\n\nShe moved towards the bed, leaning over to release the side guards. As she drew the sheet back, her breath washed over my ear as her lips drew closer. \"I'll remember you said that\" she purred as she slowly revealed my body from beneath its coverings.\n\nContrary to what I thought she would be most interested in, her eyes immediately went to -- of all things -- my arms. She traced the contours of the new muscles that I had not yet seen, following the lines down to my strong hands, unconsciously licking her lips they traveled back up to where they disappeared under my robe. She was studying me, from head to foot, literally.\n\nOnly when a trickle of arousal teased her thigh, dribbling down her leg did her eyes move to my groin. The hardening bulge wasn't quite at full mast yet, but it was certainly visible under the loose garment. She couldn't seem to keep the moisture on her lips--it was needed elsewhere--and her tongue darted out once again to try to wet them. \"Now, until the Physiotherapist gives us the all-clear, we have to do this under the assumption that you still can't move safely,\" She said as calmly as she seemed to be able to, her eyes never moving from my manhood. \"Do you remember the routine from your bed bath with Becky?\" I nodded but said nothing. She smiled back, her eyes finally moving back to mine.\n\nWithout another word, she shifted her weight, placed her hands under my hips and shoulders, and lifted, rolling me onto my side as I reached out to grip the safety rail on the opposite side of the bed.\n\n\"Oh, now that is a nice ass.\" Her mind purred as her fingers untied the strings holding my gown closed. \"I wonder how it looks when it clenches, pounding into little Becky just as he unloads... fuck!\" Another grind of her thighs rubbed another trickle of arousal into her skin as my robe fell loose. She let me roll back, stood herself upright, and pulled the garment off my arms. \"Holy shit!\"\n\nWithout the aid of a mirror, I couldn't really see what she was looking at. But her eyes widened as they wandered lustfully over my torso, I could almost feel the tingle on my skin as her gaze drifted over my chest and up to my shoulders before traveling south. I flexed my hardness as soon as her eyes met it, and her breath hitched in her throat. \"Becky, how the fuck did you manage to squeeze all of that into your mouth, you lucky bitch? Gotta say though, it looks just the right size to fill up your pretty little pussy.\"\n\nImages started filling her mind, memories fondly revisited. It would seem that Philippa and Becky were much closer than I had thought. Philippa lounging in her recliner in her bedroom, her legs splayed over the arms, and Becky, her arms bound behind her, lapped hungrily at her wetness. Philippa had been the one to introduce her to her bisexuality but had been impressed at the speed and gusto with which Becky had taken to licking pussy. Philippa had been more than happy to tie the little submissive to her bed, spread eagle, and return the favor. She could almost feel Becky on her lips, the tangy taste, the heat, the throbs, and spasms on her tongue as her pet came on it. Looking down at my growing length, her mind blazed with images of tasting that tang off me after I had pounded her girl into madness. And watching my ass flex and tense as I emptied those heavy-looking balls into her sweet little sex.\n\nPhilippa swallowed hard, forcing her eyes back to me. She was pretty sure that climbing on and riding me to wild abandon would get her fired. She hadn't been as clever about it as Becky had, she hadn't booked the time. It would only be a few minutes until she was missed. Moreover, she had heard the strangled whimpers of Becky's orgasms with her own ears, Philippa knew that she was considerably louder and, when lost in the moment, didn't have the self-control to smother her screams. Having seen my cock and the body she would be looking down at, she knew there would definitely be screams, loud ones.\n\nShe could, however, make me want her.\n\n\"I'm going to try to sit you up a little to get this T-shirt on now.\" She said with a quivering breath and another hard swallow. She could feel the pulse throbbing in her throat, the sensation so strong, I could almost feel it as well. Leaning forward again, she hooked an arm underneath my neck and rested a hand on my shoulder blade, lifting me into a sitting position and conveniently placing her chest only inches from my face. I could smell the faint scent of her sweet perfume, which I couldn't help to inhale. She smirked to herself as she watched my eyes look down her intentionally loosened top, the edges of her white lace demi bra that peeked into view contrasted her olive skin perfectly. Her smirk faltered a little as I blew a warm breath from my nostrils, letting it follow my eyeline over her chest and watched the blossom of goosebumps radiate over her skin. Her fingers flexed on my back, those perfectly manicured nails digging softly into my skin as she tried to regain her composure. Her free hand slipped the shirt over my head, and I stretched my arms through the right holes before she pulled it down my back, her nails dragging over my skin as she did. The shirt was pulled straight, and I was laid back down, slowly, her breasts inches from my face.\n\nThis is the part she had been waiting for. She moved a little further down the bed, unfurling the folded grey sweatpants and white tight-form boxers and placing them next to my feet. Her hands moved onto my legs, casually drawing from just above my knee and squeezing as they traveled down. She was exploring me, tracing the outline of the muscles under my healed skin, caressing each fading scar, flexing her fingers into every sensitive nerve. She wanted to feel me, but more importantly, she wanted me to know she was feeling me. For such a simple act, it was indescribably erotic.\n\nShe finally reached my feet, dragging her nails over the arches before hooking the boxers over each of them, then sliding my feet into the legs of the pants, slowly drawing them both up. Her fingertips grazed over the tops of my legs for the entire journey until they reached my hips, her fingers only inches from my swollen balls and engorged manhood. She flicked her eyes up to mine, a glint of mischief flashing behind them before she looked back down to my groin. She straightened the bottom hem of the boxers, fingers tickling the sensitive skin of my inner thighs, each meticulous touch of her fingertips, sending a shockwave of desire coursing through me.\n\nShe lifted her hands, tugging the clothing towards her and lifting my hips, slowly sliding the boxers and sweatpants over my ass, putting pressure in all the right places, and reaching out a finger of each hand to stroke teasingly along the length of my shaft, her hot breath splashing across the sensitive skin. I couldn't help myself, a soft but low moan escaped my lips as she finally covered me up, her mind sang in triumph. She wanted me to want her, and she certainly succeeded in that regard. Letting me lay back down, she winked up at me, then, looking back down, patted my cock through my pants. \"Don't worry, bog boy,\" she smirked, \"We'll be seeing each other again, real soon.\" Her eyes flicked up to mine again. \"You too, Pete.\"\n\nShe stood herself up, blew me a kiss, and sashayed out of the room, leaving me breathing heavily and with an annoyingly hard erection tenting in my pants.\n\n* * * * * * * * * * * * * * * * * * * * * *\n\n\"Pete! You awesome specimen of humanity,\" Jimmy beamed as the door swung closed behind him about half an hour later. \"How the fuck are you doing?\"\n\n\"Jimmy! You mediocre example of sentience,\" I joked back, glad for being able to distract my arousal in time for his visit. \"I'm good, I'm even dressed.\" I finished with a smile.\n\n\"No more showing your ass off to the nurses, eh?\" he chuckled. \"So, what are the chances of there being no news today? I can't take any more surprises!\"",
        "\"Didn't you hear me? I'm dressed!\" I laughed. His arched eyebrow and his faltering mind told me that his banal and easy banter was hiding some extremely fragile nerves. \"Nothing to report,\" I smiled warmly. \"I'm still good.\"\n\n\"You seem to be in a better mood, too.\" He beamed, relief that the previous day's revelations were more than just a hopeful dream washing over him. \"So, this is a flying visit, I'm told you have places to be.\"\n\n\"Physiotherapy,\" I nodded. \"Hopefully they can give me the all-clear, and I can finally get out of here.\"\n\nHe arched an eyebrow at me. \"There are three stunningly good-looking nurses fawning over you and tending to your every need. You are the only heterosexual man I know who would think that is a bad thing.\"\n\n\"True,\" I said with a humorous shrug. \"But the view sucks.\" I nodded up to the ceiling.\n\n\"Ah.\" Jimmy nodded as he caught my meaning. \"Well, if you do manage to get out of here soon, you might be interested in my news.\"\n\n\"I'm all ears.\"\n\n\"Uncle Bob has given us the lofts.\" He said with a beaming smile.\n\nIt is worth, at this point, explaining something about Jimmy, something I had pieced together from half conversations and broken thoughts. Jimmy's parents had died when he was a child, but by all accounts, they were incredibly popular and well-liked people. Their friends, despite not being able to take Jimmy in, had always kept in touch, looking out for him and helping out where they could. Uncle Bob was one such person. He wasn't related to Jimmy in any way at all, in fact, Jimmy wasn't even sure how he had known his parents before their death, but he had taken Jimmy to football practice, let him practice driving in his car and hooked him up with decent accommodation when Bob learned that Jimmy would be attending this University. Bob was the definition of a good guy.\n\nJimmy had introduced us in the early days of our friendship after already regaling Bob with tales of how he would have failed his course if it wasn't for me. As far as Bob was concerned, that was good enough for him.\n\nMore relevant, however, was the fact that Bob owned and operated the Queen's Head. The Queen's was the local student bar; it was the closest one to campus and one of the few specifically designed to cater to the tastes of the local student population. It was only some archaic law that stopped Bob from being able to change the name. Jimmy had told me once that Bob had wanted to change the name to 'The Queen's Legs', just so he would be able to say that the Queen's legs are about to close. But that sounded more like a Jimmy joke rather than any real business idea; even I had to admit it would be pretty funny though and would make Bob and his bar a local legend.\n\nThe lofts were a failed experiment on Bob's part. Unlike most landlords, Bob didn't live in some apartment above the bar, so he had tried turning the vaulted and empty upstairs of the building into student accommodation. He had failed miserably, but he ended up with two enormous loft-like apartments that quickly became the envy and desire of every student who knew about them. Filled with top of the range appliances and amenities, the open plan apartments were stunning, but had, as far as I was aware, always been occupied. Bob has promised Jimmy that as soon as they became available, Jimmy would get the first offer. Apparently, that day had come.\n\n\"Its all settled,\" Jimmy went on. \"They are fully furnished, so you don't have to worry about packing or moving your shit, and the first few months rent has already been taken care of.\"\n\n\"Wait... what?\" I blinked a few times. \"Where did that money come from?\" The lofts weren't just known for their size and luxury, they had the price tag to match. \"And how are we supposed to afford all this?\"\n\n\"Don't worry about it,\" he replied with a smile. \"Family and friends discount on the rent, and he is letting us off the first few months on the condition that we help out around the bar every now and then, and you keep helping me to not fail.\" He finished with a chuckle.\n\nIt sounded like a hell of a deal.\n\nThe conversation about our new living arrangements went on for a while, as did the one about the starting of classes. By the end of the chat, everything from a study schedule to which house parties we would be attending had been hashed out.\n\n\"Anyway,\" Jimmy went on, \"I met up with some of the old crowd last night. They are all pleased to hear about your recovery, they're looking forward to the welcome home party.\" He smirked.\n\nI nodded, only half paying attention, the idea of living in the lofts was already pulling my lips into a smile, and with only a few weeks until classes started, it would be a great time to get in and settled.\n\n\"Just think of it,\" he went on. \"Partying in the bar, then instead of having to find a cab or walk home, we can just drag one of the girls upstairs to our very own apartments.\" I chuckled but could help but notice the absence of one particular name in that sentence.\"\n\n\"Girls?\" I arched an eyebrow, \"and what about your fantasy nurse?\"\n\n\"Philippa? Who did you think I was talking about?\" I held his eye for a few moments. \"okay, okay, so my track record doesn't lend itself to monogamy, but we've talked, and as soon as you are out of here, we are going on a date.\"\n\n\"Oh, really?\" I smiled, trying to hide my confusion at her earlier actions.\n\n\"Told you, I can be a one-woman man, not had any pussy since...\"\n\n\"Lil Miss Irony.\" I finished his sentence with a chuckle.\n\n\"Exactly. Oh, ye of little faith.\" He wagged his finger as he rose from his chair, the 30 minutes since his arrival having flown by. \"Err... one more thing before I head out.\" Jimmy said, swinging around with that shit-eating grin he always wore when he was about to say something to make me uncomfortable. \"Olivia asked about you.\"\n\nOlivia. Now there was a name that I hadn't thought of since I had woken up. With a smile and a nod, I watched Jimmy leave the room. I closed my eyes, retreated into my bunker, and pulled up the memory on the big screen, losing myself in it in moments.\n\nThe last time I had seen her was about a week before the accident.\n\n* * * * * * * * * * * * * * *\n\n\"Dude, I am telling you... she's interested!\" Jimmy repeated with an air of playful exasperation.\n\n\"How can you possibly know that?\" Jimmy was my best friend, the only person I could spend any large amount of time with before considering homicide, but my god! He could keep on! He'd make a statement like that without even the slightest amount of what I would call evidence, then refuse to even try to explain how he knew.\n\n\"Just trust me,\" he said with a roll of his eyes. \"To everyone else in the room, that shit is obvious.\"\n\nMy eyes flicked up from my place at our table to the brown-haired beauty, talking to her girlfriends at the bar. As often happened with Olivia, she seemed to know exactly when I was looking, and her eyes turned to meet mine. Even from across the room, there was no missing the teasing smile that pulled on the corner of her lips and the playful, almost seductive draw on her drinks straw before she went back to her conversation.\n\n\"What am I supposed to say to her?\" I asked with a sigh, taking another sip of the vodka and coke before leaning back into my chair.\n\n\"Just ask her to dance.\" Jimmy replied with a smile.\n\n\"I can't dance.\"\n\n\"So?\"\n\nI blinked at him a few times. \"What do you mean, so?\" I finally asked, deciding that blinking wasn't sufficiently demonstrating my level of confusion and settling instead for a frown. \"How can I ask her to dance if I don't know how to dance? That's like asking to take her for a drive without having a license... or a car.\"\n\nJimmy rolled his eyes again with another smile. \"I'll let you in on a little secret. No guy knows how to dance, and the ones that do took lessons... lessons taught by women. Just take her to the dance floor, let her move to the music,\" his voice had taken on a wistful, far away quality as he spoke. \"And you just let yourself move with her. There's nothing to it.\"\n\n\"I don't know.\" I said cautiously\n\n\"Alright, just go up and ask if she wants a drink.\"\n\n\"She already has a drink.\"\n\n\"Fuck me!\" Jimmy drawled, reaching up to massage the bridge of his nose. \"You're not making this easy.\"\n\n\"Tell you what.\" I said with something approaching confidence, \"If you can tell me exactly why you think she likes me, I will go up there and talk to her, right now.\"\n\n\"You really don't see it do you?\" He said, his hand dropping back to the table\n\n\"Apparently not.\"\n\n\"Fine. Look at her.\" My eyes one again moved towards the bar. Olivia was standing next to one of the barstools, her hips and body facing towards me, but her head turned to the side in happy conversation with her friends. \"Now, count how many seconds it takes for her to look at you.\"\n\n\"That's not fair, that girl seems to always know when I'm looking at her.\"\n\n\"No...\" Jimmy said, his face cracking into a smile, \"It's because she looks at you -- and only you -- at least as much as you look at her.\"\n\nRight on cue, Olivia's eyes flicked to meet mine. This time, however, instead of a cute little smile, she turned to face me. I could feel her attention on me. She tilted her head to one side with a playful grin, holding my gaze and returning my stare... Then winked.\n\nThe flush of red shot across my cheeks in seconds, and my gaze faltered. Olivia's little giggle, the last thing I saw before my eyes fell back to Jimmy. \"There.\" He said with a triumphant laugh, \"Now, down your drink, go to the bar for a new one, and while you're there, offer her one as well. Then, no matter what her answer is, talk to her!\"\n\n\"Err...\" I tried to swallow the lump in my throat as I reached for my half-empty glass, \"About what?\"\n\n\"Who gives a shit? Ask her how her course is going, or how she's been, tell her she looks nice... fuck, talk about the weather! Just -- say -- something!\n\nI lifted my glass to my lips, barely feeling the burn of the Jimmy-sized vodka portion in my drink. I let the charcoal liquid slide down my throat and, with a determined nod, stood and started walking towards the bar.\n\nOlivia was beautiful, the classic girl-next-door kind of look that made my knees go weak. Her light brown hair had just enough of a wave to it to no longer be called straight, and streaks of almost caramel color punctuated her locks. The light seemed to play in the color before bouncing out into the world, doing things that I would never be able to adequately explain.\n\nIf her hair was mesmerizing, her eyes were outright dangerous. I'd spoken to Olivia quite a few times before, the first of which being at Jimmy's now infamous 'best buds' party after the first year's exams. But every time I looked at her, I seemed to get lost in those brilliant pools of hazel. Olivia -- at least in my mind -- never looked at me, she looked inside me. As if those eyes could peel back all the layers of defenses that I had built since childhood to reveal each and every one of my secrets. It was like I was being studied, and yet, there was no place I would rather be.\n\nI was almost halfway across the room when she saw me coming. Her pink stained lips were curling into another smile, her form-fitting jeans and low-cut V-neck top clinging to her body as she took a single step away from her friends -- almost as if she was making room for me at the bar. Twenty feet to go. My eyes met hers, and I felt the first twitch of a smile spread onto my face. I could be funny when I wanted to, right? I mean, girls like a sense of humor, or so I had been told. Maybe the weather line wasn't such a bad idea, make a joke out of it, break the ice. Just take a deep breath and...\n\nA hulking mass of jock blocked my view of Olivia before I lost my focus, a small crowd of guys surrounding the girls. By the time my eyes found her again, her attention was on the new arrivals, a friendly smile on her lips as she and her friends started to laugh and joke with their new admirers. I wheeled left and headed to the bathroom. Not quite missing the disappointed look that she shot my way as I abandoned my plan, a look I wouldn't recognize as disappointment until months later as I re-watched this memory from the bunker.\n\nLooking around my bunker as the memory faded from the screen, I noticed a door that hadn't been there before. I stepped through it, instinctively knowing where it led and spent the next few hours on a balcony overlooking the magnificence of my city. Thinking about my life, how it hand changed, the opportunities I had missed out on... everything. Watching the bolts of light rocket between the towering buildings of my metropolis, I couldn't help but feel that the old Pete had been killed in that crash.\n\nJust like Moe had.\n\nAnd a new Pete, with new abilities and a new personality, was about to step out into the world. But first, the physio...\n\n* * * * * * * * * * * * * * * * *\n\nA few hours later, I was wheeled into the clinic room wearing a face that screamed impatience. Between the revelations with Charlotte, thinking about Olivia, still being frustratedly aroused from my time with Philippa, the hours I had spent waiting between Jimmy's departure and the orderly actually turning up and, most importantly, being absolutely fucking certain that I was physically well enough to be discharged, this whole exercise was becoming more and more infuriating the longer it went on.\n\nHaving been left in a wheelchair just inside the clinic, I looked around with half-hearted interest at the machines and apparatus that I would probably never need. There was only one other person in the room, I eyeballed her coldly.\n\nAlight sweetheart. You are the only thing standing between me and freedom, let's get this over with!\n\nThe physiotherapist was nose deep in my files, apparently preferring the tactility of actual paperwork rather than looking at a screen, she had barely registered my presence as I looked at her. More than a decade of plying her trade had rendered her immune to every type of hostile stare that could be imagined, and she was under no illusions that my look would be a friendly one.\n\nThe more I looked at her, however, the more I noticed her. I had never really been one to admire the more mature lady, although being in her mid 30s hardly qualified her for that moniker. She was startlingly attractive. Her caramel hair flowed in loose waves onto her shoulders, dark rimmed glasses framed a pair of keen brown eyes and her lightly glossed, full, pink lips were pursed in concentration.\n\nAside from Jimmy and my parents, the woman sat behind a small beech colored desk was the first person I had seen since waking up that wasn't dressed in either nursing scrubs or a doctor's coat. A fitted white blouse and beige suit pants perfectly wrapped a toned body used to hard physical work. A few years younger and she would have been just my type.\n\nJesus... did I just say that?! I'm spending far too much time with Jimmy.\n\n \n\nI blinked a few times and let my look soften as my mind reached out to hers. She was intrigued. She couldn't even speculate how many people she had guided through their rehabilitation; everything from children dealing with birth defects, to wounded combat veterans and almost every imaginable integer between. But my case was as novel to her as it was to everyone else. Just like them, she had assumed that there would be almost nothing left of my leg muscles, let alone my ability to walk, but the recent tests had shown almost the opposite. Physically speaking, I should be fine. But the amount of time that had passed since I was last upright would -- as far as her professional opinion was concerned -- still cause problems. Cases like that were the hardest to crack, she would be fighting an uphill battle with me and she knew it.\n\nFortunately, she liked a challenge.\n\nShe finally turned to look at me, her eyes flicking over my seated body for the briefest of seconds before settling on my eyes. \"Good Afternoon, Mister Roberts,\" she said with a friendly and professional smile. \"My name is Samantha. May I call you Pete?\"\n\n\"Sure.\"\n\n\"Ok, Pete,\" She said with another wide and attractive smile. \"Do you know why you are here?\"\n\nI sighed heavily and leaned back into the wheelchair. \"I am here to jump through whatever hoops I need to, to get discharged.\" I said with a huff.\n\nSamantha ignored my impatience with another warm smile. \"I understand that this is frustrating, but I have you booked in for six weekly sessions, that should...\"\n\n\"Six weeks?\" I repeated, cutting off her sentence as I dropped my head to my hand and massaged the bridge of my nose.\n\nSamantha, to her credit, didn't let her smile slip for an instant. In fact, her mind grinned at the challenge she had hoped I would provide. There had been hundreds of 'me' over the years, each of us utterly convinced of our own capabilities before being shown the error of our hubris. \"There is another option,\" she said after a short pause. \"We could administer the final test now. If you pass, I can sign you off today. If you don't, you agree to come back here every week until you do.\"\n\nI pretended to perk up, I had been following her thoughts the entire time and was hoping that this was the route she went with. \"Really?\"\n\n\"There are conditions, though\" she clarified with a nod. \"The most important of which being complete honestly. Let's say I ask you to touch your toes, you may be able to do it, but if it is excessively painful then it will need work. If you push yourself, it can do more damage and you'll be back to square one. So, I will administer the test on that one condition. If there is a lot of pain, you will tell me. If I think you are hiding it, I will fail you on the spot. Agreed?\"\n\n\"That sounds fair to me, Doc\" I said with a nod of my own.\n\n\"Second condition,\" she said with another smile. \"My name is Samantha, calling me 'Doc' will also get you failed.\" She finished with a playful wink.\n\nI laughed and held up my hands in mock surrender. \"Samantha,\" I corrected myself with a chuckle.\n\n\"Alright. Let's start with the basics. Can you stand for me?\"\n\n\"Jeeves, You sure about this?\"\n\n \n\n\"Very, sir.\"\n\n \n\nI flashed my eyebrows, placed my hands on the armrests of the chair and hoisted myself to my feet. It took a moment for me to find my balance, not so much shaky or unstable, but more of a head rush at the first time being upright since climbing into Moe's cab all those weeks ago. A full-length mirror on the wall behind Samantha gave me my fist look at my new physique.\n\nI looked good!\n\nThere had been some hints at the physical changes I had made to myself, but from a seated or lying position I usually found myself in, it had always been hard to judge. The sweatpants and white tee that Becky and Philippa had so tenderly helped me into were bulging with a new muscular body, the type which would normally be paid for in hundreds of hours at the gym.\n\nHappy with my footing, and trusting my new legs to hold my weight, I looked back at Samantha with a triumphant smile.\n\n\"Very good.\" She said with an impressed nod. \"Any pain?\"\n\n\"Not really.\" I answered, surprising myself with my honestly. \"A little stiff, but nothing I would call painful.\"\n\n\"Alright, excellent.\" She said with a smile, standing from her own place at her desk and crossing the room towards me. It was the first time I'd had a chance to look at her properly. She was about the same height as me, maybe an inch shorter, but her posture was perfect. Her straight back thrust her chest our invitingly and her legs crossed as she traversed the space between us, her hips swaying suggestively as she walked. I couldn't tell at this point if it was a conscious motion or just her natural gait, but it was certainly having an effect, dragging my eyes to her waist and holding them there as she approached.",
        "\"Ok, so the test comes in three parts, each one testing one of the main criteria for passing: Strength, mobility and endurance.\" She kicked the breaks off the wheelchair and nudged it out of the way as she started circling around me, appraising me. What started out as an inspection of my posture and muscles quickly descended into an outright admiration. She caught herself before those thoughts got the better of her. \"We'll perform the tests in that order.\"\n\n\"Sounds like a plan.\" I smirked, unabashedly enjoying her attention.\n\nSamantha placed a hand between my shoulder blades. \"I'm going to try to push you over, you are going to try to stay upright.\" She said simply, her fingers concentrating on the contours of my skin through my tee. After a second's pause, she started to apply pressure, pushing harder and harder on my back, trying to get me to fall forward. Simply flexing my stomach muscles and leaning back slightly was more than enough to keep me in place.\n\n\"Very good.\" She said, removing her hand from my back and circling around to the front of me. Once again, her eyes flicked up and down my body before she put a hand on each of my new pecks. \"Same thing again.\" She said quickly before leaning her weight forward.\n\nThe feel of her hands on me was almost enough to throw me off. She pressed her weight against me hard, angling herself to press harder and harder onto my chest, using her whole bodyweight to push me off balance but a simple flex of my legs and leaning forwards was still enough for me to stay upright. With a playful flash in her eyes, she suddenly pulled back.\n\nThe loss of her pressure very nearly toppled me forward, my equilibrium thrown into disarray at the sudden loss of resistance to my weight, but a quick step forward was enough to arrest my fall. She giggled mischievously as I righted myself, coming up painfully close to her, the peaks of her chest only millimeters from mine and her sparkling eyes looking up at me. \"Almost had you there.\" She smiled with another lick of her lips.\n\n\"Was a nice try.\" I nodded with a smile of my own.\n\n\"Any pain?\"\n\n\"None.\"\n\n\"Excellent, lets see how you do with something more challenging.\" She said with another smile. Over the course of the next hour, she administered every test she could think of. From picking up and throwing a meter-wide medicine ball, to holing weights in my hand and striding across the room in a series of deep lunges. Each test being successively more strenuous than the last and each one ticking off another item on her mental checklist. By the time I had finished a series of coordination tests, she had been sufficiently convinced of my physical capabilities to think of signing me off.\n\nAnd then it happened.\n\nApparently, the 'within reason' clause of my powers had been satisfied as soon as her test had been completed. Although her tests and her touches had become increasingly lingering and suggestive over the course of my appointment, her arousal suddenly exploded.\n\n\"You've done very well, Pete.\" She said with a smile, tying her hair up into a ponytail and popping open the top button of her blouse. \"But I'm not convinced about your endurance.\"\n\n\"No?\" I asked, trying to surpress a grin, I could tell immediately where this was going.\n\n\"But I'm out of ways to test you,\" She said with a shake of her head. \"Can you think of any activity that would require endurance? Stamina?\" She paused for a second, eyes sparkling mischievously. \"Staying power?\"\n\n\"Hmm...\" I said, pretending to think about the question, \"I can think of a few. Maybe a long run?\"\n\n\"No,\" she drawled out the syllable with a seductive bite of her lip. \"That would take too long.\"\n\n\"What about a treadmill?\" I asked with a smile, stepping towards her.\n\n\"I'm afraid it's broken.\" She said with another shake of her head and another lick of her lips.\n\n\"This is a hard one.\" I said as I took another stalking step towards her.\n\n\"Oh, I certainly hope so.\" Backing away, drawing me closer, a glance down to my growing arousal and a wink.\n\n\"Then what would you suggest. I'm willing to do anything to get you to sign me off.\" I said with a predatory grin and a chuckle.\n\n\"Well, rumors on the grapevine tell me that you have a certain young nurse upstairs who has taken a liking to you.\" She said as she took another teasing step away. \"I couldn't possibly sign you off, knowing that you are going to have some fun with her, without making absolutely sure that you are capable of, err... performing.\"\n\nI took yet another step towards her. \"And how would you suggest I convince you?\"\n\nShe nibbled her bottom lip before looking me in the eye, a spark of mischief and hunger flashing behind them. \"If you think you are up to the task... why don't you prove it?!\"\n\nI could almost feel the hunger flash in my eyes as I took another step towards her and reached for the hem of my tee shirt.\n\nAlthough the earlier glance in the mirror had given me little more than a brief look at my new physique, I could tell I was different, I could feel it; broader shoulders and a chest filled with defined muscles pulled at the tight white tee before I lifted it over my head and tossed it the floor. I felt... more.\n\n \n\nThe thick, coarse coat of hair that had once covered me had now disappeared except for a line leading south from my navel, the dark wisps defining the contrast with my skin. I took a step towards her, her eyes flicking across my torso as mine burned into hers, the playful and teasing grin that had tugged at her lips was rapidly being replaced by a seductive curl of desire. Her tongue darted hungrily out to wet her lips. She stepped backwards and away from me, still working under the illusion that she was directing the show, that was until her back bumped into the wall behind her. I stalked after her like a hunter closing in on his prey, my eyes fixed on hers, watching as they betrayed the realization of the game. The teasing had stopped, at least on her part. She had thrown down the gauntlet and, much to her surprise, I hadn't hesitated to pick it up; the mere notion of that flooded her with arousal.\n\nHer hands reached out as she licked her lips again, trailing fingers across my chest with a purr before my own captured them, stepping in closer again and lifting her hands above her head, holding them against the wall.\n\nMy arms were definitely bigger, so were my hands. They were easily large enough to hold both of her wrists in a single grip ... they just exuded power. Her head was tilted back, watching the arrest of her limbs against the wall above her, exposing her neck to me. I took my last step forward and pressed my lips against the throbbing pulse on her throat, kissing deeply.\n\nA deep and provocative moan vibrated beneath my lips as it travelled up her throat and escaped her lips; she surrendered to me almost immediately. Although she could never have been said to be resisting the pinning of her hands, she noticeably relaxed as the echo of her moan died out. Dropping her weight slightly, she parted her legs and rolled her hips to press her molten core against my thigh. I was more than happy to shift my own weight to add to the pressure.\n\nBeyond heat of her sex and the growing arousal of her heavy breaths, I could feel her mind. What I was doing to her was the absolute epitome of her deepest fantasies. She had always been a sexual and sexually confident woman, never afraid to make the first move. She had always known exactly what she wanted from a man and expected it to be given. In return, she would blow his mind. There were only a few warmly cherished and often revisited memories of men who had lived up to her expectations and properly satisfied her, even fewer who had done so without an excessive amount of prompting. Her fantasies didn't revolve around a specific scenario or some explicit tryst; they were all about the act itself.\n\nUnlike Becky, Samantha was neither submissive, nor was she dominant, but at the same time she could be said to be both. She liked to tease and to be teased. She was as happy with soft, luxurious and languorous love making as she was with wild, rough, and almost animalistic rutting. She liked it hard, but not painful; dirty, but always expected respect, affectionate, but non-committal. She liked what she liked, and right now, her mind was singing.\n\nIt sang more as my lips started moving. Each kiss different from the one before; the hard and deep kiss with the rough stubble of my cheeks scratching against her skin, the delicate peck, the teasing flick of the tongue, the almost vampiric nibble. I moved from the side of her neck to the base of her throat, kissing a trail to the underside of her chin and moving around to the soft curve of her jawline. Her eyes had fallen shut, her whole being focused on the meeting of my lips on her skin. Deep moans and fragile whimpers escaping her mouth every time she remembered to breathe. Her body was trembling -- vibrating -- with pleasure. I smiled into the next kiss.\n\nYou haven't seen anything yet!\n\nA week of being bed bound had followed months of unconsciousness, which in turn had followed a lifetime of sexual emptiness. My powers had changed all that; I surged with confidence, and for the first time in my life, I was going to be more than a willing passenger on the ride of sexual desire ... I was going to lead. Sucking her earlobe between my lips, I felt her slight gasp against the skin of my bare shoulder. I teased her for a few moments before releasing my prize and stalking my lips back down her jawline, pulling away just before I arrived at her lips. I held my grin an inch out of her reach, her neck craning against the tension of her extended arms as she fought to press her mouth to mine. A whimpered and almost begging \"please,\" escaped her lips before I sealed them closed.\n\nHer small squeak of surprise melted into a low and guttural moan as her lips opened to accept my invading tongue. I relished the feel of her exploring my mouth as I plundered hers, tasting each other, my slow and controlled breaths contrasting her ragged and shallow pants while I eased the stretch of her neck and pressed into her with another small step forward. I pressed all of myself into her. My whole-body molding to hers as she hooked one of her legs around my hip to pull me closer, her sex grinding frantically against my leg. I kissed her with a passion and a heat that I could barely fathom; for a few carnal moments, we were one.\n\nTo her, the feelings were almost overwhelming. She had flirted with patients before, both male and female; it often gave them an added impetus to press on with what could be difficult and often painful therapies. She had even entertained the idea of acting on some of those attractions while in the clinic, but the speed and intensity of our entwining had taken her breath away. Between the illicitness of our act, the intensity of our coupling, and the grinding pressure of her sex, her wave had already started to rise. My kiss burned into her as we both tracked the build of her climax, albeit for entirely different reasons.\n\nOh shit! I'm gonna cum! Her mind was screaming! Her crest was climbing quickly; I could feel the wetness and heat of her molten core through my pants, the frantic movements of her hands beneath mine as they desperately searched for something to grasp onto. The hitch in her labored breaths teased my ears. He hasn't even touched me yet and I'm almost there! How the hell is he ... Oh shit! Oh SHIT! Fuckfuckfuckfuck. I'm gonna--\n\nI stepped away, breaking off the kiss and starving her cresting body of stimulus, my teasing and mischievous eyes meeting her look of desperate loss and tormented lust. Her mind screamed out at the lack of me.\n\nHer hands slowly lowered from above her head, clinging onto the flat surface of the wall, almost to steady herself as we stared at one another, he frenzied eyes coupled with her ragged breaths to give a look of pure need. I dropped my gaze slowly and intentionally to her heaving white blouse and then back up to her eyes. She understood my meaning immediately. With a wetting of her lips, a flash in her eye, and a misguided belief that she could somehow regain the upper hand, her fingers started to creep seductively towards the buttons of her blouse.\n\nMy eyes watched as the first two buttons were released, the magnificent swell of her generous cleavage being revealed by the slow and methodical loosening of the fabric, but her resolve faltered as my eyes rose back up to stare into hers. She had stripped for men before, teased them with the deliberate and disciplined unwrapping of her body, presenting herself to them in a manner and at a pace of her choosing, and each of them had been captivated, unable to draw their gaze away as inch after enthralling inch of sensual flesh was revealed to them. She had expected my eyes to hungrily await the presentation of her lacey black bra as her fingers worked the button above it, instead I looked into her eyes. She had expected the deep inhale as the last button popped open and she shrugged the blouse off her shoulders, instead I looked into her eyes. She had expected me to step forward again, to reach out to touch her incredible body, to delight in the feel of her soft breasts, to rush her to display more of herself to me, to prove myself worthy of her attentions, instead I looked into her eyes.\n\nDespite herself, she was starting to feel and unexpected and alien thought creep through her mind; she wanted to impress me.\n\nHer fingers started to move again, placing a nailed digit at cleft of her bra and dragging it slowly down her body, her eyes meeting mine in challenge. Further south they ventured, finally reaching the clasp of her suit pants and flicking it open with a single deft move. She smiled inside, a small victory as I allowed my eyes to flick downwards to watch her hand slip into her waistband, underneath her stifling panties and onto her wet lips. I could feel the jolt of electrical pleasure shoot up her spine as one of her fingers found her clit, pressing her palm out suggestively as she stroked her button, making sure that I could see the movement through the material.\n\nDespite my cool and confident -- almost defiant -- composure, my own mind was blazing. The simple act of not moving was one of the hardest things I had ever forced myself to endure. My heart was beating so quickly and so loudly that I could almost see it in my peripherals, the damp sweat of my back trickling down my spine and the tight confines of my tented boxers had become almost unbearable. I was more aroused than I could ever remember being. Samantha scored herself another small victory as my tongue darted out to wet my drying lips. Her mind was humming with arousal, no man had ever made her want him the way that she wanted me now. She clenched her jaw, gritting her teeth together in frustrated admiration as my eyes once again moved away from their carnal desires and back up to look into hers. We were playing a game, we both knew it by this point, I had won the first round and now she was intent on winning the second. She withdrew her hand, dragged down her zipper and let gravity pool her pants around her ankles.\n\nI allowed myself to take in her body, the soft curve of her neck melding into her shoulders, the rolling hills of her chest, the delicate hourglass of her body spreading into generous and shapely hips before separating at the vee of her womanhood to her statuesque legs. She was, in a word, stunning. My eyes moved again, gesturing to the sparsely covered beech desk in the corner. She turned her head, her mind once again singing to herself as she understood my meaning, a provocative smile curling her lips as she sashayed -- one foot in front of the other -- towards the desk. Perching on the very edge of it before looking back at me with a cocked eyebrow, two words bouncing around her mind.\n\nYour move.\n\n \n\nWith a bite of my lower lip, I answered her unspoken challenge. With long and purposeful strides, I crossed the room in only a few steps. The speed and intensity of my approach caused her to lean back a few inches, her eyes opening wildly as I hooked a hand around her back of her head and mashed my lips to hers. My tongue started working immediately, forcing my way between her lips to duel with her own, once again tasting the heat of our exchange on it. My free hand snaked around the arch of her back, my fingers oscillating between soft caresses and sharp drags of my nails as they stalked up her spine.\n\nSamantha quickly composed herself, her hands moving from their place on the edge of the desk and onto my chest, her fingers echoing the movements of my hand with soft, yet heated caresses and almost desperate scratches of her nails as they explored my new muscles. Her fingers froze as I reached her bra strap. Her lips curling into an impressed grin as my one hand easily flicked the clasp open, she let the bra fall loosely between us.\n\nAfter what seemed an eternity, my lips left hers and moved onto her jaw, following its line to just below her ear, licking and teasing the sensitive spot with every trick I could imagine, the same tricks I had used on her neck a few tortuously long minutes earlier. The purr from her lips confirmed what her mind had already told me; that I had found a place on her body that few men had ever thought to try; one of the most erogenous that she knew of, her thighs instantly felt the increase of wetness. Her hands began moving in short, distracted starts, each movement dragging them an inch lower as my lips traveled in the same direction.\n\nBy the time my lips were crossing the boundary between the nape of her neck and her collar bone, her hands were exploring my toned abdomen, I could feel her tracing the outline of each muscle. The moans and whimpers punctuated her words of encouragement as I ignited every nerve ending that I could find, and her fingers brushed against the waistband of my sweatpants. \"Jesus, don't stop.\" She whispered above me. \"Please, just... oh shit!\"\n\nI watched with a smile as her chest flushed a rose and crimson hue, her incoherent moans above me announcing the small climax that rippled up her body.\n\nHe hasn't even touched me! How the hell is he doing this?! I need him, I NEED to feel him!\n\nHer fingers snaked past my waistband, rubbing my bulging boxers for a few moments, tracing the outline of my manhood with her fingers as my lips reached the tops of her breasts. She started slowly working her hand up and down my length, trying to measure its size and her mind trying to picture the moment when her lips -- both sets -- were wrapped around it, she ground her legs together in eagerness. Her breath caught in her throat and another rasping groan echoed around the room as I pressed the flat of my tongue against the top of her swell and started slowly -- agonizingly slowly -- spiraling it around her mound, edging ever closer to her diamond hard nipple.\n\nHer eyes -- when they weren't pressed closed - were locked downwards watching me inch closer to her sensitive nub with awed concentration, goosebumps radiated across her skin and her breath hitched as the tip of my tongue swept over the ridges of her areola. Somehow composing herself, she pulled her hand upward a little and pressed them into my boxers, her fingers circling my granite like cock just as my tongue flicked across her nipple. The sounds of our combined groans reverberated around the room as her head lolled back and my cock twitched and flexed in her hand.\n\nI lavished attention on her. Circling around her nipple, dragging the flat of my tongue over it, sucking it between my lips, bathing it and lashing it with my tongue, gently grazing the sensitive skin with my teeth, delighting in the almost imperceptible jerks and twitches of her body. I couldn't help but smile every time her ministrations in my pants were interrupted by a sudden jolt of pleasure, her mind sacrificing its concentration to relish in the abject euphoria I was subjecting her to. Every time her hand became too bold, her motions too coordinated, or her actions threatened to edge my own climax closer, I changed what I was doing to her. A whimper or a moan, a squeak or a curse enunciating the loss of her momentum on my manhood. I switched to the other breast, trailing kisses down into the valley of her cleavage and back up the other side before starting again. Somewhere inside her mind, she was already preparing herself to lose this round of the game as well.",
        "And not a single part of her cared.\n\nAs soon as she had made her desires clear, she had lost. There was no way she could have known who she was dealing with, no way she could have known that I would have access to her every desire as intimately as she did, no way of knowing that this was a game she was always going to lose. This was how you played Tennis without the net.\n\nThe moans and whimpers continued. \"Jesus...\" she panted as her neglected second nipple was pulled between my lips, followed by a growled \"Oh God!\" as my teeth raked across it a few moments later. But there was something indescribably satisfying about the low, almost desperately pleading moan and the lustfully burning eyes as I finally drew back from her, leaving her panting body still perched on the edge of the desk, anguishing in the loss of my touch.\n\nHer hand withdrew from my pants in a determined flash, joining her other one on my waistband and attempting to yank my pants to my knees. With a slow and determined grip, I once again captured her wrist, pulling them away from my pants and placing them either side of her on the desk. The look of anguished and frustrated desire in her eyes curling my lips into a teasing smirk. With a calm, collected movement that I could hardly believe I was capable of, I lifted my hand from her wrist and placed it on the top of her chest, just above her breasts. \"Not yet.\" I said, the first words I had uttered since our tryst began, then slowly pressed her backwards laying her flat on the desk.\n\nWith her pleading eyes burning into mine, I hooked my fingers into the waistband of her panties and drew them excruciatingly slowly down her legs.\n\nAfter what seemed like a lifetime to both of us, the sopping black lace of her thong slipped off her feet, her splayed legs open to my gaze as I looked up her body, drinking in the sight of her. My eyes dragged along her the toned skin of her milky thighs, over the glistening arousal of her sex, over her smooth abdomen and between the mounds of her chest - raising and falling with each anticipating breath - and into her eyes. They were burning with unbridled, anticipatory lust and no small amount of surprise. She had come to this appointment under the impression that she was going to re-teach me how to walk, instead I was re-teaching her what it was to be a desired woman. Her mind had given up this round of the game as lost with little more than a whimper.\n\nI leaned forward, one hand on each of her ankles, squeezing gently as I allowed them to slide towards her knees, my face only a few inches behind them. Her arousal was filling my senses, the hint of flush on her chest and cheeks, the quickening in the rise and fall of her breasts, the slight bite of her bottom lip, the heat of her femininity less than a foot from my salivating mouth, and those eyes, boring into mine, almost pleading for release.\n\nBut they would have to wait. She wanted to be shown what I could do, she wanted to be impressed and I intended to oblige.\n\nI bent down, dragging my stubbled skin along the sensitive skin on the side of her knee, a sharp hiss of breath sounding above me before I turned my head, licking my lips and pressing a soft kiss onto her warm flesh. I pulled back a fraction of an inch, waited a second and blew onto the wet kiss. Another small whimper filled my ears as I turned my attention to the other knee.\n\nAnother lick of the lips, a deeper kiss this time, pull back, wait for the air to cool my saliva on her skin... then blow. My hands moved to her hips to hold her still as she squirmed her hips in uncontrollable yearning.\n\nMy eyes rose up to meet hers as I shifted my weight forward, my hands moving off her hips and onto the table either side of them. Wetting my lips again, pressing them into the inside of her right thigh, letting my tongue flick out to tease the skin before pulling back, waiting a second and blowing softly.\n\nI turned my head, same routine on her left thigh but this time sucking slightly as my lips formed the seal, before pulling back and giving the cooling kiss a soft blow of warm air.\n\n\"Holy shit. You are a Sadist!\" She announced with a chuckle, one that descended into another deep moan as my lips made contact again\n\nMove up another inch, the meeting of our eyes, the lick my lips, the press of the kiss, the flick of the tongue, the suck, the rake of the teeth.\n\n \n\nPull back\n\nPause\n\nAnd blow\n\nInch after torturous inch, I moved up the inside of her legs, closer and closer to my prize, the wetness had grown beyond anything she had previously experienced, her folds glistened with her arousal, soft and swollen, a honey pot waiting to be feasted on and my appetite was growing. I inhaled her scent, barely able to hold my resolve despite the swimming of my mind. The last kiss, my cheeks agonizingly close to where we both wanted the next touch to be, another lick of the lips, another wet kiss, another soft blow.\n\nI turned my head, looking up her body to her eyes, the mischief in mine impossible to conceal, I leaned forward towards her folds... and blew.\n\nThe contact, even if it was only my warm breath, sent another shiver up her spine, one that was chased closely by the ripples of another small orgasm. But the loudest moan came as my tongue pressed between her lips, finally brushing against her engorged and throbbing clit and sending a new tremble of orgasmic delight up her body after the last.\n\n\"Yesss.\" She hissed. Her back arching as my tongue probed deeper, her hands moving from their place on the desk and tangling themselves in my hair, each act desperately trying to increase the pace and the pressure of my ministrations. I treated her clit to the same lavish attentions as I had given to her nipples, starting slow and soft, circling it and teasing. Building her desire to yet unknown heights of anticipation before giving it just enough direct stimulation to keep her sanity in check. A soft flick, a hard press and drag of the tongue, a gentle breath, a dip into her honey pot, drawing her nectar up and massaging it into her little nub, tasting her before starting the process all over again.\n\nBy the time I decided to add some fingers into the equation, she was humming with almost continuous waves of minor climaxes, each one adding to the pleasure that inexorably built to her first major orgasm. Samantha was one of those lucky women who orgasmed reasonable easily, but even she had never experienced such expert manipulation of her body.\n\nIt felt cocky, arrogant even, to grin into her weeping sex as I toyed with her. However, the expertise I was displaying were in no way my own, listening to her internal monologue was giving me the ultimate road map to her pleasure centers. But then maybe a little arrogant cockiness was exactly what I had been missing in my previous existence.\n\nDown a bit... A little harder... More! Please God more! Don't stop, don't stop, DON'T STOP... MOTHER F.... STOP TEASING ME YOU SON OF A ... I'M SO GOD DAMMED CLOSE!!!\n\n \n\nBy the time my fingers made their presence known, gently probing at her entrance, she was almost sobbing in frustrated arousal. We both knew that a little more attention would set her off like a firecracker so the deep and guttural groan that rolled out of her throat as two fingers slowly pressed inside her surprised neither of us.\n\nSlipping past the first knuckle, I lathered her clit in firm but protracted licks. Pressing the flat of my tongue against her and pressing down, dragging from one compass point to the next and my stubble scratching against her lips as my fingers passed the second knuckle. Finally pushing all the way in, wriggling them a little as I sucked her clit between my lips, lashing and bathing it with my tongue, curling my fingers to rub against the sensitive ridges of her G spot as I gradually withdrew.\n\nHer high was building faster now, that last few sparks of pleasure that would ignite the inferno I had been constructing since we began. The quickening and strengthening strokes of my fingers -- pushing in to the extent of their reach and pressing into her most sensitive of spot as they withdrew were stoking her past the point of no return. Her arching back, her labored breaths, the loud groans of pleasure, the incoherent mumbling of encouragement, the frantic pulling and tugging at my hair, the leg hooking itself over my shoulder and around the back of my neck, all of them were signaling that the inevitable moment had just about arrived.\n\nMy teeth grazed against her clit.\n\nShe exploded.\n\nThe first twitches of her internal walls announced the arrival of her climax long before she could catch the breath needed to scream. Her eyes flew open and her jaw gaped in abject euphoria as the twitches turned into spasming contractions, pulsing up and down her silky tunnel and clamping onto my fingers, milking the fictional cock with every ounce of strength they could muster. Samantha finally found her voice.\n\n\"Oh fuck, I'm cumming!\" her hoarse voice screamed, \"Oh my God, Im cumming! ImcummingImcummingImcummy Im fucking cuuummmmiinnnng!\"\n\nThe rhythmic pulses of her muscles increased dramatically, combining into a single powerful squeeze on my digits, a warm flow of liquid pushing past my fingers and splashing onto my palm. I dropped my head immediately, collecting as much of her juices on my tongue as I could as It pushed past my fingers and coated the rest of my hand. Her arched and trembling body pressing my face as far into her sex as it was possible to get. I feasted on her. Devouring every drop that found its way onto my tongue with a series of loud swallows, my lips and stubble teasing her every time they closed to swallow and reopened to collect more.\n\nI fingered her through her high, my jaw restricting the in and out movements of my hand forced me to simply press my fingers as far inside her as I could reach and vigorously stoke her gspot, pressing into her and rubbing the tight bundle of nerves with such force that, under normal circumstances, it would be almost painful. Her high-pitched screams descending into panted moans as her wave subsided and her high drew back. I pulled out slowly, stroking and petting her twitching sex, kissing it tenderly before gently brushing a tongue over her clit and kissing that too. Her mind had gone blank, overwhelmed by the sheer pleasure of her orgasm, her lips purring and mewling in indescribably contentment.\n\nLeaning back on my haunches, I took her in. A thin sheen of perspiration covered her toned and magnificent body, her chest was rising and falling with deep laboured breaths, her full lips parted, her eyes glazed, a post-orgasmic rose hue covering the goose-bumped skin on her chest and neck, small aftershocks twitching her body and clenching her abdomen, she was spectacular. It was a few minutes before her eyes cleared enough to look back at me.\n\n\"Get that dick out, Now!\" she growled from behind a predatory grin, her eyes flashing with hunger.\n\nI stood myself up, taking a step away from the desk as Samantha sat herself back up, resuming her previous position on the edge of the beech coloured counter. I took another step back and she dropped off the table and onto her feet. Another step back, she fell to her knees, crawling towards me to be closer to her target when it was revealed. I hooked my fingers into my waistband as my legs bumped into one of the leather chairs dotted around the clinic. I pulled my sweatpants and boxers down in a single motion, letting them pool at my feet before dropping into the chair.\n\nSamantha was hunting. More prowling than crawling, the curves of her ass swaying seductively as one knee after another crawled across the small space between us, her eyes fixed on my iron-hard shaft as it flexed proudly in the cool air. I parted my knees as she approached, inviting her closer to her prize. She licked her lips, her gaze never leaving my crown as she stalked between them, her hands staying on the floor as the circling currents of her hot breath washed over my groin. The first beads of pre-cum struggling to hold their place at the tip of my cock as it twitched against the warmth.\n\nShe stopped a few painful inches short of touching me. It was her turn to tease, to take control of the application - or denial - of pleasure. But when her eyes flicked briefly up to mine there was no hint of the mischief or playfulness that had characterised our earlier interactions; there was a hunger now, a single minded purpose to return as much of the pleasure that I had shown her as she was capable of giving. Her mind was still purring, the tingling throb of her well sated sex consuming all but the most coherent of thoughts. Keeping her eyes on mine, she ran her tongue slowly and erotically over her upper teeth, wetting her lips in the process and sending another tremor up my rigid length.\n\nHer eyes sank back to the object of her intent. A lifetime of porn consumption had taught me the sensuality of a woman keeping eye contact when she was giving head, but there was a lot be said in watching the implacable and uncompromising devotion that Samantha was giving my cock. She hadn't even touched me, yet the power of her gaze alone was causing me to ache with anticipation.\n\nI tried to maintain the illusion of calm control, honestly I did, but the strangled groan that escaped my lips as her tongue softly pressed against the base of my cock told us both who was winning this round of the game. At that moment, she owned me. By the time she had dragged up my entire length, lapping the bead of pre-cum into her mouth as she flicked her tongue over my spongy head, that groan had devolved into a meagre whimper.\n\nSmiling to herself, her mind rejoicing in the opportunity to do to me what I had done to her, she swirled her tongue around my crown, paying special attention to the sensitive vee of my frenulum, carefully flicking and rubbing the tip of her tongue against it. Another glob of pre-cum oozed onto my tip before she opened my mouth and took me in. I sucked in a deep breath, my eyes falling closed and my head dropping back as her lips stretched around me, her head pressing downwards as she slowly inhaled inch after solid inch.\n\nShe reached the halfway point of my length when she brought her tongue back into play, rubbing it firmly against the underside of my shaft and increasing her suction as she pulled off. Keeping only the head between her lips and swirling her tongue around it a few times before pushing back down. Another few inches disappeared into her mouth before she repeated her trick, this time circling her tongue around my whole length as she pulled off. Each movement, each application of pressure, each touch and every ounce of suction eroded the control I had over my own body.\n\nBy the time she was pushing back down for the fourth stroke, my groans and whimpers had been reduced to barely coherent grunts. The ease at which Samantha has arrested ownership of the game had left me speechless. More than that, her expert manipulation of my phallic nerves had a steady tremble vibrating through my legs, my hands balled into white knuckled fists, my eyes squeezed open as I watched more and more of myself vanish into her and had demoted my breaths to little more than strangled pants.\n\nThere was a switch in her mind, like a decision being made. I was putty in her hands; she was in the position to repay the torment I had visited on her many times over, she could drag this out for as long as she wanted and no force on earth could stop her. Yet, that desire to impress me seemed to override the naughtiness that pervaded her demeanour when we first began, the only thing on her mind was an overwhelming urge to pleasure me. Not even Becky had been so single-minded in her ambitions.\n\nHer head pressed down as far as she dared without gagging, barely an inch or two of my shaft still exposed to the cool clinic air, her lips drawn tightly around me, her tongue working the underside of my length and her throat varying the suction as she began to bob. Taking me out almost to the tip before inhaling me back in, her one hand moving up and letting her fingers stroke and caress my heavy balls while the other slid up my chest, her caramel, ponytailed hair flicking around her neck and the strands of salvia compiling around my base as her mouth worked its magic on my cock.\n\n\"fuuuuck\" I squeezed out between groans, my eyes finally giving up and falling closed again, my head swinging backwards over the backrest of the chair, my mind consumed by the sensations around my groin.\n\nI could feel her mind smiling, even if her lips were too occupied to mirror it. A surge of pride and satisfaction swelled through her body, her mind aflame with delight at the feel of my hardness, the grunts of my pleasure and the taste of my arousal, her efforts redoubled. She moaned appreciatively onto my shaft, the vibrations travelling down the length, through my balls and up my spine as each groan and grunt of my own started rising in pitch. Her head was bobbing frantically now, her mouth almost a blur of motion as she took me deeply again and again, impaling herself on me and practically fucking her own face. It was like her only purpose in life was to bring me as much satisfaction as she could in the limited time we had; regrets about the limits of our tryst -- both in terms of time and place -- already held a place in the deep recesses of her psyche. She already knew that she would be revisiting, and possible adjusting the memory of our coupling over the course of countless future evenings.\n\nWell then, I'd better make sure this was a memory worth remembering.\n\nReaching down, I hooked a finger under her chin and lifted her off me. There was a look of disappointment in her eyes as her lips popped off the end of my cock, a longing, like someone who had been robbed of their last meal. That was until she saw the look of pure lust and hunger in mine. She sucked in a quivering breath as she grasped the reason that I had stopped her, that look of loss almost instantly replaced by one of eagerness and desire. As much as she loved the feeling of having me between her lips, the throb in her lower ones foretold the pleasures to come.\n\nStanding her to her feet as I rose to mine, I scanned her thoughts for what I wanted to know. If her fantasies had revolved around a rendezvous in this clinic, they surely would include where in the clinic she would want it to happen.\n\nHe going to do it. Hes gonna fuck me, right here... Oh my god, I need it so bad! I don't think Ive ever been this turned on in my life, just do it! Throw me down on one of the mats and fuck me til I forget how to breath! Do it! ... oh my god, the mats. If he does me on the mats, I'll have his god-damned babies! Stick that magnificent dick in me and show me what you can do!\n\n \n\nThe mats... I can work with that.\n\nHolding her eye and holding her chin, I stepped out of my puddled pants, turned her body slightly and started slowly walking her backwards, her vastly superior geographical knowledge of the clinic helping me guide us towards the soft, blue, foam-filled safety matts that covered the floor in one corner of the room. It took only a few moments for her to realize where we were headed, her knees almost giving out beneath her as the fantasy threatened its way into reality. A soft hitch of her breath clamped off a seductive purr as the images racing through her mind reached a fever pitch. Unlike the visions that I had gleaned from Becky a few days earlier, I had not only the ability, but every intention of helping Samantha make them real.\n\n'What's he going to do?' Her mind was screaming in heated frenzy as one sordid image after another transferred from her mind to mine. 'Is he going to lay me down, spread my legs and... no, not that. He's gonna bend me over, pound into me like a bitch in heat! mmm yeah, take hold of my hips and fuck me into the mats until I'm a quivering wreck! My God, he is driving me WILD!\"",
        " \n\nSomehow, I managed to hold back the smirk as yet another road map to Samantha's pleasure was provided to me. My eyes burned into hers as they in turn sparked with almost indescribable lust, each step taking us closer to our destination. We each knew that we had finally arrived without either of us looking down. Holding her still with the finger under her chin, I took another step closer to her and once again pressed my lips into hers.\n\nThis was not the desperate heated kiss of earlier, nor was it the teasing, eager kiss from before that, this one was a simple message: You are mine and I am yours. I lavished my lips against hers before moving onto her jawline, travelling up the curve to that special spot below her ear and then down onto the side of her neck, turning her body around as I moved. Before long, her back was pressed into me, arching to put more pressure on my raging erection as it slipped effortless into the cleft of her ass cheeks, nestling there as my hands came around and up her body to knead and cup at her breasts, tweaking and rolling her nipples between my fingers as my lips caressed the moist skin of her neck.\n\nWe both started to slowly sink to our knees, her body leaning forward and out of reach of my mouth as she moved to rest her weight on her hands, looking back over her shoulder at me with wonder and yearning. Keeping my eyes on hers, I fisted my shaft and lined it up with her opening, rubbing the head up and down her slick slit, brushing it against her clit a few times before taking proper aim. The gasps and soft moans had already started to glaze her eyes when I drove into her in a single savage thrust.\n\nHer whole body tensed as every nerve ending in her sex was ignited at once. Her head shooting up, her eyes wide open and her mouth agape in a silent scream, the hoarsely whispered yell dropping down to a rasping moan as I withdrew and drilled back in. She had found her voice by the time the fourth thrust had stoked its way into her.\n\n\"Fuck yesss!!\" she hissed, as my balls thudded against her engorged clit. \"... So deep, so fucking good! Give it to me!\" I kept going, thrust after powerful thrust, watching the impact of my pounding ripple up her ass cheeks before interrupting them with a hard spank. Her head shot up again as the crimson handprint burned itself into view. Another few strokes and I evened her out with another slap to the other cheek before leaning forward, adjusting my angle of entry and stimulating her gspot as my cock violently pushed into it, over it and further inside her dripping tunnel.\n\nI had never understood the concept of 'tightness' before now, but Samantha's pussy was gripping onto me like a vice, unwilling to yield as I pressed into her and holding onto my shaft with an unimaginable grip as I withdrew. I could feel every contour of her silky walls as the stretched around me; her whole body, her whole being wrapped around my manhood in way that I had never experienced before. It was like I had become hyper-aware; I could almost see the jolts of pleasure radiate from her core, the blinding flashes of light that exploded behind her eyes as the series of mini-orgasms rippled in her sex, her panted breaths echoed in my ears, the grunts, moans and incoherent whimpers bounced off every surface as her mind tried desperately to cling on to its sanity.\n\nHer eyes had already started to roll into the back of her head when her arms gave out under the force of my assault, the top half of her body dropping down onto her elbows as I continued rutting into her. Once again, she started feeling the familiar tightness in the pit of her stomach, the sparks of electric pleasure emanating from every stimulated nerve, the steady, inexorable build towards release.\n\nI reached forward and grasped a fist full of her hair, yanking it towards me to arch her back, my cock pounding against her gspot with unrelenting purpose on each drive home, another loud groan emanated from her as her wet, pouting lips abjectly failed to latch on to anything coherent to say. The whites of her eyes glistened as her mind's abilities condensed to the single universe of her approaching release.\n\nThe steady drip into her filling reservoir of passion had become a torrent. Each thrust pushing her ever closer to the point of no return. Each tug of her hair, each slap of her ass, each thud of my balls against her clit filling her closer to the brim. With one last deep thrust, her banks burst.\n\nThe violence of her contractions around my fingers thirty or so minutes ago paled in comparison to the onslaught visited upon my flexing cock. Her muscles clamped down hard, squeezing and milking me for everything I was worth, her shrill scream resonated around the room as her orgasm smashed into her.\n\n\"Aaaaaaaaaaargh.... Holy Fuck Im cummmiiinnnggg! Uuuuuuuuuuurrrgh!\" She bellowed as her mind finally caught up with her body and announced its climax. \"Fuckfuckfuckfuckfcukfuckfuckfuck! Oh my god, DON'T STOP! Uuuuuuuuuuuuuuuuugh!\"\n\nHer breath caught in her throat, the torrent of groans and announcements ceased as her body tensed for a few moments. Her pussy was like an oscillating vice, squeezing and releasing my shaft with indescribable strength and rhythm. I could feel the contractions ripple up her velvety tunnel, the sporadic twitches jerking her body as she rode out her high. I thrust into her as deep as I could manage and held, her eye shooting open and her whole body beginning to thrash.\n\nHer hips began to smash back into me, twisting and gyrating as she resumed our pace on her own. I barely had to move and we were already back to the frantic blur of motion that we had achieved before. \"Oh shit! So full... so fucking good!\" she panted out as she twerked and bounced her pussy against me each time her ass made contact with my pelvis. With a lick of my lips, a slap of her ass and a wry grin on my face I started rocking my hips to meet hers.\n\nThe sounds and smells of our coupling now hung thick in the air. The wet slap each time her ass smacked into me, the loud cracks as my hand spanked her, the deep groans and torrent of filth from her mouth punctuated by the grunts and moans from mine. Her arms had long given out beneath her by now; instead of being perched on her hands and knees, she had dropped to her elbows during her first orgasm, then simply allowed her head and chest to fall and rest on the mat as she reached back to strum her clit into her second. Another long scream and another drawn out groan announced its arrival as her legs shook violently under its impact. She lay there, breathing heavily, my cock still inside her as he mind flashed with lightning bolts of pleasure. The frenzied desire for pleasure had been almost completely burned away.\n\n\"I need to taste you!\" she announced with a calm quiet once her senses had returned to her, \"I need to taste myself on you!\"\n\nWith a strength that surprised even me, she leant herself forward, excising herself from my onslaught and rolled herself to the side. I could only kneel there and watch as she pulled herself back onto her trembling knees, positioned herself in front of me, dropped her head down and dragged her tongue along my cock, collecting the copious amounts of her juices as she went.\n\nI watched in slack jawed awe as the coolness of the air on my glistening cock was slowly and meticulously enveloped by the warmth of her mouth. This was different again, there was no pretense of teasing whatsoever, barely a pretense of pleasuring me, her mind was alive with lust at the thought of her taste on my skin, how hard I was for her, and how much of me had been inside her.\n\nRegardless of her motivations, her tongue bathed me. Exploring every inch, cleaning off every drop of her essence that it could find, savouring it before swallowing it down.\n\nIt was with some reluctance that I once again hooked a finger beneath her chin and lifted her off. The single minded tenderness she had shown towards my cock seemed to have taken the fury and frenzy out of my intentions for her. Behind those eyes, staring back into mine, was a desire.. a need for something more than pleasure. She wanted closeness, and, like Becky before her, I became filled with an overwhelming urge to give her what she wanted. I pressed my lips to hers.\n\nOur mouths had been joined many times since she had thrown down her unspoken challenge, but this was different. There was an affection behind it, a yearning for something more, something she knew she wasn't going to find in me, but yearned for it anyway. I could feel that small knot in the pit of her stomach as it echoed in mine... Samantha was lonely.\n\nNot today.\n\nWith our lips never separating, I leaned my bodyweight forward, pressing her backwards and forcing her to shift her legs beneath her to allow herself to be guided down. With one hand on the mat to support our weight, I hooked the other one into the small of her back and lowered her to the floor. Her legs spread instinctively as I crawled between them, my throbbing head zeroing in on her wetness and probing the petals of her labia without any guidance at all.\n\nWe moaned into each other's mouths as I sank into her, she settled onto her back, her knees rising to rest above my hips and her legs wrapping around me to pull me deeper. My tongue snaked into her mouth, her arms moved around my back, her hands resting on my shoulder blades, holding our kiss in place as I started to slowly rock into her.\n\nHer body understood long before her conscious mind did; rolling her hips to match every grind of mine, tilting her head as her hands messed themselves in my hair, hungrily pulling me deeper into the kiss. But pretty soon her mind caught up. She had, over the course of years, convinced herself that the affection and intimacy that she had been craving her whole life was nothing more than a Hollywood perpetrated myth, that what she was looking for didn't really exist. But despite herself, she couldn't help but feel it with me.\n\nIt would never work between us, she already knew that without needing to ask the question. I was too young, more than ten years her junior, nor was I ready for the emotional commitment that she sought, unable and probably unwilling - at least in her mind - to consider children at this point in my life. None of these were deductions that I was willing to contest. But suddenly she realised something that she hadn't dared believe before now: if she could find this intimacy with me, then she could find it with another. A new and previously banished concept of future possibilities blossomed in her mind as she pressed herself further into my lips. She wasn't lonely anymore, she just hasn't found the right man yet.\n\nAnother Orgasm crashed into her. Announced only by the soft squeak into my mouth and the drawn out moan into our kiss.\n\nOnce again, the strong muscles of her internal walls squeezed and milked me for everything they were worth, the ripples of her climax crawling up and down my length before tingling their way up her spine. She sucked in a deep breath during a rare separation of our lips before pressing them back together, her throaty and satisfied groan as he tongue wrapped itself around mine was the only thing giving voice to the fireworks going off behind her eyes.\n\nThroughout it all, her hips never stopped moving, her hands moved down to grab my ass, pulling me into her and silently gesturing for me not to stop. I was more than happy to oblige, rolling into her and grinding as deep into her as I could manage, our lips separating for only a few heavily panted moments of looking into each other's eyes before we reconnected. The affection of our act, much deeper and much more satisfying that the carnal rut that came before, was almost too much for her to bear. She came again, her chest glowing a crimson hue as she pulled her head back from our kiss and buried her head into my shoulder, silently screaming into the newly muscled flesh.\n\nThe orgasms seemed to meld from that point onwards. Huge, leg shaking, breath catching orgasms could no longer be distinguished from each other, it was like her climax seemed to rise and ebb but never fade away. Her mind was too overwhelmed with euphoria to wonder if these were a series of overlapping smaller orgasms, or a single long one, nor did she care. She wanted to kiss me, to taste my passion, to feel the intimacy on my tongue, but her mind was too overwhelmed for that too. All she could do was press her face into my shoulder and remind herself not to bite.\n\nI felt it all. I felt her pleasure, the feeling as she lost herself to the sensation, the feeling of being completely surrounded by me, inside and out. I could feel her continually throbbing sex from her mind and through my shaft. I could feel the trickle of sweat run down my back as she tracked one of her own between her heaving breasts. I could feel her lungs burn for air as mine sucked in deep breaths, I could feel her eyes roll and her eyelids flutter. I could feel myself pass the point of return.\n\n\"Samantha!\" I managed to croak out, neither my tongue nor my throat willing or able to produce more than that one word. But she knew what it meant. Her hands pushed me back a little, her hands on my shoulders as her eyes focussed on mine. There was no question where she wanted it, she just wanted to see my face as it happened.\n\nAnd, after a few more strokes, it happened.\n\nI erupted into her. Rope after rope of my seed pouring fuel onto the fires of her own climax as another - the biggest yet - crashed into her the moment she felt the first splash against her uterus. Her mouth dropped open, her eyes widened as they stared into mine but neither of us made a sound other than the quivering of our breathing. My orgasm still clenched my muscles as I was milked and emptied into her. She took it all, her churning muscles and my jerking cock stirring our combined juices together as the fireworks display in her mind reached its crescendo.\n\nOur mutual high lasted longer than either of us thought possible. My twitching and flexing cock depositing the last of my cum into her jerking and spasming sex as our bodies trembled and vibrated against each other. Her eyes finally fell closed, her mind lost to the abject bliss her body was experiencing as I briefly collapsed on top of her before rolling onto my back. The cool blue foam mat tempering my breathing as I lay next to her. Our heavy breathing was the only sounds in the room, the only sounds in the world and we both simply lay there, listening to it slowly subside before we both looked at each other and burst into euphoric laughter.\n\nAn hour later, Philippa popped her head around the door to my room, smiling at me as I sat in one of the armchairs next to the window. Looking out over the city, a view which paled in comparison to my own, but was still beautiful, nonetheless. \"Samantha just sent though the paperwork.\" She beamed happily. \"You are being discharged. Becky will be around tomorrow to go through the final checks and sign you out.\"\n\nI smiled back, hardly surprised by the news, but still somewhat said to be saying goodbye to my nurses, although I had no doubt I would be seeing all of them again soon. \"Thank you, Philippa.\" I finally replied.\n\n\"Don't forget that drink you owe us.\" She winked, \"See you around, big boy.\" With that she slid back out of the door.\n\nI had spent a long time in bed wondering what the first thing I would do after being discharged would be. For some reason, the answer just came to me. I would head to the Queen's head, my new home, and my new life.\n\n* * * * * * * * * * * * * * * * * *\n\nThank you for reading NewU part 5. As you can see, that is the end of the hospital portion of our story. Our nurse friends will, of course, still be part of the story, but in a lesser or less frequent role as the story progresses.\n\n \n\nNow. Something special for you all. My dear friend Sophie helped more in this chapter than I could ever thank her for, but she has had even more of an input on the next one... which has already been mostly written. I won't give too much away, but this is the first of what I hope will be a few guest-written chapters that will be interspersed throughout the series. She is an incredibly talented writer and a singularly decent and brilliant human being and the link to her work will be included here. I strongly recommend checking out her work. Following her and rating her work would also be greatly appreciated. Hers will be a name I hope you will all see more of. \n\n \n\n\n\n \n\nI am already working on Chapter 7, and I hope -- with lockdown finally being lifted -- that it will be up sooner rather than later. Thank you all once again, you are all awesome.\n\n \n\n \n\n \n"
    ],
    "authorname": "TheNovalist",
    "tags": [
        "genie",
        "hardcore",
        "nurse",
        "powers",
        "psychic"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/newu-pt-05"
}