{
    "title": "TT Spalding, PI - The Wordsworth Case",
    "pages": [
        "For you, the most loyal fans I've known. I wish the readers in the Loving Wives category were as intelligent as you. \n\nTT Spalding, PI-The Wordsworth Case.\n\nThere it was. The envelope addressed to TT Spalding, return address, Beltline Press, Inc. I raised it to the light, trying to see if I could read anything that way, but it was just a blur, the words hidden behind that infernal seal. All I had to do was rip it open and pull out the single sheet of paper inside. At least it was thin so I assumed it was one sheet. Probably a rejection letter. One of those damned form letters saying \"We regret to inform you that&hellip;..\" You know the ones. Probably. Maggie didn't say anything when she brought it in. Just laid it on my desk and walked out. Not a word. What the hell was that all about? Unfortunately I knew. \n\nShe was pissed at me for sending it to Beltline. She said that I should wait and make a few contacts first, people she knew, people she said could help. But since when did I wait for anything? Maggie knew what I was like. She knew I couldn't be patient. Not with the Great American Novel, written by none other than yours truly. 'Hell Leads to Chaos'. That was the title Maggie came up with. She made me contact Mickey Spillane's foundation for permission to use the name Mike Hammer which they soundly rejected! Can you believe it? But Maggie said change the name of my main character from Mike Hammer to Harry Sledge which I did, sadly giving up the attempt to resurrect Mike. But hey! If I published, and my book was a best seller, and I got famous, maybe then they would allow me to use Mike's name. Worth a shot.\n\nI was about to tear open the envelope and read my fate when Maggie came in, looked at me and the envelope and then shut the door. She walked over to me and sat down on the edge of my desk, one leg on the floor and one swinging slowly back and forth. She leaned over toward me, her blouse opening slightly giving me a bird's eye view of her very nice cleavage and waited. She knew perfectly well what she was doing to me. That's why I loved her. My Maggie. \n\n\"OK, what's up? What'd I do wrong now?\" I figured I might as well get it out in the open. I was already in trouble over the submission but it looked like I had done something even worse.\n\nMaggie looked stern for a moment longer than leaned over and kissed me with a hot, wet, tempting kiss. Not one of those kind where she brushes her lips over mine, like in those Nora Roberts romance novels. (OK, so I read some of them once in a while. A guy has to get his inspiration from somewhere) This was a real Maggie kiss, the kind she gives me while when we take inventory in the stock room.\n\n\"You're not in trouble. I love you, you know that. I have a favor to ask.\" She leaned back, taking her lips and her cleavage with her. My mood was ruined. But, if she had a favor, then there would be a reward if I came through. \n\n\"What flavor of a favor. You know I'd do anything for you. Well, almost anything. What's really up babe?\"\n\n\"I have a friend, Myra Watson. She and I met at the shop and we stayed friends even after I sold it. She called me with a problem and I told her you could probably help her.\" \n\nShe rose and walked out of my office to shut and lock the front door. For Maggie to close early, it must be serious. I was hooked now. I watched her come back and sit back on the desk. At least this way, I could look at her legs while she filled me in on her 'friends' problem. Hah! Her friend? We'll see.\n\n\"Ok, here's the deal. Myra's husband, Phillip has been acting funny. Strange, was the word she used. She says he's always taking phone calls and talking so low she can't hear him. If she asks, he says it's just business. He's a stock broker on Wall Street. Handles some hedge funds and some mutual funds with big dollars involved.\"\n\nMaggie stood up and walked over to the one comfortable chair in the office and pulled it up next to the desk. This was less fun for me but what could I do. I just waited, my pen and my pad open and poised. Wanted Maggie to see I was all serious about this. The better I did the favor, the better the reward. Hah! See? That's why I was the boss. Smart!\n\n\"Myra says he gets these phone calls at all hours. If she answers, no one speaks, they just hang up. And Phillip always wants to know where she is going to be and when she's going out. During the day, he calls her at home several times just to check on her. She says it's weird. She's really spooked.\"\n\n\"She wants you to find out what he's up to. What's he doing? Is he cheating on her with another woman, or even a man? And why does he want to know where she is at all times? She's just going crazy wondering. Can you help her? Can you find out what he's up to?\" \n\nI made a few notes, tapped my pencil against my nose, looking very private eye-ish. \"I believe I can do a few things. I have some ideas that I can check out. And I'll probably want Bruno on this. He can do some of his crap with computers. I know that's right up his alley. Give me a couple of days.\" \n\nMaggie jumped up to wrap her arms around me, kissing all around my neck and face before moving away to say, \"I knew you could do it. Thank you honey. I'll just call her and tell her the news. With that, Maggie was out the door and on the phone. I was hoping for a little more as a down payment, but beggars can't be choosers.\n\nOnce Maggie left, I opened my envelope and read the words that would make my day. \"We regret to inform you that. . . . . . . Thank you for your submission.\" I read it one more time and then filed it in the circular file. Well, Maggie was right as usual. She was waiting to hear back from her friend, the one that she said could help me. Well, I really needed help. \n\nMaggie had left me a page with all of the information on her friend Myra Watson. She had a part time job at the YMCA, filling in three times a week at the reception desk. She was the one that called whoever it was that was in charge of whatever it was. That job. Her husband was a broker with one of the biggies on Wall Street. I looked at the list of his Mutuals and actually recognized two of them. I bet Bruno would know most of the rest. She had listed some of his credit cards and his driver's license number. His SS was also there. I had all I needed. Enough to call Bruno.\n\nWhen I found the boy, he was planning to call Polly to see if she wanted to spend a weekend with him up in the Catskills. Seems Bruno had a cabin up there, one I hadn't known about. That wasn't right. I told him so and he said that it was always available if I wanted to use it. I forgave him. He was on his way in. \n\nI heard the commotion outside when he arrived. He and Maggie would shoot the breeze for a few minutes, she would invite him to dinner, he would promise to come and nothing would happen. But it made Maggie happy to ask and it pleased her when he agreed. I just waited.\n\n\"Hi boss. What's up? Got a hot one? I could use the work right now. Things are going way too easy. Market's up, royalties are coming in regular and I'm bored. Hope you got a good one.\" Bruno sagged into one of the visitor chairs. He actually liked them. He was the only one.\n\n\"This one's a freebee. A friend of Maggie's. Are you up for that? No payday for this one. Except for me, if you know what I mean.\" I gave him a grin. \n\n\"I'm in. Anything for Maggie, you know that. Do we need the princess? Polly, I mean.\" He looked guilty for a second and I wondered again how things were going. The last I heard, they were spending a week or so in Hawaii, just the two of them. I was alternately proud then uncomfortable. Somehow, it seemed like incest to me. I thought of both of them as my kids. \n\n\"I don't think so but you decide.\" I gave him chapter and verse and we discussed it some. Bruno wanted to hit his accounts, check his cash flow and see if anything popped. He would also monitor his Mutuals and his hedge funds to see if anything out of the ordinary was happening. I suggested a bug in his car and maybe in his briefcase. We had access to both via Myra. He said he would call her to set it up. \n\n\"Give me five days boss. I should have something by then. We can decide then what we want to do. OK with you?\" \n\nIt was and we parted, planning on meeting in five days. Bruno would call the shots from here on. I would coordinate, something I did very well. Meant little work for me but big rewards later.\n\nFor the next three days, it was business as usual. Only one thing happened that was important. That happened just that morning. Maggie stuck her head in my office with that look that said, 'A client and one that has some money. Be nice!' I got it and nodded my head.\n\n\"TT, can you see Mr. Wordsworth? He has something he wants to discuss with you.\"\n\n\"I have a few minutes. Show him in if you would.\" Polite as you please and very professional. I leaned over my desk, looking very, very busy when Maggie showed him in. He was a tall, skinny soul. He had on a plain black suit, white starched shirt, black string tie and polished shoes. He carried a black leather briefcase, scuffed and worn. He walked in, stiff as a plank. I motioned to one of the uncomfortable chairs, thinking that they were oh so appropriate for someone like him. \n\n\"Please have a seat Mr. Wordsworth. How can I help you?\" I was all business now. This kind usually had a story to tell. They were the ones that waited until the world was about to end before asking for help. They were too up tight to let go of anything, even trouble.\n\nI swear, he sat down in the chair like he had a stick up his ass that would poke him if he unbent even a little. It was fascinating to watch. I admit, I was spellbound. He started to talk in a voice that was almost as tight as he was. \n\n\"I own a chain of pawn shops here in the city and all over the island. They go by different names since I purchased several of them from some of my less fortunate competitors. But there are four in particular that I need you to look into. They are operated by my brother in law, Tito Morelli. He is married to my sister, a particularly unfortunate relationship in my opinion.\"\n\nHe reached into his briefcase and produced a large add, one that was taken from the paper. It proclaimed in big red letters, \n\nBest Prices with No Hassle! We Give You Top Dollar For Your Items. John's Pawn Shops, Four Locations To Serve You Better!\n\n\"These are the shops that have repeatedly shown a lower than expected profit. I have reviewed the books but I fail to see where the money could be going. And I assure you, I am a very good accountant. Can you do this kind of work?\" \n\n\"Of course we can. It shouldn't be a problem if what you suspect is true. But I have to ask, could you be mistaken in the anticipated profits? Maybe they are just not doing as well as you expect.\" I had to ask, but knowing this guy, it was a sure bet he knew to the penny the amount of money they should be taking in.\n\nWe discussed it some more with assurances from Mr. Wordsworth that he was correct. I went over the standard contract with him, adding a surcharge of 5% of any discovered funds just because he seemed to be able to afford it and sent him out to sign with Maggie. Then I called Polly and had her come in.\n\nI went over the deal with Polly, asked her about her trip with Bruno and listened with amazement when she told me how much fun they had. My Bruno? Fun? Now there was a disturbing picture. One I didn't want to pursue. But we worked out a deal where Polly was being sent in by Mr. Wordsworth to take inventory and audit the books. Something that should not be unexpected by Tito. She knew what to do and where to look.\n\nIt was later in the day that Maggie came in, picked up the discarded letter from Beltline and read their despicable words. She grimaced, then put it back in the circular file. She gave me a funny look and then turned to walk back out into the outer office. I was staring out the little window of my office, the one that looked directly onto a brick wall when she returned. She walked over, pushed my chair back and plopped herself down in my lap.\n\n\"Why didn't you wait as I asked you? You know I'm talking to some people about your book. You need someone who wants to help, not some anonymous clerk whose job it is to weed out most of the garbage they receive.\" She took my face in both hands to look me directly in the eye.\n\n\"I know. I just thought if I did it on my own, you would be more proud of me. I really thought they would give it a chance. But, you were right as usual.\" I gave her the biggest puppy dog look that I could. Sitting on my lap, she was giving me ideas, and not ideas about a new book. When she smiled, I held my breath. \n\n\"Well, I think we need to discuss this some more. You've been a bad boy and Maggie needs to punish you.\" With that, Maggie stood, moved to straddle my legs and then sat down on my lap, facing me. I reached for the buttons on that lovely blouse she was wearing and began to slowly unbutton it. She didn't stop me so I knew I was going to be much happier in a few minutes. God, I really love my Maggie!\n\nSince what goes on between my Maggie and me is private, I have to skip ahead a little. I know you understand. She already makes me very happy every day of my life but she had that way about her to know when I was really hurting and make it better. I swear, she could make me smile during a funeral. And she did cheer me up considerably. \n\nIt was a Monday morning, almost a week after Bruno left when he came in the office. After the usual banter with Maggie, he came in and shut the door. He had news.\n\n\"OK boss. We've got a bit more going on here than we thought. This guy Phillip Watson has some guts, I've got to say. I tapped his home phone with Myra's permission and also bugged his car and his briefcase, which was tough to do. But I got what I needed to put it all together. It breaks down like this: Watson is siphoning off money from two of his biggest funds. He has the help of an auditor from his firm and together they've been skimming off the top, disguised as management fees.\"\n\n\"Instead of the usual 0.01%, they've been taking .1% and banking the difference. I know it doesn't sound like much but I got into his accounts with the access numbers from his briefcase and found no less than three off-shore accounts that have over $12.5 million dollars in them. It gets worse. He also has a house in the Caymans that was purchased by money he stole. There is a woman named Patty Harris living there now, and he calls her twice a day. She's his lover and they've been seeing each other for the last two years. He met her there when he went down to buy the place.\"\n\nBruno reached into his own briefcase and pulled out a file. He pushed it over to me and continued.\n\n\"That's about all. He intends to end this at the end of next month, which is the end of the quarter, and he and his accountant intend to flee the country before the shit hits the fan. They've already booked their flights and there are only two tickets. His and the accountant. Myra will be left holding the bag.\"\n\nWell damn it and damn it some more. Myra was getting screwed big time and I had to tell Maggie. This wasn't the good news I had hoped for but it was the real world. I told Bruno to sit still while I got Maggie. She came in, sat down next to Bruno. I told her we had the goods but that it wasn't going to be nice. She bowed her head a second and then told me to give her the truth. I did.\n\nWhen I was done, Maggie just sat there for a minute, thinking as she was so good at, and then said, \"Call your friend Cal Taylor at the FBI. This should be right up his alley. He can put a stop to it and arrest both of them. Maybe the girl too. I want his dirty ass stopped!\" My Maggie was really mad! Thank God it was at someone else.\n\n\"Wait just a minute babe. Bruno can't be a part of this. What he does isn't strictly legal you know. Matter of fact, it isn't even close to being legal. I'm not putting his neck in the noose even for your friend.\"\n\n\"Don't be silly! You don't have to tell him how you came by this information. Just give him the facts and let him prove it. In the meantime, I can't tell Myra because she'll just tell Phillip. She loves the guy and she'll do anything for him. This is going to kill her, I know, but he has to be stopped.\"\n\nWhile we were all there, I called Cal, gave him the basic facts over the phone, told him he was on his own for proof, then relented and gave him some account numbers. I reminded him that this was off the record and if he tried to call me in, I would plead the 5<sup>th</sup>. He promised to keep me out of it and hung up. We had done all we could and now we just had to wait. \n\nAfter Bruno left, Maggie and I sat and talked and she got all choked up about her friend. \"Why can't she find a good man like I did? The more I see of the world, the more I appreciate you. I love you to death old man.\" \n\nWhen I suggested we head home early, Maggie agreed, went to the safe and took out one of the videos we had from one of our cases. This one included some really juicy scenes and we had viewed it a couple of times before. When I saw the title, my heart started to pound, my lower regions reacted, and I wondered how I was going to make it home. Maggie saw my problem, put the video in her purse with a smile, and proceeded to make it possible for me to walk without embarrassing myself. You can guess how she did that. God, I loved that woman! \n\nIt was the following week when I heard from Polly. She had the goods on Tito Morelli. It seems that Tito was doing some very clever doctoring of both the video surveillance tapes and the records of payout. There were two sets of books, one with the real payouts and receipts and one with the doctored values. For example, Tito took in a digital video recorder, paid the owner $100, but recorded $150 in the fake book. He pocketed the other $50. Didn't seem like much, but with four shops and several hundred every day, it added up. Seems Mr. Wordsworth had a keen eye for what the real value should have been. Polly gave me video, a copy of both books and surveillance photos of Tito pulling the tapes and editing them. Good clear prints all. Polly was a pro as you know. \n\nI sent her home with a check for a grand, plus a bonus of another two hundred and wrote up the report. I spent the better part of the afternoon on it, figuring we could get at least two or maybe three grand extra from our rigid client. I estimated that Tito had skimmed at least $4,000 a week for the past four months. I came up with a total of $64,000 just for that period, and he had been up to something for the past two years. Being conservative, I figured our Mr. Wordsworth owed us the base contract of $3500 plus a recovery fee of 5% or just about $19,200. So, we made $22,700 less the $1200 I gave Polly. \n\nWhen I gave the report with the bill to Maggie, I was rewarded with a kiss and a hug. She promised to call him immediately and then suggested we take inventory again. When I questioned this as maybe being too responsible, she told me seriously that she felt there were some very expensive pencils missing. Well! This had to stop! I went with her to the stockroom right then and there! After all, I had my reputation to uphold. Have I mentioned that I really loved my Maggie?\n\nThe meeting with Mr. Wordsworth went well. He was delighted with the news, nodded his head at the totals in the report and reviewed the videos and the pictures with a smile. I have to tell you that his smile was not something worth waiting for. It gave me the creeps! Maggie too. When I asked how he wanted to handle this, he just handed me a cashier's check for the total amount plus a 10% bonus and said that it was taken care of. Not to worry. Well, I gave him the original report and all of Polly's stuff and wiped my hands of that deal. As I said, he gave me the creeps. I mentally wished Tito well, but I didn't expect he was going to be very happy.",
        "As to Myra, I saw her the other day with Maggie. The shit hit the fan alright when Cal got the goods on Phillip Watson. He got permission from Phil's bosses to monitor the fees he was charging his clients and used his own contacts at Homeland Security to follow the money trial to the Caymans. They also tapped his phones and monitored his computer and located the accountant and Patty Harris. When Cal took them down, it made all the headlines, got front page coverage in the New York papers and nationwide TV coverage. Cal was a hero, Myra was found to be innocent of all knowledge and released, and her husband went down big time. Maggie was pleased but concerned about her friend. We had her over to dinner several times and she seemed to be getting along much better now.\n\nCal called, made sure I was cool with him taking the credit and then told me I had a favor coming. If and when I needed to collect, he said to just call. Well, that was fine with me since I was often on the verge of doing something illegal. One of these days, I was going to slip over the line. Good to have favors owed. \n\nWell, all in all, things went pretty well considering. I got lucky a couple of times myself and Maggie has been just as happy as can be. When Maggie is happy, so am I. For many reasons. Maggie is about as perfect as they come but a happy Maggie is without equal. Trust me. \n\nOh, yes. Maggie sent my manuscript out today to her friend. She seems to think it has a good chance of being published. I'll just hold my breath and hope for the best. Actually, my motto is 'expect the worst and hope for the best'. We'll see. Stay tuned. "
    ],
    "authorname": "thecelt",
    "tags": [
        "private investigator",
        "private eye",
        "p.i. satire"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/tt-spalding-pi-the-wordsworth-case"
}