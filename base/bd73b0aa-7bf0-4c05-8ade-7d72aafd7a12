{
    "title": "Could You Be Mine?",
    "pages": [
        "A small digression from my other story threads, but this one landed in my head and wouldn't leave. I'm working on my other drafts, I promise! Here be the same flag that I raise for my other stories: build up is long with a focus on the plot and the romance itself. Not for those looking for a story about a quick roll in the hay. Comments/feedback always welcomed! \n\nHeartfelt thanks to Ripley for thoughtful guidance and to AwkwardMD for helping make sure some of my more esoteric plot points were anchored in reality! Any and all mistakes are mine.  \n\nChapter 1: Spark \n\nIt was a Monday morning. Davina, the office manager, was clucking around more than usual. Apparently, the IT department forgot to set things up for the new Finance Director and she had to scramble to make it right in less than forty-five minutes. \n\nI was in my second week of a consulting gig with the firm Winchester and Brown, which was in the midst of building out its Finance and Strategy department. They've gone through some growing pains and the new Finance Director was the first of the new guard. \"Win-B,\" as it's known on the Street, was a boutique investment bank with a selective roster of blue chip clientele. It recently expanded operations to the UK and was already gaining market share. They brought me in to review and update their revenue sharing model. I'd spent the last week doing research and interviews and was just getting started on framing a new proposal for them. \n\nDavina was on the phone when I got back from the pantry with my first cup of coffee of the day. \n\nShe was glaring at no one in particular, \"Tell I.T. to set up the profile on whatever hardware they have, we'll swap them out for newer models later. And where the hell is the nameplate?\" \n\nDavina slammed the phone down, \"It's 8:13 and I am already having a hell of a Monday. How's your Monday so far?\" \n\n\"I've got a presentation to reformat,\" I ducked as she threw a pad of post-its at me. \n\n\"You may say you are all mid-western nice, Lauren, but you've got a New York edge to you, you know that?\" \n\nI feigned offense, \"Why Davina, I was just answering your question honestly!\" \n\nDavina shooed me away with her hands, \"Go away. 'Reformatting a presentation' pfffttt! Some of us have real work to do... Ah!\" She broke into a huge smile as a messenger dropped off an envelope. \n\n\"Here, make yourself useful and slide this onto the wall before the newbie walks into a nameless corner office,\" Davina handed me the envelope. \n\n\"Yes, ma'am,\" I took it from her and headed back to my cubicle. I placed my coffee on my desk and ripped open the envelope. Inside was a slim, rectangular nameplate. It was brushed nickel with black lettering: ROWAN J. KAN. I didn't know much about the \"newbie,\" as Davina said so dismissively, only that he came from some big deal VC firm and was a hard-ass. I had no idea how accurate the information was; my source was Oliver Donovan the Finance VP, and he was at best threatened by Rowan's arrival, and at worst shitting his pants that someone would shove his Ivy League MBA where the sun don't shine. \n\nI walked over to Rowan's empty office, slid the nameplate into its bracket and went back to my cube. Annoyingly, Oliver was there, leaning against my desk, chewing on his pen. \n\n\"Is he here yet?\" \n\nI shook my head, \"Nope.\" \n\nI sat down and unlocked my screen. The clacking of the pen between Oliver's teeth continued. \n\n\"What?\" I looked at him impatiently. \n\n\"Nuthin'. Just wondering if I should get on his calendar for today, you know, to introduce myself, show him the model I built for this year's budget...\" \n\n\"Jesus, Oliver, shut up about your model already.\" \n\nOliver took the pen out of his mouth and pointed it at me, \"I built some awesome macros for that thing.\" \n\n\"You're not the only one who can build macros you know? And you're in Finance and Strategy, isn't it sort of a pre-requisite?\" \n\n\"No one else has an MBA. Everyone else joined as an analyst. My spreadsheet skills are pretty solid compared to the rest of them.\" \n\nBet you can't outdo me, I thought to myself. Instead, I sighed, \"Oliver, no-one cares. Really. If you wanted to be the Director of Finance, you should have spoken up... and knowing how to build macros in a finance model isn't going to get you there.\" \n\nOliver's mouth hung open. \n\nI felt a little bad, \"You're three years out of your MBA; even if you were a total whiz at all of this, they wouldn't have tapped you for the job. But you've got good instincts, so don't do stupid stuff and you'll get there.\" \n\nHis features softened a little, \"Really? You think so?\" \n\n\"I've consulted for dozens of Finance teams; I know so,\" I nodded, \"I also know I need to have this presentation ready by eleven, so stop hovering.\" \n\nOliver muttered a quiet 'thanks' to me, and shuffled off back to his cube. I turned back to my screen and tried to turn my brain on. The presentation was a beast. It wasn't an easy message to deliver: Win-B's revenue allocation methods were basically a web of ad hoc policies which worked fine when the firm was smaller with lower revenues. I was essentially going to tell them they needed to smash it into a million pieces and put it all together again. But better. \n\nAs I said, it was a beast. Big investment banks, and boutique ones like Win-B, have all had to tackle this particular slice of performance reporting, with mixed results. The banking business is built on relationships, and every banker wants to claim credit for red-hot deals and get a share of the fees. Building a model that mitigates bad behavior and drives business forward was a thankless task. I had the advantage of being an outsider, so I was uniquely positioned to attempt marrying the client relationship structure and the profit sharing structure without walking into the buzzsaw that was the politics of ego and profit-maximization. \n\nIt was 10:57am when I hit 'print' and I ran into the printer room to grab the copies. \n\n\"FUCK!\" The printer didn't collate the pages. \"Goddamit,\" I muttered, taking the stack of papers with me. Manually collating the deck as I walked was next to impossible, and I backed into the conference room with my arms full of paper. \n\n\"Speak of the devil,\" Mona Winchester, the co-founder of the firm, said as I turned around. \n\nMona raised an eyebrow, \"Did the printer throw up on you?\" \n\nI arched an eyebrow of my own, \"Someone took off the default collate function... and walking and collating is not a skill I thought I had to develop.\" \n\nMona chuckled, \"It better not be - we'd be paying you all wrong otherwise!\" \n\nI smiled gamely at her and started putting the decks back in order. I was just about done when the door to the conference room opened again, and a voice behind me said, \"Sorry I'm late - the techies needed some extra time getting me set up.\" \n\nI looked up and I swear to god, some voice in my head said, oh, there she is. As in, forget everything and everyone that came before, this is the one.  \n\nShe was tall, for one. Eurasian, but I couldn't begin to guess exact provenance. Shortish dark hair, brown... no - hazel eyes, boyishly handsome but distinctly female. It was hard to describe her any better than that, because my brain stopped functioning. I forced myself to shuffle around what remained of the uncollated presentation. My pulse pounded in my temple, and I wondered who the woman was and what just happened to my heart. Helpfully, Mona said, \"Everyone, this is Rowan, uh, RJ Kan, our new Finance Director.\" \n\nI think my jaw dislocated itself and landed on the floor. And not for nothing, but this proved once and for all that I should never listen to Oliver Donovan because he had no idea what he was talking about. Rowan Kan wasn't some slick high-finance banker bro with a swagger and attitude. Rowan Kan was a hot high-finance banker dyke with a swagger and attitude. And yes, I was assuming she was gay based on appearances, but I was pretty sure I was right and did I mention my brain was melting? \n\nRowan went around the table, shaking people's hands. I wondered if feeling would return to my limbs before she shook my hand. I knew I was blushing. I could feel my neck blooming with heat. \n\n\"RJ,\" she said, hand outstretched. \n\n\"LE,\" I responded. I didn't know why I did that. Reflex or something. I took her hand. Her grip was firm and business-like. But I reacted like she had caressed my palm. Seriously. It felt soft, sensual, and strong, and I fought the urge to hug her. This was very clearly all in my head, because RJ looked like she was ready to move on to meet the other folks in the room; I wasn't even a blip on her radar. Conversely, my brain or whatever it was between my ears was projecting this weird glow around her entire being. It was like time jumped for a second before falling back into its groove. \n\n\"Ellie, nice to meet you.\" \n\n\"Oh,\" I blushed even more, \"No - you gave your initials, so I gave mine. 'L.E.' is for Lauren Elizabeth.\" Why did I try to be funny? I'm not funny.  \n\n\"Ah!\" She flashed me a smile, \"Nice one!\" \n\nMaybe I should keep trying to be funny if it gets her to smile at me again.  \n\n\"Lauren is the consultant I told you about,\" Mona chipped in, \"She's worked with us before on some projects and hasn't let us down yet! Sorry Lauren, I forgot to tell you RJ would be joining today.\" \n\n\"The more the merrier,\" was the best I could come up with. \n\nThe rest of the presentation was a blur. I talked through it somehow, and it must have made sense, because people were nodding and adding comments of their own. \n\nRJ said very little, but I knew she was listening. When I wasn't talking, I just stared at her. There was one particular moment when my eyes wandered over to her left earlobe, and I found myself wondering what it would feel like between my teeth. So I suppose it wasn't all a blur: I remember very clearly my new Finance Director's delicious looking left ear. \n\nAs I went through the rest of the day, I managed, somehow, to not completely lose my shit over the fact I now knew of RJ's existence. I couldn't begin to fathom how one person could flip me inside out with the mere action of showing up in a room. I wanted to know everything about her. Even more surprisingly, I wanted to tell her everything about me. I felt like one of those cartoon drawings with my eyes bouncing on springs, steam coming out my ears, and a swarm of blue cheeping birds flying in circles around my head. \n\nI was discombobulated for a number of other reasons, the first of which (in no particular order) was - 'was' being the operative word - me being straight. Clearly that now needed adjustment. Second, there's Keith, this guy I'd met recently, who all of a sudden seemed incredibly sweet and nice, but I definitely did not lose my mind over him (nor have I over anyone else) like I did in the conference room when RJ walked in. Needless to say, I no longer had any interest in pursuing anything with him. Third, and most importantly, I knew nothing about RJ. Zip. My reaction was so out of left field it was like someone purposely stunned me with an infatuation ray at full force. But it wasn't an infatuation... I knew that without a doubt. I wanted her deeply. As in, wanted her in every way: I wouldn't be able to stop myself if I tried. Is this how people realize they're gay? Am I gay? Maybe I'm just RJ-gay... is there such a thing? I thought about my past relationships, none of which felt lacking in any way, but- \n\n\"So what'd you think of her?\" \n\nI screamed in surprise and looked up. Oliver. \n\n\"Jesus H Christ on a stick Oliver, you scared the shit out of me.\" \n\n\"Sorry,\" the pen was back in his mouth rolling between his molars, \"So? What'd you think?\" \n\nWhat did I think? Where should I start? She's basically the person I didn't even know I was waiting for?!!? \n\nI shrugged as carelessly as I could, \"Didn't spend that much time with her except in a meeting this morning - have you had your meeting yet?\" \n\n\"Tomorrow,\" Oliver mumbled, \"And... she's not a dude.\" \n\nI laughed, \"Ain't that the truth! You made some erroneous assumptions, Mr. Donovan.\" \n\nOliver shrugged, \"I caught a glimpse when she was in for her interview with Mona... I wasn't looking all that closely... and she has zero presence on social media... not even on the professional networking sites.\" \n\n\"You looked at her resume and her name and assumed she was a guy.\" \n\nOliver snorted, \"Bet she's a lesbo.\" \n\nI made a face, \"What's that got to do with anything?\" \n\n\"This place is full of them.\" \n\n\"Oliver, if you have a problem with it, go get a job somewhere else.\" That stopped him cold. \n\n\"I was just kidding around,\" he back-pedaled, \"I totally got the vibe that she's a hard-ass though, right?\" \n\n\"She seems really nice,\" I shrugged again. Understatement of the century.  \n\n\"I'm not homophobic, by the way,\" he tapped his foot nervously. \n\nI raised an eyebrow. \n\n\"Seriously! My brother's gay, I don't have a problem with it.\" \n\nI crossed my arms. \n\n\"Okay, fine. I went for the cheap shot.\" \n\n\"And...?\" \n\nHe looked blankly at me for a beat before light dawned. \n\n\"...and I'm sorry I was an ass.\" \n\n\"Okay, apology accepted.\" I turned back to the computer. \n\nI went back to my existential crisis when Oliver loped away. My only recourse, I concluded, was to talk to someone who could help me figure out what to do. \n\nI took a breath and was about to call my best friend when I heard Oliver striding back. At least he wasn't sneaking up on me again. \n\nI dropped the call, \"This better be worth the interruption, jackass, I have things to do...\" I said loudly as I threw my phone onto my desk. \n\n\"I'll try my best to make it worth your while.\" \n\nOh, no no no, that didn't just happen.  \n\nI turned towards the voice and indeed, I had just called RJ a jackass. \n\nOnce again, the sight of her arrested my breath and evacuated all air from my lungs. It was a good thing I was sitting down. \n\nI tried to laugh off my gaffe, \"I thought you were someone else. Clearly. If I'd known it was you, I would definitely not have called you a jackass.\" \n\nRJ smiled, \"You don't know me yet, so don't be so sure!\" \n\n\"I highly doubt you're a jackass, but point taken. What can I do for you?\" Very inappropriate images popped up in my head. I felt myself blushing again. \n\n\"Your presentation - can you walk me through your attribution calculations? I couldn't follow how you got to the thirty-three percent. I tried, but I couldn't get there.\" \n\n\"I took seven percent off the top first - I think that's the default for all fees...\" \n\n\"Okay, so you start with nine million six-thirty five... got it. Cool.\" \n\nI wasn't really sure how she remembered the ten point four-ish million number from the first slide of my deck or how she got to the nine million number as I was talking, so I just nodded. \n\n\"You know what this means, right?\" RJ wiggled her eyebrows. \n\nIt means you're as fascinated with my mind as you're with my looks and you want to take me out on a date and to hell with everything else?  \n\n\"Huh?\" I shook my head, mostly to shock my brain back from fantasy land. \n\n\"You've just engineered a head-fake - it's making the profit allocation bigger by reporting on contribution, but your attribution calculation right-sizes it on the back end.\" \n\nI grinned. She totally got it. \"Yep. People like talking about contribution anyway. So why fight them?\" \n\nRJ nodded appreciatively, \"What else are you working on for Mona?\" \n\n\"This is it, and we're just getting started. We need to get the model built, test it, and then get buy-in from the client-side folks. Mona wants this to go before the Management Committee... and if they approve it, we'll integrate it into the accounting platform. But after that, I'm outta here!\" \n\n\"A rolling stone gathers no moss, eh?\" \n\nI tilted my head, \"I think of it more as having 'nowhere to go but everywhere.'\" Oh my god, why am I being such a geek with my literary references?  To my great surprise, she got the reference. She picked up on it and my heart pinged with joy. \n\n\"Okay Ms. Kerouac, why don't you wander over to my office at some point this week and we can hammer out the rest of this before we loop in the client team guys? How about blocking out either the morning or afternoon of Thursday, and you can catch me up on everything?\" \n\nMy mind went straight to a vision of RJ pinning me against the wall of her office and kissing me for an entire afternoon until I went cross-eyed. \"Jesus,\" I mutter. \n\n\"Timing doesn't work?\" \n\n\"Uh, no!\" I stammer, \"I can make it work. I'll make it work.\" \n\n\"Awesome. Thanks Ellie,\" RJ winked. \n\nI giggled. As in, I giggled like a seven year old. \n\nRJ chuckled, \"I'll see you later.\" \n\nI nodded, \"Yeah. Okay. See you later.\" \n\nThe moment she disappeared from view, I picked up my phone. Screw the rest of the day. I need to head home. We're at Defcon 1 ladies and gents.  \n\nI texted my best friend Ian. Flaming homosexual and my life-long confidante. \n\n{Lauren} SOS. SOS. Drop whatever/whoever you are doing and meet me at home ASAP.  \n\nI stared at my phone, willing it to ring. \n\nWhen it did, I answered before the first ring finished, \"Holy shit, Ian. Holy shit.\" \n\n\"Is this a real emergency or did you lock yourself out of our apartment again?\" \n\n\"Ian, shut up and listen.\" \n\nI threw everything into my bag, ran into a conference room and shut the door. \n\n\"Okay,\" I took a deep breath, \"I think I'm gay.\" \n\nSilence. \n\n\"Ian? Are you there?\" \n\nSilence. \n\n\"Ian?\" \n\n\"Sorry,\" I heard Ian try to suppress a laugh, \"I had you on mute.\" \n\n\"Are you fucking around with a guy right now? This is serious!\" \n\n\"No!\" Ian laughed again, \"I thought I heard you say you're gay.\" \n\nI rolled my eyes and flopped down onto a chair, \"You did. Can you please try and be serious for a second?\" \n\n\"Hold up,\" Ian kept laughing, \"You. You really think you're gay?\" \n\n\"YES!\" I yell. \n\n\"Laaawwww-ren?\" Ian intoned, \"You were straight when you went to work this morning.\" \n\n\"I know. This is why you need to meet me at home right now. I need a crash course on... oh, I don't know... EVERYTHING. Like, I need to know how to find out if someone is gay and if so how I would go about asking her on a date and maybe many dates and definitely lots of other things related to dating...\" \n\n\"You are asking me how to ask a woman out on a date?\" Ian sounded incredulous, \"I have no freaking clue!\" \n\n\"Isn't there a universal LGBT 'I think you're hot' bat signal or something?\" \n\nMore laughter. I groaned, \"Can you stop laughing for a minute and let me know if you can meet me at home?\" \n\n\"Lauren, it's my day off, remember?\" \n\n\"So?\" I was blanking. \n\n\"So, I'm about to walk into class right now, but I'll see you at home as soon as I am done.\" \n\nOh. Right. Duh.  Ian was a private chef with a regular roster of clients, and on his days off, he teaches classes at a culinary school. \n\n\"Fine,\" I dropped the call and walked past Mona's office, saying that I had some vague 'thing' to do. She waved me off, and I practically ran to the subway. \n\nI paced around in the apartment like a caged animal, waiting for Ian to get home. \n\nWe've lived together for three years now, each of us pleasantly surprised by how compatible we were domestically. We kind of grew up together: we met at sleep-away camp when we were nine, and - thanks to our parents agreeing to coordinate on how they wanted to get rid of us for eight weeks each year - we got to spend every summer together since. And it was the beginning of a wonderful friendship. \n\nHe was a native New Yorker, born in Brooklyn and attended college on the upper west side. With his biological and chosen family scattered throughout the city, I was happily adopted into the mix when I moved to the city five years ago. ",
        "\"Here I come to save the day-ay-ay-ay,\" he sang with gusto as he flung open the front door. \n\nI grabbed his sleeve and pulled him into the living room. \n\n\"Here's the deal...\" I began as we sat down on the couch. \n\nIan's eyes got wider and wider as I talked. \n\n\"Say something,\" I finally pleaded. \n\n\"I guess I now know the gestational period for gay-osmosis... Twenty some years of friendship with moi and you are finally exhibiting curiosity about Sapphic love.\" \n\nI whacked him with a pillow, \"Can you please be serious? What happens now?\" \n\nIan shrugged, \"Honestly, nothing. This could be one of those things... I can't believe I am saying this... It could be a flight of fancy. So just see where it goes. You don't have to declare your undying love tomorrow...\" \n\n\"Even though I want to...\" \n\n\"Lor, if you got a crazy crush on a guy, you wouldn't make it known immediately, right? You'd scope him out, figure out if there's compatibility...\" Ian got up and grabbed his laptop from his backpack, \"How about we do some web-sleuthing?\" \n\nI nodded as he fired up his computer. He opened up his web browser and struck out the first couple of tries on popular social media sites. Oliver was right about one thing, RJ had no social media presence. Ian tried again, typing 'Rowan Kan gay?' into the search box. Some results came up, as did some images. \n\n\"Woah,\" Ian raised his eyebrows. \n\n\"What?\" I felt apprehensive immediately. \n\nIan pursed his lips, \"You've got good taste, she's hot. Like, Jenny Shimizu hot. But she's got more euro DNA. Oh... uh-oh.\" \n\n\"What?\" \n\nIan pointed at the thumbnails, \"Different date in every shot.\" \n\nWe clicked through the images, and indeed, RJ had a different woman on her arm in every photo. And the women were all stunning. \n\n\"Here's an article about her from a couple years ago,\" Ian had clicked onto a story associated with one of the images. I leaned in and took a look. \n\n\"She was in a 30 under 30 article? Wow!\" \n\nThe article was an uber-flattering piece about RJ's success trajectory. She took two companies from start-ups to lucrative sale targets before she was thirty. I wasn't able to finish the article before Ian moved on, clicking on another more recent article about RJ joining a venture capital firm on the west coast. \n\n\"Hmmm, that was just last year,\" Ian scanned the article, \"So why did she leave?\" \n\nHe adjusted his search terms but nothing came back, \"Let's go back to those multiple girlfriends.\" \n\nWe couldn't really find out any additional information, and I really didn't want to see any more beautiful women next to RJ, so I leaned back and tilted my head and stared at the ceiling as Ian clicked and typed. \n\n\"I never thought it an option to be closeted...\"  \n\nI sat up. It was RJ's voice. \"What's that?\" \n\nIan pointed at his screen, \"An interview she did with the Pride Legacy Taskforce last year. They did a series of videos of out executives around the country. Most of these photos are from the Taskforce galas and dinners over the years.\" \n\nWe watched the rest of the interview, and my eyes clawed at the screen, desperate to connect to the image of RJ as she talked. I found every gesture mesmerizing; I loved the way her mouth skewed slightly left as she smiled; I loved the way she talked. \n\nIan waved a hand in front of my face, \"Are you really into hearing about her being out at work or are you just staring at her?\" \n\nI blinked, \"Was I staring?\" \n\n\"Drooling,\" Ian shook his head, \"I get that she's hot, but why her? You've never been interested in women before!?\" \n\nI held up my hands in surrender. \"I don't know. That's what I'm trying to figure out. It was like a switch was thrown on in my head when I saw her. Is this what love at first sight feels like?\" \n\nIan clucked his tongue, \"Slow down, Lor. This is may be just a crush. It's intense because it's the first blush of attraction. All physical, based on nothing but first impressions. And you're straight! Maybe you won't feel this way once you've spent some time with her.\" \n\nI was a little hurt by how easily he was dismissing this. \n\n\"If you're not going to help me, fine. But don't tell me what I'm feeling is a phase, okay? I mean, what the fuck, Ian, isn't that phrase the standing joke about clueless parents?\" \n\nIan looked stunned, \"Oh man, Lauren, I- I didn't mean it like that. I just don't want to see you throw yourself into something completely unknown... I don't want you to get hurt.\" \n\n\"So de-unknown it for me, you idiot! Teach me the ways. I want to learn.\" \n\nIan squinted his eyes at me, \"Have you lost your mind? I haven't gone near a pair of naked boobs since Tanya Kettler flashed hers at us the summer of whichever grade it was. I still haven't recovered...\" Ian waved his hands, \"But I digress. I can't teach you that stuff!\" \n\nI laughed. Ian had gone six shades of pink as he talked. \"I wasn't talking about sex. I was talking about, oh, I don't even know what I am talking about. Like, how do I hit on a woman without, you know, being off-putting?\" \n\n\"You want to pick up women? What have you done with my best friend?\" \n\n\"I don't want to pick up women,\" I ground out, \"I want to go out with one particular woman, and I want to get it right. Because...\" I pointed to his laptop, \"... she is a total enigma right now, both in terms of who she is and why I reacted the way I did. I mean, Ian, the sight of her stopped everything for me. Have you ever fallen for someone in that way?\" \n\nIan shook his head, \"No, and I certainly haven't fallen for someone who seems determined to go out with a different woman every night.\" \n\n\"Might not be every night,\" I said defensively. \n\nIan shrugged, \"Fair, but all indications point to the fact that she's not a one-woman woman. And don't you go breaking your heart over someone who won't ever fall for you like you've fallen for her. It's a one-way trip to madness.\" \n\nMy stomach twisted uncomfortably. \n\nIan leaned over and gave me a big hug, \"Leave it to you to land neck deep in lesbian drama before you've even kissed a girl!\" \n\nI went limp in his arms. He hugged me tighter, \"Help me get dinner ready, I'll distract you with my dazzling culinary skills.\" \n\nI looked up at him, \"You're having people over for dinner?\" \n\nIan sighed, \"You said you were going to be drowning in work all week. I made plans. Come!\" He gestured towards the kitchen. \n\nIan started pulling out ingredients and utensils. I followed, \"What are you making?\" \n\n\"A panoply of Middle Eastern delights. You, my dear, with your limited skills, can start on the salad.\" \n\nI tried to look annoyed, but I knew he was right. I was a total failure in the kitchen. For whatever reason, any high-functioning multi-tasking ability that I could claim would evaporate the moment I tried to make food. \n\nI picked up a knife and started chopping up the pile of vegetables Ian placed next to the cutting board. Think, Lauren, think. Don't just react. Think.  \n\n\"Help me strategize,\" I said, mostly to myself; I processed things better when I talked out loud. \n\nIan was rattling away on the stove, \"Are you sure you can chop and talk at the same time? I don't want to deal with missing fingers or arterial blood spatter...\" \n\nI threw a piece of chopped red pepper at him, \"You faint at the first sight of blood. You'd be useless. I'd be dead by the time you returned to consciousness.\" \n\n\"Asshole.\" \n\n\"The truth hurts, my friend.\" \n\n\"Yeah, well, so does falling for someone who's one hundred percent not interested.\" \n\nI pointed a cucumber at him, \"Don't make me stick this where the sun don't shine.\" \n\nIan wiggled his eyebrows. I couldn't fight the smile off my face when I realized what I'd just threatened. \"Fuck off,\" I protested, and attacked the cucumber with my knife. \n\nIan shuffled over to inspect the carnage, \"Ouch,\" he whimpered. After a beat, he nodded, \"That's a pretty good dicing job you did. Carry on, Ms. Calder!\" \n\nI rolled my eyes and kept chopping. \n\n\"So what's your strategy?\" Ian slid a red onion towards me. \n\n\"Okay, here's what we know: I have one specific desired outcome...\" \n\nIan poured a bunch of lentils into a pot, \"And that outcome is?\" \n\n\"Happily ever after,\" I said without hesitation. I surprised myself by how clearly I felt that need. It wasn't the typical, knee-jerk boy-meets-girl-white-picket-fence-and-two-and-a-half-kids happily ever after though. It was the for-better-or-worse-richer-or-poorer ever after version. \n\nIan's eyebrows shot up. \n\nI ignored it and kept going, \"However, there are a great number of unknowns, and deep uncertainty of whether RJ would or could share the same desire for said outcome.\" \n\n\"I would say it's actually a deep certainty that RJ wouldn't want said outcome.\" \n\nThat earned him another red pepper in the face. \n\nI sniffed a little as I worked through cutting the red onion. The thin layers of red skin became striations of color as my knife sliced through again and again. That's it!  \n\n\"I got it,\" I looked up triumphantly, \"I got it. I just treat it like a puzzle that needs to be solved one layer at a time.\" \n\nIan handed me a tissue. I blew my nose and warmed to my theme. \"First, I find a way to get as much information as possible. The more she knows about me, and the more I know about her, the easier it'll be to assess and solve for compatibility, commonalities, et cetera.\" \n\n\"You just described what two people with social skills do when they meet each other,\" Ian muttered. \n\nI ignored him and went back to the onion, \"Second, figure out what the big hurdles are and break them down between temporary obstacles and immovable issues. Third, and most importantly... I need to be clear about my walkaway terms.\" \n\n\"You're forgetting one thing,\" Ian washed his hands and wiped them on a towel, \"RJ's a total wildcard. She might not go along with this three-step plan of yours.\" \n\nI gave him a death stare. \n\n\"Actually, I take it all back. You have an amazing plan!\" Ian put on the fakest smile ever, \"Now that's all taken care of, what date should I block out for the wedding?\" \n\nI gave him an appreciative chuckle, and said, in a Boston Brahmin accent, \"Ah, my darling, I predict Nantucket in the Spring...\" \n\nJoking aside, I felt better. I had a plan. Sort of. \n\nLater that night, I laid in bed, my mind still whirring from everything. Ian's feast was delicious, and I loved spending time with his friends, despite the fact that he casually dropped in a request for the lesbians among our guests to help bring me up to speed on girl-on-girl sex. They demurred, but one of them, Jo, promised to send me an email with some stuff she said I might find 'useful.' \n\nHonestly, I didn't need any help. My imagination was doing just fine. \n\nChapter 2: Simmer - Thursday  \n\nThe x-rated fantasies aside, the next several days added encouraging data points to my plan of action. I wouldn't say I was being super flirty with RJ (I didn't want to be too obvious), but I was putting my best foot forward. As it turned out, me not having a gay bat signal didn't matter, because it was clear that RJ and I were definitely going to get along. She was just the right blend of sarcastic and earnest, and we picked up on each other's random quips and obscure references in a way that was deeply satisfying. Not to mention, of course, the fact that she was just delicious to look at. And to my heart's giddy joy, I felt her eyes on me several times, too. Although I might have been reading too much into it. \n\nOn Thursday morning, Ian caught me hyperventilating in our bathroom before work. \n\n\"Did you burn a hole in your scalp curling your hair?\" \n\nI flipped him the finger, \"That was YOU, ass-wipe. You burned a hole in my scalp after yammering on about how you'd done it for your sisters a million times...\" \n\nHe rolled his eyes, \"That was, like, ten years ago. Anyway. What's your problem?\" \n\nI braced myself against the sink and dropped my head, \"I have a three hour one-on-one with RJ this morning. Starts at nine. I'm freaking out... and I look like a mess...\" \n\nIan took a discerning glance at my appearance and gave me a thumbs-up, \"Nah, you look fine. Exactly the right mix of alluring and professional. Not too different from how you usually dress, but different enough to highlight your assets...\" \n\nI blushed a little as I fiddled with the collar of my shirt, \"I was debating whether I'd left too many buttons undone...\" \n\nIan waved away my concern, \"It'd look too obvious if you undid more, but this is good. And your legs are killing it in those pants. Go turn some heads.\" \n\n\"Singular. I just need to turn one head.\" \n\nIan rolled his eyes again and shooed me out of the apartment. My commute to work zipped by in a flash and before I knew it, I was knocking on the door to RJ's office. I knew she was in there; the office was essentially a glass cube. \n\nShe waved me in, \"Morning!\" \n\nI didn't think it possible, but she looked even better today than she did yesterday. Her smile almost undid me. \n\nShe frowned when she saw the massive pile of documents I'd carried in. Her eyes rested on my cleavage for a fraction of a second longer than they should have. I leaned forward a fraction of a second longer than I needed to as I laid the documents on her desk. I winked at her, \"You said you wanted to get caught up. I thought I'd share the pain!\" \n\nShe held my gaze and I promise you I could almost feel my clothes falling off me. At that moment, I heard myself thinking, screw the walk-away terms. If this is how she's going to look at me... \n\nRJ grinned, \"And there I was, thinking that I was just going to cruise through...\" \n\nI gave a chuckle, \"I doubt you've ever allowed yourself to cruise through anything.\" \n\nRJ seemed to appreciate that, \"Okay, fine. So how much pain are you going to put me through? I am fully in your hands... be gentle.\" \n\nI ignored the innuendo, \"Depends. How finely tuned do you need your bullshit sensor to be?\" \n\nShe dropped the playfulness immediately, \"Bring it. I want it all.\" \n\n\"I thought so,\" I nodded my approval and grabbed an old presentation from the middle of the pile, \"Let's start here.\" \n\nFor the next two hundred glorious minutes, I navigated RJ through my research of the firm's history of revenue sharing. She was sharp, no doubt about it. But what I appreciated more was the fact that we were entirely in synch; we were doing an intimate dance through intricate facts and figures and she never missed a step. We'd only known each other for four days, but my shorthand was her shorthand. It felt miraculous. \n\nIt was a little after 12:30 when RJ leaned back and rubbed her eyes, \"I need a break.\" \n\n\"I think we've covered everything I wanted to,\" I threw my pen onto her desk, \"Good job keeping up!\" \n\nOh, she liked that.  \n\nHer wonderful smile returned, \"You did the lion's share of work here. I just came along for the ride.\" \n\nShe looked at her watch, \"How about lunch? My treat.\" \n\nOh, yes, please!  \n\nI tapped my finger on my chin and pretended to think about it, although my grin clearly indicated my enthusiasm. RJ tilted her head as she waited for my answer. \n\n\"Okay,\" I said, \"But if you're going to treat me, I'm going to treat you, too.\" \n\n\"Not sure how that's going to work,\" RJ's head shifted inquisitively, \"But you've got a deal.\" \n\nTurned out it worked perfectly. We strolled down to the Food Court on the ground floor of our building and, agreeably, we both indicated the same preference for the taco bar. We scanned the menu and ordered the same thing. We paid for the orders, and then exchanged take out bags. \n\n\"My treat,\" I said, as I handed mine to her. \n\nShe laughed and handed me hers, \"And here's my treat.\" \n\nI was blissfully and totally content in that moment. We walked back up to Win-B and returned to her office. \n\nI moved my notes out of the way, but I pointed to them as she sat down, \"Do you want me to turn your changes in the model for tomorrow? I think I can get it done.\" \n\nRJ unwrapped her lunch, \"Nope, take your time. I'm headed to DC tomorrow - Mona's LGBT non-profit is doing its annual gala... I'm doing a panel thing for her. We can pick this back up on Monday.\" \n\n\"Oh - the PLT - what a great organization!\" I smiled, \"It's so good that kids can have role models like you... that visibility is important.\" I remembered how hard it was when Ian struggled with his coming out, and we were already in a better place than even ten years earlier. \n\nRJ's head snapped up, \"You know the PLT?\" \n\nMostly because of that video they shot of you.  \n\n\"My best friend's gay; the last guy I dated was bi. I've been to a lot of Pride events,\" I explained, and - maybe it was wishful thinking - I saw RJ's eyes register disappointment. My heart skipped a beat. I continued, \"Didn't go down well with his gay friends when we started dating. They thought he was being a traitor to the cause.\" \n\nRJ cocked her head thoughtfully as she finished chewing, \"Seems so hypocritical.\" \n\nI think I could watch RJ chew on food for days and not get bored. Her jawline was a fucking orgasm in the making. \n\nI nodded, \"Andy said it was less about 'love is love' and more about having one fewer ally in the ranks or something like that.\" \n\n\"Did he rejoin ranks?\" RJ's curiosity was beyond cute. \n\nI shrugged, \"Don't know. He moved to Salt Lake. We broke up on good terms, but there wasn't much incentive for us to keep in touch. C'est la vie.\" \n\nRJ wiped her mouth, \"That's why I don't do relationships.\" \n\nOh.  \n\nMy eyebrows crunched up, \"What do you mean you don't do relationships?\" \n\n\"Because they end. Well, first, they get complicated... then they end. I'm no good at them, and they're no good for me. So, I generally just date and have fun... but I never expect anything to work out.\" \n\n\"That seems incredibly fatalistic... \" \n\nRJ rubbed the back of her neck, \"I think of it as being realistic. Romance is some lofty ideal that belongs in the pages of a novel. In reality, relationships lose their shine once the romance wears off.\" \n\n\"Not all of them.\" \n\nRJ looked at me carefully for a second. It looked like a sentence was fighting to get out. \n\nI squinted at her, \"You disagree, obviously...\" \n\n\"I do. In my experience, chasing after the notion that love conquers all can be futile.\" \n\nWhat kind of eff-ed up relationships have you been in?  I let out a slow breath, \"Abandon hope, all ye who enter here...?\" \n\n\"Nothing that dramatic,\" RJ's tone was gentle, but I heard the edge behind her next sentence, \"I have fun and I move on. Simple.\" \n\nThere were about a thousand raunchy and suggestive things I could have replied with, none of which was appropriate for a work conversation. \n\nI decided to lob out my first test probe, \"You gotta go with what works, I guess...\" I paused as I dug for a chip, \"Maybe I've been lucky with relationships, but I have faith in romance and I buy into the idea of a soulmate. You know, a person who just gets you and wants you... in the same way that you get them and want them.\" \n\nRJ crumpled up her paper wrapper and side-armed it at the trash can across the room. It hit the wall and went in. Of course it did.  \n\n\"How did we get on to this topic?\" She asked - a little grumpily. \n\n\"You told me you were going to DC.\" I replied. I crumpled up my taco wrapper and lobbed it towards the trash can. She shoots, she scores!  \n\nRJ's beautiful left eyebrow went up, \"I bet you can't make that shot again with the paper bag.\" \n\n\"Challenge accepted; what do I get for making the shot?\" \n\n\"Lunch on Monday. On me. For real this time.\" RJ crossed her arms and leaned back in her chair. \n\nI mashed the bag into a ball, \"Burning a hole in your wallet... as we speak...\" I turned and made my shot. It hit the rim of the trash can and fell in. ",
        "\"Baller.\" \n\n\"Free lunch. It's a good incentive.\" I pointed at her paper bag, \"Now you. I buy you lunch Tuesday if that goes in.\" \n\nTwenty minutes later, we were still launching random shit into the overflowing corner trash can and cracking ourselves up. I was ahead by a couple of shots when RJ stood up to attempt a shot with a lucite deal-toy. Just at that moment, Mona walked past outside. She did a double-take and came into the office, \"Having fun, ladies?\" \n\nThe look on her face was one of cautious amusement. \n\nRJ tossed the lucite cube between her hands, \"Lauren doesn't think I can sink this without hitting the wall or the rim first.\" \n\n\"What's on the line?\" Mona leaned against the door frame. She looked between me and RJ with interest. \n\n\"World peace,\" I snarked. \n\nRJ guffawed, \"Hardly. But it's probably me buying her lunch, uh... what is it now? Twice?\" \n\n\"Three times; remember you missed with the stapler,\" I loved that I made her laugh. \n\nMona shook her head and pointed at the glass wall behind the trash can, and then at the lucite in RJ's hand, \"You break it, you're buying me a new wall, Kan.\" \n\nRJ hesitated for a second, and to my surprise, she put the lucite down. I was about to tease her for wimping out when she picked it back up and threw it. \n\nThe three of us followed the arc of the deal-toy as it sailed across the room, hit the wall with a BONG!, causing it to wobble dangerously, before settling with a thump in the trash can. \n\n\"Show off,\" Mona tsked. She looked at me, \"Lauren, once you're done helping RJ destroy her brand new office, can you swing by? I want to talk about some other stuff I'd like you to work on.\" \n\nI nodded. Mona smiled and turned to leave. She stopped herself mid-step and gestured towards the trash can, \"Nice shot.\" \n\n\"Didn't count,\" I reminded RJ after Mona left, \"Challenge was to make a clean swish.\" \n\n\"Worth it though - now we know the wall is pretty strong.\" \n\nA replay of my fantasy flashed in my brain, you know, the one of RJ pushing me up against the wall and kissing me senseless. I had to close my eyes for half a second to absorb the force of the vision. I may or may not have moaned. RJ didn't seem have noticed, because she changed the subject with her next question, \"How long are you here for?\" \n\n\"Huh?\" \n\n\"Mona said she wanted to talk to you about stuff to work on - how long are you here for?\" \n\n\"Oh,\" I shrugged, \"Standard ten to fifteen weeks.\" \n\n\"Seems so short!\" \n\nI raised hands, \"I'm very, very good at scoping out parameters for a project. I've never missed a deadline.\" \n\n\"So you have something lined up after this?\" \n\n\"There's a repeat client who always wants me to help out around October when their fiscal year closes, but I was thinking of taking a long summer break. So not really sure.\" \n\nRJ's eyes flashed, \"So how are you and I different? You go from gig to gig - you obviously have it in you to be a total rock star in a place like this, but you choose to flit around, dipping your toe into projects and ducking back out... same difference!\" \n\nTest probe initial result: SUCCESS. Something about that commitment conversation got its hook into her.  \n\n\"Good try, Ms. Finance whiz, but no dice: this is WORK. We were talking about life... and love. It's totally different.\" \n\nRJ waved a hand dismissively, \"It's about commitment. Same thing.\" \n\n\"Not really. But if you want to argue over this, I'll tell you why it's different. First, again, it's work. Second, this is what I want to be doing right now - I'm getting to see a broad spectrum of stuff and it's really challenging and interesting. Third, and here's the biggest difference, if I find a job that I think I'm going to really love, I would have no problem jumping in with both feet.\" \n\n\"Hey, I'm seeing a broad spectrum of people, and it's challenging too, so there.\" \n\n\"Yeah, but RJ, if the right person came along, it sounds like you don't even want to contemplate the possibility of it working out.\" \n\n\"Because it won't.\" \n\nI launched another test probe, \"I'm sorry you think that. I really hope you change your mind one day.\" \n\nRJ's expression was hard to read. I took it as a win. \n\nI picked up my stack of papers and my notebook, \"I'm going to see what Mona wants. If I don't see you later, have fun in DC.\" \n\n\"Thanks for lunch,\" RJ said, the smile was back. \n\n\"I'm going to get a good return for it - I think you owe me four more lunches than I owe you.\" \n\n\"Three.\" \n\nI shook my head, \"You missed with the stapler, the highlighter, the headset, the binder clip, the ruler, and the lucite. I missed two - the mouse and the sharpie.\" \n\n\"Lucite went in!\" RJ protested as I walked out. \n\n\"Didn't count,\" I said over my shoulder, \"Bye RJ...\" \n\nI willed myself not to look back. I hoped she would insist on getting the last word... and she did. Just as I was about to turn the corner towards Mona's office, I heard her say, \"Hey, Ellie!\" \n\nI raised my eyebrows as I turned, \"Ye-e-e-s?\" \n\n\"I want a rematch,\" RJ's eyes twinkled. \n\n\"Fine, but it'll have to be higher stakes than lunch.\" \n\n\"Like what?\" \n\nI shrugged, \"I'm sure you'll think of something.\" \n\nI flashed her a smile and continued walking. I still had the smile plastered on my face when I knocked on Mona's door. \n\n\"What are you smiling about?\" Mona sorted through some presentations on her desk. \n\nI dropped my pile of documents onto the floor next to my chair, \"Oh, RJ's being a sore loser. She wants a rematch.\" \n\n\"I'm not surprised.\" \n\nI nodded, \"Just don't tell her I played varsity ball in college.\" \n\n\"I didn't know that! I did too - what position?\" \n\n\"Point Guard.\" \n\nMona pointed at herself, \"Center. More the tallness than anything.\" \n\nI smiled, \"For me it was the shortness and the three-pointer. I was the only one who was five-seven on the team - everyone else was at least five-ten.\" \n\nMona laughed. She didn't say anything for a couple seconds, and then she propped her chin on her fist, \"If I made you an offer to be a Managing Director on the Finance team, would you take it?\" \n\nNow that I was not expecting. \"Uh,\" I felt myself getting flustered, \"I don't know, I don't think so. But... wait, are you making me an offer?\" \n\nMona sighed, \"I have some blind spots in Finance and Strategy. I brought in RJ to help build it up. Jared is leaving at the end of the year, and Oliver is still too green. Every project you've done with us has been amazing... and RJ thinks you walk on water... and that almost never happens.\" \n\nShe thinks I walk on water??!!  \n\nMona kept talking, but my mind was replaying that sentence fragment again and again. \n\n\"...so think about it, okay?\" Mona finished. \n\n\"You've caught me off-guard,\" I admitted, \"I honestly don't know if this is for me - I like the diversity of working in different contexts with different teams, I always have. I'm flattered, of course, and I love working with RJ too, but...\" \n\nMona looked at me for a moment, like, really looked at me. I felt my neck flush, followed by my face. \n\n\"Oh, be careful there, Lauren.\" She shook her head. \n\n\"Huh?\"  Oh my god, she saw through me.  \n\n\"RJ.\" She said simply. \n\nI narrowed my eyes, \"I shouldn't like working with her? Why? Is she an asshole or something?\" \n\nMona was quiet again, \"No. I think the world of her. She's just, um, difficult outside of the work context.\" \n\n\"Oh,\" I waved a hand casually, \"She already told me that she doesn't do relationships... After I told her about an ex-boyfriend who moved to Utah.\" \n\nMona looked relieved, \"Oh!\" She laughed self-consciously, \"Wow. Okay. I totally caught this major flirty vibe in her office just now. Okay, I read it all wrong. Wait, she just came out and told you she didn't do relationships?\" \n\nOh shit, our chemistry was THAT obvious? I was equal parts titillated and mortified.  \n\nI nodded, \"Yeah, she talked about not wanting complicated entanglements.\" \n\nNow Mona looked totally surprised, \"RJ... RJ gave you her take on relationships?? Really?\" \n\n\"Why's that so hard to believe?\" \n\nMona leaned back and shook her head, \"Because she never talks about personal stuff. Ever. But she did with you. It goes against... well, everything. It's totally out of character.\" \n\nHow interesting...  \n\n\"I was talking about a break-up, she replied by telling me she doesn't like relationships. It didn't seem strange... just kind of, you know, sad that she doesn't buy into romance or love...\" \n\nMona smiled; her eyes were sad, \"There's some history there... and she's stubborn as hell. There's a group of us who try and play matchmaker for her. She's a good sport about it, but I've never known her to get into a serious relationship with anyone. And she's always kept her personal life personal... but apparently not with you. Which is good, I suppose.\" \n\n\"Hm,\" I said as neutrally as I could. \n\n\"Did she tell you anything else about herself?\" \n\nI shook my head, \"No... but... do you know why she left Broad Peak Ventures?\" \n\nMona leaned forward in her chair, \"You've been reading up on RJ?\" \n\n\"It's the digital age, Mona, everyone does a little web-stalking before meeting someone new.\" \n\nMona gave a wry smile, \"Are you saying I'm old?\" \n\nI opened my mouth to protest but she cut me off, \"Relax, I'm teasing, although I'm almost fossilized compared to you... So... on BPV - I'll leave RJ to give you the full back story, since she seems to be spilling the beans these days - but it was a combination of a personal decision she had to make, and me asking for her help here.\" \n\n\"Have you known her long?\" \n\nMona nodded, \"She's a good friend. She'd move mountains to help me if I needed her to...\" \n\n\"So it's not like she doesn't know how to have relationships,\" I mused. \n\nMona did a double take and pointed at me, \"I KNEW IT! You guys were flirting in there!\" \n\nI hate it when I think out loud.  \n\nI shook my head emphatically from side to side, \"Mona, I have no idea what was going on in there. I don't have a clue when it comes to flirting with women. Or women flirting with me. Seriously. I just like spending time with her. I'm... drawn to her. We click. And I like that.\" \n\nMona sighed, \"I'll say it again. Be. Careful.\" \n\n\"A straight girl and a gay girl can't be friends?\" It was weak, but it wasn't entirely a lie. After all, this whole thing is still just a story I made up in my head. \n\n\"Of course they can,\" Mona said, \"But the vibe I got just now between you two was not a friend vibe.\" \n\n\"Are you saying RJ's interested in me?\" Hey, might as well just put it all out there. \n\nMona tilted her head contemplatively, \"That would be a benign way of putting it. The truth is, if she was flirting with you - and I think she was - it means she sees you as a challenge. A conquest.\" \n\nOh, that sounds soooo incredibly carnal and delicious.  \n\n\"And once she gets what she wants, she'll move on.\" Mona's tone was flat. She rubbed her eyes, \"That's why I'm telling you to be careful. Go have fun. But don't expect anything more. Trust me.\" \n\n\"I do. Thanks, Mona.\" I started picking up my stuff from the floor. \n\n\"...and think about my offer... although in light of whatever is going on between you and RJ, you might find it easier to not be anchored here.\" \n\nThat was big of her. I nodded, \"I'll think about it... All of it. Have fun in DC this weekend!\" \n\nChapter 3: Low Heat (Ten Weeks Later) \n\nI decided to respectfully decline Mona's offer. She understood and, amazingly, told me I could change my mind at any point. \n\nRJ and I got closer. Nothing explicit has happened, but we were closer; more familiar with each other, physically and emotionally. She'd nudge me with her shoulder if I teased her about something as we walked to a meeting; I would swat her arm playfully if she made an off-color remark. We each picked lint (imaginary and otherwise) off the other's shirt or jacket. We were both casual about these encounters, but those micro-moments of attention were thrilling to me. But I never pushed. I was feeling the thrill of our gentle flirtation as much as I imagined RJ was. \n\nThe limited time I had left at Win-B magnified everything that much more. Two weeks from my end date, Mona sent me to the London office to meet with the team there on the new fee sharing model. \n\nThe team in London was small, headed up by Peter Brown (the other co-founder) with about two dozen people spread across functions. One of them actually went to college with Ian - so it was nice to see a friendly face. It was the UK team that first pushed for a revamp of the model, and it wasn't hard to get them on board with the proposal that RJ and I put together. They had some great comments and were such great hosts it made the week pass quickly, which was good because I missed RJ so much it hurt. She must have missed me too; she'd send emails or texts with observations and funny one-liners about things that were happening in New York... I would respond, and we would have these marathon text exchanges that often made my face hurt because I was smiling so much. \n\nThe morning after my flight back was a vortex of stress, jetlag, and nervous energy. Ian found me panicking in the bathroom again, this time because I realized that I'd run out of disposable contact lenses. \n\n\"Here,\" he handed me my glasses, \"Go for the sexy librarian look.\" \n\nI put them on and looked at myself in the mirror, \"Definitely not sexy.\" \n\n\"Wear your hair down.\" \n\nI complied. It was a little better, I thought. \n\nIan pursed his lips and slowly nodded, \"It works. Michelle Pfeiffer-ish... in 'One Fine Day'.\" \n\n\"What?\" \n\n\"It's a mid-nineties movie about a mid-nineties romance in mid-nineties NYC. But you've always had a Michelle Pfeiffer kind of vibe... but with more boobage.\" \n\nHe'd lost me - I considered Hollywood sirens to be a breed of their own - but if he said I was making it work, I wasn't going to doubt him. Poor Ian. He was like the begrudging coach of a novice ultra-marathon runner. Just encouraging enough to be supportive, but I knew 'you are out of your freaking mind' was ready to leap off his tongue at the slightest opportunity. To his credit, he willingly absorbed my volatile psychic energy and kept me from going insane. After all, nothing has happened. I've just extended the torture of the elaborate fantasy I'd woven in my head. \n\nHe wished me good luck and I found myself sitting in my cube thirty minutes later, wondering how and when I would lay eyes on RJ. I couldn't really see the office entrance from my desk, so I just stared stupidly at my computer and willed myself to not act like a lost puppy wandering the halls of Win-B. \n\nBy 9:30, I couldn't sit still any longer, so I got up and headed to the pantry to get myself a cup of coffee. \n\nI rounded the corner and there she was. Seeing her made the world come back into focus again. \n\n\"Hey! Welcome back!\" RJ walked towards me. \n\n\"Thanks! I need an RJ hug,\" I didn't know why I said that. We'd never hugged before. But she opened her arms and I burrowed right in. It felt more perfect than I'd ever imagined. \n\n\"What's with the glasses?\" \n\nUgh, the glasses. Of course. I turned away and went into the pantry, \"Ran out of contacts,\" I mutter. I started to fill a paper cup with coffee. \n\n\"Milk?\" RJ opened the fridge. \n\n\"Uh-huh,\" I nodded. And that's when it happened. RJ handed me the carton of milk and I reached for it. Our fingers overlapped. Zing! We both just let the connection hold. It was an extra half a second, but it felt like I was holding her hand in a sun-dappled meadow. \n\n\"Thanks,\" I poured the milk in, and she offered to put the carton back in the fridge. Again, our fingers met - zing! - and again, wordlessly, we luxuriated in the touch. \n\nRJ closed the fridge door and leaned against it, \"I like you in glasses. Why don't you wear them more often?\" \n\nI put down my coffee and shot her a look of disbelief, \"Because I look like a dork.\" \n\nMona walked in at that moment, \"Good morning, people...\" She started pouring herself a cup of coffee. \n\n\"You don't look like a dork, you couldn't possibly look like one,\" RJ said, as if Mona wasn't even there. I could feel Mona trying to get caught up as she looked between me and RJ. \n\nI attempted at a derisive snort, \"Yeah, right.\" I turned and walked out of the pantry. \n\n\"Ellie.\" \n\nI looked back at RJ, who was holding my coffee. Shit. I forgot the effing coffee. \"Oh, right. Thanks, RJ.\" Once more, our fingers found their way to each other. Maybe we should just spend the rest of the day handing things to one another.  \n\nMona was now looking at me with a bemused smile. \n\n\"So!\" she said brightly, \"How was the London trip?\" \n\n\"Went well,\" I said, \"No surprises, everyone bought into the new model. I think the only question they had was about reporting, but that won't be built out in the accounting software until the end of the week.\" \n\nMona bumped her coffee cup against mine, \"Nice job! We're going to miss you around here!\" \n\n\"Not leaving yet... and you guys still have to do the management committee meeting, but thank you! I'm glad we got to a good result.\" \n\nMona smiled, \"Me too. Let's schedule some time to do some prep before the Committee meeting.\" She gave me a wink and nodded at RJ before walking back to her office. \n\n\"When's your last day?\" RJ fell in step with me as I headed to my desk. \n\n\"Next Wednesday.\" \n\n\"I don't want you to go.\" \n\nWhoa.  \n\nI tried to respond as lightly as possible, so I took a sip of my coffee, \"I'm going to miss you too, RJ. And it doesn't have to be good-bye.\" \n\n\"Really?\" RJ smiled. \n\nI nodded, \"Sure. You can find some other seemingly intractable issue for me to solve and I can charge you lots and lots of money for solving it.\" \n\nRJ made to say something, but she closed her mouth again. \n\n\"What?\" \n\nRJ shook her head, \"I was going to make a stupid comment. Ignore me.\" \n\nI couldn't if I tried...  \n\nI shrugged, \"Fair enough.\" \n\nWe stood and looked at each other for a moment. I think we could have kissed. But we didn't. I knew I held back because I didn't want it to happen at work. Maybe she felt the same... maybe not. But she had this unmistakably hungry look as she gazed at me and I went all wobbly inside. For me, it wasn't whether we were going to kiss anymore; it was just a matter of time. \n\nEvery subsequent day escalated the degree of intimacy just a little more. She'd look at me and I'd bask in the attention of her eyes as I felt them move down to my lips, over my neck, and over the profile of my breasts. My eyes were no less greedy; they traced over every facet of her face, her shoulders, the gentle ridges of the muscles in her forearms when her sleeves were rolled up, and her fingers, strong and straight. I loved her habit of re-tucking her shirt into her pants, because I could feast on how - as she shoved the back bits in - her shirt would stretch across her nipples. I'd never obsessed over anyone's torso before, but I wanted to see RJ's. Hell, I wanted to see, touch, and get my mouth on all of RJ. \n\nMore often than not these days, I'd wake up in the middle of the night with my hands and fingers struggling to approximate the satisfaction that I was craving from her touch. I didn't need reference material on how to have sex with a woman... my dreams were an unending movie reel of me and RJ having sex everywhere. \n\nThe electric energy I felt between us pulsed with increasing insistence. I felt like we found our own little wrinkle in the larger cosmic-psychic-ethereal realm where we co-existed in total synchronicity. I was in love with her, and I sensed she felt the same, but I didn't dare ask; I couldn't bear the very high likelihood of her telling me that my feelings would not be reciprocated. ",
        "So we tumbled along, our magnetic affinity for each other drove us to find ways to spend time together. Thankfully, our work provided us ample opportunity to do so: we had an endless list of to-dos as we prepped for the final phase of the project - it was as much her project as mine now; we'd worked so seamlessly together on it. \n\nThe night before the Management Committee meeting, RJ and I were in her office, going over the model's distribution of outcomes in what felt like the millionth Monte Carlo simulation we'd run. Mona had some eleventh-hour questions and changes which meant another go at everything we'd set up. I wasn't complaining, and neither was RJ. We ordered sushi for dinner, during which she playfully admonished me for my lack of chopstick skills. Now, the remnants of the dinner were set to one side and we were eyeballing a before-and-after of our sensitivities analyses, both of us muttering numbers under our breath as we shifted from one table of outputs to another. \n\n\"Maybe a hundred basis points. Not really significant.\" RJ frowned. \n\n\"It is if you're thinking about compensation - especially for the bigger earners around here.\" \n\nRJ exhaled loudly, \"Why are you saying that? Now we have to do more work!\" \n\n\"I'm a sucker for punishment. Come on RJ, you'd feel like they caught you with your pants down if you went into the meeting tomorrow with a one percent gap. Let's just finish this up.\" I went over to her seat and sat down in front of her computer. \n\nRJ leaned over my shoulder as I reset the model and parameters for the simulation. \n\nI waved her off, \"Stop breathing over my shoulder, I hate it when you backseat drive.\" \n\nRJ chuckled, \"What you're saying is, you're a control freak.\" \n\n\"That too. Now shut up and let me focus on this.\" \n\nI'd fiddled with this model so many times I knew the prioritization of assumption variables off by heart. Now, I checked them off one by one in my head. \n\n\"Oh shit, RJ, we locked in inflation and never unlocked it. That must be why.\" \n\n\"When did we do that?\" RJ had moved back over to the coffee table, where our mess of a dinner was sitting. \n\n\"Remember when Mona had a minor freak out about the thing this morning? We locked inflation for the worst case scenario.\" \n\n\"Oh my god. We're such idiots. Yep, that must be it.\" \n\nAs the simulation got cranking, I leaned back and watched the distribution chart change as the outputs were tabulated. \n\n\"Why did you say 'no' to Mona's offer to work here?\" RJ suddenly asked. She started cleaning up our dinner. \n\nI was wondering when this would come up.  \n\nI sighed, \"It's just not the right thing right now.\" \n\n\"When will it be the right thing?\" RJ picked up her nameplate from the pile of dinner debris and wiped it off with a napkin. \n\nI pretended not to hear the question, \"I can't believe you used that to cut the cookie.\" We'd decided to split an oatmeal raisin cookie as dessert, but we didn't have a knife (because we ordered sushi and the chopsticks weren't any help). Neither one of us wanted to go to the pantry so she used her nameplate instead. \n\n\"We got two pristine halves,\" RJ slid the nameplate back into the bracket, \"Trust me, doing it by hand would have been messy - those cookies are deceptively gooey and hard to tear up.\" \n\n\"Instead, you decided to use your nameplate, which has been collecting dust for two months.\" \n\n\"Better than using the ruler... no-one's touched that nameplate.\" \n\n\"I have,\" I said, \"I was the one that put it up there the day you started.\" \n\n\"Really?\" \n\n\"Yup. Davina was chasing down IT for you, so she had me do it.\" \n\n\"Well, thank you very much... belatedly!\" \n\n\"What does the 'J' stand for?\" \n\n\"Oh, uh, Joyce. It stands for Joyce.\" \n\n\"Rowan Joyce Kan...\" I let that echo in my head for a bit, \"Wouldn't have pegged you for a Joyce.\" \n\n\"Joyce is my mother's last name,\" RJ explained. \n\n\"Oh, I get it. That's nice it's part of your name. Joyce - that's an Irish last name, right?\" \n\n\"Right. But her family's been in the US for generations. She... uh... died when I was young...\" her voice trailed off. \n\nI sat up, \"RJ, I'm so sorry.\" \n\nShe waved her hand, \"No, no, it's okay. I added her last name as my middle name so it could be together with my dad's last name. They never got married because her family didn't approve of their relationship. They flipped out when she got pregnant with me. She was much younger than my dad. After I was born, her parents visited... and I don't really know what happened, but she left. Then she passed away. Dad doesn't like to talk about it.\" \n\n\"Your mom's family didn't approve of the age gap?\" \n\nRJ's face took on a hardened, angry look, \"No, they didn't approve of him being Chinese.\" \n\nI was stunned. \n\n\"Yeah, fuck 'em,\" RJ said with venom. \n\n\"How old were you?\" \n\nRJ scrunched up her face, \"Uh, six months? Maybe? I don't remember her at all. Her family keeps sending us Christmas cards with these vague offers of getting together. A day late and a penny short, as they say...\" \n\nThe tragedy of the statement rocked me to the core. The casual manner with which RJ delivered the information broke my heart. \n\n\"Is this why you said that 'love doesn't conquer all'?\" \n\n\"Eh, maybe... I don't know...\" \n\nAll I wanted to do at that moment was to hold her to me and convince her otherwise, but I remained seated. My eye caught a photograph she had on her desk. I'd never sat in her seat before, so I'd always just seen the back of the frame. \n\n\"Is this your dad?\" I pointed at the photo. \n\nRJ smiled, \"Yup. That's him and me after we sold our little pharma company back in the day.\" \n\n\"That must have been cool!\" \n\nRJ nodded, an infectious grin spread on her face, \"It was all dad's work. I was helping with the books while I was in b-school. The whole thing kind of took off: we were eventually bought out by Kovar. It's now part of one of the biggest bio-techs in the country. Dad retired and went into pharma-consulting.\" \n\n\"A consultant! He's a man after my own heart!\" I quipped. \n\nRJ arched an eyebrow, \"He's too old for you... and he doesn't date.\" \n\n\"The apple doesn't fall far from the tree...\" \n\nRJ grimaced. \n\nI instantly regretted the snarky comment. \"RJ, I didn't mean to be flip. I-\" \n\nRJ held up her hand, \"No, it's okay, I can see the irony. You know, the funny thing is, to this day, my father refuses to say a bad thing about mom leaving. He won't talk about what happened, but he insists it wasn't her fault.\" \n\n\"He loves her. She loved him. They must have had some understanding - no matter how fraught it was - before she left. I think it's quite noble.\" \n\nRJ gave a short bark of a laugh, \"Trust you to see the romance in this. I think of it as a cautionary tale.\" \n\n\"RJ, it's just risk and reward. You won't ever get a return without taking some risk. Same with love.\" \n\n\"Didn't work for my parents though, did it?\" \n\n\"Look, I don't know what happened, but it's clear they had love. As in the real deal. They had you! And you obviously buy into it because you honor their love every day with your names. I seriously don't believe your 'I'm bad at relationships' schtick.\" \n\n\"My track record sucks,\" RJ looked at me earnestly, \"I haven't had a relationship last longer than a couple of months.\" \n\n\"Why not?\" \n\nRJ lifted her hands, \"I dunno... I lost interest... They lost interest...\" \n\n\"What holds your interest?\" \n\n\"What are you, my shrink?\" \n\nNo... Just someone deeply invested in your answer...  \n\nI shook my head, \"Hmmm... definitely not... I'm a colleague... A friend...\" \n\nRJ's eyes widened briefly as I said that. \n\n\"Okay 'friend', what holds my interest is how a person thinks... because it means conversations never get old. I'm interested in strength... strength of character, of purpose... I'm interested in someone who's interested in me... beyond the career, or savings account, or investment portfolio...\" \n\nCheck. Check. Check. I think she'd say I was three for three... \n\n\"Those all sound reasonable, so...\" I noticed the model was done running. I hit 'print'. \n\nI picked up the printout and walked over to her, \"So... maybe you just haven't met the right person...\" \n\n\"I've been thinking that too, actually...\" RJ blushed when she saw my look of shock. \n\nWHAT?  \n\nI backed up a couple of steps in mock horror, \"Is Rowan 'I think romance is stupid' Kan contemplating love?\" \n\n\"It's complicated... um, it's... forget it,\" RJ pointed at the printout, \"Let me see that.\" \n\n\"Wait, wait, wait,\" I said as I held the piece of paper away from her, \"You've met someone?\" \n\n\"Yes... I mean, no...\" RJ looked adorably shy, \"It doesn't matter, it has, like, a one in a million chance of happening.\" \n\nWe stared at each other. I was so distracted by what she just said that I let her take the sheet of paper from my hand. I was suddenly wracked with doubt. Oh my god, what if I'm not the person she's talking about?  \n\n\"Nine bips.\" I blurted out. Yeah. Good job, Lauren. Way to change the subject and stomp on a moment.  \n\nRJ blinked, \"What?\" \n\n\"Fixing the inflation thingy. We got the gap down to nine basis points.\" \n\n\"Oh,\" RJ's eyes scanned the table, \"Yep, that did the trick.\" \n\nIt was back to business. RJ and I talked through a couple other sensitivities. I tried not to kick myself repeatedly for completely whiffing on the window of opportunity RJ gave me. \n\n\"I think you are ready!\" There was nothing else I could say, it was time to wrap up. \n\nRJ smiled, \"I think I am.\" \n\n\"You'll knock it out of the park tomorrow. I know you will.\" \n\n\"Thanks.\" RJ sat down in front of the computer, \"I'll update that one slide and send it to the printers.\" \n\n\"You sure? I can do it if you want.\" I was scrambling for ways to extend our time together, but she didn't bite. \n\nRJ gave me a quick salute, \"No need. I wish you could come to the meeting with me.\" \n\n\"You're the Finance Director - this is all you. I just got things set up. And most folks get turned off by consultants...\" \n\n\"I don't.\" RJ looked at me. It happened again: it felt like her eyes made my clothes fall off. \n\nI stared at her, not sure what to say next. \n\nRJ looked down and started shuffling papers on her desk, \"Uh, anyway. Uh, can I take you out to dinner tomorrow? As a thank you?\" \n\nI shook my head. Her face fell. I rushed to explain, \"Can't. Remember Mona is hosting good-bye drinks for me before my last day?\" \n\n\"Right,\" RJ hung her head, \"I forgot. Well, I can thank you at the thing. Buy you a beer or something.\" \n\n\"Deal,\" I grinned, \"See you tomorrow first thing?\" \n\n\"You got it.\" \n\nChapter 4: Medium Heat (The Next Evening) \n\nIf anything, RJ telling me about her family gave me a better understanding of what was going on in her head and basically made me fall for her even more. Ian kept trying to temper expectations; and it wasn't entirely wrong of him... the way I gushed about RJ was off-the-charts cheesy. But the heart wants what the heart wants, right?  \n\n\"Remember,\" he said for the hundredth time, \"there might be a huge gap between the fantasy RJ and the real RJ... and if you are going to make a move tonight, just remember that. It's not guaranteed to be rainbows and unicorns or mind-blowing sex.\" \n\n\"Why are you saying all of this? Have a little faith in our chemistry. And go finish putting your clothes on, we need to leave in, like, a nanosecond.\" \n\n\"I'm saying all this because you have no idea what you're walking into! RJ is like the paragon of perfection right now and you know that can't be true... and then if you get hot and heavy at some point it's going to be obvious that it's not like straight sex... and you are - well, let's be honest - a total novice.\" \n\n\"Sex is sex, and granted, I may have to re-orient things somewhat, but...\" I squeeze my eyes shut, \"Jesus, I'm not going to just jump on her, you know, I'm going to at least see if this was just a fun office flirtation. She might have moved on already.\" \n\n\"Part of me kind of wants you to jump on her and be done with it. It was more fun when we checked out cute boys together,\" Ian flashed me his cheeky smile. \n\nI hugged him, \"Thank you for keeping me sane. Now that RJ and I aren't working together, it's going to be a little harder for me to rein this all in. Ironically, trying to stay out of the office rumor mill helped me not do anything rash. Are you ready?\" \n\nIan put his shoes on, \"Wingman extraordinaire reporting for duty! Ready as ever.\" \n\n\"You just want to hang out with Jared.\" I wiggled my eyebrows. Ian met Jared, a VP on the Finance team, earlier on during my stint at Win-B when he came to meet me for lunch one day. \n\nThe tips of Ian's ears went slightly pink, \"He looks like Prince Harry, except he's American... and gay... and you know I kind of have a thing for his Royal Highness.\" \n\n\"Just behave yourself. Both when you meet RJ, and when you get within tonguing distance of Jared.\" \n\nIan looped his arm through mine and we headed out. The party was at a bar in TriBeCa, and Mona had booked us the private room downstairs. Mona gave me a huge hug when we arrived, and I thanked her profusely for hosting the event. She congratulated me on a job well done - the Management Committee meeting went well and the proposal was approved. I loved it when I manage to help a client figure out a difficult problem. Win-B was the only one that threw me a farewell party though! There were maybe thirty-some people there, from a mix of departments at the firm. I felt so flattered that they all turned up for me; it definitely upped the guilt factor of me saying no to Mona's job offer. \n\nRJ was nowhere to be seen, and I suddenly panicked with the thought of not seeing her at all. Thankfully, introducing Ian to everyone there kept my mind off RJ, and I soon found myself in a rousing conversation with Davina and Oliver about the merits of taking the B or D subway to work from Brooklyn versus the N or Q. I used to live in Brooklyn, so I had some skin in the game, but before I could really cast the deciding vote, Ian nudged me. It was close to eleven at this point, and I'd pretty much assumed RJ would be a no-show. But when I looked up, my eyes homed in on a figure by the door. \n\nIt was like a scene from a high school play, where you would hear two pops and a single beam of light would stream down on the star of the show. RJ was bathed in the proverbial spotlight of my gaze. She must have gone home and changed, because she was now in jeans and a sleeveless T-shirt and holy hell my eyeballs exploded. Even Ian, my stoic, objective Ian, muttered, \"Fuckin' A!\" \n\n\"I know,\" I said quietly. \n\n\"Look at those guns,\" Ian's eyes were wide, \"You didn't tell me she was ripped.\" \n\nI shook my head, \"I've never seen her arms before. I've never seen her out of a suit before.\" Well, except when she's completely naked in my dreams. It made me realize how little I knew about RJ's life out of the office. I mean, she's talked about her friends and other non-work related stuff, but I didn't know that she worked out! If that's what her arms looked like, what did the rest of her look like? \n\nRJ came straight towards us, \"Hey!\" She looked at me and Ian and gave me a big hug, \"Sorry I'm late.\" \n\nHome.  \n\n\"This is my best friend Ian,\" I introduced the two when I reluctantly broke from her embrace, \"Ian, this is RJ, Director of Finance at Win-B.\" \n\n\"Nice to meet you,\" Ian said politely as they shook hands. \n\n\"How was your last day?\" RJ turned to me. I hated Ian hovering and watching us interact. \n\n\"Don't know yet. Tomorrow's my last day, remember?\" \n\nRJ smiled, \"How is it that I didn't know that? I thought I was going to have to say good-bye tonight!\" \n\n\"You weren't paying attention when I told you, clearly.\" I smirked. \n\nRJ crossed her arms (I tried not to swoon), \"Not true, I pay very close attention to you... um... to you when you're talking.\" \n\nThe sight of RJ's bare arms was causing some disruption to my brain neuron activity, and I kind of froze. \n\nIan cleared his throat, \"It's okay RJ, I've lived with her for years, I can attest to the fact that she can do with some elocution improvement... she tends to mumble through her sentences.\" \n\n\"I. Do. Not.\" I said slowly. \n\n\"You kind of do,\" RJ agreed, her eyes boring into mine, \"It's endearing.\" \n\nZap. RJ just zapped away my ability to speak. \n\n\"How do you guys know each other?\" RJ looked between me and Ian. \n\n\"We grew up together,\" Ian said simply, \"I'm your best source for Lauren Calder stories!\" \n\n\"I'm all ears,\" RJ said with good humor. \n\nI slapped both of them on their shoulders, \"No ganging up on me!\" \n\n\"I can tell RJ about Keith!\" Ian suggested. \n\nWhat the fuck?? I shot Ian a warning look. He gave me his 'trust me, I know what I'm doing' look. \n\n\"Who's Keith?\" RJ asked. \n\nIan smiled slyly, \"Oh, just this guy that Lauren came home one day talking about.\" \n\n\"Ian,\" I said firmly, my eyes begging him to stop, \"That is not something we need to be talking about right now!\" \n\n\"Why not?\" RJ asked, \"What's wrong with Keith?\" \n\nIan wiggled his eyebrows at me. I shot daggers at him. \n\n\"Oh, nothing's wrong with Keith...\" he said dramatically, \"It was just another string of 'oh Keith this,' and 'oh Keith that'... She gets a little moony when she crushes out on someone.\" \n\nI watched a number of emotions cross RJ's face. I squeezed his arm, hard, \"Ian, can you cut it out? I don't want to talk about Keith anymore.\" \n\nIan seemed to finally get the message, \"Ok, fine. How about something to drink? RJ? Lor?\" \n\n\"I'll come with you,\" RJ said, \"I need to go say a quick hi to Mona. Ellie, I'll be right back.\" \n\nIan circled back moments later with two beers, and he looked like he was about to burst. I glared at him, \"What the fuck was that bullshit about Keith?\" \n\nHe tapped his beer against mine, \"I wanted to gauge her reaction to the possibility of you not being interested in her. I wanted to see how she would take it.\" \n\n\"You were skirting on outright LYING, Ian!\" \n\nIan looked contrite, \"I didn't say anything that wasn't true. I just didn't put it into chronological context. And by the way, she's so into you it's not funny.\" \n\n\"What? Really? What did she say?\" \n\n\"Nothing specific. But she said I was lucky to have a friend like you. I said you were really special to me. And she said 'Ellie's special to me, too.'\" \n\nMy mouth hung open. Oh... \n\n\"Why does she call you 'Ellie'?\" \n\nI scrunched up my face, \"She misheard my initials as 'Ellie,' it's kinda been her nickname for me since.\" \n\n\"Well,\" Ian said, \"It threw me off so I just stared at her with this 'what do you mean' look... and Lor, she didn't explain the name thing, but she said, 'I've never met anyone like her before, I never thought I would.'\" \n\nI stared at Ian. \n\nIan nodded rapidly, \"Yup. She also said, 'Keith's a lucky guy.' She's into you. Totally.\" \n\nI shot him a look, \"What did you say back?\" \n\n\"Nothing. Mona called her over and I went to the bar.\" \n\nI looked around the room and saw RJ chatting with Mona. RJ was nodding as Mona was talking, so I just ran my eyes up and down her body. Jeans were basically invented for RJ's legs, I concluded. Without the usual dress shirt and suit jacket, I now had an unobstructed view of the nape of her neck, her shoulders, and yes, those arms... and her butt- \n\n\"CALDER!\" Ian snapped his fingers in front of me. \n\nI looked at him, \"What?\" \n\n\"Oh my god,\" Ian's eyes ran all over my face, \"Oh my god, Lauren... you'd sleep with her tonight if she made a move, wouldn't you?\" \n\nI grunted, \"Ian, I've been ready to throw myself at her since moment one. How have you not noticed?\" \n\nIan leaned his body into mine, \"Don't let her break your heart, Lor.\" ",
        "\"I'm not sure I really care... but I hear you. Thanks, Ian.\" \n\nIan suddenly shifted off me, \"Jared just extricated himself from the table he was at... he's headed to the bar,\" he hissed. \n\nI chuckled, \"Don't do anything I won't do!\" \n\n\"Don't wait up!\" Ian gave me a hug and made a bee line for the bar. \n\nI watched Ian give Jared a quick tap on the shoulder before the two of them started talking like old friends. Why is it so easy for Ian to chat someone up? RJ was still talking to Mona and people were starting to leave. I let out a deep breath. I picked at the label on my beer bottle. I felt stupid sitting there on my own, but I couldn't make myself leave. \n\n\"This isn't right... the guest of honor sitting all by herself...\" RJ slid into a chair at the table. \n\nI waved a hand, \"No biggie. It's getting late, and Ian is no doubt off on an adventure with Jared.\" \n\n\"That didn't take long...\" \n\nI smiled, \"Ian's definitely not shy. I was thinking of leaving, actually.\" \n\n\"Want some company?\" \n\nOh, I thought you'd never ask.  \n\nI nodded, \"I'd love some.\" \n\nWe made our way upstairs. RJ held the door for me and we stepped out into the pleasant summer night. \n\n\"Where's home?\" RJ pointed her fingers left and right. \n\n\"West Village,\" I nodded towards the West Side Highway, \"How about a walk up along the piers? Where do you live?\" \n\n\"Chelsea, so not far from you,\" RJ ran her hand through her hair, and a shiver went through me as I watched her bicep flex a little. \n\nWe started chatting, like we always did. Except every third step or so (yes, I was counting), RJ's hand would brush against mine as we walked. It was getting excruciatingly hard to focus on keeping my end of the conversation coherent. \n\n\"May I ask a question? It's kinda personal...\" RJ gave me a quick glance. \n\n\"Sure! I think we are officially in friend territory now. My contract with Win-B expires in less than twelve hours.\" \n\n\"Right. Uh, so how serious is it with Keith?\" \n\nI laughed, \"Oh, it's not serious at all. Like, strike it from the record. I met him at a dinner with some friends and came home and told Ian about him. We didn't even exchange numbers. It was months ago.\" \n\nRJ stopped walking and looked at me, \"So why was Ian talking about him like you guys were dating?\" \n\nI shrugged, \"Because he was being protective. He thought you were mackin' on me and he wanted to throw you off.\" \n\n\"Did you think I was hitting on you?\" \n\nI shrugged again, \"I thought you were being you... unless you've been hitting on me since day one?\" \n\nGauntlet thrown... \n\n\"So nothing's happening with Keith?\" \n\nI allowed the dodge, \"Nope. I'm single and fancy-free.\" \n\nRJ nodded wordlessly. \n\n\"Why do you ask?\" I asked as evenly as I could. \n\n\"Oh, you know, you haven't talked much about your personal life, except for Andy... and I basically made you listen to me go on and on about my family... I'm sorry if it was too much. It just kind of all came out...\" \n\n\"Don't be sorry. Thank you for sharing all that with me. It means a lot.\" \n\n\"It means a lot to me, too.\" \n\nWe walked along in silence for a bit, our hands dancing back and forth in their own crazy magnetic field, and I finally just couldn't stand it anymore. \n\n\"RJ,\" I said. \n\n\"Yes?\" \n\nHere goes nothing. \"I really want to hold your hand right now,\" I didn't dare look at her. \n\nWe kept walking. My heart was beating like it was about to burst. \n\nA couple agonizing moments later, I felt the tips of her fingers reach for mine. \"Me too,\" she said. \n\nI let out a breath I hadn't even known I was holding. And then her fingers were tangled up with mine and our palms met. All the noises of the city muted to a dull hum; it was as if all my senses re-allocated their energies to feeling RJ's hand in mine. \n\nRJ's hand was exactly as I had imagined it, but better. Her hand was slightly bigger than mine, and her fingers embraced the back of my hand with surprising warmth and strength. I didn't remember what it was like to not hold hands with her. \n\nAll too soon, we made the turn to head east towards the West Village. \n\n\"Nice digs,\" she said as we stopped in front of my apartment building. \n\nI tucked some hair behind my ear, \"It's because of all those obnoxious consulting fees I charge...\" \n\nI should ask if she wants to come up... I should- \n\nMy heart stopped as I felt RJ let go of my hand. I glanced down at my hand, now without its mate, and I didn't know whether to protest or cry. \n\nBut before my brain could figure that out, RJ's lips were on mine. I could only react. My hands cupped her face and I kissed her back with a ferocity that totally betrayed the depths of my feelings for her. Fuck it, I want this, I don't care of you break my heart into a million pieces.  \n\nRJ responded as aggressively, her arms were around me and possessing me as her lips claimed mine. \n\n\"Do you want to come upstairs?\" I asked breathlessly when we separated. I could imagine Ian's look of disapproval already, but I didn't care. \n\n\"Yes. So much,\" RJ nodded as she nipped the side of my neck, \"But...\" \n\nMy stomach dropped. Oh shit, she's not going to go up with me.  \n\n\"But,\" RJ looked deep into my eyes, \"I can't. I promised Mona something for tonight.\" \n\n\"This late?\" I looked right back at her. Her face was open, her eyes were sincere. \n\n\"Yeah,\" she nodded before her face split into a big grin, \"Ellie, I'm so happy.\" \n\nI reached up and kissed her, \"Me too.\" \n\n\"I'll see you tomorrow,\" she brushed her thumb across my lips. \n\nI nodded. \n\n\"Okay,\" RJ smiled and kissed me again, \"And then maybe dinner as well?\" \n\nAs long as dinner is me. \"I'd like that.\" \n\n\"Okay,\" she said again, \"Good night Ellie.\" \n\n\"Good night, RJ.\" \n\nChapter 5: An Unexpected Cooling Off (The Next Evening)  \n\n\"Hello?\" Ian picked up the phone. \n\n\"Hey, it's me.\" \n\n\"You got a new number?\" \n\n\"My phone died. I busted my ankle-\" \n\n\"WHAT?\" \n\n\"I'm fine. I'm at the ER at Manhattan General. This is my one phone call from the front desk. I need you to come get me.\" \n\n\" Are you being discharged now?\" \n\n\"No, I'm still waiting to see the doctor, so I'll be here for a while yet. Long line.\" \n\n\"Okay, I'm just wrapping up here. I can be there within the hour... unless you want me to go in to see the doctor with you?\" \n\n\"Nah. Can you bring my insurance card when you come? It's in my top desk drawer.\" \n\n\"Got it.\" \n\n\"Thanks. You should see my ankle right now. It looks like a mini purple blowfish with a severe allergic reaction.\" \n\n\"Sounds lovely. What happened?\" \n\n\"I wanted to run off some nervous energy before dinner with RJ. Went over to shoot some hoops on Houston Street. Got roped into a pick-up game, landed on my ankle wrong. Game over. The guys I was playing with carried me into a cab and brought me here.\" \n\n\"At least you're not nervous anymore.\" \n\n\"Thanks asshole. Oh, can you also call RJ and tell her I'm going to be late for dinner tonight?\" \n\n\"Got it,\" Ian repeated. \n\nI hung up after giving him RJ's number. I thanked the nurse and hopped back to my seat. \n\nI had finished up at Win-B in the morning, and when I swung by RJ's office to say good-bye, she had a bunch of people in her office. She ducked out to give me a hug, but there were about four pairs of eyes on us. \n\n\"I can't wait to see you tonight,\" she said quietly in my ear. I smiled and gave her arm a squeeze, \"Me neither.\" \n\nAnd that was that. But instead of getting ready for dinner, I was sitting in the ER waiting room. \n\nIt was another forty-five minutes before I was seen by a doctor, who casually pronounced it a Grade II sprain. \n\n\"That means,\" he said with the tone of bored professor, \"that it's a significant enough sprain that we'll need to put you in a boot for at least two weeks. A brace would probably work, but the boot is better, in my opinion. It's cumbersome and annoying, but you'll thank me in the long run.\" \n\nWhy do some doctors feel compelled to indicate how omniscient they are? \n\n\"Can I just thank you now?\" I joked. \n\nHe didn't find it funny. \"Do you have a PT you like?\" He asked impatiently. Oh wow, he really didn't find it funny.  \n\n\"Yes.\" \n\n\"Do some PT in the meantime, and then I want you to see Dr. O'Donnell for a follow-up. Camille, the nurse, will have her information and fit you out for a boot.\" \n\nThe doctor swept open the partition curtain and left. He didn't even give me a chance to thank him. \n\nAfter another mind-numbing wait, Camille appeared. It turned out that it wasn't a boot so much as an exo-skeleton. It was ridiculously bulky. Great. That's gonna look really sexy. 'Hi RJ, I'm rolling up to our first date in a walking boot.'  \n\nCamille wagged a finger at me, \"Don't you get whiny about this. Thank your lucky stars you don't need a cast... or surgery! Also, your boyfriend's here.\" \n\n\"I don't have a boyfriend.\" \n\nCamille threw me a skeptical look, \"Fine, your not-boyfriend who's been harassing the admitting nurse for the past fifteen minutes to let him come through.\" \n\nI shot her an equally skeptical look, \"Ian's not my boyfriend. He's gay.\" \n\n\"I sure am!!\" Ian sang as he walked in. \n\n\"Figures,\" Camille scoffed as she left, \"Tall, handsome, total drama queen...\" \n\nI laughed, \"Oh, not at all playing to stereotypes, are we?\" \n\n\"Hm, so not a life-threatening injury,\" Ian noted, \"The snark is at normal levels.\" \n\n\"Thanks for coming, Ian. Did you reach RJ?\" \n\nIan went white, \"Oh shit. I totally forgot.\" \n\n\"What time is it? Quick, tell me!\" \n\n\"Just after seven thirty,\" Ian looked at this phone. \n\n\"FUCK FUCK FUCK! Why didn't you call her? My phone's been dead all this time!\" \n\nIan picked up my phone and tried to turn it on, \"Yep. It's dead.\" \n\n\"CHARGE IT FOR ME!! I was supposed to meet RJ for dinner at seven. FUCK Ian, come on!\" \n\nIan ran to the nurse's station and came barreling back through the curtains with a charger. He slammed it into the wall and jammed the other end into my phone. We both stared at the screen, willing it to come back to life. \n\nIt took forever to start up and when it did, I immediately saw that there were texts from RJ. \n\n{RJ} See you in a few. Can't wait. \n\n{RJ} Hey there - I'm at the restaurant. \n\n{RJ} You ok? \n\n{RJ} Hey, did I mess up? We were supposed to meet at 7, right?  \n\nI looked at Ian, who started apologizing, \"I'll call her now, I'm so sorry Lauren, I was just so focused on getting here and then I don't know, I started panicking. You know I don't do well with stress.\" \n\n\"Bullshit. You work as a chef with multiple high maintenance clients!! Stress is your middle name! Give me your phone, I'LL call her!\" I dialed RJ's number and prayed she'd pick up. \n\n\"Hello?\" \n\n\"RJ!\" \n\n\"Ellie?\" She sounded unsure, and hurt. \n\n\"Yeah - hey - I'm sorry I'm late, but my phone died.. I had to go to the ER-\" \n\nRJ's tone changed immediately, \"Which one? What happened?\" \n\n\"Manhattan General. I sprained my ankle. I'm waiting to get discharged.\" \n\n\"Are you okay?\" \n\n\"Yes. I mean no, it's painful, but it'll be fine. I'm sorry I missed our dinner. Do you, uh, want to come over to my place? We can order in instead?\" \n\n\"That sounds good to me. I'm so glad you're okay. See you soon.\" \n\nI put down the phone and looked at Ian, \"You owe me, Ian Bishop, you owe me SO BIG it's going to take the rest of your life to wipe the slate clean.\" \n\nI picked up my phone and stared at the texts from RJ. I felt bad that I stood her up. I glowered at the boot on my leg. It looked pathetic and I wondered how long it was going to take before it was back to full strength. \n\nCamille finished processing the discharge papers soon afterwards, and Ian spent our cab ride home groveling and promising to never fuck up like that again. \n\nHe made it up to me immediately though; I needed help getting showered, and Ian being a six foot two gym rat pretty much made it happen without too much fuss. Except for the pain, of course. My ankle felt like the victim of a freight train hit-and-run, and while the boot made hobbling around possible, it was throbbing like an angry volcano that was shooting hot lava up and down my leg. I couldn't move anything below my waist without making something shift within the boot and causing me excruciating pain. \n\nWe decided that I should make my bedroom my home-base. It was closer to the bathroom, and honestly, I didn't have it in me to get myself to the living room. I was exhausted. \n\nWhen RJ arrived, I cursed the injury silently - all I wanted to do was jump on her. Not only because she was gorgeous, as always, but also because I could tell she had dressed up for dinner. Crisply tailored pants, and a beautifully cut shirt with some sort of herringbone weave that tapered to her slim hips. And now that I knew they were there, I could also make out the muscles of her arm under the fabric. \n\n\"Hey,\" she looked me up and down and frowned a little when she saw my boot. \n\nI smiled, \"Not quite what I had in mind for tonight.\" \n\nRJ sat down on the bed next to me, \"Me neither.\" \n\nMy heart rate increased, \"What did you have in mind, RJ?\" \n\nShe blushed. It was enchanting. She wagged her finger, \"Hm, you go first.\" \n\n\"I'll show you,\" I beckoned her closer. She leaned in a little. \"Closer,\" I whispered. She leaned in a little more. I met her the rest of the way and kissed her. \n\nOh, what a glorious kiss it was. Last night, I was too staggered by our lips touching to really think about it as it happened. But now, I was noticing so many things: no stubble, first if all - just soft smooth warm skin on mine; the kiss itself was sweet but insistent - it felt purer somehow than other kisses I've had; her lips and tongue were making love with mine - confidently, intimately, lovingly. \n\nRJ was leaning in at an awkward angle, so we couldn't really comfortably maintain contact. \n\n\"Lie with me,\" I patted the space next to me on the bed. \n\nRJ smiled and slotted her lean frame along the side of my body. I lifted my head up and she slid an arm under, which allowed me to snuggle right into her body. I squeaked with pain when I moved my leg and she looked at me with concern. \n\n\"Stupid leg,\" I placed a hand on her chest and felt her heart beat. I brushed her lips with mine. \n\n\"I thought... when you didn't show up... that you changed your mind about us, about me...\" RJ said quietly. \n\nI looked up at her, \"Ian, who I will deal with later, was supposed to call you because my phone died. I love him to death, but sometimes he goes into space cadet mode and it's infuriating. I am sorry I made you worry.\" \n\nRJ smiled wryly, \"I wasn't worried... I was devastated. I thought I'd lost my chance with you... or that you regretted kissing me... or that the kiss was a turn-off...\" \n\n\"It wasn't a turn-off, but kiss me again, I want to make sure,\" I offered up my lips. \n\nRJ pushed herself up on one elbow and with a quick shift of her legs, she was on top of me. I couldn't even feel the pain in my leg any more. Actually, I could: it was now throbbing with the intensity of pure lust that was coursing through my body, but RJ was kissing me and the exquisite weight of her body was more than enough to make me just surrender to her embrace. \n\n\"You know,\" I mused in between kisses, \"This was not what I thought being in bed with you would be like...\" \n\nRJ's eyebrows popped up, \"You thought about being in bed with me?\" She rained kisses all over my face. \n\nI tried to grab every part of her at once, \"Oh, I've been thinking about doing all sorts of things with you...\" \n\n\"I didn't think you were interested,\" RJ nuzzled my collarbone, \"I mean, I would get these brief flashes that you were but I couldn't tell if it was just me being hopeful...\" \n\nI pressed my hips into her as an answer. She growled and started kissing my ear... and her hips were doing some sort of voodoo with mine... fuck... I never thought someone could make me come by just doing that, but RJ was getting me there... \n\nI moved my legs to give her more room, \"OW!\" Holy shit that hurt.  \n\nShe stopped and we looked at each other, both of us breathing heavily. \"Sorry, I got carried away,\" she said, \"I'm sorry I hurt you.\" \n\n\"No, it was good, I was about to ...\" I blushed when her eyes widened, \"I want to... a lot... but...\" \n\n\"It's okay, I know,\" RJ nodded, \"You drive me crazy, you know that?\" \n\nI shook my head, \"Not really... but I'm glad to hear it...because I've been trying process what you do to me, too.\" \n\nThe door to the room slammed opened, \"Lauren, we're out of regular pain meds... I'm going out-Oh!\" \n\nIan looked at RJ lying on top of me, \"Are you guys, like, girlfriends now?\" \n\nUh-oh. Oh, this might not end well.  \n\nRJ didn't even hesitate, \"Yes!\" \n\nOh my god oh my god oh my god she said yes!!  \n\nIan gave me a pointed look, \"Do you want me to grab dinner while I'm out? You seem to... um... have your hands full right now.\" \n\n\"Okay,\" I said meekly, \"Thanks, Ian.\" \n\nThe moment the door closed, I looked at RJ, \"You're my girlfriend now?\" \n\n\"Do you want me to be?\" RJ asked. \n\nI pulled her in for a kiss, \"Yes. Yesyesyesyesyesyes.\" \n\n\"Good,\" RJ beamed. \n\nI've never had anyone look at me like the way she looks at me . Mona's warning suddenly pinged softly in my head, \"I thought you said you didn't do stuff like this?\" \n\n\"I know... but it's different with you. I, um...\" RJ smiled, \"I find that you hold my interest. In all the ways possible.\" \n\nMy heart and my brain and my clit started a symphony of throbbing, \"Kiss me.\" \n\nI grabbed her by her shirt and we kissed again. I tried to wrap my legs around her, but I couldn't. I yelped in pain and RJ immediately stopped, \"Did I hurt you?\" \n\nI shook my head and smiled, \"No, I tried to move my leg again, I forgot I couldn't. You're very distracting.\" \n\nShe settled back down next to me, \"Maybe it's better if I stay over here.\" \n\nI frowned, but she had a point. RJ lying next to me in my bed was messing with my cognitive abilities. Even with the haze of pain coursing through my body, I was indescribably happy. And I knew it had nothing to do with the heavy-duty pain meds I got at the ER, which reminded me that I basically stood her up for our first date. \n\n\"Did you wait long at the restaurant?\" \n\n\"Yup,\" RJ smiled, \"I got there super early. Left work early...\" \n\n\"Oh RJ, I'm so sorry.\" \n\n\"It's okay,\" RJ stretched out next to me, \"I thought I was going to have to spend the rest of my life getting over you. This is so much better.\" \n\n\"Even though I'm such an invalid right now?\" I whispered. \n\n\"Yes,\" RJ picked up my hand and kissed every one of my fingers. \"I like that I can be here with you,\" RJ closed her eyes as I brushed her cheek with my back of my hand. \n\n\"Isn't this one of those complications you don't like sticking around for?\" I asked this playfully, but there was some sliver of truth there that formed an uncomfortable seed of doubt in my head. \n\n\"I did say that, didn't I?\" RJ rubbed her nose, \"I don't know, it doesn't feel complicated. Not with you.\" \n\n\"Explain,\" I needed to know why. \n\n\"You know how sometimes, you build a model and you know it's not going to work?\" \n\nI nodded. \n\n\"Relationships have felt like that for me. I throw in all the things I know it needs, but I just know that somehow, it's not going to work. It's like walking into a maze with no peripheral vision,\" RJ traced the path of one of my veins on my arm with her finger as she talked, \"But with you, it just was so completely opposite to what I've ever experienced. In every way. First, you showed no interest in me...\" \n\nI coughed and laughed at the same time, \"Oh my god RJ, I fell for you the first moment I met you.\" \n\n\"Really?\" RJ chuckled, \"Shows me how much I know. Second, it just seemed like having a conversation with you never took any effort. We would just talk. In the past, with most of my dates, I felt like 'oh, now we are having the shared interests conversation,' or 'oh, now we are talking about our families.' It sounds asinine... but that's exactly what it felt like.\" ",
        "\"RJ, were you dating robots?\" \n\nShe laughed, \"No, I've been trying to figure this out, actually, and the biggest difference is that no one set me up with you. Honestly, I've been so reluctant to date that most of the dates I've gone on have been set ups. They always felt forced. And then inevitably, either the person ended up liking me more than I liked them, and we would break up... or we would decide that we didn't like each other, and then we would go our separate ways... or there'd be this initial attraction that would wear off...\" \n\n\"RJ, you don't suck at relationships. You suck at blind dates. Two totally different things.\" \n\nRJ nodded, \"Yes! I guess I do!\" Oh there's that smile again. And now there's a thatch of hair that's fallen over her eyes. So dreamy... \n\nI lightly brushed the hair out of the way, \"I'm glad you like me back.\" \n\n\"I used to feel trapped, when I felt that someone liked me more than I liked them,\" RJ grimaced, \"It made me want to just end things. And I usually did. But with you, before I knew how you felt, I was the one pining after you. It made me feel bad about how I behaved in the past. Unrequited feelings are hard to handle... as I have come to learn.\" \n\nRJ rolled onto her back and stared at the ceiling, \"Last night, at the bar, when I found out about Keith, I felt so sad. And then I felt this deep urge to tell you how I felt. But I didn't know how. So I just blurted it all out to Mona.\" \n\n\"So that's what you guys were talking about.\" \n\nRJ nodded. She started grazing her fingers up and down my arm. It was the most mesmerizing thing ever. \n\n\"I told Mona that I was drawn to you,\" I confessed, \"She told me to be careful. That you, uh, don't like getting personal.\" \n\n\"It's fair. But when I told Mona I wanted to tell you about my feelings for you, she realized I wasn't kidding around. So she hinted that you might be interested. I was skeptical, because it didn't track with what Ian said. Anyway - then you know, you totally surprised me.\" \n\nI just looked at her, running my eyes all over her face, \"You totally surprised me, too. Although, RJ, I must say, I kind of wish you didn't have to do that thing for Mona last night.\" \n\nRJ laughed, \"Me too. But it wasn't a thing I had to do. It was a promise. She made me promise - before I left the bar with you - that I would take it slow. That I wouldn't just seduce you and jump into bed. You spraining your ankle's kind of perpetuating the theme...\" \n\n\"I wanted to jump into bed with you last night. I'm pretty annoyed at the current situation,\" I placed her hand on my breast. It felt divine. \n\nRJ lifted an eyebrow, \"Ellie, you can't even roll over without screaming in pain.\" \n\n\"True, but it doesn't hurt to let you know.\" \n\nRJ folded me into her arms and whispered in my ear, \"Oh the things we're going to do together...\" \n\nThe door banged open again and Ian came striding back in. \n\n\"Hello lovebirds,\" he trilled as he held up a large brown paper bag, \"How much do you adore me?\" \n\n\"Normally, I adore you a lot, but you're in the penalty box tonight, Bishop. And, new rules, you need to knock before you come into my room from now on.\" \n\n\"Fine. Here. I picked up some tacos!\" \n\nRJ took the proffered bag, and looked inside, \"How did you know what I would like??\" \n\nIan grinned wickedly, \"Oh, Lauren's given me a blow by blow of practically every minute that she's spent with you, so I think I have enough of your personal data such that I can pretty much steal your identity and run off with all the money in your savings account if I wanted to.\" \n\nI covered my head with the blanket. After coaxing me back out and apologizing to RJ (again), Ian handed me my food and the three of us plowed through the meal. I didn't realize how hungry I was. Not long after, I felt myself starting to doze off. I heard Ian and RJ cleaning up, but I couldn't keep my eyes open. \n\nThe next thing I knew, RJ was brushing her lips with mine. \"Good night,\" she said softly. \n\n\"I was hoping you'd stay,\" I protested. \n\n\"I want to, but I fly out tomorrow first thing.\" That woke me up. I sat up and rubbed my eyes, \"What?\" \n\n\"Mona's been wanting me to meet a handful of clients in Asia for a while now. I kept putting it off because I didn't want to be gone while you were still at the firm. But I can't delay any more. Two of them are pharma companies and it would be a coup if we got them to engage us as their bank.\" \n\n\"This is a client team thing. Why you?\" \n\n\"Because of my background and I speak the language, so it's easier.\" \n\n\"You speak Mandarin?\" \n\nRJ nodded, \"My dad and I speak in Mandarin. It's come in handy for work.\" \n\n\"How long will you be gone?\" \n\n\"Two weeks. I also need to stop off in San Francisco on the way back. I finally sold my house there and I have to close that deal up. I'm sorry Ellie.\" \n\nMaybe it was the exhaustion, but my eyes teared up. I hated being so weepy, so I tried to blink them away. \n\n\"Shhh, it's okay. I don't want to go either,\" RJ whispered. I saw her eyes were moist, too. \n\nI grabbed her shirt and pulled her in for a deep kiss. \"Hurry back.\" \n\nChapter 6: High Heat (Three Weeks Later) \n\n\"Everything looks like it's in good shape,\" Dr. O'Donnell shook my hand, \"Put the boot back on if you feel any instability but use the brace for at least another three weeks. Do your exercises and you should be fine.\" \n\n\"I can walk on this though, right?\" I'd been gingerly walking around. The ankle brace was so much better than the boot. Lighter, smaller, and I could move my leg without bulldozing everything in sight. \n\n\"IN MODERATION,\" Dr. O'Donnell said sternly. \n\n\"Okay. Okay. I got it.\" \n\nShe shot me a look. I held my hand up, \"I promise. No monkey business and I will do my exercises. I promise.\" \n\nI hobbled out and caught a taxi. When I got home, I shouted a quick 'hello' to Ian and went straight to bed. I rolled around...no pain. I moved my legs up and down... no pain. I sat up and shifted my weight... no pain. \n\nI called RJ immediately. \n\n\"Winchester Brown; Rowan Kan's office.\" \n\n\"Hey is this Denise? It's Lauren!\" \n\n\"Hey girl! We miss you around here.\" \n\n\"Thanks - I miss you guys too. Is RJ around?\" \n\n\"No, honey, she's in a meeting with Mona. She's been in back-to-back meetings since she got in from the airport this morning, do you want me leave her a message?\" \n\nRJ took the red-eye back from SFO and went straight to the office. Our time apart has been torture even though we talked every day. We skirted around phone sex multiple times, but both agreed we would hold off. Tonight was the night, but I was done waiting. I wanted her. Now. \n\n\"Uh, actually, can you please patch me through to Mona's office?\" \n\n\"Sure, please hold.\" \n\nI felt my heart speed up as the call was transferred. I couldn't wait to hear her voice. She'd called me from the cab this morning and given me her schedule for the day, so I knew her meeting with Mona was about to end. She had two other meetings coming up, but I wanted to see if I could convince her to postpone those in order to leave work early and come ravish me. \n\n\"Hi Lauren!\" Mona said cheerfully. I could tell she had me on speaker. \n\n\"Hey Mona!\" \n\n\"Everything okay?\" \n\n\"Yup, can I just speak to RJ for a quick sec?\" \n\n\"Of course!\" Mona handed RJ the phone. \n\n\"Hi Ellie,\" RJ's voice was heaven. \n\n\"Am I off speaker?\" \n\n\"Uh, yes, you are. You okay?\" \n\n\"Mm-hmmm. I have three things for you. You ready?\" \n\n\"Yes.\" \n\n\"First: Do you still have my apartment keys?\" \n\n\"Yes, why-\" \n\n\"Good. The second thing is, the doctor says I am officially boot-free; I just got home from seeing her.\" \n\n\"Hey! That's great, what's-\" \n\n\"And the third thing is, I'm ready to have sex now.\" \n\nI grinned when I heard her gasp. \n\n\"RJ? You still there?\" \n\n\"Uh, yes am. I mean, yes, I am.\" \n\n\"Well?\" \n\n\"Uh, I agree with what you said, I get what you mean.\" \n\nI grinned wider, \"So you'll come over now?\" \n\n\"You bet.\" \n\n\"Bye RJ...\" I dropped the call and screamed. \n\nI immediately shouted out, \"EEEEEEEEE-AN!!\" \n\nHe shouted back, \"What??!!\" \n\nI shuffled over to his room and poked my head in, \"RJ's coming over now. What are you doing?\" \n\nIan smiled, \"Oh, that's great. I've no plans. Don't have to be at work until four.\" \n\n\"Ian, sweetie, RJ's coming over,\" I wiggled my eyebrows, \"Are you sure you don't have any plans?\" \n\nI could see the wheels turning in his head. \n\n\"Oh right,\" Ian grinned, \"I'm going to the gym and I'll go straight to work from there.\" \n\n\"I love you.\" \n\nIan grabbed his gym bag and keys, \"No sex in my kitchen or my bedroom.\" \n\n\"Deal.\" \n\nI guesstimated that it would take RJ roughly thirty minutes to get to my place. I took a shower, dried off, and got back onto my bed. Not long after, I heard the front door open and RJ's footsteps approach my room. \n\n\"Hi,\" I said quietly when RJ walked in. I watched her eyes roam hungrily over my nakedness. When her gaze swept over my sex, I opened my legs slightly. \n\nRJ was on top of me in a flash and I wrapped myself around her. But then I remembered the part about her having to be naked too and started popping open the buttons of her shirt. I couldn't get to her pants because she was grinding into me and I lost control of my limbs for I don't know how long. I yelled out with pleasure when her lips found my nipple and she was saying things as she did things to me and I think I just started screaming. I've never been a screamer, but I was basically at her mercy. Her tongue was a wonder all on its own; with every lick, every thrust, RJ was creating high-octane waves of rapture I'd never experienced before. I felt her tongue trail a warm, wet path downwards, and when she took me in her mouth, I stepped into the beginning of a climax that stripped me of reason. \n\nRJ kept going, and I just kept coming. \n\nI never thought of having sex as being sexy in and of itself, but sex with RJ was sexy. It made me feel sexy. She was sexy. She was touching me everywhere. She was licking me, oh my god, the licking. I didn't know it could be like that. I didn't know I had so many places that liked to be licked. It was like her tongue was saying, \"Mine! Mine! Mine!\" and holy shit I was coming so hard. \n\nAftershocks were pulsing through me and when I looked at RJ, she was still making love to me with her eyes. It was just about enough to make me come again, but I had other pleasures to attend to. Her shirt was open and I - at last - could see what I'd been fantasizing about for months. I swept the shirt off her shoulders and ran my fingers up her arms, skipped them lightly over her collarbone, and my hands met over her chest. Her breasts fit my palms perfectly, and I delighted in how hard I made her nipples. I raked my fingers over her stomach and stopped when they reached the waistband of her pants. \n\nWe held each other's gaze as I undid her pants... as I pushed her backwards onto the bed... as I pulled down her underwear... and as I thrust my fingers into her. She bit her bottom lip as her hips met my thrusts. I loved possessing her like this, but I knew there was more. I lowered my lips and tasted her, and I knew I would be addicted for the rest of my life. I had a brief moment of self-doubt, wondering if I had the prowess to do to her what she did to me, but I pushed it aside, in favor of realizing the full force of my desire for her. My mouth devoured her as I tuned into her moans and thrusts. My fingers explored the depths of her nerve-endings and I memorized all the good spots. I knew they were good spots because RJ had her fingers buried in my hair and I felt her release flood my lips and tongue. \n\n\"Fuck!\" RJ panted, \"Fu-u-u-ck!\" \n\nI scooted back up her body, kissing as much of her skin as I could. We kissed again, slower this time, but for longer. \n\n\"Was that okay?\" I asked, hoping my efforts did not betray my inexperience. \n\nRJ nodded, \"Oh yeah. That was okay... more than okay. Are you sure you haven't done this before?\" \n\nThose words did wonders to my ego, \"RJ, if I'd known how good doing that would feel, I'd have come onto you months ago. I want more.\" \n\nI was craving her again. I whimpered as I pressed my hips into her, and her fingers - those strong, straight fingers that I'd been staring at - were inside me, twisting and pushing. My kisses escalated in urgency as she brought me to the brink, until finally I buried my face in her neck, my hands gripping her shoulders as she rocked me with another orgasm. \n\nI lay there, on top of her, recovering. \n\n\"Okay, holy shit,\" I sighed, \"Gay sex is, like, totally awesome.\" \n\n\"There's more to gay sex than what we just did...\" RJ wiggled her eyebrows. \n\nI sat up, intrigued. I blushed when I saw RJ's eyes latch onto my breasts, which had done a little dance as I moved. \n\n\"Like what you see?\" I did a little shimmy. \n\n\"Oh yes,\" RJ murmured. \n\n\"You were saying something about more gay sex?\" I loved the way she looked at me. \n\n\"Mmm, yes,\" RJ sat up and faced me, \"I had a lot of time to think about all the things we could do together... and so I picked up some stuff on my travels... wanna see 'em?\" \n\nOoooh! She got us toys! I nodded. \n\nRJ rolled off the bed, \"Hold on... wait, is Ian here?\" \n\nI shook my head, \"He went off to work... he knows to give us some space today.\" \n\n\"We'll have to thank him later, wait one sec,\" RJ slipped out of the room and rolled her suitcase in. \n\nRJ moving around in the nude was a visual feast and I was the lucky glutton that got to consume it. \n\n\"I got some stuff in Tokyo... and picked up a couple things in San Fran... I didn't know what you like so I cast a wide net...\" \n\nI shrugged, \"This is pretty much all new to me, so your guess is as good as mine!\" \n\nI watched with interest as RJ pulled out a smaller bag from her suitcase. It was like a kinky version of Mary Poppins's bag. RJ dumped out a pile of toys... some of which I was familiar with, some not. \n\nIt was hard to tell if this was the sum total of RJ's preferred repertoire of accessories, or if this was the result of a horny shopping spree. Either way, I was arousingly intrigued. A little intimidated, but mostly intrigued. \n\nRJ scratched her head, \"I think I went overboard...\" \n\n\"I'm surprised you got through immigration!\" \n\nRJ suddenly looked uncertain, \"Too much, right?\" \n\nI grinned, \"I have no idea. Have you um, done stuff with all of this?\" \n\nRJ shook her head, \"Nope. Just a few...\" \n\nShe looked embarrassed. It was charming. \n\n\"Come here,\" I reclined on the bed. She crawled up on top of me. \n\n\"This,\" I whispered, \"You. And me. Like this. This is heaven for me right now. You know that?\" \n\nRJ kissed me and our tongues did something magical that made me open my legs to wrap around RJ possessively. She pressed into me and my hips started writhing with wanton desire. That pretty much encapsulated RJ's effect on me. \n\nI wanted her in me. And in a happy burst of revelation, I realized I had some choice in the matter. \n\n\"Are those ready to go?\" I gestured over to RJ's purchases between kisses. \n\nRJ nodded, her eyes searching mine for reassurance on my comfort level. \n\nI unwrapped my legs, my heart pounding with anticipation of the newness of it all. I tilted my hips up, \"Good. Because I am, too...\" \n\nShe and I both looked over. \"Which one?\" She asked. \n\nI felt like Goldilocks, \"The blue one.\" \n\nIt wasn't humungous, but it had some length and girth to it. RJ cocked an eyebrow, \"Yes, ma'am.\" \n\nRJ with an electric blue cock was an Amazonian fantasy made flesh. I shifted my knees up, \"I need you inside...\" \n\nRJ hovered over me, \"Ellie...\" Her fingers traced a slick, fluid path up and down my slit and across my clit, \"You're so wet...\" \n\nOur eyes met and with one mind-blowing thrust, RJ plunged into me. \n\nOh. My. Effing. God. I was trying to grab hold of everything that I was feeling but it was everything at once so I was tossed from one thing to another: how smooth her body was, how full I was, how deep she was, how it all felt so good inside as she fucked me, how hot her breath felt against my skin, the noises we were making... the massive climax we were chasing... \n\nRJ in full flow of making love to me was a sight to behold. There were muscles and rippling contours, but mostly it was the way she looked at me. I wanted more. Harder. Deeper... and be still my heart, RJ knew what I wanted. She knew. \n\nShe somehow scooped me up and flipped us around and suddenly I was on top and oh, I was so full of her... \n\nI started grinding and the pool of pleasure deep in my core started flooding outward. \n\nRJ and I were rocking back and forth against each other for countless delicious minutes and then she shouted out my name and that tipped me over into a new kind of climax that left us a quivering, panting mess. As I emerged from the stupor of it all, I felt totally and utterly mated with the woman in my arms. \n\n\"Okay,\" RJ breathed out as she undid the harness, \"Wow.\" \n\n\"Yeah,\" I tapped the blue dildo, \"This was a good buy.\" \n\nRJ laughed. I snorted into her shoulder. We held each other tight as we shook with laughter. \n\n\"So, um,\" I panted, \"For the record, I'm totally gay. And I want to have gay sex with you for the rest of my life.\" \n\nRJ chuckled and kissed the top of my head, \"Me too. I love you.\" \n\n\"Hmmm...\" WAIT, WHAT? I picked my head up and looked at RJ. Her eyes were twinkling. \n\nI blinked, \"Did you say something?\" \n\n\"I said I love you.\" She swept some hair off my face. \n\n\"Why?\" Of all the things I thought RJ would say to me, that wasn't it. I had half expected to wait a long while for such an utterance, and half dreaded never hearing it. Naturally, that led me to be wholly unprepared to hearing it. Twice. \n\nRJ wrapped her arms around me and flipped us around so she was on top. \"Because you are intoxicating, because you keep me off-guard, because you found a way to set my heart on fire, and it terrifies me... but not in a way that makes me want to run; it terrifies me in a way that makes me want to be worthy of you.\" \n\n\"You. Are. Such. A. Liar!\" I narrowed my eyes at her, but I knew I had a shit-eating grin on my face. \n\n\"It's the truth!\" RJ exclaimed. \n\n\"I'm calling you a liar because you said you didn't believe in love and romance and you pretty much swept me off my feet with what you just said.\" \n\n\"I didn't know this was possible!\" \n\n\"Honestly,\" I ran my fingers over her amazing lips, \"I didn't either. I thought you'd have your way with me and leave.\" \n\n\"That's not going to happen.\" RJ kissed me softly, \"I promise.\" \n\n\"Good,\" I kissed her back, \"Because I fell in love with you the moment I saw you. You got me, heart, body and soul. And this is not unrelated, but if we keep having sex like we did just now, we need to invest in some sound-proofing for this place.\" \n\nRJ laughed, \"I love you,\" she said again, her hands started moving lower. \n\n\"I love you, too.\" \n\n<p align=\"center\">\n\nI'll be your dream, I'll be your wish \n\nI'll be your fantasy \n\nI'll be your hope, I'll be your love \n\nBe everything that you need \n\nI'll love you more with every breath \n\nTruly, madly, deeply do \n\nI will be strong, I will be faithful \n\nCause I'm counting on \n\nA new beginning, a reason for living \n\nA deeper meaning, yeah \n\nI want to stand with you on a mountain \n\nI want to bathe with you in the sea \n\nI want to lay like this forever \n\nUntil the sky falls down on me. \n\n \n\nSavage Garden Truly, Madly, Deeply</p>"
    ],
    "authorname": "careythomas",
    "tags": [
        "lesbian romance",
        "lesbian sex",
        "lesbian",
        "romance",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/could-you-be-mine"
}