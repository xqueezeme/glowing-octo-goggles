{
    "title": "Sir Bertrand and the Dragon",
    "pages": [
        "Sir Bertrand was stretching his bulging muscles in his hall after a hard day of hunting when the king's herald was ushered into his presence. Sir Bertrand guessed immediately that he was going to be summoned on yet another quest. He sighed; had he not already dispatched the wild Wyrm of Wyndham, the diabolical Demon of Darkwood, and the gruesome Gryphon of Gowondaland? Could he not catch a break?\n\nThe herald cleared his throat, preparatory to delivering his message, when Sir Bertrand interrupted him.\n\n\"Good herald,\" he said, his tone weary, \"thou art commanded to deliver me a quest, no doubt, and one of the first importance; for when are they not of the first importance? But I would point out to you that your master and our liege lord has yet to pay me for my consultancy work on the Mad Medusa problem, nor for my previous work in eradicating the various threats to the kingdom.\"\n\n\"'Tis true,\" the herald replied, a shifty look on his face,\" that my master is a bit lacking in ready coin, but he can offer you something much better that golden ducats. He offers you half the kingdom.\"\n\n\"A princess quest,\" said Sir Bertrand, his expression deadpan, \"I hate princess quests. I presume there is a dragon?\"\n\n\"Aye, 'tis fierce and fell, and has burnt divers villages to a cinder in the furtherance of its protection racket.\"\n\n\"And the king has offered his daughter to make the ravaging stop but now regrets his bargain. And wants me to rescue her.\"\n\n\"In a nutshell, Sir Bertrand.\"\n\nSir Bertrand looked across to his faithful squire, Hubcap.\n\n\"And what think you, Hubcap? Can I reject this quest and remain true to my chivalric vows?\"\n\n\"Sorry, my lord,\" replied Hubcap, the young handsome squire shaking his head, \"whilst this latest request is taking the piss, given your unpaid invoices that have piled up in the king's treasury, you are bounden to rescue the weak, most particularly women. Basically, you're screwed. And because I'm your faithful squire, I'm screwed too.\"\n\n\"There's no loophole?\"\n\n\"No, my lord, the code of chivalry is particularly clear on this point. And now, if you will give me leave, I will fetch your armour.\"\n\nSir Bertrand inclined his head graciously and Hubcap left the hall, shouting for the servants to prepare several packed lunches for the journey.\n\n\"So, sir herald, tell me about the princess. I presume she is part of the bargain.\"\n\n\"Of course, Sir Bertrand,\" replied the herald, laughing, \"who ever heard of a knight not receiving the princess's hand in marriage after ridding the kingdom of a dragon?\"\n\n\"Is she comely?\"\n\n\"She has hair the colour of summer wheat,\" said the herald, warming to his task, \"and eyes the colour of corn-flowers. She is slender and an accomplished dancer, and verily, elegance drips from her fingertips.\"\n\n\"So she's hot stuff?\"\n\n\"Indeed, brave knight, she's a ten.\"\n\n\"Well, if I must 'tis better that she were a babe.\"\n\nSir Bertrand and Hubcap rode over hill and down dale, aiming for the dragon's lair. The journey was long and upon the first night, just when it seemed that they would sleep upon the open ground Hubcap espied the top of the tallest tower of the castle of Gimcrack. Sir Bertrand urged his horse onwards, followed by his faithful squire and just as night fell they gained admittance to the castle.\n\nThey were met by a very fair young maiden in the courtyard. Her hair fell in tumbling tresses, and when she walked towards them her breasts preceded her. As she reached Sir Bertrand she fell upon her knees and tears sprang from her wondrously beautiful eyes.\n\n\"Oh sir knight, you are truly the answer to a maiden's prayer! I am kept here by my unworthy, wicked uncle, who seeks to deprive me of my lands. He will not free me until I give up all that he demands, and his requirements are most weird, particularly the stuff with the vegetables that I may not repeat lest I blush. Free me and I will grant you your heart's desire,\" and she winked as she lifted up her skirt to reveal a shapely leg.\n\nSir Bertrand sighed as he slumped in his saddle; another quest to complete although at least the promised reward would while away a pleasant evening. He could not help noticing Hubcap gawping at the girl, and he made a mental note to tell his squire to put his tongue back in when they met damsels in distress.\n\n\"And where is your wicked uncle, fair maiden?\" Sir Bertrand asked, sizing her up as he did so, and deciding that he could happily spend some hours being ministered to by the fine young woman.\n\n\"He arrives even now!\" The young woman started in terror as a trumpet blared and hooves could be heard galloping over the drawbridge.\n\nThe wicked uncle was wearing black armour and Sir Bertrand took an instant dislike to him; black armour was so tedious and he was getting sick of wading through clich\u00e9s. Couldn't the uncle have gone for something in a startling red? Green would make a change. But no, it had to be black. Why he didn't just carry a banner proclaiming him as an evil robber-baron was beyond Sir Bertrand.\n\n\"Sir Knight!\" Sir Bertrand said theatrically, \"you have unfairly imprisoned your sweet niece, who is a fine bit of stuff who should be gracing the king's court. Wherefore I shall free her and restore her to her inheritance. Stand aside or pay the price.\"\n\n\"Not bleedin' likely, mate,\" said the wicked uncle, lowering his lance and spurring on his steed.\n\n\"Your funeral!\" said Sir Bertrand, as he too spurred his horse and lowered his lance, ready for battle.\n\nThe steeds thundered towards each other, razor sharp lance points held steady for the collision. Sir Bertrand and the wicked uncle closed on each other, their horses hooves a blur, as the fair young maiden held her hands to her mouth in nerve shattering anticipation of the fight to come (and let us be truthful here, she was also getting one hell of an erotic charge out of seeing two big, burly knights fighting over her).\n\nThe clash resounded around the courtyard as the warhorses neighed and plunged. Sir Bertrand shattered the wicked uncle's shield then drew his sword. A thousand blacksmiths hammering on their anvils would make less noise than that battle. First the wicked uncle held the upper hand, and then Sir Betrand, 'til finally he found the gap in the wicked uncle's armour and the false knight fell, dying, from his horse.\n\nSir Betrand walked his horse back to the fair maiden who was waiting at the side of the courtyard. Her eyes were aflame and her manner thankful as Sir Bertrand dismounted and knelt in front of her.\n\n\"My lady, I have freed you from your wicked uncle, faithful to my knightly vows. Will you now reward me as you promised?\"\n\nA cough from behind the young lady attracted their attention.\n\n\"I am most frightfully sorry, my lord,\" began Hubcap as he leafed through a thick tome bearing the title 'Code of Chivalry', \"but your prior vow to rescue the princess invalidates any contract made with this lovely young woman whose rescue is not, per se, a quest in itself but falls into the category of 'incident on the road'. Under rule 7.8 of the knightly code, the young woman is hereby released from any vow, promise, guarantee or pledge.\"\n\n\"Err...\" said Sir Bertrand.\n\n\"Further, and I must tell you this with the deepest regret, my lord, but your prior vow to rescue the princess also prevents you accepting any form of reward for said 'incidents on the road'. In short, my lord, you can't shag her.\"\n\nThe young maiden was looking a touched peeved at this information but Sir Bertrand suspected it was correct. He stood and took the book from Hubcap and leafed to the relevant page.\n\n\"'Tis true. I'm stuffed on this one. And I was so looking forward to getting my end away.\"\n\n\"Have no fear, sir, \" said Hubcap, \"squires are exempt from these rules.\"\n\nAnd he looked ardently at the young woman, who returned his lustful gaze with interest.\n\n\"Knight? Squire?\" she said, \"it's all the same to me when they've got muscles like yours. Yep, you'll do. Away to my chamber and let's play the two-backed beast! But no funny stuff with root vegetables, understood?\"\n\n\"I would not dream of it, my lady,\" said Hubcap as she grasped his hand, leading him into the Keep and up to her chamber.\n\nSir Bertrand found sleep difficult that night, wrapped in his cloak as he sat in a chair in front of the dying hearth fire in the Great Hall. He was grumpy to begin with following Hubcap's revelations, and the extended sounds of moans, groans, whimpers and a creaking four poster bed did little to improve his mood.\n\nHubcap was in fine spirits the following morning as they rode out of the castle, Sir Bertrand less so, particularly as Hubcap detailed the fine delicacies the maiden had plied him with between their bouts of strenuous love-making. Sir Bertrand had had to make do with a packed lunch.\n\nThe ride on the second day proved to be as long as the first, and signs of human habitation were few and far between. Sir Bertrand was already looking for a place to camp when Hubcap spotted a tall tower in the distance. They cantered towards the setting sun and arrived at the tower as dusk was gathering. They rode around the base of the tower but there was no sign of a door. They called up to the single window but no reply had they. Finally Sir Bertrand found a long, thick strand of hair, and motioning to Hubcap to join him, began to climb up.\n\nHubcap fumbled for his flint and steel as they stepped into the darkened tower room. He stuck the flint several times and finally lit a small flame with his tinder. A small fire was soon burning in the fireplace and Hubcap lit some candles. In their light Sir Bertrand saw a most beautiful young woman lying asleep on a bed in the middle of the chamber. Hubcap had clearly seen her too, as the sound of his lips as he smacked them was most disturbing to Sir Bertrand.\n\n\"And what does the code say this time?\" asked Sir Bertrand, keen for his squire to focus on something other than the perky nipple peeping out of the young woman's nightdress.\n\n\"As I thought, my lord,\" said Hubcap as he found the relevant page, \"you must kiss the maiden to awaken her.\"\n\n\"And does the code mention anything about not accepting rewards?\"\n\n\"I'm sorry, my lord,\" said Hubcap with what Sir Bertrand felt was a slightly shifty tone, \"it's most damnably dark in here. If you continue with the rescue I will endeavour to shine some more light on the small print.\"\n\nSir Bertrand stood over the young woman, feeling his desire stir as he gazed down at her long blonde hair (the very same that curled across the floor and out of the window, thus providing them with a rope) and her fine figure, clearly outlined against the thin muslin of her nightdress. He felt his fingers twitch, and he dearly hoped to be able to disrobe her in the near future, accepting his due reward (several times, from the looks of her).\n\nHe bent down and took her cheek gently in his palm, turning her face towards him as his lips hovered over hers. His kiss was ardent and gentle, powerful and pure, and the young woman opened her eyes wide in wonderment as sleep left her.\n\n\"Oh, sir knight,\" she said breathlessly, \"thou hast me all hot and bothered.\"\n\n\"And you, sweet lady, have me yearning most tenderly,\" said Sir Bertrand before a gentle cough stopped him short, \"and yet I fear my good squire may be the bearer of ill-tidings.\"\n\n\"Indeed, my lord,\" said Hubcap, and Sir Bertrand swore he saw a leering grin on the squire's face, \"I'm afraid that subsection 8D of the code is quite explicit. A young woman imprisoned in a tower attains priority in a knight's esteem with the exception of those occasions when he is travelling to rescue a princess from a dragon,\" and Hubcap pointed out the particular clause. It was airtight.\n\n\"And is there another chamber here, my lady, one with perchance a comfortable bed and a large steak?\"\n\n\"Sir knight, thou hast strange desires. And as for this tower, I have been asleep these past one hundred years. Mayhap the servants have rearranged the place and there may be an extra chamber. But I know not.\"\n\nHubcap pulled Sir Bertrand to one side, a serious look in his eyes.\n\n\"My lord,\" murmured Hubcap, setting out his stall, \"this young lady has been deprived for a century, as we hear from her own lips. She has been awakened and is all a-quiver, yet the code prohibits you from fully satisfying her.\"\n\nBoth men looked over at the young maiden as she stretched her body, her breasts standing proud as she freed herself from the aches of a century of sleep.\n\n\"Let me,\" continued Hubcap, \"fulfil this last part of the rescue. If I do this for you then honour will be satisfied.\"\n\n\"And I'm sure it will be such a hardship for you,\" Sir Bertrand said, his voice dripping with sarcasm.\n\n\"Well,\" said Hubcap as he gazed at the woman, who was now standing in front of the fire, her figure clearly seen through her flimsy garment, \"I'm sure it will be tiring, but if you are to face the dragon you must be in tip-top condition. And the code is clear on this point.\"\n\n\"Who wrote this bloody code, anyway?\" grumbled Sir Bertrand.\n\n\"The wise ancients, my lord.\"\n\n\"Well, bugger them!\"\n\nSir Bertrand poked around in the shadows and looked behind the tapestries but no door could he find. Hubcap was already enfolding the maiden in his embrace when Sir Bertrand returned, hrumphing to attract their attention.\n\n\"I'm terribly sorry, miss, but I appear to be stuck. May I take the liberty of climbing down your hair. Unless, that is, you wish an audience,\" Sir Bertrand finished hopefully.\n\n\"Oh. Yeah. Whatever.\" And the maiden locked her lips against Hubcap's as Sir Bertrand carried her surplus tresses to the window and cast them out. He took one last look at his faithful squire, the maiden's nipple now firmly grasped between his forefinger and thumb as she gasped in pleasure, and swung his leg over the window sill and disappeared.\n\nIf there was one small mercy, Sir Bertrand considered it to be that the horses had strayed and it took him half the night to find them and bring them back to the tower. But there the mercy ended, for even as Sir Bertrand wrapped himself in his cloak and lay on the cold hard ground he heard the sounds of moans, groans, whimpers and a creaking four poster bed. To make matters worse, he unwrapped the last of his packed lunches only to find it was corned beef sandwiches. Yuk. \n\nSir Bertrand awoke to find Hubcap standing nearby, humming and dancing a little jig.\n\n\"Good morrow, my lord!\" Hubcap called out cheerfully.\n\n\"Hubcap, we must needs have words over your behaviour.\"\n\n\"Yes, my lord?\"\n\n\"I fear that you have been taking advantage of my good nature and cupidity.\"\n\n\"Perish the thought, my lord,\" and Hubcap appeared genuinely shocked.\n\n\"And yet, Hubcap, I have spent the last two nights in discomfort whilst you, my supposedly faithful henchman, have enjoyed the rewards of my chivalrous endeavours.\"\n\n\"Yes, well, my lord, it's the code...\"\n\n\"Hubcap, I have my eye on you.\"\n\nSir Bertrand vaulted into his saddle and galloped off, leaving Hubcap to struggle onto the back of his own horse, a pleasing ache hindering him somewhat. The ache became less pleasing during the hard ride that Hubcap endured, attempting to keep pace with his infuriated master. Finally, as the third day of the journey eased towards night Sir Bertrand slackened his pace.\n\nThe bold knight reined in his horse as he reached the crest of a hill, and Hubcap joined him a touch wearily. Beneath them in a narrow vale lay a village with the telltale sign outside a tavern. Sir Bertrand hummed a little tune in his happiness, for a tavern meant a bed, and warm food, and a chance to make his squire sleep in the stables for a change.\n\nHowever, as they rode into the village it became clear that all was not well. Of villagers there was no sign, nor even of dogs and chickens. Sir Bertrand glanced at Hubcap and let his hand rest on the hilt of his sword, and his squire did likewise. Outside the tavern they dismounted, tethering their horses. Sir Bertrand carefully opened the tavern door and peered inside, then relaxed and pushed the door wide open.\n\nInside the tavern were the village men, clustered around the bar, morose expressions on their faces as they nursed their tankards of ale. The air of depressed gloom in the tavern was palpable and Sir Bertrand was on the point of turning and leaving, better to find himself a cheerful tree to sleep beneath when the innkeeper bustled over to him.\n\n\"Brave sir knight,\" began the innkeeper, \"you are well met indeed.\"\n\n\"What is it? Werewolves, or vampires, or ghouls?\"\n\n\"Vikings, bold sir. They have captured our women folk and hold them for ransom at the Blasted Oak. But the ransom they seek is way too high. Particularly with the recent downturn in the economy. There's no way we can get our hands on that kind of moolah.\" \n\n\"Hubcap, I presume that I must rescue said women folk?\"\n\nHubcap was already leafing through the Code of Chivalry, nodding to himself as he sucked in the air between his teeth.\n\n\"Forthwith, my lord, I am afraid.\"\n\n\"And I presume that the Blasted Oak isn't, for example, the name of a tavern in the next village.\"\n\n\"Indeed not, sir knight,\" said the innkeeper, his eyes widening in fear, \"it is the lone tree in the centre of Harpy's Heath.\"\n\n\"Yes, it would be. Come then, Hubcap, we have work to do,\" said Sir Bertrand, with considerably less enthusiasm than the assembled patrons in the tavern expected, \"do you have any idea the last time I slept in a bed?\" This last was to the confused innkeeper.\n\nThe moonlight cast fantastical shadows across Harpy's Heath as Sir Bertrand and Hubcap rode towards the Blasted Oak, its outlines clear even from a distance. The raucous sounds of a Viking knees-up echoed across the heath and our brave heroes were regaled with such ninth century hits as 'You're going to get your fucking head kicked in' and 'How's it feel to have no legs?' Clearly this would degenerate into a battle royal. \n\nSir Bertrand and Hubcap dismounted some distance from the Vikings and crept closer. The Vikings were clearly visible, sitting around their fire and quaffing copiously from horns of mead. The village women were a little distance from them, locked in a large wooden cage. The Vikings had got around to discussing which of the women they would have once the villagers failed to cough up the ransom on the morrow. Obviously, it was time to act.\n\n\"Hubcap, you take the six on the left whilst I...\" whispered Sir Bertrand.\n\n\"Sorry, my lord, but I can't,\" Hubcap whispered back.\n\n\"How so?\"\n\n\"The code is explicit. When facing a horde of Vikings the hero must defeat them single-handedly. It's underlined twice so I suspect it is a point of vital importance.\"\n\n\"And how can you read the code in this light?\"\n\n\"I checked before we left the tavern. I'm only really here to hold your horse.\"\n\n\"Bloody typical,\" whispered Sir Bertrand as he stood, his mood fouler than in many a year. He drew his sword and stepped forward into the firelight.\n\nHubcap marveled at just how much pure fury can influence the outcome of a battle between one man and a shipload of Vikings. Occasionally he had to duck as an arm, leg or head flew close to him. Sir Bertrand was raging and even the boldest Viking could not stand against him. As the last gurgling death cry faded across the heath Hubcap stood and went forward to congratulate the knight.\n\nSir Bertrand was already freeing the women, whose gratitude was clear.\n\n\"Corr, look at the arse on that!\"\n\n\"He can sheath his sword in me anyday!\"\n\n\"A-hugheda-hugheda-hugheda!\"\n\nThese and other similar compliments were swirling around the heath and Sir Bertrand was finding his armoured codpiece a touch uncomfortable, and certainly most unforgiving in matters of 'stretch'. A particular tone of cough, one he had learnt to dread, attracted him to the regretful expression on Hubcap's face.",
        "\"The code?\" asked Sir Bertrand, more in resignation than inquisition.\n\n\"The code,\" replied Hubcap.\n\n\"You checked in the tavern?\"\n\n\"I checked in the tavern.\"\n\n\"And I should look after the horses?\"\n\n\"It would be most helpful if we wish to continue the quest.\"\n\n\"And I can't bin the quest and revel in the good works I've done so far?\"\n\n\"The code is...\"\n\n\"Most explicit on this point.\"\n\n\"My lord, your wisdom matches your bravery. The princess is, indeed, a lucky woman.\"\n\nAnd with that Sir Bertrand turned and left, stomping over to the horses even as the sounds of giggling increased, mixed with appreciative sighs. To make matters worse there were no more packed lunches, not even of the corned beef kind, and Sir Bertrand spent a cold and hungry night with his cloak stuffed in his ears, though this did little enough to mask the sounds of extreme pleasure not fifty paces hence.\n\n\"Why so glum, my lord?\" asked Hubcap after they had delivered the satisfied women to the village in the morning, \"your quest has been a resounding success. Not even brave Sir Roland managed three heroic deeds in as many days, and today we will reach the dragon's lair and you will complete a fourth.\"\n\n\"As to my mood, Hubcap, you are well aware of the reasons for it. Now, I want to be sure on this last point. Once I rescue the princess I gain the reward, do I not? There is no room for doubt?\"\n\n\"The code is clear; the knight who rescues a princess from a dragon gets the full works, hand in marriage, half the kingdom, and a BJ that would suck the chrome from a trail-hitch.\"\n\n\"Very well, let us ride,\" said Sir Bertrand, and if Hubcap had been a little less elated from his night's work he might have noticed an evil smirk on Sir Bertrand's face.\n\nIt was again late in the day when our heroes reached the dragon's lair, a network of caves in the Solitary Mountain that rose from a deserted plain. Sir Bertrand and Hubcap spent a little time preparing torches then dove into the cave system, the intrepid (and the, by now, sexually frantic) Sir Bertrand leading, best foot forward.\n\nThey passed the bones of previous heroes, picked clean and gleaming in the torchlight. They passed toxic piles of dragon turd, so noxious that they must cover their mouths and noses with their cloaks. They passed piles of golden coins and jewelled cups, and whilst Sir Bertrand ignored base loot, Hubcap could be seen calculating their value and estimating just how much his horse could carry.\n\nFinally they reached a central cavern and there, chained by her ankle to a poor, small bed, was a young woman of such pure, outstanding beauty that she outshone the large pile of gold behind the bed. Sir Bertrand found his mouth watering as he gazed upon her 36C breasts, her legs up to there (highlighted by her tight fitting skirt), her forget-me-not blue eyes, her swan like neck, her...well I could go on but you get the picture. The princess (for it was she), seemed most downcast, her air one of disbelief that she would ever be rescued before the dragon devoured her.\n\nSir Bertrand stepped forward and his clanking armour attracted her attention. This was the moment, the pay-off.\n\n\"Oh, you've finally arrived have you?\" began the princess, her tone shrill, \"have you any idea how long I've been waiting? And look at this place! There's no bath, no banqueting hall, no opportunity for dancing. I have been here nearly a week, so you certainly took your time, and look at the state of your armour,\" and it must be said that Hubcap had been neglecting cleaning Sir Bertrand's armour, which was covered in gore and blood from the battle with the Vikings.\n\n\"Well, there are going to be some changes, I can tell you,\" continued the princess, \"and there will be no more gallivanting around when you're married to me. You will attend to my needs first and foremost, meeting ambassadors, escorting me to the shops, complimenting me on my choice of shoes, and helping with the redecorating. I like redecorating.\"\n\nA low, load groan echoed around the dim recesses of the roof of the cavern, and as Sir Bertrand and Hubcap looked closely they saw a sight to wet the pants of lesser men. A series of unfoldings revealed the Boeing sized leathery wings of a dread beast, and a moment later the dragon stepped down into the cavern, his jewelled chest scales glistening and glimmering.\n\n\"Please tell me you're the hero,\" said the dragon, a hopeful tone distinct in his voice.\n\n\"Oh, you've woken up have you?\" the princess said, accusation in her voice, \"you still haven't tidied this place up. Look at that pile of gold! Just lying around when it could be spent on some improving tapestries to hang on the bare stone walls. And look at this bed! I'm a princess not a peasant. I don't know about feeling a pea through this mattress, for I can feel every wooden slat that holds what you laughingly describe as a 'comfortable but economically priced sleeping pad' in this... this... narrow and undecorated bed. Have you no conception of who I am?\"\n\nSir Bertrand met the eye of the dragon and felt a new sensation; sympathy for a foe.\n\n\"And you haven't thought to buy any better wine, have you? I suppose I must make do with that third-rate muck you bought from your friend because he works in the trade and got you a discount. Ah me, well, I am thirsty and I do so want refreshment as I watch my brave hero slaughter you and carry me back to the castle, where he will install several new sets of shelves for the ones I have are so last year. Phillipa! Phillipa!\"\n\nAnd at that a shy but deeply attractive young woman appeared from the shadows carrying a jug of wine. Sir Bertrand felt Hubcap quiver at the sight of her, her dark hair plaited and hanging down to her narrow waist, her dark eyes burning with wit.\n\n\"So, you are going to rescue her, aren't you? Please?\" said the dragon, and Sir Bertrand felt for him. A week with this princess would drive the strongest of beasts totally up the wall.\n\n\"Err,\" said Sir Bertrand, \"I know that this... fine, young example of privileged womanhood will be rescued. And I have a plan. Hubcap!\"\n\nSir Bertrand and Hubcap retreated to a corner of the cave.\n\n\"Hubcap, it is time for a serious conversation.\"\n\n\"My lord?\"\n\n\"Hubcap, you have presented yourself as my faithful squire, but honestly, that's a crock! I checked the code you keep referring to whilst you were disporting yourself last night and the bloody ink was still wet!\"\n\n\"My lord, I... I...\"\n\n\"Can it, Hubcap! I know the truth. However, you have accompanied me on this quest, and now we are at the moment of success it is right and fitting that you receive a reward too. Kneel!\"\n\n\"Errr...\"\n\n\"Kneel!\" And Sir Bertrand seemed to wax large in his controlled anger. Hubcap dared not gainsay him, and sank to his knees in front of the furious knight.\n\n\"On the night before battle it is customary for worthy squires to be knighted, lest they die bereft of the honour of chivalry. This promises to be one hell of a battle, and I would not have you die without a requisite honour, therefore...\" And here Sir Bertrand drew his sword and touched Hubcap's shoulders with the blade, \"I dub you, Sir Hubcap.\"\n\nSir Bertrand walked back into the centre of the cavern, the dragon looking hopefully at him.\n\n\"Dragon, I am indeed a knight pursuivant, but I am accompanied by a man who has shared my dangers, and whose shoulders have now felt the accolade of knighthood. As a singular mark of respect towards my former squire I give him the honour of rescuing the princess and the rewards that come with it.\"\n\n\"Me! You can't do...\" stuttered Sir Hubcap.\n\n\"Oh, but I can. The code is quite explicit, I believe. So... go to it!\" And with that Sir Bertrand grabbed Phillipa's hand and led her from the cavern, whispering endearments in her ear as she smiled and blushed, happy in the knowledge that she had been rescued from her own 'fate worse than death'; that of Lady-in-Waiting for life to the princess.\n\n\"Well, get on with it then! The walls back at the castle won't paint themselves,\" said the princess, and Sir Hubcap had a terrifying premonition about the rest of his life. Shakily, he drew his sword, and most unwilling, he advanced on the dragon, praying for death.\n\n\"Well done, you've beaten me, now take that bloody woman away. Me? I'm off to the next kingdom!\" said the dragon, and in a flash he disappeared down a dark tunnel.\n\n\"So, are you going to unchain me or are you going to stand there all night looking like a stuffed haddock? And where did that foolish girl of mine go?\" said the princess impatiently. Sir Hubcap felt his feet stumbling towards the bed, doom overpowering him, and he knew he couldn't resist; it was the Code.\n\nSir Bertrand took Phillipa back to his castle and there they enjoyed rampant sex in every room. He thrust his knightly cock into her in the solar, the buttery, the great hall, and his favourite, on his own soft, comfortable four poster bed. And on special occasions Phillipa made him tie her to the bed so that he could 'rescue' her once more, but not before he had ravished her first. And he never went questing again.\n\nAnd so they lived happily ever after... well, all except for Sir Hubcap, who became intimately acquainted with flat-pack furniture and the multitude of different brands of shoes that the princess loved so. And sadly for Sir Hubcap, though gorgeous, she had both an aversion to sex (\"Yuk! All that squelching? We did that three months ago, and it's another three months before I need submit to your filthy groping again\"), and an eagle eye to watch over the morals of her maids and ladies."
    ],
    "authorname": "Gunnlaug",
    "tags": [
        "fairytale",
        "princess",
        "dragon",
        "damsel in distress",
        "battle",
        "squire",
        "castle",
        "tower",
        "quest"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/sir-bertrand-and-the-dragon"
}