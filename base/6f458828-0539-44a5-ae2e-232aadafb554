{
    "title": "The Twelve Zenati Pt. 15",
    "pages": [
        "Authors note: Hello everyone. I am grateful to David who is back onboard proofreading for me again, thank you my friend. I hope you continue to enjoy this series. ~ellie. \n\n*****\n\nNoah walked into the neurology department and took yet another deep calming breath. Marcella was going to be okay, Helena was with her, and Vivienne and Gideon were making her see sense. He didn't need to be worried about her now. Pulling himself up straighter, he moved confidently toward where he could see Xavier and Emma at the end of the department, near the Critical Care ward. He just had to deal with one thing at a time, and right now he had to make sure that Dominic was going to recover quickly, and that Emma and Xavier were coping with the very real possibility that he may not recover fully from his illness. Only time would tell but, as Imelda reminded him, he knew in his heart that Dominic would bounce back to his old self eventually.\n\n\"Ambrose said everything went well, but he'll be in recovery for a while yet,\" Xavier said quietly, as Emma went with a nurse to change into sterile scrubs so she could enter the recovery room. \"She trained as a nurse before coming here,\" he nodded toward where Emma had disappeared with the nurse. \"It wasn't hard to convince her that she should be in there so we could talk freely. Tell me, what's going on with you today?\" His tone held the thinly veiled threat that he wouldn't take any more half-truths today.\n\n\"Imelda came this morning while we were here. I was in the waiting room alone. Her visit unsettled me, and, as the day progressed and her truths became more apparent, I haven't been able to find my own path through it. I'm questioning every thought I have now. Can you understand that?\" Noah asked, as if needing someone to understand his inner turmoil.\n\n\"Dominic says the woman speaks in his head,\" Xavier frowned. \"She must, because I have rarely heard a sound pass her lips. \"Dominic trusts her implicitly, however, and that is good enough for me, because I trust him without question. What did she tell you that has you questioning everything, today of all days?\"\n\n\"She ridiculed me that I didn't know for certain that Dominic would make a full recovery and take his rightful place at your side, and she told me that I had other important matters to deal with today. She told me that, like Dominic, I am not made the same as the other men of our family, which is why I can hear her speak,\" he pointed to his head and grimaced. \"It's also why I may not feel the presence of my curse breaker in the same way my brothers felt theirs.\"\n\n\"I remember when Dom realised being around Emma and seeing her with me made him nauseous. Not just nauseous but physically sick and weak, like he was allergic to her or something,\" he chuckled, then frowned and turned to look more carefully at Noah. \"You've been unwell today, that much is apparent, but you were also sick the day that Marcella went missing and found that boat graveyard too,\" he accused, as he realised what Noah was saying and putting the pieces together quickly. \n\n\"Dom told me my curse breaker was close after Gen found Olivia, and Gideon started finding reasons to see Vivienne. Close but not here yet, or so I thought. I ended the attraction Marcella and I felt before it began, reasoning that it was a complication that I didn't need if my curse breaker was going to appear at any moment, at least according to Dom. I rejected her advances, and we have had a tacit friendship since then. One of convenience, not actual affection any more. She has done her best to piss me off, and I have done my best to ruin her reckless plans. We're antagonists, not soul mates,\" he groaned and leaned back in the solid plastic chair, tilting his head back against the wall until he looked at the ceiling.\n\n\"And this Apollo Martino who came to see her?\" Xavier asked curiously. \"He says he is here to propose to Marcella and then he pushes her in front of a moving car? That's some proposal,\" he chuckled, shaking his head.\n\n\"I don't have the full story. I don't think I can get the full story from any one person. They have known each other for a long time, and Olivia swears he would never hurt Marcella, that Val and Fab must be wrong. From the other things Olivia said, I think she might be right, but I want to talk to him myself,\" Noah admitted. \"It's not that I doubt what Val and Fab said they saw but there must be more to it, there has to be.\"\n\n\"Tell me the story you have so far, even if it doesn't make sense yet,\" Xavier frowned. He was good at conundrums and sorting the fact from the fiction. It was as if the truth glowed through the drama surrounding it in his mind and he could see to the heart of emotionally-charged situations. He knew he was no oracle, but he had his own gifts. Noah relayed the conversations that he had had with Olivia, both in the car and at the hospital. Then he sat back and sighed, realising how ridiculous it all sounded, with the fairy tale references.\n\n\"Alright,\" Xavier said, his eyes holding a thoughtful look while his brain kept turning over what he had heard. b\"We can't stay here. Emma is with Dom and Papa will be here any moment now that Dom is in recovery. Taino,\" he called to his warrior who had given them space to talk as freely as possible in the ward. \"Come with us. Leave all of the watchmen here. We won't be going far.\" Pulling out his tablet, he sent off several messages at lightning speed, his fingers flying over the screen as they walked toward the elevators, then he veered to the right, after leaving the ward. A large office, with floor-to-ceiling windows, greeted them as they stepped through a door marked \"staff only\". It was obvious that the resident medical staff took their breaks, and spoke with families who required privacy to grieve for their loved ones, in this room.\n\n\"Taino, let Giuliano know where we are and that we are contacting Marcus,\" he ordered, as Orlando come through the door looking rushed and confused. Xavier looked up with a questioning eyebrow raised. \"Is Helena with you?\"\n\n\"She's on her way. Hector is still with Ambrose but should be free soon,\" Orlando reported.\n\nNoah watched it all go on around him, neither commenting nor questioning his cousin, as Xavier took command of the situation. He was grateful to finally be doing something, even if he didn't know what that was, rather than sitting around feeling like he was wasting time waiting. Waiting for Dom's surgery, waiting to find out about Marcella, about Apollo, about why Olivia found what happened so hard to believe, and waiting to find out what exactly had gone on in their family, as the girls grew into young women, to make them all so neurotic when it came to discussing their family. \n\nXavier was in his element. Much as Noah had expressed, sitting idle all day had chafed at him. Now he was going to take his power back. Something wasn't right about this whole situation, and he was determined to find out what it was, and help Noah with his problem regarding Marcella at the same time. He began issuing orders, confident of his gut feelings when it came to the two Gambaro sisters and, once he had everyone doing what needed to be done, he would make a call and get some answers where that was concerned. Nathanael was out of the hospital now, and he knew that, even if everyone else in Perth covered up a family scandal, Nathanael would give him straight answers and sort out any issues in his extended family, if need be. He could call Oscar as one future chair to another, but he had known Nathanael for half of his lifetime. They were close friends, and they had a bond that held them tighter than most, especially since their trip overseas to be with Mattias.\n\n\"First we get the link up and running, and then we call everyone involved. These men, from the other Tables, are friends I trust, and they will hear us out and give us honesty, if nothing else,\" Xavier murmured to Noah. \"See if you can get that old machine up and running. Zanto should be here soon.\"\n\n\"Sure, it doesn't look so old,\" Noah shrugged and went over to the large desk. The computer was state of the art, like most things in this hospital. He was able to get it up and sync up the computer to the family network, via a hotspot to his phone. It was slower than he would like but, just as he was about to tell Xavier that he was ready, Zanto and Quinto nudged him out of the way. Then they took out a host of equipment from large bags they carried and began to set up the computer for the conference call, with extra speed and better security than the hotspot on his phone could offer.\n\n\"Theo Martino, Nathanael Gambaro and Marcus Battaglia have all confirmed and are waiting for the secure link,\" Xavier informed them as they worked, and he placed his tablet down, giving them access codes to their secure lines, where they waited for the invitation to the web conference room.\n\nNoah should have been used to it. He had been working at both Xavier and Dom's side for a while now, but he was in awe of the very real power Xavier exuded and wielded when he took charge of situations like this. Their brothers and cousins did what he asked without question, their trust in him and his leadership absolute. As it should be. Noah smiled and watched Xavier issue commands, he knew he felt the same way. Gideon could and would step up on days like today, but he didn't hold the same tight grip on the power and loyalty of their table. He led by his using his easy, non-threatening relationships with them all, the expectation that they would respect the chain of command, rather than the power that Xavier naturally wielded. If he were honest with himself, he and both of his brothers were ruled too easily by their emotions to ever aspire to the chair that Xavier held so expertly.\n\n\"Before you all ask, Dom is well and it is believed he will make a full recovery in time,\" Xavier said ten minutes later when he sat in front of the monitor, a webcam pointed at him to show his calm unlined features to his friends in the webconference.\n\n\"That's good news,\" Nathanael breathed. \"I had thought with this conference call...\" his voice trailed off.\n\n\"I believe this matter pertains to what happened earlier today between the Gambaro girl and Apollo Martino,\" Marcus said, making Theo emit a startled sound. \n\n\"It does. Can I ask how you found out about the incident so quickly?\" Xavier asked, carefully.\n\n\"Apollo called as soon as he was accused of attempted murder, pleading his innocence and asking for our assistance in negotiating his release,\" Marcus explained. \"My brother Francesco is on his way to you as we speak. I trust the girl suffered no lasting injury.\"\n\n\"She will recover. She is still undergoing the doctor's full assessment at the moment. Francesco is on his way here?\" Xavier questioned, believing that was an odd choice of advocate.\n\n\"He was Apollo's mentor during his training with us. He trained as a warrior, and chose to stay and train as a Master under Francesco following his graduation into the warrior caste. I believe he felt more at home with his father's extended family than with his mother's, which is why he was not exiled with her,\" Marcus explained further.\n\n\"Is that how he met Marcella Gambaro?\" Noah asked from his place beside Xavier. \"Was she sent to the Battaglia by her father?\"\n\n\"Francesco will be the best to answer those questions about the details of the relationship between Apollo and Marcella, but I am aware that they were here at the same time,\" Marcus confirmed.\n\n\"When will Francesco arrive?\" Noah asked, grinding his teeth against more waiting for answers.\n\n\"We don't send the women of our family to the Battaglia,\" Nathanael said quietly, confusion lacing his voice. \"Our facilities here are more than equipped for the trials expected of our sisters and cousins.\"\n\n\"It was a special request by her father through one of our senior members. Her older sister was also sent to us a few years before. We were told that both girls were rebellious and had been involved in the underground club culture.\" He tried to put the idea of drugs in the best light. \"We found no evidence of addictions when they arrived here however, and assumed that the father had caught the indiscretion early. They underwent a full trial, and all that entails, at the request of their father. The oldest girl broke quickly and easily, and her trial was short. She married shortly after returning home, to a Farnese man, I believe.\"\n\n\"And Marcella Gambaro?\" Xavier prompted, before Noah could open his mouth to demand the information. He placed a supportive but restraining hand on his forearm as they waited for the reply.\n\n\"She was highly intelligent.\" Marcus looked down as if rechecking a file before continuing. \"She had a good grasp of the laws and traditions before she arrived. She was resistant to much of the... physical training and, despite her trial being cut short, she was sent home with honour.\"\n\n\"Why was her trial cut short?\" Xavier frowned, knowing that this was a rare occurrence, even for the best and the brightest of the women who trained with the Battaglia.\n\n\"She was sent to our facility twice. The first time, her father sent her before she came of age and when that became apparent, she was returned to her home and her father was admonished. Nathanael may or may not know details of that occurrence. At the time, Apollo was completing his warrior training. I believe they met at the ball which she was allowed to attend as an escort before the error in her birthdate was discovered. The second time occurred after she was twenty-one. She was sent involuntarily for retraining under an alias. She was at the facility at the same time as Veronica Donati, and they were housed and kept as a group for much of their time with us because of the accusations pressed against her by her father. She was released after the incident between Veronica and Peri Donati,\" Marcus admitted. \"Apollo was being mentored by Francesco at the time.\"\n\n\"I'll look into it,\" Nathanael said, doubt creeping into his voice. \"I don't believe anyone on the Tables would have sanctioned a girl being taken involuntarily without charges being laid against her, and there were none that I heard of when this apparently took place, and I was in a position to hear of such things at the time.\"\n\n\"Why am I here for this conversation? What exactly is Apollo being accused of?\" Theo asked in a tired voice. He had been dealing with enough illegal dealings and criminal acts perpetrated by members of his family since the shootings occurred.\n\n\"Four witnesses swear to the fact that Apollo Martino pushed Marcella Gambaro into oncoming traffic earlier this afternoon. Marcella does not remember the incident; her sister swears that Apollo would not have done it. Apollo pleads his innocence, yet we have four witnesses that tell another story. I believe there is something deeper going on between the father of these three women, not two but three sisters, and the Battaglia that allows Apollo's involvement in their lives, and I am trying to find the truth of it,\" Xavier contemplated what he now knew in addition to what Olivia had told Noah.\n\n\"In the last decade, since he chose to train as a warrior like his father, Apollo has spent more time with the Battaglia family than that of the name he bears. There has been great upheaval and unrest here over the last decade or longer, and we cannot blame him for his choices,\" Theo said, with understanding. \"I am happy, given the present climate, for the Battaglia to investigate his part in the incident. Should it become necessary, or should he request it, we will send a representative to meet with him and you.\"\n\n\"We will send someone as well, to talk with Marcella and Olivia,\" Nathanael nodded, disturbed by what he was finding out. How had his mother not known that these girls were being sent to the Battaglia against their will? The question bothered him immensely, and he determined to find out what was going on. \"Marcus, can you send me details of who requested and approved the trials of these women?\"\n\n\"I can,\" Marcus nodded, and glanced away from the camera distractedly, as he sent modified files to Nathanael and Xavier. \"Francesco will be landing soon, I will have him report to you when he lands,\" he said. \"I am glad that your brother's surgery was successful. I am sorry that I must go now. Another urgent matter needs my attention.\"\n\n\"I will leave you now too. Please give Dom my best wishes for a speedy recovery,\" Theo said. He too did not look happy with the information he had been given, but little of it related to him and his family, compared to the other two Tables represented in this conversation. He realised that Xavier had invited him as more of a courtesy and was grateful for that. \"I'll be in touch, should I find anything relevant for you but you should know he was cleared by the Tatar and AFP investigations, which were more than thorough. It is hard to believe he did it purposefully.\" Theo sighed, not wanting any more bad publicity levelled at his table after the Mother's Day attacks.\n\n\"Nathanael, can you hang around a few more minutes,\" Xavier asked, as first Marcus, and then Theo, disappeared from the screen in front of him. \n\n\"I have to tell you, X-man, I'm more than a little shocked by the whole idea of these girls being sent without our knowledge and against their will.\" Nathaniel ran his hand through his hair to the back of his neck.\n\n\"Olivia has told us that her father hurt Marcella often. That Marcella protected her mother and sisters. How is it that no one stepped in and stopped the abuse, if that was indeed what was happening?\" Xavier asked mildly, trying to keep the accusation of the question from his voice.\n\n\"I can't give you any answers. I wish I could, but I'll investigate the family. I'm sure Oscar looked into it when Olivia showed up. back from the dead. I've been out of the loop for a while,\" he grimaced. \"But now I'll look into myself, and get back to you.\"\n\n\"The girls haven't done anything wrong,\" Noah hastened to assure him. \"It's just the situation doesn't seem to make sense. Not for Olivia or for Marcella. Probably not for the older sister either, though she hasn't contacted us or Olivia since she was found.\"\n\n\"I think Marcus and Francesco are going to be the best sources of information, but I will send you anything I dig up,\" Nathanael assured them. Inwardly, he was cringing that any of what he had just heard could be true. The Gambaro's weren't stuck in the past. They were progressive to a point. The women of the family were encouraged to have careers and lives outside the home and their children, unlike the very people who were questioning him about it. The Zenati, along with the Donati table, were known for holding tightly to tradition and Table law.\n\n\"We'll keep you updated too. Assuming that you want to know how Marcella is after being pushed in front of a car,\" Xavier needled his friend. \n\n\"I wasn't uncaring. You had said that she was being assessed and I am sure your doctors would have called if anything was life-threatening. Keep me informed though. What you have said is more than a little unsettling on several levels,\" he frowned. \"I'll get on it and get back to you.\" he said, and ended the call before his friend could hit him with any other revelations.\n\n\"We'll have all the answers you need about her past soon enough,\" Xavier said to Noah. \"The question is, will it make you feel better or worse, knowing it all?\"\n\n\"I'm already in the friend zone with her, just barely. How much worse can it get?\" Noah gave a half-hearted chuckle. \"I'd like to know all of it. It can't hurt, and it might just help bridge that gap a little.\"\n\n*****\n\nThe elevator rose up, rather than back down to the emergency department, and Marcella knew she was being taken to a ward where she would be imprisoned so she would stay overnight, just as the doctor had ordered. No matter where she went the bloody Tables continually interfered in her life. She had practically broken free of her father's stranglehold on her life back in Perth, but she had taken back the power of her last name when she had heard that Olivia was alive, and decided to come and trade on the family connections between the Gambaros and the Zenatis. She felt her anger rise, as yet again she felt forced to endure yet another situation against her will,because of the family she had the misfortune to be born into.",
        "\"If you think I am staying here...\" she began her rant and placed her hands on the arms of the wheelchair, yet another thing forced upon her, to stand up and face her kidnappers.\n\n\"Stay seated, Miss Gambaro,\" the deep voice of the orderly murmured, as he placed a large restraining hand on her shoulder, seemingly unconcerned by the malevolent look she levelled at him.\n\n\"You can't keep me here against my will,\" she hissed at him as he pushed her steadily back down into the chair. \"I will just leave as soon as you deposit me in whatever ward and bed they told you to put me in. Did you know about this?\" She turned her rage on Vivienne, who had promised her that if the scan went well, she could go home with a nurse.\n\n\"No! I...\" Vivienne tried to defend herself but the doors opened, and a smiling Junie Zenati waved them forward with a rush of words.\n\n\"Oh, thank goodness! I've been so worried.\" She bent down, peering into Marcella's surly expression. \"Are you in pain? We can fix that. Someone find Helena for me. Now, most of the men are busy with one thing or another. Between Dominic and you it's jup to us women to be the caretakers as usual. This way, come on.\" She waved the orderly forward and led the way to a single bedroom, already decorated with flowers. \n\n\"I'm not sure what you were told, Junie,\" Marcella said, trying to reel in her temper and speak respectfully to the Zenati Matriarch. \"But I'm not staying. I need to go home. Vivienne was going to organise a nurse and come with me. I'm sorry you went to so much trouble for nothing, especially when you must already be so worried about Dominic.\"\n\n\"I'm afraid that's not possible now, Marcella,\" Junie said, in a regretful voice. \"You see, some witnesses saw a Martino man assault a Gambaro woman and then push her into traffic. Representatives of both families and the Battaglia are on their way to our little corner of the country now to investigate, so we must make sure that you have been looked after with the utmost care and consideration. Just like Dominic is being looked after, now that the worst is over for him too.\"\n\n\"The Battaglia! Why is the Battaglia coming? I already said it was an accident. Apollo wouldn't do that, no matter how it looked. I am sure that he wouldn't have actually pushed me. He was probably just reaching out to catch me when I stumbled. Honestly, you have to tell them all it was a huge mistake and send them home,\" Marcella urged, her voice rising with her anxiety. She knew she would be blamed for the drama surrounding this accident and they would try to take her back for indoctrination on how to be a good table woman again.\n\n\"I'm afraid it's too late for that,\" Junie smiled, patting the bed. \"Now I have sent someone to get you suitable hospital wear for the night and some basic personal things. Don't you worry about a thing. I have it all under control. It was lucky this room was free. Dominic will be just across the hall in his room, so family members will be close by all night in case you need anything, anything at all.\"\n\n\"Dominic is okay?\" Marcella asked softly, feeling bad that she had caused this woman and her family even more stress today.\n\n\"He will be just fine in time. He is young and strong and has everything to live for,\" Junie smiled, but that didn't dispel the tension in her eyes. \n\n\"I'm glad it all went well today,\" Marcella said in a soft voice, and sat on the bed, feeling for the woman who had gone to so much trouble for her when she should be with her son.\n\n\"We all are,\" Junie sat on the bed beside her. \"You're a smart girl, Marcella. You know how to pick the battles you can win and those you can't. Stay here tonight, and as soon as all our visitors are satisfied that you are not in any danger, you can go back to the apartment. I'm afraid that if you don't, the Gambaro family may insist you return with them for your own safety, and we don't want that, do we?\" She spoke quietly, and she felt the young woman beside her stiffen, confirming the belief that she had no wish to return to Perth.\n\n\"I understand,\" Marcella nodded, though she hated being put in a position where she had no freedom again. She'd spent all of her adult life breaking free of the restrictions placed on her by her last name, and now she had only herself to blame for being trapped again by Table laws and traditions.\n\nWhen Ambrose's wife, Michaela, arrived with a small overnight, case containing clean clothes and toiletries, she disappeared into the bathroom and tried to think her way through the accident, but she just couldn't remember the car at all. Her head ached and, if she was truthful, birthday or not, she just wanted to go home to sleep, not go and party with Greg and his friends. She was glad Vivienne had insisted on cancelling her date, not that she would ever admit that to anyone.\n\nShe was at least grateful that whoever had shopped for sleepwear didn't try to give her anything with cute cartoon sheep or clouds on it. The long sleep shirt was like wearing a comfortable men's pyjama top, except that it was fitted to a woman's figure, navy blue with white piping along the buttoned seams and a pocket over her left breast. It was something she might have bought for herself if she knew she would have to stay overnight in the hospital. She might have chosen one not quite as long but, at her height, any item off the rack seemed long on her. She shrugged. I,t wouldn't matter here. No one would see her, except maybe Vivienne. \n\nPiling her hair on top of her head in a messy bun, she went about washing her face properly and brushing her teeth, before returning to the bedroom, resigned to her fate for tonight. Thankfully, no one was there, not even Vivienne, who had probably gone to deal with her own life now that she was sure Marcella would stay put for the evening. Having missed lunch and now dinne she found she was hungry, but she was loath to call a nurse and ask if anything could be salvaged from the kitchen. She would be happy if they all just left her alone until she could leave in the morning. She'd been in worse situations and places, so she could certainly handle one night here, as long as they left her alone.\n\nPouring herself a glass of water from the jug on her hospital grade stainless steel nightstand, she rifled through the drawer, and the small cupboard area within it, looking for her handbag and, hopefully, her phone. She sighed when she found it empty. There would be no escaping this place tonight, even if she hadn't agreed to stay. At a loss for what else to do, she climbed onto the bed and settled down, believing that sleep was the only thing she could do in this place and not be berated for. Tomorrow, everything would be sorted out properly, and she could go home and keep doing what she had been doing. \n\nExcept that she knew she couldn't. She didn't believe that Apollo would have purposefully hurt her. He had a temper but never with her. She frowned, trying to remember their conversation. She was sure they hadn't even been arguing. Not really. He wanted her to stay, and she needed to go and meet Greg. He'd grabbed her arm, she tried to pull it away, then she'd stumbled and fallen onto the road. Had he pushed her? No, he wouldn't have. She was sure he wouldn't have. Why would the witnesses say he did, though? She frowned and tried to will her brain to remember.\n\n\"Hey, how are you feeling now?\" Vivienne asked, as she came back into the room.\n\n\"Angry; confused; like any innocent prisoner would,\" Marcella grumbled.\n\n\"You're not a prisoner here,\" Vivienne said softly.\n\n\"Then give me back my belongings and let me go home, if I'm not a prisoner here,\" Marcella snapped. \"Strike that. Even prisoners get at least one phone call. I'm a hostage. That's what I am. A fucking hostage to the fragile egos of Table men. I did nothing wrong, Viv, I'm perfectly fine. I shouldn't have to be here, and you know it.\"\n\n\"You took a really nasty bump to the head, Marcella. The fact that you can't remember the fall or the car tells me you are not as fine as you think you are, so just indulge us, please. You aren't a prisoner or a hostage. You are just here under doctors' orders because you had an accident and we don't know if there will be after-effects or how severe your concussion is,\" Vivienne tried to reason with her friend, not backing down from Marcella's vitriol.\n\n\"Fine, it's not like I have a choice,\" Marcella grumbled. \"I don't suppose you have a mint or a tic tac or something to eat in your bag, do you?\"\n\n\"I have better than that in my bag,\" Gideon announced, walking into the room. \"Pork ribs in Peking sauce, I believe was the request.\" He hefted the takeaway bag and wheeled over the small table so she could eat in bed. \"Not a very good birthday for you, I'm afraid, but we will make it up to you tomorrow,\" he said in a positive tone. \"Tonight, you won't have to deal with anyone else. Just me, Viv and the occasional nurse, who will want to prod and poke you, no doubt. Gen has taken Olivia home with the promise that I'll call if there is any change in your condition and Noah is busy across the hall with Dominic and X, as are the rest of the family.\" \n\n\"Thank you,\" Marcella said quietly, looking at them both. \"That's exactly what I needed to hear.\" She let a small smile of pure relief show on her face. \"Did you say Pork ribs in Peking Sauce?\"\n\n\"I know how to a please a woman,\" he chuckled, and began pulling small cartons of food from the large bag he had carried in.\n\n\"Is that so?\" Marcella grinned at Vivienne. \"Do tell? Vivienne won't give me any details at all for the big smile she wears every morning when we meet early for coffee,\" she teased, making Vivienne blush deeply, and Gideon laugh loudly.\n\n\"If I told you, your expectations for all other men in your life would be too high. Best I leave them a little room to impress you without the comparison,\" he continued to laugh.\n\nBoth Marcella and Vivienne joined him in his laughter and, for the first time in hours, Marcella finally relaxed into her fate for the evening.\n\n\"Duty calls, save me some of everything,\" Gideon grinned widely, standing up and putting his phone to his ear as he walked out of the room.\n\n\"That saves me kicking him out, at least,\" Vivienne grinned. She watched him go and, once Marcella had started eating, started the conversation she needed to have, with determination.\n\n\"Oh, why would you do that?\" Marcella asked, around a mouthful of pork.\n\n\"I need to talk to you and have you listen, not interrupt or argue, just listen, for a few minutes, okay?\" Vivienne said, her voice serious.\n\n\"No lectures, please,\" Marcella sighed. \"I told Junie that I would stay here tonight, and I don't really have a choice anyway.\"\n\n\"I was here consulting on another case when Olivia was shot and came to this hospital. Genesis reached out to me because of my speciality with women who have suffered trauma at the hands of the people who were supposed to love and protect them,\" she began. \"At first, I put all of Olivia's symptoms down to what occurred with Remington Royce, but she had a traumatic childhood too, didn't she?\"\n\n\"No!\" Marcella gasped. \"I made sure she was safe!\"\n\n\"Safe from who?\" Vivienne asked quietly. \"Who hurt you, Marcie? Why did you look so scared when Junie mentioned you might have to go home? Why did the mention of the Battaglia worry you so much? Were you sent there? To the Battaglia facility?\"\n\n\"It's nothing to worry about, Viv. Honestly, it's all been dealt with and it's in the past. Olivia was safe, I promise. You don't have to worry about her or bring any of that up. Her trauma is all Royce's doing and she will get what she deserves from that bastard,\" Marcella said. In an attempt to change the subject she added, \"I think I have a lead on that club she talked about, Hermione's.\"\n\n\"Marcie, I love you. I am just trying to help. Anything you tell me I will treat with doctor-patient confidentiality. Just don't try to tell me that whoever 'they' are and whatever happened to you still doesn't bother you. I'm not that stupid and you never know, maybe talking to someone who loves and accepts you for exactly who you are will help,\" Vivienne tried again. \n\n\"Let it go, Viv, please,\" Marcella sighed. \"It's my birthday. Let me enjoy this 'cause I'm starving!\" She popped another piece of pork into her mouth, as if to end the conversation. \"Tell me about your birthday plans for tomorrow.\"\n\n*****\n\nAfter dropping off the Chinese food to Gideon at the hospital, Genesis finally turned the car towards his home. The home that he had fully intended to introduce Olivia to in the most extensive way today. Instead, they were both returning home wrung out after the events of the afternoon, and he knew that any plans he had were wasted now. Shelving the idea of taking her into his playroom tonight, he considered their new bed and how he might enjoy her there before falling asleep with her wrapped in his arms and no threat of being woken by family members, who had no sense of personal boundaries.\n\nGenesis reached over and caressed her leg. He had used her well that morning but had left her unmarked, her pristine skin begging for the biting caress of his flogger and crop. He continued with his caressing touches to her legs or breasts as he navigated the street towards home, making her draw her breath because the slight discomfort when he gave touched her. , Every sound and movement she made just made her more heated and him hornier. He had been desperate to take her home this afternoon, but Marcella and his brothers had needed them more. Then he had stayed to ensure everything was okay with Dominic, rather than receive the group text message alone, which he knew Xavier would send out tonight.\n\nOlivia wasn't hungry for food anymore, despite the delicious smells coming from the takeaway bag, as they pulled into the parking garage of the apartment block where Genesis's apartment was. Their apartment, she reminded herself. His touches on the drive home had become increasingly arousing as she remembered their morning together and the promises of the delights that awaited her here. It was far later than they had expected to arrive. Marcella and Dominic both would be fine, and she was relieved, to say the least, but the day had been taxing, not only for her but for Genesis as well, she knew, and she wondered what would happen when they finally got into the apartment and were totally alone for the first time. No watchers or concerns about his brothers walking in. Total privacy for the first time in their relationship.\n\n\"Ready?\" Genesis asked, and Olivia smiled as he helped her from the car and held her hand, guiding her to the elevators. \"We have the fourth floor,\" he indicated as he pressed the button. \"Gideon is on six, Noah on five and Sera is on three, though her apartment is smaller than the ones above it. Half of the third floor and the two floors below were made into small apartments where visitors stay. Marcella has been staying on the second floor in an apartment. We have the fourth floor to ourselves.\"\n\n\"Oh, that's great,\" Olivia said, a little breathlessly, as nervous excitement filled her. She stepped out of the elevator into a spacious foyer area. She could see a living area to the right and let Genesis guide her to the left instead, through a dining area to a spacious kitchen with a small table.\n\n\"Sit, and I will grab some plates for us. We should eat while it's still hot and you must be hungry by now,\" Genesis said easily, as if he had all the time in the world and wasn't eager to get her naked and bound for his pleasure. \"Then I will show you around.\"\n\nOlivia sat obediently and watched as Genesis manoeuvred comfortably around his kitchen, as if he used it often and even, possibly, cooked in there. She wondered if he had a housekeeper for cleaning and cooking that perhaps came during the day. It would be uncomfortable for her if that were the case but, as always, she would do what he asked. She waited until he came back to the table with plates and iced water before asking the question.\n\n\"Before you,\" he smiled gently at her, \"I wasn't home often enough to warrant having someone here full-time, so I shared with my brothers. I imagine Gideon will be less inclined to share now that he is married and no doubt planning on starting a family.\" He said thoughtfully, \"Maybe it's time we all started managing our own households individually.\"\n\n\"I can manage it,\" Olivia said quickly. \"I doubt that we will make much mess and it shouldn't take too much time to do a little cleaning each day. It would be difficult to constantly have another person here, especially when we finally have some time alone.\"\n\n\"For now, we'll keep things as they are. Heidi won't be intrusive in any way. She's a lovely, well-trained woman and you might find you like her company. Especially as it's still too dangerous for you to be going out without me or your security. You will possibly be spending quite a bit of time here without me during the day. I will still have to go to work, and that means I won't be right across the hall all day anymore.\"\n\n\"I hadn't thought of that,\" Olivia admitted, a little morosely. \"I guess some company would be good. Vivienne lives just upstairs though, so she will visit, won't she?\"\n\n\"I'm sure she will,\" Genesis smiled reassuringly. \"Now tell me how you are feeling about today,\" he prompted, wanting to allay any lingering concerns that she had about her sister's accident. He noticed once again that when she spoke about her family, she became wooden and unemotional, and he decided to talk to Noah in the morning, to discuss what he had discovered about her parents and her upbringing. He didn't like her shut down like that. He wanted her happy and excited and playful as she was this morning, before all the drama began. It had been a long day, however, and he couldn't blame her for the cloud that had fallen over their plans.\n\n\"You didn't eat much,\" Genesis indicated her plate towards the end of the meal. \n\n\"I guess that I'm just not that hungry tonight. You know, it's been a weird day and all,\" she admitted, after having just spent the meal going over what had happened and confessing her argument with Emma that had caused her to cry on the street and her bodyguards to become concerned. It had all been about Marcella even then, before they knew about the accident. She'd taken her sister's protection for granted until it wasn't there, and she had blamed Marcella for abandoning her and then sending her away. Neither of which was true, though she couldn't see it at the time. Guilt at the way she had treated Marcella ate at her and made her reticent to talk about their relationship other than to repeat what she had already told Genesis so many times. She had been mean to the point of cruelty to her sister, and she didn't want to be reminded of that or anything about their childhood home.\n\n\"If you're sure you can't eat anymore, I will give you a very quick tour tonight and then you can relax in the bath while I clean up.\" Genesis started to put his altered plan in motion.\n\n\"No! I'll clean up,\" Olivia burst out, interrupting and making him frown at her. \"Master?\" she added more as a question than a correction. She wasn't sure of the rules in this place yet.\n\n\"The rules apply, little one,\" Genesis said sternly. \"You are mine. You belong to me, and I am the Master of our home and you. Especially here. When I give you an instruction, I expect obedience, not childish arguments and defiance on our first night together in our home. There is only one room in this house where I expect you to call me Master at all times and that is not the kitchen. You will learn quickly, or you will suffer the punishment, and it won't be pleasurable. Do you understand, little one?\"\n\n\"Yes, Genesis,\" she said quietly, and dropped her gaze to her hands in her lap. He suppressed his smile. Now was not the time, but his cock hardened at the sound of his name on her lips, coupled with such a submissive tone and position.",
        "\"Good, now come with me,\" he said as he stood and held out his hand to her. She rose and took his hand, falling into step beside him. The apartment was decorated with simple but elegant furnishings. The large living area and dining room were no surprise, as was the large kitchen. There was also an entertainment area with a pool table and large screen television, along with a well-stocked bar. As they moved further into the apartment, Olivia began to understand the enormity of it, as she was shown several guests rooms and bathrooms. They went past a couple of closed doors that he assured her that he would show her in the next day or two, before coming to a sweeping master bedroom that clearly took up one whole wall of the building, with its massive attached bathroom.\n\n\"This is amazing,\" Olivia breathed, taking in the large bed with the wrought iron frame, looking strangely beautiful in the dim golden light. Its dark metalwork was intricate across the headboard and footboard alike. A large iron-bound steamer trunk sat at the end of the bed and somehow brought the dark grey of the iron together with the deep green and brown forest colours that detailed the softer furnishings. It was dark but comfortable, even comforting, much like the man she loved, Olivia thought with a smile.\n\nShe allowed him to guide her into the bathroom, where she found similar dark iron and wood furnishings and a large wet area screened off by clear glass panels, where several shower heads dropped from the ceiling, and a large wooden tub sat on clawed feet. Genesis dropped her hand and moved toward the bath, running the water and dropping what looked like a delicate purple shell into the water. It immediately began to bubble up, and he nodded, satisfied. \n\n\"Stay here and bath while I clean up. I will join you shortly,\" Genesis instructed, as he returned to where she stood. He kissed her briefly . It was a tender kiss, full of longing, but he broke it too soon for Olivia and strode from the room. She looked from the doorway to the bath and let out the breath she had been holding as he broke the kiss and left her there alone. Not wanting to make him unhappy with her for a second time tonight, she decided to strip quickly and sink into that gorgeous-looking tub.\n\nGenesis had hurried from the room, growling to himself about his lack of restraint when it came to Olivia. If he had have stayed even one more minute, he would have taken her there and then, and that was not how he wanted the rest of this night to go. He hastily cleaned up the debris from their takeaway dinner and gathered the equipment he needed, before returning to the bedroom. He had the mirrors set up in such a way that he had a direct line of sight into the bathroom and he could see her head leaning back on the rim of the tub, and a delicate foot protruding from the bubbles at the other end. He smiled as he set the scene for their first night in their home and bed together.\n\nOnce he was done, Genesis stripped and walked back into the bathroom gloriously naked and helped Olivia from the tub.\n\n\"Come help me shower, little one,\" he said in a gruff voice, as he watched the water caress down her body in smalls streams. He led her to the other end on the wet area and turned on the shower head there. He handed her a loofah liberally coated with liquid soap and bent to kiss her softly as her hands curled up and around his neck, beginning the task that he had silently given her.\n\nOlivia ran her soapy hand and the loofah around his neck and over his shoulders, enjoying the feel and movement of his muscles below the skin. She revelled in his stillness as she continued with his arms and then down his torso. He turned so that she could do his back before she moved to his pelvis in the front. Olivia knelt down as she scrubbed the loofah over his firm ass and down the backs of his legs. He turned after she had picked up each foot to wash his soles and, when she looked up, she came face to face with his hard cock, bobbing just centimetres from her face. Although distracted, she bent lower to start at his feet this time, and move up his legs to his groin, knowing that, once she began to wash his cock and the heavy sack that hung below it, she could completely forget what else she was supposed to be doing.\n\n\"Good girl,\" Genesis crooned as she made her way back up his legs, his hand reaching down to pet her head. When she dropped the loofah and reached for him with soapy hands, he gripped her hair tightly and pulled her head back to look up at him, her eyes blinking from the fine spray of water from his body. \"No hands,\" he growled and loosened his grip a little, enjoying the sounds of her soft whimpering, but giving her enough room to manoeuvre further toward his cock.\n\nThe pain emitted from his tight grip on her hair only added to the heat coursing through her body. She revelled in the feel of his power as he commanded her, and she felt tingles shoot down her spine and spread out around her belly and lower, until she was almost squirming in his grip and whimpering in her need for him. When he loosened his grip slightly, she immediately moved forward, almost diving on his cock like she was starving for it, but his hand held her in check, and she had to move at a much slower pace than she wanted.\n\n\"Fuck!\" Genesis groaned deeply. He knew that he wasn't going to last long once her lips kissed the tip of his cock and opened to suck him into the warm cavern of her mouth. He needed to take the edge off. He wanted to take his time, to savour having the woman he loved in his bed for the first time, and he knew that he couldn't, in the state he was in. He took her head in both hands now, gripping her hair loosely as she sucked him deeply, her lips in a tight circle around him. He let her have her way as long as possible, but it became too much, and he tightened his grip on her and began to fuck her mouth, delving deeply past her gag reflex and groaning as he stared into her beautiful, teary eyes. \"Fuck!\" he cursed loudly, as he felt himself lose it. She was beautiful, amazingly submissive and she was his. He was in heaven as his climax hit him, and he rested the head of his cock on her tongue as she wrapped her lips around him tightly, and milked every drop from him.\n\n\"You are mine!\" he said gruffly, pulling his cock from her mouth and standing over her for a moment, before pulling her to her feet and into a crushing hug.\n\n\"Yes, Genesis. I am yours, completely, utterly, madly,\" she whispered into his chest.\n\nThe water stopped, and Genesis picked Olivia up and walked to where the towels sat before placing her on her feet. He wrapped a towel around his waist before drying her completely, thensitting her on the dresser and placing a hairdryer in her hand. \n\n\"It's late, and I don't want you getting sick, so dry as much as you can while I dry-off,\" he instructed. He pulled his towel off his waist and rubbed his body down, before roughly towelling his hair.\n\nOlivia watched mesmerised, following the movements of the towel and the way his body moved and shook as he rubbed vigorously at his hair. If she was hot and needy before, she was decidedly desperate now, in her need for him. Exiting the bathroom with Genesis, she found herself looking at a slightly changed room. There were now pillows on the centre of the bed, with another spaced towards the headboard, lengths of ropes with soft cuffs on the end that extended from each bedpost, and the nightstands were covered with various objects, most of which she recognised, though the dim light had her guessing about a few of the objects.\n\nMoments later, she was wrapped up in his arms, his lips bruising hers with their force. She moaned against his mouth as his hands slowly began caressing her. Tremors swept through her as the heat from his body seemed to engulf her. Moving his kisses down her neck, suckling the skin as if tasting her for the first time, his fingers nimbly caught and played with her nipples. The cold air, combined with her extreme arousal, made her nipples sensitive to his rough touch, and she jumped at the first contact and whimpered. She was panting, with her head held back, exposing everything to the man who controlled her every movement, as he kissed down her body until he was the one kneeling in front of her. \n\nHe stroked down her thighs, following the path of his hands with a kiss or a teasing bite into her soft flesh. By the time he worked his way back up her right thigh she was whining in need and gripping his shoulders for support. Licking his tongue around her stomach and belly button, his strong hands worked their way up her sides to her breasts again, tweaking her nipples, before a swift, hard bite arched her back up into him. Genesis looked at the dark mark he had left on the underside of her breast and was pleased. She would be marked tonight, regardless of their ruined plans. She, and anyone who came close enough to her to see, would know he had claimed her as his.\n\nStanding, he swept her up in his arms, and then placed her facedown on the bed, with the pile of pillows in the middle just under her hips. Each wrist and ankle were secured to cuffs he had placed there while she had bathed, until she was spread-eagled, her head resting on the last pillow. A small ball gag was inserted into her mouth. He loved the sound of her voice, but he wanted her helpless and vulnerable to him. She would learn to beg with her body in this bed. Then he began slowly stroking his fingers up and down her body, making her shiver. The light brushes from the tips of his fingers caused loud whimpers of pleasure to emerge from behind her gag; his hands travelled from her left ankle up to her left shoulder, and then down her right shoulder to her right ankle. Inside her upper thighs was the worst torture for her. His touch was tantalising and soft. She was burning for a firmer touch from him. She wanted to beg but could only mumble and drool around the gag.\n\nWhen the soft light touch left, Olivia braced herself for what she knew must be coming, and half-wishing the teasing fingers hadn't disappeared so soon. Her eyes widened, and she screamed behind the gag, as Genesis spanked her ass. She had known what to expect, knew he was a harsh Master at times, but the suddenness of the harsh smack on her ass caught her off guard regardless.\n\nTears appeared in her eyes as he turned her ass a deep, rosy pink with his bare hand. With her writhing and keening behind her gag, he finally slowed the blows and ran his hand gently over her ass. She could feel his weight on the bed as he leaned down to whisper in her ear. \"That was for saying no to me earlier when I gave you an instruction!\" Another small slap made her jump. \"You are mine now and forever, or had you forgotten that fact?\" His touch turned softer. \"And you will do what I want you to do.\" Genesis allowed himself a small chuckle as she squirmed in need under his hand. He slipped his hand down her ass and began to play with her pussy, sliding his fingers around its outer edges and even dipping into her hole, unsurprised to find her dripping wet. He knew the heat from the spanking would have only heightened her need for him. He watched her roll her hips and buck back at his hand and chuckled again. \"Such a needy little slut, aren't you little one?\"\n\nOlivia whimpered and nodded her head emphatically, trying to lift her hips and rock back toward the hand that once again played in her slick folds. Genesis left her side again. She revelled in the sight of his naked body as he walked around the edge of the bed. He considered the tools he had at his disposal and selected one before moving back to his captivating and captive girl. He moved down, cupping her ass in his hands, rubbing his cock along the length of her pussy, while his lips travelled from her neck to her shoulders, biting gently but allowing her to feel his teeth. One hand moved from her ass up to her other breast, pulling and squeezing.\n\nOlivia was moving her hips as much as the restraints allowed, trying to rub her pussy against his cock, which lay hot and heavy against her thigh. She wished it was inside her. She moaned and tried to push her breast further into his hand, seeking relief from the teasing torment of him any way she could. Finally, he moved to torment her further, and rubbed the head of his cock around the entrance to her pussy. \n\nPleading around her gag, Olivia wished that she wasn't so securely bound, gagged and unable to beg or plead with him for what she wanted. She tried to show him what she needed by bucking her hips, but he only sat up and smacked her ass again. Then she felt the unmistakable foreign coolness of a toy being forced into her ass, making her whimper and shudder as it pushed past the tight anal ring to anchor itself with her. She clenched around it, feeling the size and girth and whimpering all the more. He had used a larger than usual plug on her tonight.\n\n\"It is only slightly bigger than those you have become used to, little one. Just breathe,\" Genesis said, as if reading her mind, and caressed her hot, pink ass as he spoke. He leaned back over her, his lips and teeth once again toying along her neck and shoulder as she adjusted to the plug and the feel of his cock running smoothly over the wet folds of her pussy. He groaned into her ear as she rolled her hips, seeking more contact with him and showing her desire for him once again. Genesis pushed his hands beneath her to torment her breasts once more, kneading and plucking at them, with stinging tweaks between thumb and forefinger. \n\n\"You are mine, little one, every inch of you. I adore the sounds you make, the way your body moves below me, the way you light up at my touch.\" His hand drifted down to her clit as he spoke. \"You need this as much as I do. Don't you, my needy little slut?\" His deep, husky voice tickled her ear, and she nodded vigorously, her hips rocking her pussy against his fingers, seeking the release she desperately needed.\n\nThe pressure of Genesis's cock against her entrance increased as he continued to play her body like an instrument and entered her in the slowest, most maddening way possible, keeping her orgasm just out of reach. Every nerve-ending seemed afire, as Olivia's pussy was slowly pierced and she wished she could watch his amazing cock moving into her body. She felt ready to cum, just from finally having his cock in her. It hurt a little, at times, to belong to Genesis, but it was such a wonderful and pleasurable hurt that she couldn't think of anywhere else she would rather be than in his bed and at his mercy. \n\nAs he slowly began to move in and out, almost to the tip and then back in, pressing his hips hard against her ass, she felt like every part of her was on fire. Open and vulnerable, she moaned against the gag, and he began moving quickly against her splayed legs, pushing harder and deeper. One of his hands travelled along the crack of her ass and flipped a switch on the plug, causing it to come to life in her ass. Genesis groaned deeply in counterpoint to the high pitched mewl Olivia emitted at the pleasant sensations it caused. Olivia had never felt so full in her life, the plug was humming merrily away in her ass and, combined with the harder, deeper fucking she was getting, her orgasm slammed into her, making her body arc up, pulling at the restraints that held her in place for him. \n\nFor his part, Genesis continued to ram in and out of her, enjoying the painful pleasure of her contracting pussy, as wave after wave of orgasm crashed over her, the fulfilment of this morning's play and a day of pure denial between then and now. Without pause, he continued to slam into her from behind, until he became concerned about her harming herself by pulling so strongly at the restraints. Lifting his arms above her, he held her wrists and eyed them briefly. Assured that she was in no danger, he moved his hands back to her body and slammed into her harder.\n\nOne of his hands slipped down to her clit, rubbing it harshly and pinching and tweaking, forcing the waves of her climax not only to continue but build, again. Tears began streaming down her face even though, despite the pain he was inflicting on her, it was also driving her to another, harsher orgasm. Straining and writhing, she wondered how Genesis could keep going with such a hard and fast rhythm. Her whole body felt as if it was on fire from the heat of her desire for this, for him, and the way he loved her. \n\nThe combination of those thoughts, the pressure in her ass, his cock deep in her pussy, and the crushing of her clit, had Olivia coming again and again, as ricochets of pain and pleasure spread around her body. Through the haziness of pain and ecstasy, she could feel Genesis's cock swelling inside her and releasing pulsing jets of cum into her. His whole body was tensed against her, pulling her recklessly back onto him, stretching her arms and legs against the bonds again. It felt as though her whole pussy was being split apart. She could feel every pulse of his cock in her as her quivering pussy milked him dry. \n\nWith a final sigh, Genesis spent a moment laying between Olivia's thighs and draped over her back as he breathed raggedly. Then he started reaching up and releasing first, her arms, and then her legs, from the cuffs that had held her so well for his use. \n\n\"Good girl,\" he said as he lifted her exhausted body up and softly kissed her lips. She smiled at him, through her tearstained face, and allowed him to pull her into his arms as, completely sated and exhausted, she fell asleep, feeling safe, secure, and utterly fulfilled. \n\n*****\n\nMarcella noticed movement at her door and saw the tall, unmistakable figure of Noah step silently into the doorway of the dark room. She closed her eyes feigning sleep, believing he would go away. It was close to two now, she reckoned, though she hadn't checked the time in a while. She guessed that he had been across the hall with Dominic and was now heading home. More than a few of the family had stopped by her room to say goodnight before they left for the evening.\n\nThe almost silent footsteps came closer, and Marcella concentrated on keeping her face relaxed into the soft mask of sleep, not wanting to talk to him or acknowledge that he had seen her trapped here as a vulnerable patient, although prisoner was a more apt word. She heard the chair move slightly and cursed that he would be sitting and staying longer than taking a fleeting glance to make sure she was okay would entail. \n\n\"When are you going to stop being so fucking reckless all the time?\" Noah asked in a barely audible whisper, that surprised Marcella. \"You are going to fucking kill me if you keep up with all this fucking shit! Do you even realise what it does to the people who care about you?\" He let out a long quiet sigh. He reached out and softly placed his hand over hers. \"You must have no idea. You wouldn't do this shit if you did,\" he answered his own question, as if to reassure himself.\n\nMarcella struggled not to frown in her confusion. Was he saying that he cared about her? Of course, he cared about her. They were friends. Or at least they pretended to be friends most of the time, when they weren't arguing over him interfering with her plans. Part of her wanted to open her eyes and argue with him right then, but the stronger and more curious part of her mind wanted to see if he would say anything else. \n\nThe room was dark except for the light from the corridor outside, and he couldn't see her properly, so he moved a little closer and carefully pulled a stray strand of hair from her face, as he considered all he had learned today, not only about her, but about himself. He let out another sigh. They were friends, barely friends, after everything that had been going on lately he corrected himself, but still friends. He guessed that he would have to be happy with that for now, because there was no way she was going to do a complete turn around like he had been forced to do, and consider him from a different point of view.",
        "\"How's she doing?\" Xavier asked quietly, seeing Noah watching the sleeping Marcella from a chair beside her bed. \n\n\"She's fine. She's too hard-headed for a concussion to do any real damage,\" Noah sighed and got to his feet again. \"He's here, I take it?\"\n\n\"On his way. He called to see if we were still up and keeping an eye on Dom,\" Xavier confirmed, as Noah rose and stepped quietly toward the door where Xavier stood.\n\n\"We can't let them take her back against her will. Promise me you won't do that, X,\" Noah asked, not liking what he had heard from Marcus earlier in the evening. \"If she doesn't want to be in Perth, she can stay with us. She can join my old practice if she wants a job. Harley took over most of my client list.\"\n\n\"I think Apollo had plans to take her to Canberra,\" Xavier admitted.\n\n\"He pushed her in front of a moving car. Regardless of what the girl says, or how loudly he protests his innocence, there are witnesses, X. You can't honestly believe letting her leave with him is a good idea,\" Noah argued, against what seemed a ludicrous idea.\n\n\"I guess we wait and see. There are always two sides to a story. We have to at least hear Francesco and Apollo out first,\" Xavier said, reasonably. Gideon is meeting them downstairs. He refused to leave so Mama took Viv and Emma home with her. Mostly because no one else could get them to leave either,\" he chuckled. Even he couldn't say no to his mother when she had her mind set on something.\n\nMarcella opened her eyes as the voices and footsteps faded away, trying to make sense of what she heard. Why were the Battaglia here and why would she have to go anywhere with them, again! More than any of that, why would Noah care? Sure, they were friends, sort of but... None of it made any sense to her. The one thing that she did know was that she wasn't going back to the Battaglia, not now, not ever. She slid from the bed, quietly determined to find her belongings and leave, before anyone even knew she was awake, or at least disappear and make them think she left, if she couldn't get past the doors undetected. If she could just get to a phone, she might have a chance.\n\n******\n\nRather than stay on the floor where Marcella and Dominic were recovering from their individual injuries, Xavier and his father Anthony had commandeered one of the small conference rooms used by the hospital director and his senior staff, on the first floor. It was there that Apollo arrived, looking worn but determined, with Francesco and another Battaglia member at his side.\n\n\"Francesco, it's good to see you. I wish it were under better circumstances,\" Noah greeted his Battaglian counterpart. \n\n\"You and me both,\" Francesco sighed, obviously exhausted from his flight and the late hour. \n\n\"I want to see Chella,\" Apollo immediately demanded.\n\n\"You're in no position to be making demands,\" Anthony rebuffed the young man, moving forward to greet the three men. \n\n\"I apologise, it's late, we're all tired. This whole thing was a misunderstanding and, if I could just see Chella, I know we can straighten this out. I would never hurt her. I love her, and I'm going to marry her. Can't you see how ridiculous this is?\" Apollo appealed to the Zenati men. \n\n\"Did she mention that she was engaged, or planning to wed someone else, on any of your dates with her?\" Anthony turned his head to address Noah directly, surprising him.\n\n\"No, and when I told her, over our lunch date today, that Apollo was here and claiming to be her fianc\u00e9, she didn't react well. She was shocked and more than a little upset by the news. That probably wasn't helped by the fact that I was the one relaying the information,\" Noah spoke, keeping his voice calm, but every nerve end in his body was reacting, telling him to beat some sense into this delusion fuck,f he thought for one moment that they would let him anywhere near Marcella after what happened today. \"I was not exactly happy to have learned the news from his mouth either, considering how close we have become,\" he said, as he stretched the truth.\n\n\"Can we sit?\" Francesco asked, nodding toward the table and placing a restraining arm on Apollo's shoulder before he could react to Noah's comments. \"Coffee would be good too, if you have it?\" he added hopefully. \"The story I have will take some telling, and I'm afraid my energy levels need the boost at this time of the morning,\" he said, by way of explanation for his requests. \"I'm sorry, I haven't even introduced Miro. He is part of the legal team that represents our family and is well versed on the state and federal laws as well as the laws of the Tables.\"\n\n\"I understand that Marcus has sent through some information about how Marcella came to be at the Battaglia training facility, not once but twice, and that her father and uncle used the system against her to send her to us against her will,\" Miro inquired, as he took his seat. \"I trust you have read the account and understand that we acted as soon as we became aware of the subterfuge.\"\n\n\"We have,\" Xavier said. \"We have also made our own enquiries with the Gambaro family, to investigate the father and claims that he may have been abusing his daughters from an early age.\"\n\n\"It is well documented. I am sure they will send through documents similar to those which I have in my possession.\" He pulled a file from the satchel he carried. \"When the incident between Veronica and Peri Donati occurred, all of the young women who were kept in the maximum security wing of the training facility were investigated fully. The discrepancies in the documentation around the acceptance of Marcella Gambaro, under the alias of Romana Gambaro, an older cousin as it turned out, became clear and we contacted the Gambaro family at that time.\" Miro began going through the file and producing evidence to back up his statements.\n\n\"Apollo Martino and Marcella Gambaro had rekindled their relationship during this time, and he went with the delegation to return Marcella to the Gambaro family. She was placed with an Aunt to care for her and oversee, not only her well-being, but that of her younger sister. The girl's parents, Nunzio and Benita Gambaro, were informed that, should any further punishments be meted out unnecessarily to their daughters, the penalties would be high and that they would be visited twice a year by a delegation from the Battaglia as well as the Gambaro family.\" Miro closed the folder as if the case was closed but Francesco took up the story.\n\n\"Apollo and Marcella were young and cared for each other greatly at the time. Perhaps even loved each other, as much as young people can.\" He gave a soft smile to the Zenati men. \"Apollo volunteered to be the man who would check on the girls twice a year to ensure their wellbeing. With time and distance, their close relationship faded slightly, but they faithfully met twice a year, every year, after that and agreed that should they both remain single on Apollo's thirtieth birthday they would marry each other. They even crafted their own contract to that affect.\" Francesco looked to Miro to confirm this.\n\n\"Admittedly, it is not worth the paper it's written on in a court of law, but it would hold up to Table Laws,\" Miro informed them.\n\n\"Marcella isn't single, though,\" Noah lied. They weren't exactly dating. It was more like they were the odd ones out, always being pushed together like identical third wheels.\n\n\"She isn't married or even engaged, however, and it would seem that neither is she likely to be by the time Apollo turns thirty in another month. He feels well within his rights to have a certain expectation about their future together,\" Francesco pointed out.\n\n\"That's a lovely story, and perhaps it will work out that way for you, Apollo, but we still have four witnesses to the fact that you pushed the woman you supposedly love into oncoming traffic. She sustained a head injury that we are lucky was not much worse, although time will tell how long she takes to recover from it,\" Anthony pointed out in a gruff voice. \"We are not here to judge how long you have known her, or the strength of your relationship based on that. We are here because you almost killed a Gambaro woman in our city. And we have a certain expectation about how that is dealt with. This will not be something you can just sweep under the carpet with charm and platitudes. Marcella and her sister have come to mean a great deal to this family, and we do not take this kind of insult to our hospitality lightly.\" His voice had risen to a crescendo by the end. \n\n\"That's not what we're trying to...\" Francesco tried to diffuse the situation.\n\n\"Yes, it is. You came in here with all this history and pretty talk of love,\" Anthony spat disgustedly. \"You do not toss someone you love in front of a moving car and expect others to believe it was a simple misunderstanding.\" Anthony narrowed his eyes at the young man who seemed unperturbed in the slightest by what he was accused of, which only served to rankle him more. He hadn't even asked about her diagnosis. \n\n\"Look, mate,\" Gideon stepped forward, trying to ease the tension with his usual good humour, which had become increasingly hard to find. \"We would have a darn sight easier time believing that you loved her if you had just asked how she was doing, about her diagnosis, if she was resting comfortably at least, but you didn't. You demanded to see her, no doubt so you could bully her into recounting events the way you see them. \"We expected an apology from this meeting and an explanation, not demands and a story about why you have the right to treat her however you want.\"\n\n\"That's not what we were doing,\" Francesco held up his hand to forestall Gideon's words.\n\n\"Gideon is right and, in lieu of any regret in your defence of Apollo Martino, for the damage caused, not only to Marcella but my family on today of all days, you have until sunrise to take him back to the Battaglia stronghold. He can plead his case to a panel there because, if he is still in our city tomorrow, when the police arrive to question the young woman, I imagine they will have no problem arresting him and charging him with attempted murder, based on the eye-witness statements alone,\" Anthony said, in a dangerously quiet voice.\n\n\"I don't think that's necessary,\" Miro frowned, looking at the five Zenati men and the determination on their faces. Fucking Marcus should have been here, he thought to himself. Marcus knew how to charm and schmooze his way through any situation. Francesco ran at issues like a bull and dared people to take him on.\n\n\"Of course, we care about the girl. That was never in question,\" Francesco began to argue the point.\n\n\"I don't think you understand how seriously we take incidents like this. The police have statements from far more than our four witnesses and are waiting to find out Marcella's long-term prognosis before speaking with her in the morning. In the end, the choice will be hers, whether to press charges in a court of law but, by the laws of the Tables, we can stop you from ever returning here, if we are unsatisfied with the consequences from the panel.\" Anthony addressed Apollo directly and was pleased that the young man finally lost the cocky, self-assured look he had been wearing. \n\n\"I want to see Chella before we leave,\" Apollo demanded, in a more conciliatory tone. \"Please, I need to see that she is okay for myself.\"\n\n\"Not a chance of that now, my friend,\" Gideon spoke. \"These gentlemen will show you out and take you to the airport.\" He indicated the three watchers standing beside the door. \n\n\"Rest assured that we will send a full report and transcript of this meeting to Marcus, and Brutus, if he is still taking correspondence in his partial retirement,\" Anthony added, as the three men came to their feet and faced the door. \"Safe travels. Now, if you don't mind, I have a gravely-ill son to attend to, who is doing as well as expected. Not that you have asked about his health, either.\" He spat disgustedly and turned his back on the delegation to leave the room.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "hospital",
        "brothers",
        "family",
        "runaway",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-15"
}