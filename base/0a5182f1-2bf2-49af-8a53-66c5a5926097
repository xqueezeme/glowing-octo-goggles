{
    "title": "Confirming Carter Bk. 03 Changes Ch. 07",
    "pages": [
        "David Sheppard has a decision to make, and Fran takes everyone by surprise...\n\n(-)\n\nConfirming Carter Book Three, Changes\n\nChapter Seven\n\nNine Days later\n\nInterior-Bedroom\n\n0620 Hours\n\nComing awake slowly, Sam smiled as she remembered the dream she'd been having. She had been laying on the bow of a small boat, and the waves passing under it made it rock up and down gently under her. She was trying to figure out why she still felt herself moving, when she heard Tammy grunt, then sigh.\n\n\"Oh yeah, that's perfect, Angelo.\" She moaned softly. \"Nice and slow baby. Mmmmmm, that's it, long deep strokes. But do it slow.\" She giggled, then added, \"Vibrate to sixty...oh yeah, right there...Oh shit, you fuck me so good already.\"\n\nSam rolled over, raising up and resting her head in her hand. She watched them for moment before she spoke.\n\n\"Getting an early start on the day, I see.\" She said, smiling at her. \"How long have you been up?\"\n\n\"No...not long.\" Tammy panted, arching her hips up to meet Angelo's strokes. \"Fifteen min...minutes maybe? B...but he made me c...cum three times already.\"\n\nShe smiled at Sam as she wrapped her arms around him, then brought her feet up, hooking them under the cheeks of his ass.\n\n\"Gi...gimme a minute...\" She purred, then leaned up, her lips brushing his ear. \"Full penetration, then don't move Angelo. Extend G-nodule, random vibration, clitoral probe to max vibe.\"\n\nSam watched as she shuddered, then began writhing under him, moving his body over her, directing him with her movements.\n\n\"Oh god, what a way to wake up!\" She gasped after a couple minutes. She whispered in his ear, then relaxed her grip on him as his arms slid under her to cradle her gently.\n\n\"It looked like it.\" Sam said softly, reaching over and stroking her arm gently. \"You're so beautiful when you cum. I love watching you.\"\n\nTammy smiled at her, and started to push Angelo off her.\n\n\"You think so?\" She giggled. \"How about you make me cum again, and see if you notice any difference?\"\n\n\"That's a tempting offer. Very tempting.\" Sam said, rolling over and sliding across the bed.\n\nShe lifted Jacob from his place on Boris's chest, and laid him out of the way at the top of the bed. Getting up on her knees, she smiled at Tammy as she reached between her legs, stroking her fingers up and down through the soft wet slit of her pussy.\n\n\"But I think I need some of what you just got.\" She grinned as she pulled Boris around behind her.\n\nInterior-Dr. McKay's Quarters, North Tower\n\n0705 Hours\n\n\"If you move again, I'm going to stop.\" Fran said, looking up at Rodney. \"Keep your hands on the table, and don't move.\"\n\n\"Ye...yes ma'am.\" McKay grunted, forcing his hips to stay still. It took an effort of will to manage it, but he knew that she was serious.\n\nHe was leaning over the work table in his office, his hands gripping the edge, his feet spread wide apart to give Fran room as she knelt in front of him.\n\nShe had two fingers buried knuckle deep in his ass, massaging his prostate with slow circular movements. Her other hand was wrapped around his ball sac, the fingers forming a loose ring just under his throbbing cockshaft, his balls cradled in her palm. She had been masturbating him for almost half an hour this time, bringing him up to the brink of cumming, then backing off over and over. She had made him cum twice already this morning, but she knew that she could make him cum at least two more times before they had to get to work.\n\nLooking up at his face, Fran increased the pressure on his prostate as she squeezed his balls gently. Rodney gasped, and his hips jerked involuntarily.\n\n\"I'm going to make you cum again.\" She said, watching his cock throb and pulse in front of her face. \"You're so close, Rodney. You're cock is drooling cum all over the floor.\" She leaned forward, opening her mouth and exhaling a warm breath across the head of his cock. \"Do you want to cum in my mouth this time? Or do you want to shoot all of your hot cum on my fa...\"\n\nMcKay grunted, and a thick stream of cum erupted from his piss slit, spraying across her lips, and into her mouth. He brought one hand down, pulling her head forward as he humped his hips at her face, feeding the full length of his cock into her mouth. He whined deep in his throat as she started sucking in time with his movements, her fingers stroking his prostate and massaging his balls gently, urging him on.\n\nFran sucked on his spasming cockshaft, bobbing her head as her throat worked steadily to swallow his cum. Her fingers squeezed his balls rhythmically, milking them, urging him to empty them into her mouth.\n\nRodney whimpered as his balls spasmed and contracted in their wrinkled sac, but he kept up his frantic humping as he fucked his cock in and out of her mouth. He groaned as she pressed her fingertips firmly into the nut shaped gland of his prostate, making a watery stream of seminal fluid spurt from his piss slit.\n\nFran smiled up at him as she eased her fingers from his ass and brought her hand around to wrap it around the still rigid shaft of his cock. She ran her hand lazily up and down over the length of it as she pulled him down onto the floor with her, guiding him into the warm wet sheath of her pussy.\n\n\"Pleasure me, my love.\" She whispered as her legs slipped around him, her heels coming to rest under his asscheeks. \"Make love to me, my stallion.\"\n\n\"Yes, my lady.\" McKay laughed softly as he started moving over her. \n\nInterior-Conference Room, North Tower\n\n0905 Hours\n\nThe staff was already seated around the table when Fran walked into the room with Rodney following several steps behind her. She was dressed in a tight knee length black skirt, and a starched white blouse with a high collar. The seam on the back of her stockings was razor straight, and her five inch heels gleamed in the light from the windows. Her hair was still up in a tight bun, and she wore her wire rimmed glasses. The whole ensemble made her look like a strict, but slutty librarian.\n\nShe strode across the room and stopped next to their place at the table, and Rodney held her chair for her as she sat down, then took the seat next to her.\n\n\"This is different.\" Tammy said, trying not to giggle.\n\n\"Yes, it is.\" Sam said thoughtfully. \"Let's see what happens.\"\n\nFran turned and looked down the table, nodding at Sam and Tammy.\n\n\"Good morning ladies. We're ready to proceed.\"\n\n\"Thank you Fran.\" Sam said, going along with them. \"We'd like a review of what progress has been made on the control interface, and what next steps Rodney has in mind.\"\n\n\"Rodney will review that shortly.\" She said, looking around the table, then back at Sam. \"However, if I may have a moment to review the progress we've made on my systems...\"\n\n\"Now hold on a minute.\" Caldwell said. \"Are you serious, McKay? You expect us to talk to this thing? If you think I'm going to play with your puppet...\"\n\n\"I'm not a puppet, colonel. I am a fully functional artificial lifeform.\" Fran said, looking at him. \"And you're going to want to listen to what I have to say, so when your's comes online, you won't have to spend as much time as Rodney and the queens have, getting it up to speed.\"\n\nShe looked down the table at Sam again.\n\n\"May I continue, Samantha?\"\n\n\"By all means, I'd like to hear what you have to say.\" Sam said, leaning back in her chair. \"And I can tell you, that I'm already impressed with what I see.\"\n\nFran smiled and nodded, then continued.\n\n\"As you can see, the most important update we've made was adapting a personality. We discovered that there are several secondary databases, one of which contains almost thirty thousand different personality choices.\" She said. \"My current personality is Dominatrix three twenty-six, modified to incorporate elements of Researcher two fourteen, and Manager one oh nine, as well as you, Dr. Keller, and his third grade teacher, Mrs. Braddock, who's appearance and mannerisms I mimic, among others. Those elements are based on his recollections, of course.\"\n\n\"Of course.\" Sam smiled.\n\n\"Wait a minute.\" Jennifer said. \"He built...\"\n\n\"There are no sexual elements related to you, Dr. Keller, nor from Samantha.\" Fran told her as she glanced across the table at her. \"Rodney chose attributes he admired of the people he knew. Your demure persona, the shy little girl that you project, compliments my dominant nature, and enhances our private interactions for both of us.\"\n\n\"Are you saying that you can feel pleasure?\" Sheppard asked.\n\n\"Yes, colonel. My synaptic matrix is almost as complex as the human brain.\" She said. \"So I experience a wide range of emotions and sensations, just as a human would.\"\n\n\"I have a question and a concern, based on something you said earlier.\" Sandy said. \"You referred to yourself as an artificial lifeform, and you appear damned independent to me. How do we know that you're not going to turn on us like the replicators did the ancients?\"\n\n\"There are safeguards built into my programming to prevent that, Ms. Wildon.\" Fran said. \"My neural network isn't nearly as complex as the entities you refer to as the replicators. The synaptic matrix on that series was several orders of magnitude beyond mine.\"\n\nShe looked down the table at Sam again.\n\n\"Samantha made the initial discovery about the bonding and protection protocols.\" She said as she leaned forward, looking over her glasses at her. \"While I can give you a detailed review of how the systems work, perhaps it would be better if she related her initial experiences, and the progress she's made on her own, then I can review how that affected my development.\"\n\n\"Oh wow! This is too kewl.\" Tammy said, bouncing up and down in her chair. \"I'm gonna make Angelo...\"\n\n\"We can play with Angelo later, Tammy.\" Sam laughed, then turned and looked over at Boris, sitting off to one side with baby Jacob.\n\n\"Boris, let Angelo hold Jacob, and come over here behind mama, baby.\" She said. \"That's a good boy.\" She added as he obeyed her command.\n\nShe looked back at the group as he came over and stood behind her, resting his hands on her shoulders.\n\n\"Some of you may have noticed that I always tell him that he's a good boy when he obeys a command, and that I refer to him as baby, and myself as mama. I'll also tell him I love him every so often, and to be honest, I do feel affection for him.\"\n\n\"I was working on his programming while Tammy was in the infirmary, then after she came home, but was still confined to her bed when I discovered that there is a bonding protocol built into his systems.\" She told them. \"We initially built him for both Tammy and I to use, but these units are designed to bond with a specific user, even though they can interact with others.\"\n\n\"Excuse me, Samantha.\" Fran said. \"But I prefer the term entities. Units makes it sound like we're nothing more than toasters.\"\n\n\"Of course, Fran. My apologies.\" Sam said, smiling at her.\n\n\"As I worked with him, I talked to him like he was a baby. That was a mistake as it turns out, and it has slowed his development.\" She said. \"Tammy is treating Angelo as a contemporary, and he is much more advanced than Boris already, though not nearly as articulate as Fran.\"\n\n\"It was too late for me to stop without wiping him completely when I found the bonding protocol. Basically, what it did was form an emotional bond between him and me. He began to love me, and look at me as his mother.\"\n\n\"Our bonding protocol builds an emotional attachment between us and our assigned human.\" Fran said, reaching over and touching Rodney's hand. It appeared to be an unconscious gesture, but everyone in the room noticed it. \"The bonding protocol works in conjunction with the protection protocol, which has several elements.\"\n\nShe looked back down the table at Sam.\n\n\"Samantha? If you would continue?\"\n\n\"Before I get into that, I want to repeat something we told you the other day, and hopefully alleviate some of your concerns about what we're getting into by bringing these entities online.\" Sam said. \"The ancients used them safely for thousands of years, as servants, babysitters, assistants, and companions, and it was because of this bonding protocol, and other subroutines built into their programming. I trust Boris and Angelo with Jacob, so that should give you an idea of what I think.\"\n\n\"How many of these...entities, are you planning on making?\" Caldwell asked, looking across the table at Fran.\n\n\"All of you, and a few other people, will be provided one.\" Tammy said. \"But we're not going to put them into widespread distribution like the ancients did. This project is classified most secret, and need to know, so don't discuss this with anyone you're not sure has one.\"\n\n\"We're going to let you decide how you're going to interact with them.\" Sam said, glancing down at Caldwell. \"But based on what I'm seeing from Fran, and what I know is available in the database, I think you're going to like having them around. Tammy and I will be working with Fran and Rodney over the next few days to get the programming worked out, then we'll start letting you all build and configure yours to fit your needs.\"\n\n\"So I don't have to...you know, let it...\"\n\n\"The sexual option is available, and I'd encourage you to include it, Jenn.\" Sam said. \"And I'd also encourage you to select the opposite gender when you make your choices. Tammy and I built Boris to be a sextoy, but now that we know just what they're capable of, and the range of services they can provide is staggering by the way, I think you'll be happy to have them around.\"\n\n\"Those of you in relationships might want to work together when you're making your selections.\" Tammy added. \"Besides helping each other figure out what you really want, you might discover things about each other. I know Sam and I have.\"\n\nShe looked down the table at Fran.\n\n\"Do you have anything to add, Fran?\" She asked.\n\n\"I believe I'll let Rodney relate his experience.\" She said, turning to look at him. She squeezed his hand gently and said, \"Tell them my love.\"\n\n\"Like Tammy and Sam, I originally built and configured Fran to satisfy my sexual fantasies.\" He began. \"I included options to make her a domestic, and to assist me with my research. When I discovered the personality database, I notified Sam and requested permission to incorporate one into her.\"\n\n\"You asked for permission?\" Sheppard said. \"That's hard to believe, Rodney.\"\n\n\"I want to stay in Atlantis, and I'm on a tight leash.\" Rodney told him.\n\n\"Not as tight as you think.\" Sam grinned. \"At least, not the one I'm holding.\"\n\nRodney smiled back at her, nodding.\n\n\"That was one of the first things we incorporated after I chose Fran's personality. She watches over me, and reminds me when I'm close to going out of bounds. It's actually been beneficial, and we're getting much more done.\"\n\n\"I don't think I want to know how she reminds you.\" Caldwell muttered\n\n\"Our relationship is not as dominant and submissive as it may appear, colonel, though there are elements of that that we both enjoy.\" McKay said, looking at Caldwell. He smiled at Fran as he continued.\n\n\"I prefer strong willed women, which is why Fran has the persona she does. But I also require a thoughtful, intelligent, witty, and compassionate companion, and each of those attributes is incorporated into her personality, along with several hundred others.\" \n\n\"Fran assists me in my database research, and has been instrumental in the work we're doing on her systems, and the control interface for the Wraith tech, which is almost completed by the way.\"\n\n\"What does almost completed mean?\" Sheppard asked.\n\n\"We should be able to have a working prototype for Zelenka to look at in the next three days.\" McKay said. \"I'm keeping him updated on our progress, and he's made several suggestions that helped solved some key problems. I don't think we'd be as far along as we are without him.\"\n\n\"Did I just hear you give someone else credit for doing something?\" Sheppard laughed. He looked over at Fran and smiled. \"I don't know what you're doing to him, but this is an interesting change. I think I like it.\"\n\n\"So do I.\" Sam said softly.\n\nFran smiled at them, then looked at Rodney. \n\n\"Are you finished, dear?\" She asked him.\n\n\"Near enough. We still need to get with Tammy and Sam, and...\"\n\n\"That's fine.\" She said, and Rodney nodded, falling silent. He started to sit back, moving his hand from the table, and she shook her head. \"Don't. I want to hold your hand my love.\" She said softly.\n\nShe looked around the table, then asked, \"Do any of you have any questions? For either of us?\"\n\n\"I'm still trying to take it all in.\" Jennifer muttered. \"It's always something new.\"\n\n\"Do you enjoy sexual relations with Rodney, Fran?\" Teyla asked. \"You said that you experienced emotions and sensations. Can you tell us more about that?\"\n\n\"I enjoy making love with Rodney very much. He's a skilled and considerate lover.\" Fran told her. \"But we both find our work together as, if not more satisfying. As with any couple, sex is just one part of our relationship, not the definition of it.\"\n\n\"Rodney, can you tell us what is was like when you...\" Jennifer asked.\n\n\"I didn't actually...you know, have sex with her, until after we had incorporated her personality, and spoken for quite a long time, making small changes and adjustments to her programs.\" Rodney said, smiling at Fran, then turning back to Jennifer. \"It was her idea, the first time we did it, and it was wonderful. It was like the first time I made love with you...well, it wasn't quite that awkward, but physically, there's no difference between you as far as I can tell.\"\n\n\"That's very interesting, that you waited like that, Rodney.\" Teyla said. \"Why would you do that?\"\n\nBefore Rodney could answer, Fran spoke up.\n\n\"The way he explained it to me later, Teyla, was that he didn't want to have sex with a machine, he wanted to make love with a woman.\" She said with an affectionate smile on her face. \"We worked together, modifying my program until we were both satisfied, then I asked him to make love to me, and make me the women he wanted.\"\n\n\"That's so beautiful.\" Jennifer gushed. \"I wouldn't have expected something like that from you, Rodney.\"\n\n\"There's more to my Rodney than you know.\" Fran said, running her fingers gently over his hand.\n\n\"If there are no more questions, I think we're done here.\" Sam said \"You can all talk to Fran and Rodney over the next few days, I'm sure they'll be happy to share their experiences.\"\n\nShe stood up and looked down the table.\n\n\"Fran, we're going to visit John's brother in the infirmary, but I'd like you and Rodney to join us for lunch in the residence.\" She said. \"I'd like to talk to you about how we can add a personality to Boris, but not affect him too radically. I actually like him the way he is.\"\n\n\"We'd be delighted, Samantha.\" Fran said as she got to her feet. She took Rodney's hand and started for the door. \"Shall we say twelve-thirty? We have a few things we need to take care of first.\"\n\n* * * * *\n\n\"She's really something, isn't she?\" Tammy laughed. \"She doesn't take any shit off anybody, that's for sure.\"\n\nShe looked at Sam for a moment, then asked, \"Why did you keep referring to them as Fran and Rodney, and addressing everything through her?\"\n\n\"She's the dominant in the relationship, that's how he wants it.\" She said. \"Besides, she's more interesting to talk to. Did you notice how she spoke to me as an equal, calling me Samantha, but being comfortably formal at the same time?\"\n\n\"I did notice that.\" Tammy said. \"I was surprised you let them get away with it.\"\n\n\"It was like talking to myself.\" Sam laughed. \"I think that's part of what they included from me in her personality. If it is, he nailed it, because I actually liked it.\"\n\nJohn and Jennifer joined them as Boris and Angelo came over with Jacob.",
        "\"We moved David to our quarters this morning, Sam. So we just need to go downstairs to see him.\" Jennifer said. \"He's almost completely healed, and should be ready to go home in a few days.\"\n\n\"That's what I'd like to talk to him about.\" Carter said, looking at Sheppard. \"We've put him in an incredibly awkward position. I mean, how the hell is he going to explain where he got an artificial heart?\"\n\n\"Oh, there's a masking system that will disguise it well enough to fool an MRI.\" Jennifer told her. \"As long as they don't cut him open, he can just tell them that he had a transplant. I already made up a set of fake records for him to take home with him.\"\n\nSam nodded, then turned to Boris and Angelo.\n\n\"Take Jacob over to the residence and put him down for a nap. Call the guard station, and have them send someone up to sit with him, then you two go to sleep. Do you understand me?\"\n\n\"Yes mistress.\" Boris said, turning toward the door.\n\n\"You got it, boss.\" Angelo grinned as he turned to follow.\n\n\"I hate him already.\" Sam muttered as she watched them leave the room.\n\n\"You think you hate him now.\" Tammy laughed, leaning over to kiss her on the cheek. \"Just wait till I get done with him.\"\n\nInterior-John Sheppard's Quarters, North Tower\n\n1015 Hours\n\nDavid Sheppard was lounging on a couch watching a movie when they entered the suite. He was dressed in a pair of loose Atlantian style slacks, a soft pull over shirt, and a pair of slippers.\n\nHe started to get up when he saw Sam and Tammy, but Sam waved him down.\n\n\"Don't get up, David, you look comfortable.\" Sam said, smiling at him. \"We just came down to see how you're doing.\"\n\n\"If you want the truth, I feel better than I have in months, if not years.\" He smiled as he sat up on the couch. \"My chest still hurts a little when I move, but that's getting better every day. Jennifer tells me that I'll be well enough to go home in a few days.\"\n\n\"That's good to hear.\" Tammy said. \"You're probably looking forward to that.\"\n\n\"Not as much as you'd think.\" He said, shaking his head. \"I've been spending the last few days talking to John, something we haven't been able to do for a while. Now that he can actually talk to me about his life again, I'm remembering that I used to like him.\"\n\n\"Do you think you'd like to stay here with us for a while, until you decide that you're ready to go home?\" Sam asked. \"It wouldn't be a hardship, and you probably have contingency plans in place in the event of death or illness. I'd say a heart attack qualifies.\"\n\n\"We're thinking a little more long term than that, colonel.\" John said as he and Jennifer sat on the couch next to David.\n\n\"I see.\" Sam said. She leaned back on the couch as she looked over at them. \"I don't have a problem with you staying David, you're more than welcome. But what about your family, your company?\"\n\n\"Well, my family is sitting right here. And I doubt if any of my ex-wives will mind.\" He laughed, \"As far as the company is concerned, it was my fathers, I've just run it for the last few years. John got out early, and I think I'm about done with it too.\" \n\n\"In that case, we're going to have to come up with something for you to do.\" She said. \"We don't have much use for freeloaders.\"\n\n\"I was thinking that he could work with Pharris, getting Anchorage up to speed.\" John said. \"The reports I'm seeing show that they're already behind schedule, and it gets worse every day.\"\n\n\"Or he could work with Daniel on his education department.\" Jennifer said. \"He's off world most of the time on some mission or other, and nothing is getting done there. And Vala is so lonely without him. She...\"\n\n\"Then there's Sandy's intelligence services, or one of the three new departments we just split off from Andi's foreign ministry...\" Tammy said.\n\n\"Enough already!\" Sam laughed. \"I get the point. We need help everywhere.\"\n\n\"Okay, here's what we're going to do.\" She said after a moment. \"David, you're going to take a few weeks off, if you're anything like your brother, you're a workaholic, and have to have a gun held to your head to take any time off at all.\"\n\n\"One of my ex-wives actually did that.\" He smiled.\n\n\"Good for her.\" Sam grinned. \"In the meantime, you can hang around with me and Tammy...\"\n\n\"Oh god, Sam. I don't know if that's really a good...\" Jennifer said.\n\n\"If you'll let me finish, I was going to say, he can also spend some time with the court and senior staff.\" Sam said, glaring at her.\n\n\"That way, he can get to know them and the city at the same time. And keep in mind, that while we're all used to the ancient gizmos and doohickeys around here, he's got quite an adjustment to make.\"\n\n\"I can see why they put you in charge, colonel.\" David laughed. \"You look at the whole problem, think it through, then start throwing out solutions.\"\n\n\"You can call me Sam, David. At least until we put you on payroll.\" She said. \"Not that we actually pay any of these people yet, we're still trying to come up with a financial system.\"\n\nInterior-Kitchen\n\n1230 Hours\n\nThe comm chirped and Sam looked at Andi as she got up to answer it.\n\n\"Can we get a clapper or something like that, or sit the damn thing on the table? It's really inconvenient mounted on the wall like that.\"\n\n\"You could start wearing your comm, that would solve the problem.\" Andi said, her hand hovering over the comm.\n\n\"Never mind, Tammy doesn't mind getting up to answer it.\" Sam laughed.\n\n\"Samuels.\" Andi said as she keyed the comm.\n\n\"Yes ma'am, Dr McKay and Miss Fran are here. Would you like us to send them up?\"\n\n\"That's fine, we're expecting them.\"\n\n\"Right on time too. I was expecting her to be late.\" Sam said to herself.\n\nThe elevator doors opened, and Sam stood up as Fran and Rodney came into the room. She had changed into a shiny royal blue wraparound blouse, and a loose black knee length skirt with high heeled leather sandals. Rodney had on a pale blue button down shirt, brown slacks, and brown leather crocs. \n\nFran stepped over, taking Sam's hands and looking her up and down.\n\n\"Thank you for having us over, Samantha.\" She said, turning her from side to side, not releasing her hands. \"You know, I meant to say something earlier. That outfit does wonders for you, but I took the liberty of bringing something I thought you might like better, I can show it to you later.\"\n\n\"Why don't you show me now, Fran? Don't keep me in suspense.\" Sam laughed.\n\nFran nodded and turned to McKay.\n\n\"Rodney, why don't you talk to your friends, Samantha and I will be right back.\" She told him.\n\nMcKay nodded, and took a seat at the table.\n\n\"Sam.\" Tammy said, starting to get up, but Sam waved her down, tapping her ear. \n\n\"Give us a few minutes everyone, we'll be right back.\"\n\nAs they stepped out of the kitchen, Fran picked up a bag near the elevator, and walked down the hall and across the living room with Sam.\n\nAs they entered the bedroom, Fran said, \"Tammy isn't the jealous type is she? I don't think she likes you being alone with me.\"\n\n\"She doesn't, but it's not because she's jealous. It's because we don't trust you or Rodney yet.\"\n\n\"I can understand that, given your history with him.\" Fran said, then smiled at the look on Sam's face. \"Your working history dear, I know there was never anything else between you. You think he's a jerk.\"\n\nShe pulled a pair of tall brown boots from the bag, then laid a pair of cream colored riding pants and a broad collared white shirt with full, flowing sleeves on the bed.\n\n\"You're an autumn, so the cream you picked worked for you, but you need something to accent it. We also need to bring some attention to those legs, and that tight little ass. Your tits speak for themselves, but the rest needs some help.\"\n\n\"So he made you a fashion consultant too?\" Sam laughed as she unbuttoned her vest.\n\n\"Not intentionally, but he does recognize his limitations, so we added subroutines for men's and ladies dressers.\" Fran said. \"I dress him as well.\"\n\n\"I noticed.\" Sam said as she opened her pants and pushed them down, kicking them off her feet. \"I don't think I've ever seen him look that good in clothes before.\" She said, taking the shirt Fran held out to her.\n\nShe slipped it on, and buttoned it quickly, then stepped into the pants when Fran handed them too her. Sitting on the bed, she pulled the boots on and zipped them up, then tucked the shirt in and buttoned the pants.\n\n\"Not bad.\" She said, bending her knees, then twisting from side to side. \"I still have full range of movement.\"\n\nShe looked over at Fran and smiled, then said, \"Tammy, come in here babe, you gotta see this.\" She picked her vest up off the bed, and was slipping it on when Tammy stepped into the room.\n\n\"Bra'tac called you a warrior queen, so I guess pirate queen works just as well.\" She laughed. \"And I gotta admit, you look seriously hot. Those pants do wonders for your ass.\"\n\n\"If you want a change of pace, wear a bright colored blouse, don't try an earth tone, it will make you look drab. Go with the white for daily wear.\"\n\nShe turned and looked at Tammy.\n\n\"Now for you, this whole butch thing you have going on works, so don't mess with it. But put a dark blouse under the vest, blue, green or red is fine...go with your mood. Add a pair of four inch heels, slick the hair back, and you're done.\"\n\n\"Could I wear something shiny like you're wearing? Or should I stick to natural fibers?\" Tammy asked, standing up on her toes in front of the mirror.\n\n\"Shiny would make that outfit stand out. Sam needs to stay away from them though, with her coloring, they'll make her look gaudy.\"\n\n\"Thank you, Fran. This has been fun. But was there something else you wanted to talk to us about?\" Sam said, moving over to stand next to Tammy in front of the mirror.\n\n\"Yes.\" Fran said, coming over behind them. \"We want you to know that there's more to me than meets the eye, but less than you suspect. We want to stay in Atlantis, and intend on making you want to keep us here.\"\n\n\"I like the way you put that, Fran.\" Sam said, turning around and taking her hands. \"Don't expect me to be Rodney's best friend, but I'll give you both a chance. You turned out better than I expected, and appear to be a good influence on him. But you still have to prove yourselves, everyone does.\"\n\n* * * * *\n\nJennifer was laughing and Rodney was saying, \"That's not how it happened!\" as John told David about the weapon they had found on Doranda that destroyed the solar system.\n\n\"It was only three quarters of the solar system!\" McKay told David when he was finished. \"I mean, the star was still there. Sam blew up a star once, before she came to Atlantis.\"\n\n\"Yes, I did, Rodney. I took an asteroid right through the Earth once too.\" She said lightly as she walked into the kitchen. \"But I did both to save the lives of my team, not because I was trying to prove that I was right.\"\n\n\"Still, you blew up a star, and I just blew up a bunch of planets that were already dead. Not even in the same league.\" He replied.\n\n\"Do you see what I have to deal with?\" She said to Fran. \"Think you can do anything about that?\"\n\n\"Strictly speaking, he is correct, the events do not even compare. But I do see what you mean.\"\n\n\"Did I hear you right? You took an asteroid through the Earth?\" David asked. \"Forget why, how would you do something like that?\"\n\n\"I opened a hyperspace window on a Goa'uld cargo ship just before the asteroid crossed the zero barrier, and we went through the planet, and appeared on the other side.\" She said. \"It was actually pretty kewl. I let O'Neill tell you about it. It's one of his favorite stories.\"\n\n\"I love listening to Jack tell stories.\" Tammy laughed. \"He's got this deadpan delivery, and no matter how dire the circumstances, he acts like it's no big deal.\"\n\n\"That's how he acted while most of them were happening. While we were approaching the planet, I was waiting till the last moment before I engaged the hyperdrive, and Jack was looking out the window saying, 'Carter, I can see my house!\" Sam said. \"I only saw him get upset a few times the whole time I worked with him. He's one of the reasons I'm sitting here.\"\n\nJohn turned and grinned at David. \"You've heard of people living on the edge? Welcome to off the edge.\" He laughed. \n\n\"Way off the edge.\" McKay said.\n\n\"Yeah, sometimes we look back and go, 'Hey, wasn't there an edge around here somewhere?\" Sam said.\n\n\"Yes, danger is our middle name.\" McKay said, puffing himself up.\n\n\"I thought your middle name was Rodney...Meredith.\" Sheppard laughed.\n\n\"His name is Meredith McKay? Like the actress from Petticoat Junction?\" Tammy laughed.\n\n\"That was Meredith McCray, and I thought we weren't going to bring that up anymore?\" McKay whined as John and Jennifer laughed.\n\n\"But while we're on the subject, Rodney.\" Sam said, still trying not to laugh. \"Do you think we could talk Jeannie into coming to Atlantis? To stay I mean? She was a big help with my STM research, and I really like her.\"\n\n\"You might be able to talk her into it, but I doubt if Caleb would be interested.\" Rodney said. \"He has family and his job at the university, and Jeannie would never leave him, they're seriously in love.\"\n\n\"We'd probably have to send a ship, even if you did talk them into it.\" Tammy said. \"After the way Hayes reacted to me pressing him on making the gate public, then us waltzing out with Rodney as we left, I'm pretty sure Landry's ass is in a sling as it is.\"\n\n\"Do you think they'll fire him?\"\n\n\"Fire who, Landry?\" McKay asked. \"They can't do that! I'll go back and tell them he...\"\n\n\"NO!\" Fran said harshly, gripping his arm. \"You can't go back, you have to stay here with me. If you go, they won't...you...they.\"\n\nShe shook her head, then stood up, pulling him to his feet and pulled him from the room. A moment later, they heard the elevator.\n\n\"Wow, she's pissed.\" Jennifer said.\n\n\"That wasn't anger, Jennifer.\" David said. \"That was fear.\"\n\n\"It was a little more than that, David.\" Andi said, looking steadily at Sam. \"She was out of her mind with terror. How is that possible?\"\n\nInterior-Dr. McKay's Quarters, North Tower\n\n1305 Hours\n\n\"Where is she, Rodney?\" Sam asked when the door opened.\n\n\"In the bedroom.\" He said leading them across the room. \n\nHe sat down on the side of the bed, taking Fran's hand. \"She was talking the whole way over here, and she got less and less coherent the longer she talked. I was leading her in here, and she collapsed. I got her up on the bed and was about to call you when the doorbell rang.\"\n\n\"You did the right thing, Rodney.\" She told him. \"Where's your laptop? We need to access her systems, and see what's going on with her.\"\n\n\"It's in my office, through the door and down the hall on the right.\" He said. \"It's under...\"\n\n\"Go get it, it'll be faster.\" When he started to object, she said, \"I'll stay with her, Rodney. I want her to come back as much as you do.\"\n\nHe looked at her, then nodded, and walked quickly out of the room.\n\nSam leaned down, prying up one of her eyelids. The pupil responded, contracting sharply, so she released it.\n\n\"She appears fine physically.\" She said to Tammy. \"I hope she didn't fry her neural network.\"\n\n\"Tell her he's not going.\" Tammy said. \"Tel...\"\n\nFran's eyes popped open and her mouth moved. Her body jerked several times, then she was still again.\n\n\"What's going on in there?\" McKay yelled. \"What are you doing to her?\"\n\nHe ran into the room, dropping his laptop as he pushed Tammy out of the way. He tried to push Sam out of the way, trying to get to Fran, but she jammed her elbow into his ribs, knocking the wind out of him.\n\nShe leaned over Fran as Rodney fell to the floor. \"Take care of Rodney, Tammy.\" She said, leaning closer to Fran.\n\n\"He's fine, he's up on his knees already.\" Tammy said, looking at his laptop. \"But there was a spike on her...\"\n\n\"I know.\" Sam said. \"Here comes another one.\"\n\n\"Rodney is staying here with you, Fran.\" She said softly. \"I won't let him go, do you understand me?\"\n\n\"Got it. Not as big as the first one.\" Tammy said. She reached down and helped McKay to his feet.\n\n\"Go get up on the bed, and tell her you're not leaving her.\" She said quietly. \"Tell her you love her, ask her to come back to you...just talk to her, Rodney.\"\n\nHe nodded, glancing at Sam as he climbed up on the bed.\n\n\"Sorry.\" She said as he took Fran in his arms, rocking her gently as he spoke softly in her ear.\n\n\"I love you Fran, and I'm not going anywhere, I promise.\" He said. \"Please come back to me. I don't know wh...\"\n\nFran jerked again, then sat up suddenly, knocking McKay onto his back. She looked around, and when she saw him looking up at her, she turned and fell onto him, burying her face in his shoulder, her body shaking as she clung to him feverishly.\n\n\"Is she crying?\" Tammy whispered from behind Sam.\n\nCarter nodded, backing away from the bed slowly, pushing Tammy along with her. She turned and they stepped out of the room.\n\n\"Let's give them a couple minutes.\" Sam said. \"But if...\n\n\"Let me get his laptop.\" Tammy said. \"I want to see...\"\n\n\"Leave it.\" Sam said softly, blocking her with her arm. \"If she comes out of that room alone, be ready to fight.\"\n\n\"That won't be necessary, Samantha.\" Fran said as they appeared in the doorway. \"However, your assistance running a system diagnostic would be appreciated. Can we go over to your lab?\"\n\n\"Are you okay, Rodney?\" Sam asked him. \"She didn't hurt you?\"\n\n\"What? No, I'm fine.\" He said. \"She'd never...\"\n\n\"Not intentionally, I know that much.\" She said. \"I just had to be sure.\"\n\nShe gathered herself, then looked at McKay.\n\n\"Rodney, put your arm around her, in case you have to support her. Tammy, walk behind them. You know where the shutdown switches are, at the base of her neck and back, and one behind her left knee. If she does anything you don't like, hit one of them.\" She said as she backed toward the door, then hit the pad to open it.\n\n\"What are you doing, Sam. She...\"\n\n\"Do as she says, Rodney.\" Fran said, as they walked toward the door. \"She only wants to protect you.\"\n\nInterior-Robotics Lab, Central Tower\n\n1345 Hours\n\nFran was laid out on one of the tables in their lab. Her shirt was open, and her breasts had been removed, and two thick cables were plugged into sockets in her chest cavity.\n\nSam and Tammy were huddled around a terminal across the room, while Rodney watched what they were doing on another one on a bench nearby.\n\n\"I think that's the problem, right there.\" Sam said, pointing at a section of code.\n\n\"What did you find?\" Rodney asked.\n\n\"Fran said that her personality was Dominatrix three twenty-six, with elements of researcher two fourteen, and manager one oh nine, along with some attributes of people you liked.\" Sam said.\n\n\"Yes, we added the researcher and manager so she could assist me with my work.\" He said. \"The other attributes were added later, after we had configured the primary the way we wanted it.\"\n\n\"Well, it appears that manager one oh nine brought its own bonding protocol along, and its been working overtime. She's showing the equivalent of several years worth of interaction in less than three days. The system should have shut down, and stopped accepting input long before it reach to this level, but with two conflicting subroutines working, it didn't know what to do, and got stuck in a loop, so it just kept repeating the instructions, over and over.\"\n\n\"Can we fix it?\" He asked, holding Fran's hand and looking down at her. \"We should be able to disable, or remove manager one oh nine, and...\"\n\n\"The bonding protocol is a separate, discreet subroutine. It's not tied to the individual personality elements, so that wouldn't do it.\"\n\n\"What if we cut off the input to the bonding protocol, so it doesn't accept any new inputs from any of the personality elements?\"\n\n\"I doubt if the system will let us do that.\" Sam said, scrolling down the screen. \"That would effectively be disabling a basic safeguard. And even if it did, she'd still be walking around with a hair trigger, and anything could set her off. We just don't know how she would react next...\"",
        "\"So what are you saying, Sam?\" Rodney said, his voice cracking as he fought back tears. \"I screwed up again, and now she's going to die because of it?\"\n\n\"I missed it too, Rodney. I checked your work and approved it.\" She said. \"Manager one oh nine snuck in behind us. This is a glitch, you're not to blame.\"\n\n\"The problem can be corrected.\" Fran said. \"It does, however, require a reset, and a reload...\"\n\n\"How do we do it, Fran?\" Tammy asked. \"Give me a step by step. Feed it to my terminal if you can.\"\n\nFran closed her eyes, and strings of code began scrolling across Tammy's screen. She watched, waiting for it to end, and when it did, she scrolled back up to the top and began working her way down slowly.\n\nSeveral minutes later, she looked up at Sam, shrugging her shoulders.\n\n\"We should be able to do this, but there's no guarantee.\" She said as she got up and went over to a cabinet. She took down a memory module, then went back to her terminal and plugged it in.\n\n\"Rodney.\" She said, \"I need you and Sam to go through the personality profile you loaded from, and remove, then re-add manager one oh nine. Leave everything else in place. I'm going to download her memory up to the last back up, just before you came over for lunch.\"\n\n\"So she's not going to remember our little chat in the bedroom, or what happened in the kitchen?\" Sam asked.\n\n\"No, and let's be glad that that's all she's going to lose.\"\n\nShe started the save on the memory, checking the module to make sure it was going, then turned back to them.\n\n\"When you remove the manager, save the rest of the file. Then re-add a clean copy of it, and make sure it has only the elements you had in the original, and don't leave anything out either, then save it again.\" She told them. \"The profile has to match what's in her memory exactly, or this won't work. The bonding protocol is stored separately, so it will be wiped when we do the reset.\"\n\nShe looked over at McKay. \n\n\"She'll still remember how she feels about you, but the system will have to catch up to her memories. Having those memories will help that process along.\" She told him.\n\n\"How long will all this take?\" Sam asked.\n\n\"About twenty minutes for the memory dump, plus anything over that that it takes you to redo the profile, an hour to reload the profile after the reset, then another twenty minutes to reload her memory. So call it two hours if you get it done before the memory dump is done. Longer if you don't.\"\n\n\"Then we better get started.\" Sam said. \n\nShe looked over at McKay, and saw him leaning down, talking quietly to Fran.\n\n\"Rodney, are you up for this?\" She asked. \n\nHe looked up at her, and after a moment, shook his head.\n\n\"Will...will you do it?\" He asked her.\n\n\"We'll take care of it. You stay with her as long as you need to.\"\n\nInterior-Robotics Lab, Central Tower\n\n1600 Hours\n\n\"We should be seeing something by now.\" Tammy said. \"The memory dump finished more than half an hour ago.\"\n\nShe looked over at McKay. He hadn't moved from his position beside Fran since they'd brought her in.\n\n\"How long was it before you saw any activity after you loaded the original personality profile, Rodney?\" She asked him.\n\n`\n\n\"Huh?\" He said, looking up at her. He stared at her for a moment, then said, \"Oh, sorry. It was about ten, maybe twelve minutes.\"\n\n\"And we added her memories on top of the profile.\" Tammy said.\n\nShe glanced over at Sam, then back at Rodney.\n\n\"We can give her a little while longer, but then we'll have to shut her down.\" She said. \"If this doesn't work, you'll have to start over, and see if you can rebuild the profile, and leave manager one oh nine out.\"\n\nRodney nodded, leaning down so his lips were close to her ear.\n\n\"It's time to wake up, Fran.\" He said softly. \"Please? I need you to wake up now.\"\n\nFran's eyelids fluttered, then opened. She didn't move, except to look at him, then over at Sam and Tammy standing on the other side of the table.\n\n\"Why am I here? Has something happened?\" She asked.\n\n\"I was about to tell him to kiss her, but that will work too.\" Tammy said, watching McKay.\n\nHe sighed with relief, his eyes filling with tears, but he held them back. Taking a deep breath, he looked over at them.\n\n\"Thank you.\" He said. \"I hope I'll be able to repay you for this.\"\n\nTammy looked down at Fran and smiled.\n\n\"You had a problem with your personality profile, there was a conflict with one of the subroutines that caused a problem with your bonding protocol.\" She told her. \"You had us reset you, then reload the profile and your memories. Now I need you to run an internal diagnostic on the profile.\"\n\n\"I understand.\" Fran said. \"This may take several minutes.\"\n\nShe closed her eyes again and lay still.\n\n\"What do we do if there's a problem?\" He asked them.\n\nBefore they could answer, Fran opened her eyes and looked up at Tammy.\n\n\"There is a fault in manager one oh nine, it is attempting to access the bonding protocol and the sensory control system. I will attempt to disable, and remove it.\"\n\nShe closed her eyes again. It was almost ten minutes before she opened them again.\n\n\"The fault has been cleared. Manager one oh nine has been successfully removed.\" She said as she started to sit up.\n\n\"Not so fast Fran.\" Tammy said, pushing her back down on to the table. \"I want to take a look first, so you just stay still.\"\n\nShe went over to a terminal and accessed the personality profile, and scrolled down through it quickly.\n\n\"She's right, the fault has cleared, and manager one oh nine has been removed.\" Tammy said, as she came back over to the table, and removed the cables attached to Fran's chest. \n\n\"We need to remove that program from the list.\" Sam said. \"Maybe we can have the system run a diagnostic to find out why it causes this problem.\"\n\n\"If it was causing the problem.\" Tammy said as she replaced Fran's breasts. \"It may have been affected by something else in the profile, we don't know for sure yet.\"\n\n\"So this could happen again, and we may still have to wipe her, and start over.\" Rodney said.\n\n\"That's possible, but doubtful.\" Tammy said. \"I want Fran to run a diagnostic every two hours and report any anomalies. I also want to run a diagnostic here, in the lab, at least once a day, until further notice.\" \n\nShe glanced over at Sam, then over at Rodney. \"We can't add personalities to any other androids until we see if we actually fixed the problem. This project just came to a screeching halt kids.\"\n\n\"There is a simulation program that...\" Fran said as she sat up on the table.\n\n\"We can look at that tomorrow, Fran.\" Sam said. \"All this has been very hard on Rodney, and Tammy and I have things we need to do. Why don't you take him home. I think he needs you right now.\"\n\n(-)\n\nSo ends Chapter Seven of Book Three, Changes. This is also the end of Book Three, at least for now. I may continue this volume, because I want to explore the idea of Fran and the other androids...\n\nPlease leave a comment on whether you like the story or not...getting feedback helps in the writing process..."
    ],
    "authorname": "RibaldWriter",
    "tags": [
        "romance",
        "intercourse",
        "lesbian",
        "intrigue",
        "sex",
        "fun sex",
        "oral sex",
        "relationship",
        "love",
        "family"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/confirming-carter-bk-03-changes-ch-07"
}