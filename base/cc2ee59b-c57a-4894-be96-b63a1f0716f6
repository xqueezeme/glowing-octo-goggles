{
    "title": "Surefoot 25: Cross Porpoises",
    "pages": [
        "Undisclosed Location, Undisclosed Stardate: \n\nIt was a standard, nondescript subspace communications relay somewhere: tiny, uninhabited, uninhabitable. But it did possess the requisite hardware to receive six secure holocommunicator signals, relaying them in miniature to a shoebox-sized matrix for a classified meeting. And though none of the attendants were solid, all remained very substantial figures. \n\n\"It was an assassination attempt!\" Admiral Tattok declared, his diminutive Roylan stature compared with the other attendees belying the size of his outrage at the subject of the meeting. \"An assassination attempt on one of our own, by a ruthless criminal organisation!\" \n\nStanding opposite him, the image of Admiral Trenagen folded his hands behind his back and adopted a relaxed posture, as if in direct contrast to his colleague's ire. \"Very astute, Tattok. Perhaps you should be running Starfleet Intelligence instead of me?\" \n\n\"Perhaps he should?\" Next to Tattok, Admiral Goldstein, the Academy Superintendent, a portly, pepper-haired human female, glowered at Trenagen. \"If your flippant response is any indication of your attitude towards this crime. They tried to kill Captain Hrelle! And not just him, his family! His Chief Medical Officer was murdered! And several of my cadets were wounded during the attack on the Surefoot! My office has been fielding communications from the families of dozens of other cadets currently serving onboard starships, demanding to know if their children are in danger as well!\" \n\n\"Now, Ruth, there's no need for histrionics-\" \n\n\"Histrionics?\" Tattok snapped. \"They almost killed his baby! My own son is good friends with them, he practically sees them as a second family; he was ready to take the Starsong out to find those responsible! And he's not the only one who feels that way!\" \n\nOn Goldstein's other side, Admiral Salisk, Head of Starfleet Logistics, a gaunt Vulcan male just beginning to grey around his pointed ears, spoke up. \"I must concur with my colleagues' sentiment, if not their emotion. Communications traffic within Starfleet networks has increased exponentially since news of the Bel-Zon attack on the Surefoot was released. Captain Hrelle is a popular and respected figure, and many senior officers are demanding to know what our response will be to the incident.\" \n\n\"And that might mean something, if Starfleet was run by the power of mob rule, rather than discipline.\" Trenagen was a tall, imposing elderly human male of British descent, with snowy, swept-back hair, a broad nose from which his wrinkles seemed to radiate, and a Shakespearean manner in the way he used his baritone voice. \n\nThen the Commander-in-Chief, a round-bellied Tellarite female, spoke up. \"But as I understand it, this was not the first attack by the Bel-Zon on Captain Hrelle, was it?\" \n\n\"That depends on how you look at it, Ma'am.\" \n\nShe creased her snout in irritation. \"Do I seem in the mood for riddles, Ian?\" \n\n\"Not riddles, Ma'am, but semantics. Perhaps my esteemed predecessor would like to explain, as it involved an incident which occurred during his tenure?\" \n\nHe looked to Admiral William Jason Arrington, a middle-aged human male with receding fair hair and a chagrined expression. \"Ma'am, ten years ago the Bel-Zon raided Station Salem One to steal a cache of trilithium resin. They obtained the security codes by attacking the USS Furyk, commanded at the time by Captain Hrelle, and killing his crew, and then attacking Salem One, where Hrelle's wife and several personnel had been killed.\" \n\nA smile lifted the corners of his thin, colourless lips. \"I'm pleased to report that in the intervening years, my office managed to identify the members of the Inner Circle of the Bel-Zon and, with one exception who had been executed by the Nist, bring almost all of them to justice.\" \n\n\"Didn't your office also accuse Captain Hrelle of collusion with the Bel-Zon?\" Tattok reminded him archly. \"When in fact he was tortured and enslaved by them for years?\" \n\nArrington's smile dropped. \"Admittedly, yes. But it was a reasonable assumption, given that his body was not found among the rest of the Furyk's crew-\" \n\n\"Was it also reasonable that your idiot brother trespassed on my Academy grounds? To conduct a campaign of harassment against Sasha Hrelle, the Hero of Salem Four, just because she was the daughter of someone your family had held a personal grudge against for decades?\" \n\nArrington reddened further. \"My brother was suitably admonished for his... zeal. And whatever animosity certain members of my family may or may not have held against Captain Hrelle ended with me, on the day he saved the life of my son Giles during a Nausicaan assault. And this is all irrelevant to the matter at hand.\" He focused back on the Commander-in-Chief. \"What is relevant is that the previous incarnation of the Inner Circle has no known connection to the current one.\" \n\n\"Indeed,\" Trenagen agreed, taking the tiller of the conversation. \"It has been one of several factors hindering our obtaining intelligence regarding the current Bel-Zon; there are many individuals and groups out there making false claims of affiliation with them, to capitalise on the notoriety of the name. \n\nAnother factor has been the location of the current incarnation of the Bel-Zon: in the Skarosian system near the Cardassian border. It is a hostile non-aligned power, and the Cardassians have been more successful in making diplomatic overtures to them then we have. Vessels that have left their system and been stopped and searched have been found to be smuggling narcotics grown within Skaros' territory, including a particularly heinous version known colloquially as Vraxoin. \n\nThose caught are of course prosecuted, but our resources in the sector are limited and surely cannot catch them all, and an overaggressive approach is feared to have a detrimental effect on Federation diplomatic efforts with the Skarosians. \n\nBut perhaps the most significant factor hindering my office's efforts has been... Captain Hrelle himself.\" \n\n\"You'd better be prepared to explain that,\" Tattok warned darkly. \n\n\"Oh, of course I don't mean intentionally,\" Trenagen clarified mildly, if a little mockingly. \"But he does seem to crop up time and again in connection with the Bel-Zon, doesn't he? After he escaped from captivity, SI approached him, attempting to recruit him into our services, as his direct experience with them would have proved invaluable. He refused.\" \n\n\"Unbelievable,\" Goldstein remarked sarcastically. \"It's as if he wanted to leave that terrible part of his past behind him, or something.\" \n\n\"And yet Fate seems to conspire to refuse him this indulgence,\" Trenagen continued, unabated. \"Since then he has been involved in uncovering a trafficking operation of Malurian children, a spy network at the research laboratories on Malbruk II, and a Ferasan diplomatic spy network. All with Bel-Zon connections. \n\nMore recently, however, he was assigned by my esteemed colleague Admiral Tattok to an undercover mission to Skaros to obtain military intelligence about Cardassian activities, from an Orion information broker who was a valuable asset to my office. Hrelle then proceeded to murder this broker and destroy his organisation.\" \n\n\"You neglect to mention,\" Tattok pointed out angrily. \"How your 'Valuable Asset' had purchased abducted Federation children to sell on Skaros as part of a sex trafficking operation.\" \n\n\"WHAT?\" Goldstein faced Trenagen again, her hands balled into fists. \"Did you know about this?\" \n\n\"Absolutely not.\" \n\n\"But if you did,\" Tattok asked, \"Would it have made a difference to your using him?\" \n\nTrenagen's face creased. \"When one is fighting devils, one tends not to find angels in their circles.\" He faced the C-in-C again. \"And now in this latest incident, Hrelle had managed to capture the leader of the attackers on his ship, a Captain Kenneth Koulev, and several of his crewmen. The crewmen have been remanded to our custody, but Hrelle contrived to have Koulev extradited to Cait to stand trial. His intelligence could have been invaluable.\" \n\nThe Tellarite's beady eyes narrowed. \"I'm certain the Caitian government would grant your office the opportunity to interrogate him, Admiral.\" \n\n\"I'm sure they would, Ma'am... if the Caitian Matriarchy Tribunal who tried Koulev hadn't already ripped him to pieces. Literally.\" \n\nTattok grunted. \"Such a loss to the Universe.\" \n\n\"It is,\" Trenagen pointed out. \"If what the man had to tell us could prevent future atrocities. It almost makes one question where Captain Hrelle's loyalties lie: with the Federation, or with satisfying his Caitian bloodlust. It's a known fact that his people have a history of violence to the point of savagery.\" \n\n\"As do humans,\" Salisk noted dryly. \n\n\"Enough,\" the C-in-C cut in, silencing further argument. \"I accept that Starfleet Intelligence may have a difficult time gaining intelligence on the Bel-Zon, but I am confident that you will continue to strive towards this goal. \n\nI am more disturbed at the thought of these narcotics being smuggled out of Skaros - and that children are being smuggled in. Admiral Salisk, I want recommendations on my desk by tomorrow on how to double the resources patrolling near Skaros - and if a heightened security makes the diplomats' work with the Skarosians more difficult, then so be it. \n\nI will release an official response condemning the attack on the Surefoot, and ensuring that those yet to be apprehended for the act will soon be. Admiral Tattok, does the crew of the Surefoot require anything further to help them with overcoming their ordeal?\" \n\n\"Their ship has been repaired, I arranged for a replacement Chief Medical Officer to join them from the USS Nautilus, at least on a temporary basis, and I've arranged for a special Counselor to attend to them.\" \n\n* \n\nFROM: STARFLEET MEDICAL HQ \n\nTO: USS SUREFOOT-A, NCC 72111 \n\nSTARDATE: 54547.36 \n\nMESSAGE: You are directed to rendezvous with the Starfleet science vessel USS Kanaloa, NCC 69431 at your earliest convenience, where the following personnel currently on Medical Leave will attend a Mandatory Group Counseling Session with the Kanaloa's Chief Counselor, Doctor Hwii''!!''li'!'iei: \n\nCaptain Esek Hrelle, Commanding Officer \n\nCommander T'Varik, Executive Officer \n\nLieutenant Commander Kami Hrelle, Chief Counselor \n\nLieutenant C'Rash, Chief Security Officer \n\nEnsign Sasha Hrelle, Command Specialist \n\nCadet Jonas Ostrow, Engineering Specialist \n\nCadet Eydiir Daughter-of-Kaas, Medical Specialist \n\nCadet Neraxis Nemm, Security Specialist \n\nCadet Meow Rrori, Flight Ops Specialist \n\nCadet Kitirik Abyss Zuinthinem Emijiz, Science Specialist \n\nThe Group Counseling Session will require between 2-6 hours, although additional time will be alloted if required, and will take place in one of the Kanaloa's onboard Holopools. Immersion in water will be required; swimsuits are optional. The Session will also involve telepathic activity; all attendees will be required to authorise the consent forms attached. \n\nIt is also recommended a bucket of fish is brought. The fish can be replicated or natural, the particular breeds at the attendees' own discretion, as long as the fish are neither sentient nor contain any harmful toxins. \n\n* \n\n\"USS Surefoot-A, Counselor's Log, Stardate 54596.7, Counselor Kami Hrelle recording: In the days since the attack from the Vlathi, as the enormity of what happened, of what we did and what was done to us sinks in and our brains begin processing it, the expected after-effects of trauma have been noticeable: bursts of anger and anxiety, disrupted sleep patterns and sex drive, nightmares, evidence of guilt and flashbacks, and a detached attitude with regard to the rest of the crew. \n\nThe type and intensity of the after-effects among those affected varies, of course. Of the others, Captain Hrelle, and Cadets Eydiir Daughter-of-Kaas and Jonas Ostrow seem to be more resilient; ironically, their past traumas, and the consequent psychological counseling I have given them in the past, has prepared them for managing this current crisis. \n\nNaturally, I have managed to suffer no problems; my experience and expertise in the field has allowed me to successfully accept what happened and put it behind me. Sadly, however, bureaucracy demands that I remain off-duty until I am officially cleared with everyone else. But I am looking forward to seeing the Delphine Counselor at work. Group Harmonics is a- a-\" \n\nKami stopped, her elevated pointed ears twitching as she realised she hadn't heard Misha in the next room with his big sister Sasha in a long time. She rose from the bed and entered. \"Hey, everything okay in-\" \n\nThey were missing. \n\nHer heart raced and her tail twitched as she raised her voice. \"Computer: where's Misha and Sasha Hrelle?\" \n\n\"Misha and Sasha Hrelle are in Sickbay.\" \n\nKami flung her recording PADD to the nearest wall as she raced out, ignoring the cracking sound the instrument made as it struck and shattered. \n\n* \n\nDeck 2 Mid - Sickbay Suite, CMO's Office: \n\nSasha Hrelle sat behind the desk and looked around at the various items the new doctor had added to the room since his arrival: a potted plant of some dazzling desert flowers, a ticking analog clock on the wall, a watercolour painting of a rugged desert terrain with a herd of some quadrupeds wandering along it, certificates, photos... and a wooden hatstand holding a dark leathery longcoat and a large, oatmeal-coloured Stetson hat with a dark hatband perched on top. \"So... you're into cowboys, are ya, Doctor?\" \n\n\"Call me Doc. And we're all cowboys on Coldwater, little lady.\" Ezekiel Masterson was a tanned, broad-shouldered, rugged-looking human male in his late twenties, with truculent cornfield-blonde hair, sky-blue eyes, and a bright smile and broad chin sporting stubble. \"Bet ya never heard of it, huh?\" \n\nSasha watched with amusement the very interested reactions from the medical staff in the main part of Sickbay as they looked in and saw him making faces at her little brother Misha, currently sitting in his carrier chair on the man's desk. \"I'm afraid not, Doc. Where is it, Texas? Arizona?\" \n\n\"The fourth planet in the Tagus II system. And when my grandparents helped found the colony a hundred years ago, they wanted to recreate the American Frontier as much as possible. So on Coldwater, everyone learns how to ride a horse, rope a bronco, navigate the stars under our sky, identify the plants to eat and avoid... and to dance.\" \n\nSasha grinned. \"Dance?\" \n\nMasterson looked up at her and winked. \"A cowboy that can't show a lady a good time on the dance floor ain't fit for nothing.\" \n\nShe smiled. She had decided to give Kami a break and take Misha for a walk around the ship, when she heard the talk from the medical staff about the newly-arrived CMO, and decided to drop in for an introduction. And the man proved as handsome and charming as she had heard. \"So, where's your six-shooters?\" \n\n\"Don't have none, Miss.\" \n\n\"Oh? How can you be a cowboy without guns?\" she teased. \n\n\"There are many kinds of cowboy, little lady; put a gun in my hand and I'm liable to shoot myself in the foot, even if it was a phaser. Anyways, I prefer saving lives to taking them.\" \n\nShe watched him continue to pass the sensor wand over the infant, checking the readings appearing on the tricorder in his other hand. \"You sure you know how to use those? You're not gonna treat people with rusty saws and snake venom, are you?\" \n\nHe never looked up from his perusal of the readings, appearing fascinated by Misha's biosigns. \"Don't let the accent and accoutrements fool you, Ensign: I still graduated from Starfleet Medical Academy, and served my time onboard the Pasteur, the Excalibur, the Nautilus-\" \n\n\"Impressive. I hope this doesn't feel like a step down for you.\" \n\nMasterson looked at her again, smiling. \"On those other ships, I was part of a herd of doctors, ignored despite my looks and charm. Here, I get to be the Big Chief. Assuming that ornery Klingon hombre Kline doesn't backshoot me, and your Daddy lets me stay, of course.\" \n\n\"I'm sure-\" She was distracted by the glimpse of someone in red passing by the window \n\n(the blood of the Vlathi she was fighting was thick on her clothes her hands it filled her nostrils choking her she killed it she killed it) \n\nMasterson stopped examining Misha until her attention returned. Then he assured her, \"They'll pass.\" \n\n\"Pardon?\" she blinked. \n\n\"The flashbacks. They'll pass. I read the accounts of what happened to y'all.\" The Western charm was momentarily reduced, in favour of a more direct, sincere and sympathetic approach. \n\n\"I-\" She felt herself blush. In the days since the attack, since she almost died fighting the Vlathi in the Arboretum before she killed it, she knew she'd been returning to what had happened to her, time and again. \"Sorry.\" \n\n\"Don't be.\" He set down the instruments and walked around to his hatstand. \"Besides, I know what you really want to do.\" He lifted up the Stetson. \"You want to try on my hat.\" \n\nHe fitted it down on her head. \n\nIt was big enough to drop over her forehead and eyes and stop at her nose. \n\nMisha giggled at the sight of his sister. \n\nSasha pushed the front of the hat up and glared with mock vexation at the infant, affecting an exaggerated Western twang. \"Y'all watch yourself over there, ya little tenderloin.\" \n\n\"That's 'tenderfoot',\" Masterson corrected her. \"Unless you're gonna eat him?\" \n\n\"Not today.\" She took off the hat and rose to return it to its rightful place. \"Um... he's okay, isn't he? He's been through a lot since- well, come to think of it, since before he was born.\" \n\nThe doctor returned to face Misha, tickling him under his chin. \"Well, I never worked on a Caitian before, but I have to say he is the cutest, healthiest little critter this side of Pollux.\" He drew back the finger before Misha could clamp onto it with his teeth. \"There is one more test I can perform on him, though.\" He reached for a familiar-shaped case, opening it and extracting a cherry-red wooden acoustic guitar with an elaborate sparkling constellation pattern on the body beneath the bridge. \n\n\"You play?\" Sasha asked, too late feeling foolish for asking. \n\nHe slipped the beaded guitar strap over his head. \"It keeps the fingers nimble; handy when you're a Sawbones.\" He plucked a few strings and adjusted the tuners at the head, noticing Misha's sudden intense interest in the sounds. \"Now, a good cowboy has a thousand songs under his belt, but the trouble with cowboy songs is that they're all about heartbreak and divorce and loneliness. Not appropriate for little critters... Let's see if I can remember what my Pa used to play for me...\" \n\nThen he smiled and began strumming a lively tune. \"There's a duck in my hands that goes Quack Quack Quack / There's a duck in my hands that goes Quack Quack Quack / But if I squeeze too tight it goes-\" Then he blew three loud raspberries, making Misha giggle with utter delight. \"So don't squeeze the duck too tight!\" \n\nHe looked up to see Sasha giggling as well, making him note, \"I see I've got a sophisticated audience here on the Surefoot. Let's see how the second chorus goes down...\" He began strumming again. \"There's a tribble in my hands that goes Purr Purr Purr-\" \n\n\"GET AWAY FROM HIM!\" \n\nMasterson stopped playing and stepped back at the sight of Kami, storming into Sickbay and straight to his office, claws and teeth bared as she stepped between the doctor and the cub. \n\n\"Kami!\" Sasha bolted to her feet, alarmed at the fury in the other woman's voice and stance. \"What's wrong?\" ",
        "The Counselor kept glaring at Masterson, but still addressed her venom at Sasha. \"Who said you could take Misha out of our quarters without my permission? Who said you could bring him in here? With someone I don't even know?\" \n\n\"I- I-\" \n\n\"It was my fault, Ma'am,\" Masterson interjected, as he slowly, carefully removed his guitar and set it aside, keeping his hands open and not approaching the woman. \"I met them outside and invited them in; I never met a Caitian before, and I wanted to get a gander. I'm Doc-\" \n\n\"I don't give a damn about your name!\" she snarled. \"You go near my cub again, and you'll get a gander at your own intestines! DO YOU UNDERSTAND ME?\" \n\n\"Yes, Ma'am. Sorry, Ma'am.\" \n\nSasha turned scarlet. \"Kami, I- I didn't mean-\" \n\nMisha began crying. \n\nIgnoring the others now, Kami lifted up his chair and stormed out again. \n\nPale, shaking with shock and confusion, Sasha looked to Masterson. \"Doc, I'm sorry, I didn't mean to get you into trouble! It wasn't your fault, you shouldn't have said anything!\" \n\nHe shook his head, waving off her apology. \"Don't you be fretting over it, little lady - by that, or what she said to you. She's hurting. More than she'll say. It's a clich\u00e9 that doctors make the worst patients, but that's only 'coz it's true.\" \n\n* \n\nDeck 4 Mid - Engineering Workshop: \n\nFalok leaned forward, manipulating the controls before him, enlarging the images of the pieces of the broken Capellan sword on the display. \"As you can see, the Nanites can be programmed to reknit along the appropriate edges, with a variance of only 2.5 microns at most. It will be as if the sword had not been broken at all.\" \n\nBeside him, Eydiir sat, arms folded across her chest, her taciturn expression hardening. \"But it has been. I broke it. I will always know.\" \n\nThe Vulcan tilted his head towards her. \"But does that matter?\" \n\n\"Yes. On Capella, a weapon that has been broken in battle is buried - something we do not even do with our deceased.\" She grunted. \"We treat our weapons with more respect than our people.\" \n\nThe cadet who had in the past few months had become her confidante, and then her lover, now faced her fully, his expression sympathetic. \"You wish to bury this sword? Perhaps in the Arboretum, or the next planet we pass?\" \n\n\"I...\" She paused, and then added, \"I do not wish to give up on it. Not if it can be saved. It may not be the same as it was before, but that does not mean it should be discarded.\" \n\nFalok raised an eyebrow. \"One could say the same thing about the other victims of the Vlathi.\" \n\nEydiir looked to him, a smile lifting the corners of her mouth. \"You have a way with words.\" \n\nHe glanced behind them, ensuring no one was around, before reaching out with his hand, the fore- and middle fingers extended. \n\nShe almost responded with her own. In the past few weeks, they had developed enough of a mental rapport to initiate a shallow mindmeld, nothing too deep or intricate, but rather a quick exchange of thoughts. It was a fascinating, intense experience, and she used to look forward to their meetings. \n\nBut she held back now. She had no interest in sharing thoughts anymore. Certainly not the recent ones. She couldn't say why, and she hoped he didn't take it the wrong way. \n\nA hint of a frown crossed his features, as he lowered her hand again. \"Forgive me. I did not mean to presume-\" \n\nShe shook her head. \"No. It is not you. I am... not yet ready.\" She turned back to the display. \"Shall we proceed?\" \n\n* \n\nDeck 3 Fore - Alpha Squad Quarters: \n\nKit couldn't sit still. He kept feeling things creeping up behind him. Hiding just out of sight. Ready to pounce. Ready to strike and cut and hurt and kill and- \n\nNO! STOP IT! NOTHING IS THERE! NOTHING! \n\nHe wasn't sleeping properly. His mottled lime-green skin had lost some of its colour, and his round bronze eyes felt filmy. He yawned for what felt like the thousandth time in the last handful of days, his throat wattles aching. \n\nHe couldn't focus on the screen before him. The words seemed to crawl over the display. Swarms of them, attacking those who are different- Aberrant ABERRANT ABERRANT ABERRANT \n\nHe blinked, accepting that he couldn't finish editing and transmitting his journal back to his homeworld in his current condition, and switched off the display and rose, stretching his limbs. He should sleep. Yes, he definitely should. \n\nExcept at those times, the nightmares would return, and he can't stop them from CRAWLING OVER HIM POUNDING BEATING YOU FILTHY ABERRANT- \n\nKit gripped the back of his chair, waiting for it to pass. \n\nThen his attention moved once more to the black bag sitting beside the couch. \n\nHe was alone; the other members of his squad were elsewhere, but any of them could be back at any time. \n\nIt was wrong to go back to it. \n\nHe still did, kneeling and opening it, the guilt rising like bile within him. Very Good Friend Eydiir's medical bag should be used only by her, for when one of them needed a quick patch-up for torn ligaments or cuts and bruises. He really shouldn't be doing this. If he was caught- \n\nHe jumped again at nothing. \n\nThen he prepared a hypospray with a mild sedative. Not much. Just enough to help dull the senses. And Eydiir and the others didn't need to know. They were all suffering, or helping each other. They didn't need to worry about him as well. \n\n* \n\nDeck 2 Fore - Command Quarters: \n\nKami was removing Misha from the seat and comforting him, when Hrelle entered, his face a fixed mask. \"Hello, you two. How's things?\" \n\nKami was reclining on the couch, her arms wrapped around their infant, who looked settled again. Her face was a picture of innocence. \"Fine, Beloved. I thought you were in the Shuttlebay talking technobabble with Lt Velkovsky?\" \n\nHe shrugged. \"I could tell she was barely tolerating having her Captain hanging around taking up her time talking about shuttle engine improvements.\" He drew closer, kneeling down beside them and nuzzling both their snouts. \"And what have you two been up to? I thought Sasha was minding him for you while you caught up with admin work?\" \n\nShe smirked. \"Come on, Esek. You know better than that.\" \n\n\"Better than what?\" \n\nShe reached out with her free hand and stroked the fur under his left ear. \"Who told you about the little misunderstanding?\" \n\n\"Misunderstanding?\" \n\nShe nodded, smiling. \"Sasha decided to go visit that handsome new doctor of ours, she took Misha with her without telling me, when I came in here and saw they were missing, and the computer said they were in Sickbay, I got a little worried, went down to find out what was going on, retrieved Misha and left her with the doctor.\" \n\n\"Oh? Is that all it was?\" He reached up and tickled under Misha's chin. \"I had heard that... voices were raised.\" \n\nKami laughed softly. \"I think someone's been pulling your tail.\" \n\nHe looked to her, before nodding. \"Okay. If that's the case, I'll see about getting you two something to eat. We still have some fresh food left over from the clan's visit that needs using up before our rendezvous with the Kanaloa.\" \n\nShe beamed at him. \"Now that's My Big Strong Male thinking about his family. Don't skimp on the shuris strips.\" \n\n\"Promise.\" He rose, keeping his smile fixed until he left their quarters. Then he walked distractedly along the corridor to the Bridge, where Lt Neheru was in command on this shift since most of the senior crew had been temporarily put on Medical Leave. \"Lieutenant, what's our ETA to the Kanaloa?\" \n\nThe tall, scarecrow-like Kelpien almost bolted reflexively out of the Command Chair to let Hrelle take over, before he recovered. \"Captain! The ETA is currently 8.3 hours at Warp 8.\" \n\nThe Caitian nodded. \"Can we shorten that time, please?\" \n\nNeheru looked distinctly uncomfortable with having to make his reply. \"Sir... Regulations typically do not allow for travel over Warp 8 except during emergency situations.\" \n\n\"Mr Neheru,\" Hrelle replied simply. Pleadingly. \"We need their help. Quickly.\" \n\nNeheru regarded him for a moment, before turning his chair to half-face the Ops Station behind him. \"Ensign Naavos, please note for the record that I am authorising a test of the engines at high warp following the recent attack from the Vlathi.\" \n\nThe young Bajoran nodded. \"Aye, Sir.\" \n\nHe turned back again. \"Helm, increase speed to Warp 9.5.\" \n\nThe other cadet complied; the background hum of the warp engines discernibly increased. \"Warp 9.5 reached, Lieutenant. New ETA to the Kanaloa: 3.4 hours.\" \n\nNeheru nodded. \"Coincidentally, that is how long I wish to test the engines.\" He looked back at Hrelle. \"Sir, I am reluctant to remind you that as you are still on Medical Leave, your presence here is-\" \n\nHrelle raised a hand to cut him off. \"Say no more. I have to get the fish ready for Doctor Hawa- Hawawhillie- Hawaweewilliwinkie- Um...\" \n\nNeheru smirked sympathetically with his lipless mouth. \"I had difficulty trying to pronounce the name in the report myself, Sir, and when the computer vocalised it, it sounded like a malfunction.\" \n\n* \n\nDeck 3 Fore - Enlisted Mess Hall: \n\nJonas ignored them: the stares, the glances. It was bound to happen, after all they've been through. He had gone through something similar the previous year, when he had tried to kill himself. He hated being the centre of attetnion, both because of that lapse, and because of his involvement with the Vlathi incident. \n\nHe strode up to the replicator; he hadn't slept well the night before, his Medical Leave status meant he couldn't go near any of his usual haunts or work on any equipment for Chief Grev, and his efforts to distract himself with academic work met with limited success. And Neraxis was having it worse, which meant he was caring for her. Not that he minded that- \n\nHe jumped at the hand that suddenly clasped onto his shoulder. \"Hey, Killer!\" \n\nJonas composed himself, employing long-useful techniques taught him by Kami. \"Ray.\" \n\nDelta Squad's Security Specialist Raymond Jeung drew up beside him, grinning, his tall frame and broad shoulders drawing in close, his face bright and animated. \"How's it going?\" \n\n\"Fine, thanks. Everything's fine.\" \n\n\"Good! And your gut? Still hurting from getting shot?\" \n\n\"No.\" He tried to step aside, out of the cadet's grip and focus on the replicator menu panel. He wanted something to drink, something soothing- \n\n\"How's Nemm doing? We're missing her, and Lieutenant Shall.\" \n\n\"She's fine. They're both fine.\" Camomile and honey tea sounded good. Or maybe warm spiced milk; the Counselor recommended that once. And he could bring back some for Neraxis, though being Bolian she would probably want it with chili sauce- \n\nJeung leaned in again. \"Yeah, must be tough, having all this free time to go Bumpers with your girlfriend, huh?\" He chuckled. \"Lucky bastard.\" \n\nJonas stopped staring blankly at the menu to glance at him. \"What?\" \n\nJeung grinned with pearly white teeth. \"You lucky bastard. You got to see some action, you got shot, and you pulled a fancy trick with the transporter and killed one of those things!\" His eyes widened. \"Hey, what was it like? Must have been fun.\"  \n\nJonas faced him fully, his face pale with disbelief as he raised his voice. \"Are you... ARE YOU KIDDING ME?\" He drew in, aware that all eyes in the Mess Hall were on them now, aware of his hands squeezing into fists, aware that he was making a confused-looking Jeung back away, but not caring about any of that. \"It was like using my knowledge of Engineering to come up with a way to tear a living being apart and end its life in a horrible, horrible way! It was like seeing my friends, people I love, being threatened, hurt, almost killed! It was like feeling slugs of metal pierce my flesh and shred my insides! It was like seeing blood and hearing hissing everywhere I go! It was like- like-\" \n\n\"Jonas.\" \n\nHe turned; Chief Grev was there, the Tellarite stepping around the spectators that had arisen in order to approach the cadets. \"Why don't you stop stinking up the Mess Hall with your human odours and take a walk?\" \n\nJonas breathed in, forcing himself to look away from Jeung to face his supervisor, composing himself, ashamed of letting himself lose it like that. \"Good- Good idea, Chief, I wouldn't want to stay here and risk getting tripped up by your huge clunky hooves.\" \n\nGrev grunted with approval at the expected banter, patting the young man on the shoulder as Jonas departed. Then Grev moved up to Jeung. \"As for you, perhaps you should come see me in Engineering about fixing that leak you have under your nose? The one spewing Sheer Ignorance?\" \n\n* \n\nDeck 2 Fore - Guest Quarters 4: \n\nThey kept rising. And she kept firing, blood and guts spattering around her, until it felt like it was choking her lungs. \n\nAnd still they kept rising, out of the ground, out of the bulkheads, humanoids and reptoids and guns and shouts and curses and hisses and cries and her ears rang with the thunderous roar of the rifle in her hands as she cut them to pieces and the pieces kept coming after her, grabbing her, piercing her blue skin and drawing purple blood and ripping her uniform and flesh and tearing her apart- \n\n-Neraxis' fist smacked the wall next to the bed as she screamed and kicked, her feet caught in the blankets covering her. \n\n\"Ner-Ner!\" Jonas entered the quarters and rushed up to her, grabbing her by the shoulders. \"Wake up!\" \n\nHer eyes saucered and shot up at her lover - and her hand balled into a fist, ready to smack him in the face, before she recovered, shuddering, breathing hard. \n\nHe knelt at the bedside, his hands easing their hold on her, his voice low and reassuring. \"It's okay, it was just a nightmare, that's all!\" \n\nThe Bolian took a moment to recover her wits, before pulling him into a tight, desperate embrace. \n\nThey held each other for a while, before he climbed in beside her. She tensed. \"Wait- I'm sweating here-\" \n\nHe smiled. \"Won't be the first time I've seen you sweat. Of course, there were better reasons then-\" \n\n\"Hey, I mean it - you know my Bolian biochemistry by now, even my sweat can irritate you!\" \n\nHe brought a finger to her dark blue lips to shush her. \"I already took a neutraliser.\" Then he put an arm around her and rested his forehead against hers. \n\nThey were silent for a while, before Neraxis confessed, \"Jonas... I'm sorry.\" \n\n\"Sorry? For what?\" \n\n\"All this time, I've been worked up over what I'm going through, and I've hardly asked about how you're doing.\" \n\nHe smiled. \"I'm fine, Big Blue.\" \n\n\"I'm being serious!\" \n\n\"So am I!\" He reached up and stroked the back of her bald head. \"I know you started calling me Scrappy because I grew up in a scrapyard in Hyralin... but it can also mean I'm pretty tough, you know?\" He stuck out his chin and spoke in a deep Klingon baritone. \"I am Jonas, Son of Harriet, of the House of Ostrow! Today is a good day to diet!\" \n\nNeraxis chuckled, clutching him tightly. \"What would I do without you, Scrappy?\" \n\nHis smile broadened and hugged her again. \"Let's not find out, okay?\" \n\n* \n\nDeck 3 Fore - Holodeck 2: \n\nOn a blanket in a holographic glade filled with lush-smelling greenery and birdsong beneath an aquamarine sky, a naked Rrori rolled away from his date, unable to look at her anymore, too embarrassed. \"I'm sorry, Izzy, I'm really sorry, that's never happened before...\" \n\nDelta Squad Leader Isabelle Zhou sat up, her Northern English accent sympathetic. \"Hey, it's okay, I hear it happens to all guys at some stage-\" \n\n\"Not to me!\" He reached for his boxers, slipping into them, feeling an unaccustomed burst of embarrassment at his unclothed state. \"I'm Meow Rrori! I'm a Titan! A Juggernaut! A Sexual Supernova! I'm- I'm...\" He leaned forward, running his hands through the tufts of fine fur on the sides of his head beneath his high pointed ears. His voice grew low, fragile. \"I'm an animal.\" \n\nZhou swung around to sit up beside him on the blanket. \"Why would you say that? It's because of what happened, isn't it?\" \n\nHe couldn't look at her. \"I... I killed.\" \n\n\"Yes, I heard-\" \n\n\"No. You don't know the details.\" He breathed in sharply with the memory. \"When Little Misha was attacked, he made a scream. Not any ordinary scream. Our history books call it C'Mau's Cry, something most people think is just a story, apocryphal. I certainly thought that. But I was wrong. \n\nIt's a racial trigger, and any Caitian who hears it loses all reason. All civilisation. I raced into the Shuttlebay with the others to save him, took bullets without stopping or even being aware of it, and tore into flesh, using my claws, my teeth.\" He swallowed. \"Many humans look at Caitians, with our fur and tails and muzzles, and see only these surface aspects. They see animals. I've heard the jokes told in the Mess Hall and the Gym, jokes about my having fleas and using litter boxes. Jokes I wasn't supposed to hear. And I'm sure that they aren't meant maliciously or seriously. They still sting.\" \n\n\"Who makes such jokes?\" she demanded, appalled. \"Is it any of my squad? Because if it is, they'll be feeling my teeth and claws!\" \n\nHe shook his head. \"No, don't even joke about that. It doesn't matter, anyway. Before the Vlathi came, I put aside such things. Yes, I had helped end lives, when piloting the Surefoot to attack other vessels, but that was always in the name of duty. This was different. This was up close, personal. And I can't help but accept that there is more truth in those jokes than I cared to accept until now. I am an animal.\" \n\nShe looked at him. \"Probably. But really, no more than the rest of us. We might not have a C'Mau's Cry, but do you think humans don't have that same savage side to them? Of course we do. But that's all it is, just a side, a facet of us. It's not the whole picture.\" \n\nShe rose and walked across the grass to where she had discarded her clothes, beginning to dress again. \"And for the record, I came in here despite your reputation as a 'Sexual Supernova', not because of it. Because I suspected that beneath the ego and the libido, there was this honest, vulnerable man who was worth getting to know better. And I'm glad I was right.\" She smiled. \"And I want to see that man again. When you get the help you need, and your Mojo returns, call me for another date.\" \n\n\"Mojo?\" He grunted. He liked the sound of that word. \n\n\"Yes. Now come on, buy me a coffee in the Mess Hall, and I'll tell you all about the coolest city on Earth: Manchester.\" \n\nHe liked the sound of that place, too. \n\n* \n\nDeck 2 Fore - XO's Quarters: \n\nT'Varik knelt on the mat, fingers clasped around the mandala as it rested on her lap, and she stared into the still candle flame before her, the only illumination in the room. She pictured each step of her strengthening process as a layer of liquid, poured into a wide, shallow basin, the liquid spreading out, finding equilibrium as it settled and became still, before she added another, and then another. And as she did so, she could feel herself growing calmer, more serene. It would be successful. It would be- \n\n\"Hey!\" \n\nThe mental image of the water rippled at the interruption from the intruder into her quarters, and her mind. Without looking up, she announced, \"I had placed a privacy lock on my door.\" \n\n\"I know, and it was cute that you thought that would stop the Chief of Security.\" C'Rash strolled in, looking curious and concerned. \"I thought you were going to wait until I got here, so we could mindmeld and meditate together.\" \n\nT'Varik gathered her meagre scraps of discipline together. \"That will not be happening anymore. I must sever our relationship.\" \n\nThe black-furred Caitian female's tail swished, blowing out of the candle on the floor between them. \"Excuse me?\" ",
        "T'Varik set aside her mandala and rose. \"Computer: Standard Illumination.\" As the lights dutifully rose to normal levels, the Vulcan folded her arms into the billowy sleeves of her black meditation robe. \"Our relationship is required to return to its former parameters. We can no longer be physically or emotionally intimate.\" \n\n\"What? Where in the Seven Hells is this coming from?\" \n\n\"It should be obvious to one of your intelligence. My actions and attitude during the Vlathi Incident were distinctly unbecoming of a Vulcan. And they were a direct result of the emotional bonds I have allowed to develop with you... and with Misha. Both of these must end if I am to maintain logical equilibrium and objectivity.\" \n\nC'Rash stared hard at her. \"T'Varik, I know that what you did to that Vlathi scared you-\" \n\n\"Indeed. And the fact that I can so readily admit to that fear should be indicative of the nature of my present condition, and of the need to discontinue these relationships.\" \n\n\"But you've had lovers before! That instructor at the Academy!\" \n\n\"She was Vulcan, disciplined and not prone to be as emotionally fatiguing as you Caitians are.\" \n\n\"Oh, I'm so sorry if we fatigue you!\" \n\n\"It is not intended as an insult towards your people, but a reflection on mine. Without our emotional disciplines, Vulcans would be no better than Romulans, threatening ourselves and others with our unchecked passions. It is an expensive burden, but a necessary one. And although there have been successful relationships between Vulcans and non-Vulcans, it is not always guaranteed. However, I will endeavour to maintain our working relationship.\" \n\nC'Rash paced the room, her tail twitching in agitation behind her. \"What about Misha? You're his Lressha, his Godmother! That's the only relationship he has with you! Why should he suffer because you haven't got the balls to face your own emotions?\" \n\nT'Varik felt herself wavering, but strengthened her resolve. \"I have 'faced my emotions'. I faced them, and I surrendered to them, the moment I used excessive force on the Vlathi who attempted to kill Misha. I cannot allow that to happen again. It is regrettable that my withdrawal from his active life patterns might have an initial negative effect upon him-\" \n\n\"'Regrettable'? He's not some casual acquaintance you meet for coffee in the Mess Hall every morning! He's a cub, an infant! He doesn't know about your internal struggles, and he doesn't care! He just loves you!\" Tears welled up in her bronze eyes as she stopped and stared. \"I love you, too, thanks for asking, by the way!\" \n\nT'Varik set her mind towards calculating subspace fractal patterns, to keep herself on as much a harmonious path as possible, under the circumstances. \"I know. And I regret that this decision will affect you so negatively, too. But I do not regret it enough to waver from it.\" \n\nThe Caitian wiped her eyes. \"Has your powerful little logical brain considered that all of this is just an effect of the psychological trauma we all suffered? And that you're not in your right mind?\" \n\nThe Vulcan stiffened her posture. \"I admit to having experienced a... disturbance... immediately following the aforementioned events. But I have since regained my mental symmetry, so the imminent session with the Counselor on the Kanaloa will merely be a formality. I have cured myself.\" \n\nC'Rash folded her arms across her chest and grunted. \"Yeah, you and Aunt Kami; she thinks she's fine too. You two are cut from the same cloth of Stubborn Old Bitch.\" \n\n\"This discussion has reached the point of diminishing returns; I must insist that you leave.\" \n\nC'Rash dropped her arms. \"This isn't over, T'Varik. I'm not giving up on you so easily.\" \n\nShe turned to depart, but T'Varik called after her, \"C'Rash...\" When the Caitian stopped and turned at the doorway, she continued with, \"I will always treasure the time we had together. Our lovemaking, our mindmelds, were stimulating and satisfying on numerous levels. I do not know if I will have another relationship again, but if I do, it will need to be extraordinary to compete with what we had.\" \n\nC'Rash glared at her, raising a hand and pointing a finger in her direction. \"Our meeting with the Kanaloa has been moved up. Don't be late to Transporter Room 1.\" \n\n* \n\nDeck 3 Fore - Starboard Corridor: \n\nShe had hoped that a couple of drinks would have given her some Romulan Courage to keep going. They hadn't. \n\nShe would stop whenever someone walked by, and she'd pretend to have stopped to adjust her boots or the cuffs of her uniform. And then she'd try to get herself closer to the Arboretum door where \n\n(the blood of the Vlathi she was fighting was thick on her clothes her hands it filled her nostrils choking her she killed it she killed it) \n\nshe hadn't been since That Night. One step closer. One step closer \n\n(it struck her jaw cracking it sending teeth flying out blood filled her mouth) \n\nOne step closer \n\n(her thumb pressed into its left eye socket, making it screech) \n\nOne step \n\n(the blood splattered on her cheek, numbed from the venom coursing through her veins) \n\nOne \n\n(she killed it felt its last breath escape in a ragged final exit she killed it killed it killed) \n\nShe turned away, her body threatening to lose control completely. \n\nShe needed to feel something else. \n\n* \n\nDeck 3 Fore - Beta Squad Quarters: \n\nGiles Arrington had been leading a study session with his squad when their door chimed. \"Enter.\" \n\nThe door slid open, and Sasha half-stepped in, leaning against the doorway. \"Giles.\" \n\nHe stood up. \"Sash? Are you okay?\" \n\nHer eyes were strangely vacant. \"Giles- I need you- can I see you alone?\" \n\nHe shot looks at some of his squadmates who snickered - there had apparently been bets being taken as to how long it would be before Giles and Sasha were back together again - and he nodded. \"You guys keep at it, and if you work out that stroking problem about subspace compression fields, let me know.\" He indicated the bedroom, asking Sasha, \"Will in there do for you?\" \n\nShe nodded silently, following him inside - and then embracing and kissing him before the door even closed. She pushed him up against one of the bunk beds, her arms moving over him. He tasted some strong alcohol on her breath, and struggled to pull back. \"Sash- wait-\" \n\n\"No,\" she murmured, doubling her efforts to kiss him again. \"I know you want it too-\" \n\n\"No, Sash-\" he lied. He couldn't deny it, he missed the sex, the intimacy, they had when they were still together, in the previous stage of their relationship. And there was a part of him - literally - that responded to her advances. \n\nBut still he pushed her back, holding onto her wrists. \"Sasha, please, no, you don't really want to do this.\" \n\n\"Sure I do,\" she slurred, trying to grind shamelessly against him. \"We were good together. You can do anything you want to me. Things I never let you do before-\" \n\n\"SASHA, NO!\" \n\nHer advances became an assault, her hands balling into fists that struck him, her words becoming curses that hurt him, before she finally collapsed into fits of sobs against him, and he had to hold her up to keep her from collapsing at his feet. All the time they had been together, he had never seen her this... fragile. \"It's okay, Sash... Everything's gonna be okay-\" \n\nThe bedroom door slid open, and Nancy Yeager entered, with others peering in with abject curiosity, though she at least seemed driven more by concern. \"Giles?\" \n\nHe looked to her gratefully. \"Get Eydiir or someone from Alpha Squad over here.\" \n\nShe nodded and departed, while Sasha continued to sob against him, her voice muffled but her words clear. \"I'm sorry- I'm sorry, I just- I just want to feel something else for a while- I just want to stop thinking about it- stop remembering- turn my brain off- I'm sorry, Giles-\" \n\nHe shushed her, and held her. When word had spread throughout the Surefoot about the Vlathi attack and Alpha Squad's involvement in fighting the invaders, there was a great deal of envy from the other cadets, envy that they didn't get to join in on the 'adventure'. \n\nHe wished those people could now see the trauma suffered by those involved. His own Security Specialist, the Andorian Atiaro Thykrill, had been peripherally caught up in it by chance. And despite the violent reputation her own people hold, she spoke with numb horror at the carnage the attack had produced. \n\nHe had no envy for those who took part in it. Only pity. \n\n* \n\nThe vessel filled the Bridge viewscreen, its spherical hull, angular Engineering section and stunted nacelles similar to Starfleet's Olympic-class hospital ships. But this vessel had a more streamlined, organic look to it - like a gargantuan sea creature, Neheru thought to himself. \n\n\"So it's really filled with water?\" Ensign Naavos asked aloud. \n\n\"Not quite, Mr Naavos,\" Neheru replied, pleased to put his knowledge of ship design to good use for his captive audience. \"There are indeed large sections and corridors completely immersed in with water, allowing the crew to move about and operate more quickly than a standard vessel, but there are also dry areas for lifeforms such as ourselves. But all onboard equipment, including phasers, transporters and shuttle, is designed to function in dry air or underwater already; their primary mission involves surveying aquatic worlds, after all.\" \n\n\"Yes, but how can dolphins even operate a starship? Do the repair work and such without hands?\" \n\n\"Their race's proper name is Delphine, Ensign. As for your query, well, for one thing, they can slip themselves in and out of manipulator harnesses when required. For another, there are other aquatic races onboard - Selkins, Firotii, Xindi - with natural appendages, as well as servo drones for more intricate departure and maintenance. Besides, a great deal of work is already accomplished automatically, or via voice command.\" \n\nThe young Bajoran nodded, but then noted, \"It still seems strange to see sea-based creatures in space.\" \n\n\"The desire to explore is an almost-universal trait, Ensign, whether it is under the water or in the depths of space. And Delphines make superb navigators and stellar physicists. Complete the standard handshake protocols and alert the appropriate crewmembers of our rendezvous and their imminent appointments.\" \n\n\"Aye, Sir.\" \n\n* \n\nEydiir injected the detoxicant into Sasha's arm. \"There, you should be steadier on your feet now. And less likely to vomit in the pool.\" \n\nSasha grunted; her black Academy one-piece swimsuit felt tight beneath her uniform. \"I can't believe I threw myself at Giles.\" \n\n\"It is fortunate that you did.\" At Sasha's expression, her friend elaborated. \"He is an honourable man who would not, and did not, take advantage of your emotional state. Had you gone to someone else, and they had proved less honourable, I would have had to pummel them.\" \n\n\"Thanks.\" Sasha turned, catching a glimpse of her reflection in the mirror \n\n(the blood spurted up, again and again, ebbing as the life ebbed) \n\nas she turned and slipped an arm around Eydiir, guiding her out into the common room. \n\nThere, Jonas and Neraxis, and Kit and Rrori, stood around, looking as nervous and edgy as they did readying for their first Academy parade, four years ago. They were looking at each other curiously, before Jonas caught Sasha's eye, prompting her to ask, \"What?\" \n\n\"Well... We were wondering...\" \n\n\"About what?\" \n\nHe flushed a little, but not too much. \"Are you wearing a swimsuit under there?\" \n\nShe frowned. \"What? Yes. Why?\" \n\nRrori and Neraxis grunted, as Jonas explained with a slight smile, \"We had a bet. Some people thought you'd embrace your Caitian side and go without.\" \n\nShe looked around them once more. \"I... I almost did. But I'm not feeling very comfortable with myself.\" She nodded to the door. \"Come on, time's a-wasting.\" \n\nThey walked to Transporter Room 1, finding Hrelle, Kami, Misha, T'Varik and C'Rash. Sasha walked up to Misha, ignoring his mother to touch his nose and go, \"Beep Beep!\" \n\nAs he laughed, Kami smiled at her. \"Hello, hon.\" \n\nSasha continued to ignore her, facing her father. \"Well, are we ready?\" \n\n* \n\nUSS Kanaloa, Deck 6 Aft - Holopool 4: \n\nSix, and then five, individuals beamed onto what appeared to be a large, wide lagoon of irregular shape, perhaps thirty metres or more in length at the widest axle, touched by wooden docks seemingly held together with rough-hewn rope, and areas where people could step down into the water and sit. Beyond this was a dense, tropical frame of foliage, and all beneath a cloudless holographic sky of stark blue punctuated with a small but dazzling white sun. \n\n\"Let me know if it's too bright for any of you,\" instructed an artificial but still soothing male voice from the water, \"And I'll adjust the sun. Who brought the fish?\" \n\n\"That'll be me.\" Hrelle approached the dock. \"So... you want me to just dump them in and-\" \n\nThe bottlenose dolphin swam up to him, its pale blue skin glistening in the fake sunlight, its elongated snout and curved mouth seemingly fixed in an expression many humanoids perceived as amusement. It rose enough out of the water to display a flattened version of a Starfleet combadge with a voder unit, suctioned to its skin rather than fastened to any clothing. \"What, just dump a bucket of replicated fish in my water? Where's the fun in that? Start throwing them out, one by one, so I can go catch!\" \n\nHrelle looked to the others, before facing the dolphin again. \"Are you sure, Doctor, uh, Hwhiee, uh-\" \n\n\"Wheelie will do; you Leggies can never get the pronunciation right on my full name. Now come on, Big Boy, get your ass in gear! All of you, join in if you want! Make me work for them!\" \n\nT'Varik stepped up now. \"Doctor, with respect, participating in such activities would be demeaning to you. For centuries, your ancestors were enslaved by Terrans and forced to perform tricks in entertainment venues, trained and rewarded with proffered fish. To perpetuate this now would be-\" \n\n\"Your liberal indignation is appreciated, Commander,\" Wheelie informed her, \"But unnecessary. I'm well aware of what humans did to Delphines, not to mention our Orca cousins, so I think I'm in a better position than you to judge what might be demeaning to my people. \n\nBesides, there's a method to my madness. Seeing the fish you selected tells me a lot about yourselves. Also, I get a bit of exercise to work off some of the blubber around my tail fin... and I save on my replicator rations on the Kanaloa. Go on, Big Boy! Get throwing, before you start chowing down on them yourself!\" \n\nHrelle chuckled, set the bucket down, reached in and grasped one fish, throwing it far out. \n\nWheelie laughed, spun in the water and took off for it, returning moments later. \"Terran halibut, always a favourite. Okay, what's next? The rest of you, get undressed and hop in! The waters are warm, and you'll want to have fun before Big Boy here joins you and makes the pool warmer! 'Coz he looks like a pisser!\" \n\n\"Cheeky bastard!\" But Hrelle laughed and threw another fish in a different direction this time, the memory of himself as a cub on his old clan's fishing boat throwing back the unwanted fish from the latest catch suddenly coming back to him, as he marvelled at Wheelie's effortless grace in the water. \n\nBehind him, the others began disrobing. In the water, Wheelie returned to Hrelle. \"Hey, Big Boy, what was that last one? It didn't taste replicated, and I didn't recognise the flavour!\" \n\nHrelle began undressing to catch up with the others. \"It was fresh, brought recently from my Motherworld. Caitian Sleekfish.\" \n\n\"I loved it! Very peppery! I changed my mind, you can pee in my pool any time!\" Then the Delphine noticed T'Varik, who hadn't moved like the others. \"Something wrong, Commander? You're not shy, are you?\" \n\n\"Of course not. However, I should inform you that my participation will not be necessary. I have treated myself.\" \n\n\"Oh?\" Wheelie cackled. \"I wish I had a credit for every time someone told me that!\" \n\nNearby, Kami was slipping Misha out of his clothes and diaper. \"It doesn't work that way, T'Varik, as you well know. You have to follow the Doctor's orders.\" \n\nThe Vulcan folded her arms behind her. \"I have no desire to get wet.\" \n\nWheelie drew back in the water, and suddenly propelled himself around in a wide circle, returning to the point where T'Varik was standing - before using his powerful tailfin to hurl a wave of water onto the Vulcan, drenching her thoroughly. \n\n\"Too late,\" Wheelie informed her needlessly, over the laughter of the others. \"Now get in.\" \n\nMaintaining as much dignity as she could under the circumstances, T'Varik began disrobing, revealing a modest black one-piece Academy swimsuit identical to those the cadets wore. \n\nC'Rash drew up, casual in her nudity. \"Nice. You're the only adult in a suit, you know.\" \n\n\"It is not seemly for subordinates to see their superior officers in a state of undress, and... frolicking-\" \n\n\"CANNONBALL!\" a naked Hrelle cried out as he raced along an outcropping and dove into the water, making an almighty splash. \n\nWheelie laughed as the cadets cheered. \"Right, the rest of you, get in, swim, play, relax, unwind! There are even inflatable toys and balls in that basket on the dock!\" \n\nNeraxis was casting off her boots and uniform beside Jonas. \"We need to get this installed on the Surefoot. Hey, Doc, how many sessions will we need?\" \n\n\"Just the one, Cadet,\" the Delphine replied. \"Assuming Big Boy there doesn't do another Cannonball and empty the pool completely.\" \n\nT'Varik's brown furrowed. \"That does not seem likely.\" \n\n\"Are you sure? He packs a bit of weight on him-\" \n\n\"I am referring to only requiring one session. I am familiar with the Counseling process. There is a standard multi-step procedure-\" \n\n\"Steps are for Leggies! What do you care, anyway? You told me you cured yourself.\" \n\n\"Yes, but-\" \n\n\"But nothing. Most of those steps involve Counselors needing to help their patients sift through the self-denial or nescience to get to the truth, and to guide them towards assisting them in their own improvement. Most of that will be reached the moment you enter the water and I start listening to your minds and know the right course to take.\" \n\nKami was careful with her son in her arms, descending into the water until she was waist deep, and pulling him closer to her as Wheelie swam up. \"Doctor, I should warn you that Misha is not yet toilet trained, so-\" \n\n\"So, nothing! Bet his Dad isn't, either! Listen, your little one can't do any wrong as far as I'm concerned! We can handle some baby pee and nappy nuggets in here! Isn't that right, ya little minnow?\" The Delphine rose to nuzzle against an excited and delighted Misha - until Kami drew the baby back. \n\nWheelie regarded the reaction, before swimming away. \n\nThis continued for a while, some of them frolicking, splashing each other, others choosing to exercise more formally by performing laps to either end of the lagoon, or gently gliding Misha along, letting him kick his legs out and smack the water with his stubby hands, laughing happily. \n\nHrelle swam up to T'Varik, who purposefully stayed submerged from the neck down. \"Commander, you need to loosen up a little. Enjoy yourself!\" \n\n\"Vulcans do not engage in frivolity, Sir-\" \n\nA brightly-coloured inflatable ball appeared from nowhere to bounce off the side of her head. \n\nThe Captain and his First Officer looked to the obvious source of the ball: C'Rash and several of the cadets, the black-furred Caitian asking with mock innocence, \"Can we have our ball back, please, Commander, Ma'am?\" ",
        "She stared at them, before taking the ball and throwing it - in the opposite direction. \n\n\"Vulcans are either crap ball players or crap party animals,\" Hrelle noted. \n\n\"Why not both?\" Crash suggested, swimming past them to retrieve the ball. \n\nElsewhere, Kit was studying the colour pattern and texture of another ball, though his attention also moved to the others in the group. \"This is fascinating! I have not intentionally immersed myself in water since our swimming lessons at the Academy! It remains a strange but not unpleasant sensation!\" He drew in towards a silent Rrori. \"You remain troubled, Very Good Friend?\" \n\nThe Caitian seemed to struggle to maintain a dour expression - before finally relaxing his face and posture, settling down in the water. \"Quite the reverse, actually, Kit. There is something about being here, in the water, with Doctor Wheelie and all of you, that is very relaxing. Relaxing and stimulating. But... he hasn't said or done anything. Is it really just being in the water, playing?\" \n\nWheelie swam up to them. \"No. It's part of the Harmonisation.\" \n\n\"Excuse me, Doctor?\" \n\n\"I've been listening to your minds, and helping you and each other repair the trauma you've experienced, while you play.\" \n\nRrori frowned. \"I know I signed the consent form for telepathic activity, but I was expecting something more... obvious.\" \n\n\"Delphine telepathy does not involve intrusion,\" Wheelie informed him. \"It's a collective ability among consenting parties, with the water as a transmitting medium and the fun and exercise as stimulus to entering a conducive state of mind. \n\nIn the past, our abilities used to cause my ancestors no small amount of tragedy - when one or a few of us were accidentally beached or caught in fishing nets, entire pods could end up in identical situations, caught up in the distress of the original p1arties - but we've learned to control it now, maintaining our individualities while still benefiting others.\" \n\nHe looked to Rrori. \"You are all linked, though you cannot read each other's thoughts. You're feeling better, not just because you want to feel better, or because I want you to feel better, but because all of your friends want you to feel better. And you're helping them, too.\" He dipped his head under the water before rising again. \"That's an impressive erection you're sporting now, by the way. For a Leggy, of course. I hope those trunks are sturdy enough.\" \n\nRrori and Kit watched him depart, before Kit peered down in the water in front of Rrori and said, \"I believe he's correct, based on my prior observations.\" \n\nIn another part of the lagoon, Hrelle drew up to Sasha. \"Hello, Runt of the Litter. How are you doing?\" \n\nShe was staring out at the holographic horizon, as if trying to discern where the reality and illusion joined up. \"Super. You?\" \n\n\"Me? Apart from the nightmares, the guilt, the doubts, the worry over Kami and you and the rest, I'm peachy.\" \n\n\"Sorry.\" \n\n\"You don't have to apologise. I know Kami upset you with that outburst.\" \n\n\"Don't blame her. I shouldn't have taken Little Brother out without telling her first.\" She shrugged, a little too casually to be convincing. \"Doesn't matter. Nothing matters.\" \n\nShe started to turn away, but he caught her by the arm, drawing her back and getting her full attention. \"Everything matters, Sasha. Everything. And everyone. You especially.\" \n\nShe looked up at him, letting him see all the emotions she kept locked away, just behind her eyes. \"I know.\" \n\nHe pulled her into a hug, where she suddenly grabbed him back tightly, fiercely, before finally pulling back and swimming away. Then he returned to his wife and son, dipping under the water as he approached, before rising and squirting water from his mouth like a fountain statue at a delighted Misha. \n\nKami chuckled. \"Enjoying yourself?\" \n\nHe smiled at her. \"Yes, actually, despite the reasons for our being here.\" \n\n\"I never pictured my husband as such an accomplished swimmer.\" \n\nHe cupped the warm water in his hands and poured it over Misha, smiling as the infant tried to shake the water from his fur. \"I'm from fisherfolk stock, though the waters of the Archipelago are far too cold for swimming for long, not without risking freezing things off.\" \n\n\"And how's Sasha doing?\" \n\n\"Holding on. But she's not herself.\" \n\n\"She took a life, Esek. And nearly died herself doing so. She won't be the girl you knew before. No one could be the same after that. But she'll pull through. You all will.\" \n\nHe looked to her. \"'We all'?\" \n\nKami smirked. \"Who's the Counselor here?\" \n\nSuddenly Hrelle yelped as something fast and hard prodded his rear, and he turned to see Wheelie lift his head up out of the water and respond, \"Oh, that'll be me.\" \n\nHrelle looked to him. \"I hope that was your nose I felt back there!\" \n\n\"You'll never know, Big Boy,\" the Delphine cackled, twisting and squirting water from his blowhole at the Caitian, making Misha laugh and clap his stubby hands. Then Wheelie called out, \"That's it, Leggies, everyone in, gather round these rocks! I've learned enough!\" \n\nAs the group gathered, settling down in a semi-circle on the holographic rocks shaped intentionally into comfortable seating arrangements, Wheelie drew back, regarding each of them. \"Thank you all for your participation, and cooperation. Your minds opened up as easily as parting waves, letting me listen in-\" \n\n\"You have not,\" T'Varik denied calmly, sitting at the far end beside C'Rash. \n\nWheelie looked to her. \"Pardon?\" \n\n\"You have made no telepathic contact. At least, not with me.\" \n\n\"No?\" \n\n\"No. I would be aware of it. I am Vulcan.\" \n\n\"You are? I never knew!\" \n\nT'Varik ignored the chuckles from some of the others. \"I have mental disciplines, defences. These alert me to the presence of another mind in contact with my own.\" \n\nThe Delphine drew up to her. \"When you were ten, your parents took you to the Federation colony on Alpha III. There, a colleague of your father's who was minding you gave you some mint chocolate chip ice cream, in a dust-brown ceramic bowl with a tarnished, heavily-engraved silver spoon. It was your first ice cream. And it was the most amazing thing you had ever tasted. And since then, you have craved it. But you have always denied yourself such a shameless sensual treat.\" \n\nT'Varik forced herself to control her obvious reaction to the revelation. \"I... fail to understand how you could know that. No one else was aware.\" \n\n\"There are many forms of psionic ability in the Universe, T'Varik, and they don't all follow the same rules.\" He drew closer. \"Of more importance is why you deny yourself such a simple pleasure. Or rather, the emotions it elicits.\" As the Vulcan glanced at the others, he added, \"Everything that's said in this pool stays in this pool. And you've been through too much with this family of yours to be shy now.\" \n\nT'Varik shifted, before drawing herself up into a more formal posture. \"Vulcans must deny themselves the indulgence of emotions, as the unchecked release of-\" \n\n\"I know, I know, your society would collapse, Armageddon would come, the dead rising from their graves, Vulcan sacrifice, dogs and cats living together, yadda yadda. So why not go the whole hog and have everyone submit themselves to the discipline of Kohlinar, to purge all emotions permanently?\" \n\nThe Vulcan frowned. \"Kohlinar is a particularly strenuous discipline, one that few can successfully achieve.\" \n\n\"Maybe. Or maybe... they don't want to let go of their emotions? Sure, keep them under control. But not to the point of denying themselves fully. There's no harm in a little indulgence.\" \n\nHer expression tightened. \"I disagree. And I was proven correct when I used excessive force against an entity who threatened someone I...\" Her voice trailed away. \n\n\"Someone you love?\" he prompted gently. \n\n\"Yes,\" she finally admitted. \"I temporarily lost control. I cannot be trusted to manage these emotions responsibly. Therefore, the logical course of action is to-\" \n\n\"-Is to exercise them more.\" \n\n\"No.\" \n\n\"Yes. When Misha begins to walk, he will stumble, and he will fall, because those muscles he will be exercising will still be new to him. And if - when - he does fall, and bruises himself and cries, will you recommend to him that he gives up continuing to try and walk?\" \n\n\"Of course not. But that is-\" \n\n\"No. Because he will have family around him to help and encourage him. And because though there may be risks involved, the rewards will outweigh the risks. For him, and for you.\" \n\nT'Varik swallowed. \"Vulcans are different-\" \n\n\"I know, I have Counseled over thirty-six of them, young and old, married and single, in Starfleet and out of it. And the problems tend to remain the same. As do the solutions.\" \n\nC'Rash slipped an arm around her. \"Sounds logical to me.\" \n\nT'Varik raised an eyebrow. \"You are hardly a font of wisdom regarding logic.\" But then she looked at the Hrelles. \"You should be aware that, because of my emotional bias, I may not be the optimal Lressha for Misha. You may wish to reconsider allowing me to continue in that role.\" \n\nHrelle and Kami looked to each other, Hrelle responding with, \"Let me get this straight: you want us to consider replacing you as our son's godmother because you love him too much?\" \n\nT'Varik shifted. \"I of course would not put it in such simplistic terms-\" \n\n\"Kiss our furry ass!\" the couple said in unison, laughing. \n\n\"I... see.\" \n\nWheelie cackled and looked to C'Rash. \"She's a riot, isn't she? No wonder she gets you purring.\" He drew closer to the Caitian, his beady black eyes fixed on her. \"Captain Myrick would be proud of you.\" \n\nC'Rash started at the mention of the name of her former, first commanding officer. \"He- How-\" \n\n\"I know how difficult some of your actions during this crisis were for you. But they were the right ones; everyone here thinks so, and so do I. You handled yourself with distinction. Captain Hrelle is immensely honoured to have you as part of his crew. He doesn't think you'll be needing the Naughty Step again.\" \n\nShe grunted. \"We'll see about that.\" \n\n\"And in return, you've had a glimpse of what he has gone through, what he has felt and done. You realise that the circumstances weren't as plain and obvious as you first thought. You understand each other better.\" Then he leaned in and added, \"Keep at him about that weight, though. I'm amazed any of the fish in the bucket got here untouched.\" \n\nHrelle frowned as Kami laughed, Misha joining in without knowing why. \n\nThen Wheelie sided over to Kit and Rrori, looking to the Caitian first, his voice sympathetic. \"You are not an animal. Animals do not think twice about killing. I have Counseled many who have had to employ lethal force against opponents. They have all experienced guilt, trauma, fear, despite the circumstances behind the actions they took. This is common, and indicative of most sentient beings. Regardless of what triggered you, the fact that it troubles you so is more illustrative of your nature than the actions you took.\" \n\nWheelie drew closer. \"And Izzy is right. You're much more appealing when you're not putting on an act. And I think that if you just be yourself, vulnerabilities and all, your next encounter will be more satisfying. For both of you.\" \n\nRrori shifted, glancing around the people watching him. \"Um, yes, okay, thanks.\" \n\nThe Delphine cackled again. \"Don't stand up for a while, you might poke somebody's eye out with that thing.\" Then he turned to Kit. \"You have a very special mind, my young friend. Uniquely structured. It was a pleasure to listen to your thoughts.\" \n\nKit flushed. \"Thank you, Most Respected Guest Counselor.\" \n\nThen Wheelie's voice grew more serious. \"You should have been telling people about the intensity of your own nightmares, however. The way it's left you feeling is alarming.\" \n\n\"Kit,\" Kami asked, looking concerned. \"What have you been keeping to yourself?\" \n\nThe Qarari looked to her. \"My friends have undergone far greater trauma than I experienced.\" \n\nWheelie nudged him. \"It's not a contest, Cadet! You're entitled to your pain! Especially as it's triggered by more than the Vlathi assault.\" \n\nSasha, sitting near her family, looked to him. \"What does he mean, Kit?\" \n\nKit glanced down at the undulating water, his mottled green skin flushing. \"I... have been managing a journal of my experiences on my homeworld, when my government treated me as an Aberrant for wanting to change my gender.\" \n\n\"That's therapeutic,\" Kami noted, smiling. \"Good.\" \n\nHe nodded. \"And I have been secretly transmitting them back to Qarar for publishing in a political datapage.\" \n\nHrelle had been smiling, too, but now it dropped. \"Not so good.\" \n\nSasha looked to him. \"Why? What's wrong with that?\" \n\n\"Starfleet Regulations expressly forbid engaging in political activity,\" T'Varik informed her. \"Particularly with political activity on a non-aligned world. It is a court-martial offence.\" \n\nKit turned to the First Officer. \"I do not name myself, Most Respected Commander, nor make any connection to Starfleet. I use private communication channels, and do not advocate any political change. I simply let my story speak for itself. Many have responded favourably to Heywood's story.\" \n\n\"Heywood?\" Jonas asked, bemused. \n\nKit nodded. \"My pseudonym: Heywood Jablome.\" As Hrelle, C'Rash and some of the cadets laughed, Kit turned to T'Varik to explain, \"It is a gag name, Most Respected Commander, a play on the phrase 'Hey, Would You-\" \n\n\"I get it, Cadet,\" the Vulcan informed him. \"Very droll. This remains a potentially serious offence, however.\" \n\nWheelie looked to her. \"Fortunately, the Confidentiality Agreement you signed when you agreed to this Session saves you from the burden of having to deal with it. Doesn't it?\" \n\nT'Varik straightened up, saying nothing further and ignoring C'Rash nudging her teasingly. \n\nWheelie chuckled, but then looked back at Kit. \"As for you, 'Heywood': stop acting like you can't confide in your friends! And stop self-medicating, too, while you're at it; you're not a doctor.\" \n\n\"What?\" Hrelle barked, \"Kit! What have you been doing?\" \n\nKit flushed a dark green. \"It is nothing, Most Respected Captain, a minor issue-\" \n\n\"If it is minor, then why didn't you confide in your friends?\" \n\nKit started to reply, but then looked away. \n\n\"You have been in my medical kit,\" Eydiir declared bluntly. \"I am disappointed.\" \n\n\"Forgive me, Very Good Friend Eydiir, Most Respected Senior Officers, Very Good Friends. It will not happen again.\" \n\n\"It better not!\" Neraxis pointed a finger at him. \"Because if it does, I'll stick your head up your bony green ass, you hear me?\" \n\n\"Loud and Clear, Very Good Friend Neraxis.\" \n\nWheelie chuckled as he moved to the Bolian and Jonas, staring up at her. \"I got a good feeling about you. You should be feeling the same way about yourself. When things got to High Tide, you kept your cool and did your job. You didn't like much of what you had to do, but you did it. And as a result, people's lives were saved, your ship was saved.\" \n\nHe leaned in. \"It wasn't your fault Jonas was shot. It wasn't your fault others were hurt. Worse would have happened without your help. I've eased your nightmares. You might still get them from time to time, but you won't be overwhelmed by them. You're going to make an awesome Chief of Security someday. And maybe even Captain. Your own Captain thinks so.\" \n\nNeraxis flushed a dark purple as she looked to Hrelle, who nodded and gave her a thumbs up. Beaming, she looked back at Wheelie. \"Thanks!\" \n\n\"No problem; we blue-skinned types have to stick together.\" Then he looked to Jonas. \"You're a rather versatile individual, aren't you?\" \n\nJonas blinked. \"Pardon?\" \n\n\"You're many things to many people, and yourself: man, son, friend, lover, cadet, Strategic Engineering Officer, crewman.\" He moved up, until he was almost on Jonas' lap. \"But you can't be everything. You know what you're not? \n\nYou're not a killer.\" \n\nHe blinked again, his expression tightening. \"No- You don't- You don't-\" \n\n\"I don't understand? I've listened to your thoughts. And I've listened to the thoughts of actual killers. And let me tell you, there's a Galaxy-wide difference between the two. Yes, you've killed. But that does not make you a killer. You are a decent, compassionate, loving individual. You only did what you had to do to save others. You have nothing to fear.\" \n\nJonas seemed to take that in, leaning against Neraxis and nodding. \"Thank you.\" \n\n\"My pleasure!\" He splashed over to Sasha and Eydiir next, nudging the Capellan. \"You don't need much help from me. But can I tell you something about yourself anyway? Something you might not know? Can I give you that, at least?\" \n\nEydiir nodded. \"Of course.\" \n\n\"You're an idiot.\" \n\nShe started to reply, frowning at Sasha smirking. \"I... wasn't expecting that.\" \n\n\"I'm sure you weren't. You're brave and strong and compassionate and generous and a perfect friend. But you're still an idiot. Do you really think Falok would reject you if he mindmelded and saw the memories of you killing? Are you really afraid that he will only see that, and forget about all the other wonderful things about you? It won't happen. If he's as smart as every other Vulcan I've known, he'll see your darkest part and still think the sun shines out of your ass. Proverbial ass, that is.\"  \n\nEydiir grunted, but said nothing. \n\n\"You Capellans.\" Wheelie joked. \"You're all so emotional.\" Then he moved onto Sasha. \"Can I have a hug, please?\" \n\nSasha started, not expecting the request, before finally nodding and leaning in, wrapping her arms around the Delphine head, her hands moving over its smooth wet skin. \n\nWhen he drew back, he slapped his fins on the surface of the water. \"I've wanted to do that ever since I listened in on your mind! Now I've got something to tell my calf when I see him tonight!\" \n\nShe frowned, feeling a little embarrassed without knowing why. \"What are you talking about?\" \n\nHe looked at her again. \"By the Dawn... do you know how amazing you are? The things you've done, the lives you've saved? The bravery you've shown, the acts you've achieved? And you're only just starting out! What will you do in the next ten, twenty, fifty years? You're a hero. You get the job done.\" \n\nShe was blushing now. \"Shut up.\" \n\n\"No. I won't. Everyone here thinks so. You've earned it. You've earned so much.\" He drew up to her again, his voice dropping to a more serious, more intimate voice. \"You've earned the right to be scared. You've earned the right to have doubts. You've earned the right to be angry. All of these are perfectly normal responses to being challenged, the way you've been challenged. They're just reminders that you are alive, and that you are stronger than whatever tried to hurt you. \n\nAnd when the High Tide comes again and the next challenge washes over you, you'll put aside your fears, your doubts, your anger, you'll roll up your proverbial sleeves and you'll get the job done again.\" \n\nSasha was crying now, though she quickly wiped her face and warned him, \"You'd better be right.\" \n\nHe dipped his elongated snout under the surface of the water and splashed her. \"Of course I'm right! I'm as smart as I'm sexy!\" \n\nThen he swam over to Hrelle, Kami and Misha, bypassing the latter two to focus on the Captain. \"Well, Big Boy, I'm not sure why you're here. You have one of the most resilient minds I've ever listened to. And you've taken your darkest half, put a leash and collar on it and you make it work for you, and still manage to act like you want to be the Universe's Dad. You really want to make up for growing up with a shitty father. Don't you?\" ",
        "Hrelle's smirk dropped, but then he shrugged. \"I just needed a place to pee.\" \n\n\"Still,\" Wheelie continued, unfazed. \"There's a price to that. The guilt you felt when crew were hurt... when your family was hurt... that pushed you close to the edge. Very close. \n\nOn the other hand, close only counts in horseshoe crabs and hand grenades. You know you have people to turn to when you need them. And once you get that business with your heart sorted out, you'll be fine.\" \n\nKami's smile as she listened to Wheelie's assessment dropped. \"His heart? What about his heart?\" \n\nHrelle gulped, glancing at the Delphine. \"Thanks. You couldn't have kept quiet about that?\" \n\n\"No one is above learning a little lesson, Big Boy.\" \n\nKami reached out and smacked Hrelle's furry shoulder. \"Hey! I'm talking to you! What about your heart?\" \n\nHe looked to her, slipping on his most winning smile. \"It's just a bit of arrhythmia, darling, that's all! I take a little metrazine for it on occasion! It's a minor problem!\" \n\n\"If it is minor, Most Respected Captain,\" Kit pointed out helpfully. \"Then why didn't you confide in your wife?\" \n\n\"You stay out of this, Cadet!\" Hrelle returned to Kami. \"I didn't want to worry you at the time. You were in late term with Misha, we had a lot going on-\" \n\n\"Wait - you've been keeping this from me since before our son was born?\" \n\n\"Quite while you're behind, Dad,\" Sasha urged him. \n\nHrelle started to replay again, but then held up his hands in surrender. \"My bad. I'm sorry.\" \n\nKami grunted, making Misha face her. \"Your father never learns, does he? Thinking he can hide things like that. Truth always finds out.\" \n\n\"Yes,\" Wheelie agreed. \"Deception is such a common problem we face in our line of work, isn't it Counselor?\" \n\n\"Definitely.\" \n\n\"And the most insidious deception is self-deception. It's like an extra set of shields we have to get lowered. It makes our work that much more difficult. And we can see it in everyone.\" \n\nKami nodded - but then noticed the direction of his conversation. She smirked. \"Ah. Thank you, Doctor, but I can assure you that I'm fine. I've worked out my problems.\" \n\n\"I believe I held similar beliefs,\" T'Varik commented. \n\nKami fixed a smile at the Vulcan. \"Yes, but you're not a qualified Counselor. I am.\" \n\n\"That doesn't mean you can diagnose yourself,\" Wheelie said. \n\nHer expression and voice took on a deliberately measured tone. \"Doctor, I appreciate your concern, but I think you'll find I've not been exhibiting any signs of Post Traumatic Stress.\" \n\n\"That's not what your family and friends' memories tell me. Or your own, for that matter.\" \n\n\"Kami,\" Hrelle said gently. \"You've had Misha sleep between us in bed instead of his crib. You've hardly put him down. You lie to me, you lie to others. And you stormed into Sickbay and threatened Sasha and Doctor Masterson.\" \n\n\"No, I didn't,\" she declared, a sharpness rising. \n\n\"Yes, Kami, you did,\" Sasha said, looking to her gravely. \"You... You frightened me.\" \n\nKami's glare shot towards her, all pretence at civility gone. \"I can't see how you can remember anything about what happened there, you were too busy ready to hump the Doctor's leg like a little bitch in Season!\" \n\n\"Kami!\" Hrelle snapped. \"That's uncalled for!\" \n\nMisha began mewling. \n\nKami rocked him, a little too forcefully to be effective as she glared at her husband. \"You're always so trusting, aren't you, Esek? Always willing to believe other people, to accept them at face value? No wonder your family was almost killed. Were you this trusting when you got your first wife killed?\" \n\nHrelle started as if struck. \n\n\"Aunt Kami!\" C'Rash snapped. \"Stop it!\" \n\n\"Stay out of this!\" Kami growled, as Misha's crying increased. She clutched her child tighter. \"All of you, mind your own damn business! You're all upsetting my cub! We're leaving-\" She rose. \n\nHrelle rose too, putting a hand on her arm. \"No.\" \n\nShe bared her claws on her free hand and swiped him across the muzzle. \n\nMisha wailed now. \n\nAs Hrelle held his snout, the blood seeping from between his fingers, Kami pulled Misha tighter to her, glancing angrily and fearfully at the rest of them, as if they might approach her too, even as she tried to soothe the infant. \"It's okay, baby, please don't- don't-\" \n\n\"He doesn't blame you,\" Wheelie told her gently. \n\nMisha continued crying, but Kami's attention fixed on the Delphine. \"What? I don't give a damn if Esek blames me-\" \n\n\"I'm talking about Misha. He doesn't blame you for being hurt. He doesn't blame you, and he certainly doesn't hate you.\" \n\nKami looked stunned, aghast, her eyes wide, her breath quickening. \"I don't- I don't think that- How can you believe I'd think something like that?\" \n\n\"Because you do. Despite all the evidence to the contrary, you think you failed him. And now, every time you look into his eyes, you can't stop wondering if he's looking up at you and seeing someone he hates, for letting him be hurt.\" \n\nHe drew closer, ignoring her raised claws. \"He doesn't. I promise you. Your son looks at you with love. Boundless, unwavering love. It's like a single beautiful note that races across the ocean. And if he's felt anything negative, it's concern, concern over the guilt and anxiety that you've kept bottled up all this time. Hiding it from Esek, from your family, your friends. Yourself.\" \n\nHer gaze narrowed, her hand lowered, her arms still around the infant, her eyes welling up with tears. She swallowed. \"They crushed him. They crushed him like he was a piece of garbage.\" The tears became sobs as she wailed loudly, \"WHY WOULD THEY DO THAT TO HIM? HE'S A BEAUTIFUL LITTLE CUB WHO NEVER HURT ANYONE! AND THEY CRUSHED HIM! THEY ALMOST KILLED HIM! AND I COULDN'T STOP THEM! I COULDN'T-\" She gasped, breaking down fully. \"I couldn't... I'm sorry, Sweetheart... I'm so sorry...\" \n\nHrelle pulled them both close to him, holding them, murmuring to them. \n\nWhen the time was right, Wheelie spoke again. \"No. You couldn't. You did everything you could. Everyone did everything they could. But he was still hurt. You heard him scream, but you were too injured to respond. That is not your fault. \n\nBut you know what? I've listened to his mind. That little cub is smarter than any of you. He knows something bad happened, but it's over, the people he loves protected him, and now he's ready to move on. Oh, he'll probably remember the sound and scent of those Vlathi for the rest of his life, even on only an instinctive level. But he's not going to waste any time dwelling on it. And neither should any of you. He's alive. You're all alive. Celebrate.\" He made a sound. \"See? He's calming down already.\" \n\nKami pulled back, trying to hold onto Misha and Hrelle and still wipe her eyes, until her husband did it for her. \"I'm sorry, my wonderful little cub. I'm sorry to all of you-\" Then she saw the scratches she gave Hrelle. \"Oh, shit, Esek, what did I do to you?\" \n\n\"It's okay,\" he assured her gently. \"I've had worse.\" But he winced as he reached up and touched them. \"Don't worry, I'll get Sasha's new boyfriend to fix me up.\" \n\nSasha had been crying at the emotional exchange she witnessed, but now she quickly wiped her own face and said, \"Stroke off, Dad! Son of a bitch!\" \n\n\"Sasha's sworn at her Papa,\" Neraxis quipped. \"Things can't be all bad for us.\" \n\n\"No, they can't be,\" Wheelie agreed. \"Now that the catharsis is over, I want all of you to get some laps in around the pool, play, make out, have some snacks, do whatever, while I work some final harmonisation with all of you. Counselor, do you think you can trust someone else to mind the Warrior Prince while you and I go for a swim at the far end?\" \n\nKami considered it, before looking at Sasha. \"Would you- would you please-\" \n\nSasha smiled. \"You have to ask?\" She drew up and took Misha off his mother, holding the naked cub up out of the water. \"Hey there, Baby Brother!\" \n\nHe peed on her chest. \n\n\"Hey!\" \n\n\"What's wrong,\" Hrelle asked, laughing. \"Afraid of getting wet?\" \n\nShe dipped the giggling infant down until he was waist-deep in the water again. \"You can still stroke off, Dad.\" \n\nWheelie cackled, slapping the surface of the water with his fin. \"Take hold of my dorsal fin, Kami.\" \n\nKami did so, squealing as he took off for the far edge of the lagoon, making fast wide circles. \n\nHrelle watched, smiling. Then his smile dropped. \"Mmm...\" \n\nSasha was holding onto Misha as he kicked out in imitation of those swimming around him. \"Jealous, Dad?\" \n\n\"Yes,\" he admitted. \"I wanted to go swimming with him, too.\" \n\n* \n\nSome time passed, and the holographic sky had darkened to a twilight framed with salmon-pink and dotted with twinkling stars, before they slowly, and for the most part reluctantly emerging from the lagoon, as towels appeared to help them dry off before they dressed again. \n\nThey were quiet, until Jonas asked. \"So... is that it? We're just... cured?\" \n\n\"No,\" Kami admitted, smiling at the sight of Hrelle holding an exhausted, snoring Misha in his arms. \"Delphine Harmonic Counseling isn't a panacea, or it'd be done everywhere. I'll be conducting additional sessions for all of you. All of us, that is. And I'll be expecting you to confront me when I'm in the wrong.\" \n\n\"It'll be a pleasure, Aunt Kami,\" C'Rash promised, prompting sounds of enthusiastic agreement from several others. \n\nKami looked around them, amused. \"Is it really going to be that much fun to call me out?\" \n\n\"There is a need among immature individuals to find fault in authority figures,\" T'Varik noted. \"It has often been attempted on myself. Naturally, such attempts have consistently failed.\" \n\n\"Naturally,\" Hrelle quipped, looking to his wife. \"But we might have to put gloves on you, to keep those claws in.\" \n\nKami looked to her husband again, guilt returning as she noted the scars she gave him. \"Seven Hells, Esek, I can't apologise enough for that. How can I make it up to you?\" \n\nHe had been gently swaddling Misha in one of the plush towels, careful not to wake him up, as he seemed to consider the question, before finally responding with, \" Well... how about we let T'Varik babysit the cub tonight, and we can go back to our quarters and you can give me Fluttertail?\" \n\nC'Rash had been drinking from a water bottle, but now did a spit take and stared at him with astonishment. \"Uncle Esek, you dirty bastard!\" \n\nRrori's jaw had dropped, and Sasha's face had turned scarlet. \"Oy, Dad, there's a baby present!\" \n\n\"Fluttertail?\" Neraxis asked, her eyes lit up with curiosity. \"What is it?\" \n\nRrori had begun to respond, but Sasha raised a warning finger at him. \"You say anything, and I'll tell your Matriarch on you! Can we go now?\" \n\nHrelle chuckled, looking back at the lagoon and the Delphine still there, watching them. \"Thank you, Doctor. For everything.\" \n\nAs the others chimed in, Wheelie slapped the water with his fin. \"You're welcome, Big Boy! You're all welcome! SO LONG, AND THANKS FOR ALL THE FISH! \n\n* \n\nBack on the Surefoot, the group looked to each other. \n\nThen Hrelle announced, \"My request about Misha's godmother taking him for the night was genuine, by the way.\" \n\n\"You're not getting Fluttertail from me,\" Kami promised him. \"I'll do anything else, but not that.\" \n\n\"I will accept my godson for the evening regardless of your sexual agenda,\" T'Varik assured them, taking the swaddled, sleeping bundle from as she looked to C'Rash. \"I will also allow you to stay the night and assist me in his care. Do not expect anything more.\" \n\nThe black-furred Caitian nodded and smiled, not looking too convinced. \"Of course. It'll all be innocent: just you, me, Misha... and some mint chocolate chip ice cream.\" \n\n\"Regardless of my change of mind about other matters, I will continue to refuse ice cream.\" \n\n\"Fine, it'll just be me and my nephew.\" \n\nAs they walked away, T'Varik declared, \"I will not allow my godson to consume ice cream this late in the evening.\" \n\n\"Then I guess you'd better help me eat it. For his sake.\" \n\nThey were almost out of earshot, before the Vulcan conceded, \"That would be logical...\" \n\nHrelle looked to the cadets. \"Well, it'll be good to get back into our routines again tomorrow. If we're done here-\" \n\n\"No.\" Sasha breathed in, before moving up and embracing Kami. The woman embraced back, her tail swishing with emotion. Then she stepped back again, shooing the older figures away. \"Go, and keep your sordid sex lives to yourselves.\" \n\n\"No promises.\" Hrelle grinned, slipping an arm around his wife's and guiding her away. \"Nighty night!\" \n\nAlpha Squad looked to each other, Rrori asking, \"And what about us?\" \n\n\"Shall we get some drinks?\" Jonas suggested. \n\n\"Sure. By ourselves?\" \n\nAfter a moment, Sasha smiled to herself, and then touched her combadge. \"Ensign Hrelle to the Bridge.\" \n\nAfter a moment, Lt Neheru responded. \"Ensign, we have received confirmation of the medical clearance for yourself and the others. Alpha Squad has been scheduled to return to work at 0800 Hours.\" \n\n\"Thank you, Sir. Sir, it is my duty to inform you that Alpha Squad, and every other cadet, is commandeering a section of the ship to hold an impromptu celebration in the next couple of minutes.\" She smiled again as she looked to her friends. \"There will be food and alcohol consumed, music played and a definite possibility of shenanigans, but we will of course clean up after ourselves.\" \n\n\"I see. And which part of the ship are you taking over?\" \n\nShe paused, but only for a moment. \"The Arboretum.\" She enjoyed the look from her friends at her choice. She rather surprised herself with it, too. \n\n\"And is there a reason for this celebration?\" \n\nSasha's smile became a grin. \"We're alive.\" \n\nThere was a pause. And then Neheru replied, \"Good reason.\" \n\n* \n\nDeck 2 Mid - Sickbay Suite: \n\nKami heard the guitar music and the voice as the doors parted; Misha's ears pricked up, and he practically fought to get out of his mother's arms and crawl to the source of the music when she wasn't quick enough for him. \n\n\"Cowboys ain't easy to love and they're harder to hold / They'd rather give you a song then diamonds or gold / Lonestar belt buckles and old faded Levis and each night begins a new day / If you don't understand him and he don't die young / He'll probably just ride away...\" \n\nMasterson was leaning against one of the biobeds, guitar hanging around his neck as he strummed to an enchanted-looking Nurse Scarlo. But when he saw the new arrivals, he grinned and nodded to them, raising his voice to continue. \"Mamas, don't let your babies grow up to be cowboys / Don't let 'em pick guitars or drive them old trucks / Let 'em be doctors and lawyers and such...\" \n\nWith Misha struggling further, Kami readjusted her hold on him, smiled and declared, \"And what if he's a doctor who's also a cowboy and picks guitar?\" \n\nMasterson stopped playing. \"Then none of the ladies in earshot will stand a chance. What can I do for you and my Number One Fan?\" \n\n\"I'm back on duty this morning, but I could do with a little painkiller. I pulled some rarely-used muscles last night.\" She shook her head. \"Damn Fluttertail.\" \n\n\"Fluttertail? What's that?\" \n\nShe felt herself blush under her fur, and reminded herself that she hardly knew the man. \"A Caitian thing. So, can you fix me up with something so I can sit still all day and not look like I've got worms?\" \n\nHe grinned and called out, \"Miss Scarlo, ready 20ccs of bicaridine for the Counselor.\" Then he looked at Kami. \"I'm scheduling everyone for physicals in the coming days - including this little critter here. It's standard procedure, I can assure you-\" \n\nKami smiled as Scarlo injected her. \"Thanks, Anne. And don't worry, Doctor, I understand. This isn't my first radio.\" \n\n\"Call me Doc. And it's 'rodeo', not 'radio'. Anything else I can do for either of you?\" \n\nShe breathed out. \"How about another song to settle my little critter before his morning nap?\" \n\n\"Be glad to. Any requests?\" \n\n\"Do you know 'I'm Sorry I Was Such a Bitch To You The Other Day'?\" \n\nMasterson seemed to consider the question, before replying, \"You hum it, I'll play it...\" \n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE..."
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "star trek fan fiction",
        "star trek fanfic",
        "caitian",
        "starfleet",
        "alien",
        "federation"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-25-cross-porpoises"
}