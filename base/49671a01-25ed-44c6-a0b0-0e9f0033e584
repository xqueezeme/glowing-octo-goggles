{
    "title": "Maintenance Manual for Male Private Parts",
    "pages": [
        "<center><img src=\"/images/illustratedstories/2004/2004_01/shale_maint01.gif\" width=\"404\" height=\"350\">\n\t\nA Nuts and Bolts Guide \nto the Routine Care of the \nPenis \n& \nScrotum\n\n\nPenis</center>\n\nSpecs and Dimensions\n\nThe penis is a tubular organ of variable size and firmness with a dual purpose of passing urine or, during sexual intercourse, penetrating a vagina or other opening.\n\n<img src=\"/images/illustratedstories/2004/2004_01/shale_maint02.gif\" width=\"208\" height=\"302\" align=left>When soft, the adult penis hangs down and most are about 3 to 4 inches long.   \n\nWhen hard (erect) the penis points out or at an upward angle and increases in size to about 5 to 7 inches long.  The size of a soft penis does not indicate the size of a hard one, since the smaller one usually increases proportionally more than the larger one.  In old age, the penis usually decreases in size.\n\nThe nerve and hydraulic system that causes erections, remains on automatic during sleep and a normal healthy penis becomes erect about every 90 minutes.  \n\n\n\n\n\n\nModel Variations\n\nThe standard penis is designed with a loose retractable skin covering the head.  \n\n<img src=\"/images/illustratedstories/2004/2004_01/shale_maint03.gif\" width=\"196\" height=\"200\">\n\nSome models have been customized by Circumcision, or cutting away this foreskin to expose the head.  Both the standard and circumcised models are equally suited to their sexual function.\n\n\nTroubleshooting\n\nPriapism - when the hydraulics in the penis fail to drain, it will remain erect.  This malfunction requires the service of a medical doctor in less than 4 hours to avoid serious damage to the penis.\n\nPhimosis - if the foreskin will not retract over the head of the penis, it can cause hygiene problems and needs service by a medical doctor.\n\nParaphimosis - if the foreskin slides behind the head but will not return to its normal position it can cut off circulation to the head and needs to be repaired by a medical doctor.\n\nLeaks, No Flow, Surface Defects - the penis should be taken in for a checkup if there are any sores, blisters or rashes on or around it, and if it is difficult, irritating or painful to urinate, or if there is a discharge leaking from it.\n\n\nPreventive Maintenance\n\nWhile the original design of the penis with foreskin has the advantage of protecting the sensitive head, it does require additional cleaning procedures.\n\nAn oily smelly substance called Smegma tends to accumulate under the foreskin.  This needs periodic cleaning by sliding the foreskin back while bathing and washing away the accumulated smegma before it builds up and becomes irritating. \n\n<center><img src=\"/images/illustratedstories/2004/2004_01/shale_maint04.gif\" width=\"415\" height=\"281\"></center>\n\t\n\n<center>Scrotum</center>\n\nSpecs and Dimensions\n\nThe scrotum is a sac of loose skin that hangs under the penis and houses the two Testicles outside of the body.  It is a temperature-regulating device that keeps the testicles slightly cooler than the normal body temperature by the evaporation of sweat and by becoming tighter or looser in response to temperature, which moves the testicles closer to or farther away from the body.\n\nThe scrotum is divided into two compartments, each with a testicle, the egg shaped organ that produces Sperm.  Since the testicles are sensitive to pressure and are in a constricted area between the legs, the left one usually hangs lower than the right one.  \n\n\nTroubleshooting\n\nCryptorchidism - both testicles should be in the scrotal sac.  If they cannot be located there after a hot bath, they may not have descended from inside the abdomen.  This malfunction requires service by a medical doctor.   \n\nHernia - there is often a weak spot in the abdomen where the testes descend into the scrotum.  A hernia is a malfunction when a part of the intestine pushes thru this weak spot and hangs in the scrotal sac.  This requires service by a medical doctor.\n\nTorsion is a malfunction when the testicle rotates and the spermatic cord and blood vessels get twisted, cutting off circulation.  This painful condition requires emergency services of a doctor to prevent gangrene.\n\nTesticular Cancer is one of the most common cancers in men between the ages of 15 and 35.  Unlike other problems with the testes, there may be no pain or symptoms with cancer.  \n\n\nPreventive Maintenance\n\nMonthly Testicular Self-Examinations (TSE) are the best way to detect cancer early, so that it can have a better chance of treatment.\n\nAfter a warm bath, when the scrotal skin is loose, roll each testicle between the thumb and forefinger of both hands.  The testicles should be firm and smooth, with no hard lumps.  \n\nIf any lumps are felt, take the testicle to a medical doctor for further tests to see if it is cancer or not.  If detected early, testicular cancer has a high cure rate and usually does not affect fertility.  \n\n<center><img src=\"/images/illustratedstories/2004/2004_01/shale_maint05.gif\" width=\"304\" height=\"416\"></center>\n\n\nProtective Accessories\n\nTo protect the penis from sexually transmitted diseases, Latex Condoms are recommended for those having sexual encounters with multiple partners or when the partner's safe sexual history or drug use history is not known.\n\n<center><img src=\"/images/illustratedstories/2004/2004_01/shale_maint06.gif\" width=\"332\" height=\"267\"></center>"
    ],
    "authorname": "Shale",
    "tags": [
        "penis scrotum",
        "uncircumcised",
        "hernia",
        "foreskin back",
        "testicular cancer",
        "nuts",
        "torsion",
        "scrotal sac",
        "testicular exam",
        "use condom"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/maintenance-manual-for-male-private-parts"
}