{
    "title": "Surefoot 08: The Walking Wounded",
    "pages": [
        "PERSONAL LOG, CADET JONAS OSTROW, STARDATE 35398.74:\n\nIf you're reading this, that means you're examining my logs, trying to find some clues as to why I did what I did. I don't know exactly how I did it, I've thought about it, but haven't decided what would be the most painless way. I don't want pain. If I wanted pain, I'd have stayed alive.\n\nBut it's obvious I *did* do it, somehow, or you wouldn't be here.\n\nYou want answers: Why did I do it? Why didn't I come to you sooner? What could you have done to stop me?\n\nWhy did I do it? Because I'm tired. I'm tired of being afraid and angry and recognising what a worthless piece of shit I am. How I don't deserve to be in this Squad, on this ship, in Starfleet. I don't deserve to be home, either, having to face Mom or the people in her company. I don't deserve to be anywhere.\n\nI go through the motions every day now. I pretend to sleep soundly. I pretend to enjoy my meals, I pretend to laugh at my friends' jokes and pretend to love going to work and pretend to Counselor Shall that everything is getting better for me.\n\nBut obviously it's not, or you wouldn't be reading this. I know that the memories that Lt. Aiken planted in me were false... but the feelings behind them, the feelings that made them so strong, were true. You may want to believe I'm the victim of a telepathic assault. But I'm really a victim of a bad life. I hated myself before that. Maybe Aiken did me a favour by making me finally face the truth.\n\nWhy didn't I come to you sooner? Because I can't. I'm moving from day to day with no purpose, like a ship adrift in some cosmic current. I'm not in control anymore. The voice in the back of my head is true. It tore me apart, piece by piece, taking away my power, my voice, leaving me an observer in my own body. I choke on every lie I tell everyone around me, on every false smile I give them. I'm permanently numb - but somehow I still feel pain, a constant ache I can't escape.\n\nWhat could you have done to stop me?\n\nNothing. I need you all to understand that. All of you: Captain Hrelle, Counselor Shall, Commander T'Varik, Kit, Sasha, Eydiir, Rrori, Giles... Neraxis... This isn't your fault. You are all amazing, wonderful people, more family than friends. This is the best place to be, the best I could ever hope for. It can't- can't get any better than this.\n\nThat's... That's how I know that what I did, whatever I did, was for the best. The Universe Had Other Plans for me.\n\nI don't want to die. I just want the voice to shut up and leave me alone and I want the pain and the numbness to stop. And I don't want any of you feeling guilty about this.\n\nBecause I'm not worth it...\n\n*\n\nUSS Surefoot, Deck 1, Captain/Counselor's Quarters:\n\nCaptain Hrelle stood naked in front of his mirror, twisting to look at his rear end. \"So... shall I do it? Shall I regrow the tail?\"\n\nKami was slipping into her uniform, feeding her own tail through the slit in the lower back. \"Told you before, I love you, tail or not.\"\n\n\"That's not an answer.\"\n\n\"Get dressed, you have that briefing, and you can't go looking like that.\"\n\n\"I would if you dared me.\" As he began dressing, he looked over at his new wife, smiling at his good fortune - and then frowning. \"What's wrong?\"\n\nShe stood up, flicking back her mane and tying the fine bronze hairs together. \"It's Jonas. I'm worried about him.\"\n\nHe slipped into his boots. \"I thought he'd been making progress?\"\n\n\"Oh, I get all the right answers from him. Answers that aren't in his eyes or his body language or scent. He refused a mind meld with T'Varik, but I suppose no one can blame him if he has a phobia of telepathy. He remains profoundly depressed, but he's hiding it from me. Maybe himself, too.\"\n\nNow he approached. \"Is it serious? Does he need to be taken off duty temporarily?\"\n\n\"I don't know yet. I'll have a read through his personal logs later, see if I can get any clues as to his state of mind.\"\n\n\"You're going to do that without his permission?\"\n\nShe looked at him challengingly. \"It's not something I do lightly, Esek. I want to respect the privacy of my patients. But if I think it's serious enough-\"\n\nHe held up his furry hands, smiling slightly. \"Hey, I trust your judgement. Just let me know if I can do anything.\"\n\n\"Thanks, but I've got some people working on it now.\" She drew in and brushed against the side of his muzzle, nipping his neck slightly. \"Oh, and for the record: grow the tail back. It'll give me something else to play with down there besides what you usually offer me.\"\n\n*\n\nDeck 1, Briefing Room:\n\nCommander T'Varik rose from the table, indicating the display screen behind the still-seated Captain Hrelle as she addressed the senior officers and cadet squad leaders. \"As you will note, we have halted our progress to Starbase 154 on the detection of this abandoned vessel, a Vulcan freighter registered as the Saaruuv, reported stolen from Karakol 82 days previously. It is suspected to have been used by Orion smugglers to escape law enforcement, and we believed abandoned here for a faster vessel.\n\nThere are no lifesigns onboard, and no threats detected, and we have remotely reactivated life support and main power systems. The cadet squads have been assigned areas onboard the Saaruuv to run standard security sweeps, making recordings for Starfleet Intelligence files. Meanwhile, the Engineering Specialists in the squads will assist Chief Grev and his team in performing diagnostics on the engineering and propulsion systems, to determine if the vessel can be brought to Starbase 154 on its own power, or if it will require towing by the Surefoot. Captain? Anything more to add?\"\n\nHrelle straightened up. \"I know there's a desire to impress us with your skills and initiative. Well in this case, keep it in your pants. Starfleet Intelligence requires properly gathered evidence, not amateur detectives trying to solve the mystery of the freighter thieves. And those cadets testing the systems should do just that, don't power up anything or try to get the ship running on your own. You're there to do exactly what's expected of you, no more, no less. Believe me, we're already impressed with you, or you wouldn't be here.\"\n\n\"Well put, Sir.\" The Vulcan returned to her audience. \"The cadet squads will be equipped and ready at the Transporter Room at 0900 Hours, and your individual orders will be fed to your tricorders. Dismissed.\"\n\n*\n\nSECURITY AUDIO TRANSCRIPT ALPHA SQUAD, STARDATE 35425.08 LOCATION: FREIGHTER SAARUUV, WARP CONDUIT ROOM PRESENT:\n\nSQUAD LEADER SASHA HRELLE (COMMAND) CADET EYDIIR DAUGHTER-OF-KAAS (MEDICAL) CADET JONAS OSTROW (ENGINEERING) CADET NERAXIS NEMM (SECURITY) CADET MEOW RRORI (FLIGHT OPS) CADET KITIRIK (SCIENCE)\n\nHRELLE: Okay, Jonas, you get to work on the diagnostics in here, the rest of us will sweep the port nacelle. Where's the access hatch?\n\nOSTROW: There, just behind you. Here, you'll need my magnetic coupler to open it.\n\n[0904 HOURS: SOUNDS OF HATCH OPENING]\n\nNEMM: Good work, Scrappy. Think that coupler will help me get into Bobby's pants?\n\nOSTROW: No.\n\nHRELLE: Stow it, this is being recorded, remember. I don't think Starfleet Intelligence is going to be interested in your crush on Cadet Beaudine.\n\nNEMM: You never know...\n\nKITIRIK: 'Crush'? This is slang for infatuation, is it not? But 'Crush' typically indicates an act of destruction?\n\nRRORI: Because that's how infatuations usually end, my friend, with the lovesick broken. Sadly, many of my admirers have ended up in such states. I've often considered setting up support groups for those whose hearts I've broken.\n\nNEMM: I thought it took all your effort to stay humble?\n\nRRORI: I am brilliant enough to manage both.\n\nHRELLE: So, my warnings that this is all being recorded have basically been ignored, am I right? Neraxis, Eydiir, Rrori, Kit, get going up into the nacelle, we'll leave Jonas to his work.\n\nKITIRIK: Respected Squad Leader, may I please stay here to assist Friend Jonas?\n\nHRELLE: Assist him? You're a Science Specialist. If anything, Rrori would be better suited to assist him.\n\nRRORI: Yes, I would be most adept.\n\nKITIRIK: True, but I am currently working on a paper on the destructive effects of warp fields on local space, and Friend Jonas could assist me in providing some background information.\n\nHRELLE: Fine, but remember we're here to do a job.\n\nKITIRIK: Thank you, Respected Squad Leader.\n\n[0906-0908 HOURS: SOUNDS - TRICORDER SCANS AND INSTRUMENT PANELS BEING REMOVED]\n\nOSTROW: All standard so far; the Vulcans keep a well-ordered ship. So, what do you want to know, Kit?\n\nKITIRIK: Know? About what?\n\nOSTROW: This paper you said you're working on... (PAUSE) You *are* working on one, aren't you?\n\nKITIRIK: I must regrettably admit I was being economical with the truth about that. I merely wished an excuse to be with you.\n\nOSTROW: Me? Why?\n\nKITIRIK: How are you feeling, Friend Jonas?\n\nOSTROW: There's nothing wrong with me.\n\nKITIRIK: Oh.\n\nOSTROW: You have a problem with that?\n\nKITIRIK: No... If that is indeed the truth.\n\nOSTROW: Why wouldn't it be?\n\nKITIRIK: In my experience, humanoids respond to such queries in several ways; your response suggests a defensive denial of a harsher truth.\n\nOSTROW: I'm not being defensive- wait a minute.\n\nKITIRIK: Is there a problem?\n\nOSTROW: Now that I think about it, you've been pretty interested in me the last couple of days - you and Eydiir. She had me go over the diagnostics on her medical tricorder yesterday, all while trying to make small talk with me - she's really bad at it - and before that you had me spend time with you in that holodeck swamp program-\n\nKITIRIK: I did apologise that you could not appreciate the joy of catching bugs with your tongue-\n\nOSTROW: Why the interest?\n\nKITIRIK: It... Friend Jonas, there is worry about you.\n\nOSTROW: Worry? There's nothing to be worried about.\n\nKITIRIK: Forgive me, but I beg to differ. You have become withdrawn, you no longer participate in activities you once enjoyed, you barely eat, and I have noticed broken sleep patterns. You also have a message from your mother that you have yet to open and listen to-\n\nOSTROW: How the hell do you know about that?\n\nKITIRIK: I have admittedly broken protocol by looking over your shoulder at your PADD. You keep staring at the unopened message icon, but never open it. You have always been enthusiastic about hearing from her. We are worried for you-\n\nOSTROW: 'We'? Who's 'we'?\n\nCADET KITIRIK: ...The Most Respected Counselor-\n\nOSTROW: Kami? I've been seeing her several times a week, and she never said anything!\n\nKITIRIK: No. But she knows you have been trying to deceive her. Or yourself. So she asked Friend Eydiir and I to see what we could discern.\n\nOSTROW: Yes, well, there's absolutely nothing wrong with me, except that everyone's on my back and won't leave me the hell alone! So go back to her and tell her that her spy failed!\n\n[0910 HOURS: SOUNDS - TRICORDER SCANS]\n\nKITIRIK: I am no spy, Friend Jonas. I am your friend. As is Friend Eydiir and the Most Respected Counselor. As is everyone else.\n\nOSTROW: Will you just shut the fuc- Oh, shit, Kit, I'm sorry. I didn't mean to snap at you. I'm just tired, that's all. Everything's fine. I'm just tired. (SOUNDS OF REMOVED PANEL) Stand back, Kit.\n\nKITIRIK: What are you doing, Friend Jonas?\n\nOSTROW: I'm powering up the plasma coil.\n\nKITIRIK: Forgive me, Friend Jonas, but does that note xceed our orders?\n\n0910 HOURS: SOUND - COMMUNICATOR CHIRP\n\nOSTROW: Ostrow here.\n\nVOICE OF COUNSELOR KAMI SHALL: Jonas, I want you to come back to the ship. Right now.\n\nOSTROW: Counselor, I'm in the middle of some delicate work here, can't it wait?\n\nSHALL: No. We need to talk.\n\nOSTROW: What's this all about?\n\nSHALL: I've accessed your Personal Logs.\n\nOSTROW: ...I... I can explain-\n\nSHALL: You're suspended from duty, effective immediately. Now get back here or I'll have the Captain come and collect you.\n\nOSTROW: I... okay, I'm on my way. Ostrow out. (PAUSE) Kit, would you- would you go get Sasha, explain to her that I have to head back to the ship? I need to close all this up again, and I don't want to keep the Counselor waiting.\n\nKITIRIK: Why do you not just call Friend Sasha on your communicator?\n\nOSTROW: The nacelle lining blocks transmissions.\n\nKITIRIK: Oh... of course. I shall go now.\n\nOSTROW: Kit?\n\nKITIRIK: Yes, Friend Jonas?\n\nOSTROW: Thank you for being my friend. Thank you for caring. You don't have to bother.\n\nKITIRIK: It is no bother. It is a pleasure. I will inform Friend Sasha.\n\nOSTROW: Take your time.\n\n[0912 HOURS: SOUNDS - MAGNETIC COUPLER ON METAL, TRICORDER SAFETY ALERT SIGNAL, PLASMA STREAM FLARE CRACKLING - SEE DIAGNOSTIC DATA FOR FURTHER INFORMATION]\n\nKITIRIK: Surefoot! Emergency beam out! Two to beam out-\n\n*\n\nUSS Surefoot, Deck 4, Sickbay:\n\nThe crewmen carried Kitirik straight through and quickly but gently set him down on the nearest biobed, the overhead monitors instantly identifying the occupant and providing Dr Ling with the necessary information, as black-red blood pumped from Kitirik's wounds on his lower half. \"Massive plasma burns and secondary lacerations to his legs, groin and hip, severe nerve damage - Quinn, get the dermal regenerator unit powered up! Pruhl, get the supply of Qarari blood stock -\"\n\n\"What type?\"\n\nLing was quickly cutting away the burned, tattered remains of the cadet's uniform. \"We only have the one, since we only have one Qarari onboard, now get moving, and get it all! We're gonna need it! Cadet, lie back, we'll have you sedated in a moment-\"\n\nKit started to rise. \"No, Respected Doctor- must speak with- Respected Captain-\"\n\nLing pushed him back down again. \"My patients don't walk out on me. Especially when they can't walk at all.\"\n\nT'Varik entered. \"What is Mr Kitirik's status, Doctor?\"\n\nLing never looked up from her analysis. \"He might live if he can lie still and let us work on him. Mind telling me what happened?\"\n\n\"I was hoping to ascertain this now-\"\n\n\"W-Where-\" Kit interrupted, his normally-green pallor turning a nasty-looking white. \"Where's Friend Jonas?\"\n\n\"He did not accompany you? The computer beamed both of you onboard on your signal.\"\n\nCadet Pruhl caught the tail end of the conversation as she returned with the blood. \"He was in the Transporter Room, Commander, and he didn't appear injured. I thought he was following us here-\"\n\n\"Respected Commander,\" Kit coughed, gasping in pain despite the neural blockers being placed in various points on his body. \"Exposed plasma stream- Friend Jonas- deliberately triggered flare- no accident- he sent me away-\"\n\n\"You are certain of this?\"\n\n\"We need to get working on these injuries,\" Ling snapped. \"To prevent long-term damage!\"\n\nBut the Qarari continued to struggle to speak. \"Respected Commander, if Friend Jonas thinks- thinks I was injured, or worse, because of his actions- in his present state of mind-\"\n\n\"Understood. Proceed, Doctor.\" T'Varik touched her combadge. \"Cadet Ostrow: respond immediately. Jonas: please respond.\" She tapped her combadge again, raising her voice. \"All hands: Emergency Search Protocols. Find Cadet Jonas Ostrow and report to me at once.\"\n\nA moment later, she received a response. \"Commander, it's Kami, you can call off the search, he's with me.\" Captain Hrelle entered Sickbay as the Counselor then asked, \"Will Kit be okay?\"\n\nThe Vulcan looked at the cadet on the biobed, now fully sedated and undergoing treatment. \"He is being worked on as we speak; I believe he will eventually make a full recovery. The Captain and I are proceeding to your office-\"\n\n\"Give us a little time first, please.\"\n\nT'Varik looked to Hrelle, who nodded silently. \"Report when you are ready to receive us. T'Varik out.\" To Hrelle she added, \"It is as the Counselor feared. We should talk. Keep us updated on Kit's progress, Doctor.\"\n\n*\n\nPERSONAL LOG, CADET JONAS OSTROW, STARDATE 35466.14:\n\nI'm sitting on the floor of the Isolation Room in Sickbay. They didn't want to put me in the Brig, but they needed a place where they could keep a constant eye on me, and make sure I don't try to hurt myself again. They should have put me in the Brig. It's where I belong. Here, this seems too humane.\n\nBut for a while, I was able to see Kit, over in the Recovery Area, before they finally moved him out. At least Dr Ling stopped by to finally answer my questions and confirm that he'd be okay. Eventually. He never woke up, never saw me.\n\nI'm glad for that. It was bad enough, seeing the look in Kami's eyes, and then the Captain's and T'Varik's, when they finally confronted me. I felt the hate, the disgust from them. I don't blame them one bit. I hate myself even more. I never set out to hurt anyone else, just myself.\n\nIt's so easy to get hurt in Engineering. There's always something around you that can burn you, or worse, if you don't treat it right: plasma coils, magnetic constrictors, deuterium injectors, EPS conduits. I'm surprised more people don't get killed there. My Mom runs a salvage company, and I grew up around machines, and she made sure that every worker under her taught me how to stay alive and not take risks. It took a lot to make me do what I did, and when Kami had called me back, I knew a chance like this would never come again for me. So I took it.\n\nThe thing is... as soon as I activated the coupler, knowing that its magnetic field would attract a plasma flare and kill me... I knew it was wrong. I immediately regretted it, even as I knew it was too late to stop it. When we were camping out on Malbruk II, I tried playing Slideball with some of the others. And I remember at one point seeing the ball coming down from afar, coming straight for me... and I felt frozen, unable to catch it, or even move aside to keep it from hitting me in the face. And yet, I saw it coming, so time was passing.\n\nAnd it was like that on the Vulcan freighter. I felt every hair on my body stand on end, my eyes blinded by the brilliance of the white-hot plasma fire lashing out towards me. I didn't want to die anymore - but I was going to die nevertheless.\n\nUntil Kit leapt up, calling for a beam-out even as he was tackling me, the plasma flare hitting him instead. He screamed in my ear, his body spasming as the transporter beam took us both away... God, I could smell his flesh and uniform as it burned...\n\nI didn't want to die then. But I do now. I'm going to get dishonourably discharged, sent to the Stockade. And why not? I nearly killed a crewmate. A good friend. Someone worth a hundred of me.\n\nOh God, Kit, I'm sorry. I'm so sorry...\n\n*\n\nDeck 4, Sickbay Recovery Room:\n\nKit lay on the biobed, dermal patches covering the damaged areas on his body, the patches designed to dissolve once the regeneration cycles were complete and additional protection against infection was no longer required. He was near-naked but seemingly not self-conscious about it, either due to cultural traits or the continued sedation, or perhaps both.\n\n\"The cycles are almost complete,\" Ling informed his visitors. \"When I release him, he'll need a cane to walk for a few days. And I recommend he stays away from plasma streams in the future.\"\n\n\"That is advice I will happily follow, Respected Doctor. I found the one time more than sufficient.\"\n\nAs the doctor left, T'Varik informed him, \"I will be putting you up for a commendation for your actions, Cadet-\"\n\n\"No, Respected Commander. I must decline the offer.\"\n\nBeside T'Varik, Hrelle leaned in. \"It's okay, Kit. You deserve it.\"\n\n\"Forgive my lack of appreciation for the gesture, Respected Captain, but... I will not profit at the expense of a sick and vulnerable friend. Please do not do this for me.\"\n\nThe Vulcan considered the words. \"As you wish, Cadet. I have read your statement on the incident, it corroborates the audio logs made at the time.\"",
        "\"Thank you, Respected Commander. I regret my recollection was less than perfect during the time when I was on fire.\"\n\nT'Varik raised an eyebrow, appearing not entirely sure if he was making a joke or not. \"I am certain we can overlook it under the circumstances. Don't you agree, Captain?\"\n\n\"This one time, yes.\"\n\nKit nodded. \"What will happen to Friend Jonas? He did not mean to see harm come to me-\"\n\n\"We know; you made that quite clear in your report. But this goes far beyond what his intentions were for you. You will have to trust in our judgement regarding Mr Ostrow.\"\n\n*\n\nDeck 1, Captain's Office, Two Days Later:\n\nJonas stood, trembling slightly in front of the three senior officers of the ship, Captain Hrelle in the centre, leaning against his desk, with Commander T'Varik on his right hand and Counselor Shall on his left, the former speaking first. \"Mr Ostrow, reckless endangerment of one's own life is serious enough in itself. But you also put a crewmate's life in danger as well. I have read your statement about the incident; we are aware that you attempted to send Mr Kitirik away before you deliberately triggered a plasma flare. And we are aware that he will make a full recovery. But neither of these are relevant to the matter at hand. Do you understand?\"\n\n\"Yes, Commander,\" the boy replied, unable to look at any of them. \"I- I want it on the record that I fully accept my guilt in this, and I am prepared to face whatever punishment you decide for me without argument.\"\n\n\"Well, that's good to hear, Jonas, that will make things much easier. Commander?\"\n\nT'Varik stepped in again. \"Your duty shift for the next four weeks has been revised; you will be assigned for shorter periods, under the constant supervision of Chief Grev, and this will allow you to attend the increased counseling sessions scheduled for you.\"\n\nJonas frowned, confused, looking to each of them. \"Duty Shift?\"\n\n\"Of course,\" Hrelle answered mildly. \"You will also be fitted with a subcutaneous implant, which will monitor your location and biosigns at all times, and should you... accidentally leave your combadge somewhere, you will hear us anyway. Needless to say, you will not make any effort to remove or disable it. Once we feel it is no longer necessary, it will be extracted.\"\n\n\"As the Commander noted,\" Kami continued, \"You'll have more Counseling, short daily ones with me, where I'll help you deal more effectively with your depression and anxiety. There will also be group sessions, with Alpha Squad, as well as a... select number onboard, who have also been where you are, who know better what you're feeling, and can guide you.\"\n\n\"I- I don't understand,\" he finally said, paling. \"Why aren't you court-martialling me? Sending me to the stockade?\"\n\n\"I believe I once informed you that you mean too much to this ship and crew to let you go so easily,\" T'Varik reminded him. \"Recent events have not changed that opinion.\"\n\n\"But- But I nearly killed Kit!\"\n\n\"And nearly killed yourself,\" Kami added soberly. \"And you'll have to deal with both of those facts, for the rest of your life. But you can best deal with them here.\"\n\n\"This isn't the Dark Ages, Jonas,\" Hrelle answered. \"You're not evil. You've just been listening to the wrong advice: that little voice in the back of your head, the one that's kept you up at night, telling you you're worthless, friendless, hopeless. The one that won't leave you alone. \n\nThe same voice that I have in the back of *my* head, telling me I'm a coward, a traitor... a monster... for what I went through, and that I'd be better off taking a point-blank phaser blast to the brain.\n\nBut those voices lie to us, Jonas. And a part of us knows it. We just have to find the strength to force them down again. I did. So will you.\"\n\nJonas' eyes widened, his disbelief plain. \"I'm not- I'm not leaving?\"\n\n\"No,\" Kami assured him. \"But it won't be easy. You need to learn to open up, to be willing to help yourself. We can give you all the support and encouragement we can, and Dr Ling can deal with the neurological anomalies in the brain that cause depression and anxiety - but each of us has to deal with the Voices that can bring the symptoms back.\"\n\n\"We believe you can do this,\" T'Varik told him. \"We believe in you. You may not trust in yourself right now, so just take our word that you can, and you will.\"\n\nJonas looked to each of them in turn again, nodding, his voice cracking. \"T-Thank you. All of you...\"\n\nHrelle stepped forward, seemingly regarding Jonas as if for the first time, before leaning in towards the young man's left ear, whispering, \"I'm speaking now to that Voice in the back of Jonas' head, the one that's been lying to him, telling him he's weak and useless, telling him he's better off dead:\n\nPack your bags. Your days are numbered. You're not getting a hold on him any longer, because he has his family behind him now. He's kicking you out, and while he may hear you shouting from a distance from time to time, he won't be listening to you anymore.\n\nSo do yourself a favour, and fuck off...\"\n\n*\n\nDeck 1, Briefing Room, Later:\n\nNearly all of the cadets and crew had assembled, leaving the room somewhat crowded, and prompting T'Varik to keep the meeting concise. \"An issue has arisen of late which prompts me to address this to you personally: your mental and emotional well-being.\n\nIt is recognised that even in our more enlightened age, there may exist among certain individuals or cultures stigmas attached with regards to mental health issues. These stigmas may prevent people from coming forward to discuss problems which they or others might be experiencing.\n\nThe Captain, the Counselor and I want all of you to accept that you are in a safe environment here, safe to be open, to be honest, and to seek help when required. Silence, and fear, can be deadly, and no problem can be solved unless it is first acknowledged-\"\n\n\"Come on, Commander, let's be honest.\" This came from Cadet Thykrill, the Andorian Security Specialist of Beta Squad, who was sitting at the front of the group. \"We all know this 'issue' is about Jonas Ostrow and what he did to the Qarari.\"\n\nNearby, Alpha Squad sat together, Neraxis turning in her seat, looking angry. \"Just sit there and stay quiet for once, Thykrill, you have no idea what the hell you're talking about.\"\n\nThe Andorian glared back, as T'Varik informed her, \"What might have prompted this discussion is not relevant, Cadet.\"\n\nThykrill sneered now, her gaunt blue face darkened as she folded her arms across her chest and tilted her antennae downward from her mop of snow-white hair. \"It seems quite relevant, Commander, since I doubt if we'd have to endure this interminable lecture of yours if not for the actions of some weakling coward.\"\n\nAlpha Squad rose to their feet as one, Sasha and Rrori grabbing a furious Neraxis as the Bolian made a move towards Thykrill. \"One more fucking word out of you and I'm gonna kick your bony blue ass back to Andor!\"\n\nThykrill and several members of Beta Squad rose as well, Thykrill snarling, \"Come and try it, you fat Bolian cow!\"\n\nSasha pulled Neraxis back, though she was almost as angry. \"You'd better shut her up, Giles! I mean it!\"\n\nBeside Thykrill, Beta Squad Leader Giles Arrington looked both angry and embarrassed. \"That is way out of line, Atiaro! You've no right to say that!\"\n\n\"Oh, of course you'll take your lover's side in this! So long as you have a warm wet place to put your piece-\"\n\n\"ENOUGH!\"\n\nAll attentions returned to T'Varik, her expression tight. \"One more word from any of you, and you will be suspended from duty indefinitely. Sit down - no, not you, Cadet Thykrill. Remain standing. And at attention.\"\n\nAs the cadets complied, the Vulcan continued. \"Cadet, if the health and well-being of your fellow crewmates is of no concern to you, you do not need to endure this interminable lecture of mine. You may return to your quarters... and pack your belongings, while I arrange for your expulsion from Starfleet Academy.\"\n\nThykrill's eyes widened in shock. \"Expulsion? You- you can't do that! I have a right to my opinion- as a Federation citizen-\"\n\n\"You do, and you retain that right. But onboard a Starfleet vessel, other rules apply, and your rights become secondary to those rules. Your words and attitude exhibit a gross disrespect for your crewmates. And as I believe I have already demonstrated with the disposition of former cadet Jared Miro, I am *acutely* intolerant of disrespect.\"\n\nBut then she spoke in a softer tone. \"Atiaro, Andorians have historically shown little regard for those with mental illness. But I am aware that this has changed in recent years, thanks to a renowned statesman and philosopher on your world. \n\nI remember a particular statement he once made: 'Those who have fought with Life, whose wounds cannot be seen, are no less deserving of our respect and regard than those who have fought with our enemies and carry their scars on their skin. And the only dishonour to be found is in our dismissal of them.'\" She paused and asked, \"Do you know who said that?\"\n\nThykrill's face darkened, and she stared down at the floor.\n\nUntil T'Varik added, \"I asked you a question, Cadet. Please enlighten the rest of the room as to the identity of this respected individual.\"\n\nThe Andorian swallowed. \"Doctor... Shrevys Thykrill.\"\n\n\"Thykrill? Any relation?\" she asked, clearly sounding as if she already knew the answer.\n\nThe girl nodded, almost shaking. \"My... father, Commander.\"\n\n\"Yes, your father. You represent both your race and your family name in Starfleet. How do you believe he would react if he had heard what you just said about one of your fellow crewmates?\"\n\n\"He- He- \" Looking as if she wanted to crawl under her chair and hide, she turned towards Alpha Squad, not quite looking at them. \"Please accept my... apologies for what I said about your - *our* crewmate. If the Commander will allow me the honour of remaining onboard, I swear you will not hear those shameful words from me again.\"\n\n\"I believe that will be an acceptable arrangement, Cadet. Sit down.\" As the Andorian gratefully complied, T'Varik proceeded. \"Our recent adventures notwithstanding, this ship and this mission is considered quite ordinary. And yet, we share one trait with deep space explorers, inner system transports, frigates or border patrol vessels. \n\nWe are alone out here. And we must rely upon each other...\"\n\n*\n\nDeck 1, Captain/Counselor's Quarters:\n\nHrelle leaned in over Kami's shoulder, feeling the tension radiate like heat from her as he peered at the PADD in her lap. \"A three dimensional labyrinth?\"\n\n\"Oh, far more complex than that: Jonas' brain.\" She pointed at one area. \"Specifically, the damage caused by Aiken. He had some ability, but no training, and even less care about his victims. And if he wasn't dead from hyperzine abuse, I'd be opening his throat up right now.\"\n\nHe rested a hand on one of her shoulders. \"Let it go, Beloved. Dr Ling repaired the damage?\"\n\nShe nodded. \"And the underlying natural imbalances that trigger episodes of anxiety and depression. The sort of thing that would have been detected and treated years ago if his mother hadn't raised him on the Frontier.\"\n\nNow both of his hands moved to both of her shoulders, gently grappling with the knots of muscle that opposed him. \"Not necessarily. There are more than a few right here in the heart of the Federation who have refused such treatments for their children, arguing that those same imbalances are what give us our individual personalities, and that eliminating them would just homogenise us all.\"\n\nKami grunted. \"What crap. I'd rather have a cub who was boring than one who thought he was a worthless piece of shit. And yes, I know there are other factors involved, but... Oh Esek, I fucked up.\"\n\n\"Nonsense.\"\n\n\"No, it's true. I should have anticipated the scope of his problems, I should have convinced him to let T'Varik mind meld with him, I should have checked his personal log sooner, I should have gone to him directly rather than give him a warning-\"\n\nHrelle stopped to take the PADD from her hand and set it aside, before coming around to kneel before her, adjusting the pleats of her civilian skirt before taking her hands in his own. \"Sure, you should have done all those things. You should also examine all the personal logs of everyone onboard without their permission. And place monitor implants under everyone's skin. And cameras in their quarters. And have T'Varik force mind melds on everyone-\"\n\n\"Alright, you made your point-\"\n\n\"Not yet I haven't. Because you could do all those things and still someone can slip through, if they're that determined to do so. It's like you once told me: there are no Heisenberg Compensators in Psychology.\"\n\nShe frowned down at him. \"I never said anything like that.\"\n\n\"No? Sounds like something you'd say.\"\n\n\"I don't even know what a Heisenberg Compensator is.\"\n\n\"It's an essential component of transporter technology. It works around the problems caused by the Heisenberg Uncertainty Principle, allowing the transporter sensors to compensate for their inability to determine both the position and momentum of the target particles to the same degree of accuracy. This ensures the matter stream remains coherent during transport, and-\"\n\nHe stopped as she tilted her head back and pretended to have fallen asleep. She even snored.\n\nHe continued regardless. \"What I'm trying to tell you is that yours can never be an exact science, you can only do your best. And your best is pretty damn good.\"\n\nBut she continued to snore.\n\nUntil he put his head under her skirt.\n\nThen she was purring...\n\n*\n\nDeck 2, Counselor's Office, Three Days Later:\n\nAlpha Squad, minus Jonas but including former member Giles, sat with the expected mix of emotions on their faces and in their body language: anxiety, anger, confusion, concern, emotions Kami was prepared to deal with. \"Jonas will be released and returned tonight. He has the implant to monitor his biosigns and location, but we're relying on you to keep an eye on him and not leave him unsupervised for too long.\"\n\nShe smiled. \"This doesn't mean you have to stand over him while he's on the toilet. Just be available to him, encourage him to participate in group activities, to open up if he's ready, and maybe for you to tell him how you feel about what he's done.\"\n\nSitting opposite her, Neraxis, her arms folded across her ample chest and her blue face a darker shade of scowl, responded. \"Oh yeah, I'll tell him, all right. I'll tell him what a selfish little asshole he is.\"\n\n\"You might want to phrase that better-\"\n\n\"I don't think so,\" she threatened. \"I think he's gonna get it full blast.\"\n\n\"It's understandable to feel that way, Neraxis. But you have to balance that with what will be helpful to Jonas.\"\n\n\"I don't give a shit! He didn't care about how his actions would affect us, you, his mother, the Captain or anyone else! Why should we care?\"\n\n\"Because we *can*,\" Eydiir answered. \"We have an objectivity that those under the influence of depression lack.\"\n\n\"It was never a question of his not caring, Friend Neraxis,\" Kit added, leaning forward, gripping the cane he was still using for support as he walked, a flash of discomfort crossing his features. \"But his inability to look past his pain to find aid.\"\n\nThe Bolian looked around at them. \"I can't believe you're all taking his side in this! He does this terrible, cowardly thing, and you're ready to forgive him?\"\n\nOn her left side, Giles leaned in close. \"Weren't you ready to kick Thykrill's bony blue ass back to Andor for saying something bad about him?\"\n\n\"That's different! I'm his-\" She stopped, looking at Kit again. \"And *you*! He nearly killed you! And you're willing to forgive him?\"\n\n\"Yes, Friend Neraxis.\"\n\n\"No! You can't do that!\"\n\nHis expression and tone changed slightly, but in a way that somehow seemed to put everyone on edge. \"Forgive me... but do not lecture me on how I treat my other friends.\"\n\n\"Counselor,\" Rrori began, sounding as if he was looking to defuse the growing tension in the room, \"I am at an unaccustomed loss as to how to behave around Jonas on his return. I do not wish to say or do anything that might upset him or his recovery. Should we just treat him as if nothing has happened?\"\n\n\"That's a good question, Rrori - and the answer to that is No. Not addressing what's troubling him has been part of the problem, what drove him to such desperate measures.\"\n\nShe looked at Neraxis again. \"But you don't want to throw blame or guilt or anger at him, either. He has enough of that for himself already, I can promise you.\"\n\nThe Bolian scowled again. \"Why are you targeting *me*?\"\n\n\"Because you love him the most. You appointed yourself his Big Sister. And so you feel the most betrayed that he might want to take his own life - and the most guilt, that you never noticed the warning signs.\"\n\nNeraxis started to retort, to argue - but it dissolved into a stream of dark blue-purple tears she couldn't halt, or wipe from her face quickly enough. She let Sasha put a comforting arm around her. \"Fuck it! I should have known! I should have seen he was feeling this way!\"\n\n\"You could not have, Friend Neraxis,\" Kit assured her, allowing her to compose herself once more. \"It is an isolating, silencing disease, and not often are there warning signs, nor training to see those signs. No one in my family knew, or suspected, those times when I tried to take my own life, for instance.\"\n\nThe group went silent.\n\nAnd somehow, even more so as Eydiir added, \"Nor did mine.\"\n\nNeraxis looked to the two of them in disbelief. \"*You* guys? How? Why? I mean-\"\n\nKit looked at Eydiir, who nodded in acquiescence for him to proceed. He did so, involuntarily clutching his wrists protectively. \"I told you that I was born in a different gender to what I am now, Friend Neraxis. And that my homeworld's government treated people like me in re-education facilities, to teach us how wrong we were to feel different.\n\nGiven the option of submitting to their relentless propaganda and coercion and living a lie, or ending my pain... the latter seemed viable. That is, until Starfleet came to my world.\"\n\nEydiir set a hand on his arm. \"I had an older brother, Straad. He was my world, my life. He taught me to fight, and to laugh, and I rode on his shoulders so I could touch the sky. I loved him so very much.\" Then her expression changed. \"He caught a fever, a fever that would have been child's play to cure - had the Capellans not believed the sick should die.\n\nAlone I tried to heal him... but my efforts were pitiful. He died, and they forgot about him because he dared to die a dishonourable death. But I did *not* forget, and I wanted to die, too, and tried, at my own hand, more than once. But obviously my efforts resulted in failure, since I am here, now - learning to fight to save the lives I can. No one will die now, if I can save them. Including myself.\"\n\nSasha stared at her friend as if for the first time. \"I never knew. You always seemed so strong, so assured-\"\n\n\"It can affect the strongest of us, at our most vulnerable moments,\" Kami told her sympathetically. \"Even starship captains.\"\n\n\"What? My Dad, too?\"\n\nKami nodded. \"After his escape, but before he was reunited with you. He never wanted you to know how bad it had been for him... but he gave me permission tonight to talk about it, if I thought it would help. In fact, he, Kit and Eydiir meet occasionally to discuss their experiences and feelings... and Jonas will be joining them now.\n\nNeraxis, you mustn't blame yourself. None of you must. Apart from everything else, it's a waste of time. What matters is what we can do to help Jonas now...\"\n\n*\n\nDeck 2, Alpha Squad Quarters, Later:\n\nAlpha Squad was silent as Kami entered, her arm around a hesitant Jonas. \"I found this stray cub wandering the corridors whimpering outside of people's cabins. Anyone want to claim him?\"",
        "Sasha smiled. \"Yeah, he looks familiar. We should get him tagged.\"\n\nJonas held up his right hand, displaying the small dermal patch covering where the subcutaneous implant was placed. \"Already taken care of.\"\n\n\"Yes,\" Kami agreed, smiling. \"But bring him in tomorrow to get him neutered.\" As he reacted to that, she backed off. \"I'm off duty now, but I'm always available if you need anything at all.\"\n\nRrori looked in her direction. \"I could do with being tucked into bed tonight, Counselor.\"\n\nShe eyed him, sensing the good humour behind his words rather than a genuine attempt at flirtation, like he had done upon his arrival onboard. \"I doubt if there's a shortage of volunteers for that, but if there is, I suggest you go tuck yourself. Good night.\"\n\nAs she left, the group looked to each other, or at the wall display, which offered the view from the bridge viewscreen.\n\n\"No, this isn't awkward in the least, is it?\" Sasha joked, moving in to hug him. \"Welcome back.\"\n\nThe others drew in as well, offering hugs or pats on the back... except for Neraxis and Kit. The Bolian stood in front of him, her feelings hidden - until she smacked the back of his head, before gripping him tightly. \"Asshole.\"\n\nFinally Jonas faced Kit, who hobbled closer on his cane, holding out his free arm. \"Friend Jonas...\"\n\nBut the boy shook his head in disbelief. \"No... How can you even look at me?\"\n\n\"It is not too difficult, you do not appear too unattractive for a mammal-\"\n\n\"No!\" the boy exclaimed, looking as if the stress of the past week had been building up, ready for this moment. \"No, Kit! You can't! You can't just let me off the hook for what I did! You can't!\"\n\nKit stared hard at him. \"I'm not, Friend Jonas. For what you did, I will demand much of you in times to come. Much, I promise.\"\n\nHe drew closer, leaning on his cane fully now. \"I will demand that you live. I will demand that you cherish the wonderful, blessed life you have now. I will demand that, should you forget this temporarily, that you will listen to your friends and believe them. I will demand that you pay attention to the Most Respected Counselor and use her wisdom. I will occasionally demand you use your spare replicator rations on honey-coated locusts for me.\n\nI will also demand hugs - and do not think I forgotten you have left me bereft of one now-\"\n\nJonas didn't leave him waiting.\n\nOnce the tension broke, Sasha looked around them. \"Now what?\"\n\nFortunately Rrori answered quickly. \"Might I suggest cards?\" He drew up to Jonas and put a hand on the boy's shoulder. \"At our last game of strip poker, our furless friend here left me naked - a delight for all of you of course, but a consternation for me.\n\nAnd it occurred to me that when we arrive at Starbase 154 - if we ever do - and I visit their casino, I may meet a couple of women for whom my alluring good looks and impressive genitalia will not be sufficient-\"\n\n\"Holy Hraxor, cork it already, we'll play!\" Neraxis moved to set up the table as Eydiir went for the chairs.\n\n\"Sounds like fun,\" Sasha agreed, smiling. \"But not strip poker, I'm terrible at cards and a lack of grooming means I'm starting to look a little Caitian below the waist. No offense, Rrori-\" She turned at the door chime. \"Enter.\"\n\nGiles walked in, lugging a large crate of assorted bottles that clanked with each step. \"Beware of Romulans bearing gifts.\" He set it down on an adjacent desk. \"Here you go, compliments of the other squads: an assortment of alcoholic and non-alcoholic drinks.\"\n\nSasha stepped out of the way of the others setting up the table and chairs to kiss Giles. \"Thanks, darling, that's nice of you to do this.\"\n\n\"I can't take the credit. It was Thykrill's idea.\"\n\nNeraxis looked up suspiciously. \"Hers?\"\n\nHe nodded. \"She went around collecting spare replicator rations, and made up the difference from her own savings.\"\n\nNeraxis grunted. \"Great, now I have to be nice to her. Thanks a freaking bunch.\"\n\n\"Or you can just thank her,\" Sasha suggested, looking to Giles. \"Wanna join us?\"\n\n\"Sure, just as soon as I go back for some snacks. Anyone have any requests?\"\n\nKit was shuffling the deck as Neraxis helped herself to a Spican flame beer. \"I am happy for most anything, Friend Giles - except roasted nuts. I have had enough of those recently.\"\n\nNeraxis spat out the beer in her mouth. Kit chuckled to himself.\n\nJonas smiled. He didn't want to, didn't think he deserved it. But he did anyway.\n\n*\n\nDeck 1, Bridge:\n\nT'Varik tapped the appropriate controls on the arm of the command chair upon which she sat. \"First Officer to Captain Hrelle, please respond.\"\n\nAfter a moment, the familiar grumbling Caitian voice filled the bridge. \"What in the Seven Hells, T'Varik?\"\n\n\"Is there a problem, Sir?\"\n\nThen Kami's voice joined in. \"Ignore him, Commander, he was... busy.\"\n\nThe Vulcan took note of the snickering from members of Gamma Squad at their respective posts. \"Forgive the interruption, Sir, but you did say you wanted to be informed when the autopilot on the Vulcan freighter was programmed and ready to be launched for Starbase 154.\"\n\n\"I did?\"\n\n\"Yes, Sir.\"\n\n\"Then I'm a fucking idiot.\"\n\nThe snickering on the bridge blossomed into laughter.\n\nT'Varik remained formal, almost as a deliberate contrast. \"Be that as it may, Sir, you *did* state-\"\n\n\"Mother's Cubs... Thank you, Commander. Consider me informed. And out of contact for the next couple of hours. Same with the Counselor.\"\n\n\"As I suspected, Sir.\"\n\n\"Hrelle out.\"\n\nThe Vulcan allowed a few more seconds of laughter among the cadets before saying, \"I believe that's quite enough.\" As everyone returned to their duties, she turned in her chair to the Ops Station behind her, where the Gamma Squad Leader, the Vulcan male Falok stood, wearing an enigmatic expression. \"You remain amused by that exchange, Mr Falok?\"\n\nThe young man reacted in his efforts to become more composed. T'Varik was aware of young Vulcans often relaxing their emotional control when away from their people and homeworld for lengthy periods of time, and she prefered to remind them of their obligations. \"I have no amusement to display, Commander.\"\n\n\"No? Then perhaps it is condescension for your Captain? I recall your initial impression of your commanding officer was not positive.\"\n\nHe breathed in. \"Permission to speak freely, Commander?\"\n\nShe eyed him with a Vulcan measure of suspicion. \"Granted.\"\n\n\"My initial impression of Captain Hrelle months ago had admittedly been less than complimentary. I saw him as indulgent to his stepdaughter and with a mercurial temperament and substandard intelligence.\n\nMy subsequent time on this vessel in his company has changed that impression consistently. He possesses an eclectic knowledge base, generates intense loyalty in both crew and cadets, and has been unfailingly generous with both time and advice, suggesting intriguing avenues of career progression I had not considered. I respect him tremendously.\n\nSo if you observed any emotion from me, it would be... satisfaction. Satisfaction that, given the adversity he has suffered in his life, he might have reclaimed some peace with his marriage to the Counselor. I believe he... deserves it.\"\n\nT'Varik was prepared to admonish him for his admission of emotion.\n\nInstead, she answered, \"Agreed.\" and turned back in her chair.\n\n*\n\nDeck 2, Counselor's Office, Four Weeks Later:\n\n\"So, Jonas, tell me how you've been doing?\" Kami shifted in her chair, smiling welcomingly at the cadet. \"A month now. Aren't you pleased with your progress?\"\n\n\"Yes, Counselor. Work and studies keep me busy. Chief Grev is a bit of a mother hen, which makes trips to the bathroom interesting.\" Jonas chuckled at his joke.\n\nA little too forcefully, in Kami's estimation. \"And Alpha Squad? And the other cadets?\"\n\n\"We've had... some tense moments,\" he admitted hesitantly. \"Not just in our group sessions. Sometimes when I'm around them it's like they're walking on eggshells, as my Mom used to say. I don't know why anyone would want to walk on eggshells. Have you heard that expression?\"\n\n\"No. Let's talk about your mother. Have you written to her yet about what you did?\"\n\nJonas swallowed. \"It was... very difficult. I didn't want her blaming herself for anything. I tried to keep it as positive as I could.\"\n\nThat's One, she told herself. \"And your sessions with Captain Hrelle and the other survivors. How are they?\"\n\nHe blinked. \"Not... what I thought they'd be. Sometimes we meet in the arboretum, tending the vegetable gardens. Sometimes he has us in the galley, cutting up actual food and cooking a meal for ourselves. It's very relaxed. And it's sort of comforting to hear how much alike he and Kit and Eydiir have felt. It makes me willing to speak about it, too.\"\n\nThat's Two, she told herself. \"And there's been no recent anxiety attacks? Nothing to report? Good sleep?\"\n\n\"No, everything has been fine.\" He smiled.\n\nShe set aside her PADD. That's Three... \"Jonas, I'm recommending the current restrictions are extended for another four weeks.\"\n\nHis smile dropped. \"Extended? B-But I said I was-\"\n\n\"What you've said was shit. I usually give my patients one chance to talk shit to me. Sometimes two, if I'm feeling generous and talking to my husband. You've just given me three.\"\n\nHis face was reddening. \"T-That's not- I mean-\"\n\nKami raised one finger. \"You said, or rather cleverly implied, that you wrote your mother about what you did; the message you ended up sending was as generic and as false as they come. And don't give me that smacked puppy dog look, young man, that I could dare think about reading your mail.\"\n\nShe raised a second finger to join the first. \"Esek has filled me in on your progress in the Survivor Sessions - or rather, your lack of progress. You've listened to the others, yes, but you've barely touched on anything more than the surface feelings you've had.\"\n\nThen there was the third finger. \"And last night, your monitor recorded a period of heightened anxiety at 0135 Hours, along with some other interesting readings.\" She leaned back in her chair, arms folded across her chest. \"I've been a Counselor longer than you've been alive, Jonas. I know all the tricks, and what I don't know, my senses tell the rest.\n\nNow, I told you at the start of all this that we are all here to help you - but you also have to help yourself.\" She eyed him. \"So, let's make some small progress today, shall we? So that maybe we can get you back on target? Tell me about last night. What were you doing that made you so anxious?\"\n\nHe shifted, unable to meet her gaze, reddening more and more. \"It- It wasn't anything, I swear-\"\n\n\"One more denial and this ends, here and now.\" She modulated her tone, her apparent frustration and anger, knowing the best way to get a positive response from him. \"Use the methods I taught you, to compartmentalise your embarrassment, as if you're really talking about someone else.\"\n\nJonas breathed in - and to her relief, he did appear to be doing as she suggested - before finally replying, \"I couldn't sleep, and I knew I couldn't get up to go into the next room without alerting Rrori, so, I was... masturbating.\"\n\nShe nodded. \"I know.\"\n\n\"You do?\"\n\n\"Of course. Apart from all my qualifications, and the monitor readings I got from you, I'm the mother of a male cub your age.\" She smiled. \"If the Federation Games had it as a sport he'd have won the Gold for Cait. But his arms would have been too tired to hold it up.\"\n\nHis chagrin was tinged with anger. \"But if you already knew, why did you have to make me admit it?\"\n\n\"Because of that very reason, Jonas. I respect your shyness regarding matters of sexuality, and while I don't expect you to walk into Engineering at the start of your shift and tell everyone about the amazing wank you had the night before, I *do* expect you to be open to me.\n\nI'm a medical professional, and I promise that I will not condemn or criticise you in the slightest for doing something that I and nearly everyone else onboard does as well. I'm not here to embarrass you, Jonas.\" She relaxed her posture. \"Why did it cause you such anxiety?\"\n\nHe was gripping the arms of his chair, his lips pursing. \"Because... I wasn't getting anywhere. I was panicking. Which probably made things worse.\"\n\n\"Yes,\" she agreed, more sympathetically. \"In times of stress, your body goes out of phase. Sleep, appetite... and libido. It's perfectly natural.\"\n\nHe grimaced. \"I had all these stupid thoughts beaming into my head, about how I would never function properly again and how I would die a virgin and no one would understand.\"\n\n\"The biosigns reported you *did* relax, though, eventually.\"\n\nHe looked at her now, a good sign. \"Yes. Your calming techniques helped. I put aside the anxiety. I was relaxing.\" Now he smiled, though he still went russet again.\n\n\"What happened?\"\n\n\"Well... I was almost there when, in the bunk below me, Neraxis let off a long, loud fart in her sleep.\"\n\nKami laughed.\n\nJonas joined her, eventually adding, \"As you can imagine, it killed the mood for me. Then I started giggling to myself about how stupid it was, letting myself get worked up over it. And then Neraxis woke up and swore at me for making so much noise.\" He laughed some more, wiping his eyes and looking relieved. \"I shouldn't find that funny.\"\n\n\"Yes, you should. In fact, laughing about it is a very healthy coping mechanism for stress. That's actually quite encouraging.\" She regarded him again. \"Thank you for being honest with me, Jonas, and for trusting me.\n\nNow tomorrow, when you meet with Esek and the others, the talk is all going to come from you. Because you can trust them as much as you trust me. Agreed?\"\n\nJonas didn't look terribly convinced - but his affirmative response was genuine.\n\n\"Why do you seem so reluctant?\"\n\nHe fidgeted. \"Kit was the victim of his oppressive government. Eydiir lost her brother to a disease that could easily have been cured. And the Captain was tortured, enslaved, lost his wife, his crew. And me? I'm shy and insecure about being around people and what they think of me! That is a pathetic reason to want to die! How is that supposed to measure up as an excuse for suicide compared with their stories?\"\n\n\"It isn't - because it isn't a competition. The Survivors will all tell you that the reasons don't matter, they all felt legitimate and reasonable to them at the time. But they really weren't. You're not meeting to compare the sizes of your misfortunes, but to offer support to each other in overcoming them. Remember: there are no Heisenberg Compensators in Psychology.\"\n\nHe blinked, impressed. \"I never thought of it like that before. Did you come up with that?\"\n\n\"Of course. Oh, and you'll write your mother, too.\"\n\nHis expression darkened again. \"Why does she have to know now? It's over and done with.\"\n\nKami looked back. \"But it's not, Jonas. It will never be over. There will always be this point in your life when you made a serious effort to end it. Even if you never have another self-destructive ideation again. You have to accept that.\"\n\n\"But why tell her now? Would you want your cub to tell you if he'd disappointed you like that?\"\n\nKami stared at him hard before finally responding. \"Jonas, I'll tell you what I would most definitely *not* want to hear: 'Dear Mrs Hrelle: it is with deep and profound regret that I must inform you of the untimely death of your son, who appears to have committed suicide. His reason for doing this remains undetermined at this time. His body is being shipped to you now for your preferred method of disposal'. I laid a husband to rest. I can't bear to think about doing the same for a child. No parent could.\"\n\nHe was crying now. But she continued, pressing home her point. \"She will not be disappointed. She'll feel many emotions over this, just like you and everyone else who loves and cares for you has. She has a right to do so. But in the end, all she'll care about is that her child is still alive to tell her this himself...\"\n\n*\n\nExcerpt - Personal Message From: Cadet Jonas Ostrow, USS Surefoot To: Helga Ostrow, Owner/Manager, Ostrow Salvage, Hyralin Sector Stardate: 34601.12\n\n...and they took the implant out, which I guess is as good sign that they don't think I'm in any more immediate risk of harming myself. I didn't think I was... but I know I can't always trust my own judgement as to what's best.\n\nI've opened up in the Survivor Sessions. Once I got past the fear that I'd be judged, it came easily. And, as Kami promised, I was met with support. They keep an eye on me still - not as a patient, but a crewmate. And a friend.\n\nI can't begin to imagine how this is affecting you, Mom. I don't want you thinking that you did or didn't do something to get me this way. It was down to me. Remember what you once told me when I first started repairing things? 'The first step in fixing any machine is knowing something is wrong with it'. Well, I knew something was wrong with me, but I didn't go to anyone for help. I still feel angry, anxious, frustrated, annoyed - that's okay, I'm told, it doesn't make me a bad person. Just a person.\n\nBut sometimes, it still overwhelms me. Not necessarily the fears and the doubts about myself, but the guilt. The thought of how you and everyone here would have had to cope with me being gone. I can feel the panic rising in me now just thinking about it, thinking about the rest of my life and how I have to face it, knowing what I almost did.\n\nBut Kami taught me something. She taught me that I don't have to worry about the rest of my life, or the rest of the year, or the month, or even the rest of the day. Just the next sixty seconds. The minutes only come one at a time, like beads on a string or pulses along a transtator circuit. Just take this minute and do what needs to be done, whether it's work or an exam or this letter to you - or asking Rina Chaudri out on a holodeck date - and know that, if I can handle this minute, I can handle the next one. And the next.\n\nI also have something called a Survival Kit. It's a collection of items put together by my friends and I that I can turn to if I need reminding of better things than the thoughts creeping back into my head. I've got inspirational quotes, spiritual and good luck symbols, bits of music on a player, videos of an ancient Terran trio of clowns called The Three Stooges that Neraxis likes - and I've even added some old videos from when you and I had gone to Ghadira and went river rafting. Remember?\n\nBut maybe the stuff that really gets to me are the pictures Captain Hrelle donated, pictures of the Malurian children I helped discover and rescue, now back with their families. And I know that if I had done anything about killing myself before then, they wouldn't be alive today.\n\nAnd if Captain Hrelle and my friends had listened to *their* voices, I'd never have known them, and all the good that they've done since then would never have happened.\n\nWhenever I heard the expression 'Sometimes the Universe Has Other Plans', I always took it to mean that bad things can come around the corner at you when you least expect it. But good things can come, too. But you'll never know it unless you're around to see it for yourself.\n\nI'm... not better. Not yet. But I will get better. Knowing that, and believing that, is a victory in itself.\n\nLove,\n\nJonas\n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... RISING STAR"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fan fiction",
        "starfleet",
        "caitians",
        "furry",
        "fanfic",
        "sci-fi",
        "science fiction"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-the-walking-wounded"
}