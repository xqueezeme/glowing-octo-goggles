{
    "title": "Surefoot 04: Sanction Ch. 01",
    "pages": [
        "\"Captain's Personal Log, Stardate 35276.61, Captain Esek Hrelle, Commanding: the Surefoot is currently engaged in a maintenance and upgrade cycle of a series of automated subspace communications and surveillance buoys within our sector, an opportunity for our cadets to gain practical experience in an extravehicular environment, so we're getting them to suit up and head out there rather than tractor the buoys into our shuttlebay and do the work inside. They all sound keen to get out there in suits, though I suspect that enthusiasm will dampen after they start cleaning the vomit out of their helmets.\n\nOn a personal note, I'm feeling... I'm feeling a little...\"\n\nHrelle sat behind his desk, silent, until the computer prompted him with, \"Do you wish to continue recording?\"\n\n\"Yes.\" He stopped and rubbed the sleep from his eyes and scratched at the fur on his muzzle and throat before actually continuing. \"I'm feeling a little distant from my stepdaughter Sasha. I took this post mostly for the opportunity to participate in the Academy's Advanced Work Experience Program, which I knew she was in, in order to make up for the years I'd spent as a captive. And we do see each other, every day, have lunch, talk.\n\nBut it's not been the same of late. I'm sure it had something to do with my meeting Barbara - Professor Gianopoulis - on Luntanu last week, and though she said she was happy that I found someone of interest since her mother died, I can't help but feel that this development has distanced us. Sure, she's my stepchild, will always be my little Runt of the Litter. But she's also an adult, living a life of her own, separate from mine. She has friends, goals, interests, opinions, ambitions that I have not helped shape or given her. And I'm happy that she has.\n\nBut there'll always be a selfish part of me that wishes she was a child again, riding on my shoulders to get a better look at the Universe, and letting me sing her lullabies at night- \n\nOh, screw this! Computer, end recording!\"\n\nHe breathed out, What maudlin, self-pitying nonsense! If Kami were here, the Counselor would be smacking his snout for this! Sasha was a hard-working, ambitious young woman, juggling her duties as a cadet, a crewmember of his ship and leader of Alpha Squad. What did he want her to do, devote all her free time to making him feel less of a dunsel?\n\nHis stomach growled as if in agreement, and he comforted himself with the thought of his imminent breakfast. He grabbed his PADD and left for the mess hall, determined to get a start on his daily admin work before his shift started. He might even get a chance to suit up and head out with one of the squads - not to keep an eye on them, and certainly not because he enjoyed the experience, but to maintain his own EVA qualifications.\n\nBut that was later. Now... \"Two helpings of Terran French toast with cinnamon, side order of crispy bacon, and strawberry-flavoured maple syrup,\" he told the replicator wall panel happily.\n\n\"Unable to comply,\" the machine responded, sounding just a little too smug for Hrelle's liking. \"There is an override from Chief Medical Officer Doctor Juliet Ling regarding your food choices. You are restricted to one of the following: one half-grapefruit, Terran or Rigelian origin; two slices of toast; one assorted fruit cup selection; corn flakes-\"\n\n\"Shut up.\" The blush he felt beneath his fur was compounded by the crew and cadets, waiting in line to use the replicators and hearing the conversation. Dr Ling had threatened to limit his choices if he didn't make an effort to reduce his weight, but he barely had time to do something about it! It had only been... well, eight weeks, but still... \"Computer, the French toast and bacon isn't for me, it's for a friend, he's caught in a dimensional rift and can't come to get it himself. So provide it. Now.\"\n\n\"Unable to comply.\"\n\nHrelle growled.\n\n\"Excuse me? Captain?\"\n\nHe stopped growling to look behind him at Cadet Chaudri, the Flight Conn member of Beta Squad. \"Yes, Rina?\"\n\nThe impossibly-young and slim Terran girl with almond-coloured skin and eyes smiled slyly. \"If you order a fruit cup, Sir, I'll order French toast and bacon and we can switch at the table.\"\n\n\"Why, that would be-\" But he bit back the rest of his initial response. He had to set an example, after all. \"That would be *wrong*, Cadet. The good doctor obviously had reason to put me on a diet, and I must accede to her... wisdom. But thanks for the offer, anyway.\" To the replicator, he asked, through clenched teeth, \"One half-grapefruit, Terran.\"\n\n\"You are allowed eighteen grams of cottage cheese as an accompaniment with this selection. Would you like this included?\"\n\n\"WHAT?\" he proclaimed loudly, sarcasm as thick as how he imagined the syrup on his desired breakfast would have been. \"A whole eighteen grams? Oh Bubulah, you would be spoiling me with such gastronomic extravagance!\" \n\nTo the laughter of those around them, he then proceeded to tell the computer exactly what it could do with eighteen grams of cottage cheese.\n\nA plain half-grapefruit and spoon materialised on a tray before him.\n\nHe took his tray to an empty table, grimacing before taking even his first bite. After all he'd been through, you'd think they'd offer him some dispensation to have a bit of a belly. It may not appear too flattering, especially in the current uniforms, but it wasn't as if he was in the Diplomatic Corps or a model on recruitment posters.\n\nThe taste of the grapefruit was exactly as he expected, and he cursed Dr Ling with each subsequent spoonful, as he lifted up his PADD and began skimming through the unread mails: further intelligence reports on the Galen Border Conflict, with consequent instructions to increase tactical exercises for cadets and crew, effective immediately; General Orders requesting any available intelligence on some race known only as the Ferengi, who until recently had only been sporadically reported; Signatures required for authorising warp core component replacements when they arrive at Starbase 156 next month-\n\nHe stopped at a mail with an unfamiliar Origin address; after a moment, he found it was relayed through the buoys from outside of Federation space. He opened the mail and began reading. He quickly forgot the rest of his breakfast.\n\nAnd he never heard his first officer approach, tray in hand. \"Good morning, Captain.\"\n\nHe grunted, not looking up from his PADD.\n\nCommander T'Varik took his response with typical Vulcan stoicism, taking the seat opposite him, her own tray sporting an identical grapefruit but with cottage cheese. She indicated his rejected breakfast. \"Dr Ling had warned me of your dietary change, and instructed me to inform you that I am unable to have her orders rescinded.\"\n\nHe never answered.\n\n\"If you are reading about the Galen Conflict, rest assured I have already added the holodeck exercise programs and altered the Squads' training schedules to accommodate them with immediate effect.\"\n\n\"I'm not,\" he said distantly. \"I've received a personal message from the... the Nist Justice Hive.\"\n\nThe announcement almost provoked a discernible reaction from T'Varik. \"The Nist? Why would the law-enforcement agency of a non-aligned world be contacting you?\"\n\n\"They, um, they have apparently been conducting a trial of a Federation citizen, a Terran by the name of Alexander Giger.\" His voice sounded faint, dream-like, even to himself. \"The man had been found guilty by their courts of numerous charges, including multiple acts of murder, theft, terrorism. He has been sentenced to death in ten days' time, on a Nist research outpost on Tau Beta VI.\"\n\nT'Varik nodded. \"Tau Beta is in the sector adjacent to our own, approximately 36.4 light years from our current location; they are studying natural microsingularities in that system, as is a Federation outpost on Tau Beta III. But I am unfamiliar with the individual they have tried and convicted. And I remain at a loss as to your involvement in this.\"\n\nHrelle set aside the PADD. \"It is apparently Nist custom to invite the next of kin of a condemned criminal's victims to witness their execution, as a demonstration of... justice in action. This Alexander Giger is said to be a senior operative in the criminal organisation known as the Bel-Zon, and was allegedly responsible for the attack on the USS Furyk and Station Salem Four.\"\n\nHe didn't need to tell her the rest, about all the deaths that resulted on his old ship and station - including his wife Hannah, Sasha's mother. His first officer knew the rest.\n\n\"Captain,\" T'Varik finally asked, sounding careful with her next choice of words. \"Were you aware of these legal proceedings before today?\"\n\n\"No. I was never contacted, not to bear witness or to participate in any way. I never even heard of this man before today.\" He paused, and then ordered, \"I want you to contact Starfleet Intelligence, Priority Channel One. I want to know everything about him, and this trial. I also want you to get in touch with the local Judge Advocate General's office, to find out what our legal standing is with regards to a member of Starfleet attending such an event. I know relations have been strained between our governments, though the message indicates the Justice Hive would grant temporary visas for all attendees, but I want to know what our side says.\"\n\n\"Captain... do you intend to accept the invitation?\"\n\nHe heard the tone in her voice, knew how she felt about the subject. \"Just get me that information, as soon as possible.\" He rose to his feet. \"Help yourself to what's left of my breakfast, I've lost my appetite.\"\n\n*\n\nSpace, Communications Buoy 6314-558:\n\nSasha Hrelle couldn't stop hearing the creaks that her spacesuit made with each move she made, and couldn't stop thinking that there was a leak, somewhere, despite the advanced safety features in place. Instead, she focused on passing her diagnostic tricorder over the areas on her section of the buoy, and indulging in the conversation du jour. \"I say he's a prince. A prince on his homeworld. Not with any actual constitutional power, of course, it's a ceremonial title, but it would still be highly respected. Prince Kitirik of Qarari.\"\n\nOn the other side of the buoy, scanning her side, Neraxis grunted. \"That has to be the stupidest idea ever conceived. I mean, I love our little bug eater, but... Kit? A prince?\"\n\nSasha wished she could ignore the scratch on her nose. \"Is it more stupid than your idea of him being a master criminal on the run from his homeworld? He wouldn't say Boo to a tribble.\"\n\nThe Bolian was drifting away from the buoy, and hooked one of her boots around a nodule. \"Hey, he was the one who said he and his government 'agreed to disagree'. How else can you interpret that?\"\n\nSasha remembered. A week before, when they had performed their first Away Mission exercise on Luntanu, their Science Specialist Kit mentioned him needing to seek asylum away from his homeworld, and refusing to go into detail. Since then, the speculation as to his reasons reused to go away. She had done some cursory research on his homeworld, but the only recent relevant news she could find on it was about an imminent war they were about to have with a neighbouring planet. \"What do you think, Giles?\"\n\nFrom the nearby shuttle, its hatchway open and its spacesuited pilot sitting on the step like a child waiting for his father to come home and play, Giles Arrington made a thoughtful noise before replying, \"It was a love affair gone wrong. He fell in love with a female, he had to leave-\"\n\n\"Why would that be a problem?\"\n\n\"The Qarari females get together with the males only for breeding purposes; Kit told me. There are strict laws among their people against relationships between the male and female genders, to prevent one gender from dominating reproduction.\"\n\n\"I take back what I said before,\" Neraxis declared. \"*That's* the stupidest idea ever conceived. You really think Kit is the Qarari equivalent of Darom?\"\n\n\"Who?\"\n\n\"From the Bolian epic? Darom and Osega were young forbidden lovers, drawn together despite their families being mortal enemies.\"\n\n\"So, they're your Romeo and Juliet?\"\n\n\"No, Romeo and Juliet's *our* Darom and Osega, you Terracentric jerk! Why do humans always have to compare everything with their own reference points?\"\n\n\"Enough,\" Sasha intervened. \"Eydiir, what do *you* think?\"\n\nThe Capellan was their Medical Specialist and had no reason to be out there, but still needed to log the minimum hours to qualify for Extra Vehicular Activity. She floated down from the far antenna array, as if needing to speak to them face to face rather than over their comlink. \"I think that it doesn't matter. I think that if Kitirik wanted to tell us about his background, he would have. I think that whatever his past, he has since proved himself to be a loyal member of our squad. I think it is dishonourable to be speaking about him on a secure channel without his knowledge. And I think this discussion should end. Now.\"\n\nEveryone went quiet. Then Neraxis picked up with, \"You know, Eydiir, you really need to speak up for yourself sometimes and tell us how you really feel. All this repression can't be good for your bowels.\"\n\n\"But she has a point,\" Sasha conceded with some shame, looking at the helmeted face of her friend. \"Don't you get tired of being right all the time?\"\n\n\"Yes, it can be debilitating. Perhaps if you could carry some of the burden once or twice it would be less so?\"\n\nSasha smiled. \"I'll see what I can do.\"\n\n\"Respected Squad Leader,\" came a new and familiar voice on an adjacent channel. \"Friend Jonas and I have completed our work on the next buoy and await collection.\"\n\n\"We're on our way, Kit, just hang tight.\"\n\n\"It would be most appreciated, Friend Sasha. Like the dorm parties back at the Academy, there is not much here in the way of atmosphere. Kitirik out.\"\n\nSasha grimaced, then asked the rest of them, \"Can we please stop encouraging him to tell jokes?\"\n\n*\n\nDeck 1, Captain's Office:\n\nT'Varik presented her findings like any other report. \"Alexander Giger is listed as a Federation citizen of Terran origin, born in Mojave City, United States on Stardate 9114.05, but very little else is known or proven: no business, no family, no connections. In fact, records indicate nothing of him for the last twenty years, anywhere. Two months ago, the Nist Justice Hive reported capturing him on a vessel with Orion registry, and identified him as a senior operative of the Bel-Zon.\"\n\nSitting nearby, Kami asked, \"Why would the Nist be interested in capturing him?\"\n\n\"Among those killed on Station Salem Four were two senior officials in the Nist Trade Hive, there to secure shipping contracts in the Banaris Sector. Although their Justice Hive recognises Mr Giger's complicity in the murders of the crew of the USS Furyk and the others on Salem Four, it is primarily for these officials' deaths that the man has been tried and convicted.\"\n\n\"So why take him to Tau Beta VI to be executed, and not just do it on their homeworld?\"\n\n\"Given the distance to their homeworld, and that a large number of the next of kin of Mr Giger's victims are Federation citizens, this is being interpreted as a gesture of good will on the part of the Nist; their Justice Hive was apparently surprised by the Federation responding to this gesture by formally protesting the execution of one of their citizens within our space. However, as their outpost on Tau Beta VI is seen as Nist territory, they are legally entitled to carry this out. The Justice Hive did share their evidence against Mr Giger with Starfleet Intelligence and the Federation Bureau of Investigation, and it was apparently convincing enough for the latter to make a failed extradition request.\"\n\n\"But we still don't know for certain that he's guilty-\"\n\n\"He is,\" Hrelle announced simply, never taking his eyes from the image on the PADD before him, the image of an older, pale-skinned human male with receding grey hair, broad nose and a jutting jaw.\n\n\"Are you certain?\" Kami asked.\n\n\"I looked up at this man. I was begging, pleading to him, sobbing like a cub as his men cut off my tail with a blunt blade, on his orders, while he watched. I won't forget his face.\" He dropped the PADD onto his desk with a soft slap. \"And what did the JAG office say about my going?\"\n\nThe Vulcan straightened up. \"They were not exactly sanguine about the idea, given the nature of the visit and the current diplomatic status between the two governments. But it wasn't forbidden, either. Apparently invitations were sent to other Federation citizens, including the next of kin of the crew of your former vessel and those killed on Salem Four, and it was alleged that some have accepted; there are no legal prohibitions against their attendance. The Judge Advocate General's office strongly suggested that if you do go, you do not go in uniform, or take part in any media events that might be turned into propaganda.\"\n\nHe nodded. \"Thank you, that makes it much easier.\" He looked up at them. \"I'm not going.\"\n\nBoth women appeared to relax, albeit to differing degrees, a smiling Kami asking, \"Easier? How did what they said make it easier?\"\n\n\"Because if they had forbidden me from going, I'd never know if I would have gone if I could. Now I do. I've seen far too many people killed in my lifetime. I have no interest whatsoever in seeing another, no matter the circumstances.\"\n\n\"Good for you,\" Kami grinned.\n\n\"A laudable sentiment,\" T'Varik agreed.\n\nHe rose. \"So, let's forget any of this happened and get on with our lives, shall we?\" He sighed. \"T'Varik, would you be so good as to get a cheeseburger for me?\"\n\n*\n\nDeck 1, Mess Hall/Lounge:\n\nAlpha Squad carried their trays to the nearest table, Sasha's belly rumbling in anticipation of the delicious-smelling bowl of beef in black bean sauce and rice in her bowl. She hadn't eaten breakfast in anticipation of her EVA work that morning, terrified of throwing up in her suit; although the internal systems would have did their best to clean up any mess, it wasn't perfect, and the smell would probably linger almost as long as the ridicule she would have received from the others.\n\nAcross from her, Jonas looked to his right and grimaced. \"Watch out, Mr Smug Jerk is here too.\"\n\nSasha didn't even bother to look up, knowing who he was talking about: Jared Miro, Beta Squad's leader, and for a while, the object of Sasha's affection. \n\nOkay, lust. \n\nThey had almost had sex not long ago, when they were on Luntanu engaged in an Away Mission exercise, but Sasha had backed off at the last minute, and Jared said some stupid things about her Dad. Since then, they hadn't so much as exchanged two words together, in those few times when their two squads met together. \"Forget about him. I've moved on.\"\n\n\"Well, he's not doing the same about you,\" Giles informed them. \"According to Rina, he can't get through a day without mentioning you at least once. He's pissing them off.\"\n\nEydiir looked at him. \"You seem incapable of doing the same about Cadet Chaudri. You are always talking about her.\"\n\n\"We're both helmsmen, we take the same courses, study together. So what?\"\n\n\"So nothing. I am merely pointing out the hypocrisy of constantly speaking about someone who complains about someone else constantly speaking about someone.\"\n\nGiles blinked and looked to the others. \"Can somebody put that last sentence into a readable diagram so I can understand it?\"\n\n\"I would be delighted to, Friend Giles,\" Kit offered, setting aside his plate of beetles and grabbing his PADD.\n\nNeraxis nudged Jonas beside her. \"See what you started? There's some weird love pentangle going on here.\" She looked over at Sasha. \"Sash- Hey, Sash, what's wrong?\"\n\nThe others stopped what they were doing when they saw the expression on their Squad Leader's face, as she perused her own PADD, her lunch forgotten.",
        "\"What are you reading?\" Giles asked.\n\n\"N-Nothing...\" But she kept reading, wondering why the Nist government would be contacting her...\n\n*\n\nDeck 4, Training Holodeck:\n\nSasha sat in the command chair at the centre of the simulated bridge, eyes fixed on the viewscreen without actually looking at it, ears hearing to the reports of her squad at their various stations without actually listening to them.\n\nIn front of her, Giles Arrington sat at the helm. \"Approaching Talarian vessel, stopping at four thousand kilometres and holding position.\"\n\nAt her Security station, Neraxis Nemm double checked her readings and announced, \"The vessel's weapons are off-line, and no other vessels in proximity, Captain.\"\n\nFrom his station at Engineering, Jonas Ostrow offered, \"They appear to have suffered a radiation leak from their primary reactor; however it appears to be contained, and there is no danger of a warp core breach.\"\n\nFrom the auxiliary Medical station, Eydiir Daughter-of-Kaas added, \"I am detecting multiple Talarians onboard, with injuries. I am alerting all primary and secondary medical teams to the transporter room with appropriate radiation equipment.\"\n\nTaking the Operations position instead of his usual Science station, Kitirik finished with. \"Respected Simulated Captain Sasha Hrelle, as per procedure I am sending communications to the Talarians offering assistance.\"\n\nStill, Sasha didn't speak, prompting Giles to turn in his chair and silently catch her attention.\n\nShe woke up now. \"Mr Arrington, maintain our position here. Mr Ostrow, divert all available power to the transporters, with secondary power to the industrial replicators, we'll need radiation treatments. Mr Kitirik, clear our shuttlebay to act as a triage area. Ms Nemm, assign security to each medical team. Ms Daughter-of-Kaas, send your teams across when their security arrives.\"\n\nShe let her squad go through the motions, while she continued to sit there, mired in her thoughts. The Nist had the man responsible for her mother's death, for the deaths of the people on Salem Four and her Dad's ship. All these years, years of Starfleet and the Federation promising they would do everything in their power to bring this man to justice, and it takes a foreign, hostile power to do so. And they were invited her to see justice carried out.\n\nHad her father received an invitation of his own, or did they only send it to blood relatives of the victims? If she didn't have this exercise scheduled immediately after lunch, she would have gone to him to ask. As it happens, all she could do was sit here and-\n\n\"Respected Simulated Captain Sasha Hrelle,\" Kit spoke up again. \"Forgive the interruption, but although I have received no formal response to the hails sent, I am detecting internal communications that-\"\n\nSuddenly all eyes were on the viewscreen, as the arrowhead-shaped Talarian vessel with the four aft heat radiating fins suddenly exploded with a bright blossom of white energy, scattering shards of debris in all directions and damaging their own simulated vessel. The explosion snapped Sasha out of her thoughts, as a voice filled the holodeck. \"End Simulation.\"\n\nThe viewscreen and displays went blank, and everyone but Sasha rose to their feet as the fake bridge door opened and Commander T'Varik entered, hands behind her back. \"Alpha Squad: what you have just experienced is an amalgam of a series of incidents which have just occurred along the Galen Border.\n\nThe area has been in dispute between the Federation and the Talarian government. And although the Talarians are technologically inferior, they have compensated with the employment of suicide tactics, such as the one you have just experienced: the use of a false distress signal to lure Starfleet personnel onboard their vessels, whereupon they activate their ships' auto-destruct program. This tactic was responsible for the deaths of 219 Starfleet personnel over a three-day period earlier this month.\"\n\nThe Vulcan allowed Alpha Squad to exchange sober glances with each other before continuing. \"Although we will of course not encounter Talarian vessels in our assigned sector of space, Starfleet Command has instructed us to conduct a series of additional tactical exercises to make you aware of the potential- Cadet Hrelle, are you paying attention?\"\n\nSasha looked up and replied, \"Yes, Commander.\"\n\n\"And were your legs injured during the exercise?\"\n\n\"No, Ma'am.\" The cadet rose to her feet, tugging at the sides of her uniform absently.\n\n\"Very good. As I was saying, Starfleet Command wants to expand on our curriculum to include unconventional scenarios to which you may need to adapt in the future.\" She turned to Kitirik. \"You may also wish to consider adopting a more concise style of verbal communication when you are on duty, Cadet. As laudable as your people's predilection for etiquette is, your commanding officer may not have time to wait for you to honour it before you impart essential information.\"\n\nThe Qarari's throat folds turned red with embarrassment as he replied, \"I understand, Respected Exercise Instruc- I mean, yes, Ma'am.\"\n\n\"And we will also- Cadet Hrelle?\"\n\nSasha looked to T'Varik, \"Yes, Ma'am?\"\n\n\"What exactly is preoccupying you?\"\n\n\"It- It doesn't matter, Commander-\"\n\n\"I will be the judge of that. Please explain.\"\n\nSasha breathed in, feeling her heart race at the thought of it. \"I, ah, received a message from the Nist government-\"\n\nThe Vulcan reacted. \"I see. Your father is on the bridge; go to him now and inform him.\"\n\n\"Did he receive one as well?\"\n\n\"He will explain. Please proceed.\"\n\nSasha looked to the rest of the squad before departing quickly, her heart racing now from anticipation. He must have received an invitation as well! That means they could both go, both go and see that justice was done to the bastard that killed Mom!\n\nDad was on the bridge, conversing with Lt. Abed, and when he looked up into her eyes, he knew why she was there. He nodded back the way she came, stopping to mutter something to the ship's Security Officer Lt. Abed before following her out, down the corridor and into his office. \"You heard from the Nist?\"\n\nShe nodded.\n\nHe reached out and took her hands in his own, squeezing warmly. \"I'm sorry, Sash. I should have realised, should have checked with you sooner. It must have been a shock for you.\"\n\n\"It didn't quite hit me at first,\" she admitted. \"It was so unexpected, no warning at all. I never even knew they had found someone.\"\n\nHis face sobered. \"Neither did I, until I received my own invitation.\"\n\n\"And are they sure that he- he-\"\n\nHis eyes darkened. \"Yes, it's definitely him. I contacted Starfleet Intelligence for further information. They sent an image. I... recognised him.\"\n\nShe darkened. \"A part of me was worried that they might have someone innocent.\" They paused, looking at each other, Sasha waiting for him to respond, before finally feeling prompted to ask, \"When are we leaving?\"\n\nHe blinked. \"Leaving?\"\n\n\"Of course! We don't have much time. We can take your personal shuttle, you said it's been uprated to reach a sustained Warp 9.5, I checked the coordinates, we could get to Tau Beta in five days-\"\n\n\"Sasha...\"\n\n\"And I'm sure Commander T'Varik will provide my curriculum so I won't miss out on my studies-\"\n\nHe backed away, looking confused. \"Sasha... we're not going.\"\n\nNow it was her turn for confusion. \"Why not? We have permission, we can get there in time. There's nothing stopping us!\"\n\n\"Nothing... except it's wrong.\"\n\nHer jaw dropped. \"Wrong? Are you really saying it's wrong to want to see the man who murdered Mom - your wife - and all the innocent people on Salem Four and the Furyk, face justice?\"\n\n\"You think this is justice, Sasha? Going to see a man's life taken from him by the state?\"\n\n\"Yes!\" She couldn't believe she was having this conversation with her father, the man who said he'd loved her mother with all his heart! \"That bastard took Mom's life, took the lives of scores of people, and for what? For profit! He deserves to be punished!\"\n\n\"And you think it has to be by taking *his* life?\"\n\n\"Of course!\"\n\nHe was staring back at her, like she was the one who was in the wrong - and she suddenly, fiercely hated him for refusing to understand her. Softer now, he continued, \"Sasha, this isn't what your mother would have wanted.\"\n\n\"How would you know?\" she demanded angrily. \"She was MY mother longer than she was ever YOUR wife!\"\n\nHe froze, clearly hurt by his words, before reaching up behind his neck and under his collar, working at something underneath. He drew his hands down again, this time carrying with them a thin gold necklace with a matching symbol dangling from it. He held it out for her to see. \"This was hers; I found it among her possessions, the same time I found your old doll. Do you recognise the symbol?\"\n\nSasha barely looked at it, at first thinking it was just a stylised side profile of some four-legged animal. Then she remembered - but said nothing.\n\nHe continued regardless. \"It's Chai, the Hebrew symbol for Life. Your mother used to say that Life Always Matters. That it was sacred, and not to be taken lightly. And certainly not to be taken needlessly.\n\nSasha... as terrible as this man's crimes were, and as much as we feel he might deserve to suffer and to die because of them, his execution will serve no purpose. It will not bring the dead back to life. It will not help them rest easy. It will not deter others. It will not reform her murderer. It will not even take away your pain at the loss of your Mom; I can promise you that much.\n\nYes, Hannah was your mother longer than she was my wife. But I was intimate with her, in ways a child wouldn't understand. And I swear to you on my life that she would not want anyone else to die for her. Or for you to feel such hate for another living being that you would want them dead.\" He raised the hand with the medallion closer to her. \"Take it. She would want you to have it-\"\n\nShe slapped away his hand, sending the medallion across the room.\n\nHrelle looked shocked, as shocked as Sasha felt. But she clung to her anger like a lifeline, refusing to surrender. \"I don't need your permission... Esek. I'm a legal adult. I can vote, I can drink, I can travel, I can fuck. And I can go see justice done. Even if you can't.\"\n\nHrelle lowered his emptied hand, his expression... frightening. \"You're also a member of Starfleet, subject to the orders of those in command. You'll need approval to leave this ship. Consider that denied.\"\n\nSasha felt herself shaking. \"Then I'll resign.\"\n\nHe slapped his combadge in response. \"Commander T'Varik, report to my office immediately!\"\n\n\"Acknowledged.\"\n\nHe slapped the comlink shut again, still glaring at Sasha. \"Do it, then,\" he countered simply, coldly. \"Resign. And as per regulations, you will need to undergo the requisite administrative procedures before being dropped off at the nearest Starbase. By then, the execution will have passed. You'll have thrown away everything you've worked for, for nothing.\"\n\nT'Varik walked into the room, just as Sasha asked through gritted teeth, \"Why don't you just admit the real reason you won't go? It's because you're scared. Scared to face him because of what he did to you. You're nothing but a fucking coward!\"\n\n\"Cadet,\" T'Varik spoke up sharply as she drew between the two of them. \"Regardless of the circumstances, you will *not* speak to a superior officer in this way. Is that understood?\"\n\n\"Yes, Ma'am.\"\n\n\"As a matter of fact, Commander,\" Hrelle commented coldly. \"A moment ago, because I refused permission for her to leave the ship and attend the execution, Sasha threatened to resign from the Academy, so that order might no longer apply to her.\" He looked at Sasha again. \"Well? Are you resigning, Cadet?\"\n\nShe was taut as piano wire.\n\n\"You were asked a question, Cadet,\" T'Varik reminded her.\n\n\"No, Commander,\" she finally replied, deliberately addressing the Vulcan and not Hrelle. \"I'm not.\"\n\n\"Then this matter is settled,\" Hrelle concluded. \"T'Varik, ensure the Cadet returns to whatever is scheduled for her now.\"\n\n\"Yes, Sir. Cadet, I believe Alpha Squad is in the Study Room preparing for the Astrophysics Exam?\"\n\n\"Yes, Ma'am.\" But she shot her father - her stepfather - an icy look as she left with T'Varik. Until she saw him retrieve her mother's necklace, saw the expression in his face. And pangs of guilt stabbed her in the stomach. Apologise, she told herself. Don't go like this.\n\nShe still left.\n\n*\n\nSomewhere Else, Six Years Ago:\n\nFor someone with a lethal weapon shoved hard against his snout and threatening to clean out his sinuses, Esek Hrelle - former Starfleet Captain, former husband and father, current slave in the bowels of an unnamed asteroid - was remarkably cool.\n\nPartly it was due to the residual effects of their captors' neural truncheons, stunning them when they were caught during their latest escape attempt. Partly it was due to an attempt to maintain leadership within his cell, a responsibility he had accepted reluctantly as the price for a chance to escape this hell. Partly it was due to a deliberate drive to stay calm and not antagonise their captors.\n\nBut mostly it was just due to it being too damn cold here. The Breen, permanently encased in their bulky brown refrigerated suits and beaked, visored helmets, cared little for the ambient temperatures, and even less for the comfort of their slaves.\n\nHrelle and the rest of the workers of his cell stood clumped together in the loading bay, the hatchway to the newly-arrived freighter now closed off to them, as the Breen stood in a line before them, weapons raised in a grouping uncomfortably reminiscent of a firing squad.\n\nUnless Hrelle could convince the Breen otherwise. \"Thol, this isn't necessary. I was responsible. The others are not. Punish me, not them.\"\n\nThe Breen spoke in reply, and though it partly came across as electronic gibberish even with the Universal Translator, Hrelle's superior hearing and Starfleet training made it at least mostly discernible. \"veg[0248vg4v2vlVnaa Agreed Punishment Is Required.\"\n\nHrelle nodded, expecting this. Since he had been voted into command of this group, he had managed to organise them into a unit that had a genuine chance of planning and attempting an escape. And they had almost made it today. Little was known about the Breen - but what was definitely known was that they were merciless. So today was his day to die.\n\nHe was ready for it.\n\nUntil Thol spoke to his soldiers, who moved as one, grabbing three of the smallest, thinnest, oldest members of the cell, dragging them into the centre of the bay, forcing them onto their knees - and blasting the tops of their heads off.\n\n\"NO!\" Hrelle cried out, reaching for Thol, despite the weapon still pointed at him.\n\nBut then he felt Peran Sayr, a Bajoran with curly black hair and scars on his lean face that seemed to radiate from the tight column of ridges on his aquiline nose, resting a callused hand on Hrelle's forearm. \"You can't help them, Captain. They are in the Prophets' hands now.\"\n\n\"Dammit, Sayr-\"\n\n\"Captain,\" Peran said again, his voice soft and careful, his grip tightening. \"Do not antagonise them any further. Stay alive.\"\n\nHrelle nodded, grateful for the man's counsel. Peran was a Ranjen, a monk among his people, and had been captured and sold into slavery by Orions while helping seek a settlement for his fellow refugees following the occupation of their homeworld by the Cardassians. \n\nHe was a quiet, modest member of their cell, but had quickly proved himself strong in resolution and support, not just for their collective efforts to escape, but for Hrelle's individual efforts to cope with his confinement and not give in to despair. Hrelle had never been one for spiritualism, but he appreciated the succour that Peran provided. Especially now.\n\nThen Thol announced, \"c54f3-3=]'Clear the Debris And Return To Your Pen No Rations Today.\"\n\nHrelle stared at the clump of emaciated bodies lying in a bloodied heap, limbs entwined in some parody of a group hug. Then he motioned to his people, to gather the bodies and carry them with as much dignity as they could manage to the recyclers, while others gathered cleaning equipment for the mess.\n\nThe door to the freighter remained tantalisingly close.\n\n*\n\nUSS Surefoot, Secondary Hull, Deck 11, Ventral Sensor Access Room:\n\nHrelle sat at the bottom of the vertical shaft as if it was an oubliette, marvelling at the quiet. It wasn't total quiet, of course, and could never be, not without the aid of sensory deprivation bafflers or a total power failure. But it was quiet enough, and after he gave an order to the ship's computer, the lights around him went out.\n\nThe base of his spine where his tail was once rooted ached, not so much a phantom pain as a chronic ache from years of wear and tear that mere months of therapy couldn't just remove. The tips of his fingers where they had removed his claws ached too. He began to accept that it was all in his head. Then his head ached, as if wanting to join in.\n\nHe heard sounds from above, echoing through the Jeffries tubes and corridors, before he caught her scent. He considered calling up to her, telling her not to bother coming down and that he was okay, and just wanted to be left alone for a while. But he knew the futility of that course of action, and so waited, smirking as he heard her bang her foot along the way and curse.\n\nHe looked up to see Kami descending on the ladder built into the vertical shaft, her tail swishing like a cub on the playground, and now Hrelle smiled. He also couldn't help but notice that she was in the minidress version of the uniform - and that she wasn't wearing any underwear again - and wondered if that was intentional, another distraction for him to help him open up to her.\n\nHe stayed sat on the floor of the access room, his back to a wall, looking up at her. \"What can I do for you, Counselor?\"\n\nKami Shall turned to him, both of them able to see perfectly well in the level of light present. \"Wow, this was *so* worth coming down to. The Oberth. Who was this starship class named after, a Surrealist? What an idiotic design, separating the hulls.\"\n\n\"It's mostly a safety feature, since the warp core and antimatter are stored in the secondary hull, as well as the photon torpedoes; in the event of an emergency, the secondary hull can be detached and the primary hull fly away via the impulse engine. The distance from the equipment in the primary hull also increases the performance of the sensor arrays in the secondary hull-\" He stopped and asked, \"When did you stop listening to all that?\"\n\n\"Just after 'safety feature'. But don't worry, sweetie, I'm sure it was all simply delightful.\" She slid down beside him, her tail snaking up to slip onto his lap like a pet seeking attention. \"So, T'Varik told me about the argument you had with Sasha. Sounded savage.\"\n\nHe didn't respond.\n\n\"You're not used to it, are you? It's been intense for you two, but until now you've always been on the same side. Must have been a shock.\"\n\nHe stayed silent.\n\n\"I used to get into such arguments with my father's father,\" she continued. \"He was one of those old-timers from the Caitian Planetary Navy days, and always talked about how much better the planet would be if we seceded from the Federation. Mad bastard. Never mind all the incredible advantages we had being a Federation member, he just wanted to fly the old flags and wear the old uniforms. We butted heads so often. But we still loved each other.\"\n\nNo response.\n\n\"Seven Hells, I've got more words out of my last furball. How about getting something from you other than technobabble?\"\n\n\"I'm scared,\" he admitted.\n\nShe stopped and looked at him. Her tone became more sympathetic, more professional. \"And what's scaring you, Esek?\"",
        "He breathed out slowly, his fingers absently playing with the furred tip of her tail. \"That wasn't my little girl up there.\"\n\n\"Of course it wasn't. She's eighteen, she's grown up, she has her own opinions on things.\"\n\nHe remembered his personal log from that morning, noting the same thing - and being glad for it at the time. \"It wasn't just that. It was the rage, the fury in her eyes, her voice. She really wants to see Giger die. Why wasn't this covered in her psychiatric evaluation?\"\n\n\"What makes you think it wasn't?\"\n\nHrelle looked at her. \"You knew how she felt? Why didn't you tell me?\"\n\n\"Because it's none of your damn business, Captain Sir. She's entitled to her privacy, like you and the rest of us.\"\n\n\"And no one thought it important enough to address with her before now?\"\n\n\"We all have little bits of savagery in our psyches, and luckily for us, they usually don't surface. Unfortunately, the past has two big bad points about it: one, it can't be changed, and two, it can pop back into the present without warning and kick you in the balls. And that's what's happened to both of you.\"\n\n\"But I've managed to put it behind me.\"\n\n\"I hate to point out the obvious, but you're older, and you've had a lot more experience at doing that. Sasha hasn't. But give her time. She's strong. She'll pick herself up again.\"\n\n\"Is that what *you* do when you're kicked in the balls?\"\n\nKami smirked. \"My balls are made of pure neutronium. Nothing drops me.\" She patted him on the knee. \"Now let's get back to the bridge before T'Varik thinks we're rutting down here.\"\n\n*\n\nDeck 2, Study Room:\n\nSasha entered the Study Room, as Alpha Squad looked up from their PADDs and terminals, Eydiir rising in concern. \"Is everything okay, Sash?\"\n\nSasha stopped at the doorway and nodded, stepping back to look out in the corridor and ensure no one else was approaching to hear what she had to say. Then she entered fully, grabbing a chair and drawing it into the centre of the room before straddling it backwards, looking to each of them in turn before focusing on a bemused Giles. \"I need your help. All of you really, but yours especially, Giles.\"\n\nHe blinked, looking to the others before focusing on her again. \"Mine? Sure. But what for?\"\n\nShe couldn't believe she was going to say this. \"You know the Captain's personal shuttle in Hangar Bay 2, the Sureswift? Do you think you can fly it?\"\n\nTO BE CONTINUED..."
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "science fiction",
        "space",
        "federation",
        "caitian",
        "starfleet",
        "starfleet academy",
        "starship",
        "alien11111",
        "fanfiction"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-the-nist-sanction-ch-01"
}