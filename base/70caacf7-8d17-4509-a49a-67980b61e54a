{
    "title": "Senior Year Memories Ch. 21",
    "pages": [
        "(Usual Disclaimer Time: Even though this story almost entirely takes place in a high school setting, all the characters in this story are 18 years old or older, and since we're living in the wide wonderful world of porno-land here, where clich\u00e9s roam free and things might get a little unrealistic from time to time, please remember it's all in good fun. This story is highly serialized, and though it's not 100% necessary to have read the whole story up until this point to enjoy the content of the chapter, it's definitely advisable to understand some of the ongoing plots.)\n\n(Author's Note: I'd like to again thank MisterWildCard for acting as a second set of eyes on this chapter and for his honest editing and fantastic suggestions. Please check out his story, \"Brooke's Wild Ride\" in Erotic Couplings, as it acts as a canonical side story to Senior Year Memories starring Regan Hills High's favorite blonde cheerleader.)\n\nPreviously, on Senior Year Memories: 18-year-old Ryan Collins' quest to do something nice for each of the nineteen women he's had sex with this senior year before Christmas has continued at a swift pace. With the help of cheerleader Kaitlyn Pruitt, Ryan was able to get shy and meek band geek Sarah Kent a spot on the cheer squad for her impressive dance skills. A hasty book drive that gathered together hundreds of new books for the library brought cheer to librarian Mrs. Sullivan and her aide Marie Halpern. Looking to particularly thank band geek Hope Harris, who helped inspire this Christmas giving season, Ryan went to Hope's crush, color guard captain Daphne O'Connell, and attempted to convince her to go out with Hope. Daphne was resistant to the idea until Ryan convinced her to give Hope a chance with the power of hot sex and light bondage. With seven names checked off his list for good deeds, who will Ryan help next?\n\nNames Remaining on Ryan's Christmas List: Addison, Brooke, Haley, Jade, Josie, Kaitlyn, Mallory, Mrs. Lynn, Nadia, Noa, Rose, Sophie\n\n***\n\nWalking down the hallways of Regan Hills High School after having had hot, steamy sex with a number of the girls in the senior class was a surreal experience. A year ago, I'd have known nothing but the surface details about most of them, seeing them for little more than the stereotyped images I had of each of them in my head. Now as I walked down the hall, passing by so many smirks and knowing glances from girls I'd been intimate with, I was, as always, impressed by how much things had changed. I knew more about these girls and more sides of them than I think anybody else in school might've.\n\nWillowy brunette band geek Hope Harris, with her big glasses and goofy smile was utterly sweet and one hell of a reporter for our school paper, the Puma Press, but having gotten her alone I was one of the few to know that she was a freak for bondage and a romantic at heart.\n\nConservatively dressed in a warm winter sweater and long skirt, Sophie Cusack looked on the surface like an uptight religious girl, and in most respects that was true. Only Josie and I knew that underneath her cold exterior she was sexually curious and a great artist, and that she had one of the most insane bodies in school.\n\nBlue-haired and motormouthed, gamer Izzy Barnes looked like she was interested in little else other than video games and talking a mile a minute, and though those were important to her I knew her to be possibly the most energetic and sexually voracious girl in the entire school.\n\nPetite, blonde and pigtailed cheerleader Brooke King might have been the greatest surprise of all. Her face was so cute and sweet and so stereotypically \"cheerleader\", you could have easily mistaken her for a na\u00efve airhead. That would have been a great mistake, for not only was she incredibly bright and perceptive in her own uniquely odd way, she was also probably one of the filthiest, most inventive fucks in the entire school. If you'd told me a year ago she'd be one of my best friends, I'd have said you were nuts, but by this point nothing seemed nuts to me anymore.\n\nIf my year had ended now and I hadn't had sex with any more girls other than them and the others I'd already been with this year, I'd have died a more than happy man; shit, if anyone found out what I'd done, I'd probably have died a legend. That being said, it was hard not looking at the other girls in my class and wondering just how many of them also had wild sides.\n\nSlender blonde overachiever Chloe Marcus always looked like she had a stick up her ass; might she secretly want something else up there too?\n\nThere were rumors that quiet and awkward Darla Cohen was hiding some of the biggest tits in school; how interested might she be in seeing the biggest cock?\n\nWith short, choppy black hair and one of the biggest smiles in school, class clown Doreen Bell was slightly chubby and all curvy. She looked wholesome, but the way she eyed me said she might have a dirty side.\n\nGraceful and arrogant theatre girl Faith Serrano was beautiful and said to be a great singer, but what would it take to make her scream?\n\nClass president Sabrina Singh was as stunning as she was a hard worker, but something told me that when it came down to relaxing, she had all the potential to be a true freak in bed.\n\nGirl after girl after girl, each of them looking the perfect high school archetype, each of them having their own private lives. I wasn't predatory, and I had no expectation that I would enter any of their lives, but if the opportunity came up, well...\n\nI shook my head. I could speculate about this for hours, days, weeks, months, and if I got lost in that dream I wouldn't be able to keep to my schedule, and with as much as I had on my plate these next two days I couldn't deviate too much. Tomorrow was going to be a problem and a half with the people I had to get together, but today was going to be two easy tasks.\n\nAt least, it was supposed to be two easy tasks.\n\nI kept pace down the hallway until I found the girl I was supposed to meet today.\n\n\"I haven't kept you waiting too long, have I?\" I asked.\n\n\"No,\" Jade Alvarez confirmed. \"You're right on time.\"\n\nWith silky black hair, caramel skin, insane curves and a pretty face, Jade was definitely in the running for most beautiful girl in the school (even though that was a very, very competitive list), but what put her over the top was her innate and overwhelming kindness. I'd known that she was into volunteering and charity work for a while, but after I'd called on her for aid in my insane Christmas scheme of getting a major gift for each of the 19 women I'd had sex with before December, she was perhaps the most enthusiastic participant. Already she'd put her networking skills to arranging a book drive for our library, and if her connections at the gym in Blair Valley were as good as she said, she'd be a great help for another task.\n\n\"So, were you able to get it?\" I asked.\n\nShe pulled the envelope from her backpack and pressed it into my hands. \"I'm a woman of my word; of course I got it.\"\n\n\"Good, thanks,\" I said, looking at the envelope's contents.\n\n\"You just need to have her fill in her name and sign it, and it's all hers. I'll need the money when you get the chance...\" Jade said.\n\n\"I'll get it to you,\" I said.\n\n\"Good, 'cause it didn't come cheap,\" Jade replied.\n\n\"I'm good for it. Unless you accept barter for sexual favors?\" I joked.\n\n\"Tempting, but, I'm gonna need the cash,\" Jade replied.\n\n\"You'll get it,\" I said.\n\n\"Thanks,\" Jade said, cocking her head, letting out an exhausted breath. As someone usually full of sunshine and energy, seeing her like this was surprising.\n\n\"You alright?\" I asked.\n\nShe rubbed a muscle in her neck. \"Fine. Just wishing more people showed as much Christmas spirit as you.\"\n\n\"Oh?\"\n\nShe sighed, biting her lip and looking up and down the hall. There was a look on her face that I'd become all too familiar with, that look people have when they're not sure whether or not they want to confide in you but ultimately figuring that they don't have much to lose. \"I'm supposed to help arrange for some volunteers for our Christmas Eve event down at the Open Hands Shelter in Blair Valley.\"\n\nJade had mentioned before that she worked with them, an organization set to help families who'd fallen on hard times, but I didn't know she had that kind of authority. As someone who'd had to gather volunteers for something much less noble, I understood what kind of stress she must have been under.\n\nI said, \"Oh, cool!\"\n\n\"Cool for you, maybe, not so cool for everyone else. We got a lot of people to help and not a lot of people to help them, and I do what I can but, you know, it's a little frustrating,\" Jade said.\n\nI'd already told her I'd consider helping her, but I think it was this moment when I knew for sure how I'd be spending my Christmas Eve.\n\n\"I'll be there,\" I said.\n\nJade smiled, faintly. \"Thanks; I really appreciate it. Now if only I had a dozen more of you, then we'd be in business.\"\n\nThinking about her state, I told myself I'd have to do something about that.\n\nThe bell rang. Jade looked up at it.\n\n\"Gotta run,\" she said. \"Thank you, again. I'm not giving up on finding people yet, but it means a lot that you want to help out.\"\n\n\"Anytime,\" I said.\n\nShe then pointed at the envelope still in my hand. \"And let me know what she thinks about it, okay?\"\n\nPatting the envelope, I laughed. \"Thanks. Fingers crossed, I think she'll love it.\"\n\n***\n\n\"God, fuck, fuck me harder!\" Noa Kanzaki demanded.\n\nWith our pants around our ankles, my cock buried deep in her tight little pussy and her hands braced against the wall of the gym, I proceeded to do just that. Though 5'6\" and tiny in her own particular way, Noa Kanzaki was almost pure lean muscle. I'd had sex with more than a few girls who could put me through my paces in the past few months, but none of them quite had the skill and raw physical strength of Noa. Even though I was taking her from behind, she was still very much in control, fucking back against me harder than I did into her.\n\nWe were in a disused, barely traveled alley beside our school's gym, which allowed us a fair bit of privacy during our between class break, but not as much as I'd have liked. Anyone could have stumbled upon us at any moment, which made me keep quiet. Noa on the other hand was unrestrained, seemingly fearless of getting caught. Considering the way she'd occasionally flash her bra at me when we were in the hallways, I was beginning to understand just how much of an exhibitionist she truly was.\n\nShe looked back at me, tossing her short and choppy black hair over her shoulder. She smiled a winning smile, her delicate Japanese features only accentuating her unconventional prettiness.\n\n\"Fuck, you've been... working out since... LAST TIME!\" she grunted triumphantly as I fucked her.\n\nSmiling, I reached down, pulling her comfortable t-shirt over her six pack abs, then over her modest yet no less sexy B-cup breasts. As usual, Noa was a contradiction of the best variety, her rough and tumble jock exterior hiding a girl who secretly loved wearing the girliest of girly bras. Today it was a lacy blue number with a front I was all too happy to scoop her tits out of. Her nipples already rock hard, I rather enjoyed flicking and pinching them as I fucked her.\n\n\"I knew I had to, in case we ever met again,\" I said smoothly as I fucked her. We only had so long in this break, but if we were going to be late for class, we were going to be late for class. I didn't think I could stop Noa Kanzaki when she was horny.\n\nI had my doubts that even divine intervention would stop her.\n\n\"Oh, good, because I've been needing some serious cock!\" she groaned, pushing me off of her before turning around so we were facing each other. She kicked one leg out of her pants, allowing her to better spread her legs.\n\nI got the hint, pressing her against the wall and sliding my cock back into her hot folds, pushing into her harder, deeper. I didn't know if Noa had been with anyone else ever since I helped her lose her virginity back in November, nor did I honestly care, but she was as tight as ever and even more energetic. She was more confident in knowing exactly what she wanted, and I couldn't have been happier for her.\n\nI fucked her harder and harder against the wall, looking down into her pretty eyes, living for the sounds of unrestrained pleasure she made as I pounded her harder and harder. The way she looked up at me with such satisfaction, the way she cooed when I ran one of my thumbs over a nipple as I pushed in harder than harder. It was too much. I couldn't stop myself from leaning down and kissing her pretty lips, kissing her and making out with her as our hidden fuck continued.\n\nI wouldn't be lying if I said I was grateful when she started to shudder against me, and dropping my fingers to her clit as I pistoned in and out of her tight, wet cunt only pushed her over the edge. With a cry of unrestrained pleasure, she came, her body tensing up against mine and her pussy squeezing me, hard, so hard that it was only seconds before I was emptying my swollen balls deep inside of her.\n\nI leaned against her for a moment, smiling and catching my breath, the two of us exchanging quick, passionate kisses.\n\n\"We should get ready for class soon,\" Noa said.\n\n\"Yeah,\" I agreed, begrudgingly pulling out of her and pulling my own pants back up. I rather enjoyed watching her getting dressed again, pulling her panties and pants up over her own dripping pussy while she kept her firm, proud breasts out in the air to be covered last. She may have had a harder body than a lot of the girls I got with, but that didn't make her any less sexy.\n\n\"So... I take it you liked my Christmas present?\" I asked.\n\n\"Liked it?\" Noa laughed, patting the envelope on top of her set aside backpack. \"A one year paid membership to the Blair Valley Advanced Training Gym? Have you seen the parkour obstacles and climbing walls they've got there? Yeah, I liked my Christmas present. I fucking love it!\"\n\nTo emphasize this, she wrapped an arm around my neck and pulled me in close for a quick flurry of fierce kisses.\n\n\"It didn't set you back too much, did it?\" Noa asked, a slight hint of concern breaking through her smile.\n\nEven though Jade's contacts had gotten me a fair discount on this present, it still wasn't that cheap, especially with a lot of the other things I had planned.\n\n\"It's Christmas, so, nah,\" I deflected.\n\nNoa caught this deflection much quicker than I'd hoped, crossing her arms under her sweet tits. \"Seriously?\"\n\n\"I'll be fine,\" I said.\n\n\"You know if you need some extra cash, my dad runs a restaurant, I could probably get you some after school hours,\" Noa suggested.\n\n\"I'll be fine,\" I repeated.\n\n\"You'll be stubborn is what you'll be,\" she said, shaking her head.\n\n\"I'm not really looking for a job right now. I'll be fine,\" I repeated, this time with an amused smirk.\n\nStroking her chin thoughtfully, Noa said, \"There is another way...\"\n\n\"Huh?\" I asked.\n\n\"A friend of mine from my self defense class, she's been on the lookout for some help with a... project, lately, and she'll pay well,\" Noa said.\n\nShe didn't have to lay out exact details of what she was talking about, but her meaning was clear.\n\nI picked up my backpack and slung it over my shoulder. \"Flattered, but I'm not whoring myself out.\"\n\n\"It wouldn't be that. Well, it wouldn't exactly be that. She's really nice and really pretty and really does need the help and I think the two of you'd have some fun with each other, and the money would be good,\" Noa explained.\n\nIf she was telling the truth, and I had no reason to take Noa for a liar, the idea did sound tempting, especially since I really could've used the money.\n\n\"I'll think about it,\" I said.\n\n\"Good,\" Noa replied. We were both dressed and about as cleaned up as we were going to get. Playfully, she took my hand. \"So, doing anything after school?\"\n\nThough another furious fuck with Noa Kanzaki sounded tempting, I had to break it to her. \"Actually, I do.\"\n\n\"Oh,\" she said, sounding more than a little disappointed.\n\n\"I'll make it up to you soon?\" I suggested.\n\n\"You better,\" Noa smirked back, kissing me quickly. \"Whoever she is, she better be really special.\"\n\n\"Well...\" I trailed off.\n\n***\n\nThere were few pleasures in life I'd found quite as special as lying down naked on my favorite teacher's desk while she sat on my face and sucked my cock in a slow, leisurely 69.\n\nWhile Noa did her best to wear me out, sex with Mrs. Lynn was unhurried and oh so sweet. She sucked on my cock with nice, long strokes, taking almost my entire length down her throat with each bob. I in turn did my best to return the pleasure, sucking and licking her pussy with a similar pace, locking my lips around her clit and making her moan around my cock. We'd been at this for god only knew how long, but since it was after school and we had the classroom entirely to ourselves, we pretty much had all the time in the world.\n\nWith her luscious, curvy body pressed against mine, I was in heaven. Sure, I missed her usual dirty mouth with my cock stuffed so far down her throat (while usually rather kind and proper, she loved to trash talk students and teachers when we fucked, \"letting off steam\" she'd say), but I was still having quite a bit of fun pulling such a variety of sexy sounds from deep in her core.\n\nShe was starting to tense up. I could really have just backed off then, let her ride the swell down and then gone back up for an even bigger orgasm, but patience was never one of my strongest suit.\n\nI went in for the kill.\n\nLicking and fucking even harder on her clit, I reached up around her ass, spreading her cheeks apart and fingering her tight little hole. Mrs. Lynn always had a really sensitive asshole, and pressing a couple fingers inside usually pushed her over the top.\n\nThis was definitely one of those times. Though my cock was still deep down her throat, she cried out as best she could, moaning and thrashing above me in orgasm as I kept eating her pussy and fingering her ass harder and harder. Her juices flooded my face and I licked them up as if my life depended on it, savoring every drop of her sweet, sweet cream. As she began to tire, the last of her pleasurable twitches slowing, I slowed my pace and let her come down.\n\nMrs. Lynn, however, didn't have any intention of coming down. She attacked my cock with greater fervor, bobbing her head faster, jacking me with her hands as she sucked me with those soft, sexy as fuck lips of hers. Once she got to the head, she circled her tongue around it, taking her time and truly driving me wild.\n\nEvery girl and woman I'd been with since this year began brought her own unique something to the table, but I had to say this for older women: they had the experience and knew how to use it. Mrs. Lynn took command of my cock like few others could, touching me in ways that sent a jolt of pleasure up through my core.\n\nWhen my orgasm came, it was one I barely had any control over, filling her mouth with shot after shot of cum. As ever with her, it felt like a flood that would never end, and despite her best efforts to suck every drop down, I could feel some leaking down her lips and my cock. As the waves of pleasure that washed over me began to fade and the flow stopped, Mrs. Lynn took to kissing my cockhead, licking the few remaining dribbles of semen that escaped.\n\nFinally satisfied, she swung her leg over my body and turned around, straddling my now soft cock so she could look down at me. With impressive curves, even more impressive DD tits (with oh so delectable and very hard nipples), and a pretty face framed by her short, blonde and currently very mussed up hair, Mrs. Lynn would've looked like perfection to me as is. With that smug smile on her lips though and the slight dribble of cum down her chin that splashed onto her right breast, she somehow managed to improve even on perfection.",
        "\"Good?\" she asked, rocking her hips back and forth on my cock. Her pussy lips rubbed up against me and, even in my softened and oversensitive state, felt pretty good. I knew she wanted to bring some more life from me so I could fuck her properly, but even with her impressive skills it would take a moment or two.\n\n\"You know it,\" I said, pointing to the cum on her tit.\n\nGiggling, she scooped it, and the trail on her chin, up in one finger and sucked it down luxuriously. \"Better than the high school slut I tasted on your cock?\"\n\n\"How'd you know she was a high school slut?\" I asked, curious.\n\n\"I didn't, 'til you confirmed it,\" Mrs. Lynn said, arching an amused eyebrow.\n\n\"Oh,\" I replied.\n\n\"So, better or worse?\" Mrs. Lynn taunted, wiggling her ass from side to side and making those luscious tits of hers jiggle ever so wonderfully.\n\nSince I never liked to compare the girls I'd been with when I was with another (except maybe for the occasional pillow talk fun with Josie), I played it diplomatically. \"You know, when you're doing that on top of me like that, I don't think it's a fair contest, exactly.\"\n\nMrs. Lynn laughed, then leaned down on top of me. Her breasts pillowed against my chest, she spoke in my ear in a husky voice, \"What can I say? I enjoy winning.\"\n\nShe could have pressed the matter and maybe even gotten me to break, but instead she leaned in for a kiss. Though I could still taste my own cum faintly on her lips, I didn't mind one bit. Making out with Mrs. Lynn, her naked body pressed against mine, our hands roaming over each other, it was one of the greatest pleasures in life and I wasn't going to argue about any element of it.\n\nAfter all, it made staying after school all the more worthwhile.\n\nI'd come to Mrs. Lynn's classroom after school, unannounced, to bring her my Christmas good deed, namely the offer to take on and help tutor a couple more students. Though tutoring Kaitlyn had so far involved more hot sex than tutoring, her grades in Mrs. Lynn's history class had improved sharply, and since I knew students excelling made Mrs. Lynn look better to the administration, I wanted to do whatever it took to help her out. It would stretch my admittedly limited free time even thinner, but it would be worth it to make her happy.\n\nThis was supposed to be one of the easier, less strenuous tasks on my Christmas list, the one that would allow me to put most of my mental focus toward figuring out just how I'd deal with the mess of people I had to arrange the next day (and think over all of the ways it'd likely explode). I was supposed to go in and get out, no more than a few minutes, tops.\n\nOne look at Mrs. Lynn, though, told me that that was out of the question.\n\nAs was often the case when I entered her room after school, the shutters were soon drawn and the door locked, and our clothes flying off as she took control. I made my pitch, and she accepted with wild enthusiasm and, well, once we got on top of her desk I think you know how the rest of it turned out.\n\n\"You don't think I'm being a bitch, do you? You know I actually like almost everyone here... it's just sometimes, I need to fucking vent,\" Mrs. Lynn said, taking a break in our makeout session without ceasing her gyrations against my hips. Her efforts were doing pretty well, as I was already beginning to reharden.\n\n\"If you are, I think you're doing it just to have some fun because you lead a stressful fucking life and you need to cut loose somehow. Between a bunch of students who drive you crazy, a husband who neglects you and kids of your own? I think you're entitled to be a bitch every so often,\" I said.\n\nMrs. Lynn smiled, kissing me nice and deep. \"You may be a dirty boy, but you're also very sweet. Thank you, as always, for the perspective.\"\n\n\"Any time,\" I said, kissing her back.\n\nSmiling, she got off of me, sliding off the desk and pulling me to the edge. Taking my juice-slickened cock between her tits, she pressed them together and gave me a slow, sweet tittyfuck that would have me hard again in no time.\n\n\"Still, it doesn't solve your problem,\" Mrs. Lynn said.\n\n\"What problem is that?\" I asked.\n\n\"High school girls. Don't get me wrong, they're nice and fun and have some really tight bodies, but if you only fuck them, your experience can only go so high. Spend some more time with older women, however, and you'll learn so, so very much more,\" Mrs. Lynn said.\n\n\"I have a lot of fun with you, and I think I've learned a lot from you,\" I said, without acknowledging that I'd had some more fun with both Tori's mom, Lauren McNeil, and our school's librarian, Mrs. Sullivan, both older women whom I'd had an amazing amount of fun with.\n\nLooking down at my now completely hard cock, Mrs. Lynn kissed it and got up. \"Come on, bring the lube and bend me over Chloe Marcus' desk.\"\n\nThere were few things in life I wouldn't have done after hearing the phrase \"bring the lube\", so I was up in a flash. I retrieved the small bottle of emergency lube I kept in my backpack.\n\nAs was often the case when we got together, Mrs. Lynn, wearing nothing but her high heels and one of the sexiest damn smiles on Earth, was slightly bent over Chloe Marcus' desk, her luscious ass sticking out at me invitingly. Though Mrs. Lynn had a habit of trash-talking a lot of the problem students in school when she was stressed, it always amused me to no end that she reserved the greatest wrath for blonde know-it-all Chloe Marcus, who was more annoying than anything else. We'd fucked over Chloe's desk enough times that I was impressed nobody was ever able to tell what happened against it.\n\nStill, if she wanted me to fuck her ass over Chloe Marcus' desk again, I wasn't going to complain.\n\nI stood just behind her. She smiled down appreciatively at my cock and said, \"Lube up. I want you in my ass soon, and I want you to make me fucking scream like a banshee, understand?\"\n\n\"Always,\" I said, squeezing lube onto my hand and rubbing it into my cock.\n\n\"Good,\" Mrs. Lynn said. She continued, \"Back to what we were talking about, I've enjoyed our time together immensely, but I don't want you thinking that I'm the only game in town when it comes to top shelf MILF. There are a lot of other women in this town, in this school even, who should enjoy your talents too...\"\n\nI slid my slicked up cock between her ass cheeks, teasingly pressing it up against her tight, puckered hole. Cooing softly, she squeezed me with her ass cheeks, urging me onward. I pressed forward, pushing my cock into her tight, puckered hole. The moment I broke through, burying several inches inside of her, I think both of our moans nearly drowned each other out.\n\n\"Oh I'll never tire of how good this feels,\" she moaned.\n\n\"Amen,\" I said, reaching behind her and cupping her tits, feeding several more inches of cock into her tight ass.\n\n\"...just so you know, I've got some friends who could use the help of a guy like you. Someone sweet and considerate and hung like a horse and who knows what to do with such a gift. I know you're only, oh fuck, that's nice, get it in there deeper... I know you're only doing favors right now for the lovely ladies you've been with this year, but if you're ever interested in spreading the pleasure to some hot, older women, let me know and I can set you up. I can set you up oh so fucking nice,\" Mrs. Lynn moaned.\n\nI'd buried the entire length of my cock in her by now, and though her face was a twisted grimace, it was one of those rare grimaces of ecstasy I knew so well.\n\n\"The offer's tempting,\" I grunted, slowly withdrawing a couple inches and slamming back home in her. \"And I'll probably take you up on it, but right here, right now, I've got a lot on my plate, and I want to fuck you and only you. Maybe later we can talk about your friends, but right now, I'm going to fuck your ass so hard your eyes will roll back and you won't walk right for days.\"\n\n\"Good answer,\" she moaned, leaning back to kiss me as I began to fuck her ass even harder. \"But we will talk about this again!\"\n\n\"If... you... insist!\" I grunted, grabbing her by the hips and pounding her tight little hole nice and hard.\n\nIt may not have been what I set out to do today, and there was every chance that it'd tire me out more than I wanted to for what I had to do the next day, but if it meant doing a good deed for Mrs. Lynn and fucking her amazing ass as hard as I could, then a little tiredness the next day was a chance I'd have to take.\n\n***\n\n\"If I told you you ought to relax more, Ryan Collins, would you listen to me, or would you come up with some excuse that sounds noble but is mostly a very solid excuse for you to be dipping your wick in as many girls as possible?\" Rose Ferris asked as she sat behind me on the couch, massaging my shoulders with her delicate-looking but deceptively powerful hands.\n\nI thought about what she said while enjoying her efforts, then said, \"It'd be a really good excuse. Well worded, probably with a fair bit of truth in it.\"\n\nRose laughed. \"Oh, I'm sure it would be, I'm sure it would be. At least pace yourself when you're fucking around as you do, or maybe stretch some between sessions? Yoga does work some miracles...\"\n\n\"I'll take it under advisement,\" I said.\n\n\"Hey, take it from an ex-cheerleader slut, stretching does wonders,\" Rose replied.\n\nThat she was knowledgeable in this field, I had no doubt.\n\nSitting on the floor of my living room wearing a t-shirt and sweatpants while Rose sat behind me, massaging my shoulders while we both looked up at the half-decorated Christmas tree, it was a distinct and very nice form of relaxation. I'd invited her over here for, well, the good deed I meant to do for her (among others), and while we waited on the other components to arrive I'd enlisted her help in decorating the Christmas tree. With her artful eye and commanding nature when it came to projects, she took charge and had done a pretty damn good job with the lights and ornaments Dad and I normally wouldn't know what to do with.\n\nAs ever, Rose was a refreshing presence, radiating an air of casual cynicism and genuine compassion that usually made her one of the best people I'd found I could talk to. Though her style was a distinctly hipster form of eclectic, with her mismatched (and some would say \"trying too hard\") clothes, fedora and sunglasses, she was still stunningly beautiful, with wavy, platinum blonde hair streaked blue, the fit body of a former cheerleader, and a cute face. Though I couldn't get enough of her body (especially her C-cup tits and miraculously tight and round ass), it was her smile that always commanded my attention. It was bright and confident, tired and world-weary yet always capable. It was a smile I never got tired of, and one I always looked forward to seeing.\n\nLooking up at her and not seeing her smile... well, that was always some cause for alarm. She didn't look distressed or worried, but with her usual confidence not making a full appearance, it had me curious.\n\n\"You alright?\" I asked.\n\nHer smile flickered, but didn't make a false return. That was another thing to love about Rose; she wasn't one much for false pretenses.\n\n\"Switch places with me, and I'll gladly tell you,\" she said.\n\n\"Sure,\" I said, climbing up onto the couch while she slid to the floor, then between my legs with her back to me. I gripped her shoulders and worked them the best I could, hopeful that I was doing justice to the massage she'd just given me. Given the low groan of pleasure that came from her throat, I was pretty sure I was going in the right direction.\n\n\"I'd be lying if I said I wasn't nervous, Ryan Collins,\" she said.\n\n\"Which makes sense,\" I replied.\n\n\"Nervous about what's before me, but even more nervous about your sitcom level machinations,\" Rose said with only the slightest venom.\n\n\"It'll work,\" I said, hoping I believed myself.\n\n\"Will it? Because while I'm not one much for stale jokes and laugh tracks recorded of people who've been dead for decades, I've watched a sitcom or two in my time, and I'm going to be honest with you: any time a zany scheme, which your machinations would definitely qualify as, comes in to play, it almost never works out. In fact, such zany schemes based on deception, however well-intentioned they may be, often have a way of making things much, much worse than they were in the first place,\" Rose said.\n\n\"It's not like I'm inviting two girls to prom without telling them that I'd invited each other,\" I joked.\n\n\"You're saying you'd tell them?\" Rose asked.\n\n\"Of course. I have every intention of showing up to prom with a girl on each arm,\" I continued to joke.\n\n\"I'm being serious, Ryan Collins,\" Rose grumbled.\n\nI sighed, then thought seriously about what she said, and though her words struck a chord, they were nothing I hadn't already thought about since I began this Christmas project.\n\n\"I know that I'm taking a lot of chances, but I want you to understand that I've thought through all the consequences. However it goes, I want you to know that I am more than happy to take all of the responsibility and whatever shit comes out of this. I'll do everything in my power to make sure that none of it splashes back onto you if it goes south,\" I said.\n\n\"Well, that's certainly something,\" Rose replied.\n\n\"But, call it my own sense of seasonal optimism, but I don't think it'll explode. Maybe it will a little, at first, but I think everything's going to go quite well once we really get to talking,\" I said.\n\n\"And you're basing that on?\" Rose asked.\n\n\"Hope. The power of Santa or Jesus or Krampus or whatever you believe in. The immense luck and contrivances my life has worked off of this year that, so far at least, haven't guided me that wrong yet,\" I said.\n\n\"Considering that you've been doing this Christmas extravaganza as a form of penance, pardon me if I don't entirely share your faith in your improbable luck,\" Rose said.\n\n\"Well...\" I trailed off. She did have a point there. I'd had a lot of strange luck this year that had led me to a number of great places, but almost as many bad ones.\n\nKyle Bowman.\n\nLosing Tori's friendship.\n\nI could hope as much as I wanted to do that this mad plan would work, but there was every plan it might explode and make things worse. As much as I wanted it to blow back on me, I couldn't control all the variables, I couldn't guarantee that it wouldn't come back and bite Rose as well.\n\n\"I'm sorry. Do you, uh, want me to cancel? There's still time to stop this, I think,\" I said.\n\nRose sighed, lowering her sunglasses just enough to rub the bridge of her nose. \"No, I'm sorry. You're trying, which is a lot more than most people are doing these days. Most people are content to just let things lie as they are, letting the bad stuff grow and never letting the good things gain strength. You're trying to do something good for me, for all of us really, and for that I should be thanking you, not condemning you. What you've initiated is a confrontation that's needed to happen for far too long and that I've avoided out of a complacent fear, and you've convinced me to face it. I only hope you're able to convince the others.\"\n\n\"I can be pretty persuasive,\" I said, confidently working out a knot in her neck.\n\n\"It'll take more than a slick tongue and a thick cock to heal these wounds,\" Rose said, before adding, \"But I'd like to see you try.\"\n\nThe doorbell rang. Rose tensed up in my hands.\n\n\"You aren't by any chance expecting anyone else today?\" Rose said, her voice equal parts skeptical and hopeful.\n\nI shook my head. \"Dad's out all weekend and I'm not expecting any deliveries.\"\n\nThe doorbell rang again and again, each time more urgent than the last.\n\n\"Then I guess it's time,\" Rose said.\n\nI stood up. \"We'll make this work.\"\n\n\"Here's hoping,\" Rose said, little confidence in her faint smile.\n\nStraightening my clothes out and taking a deep breath, I walked to the door. This was something I could do, and for Rose and the others this was something I had to do. I'd pulled off a few Christmas miracles already, and this would hardly be the biggest of them, but it would sure as hell be one of the most difficult.\n\nI took a breath and swung the front door wide open.\n\n\"Merry fucking Christmas, Ryan!\" Brooke King announced proudly from the doorway.\n\nA tiny and cute as a button cheerleader with a petite build, lightly tanned skin, brilliant blonde pigtails and a nice round butt that stood out in contrast with her small A-cup tits, she was one of my longest held and most energetic lovers I'd come to know this year. A ball of pure energy and, on the surface at least, the perfect cheerleader stereotype, she was also one of the filthiest fucking girls in the entire school who'd led to some of my more memorable sexual adventures. She'd been part of my inner circle of trusted confidantes helping me out with my Christmas plan, but I'd had to keep her out of the loop for this part. She'd foregone her usual pink clothes today in exchange for a tight and revealing green Christmas elf outfit, cut low to reveal what little cleavage she had and with a skirt high enough you could see her bright red panties just above her red and green striped knee socks.\n\nShe wasn't alone.\n\nStanding next to her was her exact opposite number in the wildly curvy redhead, Haley Campbell. While Brooke was bubbly and effervescent, Haley was surly and the poster child for a resting bitch face. While Brooke was tiny and petite, Haley was half a head taller than her and the very definition of voluptuous, with wide hips and a nice, juicy ass that formed a near perfect hourglass shape with her absolutely insane H-cup tits. With pale skin that complimented her long, straight red hair and ruby red lips, she'd have been a knockout if it weren't for the perpetual bitchy sneer on her face (though she still looked pretty fucking amazing) that always made her look like she thought she had somewhere better to be. Dressed in a sexy Mrs. Claus sort of outfit that on her body was even more insanely revealing than Brooke's costume, she was utterly mouth-watering.\n\nSave for sharing bright green eyes and both being cheerleaders, the two girls couldn't have been any more different. That would make today an exceptional challenge, but one I was willing to undertake.\n\n\"So, are you gonna fucking let us in or are we just gonna stand out here freezing our asses off?\" Haley asked, tapping her foot impatiently.\n\nThere was the Haley Campbell I more or less knew.\n\n\"Oh, come on, Red, have a little Christmas spirit why don'tcha?\" Brooke said, chiding her friend.\n\n\"Come on in,\" I said, ushering both of them inside. They were both clearly expecting some sexy fun off the bat, and I knew I had to nip that one in the bud if we were going to accomplish what I wanted to. \"Before we get much further than the foyer, there's something I ought to tell you two...\"\n\n\"Ooh, is it a surprise? I, like, totally love surprises!\" Brooke exclaimed, wrapping her arms around my neck and kissing me on the cheek.\n\n\"I don't,\" Haley said.\n\nBrooke rolled her eye at her friend. \"Don't mind Red, Ryan, she gets all sorts of cunty this time of year, but she'll be bouncin' on your beast in no time. So, what kinda surprise do ya got for us, huh?\"\n\nI laughed nervously. \"About that...\"\n\n***\n\nI never got the full story of what happened when Rose quit the cheerleading squad, but from what I was able to put together from details culled from Rose, Kaitlyn and Brooke, it was ugly.\n\nVery ugly.\n\nRose had been one of Regan Hills High School's best cheerleaders, and pretty much the only one who wouldn't take shit from head cheerleader Dakota Lewis and stop her when she was on one of her many power trips. While Dakota could intimidate even the likes of Haley, Rose always knew how to shut her down with the slightest effort. Because of this, Rose had gained this impossibly cool image among the other girls and became the kind of person that a lot of them looked up to.",
        "The only problem was, she wasn't happy as a cheerleader. Rose was a doer, an artist, and cheerleading wasn't giving her any opportunities to do anything or truly express herself. So, one day she up and quit the squad to better pursue her art, fully embracing the hipster within who was always bursting to get out but never quite understood how.\n\nSome of the girls on the squad, like Kaitlyn and Jade, forgave her for abandoning them and still kept her on as a friend because, hey, Rose Ferris was fucking cool and anyone who didn't want her as a friend probably would've had a screw or two loose.\n\nThese girls were in the minority.\n\nMost of the cheerleaders turned their back on her as a traitor, ignoring or even straight up ostracizing her at Regan Hills High. As someone so effortlessly cool, someone who tried to make it appear to the world that nothing got to her, Rose tried to brush this change in the status quo off. Deep down, though, she was hurt about as much as anyone could be hurt, and none of them hurt her quite as much as the way losing Haley and Brooke did. Rose, Brooke, Haley, Kaitlyn and Jade had been something of a team within the cheer squad; \"Fox Force Five\" Rose had called them. They were seemingly inseparable, doing everything (and I do mean everything) with each other, raising hell and having fun like it was going out of style.\n\nBrooke and Rose in particular had been close before this schism, maybe even best friends. That they had fallen apart hurt Rose the worst, and though she didn't let it on as much, I knew it really got to Brooke too.\n\nGetting the three of them back together was, well, admittedly one of the more difficult tasks I'd decided to take on for my Christmas list, but if I could do this for the three of them then, well, that had to be worth something in life.\n\nLying to Brooke and Haley about what I wanted them over here for (Christmas tree decorating and sex) was a necessary evil, and as Rose had pointed out, definitely sitcom logic, but knowing how intense the emotions were on both sides, it seemed like the only way to get them all in the same place at once.\n\nOnce I broke the news to them in the foyer, they didn't take it quite as bad as I'd expected.\n\n\"You gotta be, like, kidding me!\" Brooke exclaimed, a look of pure shock on her face.\n\n\"You're a real fucking asshole, you know that, Ryan?\" Haley said.\n\n\"You lied to us? Why?\" Brooke asked, her shock giving way to hurt.\n\n\"Would you have come here otherwise?\" I asked.\n\n\"Fuck, no,\" Haley spat.\n\n\"I'd have listened. I wouldn't have come because it was a stupid thing Rose did, but I'd have listened because I thought you were someone I could talk to. I'd have fucking listened and you wouldna had to lie to us,\" Brooke said.\n\n\"This hurts, Ryan. This fucking hurts,\" Haley said, already turning and walking for the door.\n\nGently, I grabbed her by the wrist. \"This hurts you? What about Rose? She's just following her heart, being the person she believes she's meant to be, and you two turn your fucking backs on her? She's got friends now, but you guys, you were her best friends. She fucking loved you, and you kicked her out of your fucking lives? If you want to be pissed at me for lying to you, fine, be pissed at me, but look at yourselves in the fucking mirror and think long and hard about what you did to that girl and why you did it. You're hurting, she's hurting; can you two honestly tell me that you're both happier without having Rose Ferris as one of your best friends?\"\n\n\"Yes,\" Haley said, though there was a shake to her voice that told me she didn't entirely believe what she had to say.\n\nBrooke said nothing, only looking at the floor. With her pointed elf hat (and the pointed, fluffy ears attached to it), she looked close to about the saddest thing in the world.\n\n\"She's in the living room right now, and she's probably heard this whole thing. Things can't be like they used to be, because she's not changing who she is, but she'd really like the two of you as friends again. She may not be the cheerleader you remember, but she's still the same person she always was. She's still smart, and funny, and driven, and cool, and fucking hot, and everything else you loved about her. You pull your heads out of your fucking asses and give her the shot she deserves, and you'll all be happier for it,\" I said, turning my back on them and walking back into the living room.\n\nRose was right where I'd left her, sitting on the floor and looking at me. She often hid her eyes behind her not terribly dark and slightly oversized sunglasses just so nobody could get a good read on her, but by the looks of things I was sure this time she might've been hiding an odd tear or two.\n\n\"That was... that was something else,\" she whispered.\n\n\"Yeah... I don't know where that came from, but... yeah,\" I whispered back.\n\n\"Wherever it came from, it was sweet. Thank you,\" she whispered.\n\n\"Anytime,\" I whispered.\n\n\"Are you guys whispering? I like to whisper too!\" a voice whispered from behind me.\n\nRose and I both turned to see Brooke standing in the doorway behind me. She still had that unusually quiet look to her that I'd never seen, but she was no longer looking at Rose like she was an inconvenience or a dirty word, which was definitely an improvement.\n\n\"Hey,\" I said.\n\n\"Hey,\" Rose echoed.\n\n\"Hey, guys,\" Brooke said, looking up and down and smiling shyly. Never having seen an ounce of shyness in her, this definitely took me off guard.\n\nBrooke cleared her throat, then reached out of the doorway and yanked Haley in with her. Haley looked suitably disgruntled and conflicted, but she didn't say anything to Brooke's efforts.\n\nBrooke said, \"We, uh, would like to, like, talk with both of you, but, especially you, Rose. I think we totally have a lot to talk about, and...\"\n\nBrooke turned her attention to me. \"Can we all still decorate the tree? It looks pretty, but it can be prettier. \"\n\nWhen Haley didn't say anything, Brooke poked her in the side. \"Right, Red?\"\n\nHaley said, \"Yeah. That.\"\n\nI smiled, then turned to Rose. She nodded to me.\n\n\"I can't think of anything in the world I'd want to do more right now,\" I said.\n\n***\n\nThough their conversations were awkward and stilted at first as they became reacquainted with one another, it didn't take long before Brooke, Haley and Rose started talking like old friends again. There was definitely some strangeness and stiltedness as their shared experiences had so drastically diverged since they split apart, but they were making an effort that seemed to get easier moment by moment. That was definitely something. As glad as I was for crossing three names off the list with this accomplishment, I was even happier for them.\n\nHaving lost a friend over something more significant, seeing good friends having broken up over something as petty as this was particularly heart wrenching. That I might have set them on the road to putting things back to rights again, well, that was a pleasure all its own.\n\nThe state of the tree was another matter entirely. With Rose's artistic inclinations and Brooke's controlled anarchy, there were two definite and very different schools of thought as to how it should have been done. I may have been reading a lot into it, but there definitely seemed to be something more in play than just an argument over the tree, a certain spark of energy in the air between them. While it seemed like they were arguing, it felt more like a dance of words. Maybe it was a fight for dominance, maybe it was a light flirtation, it was hard to tell but fun to watch.\n\nThat Haley was more or less disinterested in the process was a bit of a blessing, since three girls fighting over how to best decorate my Christmas tree would have been a pain all its own, albeit one that would've definitely been fun to watch. I was content to let them lead the charge, occasionally retrieving new decorations, stoking the fireplace or switching up which streaming station of Christmas music I had on in the background, but other than that leaving it to them.\n\nWith Brooke and Rose getting into a particularly heated discussion about where to place some silver balls, I took it as my cue to retreat to the kitchen to grab some snacks and drinks. I didn't have much seasonal outside of a couple bottles of sparkling cider, but I figured it'd have to do.\n\nFor someone who's watched as many horror movies as I have, I probably shouldn't have jumped quite as much when I saw Haley standing behind the closing refrigerator door, but I did, much to her amusement.\n\n\"Uptight?\" Haley asked.\n\n\"Always. Can never tell when one of Santa's slutty little helpers is gonna sneak up on me,\" I said, trying to cover with a joke.\n\n\"Yeah...\" Haley said, looking down at her outfit. \"...this getup wasn't exactly my idea.\"\n\n\"Brooke tricked you into a sexy costume? I'm shocked,\" I said.\n\n\"Oh, fine, be an asshole about it,\" Haley said.\n\n\"I will be,\" I replied, happy to throw it back at her. Haley liked to dish out attitude, and I'd found returning it to be one of the few ways to get close to gaining her respect.\n\n\"You be an asshole, I'll try to breathe in this fucking thing. You have any idea how tight this is?\" she complained.\n\nLooking down at it, especially the way her insane tits almost spilled out of it, I said, \"Yes. Yes I do.\"\n\n\"Asshole,\" she replied, with a bit of a smile.\n\n\"An asshole who got a fire going and the heater on to make sure you'd at least stay comfortable in those sexy little outfits,\" I said.\n\n\"Oh, well, thank you,\" she said, layering the last two words with the heaviest sarcasm she had available.\n\nCraning my neck in the direction of the living room, I asked, \"You couldn't handle those two either?\"\n\n\"How do you know I didn't want to come spend some time with you?\" she asked.\n\nI set the bottles down on the counter and crossed my arms over my chest.\n\nHaley sighed, annoyed. \"Yeah, I couldn't stand the two of them. I love 'em, don't get me wrong, and am looking to get the full Fox Force Five reunited, but...\"\n\n\"...but they've got enough energy to power the city?\" I suggested.\n\n\"That's one way of putting it,\" Haley said, sidling a little closer to me. For such a raging bitch, I was never unimpressed with her beauty, and just how impossible her body seemed. Her breasts, though definitely requiring some impressive support, should have been national monuments for how big they were. Knowing how good they felt, and tasted... well, it made it distinctly uncomfortable to stand next to her in all the best ways.\n\n\"I don't say this very often, but I want to thank you,\" Haley said.\n\n\"For?\" I asked.\n\n\"This. It sucked that you lied to get us here, but since you might not've gotten us if you hadn't, I can't really hold it against you, can I?\" she said.\n\n\"Feel free to hold it against me if you want to. I did lie, and I'd have earned that,\" I said.\n\nShe took a step closer, close enough that we could touch if we wanted to. Looking up at me with her bitchy green eyes and a mouth that promised some very bad (and very good) things, I decided to press my luck.\n\n\"Of course, if you don't want to hold it against me, I could think of a few ways you could, you know, thank me,\" I said.\n\n\"That was cheesy as fuck, you know that, right?\" Haley replied.\n\n\"Did it work?\" I asked.\n\nShe shrugged. \"Yeah.\"\n\nHaley closed the distance between us, pressing me up against the counter. Her tits hit me long before her mouth found mine, but that didn't in any way negatively affect our making out. Quite the contrary, in fact. Her breasts pressed against me, her nipples rock hard even through her short and sexy Santa dress, her lips so soft and so pouty, Haley was the very definition of luscious and one I wanted to fully enjoy.\n\nI grabbed her by her magnificent ass and spun us around so I was pressing her into the counter, then lifted her up and onto it to give myself better access to her body. I dropped my head down onto her cleavage, kissing and licking the magnificent tops of her creamy tits.\n\n\"We should... mmm... we should probably stop,\" she said.\n\n\"Stop?\" I grunted, more than a little driven by my exquisitely hard cock at the moment.\n\n\"Look, I want to keep this going, but if we're missing for too long, the others'll start to wonder, and then they might interrupt, and once I'm started I don't wanna stop. If we stop now, we can go tell 'em that they're on their own with the tree and not to interrupt us, and you and me can have all sorts of fun,\" Haley said.\n\n\"Makes sense,\" I said, even though it was hard to pull myself off of her. The draw of Haley's epic tits was too much, and I couldn't help one last kiss, one last lick, one last tempting squeeze before she had to push me away, smiling and giggling.\n\n\"Just can't get enough of my tits, can you?\" she said smugly, grinning.\n\n\"Says the girl who can't get enough of what I'm packing,\" I said.\n\nShe hopped down from the counter, looking down at my covered cock and licking her lips. \"We'll make this goodbye quick.\"\n\n\"Yeah,\" I said, following her back into the living room. The cider bottles were long forgotten, but we could always cool them down again if we wanted to, I wagered.\n\nI was so focused on following Haley, staring at her ass or her tits that I could actually see from behind her on either side of her chest, that I actually ran into her. The way she'd stopped in the entryway to the living room, it was kind of hard not to. Though my cock nestled nicely in her ass, it was only that we were walking at such a slow speed that kept me from knocking her down.\n\nIf she was angry at me running into her, Haley didn't let it show, not for the pure surprise in her voice.\n\n\"Holy shit,\" she said, her eyes locked onto the living room.\n\nLooking up, I had to agree with her. \"Holy shit.\"\n\nBrooke and Rose had stopped decorating the Christmas tree and had relocated to the couch. That the two of them had had a long-running feud was pretty hard to tell for how intensely they were kissing each other. Brooke sat in Rose's lap, straddling her hips and kissing her with a flurry of quick, tongue-heavy kisses to the lips, her hands gently squeezing Rose's bountiful C-cup tits. She giggled and squealed while Rose kissed her back with long, groan-worthy kisses, her hands caught up in squeezing Brooke's amazing ass.\n\n\"Ohmygod I'm so sorry I was such a bitch,\" Brooke squealed, kissing Rose passionately.\n\n\"You can make it up to me however you want,\" Rose replied in her low, sexy voice.\n\n\"I shouldn't have, like, cut you off like that, I should've been a good friend, I shouldn't have been such a cunt!\" Brooke said, every few words punctuated by another quick kiss.\n\n\"No, you shouldn't have been,\" Rose said, swatting Brooke's ass playfully, only a hint of malice in her otherwise playful voice.\n\n\"They couldn't wait five minutes, could they?\" Haley said, keeping her voice low.\n\n\"You look at them, could you keep your hands to yourself for five minutes?\" I asked.\n\nHaley rocked her head side to side, considering. \"Probably not. We should interrupt them.\"\n\n\"Weren't you just saying a few minutes ago that you didn't want them interrupting us?\" I asked.\n\n\"Yeah, but that was then, and now I want in on this, because it looks hot, and I wanna have some fun. Don't you want a part of that? Because I know these two sluts, and let me tell you they'd want to have us in on this,\" Haley said.\n\nIn all honesty, I really did want a part of it, because the sight of the two of them going at each other like this was insanely hot, but with Brooke and Rose reconnecting after a long time apart and their making out looking so tender and sweet, I didn't really want to interrupt their moment.\n\nLoudly, Haley cleared her throat. \"Ladies...\"\n\nI whispered to her, \"You really are a bitch sometimes.\"\n\n\"You say that like you're surprised; I thought you were smart,\" Haley replied.\n\nRose and Brooke turned to us, both smiling.\n\n\"Hey, guys,\" Rose said, so casual you wouldn't have known we'd just caught her making out with Brooke.\n\n\"Hey!!\" Brooke exclaimed. \"Rose and me are besties again! We've been making out for, like, I don't know how long, and then we're gonna get naked and suck on each others' boobs and eat each other out and probably play with the strap-on I brought in my purse and... hey! You guys wanna, like, join us? You should totally join us! It'll be fucking hot with boobs as big as Red's and a cock like Ryan's and, like, it'll be so much fun!! Please, please, please say yes!!\"\n\nNot wanting to intrude, I looked at Rose. She shrugged. \"You heard her.\"\n\nI did hear her. So did Haley. With confident strides that looked exceptionally difficult in the tight Santa dress she was wearing, Haley sat down on the couch next to Brooke and Rose, pulling Rose's face away from Brooke with the greatest difficulty before stealing a kiss of her own. Though Brooke pouted, she still looked upon her kissing friends with loving eyes, then over at me as if silently pleading for me to break them up.\n\nAs much as I wanted to join them, and as tempting as the sight no doubt was, it still felt weird to intrude. Don't get me wrong, a big part of me was definitely hoping that today would go exactly like this, but now that it was happening, I felt... strange. This was their reconnection, this was their moment, they were the old friends. I was just the guy whose house this was and who was crazy enough to try to put them in the same place at the same time. That they were going at it was hardly a surprise, but the respectable thing at this moment really felt like stepping back and letting them have all the fun.\n\nI was almost there, almost stepping away and leaving them alone, but before I could Rose pushed Haley away and called out to me.\n\n\"RYAN COLLINS! You started this, so if you know what's good for you, you better get your sweet ass and much sweeter cock over here and finish this!\" Rose demanded.\n\n\"Totally!\" Brooke exclaimed.\n\n\"Don't make me come over there and smother you with my tits until you come to your senses,\" Haley said, in what had to be one of the most bafflingly enticing threats I'd ever heard.\n\nThey were enough, though, to get me moving on over to the couch with them.\n\nAfter some debate on etiquette, I slid between Rose and Haley, and was hardly one to complain when Haley threw her leg over my hips and pulled herself up to straddle me. With Rose and me sitting side by side and Brooke and Haley in our respective laps, I considered the course of events that brought this together and found myself smiling.\n\nOr, at least smiling as much as I could while being smothered by Haley's massive tits. She pressed me into the couch and crushed her creamy breasts against my face, encouraging me to go back to licking and suckling them as I had earlier. I hardly needed any motivation to do this, and with my hands clasped firmly to her ass as she ground against my sweatpants-covered cock, I spent a few heavenly minutes list in her cleavage, listening as Haley exchanged kisses with the other two.\n\nIt was only by a forceful hand pushing Haley away from me that I was allowed to properly take in a breath, only for Rose's lips to be on mine, soon replaced by Brooke's, then Haley's. The four of us exchanged kisses like this for a good long while, grinding and groping and stroking each other as we fully enjoyed the moment and each other.\n\nThis peace wouldn't last long, though. Not with the pent up emotions between these three being unleashed, and certainly not with the sexual energy flowing through the room.\n\n\"Okay, that's enough of this!\" Brooke said, reaching under her armpits and pulling her cute and short elf dress over her head. She did this without mussing up her pigtails or the elf hat, leaving her dressed only in her matching red bra and panties and knee high red and green socks.\n\n\"You're wearing a bra?\" I asked. With breasts as small as hers and liking to be available for sex at the drop of a hat, Brooke often went without a bra, so this was a surprise. An adorable surprise, no doubt, but definitely a surprise.",
        "\"Yeah!\" she said, grabbing one of her tiny, cute tits and squeezing it, turning to show Haley and me. \"I had this matching set and it was so fucking cute with my panties so I, like, wanted to match it to be all totally festive and shit, and-\"\n\n\"You are fucking cute,\" Rose said, pulling her in close and kissing her deeply.\n\nBrooke giggled. \"Thanks.\"\n\n\"Well,\" Haley sighed, grabbing her own chest. \"Brooke may be wearing a bra, but if I tried to in this stupid fucking dress, I wouldn't be able to breathe. It's time for the girls to come out.\"\n\nHaley wasn't asking, and I don't think any of us were complaining when she pulled her insane breasts over the edge of her Santa dress.\n\nNo matter how many times I saw them, I was never not in awe of Haley's impressive rack. Firm, large and round, oh so soft and demanding to be touched and sucked upon, they were centered around deceptively small, pink nipples for how big the rest of her tits were. Though proportionally small, they were very hard.\n\nI leaned in, taking her right nipple in my mouth and suckling, nibbling upon it with gusto. I looked over at Rose and Brooke next to me, each of them looking on Haley's free tit with hungry eyes. You could've played a backing track from a Western showdown movie for how much it looked like both of them wanted to suck on Haley's free tit, and it was only a matter of which one of them would make the first move.\n\nRose won, leaning in and taking Haley's free nipple in her mouth. Brooke looked on, disgruntled, but since she got to make out with Haley while we did this, she had a fair consolation prize.\n\n\"Oh, fuck, Rose, I forgot how fucking good you were at sucking tit,\" Haley groaned.\n\nWithout taking Haley's nipple from my mouth, I growled at her.\n\n\"You're alright too, Ryan, but Rose really knows how to suck tit. Sorry. I mean, have you seen her lips? Those're fucking heaven!\" Haley said.\n\nRose let her nipple go for only a moment, but it was enough to let Brooke lean in and steal it from her. Unperturbed, Rose said, \"A fact's a fact, Ryan Collins. Sorry.\"\n\nA fact may have been a fact and Rose may have been better at sucking tit than I was, but there were other things I could do that Rose couldn't.\n\nLike reach around and unzip the back of Haley's dress, for instance, tossing the tight garment aside and leaving her grinding in my lap only wearing her Santa hat and a pair of bright blue panties.\n\n\"Not exactly festive underwear, Red,\" Brooke chided.\n\n\"Yeah, well not all of us are as into coordinating as you,\" Haley replied.\n\nWhile they argued, I worked, pulling my sweatpants and underwear down enough to free my cock from between Haley. While she might have tried to ignore me so she could continue arguing with Brooke, when my now bare cock rubbed up against her panties-covered pussy, I might have slightly gotten her attention, but she was too focused on her argument to really care.\n\nBrooke's eyes went down, her lips curling into a smug grin, and Rose eyed me with more than a little pride.\n\n\"I think you know what you need to do, Ryan Collins,\" she whispered, her voice husky and full of so much promise.\n\nI did. I dropped a hand to the front of Haley's panties, pulling them aside and confirming that she was indeed quite wet. I ran a finger through the untamed red curls above her swollen pussy lips, savoring the shiver that shot through her body.\n\nThis was enough to finally get her full attention, as she finally took in exactly where she was.\n\n\"Just what the fuck are you doing?\" she asked.\n\n\"This,\" I said, lining up my thick, ten-inch cock with her swollen, wet pussy lips and thrusting upwards.\n\n\"FUUUUUUUUCK!\" Haley cried out, her eyes bugging out and her mouth going wide as I buried half of my cock in her hot, tight pussy.\n\n\"See? Isn't this better than arguing about underwear?\" I grunted, pulling her down a few more inches. Moaning and hissing and pounding the couch with her fists, Haley looked down at me with pure lust in her eyes.\n\n\"Shut up and fuck me,\" she said, forcing herself down the last few inches until I was completely buried inside of her.\n\nFucking her I could do. Fucking her was something I could easily do. When buried inside the pussy of someone as unbearably hot as Haley Campbell, fucking was something that came naturally. The problem, if you could say I had a problem at a moment as wonderful as this, was that I really wanted to pace myself. Don't get me wrong, everything within me screamed to fuck Haley hard and send her tits bouncing into my face, but with Rose and Brooke here too (and me wanting to spend some time fucking each of them as well), I didn't want to blow the moment by blowing my load too early within Haley.\n\nI had to play this carefully.\n\nThankfully, I had enough experience to know how to pace myself. It wasn't anything as stupid as thinking about baseball or doing homework in my head to keep me off task, no, that would've defeated the purpose of being balls deep inside of Haley. Instead I did my best to focus on her in particular, rather than my own pleasure, matching my thrusts with her bounces to give her the maximum penetration she craved.\n\nThat we had a fair audience watching us go at it certainly didn't hurt either.\n\n\"I always love watching this. I mean, like, I love it in me more, but if I can't have Ryan in me, then I like to watch,\" Brooke said, excited, standing behind Haley as I fucked her, bending over to get a good look of my cock sliding in and out of her friend's pussy.\n\n\"Not a bad watch, I'll give it that,\" Rose said, arching her back from the couch so she could pull her distressed jeans and panties over her hips. Though still wearing her own t-shirt, retro scarf and light jacket in addition to her fedora and sunglasses, Rose was now completely naked from the waist down. Her perfectly shaven pussy was, as always, a sight to behold, the very vision of mouth-watering if my mouth weren't already watering for the busty redhead bouncing up and down on my cock.\n\n\"Not a bad watch?\" Haley asked. \"You all know I'm, oh god, fucking spectacular. Not a girl in this school, not a girl on earth with a body as fucking amazing as mine! And with his cock... FUCK! We're a motherfucking work of art!\"\n\n\"You're a good match, but there's always a way of upping your game. Totally,\" Brooke said, adding one of her two favorite words for emphasis.\n\n\"Like?\" I asked, always loving Brooke's enthusiasm and rather enjoying the image of her face hanging over Haley's shoulder. Between Haley's rapture and Brooke's cheerful enthusiasm, I was given the best of both worlds before my eyes.\n\n\"Well...\" Brooke said, reaching around and grabbing Haley's breasts, squeezing them right in front of me and making Haley moan. \"...you could always have another sexy little slut behind her, squeezing her boobs like this, or kneeling down beneath you, licking that spot where the pussy meets the cock and driving you both crazy with sex, or a slut with a strap-on double-fucking you, or-\"\n\n\"I only, fuck, I only save anal for special occasions!\" Haley groaned.\n\n\"And this ain't a special enough occasion?\" Brooke asked, exasperated.\n\n\"Brooke, make this special and get down here to eat my pussy,\" Rose demanded. She'd been fingering herself ever since she'd pulled her pants off, but looking into my eyes now I could see she wanted more than just her own efforts.\n\n\"Okey dokey!\" Brooke exclaimed, dropping between Rose's thighs and doing just that.\n\nRose groaned, tossing Brooke's elf hat aside and running her hands through her hair, eventually grabbing each of Brooke's pigtails in one hand so she could better pull her face into her pussy. Then, looking at us, Rose said, \"At least tell me you've enough common sense to have taken Ryan's delicious cock up your ass?\"\n\n\"No,\" Haley whimpered, shaking slightly as her orgasm built up. \"You have?\"\n\n\"I'd have been a fool not to,\" Rose stated as if it were the plainest fact in the world, moaning as Brooke enthusiastically ate her out. Even with Rose expertly riding her face, I couldn't help but notice that Brooke was about the cutest thing in the world, bent over on all fours, a hand between her legs fingering herself through her panties furiously as she ate out her old friend.\n\nI'd hoped for a happy reunion, and I was content I'd been able to pull that off.\n\nNow to take it to the next level.\n\nI fucked into Haley harder, grabbing her ass roughly with one hand while reaching down with my other. As I fucked into her, I fingered her clit without mercy. She looked down at me with shocked eyes, almost as if I'd found a way of cheating at sex, and if I'd been less busy I would've shrugged at her. I was going to make her cum, and there really wasn't much she could do about it if I had anything to say about it. I fucked her like this, harder and harder, my free hand drifting up her back so I could pull her in for a deep, powerful kiss while applying even more pressure to her clit with the other.\n\nThat did it. A jolt ran through her body, powerful and hard. I tried to hold the kiss through it, but Haley's ministrations were too rough against me. Our mouths broke apart from one another as she cried out.\n\n\"OH HOLY FUCKING SHIT, YOU MOTHERFUCKER, FUCKING SHIT, FUCK, FUCK, FUCK YOU FUCK YOU FUCK FUCK FUUUUUUUUUUCK!!\"\n\nA flood of juices shot against my crotch, and I only fucked her harder, smiling as I drew out and kept her orgasm going.\n\nThere was a hand gently squeezing my arm from the side, and turning to look I saw that Rose was touching me. There was a look of solemn satisfaction, a distinct gratitude on her face, and if Brooke had been any less enthusiastic in licking her slit I was sure in that moment that she would've been saying 'thank you'. Letting my hand drop from Haley's back, I took Rose's hand in mine as I helped Haley come through the last few jolts of her orgasm.\n\n\"Oh you're a bastard, oh you're a fucking bastard, you're a fucking bastard but you've got a nice fucking cock, fuck...\" Haley muttered, kissing me over and over as the last waves of pleasure flowed through her body. I gyrated in her slightly, forced my cock to twitch within her, getting her to groan and giggle appreciatively, enjoying this moment where I was still completely hard inside of her. I wanted more, and I wanted that more to be spread to the other two lovely ladies with me, but I was content to let this moment stretch out a little longer.\n\nHowever, I wasn't the only one who wanted more.\n\nPulling herself from Rose's thighs with the greatest difficulty, Brooke stood up straight and exclaimed in her perkiest voice, \"My turn!\" \n\nFor a girl as tiny as she was, it was always impressive to see just how much tightly packed muscle Brooke King was made of. With only the slightest effort, she lifted Haley, a girl forty or fifty pounds heavier than her off of me and pushed her onto the couch between Rose and me.\n\n\"You get his cock all the time, couldn't you just let me have it a couple more minutes?\" Haley grumbled.\n\n\"No,\" Brooke replied. \"You got your cum, now I want mine. You'll get more of his cock later anyway; you know how good for it Ryan is.\"\n\n\"If you're so broken up over that, I've got something else you could have some fun with,\" Rose said, motioning not too subtly for her own pussy. She looked and smelled positively soaked, but not having cum yet her face was a mask of wild lust. Even in her greatest bitchiness, Haley couldn't leave a friend hanging like that. Though she made an effort at grumbling, she pushed closer next to Rose and started to finger her. Groaning gratefully, Rose returned the favor.\n\n\"Awww, ain't that just the cutest fucking thing you ever saw?\" Brooke asked me.\n\nWatching Rose and Haley exchange deep kisses while they fingered each other and occasionally pawed at each others' tits (made a lot easier as Haley pushed Rose's shirt above her breasts and freed one of them from her bra) wasn't exactly what I'd call \"cute\", but it was pretty enticing.\n\n\"I think you're about the cutest fucking thing I ever saw,\" I said.\n\n\"Awww,\" Brooke said, curtsying an imaginary skirt. \"You're fucking cute! I'm gonna, like, fuck you sooooooooo extra hard for that one!\"\n\n\"They say compliments get you everywhere,\" I said.\n\n\"Ain't that the truth!\" Brooke said, twirling one of her pigtails around her finger and flipping it through the air. In a flash, she removed her bra, revealing her tiny but oh so sweet tits to me, then pulled down her panties. Since it didn't take much to turn Brooke on, and she'd been having quite a bit of fun already, her pussy lips were already thick and damp, a perfectly lewd contrast to the cute blonde patch of pubic hair she kept shaved in a heart right above her pussy.\n\nWith practiced ease, she climbed on top of me and slid my cock deep into her cunt.\n\nNow, I'd fucked Brooke King more times than I could count, but I never tired of her upbeat attitude and unending enthusiasm. Cute as a button and filthy as a button found at a garbage dump, she was one of my favorite people in the world to have sex with. Every time I was with her, she just knew how to make me smile. That she was an expert with all three of her holes (and that all three felt impossibly tight), was just icing on the cake.\n\n\"Ohyes, ohyes, ohyes, so nice, fuckfuckfuckfuckfuck!\" she squealed delightedly as she bounced up and down on my cock. Looking down into her, watching as my thick cock spread her tight little pussy lips what felt impossibly wide, well, it was a sight I hoped I never got tired of.\n\nMaybe a little confused in this case, because of our most recent conversation topics, but not tired.\n\nWrapping my arms around her lithe frame, I pulled her in close. Though she made some disgruntled sounds and still fucked me with a certain desperation from her I knew well, she calmed when I began to whisper in her ear.\n\n\"Not that I'm complaining, but with, oh... fuck... everything you were saying, I could've sworn you were gonna put me right up your ass first,\" I whispered.\n\nBrooke giggled. \"It was totally tempting, not gonna lie! But if anyone's earned first dibs on gettin' you to anal-yze 'em, I think, like, that's all Rose.\"\n\nI turned my head slightly, watching as Rose and Haley fingered each other in a perfectly lewd display of raw eroticism.\n\nBrooke continued, whispering in my ear, \"I've been a really lousy friend and stupid, stupid, stupid-\"\n\n\"Not *that* stupid,\" I said. \"We all make mistakes when it comes to best friends.\"\n\n\"Maybe, but this one's pretty bad, and not like I'm completely deserving all the ponies and rainbows. That's somethin' she needs first, so, yeah, when it comes time for the anal orgy tonight, she gets first dibs. Just promise me you'll treat her right and make her totally scream, okay?\" \n\nKnowing how Rose was a screamer and how much she loved getting seriously fucked in the ass, I said, \"That's an easy promise to keep.\"\n\n\"Fucking awesome!\" Brooke cheered, pushing herself up so she could properly ride me. She grabbed my hands and placed them on her tight, adorable little tits, and let me tell you when a slutty blonde cheerleader as wild as Brooke King tells you where to put your hands, you fucking listen.\n\nThough Brooke was normally good at completely commanding my attention, with Rose and Haley fingerfucking each other and making out right next to us, it was hard not to look at these other two beautiful girls and watch in awe as they pleasured each other. Though they were very distinctly wrapped up in each other, at least Rose's eyes were on Brooke and me, watching our frantic, energetic union with a certain level of satisfaction.\n\n\"Fuck her, Ryan Collins, fuck her hard,\" Rose said, licking her lips and groaning as Haley kissed her neck.\n\n\"Yeah, fuck that blonde cunt hard,\" Haley added.\n\n\"Make her fucking scream,\" Rose continued.\n\n\"Make her beg,\" Haley said.\n\n\"But don't you dare cum. I haven't an orgasm yet and I mean to have it with you filling my tight cunt, you hear me, Ryan Collins?\" Rose said.\n\n\"Awww, but I want his cum!\" Brooke pouted.\n\nStanding up from the couch (and leaving a very disgruntled Haley behind), Rose walked behind Brooke and shed the last of her clothes (even her prized fedora and sunglasses) along the way. With her beautiful tits swaying, she pressed herself into Brooke's back, reaching around to hug Brooke. With one hand cupping Brooke's splayed open pussy, rubbing heavily on her clit, and another behind her playing with her ass, Rose had pretty much unlocked the easiest cheat codes to get Brooke to cum in a hurry.\n\n\"We've got all day, and longer if we please; I think there'll be plenty of cum to go around for all of us, don't you?\" Rose suggested.\n\n\"But... but... but...\" Brooke whimpered.\n\n\"Haley, give her something to keep her mouth busy?\" Rose asked.\n\n\"Gladly,\" Haley said, getting up on her knees beside us on the couch and thrusting her large tits in Rose and Brooke's faces. The two girls gladly took the nipples into their mouths, licking and sucking and moaning as Haley added her hands to Brooke's body, trying to help her get off sooner.\n\nLetting her mouth free for a moment, Rose added, \"Make her cum, Ryan Collins. Fuck her harder and make her cum.\"\n\nNow, I'd like it to be known at this point that I'd rank my efforts at self-restraint at this point up there with the labors of Hercules, if just for the sheer insanity of trying to hold back on cumming when a tight blonde cheerleader is speared on your cock, getting pleasured from behind by another gorgeous blonde while a redhead with the biggest tits in the world has her nipples thrust in their mouths. I don't know about the rest of you, but for me this was pretty fucking difficult.\n\nStill, I held back. Don't ask me how, because I couldn't tell you, but somehow I held back. Somehow I held on and kept the sheer bliss of this moment from pushing me over the edge, even as Brooke was. Even as Brooke shuddered and shook, wailing and squeezing my cock so exquisitely tight with her own orgasm, I held on. I held on even as she was a screaming quivering mess being stroked by her two friends, collapsing against my chest and kissing me cutely and sweetly and saying \"thankyouthankyouthankyou\".\n\nDon't ask me how I did it, but I'm glad I did.\n\nWith the greatest effort, for Brooke's near death grip on me, Rose and Haley hauled the tiny blonde cheerleader off of me. With the kind of confidence I knew her for, Rose climbed on top of me, replacing her friend while straddling my cock. For how geared up both of us were, having gone this whole time being pleasured without release, it took the greatest restraint from both of us not to fuck each other like crazy. It was only because it was Rose on top of me with her perfectly calm, collected coolness, that I was able to hold myself back even this long.\n\n\"So, did this reunion go exactly to your plans, Ryan Collins?\" Rose asked me.\n\n\"Not exactly,\" I admitted. \"I mean, I'd kind of always hoped, but...\"\n\n\"But nothing. You did a great thing today. You took a shot on something that could have gone any number of ways, and it went a way that was not only as intended, bringing happiness to a number of those who could've used some, but some that by a collateral manner could bring some happiness to you as well,\" Rose said.\n\nReaching down, she grabbed my cock and lined it up with her pussy.\n\n\"As a gamble well played, I'd say it's up for some celebration, wouldn't you?\" Rose asked, pressing the head of my cock just between her pussy lips.\n\nLooking over at Brooke and Haley, I whispered to her, \"Not a very long celebration, after what we started.\"\n\nSliding slowly, oh so joyfully down the full length of my cock, Rose leaned over and whispered back, her voice somehow huskier and sexier than usual, \"Don't worry, after what those two started, I won't have all that long either. Why don't we just have some nice, slow fun, finally find that sweet release we both need, and get ready for what's bound to be a very, very long day?\"",
        "\"I can agree with that,\" I said, grabbing her by the hips and slowly pulling her down me until she'd swallowed me to the root.\n\n\"Excellent,\" she replied, picking up the pace as she rocked back and forth on my cock. The way her body was tensed and the way my cock felt, I knew we were both open nerves just ready and waiting for that one last push over the edge to cum. I hoped I could hold out long enough for her to cum first, but with Rose Ferris being the one riding my cock, I knew that was an unlikely hope at best.\n\nIt was at a moment like that that I thanked god for Brooke and Haley being there, because if anyone else wanted Rose to pop off sooner rather than later, it was them. Each of them slid up beside Rose, sandwiching her between them as she fucked me, kissing and licking and fondling her, pushing her closer and closer to the edge. Though the sight was enough to get me close to the same, I was happy that it seemed to be pushing Rose closer, faster.\n\n\"You gotta cum, you gotta cum, don'tcha sweetie? It's okay to cum, cum on him, you know how fun it is, just cum, pretty, pretty please?\" Brooke said in a sickly sweet whimper, the kind that could get any man or woman to do some truly terrible things. She tweaked one of Rose's nipples daintily in her hand before bending over and taking it in her mouth.\n\n\"Yeah, cum for us, slut. Ryan says you're still the same girl you used to be, well, prove it to us. Prove to us that you're still one of the biggest fucking sluts in this whole fucking school,\" Haley hissed.\n\nNearly gasping for breath she was so close, Rose said, \"I don't... have to prove... anything to you... fuck... SLUTS... but, oh FUCK I'M STILL GONNA CUM, I'M GONNA CUM, CUMMING, CUMMING, MOTHERFUCKER I'M CUUUUUUUUUUUUMMMMMMMMMMMIIIIIIIING!!\"\n\nI'd been on the receiving end of a fair few epic orgasms in these past few months, even been fortunate enough to be the cause of more than a few of them, but Rose on top of me probably had to take the cake. Whether it was the buildup or the upswelling of emotion as she had reunited with her two old friends, I couldn't say, but you'd have thought she was struck by lightning for how hard this climax took her. The sudden impact of it caused her to cry out with a high-pitched, pleasurable wail, her body jerking with enough force to send Brooke falling backward onto the ground. Haley held onto her tight, only barely, and helped Rose through the powerful orgasm.\n\nI was tipped over the edge the moment she first squeezed me when her orgasm hit, but the moment she squirted on my stomach I completely lost it. I held onto Rose tight, thrusting out the last couple heavy thrusts I was capable of before cumming deep inside of her. It felt like a floodgate had opened for how much cum I pumped into her, grunting and groaning, not wanting to let her go while I still had a few drops within me yearning to burst forth. In the brief moments Rose's eyes were capable of opening, we looked at each other, into each other.\n\nI hadn't gotten to spend as much time with Rose as I'd have liked over the past few months, but with what we exchanged there, I knew it wasn't about the amount of time we spent together, but how we spent it.\n\nUtterly spent, Rose collapsed onto me, kissing and babbling incoherently in a manner that would probably make her embarrassed for dropping her usual cool, but it wasn't something I was going to hold against her.\n\nIt took a while for both of us to come down (and Haley being there next to us, touching and kissing us both as we came certainly didn't help on that front), but since we were in no hurry, we both sat contentedly conjoined without a care in the world.\n\nAt least until Brooke spoke up.\n\n\"Hey, these blankets you got on this chair here, they good to get, like, dirty?\" Brooke asked, pointing to a few old comforters Dad and I kept handy just in case we had company and they got cold.\n\n\"Yeah, whaddya have in mind?\" I slurred. Words were not exactly my strongest suit right now, nor were they Rose's for the way she dreamily looked at me and kissed me.\n\n\"Now, I know we don't got enough people to make it work like it's usually done best, but I think we can at least half-do a decent Mouth Party,\" Brooke said.\n\n\"Mouth Party?\" I asked.\n\n\"Oh, one of those would be lovely,\" Rose replied, stretching and smiling like a very satisfied cat.\n\n\"I don't know, but I'm willing to try; first time we'd have had a guy at one, but there's a first time for everything,\" Haley replied, licking her lips.\n\n\"What the hell is a Mouth Party?\" I asked no one in particular, though I guess since I was still looking into Rose's eyes, I might as well have been asking her.\n\n\"I could explain it, but it'll be a lot more fun to hear Brooke describe it, won't it, Brooke?\" Rose asked.\n\n\"Totally,\" Brooke said, spreading the blankets out on the floor.\n\n\"You heard her,\" Rose said, standing up on wobbly legs that barely held, a river of our own juices flowing from her pussy down her legs and onto the blankets I was suddenly glad that Brooke spread out. Almost at once, Haley crawled between Rose's legs, lapping up our juices like it was the greatest thing she'd ever eaten, savoring each drop with great relish.\n\nSmiling cutely and daintily walking toward me, Brooke started, \"So, once upon a time a bunch of us cheerleaders got together to gripe about boyfriends and how shitty most of them were, since, like, we got our own tastes, but only certain types of guys seem to be into us and most of them are shitheads. It was good ol' Cap'n Dakota who said, like, hey, we were all friends, and we'd all seen each other naked, why couldn't we just take care of each other when we got horny?\"\n\n\"That... makes about as much sense as anything else in this town,\" I said.\n\n\"Totally,\" Brooke giggled, dropping down between my legs and playing lightly with my softened and very sensitive cock. \"We started just hanging out at her house and, you know, pairing off and, like, fucking each other silly, but sometimes we, got more than two people together and then a threesome became a foursome and a foursome a moresome and, well, you get the picture.\"\n\nIt was a very nice picture. I nodded. Brooke smiled, kissing a drop of cum away from the tip of my cock.\n\n\"Well, sometimes you want a good formal orgy where, like, everyone's going crazy on each others' pussies, and sometimes you wanna just pair up with someone you like or find crazy hot, but, like, sometimes that's not what anyone wants 'cause we're tired or just don't want there to be pressure or anything like that if we like had a big game and didn't wanna deal with serious orgy setup shit afterward but still wanted to get off, so Dakota created this thing she calls a Mouth Party. We just spread some blankets out on the ground and it's just like this low key, chill place where we can hang out with no pressure or expectations, make out, go down on girls you wanna go down on, play with toys if you got any, laugh, talk, do each others' hair and fool around as much or as little as you want until people are ready to, like, do more, or not if they're not. It's pretty sweet, especially if, like, we've all cum as hard as we have and need a way to, you know, relax, be casual and shit. Good way to recharge,\" Brooke explained, occasionally stopping to take my cock in her mouth and lick off the mixed juices, but otherwise getting really into her little monologue.\n\nThough the image of a bunch of naked cheerleaders writhing around and occasionally going down on each other sounded like something I really wanted to see, the reality of having a casual, relaxing bit of fun after what we'd just done sounded kind of perfect.\n\nTaking her head out from Rose's thighs, Haley added, \"We've never had a guy in a Mouth Party because guys don't tend to know what to do with themselves and are fucking assholes when it comes to having patience and gentleness and all that shit, but we like you, I think, and it's not like this is an official Mouth Party or anything, so, we can fuck with the rules.\"\n\n\"It's not like Dakota's here to tell us what to do, ladies; we can do whatever the fuck we want,\" Rose said, running her fingers through Haley's luscious red hair while the bustier cheerleader continued to go down on her.\n\n\"So, you wanna join, or you just wanna watch?\" Brooke said, still slowly licking my cock clean and ending by sucking on my balls. With any other girl, I'd have thought that she was trying to coax me into the Mouth Party with this act, but with Brooke I knew that she was just that affectionate and sexual and was legitimately asking me whether or not I wanted to join.\n\n\"After all that excitement, I could use a little relaxing,\" I said.\n\nLetting my balls drop from her mouth, Brooke exclaimed, \"Awesome!\"\n\nShe crawled over to the spread out blankets and lay down next to Rose and Haley, running her fingers through Rose's hair with one hand and gently squeezing one of her own nipples with the other. After the frantic insanity of our couch fuckfest, seeing an act so gentle, so sedate, so intimate as these three girls enjoying each others' bodies in such a relaxed way was almost a shock to the system, but once I fully wrapped my head around it, I knew it was something I wanted to be a part of.\n\nI crawled over, laying down on my stomach next to Brooke and taking her other nipple into my mouth, lightly sucking and nibbling on it while she moaned.\n\n\"Mmmm, that's really nice,\" Brooke said.\n\n\"Thanks,\" I said, smiling. \"I try.\"\n\n\"You do a not so bad job,\" Brooke admitted, running a hand through my hair. Rose moaned loudly as Haley continued to eat her out, stealing Brooke's and my attention for a moment, but only just. I leaned in and kissed her on the lips, enjoying the sweet giggle that it pulled from her.\n\n\"How are you, these days? Feels like I haven't seen you in forever,\" I said.\n\n\"It's totally been a minute, hasn't it?\" Brooke said, leaning in and making out with me for a moment. My hand drifted down to her pussy, softly rubbing at her folds, and when Brooke parted her thighs to give me better access, I slowly began to finger her. \n\n\"I've been good,\" she said. Then, rolling her eyes up thoughtfully, she added, \"Well, good by me. Not the kinda naughty that'd take me off Santa's list, but, definitely naughty.\"\n\n\"Kicking ass and taking names?\" I suggested.\n\nShe laughed. \"More like fucking ass (mine) and learning names of new people I'm fucking. Lotsa fun!\"\n\nRose was moaning more steadily, her hands more fully pressed into Haley's hair, urging her on to eat her more and more. For what a bitch Haley was, she was doing what looked like a really good job at pleasuring her old friend. Whether it was some form of her apologizing for being such a bitch to Rose or she just loved eating pussy or some combination of those, it was hard to say, but it was fun to watch as Haley expertly brought her friend closer to an orgasm.\n\nBrooke bit her lip and looked at me. \"I kinda-sorta-definitely-maybe-but-really-definitely-sorta got a boyfriend.\"\n\nShe said this with great nervousness, as if she were revealing a great, embarrassing secret to me, the kind that would make me think less of her.\n\n\"Kinda-sorta-definitely-maybe-but-really-definitely-sorta?\" I asked, hoping I didn't miss any words.\n\n\"Well, we're a thing but he's cool with me doing all of this too, and, you know... he's a really sweet guy, really cool, and I really like him, and...\" Brooke trailed off.\n\nThinking on how similar that sounded to Josie and me, I nodded softly.\n\n\"As someone new to the relationship game myself, let me say: congratulations,\" I said, smiling and fingering her a little more insistently.\n\n\"You're happy for me?\" she asked, her breath likely short from a combination of nerves and what I was doing with her pussy.\n\n\"Are you happy?\" I asked.\n\n\"Yeah,\" she replied.\n\n\"Then I'm definitely happy for you. Totally,\" I said, throwing in one of her favorite words for emphasis.\n\n\"Yay!\" she exclaimed, looking about as cute as I'd ever seen her. She leaned in, kissing me energetically.\n\nBrooke King was someone I was used to seeing happy, since it seemed to be pretty much her default setting, but this, this was a whole new level of happiness for her, which radiated back easily and made me even happier for her. Though fingering her was definitely fun, she deserved more than that for opening up to me. I slid down the blanket, settling my face between her legs and started to eat her pussy.\n\nEating pussy had become one of my favorite things over the past few months, but since fewer were sweeter and more responsive than Brooke's tiny pink little slit, hers was always a particular pleasure to lap up. She was always responsive, laughing and giggling, squealing and cooing and offering naughty words of encouragement as I brought her close to another orgasm. She looked down at me and at Rose next to her in equal measure, the two friends smiling at one another, reaching out and holding each others' hands while they were orally pleasured. If I were in a rush, I might have felt competitive and tried to beat Haley to getting Brooke to an orgasm, but fully in the spirit of the \"Mouth Party\", I didn't. I ate Brooke at the pace that felt natural and sweet, not even picking up my pace when Haley brought Rose to another screaming climax.\n\nWatching the two of them holding hands, first as Rose came, then as Rose helped Brooke through her own orgasm a couple minutes later, was undeniably one of the hottest things I'd ever seen.\n\nThough the two of them seemed to be thoroughly wrapped up in each other through this, when she'd fully come down from her orgasm, Brooke looked down at me and smiled.\n\n\"Thanks, Ryan,\" she said sweetly.\n\n\"Anytime,\" I responded.\n\n\"I'm gonna go over and, like, make out with Rose and then finger her some more and we might make each other cum some more, 'kay?\" Brooke said.\n\n\"You won't hear any complaints from me!\" Rose said.\n\n\"Go for it,\" I replied. Brooke gleefully crawled over to her friend, and unable to avoid the opportunity I playfully swatted her on the ass as she went. The sight of the two blondes immediately embracing each other, their bodies intertwined, hands finding each others' pussies as their lips and tongues mashed together, it was undeniably erotic as fuck.\n\nThat it was interrupted by the two biggest jugs I'd ever seen filling my sightline was not something I was going to complain about.\n\n\"Let's make out,\" Haley said, a hint of her usual bitchiness in her voice, but this was more of a request than her usual demanding style.\n\n\"I'm good with that,\" I said, rolling onto my back. Though I would've been happy with her lips, the way she leaned in it was hard not to suck on her nipples they just looked so good. The way she moaned, and how her hand found my cock, I wasn't complaining that she took her time to find my mouth. When she did, it was every bit as passionate and fiery as I'd come to expect from her.\n\nHaley rolled half on top of me, half off, kissing and jacking me and giving me ample room to reach down and finger her dripping cunt.\n\n\"You've been busy,\" I said, curling my fingers down into her.\n\n\"My friends have a way of doing that to me, what can I say?\" Haley grunted as my digging fingers found her G-spot.\n\n\"So, we're friends now? Is that what we are?\" I hissed, returning some of the usual venom she saved for me and fingering her harder. In response, she jacked me even more energetically. With my precum mixing with a variety of juices, it was already slick and responding very nicely to her touch.\n\n\"I don't know, mmm, keep doing that you fucker... I don't know what we are. I don't know you like I know them, but I know, fuck, I know I like being around you, because we always have fun, and you seem nice... and if you did this, not expecting this, you'd have to be nice... you did that for us, for me, even though I've been nothing but a cunt to you... so, yeah, I guess maybe we are friends, if you'd want me,\" Haley said.\n\nI doubted Haley and I would be close friends, not like me and Tori used to be, not like Brooke and Rose were, not like Brooke and I were now, but with only a little thought I realized that having her as a friend was something I actually didn't mind.\n\nI rolled so that I was on top of her, climbing between her legs and lining my cock up with her pussy. I didn't know if this was or was not within the spirit of a Mouth Party, but I was just following my cock at this point. The way Haley looked up at me expectantly, nodding and biting her lip, I don't think she minded one bit.\n\n\"Yeah... yeah, I want you,\" I said, sliding my cock back into her pussy.\n\n\"Oh good... oh good, you fucker... I could really use a friend like you,\" she groaned as I slowly fucked into her.\n\nUnlike what sex with Haley was usually like, there was something weirdly sensual about being on top of her like this. In the past it had always been a dominance game, a frantic union where both of us were desperate to get on top of the other and not give the other an inch. Since I was pretty good at pleasuring her, it was easy for me to come out on top. Now, though, we felt like equals for the first time, I think. I just looked down at her, smiling and slowly pushing all ten inches of my cock in and out of her, watching as she dropped her defenses and smiled up at me with a pure, pleasured look.\n\nI kissed her, a sweet, soft kiss that she returned in kind. Haley Campbell may have had a strong and defensive shell when it came to everyone else, but right here and now we were just ourselves. No edge, no nerves, no defenses, just two people joined with each other and enjoying some soft, steamy sex.\n\n\"Okay, if they're gonna do that, I'm gonna totally bust out my strap-on,\" Brooke said, breaking apart from Rose only long enough to run over to her purse. Rose looked from her to us, her hands at her pussy and watching the show. She slid over so there were only a few inches between us, the better for all of us to be close by while we fucked.\n\nBy the time she looked up at Brooke, Brooke had already expertly slid on the pink straps of her strap-on and inserted a shockingly large, red and white striped dildo with stripes that ran perfectly along the spiraling ridges around it.\n\n\"I call it my Christmas Miracle!\" Brooke explained. \"Longer 'n thicker than even Ryan's monster, I'd bet!\"\n\n\"I don't care what you call it, so long as you're good to fuck me with it,\" Rose growled, pulling Brooke down on top of her. Brooke squealed, laughing and smiling as she crawled down between Rose's legs.\n\nThough I knew I should've been more focused on Haley, it was almost impossible not to be transfixed by the monster of a dildo being pressed into Rose's pussy lips. Thankfully, Haley seemed to be about as distracted, her mouth open in awe at the large toy. \n\nAs Brooke enthusiastically slid inch after inch inside of her, Rose's eyes bugged out, her moan filling the room.\n\n\"Oh fuck yeah, yeah, that's definitely bigger than Ryan's; no offense, Ryan,\" Rose said.\n\n\"None taken,\" I said, my own jaw nearly dropping open as Rose, with only some difficulty, took the entirety inside of her. \"Nicely done.\"\n\n\"Thanks,\" Rose grunted, looking down almost impressed at having taken it all. \"That's fucking huge.\"\n\n\"Well, yeah! Do I know how to shop or, like, do I know how to shop?\" Brooke asked.\n\n\"You know how to shop,\" Rose, Haley and I all said almost in unison. Then looking at each other at the insanity of the situation, the four of us burst out laughing.\n\n\"Okay... this is all fucking well and good and fun, but I'm really close to cumming, and I think Ryan is too, can we, you know, stop laughing and start getting off?\" Haley asked, looking up at me and kissing my neck.\n\n\"Totally!\" Brooke squeaked as she started to fuck Rose.\n\nI looked back down at Haley and began fucking her again. \"You're a lifesaver.\"",
        "\"And don't you fucking forget it,\" she said, pulling me down for a kiss. In response, I began to fuck her harder, angling for deeper penetration while taking slow, long thrusts into her. Her massive tits pillowing against my chest, her hard nipples, her tight little pussy, all of them conspired to try to make me cum before her. Sure, she was shuddering slightly, her muscles tightening as she readied herself for another powerful cum, but she really tried to set me off.\n\nSqueezing her vaginal muscles the way she did... that didn't make it any easier.\n\n\"You really can be a bitch sometimes,\" I grunted, smiling.\n\nShe laughed and squeezed my cock again. \"Sometimes?\"\n\n\"Fine. Play it that way. I guess I'll just have to fuck you harder, then,\" I said, doing just that.\n\n\"And... this... is... a... punishment?\" Haley groaned her hips matching my harder thrusts.\n\n\"If you'd like...\" I grunted, fucking her harder and harder.\n\nShe was close. I was close. The sex was good. It wasn't a surprise to either of us that we managed to cum together any more than it was a surprise that Brooke had managed to make Rose cum yet again at the end of her Christmas Miracle. What was a surprise was... well, how good it felt. With Haley and I looking deeply into each others' eyes, my cock buried as deep as it could in her pussy and filling her as best it could with cum, our orgasms riding us hard, we felt almost like we shared the same body. Sure, a body that was also a twitching mass of pleasure and blind ecstasy, but one that felt damn good.\n\nWhile Haley would no doubt still act a cunt at school, I knew I'd never look at her quite the same, and that that wasn't necessarily a bad thing.\n\nI collapsed on top of her, panting and out of breath, kissing her as softly as Brooke was kissing Rose passionately.\n\n\"I love you, I love you, I love you, I love being friends again, let's always be besties and never let me fuck things up again!\" Brooke whispered to her sweetly and urgently, kissing Rose and squeezing her breasts affectionately.\n\nRose looked at me, amused and grateful. She could've looked at me however she wanted. With one last, final kiss with Haley, I climbed off of her, unmindful of the river of cum that spilled from her pussy as I crawled over and leaned up against the base of the couch.\n\nPanting, her own delicious chest rising and falling with each breath, Haley looked at the other two. \"Hey, you didn't cum, did you, Brooke?\"\n\n\"Huh. No I didn't. I'll cum a whole lot more, though, today, so ya know, it's no big whoop,\" Brooke said.\n\n\"If you'll let me use that strap-on, I can make you scream,\" Haley suggested.\n\nTwirling one of her pigtails around a finger and flipping it aside, Brooke looked down at Rose with a conflicted, confused look that said she didn't want to abandon her recently rediscovered friend, but at the same time she had about as much difficulty as anyone would have turning down a chance for hot sex with Haley Campbell.\n\n\"Okey dokey, Red!\" she exclaimed, pulling the dildo from Rose's pussy and crawling over to Haley. While the two of them negotiated with the toy, Rose looked up and around as if trying to figure out what the fuck just happened. When her eyes settled on me, I could see her mentally shrug before she crawled over and sat next to me at the base of the couch.\n\n\"This has been a strange fucking day, hasn't it, Ryan Collins?\" Rose said, running her fingers down my chest.\n\n\"That's one way of putting it,\" I replied. Brooke had taken off the strap-on by this point but was having far too much fun sliding it around Haley's ample ass, squeezing and kissing her friend and even burying her face between Haley's ass cheeks to playfully lick her tight hole, an act that made Haley honest to god yelp.\n\n\"Next time you've an idea that works on sitcom logic, remind me of how today went so I can appropriately temper my skepticism rather than giving it complete free rein,\" Rose said.\n\nGiggling, Brooke had gotten on all fours while Haley crawled up behind her. Though Haley's own experience with a strap-on appeared limited, Brooke was all too happy to urge her on.\n\n\"Come on, Red! I know you ain't used a strap-on before, but it's a piece of cake, honest! Just shove it in me and do all that back and forth deal that Ryan and the rest all do and FUCKING WOW, THAT'S WAY BETTER WHEN SOMEONE ELSE IS SHOVING CHRISTMAS MIRACLE IN ME, FUCKING AAAAAAWWWEEEEEEEEESSSSSSSOOOOOOOOOME!!\" Brooke squealed as Haley thrust into her.\n\nWatching a redheaded cheerleader with the biggest tits I'd ever seen in person fucking a tiny blonde cheerleader (who was also cute as a button, I might add) from behind in front of a roaring fire and not all that far off from a mostly decorated Christmas tree, well, that might well have been the greatest holiday special I'd ever watched.\n\n\"Give me this over the Grinch any day,\" I said, my hand drifting between Rose's soaked thighs.\n\nHer hand finding my cock at almost the exact same moment, Rose said, \"While I'll grant you that the Jim Carrey and Benedict Cumberbatch interpretations truly lack charm, I won't besmirch the true artistry of Boris Karloff and Thurl Ravenscroft by entirely agreeing with you.\"\n\n\"OH FUCK YEAH, HEY, GUYS, ISN\"T THIS AWESOME!\" Brooke squealed.\n\n\"But this is pretty nice too,\" Rose admitted, shrugging.\n\nWe watched them fuck like that for a good while, mildly pleasuring each other with our hands as we enjoyed the show. While I loved talking with Rose, there was a certain special something to being able to share such a comfortable silence with her. We didn't need to impress each other, we didn't need to fill any voids, we could just sit back and be comfortable with each other, enjoying a good (and increasingly loud) show.\n\n\"So,\" Rose said, finally breaking our silence. \"Can I ask you a question that you should feel absolute freedom not to answer?\"\n\n\"Sure,\" I replied.\n\n\"After today, and what you've done for us, how many names do you have left on your list?\" Rose asked.\n\nI seriously considered not answering her, as the contents of that list had so far been a secret that only Josie knew all the details of. I could have answered Rose without an answer, and I knew she would've been okay with that, but given how close we were and how good I felt, I saw no harm in giving her an answer.\n\nI counted through the names in my head and then said, \"After you three... seven.\"\n\n\"Seven left... and presumably many more already checked off,\" Rose said.\n\n\"Yeah,\" I replied.\n\n\"This many good deeds for this many people, there's a lot of people out there who'd say that this was a righteous thing you've done, and that you wouldn't truly have an obligation to do this anymore, that whatever you're atoning for has been well and truly righted by the good karma you've earned,\" Rose said.\n\n\"Yeah...\" I trailed off, having thought pretty much the exact same thing more than once in my journey. I'd started this off by making things right as best I could for the McNeils, the people I'd screwed things up with the most, early on in my Christmas adventure. I could've let it sit at that and quit any number of times since, and I doubted anyone would have held it against me, and yet...\n\n\"I could do that, but I won't, 'cause that's not how this works. I set out to do this, I set out to do something nice for every woman I've been with this year, and I've been doing good. I've been doing damn good, if I'm being honest. I'm more than halfway done, and there's still a lot of good I can do for a lot of people, and I mean to do it. This is a good thing and I don't... I don't want to screw this up,\" I said.\n\nRose pondered what I said for a good few moments, looking back from me, to Haley fucking Brooke, then finally at my cock. Due to her ministrations and the show we were watching, I was already close to half hardness.\n\n\"When it comes to not wanting to screw up well earned good things, I understand where you're coming from entirely, Ryan Collins. In the spirit of that, I was wondering if you could help me with something on the imminent side,\" Rose said.\n\n\"Sure. What do you need?\" I asked.\n\n\"To start, I'll need to suck your cock until you're nice and hard,\" Rose said.\n\n\"I have absolutely no problems with that, at all,\" I said.\n\n\"Good, because I'm sure you'll enjoy the next part even more,\" she replied, bending over and taking my cock into her mouth. Though it meant my cock was no longer in her hand and my fingers were pulled from her quivering slit, I'd found it best not to complain when a girl with a mouth as talented as Rose Ferris' has started sucking on your cock.\n\nShe bobbed up and down on me expertly, applying just the perfect amount of pressure and tongue to bring my cock back to life in a hurry. If she'd only meant to make me hard again, it was hard to tell with the way she kept sucking on me, taking more and more into her throat. Bent over the way she was, I was able to reach behind her and finger first her pussy, then her ass from behind, making her moan. We pleasured each other like this for a while, my attention torn between watching what Rose was excitedly doing in my lap and the Brooke and Haley still going at it.\n\nMy fingers still in her ass, Rose got up on her knees and called out to Brooke, \"Hey, Brooke! You still want Ryan to cum in your no-longer-quite-so-tight-but-still-ever-so-delectable little pussy?\"\n\n\"Totally!\" Brooke exclaimed, her body being rocked back and forth heavily with Haley's thrusts. Even with tits as tiny as hers, it was rather exciting watching them bounce like this.\n\n\"Well, I got him ready for you!\" Rose said with pride.\n\n\"Awesome!\" Brooke said, crawling away from Haley. \"Sorry, Red, we'll have to finish this later!\"\n\nHaley grumbled. Rose next turned her attention to her. \"Oh, stop whining and take off the strap-on; I'm gonna fuck you with it 'til you scream.\"\n\nHaley considered this, then rocked her head from side to side. \"Fine. But you better do a good job of it.\"\n\n\"When it comes to making you cry out from the most world-shattering pleasure you've ever had, have I ever let you down?\" Rose asked.\n\n\"Quite the charmer, you are,\" I whispered to Rose.\n\n\"You know it,\" she replied, crawling over to Haley. As she passed Brooke, the two exchanged some quick kisses and caresses I knew they wanted to be more than quick, but with her hungry eyes on my cock, Brooke saw me and crawled her way over.\n\n\"You better have saved some cum in those balls for little ol' me!\" Brooke exclaimed, running her hand down my cock and cradling my balls.\n\n\"For you? Always,\" I replied.\n\n\"Sweet!\" she said, pushing me onto my back on the blankets and straddling my cock, settling it once again in her deliriously tight pussy. As she was already well and properly fucked with the strap-on, she was already quite soaked by the time she settled down onto me, but even with the number of orgasms she'd had, she was still as energetic as ever as she began to ride my cock. Given how things had gone and how much these girls had taken out of me, I was fine with this arrangement. I knew this could go on for a while, and I wanted to be good for it. Letting Brooke take the driver's seat for now, well, that was fine by me.\n\n\"Oh fuck, that's fucking big!\" Haley exclaimed. On her hands and knees, her giant tits hanging down beautifully beneath her, she closed her eyes tight as Rose slid the entirety of the Christmas Miracle into her pussy.\n\nWatching Rose taking Haley from behind while Brooke rode my cock like an expert rodeo rider, knowing that this day was going to hold so much more to come, I gotta say it was beginning to feel like a truly magical season.\n\n***\n\nThe doorbell rang, and though it was difficult, I managed to dress in a hurry in my t-shirt and sweatpants. I ran for the door and swung it wide open, revealing the pizza delivery girl. She was a cute Latina, college aged, slender and short with curly hair tied back in a ponytail and sneaking out from underneath a baseball cap. Her nametag read \"Maggie\", and she smiled at me with what might have been the most brilliant smile in the world.\n\n\"Hi, I'm here with your pizzas! That'll be twenty-five dollars and... are you okay?\" she asked me.\n\n\"Yeah, why do you ask?\" I asked, even though I knew the answer. I was flushed and mussed up from an entire afternoon of fucking, no doubt reeking of sex and sporting a pretty good erection that tented the front of my sweats. It would've been a small miracle for her not to know what was going on, but with the day I had, I didn't really care.\n\n\"Uh... nothing. That'll be twenty-five dollars and forty cents, please!\" she said, chipper and trying to ignore whatever odd feelings this might have had. No doubt as cute as she was in this line of work, she'd seen some weird shit and had some inappropriate customers, and I didn't mean to add to that.\n\n\"Sure,\" I said, feeling around in my pockets and coming up empty. \"Shit... one second.\"\n\nI called out into the house, \"HEY, CAN SOMEONE BRING ME MY WALLET, PLEASE?\"\n\nI probably should've specified \"someone who was dressed\", but didn't have the time. I just had to hope for the best, and... well, I lucked out, mostly.\n\n\"Here!\" Rose said, plodding up in a long t-shirt and little more. Maggie goggled at the unexpected presence of a very beautiful girl wearing next to nothing being in my presence, but was polite enough not to say anything.\n\nThough my funds weren't exactly in the best place this holiday season, I pulled out forty dollars and gave it to her for her trouble. \"Keep the change.\"\n\nMaggie looked at Rose and me with a deeply puzzled expression, but just said, \"Sure. Thanks!\"\n\n\"Did I hear pizza?\" Brooke squealed, sliding into the hall behind us. To her credit, she had wrapped a clean blanket around most of her body. Less to her credit, it was pretty clear that she was naked underneath.\n\nShe exclaimed, \"PIZZA! And a cute pizza girl too! Hey, you look sweet, wanna come in? We're kinda having a party and you're, you know, cute and all, could definitely have some fun...\"\n\n\"Don't pay attention to Brooke, she's crazy,\" Rose explained.\n\nBrooke continued, \"No I'm not! I'm festive and cute and fun, and she's working hard and looks like she could use a break because I know delivering pizzas is hard and cruel and weird fucking work, and-\"\n\n\"-and she needs to get back to work just like we need to eat our pizza. I'm sorry for the confusion, we'll get out of your hair now, Maggie,\" I said.\n\nMaggie looked at us with a strange sense of bewilderment and... was that curiosity? Was that her looking each of us up and down?\n\n\"Oh, come on! We know how to have fun, and he's, like, got the biggest cock you've totally ever seen!\" Brooke yelped as I forced the pizzas into her hands.\n\n\"You should probably get out of here before it gets crazy,\" I said to the pizza girl.\n\n\"Yeah,\" Maggie said, shaken somewhat, turning back down the walk to her car and sparing us an extra, confused glance.\n\n\"Awww, come on, she looks like she could've been fun,\" Brooke pouted.\n\n\"And we're not fun enough?\" Rose asked.\n\n\"There's always room for more fun,\" Brooke said.\n\n\"Just like there's room for more pizza on the coffee table,\" I said, reaching under the blanket and fingering Brooke's naked cunt.\n\n\"Alright, alright, I get when I'm not wanted...\" Brooke said, returning back inside, grumbling. \"Better check on Haley, see how her ass is doing...\"\n\nRose nodded at the house next door. \"What's going on over there?\"\n\nI looked over toward where the Martinez family used to live to see a single car with a U-Haul trailer attached.\n\n\"New neighbors moving in, finally,\" I said.\n\nFrom this distance, I could see two people emptying boxes from the back; a stout, middle-aged black woman, and a teenage girl I took to be her daughter. Her daughter was taller and lean, dressed in a long winter coat a few shades too warm for this weather, and her hair, natural and curly and dark with a healthy bounce held in a loose afro that stood up and out a good six to eight inches from her head. Turned to the side as she was, it obscured her face, though I was definitely curious to get a look. I'd heard about them when I last met Mr. Martinez before he moved out, though for the life of me couldn't remember their names. I reminded myself that I'd have to meet them later and say hello.\n\nThe daughter, perhaps sensing she was being watched, turned to us and revealed a very pretty face with a shy smile. \n\nA very pretty face. The kind that could break hearts.\n\nSeeing us, she waved. Rose and I waved back, casually. The new girl darted behind the U-Haul.\n\n\"She's cute,\" Rose said.\n\n\"Yeah,\" I admitted, lingering on the word a little longer than I meant.\n\nRose picked up on this easily. \"Want me to get Brooke over here and so she can invite her to party with us too?\"\n\nI poked Rose in the side, shaking my head. \"Let's get back inside, it's cold out here.\"\n\n\"Couldn't agree more,\" Rose said, kissing me as I closed the door behind us. With each and every step we took back to the living room, more clothes came off until we were naked again. Rose was as glorious as ever in all her naked beauty, even with a collection of new hickeys and her inner thighs seemingly permanently flooded by a wide variety of juices. Though it was a miracle from this epic, marathon four-way, I was still somehow hard and happily following my erection behind her. Watching her ass sashay toward the living room (an ass I'd had the pleasure of fucking twice today), I was reminded again of how happy I was with how today went.\n\nWhen we entered the living room, the pizzas were on the coffee table and Haley was right where we'd left her, bent over the couch with her ass cheeks spread wide by a naked Brooke. Brooke had seemingly emptied an entire bottle of lube all over Haley's magnificently round ass, and sat thrusting three fingers into Haley's tightest hole.\n\nHaley moaned, \"Brooke said... you had a cute pizza girl...\"\n\n\"Yeah, but today's about us. Maybe next time,\" I said.\n\nHaley shook her head, laughing grimly. \"A cute pizza girl? Seriously? And I thought today couldn't be any more of a porno.\"\n\n\"Well, once you've got Ryan's cock up your ass, it will be,\" Brooke said.\n\n\"I'm working up to it,\" Haley grunted.\n\n\"Yeah, yeah, that's what you always say; Rose has had him twice today, I've had it three times, I know it's big but Ryan's cock is amazing up the ass, believe me! You call yourself a slut, then you really gotta try it!\" Brooke said, playfully pushing her fingers in and out of her.\n\nGritting her teeth, Haley said with some finality, \"Okay, let's do this, then.\"\n\nBrooke tossed a nearly empty bottle of lube to Rose, who quickly lubed up my cock.\n\nI knelt down behind Haley, gently pushing Brooke out of the way and rubbing my cock up and down between her ass cheeks.\n\n\"You've got a really nice ass,\" I said.\n\n\"Thanks,\" Haley said, looking back at me.\n\n\"You sure you're good with this?\" I asked.\n\n\"Definitely. You sure you can take an ass this perfect?\" Haley asked, taunting and pushing me on.\n\nSmiling, I pressed my lubed up cockhead against her tight and lubed hole, sliding in with only slight resistance.\n\n\"I'll manage,\" I grunted, sliding a couple more inches inside of her. She grunted and pounded on the couch, but still wiggled her ass back at me, forcing even more inside of her.\n\n\"Oh fuck, oh fuck goddamn, keep fucking my slutty ass, give it all to me, fuck, goddamn it's so fucking big, you guys weren't lying, but it's so fucking good, so fucking good, fuck, keep fucking me, FUCKING GODDAMN!\" Haley roared as I bottomed out inside of her.\n\nGrabbing her hips, I started fucking her properly, giving her almost the entire length of my cock with each stroke.\n\n\"See, this is why I got you doin' all that cardio; when this comes around, you're, like, super prepped to keep on fucking!\" Brooke said proudly.",
        "\"You're... seriously, FUCK! Talking about your workout plan while you, fuckfuckfuck, fuck! While you're watching him rail my ass!\" Haley asked.\n\n\"Totally,\" Brooke said, putting her hands on her hips proudly. Then, almost as if a light bulb went off above her head, she brightened with an idea. \"We should totally invite him to the party!\"\n\n\"What party?\" I asked, not for a second slowing down on Haley's ass. She may not have worked out to a point where her ass was as tight as Brooke's or Rose's, but that didn't mean I wanted to savor it any less.\n\nHaley explained, her hand dropping between her thighs so she could better work her clit while I fucked her. \"Dakota's throwing a New Year's Eve bash... oh yeah, keep going, right there... all cheerleader thing, probably all sex...\"\n\n\"So I take it I'm... god your ass is so nice... I'm not invited?\" I grunted.\n\n\"We'll invite you,\" Brooke said.\n\n\"He'll be my date,\" Rose said, confidently.\n\n\"Are you invited?\" I asked.\n\n\"No, but I'm coming anyway. I just wanna see the look on Dakota's face when we crash the party,\" Rose said.\n\n\"She'll probably flip her shit over you, but since she's wanted to fuck Ryan ever since Kaitlyn started boasting, I think he'll be your ticket in,\" Haley said, her eyes rolling back as she got closer to an orgasm. I was working up to one too, probably not as epic as usual (I'd already lost count of how many times I'd cum today), but I hoped it would be enough for what we had planned.\n\n\"Yeah?\" I asked, an image of the cute yet intense cheer captain floating before my eyes. She wasn't someone I'd ever thought about in any seriousness, since she'd always kind of scared me a little (especially with how most of the cheerleaders talked about her), but she was definitely a looker. Besides, a New Year's Eve party with a bunch of naked cheerleaders? Yeah, that didn't sound bad, not one bit. \n\n\"Totally,\" Brooke and Haley said together, though Haley soon added \"FUCKING GODDAMNIT!\" into the mix when she came hard. Her ass tightened around my cock, squeezing me so deliciously exquisitely, pushing me toward my next orgasm.\n\n\"I'm cumming, I'm cumming!\" I directed the three girls, pulling out of Haley's ass and standing up. At once, they all lined up before me on their knees, a perfect picture of depravity as I shot what I could across three of the most beautiful pairs of tits in the world.\n\n\"Go set it up, hurry before it all drips off!\" Brooke directed as the three of them sat on the couch together.\n\n\"I'm doing it, I'm doing it!\" I said, setting up my phone to camera mode, then setting the timer. I propped it up on the coffee table and ran for the couch, sitting between Rose and Haley and putting my arms around them. Brooke tossed the Santa hat on my head, the elf hat on Rose's, then laid out across all three of our laps, grabbing my cock and opening her mouth with a look of mock shock.\n\nThe camera flashed, immortalizing this picture of our depravity. Extricating myself from the girls, I picked up the phone and brought it over so we could all see the picture together.\n\n\"Now that is one I'd like to see on a Christmas card!\" Brooke said, kissing my cheek.\n\n\"Only you'd be so big a slut as to have that on a Christmas card,\" Haley said, cocking her head to look at it. \"But it does make my boobs look good.\"\n\n\"It doesn't terribly matter what the picture does or doesn't look like, it's what it means that counts, and what it means is that, ladies, we're back,\" Rose said.\n\n\"We're back,\" Haley repeated.\n\n\"We're fucking back! Yay!\" Brooke said, jumping up in the air and splattering some cum on Haley's face.\n\n\"Nice one,\" Haley complained.\n\n\"Sorry, Red. You get first choice of pizza?\" Brooke offered.\n\n\"I better!\" Haley said, walking over to the pizza boxes with Brooke in tow.\n\nSmiling, pressing her body against mine, Rose pulled me in for a kiss. \"We're back, Ryan Collins, and we've got you to thank for it.\"\n\n\"Just doing what I can,\" I said.\n\n\"Well, what you should do next is grab some pizza with us before Brooke and Haley take everything,\" Rose said, smiling. She lightly ran a hand along the underside of my cock, then went to join the others.\n\nThere was nothing more that I would've liked to do than join the three of them, but there was something I had to do first.\n\nFinding my discarded wallet, I took out the folded up piece of paper from within, then crossed out some more names with a pen. It was a cathartic process, and one that pleased me to no end to see what I'd accomplished.\n\nADDISON\n\nX - BROOKE - X\n\nX - HALEY - X\n\nX - HOPE - X\n\nJADE\n\nJOSIE\n\nKAITLYN\n\nMALLORY\n\nX - MARIE - X\n\nX - MRS. LYNN - X\n\nX - MRS. MCNEIL - X\n\nX - MRS. SULLIVAN - X\n\nNADIA\n\nX - NOA - X\n\nX - RACHEL - X\n\nX - ROSE - X\n\nX - SARAH - X\n\nSOPHIE\n\nX - TORI - X\n\nI smiled. \"Almost there. Almost there...\"\n\n\"You better get over here, Ryan Collins, before Brooke steals all the pepperoni!\" Rose called out.\n\nLaughing, I replied, \"Coming!\"\n\n***\n\n(Author's Note 2: I know this was a ridiculously long chapter, but I want to thank you for your patience! I hope you enjoyed reading it as much as I enjoyed writing it. Writing this story is something I do in my spare time for fun, so if you're enjoying this, please, please, please drop some stars, reviews or shoot me some feedback, as they really keep me going (and please vote on any earlier chapters you enjoyed if you haven't already!). Though I may not always respond, I do love hearing from all of you and seeing that you're enjoying the series. It motivates me to continue writing more. You've all been wonderful and I can't thank you enough for all of your kind words and encouragement and yes, even the criticisms!)"
    ],
    "authorname": "aimingtomisbehave33",
    "tags": [
        "18-year-old",
        "high school",
        "slut",
        "group sex",
        "teacher",
        "asian",
        "oral",
        "anal",
        "toys",
        "big breasts"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/senior-year-memories-ch-21"
}