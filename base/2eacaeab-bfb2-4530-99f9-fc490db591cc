{
    "title": "Valentines for Cinderella",
    "pages": [
        "1.\n\nThere was something about her, but Ray wasn't sure what it was. He watched the numbers on the gas pump count up and tried not to be obvious, but he couldn't stop himself from listening.\n\n\"I'll be there in a few,\" she said, \"I'm putting two dollars in my gas tank. I hope that'll get me to the next check.\"\n\nHer bearing was erect but her movements were still fluid. Her skin was pale but her eyes, like her hair, were dark. She seemed a little taller than most women, and she was thin but the muscles in her legs defined long, clear lines. She wore a sweatshirt and shorts\u2014odd attire for early October.\n\nRay stepped between the pumps and took the nozzle out of her hand. She stepped back in surprise and looked up at him.\n\n\"I'll fill your tank for you, if you'll tell me your name.\" Ray said. He held his credit card up so she could see. Her hair was pulled back into a tight bun. Her neck was long and graceful, her facial features were refined and perfectly symmetric.\n\nShe stepped back and, with her arms crossed under her breasts, she studied him up and down. He didn't look threatening. His sandy hair was a little messed by the breeze. He wore a dark suit; his tie was loosened and his collar was open. \"Probably not thirty yet,\" she thought to herself. She glanced around him at the dark blue sedan he had been fueling, then accepted the business card that he offered.\n\n\"Ray Ellison\u2014Sanford, Casals and Levine PA,\" it said. She tried to hand the card back to him, but he said, \"Keep it, please.\"\n\nShe had something to gain and probably not much to lose, so she relaxed and said, \"I'm Melissa White,\" then added self-consciously, \"Friends call me Mel.\"\n\nRay ran his credit card, then inserted the nozzle into her old Dodge and latched it on. \"What do you do?\" he asked.\n\n\"That wasn't part of the deal.\" Mel said. His face must have fallen visibly, so she gave in, \"I'm a principal dancer for Franklin Ballet.\" She watched his expression for signs of recognition and found none. It wasn't that she expected it, but she always felt good when people recognized her name.\n\nRay caught his breath. \"She's a ballerina,\" he thought, \"I guess that explains the look.\" \n\n\"Do you have dinner plans?\" Ray asked. The afternoon was fading to evening, and he needed to eat. He couldn't expect her to accept his invitation, but if he could face Mel across the table then it would make dinner so much better.\n\nMel laughed. \"I've eaten. We have a show tonight; seven o'clock at the Performing Arts Center. Why don't you come?\" She had no expectation that he would go to the show.\n\nThe gas pump shut itself off and Mel backed away while he put the nozzle back in the pump. To Mel's surprise he said, \"I'll do that.\"\n\nRay knew almost nothing about ballet and even less about dancers, but he suddenly wanted to learn. He stopped at home to change clothes and ate at the diner across the street from his condo, where he formulated an ill-conceived plan over a plate of pasta. He stopped at a flower shop on his way to the theater and bought a bouquet of red and yellow roses and a card to go with them then wrote, \"I'd like to get to know you better. Text me. Ray.\"\n\nHe walked around the theater looking for some way to get the flowers to Mel. The stage door was ajar, but guarded by a gruff-looking hand. He held the bouquet up and asked, \"Is there some way to get this to Melissa White?\"\n\nThe stage hand laughed, \"Not a chance.\"\n\nA lean and sinuous blond woman dressed in a leotard and tights pushed the door open when she heard Mel's name. She looked at Ray then said, \"Mel said she met someone on her way here. Are you the guy that bought her a tank of gas?\"\n\n\"I am.\" Ray said.\n\nShe extended her hand and offered, \"I can take those to her.\"\n\nRay settled into a balcony seat with the Don Quixote program on his lap. He watched the seats slowly fill with people until his phone buzzed in his pocket. Mel texted, \"Are you in the house?\"\n\n\"In the balcony,\" Ray replied, unsure of what she meant. \"I'd like to talk to you again.\"\n\n\"I have a thing in the lobby after the show,\" Mel said. \"If you wait for me there then we can talk.\"\n\nAccording to the program, Mel danced the role of Mercedes. That was meaningless to Ray until she entered the stage on the arm of a matador. The rest of the cast stepped back into the scenery, then her red dress flew around her legs as she danced among the men. Her movements were subtle and erotic at times, spectacular and athletic at others.\n\nRay tried to find the woman from the gas station in the fiery dancer on stage. He succeeded when she lifted her chin, and her dark eyes flashed in the stage light. She had the same pale skin but her dark hair was decorated with a comb, and she had curls glued to her cheeks. In Ray's mind, Mel floated above the stage as if she were somehow immune from gravity.\n\nHe waited in the lobby after the show where groups of kids\u2014mostly young girls\u2014talked and chased each other, and he tried to fight off the feeling that he was hopelessly over his head.\n\nIt was the children who announced Mel's arrival. She came from a side door, still dressed as Mercedes and still on the arm of her matador. The kids bounced and jostled around them. She grinned and tried to calm the kids down, then looked up to find Ray waiting.\n\n\"You made it!\" she said. \"I'm surprised.\" She turned to the matador and pulled him forward, \"This is my partner, Julio.\" Disappointment must have been plain on Ray's face, and she hurried to clarify, \"My dance partner, not my, you know... partner,\" and that made Julio laugh.\n\nMel knelt among the children and left Ray standing with Julio. Ray was fascinated; her red lips parted in a bright smile and her eyes sparkled for the kids as she told them the story of Kitri and Don Quixote. Ray hardly took his eyes off from Mel when he asked Julio, \"Does she do this all the time?\"\n\n\"Whenever Lovato isn't watching,\" Julio said with a shrug. \"The kids are her thing, not his.\"\n\n\"Lovato?\" Ray asked.\n\n\"Paul Lovato, the Artistic Director,\" Julio answered. \"His way of doing things and Mel's way of doing things are pretty different.\"\n\nThe kids' mothers and fathers started pulling them away after Mel finished her story. She hugged a few and kissed a few and sent them all away before she stood again. She looked from Ray to Julio, then squeezed Julio's arm. \"Thanks for coming out with me,\" she said, and sent Julio away before she turned back to Ray.\n\n\"I liked the flowers. They were beautiful, and they made all the girls talk,\" Mel said. She stepped closer and asked, \"Did you like the show?\" She smiled and seemed to rise toward him while she waited for his answer. Her animal scent tickled Ray's senses\u2014warm and somehow exciting.\n\n\"I did,\" Ray said, but then was nearly lost for more to say. \"I... I, especially liked Mercedes, but the story was kind of hard to follow.\"\n\nMel laughed, \"Ballet isn't that good at telling stories.\" She backed up as she went on, \"I'm glad you came. Now I need to go change.\"\n\nRay followed as Mel retreated, \"Can we go someplace?\" He asked. \"A movie? A restaurant? A bar? I don't care.\"\n\nMel stopped and studied Ray's face then said, \"This was our last show, so some of us are getting together at Sammy's. It'll take me about an hour to get there. You can hang out with us if you don't mind being with a bunch of underpaid dancers.\"\n\nSammy's was a popular restaurant and bar on the periphery of downtown that served food late; it wasn't far from Ray's place and he knew it well. He waited at home to give Mel time to get there and the longer he waited the more his shoulders tightened in anticipation.\n\nThe restaurant was lit with a golden glow. He stepped past the hostess and before his eyes could adjust to the light he heard Julio call, \"She's over here!\"\n\nThe dancers sat at a large, round table with Mel's roses in a beer mug at the center. Other dancers sat at smaller tables nearby. Julio and the other men arranged themselves on one side. Mel was on the opposite side flanked by two blond women. Her hair was still pulled back into a tight bun, but she wore a short dress that fit her form instead of the sweatshirt that Ray first saw her in; her eyes were dark mysteries in the restaurant lighting.\n\nRay worked his way around the table, shaking hands first with Julio and then with the other men. While he circled the table, one of the blonds gave up her seat next to Mel and found a new seat beside Julio.\n\n\"This is Jill.\" Mel said, and motioned to the blond beside her. She pointed to the girl who got up so Ray could sit with Mel and said, \"That's Jenn. They're my roommates.\"\n\n\"They're the bookends,\" Julio added with a laugh, \"And Mel is the book.\"\n\nRay reached behind Mel to shake Jill's hand and said, \"Aren't you the one that took the roses to Mel? Thanks. I didn't think your guard there was going to help.\"\n\n\"He's an ass,\" Jill said, \"And he has a crush on Mel.\" Mel rolled her eyes and Jill added, \"Mel has all the luck with guys!\" Ray laughed, but had to wonder if Jill was cautioning him.\n\nRay bought appetizers for the table and martinis for Mel. He traded stories with the dancers about protein supplements and workout routines, injuries and physical therapy and felt like he was in the familiar company of jocks. As they talked, it became clear to Ray that the men and women around him were lean and taut, and he was not. He became awkwardly conscious of his expanding waistline.\n\nMel got louder and more affectionate as the drinks took effect. \"Oh, I know what to do with these!\" she said, and lifted the roses from the beer mug. Ray watched while she dodged the wait staff and weaved through the tables to visit all the dancers; she gave red roses to the men and yellow roses to the women. The last red rose she saved for Ray.\n\nJenn moved around the table and sat in Mel's seat. She whispered to Jill and then told Ray, \"Mel is getting drunk.\" Ray watched and had to agree. Jenn went on, \"She made us promise to take her home when she got drunk. Nothing personal, you know. You could be the best thing that ever happened to her, but she's going to be sober when she figures that out.\"\n\nRay stood to meet Mel when she came back to the table. As giddy as she was, she still walked with her back straight and her head up. Her smile focused on Ray and when she was still a couple steps away she extended the last red rose to him. Maybe it was because her head was up and her eyes were on Ray that she tripped over a chair leg and fell with a whoop into his chest.\n\nRay caught Mel and the red rose then stroked his hands down to her hips to steady her. She buried her face against his shoulder while the dancers laughed. Ray could hear her muttering \"God, I'm so stupid. I'm so drunk.\" Her touch and scent\u2014now a little boozy\u2014sent a thrill through Ray's body.\n\n\"Good catch!\" Jill said, and pried Mel off from Ray. He only protested a little while Jenn and Jill wrapped Mel in her coat and tugged her toward the door. They almost had her out of the restaurant before she turned back to Ray. Mel held her hand up beside her face with her thumb and pinky finger extended. She called across the restaurant, \"Ray, call me tomorrow!\"\n\nJenn scowled at Mel and then called to Ray, \"After one. Don't you dare call before one.\" \n\nThe men at the table all started laughing. Ray looked at them curiously and Julio asked, \"Mel really got to you, didn't she? Your interest is showing.\"\n\nRay's hard-on bulged the front of his pants. He couldn't sit down fast enough then when he finally stood up again he had a plan. He'd eat a healthy breakfast in the morning then go for a run. If there was time, he'd see about renewing his membership at the gym on the ground floor of his condos. Then he'd call Mel and hope for the best.\n\n\"Have you recovered?\" Ray asked when Mel answered her phone.\n\n\"Look, I'm really sorry about last night,\" Mel said. \"I guess the martinis went straight to my head. I should have eaten more.\"\n\n\"Why don't you make it up to me over dinner?\" Ray said. \"We'll make sure you eat enough this time.\"\n\nMel wasn't hard to convince but she still wasn't ready to trust Ray. She arranged to meet him at a coffee shop and from there they went to a noisy brew pub that served good steaks with their beer.\n\nRay was proud of his healthy morning, but when he told Mel about it she laughed and touched the rim of his beer glass. \"Keep it up,\" she said, \"But If you want to lose some fat and get back in shape you might start by drinking less of this.\"\n\n\"I have a lot to learn,\" Ray admitted, then pointed to Mel's glass, \"But you're drinking beer, too.\"\n\n\"Ray, between classes, rehearsals and performances I work out at least six hours a day, five or six days a week most of the time. It's what I do for a living. I can get away with a few things that you can't, but I still have to watch what I eat. You know, high protein and no extra fats.\"\n\nShe sat back and watched Ray for a second then changed the subject, \"The J's all thought you were okay. Jenn and Jill liked you. Julio thought you were too straight, but that's not a bad thing for me.\" Mel's eye sparked in the light from behind the bar and she smiled when she said, \"He told me how impressed you were.\"\n\nIf the room hadn't been so dark, Mel would have seen Ray blush. She reached over the table and touched his hand. \"And you made me feel comfortable, and you make me feel comfortable now.\"\n\nRay folded his hand over Mel's and admitted, \"You make me excited. I'd like to get to know you better.\"\n\nMel looked around to see if anyone was about to interrupt, then leaned to Ray. She said, \"Euphemisms aside, if you want to 'get to know me better,' then I'll give you that chance. You would be surprised how hard it is for a girl to get well-laid around here.\"\n\nThe grin that spread on Ray's face was so wide it made his cheeks hurt. \"Why would a woman like you have ever have that problem?\" he asked.\n\n\"Ray, you have no idea,\" Mel said. \"We don't get out all that much. Not every guy wants a dancer for a girlfriend, then travel, long hours, and jealousy\u2014they all make it hard to meet guys and keep it together.\"\n\n\"Then I'll do what I can,\" Ray said. He still couldn't wipe the grin off his face, but he was serious; it was a contract. He waved to the server, suddenly anxious to leave. \"My place?\" he asked.\n\n\"Mine,\" Mel answered. She was comfortable with Ray, but still not ready to give him full control. The server leaned over her shoulder to talk to Ray, and Mel interrupted, \"Can you box our leftovers, please?\"\n\nRay barely let Mel settle into the car before he tugged him to her, first with his hand on her arm, then behind her neck. They were still at the gas station where they met when he first started wondering how Mel's mouth might taste, and he found out. His lips brushed hers and she parted them. Her tongue met his and her breath warmed his cheek. Mel clutched the front of Ray's shirt, and she did nothing to slow his exploration. His hands cupped her breast and he felt her nipple harden under her bra. His fingers traced up the inside of her thigh and he felt the crotch of her jeans grow warm and soft.\n\nMel pushed herself back and panted, \"Drive!\" She wiped her mouth with the back of her hand and tried to calm down. \"Turn left at the light and go straight.\" She directed him through pools of lamp light to a townhouse on a cul-de-sac across downtown from his place, and then she gathered their leftovers and led him to the door.\n\nMel pushed the boxes of leftovers into Ray's hands and said, \"Wait here. I have to make sure that Jenn and Jill are decent.\" When she came back she pulled Ray first to a small kitchen to put the leftovers away, then up the stairs to her bedroom.\n\nShe kicked her way through point shoes and leotards scattered on the floor and stopped beside her bed. Ray turned her around when she stopped. He opening her shirt, and unhooked her bra then looked down. Her breasts weren't large, but they were high and round and the streetlight that fell through her window highlighted the muscles in her belly. When he looked up again, there were two questions he needed her to answer.\n\n\"Do we need protection?\" He asked, and when Mel shook her head he wondered, \"How much control do you need?\" If he were going to lay her well, then he needed to know.\n\n\"Some,\" Mel said. She unbuttoned Ray's shirt, opened his belt and looked up, \"Don't overpower me, okay?\"\n\nRay pushed Mel onto her bed and leaned over to kiss her mouth while he opened her jeans. He ran his hand over her belly, then pushed it into her pants and down into her panties. He slipped his fingers through her well-trimmed muff and farther down to explore the already-wet folds and creases between Mel's legs.\n\nMel pushed Ray back so she could pull her pants and panties off. She threw them into a corner then watched from the shadows while Ray shoved his pants down and climbed onto the bed beside her.\n\nRay laid down and pulled their bodies together. He searched for those things that excited Mel the most. He tasted her throat and felt her nipples grow hard in his mouth. He slipped off the bed to kneel on the floor, and kissed the inside of her thighs, then inhaled the feminine scents that rose between her legs. He dragged her pussy lips between his teeth, and lifted her to his mouth with his hands under her butt. Ray pushed his tongue deep into Mel to taste her, then he took her whole, soft mound in his mouth.\n\nMel knotted her fingers in Ray's hair and held him in place while his tongue flicked over her hood and around her button. She spread her legs around his shoulders and repeated his name. Her already-firm body grew tense as her excitement mounted, and then she screamed through her climax and thrashed in Ray's grip.\n\nRay could hardly breath, so when Mel's body relaxed again he let her go and laid his head on her thigh while they both gasped for air. It was only then that they could hear \"Would you keep it down up there? Jeez!\" coming from down the stairs.\n\nMel laughed, \"I think they're jealous. God Ray, that felt good.\" She tugged him up onto the bed, then when Ray turned her over on her belly she protested, \"What are you doing?\"\n\n\"I can't believe how good your body feels,\" Ray said. He climbed over her and straddled her hips with his cock straining up between them and he studied the way the light from the street outlined the contours of her back. He leaned down to inhale from her neck then kissed her ear.\n\nHis hands caressed Mel's shoulders and her back. He touched her softly at first, then started to work her muscles. He sought out tight knots and smoothed them. He worked her back until Mel was moaning with each breath.\n\nMel's back was smooth and soft when Ray climbed off her hips. He pushed her knees apart, knelt between her thighs, and grasped her butt cheeks in both hands. Mel giggled while he rubbed her and spread her cheeks to see the fresh nectar gleaming on her pussy. He held her with one hand on her hip and slipped the other into her to wet his fingers, and then he found her clit again.\n\nMel lifted herself to welcome his touch while Ray opened her and toyed with her trigger. Her breath came in excited gasps. He coated his cock with Mel's juices, then leaned over her while he worked the head of his cock into her wet slit.\n\nRay panted in her ear. \"Are you ready?\" \n\n\"Past that!\" Mel answered, then she pushed back against his thrust and gasped into her pillow while Ray's cock sunk into her. The sounds Mel made excited Ray and she grew louder as he fucked her. He grasped her wrists and held her in his arms while his hips slapped against her butt, then her felt her body tighten under him. She groaned into her pillow and her cunt clenched around his cock.\n\nThere was nothing more that Ray could do. He slammed himself as deep into Mel's perfect body as he could reach and he let himself go. Each of his ecstatic contractions pumped his essence into Mel then he fell off from her and rolled away.",
        "Mel gasped for breath while two voices from downstairs shouted \"Dammit Mel! Quiet down!\"\n\nShe followed Ray and squeezed her body against him while she kissed his face and his ears and his neck. \"I'm probably going to have hell to pay in the morning,\" Mel murmured in Ray's ear, \"But now I couldn't feel better.\"\n\nRay pulled Mel's relaxed body against him and let her lips caress his throat. He knew from the way she melted against him that Mel was a well-laid woman.\n\n2.\n\nThey held each other until dawn light replaced the streetlight that fell through the window, then Ray suddenly stiffened and sat up on the edge of the bed. \"Dammit!\" he cursed. \"It's Monday.\" He turned back to Mel and said, \"Do you have to work? I've got to go.\"\n\n\"We get Monday off after we close a show,\" Mel answered, \"So I don't have to go to the studio today. Use my shower. I'll go fix you some breakfast.\"\n\nRay worked through his day in an exhausted daze and didn't try to reach Mel again until after he had dinner with a client. He got no reply.\n\nHe ran again the next day, a little longer than before, then went to the gym after work. He tried to reach Mel again and again she didn't reply.\n\nIt wasn't until Tuesday afternoon that Mel answered Ray's text message. \"I'm at the Calhoun Community Center.\" She said. \"If you want to talk then see me here.\"\n\nThe community center was in a slum on the south side of downtown. Ray parked next to Mel's old Dodge, then before he went inside he took everything he could move from his car and locked it out of sight in the trunk. He found Mel in warm-ups, leading a rowdy crowd of kids in games and exercises.\n\nThe smile on Mel's face and the energy she projected made it obvious to Ray that she loved what she was doing. It was just as obvious from the way the kids clamored for Mel's attention and followed her instructions that they loved Mel. \n\nRay found Mel's bag by the wall, so he sat a chair next to it and waited, and watched. Mel didn't seem to realize he was there until the games wound down and the kids started to leave, some with parents and some alone. She grinned and waved to him, then turned to talk with a woman who seemed to be in charge of the place.\n\nMel toweled her neck and chest while she walked across the room to Ray. He stood when she got closer and groaned as he straitened his legs. Mel looked at him with a question in her eyes and Ray answered, \"The gym yesterday and running this morning... I'm sore.\"\n\n\"It won't take long.\" Mel said. \"Then you'll feel better.\" She looked behind him before she picked up her bag and put the towel inside. \"I don't want to talk here,\" she said. \"Let's go to my car.\"\n\nThey walked out of the building in silence, then in the parking lot Ray asked, \"You looked like you loved doing that. Is it something that Franklin Ballet has you do?\"\n\n\"Oh God, no,\" Mel said and laughed. \"Paul, the Artistic Director, docks my pay when I leave early to do this here, or over at the Westside center. He doesn't support this kind of thing at all. I do it because I need to.\" She stopped to unlock the car before she finished her thought. \"It would probably help the company if Paul supported any kind of community involvement, but he doesn't.\"\n\nMel's car smelled like dirty socks. She didn't seem to notice, but Ray coughed through his nose to clear his senses. She didn't even wait to hear what Ray had to say. \"Ray, the other night was great, but do you remember at dinner when I told you how hard it was for dancers to have relationships?\"\n\n\"Yes?\" Ray answered. The conversation was already going in a bad direction.\n\n\"I don't want to lead you on.\" Mel said. \"The company is leaving early in the morning for like a month. We're touring a mixed repertoire show out west and then back again. We have a weekend of shows when we get back in November then we'll barely have time to get ready for Nutcracker, and that's insane.\"\n\nRay was stunned. \"I wish I knew,\" he said while he searched for ways to express himself. \"If I knew, then it probably wouldn't change anything. Can we stay in touch? Maybe when you get back we can find time.\"\n\nMel looked doubtful. \"If you want,\" she said, \"But a lot of things can change in a month.\"\n\n3.\n\nRay felt Angela's hand stroke across his back. His muscles were sore from the weights and her touch felt good.\n\n\"Who is she?\" Angela asked. Their long afternoons after sex were often filled with very private conversation.\n\n\"What?\" Ray asked, and turned his head to look at her. He'd known Angela for almost ten years\u2014since they were undergraduates. She was his girlfriend briefly, but they couldn't spend much time together without arguing, and since then they got together only when there was a need. Today was for her. Things were a little different now; instead of being school friends they were working for competing firms.\n\n\"You haven't been this trim since you were playing intramural basketball.\" She said. \"You've obviously put in a lot of work. Doesn't there have to be a girl behind it somewhere? It sure isn't me.\"\n\nRay studied Angela's expression. She was very good at hiding her thoughts, so he didn't know where to go. He went with the truth. \"Her name is Melissa White,\" he said, and turned to face the window away from Angela.\n\nAngela waited just a breathless moment. \"Do you love her?\" she asked.\n\n\"No. What does that mean?\" Ray said, \"I don't even know her very well.\" It had been three weeks since the company left. He sent her messages now and then and heard back from her as they moved the show from Denver to Bakersfield, to Santa Cruz and to Seattle.\n\n\"What does she do?\" Angela asked.\n\n\"She's a dancer.\" Ray said, and then was surprised when Angela pushed herself away.\n\nShe screeched, \"What, like a stripper?\"\n\nRay flopped over on his back to look at Angela. Her soft body and full breasts where familiar, but so different from Mel's. \"No,\" he said. \"A ballerina. A good one, I think.\"\n\nAngela laughed and pulled the sheet over them. She said, \"And you know shit about ballet, right?\" There was an edge to her voice that she wasn't trying to hide. \"Ray, you've never changed yourself for a girl. I think I want you to do me again, like now, because it may never happen again.\"\n\n4.\n\nRay paced outside security while he waited for Mel. They kept in touch for nearly a month just with text messages. It wasn't a relationship, but it worked out for Mel when the company's flight from Minneapolis was canceled because of weather, rescheduled, and then postponed.\n\nHe saw her round the corner from the concourse. Her hair was in a pony tail that swung behind her as she walked, and her dance bag was over her shoulder. She hardly paused when she reached Ray; she tugged on his arm and insisted \"Let's go!\"\n\n\"Don't you have another bag or something?\" Ray asked while he tried to catch up with her.\n\n\"Jill will get my bag and Jenn has my car keys, and you have me,\" Mel said. \"I want to get out of here before Paul figures out what I'm up to.\"\n\n\"I think I can get you there just about in time.\" Ray said. If he hadn't taken up running, then he would already be out of breath. Mel seemed to perch on her seat until he asked, \"How was the tour?\" Her texts already told him most of the answer, but he wanted to hear it from her.\n\n\"Oh God, Ray,\" Mel said. She buried her face in her hands and shook her head. \"I couldn't get away from the drama: the threats, the sobbing, the sullen stares\u2014and that was just the guys. Paul picked on everybody, but especially on the apprentices. I don't think any of them are going to stay on.\"\n\nMel dropped her hands and shrugged. She said, \"The shows were mostly successful. We had good audiences and nice receptions. But it'll be good to get back to normal.\"\n\nThe kids were waiting when they reached the community center. Ray stopped outside the recreation room and watched Mel throw her arms open and kneel on the floor to hug each one. It was hard for Ray to guess who was more excited\u2014the kids or Mel.\n\nHe waited until all the kids were gone, then picked up Mel's dance bag and walked to where she talked with the center's director. Mel tugged on the front of his shirt and introduced him with, \"This is Ray. I wouldn't have made it here without him\"\n\nAfter the director turned away Mel rose on her toes and kissed Ray's cheek. \"Thanks,\" she said, \"That was important to me.\" She held her trembling hand up to show Ray and said, \"That's over, and now I really have to eat.\"\n\nThey hurried back across the dark parking lot. Mel walked step-for-step with Ray with her hands clutched around her arms to ward of the cooling night air. When they stopped by Ray's car, he suggested, \"We can stop at the market to get something for dinner and cook at my place.\"\n\nHe unlocked the car and put Mel's dance bag in the back seat. She was already waiting in the passenger seat when he slid behind the wheel. \"I love that idea.\" Mel said. \"It means I don't have to look across a table at Jill or Jenn for a change. I need to get something to snack on first, but then I can cook.\"\n\nThey laughed through the grocery store then worked side-by-side in the kitchen to fix dinner. When it was over, Mel pushed Ray away and insisted, \"I'll load the dishwasher.\"\n\nRay was on his sofa with his laptop in front of him when Mel finished cleaning. She settled onto the cushion beside him, and her hand traveled up his arm. \"Oh, I like this,\" Mel said and squeezed Ray's bicep.\n\n\"I've been running and lifting ever since that party at Sammy's. You guys made me feel really out of shape,\" Ray explained, then he laughed, \"I haven't lost weight yet, but I don't jiggle as much when I run.\"\n\n\"I need to get into this some more,\" Mel said, then she looked at the screen in front of Ray. \"What are you doing?\"\n\n\"Just reviewing some notes,\" Ray answered. He put his work away and watched Mel while he said, \"I'm going to be in Baton Rouge for the rest of the week, getting ready for a trial. The trial is scheduled to take the rest of the month and I'll have to be there most of the time.\"\n\n\"Are you going to miss our shows this weekend?\" Mel asked, and tightened her grip on his arm. \"We have a Friday night show. On Saturday we have a matin\u00e9e and an evening show, then a cast party at Sofia Baker's house. She's the chairman of the Board, so we have to go.\"\n\n\"I can be here Saturday night.\" Ray said, \"And I'll take you to the party.\" Mel laid her head on his shoulder and her scent rose to him, warm and feminine.\n\nRay tucked his finger under Mel's chin and she lifted her head to look at him. He was about to propose bed when she said, \"Ray, I'm sorry, but dinner is putting me to sleep; I'm exhausted, I don't feel great and I sure don't feel sexy. Can you take me home now?\"\n\nRay's plans went crashing down. \"Now?\" he asked, and when Mel nodded he said, \"Let me get my jacket.\"\n\nIt took Ray a little longer to get ready than he expected. When he went back to Mel, he found her asleep on the couch with her phone in hand. She didn't stir when he sat down on the edge of the cushion in front of her and slipped the phone out of her hand. The last text she sent went to Jill and Jenn and said, \"Ray's bringing me home.\"\n\nHe set the phone down and squeezed Mel's shoulder to wake her. She still didn't show any sign of waking up, so Ray picked up the phone and sent a new message. \"Mel fell asleep on my sofa. I'm going to let her sleep here and bring her back in the morning.\"\n\nRay stood up and studied Mel while he tried to figure out what to do next. He folded the covers back on his bed, then slipped Mel's shoes off her feet and carried her to his room. He knew that his libido wouldn't let him sleep next to Mel, so he laid her head on his pillow, pulled the covers over her, and went back to the sofa to finish his review. He slept there alone.\n\nMel woke with a startled squeal when Ray's alarm went off beside her. He jumped off the sofa and found her sitting up and fumbling at the alarm.\n\n\"Sorry, I need a loud alarm sometimes.\" Ray said. He touched the alarm off and sat down next to her.\n\nMel laughed and her body relaxed. \"Wow,\" she said. \"I can't believe how well I slept!\" She stretched her arms over her head then asked, \"Your bed is a lot nicer than a hotel mattress, but how did I get here?\"\n\nRay explained what happened, and Mel pulled herself against him to say, \"That was really sweet of you.\" She checked the time and went on, \"I need to be at the studio by nine. How does that work?\"\n\n\"We can do it,\" Ray answered and thought through his morning routine. \"I'll drink some milk and do a quick run.\" He leaned over Mel's shoulder and wrinkled his nose at her scent, which seemed so pleasing the night before. \"If you shower while I'm gone then I can shower when I get back. My flight's at 10:30, so I'll probably need to get you to the studio a little early, or take you home.\"\n\n\"Can I fix your breakfast?\" Mel asked. \"You shouldn't fly off on just a glass of milk.\"\n\n*****\n\nRay couldn't understand how Julio did it. Mel seemed so weightless in his hands, but he knew better. Mel's body was muscle and sinew and bone; she was heavier than she looked. She seemed to relax back against her partner, then the curtain closed on the first act while she stroked her long fingers along his cheek and they stared adoringly into each other's eyes. The audience loved it.\n\nHis phone suddenly buzzed with a message. Mel sent, \"God Julio sucks sometimes. Did you see that?\"\n\n\"Yeah. Probably not the same way you saw it,\" Ray answered. \"What happened?\" It was only the second ballet he'd ever seen, how was he to know?\n\nMel answered, \"He was supposed to lift me at the end but he slipped. We totally made up that ending. Paul is pissed off.\"\n\nRay didn't get a chance to reply before his phone buzzed again. \"Can you come back stage? I want to talk, not text. Jenn will meet you at the back door.\"\n\nThe back door was watched by a middle-aged woman who laughed and stepped aside when Jenn pulled Ray into the darkness. She tugged him around a corner to a dimly-lit stairwell, but angry voices echoed up the stairs so Jenn pushed him back into the wing curtains and hissed, \"Wait here. I'll come back.\"\n\nThe metal stairs rang under the feet of a white-haired man in a gray suit. He was red-faced and his tense, abrupt movements told Ray that he was angry. He slammed through the back door and bit off a terse \"Sorry,\" to the woman at the door, and the door closed behind him.\n\nMore feet sounded on the metal stairs; Paul Lovato stomped into the wing and spun toward the stage, but he was met there by a tall, thin man with gray hair. Ray recognized him as Rudy Lowe\u2014the company's executive director.\n\n\"What the hell did you think you were doing?\" Rudy demanded. He jammed his finger into the artistic director's chest then pointed to the back door. \"He represented twenty percent of our annual budget and I doubt there's anything I can do to fix that now.\"\n\nPaul stepped back from Rudy and waved his hands. \"He wanted me to pull 'Cat Fight' out of repertoire. He said it wasn't good enough. I'll make up my own mind about what is and isn't good enough. He's just one foundation, there's more.\"\n\nRudy laughed, \"There aren't nearly as many people who want to pay for your work as you like to think there are.\" Rudy stepped closer to Paul and went on, \"When someone is giving you that much money, they have a right to exercise some influence. And he's right. 'Cat Fight' is trite, and it isn't even original. You lifted the whole beginning from Pacific Northwest, so get over yourself.\"\n\nPaul backed up again as Rudy advanced on him. \"These foundations have a herding instinct. I have a lot of damage control to do now, or more money might follow him out.\"\n\n\"Come now,\" Jenn said. Ray was absorbed in the argument, so she took him by surprise. Jenn grabbed his wrist, pulled him down the stairs into a dressing room, and then latched the door behind them.\n\nRay had to blink against the bright light, then he found Mel sitting in a dressing robe at a wall-sized mirror. She touched up her makeup while Jill brushed her hair back and wrapped it into a tight French twist. He looked around then asked, \"I'm really not supposed to be back here, am I?\"\n\n\"No, but I wanted to see you,\" Mel answered. She waved to Jill and Jenn and added, \"and they're okay with it.\" She looked back into the mirror and told Jill, \"That looks good. Thanks.\"\n\nMel stood to take a costume off a rack and laid it on the counter in front of the mirror. She glanced at Ray and asked, \"What do you think of the show so far?\" She turned away and loosened her robe while she watched in the mirror for his reaction.\n\n\"It's fun to watch,\" he said, \"But I don't know what you're doing, like I couldn't tell that Julio slipped in your last piece.\" He was fascinated by watching Mel slip into her costume. It was a dark blue body suite marked with lighter blue flames that swirled up her legs and torso.\n\nRay felt suddenly stupid when Mel dropped her robe so she could pull the costume over her shoulders. She smoothed the satiny fabric over her hips and Ray blurted, \"That looks really hot!\" It was the most eloquent thing he could say at the moment. Jill and Jenn laughed, but they were interrupted by a knock.\n\nJulio's voice came through the door, \"Open up Mel. Lovato made a change.\" Mel unlatched the door and Julio stepped in wearing a costume that matched Mel's. \"He pulled us out of the second act. He wants Jill and Jenn to do their doppelg\u00e4nger thing instead.\"\n\n\"Shit! We don't have time!\" Jill said. \"When's it going in?\"\n\n\"After 'Cat Fight',\" Julio said. \"That should make you look pretty good.\" He looked at Mel and told her, \"Lovato was pissed off about my slip. You know it's the way he rolls, so now we're done until bows.\"\n\nJill and Jenn scrambled to set their makeup in front of them and Mel pinned their hair up. The music was starting overhead while Mel complained, \"That is so childish. I wish they'd get rid of him. He's getting more confused all the time and blames his mistakes on everyone else, he treats everyone like shit, and this is just stupid.\"\n\n\"It sounds like you might not be the only one who'd like to get rid of him.\" Ray said. He told them about the argument he overheard between Paul and Rudy while the muffled music from the stage overhead changed.\n\n\"That will have to do.\" Jenn said and pushed back from the mirror. She picked two yellow body suites from the rack and handed one to Jill, then turned to look at Ray. \"Cover your eyes or something,\" then she turned to Mel and said, \"Or you distract him while we get dressed.\"\n\nMel pushed Ray back toward a couch against the wall while Julio laughed and backed out the door. \"I don't need to watch this,\" he said.\n\nRay fell back onto the sofa, and Mel climbed over him with a grin on her lips. She straddled Ray's hips and sat on his thighs, then covered his eyes with her hands while Jill and Jenn turned away and stripped to bare skin.\n\n\"What did I do to deserve this?\" Ray asked. He was immersed in Mel's touch and scent; he stroked her back and let his hands rest on her hips.\n\n\"You made me feel comfortable about being with you,\" Mel whispered. She leaned forward and brushed Ray's lips with hers to let him know what she was about to do, then she pushed her tongue into his mouth. Ray was distracted.\n\n\"Oh God,\" Ray moaned through Mel's kiss. His hard-on suddenly ached.\n\n\"Okay, you can look now.\" Jill said, then laughed when she turned back to see Mel mounted on Ray. \"Or not,\" she said. \"Suit yourself.\"\n\nJill and Jenn banged through the dressing room door and ran up the stairs while Mel yelled \"Merde!\" after them. She turned back to Ray and told him, \"I have to go watch. I'll meet you in the lobby after bows.\"\n\nRay followed Mel up the stairs; she stayed in the wing to watch and Ray\u2014since he wasn't supposed to be backstage at all\u2014sprinted for the theater. He watched Jenn and Jill dance as if they were one person looking in a mirror, then sat through the final piece and the bows. The theater emptied while he waited for Mel until only the security guard was left.",
        "\"Be patient,\" Mel texted, \"I'll get there as soon as I can.\" Mel finally showed up with her dance bag over her shoulder. Her hair was still up in the French twist that Jill gave her, but she was dressed for the cast party. Ray stopped her with his hands on her arms and gawked. Her long legs stretched below a short blue skirt that hugged her hips; the cowl collar fell low and invited him to taste her throat.\n\nRay licked his lips and said, \"You're gorgeous!\" then asked, \"How long is this party supposed to last?\"\n\n\"A lot longer than I want to be there,\" Mel answered, \"But Julio and I need to kiss up to the Board members.\" She tucked her hand into Ray's and tugged him to the door. \"Can we get something real to eat before we go, so we don't fill up on party snacks?\" she asked.\n\nRay drove west from the city after dinner, to where large homes perched on forested hillsides and commanded sweeping views of the city's lights. The night was cold and clear, and Mel stayed close to Ray's warmth while they walked to the front door. She stroked his arm with both hands and explained, \"Two of the Board members really like watching Julio and me dance. Rudy told us they know we aren't a couple, but they still have this sort of romantic fantasy that we are, and Rudy wants us to make them happy. I need to stick with Julio while they're still here.\"\n\nMel and Julio made a beautiful couple and they acted their roles well. Mel's eyes sparked in the chandelier light and she laughed with Julio as they entertained Sofia and the other wealthy, white-haired women on the Board.\n\nRay was standing alone when Rudy Lowe stepped up beside him. \"Miss White is lovely, isn't she?\" he asked. \"I saw you come in with her.\"\n\n\"There are a lot of beautiful people here,\" Ray said and motioned around the room. \"And maybe Mel is the prettiest of them all.\"\n\n\"I'm Rudy Lowe, the company's executive director,\" Rudy said. \"Did I see you back stage tonight?\" he asked, \"With Jennifer Parker?\"\n\n\"I was there,\" Ray admitted. He pulled a card from his jacket pocket and gave it to Lowe. \"I was there to see Mel\u2014socially, not professionally\u2014but I overheard you and Paul Lovato first.\"\n\n\"That's too bad,\" Rudy said. \"I should have been more careful about where and when I confronted him.\"\n\nRay watched Rudy's expression then asked, \"How do you make up for losing a fifth of next year's budget?\"\n\nRudy's shoulders slumped before he answered. \"The biggest thing right now is to avoid carrying debts into next year. Then we'll have to make some cuts. If we don't get new sponsorships, then the dancers may have to support more of their costs and maybe we drop a show from the season. Ultimately it's the dancers who are hurt by it.\"\n\n\"We do some pro bono work with non-profits,\" Ray said, \"and since I'm junior in the firm a lot of that falls to me. I've seen some problems. Do you have a card with you? I'm going to be out of town for most of the next two weeks, but I should have time to call and see if there are ways we can help.\"\n\nRudy produced a card, but their conversation was cut short when Jill slipped her hand around Ray's arm. \"You don't mind, do you?\" she asked. \"There's a creep from the lighting crew following me around.\"\n\nRay watched Mel until the Board members started filtering out then with Jill still on his arm he stepped up beside Mel. She looked around Ray at Jill then asked him, \"Are you branching out?\"\n\nJill protested, \"Mel, No! I just needed to get rid of a creeper.\" She held her hands up so that Mel could see.\n\nRay laughed, then settled his hand on Mel's hip and leaned to her ear to say, \"I want to take you home now.\"\n\nJill overheard. She leaned to Mel and hissed, \"You're going to Ray's this time, right? I actually want to get some sleep tonight.\"\n\n\"Yeah,\" Mel answered, \"We're going to Ray's,\" then she looked back at Ray. \"Right?\"\n\n*****\n\nRay unlocked the door, guided Mel into his darkened condo with his hand on her waist, and dragged his suitcase behind them. \"I haven't been here since I took you home Wednesday morning,\" he said. \"I should check the mail, but that can wait.\"\n\nMel stopped inside the door and dropped her dance bag. Ray flicked the switch behind her to turn on the light then closed the door. He tucked his hand behind her neck and when she looked up he said, \"I feel like a vampire, I've wanted to taste you ever since I saw you in the theater lobby.\"\n\n\"Then let me feed you now,\" Mel said, and tipped her head back to offer him her long, pale throat.\n\nRay inhaled Mel's scent and tasted her tender skin. He pulled her to him with his arm around her waist and dragged her flesh through his teeth. Mel giggled at the ceiling and wrapped her arms around his head.\n\nTension built in Ray's body until he finally released his breath with a desperate gasp. He pulled his head back to look in Mel's dark eyes and when she tipped her lips up to him he took her mouth. She rose in his arms to press her body against his and her breath burned on his cheek.\n\nMel broke off their kiss and laughed in Ray's ear. \"I want to see what I've only been able to feel through your shirt and jacket.\" she said. She stepped back and tugged Ray into the living room.\n\nRay dropped onto the couch and turned on the reading lamp while Mel settled down beside him. She peeled his jacket down off his shoulders then started unbuttoning his shirt. \"Ooh!\" Mel said as she slipped her hands under his shirt to feel his arms, then his chest. \"A month of working out did you a lot of good.\"\n\n\"Tone, mostly.\" Ray said as Mel's hands stroked down his side to his belt. \"I don't think I've lost any weight,\" he said with a laugh, \"But I don't jiggle as much when I run.\" He couldn't tell if Mel was listening or not. \"What are you doing?\" he asked.\n\nMel saw no need to answer. She kissed his chest, then unbuckled his belt and opened his slacks. She slid off the couch to kneel between his legs in her little blue dress and pulled his trousers and his boxers down to take his hardened shaft in hand.\n\nRay watched his cock slip between Mel's red lips then laid his head back and moaned. He touched her tightly pinned hair, then her ears and ran his finger tips along the line of her jaw. Ray couldn't possibly last long in Mel's mouth. He groaned, \"Oh God, Mel!\" to warn her that he was about to come. He thrust his cock up while Mel pumped him with both hands. His essence gushed into her mouth, onto her hands and her lips. She gave Ray a triumphant smile, then while he relaxed and tried to catch his breath she sucked his cream off his cock, and licked him off her lips and her hands.\n\nMel got up after she knew that Ray was done, went to the kitchen and came back with a towel. She kicked her heels off, settled on the couch, and cleaned him with the towel.\n\nRay wrapped his arm around Mel and kissed her ear. \"You were awfully good at that,\" he said.\n\n\"Thanks,\" Mel said. \"I remember that you were awfully good at it, too.\" She stroked his chin with her finger tips then brushed her lips against his.\n\nRay's hand slipped to the inside of her nylon-covered thigh then under her dress. Mel shifted to give his hand more room, and Ray bent over to kiss her. His tongue found hers and his fingers caressed the warm fabric between her legs.\n\n\"What are you doing, Ray?\" Mel asked as his hand stroked up to her waist, and this time it was Ray who saw no need to answer. He thrust his hand into Mel's panties, and she squealed and laughed while he tugged her panties and pantyhose down around her thighs.\n\nMel righted herself again and leaned back against the arm of the couch. She picked hairpins from her hair and watched Ray peel the nylon and satin down and off her feet.\n\nRay picked up her right foot and kissed her toes. \"You have very talented feet,\" he said.\n\n\"I have gnarled feet.\" Mel said. She wiggled her toes and said, \"There's hardly anything more important to a ballet dancer than her feet. They take a lot of abuse and they love a lot of attention.\" She shifted as she talked to invite Ray's eyes to travel up her leg and under her dress.\n\nRay rubbed the sole of Mel's foot with his thumbs and smoothed her hard muscles and tight tendons. He slipped his tongue between her toes and kissed them. He rotated her ankle to loosen it, flexed her foot and kissed the top of her arch.\n\nMel's hair was down and she was loosening the hairspray with her fingers when Ray set her right foot on the couch and turned his attention to her left foot. He brought her toes to his lips, and looked up her long leg while he kissed and massaged her foot.\n\nWhen Ray was done with Mel's feet he rose on one knee between her knees and tugged up on the hem of her dress. He slipped it under her butt then Mel lifted her arms and let Ray pull the dress over her head.\n\nMel laid back on the couch and let Ray study her sleek, naked body. He touched her lips and she kissed his fingertips. He touched her nipples and felt them grow firm, and he slipped his fingers over her taut abs then through her trimmed muff. \"You like being looked at, don't you.\" he said.\n\nMel laughed and told him, \"I've spent a lot of my life trying to make my body perfect, and I'm proud of it. Yeah, I like being looked at. I think all us dancers do\u2014I was a little surprised that Jenn and Jill didn't let you watch them in the dressing room tonight, but maybe that was because I was there.\n\n\"I like being watched on stage,\" Mel said. \"I liked it when you were watching me at the party, and I especially like it right now.\"\n\nShe sat up to slip her hand around Ray's hardened cock and lifted her legs around his hips. \"I'll have you right here, or you can take me to bed. Either way, I want you in me.\"\n\nMel's touch and her excited scent were maddening for Ray, but he caught his breath and said, \"We're going to bed eventually, so I'll take you there now.\" He dropped his shirt down his arms and bent to lift Mel off the couch\n\nThe bed was still unmade from when Mel slept there Tuesday night. Ray laid her down then tossed the covers aside and climbed over her. Mel's breath was so ragged and excited that her tits heaved when Ray bent to suck her; he caught her nipple between his lips then filled his mouth with her firm breast.\n\nMel wrapped Ray's head in her arms and laughed in his ear. He wasn't sure how she did it, but he found himself on his side with her leg over his waist. She squirmed down to get his hard-on in hand and rubbed it over her clit, then she slipped it back between her labia and worked him into her wet slit.\n\n\"Lay back,\" Mel said and pressed on Ray's shoulder. She leaned over him to click on his bedside lamp then sat back in a pool of golden light and told him, \"Now watch me.\" Mel's muscular torso writhed in a sensuous dance while Ray watched the excitement in every detail of her naked lines and curves.\n\nRay pressed himself back against Mel's rhythmic grind until she pitched forward on his chest, and her hair fell soft around his neck. She wrapped her arms around his shoulders, and she screamed through clenched teeth as her orgasm wracked her body.\n\nMel relaxed while Ray kissed her and inhaled the warm scent from her hair. Ray held Mel against his chest and rolled onto his side. He pulled her leg over his hip and watched Mel's expression while he thrust into her. She caught her breath and tipped her head back, and he knew she would come for him again. Mel gripped his shoulders and she panted his name while her climax tightened her cunt around his plunging shaft.\n\nThey relaxed in each others arms. They joked together, sang songs to each other and wrestled breathlessly\u2014slick, bare skin on skin. In the end, Mel coaxed Ray to empty himself into her one more time, and then he held her; he stroked her hair and kissed her face until they were both asleep.\n\nMel woke when Ray untangled himself from her. He stood by the bed and pulled the warm covers over her. She listened and watched him without leaving the bed. She was too warm and too relaxed to want to move even a finger. He pulled on shorts and a tee-shirt, cinched up his running shoes and left into the chill mid-morning.\n\nHe ran his usual two-mile course through the sparse Sunday-morning traffic. Church bells chimed in the distance and people who huddled in corners to sleep off their Saturday night were starting to stir.\n\nWhen Ray got home again he found Mel searching through the refrigerator, wearing nothing but the shirt she stripped off him the night before. He touched her hips and then bent to sniff her neck. \"You showered,\" he said.\n\n\"I did.\" Mel answered. She touched Ray's sweat-dampened tee-shirt and sniffed, then wrinkled her nose. \"And you need to. Do you want me to cook you eggs and sausage while you shower? It looks like that's what you have to eat.\"\n\nBreakfast was on the table when Ray got out of the shower with a towel wrapping his waist. Mel sat down across the table from him and asked, \"Do you have to do anything today?\" She noticed how Ray studied her, so she straightened her back and let the shirt fall open.\n\nAs Ray spoke his eyes traveled from Mel's smile to her small, dark aureoles and back again. \"I have to fly back to Baton Rouge this evening so I can be in the courtroom by nine in the morning.\" He said. \"Can you stay with me until then? I'll need to repack my suit case and get you home, but that still leaves us most of the day. I'd like to spend it in bed with you.\"\n\n\"A naked day?\" Mel asked. \"That sounds great to me. I didn't get nearly enough sleep last night to do much else.\"\n\n\"I'll clean up here and see you in bed.\" Ray said. He carried a bowl of grapes with him when he went. Mel was already asleep and his shirt was draped over the foot of the bed. Ray left the grapes by his lamp, dropped his towel and lifted the covers to look at Mel's relaxed body. He slipped into bed with her and she turned without waking to duck her head against his chest. Ray held her close and joined her in sleep.\n\nWhen Ray woke again he found Mel using him as a back rest while she snacked on grapes and read from a paperback novel. \"What are you reading?\" He asked.\n\n\"It's a romance that I think your girlfriend must have left here.\" Mel said. \"I found it under the edge of the bed.\" She folded the front cover and showed him Angela's name written in the corner.\n\nRay groaned to himself then realized that Mel didn't seem very upset, and maybe he wanted her to be upset. He sat up behind her and pulled the covers up to wrap them both. He kissed her neck below her ear and tried to explain, \"She's not my girlfriend\u2014not really.\"\n\nMel tipped her head to let Ray's lips travel, but laughed and asked, \"So a girl named Angela leaves a sex-soaked romance novel under your bed and she's not your girlfriend? Is she a literate hooker?\"\n\nRay cursed Angela's habit of putting her name in all of her paperbacks, but she came from a large family and never got over the habit of writing her name on things so her sisters wouldn't take them. \"Angela's an attorney, and my old friend.\" Ray said. \"I've known her for like ten years and we sleep together now and then.\" He remembered back to the last time that Angela slept over and added, \"I don't know if that will go on. She knows about you.\"\n\nMel pushed herself away. She tossed the covers aside and stood at the window with her arms crossed below her breasts. She was silhouetted there by the afternoon light as she stared unseeing at the urban landscape outside. Without turning back she said, \"Ray, maybe you're better off with Angela. You really tempt me, but I've told you before how hard it is for dancers to maintain relationships.\"\n\n\"I'm probably going to hurt you, you know.\" Mel said, as she turned back to look at Ray. \"Or you're going to hurt me, and I'm really done with being hurt.\"\n\n\"None of that has to happen,\" Ray said. He stood up by the bed and tugged on Mel's elbow until she stood close. He searched his mind for a way to make her more comfortable. \"We don't need to ruin our naked afternoon by thinking about it. You look cold. Let's get back in bed and I'll keep you warm.\"\n\n5.\n\nThe murmur of a hundred different conversations filled the theater. Ray lifted the insert from the Nutcracker program and looked at it again; \"Melissa White, Jennifer Parker and Jill Nielson are sponsored by Sanford, Casals and Levine PA.\"\n\nThe trial in Baton Rouge started slowly and Ray used the time to talk with Rudy Lowe, and then he convinced Sam Levine to buy the sponsorships. Mel didn't know about it until opening night when Rudy showed her the insert. The reaction that she texted from the dressing room wasn't quite what Ray hoped for. \"Thanks Ray,\" she said, \"That helps.\" Jenn and Jill were more excited.\n\nRay shifted uneasily in his seat; his excitement wouldn't let him rest. He hadn't seen Mel since their naked afternoon, but not because he didn't want to. They tried to arrange something that first weekend after the trial started, but he had work to do and she was exhausted. Next came Thanksgiving and he spent that weekend with his parents. The trial was done for now and he just had to sit through this matin\u00e9e, then he would see Mel again. They had a date.\n\nThe theater lights dimmed, the music started, and dancers filled the stage. Mel didn't appear until near the end of the first act and Ray caught his breath when he saw her. She danced in a jeweled white tutu and a white headpiece that covered her dark hair, and she turned among the dancers who swirling around her like snowflakes.\n\nMel was the Ice Queen on stage and she wore the same costume to the lobby after the show, where children gathered around to hear the Ice Queen's story. When she talked with them, her eyes flashed brighter than the icy blue gems on her costume. Ray watched her with a smile that wouldn't go away.\n\nThey waited until the parents pulled their kids home then Mel led Ray through the theater to the front of the stage. The house lights were up, the curtains were open, and the stage was lit while the crew reset. \"Why don't you wait for me here? I'll come get you when I've changed,\" she said.\n\nThere was a clatter in the wing and a prop rifle skittered across the stage. Someone in the wing cursed, \"Damn you! You old cunt!\"\n\nThe crew stopped their work to watch. A thin, graying woman in dance flats charged onto the stage. Paul Lovato caught her from behind and hooked her elbow. She pulled out of his grasp and turned back to face him and he yelled, \"I can fire you as fast as I can fire anyone in this company. No-one here is irreplaceable, even you!\"\n\nShe yelled back, \"It's changing you, Paul! You weren't always such a horse's ass! You have to stop,\" then she turned again and stormed off stage.\n\nPaul watched her leave then saw Mel in the theater. He pointed at her and said, \"Get out of that costume and get out of here!\" He kicked the prop rifle again and sent it spinning to the back of the stage.\n\nMel looked at Ray's confused expression and explained, \"That was Karen Stein, the Ballet Mistress. They used to be married. It sounds like she must have caught him coking up again.\" She watched where Paul disappeared and without looking back at Ray she said, \"Jen and Jill should be about ready to go. I need to give them a ride home before we go to dinner.\"\n\n\"Can't you just let them drive your car?\" Ray asked. He didn't want to delay things.\n\n\"My car was acting funny on the way here,\" Mel said. \"I don't want to leave them with my problem, if it is one.\" She nudged Ray toward a seat.\n\nMel's smelly old Dodge was in rock star parking because she had to get there two hours before the show. It wouldn't start. She sat in the driver seat and raged, \"You piece of shit!\" and slapped the steering wheel with both hands.\n\nRay was already on his phone. \"A tow truck is on the way,\" he said. \"Do you have someplace that works on your car? I know a good garage.\"\n\n\"I can't afford a good garage,\" Mel complained. \"I have friends of friends who work on it, usually for the cost of parts.\"",
        "Ray glanced at Jill and Jenn. They paced on the other side of the car, and from their expressions he guessed that they already knew he would take care of everything, but he had to get past Mel to do it. \"You never know.\" Ray said. \"It could be something simple that won't cost at all. Let's find out.\"\n\n*****\n\n\"Why did you buy so many groceries?\" Mel asked, as she counted the plastic bags arrayed beside Ray's car. Their date was a bust; the four of them ate at a diner and then went shopping for groceries.\n\n\"Most everything in the fridge expired while I was in Baton Rouge,\" Ray said, \"And I hoped I was buying for two. And I might not get to the market again until your car is fixed.\"\n\nMel lifted her hand and let Ray's car keys dangle from her finger and asked, \"You're still sure about this?\" Ray didn't need his car to get to work, so he loaned it to Mel.\n\n\"I'm sure,\" Ray answered, \"And you're sure you won't come in?\"\n\nMel draped her arms around Ray's neck and pulled herself close. She sniffed at the warm air that rose from inside his jacket, then looked up and said, \"Have I told you that we're touring another show next month?\"\n\nRay wasn't sure what that had to do with his invitation, but he shook his head and said, \"The program says your next show here is repertoire, but it doesn't say anything about touring. Are you taking that show on tour before you do it here, like you did in October? And then you're doing Cinderella around Valentine's Day?\"\n\n\"Yes and yes,\" Mel answered, \"But Cinderella is too far off to think about. We start rehearsals for the tour tomorrow then leave for Atlanta just after New Years. With those rehearsals and five more Nutcracker shows to do in the next week, I should go home and rest. Besides, I think I would disappoint you tonight.\"\n\nRay couldn't imagine how Mel would disappoint him, but he let that drop. \"The holidays are starting to sound bleak,\" he said. \"I'm working. You're going home for Christmas, and then you're leaving again right away.\"\n\nMel pushed herself back and looked away. \"I warned you about how hard it is almost as soon as we met. You can't count on me to make you happy. I need to go.\"\n\nRay watched Mel leave and didn't see her again until Thursday when they got her car. He made an arrangement with the garage. They wrote one invoice that Mel would see and one she wouldn't see. The one she would see was for the fuel filter replacement. The one she wouldn't see was for the diagnostics, the fuel pump, injectors, and seals.\n\nRay looked over Mel's shoulder while the manager explained the cost, and then had to back up when Mel suddenly stood. \"I can actually afford that!\" she said, and lifted her check book from her purse.\n\n\"Let me take it.\" Ray said. \"It will be my Christmas present.\"\n\n\"I can do this, Ray.\" Mel insisted, then smiled and added, \"You can get me something else for Christmas.\" She paid the small bill, then rushed to the community center.\n\nRay sat down once Mel was gone and they went through the large invoice. Ray pointed out a line near the bottom of the page and read aloud, \"Fluids and filters, no charge. What's that about?\"\n\n\"That was a problem,\" the manager said. He pushed his chair back and produced a filmy bit of fabric\u2014a leotard\u2014from a drawer. He said, \"Your girlfriend must be a dancer.\" No-one had referred to Mel as his girlfriend before, and Ray liked the sound of it.\n\nThe manager went on, \"There were a lot of old ballet shoes, this and a few other personal items in the car. That's probably why the car smelled so ripe. One of our trainee techs stole this and left it in the men's room.\"\n\nRay wrinkled his nose and said, \"She might not want that back then.\"\n\nThe manager nodded and dropped the leotard in a waste basket. \"I don't know what those things cost,\" he said, \"But we had him do the regular maintenance to balance things out, then we let him go.\"\n\n\"That's too bad,\" Ray said, \"But now I know what to get her for Christmas.\"\n\nMel's Christmas present\u2014a leotard that Ray picked out mostly because he wanted to take it off from her\u2014was wrapped and in Ray's pocket while he watched Mel and Julio close out Nutcracker as the Sugarplum Fairy and her cavalier.\n\nThe crowd was still shuffling out of the theater when Mel appeared from back stage and tried to get to the lobby. Ray had to hurry to catch her.\n\n\"I'm going to make this really quick,\" Mel said. \"I just want to get it over. Go wait for me in the dressing room. Paul is busy buttering up Sofia, so he won't get in your way.\"\n\nRay knew by now how to get from the theater to the dressing room. He dodged little girls in costumes as he ran down the stairs, then knocked on the door. \"It's Ray\" he called, \"Mel sent me down.\" \n\nThere was a pause, then Jenn\u2014still in the fairy costume she wore for Waltz of the Flowers\u2014unlatched the door to let Ray in. He dropped onto the sofa and groaned to himself. There were three suitcases lined up beside him. \"You guys are all leaving for Christmas right away?\" He asked. \n\n\"Jenn and I are,\" Jill said. She turned her back to Jenn, who unfastened the hooks that held Jill's costume together. \"Julio is taking us to the airport as soon as we can get ready. We have to hurry to catch my flight then Jenn's is a couple hours later.\"\n\n\"What about Mel?\" Ray asked, and waited while Jenn turned her back so that Jill could unhook her bodice. There was a thump on the wall, then a chorus of giggles from the next room.\n\n\"I think those girls are tearing the place up,\" Jenn said, then went on, \"You'll have to ask Mel about her plans. I'm not sure what they are.\" She turned to Jill with her hand holding up the front of her bodice and asked, \"Do you know?\"\n\n\"Mel's plans? No. She hasn't said,\" Jill answered. She looked at Ray and added, \"Would you turn around for a bit?\"\n\nRay turned to the wall and listened to the rustle of tulle and satin until there was a knock on the door, then Mel's voice called, \"Let me in guys!\"\n\nHe opened the door for Mel as a group of laughing girls with dance bags over their shoulders ran up the stairs behind her. She pushed her wide tutu down to fit through the opening then he latched it behind her again. Mel looked at Jenn\u2014now peeling her tights off\u2014and at Jill who was bent over in front of the costume rack. She laughed. \"I guess there's no time for modesty.\"\n\nJill straightened up and smiled at Ray in the mirror. She told Mel, \"Ray has been very polite.\"\n\nRay complained, \"They made me turn my back.\"\n\nMel gave Ray an exaggerated scowl. She pushed him back to sit on the sofa and turned around to block his view of Jenn and Jill. Mel's ruffled butt was in front of Ray, just under the tutu's frill. He touched the inside of her knee then ran his finger tips up until Mel rose on her toes and laughed. She said, \"Ray, stop that,\" then pushed the back of her tutu down and shoved his hand away.\n\n\"I never thought ballet costumes were very sexy,\" Ray said, \"Until now.\"\n\nRay glanced down at Mel's bag and remembered to ask, \"Are you leaving right away, too?\" He didn't understand why Mel would have hidden that plan from him. \"If you are, then I need to give you your Christmas present now.\"\n\nMel waited until Jen and Jill were decent, then she turned around to look at Ray. \"Christmas present?\" she asked. Ray took the package from inside his jacket and presented it to her.\n\n\"Thanks,\" Mel said. She tore into the wrapping and laughed, \"I'm missing one of my leotards, so this is perfect.\" She knelt with one foot on the sofa next to Ray and bent over him to kiss his forehead.\n\nRay felt overwhelmed by his bejeweled and slightly sweaty-smelling fairy queen in her cloud of tulle. Her lips traveled from his forehead to his ear, and she whispered as if Jenn and Jill shouldn't hear, \"I'm not leaving until Wednesday afternoon. What I do 'till then is up to you.\"\n\n\"That's yours, right?\" Ray asked and pointed to her bag. \"Why are you packed now?\"\n\nMel's lips brushed his ear while she answered,\"I'm packed now so I can stay with you until I leave\u2014if that's alright with you.\"\n\nRay felt like he could burst. He struggled to free his hands from Mel's frills and pulled Sugarplum's mouth to his. When he broke their kiss he told her, \"That's almost my dream come true! I have to work days, but we'll have the rest of the time.\"\n\n\"If I can sleep in,\" Mel said. \"Then that's almost my dream come true, too.\" She went soft against Ray's chest and giggled while he nibbled her ear and kissed the salty film off her throat.\n\n\"God, guys!\" Jenn groaned, \"Mel, you know the rule. No sex in the company's costumes. Now we gotta go find Julio.\"\n\nMel struggled a little to climb off from Ray. She composed herself and traded kisses with Jill and Jenn to say goodbye, and then she latched the door behind them and turned her back to Ray. \"Unhook me please?\" she asked.\n\nRay stood and studied the back of Mel's costume, then started unhooking the row of fasteners down its back. Each that he unhooked loosened the bodice a little more until he got to the waist, then he watched Mel in the mirror as he pushed the straps from her shoulder and let the bodice fall away.\n\nThe noise and confusion outside the dressing room had waned and was replaced with muffled conversation and with distant sounds from the stage above them. The excitement backstage calmed but Ray's excitement grew. Mel lifted her breasts for Ray, then while he licked his lips she told him, \"You can't get the tutu off me until you finish unhooking it.\"\n\nRay looked down again and spread the opening at the back of the tulle frill. The row of hooks continued below the frill and disappeared from sight beneath the curve of Mel's butt. He unfastened all the hooks, then let the costume fall down around her ankles. Ray wrapped one arm around Mel's waist and she laid her head back against his shoulder. He cupped her breast and pinched her nipple in his other hand. He felt her breath quicken while he bent his head to kiss her shoulder and her neck.\n\nA woman pounded on the door and yelled, \"Mel! I need your costumes!\"\n\nMel yelled back, \"Give me a minute!\" then she looked at Ray's reflection in the mirror. \"That's Laura, the costume mistress.\" Mel stepped out of the costume and turned around, \"I've got to finish up here. Why don't you stay and watch?\"\n\n*****\n\nA Christmas special on TV lit the room and the bedside table was strewn with the remains of their Chinese takeout dinner. Neither of them was quite dressed. Mel had pushed Ray's jacket and shirt off his shoulders and opened his pants, and Ray had tossed her top aside and slipped the shoes off her feet. It was while he peeled her pants and panties down that he saw the bruise on the top of her foot and asked, \"What happened?\"\n\n\"Overworked it.\" Mel said, and moved her foot to study the injury; it was discolored, a little swollen, and the veins stood out over it. \"We're not a union shop, but according to the employee's manual we're supposed to follow union rules anyway. Paul doubled up performances and rehearsals all week, and that was way more than the union rules allow. Most of us have some kind of stress injury now. Some are worse than this.\"\n\nRay studied Mel's lithe body by the flickering light then he picked up her foot and asked \"Would a little massage help?\"\n\nMel pulled her foot back, \"It's sore, Ray. No massage now.\"\n\n\"Then I'll kiss it and make it better,\" he said. Ray lifted Mel's foot and brushed the bruise with his lips. He kissed her toes, one at a time, then her sole and her ankle, the inside of her knee, and her thigh. He didn't hide his intent, but still Mel caught her breath when Ray pushed his lips to her feminine center. He dragged her hood between his teeth and slipped his tongue about her hardening button. Mel laid back among the pillows and lifted her knees apart to invite Ray's attention.\n\nMel's scent, her taste, and the way she writhed in his arms when she climaxed all thrilled Ray. The tension flowed out of Mel's body after her orgasm, and Ray climbed over her with excited intent. He fed on her breasts, her throat, and her mouth, and then he thrust himself deep between her legs. \n\nThey pleased each other that Sunday night until Mel was exhausted. She slept through Ray's alarm on Monday morning, then again on Tuesday morning. Mel didn't open her eyes until ten then blinked at the light, clutched his pillow under her nose, and drifted to sleep again. She stretched each afternoon then spent the rest of her time reading whatever she found around.\n\nRay's chest and arms were still pumped from lifting when he got home Tuesday night. He flicked on the kitchen lights then found Mel sitting on a stool in the darkened bedroom, staring out the window at the city lights. She didn't even turn to notice him and his pumped muscles.\n\n\"Something's wrong,\" Ray said. He stepped up behind Mel, laid his hands on her shoulders and watched her reflection in the window. She was dressed in one of his unwashed dress shirts and a pair of boxer shorts that she pinned at the waist so they would stay on.\n\nMel flinched when he bent to kiss her neck, and it was then he noticed the paper she held on her lap. \"Do you want to tell me about this?\" she asked, and held the paper up where he could read the heading in the dim light from the kitchen. It was the second invoice from her car repair.\n\nRay felt a sudden rush of anger. His voice was tense when he asked, \"Where did you find that?\" He didn't like the idea that Mel went through his papers, but his anger was quickly replaced by regret when he remembered where he left the invoice.\n\n\"It fell out of a book I was reading,\" Mel said. \"Ray, this is ten times what I thought the car cost. Why did you trick me?\"\n\n\"Because I didn't want you to get upset and I didn't want you to take on that bill,\" Ray answered. He put his hands on Mel's hips and turned her around to look at him. \"That afternoon after you left, the guy at the garage called you my girlfriend. I liked how that sounded. That's what I want, Mel. I want you to be my girlfriend, and I want to be able to give you gifts without you getting mad or suspicious.\"\n\n\"I was mad at first because you tricked me,\" Mel said, \"But not for very long. Then I was mad because you stole my independence, and that lasted a little longer.\n\n\"I've been sitting here and thinking. Look at me, Ray. I sleep on your pillow when you leave. I'm wearing your shirt and even your underwear.\"\n\nMel let the invoice slip to the floor and waved her hands in the air. \"I was smug and selfish,\" she said. \"Hell, when I asked to stay with you 'till I leave it wasn't so much for us, it was for me. I told myself that it would be a good way to rest and relax for a few days at your expense, and that's all it was.\n\n\"I lied to myself, Ray. First you made me interested in you then you made me comfortable with you then you made me trust you and depend on you, and now I don't want to be without you.\"\n\nMel's eyes searched Ray's face before she went on, \"Ray, I am your girlfriend, and that scares me.\"\n\nRay didn't let Mel go on. He caught her arms and put them around his neck, and then he covered her mouth with his. Mel caught her breath and lifted her legs around Ray's waist. He picked her up off the stool and held her. Were her lips softer? Was her tongue more exciting? Ray wasn't sure, but he knew that her perfect body wrapped his and that her breath on his cheek burned with excitement.\n\nMel broke their kiss. She touched Ray's arms, looked down at his chest, and said, \"God Ray, you're huge!\" She lifted her eyes to his and smiled in the dark. She whispered, \"Lay me right now, and we can worry about dinner later.\"\n\n6.\n\n\"Your ballerina must really be something,\" Angela said. She looked Ray up and down. Her office door closed behind him with a solid click then she stepped close and squeezed his bicep. \"Yep, you had ten years to do that for me. It was never going to happen. But you didn't come here to show off, did you? Where have you been?\"\n\nRay sniffed at Angela's perfumed scent while he guided her across the small office to her chair. He answered, \"Since the last time I saw you I've spent too much time in Baton Rouge, and I just got back from Austin.\" Ray dropped into the guest chair in front of Angela's desk and crossed his legs while she moved some papers into a drawer. He said, \"I didn't come here to show off. I need an introduction.\"\n\nAngela wasn't very good at sitting still. With the papers put away, she stood and leaned over a credenza and looked out the window at the snowy mid-January street scene below. \"Baton Rouge and Austin are both nice places. I probably wouldn't complain.\" She turned back to Ray and was nearly silhouetted against the window when she went on, \"Tell me about the introduction. Personal or professional?\"\n\n\"More personal,\" Ray said. \"I think your firm represents the Community Foundation. At least, that's what it says on their website and on yours.\"\n\n\"The Community Foundation?\" Angela looked briefly puzzled. \"Oh, that's Pamela Hardy. Yeah, she's a pro bono client. She's one of the most giving people I know, and that isn't always a great trait for a foundation director. She fights with her Board a lot.\n\n\"That's a small fund. What do you need from her?\"\n\n\"This is about Franklin Ballet,\" Ray said. He straightened his back and moved to sit up more comfortably straight. \"The fund's grants are too small to be much interest to the ballet company. Franklin Ballet's budget is in the range of two or three million a year. but even a little from the Community Foundation could have a huge cascading effect. The company exec has been working on a big grant from the Hillson Endowment, and that grant hinges on having a record of community service and support. At least recently, they don't have that record.\n\n\"Mel\u2014my ballerina\u2014does volunteer work at a couple community centers without any support from Franklin Ballet. I still need to work out details with the company's exec, but if I can get a small grant from the Community Foundation to Franklin Ballet to support Mel's work and maybe expand it...\"\n\nAngela interrupted, \"I see where you're going. Maybe a thousand from Pamela now could mean a million for the ballet company. How do you want to do it? The introduction, I mean.\"\n\n\"It could eventually be more than three million a year,\" Ray said. \"Can you arrange a time when I can take you and Pamela to lunch?\"\n\nAngela walked around the desk to stand in front of Ray and sat casually on the edge. She said, \"I could ask, 'what's in it for me?'\" Angela had curves where Mel had lines, but she wore her business suit well. Her blond hair curved under at her collar, her breasts filled her jacket, and her legs\u2014sheathed in smooth nylon\u2014stretched below the hem of the skirt. Ray couldn't help but remember that sex with Angela could be very good.\n\n\"As good as you look right now, I'm still only offering lunch and asking for a favor,\" Ray said. He studied Angela's expression and like usual he couldn't read her. \"Our normal trade isn't going to work. Mel warns me all the time about how hard it'll be to keep our relationship up. Maybe a distraction would be too much.\"\n\n\"I think I need to meet her,\" Angela said. \"Does she know about us?\"\n\nRay laughed and said, \"She found one of your romance novels under the bed\u2014you know, with your name in it. She knows about you and about us. You'll meet her\u2014you have to.\"\n\n\"It's great that you found someone\u2014and a reader, too\u2014but I'm disappointed,\" Angela said. She stood up from the edge of the desk and squeezed Ray's shoulder. \"I'd like to find out what I'm missing, but maybe I never will. It looks like you finally grew up enough to care about someone besides yourself.\n\n\"I'll make an arrangement with Pamela. What's a good time for you?\"\n\n\"As soon as possible,\" Ray said. He put both feet on the floor and sat forward with his elbows on his knees to check his calendar. \"I can fit my schedule around lunch any day this week but Thursday. Next week I'm socked in.\"",
        "Ray's phone chimed to signal an incoming text message. He swiped the screen to read it, then looked up at Angela with a smile. \"Mel's been on tour with the company for the last three weeks. Their plane just landed. I need to finish up a few things in the office before I can see her, so I'll go now.\"\n\nAngela looked at Ray as if she'd never met him before. He stood, kissed her cheek, and said, \"Thanks for your help. I owe you.\"\n\nThe streets outside were running with melting snow and Ray had to stay far from the curb to avoid being splashed by traffic. He walked with his head down and traded messages with Mel. \"When can I see you?\" he asked.\n\n\"Dunno,\" Mel answered. \"Paul lost it. We're taking a shuttle to the studio from here and then we'll start rehearsals right now.\"\n\nRay stopped at a corner and waited for the light. He took a deep breath of the crisp air then watched the steam swirl as he exhaled. \"We can do dinner?\" he asked.\n\n\"Bring takeout to the studio?\" Mel suggested. \"His plan is four hours of rehearsal with a one-hour dinner break.\"\n\n\"If you can tell me when you break, then I can do that.\" Ray said. The light changed and Ray jumped a puddle in the gutter to cross the street.\"What are you rehearsing?\" \n\n\"Cinderella, but no-one knows why,\" Mel answered. \"The kids might need the practice but the company dancers all know it. He just keeps trying to fix problems that are only in his head.\"\n\nRay stepped over a pile of icy gray snow outside his office building, and before he went in he sent, \"I'll bring Chinese from the deli truck that parks at my condo.\" \n\nMel was dancing when Ray got to the company's building so he leaned on the frame of the studio door and dangled the takeout cartons behind his back while he watched. The show had a large cast. The walls were lined with young dancers in leotards and tights who stood and watched Mel turn in the middle of the floor with an orange in her hands. Jill and Jenn danced around her and tossed oranges to each other.\n\n\"No! No! No!\" Paul yelled and stopped the dance. \"Your spacing is off again. Are you ever going to get this right?\" He looked up at the clock and clapped his hand. \"Break now. We'll do this again in an hour.\"\n\nMel hooked Ray's elbow as she went through the door and tugged him away from the other dancers. \"There was nothing wrong with that.\" She grumbled and glanced at the kids who waited by the wall. She said, \"We need to talk. Where's your car?\"\n\n\"I had to park in the alley.\" Ray said. \"The parking lot is full.\"\n\n\"Perfect,\" Mel said. She tossed her pointe shoes into a locker, slipped into flats, and pulled a coat around her shoulders. \"That happens when we have a full cast rehearsal on one of these big shows.\" She pushed Ray out the door into the parking lot, and when it closed behind them she said, \"I don't need to talk. That was just for the girls to hear. Let's go make out.\"\n\nRay had to laugh. They both stepped a little faster the closer they got to his car. Ray walked Mel to the passenger side door. She turned to lean against the car and tipped her mouth up to him. Ray set the cartons on the car, then tucked his hand below the tight bun that held her hair and pulled her mouth to his.\n\nMel's mouth tasted as good as Ray remembered, and a warm, arousing scent rose from her body. Both of them were suddenly short of breath. She broke off their kiss and reached behind her to open the car door, then said \"Get in!\" and surprised Ray by tugging, then pushing him into the warm car.\n\n\"Put the seat all the way back and lay it down,\" Mel said. She climbed over him to straddle his lap and pulled the door shut behind her. Her coat landed on the driver's seat and then she opened Ray's jacket, and then his shirt.\n\nRay peeled Mel's leotard off her shoulders and down her arms to expose her breasts, and then he pulled her up to get her tit in his mouth.\n\nMel giggled and wrapped her arms around Ray's head. She gasped while he pulled her hardened nipple between his teeth. He sucked her breast into his mouth while he pushed her leotard down. Ray found the top of her tights and thrust his hands under the waist and into them.\n\n\"God Ray!\" Mel gasped. \"It's been three weeks of wanting you. I'm done waiting.\" She rose on one knee and pulled her other leg out of the fabric while Ray opened his pants to free his hard-on. He slid down in the seat to get more under Mel, and when she settled on him again it was to take his hard shaft inside her.\n\nRay rested his hands on Mel's hips while she worked herself down his cock, then when she settled onto him he stroked her back to her rhythm. Her supple body writhed over him, and her scent, and the taste of her skin aroused him. He could tell when her climax got close from the tension in her body and the way she moved. His excitement grew to match hers.\n\nMel's body tightened around Ray and she lifted her head to groan. He felt the spasms grip her body; he surrendered control and his essence erupted inside her. Mel melted onto Ray's chest when they were both done; she kissed his throat and his face while his cock gradually softened.\n\nRay stroked Mel's sides and whispered in her ear, \"God you feel good, but our moo goo gai pan is getting cold on top the car.\" \n\nMel laughed and rolled into the driver's seat. \"I'll start the car to keep us warm,\" she said, \"You get dinner.\" She cleaned herself with paper napkins then pushed the driver's seat back and turned to face Ray while they ate.\n\nMel dipped her chopsticks into the moo goo then looked up at Ray to ask, \"What did you do today?\" Her leotard and tights where still tangled around one leg. She smiled and straightened her back when she saw his eyes searching her mostly naked body.\n\n\"I went to see Angela,\" Ray answered and waited for Mel's response. She raised her eyebrows at him and he said, \"She knows the Community Foundation's director and I asked her to introduce us.\"\n\n\"And what does she get for that?\" Mel asked. \"A little nooky?\" Her expression told Ray that Mel was upset.\n\n\"She gets lunch and the satisfaction of knowing that she helped a friend,\" Ray answered then added, \"She would like to meet you some time.\"\n\nMel handed the moo goo back to Ray and wiped her mouth with the back of her hand. \"Set something up if you want.\" She said. \"So you two are really done?\" Ray nodded his answer and Mel went on, \"Doesn't the plan seem a little optimistic to you? I mean, get a little grant from the foundation and it gets magically turned into millions. Can that be for real?\"\n\nRay shoveled rice and chicken into his mouth, then gave the moo goo back to Mel. \"People make a lot out of a little all the time,\" he said with a shrug. \"You and I can get the 'little,' then it's up to Rudy to make it into the 'lot.' He's the expert at that.\"\n\nMel glanced at the dashboard clock then pointed and asked, \"Is that right?\" She started pulling her clothes back on as soon as Ray nodded. \"I've got to go back in pretty soon. You can come watch if you want.\"\n\nThe first thing they saw after they closed the studio door behind them was a group of frightened girls with their hands clasped in front of their faces. Then they heard it.\n\n\"Dammit Paul, you can't keep doing this!\" It was Julio's angry voice. \"You don't know what you're doing. You blame everyone else for your problems, and you're injuring dancers. Pretty soon you won't have anyone to do the show. We know this piece, it doesn't do any good to make us run it over and over!\"\n\nPaul shouted, \"You aren't the one who sets the standards here. I am! You aren't as good as you think and you'll do what I tell you to do.\"\n\nMel sprinted into the studio to find Jenn sitting on the marley, massaging her ankle. Paul and Julio were nose-to-nose in the middle of the room.\n\nShe knelt beside Jenn to ask, \"What happened?\" while the men screamed at each other.\n\n\"Some of us got back early, so Paul started rehearsing us. I tweaked my ankle and sat down,\" Jenn said, \"Then Julio lit into him. The kids are scared.\"\n\nMel spun around to face the red-faced men. \"Stop it!\" she said. \"Just stop it! Julio's right. You're hurting people more than you're helping and now the kids are scared. Their parents will be next.\"\n\nPaul turned to Mel and took a step back. \"It's the two of you isn't it?\" he said. \"It's always the two of you. Damn you! You're fired, both of you! Get your shit and get out of here!\"\n\nMel turned and charged into Ray. He had to step back, but he stopped her and then caught Julio's arm and pulled them both away from Paul. He hissed at them, \"Wait here, and tell the girls that it will all be okay.\" Then he stepped into the parking lot and closed the door behind him.\n\nRay came back to find the young dancers lined up on the studio floor. Paul was gone and Karen Stein was instructing them. \"Pas de chat, Pas de chat, hold that\" she said over the music, while she clapped her hands in rhythm.\n\nJulio stood with Mel and watched through the door. They turned when Ray came in and he said, \"I talked to Rudy. He's still in Baltimore, but he said he'll tell the bookkeeper to make no payroll changes. We set up a meeting for first thing Thursday morning, so I guess we're in limbo for a couple days.\"\n\n*****\n\nRay settled down on Mel's sofa and Mel curled up beside him in her sweats. She talked, sometimes loudly, with the other dancers about Paul while Ray studied the company's employee manual. When he found what he needed he closed it and said, \"I think you have a case, but ideally Rudy will talk Paul into changing his mind and we will never need to use it.\"\n\nJulio laughed and said, \"Maybe we shouldn't care that much. I have a standing offer in Dallas. I'll see if they have an opening now and talk to them about taking Mel in a package deal.\"\n\nMel was relaxed against Ray's shoulder. She sat up and said, \"Julio, that would be so cool!\" She glanced at Ray with a suddenly worried expression then looked away. \"Maybe sometimes you just have to move on, even if you don't want to.\"\n\nThey talked until Mel said, \"It's been a really long day. I have to go to bed.\" She squeezed Ray's arm and when he looked down at her she asked, \"Will you stay with me tonight? I'll feel better if you do.\"\n\nJenn groaned, \"Ray, you'll keep her quiet tonight, won't you? We all need to sleep.\"\n\nRay smiled and said, \"I'll see what I can do.\" He stood and pulled Mel to her feet, then watched the way her butt moved under her sweatpants as he followed her up the stairs.\n\nMel closed herself in the bathroom to get ready and Ray undressed by her bed in the dark. When she came to him again he put his hands on her hips and pulled her sweatshirt over her head.\n\n\"You know I don't want you to leave, right?\" Ray asked. \"Not to Dallas now, or anywhere else later.\" He sank to the edge of the bed and pulled Mel to him. \"I want you to be with me.\" He kissed her breasts while he untied the drawstring on her sweatpants, and he pushed her pants and her panties to the floor.\n\nMel stood with Ray's hands on her hips and stroked his hair while he kissed her belly. She said, \"After all this today I'm awfully, awfully tired.\"\n\nRay looked up at Mel, and by the street light through her window he studied the exhaustion that lined her face. She didn't need to say more. Ray pulled Mel onto the bed and arranged the covers over them.\n\nMel ducked against Ray's chest, sniffed at his warm scent, and explained in a soft and drowsy voice, \"I've never wanted to do anything but dance, Ray. I've put everything into it since I was eight years old. I know I won't be able to dance forever, but I can't quit just because Paul doesn't want me here. If I have to move away to keep dancing, then I will. Will you come see me?\"\n\nRay turned Mel to spoon against him with her head pillowed on his arm. He kissed her ear and her neck and felt her body relax against him. He whispered in her ear, \"If you have to leave, then I'll do anything I can to be where you are.\"\n\nHe didn't get a response from Mel, and soon her smooth, regular breathing told him that she was sleeping. He put his arm around her to hold her and was glad that, at least for now, she was safe and warm in his arms.\n\n*****\n\nRudy's assistant handed Ray a cup of hot coffee and asked, \"What is Mel doing with her time off?\"\n\nThe question made Ray laugh. \"I don't think it's time off to her,\" he said. \"I haven't been able to see her much, but whenever we talk she tells me about more companies she's looking at or about updating her audition package. She's busy.\" Ray watched the clock tick over to 8:05 as he spoke. If Rudy took much longer, then he'd have to talk to his office.\n\n\"Yeah, I've been helping her with some videos for her audition package.\" she said. \"I hope she doesn't need it.\"\n\n\"I hope so too,\" Ray said. On Wednesday he shoved all those possibilities to the back of his mind and lunched with Angela and Pamela Hardy as if nothing ever happened. It was a friendly lunch, but Pamela wasn't a ballet fan and it seemed like she tuned him out.\n\nWhen Ray talked to Rudy about the meeting he said, \"The directors at the community centers want Mel to continue, yes? See if they will contact Ms. Hardy. What Melissa's doing isn't about ballet, so get the directors to express the value of the program in their own words and that will help. Getting Hardy to the centers to watch Melissa work would help. Miss White has a way of drawing people in. There are still things to be done.\"\n\nAnother problem lurked at the back of Ray's mind. Even if Pamela agreed, Paul would have to cooperate because the grant would commit the time of artistic staff. He brought that up and Rudy simply said, \"We'll cross that bridge if we come to it.\"\n\nRudy broke into Ray's train of thought when he got there. \"Sorry I'm late,\" he said. \"We had ice in my neighborhood.\" He got some messages from his assistant, then motioned for Ray to follow him into his office.\n\nRudy shook his head when Ray told him again\u2014in more detail this time\u2014about what happened Monday night. Rudy said, \"Paul can't fire them. In theory the Artistic Director does have the authority to hire and supervise all artistic personnel, but firing Mel and Julio that way won't work with the Board. He should know that.\"\n\n\"Julio is talking to someone in Dallas,\" Ray said. \"If this isn't resolved today then Julio and maybe Mel could be gone. Mel leaving isn't in my personal plans, but I can't stop her from taking the opportunity.\"\n\n\"I understand,\" Rudy said. \"I asked Paul to join us. This could be tense.\n\nTheir conversation continued until Paul banged through Rudy's office door, and Ray stood to face the agitated man. He stopped in front of Rudy's desk with his hands on his hips and a defiant expression on his face. \"Your message said this was about Mel and Julio,\" Paul said. \"Dammit Rudy, I fired them and that's all under my authority.\" He glanced at Ray and asked Rudy, \"Who's this? I've seen him around.\"\n\nRudy introduced them with, \"This is Ray Ellison, Mel's friend. I believe he may also represent Mel and Julio as their attorney.\"\n\n\"I do,\" Ray said. He produced his card then extended his hand, but Paul declined the handshake. Ray dropped his hand and went on, \"We hope to get this worked out without costing the company money.\"\n\nPaul tossed Ray's card onto Rudy's desk and asked, \"Shouldn't we have an attorney here as well?\"\n\n\"We'll call an attorney in the odd circumstance that we need one,\" Rudy said. \"Sit down Paul. You should consider yourself on probation.\"\n\nPaul didn't sit down. He put both hands on the edge of Rudy's desk, leaned toward Rudy and said, \"Probation! What do you mean?\"\n\nRudy watched Paul's expression, then replied calmly, \"It means that I would have fired you already if I thought it was my choice to make. If you don't change your direction then I'll go to the Board and ask for a resolution to terminate your employment.\"\n\n\"Sofia would never even convene that meeting,\" Paul said. \"Julio and Mel have been undermining me for months, and now you're trying to do it too. Sofia will support me\u2014she always has.\"\n\nRay watched Paul's aggressive stance and sized him up in case he needed to intervene. Ray was four inches taller than Paul and probably fifty pounds heavier. He interrupted to break the tension between Paul and Rudy. \"Mr. Lovato,\" he said, \"Last night you overstepped your authority and Julio was right when he called you on it. The employee policy limits the dancer's work hours. You've regularly required them to exceed those limits, and you're injuring them because of it.\"\n\n\"And you shouldn't overestimate Sofia's support,\" Rudy added. \"There are two or three Board members who will want your head if you insist on firing Mel and Julio. Your behavior lately has been bizarre and even Sofia is starting to ask questions.\n\n\"If you insist on firing Mel and Julio, then the most likely outcome will be that we fire you and retain them,\" He nodded to Ray and added, \"If they aren't already gone.\" When he looked back to Paul he said, \"To put it bluntly\u2014you're going to lose, one way or another.\"\n\nPaul clenched his jaw and stuck his chin out. \"It was my decision, and it stands.\" He stormed out, even more agitated than when he stormed in.\n\nRay turned back to Rudy and found him with his cell phone already out. \"That didn't work out as well as I hoped,\" Ray said.\n\n\"It isn't over,\" Rudy said. He made a call, then rocked back in his chair and said, \"Sofia, this is Rudy. I just had the conversation with Paul that we talked about yesterday.\"\n\nRudy stood when his conversation was done. \"She'll talk with Paul this afternoon. In the mean time I will start talking to new candidates for Artistic Director.\n\n\"Mel and Julio still have jobs. Do you want to give them the news? They have a performance tomorrow night, so they need to be back in class tomorrow and be ready for the run-through at the theater. Hopefully Paul, if he's still here, won't make things too toxic.\"\n\nMel didn't answer Ray's call and it was mid-morning before they talked. She said, \"I don't know why you do so much for us, Ray. Maybe Rudy would have carried through even without the possibility of being sued, but I don't know.\"\n\nRay had worked late every night since Monday, so they had little time to talk. It was news to him when she said, \"I found some opportunities, but nothing I really wanted\u2014they were all so far away from you. It seemed like every success in my job search was a failure for us. I couldn't win. Thank God that's over.\"\n\n7.\n\nRay invited Sam and Danielle Levine to Mel's show on Saturday night. It was a way to let Mel, Jill, and Jenn thank them for their sponsorships, and they were all very affectionately thankful.\n\nWhen the hugs were over and the dancers had gone to change, Sam caught Ray's attention and said, \"Your name came up at the partnership meeting yesterday. I was going to wait for Monday to tell you but maybe tonight with you and Mel together would be better. Can we take you out for drinks?\"\n\nThe dim lights in the restaurant gave everything a golden glow\u2014even Mel's white wine took on a golden hue. She dipped her fingertip into her glass and ran it idly around the rim while she wondered when Sam would get to his point.\n\nIt took a nudge from Danielle to get him on track. He said, \"We expect a lot of work in Austin, and not just with our current client. New clients seem to be lining up and there isn't an end in sight, so we're thinking of opening an office there.\"\n\nSam motioned to Ray and said, \"Your work in Austin this month was outstanding, so you came up on the short list of people we thought we could put there.\"\n\nRay heard Mel catch her breath and felt her grip his arm while Sam continued, \"The position would come with more responsibility and a substantial raise. I'm not entirely aboard with the idea\u2014not because you don't deserve it, but because I might need you more here. That position\u2014if it's offered\u2014will be a tremendous opportunity. You might not get more like it.\"",
        "Mel had been energetic and talkative since they left the theater, but now she turned to hide her face against Ray's shoulder and tried to cover her eyes while she searched her purse for a tissue.\n\nDanielle found tissues in her own purse and pushed them across the table. She asked, \"What's wrong Mel? We thought that would be good news.\"\n\nRay slipped his hand around Mel's hip to pull her against him. She dried her eyes with Danielle's tissues then with her eyes still reddened she said, \"I'm sorry! I can't help it. We just got through a really tense week, and I guess it isn't over yet.\n\n\"To make a long story short, I talked with Austin Ballet this week; I won't have an opportunity to dance in Austin\u2014and I have to dance. It's getting hard for us to stay together.\"\n\nRay looked back at Sam and asked, \"How long will it be before the partners decide about the office, and how low before the office is ready?\"\n\n\"Nothing is going to change before next Friday,\" Sam said. \"There's no schedule yet for setting up the office\u2014the decision to do that isn't even final. If it happens, then it would take on the order of months.\"\n\n\"I thought I worked well in Austin, and I like the city.\" Ray said, \"But I need to be where Mel is.\" He felt Mel relax against him and went on, \"I don't want to turn down an opportunity, but if we have at least a week before the decision and months before the actual move then we don't need to worry about it now.\"\n\nDanielle tucked her arm around Sam's elbow and said, \"We've ruined Mel's evening already. Maybe we should call it a night.\" They said goodbye at the door then ducked against the late January wind on the way to their cars.\n\nMel shuddered in her seat to shake off the cold while Ray started his car. Before he could put it in gear she asked, \"What kind of answer was that? Would you go to Austin or not?\"\n\nRay studied Mel's expression then said, \"I hope my answer told Sam that the partners need to find someone else\u2014and hopefully before I have to turn down their offer. Either way, we have quite a while before anything changes.\" He slipped the transmission into reverse to back the car out, then asked \"Your place or mine?\"\n\nMel smiled, and the dashboard lights shined in her eyes. \"Your place,\" she answered. \"After the week we've had, I don't want to be quiet tonight.\"\n\nRay pulled into the parking garage then shouldered Mel's dance bag and chased her to his door. Mel turned around and leaned against the wall while Ray opened the door. \"You have to let me clean up a little,\" she said. \"You'll appreciate it.\"\n\n\"Don't take too long.\" Ray said, then clicked on the bedside lamp. He left his phone in the light, hung his suit in the closet, dropped everything else on the floor, and then remembered to check his email.\n\nMel came out of the bathroom wrapped in a towel. She followed the light from the living room and found Ray sitting naked on the couch with his laptop in front of him. He typed a few lines, then looked up and smiled. \"My work is never done,\" he said.\n\n\"I have a whole new job for you,\" Mel said, and she let the towel slip to the floor. The glow from the computer's screen outlined her form in light and shadows\u2014the lines from her jaw to her shoulders, the rounded form of her breasts and the muscles that rippled under her skin, down to the shadowed delta between her legs.\n\n\"It's cool in here,\" Mel complained. \"Scooch up a bit, you'll keep me warm.\" Mel pushed Ray's shoulder away from the cushion and climbed onto the sofa behind him. She laid her arms around his neck and settled down against his back with her legs wrapped around his waist.\n\nRay was done writing. He picked Mel's foot out of his lap and studied it by the light from the screen. Mel exhaled softly in his ear while he worked his thumb against her tight muscles and pushed his fingers between her toes. \"Did you get to see your kids this week?\" Ray asked. \n\nMel kissed his neck, and then his ear, and sent a thrill through Ray's body. \"I did,\" she said. \"With you so busy and everything else going so wrong, I needed the kids.\"\n\nRay turned Mel's ankle and rubbed the long, taut tendons in the sole of her foot. \"I need to get the community center directors to talk to Pamela, and hopefully I'll be able to get Pamela to go watch one of your classes this week or next.\"\n\n\"I'm sure the directors will talk to Pamela and I'd love to meet her,\" Mel said. She knotted her fingers in Ray's hair, tilted his head aside and dragged the tender skin below his ear through her teeth.\n\nRay lifted Mel's knee and brought her foot to his lips. He kissed her toes and nipped the arch of her foot then set it in his lap and wrapped her other foot in both his hands. \"Rudy hoped that Paul wouldn't make things too bad on you. How's he been?\"\n\nMel tipped Ray's head to the other side, then nuzzled under his ear again. \"He's been on his best behavior,\" she whispered, \"But I doubt he can do that for long. Karen thinks he's losing it all to the coke.\" She paused and Ray could feel her breath warm and a little ragged against the back of his ear.\n\nRay tugged on Mel's toes and rubbed her feet; he turned her ankle and felt her soften. Ray asked, \"Did I tell you that Rudy started looking for someone to replace Paul? The decision to fire him seems to be Sofia's and that hasn't been made yet, but if Paul goes then they want a quick transition.\"\n\nMel's hands worked at his shoulders then down his sides while Ray picked up her knee and brought her toes to his lips. \"God Ray,\" Mel gasped. \"I need you!\"\n\n\"Come around me,\" Ray said. He leaned forward then reached back and hooked his arm around Mel. He turned her until she settled on his lap and wrapped him in her legs again.\n\nMel reached down between them to find Ray's cock. He kissed her throat and her lips while she rubbed his throbbing shaft against her. She worked the head of his cock down between her legs to take him, but Ray stopped her when he thrust his hands under her thighs and brought her nipples to his mouth.\n\nMel gasped and threw one arm over Ray's shoulder while he sucked her tit. Her other hand slipped off his cock and found her own hot button. Mel held Ray's mouth tight to her breast and thrills ran through her body from his lips and from her fingers. She threw her head back when her climax overwhelmed her. She gasped incoherently at the ceiling and called his name.\n\nRay felt Mel soften and let her settle on his lap again. She laid her head on his shoulder to catch her breath then giggled. \"See,\" she said, \"At my place Jenn and Jill would already be bitching at the door.\"\n\nRay reached around Mel to close his laptop and left the room dark but for the city light that spilled through the window, and the lamplight from the bedroom. He turned Mel onto the cushion beside him and stroked his hand from her breasts down between her legs and asked, \"When do you have to be at the theater tomorrow?\" \n\nMel lifted her knees apart to let Ray's fingers explore, and she answered, \"Noon. I have to be there by noon.\"\n\n\"Then your mine until then,\" Ray said. Mel squeaked in surprise when he scooped her off the couch, and she laughed until he dropped her into the pool of lamplight on his bed. Ray pushed Mel's legs apart and climbed over her while his cock strained for her, and he joined their bodies together.\n\nIt was late when Ray leaned back against his pillows and Mel climbed up his body. Neither of them knew or cared how long they had been tangled together. She stroked his cock hard once more, then he held her hips, and she took him into her again. Ray watched Mel's sleek body rock over him, seemingly faster with each stroke. Her fingers dug into his chest until he pushed her hands away then she collapsed on him and, with his sides gripped in her hands, she writhed through her orgasm.\n\nRay waited and stroked Mel's back until she started to relax, then her rolled her onto the mattress. He watched her beautiful face by the lamp light while he plunged back into her. She lifted her legs around his waist then she pulled her knees up to his sides, and all the while she urged him on. Her breath came in gasps; she chanted his name in his ear then her fingers dug into his shoulders.\n\nRay lifted his head and bellowed at the wall when he came. Mel's climactic spasms pulsed around his cock and he emptied himself into her. Ray first collapsed onto Mel, then rolled away from her while they both struggled to catch their breath.\n\nMel was first to gather herself enough to move. She pulled the bed covers up over them both then laid her head on Ray's shoulder, and they slept.\n\nThe sun was well up before Ray stirred. He lifted his head and found his phone beside the lamp, quietly flashing to tell him he had a message waiting.\n\nIt was from Sam and said, \"New client. The RRC meets in the Travis building at 9:30AM on Tuesday. He needs you in Austin. Call me.\"\n\nMel read over Ray's shoulder and cursed. She sat up on the side of the bed and picked her dance bag off the floor. She set the bag beside her and started pulling things out as if she were looking for something. \"Dammit!\" she said, and flung one pointe shoe against the wall, and then another. \"Dammit!\" and a hair brush followed them. \"Dammit!\" and a tin of hairpins went next.\n\nRay stopped Mel and she turned to him with tears in her eyes. \"I thought we would have more time together!\"\n\n8.\n\nRay slipped the sheet off from Mel's shoulder and inhaled her scent. He tasted her salty skin and, with a sense of success at having caused her scent and her salty taste, he pulled her relaxed body against him.\n\nMel suddenly tensed. She rolled over and pushed Ray's shoulder down to see the clock. \"Shit,\" she said. \"You might get to take Friday off, but I have class at nine.\" She climbed over Ray to get to the shower.\n\nRay spent most the last two weeks working long days in Austin, so it was with Sam's approval that he took Friday off. He sat up on the edge of the bed and watched Mel through the door she left ajar. She had her car, so he didn't need to get up, but he pulled on some boxer shorts and went to the kitchen to fix breakfast.\n\nMel called through the door, \"Did I tell you that Rudy was at dress rehearsal last night with a candidate to replace Paul? He's going to have another one in tomorrow\u2014a woman named Gina Tedesco. She's supposed to be really good.\"\n\n\"That's got to be galling for Paul,\" Rudy said. It was starting to look like the matin\u00e9e tomorrow\u2014Valentine's Day\u2014would be busy. \n\n\"Yeah, right?\" Mel said. \"But he seems to be holding it together. He's competing for his job, I guess.\" She wrapped a towel around her hair as she walked into the kitchen.\n\n\"You're making breakfast? Ray, you don't have to!\" she said. When Mel slipped into a chair at the table she was wearing panties, his dress shirt, and the towel on her head. Ray watched her while he put a mug of coffee and a plate of eggs and sausage in front of her; he thought she looked really cute in his clothes.\n\n\"What are you going to do with the rest of your day?\" Mel asked.\n\nRay opened the curtains to let the morning light fall on the table, then sat down. \"Run first, then I'll see Pamela Hardy for lunch, otherwise nothing. I'll nap.\" That was a lie. He had things to do, but that was to be a surprise for Mel.\n\nHe got back from Austin on Thursday afternoon. Mel was at the Westside center, so he went to Calhoun to make sure arrangements were in place. He owned cheap seats in the balcony that he bought at group rates, and he shelled out the money to get Mel's kids to the Valentine's Day matin\u00e9e. There would be about thirty in all, some from Calhoun and some from Westside, and staff to keep track of them, and the bus rental and insurance.\n\nWhen Ray first had the idea he meant to impress Pamela with how important Mel was to her kids, but as he worked from Austin to make the arrangements it all became more of a gift for Mel than a trick for Pamela. Today he needed to visit Westside and make sure their arrangements were ready.\n\nMel interrupted Ray's thoughts with, \"Gotta go!\" She was still wiping her lips when she pushed away from the table. Ray cleared the dishes while Mel pulled on sweats and shoes then they walked to her car.\n\n\"You're not coming tonight, right?\" Mel asked. Cast A danced the opening show and in that cast Mel danced minor roles or with the corps de ballet.\n\n\"Nah. I'll wait until tomorrow,\" Ray said. The Valentine's Day matin\u00e9e was danced by the B cast and Mel would be Cinderella. It was all too perfect.\n\nThey stopped by Mel's car, and she paused before she got in. \"Things always run late on opening nights,\" Mel said. \"Maybe I'll just see you tomorrow?\"\n\n*****\n\nRay and Mel both liked the changes that his lifting and running made in Ray's body, so he found ways to keep up the exercise on his long days in Austin. He had his old suits tailored to fit his new form, and he wore one of those refitted suits to lunch with Pamela. He thought it may have made all the difference.\n\nThey lunched at a popular deli, and Ray watched Pamela over his sandwich. \"I have two tickets for the matin\u00e9e tomorrow,\" he said. \"Would you be my guest there? You can see Mel again, and see what the company can do for the community.\"\n\nPamela expression was serious when she said, \"I met Mel and I thought she was wonderful. The community center directors loved her and they loved what she does for the kids. That isn't really my problem. Why should the foundation support work that's already being done, and entirely on a no-cost basis?\"\n\n\"So Mel's programs can grow,\" Ray answered. \"So she can involve more dancers, serve more kids, and do more.\" He paused and watched Pamela for a moment then said, \"You know what your money really means to the company, right?\"\n\n\"The Hillson Endowment grant? Yes, you told me about it, and I talked to them last week\u2014it's always good to check the facts. I'm sure that Mel's interest in community service is genuine, but I'm not sure about the company's interest. That's something else that concerns me.\" \n\n\"The company has a genuine interest,\" Ray said. \"It's in their mission statement and I guess it always has been. The problem now is that the current Artistic Director doesn't support it.\"\n\nRay tapped the table and wondered how far he could go. \"Because of the Hillson grant, the company would be willing to meet any reasonable requirement you want to make.\"\n\nPamela seemed to ignore Ray's pitch. She sat back to look at how Ray's suit showed off his V-shaped torso and asked, \"Do you always dress like this? You've been in a suit every time we've met.\"\n\n\"I'm an attorney,\" Ray said with a shrug. \"We wear suits.\"\n\nPamela straightened her back and laughed. \"You wear suits better than any man I know,\" she said. \"I'll go to your ballet if you promise me two things. You have to wear a suit like this, and you have to let me get a picture of us together. I'm posting that picture so my ex can see.\"\n\nRay was surprised that Pamela agreed\u2014regardless of what her reason might be. He pulled two tickets from his jacket pocket and offered one to Pamela. \"I need to be at the theater early then I have a commitment immediately after the show. You can take a ticket and meet me in the lobby, or you can call when you get there and I'll meet you at the ticket booth. You have my phone number, right?\"\n\n\"Either way,\" he said with a laugh, \"I'll wear a good suit and someone can take a picture.\"\n\nPamela glanced at her phone and said, \"I'll take a ticket and meet you inside. Now I have a one o'clock to get to. I'll see you tomorrow, a little before two.\"\n\nRay paid for lunch and then met with the April Gonzales, the Activities Director at Westside, to make sure the arrangements were all in place. He signed some forms, and when the paperwork was done he pointed to art supplies stacked behind April's desk and asked, \"What's all the red and white construction paper for?\"\n\n\"Valentine cards,\" she answered. \"It's something I arranged with the director at Calhoun. We're going to try to have all the kids who are going to the show make cards for Mel.\" A sudden look of concern crossed April's face and she asked, \"There's going to be some way to get the cards to her, isn't there?\"\n\nRay thought for an instant then said, \"Mel usually meets kids in the lobby after shows to tell stories, but thirty kids might be too much for the lobby. Let's meet her at the front of the stage after the show. That should work better.\"\n\n\"Cool,\" April said. She looked through the window behind Ray. \"The early kids are starting to come in. I need to set up tables and get them going.\"\n\nThe best thing about the time Ray spent in Austin was that he could buy something for Mel without any chance of her finding out. He realized as he watched them set out tables and chairs and bring out the paper, scissors, glue, glitter and markers that he didn't have a Valentine's Day card to go with his present.\n\nRay stepped up beside April and asked, \"Do you mind if I make a card too? I have time to buy one for Mel, but I think I'd rather make one.\"\n\nApril laughed and said, \"That's wonderful. Show the kids how to do it!\"\n\nRay settled as best he could into a chair made for a child, and the kids who were already there watched while he gathered up red paper and white paper. He showed them how to make a perfect heart by folding the paper in two and cutting just half of it. He cut one heart out of red paper, then a slightly smaller one out of white paper, and then he cut a second heart from the white heart so that he had one smaller white heart and one outline of a heart.\n\nThe kids all drew closer around Ray while he glued the white outline of the heart onto the outside of the big red heart, then glued the smaller white heart on the inside. He picked a gold glitter pen and wrote in his best hand inside the white outline, \"Will you be my Valentine?\"\n\nRay waited until the glitter was dry then opened the card. The kids clamored around him and asked over and over, \"Whatcha gonna write for Miss Mel?\"\n\nHe knew what he wanted to write, but he smiled at the kids and tucked the card into his jacket pocket and said, \"That's my secret. Now what are you going to write for her?\"\n\nRay opened the card again when he got home that night. He found a skewer in the kitchen and poked two holes through the back of the card. Ray used the holes and some string to tie Mel's present inside then he wrote his message to Miss Mel. He set the card aside when he was done and stared at the city lights outside his window, and he worried.\n\n*****\n\nRay woke late in the morning and found a message waiting on his phone. He dreaded what he might find when he swiped the screen.\n\nIt was from Rudy. \"How are you doing with Pamela Hardy?\"\n\nRay sat up on the edge of his bed to answer, \"Well, I hope. She'll be with me at the show this afternoon.\" He checked the time and realized he needed to hurry a little.\n\nWhen his phone chimed again, Ray was already getting into the shower. Rudy said, \"Good. My contact at the Hillson Endowment is Henry Stein and he's in town. I found that out when he called from the airport.\"\n\n\"Panic!\" Ray answered and realized for the first time that Rudy knew nothing about his plans. \"I'm going to have thirty of Mel's kids at the show. They all have valentine cards to give Mel afterwards.\" Ray left his phone by the shower and ignored it until he was drying off.\n\n\"I'm with Gina Tedesco, and Sofia is with Henry.\" Rudy said. \"I hoped you could help Sofia but it sounds like your hands are full.\"\n\nRay poured himself a bowl of breakfast cereal and sat down before he answered, \"I'll do what I can but that might not be much.\"\n\nHis last act before he left the house, was to send two messages. He knew that the dancers would be in the theater by now. To Mel he sent, \"I have a surprise for you after the show. Don't go to the lobby and don't get out of costume. Wait for me.\" Then to Jenn and Jill he sent, \"I have a surprise for Mel. Can you keep her on stage after the show? Don't let her go.\"",
        "Ray stepped into a tempest when he entered the theater. Couples and parents towing children streamed around him on their way to their seats, and there was never a moment between the demands for his attention; if it wasn't Rudy or Sofia, then it was Mel's kids who had to be seated, and finally it was Pamela at his elbow.\n\nThe demands only subsided when the music started. Ray turned off his phone and settled beside Pamela to watch the old fairy tale unfold. Jenn and Jill danced as the crazy stepsisters against Mel's humble Cinderella and they made the crowd laugh. Julio danced as her romantic prince and the crowd gasped at his leaps and turns.\n\nIn the final wedding scene, Mel stepped on stage for the pas de deux wearing a glittering tiara with diamonds and rubies and a red and white tutu studded with the same gems.\n\nWomen in the audience dabbed their tears while Cinderella danced the adagio with her prince then he stepped into the shadows. When Cinderella took the stage alone even Mel's kids fell quiet. The tempo quickened and the audience caught their breath while Mel danced. The stage light flashed off her jewels while she floated and spun, and in the end she rose on one toe and propelled herself through turn after turn while the crowd stood to cheer her on.\n\nRay waited after the show until Sofia presented Mel and Julio with bouquets of red and white roses. After the last bows he and Pamela made their way through the exiting crowd to the front of the stage. It was like swimming upstream. Rudy came from the wings and brought Gina Tedesco with him and they talked on stage as the crowd gradually thinned. Sofia met Henry in front of the stage and Pamela left Ray to talk with them.\n\nPaul's voice came from back stage, \"Dammit! This is going to stop!\" He ran down the steps from the stage, stopped in front of Sofia and confronted Pamela.\n\n\"With due respect,\" Paul started, without showing any respect, \"Community service is a waste of a dance company's time and money. I don't know why you're getting so much attention for the piddling sum you're good for, but it's time to stop this nonsense. I will not let my dancers waste their energy on some stupid community project!\"\n\nPamela stepped back, and anger flashed in Sofia's eyes. She touched Pamela's arm and said, \"Paul no longer speaks for this company.\" She turned to where Rudy watched from on stage, made a slashing gesture at her throat, and then looked back to Paul, \"Thanks for your efforts here Paul, but your time with us is over. We're going in a different direction. Clear your stuff out of the studio.\"\n\nPaul took a moment to grasp his situation then stepped toward Sofia, red-faced and furious.\n\nRay moved quickly; he grasped Paul by the arm and pulled him away, then pushed him down into the first row of seats. He loomed over the seated man and said, \"Get a grip, Paul. This should be no surprise to you. If you need help clearing out of the studio then I'm sure that can be arranged.\"\n\nPaul dragged himself up from the theater seat with his eyes on Ray then hurried around Mel's kids who were gathered at the front of the stage. Ray watched him leave then turned in time to see Rudy lean to Gina and say, \"Now we have the opening we anticipated. I can offer you the position of Artistic Director of Franklin Ballet.\" From the smile on Gina's face Ray could tell the offer was well-received.\n\nHenry watched the sudden changes then told Sofia, \"The last roadblock seems to be out of the way.\" He glanced at Pamela then continued, \"My visit here today wasn't by chance. It was Ms. Hardy who called me down. I believe we both have good news for you.\"\n\nPamela explained, as much to Ray as to Sofia, \"I made the decision to fund your grant request last week after I first met with Mel, but I talked with Henry and we decided to make a joint announcement.\" She grinned at Ray and continued, \"I'm sorry I led you on yesterday, but don't go away. You still owe me a photo.\" She handed Henry her phone and asked, \"Would you take our picture?\"\n\nRay's smile was a little confused, but he put his arm around Pamela and posed. After the picture was taken Ray blinked away the effect of the flash and found Mel on stage with Jenn and Jill and her bouquet still in hand.\n\nThe dancers listened as Gina told Rudy, \"Let's talk specifics later. Right now I want to see what's going on here.\" Gina gestured to the crowd of children and volunteers.\n\nThe curtain blocked Mel's view, so she stepped around it to see what Gina was talking about. The children squealed when they saw her. \"Oh my God!\" she said. She looked at Ray with a smile as bright as the stage lights. \"This is your surprise? Ray, this is wonderful!\"\n\nMel thrust her flowers at Jill and ran to sit on the edge of the stage with the skirt of her jeweled tutu spread around her. \"Theresa and Michael, and Dante and China and...\" She named each of them as they jumped up and down to be the next to give Mel her card.\n\nMel's mascara was starting to run when she looked up at Jenn as said, \"I don't have anything to give them!\"\n\n\"Yes you do,\" Jill said. She sat down on Mel's right and pulled one flower out of Mel's bouquet while Jenn settled down on her left. Mel took the flower and gave it to a child almost too small to reach, then took another and another until the last was gone, but kids still waited with empty hands.\n\nJulio came from back stage to see what was going on. He leaned over Mel's shoulder and gave her his bouquet, and then jumped off the stage to watch from beside Ray. Mel's face was streaked with tears by the time she ran out of flowers again, but then Gina handed Jenn a third bouquet and said, \"I think these were for tonight. We can get more.\"\n\nThe volunteers waited until the kids all had flowers then guided them back to the buses. Mel's lap was filled with valentine cards when Ray stepped up in front of her. She leaned to his ear to say \"Mr. Ellison, when we get out of here I'm going to make your day.\"\n\nRay gave Mel a fleeting smile while his worries from the night before returned. He said, \"I have something else for you.\" He put his hands on Mel's waist and she gasped in surprise when he lifted her off the stage and set her among the cards that he scattered off her lap\n\n\"Ray,\" Mel complained, \"I don't have anything for you. I've been so busy!\"\n\n\"Look at yourself, Mel\" Ray said, \"You're a living Valentine's Day card. You're all I need and you could be even more.\"\n\nMel wondered what Ray meant and watched curiously as he reached into his jacket pocket to produce the card he made. She took it from his hands and read aloud, \"Will you be my Valentine?\" then opened the card and looked up with wide eyes. Jenn and Jill watched from their perch behind Mel and both covered their mouths and gasped \"Oh my God!\"\n\nA diamond solitaire ring glittered inside the card. Mel repeated aloud the one word that Ray wrote below the ring, \"Forever?\"\n\nRay caught Mel's arms and said, \"Mel, will you marry me? Then you won't need to worry when things try to pull us apart.\"\n\nMel didn't need Ray's explanation. She squealed \"Yes!\" and leaped onto him. He would have toppled over backwards if Julio hadn't kept him on his feet.\n\nRay held Mel in his arms, focused on her face and told her, \"God Mel, you're a beautiful, hot mess.\"\n\n\"And now I'm going to be your hot mess,\" Mel said. She tipped her head and covered Ray's mouth with hers then pushed her tongue between his lips. Ray closed his eyes and knew nothing but Mel's kiss and her body in his arms, her touch, her taste, her scent and the sound of her ragged breath.\n\nThe picture that Pamela snapped from behind Ray showed a young man in a fitted suit standing in the stage light with a ballerina wrapped around him. The white frill of her tutu radiated from her hips and her arms draped over his shoulders with his card still in hand. Her long legs with pointe shoes still on her feet crossed behind his back.\n\nGina clapped her hands from stage and while the dancers laughed she repeated the company rule, \"You two! No sex in the company costumes.\"\n\nIt was late that night when Mel crawled over Ray and laid her head on his chest. She smiled to herself and told Ray, \"I'm going to like my new name. It kind of rolls off my tongue.\" She drifted to sleep in his arms mumbling, \"Mel Ellison. Mel Ellison.\""
    ],
    "authorname": "NotWise",
    "tags": [
        "romance",
        "ballerina",
        "foot",
        "massage",
        "exhibitionism",
        "oral",
        "dance"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/valentines-for-cinderella"
}