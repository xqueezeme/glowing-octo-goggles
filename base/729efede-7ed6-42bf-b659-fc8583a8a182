{
    "title": "Seven Days Ch. 04",
    "pages": [
        "In the car on the way back to his house, Nic thought about his day with Victoria. He realized he was overstepping boundaries. He never should have spent the night. He rarely ever slept in the same bed as a woman he'd just had sex with. Usually he'd politely, or not so politely, kick them out or just stop by their place and leave when the actual act was done. Amber, being his wife, shared a bed with him until they couldn't stand to be around each other. Then she took another bedroom in the house, but that was before she had moved out over six months ago. Nic had every intention of leaving after fucking Victoria, but when he returned from the bathroom, he went to gather his clothes from the bedroom and heard her snoring.\n\nHe had walked over to her side of the bed and stared down at her. His eyes slowly roamed over her naked body. Her smooth back which dented in at her small waist and then rose with the round curves of her perfect ass. His eyes traveled down her silky legs to cute tiny feet. She shifted in her sleep to her side and he stared at the tiny butterfly tattoo on her pelvic bone. He wondered when she had gotten it. She didn't seem like the type of person who had any tattoos. He wanted to put his mouth to the small colorful ink and kiss it. Since he couldn't kiss what he really wanted. He looked back at her face and at her soft lips which were slightly parted.\n\nNic had sighed and dropped his clothing back on the floor. He had gently crawled back into the bed and had fallen asleep staring at the back of her head.\n\nHe had hated to leave her without any explanation during their game, but in his line of 'work' the less she knew, the better for her. A two-timing snitch who had placed one of his men in jail, had finally been caught. The bastard had been playing all sides. Selling lies to Nic's rivals about him, and vice versa and then selling all of them to crooked cops. Well, this time, he crossed the wrong people.\n\nWhen Nic arrived at his house, he was greeted at the door. \"How long has he been here?\" Nic said, removing his jacket and walking briskly through the house.\n\n\"A few hours. We couldn't reach you,\" Jimmy said, as he followed in line behind Nic.\n\nNic quietly cursed himself. That's one thing he couldn't tolerate. Letting business matters slip. Shit, he should have turned his damn phone on. Victoria was fucking with his mind. He needed to get his shit together.\n\n\"What's his name?\" Nic asked.\n\n\"Mark Hinson. Apparently us and the Koreans aren't the first people he backstabbed.\"\n\nNic rolled up his sleeves, \"But we'll be the last,\" he stated before he entered his basement. \n\n************************\n\nAfter their Scrabble game, Victoria had sat up all night trying to figure out her new approach to Nic. She couldn't keep up this same routine with him. She couldn't keep letting him add days because she couldn't control her temper. That's exactly what he wanted. To keep her here for his own sick reasons. But...did she want to be there? No! Of course not! What was she thinking? Of course not... And she couldn't let things like their 'date' distract her. It wasn't real, and it didn't mean anything.\n\nFrom here on out she would do all that he asked so that her time could pass quickly and they could go their separate ways. This seemed to be the only way. So what, he took her to the movies. Big deal. Who cared if he played Scrabble with her? None of those things erased this dreadful arrangement. She needed to get a grip. And she needed to figure out how she was going to pay this month's rent. Victoria went to sleep late, with many stressful things floating around in her mind.\n\n********************\n\nThe next morning, Victoria woke up, took a shower and threw on a hoodie and some sweatpants, then heard a soft knock on the door. She looked through the peephole and recognized the white blond hair immediately. Victoria smiled as she opened the door and Minka stepped in followed by Raymond with several large boxes and bags.\n\n\"Hey Minka,\" Victoria said, while hugging the tiny girl. \"Hey! How was the party the other night?\" Minka asked.\n\n\"It was alright. But your dress was a hit,\" Victoria said. Minka smiled from ear to ear. \"Yes! I knew it would be. You looked amazing in it. Well, since you trust my taste...Nic sent me on a little shopping spree for you. I hope you like.\"\n\nVictoria shook her head. Why was Nic doing this? She then turned her attention to the big guy. \"Hi, Raymond. Come to sweep me off my feet and carry me away from big, bad Nic?\" Victoria teased. She thought she saw a teeny, tiny smile in the corner of his mouth, but she couldn't be sure. He was such a teddy bear.\n\nMinka walked toward the back of the condo and into the bedroom. Raymond followed behind, dragging several boxes. Victoria wondered if they had bought the entire store.\n\nShe watched in awe as Minka hung up and folded different articles of clothing. She hung dresses and skirts together, jeans in one section and lounging and work-out clothes in another. Minka placed different types of expensive shoes on the shoe rack. She smiled when she held up a brand new pair of black and white Converse. \"This was not my pick, but he said you liked them,\" Minka said, laughing. \n\nVictoria stared down at her tattered, old Converse. She did like these damn shoes. They were comfortable. She looked back up and noticed Minka placing several undergarments and a few pair of bikinis inside the drawers. What the hell? How long did Nic think she was staying? She only had a few more days left. And why was he buying her all of this anyway?! She was supposed to be 'paying' money off...not adding to the debt.\n\n\"Okay, I'm done,\" Minka said, brushing her hands against each other. \"Everything in there should fit you perfectly, but if not, give me a call, and I'll fix it,\" she said, while handing Victoria her card. It just had her name and number on it. \n\n\"Thanks, I don't know what to say. There's just so much,\" Victoria said, looking over the now full closet. She, her mother and father probably didn't have this much clothing combined.\n\n\"Well, women can never have enough clothes and accessories. Enjoy!\" Minka said as she bounced out of the room.\n\nAfter they left, Victoria went to examine the closet. She felt like she had her own little mini department store. But then her smile quickly vanished. She needed to realize that this didn't mean anything. Everything in this closet was for him, not her. So she could look somewhat decent beside him. So she could wear lingerie to get him off. It was just a game.\n\nVictoria sighed as she looked over the dresses. She chose a dark blue soft cotton dress with long sleeves. She picked out a pair of boots to go with it, and quickly pulled her thick hair into a high ponytail. She added a little mascara and clear lip gloss. She would at least try to look somewhat decent for him since she would be turning over her new leaf today. Make Nic happy so she could get the hell out of there.\n\nVictoria grabbed the cordless phone and dialed her parents' phone number. She chewed on her nail while waiting for someone to answer.\n\n\"Hello?\"\n\n\"Hey mama. How are you?\" Victoria asked.\n\n\"I'm fine, but where are you?\"\n\n\"I\u2014I can't really say. But I'm fine. Did Mr. Parker come by about the rent, yet?\"\n\n\"Yeah. I held him off. We got to think of something. I only have half. Where are you again?\"\n\n\"Mama, I can't tell you that right now. But I'm fine, trust me. And pretty soon, everything is going to be fine. And I'll try to figure out a way to get the other half. How's daddy?\"\n\nShe heard her mother sigh. Victoria knew that sigh. That meant her father was being difficult.\n\n\"He's alright, I guess. Just depressed. And that's causing him to be mean. Just a mean, old man. He asking where you are though. I guess I'll just tell him that line you feeding me.\"\n\nVictoria hated that her mother was having to deal with this alone. And here she was sitting up in some expensive condo pretending to live the high life. \"Mama, I have to go. I'll, um, see about getting you some money really soon. Just...nevermind. Love you, bye,\" she said as she quickly rushed off the phone.\n\nVictoria had to do something. Her family had barely been getting by for years. Just when she thought there was no way, they always found one. She would find one this time too. She knew what she had to do. She really didn't want to, but she had to. She detested Mr. Parker, but she knew the only way out of this was to get an extension on their rent. She sighed as she grabbed her purse and walked out. Downstairs, Sam directed her to the closest bus. Nic usually didn't come by until later in the afternoon, so hopefully she would get back before he even realized she had gone anywhere.\n\nFinally, after three bus changes and an hour later, she arrived at her neighborhood. She looked around at the broken down apartments and trash on the streets. It seemed like she hadn't been there in months...even though it had only been a couple weeks. She walked a few blocks south until she came to the rent office. She REALLY didn't want to deal with this man today. She couldn't stand him.\n\nVictoria walked inside the tiny building and knocked on his office door. \"What?!\" she heard him yell through the door.\n\nShe opened it and walked inside. She saw Mr. Parker leaning over his desk counting money. She stared at the middle-aged, chubby, short bald man as he looked up at her.\n\n\"Well, my favorite girl. Do you have my money, Vicky?\" Mr. Parker growled at her. \"Or did you come to ask for an extension...yet again.\" \n\n\"Mr. Parker, I know we are extremely late, but I had to leave town for a little while, so I don't have my half of the money. But if you could just extend our deadline by two weeks, I promise, I can figure something out by then. Or I can give you half now, and the other half in two weeks.\"\n\nShe noticed his eyes roam over her body. \"Since when did you start dressing so nice?\" he asked.\n\n\"Mr. Parker, did you hear what I said?\" Victoria said, crossing her arms over her chest.\n\nMr. Parker shook his head. \"You either pay me all of the money now...or you and your family are out on the street by tomorrow morning. You think you can play me. You come in here with fancy new clothes, but yet you can't pay the rent. Bullshit.\" He then slowly slid his eyes down her body again. She hated when he looked at her. His sleazy eyes had been wandering over her body even when she was a young girl who would come in with her mom to pay the rent.\n\nBut there was no way in hell she was going to get that money by today. Shit! \"Mr. Parker, I don't have the money now. But I promise, I can get it in two weeks,\" Victoria said, almost pleading. It made her sick to have to do this. \n\nMr. Parker leaned back in his chair. His eyes roamed over her body for the third time. \"Well, judging by those clothes, looks like you've finally been putting your better assets to use. You know, we could always work out our alternative deal...I offered that to you a while back, remember?\"\n\nVictoria felt sick. At that exact moment, she hated men. Did she have a fucking sign on her forehead that read, 'Weak and poor...will have sex for money?' Why did men think they could treat her this way? She wanted to stab Mr. Parker with the letter opener on his desk. She didn't understand this new violent streak in her, but she loathed that man right then.\n\n\"Are you going to give me the extension or not?\" Victoria spat at him, trying her best to ignore his disgusting offer.\n\n\"Not. But if you give me a blow job, I might consider letting you have your two weeks,\" he said with a smirk.\n\n\"Fuck you,\" Victoria said, before she turned and stomped toward the exit. \"I want that money today or you're out!\" she heard him holler right before she slammed the door.\n\nWhen Victoria arrived back at Nic's condo she broke down. She hated feeling this helpless. Money. Fucking money!! She wished she could shred it all and send everyone back to the dark ages. She laughed through her tears thinking about that. She walked into the bedroom and laid down on the bed. She tried to think really hard about how to get that money. She actually looked around Nic's condo and thought about selling something...but that would be dishonest and she couldn't do that. More tears seemed to come as everything looked useless. Not that crying helped, but crap, she couldn't stop the tears. She'd have to call her mom and dad and tell them to start packing. Mr. Parker didn't make idle threats. She had seen him kick people out before, including this little old Puerto Rican lady, who had gotten behind on payments. He didn't care. Victoria cried even harder thinking about Ms. Juarez sitting on her suitcase with nowhere to go. She had wanted to invite the lady into their apartment, but her father had said absolutely not. So, she watched from her window as hours passed until someone came to get the little old lady. Hopefully a family member.\n\nVictoria closed her eyes as more tears squeezed from the corners and ran down the sides of her face and into her hair. She took a deep breath when she felt the bed sink down. She quickly opened her eyes to find Nic hovering over her with both his arms braced on either side of her head.\n\nNic saw the tears in her eyes and immediately asked, \"What's wrong?\"\n\nHe watched as Victoria quickly tried to shield her face from him but that caused her to cry even harder. \"Victoria, what's wrong? Did someone say or do something to you?\" Nic asked, feeling the hairs rise on his arms. He was about to fuck someone up.\n\nVictoria tried to speak, but it just came out in a loud, hoarse cry, \"My family is go\u2014going to be kicked out tomorrow morning. Be\u2014because we can't pay the rent. God, I hate him!\"\n\n\"Who?\" Nic asked.\n\n\"No one. It's fine. I'll get over it,\" Victoria sniffed, trying to pull herself together. She rose up on the bed causing Nic to stand. She quickly wiped at her tears. Why did she tell him her problems? Like he would actually care. It was his fault this shit was happening anyway. He was no better than Mr. Parker.\n\n\"Who is your landlord?\" Nic asked again.\n\n\"Mr. Parker. He's such an asshole. Good riddance that we'll be leaving his place anyway,\" Victoria tried to rationalize. She would have to call her mom in a bit and deliver the news.\n\nNic grabbed her hand and pulled her to her feet. \"Grab your jacket.\"\n\nVictoria obeyed, but then asked, \"Where are we going?\" \n\n\"To pay Mr. Parker a little visit,\" Nic said, as they walked outside and got into his car. \"What's the address?\" Nic asked, while pulling out into the street.\n\n\"Nic, this is my family's problem. Not yours.\"\n\n\"That's not what I asked you. The address.\"\n\nVictoria sighed and told him, but then added, \"I wouldn't even bother, he's a total dick.\"\n\n\"Why were you crying?\" Nic asked, ignoring her assessment of her landlord. \n\nVictoria didn't feel comfortable telling Nic these things. The less he was a part of her life, the better. But also...she knew that this was her day to turn over a new leaf and start playing this game Nic's way.\n\n\"Because I have jeopardized my family. They're getting kicked out because of me and my lack of being able to contribute. And because Mr. Parker said some mean and nasty things to me.\"\n\nNic squeezed the steering wheel. \"What did he say?\" \n\nVictoria told Nic, and he just nodded his head.\n\nThey arrived at Mr. Parker's building in less than twenty minutes due to Nic's impatient driving. When they got out, Nic told Victoria to wait outside the door.\n\nNic knocked. \"What?!\" Mr. Parker yelled. Nic opened the door, walked in, and locked it behind him. He turned to look at the tiny, little man.\n\n\"Who are you and what do you want?\" Mr. Parker asked, speaking around his cigar.\n\n\"I'm Nic Andretti,\" Nic stated and stopped to stare at the man's reaction.\n\nMr. Parker looked up again and dropped the cigar from his mouth. He quickly picked it up and stubbed it out in an ash tray. \"Mr. Andretti! I-I've heard so many things about you. I don't th-think we've ever had the pleasure of meeting,\" he stuttered through his shock.\n\nNic ignored him and placed down several hundred dollar bills. \"Here's the money Victoria owes you. From now on, any money matters concerning her, you bring to me. Call this number. The person on the other end will know how to get in contact with me,\" Nic said as he slid a card across the messy desk. Then Nic leaned down and narrowed his eyes at the sweating man. \"And if you ever harass or make another vulgar comment to her again, I'll bust your fucking knee caps and burn this shithole office down...with you in it. Capisce?\" \n\nMr. Parker's eyes grew even wider, if that were possible. \n\n\"Do-you-understand?\" Nic bit out slowly, as he gradually pushed the desk closer to Mr. Parker, until it was pressing into his chest, locking him between it and the wall.\n\n\"Yes,\" Mr. Parker coughed, \"I understand.\"\n\nNic held the desk there for a few seconds more, before pulling it back. \"Good. Now I think you owe Victoria an apology, correct?\"\n\nBefore Mr. Parker could even say anything, Nic walked to the door and unlocked it. He called for Victoria to enter. She slowly walked into the office and glanced back and forth between the two men. One calm, the other sweating.\n\n\"He has something he needs to say to you,\" Nic told her, then turned back around to Mr. Parker.\n\nMr. Parker swallowed loudly and looked over at Victoria. \"Hey, um, I just wanted to say sorry for the comments I said to you. Won't happen again. No hard feelings, okay?\"\n\nVictoria just nodded and looked back at Nic. What had he said to Mr. Parker? He looked as though he were ready to piss his pants. Actually, he might have.\n\n\"Now that it's settled, let's go,\" he said, grabbing her arm and leading her out of the door, but then stopped. He turned back around and leaned back through Mr. Parker's door. \"And heed my warning...most people don't get one,\" Nic whispered. \n\nIn the car on the way back to the loft, Nic and Victoria were silent. Once inside, Nic tossed his keys on the counter and removed his jacket. Victoria went to sit down on the couch. He couldn't help but notice how well the dress he had bought hugged her curves. \n\nHe started walking towards her when she spoke. \n\n\"Nic, you didn't have to do that. I owe you enough money as it is, and now I owe you more,\" Victoria said.\n\n\"You don't owe me anything. Your father does. This debt that you're here for is his debt. You offered to pay it off, but he was the one who borrowed the money. You never asked me for the money that I gave your landlord, so you don't owe me anything.\"\n\n\"And the clothes?\"\n\n\"Again, you didn't ask for them, they were a gift...so you owe me nothing,\" Nic said, sitting down beside her.\n\n\"But\u2014,\" Victoria started.\n\n\"Victoria...\"\n\n\"I know, I know...end of discussion,\" she said. She felt him lean closer to her ear, while the back of his fingers grazed her nipple.\n\n\"Did you like my gift?\" he whispered.\n\nShe nodded her head yes, but then quickly remembered to speak up. \"Yes, I did. Thank you.\" Okay, she would be nice and do the things he asked. She could do this until her time wound down. But she did want to ask one more question.\n\n\"Nic?\" she asked, as he pushed her down on the sofa and buried his face in her neck. She heard a muffled, \"what?\" from him.\n\n\"What did you say to Antonio at that party the other night?\" She could feel him licking and sucking the side of her neck. Her skin felt tender there since that seemed to be his favorite place to bite her. She laughed to herself. Nic did kind of remind her of a vampire, although he wasn't pale. He actually had a nice, light, natural tan due to his heritage. But right now, she could feel herself getting wet for him.\n\n\"That's between Antonio and me,\" he whispered as he started unbuckling his pants. He slowly peeled her dress over her head, and removed her bra and panties. He licked and sucked her taut nipples as he massaged her swelling clit.",
        "\"Ohh, Nic...,\" Victoria murmured.\n\n\"Do you want me inside you?\" Nic teased, as two of his fingers worked their way into her tight, wet pussy. \"Tell me, say you want it,\" he commanded, as his fingers seized her hair.\n\n\"I-I want you inside me,\" Victoria whispered.\n\nNic removed his fingers and pressed his erection against her soft love nest and pushed roughly until he was completely buried inside her. He wrapped one of his hands around her neck and squeezed. Her eyes grew wide and she immediately tensed underneath him. She quickly grabbed his hand, trying to push it away from her throat.\n\n\"Calm down. I'm not going to hurt you. Just relax and enjoy it,\" he whispered as he tightened his grip and began fucking her brutally. He was driving in and out of her pussy with so much force that the couch started to slightly move under the intense pressure. He lifted one of her legs over his shoulder so he could have more access, and his hand flexed and released around her neck several times.\n\nVictoria couldn't breathe. Literally. Her head was becoming light, but her pussy was quivering. She didn't know what the hell he was doing to her, but she didn't want him to stop. There was a slight chance that she could die of strangulation. What an embarrassing...satisfying way to go. Her mind was saying, \"Focus on breathing, bitch!!\" which placed all of her focus on the top half of her body, while he banged the shit out of her lower half. It was a different, extreme feeling. She felt her orgasm building and her eyes rolled back as her body trembled. She felt the pressure of his hand leave her neck and he placed her other leg over his shoulder and fucked her even harder, if that were possible. \n\nAargh, this girl's pussy was like fucking kryptonite to him. He seemed to go weak and silly every time he was inside her. This is where he constantly wanted to be. He thought about it while he was on important business calls, when he should have been concentrating. He hadn't enjoyed sex this much since...well, a long time. And partly because he knew that there was a part of her that hated getting this turned on for him. She fought against it, and THAT caused him to get really turned on. Knowing in her own way she was playing hard to get. \n\nHe was hoping he wasn't hurting her, but right now, he was about to come and he wanted to get as far into her tight cunt as he could. He finally stilled himself inside her and released his first load. \"Ugh, fuck! Damn, Victoria...,\" he mumbled as he continued to pump his seed deep inside her.\n\nOnce he was completely emptied, he let her legs drop down beside him and he lowered himself on top of her. He could feel her heart beating. A steady fast pace. They stayed like that for a while.\n\n\"Cazzo, lei mi ha matto,\" Nic muttered to himself, before he sat up and slid his underwear and pants back up.\n\nVictoria rose up and stared at him. \"What does that mean?\" she asked. \"Nothing,\" he said as he stood and grabbed his shirt. He needed to get out of there. She was messing with his mind.\n\n\"Hey, I need you ready by seven. Jimmy's wife is having some guests over for dinner and they invited you. I'll be back then to pick you up,\" he said, as he rushed out of the door.\n\nVictoria sighed and walked to the bedroom to take a nap. She was already exhausted, and didn't really feel like going out again. She fell asleep thinking about Nic helping her with the rent. She still didn't know how she felt about it, but perhaps that was one less stressful matter off her plate.\n\nWhen she woke, she decided to take a warm bath in his humongous tub. She leaned back and let the water pressure streams massage her back. She placed a warm washcloth over her eyes and tried to block out her crazy life. \n\nAfter a few minutes, Victoria decided to get out. She felt a little better, but she only had a few hours before the party, and she wanted to finish reading her book. She placed a white robe around her and walked into the bedroom to pick out an outfit. \n\nVictoria was about to slide on a pair of panties when she heard the TV turn on in the front room. She sighed. He was early and she was sure he was ready for round two. She made her way down the hall.\n\n\"Nic, you're not going to leave me with much energy for\u2014,\" Victoria started and then froze when icy blue eyes turned to glare at her. But they weren't Nic's eyes. God, give her strength. These eyes belonged to Amber. She was sitting on the couch, shoes off with her legs pulled up underneath her. She had been flipping through the TV channels when Victoria entered the room.\n\nBoth women stared at each other. Awkward.\n\n\"Hello, doll,\" Amber smirked, turning the TV off.\n\nVictoria tried her best to hide her frown. \"Hi, Amber. What are you doing here?\" \n\n\"Well, technically I live here. This is, after all, my husband's condo. So what are YOU doing here? I thought you didn't know him,\" Amber said, standing up and slipping back into her heels, placing her a little over six feet tall.\n\nVictoria sighed and crossed her arms over her chest. \"Amber, whatever is going on between you and Nic is your business. None of mine.\"\n\n\"Well, since you're fucking him, I guess it makes it your business too,\" Amber stated, walking towards her. Victoria braced herself. Because if this Amazon bitch touched her, she would smack the shit out of her. She could give a damn if it was Nic's wife or not. She was sick of people trying to run all over her.\n\n\"I mean, trust me, I know my husband is no angel. He was fucking around with other women before and after our marriage. He's handsome, he's rich, and in the bedroom...well, you and I both know what can happen. So I figure one little flaw like infidelity...who cares, right? As long as at the end of the day...he comes back to me.\"\n\nAmber continued to stare at Victoria as she circled her.\n\n\"But that's where I'm confused about you. Why is he letting you stay here and attend parties? You can tell me. It will be our little secret.\"\n\nVictoria exhaled. \"I have to get dressed. Excuse me,\" she said, as she pushed past Amber and walked into the bedroom. She heard Amber's heels following behind her. Shit! Why won't this crazy bitch just leave?!\n\n\"I see he left his mark on you,\" she heard Amber say. Victoria turned around, \"What?\" she asked, irritated. Amber pointed to her neck. Victoria quickly turned around and rolled her eyes.\n\n\"You must be an even bigger slut in bed than I am, for him to still be with you,\" Amber said.\n\nVictoria was done with this woman. She turned around quickly and walked up to her. \"You know what, why the fuck are you here? Since you're so determined to make your business with Nic, 'our' business, then fine, I'll jump in. Why the hell aren't you with him? You're obviously not living with him and I didn't even know you existed until the party that night,\" Victoria huffed out.\n\nAmber's eyes widened and then narrowed at her. \"Please little girl, I can have him back anytime I want him,\" Amber said, while flicking her hair behind her back.\n\n\"Then go get him and leave me the hell alone! If you want him so fucking much. I'm not going to stop you, trust me!\"\n\nAmber opened her mouth like she was about to say something, but then closed it. She turned and stomped out of the room. Victoria heard the door open, but then heard Amber yell, \"Don't get too comfortable, sweetheart. Nic gets bored really easily...and it's just a matter of time before you're right back on the streets where you came from!\" And then the door slammed.\n\nVictoria grabbed a hanger and threw it across the room. Damn, Nic. Damn, damn, DAMN!!!\n\n**************************\n\nVictoria hated these types of things with Nic. No one knew her, so she was pretty sure they all assumed she was some loose girl that Nic had picked up for the night. At least Jimmy would be there. He always made her feel more at ease. He treated her like a person and not some expendable trash.\n\nNic picked her up exactly at seven, and when they arrived at Jimmy's house, a tiny woman with brunette hair opened the door to greet them. \"Hey Nic, looking good as always,\" she laughed, while giving Nic a hug. \"Likewise\u2014when can I steal you away from him?\" Nic returned. She laughed and patted him on the shoulder, then turned her attention to Victoria. \"Hi, I'm Isabelle, Jimmy's wife,\" she said, offering her hand.\n\n\"Oh, hi, I'm Victoria. Nice to meet you.\"\n\n\"Nic,\" Isabelle said, \"Jimmy and the guys are in the living room. Make yourself at home while I become acquainted with your guest.\"\n\nVictoria watched as Nic left her with this stranger. She stared at the woman. She was a cute petite woman with big brown eyes. She seemed the complete opposite of Jimmy, who was big and burly.\n\n\"Here, let me take that,\" she said to Victoria, while pulling her coat from her. \n\n\"Thanks,\" Victoria said. Isabelle led Victoria down the hallway and towards the kitchen. Victoria felt a little at ease considering this was Jimmy's wife. Maybe she was as nice as he was. \n\n\"So, you're Victoria...Amber's rival,\" Isabelle laughed, as she handed Victoria a glass of champagne. Okay, maybe she wasn't as nice.\n\nVictoria didn't want to be rude to Jimmy's wife, so she said nothing as she sipped on the glass of champagne. Fuck it, she needed more than a few sips with the way her day had been going. She tipped the glass up and swallowed the rest.\n\n\"Oh, I'm sorry. I didn't mean anything by that. It's just that I can't stand Amber. She can die a thousand deaths for all that I'm concerned. Trust me, I barely know you, but I'm Team Victoria all the way,\" Isabelle said.\n\nThat shocked the hell out of Victoria. She stared down at Isabelle and laughed. Okay, maybe Isabelle wasn't so bad after all. \n\n\"Sit by me at dinner. I want to hear how you stole her limelight and her man at the party the other night. I arrived late, but I heard about it and I've been smiling ever since,\" Isabelle said, smiling at her. She linked her arm around Victoria and the two walked into the dining room together.\n\nAt dinner, Victoria was introduced to everyone. Most of them were Italian-American, and a few of them were related to either Jimmy or Isabelle. All of them knew who Nic was, and she was sure they knew what he did, but they didn't seem to care. They all told jokes and stories as the food was passed around. Food that was absolutely amazing. Isabelle was probably the best cook ever, next to Victoria's own mother. Isabelle showed Victoria pictures of her kids. She and Jimmy had three girls. Victoria laughed at the fact of a big, scary guy like Jimmy having three little girls. Victoria glanced at Nic, who was sitting opposite her at the table. She thought about Nic with a kid. He'd probably have a boy...who would get into as much trouble as Nic probably did as a kid. Victoria looked at her empty champagne glass. She had already downed her second glass. She normally didn't drink, and especially not this much, but Amber's words were still messing with her. Why was Nic doing stuff like this? Helping her with her rent and bringing her to an intimate dinner with his close friends. She was sure this was reserved mainly for family and girlfriends. Sure, she was invited by Jimmy, but Nic could have declined. She wasn't his girlfriend or wife like he kept reminding her. \n\nVictoria picked up the champagne bottle and poured herself another glass. 'Fuck Amber and Nic,' she thought. Well, she wanted to hate Nic, but he had come to her rescue against evil Mr. Parker. But why? She noticed, out of the corner of her eye, Nic nod to Jimmy who was sitting beside her, and Jimmy moved the champagne bottle closer to him and out of Victoria's reach. Well, fuck it, at least she'd get to drink this third full glass. She started downing it. When she was done draining the glass, she knew Nic was probably staring at her, but she tried not to look at him.\n\nSomehow the topic of conversation moved to the economy, and Ralph, a cousin of Jimmy's, decided to voice his opinion. \"Man, the economy is so fucked and those assholes in Wall Street and mortgage companies started all of this shit.\"\n\n\"Yeah, well perhaps there's no place for decency in the modern world,\" Nic chimed in.\n\n\"Assolutamente! It's like, get yours while you can and fuck everyone else. Man, it's so cutthroat out there nowadays. You really have to watch your investments,\" said Isabelle's brother Joey, while shaking his head.\n\n\"Well, regular businessmen fall by the waste side now. You have to come to the table with something extra or different,\" Nic added.\n\n\"That's right,\" Joey said.\n\nVictoria was really starting to feel her buzz. She had been quiet the whole time, while everyone chattered on around her. But Ralph just had to call her out. \"What do you think, Victoria,\" he said. The whole table got quiet, waiting for her to respond.\n\nVictoria quickly glanced around the table. Shit. \"Well, I always think there's a place for decency. At the end of the day, money isn't everything. It never was,\" Victoria said. She shouldn't have had that last glass. She felt herself leaning in her seat. They might not be able to tell she was a little tipsy, but she could feel it.\n\n\"Yeah, but where does decency get you?\" Nic asked. All eyes flew to him. \"Some people live their lives trying to be decent human beings, and all that they get is screwed over by the world. Friends, lovers...,\" he turned to stare directly at Victoria. \"Fathers, landlords and even me. So I forfeit decency for power any day.\"\n\nA couple of the men around the table mumbled in agreement. Victoria just stared at him, and then down at her bread and picked a small piece from it. \n\n\"Well, decent people hold some power over the people with power that you just mentioned,\" Victoria disputed.\n\n\"How so?\" Nic asked.\n\nThe entire table were leaning on their elbows watching this verbal volley back and forth between Nic and Victoria. Victoria glanced at Isabella and noticed that she was smiling from ear to ear at her. Victoria was nervous. She didn't want everyone paying so close attention. You could only hear the fireplace crackling in the background.\n\n\"Guilt. The power decent people hold over those who aren't, is guilt. Those that screw over people feel guilty,\" Victoria stated. At least she hoped they felt guilty.\n\n\"Usually the people screwing people over, Victoria, don't have a conscience. They don't care who they hurt to get what they want. And at the end of the day, it's more about the chase than it is actually getting what you want. Once you have it, it becomes boring. And people like that also don't spare a glance back at the lives they've ruined. And when they lay their heads on their pillow at night, they sleep peacefully, and guilt free, because they don't have any sympathy for the weak,\" Nic stated calmly, and then took a sip of champagne.\n\nEveryone was quiet for a moment, letting Nic's words sink in. Victoria felt a familiar sting behind her eyes. He was talking about her. She wanted so badly to get up from the table and leave. But not before she told Nic off. She thought of the scene in 'The Color Purple' where Celie confronts Mister at the dinner table with the carving knife. That image made her snort out a laugh. Everyone looked at her again, but she quickly stared at her plate. She had drank way too much.\n\nTo break the uncomfortable silence, Isabelle chimed in. \"But, if you believe in Heaven, then your decency can buy you a one way ticket. Those who have sacrificed their humanity for the sake of a few bucks...may never see that.\" Jimmy smiled over at his wife.\n\n\"Issa, you are right. For those that believe in that, I'm sure the decent ones do go to Heaven. And that's probably not where I'm going, but I can tell you right now...the devil is going to have one hell of a battle for my soul,\" Nic said with a grin.\n\nEveryone finally relaxed and laughed. Everyone but Victoria. She stared at Nic. Why did he affect her so much.\n\n\"Speaking of battling the devil for our souls, I don't think there's a decent man among us tonight. So you're not alone Nic. We'll be fighting the battle with you,\" another friend said. More laughs erupted from the table.\n\n\"Us women are decent by nature. I'm a loving wife and mother of three,\" Isabelle smiled. \"So while you men are sweating an eternity in hell, we'll be living it up on the other side.\"\n\n\"I'm not decent,\" a red-headed woman over in the corner said, while smiling devilishly at Ralph. \"Amen,\" he said, while he kissed her.\n\n\"What about you Victoria, are you decent?\" Joey asked. Victoria looked up. Fuck it, why hide the truth. Thank God for alcohol.\n\n\"You know, I don't think I am. I mean, I used to be a decent person before I came here and started fucking a married criminal for mon--,\" was the last thing she said, before Jimmy jerked her up. \"Hey Vicky, let's go outside for some fresh air,\" he said, practically picking her up. Isabelle excused herself and followed behind her husband.\n\nNic remained seated and calm as the eyes around the table quickly glanced at him then down at their food. He got up from the table. \"Excuse me,\" he said as he walked toward the back.\n\nOutside, the cool air felt good against Victoria's skin. She needed that. Jimmy placed her gently on a bench in their back yard, while Isabelle wiped her face with a cool, wet cloth. \"I'm sorry about that,\" Victoria slurred to them. \n\n\"It's okay honey, we all drink a little too much,\" Isabelle said. \n\n\"Fuck! What the hell am I doing here?!\" Victoria shouted at no one in particular. \n\n\"I'll take it from here,\" she heard Nic say from behind. Isabelle handed Victoria the cloth and kissed her on the forehead. \"Thank you,\" Victoria mumbled as Isabelle and Jimmy walked away.\n\nNic came around to stand in front of her. She didn't even have the energy to look at him.\n\n\"Victoria, look at me,\" Nic said.\n\nShe slowly looked up at him.\n\n\"You can't let what people say affect you so easily. You have to be stronger than that.\"\n\nVictoria scoffed. Was he really trying to give her lessons on how she should live her life? Please. \n\n\"I'm serious. I'm not going to hold my tongue because you get pissed and cry.\"\n\n\"Why are you trying to give me words of wisdom? You don't give a shit about me, so just take me back to the loft, fuck me and then leave, okay?\"\n\nNic narrowed his eyes at her. \"Fine, get your shit and let's go,\" he bit out and turned to walk back into the house. But then he stopped and said, \"Just know that for that little outburst and your disappearing act at my party...you've earned another fourteen days. Congratulations.\"\n\nFuck, so much for trying to play the game his way, Victoria thought. \n\n**************************\n\nLater that night, after he left his loft, Nic stopped by his restaurant. Even though it was closed, he wanted to stay there for some peace and quiet before he had to go back to his house. There always seemed to be people around him there. Truthfully, he'd rather sleep at the loft tonight, but after he and Victoria's angry sex, she rolled over and didn't say another word to him, so he was pretty sure she didn't want him there. \n\nNic stared down at the blank sheet of paper. He had a secret passion that only two people knew about, one being Jimmy. When he had tough decisions to make or was just stressed, he would draw free-style designs of buildings. He had actually gone to college for architecture and design, but he knew it was all in vain. He knew he would take over for his father some day, and when he graduated, he did. Even though he wasn't the oldest son in their family, he and his father both knew that he was the only one with the mindset to keep the 'business' afloat. But every now and then he was able to resurrect his private hobby. He had designed his club and the second restaurant. Both had turned out better than he could have imagined, especially his club. \n\nBut tonight, his stress didn't come from his job. It was coming from Victoria. He had promised himself that he wouldn't let her get to him, but he wasn't making too good on that promise. Her words tonight at dinner affected him more than he thought. More than he wanted to admit. 'The power decent people hold over those who aren't, is guilt,' she had told him. He wanted to laugh it off. What power could she possibly hold over him? But...he did feel guilty. There he was trying to tell her not to let other's words affect her so much, but yet her words had touched him. In life, he usually had a take no prisoners, fuck 'em attitude, but with Victoria, she was a better person than he was. And she wasn't as weak as he thought. For a person who has no money or power, to hold her head up high despite feeling humiliated on a daily basis...that took some courage. ",
        "And she had looked so beautiful tonight, and almost happy, but he had to go fuck it up by putting her back in her 'place'. \n\nNic sighed as he leaned back in his chair. He stared at the chair opposite of him and realized that just a few weeks ago, Victoria had sat in that chair to explain her situation to him. She had come to him, probably scared and ashamed, looking for help...and how did he treat her? Like she didn't fucking matter. If he were being truthful, he had just planned to fuck her that night and get rid of her. He was sure she couldn't satisfy him the way he wanted, so he'd just take a few thousand off what her father owed him and call it even. But, when he had gone into his loft, and she hit him and then threatened to cut him, that lit something in him. She wasn't a pushover like he had taken her for during their brief meeting. His stomach turned to think of how she looked at him when he had asked her to remove her clothes in front of him and Jimmy. He knew that if she had any other option...she would have taken it and probably kicked him in the nuts on the way out. But she was desperate and he had taken advantage of that. He'd ripped her cheap black dress, not caring that it might be the only one she had. Fuck, he could be an asshole sometimes. It never bothered him to be called that before, but now...for some reason, he didn't want Victoria to think that of him.\n\nNic leaned his head against his desk. He knew that their arrangement was something that would end eventually, and she'd go her separate way, and he'd go back to his life. But, in the meantime, he'd try to make it up to her. He would treat her differently. Yeah, starting tomorrow, he'd turn over a new leaf with Victoria. He smiled just thinking about her.\n\n************************ Over the next few days, Nic tried keep his promise to himself to treat Victoria better. But she didn't make it easy on him. At first, she barely said two words to him. He would ask her a question, and a simple \"yes\" or \"no\" would be her only answer. And when he tried to ask a question that would require more than those generic replies, she would simply turn to him, plaster on a fake smile and say, \"whatever you want is fine\". Oh, she got under his skin so bad. But he kept his cool. It was just a part of his nature. Remain cool and calm at all times. But Victoria was seriously trying his nature. But he also realized it was her only defense against him. She couldn't physically beat him, so she would try to mentally overpower him. And fuck, if it wasn't working! And just when he would be ready to snap, her words about 'guilt' would slowly creep back into his mind. He did feel guilty, and he found himself wanting her to be happy. \n\nSo, on several occasions, he would show up at the loft and beat her in a game of scrabble, or just sit and watch a TV show or movie with her. She seemed to like those sappy Lifetime movies, and although it was painful for him to watch, he would. And during these times, slowly but surely, she started to warm up to him again and he even caught her smiling a few times. \n\nThe other day, he took her to an art museum. He actually never cared much for those types of things, but she seemed fascinated with it. She told him that she had never been to an art museum before. When she was in grade school, they had taken a field trip to a museum, but had to pay for their own entrance into the museum. Her father was so tight with money, that she wasn't able to go, and instead spent that class period reading. That had made Nic feel even worse. But watching her bounce from painting to painting helped to quell some of that negativity. Although he found it all boring, she especially loved the Baroque paintings. She stared at them for several minutes, while he had stared at her. He also couldn't keep his hands off of her, and he kissed her neck or squeezed her ass every few minutes, while she would 'ooh' and 'aah' over each painting. \n\nVictoria didn't know why the change in Nic had happened, but he seemed different towards her. He quit taunting her with the fact that he was using her. At first she had resisted and tried to act like a robot. Only answer yes and no, and lie there in bed as he had his way with her, but no matter how hard she tried not to come, it always happened, and he grinned at her, because he knew she was trying to withhold. \n\nAnd another new development was the fact that she was able to spend more time at his mansion now. She started meeting more and more people that worked for him, as he openly flaunted her around. He even held her hand as they entered into several places. He still didn't introduce her as anything more than just 'Victoria', but at least he wasn't ignoring her anymore when there were people around. He would actually laugh and have conversations with her about different things. Yes, he had changed ever since Jimmy's party. \n\n***********************\n\n\"Whatever, you don't know anything about me,\" Victoria stated, as she rolled off Nic, and onto the bed. She was exhausted from their intense sexual workout.\n\nNic placed his hands behind his head and nodded. \"I know more than you think Victoria Stevie Davis. Born in 1985. Lived here your whole life. You attended North Lincoln High School and one year at Martin Community College. You've been working for your father since you were thirteen, you've had one boyfriend and were pretty much a loner. Oh, and you can't keep away from my dick. Anything else I miss?\"\n\nVictoria scoffed. \"Please, I can keep away. You can't! And besides, I don't have a criminal record, so how did you pull all of that?\"\n\n\"I have people who keep me well informed.\"\n\n\"Still doesn't mean you know me though. And what about you?\"\n\n\"What about me?\"\n\n\"Tell me something about you.\"\n\n\"Nicolas Andretti and I'm a successful businessmen. End of story.\"\n\n\"How about something I don't already know,\" Victoria said, wrapping the covers over her naked body.\n\n\"I remembered you from when I went to visit your father that day in his restaurant. You were wearing that burgundy shirt and short, tight khaki shorts. Yeah, yeah, I checked you out. You looked like a deer in headlights when I glanced at you.\"\n\nVictoria didn't believe him. He couldn't have remembered her. She had barely gotten a glimpse of him that day, before he entered the kitchen with her scared father. \n\n\"Was my hair up or down?\" Victoria quizzed.\n\n\"It was down and you had it pushed away from your face with a headband or whatever they're called,\" he answered.\n\nVictoria couldn't believe it. How the hell could he remember that? She had remembered him, but it wasn't every day that you got a guy like Nic Andretti walking into your restaurant. But he probably was just really observant, because he had barely spared a glance at her then.\n\n\"Okay, now a question for you. Stevie? How did you get that middle name?\" Nic asked. \n\nVictoria laughed thinking about it. She and her mother's own private joke. \"Well, it's actually a funny story. Okay, growing up...my mom was obsessed with Steve McQueen. She said if she could have married that man, she'd be the happiest woman alive,\" Victoria said, laughing about the whole thing. \"Well, anyway, my father isn't too keen on the idea of well, interracial relationships. So, my mom could never admit her crush. But when I was born, she wanted to name me after Steve, but she didn't want to make it obvious, so she added an 'i' and told my dad it was for Stevie Wonder.\"\n\nNic burst out laughing. That...was funny as hell. He quickly composed himself, but he wasn't expecting anything close to that interesting. \"Well, whenever you're ready to rain on your dad's parade, you should tell him that,\" Nic said, while getting up to pull his boxers back on. \n\n\"Are you leaving tonight?\" he heard her ask in a small voice. He looked at her, wrapped in his sheets. He tried not to stay over too often, in order not to give her the wrong impression, but some nights, he'd be so exhausted, he couldn't help it. He thought she didn't care either way, but her look was hopeful. Did she want him to stay? He knew they had been getting along, but he still doubted that she actually wanted his company. He thought she more or less tolerated it.\n\n\"Do you want me to?\" he asked.\n\nVictoria slid the sheets above her breasts until they reached her chin. She slowly nodded her head. She did want him to spend the night. She watched as he stared at her for a moment, as if deciding what to do. Then he pulled his boxers back down and got back into bed. She knew not to expect any type of cuddling, but just knowing he was there and not running out made her feel less like...well, less of an 'arrangement'. \n\n\"Goodnight,\" Victoria whispered to him. She hugged her pillow, not really expecting a response. He didn't like anything sentimental. But as she was scooting into her sleeping position, she heard him say it.\n\n\"Goodnight, Victoria.\"\n\n*************************\n\nVictoria was still on cloud nine from meeting one of her favorite actors. She had seen most of his movies, and when Nic had told her he was throwing the actor's thirty-third birthday party, Victoria flipped. She was so excited! Nic had shut his club down for the private event. Apparently Nic had grown up with Mr. Big Time actor, and the two had stayed close throughout the years. And even during Mr. Big Time's speech, he thanked Nic, because for one of his best roles as a tough, street-smart kid, he had copied Nic's behavior from when they were kids. He then imitated Nic's cool demeanor and Northern accent, and everyone laughed. It was a pretty good impersonation. And when Nic finally introduced Victoria to the birthday boy, she was smiling from ear to ear. She tried to shake his hand, but he pushed it aside, and grabbed her for a big bear hug. But after about five seconds, Nic jokingly started to pull her away...but he also didn't remove his arm from her waist until after the conversation had wrapped. \n\nThe music was amazing, and Victoria danced with groups of strangers most of the night. She had tried to call Nic over to dance with her, but he waved her off and continued to conduct a meeting in a dark corner of the club. 'He can't even have fun for one night without doing business,' Victoria thought. \n\n\"So, how long have you known Nic?\" Mr. Big Time asked, sneaking up behind her. He handed her a drink. Gosh, he was beautiful, Victoria thought.\n\n\"Um, not long. We're just friends,\" Victoria said, sipping her drink.\n\n\"So, since you're just friends, does that mean you're open to 'other' friends?\"\n\nVictoria couldn't believe he was hitting on her. He was gorgeous and could probably have any girl in this club. \"Um, I g-guess,\" Victoria stuttered, and then quickly took another sip. She didn't know what to say to him, and he was eyeing her up and down. \n\n\"Good, here's my number. You should call me sometime, beautiful,\" he said as he jotted his number down on the back of some card. He handed it to her, right as she felt arms wrap around her waist.\n\n\"Hey,\" she heard Nic say behind her. But he wasn't talking to her, he was talking to Mr. Big Time.\n\n\"Hey Nic, mio fratello! Thanks for the party, I enjoyed.\"\n\n\"Glad you did,\" Nic answered, but Victoria could feel his arms tighten around her and his voice sounded distant. Then she felt his cool lips against her skin, and he lightly bit and kissed her neck. Victoria couldn't help it, before she could even think, she closed her eyes, loving the feel of his hard body against her back. But then she quickly opened her eyes to see Mr. Big Time, sipping his drink, looking really uncomfortable. \n\n\"Nice to meet you,\" Victoria said to him, before Nic pulled her away. \"Nic, that was rude,\" she whispered to him. Nic yanked the piece of paper from her, ripped it up and deposited it in the trash can before he took her hand and led her outside, where a limo was waiting on them.\n\n\"I have a surprise for you,\" he said, when they got inside. Victoria kept asking what it was, but he just told her to be patient. But it was about a thirty minute drive away, so to keep her mind from wandering, she decided to teach him a game.\n\n\"Okay, you place your hands on top of mine and you have to look me in the face. When you think I'm going to hit your hands, you remove them, okay?\"\n\n\"Alright.\"\n\nVictoria waited two seconds and then smacked his hands. \n\n\"Ow, what the hell?\" Nic asked, looking at her.\n\n\"Nic! You're supposed to move your hands. Okay, you try to hit mine instead,\" Victoria offered, placing her hands on top of his.\n\nNic still looked puzzled, but he stared her in the face. \n\n\"Ow!!\" Victoria screamed, as Nic's hands smacked hers before she could even blink. \"That hurt!\"\n\n\"Hey, you're the one that picked this pointless game,\" Nic said as he smacked her hands again.\n\n\"Oww! Stop hitting me so hard,\" Victoria pouted as she shook off the sting on the back of her hands. \"Besides, this is my secret way of getting all of my aggression out on you,\" she smiled.\n\n\"Yeah...how's that working for you,\" Nic smirked as he smacked her hands again.\n\n\"Shit! Stop it!\" Victoria shouted as she tried to land a punch to his shoulder. But before it could connect, the limo shifted and she fell on him, straddling one of his legs in her extremely short and skimpy deep orange dress. She tried to quickly push off of him, but he grabbed her hair in one hand and her ass in the other.\n\n\"Now, if you had told me this was the endgame, I would have played it a long time ago,\" Nic joked, as he kissed a trail from her earlobe and down her neck. Victoria tried to move, but his grip tightened in her hair as he smacked her ass.\n\n\"Aah!\" she squealed, but her body involuntarily started dry humping his leg.\n\n\"Damn, I want to be inside of you right now,\" he whispered, while he removed his hand from her butt and gently placed it underneath her dress to rub her wet slit. He had asked her not to wear panties, so he had all the access he wanted. \"Mmm,\" she moaned into his ear.\n\n\"We're here, sir,\" Raymond said through the speakers. Nic gently pushed her back and pulled her out of the limo, before they got too carried away and forgot why they were here.\n\nVictoria searched around to see if anything looked familiar. But they were parked in a back alley. Nic grabbed her hand and led her inside a building and through the back hallways. Everything was so dark, but when they reached a set of double doors, Nic whispered for her to close her eyes. She shut them tight and followed closely behind him into the room.\n\nUnderneath her eyelids she could see the room getting lighter. She waited for his signal, and she felt him get behind her and nip her earlobe as he whispered for her to open her eyes.\n\nWhen Victoria looked around, she couldn't believe it. She sucked in a breath. Was this Tiffany's? She was surrounded by so many diamonds she couldn't believe it. She had never walked into this store before because she knew she could never afford anything in it. The paper they print their receipts on was probably worth more than she had in her purse at the moment.\n\nThe way the light sparkled off of each piece of jewelry, lit up the entire room very brightly. When she finally came to her senses, she realized there was another man standing in the room. A short, tiny man with thick black rim glasses.\n\n\"Hi Mr. Andretti. Always a pleasure,\" he said, while shaking Nic's hand.\n\n\"Thank you, David, likewise. This is Victoria,\" Nic said, placing his arm around her waist. \"Victoria, this is David.\"\n\n\"Nice to meet you,\" Victoria whispered, still a little in shock. \n\nDavid smiled at her and turned to Nic. \"May I, sir?\" he asked, while reaching for Victoria's arm.\n\n\"Sure. Victoria...pick out anything you want. I'll be over here,\" Nic said, while he stepped to the side and pulled out his cell phone.\n\nVictoria looked at Nic, then at the jewel cases. This was too overwhelming. \n\n\"It can be overwhelming,\" David said, as if reading her thoughts. \"Let's start with this,\" he suggested, while placing a thin rope with a sparkling diamond heart around her neck. Victoria looked in the mirror at the beautiful necklace wrapped around her neck. How many women would kill to be in her shoes tonight. In the reflection of the mirror, she saw Nic leaning against the wall on his cell phone. He was dressed in his signature long black coat. He was so tall and good looking that at the moment, this all seemed like a dream. Victoria focused back on herself in the mirror. She stared at her reflection for a while, as she tuned out David's voice. Who was this girl looking back at her?\n\n\"Eddie, I'll be there. Aren't I always? Just make sure our figures are straight. And tell Jimmy--,\" Nic started, but stopped when he noticed David standing in front of him. \"Hold on, Eddie. Yes?\" he said to David.\n\n\"Um, sorry to interrupt Mr. Andretti, but she said she doesn't want anything.\"\n\n\"Come again?\" \n\nDavid wiped his brow. \"She said she doesn't want anything,\" he repeated.\n\nNic looked towards Victoria and found her standing by the door, looking at him. \"Eddie, I'll call you back,\" he said as he clicked off his phone. \n\nVictoria watched as Nic walked toward her. She braced herself. She knew that he was probably so pissed at her throwing his gift back in his face. But she just couldn't accept it. Not this time.\n\n\"What's wrong,\" Nic asked.\n\n\"Nothing. I just don't want anything,\" she whispered back to him. He stood there staring at her for a few seconds. Then he turned and walked back over to David. \"Thank you. And sorry for wasting your time,\" Nic said as he shook the tiny man's hand.\n\n\"Not a problem at all, Mr. Andretti. And please let me know if there's ever anything else I can do for you.\"\n\n\"I will, thanks,\" Nic said as he walked back over to Victoria. He held the door open for her, and they walked back down the hallway. Raymond opened the doors to the limo and they got in. Nic sat leaning against one door, while Victoria sat leaning against the other. Both were deep in thought and neither said a word the entire trip back to his loft.\n\nWhen they entered, Nic removed his coat and turned to Victoria. \"I'm tired, so I'm going to go lie down for a few minutes before I have to go.\" She nodded her head, and he turned and walk to the bedroom.\n\nVictoria stood by the bar, just thinking about the night. What a strange night. A few weeks ago, she wouldn't have cared...she'd actually probably be glad...but now, she felt like shit that she had hurt his feelings. She should have just taken something small, but something was keeping her from doing it. Pride? Or something stronger than pride that was telling her that this isn't the way. Stand your ground and in the end you'll get what it is you really want from him. And what was that? His...love? Victoria shook the thought from her head. She had too much nervous energy to go to sleep. So she crept into the bedroom and saw him lying on his back with one arm covering his face. His shoes were still on. She wanted to take them off so bad so he could be more comfortable, but she resisted. She wasn't his girlfriend. She walked into the closet and grabbed her bathrobe. She tiptoed out and shut the door.\n\nVictoria turned on the faucet and removed her clothes. She stepped into the large shower and immediately exhaled. The hot water massaged her body and she leaned against the cool tile, loving the contrast to the water. She closed her eyes and started humming 'In My Life' by the Beatles. She had heard the tune while waiting on the subway one day, and instantly fell in love with it. She was in the middle of humming the second verse when she heard the shower door slam. She jumped and turned around to find Nic staring down at her. He looked pissed.\n\nShe looked up at him while the water rained down on her neck and back. She pushed her hair out of her face and waited for him to speak. ",
        "\"Why did you embarrass me tonight?\" Nic asked, narrowing his eyes at her.\n\n\"Nic, I\u2014because I'm not for sale, that's why,\" Victoria said, crossing her arms over her chest.\n\nNic scoffed. The look on his face said that he wanted to dispute that fact. And Victoria wanted to smack that smirk right off his face.\n\n\"I'm not, you arrogant prick!\" she screamed at him. \n\n\"Sure,\" he said, as he reached out to pinch her nipple. That was it.\n\nVictoria didn't mean to as hard as she did, but she pushed his hand away, and slapped the hell out of him. You could have heard that smack from several rooms away. Her hand was stinging and she could see the red mark slowly creeping across the left side of his face. He stared down at her, and even with the hot water beaming down on her back, his glare froze her. Fuck, another seven days. Great way to end what should have been a good night between the two of them. She tried to quickly move around him and exit the shower, but Nic grabbed her. He pushed her against the tile and lifted her up.\n\n\"Wrap your legs around me,\" he growled. She tried to push him off, but he held her still. \"Now!\" he yelled at her. She quickly obeyed as he entered her. She leaned her head against the wall, as he forced his length inside her pussy again and again. Damn, he felt so good. He lifted her slightly and sucked the water from her nipples. \n\nWhen he was done worshipping her nipples, Nic pulled her hair back and stared into her eyes. \"Who's pussy is this?\" he asked, while pumping harder and faster into her. \"Nic's,\" she whispered. Nic felt like a crazy man. He wanted her so bad, he couldn't think straight. \"Say it louder,\" he commanded, as he leaned down and bit her neck. \"Oww. Yours Nic, it's yours,\" Victoria shouted louder, right as she came. Nic raised his head and leaned it against her forehead as he stilled himself deep within her and came. \"Fuck...,\" he whispered, while they both fought to catch their breath.\n\nVictoria closed her eyes and turned her head to the side. Why did she keep giving in to him like this? It wasn't making her look any better in his eyes. She sighed and tried to wiggle her way out of his grip, but he held her tight.\n\n\"Look at me,\" Nic said, gently pulling her head back by her hair. She looked into his face. \"Why didn't you want anything from Tiffany's?\" Nic asked. She shrugged, and raised her eyebrows. \n\n\"Yes, you do. Tell me,\" Nic demanded.\n\nVictoria felt trapped. He wouldn't understand. But she decided to put it all out there for him anyway. Everything that she had been thinking about it. She was sure she'd regret it, but here it was. \n\n\"Because some things aren't for sale. And I realized the more you gave me the more I was willing to accept things about our arrangement. But I can't do that anymore, Nic. Material things aren't going to make me forget that I'm here because of seventy thousand dollars my dad owes you. It's not going to make me forget that you can and have humiliated me for your own amusement. Or that you're married. What kind of person would I be if I lived like that, even if only for a few more weeks? I appreciate you offering, but I'd rather not have those things and keep a little self-dignity, than to be draped in them and accept the fact that you won't even kiss me on the mouth because that's not what you want from me and--,\" was all that Victoria got out before his lips came crashing down on hers.\n\nHer eyes immediately widened and then closed with the feeling of his cool, wet lips devouring hers. She wrapped her arms around his neck as he held her against the wall. For once, she felt special. Even if this was all fake and didn't mean anything, this kiss was still all and more than she thought it would be. \n\nNic's head was swimming. Everything about this girl was different than any other he had known. Her words washed over him and gave him chills. He was praying she couldn't see how much they were affecting him. And when she mentioned the kiss, his mind shut down and something else took over and screamed for him to kiss her right then! And her lips...they had been torturing him for weeks, and then they felt so soft against his aggressive attack. His tongue was wrapping itself around hers as he licked every corner of her sweet mouth. He was tightly gripping her hair, because he didn't want her to pull away. Not now. Not with him feeling the way he did at this moment. He wanted to be as close to her as possible. And fuck him, but he didn't want to let go. Ever.\n\n**********************\n\n\"I'm sorry, really, he's on his way,\" Eddie said to the four Russian men sitting in the office in Nic's restaurant. \n\n\"We been waiting an hour, he not coming,\" Anzor said in a thick Russian accent, while standing to grab his coat.\n\n\"No, wait! He's...just slightly delayed, he'll be here. He always is,\" Eddie assured, checking his cell phone again to see if Nic had called. Eddie had contacted Raymond hours ago. Raymond said he had dropped Nic and Victoria off at Nic's loft, and that Nic had said he would drive himself over to the restaurant. \n\n\"No, he not coming. But tell him since we don't mean much to him, we now do business with Sonny. At least he show up for meeting,\" Anzor growled, then he quickly spoke in Russian and his men followed him out.\n\nEddie threw his phone across the room. He knew where Nic was. He had been fucking up lately because of her, and now...they had lost out on the one deal Nic had been so adamant to get. Everyone wanted to do business with the Russians, and they had come to Nic specifically, because he was the best. Shit, this was going to turn bad if Sonny landed that deal.\n\n*\n\nThanks for reading and I hope you enjoyed! Chapter 5 coming soon...and if you're interested, make sure to check my profile for updates.\n\nThanks,\n\nSoular"
    ],
    "authorname": "soular",
    "tags": [
        "interracial romance",
        "interracial novella",
        "interracial drama",
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/seven-days-ch-04"
}