{
    "title": "What The Cat Dragged In Ch. 12",
    "pages": [
        "Hi Everyone!\n\nI feel like I have to clear a couple of things up before I start. A number of you have been asking about Kelly's period and if she's having it or not. Normally, I don't mention that in a story unless it has some immediate bearing on the plot. Because it hasn't been mentioned, you can safely assume that Kelly isn't pregnant at the moment. :) \n\nAlso, I am not trying to insult anyone's home state; in fact I used the state I live in as well.\n\nAs usual, I make no money from this and don't own Victor or the X-Men.\n\nI hope you all enjoy! \n\npsyche b\n\n12. Points of Contact\n\nKelly keyed in the numbers that he read off.\n\n\"Victor-\"\n\nHe gave a warning growl, picked up his pants and left the room. She was torn between finishing the call and going after him. When he was this upset sometimes it was better to just keep her distance. She hit Send.\n\nAs soon as she heard the first ring, Kelly realized she had no idea what she was going to say. What could she say really? Explaining everything would take too long, but that 'everything' had remade her from the girl they knew into someone they probably wouldn't even recognize now. She wasn't entirely sure she would recognize them either. \n\nThere was another ring on the other end of the line. The throbbing in her tummy and between her legs was secondary to the tightness in her chest. The phone was picked up.\n\n\"Demmer.\"\n\nKelly's mouth went dry. The voice was so much like her father's that the memories drove out any half-formed thoughts she might have had. The silence stretched as she tried to find her voice again.\n\n\"Demmer.\" He repeated. There was guarded annoyance in the familiar voice.\n\n\"Grandpa?\" \n\n\"Kelly? Oh thank god!\" She heard him move the phone away from his mouth. \"Anna, pick up the extension.\"\n\n\"Kelly? Is that really you?\" Her grandmother asked.\n\n\"It's really me.\"\n\nThey both began to talk at once, each asking questions one right after the other without giving her a chance to answer any of them. Had she run away? Where was she? Was she safe? Was Cody with her? There were other things that she missed too. Kelly laughed softly, stopping the flow of words.\n\n\"I'm fine. Victor's kept me safe.\"\n\n\"Who's Victor?\" Her grandmother asked.\n\n\"We talked about that.\" Her grandfather interjected.\n\n\"You told me a name. You didn't say who he was.\" Anna answered.\n\n\"He's the man who found me, Granna.\"\n\n\"Found you?\" She sounded shocked. \"And you didn't tell me anything about that, Joe.\"\n\nKelly fought to put words together. Her first instinct was to shelter them from the ugliness of it. \"Stan sent to live with someone else, and when that didn't work out I ran away. Victor found me wandering around in the woods on his property. I've been staying with him ever since.\"\n\n\"Well thank heaven you found someone willing to help you.\" She said. \"When is he sending you out here?\"\n\n\"He's not sending me anywhere Granna.\" At least, Kelly hoped he wasn't. \"He did say we would both be out there to see you though.\"\n\n\"And he'll drop you off.\" She said firmly.\n\n\"Anna, I don't think that's how it's going to work.\" Her grandfather said.\n\n\"Well why not? Why else would he want to keep her? She's only a child.\"\n\n\"She isn't a child anymore.\" There was something almost like anxiety in her grandfather's voice.\n\n\"Maybe not in years, but all that time with Stan and all his nonsense stunted her development. She needs to be with her family.\"\n\n\"I'll make that decision for myself.\" Kelly broke in before anyone had a chance to say anything else.\n\n\"That isn't a decision you should be making on your own. You don't have the experience to-\"\n\n\"Granna, life with Stan-\"\n\n\"You have to forget that. It's not going to do you any good to think about it.\"\n\n\"It's a part of who I am,\" Kelly said firmly. \n\n\"Kelly-\"\n\n\"Anna, that's enough. Kelly didn't call to be lectured.\" The tone made it clear that he wasn't going to listen to any arguments. \n\n\"Victor didn't tell me where you were,\" Kelly said, hoping to ease the awkwardness of the moment.\n\n\"A little town in Ohio.\" He answered.\n\n\"What's it like?\" She asked. It was superficial, but that was how it would have to stay for the time being. Maybe, when they were face to face, that would change.\n\n\"It's absolutely lovely,\" Granna said. She started to go on about their church and their neighbors. Kelly shifted into a more comfortable position and just listened.\n\n*~*~*~*~*~*\n\nKelly had to work to keep the little winces of pain off of her face as she moved toward the kitchen. The last time she was this sore was the first time he'd taken her to his bed. After a stop in the small downstairs bathroom to wash away the rest of the dried blood, she'd folded the throw in half and wrapped it around herself so that one end tucked in between her breasts, serving to hold the makeshift garment in place. She carried what remained of the rest of her clothing with her. She had no idea what she was going to say to him. He never accepted gratitude or apologies. She knew she owed him both. The idea of someone else going to those lengths to protect her was still something of a foreign concept though. She wished he didn't have to.\n\nShe opened the door and found him standing in the dimly lit room, looking at the icy snow swirling outside the picture window. He was shirtless and barefoot. His belt was unbuckled. As soon as the door opened he turned his head, but not enough to look at her. Kelly felt her heart start to pound.\n\n\"I shouldn't have gotten so upset-\"\n\n\"Those unwearable?\" He turned to face her a little more.\n\n\"Yeah.\" Kelly managed a nervous little smile. \"I should take up braiding rugs.\"\n\nA little smile flickered across his lips. \"Smartass.\"\n\nKelly's smile lingered. \"Just trying to be practical about it.\" She dumped the tangle of fabric into the trash.\n\n\"You get reacquainted with your grandparents?\" He moved closer to her.\n\nShe felt a blush color her cheeks. \"Yes. They asked when we were leaving and when we would get there.\"\n\nHe leaned back against the counter, his arms crossed. \"What'd you say?\"\n\nIt was a test. She looked up at him. \"That I'd ask you and call back tomorrow.\"\n\nHe watched her for a moment. \"We leave day after tomorrow if you can get yourself together by then. C'mon, you look like you haven't slept in a goddamn week.\" He grabbed her arm and led her toward the stairs. \n\n*~*~*~*~*~*\n\nCreed woke with a start at a little after three in the morning. For a long moment, he thought he had only dreamed of getting back to the house in Maine, then the frail's scent broke through the lingering fog of sleep. After a long, hot shower she'd fallen asleep with her head on his shoulder, but somewhere in the last few hours she'd moved away and was laying on her back with the sheet and blankets pooled around her waist. The moonlight filtering in through the wide windows sculpted her curves and angles in silver light, making her seem almost like a creature of ether and fevered dreams who would disappear as quickly as she had appeared.\n\nHe turned onto his side and propped his head up on one hand. At the edge of the sheet he could just see the beginnings of the wounds on her stomach. They were a clear reminder of how fragile she was, how easy it would be to lose her. The thought made him angry. It made him itch for some reassurance that he hadn't lost her already. He reached out almost hesitantly; his claws retracted, and let the pads of his fingertips skate lightly down her arm. He could feel the goosebumps rise on her skin, and he could see her nipples pucker as well. The tiny response emboldened him, and he let his fingers travel over her ribs and up between her breasts. She moaned and arched her back in unconscious - but obvious -- pleasure. \n\nA little smile touched his lips. He slowly traced the left side of her delicate clavicle, then back over to the right. Her skin felt like silk under his fingertips. He couldn't say he remembered much about most of the frails he'd had, but he was certain that none of them felt like this. They were always wrapped in sticky terror. Even in the beginning, before he'd decided that his claws were too long for tender touches and his fangs got in the way of soft words; they'd always acted like he was some kind of storybook monster come to life. It'd made it easy to prove them right. Made it easy to take what he wanted because he was certain it would never be freely offered.\n\nOne fingertip explored the hollow of her throat, and she arched her back. The old blood smell of wounds bloomed in the air. He knew most of it wasn't from the deep scratches on her stomach either. Her legs moved, almost fighting against the covers. He watched her struggle for a moment before he felt the shift in her. The small hand that stroked his wrist told him that she was awake, but he hesitated before looking up at her, waiting for fear to permeate her sweet scent. It never happened. When he looked into her eyes, there was a little smile on her lips.\n\nHe pulled her against his chest and wrapped the blankets around her shoulders.\n\n\"You okay?\" She asked when she was snuggled against him.\n\n\"Why?\" He couldn't keep all of his surprise out of the question. No one ever asked if he was okay.\n\nShe shrugged against him. \"It's so late, and the way you were looking at me. I was just curious.\"\n\nHe rolled his eyes. She didn't miss a goddamn thing, even when she couldn't see anything. \"Just getting caught up in your penchant for sentimental bullshit. Go back to sleep.\"\n\nShe took a deep breath and as she released it, he could feel the wakefulness leaving her body as well. \"Yours.\" She murmured.\n\n\"Mine.\" The word came out in a rumbling purr. One arm tightened around her waist.\n\n*~*~*~*~*~*\n\nThe next morning, Kelly woke up with her back against Victor's chest. He was toying with her nipples. She grinned and turned to face him. He let her move, but when she tried to kiss the hollow of his throat, he growled softly. Kelly waited until he pulled her forward, then she kissed him almost reverently. His hand tightened in her hair. Kelly couldn't resist letting her tongue flicker over his skin, tracing the tempting little depression. He growled again, but there was no warning in it this time, just pure enjoyment. Her fingertips drifted down over his side and down to the front of his hip, stopping just short of his quivering erection.\n\n\"Think teasing me is a good idea, frail?\" He nipped her earlobe softly.\n\n\"Last time I offered to follow through you got upset.\" Her fingers traced next to his thick organ. \"I don't think I'm ready for that kind of upset again so soon.\"\n\nA little shrug. \"Maybe you didn't ask right.\" One claw scraped over her tailbone. Coming from him, it was a tender gesture.\n\n\"How should I ask?\" Her lips grazed the front of his throat.\n\n\"Don't know yet.\" Claws tickled down over her thigh. Kelly arched against him.\n\nShe moved her hand to his back, a teasing little smile tugged at her lips. \"Then maybe I should play it safe, at least for a little while.\"\n\nHe put his hand on her waist and traced one of the scabbed lines on her stomach with his thumb. \"Tummy still hurts, huh?\" It was a low, mocking purr.\n\nKelly blushed and hid her face a little more. \"Not exactly.\"\n\n\"Just gave you what you wanted.\" His clawed thumb drifted down to the front of her mound. The sensation made her shiver, but she stayed silent. He applied just a bit more pressure. \"Didn't I, frail?\"\n\n\"Yes.\" Kelly whispered.\n\nHis hand drifted over to her back again. \"Course I can see how you might not have been completely ready.\" A claw scraped over her tailbone again, just enough to make her press closer. \"That ain't my fault, but I guess you might deserve some kind of a reward.\"\n\nHe managed to sound annoyed, but Kelly recognized that annoyance as pretense. She hid her little smile against his chest and let one finger graze the side of his engorged shaft. \"What kind of reward?\"\n\n\"Fuckin' frail. Always yammering on about somethin' stupid when there's better things you could be doing with your mouth.\" He moved onto his back and pushed firmly against Kelly's shoulder. His meaning was clear.\n\nAs eager as she'd been for this very thing the night before, she felt completely at a loss now. She didn't really know what she was doing. What if she couldn't please him? \n\nHe twisted his hand in her hair and forced her to look up at him. For a long moment, he simply watched her with those hard eyes. Kelly's heart started to pound. \"Do what you were doing last night.\" He released her hair and she let it fall over her face. \n\nThe sound of blood rushing in her ears covered almost everything else. Her lips and fingers trembled at first. She could feel a tension in his body too, and not the usual tension he had in these moments. It was something decidedly more uncomfortable. It was almost enough to make her stop, but he kept up the pressure against her shoulder. \n\nKelly teased his nipple with the tip of her tongue. He groaned and arched his back. The taste of his skin made her want more. She blazed a trail of soft, sucking kisses and teasing licks down the side of his body while her hand stroked his shaft. There was still tension in his body, but it had shifted to something more familiar, more comfortable. \n\nHer mouth made slower progress when she passed his navel. She traced the firm muscles with her tongue, defining them in a new way and drawing an impatient growl. His shaft was heavy and hot against her cheek. She turned and licked the side softly, from the nest of dark curls to the flared tip. It was a new landscape and Kelly immersed herself in learning every hill and valley. She teased with her tongue and let her teeth stroke over his skin, noting each pleasure sound, each vital pulse. The flavor of his silky skin was intoxicating. She barely noticed the claws digging into her shoulder, or the deep growling purr. All she noticed what the way he tasted, the way he felt in her hands and in her mouth.\n\nHer head moved slowly, taking just the tip in her mouth, then pulling back and taking a little more the next time until she couldn't take any more. Her tongue rubbed the underside as her head moved. One hand stroked the part of his shaft she couldn't fit into her mouth. The other hand dipped lower, exploring and teasing his heavy sack. She could hear her heartbeat pounding in her ears, and sometimes a growl from him, but anything he was saying was lost. \n\nTension was building in his body, but a familiar, needy ache had settled into her tummy too. Her head and hands moved faster and with more assurance, realizing that his pleasure was connected inextricably to her own need. It might have been minutes, it might have been hours, but at some point he pushed her away. The world spun around her for a moment and when it came to rest again, she was on her back. He was holding her legs open wide and staring at her most intimate places in the bright, winter sunlight that was streaming into the room. The exposure made her tremble and brought tears to her eyes. He'd looked at her like this a hundred times, but never when she felt so bruised and torn.\n\nKelly started to pull away, but he held her still. He shifted over her. His tongue started on her right thigh, teasing close to her quivering center, but avoiding it in favor of her other thigh. The rough surface of his tongue made her shiver with want. With need. Just the sensation of his breath across her delicate folds was enough to make her squirm. He held her still and let just the tip of his tongue tease the throbbing pearl that was hidden there. It was enough to push aside the ache and self-consciousness. Kelly dove headlong into that familiar, hungry pleasure. Through her cries of release, he kept up the tender ministrations that kept her inside that pleasure-bubble.\n\nWhen the intensity ebbed, he moved over her, his lips capturing hers in a kiss that made her tremble with tender intensity.\n\n\"Can't. Please...\" She murmured against his mouth.\n\n\"Trust me, frail.\" It was a command, like everything else. There was something different in his voice, though. Something softer that she couldn't describe, but it was instantly comforting.\n\nHe took more time and more care than he ever had before. Each small movement brought a pained whimper. She didn't try to escape him though, she held him tighter.\n\n*~*~*~*~*~*\n\nShe was lying mostly on his chest, a little smile on her lips. One hand wandered over her back. The scent of fucking mixed with anxiety, bruised and bloody pain and that sweet vanilla relaxation that he'd missed so much. It was a heady cocktail that might have given him another raging hard on under any other circumstances. Feeling her holding onto him, giving herself over to his pleasure but taking none herself made his release...what? He'd cum, so it couldn't have been too goddamn bad. Still, there was something missing. Her pussy didn't grip his cock hungrily. It didn't quiver around him as she came. \n\nAnd why the fuck was all that suddenly so goddamn important anyway? He used to like tearing frails apart. Hearing them begging for mercy and release from the degradation of it made it better. Watching the agony contort their faces made him want to keep going until there was nothing left to tear out of them except their last few breaths. \n\nBut none of them had been his. Not in the way she was. \n\nMaybe that was too fucking complicated for him. Maybe-\n\nA giggle broke his train of thought.\n\nHe tugged a lock of her hair. \"Somethin' funny, frail?\" Anything he'd been thinking had evaporated.\n\n\"Your stomach is growling so loud it woke me up.\"\n\nHe glanced around at the light in the room. \"No wonder. It's gotta be close to noon.\"\n\nShe brushed her lips over his shoulder. \"Give me a couple of minutes to get cleaned up and I'll get some lunch going.\"\n\n\"No.\"\n\nShe looked surprised. \"Why not?\"\n\n\"'Cause, we got shit to do today and we might as well get lunch while we're out.\"\n\n\"But I have to get the house ready-\"\n\n\"What the fuck do you think I pay a cleaning service for? 'Sides, if I know you, you been through this place top to bottom at least twice since I been gone. Haven't you?\"\n\nShe blushed and lowered her eyes. \n\nHe tugged on that lock of hair. \"Well?\"\n\n\"Yes.\"\n\nHe snorted, but couldn't resist a flicker of a smile. \"Thought so.\" He let go of her hair and gave her a careful shove, because she would expect it. \"Get going.\"\n\n*~*~*~*~*~*\n\nShopping with Victor was always an experience. In the beginning, she was certain that he would hate waiting for her to make up her mind. It didn't take long for her to realize that, of the two of them, he was the one who was far more exacting and demanding. \n\nShe was almost used to the way he spent money. He earned it; he could spend it however he liked. She had just never seen anyone spend it in such quantities with so little consideration. Even in the good times when her father's business had been doing well, the family still lived modestly. The first trip, it was difficult to reconcile that with what Victor thought she should have, especially since she knew so much of it would probably end up in shreds anyway. After that, she found it easier if she tried on what he told her to and avoided looking at prices entirely. Uncomfortable as she might be with the cost, she could never fault his taste.\n\nThis time, Victor decided that she needed a set of luggage. Kelly protested, showing him her newly repaired backpack and several of the nicer shopping bags she'd set aside for packing things if he decided that they needed to move again. He'd just groaned and told her that she wasn't a bag lady and he wasn't going to let her act like she was. Kelly knew when arguing was useless. \n\nAs usual, Victor wasn't satisfied with anything they were shown at first. She hung back while he argued with the saleswoman, convinced he got a strange kind of pleasure out of the dance of offer and rejection. Eventually she ended up with a very nice Diane Von Furstenberg four piece set in burgundy. Kelly was sure that she could fit everything she had and then some into those four bags. She knew better than to say anything though.",
        "On the way home, they'd stopped for dinner and spent most of the evening dozing together on the sofa. Just hearing him breathe was comforting. His heavy arm resting on her back made her feel safe from the world. After getting so little sleep while he was gone, she didn't fight the little naps that overtook her. \n\n*~*~*~*~*~*\n\nCreed woke up to the sound of a vibrating cell phone. He opened his eyes and saw the frail's handbag moving slightly. She was still deeply asleep so he shifted her carefully and grabbed the phone. \n\n\"Creed.\" He glanced at the sleeping girl, and walked into the kitchen.\n\n\"Oh.\" There was a long pause. \"I thought I dialed Kelly's number.\" \n\nHe recognized Joe's voice. \"You did. She's sleeping.\"\n\n\"Is she alright?\" The voice was instantly concerned. \n\n\"She's never been tired before?\" He didn't attempt to hide the sarcasm in his voice.\n\n\"That's not what I mean, it's just early and she said she would call.\"\n\n\"If she wakes up before it gets too late I'll have her call you back. If not, she'll call tomorrow. Either from the road or when we get to wherever we're gonna spend the night.\"\n\n\"So you're leaving tomorrow then. How long will it take you to-\"\n\n\"A few days.\"\n\n\"Alright.\" He paused. Creed knew he was going to say something else. \"She really is alright? She's not...sick or anything?\"\n\nThe question irritated him. \"You wanna know the truth? I think she's used to me fucking her every night before she falls asleep, so while I was away she didn't get as much rest as usual. That what you want to hear?\"\n\nThere was a long silence on the other end of the line. \"Have her call. I know Anna wants to talk to her.\"\n\n\"Sure.\" He ended the call and dropped the phone back into the frail's bag. She was still curled up on the sofa, though if he hadn't seen her hair he might have thought there was nothing there but a crumpled blanket. He lay down and started carefully shifting her again. This time she woke up.\n\n\"What?\" Her voice was thick with sleep.\n\n\"Nothin'. Got up to answer your phone.\"\n\n\"Sorry. I didn't hear it.\" She shifted so that he could get comfortable. He pulled her back against him again.\n\n\"S'okay. Was your grandfather. Said your grandmother was anxious to talk to you about something.\"\n\nShe groaned. \"She wants to lecture me.\"\n\n\"She hasn't even seen you. What the fuck could she want to lecture you about?\" His fingers combed through her hair. He could feel the little shivers of relaxation chasing each other down her body, but he could smell the tang of anxiety too. She stayed silent. \"Well?\"\n\n\"She wants me to live there,\" she said. Her face was hidden against his shoulder.\n\nThere was a painful tightness in his chest. \"That what you want?\"\n\nShe looked up at him. \"No. I don't want to lose touch with them again, and I know that Cody needs them, but I don't belong there permanently.\"\n\nThe tight pain dissipated as quickly as it had come. He started moving his fingers through her hair again. \"She didn't like that answer?\" \n\nShe settled against him, the anxiety gone from her scent. She shrugged. \"To her I'm still a little girl. She doesn't want to even hear about anything that's happened in the meantime, or at least she isn't ready to hear it yet.\"\n\n\"You ready to tell it?\" That surprised him.\n\n\"No, at least not most of it. I can't just pretend it didn't happen though. That makes it worse.\" \n\nHer face was hidden, but he could feel the little tremor that went through her body. The scent of anxiety returned and it brought the tightness back to his chest.\n\nShe sat up, her hair hiding her face. \"I should call them back.\"\n\nHe held her arm and waited for her to look at him. After a moment she glanced out from around her hair. He moved the rest of her hair aside so that he could see both of her eyes. It was another one of those times that Wilson, or Jimmy or anyone would have known what to say, would have known how to offer her comfort or warmth or something besides silence. The moment stretched between them while he got lost in her sea glass eyes, searching for the right words, the right gesture. In the end, she made it. Kelly moved his hand off of her arm, turned it palm up, closed his fingers gently and kissed the base of each claw. \n\n\"Thank you.\" Her voice was barely a whisper. She was up and gone before he had a chance to say anything.\n\nFucking frail. Always inside his head even when she wasn't and still able to surprise him at every turn. A little smile tugged at the corner of his mouth.\n\n*~*~*~*~*~*\n\nBy the time Kelly got off the phone with her grandparents she had a throbbing headache. She paused in the doorway. Victor was sitting up, flipping through television channels. The perpetually bored look was back on his face. The softness he'd shown only half an hour before was once again hidden as if it had never existed in the first place. She'd expected no less. \n\n\"I was going to make myself some tea. Do you want anything?\"\n\nHe didn't even glance at her. \"A beer.\"\n\nKelly smiled a little, turned, and went back into the kitchen. Strange as her world was, his gruff silence made her feel like everything was right with that world.\n\n*~*~*~*~*~*\n\nThe next morning, Kelly lingered over her packing. This shouldn't have been so hard. As expanded as her wardrobe was, it wasn't so large that sorting through it was terribly difficult or time consuming.\n\n\"What the fuck is taking you so long?\" He was growling, his jaw was tight.\n\n\"What if this is a really bad idea?\" The question was out before she could consider it.\n\nHe sat on the edge of the bed. \"Frail, why do you always pick the worst goddamn times to be a pain in my ass?\"\n\n\"I'm not trying to-\"\n\n\"Just a natural talent of yours huh?\" He lounged back on the bed. \n\nKelly turned away so that he couldn't see her deep blush. She searched through the top drawer of her dresser and put enough underwear for a week and a half in the bag. \n\n\"You may as well tell me.\"\n\nKelly felt his eyes on her. She looked up at him. \"They live in Ohio.\"\n\nHe rolled his eyes. \"Well that just clears it right up.\"\n\nShe grabbed five pairs of jeans. \"You know CoH has chapters all over the country.\"\n\n\"Yeah. So?\" He watched her.\n\n\"Michigan and Ohio have two of the largest proportions of CoH members in the country. There isn't an even distribution, but I still feel like we're walking right in to CoH territory.\" Kelly put neatly folded turtlenecks and a couple of sweaters in with the jeans.\n\nHe was silent, thinking about what she'd just said. \"You know where it's the densest?\"\n\nShe looked away. \"No. I know Stan had that information, but he never said it out loud when I could hear it.\"\n\nHe got up. \"They're gonna be looking for the bony frail from the picture and expecting her to skulk around, trying not to be noticed. You don't look like that anymore and you sure as hell ain't gonna act like that.\"\n\n\"But-\"\n\n\"You got ten more minutes. If you're not downstairs and ready to go by then, you're going with just the clothes on your back. Understand?\" His usual commanding tone had returned. \n\nKelly knew he wasn't kidding about making her go with only what she wore. She turned her attention back to her packing.\n\n\"Frail.\" His voice was softer. She looked up at him. \"I protect what's mine.\" "
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "victor creed",
        "bruises",
        "oral sex",
        "sleeping together"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-12"
}