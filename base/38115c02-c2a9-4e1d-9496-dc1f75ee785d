{
    "title": "There and Back Again Ch. 128",
    "pages": [
        "Chapter One Hundred Twenty-Eight: *Of Shipwrecks and Monarchs\n\n\"I think the King's going mad.\"\n\nI looked around surreptitiously, hoping no one heard what Blake had said, wondering if it was possible to get the kid alone in a room and find out what he meant without being overheard.\n\n\"Where is he?\"\n\n\"On his way. You'll see.\"\n\nWith that unsettling prediction, I turned back to the main foyer to see Cailan coming down the stairs to greet us. He looked, frankly, like hell. His golden hair was greasy and lank, he wore a wrinkled doublet with the sleeves rolled up, and black smudges under his eyes made it clear he hadn't been sleeping much.\n\nI heard Alistair breathe a surprised huff at the sight, and Aedan's eyes widened as the monarch approached. I felt Zevran's hand on my back briefly, and then the elf disappeared into the throng of people around us, I presumed to go sneak around and gather intelligence for my brother. The soldiers scattered when they heard Cailan greet us, and we were suddenly left standing alone, though there were still plenty of eyes on us.\n\nAlistair and Aedan bowed, arms crossed across their chests; I dropped into an awkward curtsey, made worse than my normal by my armour. Cailan, as usual, held out his hand to help me up, but as I stood it was I who ended up supporting him. He stumbled slightly, leaning on my shoulder, and as I stabilised us both, I got a whiff of alcohol on his breath. I risked a quick look directly at his face; his eyes were slightly glazed, his cheeks and nose red, and he hadn't shaved. The hand I held in my own shook slightly, and his mumbled greeting was slurred.\n\nHe's drunk off his ass!\n\nThinking quickly, I looped my arm through his, holding him up while making it look like he was escorting me. \"Your Majesty, it's so good to see you, but I'm simply exhausted after our ride. Would you show me to our rooms? I get so lost in this big palace...\"\n\nI continued the inane babble, with Cailan too out of it to even acknowledge anything I said, as I steered him firmly towards the family wing of the palace, where I was hoping we had rooms. Alistair, Blake, and Aedan fell into step behind us, and we were soon out of the public eye. I chivvied Cailan down the hallway until he stumbled and almost fell; Alistair stepped forward, wrapping Cailan's arm over his shoulder, and we half-carried, half-dragged his brother the rest of the way to his room.\n\nI'd never been in Cailan's room before; it wasn't what I was expecting, overall. It was lavishly appointed, yet not overstated; somehow I'd thought he would have everything decorated in red velvet or something. He had a large outer chamber with a sitting area and a large desk; a door off to the side led to his bedroom, I presumed. I helped Alistair lower the king onto a settee near a large hearth in the sitting room, and then the four of us -- Alistair, Aedan, Blake, and myself -- stood staring down at a rumpled pile of only half-conscious man. He didn't respond to questions other than to mumble, so we turned to Blake instead.\n\n\"How long has he been like this?\" Alistair demanded.\n\n\"Since the survivors arrived, basically. He wouldn't talk to anyone, and he hasn't dealt with them at all.\" Blake looked at his employer sadly. \"He hasn't slept, and the drinking...\"\n\n\"Hasn't dealt with them?\" I asked.\n\n\"They're in rooms, not the dungeon -- although that was a close call -- and they're being kept under house arrest. He hasn't even spoken to them since the first day. I don't know what to do!\"\n\nI hugged the kid, while Aedan patted him on the shoulder gently. \"Not your job to do anything, Blake.\" Aedan looked at Alistair and then me. \"We can't do much of anything either until he's sober.\"\n\n\"I wonder if Wynne's still in the city?\" Alistair asked.\n\n\"Should be,\" I replied. \"How's this for a plan? You three get him bathed, shaved, and dressed. I'll find Wynne -- don't worry, I'll take an escort if I have to go out. As likely as not, he's just going to need to sleep it off, though the hangover tomorrow is going to be nasty.\"\n\nAlistair and Aedan exchanged scowls, and I laughed. Blake rushed out to find servants to bring water to Cailan's bathing chamber, and Aedan and Alistair hoisted Cailan up between them and shuffled him off in the direction of his bedchamber. I stepped out, getting the nearest servant -- a young elf carrying two buckets of hot water -- to point me in the direction of the Seneschal.\n\nI found Cailan's seneschal talking to a group of irritated nobles demanding to see the king; he was an older gentleman who seemed somewhat bewildered by the whining, and I stepped in to rescue him, for selfish reasons if nothing else.\n\n\"My Lords and Ladies, his Majesty King Cailan is in meetings with his Highness Prince Alistair and the Warden Commander. He is unavailable at this time, but I'm certain he will make time to meet with all of you on the morrow. I will personally ensure that the seneschal, here, is notified of when such a meeting can take place, and he will contact you with those details when they are available.\"\n\nThe group bowed, some of them reluctantly, some of them with more enthusiasm; while I outranked all of them as a princess, and probably would as a Steward as well, that didn't mean they had to like it. I was finally able to usher the poor man away so I could have a private word.\n\n\"Your Highness,\" he gushed, grateful for the escape, I assumed. He bowed low, and I hurried to pull him upright again. \"I am Seneschal Willem. Thank you for that timely rescue!\"\n\nI grinned. \"No problem, though I've really only put it off for you. They'll be back in the morning, I suspect.\"\n\n\"Without a doubt, your Highness, but I have been putting them off for days, so I'll take any reprieve I can get.\" He risked a grin, and I chuckled. \"What may I do for you?\"\n\n\"I need to find Senior Enchanter Wynne. She was supposed to be staying in the city to establish a clinic -- do you know where I can find her?\"\n\nHe nodded quickly, his long, pointed nose flying. \"Yes, your Highness. Before the shipwreck,\" he winced, \"his Majesty went there regularly to check on progress. I believe the Enchanters have quarters there -- it's in a renovated warehouse building near the Chantry.\"\n\n\"I'll need an escort to go there. Not a royal escort -- I'd like this to remain quiet, please. A carriage or something might be best, with only a small handful of soldiers. Is there a non-descript carriage that I can use?\"\n\nHe kept nodding eagerly. \"A covered cart, I think, would be less conspicuous. Right away, your Highness. I will ask the guard captain -- no one will notice some city guards leaving the palace, and if you keep your armour on and wear a cloak, no one will recognise you, either.\"\n\nHe turned away, presumably to make arrangements, but turned back slightly, looking uncomfortable. \"His Majesty -- is he...unwell?\"\n\nI snorted. Nothing a cold bath and some sleep won't cure. \"He's fine. It's a personal matter.\"\n\nHe nodded. \"Of course. My apologies. I am...relieved that you are here, your Highness.\"\n\nI smiled, expression softening. He's had to put up with whatever is going on with Cailan for probably a week; no point taking it out on him. \"It's going to be okay, Willem.\"\n\n\"And happy I am to hear that.\" He shook his head, covering over his concerned expression with the obsequious mask he used with the other nobles. \"If you would wait here, your Highness?\"\n\nHe was back in a few short minutes. After donning a cloak he helpfully provided and covering my head with the hood, I followed him out to the barracks; Sergeant Kylon was in a small office area working at a desk when we entered. Getting him to rustle up a cart with a driver, a footman, and four soldiers on horseback to accompany us was easy, and took less time than I expected. Within about fifteen minutes, I was in the back of the cart, no one except Kylon and Willem knowing who it was inside. As late as it was, the streets in Denerim were empty; the ride to the Market District took perhaps half an hour.\n\nI was impressed to see we went through the Alienage on the way. The gates to the elves' district had been torn down, the streets widened and properly paved. The new apartment-style buildings were complete, and the entire place looked well-kept and clean. There was a large garden near the Vhenadahl, near-ripe vegetables guarded by a sturdy fence and two well-armed members of the new elven militia. More of the militia patrolled the streets and guarded each entrance to the Alienage.\n\nThe cart stopped in a narrow alley, half a block from the Chantry, and the footman assisted me out. Two of the soldiers stayed with the cart, the other two escorting me inside; they took up positions near the door, leaving me to go further in alone.\n\nI was fascinated by the inside of the clinic. The warehouse had clearly been gutted, the inside completely renovated; there was a Tranquil elf at a small desk at the front, with two long hallways behind him at angles to each other, and a large open area with half-a-dozen cots off to the right. The cots were currently unoccupied, each covered with a crisp white sheet, a blanket folded up at the foot; a young woman in mage robes sat reading at a small desk at the back of the area. Each hallway had multiple closed doors, and I could see intersections at the ends leading further inside.\n\nThe Tranquil greeted me as I hesitantly approached. \"Good evening,\" he said tonelessly; the Lyrium brand on his forehead almost glistened in the torchlight. \"Welcome to the clinic. Do you require healing?\"\n\nHe gestured off to the area with the cots; clearly this was where patients were brought to be initially assessed. The mage glanced up from her book curiously.\n\n\"No, no, I'm fine. I'm looking for Wy...Senior Enchanter Wynne. Is she here?\"<br >\n\n\"Enchanter Keldra is more than capable of helping you-\"\n\nI interrupted him hastily. \"No, it's not for healing. I'm here to speak with Wynne. She's a friend.\"\n\nThe Tranquil looked back at the mage, apparently named Keldra; she looked me over briefly. I pulled my hood down, my long curly hair tumbling forward around my face, my obviously good quality armour showing beneath the cloak. She finally nodded to the man at the desk.\n\n\"Very well. Please wait here.\" He turned and walked stiffly down the hallway on the left before disappearing around the corner.\n\nI waited for probably ten minutes before Wynne's murmured voice preceded her. \"Keldra...not my...personal?\" I couldn't hear all the words, but the meaning was still clear -- Wynne was not on duty, and didn't understand why she was being summoned so late at night.\n\nShe came around the corner, and her confused expression was replaced with a broad smile; she approached with her arms out, and I leaned in to hug her. \"Wynne! I've missed you.\"\n\n\"And I you, child. I am surprised to see you in Denerim -- I thought you were to be in Amaranthine for the foreseeable future?\"\n\nI sighed. \"I was. We need to talk.\"\n\nShe examined my face, then nodded and led me part way down the hallway, opening a door and stepping inside. She fumbled with one of the arcane lamps the Formari made, and a small, clean hospital-type room was revealed. She closed the door behind us, and turned back to me.\n\n\"What's happened? Is Alistair alright?\"\n\n\"Oh, Wynne, we're fine. It's Cailan. Listen, have you heard about the shipwreck?\"\n\nShe shook her head, eyes widening.\n\n\"We don't know any details yet, but the ship to Nevarra -- with Anora, and the Wardens? It sank. There were some survivors, including Loghain, but apparently Anora wasn't one of them. Cailan's been a mess ever since -- not sleeping, drinking too much. Zevran is trying to find out the details, but Wynne...could you come check on Cailan? He's probably just drunk and exhausted, but he was barely conscious when I left.\"\n\nWynne's complexion blanched. \"Sank? But...but how? Sierra, is...\" The tips of her ears flushed, a strong contrast with her otherwise pale skin. \"Is Dougal-\"\n\n\"I don't know. The only ones I know about for sure are Loghain and Anora.\"\n\nShe sank on to the cot behind her, wringing her hands. \"How did this happen?\"\n\n\"The word Cailan used in his letter was 'scuttled'. I can only assume that means it was sunk purposefully. Attacked? Sabotaged? We don't know. And Cailan, the one who should be figuring all this out, is drunk out of his mind. Please Wynne?\"\n\n\"Of course.\" She stood, smoothing down her robes. \"Of course. Allow me to grab some things in case I need to stay.\"\n\nI nodded, following her out into the hallway. \"Later you have to show me around here. This clinic is amazing, Wynne!\"\n\nShe smiled proudly. \"That it is. I'll be down in just a moment, my dear. Wait for me out front?\"\n\nThe Tranquil watched me with unblinking, not-at-all curious eyes as I waited; it was creepy, but then, the Tranquil usually were. Keldra surreptitiously watched me as well, obviously far more curious, but she didn't say anything, to my relief. Wynne was gone only a few minutes before she came bustling down the hallway with a large handbag in her arms.\n\n\"I'm going out for the evening, Garlen. Please ask Enchanter Petra to take over for Keldra in the morning?\"\n\nThe Tranquil nodded, and Wynne gestured to me to lead the way out. I pulled my hood back up and headed to the door. One of the soldiers waiting for me by the door held out his hand for Wynne's bag, and she relinquished it; the other soldier cracked open the door and looked outside before exiting and holding the door for us. I headed to the cart, stepping up with the footman's help and settling on the only seat while Wynne climbed up behind me. The soldier placed Wynne's bag on the seat beside her, and then closed the door.\n\nThe mage and I chatted about inconsequential things on our way to the Palace; Wynne was proud of her clinic and the mages working there, as well as a group of non-mage healers and assistants who'd been recruited to help out. She was planning to leave for Orzammar to meet up with Caridin and Shale within the month, and hoped to spend her winter underground doing research on golems.\n\nI took her straight to Cailan's room when we arrived back at the palace. I reminded myself to thank Sergeant Kylon and the seneschal both for their help and discretion.\n\nI entered Cailan's room without knocking, Wynne on my heels; Aedan and Alistair were standing by the hearth, talking quietly when we entered, both of them looking slightly damper than when I'd left.\n\n\"Wynne!\" Alistair kissed me, then pulled the mage we'd all adopted as a mother-figure into a hug. Aedan joined in, and the four of us shared a brief group hug while the mage chuckled.\n\n\"It is good to see all of you.\" She ruffled Aedan's hair, and he squawked, making us laugh.\n\nI touched my finger to a wet spot on Alistair's shirt; he'd taken his armour off, and his under-armour was speckled with damp spots. \"Had any trouble?\"\n\nAlistair grumbled while Aedan laughed. \"Cailan wasn't so cooperative in the bath, I admit, but it's done.\"\n\n\"Where is he?\" Wynne asked.\n\nAedan pointed wordlessly to the door leading to his bedroom, and we all followed Wynne inside.\n\nCailan was propped up on pillows, wearing loose-fitting pants and a shirt; he was dead-asleep, mouth open, snoring sonorously. Blake sat by the bedside, his eyes drooping with fatigue.\n\nI ushered the kid to bed, with one last hug; he had a small room adjacent to Cailan's, and he was so tired he didn't even object when I pointed at it.\n\nWynne approached the bed, hands emitting a light green glow as she checked on Cailan. She snorted, cast a spell of some sort, and then shooed us back into the sitting room.\n\n\"Just drunk, though impressively so,\" she told the anxious group of us once we were out. \"Hasn't had anything but alcohol for a few days, I'd wager, but he'll be fine. And against my better judgement, I've made it so he won't have to feel most of the hangover when he wakes up tomorrow. I'm assuming we need him to be somewhat functional in the morning. He'll still need plenty to drink and a lot of rest though -- I can't prevent the hangover, just treat the pain.\"\n\nWe all sat down to talk; Aedan and Alistair hadn't been able to get any more details out of Cailan, though Blake had confirmed that not only Loghain, but also Dougal were somewhere in the palace. Anora and Riordan had apparently not survived, along with some of the crew and most of the soldiers assigned to the escort.\n\n\"And it seems quite certain they are dead,\" came Zevran's voice behind me. I jumped; I hadn't even heard the door open. \"I wasn't able to talk to Loghain or Dougal, but there is plenty of gossip going around, yes? The ship was apparently attacked at sea; pirates, supposedly, but I have my doubts. Erlina told one of the maids that Loghain evidently saw Anora's body -- she'd been stabbed. Loghain himself was injured, and Dougal brought him to safety. Riordan could have left with them, but instead he went back for Anora's corpse, and wasn't seen again. A mere handful of the crew survived; the others were believed to have gone down with the ship or been killed by the pirates.\"\n\n\"We need to talk to Dougal and Loghain,\" Aedan growled.\n\n\"I'm thinking for the sake of appearances, we should wait until Cailan can grant us official permission in the morning?\" Alistair suggested.\n\n\"Curse Cailan! What's he been doing the past few days?\"\n\n\"Drinking,\" responded Wynne wryly, \"apparently. I'm guessing he has some unexpectedly mixed feelings about his former wife's death.\"\n\nAedan flushed, and I patted his hand as Zevran sat down beside him. \"Cailan's had a rough few years. I suppose we'll have to cut him some slack.\"\n\n\"But he's getting himself back together tomorrow whether he wants to or not,\" Alistair declared. \"We didn't do all the work to keep him alive and get him his throne back to watch him lose himself in a bottle.\"\n\nAgreeing to meet again first thing in the morning, we all scattered back to our own rooms to get some sleep. Blake had anticipated the need for a room for Wynne, and a servant hovering outside Cailan's door showed her where to go. We had a room just down the hall from Cailan's, well-appointed with a luxurious four-poster bed. I took off my armour and sat on the edge of the bed naked, very much expecting I wouldn't be needing pyjamas; Alistair stripped off his shirt, then stood broodily by our window, staring down at the courtyard below with unseeing eyes.\n\n\"What happened?\" he wondered aloud. \"There are an awful lot of people 'lost at sea' when they leave Ferelden.\"\n\nI winced, knowing he was thinking about his father. \"I wish I knew. There wasn't a book or anything that covered Maric's disappearance, and they never really said in the game what happened to Anora if you became the king. And we may never know -- it sounds like Loghain and Dougal barely survived. They may not really have a lot of details.\" I walked up behind him, pressing my naked torso to his broad back, kissing his shoulder blade lightly.\n\n\"I'm worried about Cailan. Between Maric, his daughter, Ostagar, and now Anora...\"\n\n\"Me too. But he has something now he didn't have for any of those other things. He has us, and we can get him through this. He will be okay.\" And I believed it; it might take some time, and some effort on all our parts, but we would make it happen. \"Come to bed. There's nothing you can do about it tonight, and I have a fantastic idea of a way to distract you.\"\n\nHe chuckled and followed me to bed, shucking his trousers while I watched with darkening eyes. \"Yes, milady.\" He climbed onto the bed, running his fingertips over my skin, chasing the goosebumps that broke out in his wake. \"What would milady have of me?\"\n\nHe gave me a lopsided, smug grin, and I giggled. \"Whatever I can get.\" I pulled him in for a kiss, and he slid overtop of me, cradling my face in his hands as he settled between my thighs, his heavy length pressing lightly against my belly.",
        "\"Maker's breath, you're so beautiful,\" he gasped when he came up for air; I chased his lips as he pulled away, and shut him up with another kiss.\n\nEager after a few days of abstinence and teasing, I lifted my legs, wrapping them around his hips, my heels against the taut muscles of his ass, pulling him towards me; taking the hint, he shifted slightly and then slowly, gently hilted himself inside me without breaking the kiss.\n\nBoth of us were on edge, and I knew it wouldn't take much before we both peaked; seeming to realise this as well, Alistair slowed down, allowing me to feel all of him as he stretched me deliciously, but without much friction. I wiggled under him, chasing my pleasure, but he pulled back slowly again, pushing up onto his knees and holding my hips still without separating from me.\n\n\"Not yet,\" he rasped, and my eyes shot open to see his face screwed up in concentration. \"I want to feel you, to make it last a little. Not yet,\" he repeated.\n\nAs usual, I could deny him nothing, and I lay there, my hands gripping his forearms with a vice grip as he slowly, agonisingly eased in and out of me. It was more intense than I expected, being filled with such burning need, but denying it to focus on the slow build-up of pleasure.\n\nAfter a few endless minutes, despite his slow pace, I was overwhelmed, shuddering underneath him as he gently filled me again and again. I gasped in surprise as he reached down and gathered me into his arms, pulling me up so I was sitting in his lap. He kissed me again, his tongue sweeping into my mouth, his hips never stopping, and then he kissed and licked his way down my neck, finally burying his face in my shoulder as we both shook together.\n\nI felt like I would explode; my arms were wrapped around his neck, one hand gripping a handful of his short blond hair, and I rode him at his pace, unable to stop the pleas and declarations of love from spilling out of my mouth. I was ablaze, my skin on fire everywhere he touched me, and it was so much more than pleasure, so much deeper than just sex, I tumbled unexpectedly into orgasm, crying out as it kept going and going, drawn out by each measured thrust of his hips.\n\nI heard his hoarse voice call out as his own peak came; finally losing his patience, his rhythm suffered as he spilled inside me. My vision greyed out; it was a good thing he held me tightly to him, or I'd probably have fallen. As it was, by the time my awareness had returned, I was laying in Alistair's arms, his hand stroking my face as he whispered to me, encouraging me to breathe, to relax.\n\n\"Andraste's ass, Alistair...\"\n\n\"Yeah.\" I could hear the smug grin in his voice. \"Me too. I love you, Sierra.\"\n\nI snuggled into his embrace and fell deeply asleep.\n\nI woke in the morning to him spooning behind me, his erection pressing against my ass, his lips on my neck, his hand on my breast; when I began writhing in his arms, he took me from behind, bringing me to a climax with his fingers on my pearl before groaning in my ear and releasing himself again.\n\nI'd have preferred to stay in bed and go for round three, but the light sneaking through the closed shutters indicated it was morning, and we knew we had a lot of work to do. Reluctantly we climbed out of bed, cleaning up with a basin of warm water courtesy of my dwarven rune, before dressing for court. I braided my hair back, putting on a lovely-but-simple dress that a servant had obviously unpacked and pressed for me; Alistair put on slacks and a doublet, spending more time on his hair than I did, to my amusement.\n\nI was still teasing him about his hair when we ran into Aedan and Zev in the hallway outside Cailan's room; they told us Wynne had gone inside, and we decided to wait in his sitting room to hear the news.\n\nIt didn't take long before Cailan emerged from his room; his skin was sallow, his eyes slightly sunken, but he wore clean clothes and his gaze was clear. We all drew near, worried about him. His expression was sheepish, but also slightly defensive.\n\n\"I hear I have you to thank for being sober and not in excruciating pain this morning.\" Wynne winked at us, and we all stifled our grins. Cailan went on, \"Thank you for coming. As you saw, I've been having some...difficulty-\"\n\nI interrupted him by pulling him into a hug; he stammered briefly before surrendering to it, and Alistair patted him on the back while he shook in my arms.\n\n\"It's okay,\" I whispered. \"We're here to help.\" I let him go, and he rubbed his face ruefully, clearly embarrassed.\n\n\"Right,\" he murmured. \"So where do we start?\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-128"
}