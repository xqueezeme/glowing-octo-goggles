{
    "title": "Peace of Mind",
    "pages": [
        "DB#11\n\nEdited by Pat. I can't thank him enough for his great work and his encouragement to keep writing.\n\nWhat it's like to feel that the edge is just inches away.\n\n***\n\nCHAPTER 1\n\n\"Well, well, well, look what the wind brought to Middletown, Landon Petersen.\"\n\nDerek Hayes engulfed the tall, muscular man standing outside his door in a bear hug.\n\n\"Did your bus arrive early? I was going to pick you up at the station.\"\n\n\"Yes, it did. No worries,\" Landon said taking a look around.\n\nDerek was the only one who knew what his army buddy was going through.\n\n\"Welcome to our home, Landon. Come on in, and meet my beautiful wife, Bella.\"\n\nLandon stepped inside the house. A beautiful girl wearing gym shorts and a tank top smiled at the visitor.\n\n\"Hi, I'm Bella. I finally get to meet the famous Landon Petersen, the man who saved my husband's life.\"\n\n\"Nice to meet you, Mrs. Hayes,\" Landon shook Bella's hand. \"It's really kind of you to say that. Sorry I missed your wedding.\"\n\n\"It's okay, Man\" said Derek. \"You were deployed. Do you know? Every time I look myself in the mirror and see the huge scar on my face I wonder how come my wife doesn't run scared?\"\n\nBella hugged her husband's waist and said, \"You know I love you for who you are, my gentle giant.\"\n\nBella smiled at Derek, and he kissed her lovingly. Landon looked at them with a pang of envy.\n\n\"I hope I'm not imposing,\" Landon said when they broke the kiss.\n\n\"You're not imposing at all, Bro,\" Derek said with a laugh. \"After all, I'm the one who talked you into coming to Middletown.\"\n\n\"Thank you,\" the effort to act normal was taking a toll on Landon.\n\n\"So, Landon, how long are you staying in Middletown?\" Bella asked.\n\nLandon shrugged. \"I'm not sure, a while I suppose.\"\n\nThe tone of Landon's voice was light, but his eyes were empty. The effort to make small talk was wearing him out.\n\nDerek changed the subject. \"Do you want to visit our gym? We were just heading there.\"\n\n\"Sure.\" Suddenly all the lightness in his face, in his voice disappeared as the darkness of recollection assailed him. He was lucky not to have bled to death the day they were attacked. The red-hot metal had cauterized the wound. He kept seeing Derek's face destroyed by a metal splinter and the bodies of his buddies scattered around him. The scenes still haunted him.\n\nHe took a deep breath and exhaled slowly. His face was pale, and there was a cold sweat on his forehead.\n\n\"Do you feel okay, Landon?\" Bella asked him with concern. \"Did you have breakfast? You look pale.\"\n\nHe nodded slowly.\n\n\"I had some breakfast at the bus terminal, Mrs. Hayes. Thank you,\" Landon said in a shaky voice. Truth was he had just a black coffee. He took another deep breath.\n\n\"Please, Landon, call me Bella;\" she smiled at him and said, \"I'll change myself, and we'll be ready to go.\"\n\nAs soon as his wife left, Derek lowered his voice and asked full of concern, \"How are you holding up, Bro?\"\n\nLandon closed his eyes and took a deep breath as he tried to relax. \"I'm on medical leave for twelve weeks. They are maintaining my health benefits. I told my commander I couldn't handle another deployment. He advised me to request a medical exam and I was diagnosed with PTSD.\"\n\nDerek moved his head up and down.\n\n\"I went through the same shit myself. Are you sleeping all right?\"\n\nLandon shook his head. He was used to waking up soaked in his own sweat.\n\n\"No, not really. I got some pills from the doctor.\" Landon was not a fan of discussing his sleeping or any other issues he might have with anyone. Not even Derek.\n\n\"I still have some nightmares about what happened. They got better since I met Bella. Are you getting help?\"\n\nLandon looked embarrassed. \"They gave me some pills and I saw a therapist for a while. It didn't help. You told me about a PTSD program in Seattle.\"\n\n\"Yes, that's a good one. I went there for a while after I was discharged. I'll drive you there.\" Derek placed a big hand on Landon's shoulder. \"I'm here for you and you know it. Anything you need. I owe you my life\"\n\n\"I know, Derek. Thank you. My commander said that having PTSD doesn't necessarily mean the end of my career, but I need to seek help. He said that if I seek treatment while still in military service it will protect me from getting a bad paper and being denied veterans benefits in the future.\"\n\n\"Are you going to stay here with us?\"\n\nLandon looked at Derek warily. \"I don't think that would be a good idea. I prefer to have my own place, Derek. Preferably out of town. I'm not a good company lately. Especially at night.\"\n\n\"Okay. I won't push you. Whatever you need I'm your first and your last call. A good friend of ours comes to the gym in the mornings. She's a real estate agent. She'll help you to find the right place for you.\"\n\nAt that moment, Bella returned and the three of them headed to the gym.\n\nCHAPTER 2\n\nGrace McAllister held her breath, pumping again on the leg press. Her legs and calves burned. But that was good. Exercising and exhaustion was therapy, the only way she could forget her aching heart for an hour or two.\n\nFocusing on the next rep, she ignored the man across the room doing sit-ups on the abdominal machine with Derek. He seemed to be close to Derek and Bella. Both men had been watching her for a while and whispering.\n\nGrace pumped her legs again, sweat trickling between her breasts. If she were honest with herself, she'd admit that Derek's friend was easy on the eyes. He was at least six foot three, maybe taller. He was lean and rangy, muscle and bone, nothing extra.\n\nGlancing toward him, she couldn't help but notice how his abs rippled beneath the sweat-dampened, white T-shirt he wore. Since she'd refused to make eye contact with him, there was no way to know what color his eyes were. But he was one sexy man.\n\nAll the more reason to avoid him like the plague. A handsome man was the reason she was here now, to put the pieces of her broken heart back together.\n\nTears stung her eyes. Damn it! The rage at those who'd wronged her had long since waned. Now the anger was directed at herself for being so blind, so foolish and so unable to get over it.\n\nSix months. It had been six frigging months, and still, she couldn't even think about it without wanting to cry. The humiliation of being such a stupid, na\u00efve, trusting idiot was too much to bear.\n\nHer muscles protested the continued abuse, but she pressed again, lifting the heavyweights in the casing behind her. A movement caught her eye, and she stifled a groan. Derek's friend had been convinced to make his attempt to pick her up.\n\nWithout looking at him, she didn't give him a chance to speak. \"Not interested.\" There had been a time when Grace would not have thought herself capable of being so rude.\n\nHe was clearly uncomfortable. \"I'm Landon. I was with Derek, in the army. He told me I should talk with you...\" his voice was soft, quiet.\n\nGrace finished another rep before answering, panting as she released the weight. \"Well, you have talked with me. You can leave.\"\n\nA moment of tense silence passed before he answered, \"He must have ripped your heart out.\"\n\nStartled, her gaze jerked to his. Black. His eyes were black. He had the troubled eyes of a werewolf before the change. Grace swallowed hard. \"What?\"\n\nHe didn't smile. In fact, he seemed angry. \"He cheated on you, didn't he?\"\n\nStunned, Grace tried to form a pithy reply, but words eluded her. She hadn't talked about it with anyone, not even her brother, Steve.\n\nHis penetrating gaze held hers for several moments. Finally, she tore her gaze away, pushing again for the next rep. Exertion strained her voice as she answered. \"Yeah, well, I haven't managed to get the knives out of my back yet. So, I'd appreciate it if you'd just leave me alone to lick my wounds.\"\n\n\"Understood, Ma'am. Sorry I bothered you...\"\n\nGrace cried out, her right calf muscle cramping into a tight ball and sending searing pain through her leg. She reached for it, tears once again filling her eyes.\n\nLangdon didn't hesitate. Grabbing the balled muscle with both hands, he squeezed and massaged until it loosened. But even before the pain eased, Grace tingled at the feel of his hands against her bare skin. Heat radiated through her, racing through her blood, waking all her senses.\n\nAfter it was obvious the cramp had eased, he released her leg. She lifted her lids and found him watching her with concern.\n\nGrace licked her dry lips. \"Thanks.\"\n\nLandon swallowed, \"You're welcome.\"\n\n\"I guess I'm done for the day.\" Grace grabbed her towel and stood, purposely keeping the machine between them.\n\nDerek approached the two of them and asked Landon, \"Did you ask her?\"\n\nGrace looked at Derek, \"I didn't give him a chance, Derek. You know I don't want to date anyone...\"\n\n\"Date?\"Derek's voice made her jump. \"What are you talking about, Grace?! My buddy Landon is going to stay in town for a while and he's looking for a place. I told him that you could help him. I even told him you were a nice person.\"\n\n\"Oh...!\" Grace exclaimed and then opened her eyes with realization. \"OH! So he didn't come to pick me up... I feel such a fool! I completely misread the situation.\"\n\nGrace looked sincerely apologetic. \"Please forgive my rudeness, Landon.\"\n\nLandon gave Grace a soft smile. \"It was an understandable mistake. A pretty girl like you must have a lot of guys sniffing around. Don't beat yourself up.\"\n\n\"You're very kind to say that, Landon. Let me give you my card. You can call me this afternoon and I'll show you some places. It's a low season, hence renting is really cheap and there's a lot to choose.\"\n\nCHAPTER 3\n\n\"This cabin is a bit far out from town, a couple of miles, but the price is right and the view is beautiful,\" Grace explained to Landon.\n\n\"Being far from town is perfect. I don't feel comfortable around crowds,\" Landon explained.\n\nHe had no idea what he would do about transportation in Middletown. Probably no taxis or Uber. He only hoped he could walk most places and beg a ride for longer distances. Maybe, just maybe, he would try driving. Wouldn't be so hard on near-empty streets.\n\nHis first impression of the cabin was warmth. A large living area with expansive windows, hardwood floors and a huge fireplace. The bed was a double and looked comfortable. The headboard faced a window that framed large pine trees. The bathroom was medium size with a large walk-in shower.\n\nGrace suddenly realized she was staring at Landon. He was moody and silent.\n\n\"The television is satellite and has a lot of stations available. You have internet service too. There's a path just to the left of the cabin that goes up the side of the mountain. There are some great views there,\" Grace went on.\n\nLandon had come to Middletown, hoping the mountain air would help him get his head on straight.\n\n\"The owner wants to sell too in case you're interested. He's an old man,\" the realtor kept explaining.\n\nLandon looked out through the pines to the lake. The sky was impossibly blue against the mountains, and a cool breeze was refreshing. The scent of pines and lavender perfumed the air. The vivid shades of green stood in stark contrast to the colorless rocks and sand of much of the Middle East.\n\nGrace cocked her head. \"Anything else you would like to know?\"\n\nLandon shook her head. \"It's far more than I expected for the price I can pay,\" he explained in a lifeless voice. \"I'll take it.\"\n\n\"Are you sure? I could show you other options...\"Grace tried to steady her voice even as she was affected by the ethereal sadness in him.\n\n\"It's not necessary. I like it here.\" Landon took a deep breath.\n\n\"Then I'll drive you back to town to sign the paperwork and give you the keys.\"\n\nLandon nodded, but there was no heart in it. He was glad Grace didn't push him. He got frustrated easily when he wasn't understood.\n\n\"Thank you.\"\n\n\"Then I'll drive you back with your luggage.\"\n\nLandon hesitated, and Grace sensed that he was reluctant to take any help. \"I don't have much,\" he said. \"Besides, Derek and Bella invited me to dinner. I'm sure he can drive me here when we're done.\"\n\nGrace was lingering. She should have already taken him back to town, but somehow she found herself wanting to stay longer and get to know Landon better.\n\n\"Well, it's official then, welcome to Middletown!\" Grace chirped, walked over to Landon and hugged him. She felt him wince and realized it was a mistake.\n\n\"Sorry, we don't really do the whole shake hands approach in this town.\"\n\n\"Another reason to stay away,\" Landon mumbled under his breath.\n\nCHAPTER 4\n\nBella cooked a special dinner in Landon's honor. They made small talk during dinner. Derek and Bella did most of the talking. They told Landon the story of how they met and fell in love.\n\nAfter they ate, the two men sat down in the living room.\n\n\"Do you like dogs?\" Derek asked Landon unexpectedly.\n\n\"Sure. Who doesn't?\"Landon replied. \"Never had one. Money was too tight when I was a kid, then a dog didn't really fit into army life unless it's military.\"\n\n\"There is a program in Seattle that matches shelter dogs with vets who have PTSD. They're trained to sense when a flashback is coming and alert their vet.\"\n\nLandon hesitated. A dog? How could he take care of a dog when he could barely take care of himself right now?\n\nDerek waited, then said gently, \"You would be saving a life.\" He paused.\n\nHe knew Derek was trying to force him to make a decision, but the idea suddenly appealed to Landon. Loneliness was like a shroud around him. And a dog wouldn't ask questions or give sympathy or question his choices. \"Would the cabin owner approve?\"\n\nDerek grinned. \"Sure, man. A lot of people have pets around here.\"\n\n\"How much is a dog? I don't have much money.\"\n\n\"It's free. The dog has all its shots, is well trained and there's equipment provided, as well. A dog bed, dishes. Food. Toys. Part of the program we talked about.\"\n\nLandon felt like a fish being reeled in. He didn't like being manipulated, but he knew Derek meant well.\n\nDerek waited, as he always did. He rarely appeared to push, but in his own subtle way, that was exactly what happened.\n\nLandon hesitated, just as he hesitated at any move forward these days. Inertia had taken over his life. Decisions were difficult if not impossible. That was entirely new for him. He had been making decisions since he was a little older than a toddler. When set on a course he could rarely be deterred.\n\nBut that was before. Now... nothing was important.\n\n\"Landon,\" Derek said, \"Give it a try. At least talk to the trainer. See the dog. You don't have to make a decision this minute.\"\n\nHe shrugged and nodded his head.\n\nCHAPTER 5\n\nThe first days at the cabin were fine, hiking steeply up through the ancient evergreen forest. As he got tired of listening to nothing but his own thoughts, it got harder.\n\nSo, when Derek called him the next Friday, offering to drive him down to Seattle to meet the dog, he accepted.\n\n\"They won't let the dog go with just anyone,\" Derek warned Landon on the way there. \"There has to be a fit.\"\n\nLandon swallowed. What if the dog rejected him? He didn't know whether that was what he wanted or not. He had decided that if it did work he was going to keep an emotional distance from the animal.\n\nWhy had he let Derek talk him into this? Now he had to make a decision.\n\n\"You're second-guessing yourself again,\" Derek said reading his mind. It was spooky.\n\n\"If the introduction goes well, you are expected to stay at the trainer's ranch for several days for intense training and to ensure the match will be successful.\"\n\nMaybe it wouldn't be. In the past few days, he had read enough about the program to know there had to be trust on the part of both the veteran and the dog. He didn't know if he could give that.\n\nDerek turned onto a dirt road that led to a small ranch house outside Seattle. There were also stables, an oblong building with a chimney, kennels, and a fenced-in area. Several dogs came to the fence and barked as Derek parked the car.\n\nA wiry woman came to the car as Landon stepped out.\n\n\"You must be Landon Petersen,\" she said. \"I'm Audrey Schmitt. Call me Audrey. Everyone does.\" She held out a weathered hand, and Landon took it.\n\n\"Follow me,\" Audrey said.\n\nBefore any more thoughts flickered through his mind, he was herded into the ranch house. A dog was at the window, watching. He didn't move until they were all inside and Audrey said, \"Scout, say hello.\"\n\nThe dog approached obediently. He was medium size where Landon had expected a larger animal. But this dog more resembled a small collie; his coat appeared woven of shades of black, white, and tan. He had blue eyes that regarded him cautiously.\n\n\"Scout?\" Audrey said again.\n\nThe dog held up his paw.\n\nLandon took it gingerly. The fur was soft, and the dog's gaze seemed to reach inside him and ask questions he couldn't answer. Then his tongue flicked out and licked his hand.\n\n\"He likes you,\" Audrey smiled.\n\nLandon found himself petting the dog.\n\n\"Try behind his ears,\" Audrey suggested. \"That and his stomach are his favorite spots.\"\n\nLandon followed the advice and rubbed behind the dog's ears. Scout turned on his back and bared his stomach. Landon rubbed it, stopping when he heard a rumbling noise.\n\n\"That's a groan of pleasure,\" Audrey explained with a smile.\n\n\"You sure about that?\"\n\n\"I'm sure.\"\n\nLandon went back to rubbing Scout's stomach before straightening up.\n\n\"You think he will do?\" Audrey asked.\n\nLandon stood and Scout sat in front of him. He hesitated. Scout lifted the same paw that he had before and looked expectant.\n\n\"He has accepted you. Now it's up to you,\" Audrey said. \"He's a smart dog, one of the smartest I've trained, and that says a lot. He had to be to survive. If you feel through the fur, you'll find scars. He had some rough times before we rescued him.\"\n\nLandon nodded. He knew exactly how the dog must have felt.\n\nAudrey continued. \"Scout has a natural empathy that makes him ideal for our purposes. If you have a nightmare, he knows to wake you up. He will remind you when it's time to go to bed. Panic attack? He will physically interrupt you and redirect the panic.\"\n\nLandon was stunned. He had read about dogs and vets but hadn't realized exactly what they did. \"All of that?\" he asked dubiously.\n\n\"And more. He can find and locate objects, like your shoes, or your phone or keys. In other words, he can pretty much do anything you want to teach him to do.\"\n\nLandon found it hard to believe a dog could do all that. But if he just interrupted the nightmares, he would be grateful.\n\n\"I know it's hard to believe,\" Audrey said, \"but it's really remarkable what these dogs can do.\"\n\n\"Derek said they are free. How can you do that?\"\n\n\"Ninety percent of the dogs come from shelters. I have sponsors too. Derek is one of them. But there are others, including area veterinarians who donate their services. I do it because my son had PTSD, only it wasn't recognized like it is now.\" She paused, then added, \"He committed suicide.\"\n\n\"I'm truly sorry for your loss,\" Landon said sincerely. Losing someone was something he understood very well. Sadly, he was familiar with suicide too.\n\nAudrey simply nodded. \"If you decide you want to come into the program, you'll stay with the dog until I think the two of you are ready. Maybe a week, maybe less, maybe more. You'll live in the bunkhouse with the dog while you get to know each other. He's trained, but you're not. But I want to know for sure that you're committed, that you will stick with it.\"\n\nLandon looked down at the dog, who looked up at him. He would have sworn the dog smiled.\n\n\"Are you ready for me?\" Landon asked him.",
        "He had changed from a hard-charging, ambitious army officer to someone who couldn't decide on what to eat. Mainly because he didn't want to care.\n\nHe wasn't sure he wanted to form a close bond with the dog. In fact, he was quite sure he didn't. But maybe the dog would help. Anything to keep from falling to pieces whenever he heard a loud noise. He would just have to maintain an emotional distance, that was all.\n\nAudrey paused, then added, \"Are you up for the challenge?\"\n\nLandon looked down at Scout, who made a low sound, like a rumble, and moved closer to him. He reached down and stroked his head. Scout licked his hand and looked up at him.\n\n\"I think so,\" Landon said making his first major decision in God knows how long.\n\nCHAPTER 6\n\nTen days later, Derek parked his car in front of the cabin Landon had rented.\n\n\"Home, sweet home,\" Derek announced in his deep voice.\n\nBella and Grace were waiting for them in front of the cabin.\n\nLandon didn't move. He just sat in the car looking at the cabin. He could feel Scout in the back seat moving closer to him.\n\n\"Damn! I didn't' expect a welcoming committee.\" Derek exclaimed. \"I asked Bella to fill your fridge and clean the place. I have no idea what Grace is doing here. Wait in the car, I'll get rid of them.\"\n\nLandon stopped him. \"It's okay as long as they don't stay long. There's no need to be rude. How much do I owe you?\"\n\nDerek shook his big hands, \"Nothing, man. It's a welcome gift from all of us.\"\n\nLandon hesitated, he had a really hard time accepting help from others. But he knew it would be useless to fight Derek about it. So, he said, \"Thank you. I appreciate it.\"\n\n\"Any time, man.\"\n\nBella approached the car. \"Welcome home, Landon. Do you need any help unloading?\"\n\n\"Perhaps you can help with Scout's belongings. He has more than Landon does,\" Derek said, giving his wife a look that meant `leave Landon alone'.\n\nBella smile disappeared from her face and she nodded.\n\nLandon stood by the car while Derek opened the trunk that was filled with dog food, a dog bed, and a cardboard box full of dog dishes, toys, and a leash.\n\nDerek was right about his friend's luggage thought Grace. There was only a medium-size duffel. She picked up the dog bed and Bella took the big sack of dog food.\n\nDerek and Landon picked up the rest of the things and then followed the girls inside.\n\nGrace placed the dog bed in front of the living room window.\n\n\"Do you like it here, Landon?\" She asked him. He shrugged, \"It's okay.\"\n\n\"Your dog is beautiful,\" Grace said sincerely. \"Scout, isn't it?\n\n\"Thank you, Ma'am. Yes, that's his name.\"\n\nBella left the dog food in the kitchen. \"I made some fresh coffee; there are some sweet rolls Grace brought. You should try them, they're great.\"\n\n\"Thank you,\" Landon said, keeping Scout at his side.\n\n\"We also filled the fridge.\" Bella opened the door to show Landon the content. \"You'll find a couple of casseroles and cold cuts along with sliced bread, eggs, milk, and sodas.\"\n\n\"It's far more than I expected. Thank you,\" he said again. His words were polite but void of emotion. He was obviously uncomfortable.\n\nGrace noticed Landon was scarce with conversation, but that was all right. She was tired of smooth talkers. She made a mental note to ask Derek about what was wrong with him.\n\n\"I think we should leave Landon alone,\" Derek urged both girls. Bella looked at her husband with surprise. She was about to say something, but then she saw the expression on his face.\n\nGrace also realized Landon wanted to be alone.\n\n\"Okay then. We'll leave you to get some rest, Landon,\" Bella said.\n\nGrace took out a sheet of paper she had prepared. \"My number is there, along with several others you might want to know. The veterinarian. The town doctor.\"\n\nShe attached the list with a magnet onto the fridge's door.\n\nLandon nodded, obviously absorbing the information, then he went to the door with them. \"Thank you for the warm welcome.\"\n\n\"Just call me if you need company,\" Grace gave herself a mental slap as soon as the words left her mouth. She sounded like a hooker.\n\nThing was she didn't want to leave Landon alone. There was something broken inside him. She could sense it. His voice was soft, but it carried no strength, no conviction that would be expected of an army officer.\n\nShe suddenly realized she was staring. \"I had better go.\"\n\nGrace headed for the door. She had already stayed longer than necessary. She forced herself down the path to her car.\n\nAs she hurried past him and out the front door, Landon found his gaze following her.\n\nBella climbed into Derek's car and they left, waving their hands through the windows.\n\nAs she opened the car door, she glanced back. Landon Petersen was watching as she left. Slim, muscular, and tall, he looked like a statue.\n\nAs Grace drove back to town, she couldn't get Landon out of her mind.\n\nDammit! Why couldn't he have been just another disgusting sweet talker? She was never going to fall for another one, not again. Instead, Landon was soft-spoken and appealing. More than appealing.\n\nSince she was a kid she had been a sucker for lost puppies and damaged goods. That's why she had moved in with her brother when his first wife died. She knew she couldn't stay away from Landon.\n\nCHAPTER 7\n\nLandon watched his friends drive away and went inside the cabin.\n\nHe went into the kitchen and poured a cup of coffee from the electric pot. He liked his coffee black, and the stronger the better.\n\nHe took a plate with two rolls outside and returned for the coffee. He sat in one of several chairs on the screened porch and ignored the swing. Scout followed him and sat at his side and regarded the roll enviously.\n\nLandon couldn't help but smile as the dog's tongue lolled out the side of his mouth. He steeled himself against getting too attached to the dog, but he had to admit Scout was growing on him. He couldn't resist giving him a piece of roll.\n\nFor the first time since he set off on this journey, he relaxed. Maybe this had been a good move.\n\nOnce he finished his coffee. Scout nudged him, and he stood, remembering what Grace said about the mountain. A walk. Fresh air. That was what he needed. He looked up and saw the path she had mentioned.\n\nThe path was there. Taunting him. Inviting him to leave his safety zone.\n\n\"What do you think, Scout? Should we try it?\"\n\nThe dog wagged his tail eagerly.\n\nLandon started up the path. Scout went ahead of him but kept looking back to make sure he was keeping pace with him.\n\nLandon didn't realize how out of shape he was. He hadn't run since Afghanistan.\n\nHe was breathing hard when he reached what was obviously a lookout. He paused and looked out over the town of Middletown. A peaceful town where everyone probably knew everyone. It looked like a toy town from here. The lake appeared an even richer blue. The war and its horrors seemed so far away. Suddenly he felt the darkness descending again. The despair.\n\n\"Don't! Don't do this!\" He filled his lungs with fresh air and the rich smell of pine.\n\nScout made curious little noises in his throat and licked his hand. \"Sensing something, huh?\" he said. \"I'm okay.\"\n\nThe dog looked at him. He seemed to be saying, \"I'm here now. You're not alone.\"\n\nLandon swallowed hard, feeling a bit of anxiety. Scout nudged him again, and he reached out and scratched behind his ears. He was a smart dog. Could he really feel the emotions swirling in his chest?\n\nPain was a living thing inside him. It had been for months. He couldn't let go of it. He didn't want to let it go. It would be a betrayal of those who gave their lives to keep everyone safe. He remembered the last time he had seen Derek. Blood had been everywhere and his face was...\n\nLandon felt nauseous.\n\n\"Don't go there,\" he said aloud.\n\nScout moved closer to him, nudged him, and made guttural sounds in his throat. He assumed that was his way of reassuring him. Landon looked at the towering mountains. Snow-covered peaks glistened in the noon sun. He took a deep breath of fresh air, rubbed Scout's ears and slowly calmed down.\n\nHe started down the mountain. The path was well-trod but steep. He had to concentrate on every step, a good thing, in his mind. He was winded when he reached the bottom. He remembered the times, no so long ago, when he could run ten miles without breathing hard.\n\nBut that was a lifetime ago. A different Landon. Now he had to face new challenges.\n\nCHAPTER 8\n\nSome days later, Landon woke to sunlight streaming through the bedroom window. He felt a furry body next to him. It was the first full night's sleep he'd had in months. No demons. No blood. No bad dreams. Just soft snoring.\n\nScout opened one eye and peered at him, as if asking whether he could stay. He remembered the resolve he had made about not getting too emotionally invested in the dog. It had lasted until the first nightmare, when Scout had woken him, crawled up on the bed, and let him cling to him.\n\nThe dog's eyes regarded him solemnly now, and he couldn't help but rub his ears. So much for not getting invested.\n\nLandon looked at the clock on the stand next to his bed. Nearly seven. He rarely, if ever, slept that late, but then yesterday had been a very emotionally exhausting day.\n\nDerek had driven Landon to the PTDS center in Seattle for his first meeting with his psychiatrist, Doctor Michaels.\n\nThe toughest part of seeking help had been making that first appointment. Derek had been gently pushing him to do the right thing.\n\nLandon liked Doctor Michaels. He was a middle-aged man, bearded, of a good natural enthusiasm.\n\n\"All soldiers are affected by combat. It is normal for them to experience symptoms due to their deployment experiences. I bet you drink more coffee now than you used to, huh? Maybe you used to get drunk too.\"\n\nLandon thought about that and said, \"Yeah, I'm drinking at least a pot a day. I admit I used to drink a lot too when I got back home, but I don't drink anymore. So?\"\n\n\"While you were in the combat zone, your body, without you knowing it, was releasing a ton of endorphins and adrenaline, even when you weren't doing anything. When you came back, your mind and body were still on that high. Your body still needed those endorphins. And so you were seeking out stimulants like caffeine for having lost that feeling.\"\n\nLandon thought about that for a second and finally nodded.\n\nDoctor Michaels finished taking notes and explained, \"I'll tell you about everything, Landon. What I am writing down, what I don't write down, where that record goes and who has access to it. I want to be open with what I am doing so you are aware and you are also able to trust me.\"\n\n\"Okay.\"\n\n\"If you see me as someone you can trust, then you are more likely to listen and understand my recommendations,\" the doctor kept explaining. \"At this first stage, we'll be working towards feeling more stable in your life and not feeling so chaotic and out of control.\"\n\n\"That would be good.\"\n\n\"Tell me where your negative thoughts come from. Where does your mind go when you have those flashbacks. I know it's a challenge to open up to someone who is, essentially, a complete stranger. But when it comes to therapy, opening up can make all the difference. The more I know, the better I can understand you and help you.\"\n\nLandon gulped. It was very hard to open up about the attack where his team mates died. It was even harder to about his daily struggles. He didn't want to be perceived as a weak person. However, ignore and overrule didn't work anymore for him.\n\nLandon told Doctor Michaels everything that had happened in Afghanistan. He started giving him a dispassionate account of the incident where his team died. But as he progressed the emotional barriers fell and he broke down.\n\nDoctor Michaels gave Landon all the time he needed to recover, he just guided him through some breathing exercises.\n\n\"Thank you, Landon. I know it was hard to live that and tell me about it. We do have to open up those wounds and drain the pus so the infection can heal. Thing is, this event was stored in your memory bank with all the gory details attached. Every object you saw, every sound you heard, every smell that infiltrated your nostrils, and every sensation your body experienced was remembered. Because the emotion you felt at that moment were so strong, it became a memory that stays with you and comes back to haunt you as a flashback. However, a flashback is more than a memory. They are more like a nightmare because you can't distinguish between the flashback and reality.\"\n\n\"They do feel very real. I feel I am back there,\" Landon gulped. His hands were shaking.\n\n\"When you feel several of these emotions in quick succession, it can be very hard to know what you're feeling at any given moment, Landon. If you don't know what you're feeling, you may be headed for being unable to manage your emotions and stay in control. The brain is an incredible organ. You'll notice it will feed you memories like rations. You'll get a memory, assimilate it, then it'll feed you a new one.\"\n\nLandon liked the doctor. He told him about a strategy called the container, where he created a box in his mind to put your memories or feelings in so that he could come back to them at a later time when he was ready.\n\n\"I'm hopeful about you, Landon. Writing helps too. I strongly suggest you keep a journal.\"\n\n\"What do I write?\"\n\n\"Whatever comes to your mind. Memories, good and bad ones. Random thoughts... Progress, doubts, questions... you get the idea.\"\n\nLandon talked with Derek on the way back to Middletown. He had been there so he understood him.\n\nFor the first time in a long time, Landon felt hope, real hope.\n\nCHAPTER 9\n\n\"Hi, Landon!\"a cheerful voice came on the phone when Landon took the call. \"This is Grace McAllister, the realtor. Do you remember me?\"\n\nLandon remembered Grace, of course. The bubbly real estate agent.\n\n\"Yes, I remember you.\"\n\n\"I hope I'm not intruding, but I wanted to make sure you had everything you need.\"\n\n\"I'm fine. Thank you.\" Landon replied. \"You and Bella were really helpful.\"\n\n\"Look, I was showing a house in the area and I thought about calling you. Are you up for a visit? There is something I want to talk about with you. Don't be polite if I'm imposing,\" Grace giggled.\n\nLandon hesitated. A visitor was the last thing he wanted. However, his psychiatrist had encouraged him to interact with people on a one-on-one basis.\n\n\"That would be fine,\" he sighed.\n\n\"Is noon okay? I can take you to a restaurant or we can stay at the cabin. You decide.\"\n\nChoices. Why were they so difficult?\n\nHe couldn't live the rest of his life hiding from everything and everyone. He knew that. He couldn't retreat into a dark place and sink back in inertia. He had to fight back. He couldn't get better by avoiding humans because recovery was defined and measured by his ability to interact meaningfully with them. Doctor Michaels was very clear about that.\n\nHe had taken one step forward in coming to Middletown.\n\nAnother step taking Scout, and one more step starting his treatment.\n\nIt was time to take the next step out of hell.\n\n\"Restaurant would be fine, I think.\" It was said in a monotone voice, but Grace could hear his concern.\n\n\"Are you sure? I can show you around town if you're up to it. I have to warn you, though, that everyone will want to meet you. But don't worry I'll chase them away from you,\" she said with a giggle.\n\nMiddletown looked like a nice town, but he had grown up in an even smaller one and was familiar with its pitfalls. Everyone knew everyone's business.\n\n\"I'm warned,\" Landon replied. Scout came closer and nuzzled against his leg.\n\n\"You can bring the dog,\" Grace added almost reading his mind.\n\n\"Inside the restaurant?\"\n\n\"Here you can. The mayor has a soft spot for dogs and veterans.\"\n\n\"Then, I will,\" Landon said. \"We're new to each other and this is a strange place for him.\" For both of us, he thought. Landon had not been back in town since the first day.\n\n\"I'll be there at noon,\" Grace said and ended the call.\n\nLandon took a deep breath. Had he done the right thing in agreeing to go to a public place? What if he had a panic attack or a flashback?\n\n\"What do you think, Scout? Did I make the right choice?\" Landon found himself talking to the dog often.\n\nScout barked.\n\n\"I'll take that as a yes,\" he said.\n\nHe went into the bedroom, opened the duffel, and took out a clean shirt, a sweater, and a clean pair of jeans and headed for the shower.\n\nCHAPTER 10\n\nGrace picked him up exactly at five minutes to twelve.\n\n\"Hi, Landon. Nice to see you again.\" No hugs this time.\n\nShe leaned down and rubbed Scout's ears. The dog frantically wagged his tail.\n\n\"Ever had a dog before?\" Landon asked Grace.\n\n\"No, my parents died when my brother and I were young and there was no time or money for a dog,\" she pouted.\n\n\"I'm sorry to hear that. I know how it's like to grow up without any money to spare.\"\n\n\"It's okay. It was a long time ago. My brother, Steve took care of me. He's my hero.\"\n\nThe word 'hero' triggered a bit of anxiety. He remembered the box Doctor Michaels told him about and quickly locked all the images that came to his mind there. His team had died. He had survived. That didn't make him a hero, just lucky.\n\nScout's tail wagged happily as they walked to Grace's car. She opened the passenger door and invited Scout inside and showed him a spot behind the front passenger seat. Landon climbed in after him.\n\nHe tried to avoid glancing at Grace as she drove the nearly empty two-lane road to Middletown.\n\nThey reached the end of the road. A large square was on the right. The restaurant was just in front of it. Landon felt comfortable the moment he stepped inside the place.\n\nThe atmosphere was warm and cozy.\n\nThey entered the restaurant and a young waitress met them. \"Hi, Grace. You must be Landon. Welcome to The Jammed.\"\n\nHe nodded. Landon wasn't sure how he felt about the waitress already knowing who he was. He'd always been a private person.\n\n\"I'm Mary. I'll be your waitress,\" she said, then looked down at the dog. \"Looks like a fine service dog,\" she added with a wink. She didn't wait for an answer but led them to a booth in the back.\n\nAfter they were seated, Landon asked Mary what was good.\n\n\"Tony, our chef, would say pasta, he comes from an Italian family,\" the waitress lowered her voice, \"But I prefer the quail.\"\n\n\"Quail?\"\n\n\"Five-spice roasted quail with sweet-and-sour cranberry sauce. It's delicious,\" the waitress smiled at Landon.\n\n\"You sold me,\" Landon said.\n\nThen, an extremely loud bang came out of a car's exhaust pipe and echoed between the buildings. It sounded as loud as a gunshot. Memories came flooding back.\n\nA pop. A hiss.\n\nA deafening blast.\n\nBlinding light. Searing pain.\n\nLandon's hand crushed the napkin in his lap. For a brief moment, he felt the need to jump on top of Grace and push her to the ground. Scout whined and moved closer to him, resting his head on his thigh. That stopped him.\n\n\"Landon, take a look around. We're in the restaurant. We're safe,\" Grace's voice was calm and collected even when her eyes were big as plates.\n\nGrace offered him her hand and he held it until his knuckles turned white. She winced but didn't complain or let it go.\n\nShe kept whispering in a low calming voice. \"Take deep, slow breaths. I'm here with you. You are safe. You are in Middletown.\"\n\nScout whined again and Landon scratched the dog's ears feeling slowly back in control.\n\nHe looked up and saw Grace's concerned gaze.\n\n\"Are you all right?\" she asked. \"Do you want us to leave?\"\n\n\"No,\" he replied softly. \"I'll be all right in a minute. I'm getting there\"",
        "\"What can I do to help you right now?\"\n\n\"You already have.\" Landon let go of her hand. \"I'm sorry, I think I squeezed it harder than I meant to.\"\n\n\"Don't worry. I'm tougher than I look. My parents died when I was fourteen. My dad had a heart attack while he was driving. A heart defect no one had detected. I don't know what I would have done without my brother, Steve.\"\n\nSympathy surged through Landon. He knew loss all too well.\n\n\"Do you know... what happened to me?\"\n\nGrace shook her head. \"I don't know exactly what happened to you, and you don't need to tell me unless you want. I only know that pain in your eyes. I saw it in my own mirror for a long time.\"\n\n\"How did you know what to do a moment ago?\"\n\nGrace blushed. \"Being Derek's friend I supposed you were a soldier too. Besides, you keep calling me, ma'am.\"\n\nShe giggled and Landon nodded.\n\n\"I supposed you have PTSD.\"\n\nThis girl could see right through him. He nodded slowly again.\n\n\"So I read on the internet about it... I was lucky to remember something of what I read about how to help someone during a... flashback? Is that what you had a moment ago?\"\n\n\"Yes.\"\n\nWhy was this girl taking all this trouble?\n\n\"Landon, I want to help. What can I do for you? Please, trust me.\"\n\nHe knew she wouldn't give up.\n\n\"I need something to do. A job. I need the money.\"\n\n\"A job... Hmm...\" Grace thought for a while and then her face lightened with an idea.\n\n\"Do you like writing?\"\n\n\"I've kept a journal, that's all.\"\n\n\"The Town Council is looking for someone to write a short history of Middletown. The mayor wants to use our history to promote our town. Maybe even open a museum. A long-postponed project. He put me in charge, maybe because of my job I'm in touch with a lot of tourists. It doesn't pay much, but it will cover your rent and give you some pocket money.\"\n\n\"I'm not a professional writer. Besides I don't even live here,\" Landon said. \"Shouldn't someone from the community write about the town? A journalist would be more qualified than me.\"\n\n\"Janice Cooper? The Queen of mean? No, thank you. She was a bully in high school and she hasn't changed much since then.\"\n\nShe saw the confused look in Landon's face and explained.\n\n\"She is the editor of the local newspaper,\" Grace lowered her voice and added. \"People don't like her at all.\"\n\nGrace continued, \"Look, Landon, we don't need a book. Just a short, coherent narrative we can use part of on a website, a brochure, or an advertising program. I think an outsider will be objective and produce a narrative appealing to all people, not just locals. We want fresh, unbiased eyes. I've been thinking about hiring someone, but why don't you take a stab at it?\"\n\nLandon took a look into Grace's eyes, pondering the idea. She had a puppy begging look.\n\n\"I don't want to pressure you,\" Grace said, obviously sensing his hesitation. \"So say no if you're not ready.\"\n\nIt was impossible to say no to Grace. She was a force of nature. Besides, he needed the money.\n\n\"Where would I begin?\" Landon asked, a kernel of interest building inside.\n\n\"Probably the best place to start is the room in the community center we call a museum. There are old newspapers, photos, artifacts, and God knows what else. Things are just piled up there sadly. Then, maybe you can talk with Marcus Carter. He's a descendant of Middletown's founder, Fergus Carter. There are rumors that Fergus kept journals. Marcus might have them if, indeed, they do exist.\"\n\nGrace's proposal was the last thing Landon had expected. But, he needed something that would absorb him. Something that would help him to take his mind out of his own problems. History had been his favorite class in high school.\n\n\"I'll give it a try,\" he finally said. \"I can't promise anything remotely coherent.\"\n\nGrace grinned. \"I'll try to tone down my expectations.\"\n\nTheir lunch arrived and they dropped the subject. Landon took a bite and exclaimed, \"This is really good.\"\n\nHe couldn't remember when anything had tasted so good.\n\n\"Tony, the chef, creates wonders in the kitchen,\" Grace said, and they both concentrated on their meals.\n\nCHAPTER 11\n\nOnce they finished lunch, Landon followed Grace to the community center.\n\nPeople tried to come close to meet and greet, but as she promised, Grace kept them away saying they were in a hurry.\n\nLandon needed something to keep his mind busy, a diversion. Having no goal was like looking into an abyss. He needed to start living again. He owed his fellow soldiers more than just surviving.\n\nBut it was so damned hard.\n\nA salt-and-pepper haired, wiry man rose from a desk in a corner and greeted them as they entered the place.\n\n\"Landon, meet Jonas Hickok,\" Grace said introducing a man in his late sixties. \"He manages the place. Jonas, this is Landon Petersen and his dog, Scout. He is living in Marcus's cabin.\"\n\nAt the sound of his name, Scout barked and wagged his tail.\n\nJonas straightened and held out his hand and Landon took it. \"Really pleased to meet you, Sir,\" he said. It was a firm shake, and Landon warmed to his friendly grin.\n\n\"Thank you,\" Landon said.\n\n\"Jonas, I wondered if you could show Landon the museum,\" Grace said making air quotes. She turned to Landon. \"I have to show a house. I'm leaving you in good hands. Jonas can drive you and Scout back to the cabin if I'm late.\"\n\n\"Okay. Don't worry, I think we can find our way back.\"\n\nGrace could tell Landon was not happy to be left alone with a person he had just met.\n\n\"Call me if you need anything.\" And then she was gone.\n\n\"Is she always like this?\"Landon asked.\n\nJonas Hickok grinned. \"Pretty much. Grace McAllister is like the wind, always in movement.\"\n\n\"She hired me to write a short history of Middletown.\"\n\nJonas nodded. \"She has been looking for someone for a while. Are you a writer?\"Jonas said with a twinkle in his eyes.\n\n\"Nope. A soldier,\" Landon admitted.\n\n\"A fellow soldier,\" Jonas looked at Landon with new respect. \"I'll show you around.\"\n\nJonas walked to the left and stood at an open door while Landon looked inside. \"This is our library and computer center.\"\n\nLandon peered inside. Large windows were framed by cheerful drapes. Books filled shelves that lined one wall of the room. Several worn but comfortable-looking chairs were scattered in front of them.\n\n\"Nice,\" he said.\n\nThen Jonas led the way across the hall to a door and opened it. \"And the museum,\" he prompted. \"We're just beginning to put it together. We've been spending the past several months asking for contributions. Not money, but letters, photos, old newspapers, vintage clothing. Things people usually keep in their attics or their barns. Right now it's just scattered pieces of our history. I've been going through it, but I'm no curator. In fact, I'm just a volunteer who hangs around here.\"\n\nLandon nodded.\n\n\"Retirement was driving me and my wife crazy. One thing led to another, and before I knew it I was hooked like a fish,\" Jonas explained with a laugh.\n\nThe big room was crammed with artifacts from rifles to old mining equipment. Lots of wooden furniture. Daguerreotypes and dusty photo albums. Newspaper-size bound volumes sat in a pile on a table. Other tables held scrapbooks. Old fashioned clothes hung in a wardrobe.\n\nUnopened boxes filled another table, with even more boxes tucked underneath. Landon glanced through several of them: menus from the '20s, a bill promoting a traveling circus in 1888, and several wanted posters from around the same time.\n\nAnother box was filled with school pictures that looked as if they went back as far as the late nineteenth century. A stack of high school yearbooks was in the corner.\n\n\"Any of it cataloged?\"\n\n\"Afraid not. We trying to pile similar things together. We keep the oldest and most fragile things in that cabinet. The mayor says there's no money for a real museum or a curator.\"\n\nLandon looked around helplessly. This wasn't a museum. It was a disaster zone. It would take months to find anything and more months to get something that looked like a museum into shape.\n\n\"You can spend as much time as you need here,\" Jonas said. \"It'll be good to dust off the stuff. Just handle it with care.\"\n\n\"Grace said something about talking to... a descendant of the founder of the town... Marcus Carter?\"\n\n\"You could try,\" Jonas scratched the back of his head. \"He might talk with you. He might not. It's worth a try. He's a bit... difficult.\"\n\n\"Do you know him?\"\n\n\"No one really knows Marcus Carter,\" Jonas said. \"He's not the most social person in Middletown.\"\n\nThat wasn't encouraging. He could relate with the man's desire to hide from the world. However, it was time to stop hiding from the rest of the world. And to do that, he had to join it. Prying into the town's history seemed a safe way of doing it.\n\n\"Do you know where he lives?\"\n\n\"Everyone knows where the old man lives, a big mansion in Carter Avenue and Highland street. You can't miss it.\"\n\nJonas left Landon alone in pursuit of other volunteer duties.\n\nLandon spent the rest of the day looking through boxes at the community center and sorting the material on different tables.\n\nScout lay beside him, his head resting on his paws, his tail wagging occasionally, apparently to remind Landon that he was there. He didn't have to be reminded. In a few short weeks, he had become his lifeline.\n\nLandon found very old newspapers, way before The Middletown Gazette. Some were little more than a single page. The yellow pages presented a glimpse of the town: the marriages, the births, and the deaths. It was like filing through snapshots of history.\n\nHe snapped pictures with his phone of everything related to his task. He planned to work on them later at the cabin.\n\n\"Hi, again\" came a voice from behind him, and he whirled around. Jonas stood in the doorway. \"I hope I didn't startle you,\" he said. \"You looked completely absorbed.\"\n\n\"I was,\" Landon said.\n\n\"You must be exhausted,\" he said. \"You've been working for hours. I'm sorry but I have to close the place.\"\n\nLandon closed the bound volume he was reading. \"It's probably time for me to go back to the cabin and feed Scout anyway.\"\n\n\"Grace asked me to drive you home. I don't want to catch hell from her\"\n\n\"I think I prefer to walk. It's just a couple of miles. Scout and I need the exercise.\"\n\nCHAPTER 12\n\nThat evening, Grace greeted her brother, Steve and his wife Diana with a huge hug.\n\n\"You look happy,\" Steve said to his sister.\n\n\"I am happy.\"\n\n\"Well, that's a refreshing change. You have been moody lately.\"\n\nGrace ignored her brother's bait, and asked, \"Remember the new resident of the cabin?\"\n\n\"Yes, Derek's friend, Landon?\" Diana said.\n\n\"That's him,\" Grace said with a smile. \"I like him.\"\n\nSteve laughed, \"You like everyone.\"\n\n\"There are a few exceptions,\" Grace said squinting her eyes.\n\nHer brother nodded. \"Point taken.\"\n\n\"What is he like?\" Diana asked Grace.\n\n\"Quiet. Grieving. Jumpy.\"\n\n\"Do you know what happened to him?\" Steve asked.\n\n\"He was a soldier. He and Derek were army buddies. He has PTSD,\" Grace explained hoping she wasn't breaking any confidence. \"Please, don't tell anyone. He doesn't need people looking at him as if he was a basket case. He asked me for something to do and I gave him a job.\"\n\n\"Grace... not another 'lost puppy', please,\" Steve exclaimed pinching the bridge of his nose.\n\n\"He volunteered to write about Middletown's history.\"\n\n\"Volunteered?\" Steve shook his head with a smile.\n\nGrace shrugged innocently. \"He wanted to do something to pay for the cabin. He's short of money. We need a history of Middletown ready for Founder's Day. It seemed... fortuitous, don't you think?\"\n\nSteve rolled his eyes. \"You can't fool me, Sis. I can see your fingerprints all over this.\"\n\nGrace smiled. \"So what? He seems lost, Steve. Really lost. He could use a friend.\"\n\nSteve smiled at his sister. \"What I said, lost puppy. I love you, Sis, you and that huge heart of yours.\"\n\n\"Me, too,\" Diana piped, squeezing her sister-in-law hand.\n\n\"Thank you, guys, you know how to make a woman feel better.\"\n\n\"Just be careful, Sis. Men, particularly ones with sad stories, are your weak point,\" Steve pointed out. \"I don't want to see you heartbroken again.\"\n\nGrace couldn't take her mind off Landon. He looked so fragile and yet he had the strength to plunge through whatever pain he had. He'd traveled to a strange town with a determination to reclaim his life.\n\nHe shouldn't be alone in this fight. He wouldn't be alone.\n\nCHAPTER 13\n\nLandon woke up and looked at the morning sun coming in from outside.\n\nAnother night without nightmares. He rubbed Scout's fur.\n\nScout stood and wagged his tail. \"Want to go out?\" he asked.\n\nThe tail moved faster.\n\n\"Time to get up,\" he said. He was hungry. Appetite was something else that had been missing. Dr. Michaels would be proud. He should write about that in his journal.\n\nLandon slipped into jeans and a T-shirt, then went to the back door and opened it. Scout dashed out into the woods.\n\nHe stood there and watched as the dog explored the area in the back, did his business and returned.\n\nThe lake was visible through the trees. The scent of pines perfumed the air. A few wildflowers peeked up out of the ground.\n\nHe sat down, opened his laptop, and downloaded the photos he took at the museum to start working.\n\nLandon read and wrote for a few hours. He had a sheet of paper where he had drawn a timeline with short notes above each date and event he thought might be important. A lot of the early years revolved around the Carter family. However, there was a blank space at the very beginning. The earliest news was about Fergus Carter supporting the statehood. A title in an old newspaper read, \"Town's hero.\"\n\nHis hometown newspaper with a similar title flashed in his head.\n\nSuddenly, the sparks in his head were rising with a panicky feeling that was impossible to ignore. He couldn't stay in the chair, and he couldn't focus on the images in front of him. His shirt felt too close at the neck. He had trouble catching his breath. The walls got closer, the ceiling lower. His heart felt like a sledgehammer hitting his chest.\n\nHe went out the main door into the open air, where he could begin to breathe.\n\nHe took off his shirt and sat down on the grass breathing through his mouth. The cold morning air brought him back to reality.\n\nScout lay down at his side. Steve scratched his ears. \"Did I scare you? Don't worry, I'm okay now.\"\n\nHis thoughts turned to Grace and how she had handled his flashback when they were at the restaurant.\n\nHis phone rang startling him. Landon looked at the screen. It was Grace. Spooky.\n\nAfter the preliminaries, she got to the point. \"Remember Marcus Carter, the one who might have original journals from the 1850s?\"\n\n\"Yes, Jonas and I talked about him. He gave me his address.\"\n\n\"Oh, goody. I was calling you to give you his phone number.\"\n\n\"I have a question for you, how do I approach Mr. Carter? Jonas said he might be reluctant to talk to someone.\"\n\n\"Quite honestly, I don't know. I talk with his secretary most of the time. An old vinegary spinster. If you try to set a meeting through her she'll say no,\" Grace opined. \"Marcus Carter had retreated from nearly everyone in the last years. But he's very proud of his family roots. If he knows about the project he might be willing to help. We'll talk more about it tonight.\"\n\n\"Tonight?\" Landon didn't remember making any plans with her.\n\n\"Around six,\" Grace said in a matter-of-factly tone. \"I'll cook for you and we'll talk more about your work and strategies to reach Marcus Carter. Don't worry, I'll bring everything I need. I hope you like pizza.\"\n\n\"Yeah, I love pizza. Who doesn't?\" Suddenly Landon was hungry and remembered he didn't have breakfast yet.\n\nHe wasn't sure whether he was ready for it, but Grace McAllister was the kind of person who didn't take no for an answer.\n\n\"Landon, are you really okay with this? I don't want to impose myself.\"\n\nLandon appreciated her words.\n\n\"It's fine,\" Landon said. He stood there for a moment. It wasn't fine at all, but he needed the job and Grace had been very helpful and respectful so far.\n\nDespite any misgivings, he was hooked on the job. One of his character flaws was an obsession to finish whatever he started.\n\nCHAPTER 14\n\nLandon looked at his reflection in the mirror.\n\n\"Just breathe. Why are you so nervous?\" Landon said aloud. Scout came closer. \"It's not a date. You can do this.\"\n\nLandon's wardrobe was limited, and that was an understatement. Three pairs of jeans, one pair of black pants, two sweaters, three T-shirts, and several shirts. His choice of footwear was a pair of walking shoes, a pair of sneakers, one pair of well-worn loafers, and a pair of boots.\n\nSuddenly, he saw blood on them, even when they were clean. The flashes in his brain turned into little movie clips. His breath felt trapped in his chest. Scout came closer and made some noises to let him know he was there.\n\n\"You're in the cabin. You're safe here\", he told himself, taking long, slow breaths.\n\nHe chose a pair of jeans, a black shirt, and loafers. He stared at himself in the mirror. Really looked for the first time in months. His hair needed a cut. Badly. He was thin, too thin. His cheeks were hollow.\n\nScout watched every movement; following him from room to room as if afraid someone would snatch him.\n\n\"I'm okay,\" Landon reassured him.\n\nThe doorbell rang and Scout barked. \"It's a bit late for that,\" he told Scout. \"You're supposed to bark before the bell rings.\" He hurried to the door and opened it. Grace stood there, a smile on her lips, and two big paper bags in her arms. She wore her dark brown hair simple and sleek. No makeup that he could see.\n\n\"Hi, Landon,\" she said.\n\n\"Please come in.\" They went inside to the kitchen, and Grace placed the bags she was carrying on the solid wooden table.\n\n\"I'm really not stalking you,\" she said taking the items out of the bags.\n\n\"Are you sure?\" he asked with a slight smile. Humor. That was new. He had to make sure to write that down in his journal.\n\n\"Your buddy Derek will vouch for me.\"\n\nThe dog barked and wiggled his tail at her.\n\n\"Scout vouches for you too.\"\n\nGrace smiled, and scratched the dog's ears, \"Of course, he does. He's a very clever dog.\"\n\n\"Do you need any help?\" Landon asked her.\n\n\"No, thank you. Relax. I've been able to handle myself pretty well in the kitchen since I was a teen.\"\n\nShe took an apron from one of the bags. It said, 'You may kiss the cook'.\n\n\"It's just an apron. Don't get any ideas,\" she warned him with a smile.\n\nGrace made small-talk about the local gossip, while she mixed the ingredients. Landon listened and watched her graceful dance from fridge to table, and finally to the oven. Some minutes later, a wonderful smell filled the cabin.\n\nThe more they talked the more Landon felt at ease with her. Grace was a gentle, easy-going person. There was something about her that brought light to his darkness.\n\n\"Could you fix us something to drink, Landon?\"\n\n\"I don't keep alcohol in the cabin. It doesn't mix well with my medications. Would you care for a glass of milk, juice or water?\"\n\n\"Juice is fine. Thank you.\"\n\nHe set down two tall glasses on the table.\n\n\"My homemade pizza is my brother Steve's favorite meal. I hope you like it. Peggy, his first wife, loved it too.\"\n\n\"Your brother was married before Diana?\" Landon asked.\n\nGrace took a sip of milk and nodded. \"Yes, Peggy, his first wife, was shot in a mugging and died. She was an amazing person. She was a therapist. The whole town loved her.\"\n\n\"I'm truly sorry to hear that.\"\n\n\"Thank you, I moved in with my brother when it happened. He was crushed. I was afraid he might do something stupid.\" She made a pause to compose herself and quickly added, \"I'm happy he found love again. Diana is a great person. She made Steve happy again.\"",
        "Grace decided to change the subject.\n\n\"Jonas said you stayed at the museum until late. You piqued my interest,\" she said. \"Did you find anything interesting?\"\n\n\"I found bits and pieces of Middletown's history. Nothing solid yet. The Quileutes, the Nisqually, and the Chehalis lived in this area when a large caravan of settlers came around 1853 crossing the Oregon Trail. Their leader was Fergus Carter. They ended in an unnamed valley, where they finally settled down. Fergus Carter built Middletown from scratch. That's all I got from the early days.\"\n\n\"You discovered all this in just one day of research?\" Grace stood to check on the pizza. She turned off the oven, took it out, and set the steaming pizza in the middle of the table. It was covered with a mountain of pepperoni.\n\nLandon shrugged. \"I still have a lot of work to do. I was thinking about scanning some of the old pictures, we could use them for the website.\"\n\n\"That's a great idea. You can ask Jonas to use the computers at the community center.\"\n\nGrace cut the pizza into slices and had a spatula slid under the first piece to help lift it and place it on Landon's plate.\n\n\"I'm so pleased you're interested in the history project. You took a weight off my shoulders.\" She talked as if he was doing her a favor and not the other way around.\n\nLandon lifted the slice of pizza in the air, its cheese dangling in a long string. \"I'm glad I could be of some help.\"\n\nGrace took one slice for herself and gave it a bite.\n\nThe sun was going down, and vivid scarlet, pink and coral ribbons crossed the sky, and blessed the mountain.\n\n\"Do you mind if I ask you what happened to you?\" Grace asked Landon and took another bite. \"You don't need to answer if you don't want to.\"\n\nLandon hesitated. Grace didn't push him for an answer and focused on eating her pizza.\n\n\"You know I have PTSD,\" he said all of the sudden.\n\n\"I read about it on the internet. Post-traumatic Stress Disorder happens to people who have experienced or witnessed a traumatic event. Derek had that too when came back to Middletown.\"\n\nLandon nodded.\n\n\"If you want to talk about it, I'll listen, but if you don't, we can talk about any other things. I still have a lot of gossip to share. My brother always says I can talk someone's ears off,\" Grace offered with a charming smile.\n\nLandon smiled.\n\n\"Doctor Michaels, my therapist, says that talking about the traumatic event over and over again is part of the healing process. Exposure therapy I think he called it.\"\n\nLandon really hated to admit he'd needed help. But, for some reason, he didn't mind talking with Grace. There was something special about her, something bright and luminous. She was a free spirit, forthright and fresh. A ray of sunshine in his life.\n\n\"I got Scout from a group specializing in matching dogs with veterans. Derek arranged it.\"\n\n\"Your dog is amazing,\" Grace said smiling at Scout. He was sitting beside Landon drooling at the smell coming from the pizza. Landon gave him a small piece. Then he stared through the large window, remembering.\n\n\"My whole team except for one man was killed during an attack,\" Landon said, making the words bald and flat.\n\n\"The lone survivor was Derek, right?\" Grace asked.\n\nLandon nodded. \"Derek's face was disfigured. At first, I thought he was dead too. There was so much blood and his face was split open. I could barely stop the bleeding. I was injured myself.\"\n\n\"I'm truly sorry. I can't even imagine what you went through. You lost your friends...\" Grace took his hand across the table.\n\n\"Not friends,\" Landon corrected her sharply. \"My team.\"\n\n\"Not friends,\" Grace repeated dubiously.\n\n\"My team,\" Landon repeated. \"We were a team. A family. We would've died for each other, but they were never supposed to die for nothing.\" Landon looked away, vaguely conscious of having said too much, but he couldn't help adding quietly, \"And not without me.\"\n\nThere was a little awkward silence. The shadows inside were still too strong, the memories too recent.\n\nWhite lights. Shots. Screams. His screams. More shots. Pain. Blood everywhere.\n\n\"No,\" he heard himself screaming.\n\nHe was only vaguely aware of someone touching him, talking to him, but he couldn't understand the words. A loud bark, a warm furry body pressing against him...\n\n\"Landon. Breathe. Take a deep breath. Breathe,\" the voice commanded. Despair flooded him.\n\n\"Breathe.\" The voice was louder, too strong to resist.\n\nAir rushed in, then out.\n\n\"You're doing great,\" Grace said quietly, with an impossible gentleness in her voice, her hand in his. \"I didn't mean to... I'm so stupid... I should learn to keep my mouth shut.\"\n\nShe hugged him tightly and felt how his whole body grew stiff, taut with tension.\n\nThe voice whispering in his ear was gentle. \"You're safe.\"\n\nLandon surprised himself hugging Grace back. It relaxed him enough that it almost felt natural. Scout tried to crawl up on his lap pushing his way with his nuzzle between them, making whining noises.\n\n\"I'm sorry,\" Landon apologized.\n\nGrace spoke into his shoulder, \"I'm the one who is sorry. Please, Landon, let me help you. I want to be here for you any time you need me.\"\n\nLandon leaned back breaking the hug, his cheeks a little flushed. He scratched the dog's ears.\n\n\"Do you feel the love in the room too?\" he asked Scout trying to make a joke.\n\nGrace laughed through her tears and kissed Landon's cheek softly before returning to her chair.\n\nThey finished the pizza in silence. Grace took care of the plates and then she said, \"I think I should leave.\"\n\nLandon didn't say anything. He just stood up and walked her to the door.\n\n\"Good night, Landon,\" she said. \"I had a great time. I am truly sorry if I triggered something. Please don't hold it against me. My brother says I was born with my tongue disconnected from my brain. Call me if you need anything. Day or night.\"\n\n\"Thank you. I hope I didn't scare you off.\"\n\nGrace placed her hand on his arm and rubbed it softly. \"You didn't. You won't scare me... I can handle whatever you're comfortable sharing. I want to be your friend.\"\n\n\"I'll keep that in mind. Thank you.\"\n\nAfter a searching glance, Grace turned and Landon watched her stride to the car.\n\nHe stepped inside and leaned against the door. He didn't look out the window, but he sensed she was still there outside.\n\nIt was another moment before he heard the car startup.\n\nLandon sat in a chair and thought about the unusual evening. The flashback with all its terrors and Grace hugging him. That brief connection. So brief and yet... so real.\n\nHe did his night routine, went into the bedroom, and turned the light off. But he doubted he would get much sleep.\n\nCHAPTER 15\n\nLandon felt Scout licking his face and pushing him with a paw trying to wake him up. He realized he was having another nightmare.\n\nThe sun hadn't come up yet. He got dressed and they headed for the mountain. He was relieved to note it was easier today than it had been before. The night sky was so pure he ached with the beauty of it.\n\nThe sun came out from behind the mountains by the time he got to the top.\n\nHe and the dog sat there, trying to erase the last traces of his bad dream. Well, who knew what Scout was thinking. He cocked his ears at the chirping of a bird or a rustle of a squirrel or rabbit, but he didn't move from his side.\n\nLandon still felt shaky.\n\nWhat would Grace think of him? For some reason, the answer to that question was important to him.\n\nAfter his father died when he was fourteen, his mother waitressed in the only coffee shop in town. Tips were rare, and they mostly lived on leftovers from his mother's work.\n\nGrowing up Landon had been so intent on leaving his hometown that he had studied every spare minute he had. Every moment, that was, that he wasn't helping his mother raise two younger sisters.\n\nThat reminded him. He should call his mother. He had promised to do that when he reached Middletown, but so much had happened so fast he had barely taken a breath. He punched in his mother's number on the satellite phone he always carried with him. It was answered almost immediately.\n\n\"Hi, Mom,\" Landon forced cheerfulness into his voice.\n\n\"Hey, baby boy. It's so good to hear from you. I was worried. How is everything going? Did you meet with Derek?\"\n\n\"It's going well. Yes, I've met with Derek, and he helped me to get into a program for guys in my condition. People in Middletown have been very helpful. I'm living in a cabin outside town. They asked me to write a short history of the town to help pay for the rent. I might be able to send you some money soon.\"\n\n\"That's the last thing I care about,\" his mother said. \"I saved some of that money you sent when you were deployed. We're fine, Landon. Josie's husband got a job as a mechanic at the mines. Thank God, he doesn't have to work in them.\"\n\n\"What about Callie? How is she doing?\"\n\n\"Honor student,\" his mother said. \"Says she wants to follow your path. She is thinking about trying for one of those Army ROTC scholarships, as well. Sure would be fine to have two college graduates in the family.\"\n\nLandon wasn't so sure he wanted his younger sister to go into the army, but it wasn't his choice to make.\n\n\"That's great,\" he said with as much enthusiasm as he could muster.\n\n\"When are you coming home?\"\n\n\"You know there's nothing there for me,\" Landon said. Sadness ran through him like a river that had frozen up.\n\nExcept for his family, his hometown was the last place he wanted to be.\n\n\"Okay, baby. I understand. Take your time and get well. We'll be here for you if you need us.\"\n\n\"I know, Mom. I love you.\"\n\n\"We all love you too, Landon. Focus on getting well. Take care of yourself and don't worry about us, we're doing fine.\"\n\n\"Love you too, Mom. Give my love to my sisters too.\"\n\nHe hung up, feeling a pang of familiar guilt. He should be helping his family. He couldn't even send money home to assuage that guilt.\n\n\"Damn,\" he said to Scout.\n\nThat was one of the reasons why he had so quickly wrapped himself in Middletown's history. It allowed him to avoid the present.\n\nLandon and Scout went back to the cabin. He sat down at the table and started typing at the laptop, with a cup of coffee. He was so immersed in his work that it took him a while to realize his phone had been ringing. He checked the big clock above the backdoor. It was way past noon.\n\nHe checked the screen. It was Grace, of course. He decided to take the call.\n\n\"Hello, Grace. What can I do for you?\"\n\n\"Hello, Landon. I'm just checking on you. I hope last night wasn't too much too soon. If so, I apologize. I didn't mean to bring out any bad memories. Please, don't be mad at me. I meant well,\" Grace said talking nonstop.\n\nShe made a pause to breathe and Landon took a chance to speak.\n\n\"Grace... Grace... breathe. It's okay. I'm okay. I'm fighting a battle of a different kind and you were there at my side fighting with me. I'm actually grateful.\"\n\n\"Really? Do you really mean it?\" her voice was shaky and Landon could tell she was about to cry.\n\n\"I do. I think it was good for me to get that out.\"\n\nLandon heard a sob on the other side of the line.\n\n\"Steve always says I talk too much and I was afraid I had pushed you to talk about something you weren't ready and then when you had that...\" she was talking a mile a minute again.\n\n\"Grace I feel tremendous respect for you and the way you stayed and hung in there.\" He interrupted her again. \"Thank you for last night, especially for looking after me so well... and the pizza was delicious.\"\n\n\"Would you like to get together again? I thought you might need some company, but then you said you liked to be alone, so I don't know if I should ask you or not,\" Grace kept talking without a pause. \"Not today, of course...\" She made a pause, \"Unless you want company, in the case I would be glad to...\"\n\n\"Grace, I was planning to write all day and then do a bit more research at the museum tomorrow. Do you think you could pick me up and drive me to the community center tomorrow morning?\"\n\n\"Yes, of course. What time?\"\n\n\"I don't sleep much so any time in the morning would be good.\"\n\n\"I'll be there around nine. Have a great day, Landon.\"\n\n\"You too, Grace. And thanks for checking on me.\"\n\nWhen she hung up Landon couldn't help but smile. The smile came so naturally that it surprised him.\n\nConflicting emotions bombarded him. There had been some very good moments and some very bad ones on his social adventure.\n\nThe good had been the food, the conversation, and above all Grace.\n\nThe bad... Best not to think about that.\n\nCHAPTER 16\n\nGrace kept looking at her phone. She liked Landon. She admired his courage. Even worse, she was attracted to him and far more intensely than she'd been to any man in a very long time.\n\nLast night, when she got home, Grace did something she never thought she would do, she went online and ran a search. She shouldn't have. It was none of her business and Landon was entitled to his privacy, but she couldn't help it.\n\nSeveral articles came up when she searched his name. One article mentioned he and Derek were the survivors during a terrorist attack in Afghanistan. There were some paragraphs dedicated to Derek's injures. She realized how close Derek and Landon were to dying that day.\n\nShe skimmed through the rest of the articles, but most of them were a repetition or an update of the same news.\n\nGrace continued her search and then found a small article on a news blog from Landon's hometown. \"Darla Cayley and Landon Petersen had broken their engagement. Three weeks after Landon Petersen returned from Afghanistan as a decorated hero, Darla Cayley announced the end of their engagement. The announcement came as a surprise since both of them had been dating for five years. Ms. Cayley wrote a Tweet saying that they had grown into very different people.\"\n\nGrace took a long, deep breath. This was probably one of the reasons why Landon left his hometown. Imagine coming back from hell, looking for the emotional support and assistance of your loved ones, just to find your fianc\u00e9e is breaking up with you because of your condition.\n\nIt had taken a lot of courage for Landon to deal with the pain to move to a whole new town, having PTSD. It was a true test of his inner strength.\n\nHis flashback had been terrifying, but Grace admired how he had fought to get out of that dark place in his mind.\n\nThen she had had that sudden urge to hold him, to try to erase some of the pain from those very wide dark eyes. She couldn't help but hug him.\n\nShe had no intention of sharing the new information about his fianc\u00e9e with anyone else, not even Steve, Diana, or Derek, although the last probably knew. Grace had intruded into something extremely personal and painful, more painful than she could have imagined.\n\nShe wanted to help him heal somehow, but the truth was she didn't know how to achieve that. Wishing was not enough.\n\nCHAPTER 17\n\nGrace picked up Landon the next morning at nine. He was already waiting for her outside the cabin playing catch with Scout.\n\nGrace drove in silence for a while. She was trying to order her ideas to be able to express her thoughts in the best possible way.\n\n\"How are you feeling this morning?\" she asked.\n\n\"I'm okay, I guess. Thanks for offering to drive me to town.\"\n\n\"I'm happy to help in any way I can. Tomorrow is Friday,\" she said, trying to think of how to say what she wanted to say without saying too much.\n\n\"Yes, so?\"\n\nGrace took a deep breath and tried again, \"I want to drive you to Seattle.\"\n\nLandon didn't say anything for a while. How did she know he and Derek went to Seattle on Fridays?\n\nWhen he finally spoke his voice was soft.\n\n\"Why?\"\n\n\"Because I want to be part of your support network. I want to be there for you and help you, and to do that I need to know how.\"\n\n\"You are already helping me. You find the perfect place for me. You found me a job to keep me busy and pay the rent. You check on me. You even cooked a pizza for me.\"\n\n\"Yes, but I want to do more,\" Grace shook her head, \"I want to do better. The other evening when you had that...\"\n\n\"Flashback,\" said Landon.\n\n\"Right, when you had that flashback I didn't know what to do. I was playing by ear. I was afraid of doing or saying the wrong thing and making things worse.\"\n\n\"You did great. You did exactly what I needed,\" Landon turned his head to look at Grace.\n\n\"Well, the thing is if I'm going to be part of 'team Landon', I want to know more about your... condition and how to deal with it.\"\n\nGrace looked at Landon out the corner of her eye and kept talking, \"I want to know what helps and what doesn't.\"\n\nLandon remained silent for a couple of minutes.\n\n\"You want to talk with my doctor.\"\n\n\"Well, it doesn't have to be your doctor. I want to talk with someone who can give me some pointers, some guidelines. Do's and don'ts\"\n\nAgain, Landon took his time before saying anything.\n\n\"Team Landon, huh?\" he surprised himself by smiling.\n\nGrace smiled back at him. \"Well, it's just a name I came up with. You have Derek, Bella, your doctor...\"\n\nScout barked.\n\n\"Don't forget Scout,\" Landon turned around to scratch his dog's ears.\n\n\"Of course not! The thing is I want to be part of the group of people, and dog, you can count on,\" Grace said with determination.\n\nLandon took his time before saying anything.\n\n\"You'll have to pick me up at eight tomorrow. Are you going to talk with Derek or do you want me to do it?\"\n\n\"I will,\" Grace said with a huge smile on her face.\n\n\"Grace?\" she turned her head to look at Landon.\n\n\"Thank you.\"\n\nCHAPTER 18\n\nGrace left Landon at the community center. The door was unlocked, and he walked through the entrance to meet Jonas. They did some small talk and Landon went inside the room dedicated to the museum again. He was so immersed in the work he was doing that he skipped lunch again.\n\nWhen he came out it was almost dark. Jonas greeted Landon carrying a large pan of chicken wings.\n\n\"Are you going to leave without meeting the crew, Landon? Come and join us,\" a voice said behind his back.\n\nLandon turned around to meet a group of men who were sitting around a round table.\n\n\"Landon, allow me to introduce you to our Thursday poker crew, John Harding, Judge Bill Anderson, who was kind enough to bring the beer tonight, and Mayor Simon Thompson,\" Jonas said, making the introductions. Landon shook their hands.\n\n\"He likes to be called, Mr. Mayor,\" Bill Anderson said with a laugh.\n\nSnacks were already on the table, including several bottles of beer and great-looking dip and chips.\n\n\"Do you play poker, Landon?\" asked the man who had been introduced as John Harding.\n\nLandon nodded and sat around the table and he was given a bowl full of M&amp;Ms candies.\n\n\"Playing poker for real money is illegal in our state, and we don't want Judge Anderson to put us in jail,\" John Harding explained. \"So we play just for fun. Green candies are worth $25, the blue ones $50, the brown ones $100, the yellow $1000, and the red ones $5000.\"\n\nLandon asked, \"Any rules?\"\n\n\"Nope. Dealer picks the game. Ante up a green candy,\" Simon said from his seat next to Landon. \"Landon, as our newcomer, is the dealer.\"\n\n\"Mexican stud,\" he said.\n\n\"Ah...could we have a ringer here?\" the judge asked to no one in particular.\n\nLandon won the first game. The players saluted him with their beers and the dealer changed.\n\nLandon won the second game too.\n\nVery soon it was obvious that Landon could play a mean poker game.\n\n\"Beginner's luck Landon?\" asked Bill Anderson after losing another hand against him.\n\n\"I used to play a lot in Afghanistan,\" Landon replied. It didn't hurt as much to say it now.",
        "\"Landon is a decorated vet. Purple heart,\" explained Jonas. \"He's working in the museum and writing a short history of Middletown.\"\n\nLandon wondered how Jonas knew about the Purple Heart.\n\nThe mayor nodded. \"Grace McAllister informed me about the job. I must say she's really impressed with your work so far, Landon.\"\n\n\"Thank you, Mr. Mayor.\"\n\n\"Hey, I'm just Simon here.\"\n\n\"So any progress contacting Marcus Carter?\" Jonas asked Landon while he dealt cards.\n\n\"I haven't tried it yet. I want to know more about Middletown's history first,\" Landon replied. \"It will give me a better idea of what questions I have to ask him.\"\n\n\"John, your son is leasing the restaurant building from Marcus. Maybe he could speak with old man Carter in Landon's favor?\" Jonas suggested.\n\n\"Not if he keeps winning like this,\" John Harding joked. They all laughed. \"Seriously, I don't think Marcus would like it if I speak on Landon's behalf.\"\n\n\"He's a stubborn old man, that's for sure,\" said Bill Anderson dropping two brown candies on the table. \"I call and raise two hundred.\"\n\n\"You can never be sure how Marcus Carter is going to react,\" agreed the mayor.\n\n\"He's a better person than Maximilian was,\" commented John Harding. \"Maximilian could be a conniving bully. I hate to speak ill of the dead, but Middletown is a better place since he died.\"\n\n\"I agree. Marcus is very different from his brother, that's for sure. He startled everyone when he resigned his seat at the Town Council when his brother died. He has become a hermit since then,\" the mayor said. He took a long swallow of beer and helped himself to the chips and dip.\n\n\"A beer, Landon?\" asked Bill Anderson.\n\nLandon shook his head.\n\n\"Army, navy, or air force?\"John asked Landon changing the subject.\n\n\"Army,\" he replied.\n\n\"Bad stuff?\" asked the mayor.\n\nLandon nodded.\n\n\"Hey, don't push the newbie,\" Jonas warned the group.\n\n\"I was not prying, Jonas,\" the mayor said. \"Listen, Landon, if you need to talk, you're not going to get a more sympathetic audience than us. Jonas fought in the Iran-Iraq war in the eighties and I saw some action in the Iraq war in 2003.\"\n\n\"I still have flashbacks. There was a time when people in Middletown thought I was going to go all Rambo and torch the town down,\" Jonas said with a laugh.\n\nThey all laughed.\n\n\"It's true,\" said the mayor.\n\n\"Thank you, I'll keep it in mind. Has anyone seen Fergus Carter's journals?\" Landon asked changing the subject.\n\nBill Anderson shook her head. \"His niece, Nadine bragged about having seen the journals.\"\n\n\"I asked Molly about them once, she was very non-committal. She never had a good relationship with her father,\" John Harding added.\n\n\"Maybe there's something in them that he doesn't want someone to see,\" Landon surmised.\n\n\"After a hundred and fifty years?\" Jonas opined.\n\n\"Or maybe they don't even exist,\" Bill Anderson added.\n\n\"That could be true, too,\" The mayor admitted. \"However, Marcus has never denied their existence.\"\n\nThey played for another hour. Landon won more than he lost, and his bowl of M&amp;M's was heavier when they quit. They all stopped to tell him how happy they were another poker player joined them, and if he needed anything to call one of them. Landon could tell they truly mean it. He got everyone's phone number before leaving.\n\n\"Team Landon keeps growing,\" he said to Scout as he walked back to the cabin.\n\nCHAPTER 19\n\nHe had done it! He had played poker with a group of strangers without breaking down. He had stayed in the present. He hadn't had a blackout or a flashback. Dr. Michaels would be proud of him.\n\n\"Landon?\"\n\nHe looked up and met Grace's gaze. He didn't hear her coming. He winked at her.\n\nPleasure spread through her.\n\n\"I heard about your poker game. The mayor wasn't talking about anything else but you today.\"\n\nLandon nodded. \"They were all very kind to me. I enjoyed it.\"\n\n\"You're one gutsy man,\" she said. Then she opened the car's door. Scout jumped in and moved to the passenger's seat and then Landon slid inside.\n\nLandon closed the car door as he settled into the seat. Grace started the car and drove off.\n\nHe looked more relaxed than the last time. Their gazes met and suddenly her heart beat a little faster. Warmth flashed in her expression.\n\nNo! How could she feel like that? Landon wasn't ready for any kind of relationship. Neither was she. But even so, Landon wouldn't leave her thoughts.\n\n***\n\nLandon talked with Dr. Michaels for more than an hour while Grace played with Scout outside.\n\nThen, when he came out, Grace walked into the office. Dr. Michaels didn't seem surprised to see her. Her name had probably come out more than once during Landon's sessions.\n\nThey sat in opposite chairs and Dr. Michaels invited Grace to talk with a gesture of his hand, \"What can I do for you, Ms. McAllister?\"\n\n\"For a starter, you can call me Grace,\" she asked. \"I wanted to talk with you, Doctor, because I want to help Landon.\"\n\n\"That's good. Landon needs all the help he can get. Go on.\"\n\n\"I know he is a soldier and he has gone through a lot. He explained to me he suffers from Post-traumatic Stress.\"\n\nDr. Michaels nodded.\n\n\"I want to know what I can do for him.\"\n\n\"He told me about 'team Landon'.\" The psychologist smiled. \"A great idea. Now he knows he's not alone.\"\n\nGrace smiled wide.\n\n\"A married couple, friends of mine, went through a rough patch and they went to see a therapist. He told them they were all a team working together to save their relationship. So I thought that knowing that he had a support network would help him. The word team holds a special meaning for him,\" Grace explained. \"Landon needs people in his corner. People he can count on if he needs help.\"\n\nDr. Michaels looked at Grace for a while, studying her, finally, he said, \"This is not something you can start and then quit. It needs a true commitment. Landon needs to know that you're with him for the long haul.\"\n\nGrace straightened up in her chair. \"I understand, Doctor. Believe me, I am. I want to be the one person who doesn't abandon him,\" Grace said remembering the article about his fianc\u00e9e.\n\n\"You need to know what you're getting into and that you've got what it takes. This will unfortunately include being the target of anger you do not deserve. Sometimes you may be faced with a scared man, rocking and hugging his knees in the closet. Can you handle it?\"\n\nCould she handle it? She had handled his brother's depression when his wife died. She had handled her parents' death when she was a teen. She had handled being bullied at school. Landon needed her, she would not back down.\n\nGrace had nothing but determination when she said, \"Yes, I can.\"\n\nDr. Michaels held her gaze and he liked what he saw.\n\n\"Although Landon suffers one of the most challenging disorders, it doesn't mean he can't recover from his symptoms. He's getting better since the first time I saw him. His prognosis is really good. He can live a normal life with PTSD.\"\n\nGrace smiled. \"Can you give me any pointers?\"\n\n\"Be patient. Be empathetic. Be understanding. Listen without expectations or judgments. Make it clear that you're interested and that you care. Don't worry about giving advice. It's the act of listening attentively that is helpful, not what you say.\"\n\n\"People say I talk too much. It'll be a good exercise to listen.\"\n\nDr. Michaels smiled at Grace. He liked her.\n\n\"Do normal things with Landon. For example, he told me you cooked for him. You can set a regular dinner date once or twice a week. Creating routines can restore a sense of stability and security.\"\n\n\"He's not very good keeping his eating hours. He skips lunch most of the time,\" Grace added.\n\n\"Don't pressure Landon to do things, but if you can drop in at noon and bring some food with you, then he'll realize he can count on you.\"\n\n\"I can do that. I have flexible working hours. There was another thing I wanted to ask you. It's about his flashbacks. He had one when I was with him. It was scary, I didn't know what to do.\"\n\nDr. Michaels moved his lower lip back and forth thinking, \"Every person with PTSD is different, they have different triggers, and react to them differently.\n\n\"You need to learn what things you can do to help Landon feel safe at that moment. For some people, it's a hug. For others, it's watching a funny movie. For others, it's a bowl of ice cream or going out for a walk.\"\n\n\"Can I ask him about this?\"\n\n\"Sure, ask Landon about things that help, as well as things that don't. Having a joint plan in place will make the situation less scary for both of you. You'll also be in a much better position to help.\"\n\nDr. Michael stood up and searched through his huge bookcase. \"I have a book that can help you.\"\n\nHe handed Grace a slim book called 'Loving someone with PTSD.' \"It's a very interesting read and useful for basics. It will help you in your quest.\"\n\n\"Doctor, I just want to help Landon because I'm his friend. I'm not in love with him,\" Grace said without conviction.\n\nDr. Michaels smiled at Grace and patted her arm. \"Don't worry. It'll be our secret.\"\n\nCHAPTER 20\n\nIn the next weeks, Landon and Grace settled into a routine. She came every morning to the cabin to drive Landon to the museum. Three evenings a week she cooked for him. On Saturdays, they went exploring the mountain trails and Grace showed Landon some of the wonderful natural landscapes Middletown had to offer. She also took turns with Derek to drive Landon to Seattle every other Friday.\n\nShe started kissing his cheek each time they parted.\n\nThe mayor invited Landon to have dinner with him and his wife every other week. Derek and Bella did the same. None of them put pressure on Landon to accept, but he found himself enjoying those moments. Grace was always his plus one. She was the rock he leaned on if things got hard.\n\nLandon also played poker on Thursday evenings. Derek joined the group. Very slowly, he shared bits and pieces of his story with his newfound friends. They listened to him without judging him or offering him empty words of support. Most importantly, no one pitied him. There was a lot of laughter. Even the silences were comfortable.\n\nLandon realized that shared pain was easier to handle, and also that sharing with the right people was a source of strength and life experience.\n\nHis friends supported him to an extent that surprised him.\n\nHe still had flashbacks, but he was learning to handle them. One night, he had an especially bad one and he got to call Grace. She was with him on the phone for one hour while he lay curled on the floor. Scout was laying at his side licking his hand, while Grace talked to Landon, guiding him to breathe and relax, reminding him that those images were not real, that he was safe and loved.\n\nA knock at the door took Landon out of his thoughts. He stopped writing in his journal and opened the door and let Grace in.\n\n\"Good evening, I hope you're hungry. I'm making lasagna tonight,\" Grace said showing Landon the paper bags in her arms. \"I finally convinced Tony to share his recipe with me. I'm not sure he gave me all the ingredients though.\"\n\n\"Come on in,\" he said with a shy smile. \"Lasagna sounds just perfect.\"\n\nLandon shook his head, he usually didn't feel like eating. He could skip a meal without even realizing he had till his stomach growled. But lately his hunger was coming back.\n\n\"I'm glad you came. It can get lonely in this cabin.\"\n\n\"I thought you liked it that way,\" Grace said taking out things from her bag and placing them on the table.\n\n\"Don't rub it in,\" Landon replied with a grin. \"I've been doing some progress in my investigation. I think the text about Middletown's history is looking good. You can read it on my laptop,\" Landon said pointing at his computer. It was his way to divert his thoughts from her face. It was much too attractive.\n\nGrace sat down and read a few paragraphs on the screen. \"This is really good. Great actually. You really got into this job.\"\n\n\"I've always liked history. It was my favorite class,\" he said. \"The other day, Scout and I went down to the lake. Do you think it was the lake that brought and kept Fergus Carter here?\"\n\nGrace shrugged. \"I don't know what was in his mind. It could have been the lake. The land east of here is, or was, all dry. The lake was a draw to every wagon train and wanderer that came this way. It was a perfect place to build a town.\"\n\n\"No one knows anything about Middletown founding and first years, which is why the journals are so important. I need to talk with Marcus Carter about them.\"\n\nLandon was intellectually seducing her, and Grace realized she was enjoying it.\n\n\"You're writing a book about his ancestor. He certainly would want his family portrayed under a good light.\"\n\n\"Just a short history of Middletown,\" Landon corrected her. \"Not a book.\" He bit his lip.\n\n\"Noted. However, I have to say you're doing an incredible job so far.\"\n\n\"Thank you. Guys at the poker game mentioned another Carter brother,\" Landon brow frowned while he tried to remember, \"Maximilian.\"\n\nGrace nodded.\n\n\"Maximilian headed the city council and pretty much controlled the town for years. Nothing happened without his approval. Many people think his early death was a blessing for our town.\n\n\"Something happened between the Carter brothers that drew them apart. They had a huge fight when they were young. They never talked to each other again. Marcus was out of town for a long time. I think he lived in Portland. He only returned a short time before Maximilian's death. He died of cancer.\"\n\nScout barked and Grace looked at the clock and stood up. \"I better start cooking or we'll have lasagna for breakfast instead of dinner.\"\n\nCHAPTER 21\n\nGrace realized how lonely her house was when she returned home. She missed having someone to share her life with.\n\nMaybe this was the reason why she had dated one loser after another, to fill a void in her life.\n\nFirst, Laura and Percy got married. Then her brother Steve and Diana. Even Georgina, the Gym teacher, had gotten herself a boyfriend. Everyone seemed to be getting on with life, except for her. She had basically been a nun since her last break-up.\n\nLandon wasn't like any other man she had met before. He might look fragile, but he sure as hell wasn't. She tried to convince herself that she was only concerned for his well-being. But she knew that wasn't true. She cared for him. She cared much more than she'd ever thought she could again.\n\nThe next day, Diana asked her about Landon.\n\n\"What is Landon like?\"\n\n\"He's nice.\"\n\n\"Nice? That doesn't tell me much. Come on, Grace, you used to say more when you talked about a man you met on a bus.\"\n\n\"I like him,\" she added.\n\n\"You like everyone.\"\n\n\"Well, then, there you go.\"\n\n\"Grace!\" Diana exclaimed.\n\n\"You have already met him. You can make your own opinion about Landon,\" she said.\n\n\"You know that's not what I'm asking.\"\n\nGrace didn't know what to say without getting too personal, and tell her how much she wanted to be there for him. Diana probably would understand everything that was wrong. Or right.\n\n\"He is writing a short history of Middletown. He's doing an amazing job.\"\n\n\"He's smart, then.\"\n\n\"Yes, I think he is.\"\n\n\"You should invite him to have dinner with us again. After all, he is the man who has stolen your heart.\"\n\n\"It's not like that.\"\n\n\"Then how is it like?\"\n\n\"Complicated. I usually wouldn't mind if you ask me about this, but this is a special situation. I hope you understand.\"\n\nDiana, of course, had heard rumors about Landon around town, but they were unusually vague. When she asked Derek, he told her the same thing as Grace did.\n\n\"Of course, I do understand. I'll just say you look happier than ever. I'm happy for you.\"\n\nCHAPTER 22\n\n\"You look a thousand miles away,\" Grace said to Landon. \"Should I ask what you're thinking about?\"\n\n\"Fergus Carter,\" he said. A half-truth.\n\nWhen they reached the lookout, Landon glanced down at the town below. He wondered whether Fergus had viewed the valley below from this point. He was still an enigma to him.\n\nGrace put the box on the picnic blanket. It was loaded with food. She took out two paper plates and cups.\n\n\"I didn't know what kind of sandwich you like, so I got two ham and cheese and two roast beef. There's lemonade in the flask.\"\n\n\"I'll take a roast beef one,\" he said, \"and lemonade sounds perfect.\"\n\nWhen Landon turned his gaze back to Grace, she was looking him in that special way that made him feel warm. Then guilt struck him like a sword. How could he even think of being with a woman in his condition? He could not put himself in the position of being rejected again. The food suddenly felt like cotton in his mouth and his throat closed.\n\nNo. No. No. Not now.\n\nScout whined next to him and put a paw on his knee. He fought the flashback. He willed himself to breathe until it came naturally again. Landon looked up and met Grace's concerned expression. He took another deep breath. \"I think I'm handling it,\" he said.\n\nHe leaned down and put two hands on Scout's head, just touching him.\n\n\"Do you need a hug?\" she offered softly. Grace reached out and touched his hand. He was surprised at how comforting it felt. Human contact.\n\n\"Yes,\" he said. \"They always help.\"\n\nGrace wrapped her arms around Landon. She held him to her heart. Her voice cut through his flashback. \"It's okay, it's not real. You can beat it.\"\n\nGrace rocked Landon back and forth with small, gentle movements. Finally, Landon started to relax.\n\n\"I'm fine.\" He raised his head, giving Grace a small, tight smile. \"I'm just a little disoriented and a lot embarrassed. I'm sorry,\" he said softly, hands dangling between his knees.\n\n\"There's nothing to be ashamed of.\"\n\n\"Thank you for bringing me here,\" he said. \"But I'd rather go back to the cabin.\"\n\n\"You're very welcome,\" Grace gathered up the remainders from lunch and packed them in the box.\n\nSince it was still early, Landon asked Grace to drive him to the community center.\n\n\"Come on, Scout,\" he said and walked up to meet Jonas. \"Hello, Jonas.\"\n\n\"Hello, Landon, Welcome back. How's the research going?\"\n\n\"I'm not sure,\" he said. \"I've reached a dead end about Middletown's first years.\"\n\nHe saw curiosity in Jonas' eyes but he didn't ask any questions.\n\nLandon changed the subject. \"Do you have a picture or painting or sketch of Fergus Carter?\"\n\nJonas rubbed his chin, trying to jump-start his memory.\n\n\"I remember seeing a sketch that an artist did for the newspaper, I think. You don't forget something like that. Legend is they wanted a photograph but Fergus refused. An artist did a quick sketch when Fergus met with the governor. He'd been a strong supporter of the statehood movement and I suspect he planned to collect on it. Not money but protection of his town.\"\n\nAnother tidbit Landon filed in his head. As soon as here turned to the cabin he intended to look up the conflict over statehood.\n\nJonas led the way upstairs opened the museum door and stood aside as Landon entered, then he went to one of the cabinets, unlocked it, and took out a faded newspaper page carefully encased in plastic. A sketch was in the lower left-hand corner.\n\nLandon studied it. The artist was good. He'd captured the directness of eyes that seemed to stare at him. Fergus Carter was clean-shaven, and a scar running down his right cheek could be seen. Even with the scar, or maybe because of it, the face was arresting. Not handsome but strong.\n\n\"Interesting,\" he said taking several photos with his phone.\n\n\"There's more bound volumes. Take your pick. You can take those to the cabin with you instead of snapping pictures.\"\n\nLandon nodded. \"Thanks.\"\n\nJonas left the door open when he went downstairs. Landon leafed through the volumes, looking for the oldest ones.",
        "Landon glanced at his phone. Nearly four-thirty. Where had the afternoon gone?\n\nShe hurriedly replaced the volume and met Jonas downstairs. \"I have to go,\" he said. Grace was coming to cook dinner for them.\n\n\"Not taking anything with you?\"Jonas asked.\n\n\"Not tonight. I'll be back on Monday.\"\n\nScout wagged his tail.\n\n\"Come on,\" he said. \"It's just a short walk, and then Grace will cook dinner for us.\"\n\nHe talked to Scout all the way back home. He was a good listener.\n\n\"I'm going to see the town's bear tomorrow. What do you think?\"\n\nScout barked.\n\n\"Yeah, I feel the same way.\"\n\nOnce in the cabin, he headed for the cold shower. He couldn't stop thinking about Grace. The attraction was growing stronger every time they met.\n\nAfter the shower, he buried himself in work till Grace arrived. The text was taking shape. He just needed details of those first years, when Middletown was a dream in Fergus Carter's mind. He needed access to those journals if they actually existed.\n\nCHAPTER 23\n\nLandon took a deep breath before invading the dragon's lair. Before leaving he stooped down next to Scout.\n\n\"You have to stay at the cabin,\" he said. \"I don't know if the old man likes dogs or not. I'll be back soon.\"\n\nHe thought about Fergus Carter, the Scottish settler with a vision, while he walked to his descendant's mansion's door.\n\nHe was dressed in the best he had: the black pants that were a little big and a navy blue shirt. He had even run a comb through his hair.\n\nHe had thought long and hard which was the best way to approach Marcus. He decided not to mention the journals. He would just say he was writing a short history of Middletown and he was interested in his input.\n\nWhen he finally arrived, he knocked at the fancy doors. An old man greeted him.\n\n\"Good afternoon. Is Mr. Carter in?\"\n\n\"Sure is,\" the old man said. \"You must be the veteran living in one of Mr. Carter cabins.\"\n\n\"Guilty as charged,\" Landon said. \"I'm Landon Petersen.\"\n\n\"I'll let his secretary know you're here. Mr. Carter has been expecting you.\"\n\n\"Thank you,\" he said a bit confused. How come the old man was expecting him?\n\nA middle-aged woman walked across the room. \"Who are you?\" she said. No smile this time.\n\nA gatekeeper, Landon thought. He'd had experience with that certain breed.\n\n\"Mr. Petersen to see Mr. Carter,\" he said.\n\n\"Do you have an appointment?\"\n\n\"No, but I think he is expecting me.\" As far as he knew he wasn't lying.\n\n\"May I ask what is the purpose of your visit?\" the woman looked as if she was sucking on a lemon.\n\n\"It's a personal matter. I'm renting Mr. Carter's cabin.\"\n\n\"If there's a problem with the cabin you should address it to the real estate agent Grace McAllister. She'll handle any problem you might have.\"\n\n\"There is no problem with the cabin. I already told you it's a personal matter,\" somehow Landon managed to find a bit of his old commanding voice.\n\nThe woman gave him a long stare, then picked up her phone.\n\n\"A Landon Petersen would like to see you about a personal matter.\" Somehow she managed to make 'personal matter' sound as if she had said 'shit'.\n\nAfter a pause, she nodded at Landon. \"Mr. Carter will receive you now. You can go in.\"\n\nLandon's stomach churned. He had managed this far. He hadn't allowed himself to think beyond each step. The first step was to walk to the mansion, the second to get inside. Then, manage to set a date to meet with the old man...\n\nI can do it. He followed the woman to a solid wooden door. She opened it and invited him inside with a gesture of her hand.\n\nLandon peered inside and saw a rather dignified, well-dressed, good-looking old man in his late sixties or early seventies sitting in a huge high-backed leather armchair.\n\n\"Landon Petersen, I presume.\"\n\n\"That's me. Nice to meet you, Mr. Carter. Thank you for receiving me,\" he said extending his hand. The old man shook it.\n\n\"You're living in my cabin down Fairwood Crest Road,\" Despite his age, Marcus' voice was deep and held an authoritative tone.\n\n\"Yes, Sir,\" he said, reverting to military protocol.\n\n\"People in town say you're a vet.\"\n\n\"Yes, Sir. I am\"\n\n\"Were you in combat?\"\n\n\"Yes, Sir, I was.\"\n\n\"Was?\"\n\n\"I'm on medical leave. PTSD. I'm not sure about my future yet.\" Somehow Landon sensed it wasn't a good idea to lie to Marcus Carter.\n\n\"Why did you come to Middletown?\"\n\nIt was direct and even a bit rude, but he'd expected that. He sensed that frankness was the best course with the old man. \"My doctor recommended a program in Seattle. An army buddy lives here.\"\n\n\"Derek Hayes,\" Marcus stated. \"No family?\"\n\n\"Mother and two sisters. My father died when I was a kid.\"\n\n\"Why aren't you staying with them?\"\n\n\"That wouldn't work for me.\"\n\nMarcus studied him in silence. \"Family can be a pain in the ass sometimes. What's wrong?\"\n\n\"When I returned to my hometown from my last deployment, my fianc\u00e9e broke off our engagement. I couldn't stand staying in town after that.\"\n\nMarcus Carter's voice softened when he asked. \"Was there another man?\"\n\nLandon shrugged. \"I don't know and I never cared to find out. I had other things on my mind at that time. I still have. Truth was I was not the same man I was when I proposed to her. I don't blame her even when it hurt.\"\n\nHe was controlling his breathing to stay calm.\n\nMarcus stared at Landon for what seemed an eternity. For whatever reason, Landon's story had turned Marcus in his favor.\n\n\"Sit down,\" he ordered.\n\nLandon obeyed.\n\n\"What do you want from me?\"\n\n\"I'm writing a short history of Middletown.\"\n\n\"Why?\"\n\nAgain, Landon decided to be open and honest. \"I need the money to pay the rent. This job is the first thing that has interested me in months. Writing and investigating keeps me busy and helps me not to dwell in the past. I like history, and the West has always fascinated me. I have a general knowledge of its history.\"\n\n\"They say it's to promote the town,\" Marcus said with a frown. \"That pretentious Mayor Thompson and his delusions of grandeur. He wants to bring more people here. I don't. I like Middletown as it is.\"\n\n\"It can't stay as it is if everyone grows old and dies,\" Landon said. \"You'll just have another ghost town here. I know what it's like when a town's young people feel it's necessary to leave to get a job.\"\n\n\"How do you know?\"\n\n\"I come from a small coal-mining town in Wyoming. About the only choices were the mine or... leaving.\"\n\n\"We're not that bad,\" Marcus said with what Landon thought must be a rare smile.\n\n\"I would have liked to stay,\" he said, sensing an opening, \"but I couldn't support myself. It's why I joined the army. It helped me to get a degree and a future I might otherwise not have.\"\n\nMarcus stared at him. \"What do you want to know?\"\n\n\"I've visited the museum at the community center and looked through some of the newspapers dating back to 1855. I've heard some stories about the founding of this town. I would love to learn more about how it all started. And about your ancestor, Fergus Carter,\" he paused. \"I could probably sit down now and write some pages about Middletown that would satisfy Mayor Thompson, but I want to do better than that. There is a lot of missing information. Fergus Carter deserves more than just a mention as the town's founder.\"\n\nMarcus lifted an eyebrow. \"You must know that the mayor and I don't exactly agree on the future of Middletown. You have nerve coming here.\" It actually sounded like a compliment.\n\n\"You have the information I need. Fergus was one of the first settlers in the state. His story deserves to be told.\" Landon sat straight up in the chair. \"I want to know what made him come here, settle here, establish a town that exists today. It had to take courage and vision.\"\n\n\"I don't think Fergus thought anything that grand,\" Marcus said wryly.\n\n\"That's why he's so interesting. He's like so many other pioneers. They didn't know what they were creating. They just wanted something better for their families.\"\n\n\"I'm not sure that's true either,\" Marcus said with a gruff chuckle. \"He was an unwilling pioneer. He came to America to save his irresponsible brother, Jamie, only to watch him die in a stupid accident. Fergus had to sever all his ties in Scotland and sold everything there. It was either settle here or go home penniless.\"\n\nThat was already more than Landon had known before. Maybe more than anyone knew. Excitement coursed through him.\n\nThen Mr. Carter's phone rang. He glanced at the screen.\n\n\"I have to take this. We'll keep talking. I'll call you.\" Then he waved his hand in an obvious dismissal gesture.\n\nLandon left, a sense of accomplishment lifting his steps.\n\nCHAPTER 24\n\nLandon woke up the next morning after a rare good night's sleep. The sun streamed through the window. Scout burrowed next to him and raised his head the instant he stirred.\n\nLandon scratched the dog's ears. Why had he been so reluctant to own a dog?\n\nHe stretched out. Yesterday's meeting with Marcus had been good. A huge success.\n\n\"Okay, Scout,\" he said. \"We should get moving. We have things to do today. First a shower,\" he added, as Scout's ears went up.\n\nLandon was still surprised at the ease of his conversation with Marcus. After what had been hinted and said about him, he'd expected an ogre, but he had enjoyed his time with him, with his direct questions. He had suspected he was testing him, and somehow he had passed. In any event, he was looking forward to talking to him again.\n\nHe thought about writing out some questions for their second meeting but he decided against it immediately. He would have to wing it.\n\nHe padded to the kitchen to make coffee. It was still dawning outside, but in his mind, he was still raking through the events of the last day. He wrapped a blanket around himself and took the coffee to the porch. Mornings were cold, but he didn't want to stay within four walls where he felt trapped.\n\nHis thoughts went back to Grace. He wondered if she would be still sleeping or making breakfast. If she was awake she was probably restless. She never seemed to stay still.\n\nHe went inside and helped himself to another cup of coffee. Scout looked hopefully at the front door. \"Shower first,\" Landon said, \"then we'll take a walk to town.\" Scout's tail wagged eagerly.\n\nThey walked past the community center. Not open yet. There was no one in the town square either. A few vehicles were driving through town. There were some cars and trucks parked in front of city hall.\n\nLandon walked by Grace's real estate office. The lights were off. He passed the church and stopped to read the historical marker in front: Founded by Fergus Carter, 1862.\n\nHe looked at the church. It was a pretty white building with a tall steeple and bell. The architecture was simple with clean lines. It did not look like 1862.\n\nThe doors were open and, on a whim, he decided to go inside. An older, nice-looking man approached him. He held out his hand. \"I'm Reverend Joseph Sheppard, the pastor here. Welcome. What can I do for you?\"\n\n\"Hello. I'm Landon Petersen. I'm staying in a cabin outside town.\"\n\n\"Ah, yes. You are Derek's army fellow. I've heard of you. We've been praying for your recovery.\"\n\n\"Thank you, Reverend. I'm writing a short history of Middletown and I wondered if you had any story about Fergus Carter to share. I saw the marker outside,\"\n\nThe Reverend smiled. \"This building isn't the one that he built. That one burned down in the forties. But this church was constructed on the same ground as the original, so we still claim him. I don't know any story about Fergus Carter, but I know Marcus Carter has Fergus Carter's Bible. I've been asking him to donate it to the church but he refuses so far. Maybe you could ask him to let you take a look at it.\"\n\n\"Thank you,\" Landon said making a mental note.\n\n\"You're invited to the services, of course,\" the Reverend said.\n\n\"Thank you, I am not much of a believer in organized religion.\"\n\n\"No matter your religion, faith, or belief you should take the time to look within yourself and discover what you believe in friendship, love, loyalty, honesty, respect... Those values shape the type of persons we are. Many of us spend a lot of time trying to understand what we believe, what we want, and who we are.\"\n\nLandon just nodded his head. He had not attended a church service for a long time, but he liked the Reverend.\n\n\"I'll think about what you said, Reverend. Thank you for your time.\"\n\nLandon and Scout left the church. A couple walked past him. They were holding hands and leaning against each other.\n\nLandon had never had young love. He'd been too different in high school, too busy in college, and too careful in the service. Fraternization was frowned upon, and he was all business. Then he met Darla and thought he had found his soulmate. They dated, they fell in love. Or so he thought. Landon couldn't take Marcus Carter's words out of his mind. Had she cheated on him while he was away? If Darla truly loved him, why didn't she stick around and help him to get better like Grace and the rest were doing?\n\nScout bumped him and offered his paw. \"You're right, Scout,\" he said. \"There's no use looking back. It's time to look ahead.\"\n\nCHAPTER 25\n\nScout raised his head, ears pricked, and he whined softly in the back of his throat.\n\nA minute later Landon heard a car parking in front of the cabin. He checked his phone to make sure he hadn't missed any text or call from Grace. There were none.\n\nThen, he heard the sound of footsteps, and someone knocked at his door.\n\nHe opened the wooden door only to find his ex-girlfriend, Darla, standing there.\n\nHe had tried so hard to clear memory of her from his mind after what she had done to him, walking out of his life and his heart... And now she was back?\n\nLandon was having trouble believing this. Suddenly his chest tightened and his heart started pounding rapidly. Scout let out a low growl to the female visitor.\n\n\"Landon?\" she said, interrupting his thoughts.\n\n\"What are you doing here?\" was the first words that came out of his mouth.\n\nHis ex-fianc\u00e9e winced at his words but recovered.\n\n\"I thought about calling you, but then decided maybe it would be better just to talk to you in person.\"\n\n\"How did you know I was here?\"\n\n\"Your mother told me after I talked and apologized to her for what I did to you.\"\n\nLandon shook his head. He had to talk with his mother about telling people about his whereabouts.\n\n\"We broke up..., no, you broke up with me, so I ask you again what are you doing here?\"\n\nShe took a deep breath and said in a shaky and nervous voice, \"I made a mistake, Landon. I'm so sorry. I should have never broken up with you. It was the worst mistake of my life. I was scared and confused. When you came back, you were not the man I knew and loved before you went to war. People who knew you could see the change in you. You were angry, moody, aggressive, and withdrawn. It was the opposite of your personality. I didn't break up with you because I didn't love you. I did it because I didn't know how to handle you.\"\n\nLandon nodded slightly.\n\n\"I was sick. I still am. I was diagnosed with Post-traumatic Stress Disorder, PTSD for short,\" he stated. His mind still processing what was happening.\n\n\"What is that?\"\n\n\"PTSD is when after a traumatic event, the person continuous relives the event. I have flashbacks, nightmares, and anxiety disorder. I never blamed you for breaking up with me. I just had to move out of town and get some help. I knew I wasn't getting any support if I stayed there.\"\n\nDarla gulped and paled.\n\n\"Would you mind if we keep talking inside?\" Darla asked in a small voice. \"It's kind of chilly out here.\"\n\nLandon twisted his mouth, but said, \"Come in. I don't have much time so you must be quick.\"\n\nThey sat at the kitchen table and Landon offered her something to drink.\n\nScout sat at Landon's feet, tongue hanging out. Landon scratched the dog's ears.\n\n\"Did you get a pet?\"\n\n\"Scout it's not a pet. It's a service dog. I was paired with him. He is helping me to deal with my condition.\"\n\nDarla took a sip of coffee and said, \"I didn't know dogs could do that.\"\n\n\"You would be surprised what Scout can do for me,\" Landon said patting his head. \"Much more than some humans.\"\n\nAn awkward silence fell over them.\n\n\"Landon. I want to help you. I bailed on you once before but I'm not doing it again.\"\n\n\"It might be a little late for that. When you broke up with me, I was crushed. I came home looking for support only to find new disappointments and frustrations. I isolated myself from friends and family and got depressed. I was fighting and barely overcoming the urge to be dead all the time. I started drinking a lot. More than I should to numb myself. I was sick even though tests told me nothing was physically wrong, I knew something wasn't right. Finally, I talked with Derek, do you remember him?\"\n\nDarla nodded.\n\n\"He told me he went through the same thing himself and told me exactly what I needed to do. So, I left town, I came here, and I've been working on myself since then.\"\n\n\"Why didn't you tell me?\"\n\n\"Because you had already broken up with me and you didn't seem to care about me,\" he said with more anger than he'd meant. He sighed. \"I was broken and you didn't seem to care if I died or not, you discarded me, threw me out of your life.\"\n\nThat memory came flooding back to his mind. Landon took a deep breath making an effort to relax. He kept petting Scout.\n\n\"It sounds like you do blame me for breaking up with you,\" Darla sniffed.\n\n\"I don't, but it doesn't mean that your decision didn't hurt me or made a bad situation worse. It did. I needed help and I found myself all alone. Rejected. I don't blame you, but I'm not happy with what you did to me either.\"\n\nDarla bit down her lower lip, tears running down her cheeks.\n\n\"I have friends now. People who care for me,\" he said.\n\n\"Is there anyone else?\"\n\nLandon snorted, \"I was wondering the same thing about you when you broke up with me, you know? My mind was too scrambled to deal with the answer to that question at that time.\"\n\n\"I never cheated on you, Landon,\" she said. He wasn't sure he believed her.\n\n\"To answer your question: no there is not anyone else. I can't handle being in a romantic relationship in my situation, but even if I would, I wouldn't go back with you.\"\n\nHe could see that hurt her.\n\n\"Why not?\"\n\n\"Because I don't trust you won't bail on me again.\"\n\n\"That's not fair.\"\n\n\"Life is not fair, Darla. What you did to me was not fair. What happened to me was not fair. I'm still figuring out how to heal, and what to do with my life. The Landon you knew is gone and I'm pretty sure you wouldn't be able to love the person I became.\"\n\n\"I can try.\"\n\n\"Try? You have no idea of what I have been going through. I need stability, security, and safety. I'm not the same man I was before, mentally speaking.\" He tapped his temple with two fingers. \"I can't stand crowds, or loud noises, for example. They are all triggers that can make me feel like I'm reliving my trauma. I would be waiting for you to run away every time I had a flashback, or withdraw myself from the world, every time I experienced an overwhelming bout of extreme and unprovoked anger.... Did you think you could show up here, say you're sorry and we'd be together again as if nothing happened?\"\n\nDarla was openly crying now. For some reason, it made Landon even angrier.\n\n\"Are you planning to stay here then?\" she sniffed.\n\n\"Yes, I have all I need for my recovery here in Middletown.\"\n\n\"How long?\"\n\n\"I don't know. I'll take all the time I need to heal up properly.\"\n\n\"It doesn't matter to you that I still love you? I still want us to be together.\"\n\n\"Where was your love when I needed you? Where was your love when you broke up with me? Where was your love when you broke me even more with your harsh words about how much I had changed? Where was your darn love when I cried every single night cursing myself because I couldn't get a hold of what was happening to me?\" He asked, standing up from the table."
    ],
    "authorname": "DB86",
    "tags": [
        "love story",
        "soldier",
        "ptsd",
        "middletown",
        "derek",
        "grace",
        "marcus carter"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/peace-of-minda"
}