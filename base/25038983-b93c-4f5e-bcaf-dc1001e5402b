{
    "title": "The Tawdry Tangerine Farewell Pt. 05",
    "pages": [
        "Well, we got here. Of course, life goes on after a story, so not everything will get fully resolved at the end, but I think it gets to a good, natural point to stop. \n\nLike the previous one, this is self-edited. I hope it's not too bad.\n\nIf you want to drop me a message, feel free; I enjoy it.\n\n-C\n\n<center>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500</center>\n\nMolly\n\nI called it as soon as I heard Next's \"Too Close\" start up. It's not my favorite song, but Connor loves it, and he was in close and personal before you could say \"hand on my ass.\" I surrendered to it. The best way to seem like you're having fun is to actually have fun and, God knows, I love to dance. So I melted in, letting him grind, not minding the feeling of maleness against me, secure in the background knowledge that no way in hell was I gonna hop on him at the end of the night.\n\nIt was going to end tonight. That feeling of being coerced to go where I didn't want to go had disappeared. I'm not sure why I was so confident. I think that one moment of insight last night at the studio did it. Did it ... plus turned me into a wet noodle that spent most of her evening with her hand in her pants, mind firmly on some private fantasies rather than anything else that might have occupied my thoughts.\n\nI might flash a little skin this evening, but that didn't bother me at all. Leah ditto. So, I was out dancing with my friend, who'd become a good friend last night, and another friend, who I hoped would become a helluva lot more than good. That was pure buzz.\n\nWhen the DJ ramped it up into Ludacris, I glanced over at Leah and Rick. About the only surprise of the evening so far was how bad a dancer he was. Appalling. But, damn, that girl could work it. Hips and chest corkscrewing opposite each other, one hand on her thigh, the other through her hair, the glance over her shoulder at him as she swayed out to the side. \n\nI reached back and grabbed one of Connor's hands and pulled him forward with me, my other landing on Leah's shoulder. As she turned to look, I slid up against her, foreheads touching, pelvises inches apart, for a couple of shimmy-shimmy shake-shake beats, then pulled away to Rick while surrendering her to Connor. I knew he wouldn't mind. He'd been looking at her the same way a lion looks at a gazelle.\n\nNormally I dance a little back from a guy, but Rick needed help. A gentle push back against his hip as mine came forward, gentle pull as mine rotated back. I slid in even closer, dipping and back up as we swayed side to side, thigh occasionally brushing his. I bumped between his legs unintentionally, and he pulled back sharply. I knew why. I drew his head down toward me. The music wasn't too loud if I talked right in his ear.\n\n\"Nuh-uh!\" My left hand recaptured his hip and I pulled, denying his resistance. \"Half the guys in here are a little turned on by their partners. Just let yourself go and don't sweat it.\" I pulled back so he could see my face, then leaned in again. \"If you get a boner, you get a boner. I won't mind.\" I pulled back again and laughed at the shock on his face. I shouted the lyrics along with the music, \"When I move, you move!\" and threw myself back into it, forcing Rick to follow.\n\nEventually, the four of us headed back to our booth for a break. I saw a moment of tension on Leah's face as Connor went to sit beside her. I figured he'd had his hands on her just like they'd been on me, and she was remembering my description: \"...handsy on the dance floor and very handsy when sitting.\" \n\nI pulled him up short with a peck on the cheek, letting him feel my hand dip into his jacket pocket and snag the pill bottle. \"We girls are gonna go powder our noses,\" I said with a wink.\n\nSafely away from male eyes, I dropped two pills into the little case I had in my purse for feminine products. No guy was going to go there. \"Forty, forty-five minutes, then start to get talky and animated,\" I reminded her.\n\n\"Is this whole thing working?\" she asked.\n\n\"Jesus, Leah,\" I snorted. \"Are you kidding me? He's had you mentally undressed and thoroughly eye-fucked since we got in the car. Even Rick's feeling your vibe.\"\n\nShe shook her head. \"Not me.\"\n\n\"Yeah, you. Young, blonde, stacked. I'm not jealous but, news flash: I'm jealous.\" I smiled to show no hard feelings.\n\nShe shook her head again. \"You know what Rick said when he saw that.\" She pointed at my reflection in the mirror. I couldn't carry off flirty dresses like she could. So, I was rocking black: ankle boots, leather mini, tight crop-top, moto jacket. The only color was the dark red of my lipstick. Even my earrings were jet. \n\n\"He said, 'Jesus!'\" She giggled. \"And then he got all red and apologized. So of course, I said, 'Jesus is right. Sex on a stick,' and he didn't argue. And I saw him on the floor with you. Trust me, girl, if you don't mess it up, you are so getting laid tonight.\"\n\nOur eyes met in the mirror and we both grinned.\n\n\"Let's do this.\"\n\nWe'd agreed on the rules beforehand. Some nudity was okay, but she wasn't having sex with anyone tonight beyond getting felt up a little and some kissing. \n\nI'd brought up the whole girl-girl thing. \"And if Connor suggests I try the feeling and kissing?\"\n\n\"I can fake it for the camera, but I'm not into girls. Umm, you?\"\n\n\"I can fake it for the asshole, but nope. Strictly D for me.\" Maybe that was a tiny bit of overstatement but not a whole lot.\n\nHer whole body participated in the shrug. \"A smooch or two and some boob bumping. I've done it before.\"\n\nConnor gave me an eyebrow-lift question when I slid the pill container back into his hand, and I answered with a nod. I never saw Connor take one or give one to Rick, but forty-five minutes later I noticed the now-familiar signs in Connor. The next time I switched back to Rick I asked, \"You didn't take it did you?\" He shook his head and went back to trying not to look like a robot. At the next break, I suggested we adjourn.\n\n<center>\u2666 \u2666 \u2666</center>\n\nThe cold air of the car door opening was a shock. We started to untangle ourselves, Connor not having let anyone ride up front with the driver. I'd spent the ride sandwiched between the two guys. Leah had spent it on Rick's lap, her legs stretching across the seat to Connor's. She'd giggled when he gave them a little stroke.\n\nAs the car pulled away, Connor's driver at the wheel, we scampered down to the boat as fast as heels would allow and into the warmth. Connor grabbed four bottles of water, and we flopped onto the couch. Leah nestled back against Rick's shoulder, casually arranged his arm around her \u2014 Rick was clearly too diffident \u2014 so that it was catching a lot of breast pressure, her hand resting on his upper thigh. Connor, diffidence not being in his vocabulary, pulled me under one arm, hand gradually slipping down to cup me nonchalantly while his other waved the water around.\n\nHe didn't waste much time. \"Anyone hungry? No? Okay, then what shall we do?\" Everyone knew that wasn't an entirely open-ended question.\n\nRick spoke up. \"My understanding is that's up to Molly.\"\n\nThree pair of eyes came to rest on me. \n\n\"How about a drink?\" I suggested. \"I'll get it.\" I stood up.\n\nConnor let me up but caught my wrist before I could walk away. \"And...?\"\n\nI pretended to consider. \"He looks like he's your brother.\"\n\nThe two men regarded each other, then gave noncommittal nods. Typical guys. Connor's hand dropped to around my leg, pulling me back toward the couch a little. The stroking motion he started definitely didn't stop at my hemline. I was only inches away from being fingered.\n\n\"It's a good look,\" I said slowly. Expectant expressions grew. \"Though not sure how I feel about a crowd.\" I shrugged and grinned. \"But let me have a drink or two and see where the party goes.\" The two guys looked at each other in congratulation. Leah took the opportunity to drop her eyes to where Connor's hand was, then back up to mine to widen for a fraction of a second in an ohmygod expression.\n\nI pulled away and walked over to the bar, shrugging off my jacket. \"Who wants what?\"\n\nLeah came to help. While I was pouring, she traced the image of the koi on my arm with her finger. \"Lingerie models can't have these but I think it's ballsy as hell.\" \n\nAct V, scene ii, I thought to myself: L. enters, cornering M. to ask about tattoos.\n\nAs I turned to take the drinks back to the guys, she blocked me and reached out to trace the piece of image visible between my top and skirt. \"What's this?\"\n\nEveryone here had seen it, though the guys didn't know that. I'd shown Leah the picture on Al's web site, not wanting to deal with a judgmental reaction if I sprung it on her later. Surprisingly, her comment then had been almost word-for-word what she'd led with just now, except starting, \"Body doubles can't...\"\n\n\"It's\u2014\" I started and broke off. I took a moment to hold her eyes. We both knew the script, and Rick knew the rough outlines, but dragging out the anticipation just helped with audience immersion. Moving deliberately, I turned and set the glasses back on the bar. I turned back to Leah and, not taking my eyes from her face, reached up behind me to unzip my top. Hooking fingers in the spaghetti straps, I slid it down off my body, discarding it to the floor.\n\nMy peripheral vision caught the staring, even Rick. Leah's eyes dropped to study my chest. Her back was to them so she didn't need to fake lust but she took her time looking. I could tell it was tattoo, not bosom, that fascinated her. She let her eyes drop down.\n\n\"And the rest of it?\" she prompted.\n\nI reached behind again for the zipper on the skirt. The leather dropped to the floor with a whisper. Tanga-style panties in black, very low-cut, ultra-sheer to reveal the darker V between my legs where the fox's tail ended.\n\nConnor was rapt. Rick was too, caught up in the eroticism of the act. I turned away from Leah's face and looked at the guys, on almost-full display. Connor continued to stare, eyes bright with excitement. Rick finally glanced up to my face and leaned back on the couch. \"Leah,\" he said, \"from what I can see, you're way overdressed.\" He started to stand but I held up a finger to stop him, turning my attention back to her.\n\nKeeping her back to them, she echoed my earlier actions. She hooked the zipper at the back of her dress and ran it down, then drew the garment off her shoulders, letting it fall to the floor to reveal white lace. She reached back a second time and popped the bra hooks, letting the garment slide down her arms to floor.\n\nBecause I knew Rick would like it, whatever he might claim, I looked my fill and then stepped forward. I drew Leah's head forward toward mine: a smooch and a boob bump as predicted ... and two woodies.\n\nRick\n\nLeah's top coming off was the signal. It got us far enough that Connor would be convinced we were committed to a night of debauchery, but not so far that we were treading into places Leah refused to go. Except where was Gavin?\n\nMolly paused after the kiss ended, clearly expecting an interruption, but smoothly carried on. Turning back to the bar, she gathered two glasses and walked over to us. \"One for you,\" she said to Connor, \"and one for you, Rick.\" Leah followed behind her with their drinks. I could see the faint line of tension between her eyes, especially since she knew that Connor was drinking in every curve of her body and clearly enjoying it. \n\nHad I not been stressed about the fact that the plan was coming apart, and that I was likely going to be up on assault charges by the next day, I'd have enjoyed it, too. I don't care how many naked models you've seen, two pretty women standing in heels and panties and nothing else after an evening of what, for all intents and purposes was foreplay, was nothing but fuel for the libido. Leah was gorgeous and Molly, well, Leah had it right: Molly was sex on a stick.\n\nI met Leah's eyes. \"It's okay,\" I mouthed and her forehead eased. I started to stand. It was ending tonight even if I had to do it myself. I wondered if I'd be allowed out on bail. \n\n\"Drink!\" Molly demanded as she cut in front of me. Taking one of the glasses, she pulled Leah into the curve of her arm. \"Connor, put on some music. I want to dance with her.\"\n\nAs Connor crossed back to the sound system, still eyeing the two, I caught the flicker of motion on the stern deck just before the sliding door opened. I hadn't heard steps on the gangway or felt any tremor in the boat that let you know someone boarded. I guess he'd been here already.\n\n\"Hey, Connor Fuckin' Thompson.\" That didn't sound like a pleasantry.\n\n\"What? Who the hell are you?\"\n\n\"Her fuckin' cousin.\"\n\n\"Her...\" He glanced over at the women. \"What?\"\n\n\"Not them, you asswipe. The one you're blackmailing because you're too much of a faggot to get pussy the right way.\"\n\nConnor's defiant protest ended anticlimactically in vomit as Gavin, without warning, hit him in the stomach, then twice more in quick succession.\n\nIt was a long two or three minutes for Connor. At the end of it, I knew the eye would blacken, the nose was already bleeding, and his stomach was empty from puking. Gavin was holding a laptop. \"Not this. I want the main copy you got stashed somewhere.\" \n\nConnor's denial was cut short with a scream as Gavin's boot slammed into his ribs. There was a tiny cracking sound. I didn't know if it was a rib or just cartilage. I didn't much care and clearly Gavin didn't as he drew his foot back for another shot. Connor tried to roll away, gabbling, \"Wait, wait. I'll give it to you.\" He gasped for air and pointed toward the bar area. \"There's a safe under the floor of that cabinet there.\" \n\nGavin opened it, dumping bottles and glassware out onto the floor. \"You can pull up the panel from the back corner,\" Connor supplied.\n\n\"Combination?\" Gavin asked.\n\n\"I'll open i\u2014\"\n\n\"Fuck you will. Let you pull out a gun or somethin'? What's the fuckin' combination and don't make me ask you again.\"\n\nA minute later he was in possession of four thumb drives, one labeled \"Molly\", another labeled \"Rebecca\", a third was \"Adrianna\", and a fourth that said \"Lara\".\n\n\"Huh, you've run this shit a few times! What're the other three last names?\"\n\nConnor started to ask which three he needed and got no farther than, \"Which ones\u2014\" before he cried out again. This time it was a finger snatched up in a meaty paw and bent in a direction Mother Nature hadn't intended. \n\n\"Last names for these right fuckin' now, douche bag!\" Gavin screamed at him.\n\n\"Barrish. Rebecca Barrish. She works with me. And Molly's her, Trevisani.\" He nodded in Molly's direction. \"Lara Kolisnychenko and Adrianna Ellison.\"\n\n\"Are there any copies of these?\"\n\n\"Just on the computer.\"\n\n\"Backups?\"\n\n\"I don't back those up because I have the drives. I don't want anyone else\u2014\"\n\nThis time the scream broke down into sobbing. I could hear the finger dislocate. \"I swear! The computer and those thumb drives. Nowhere else!\"\n\nGavin took four long steps to the stern and launched the computer like a discus out toward the water. Connor made a convulsive movement but shrank back as Gavin's attention returned to the room.\n\nGavin turned to Molly. \"You here by your own choice?\"\n\nShe was sitting on the couch, hunched over with her arms crossed over her breasts. \"Not really.\"\n\nGavin sorted through the drives in his hand and tossed one to Molly. \"That's yours.\" She lifted one hand up and snagged it out of the air before going back to hand bra. He turned to Leah who was doing the same. \"You one of these?\" \n\nShe shook her head. \"Don't hurt me,\" she squeaked.\n\n\"I don't hurt women, darlin'. That's for limp-dicks. But you want one that's not limp, you just look me up and I'll make you scream all right.\" He leered in what he probably thought was an amiable way and said, \"You can cover up.\"\n\nHe turned his glare on me then looked back at the women, who were hurriedly pulling on clothes. \"This one blackmailing either of you?\"\n\nFor a second, I was honestly scared that they'd think it was funny to say yes, and I'd be on the receiving end of Gavin's titanic anger issues. But Molly shook her head and Leah spoke up, \"No. He's my boyfriend and we didn't know anything about this.\"\n\nGavin's glare returned to Connor. \"How do I reach these others?\" Connor looked blank, so I pointed to the cell lying on the table. \"Passcode.\" Connor babbled four digits. \"Paper and pen.\"\n\n\"Just take the phone,\" Connor said. It wasn't meant to be defiant but Gavin clearly wasn't in the mood to ask twice. The backhand sent Connor to the floor and I watched the trickle of blood come out of the corner of his mouth. \n\n\"So you can have the cops ping it later? Fuck you, shithead.\"\n\nMolly scrambled a pen and envelope out of her purse. Gavin pulled off a glove and scrolled through the phone. He copied some information down, shoved the paper in his pocket, and held up the phone. \"Any of those videos on here?\"\n\n\"No.\"\n\nGavin started to poke at it again, saying, \"If I find you're lying, I'm going to break every single finger and then your feet.\"\n\n\"Wait!\" Gavin paused and looked at him, a knowing sneer on his face. \"There's a five second clip of her\" \u2014 Connor nodded at Molly \u2014 \"that I had in case I needed to remind her. But it's not explicit, it's just\u2014\" The phone sailed out to follow the computer into the river.\n\n\"Where else you forgotten?\"\n\n\"Nothing, nowhere. I swear. I just forgot about that one because it's not very, you know.\" He was babbling as fast as he could. \"Nothing else. Nothing at home. I keep it all on the boat.\"\n\nGavin reached down and grabbed Connor's hurt hand. \"Let me explain something to you, Connor boy. You listening?\"\n\nConnor promised that he was.\n\n\"I find there's another copy, I'm gonna come back here and start breakin' bones and it won't stop until I get bored. And I got a long attention span. You unnerstand?\" Connor hunched over the fist Gavin was squeezing and gasped a promise that there were no other copies.\n\n\"This is over. When I walk away from here, you forget you saw me. You forget you ever knew any of these women. You absolutely fuckin' forget about trying to get even. Do you still unnerstand me?\" Another pained wheeze and a gibbered assurance.\n\n\"And you don't do this again. You get a woman to agree to let a piece of shit like you stick your dick in her, then that's your good luck. But you don't pull this shit again. D'ya unnerstand that?\" Again the squeeze followed by the gasp of agreement.\n\n\"If you should forget, let me explain what will happen. One night, this boat will burn. And it won't be empty. You'll be in it, awake and tied to that bed downstairs, screaming over your crushed nuts for what little time you have left before the fire gets you. One more time, do you unnerstand?\" He did. He was groaning as he swore he did. \n\n\"I'm not sure you do. Shitheads with your kind of money start thinking they'll just buy a little payback. It won't save you. The police won't save you. That limp dick you have as a bodyguard sure as fuck won't save you. I was kinda hopin' he'd be here tonight so I could put his ass down too since I figure he helps you with this shit. He's dogmeat if I find him.\"\n\nGavin loomed over his victim and gave a smile that came nowhere near being real. \"In your world, you're a bad ass. In my world, you're a pussy, Connor. You see these right here?\" Gavin lifted his arm to show some tats. \"I got those inside and it weren't for no fuckin' insider trading. You get my drift?\" Connor tried to nod but it turned into a squeal as the dislocated finger was nudged hard. \n\n\"And these?\" Gavin now pointed to four red teardrops embroidered on his vest. \"They're for other pussies who thought about being tough once I walked away. Rich fuckers like you. They're not tough any more. You'll be tear number five.\" Gavin leaned in and his voice dripped utter conviction. \"I. Will. Fucking. Kill. You.\" No squeeze followed that statement, just a look of total promise. I believed him.",
        "\"And you,\" he turned to me. The fist caught me totally unprepared and I doubled over in agony, every breath driven out of my lungs, a situation not helped by the hand clenched tightly on my throat. He drew me up to face him despite my desire to curl into a ball. \"You shut the fuck up too or, so help me, I'll put you in a fuckin' boat just so I can burn it. I got no beef with you unless you make me have one.\" \n\nGavin gave me a look of amusement, one that said, \"Didn't see that coming, did you?\" before tossing me back onto the couch. \"You,\" he looked at Molly, \"you got lucky this time. Use your fuckin' noodle with men.\" He looked around with self-satisfied expression. \"Five minutes and then you can leave. Not a second before.\"\n\nHe started for the hatch and paused as he walked past Connor on the floor. \"Hey, you know what?\" Connor started to shake his head. \"My cousin says fuck you!\" The toe crashing into his nuts put Connor out like a light. \n\n\"Go,\" I told the girls. \"I'll make sure he wakes up and let him know that we're through.\" They scooted.\n\nA few minutes later, I got in Connor's face. I gave him my best pissed-off voice. It wasn't hard since that's exactly what I was. \"I'll call an ambulance since your phone's gone. What do you want me to tell the police?\" He looked at me vacantly. \"My advice, unless you have a death wish, is that you came back to a burglary by a bunch of guys who don't even remotely look like that guy.\" He nodded. \"And, Connor, after that, I don't want to hear from you ever again. You got me thumped and you put Leah in danger. Not to mention it sounds like you're pretty much a rapist.\" \n\nI made the 911 call and told them I'd heard a shout from another boat and found its owner beaten. I reached down and grabbed his collar, pulling him up easily, ignoring his groans and feeble clutching at his balls. \"You stick to that story. I wasn't here nor were the girls. You drag me into this mess and I swear I'll break your fingers myself.\" I had him up on his tiptoes, easily supporting him with one arm. His good hand yanked at my forearm but, while I may not be Gavin, he didn't stand a chance. I could see the fear.\n\n\"Okay,\" he mumbled through destroyed lips.\n\nI walked around the cabin, gathering up the glasses and dumping them in the dishwasher. The water bottles went into the trash. I found the bottle of pills and, showing him what I was doing, I dropped them in the drawer of the bar. Then I did my best \"don't even think about talking to me\" impression until the police and EMTs arrived. Both of us stuck to our stories and, with a promise to give a formal statement on Monday, I headed out.\n\n<center>\u2666 \u2666 \u2666</center>\n\nWe were all meeting at the studio. I didn't want Connor looking over and seeing lights on my boat, and I certainly wasn't going to tell Gavin where I lived.\n\nI went to get the $3,000 I still owed but, as I went to hand it to him, Gavin said, \"I wanna renegotiate our deal.\" Shit!\n\n\"I thought your word was gold.\"\n\n\"It is, that's why I said renegotiate.\"\n\n\"And if I say no, do I get hurt?\"\n\n\"Nah, man. I walk out of here with the three K you owes me and we're done.\"\n\n\"Then...\"\n\n\"I got these.\" He opened his hand to show the three thumb drives. \"I figure you're the kind of guy that wants to do right by these ladies.\"\n\nI was. \"And what kind of guy are you?\"\n\n\"I'm not a fuckin' rapist like dipshit, but I might be the kind of guy that sees how much cash it's worth to them to get their pretty little hands on 'em.\"\n\n\"And how much is it going to cost me?\"\n\nHe jerked a meaty thumb toward the stone piece I had completed for the town council. \"I saw that last time I was here. I got a bar and I thought it might be cool to have something like that. A mascot sorta.\"\n\nI tried to explain that that piece weighed over a thousand pounds and his floors wouldn't like that but he just waved me off. \"Nah, nah. I don't want it in stone. I want it in wood like that over there\" \u2014 now he pointed to my start on the piece for Tori \u2014 \"but not airy-fairy shit like that. I want a person. And not a naked dude, I want a girl. The naked part's okay.\"\n\nI kept my face impassive while I thought about it. Molly made some sound and Gavin looked over at her. \"It surprise you I like naked chicks? I certainly liked what I saw of you back there, darlin'.\"\n\nShe flushed a little but held her ground. \"No, I'm sure you like your women naked. I just think it takes balls to renegotiate $3,000 into twenty-five times that much.\" \n\nShe succeeded in surprising him. He turned to me. \"You make that kind of scratch? Shit, I'm in the wrong business. Well, think of it as an employee discount.\" He waited.\n\n\"I'll do it as long as you realize it will take me three or four months, maybe a little more, to get it done. I've got things I already promised. And I remember,\" I held up my hand to forestall him, \"your code when it comes to people fucking with you.\"\n\nHe gave that little grunt that signaled amusement. He dropped the drives on the table. \"I'll give you back the rest when you deliver.\" He glanced back at Molly, then back to me. \"And make the tits look like hers. They were fuckin' beautiful. No offense to you,\" he said to Leah, \"you got serious tatas too. I'm just partial to hers.\" With the first real laugh I'd heard out of him, he pushed out the door and was gone.\n\nLeah and I had already said our real goodbyes when she told me she needed to hop a flight at the crack of dawn for a job later that day. She came up and put her arms around me. I saw Molly turn away and duck into her area. \"Bye, Rick.\"\n\n\"I'll drive you.\"\n\n\"No, I already called an Uber. I had a blast with you and I hope I see you again someday. And Rick, Molly and I worked out how we wanted all of this evening to go together.\" I didn't quite understand that, but she gave me a quick kiss on the lips and mashed those luscious breasts into me for one last hug, then was out the door.\n\nI started with the one I'd met. \"Adrianna? It's Rick Leland.\"\n\n\"Umm, hello, Rick.\" Her surprise was evident.\n\n\"I have a thumb drive with your name on it that supposedly holds a video.\" I heard a gasp and a small cry. I carried on quickly. \"I haven't looked at it, nor will I. I'll either destroy it or, if you give me an address, I'll drop it off to you. Your choice.\"\n\nShe was quiet. \"What do you want?\"\n\n\"Nothing. Hopefully Connor Thompson will no longer bother you.\"\n\n\"Why?\"\n\n\"You weren't the only one. Another woman's relative intervened. I happened to be there and found out what was going on.\" I heard a faint exclamation as I continued, \"Destroy it or drop it off, Adrianne? I've had a long night and I want to go to bed.\"\n\nShe gave me an address. \"Thank you.\"\n\nThe conversation with Lara was almost a word-for-word duplicate. Rebecca was a little different.\n\n\"And I suppose you think I'll be a party favor for you, too?\"\n\nI started to say, \"No, I don\u2014\" but she talked right over me.\n\n\"I told him I was done. Send the video or not, I was done. That goes for you too, fucker. So take it and shove it up your goddam ass. I don't care what happens with my fianc\u00e9. I'm not living like this. I told him I had my own fucking video and I was going to the police if I heard one more peep out of him. So, guess what, you cocksucker?\"\n\n\"Can I get a word in here edgewise?\" She paused the tirade and we got back on track.\n\nThree women \u2014 one embarrassed because we sort of knew each other, one wary because it was a weird situation, one belligerent just because \u2014 all somewhat reassured to see there was a woman in the car with me, took what I handed them and thanked me profusely.\n\n\"Now let's get you home,\" I said to Molly.\n\n\"Let's stop by your place, Rick. I want to talk about something.\" At my questioning look she shook her head. \"I could use a drink and it will take a while.\"\n\nMolly\n\n\"What would you like to drink?\" he asked me.\n\n\"First, I want to thank you for what you did. You saved me, pretty much literally. I know it cost you money. And I know you were prepared to risk jail for a second back there. I can't even begin to make up for that. And, your stomach ... I could tell that hurt a lot.\" He waved it away like it was nothing but I'd seen that fist land. I knew it probably ached right now. \"So, thank you, thank you, thank you. You're my best friend, Rick, and I love you.\"\n\n\"Love you too, Molls.\"\n\nI knew he'd misinterpret, so the pro forma response didn't bother me. I took a deep breath and plunged. \"If you're willing, instead of just a drink, I'd like to do this.\" I laid the two pills I'd taken onto the counter.\n\n\"Is that...?\"\n\n\"Yeah.\"\n\nHe was shocked, I could tell. I waited to see if I was going to end up a puddle of humiliation in the first fifteen seconds. Finally, he said, \"Why? You don't have to ... I mean ... we're friends.\"\n\nI shook my head. \"I'm grateful, you gotta know that even though words don't begin to cut it. But I don't use sex as a payback. This has nothing to do with that. I want to do this because I would like very much to sleep with you tonight.\" I let him process it.\n\nHe looked down at the pills. \n\nI answered the unspoken question. \"Because I used it with him and I'd like a better memory.\" I gave a little shrug. \"Actually, if I'm going to be honest, also because it makes things good.\"\n\nI'd already jumped off the cliff, metaphorically speaking, so, even though my nerves were buzzing, I just kept going. I went over to the bar and took two glasses. Glancing at him every few seconds to make sure he was okay \u2014 and to get some advance notice if I was going to end up crying \u2014 I poured a couple of fingers of Scotch into each. He didn't move or say anything. That was fine. The only reaction I dreaded was a refusal or a turn away.\n\nI set one down in front of him. Crossing over to the stereo, I found an early Billy Cobham CD I knew he liked and put it on low. Still acting like what I was doing wasn't coming out of left field for him, I flipped on a small lamp in the corner and turned off the main lights. He still hadn't moved. Mentally, I took a deep breath.\n\nI picked up the untouched glass sitting in front of him and pushed it toward him. His hand opened automatically. Picking up the pill, I leaned forward and held it an inch from his mouth, my eyes questioning. After a second, he reached up and pushed my hand down. My heart started to fall, as he said, \"Drugs aren't my thing, Molls.\" But he didn't let go of my hand. He didn't say anything else, either. I started getting excited again as no further words of refusal came. If he was going to balk, I thought he would have done so already. \n\nNodding, I pulled him away from the counter. Stepping in close, the hand with the drink curling in between us to rest against his chest, the other up around his neck, I leaned against him and started to slow dance. He may have been terrible at a club grind but anyone can sway in time with a partner. At the tune change, I looked up to give him a smile and take a sip. \"Drink,\" I reminded him. This song was a bit faster so I upped the pace but kept it to the simple two-step anyone who's been to a high school dance can do.\n\nSipping at each change, we danced our way through the whiskey. Halfway through the third song, his free hand had come up from lightly touching my waist to the small of my back. It felt fabulous. I finished my drink first and set the glass down, allowing me to snuggle in more closely. I slid one leg between his, my one hand flat against his chest while the other stroked the back of his neck. I let him keep the simple beat, excited by the guy under my hands, the press of my breast against his ribs, the knowledge that I was going to get laid. In a moment's pause, I was mildly amused to realize that I was even more excited by the knowledge that he knew he was going to get laid ... and that he wanted it.\n\nThe album ended. His drink had one swallow left in it and I opened my mouth and leaned toward his glass, allowing him to feed it to me. Pushing him down on the couch, I knelt straddling his lap to face him. I knew spreading my legs like that rode my skirt up to where I was flashing hard. I didn't care. It was coming off soon anyway. \n\nI kissed him gently, trailing a small line of kisses from his mouth along his jaw line, ending with a flick of my tongue in the hollow below his ear. Back to his mouth and the same on the other side. Pulling back, \"Are you okay?\"\n\nHe nodded.\n\nI leaned in for another kiss, letting my tongue trace over his lips, tasting the smoky liquor on them, before demanding entrance. I felt his hand settle on my hip. I also felt the shift where my mound met his body. He broke the kiss and glanced down self-consciously. \"I told you I wouldn't mind,\" I reminded him. \"I'm getting as excited as you are.\" I returned to exploring his mouth. \n\nPart of me wanted to rush ahead. Part of me liked the tease of dragging this out. I let him set the pace for now. His hand came up from my hip to stroke my ribs, then the side of my breast, before committing to a full caress. I sat up straighter, raising my arms to give him access. \"Go ahead, take it off.\" I dropped one shoulder and then the other so he could slide the straps down my arms. Leaning in, I let him capture a nipple in his mouth, working it with tongue and lips and faint hints of teeth while his hands stroked the cheeks of my ass. Pulling free, I twisted slightly to present the other for his consumption. \n\nHe pulled back to stare at them. \"The tattoos don't bother you?\" I asked. \n\n\"No.\" To prove his point, he took one back in his mouth, sucking harder, teeth present just enough to make me catch my breath. He looked up to check my reaction.\n\n\"Don't you dare stop,\" I reassured him. \"That went straight to my crotch.\" He moved to the other, giving it the same attention. They would be sore tomorrow and I loved the thought. I hoped I'd be sore in all kinds of places. \n\nWith my legs spread like this, I knew his lap would be getting damp very soon. My nipple extended as I pulled back from him, then snapped into shape as he let go the suction. I walked my knees back and stood. Lifting one foot, I set my boot on his knee. \"Help me with this?\" His fingers fumbled with the buckle then he grasped the heel and pulled it off my foot. I switched legs. \"Now this one.\" As I set the second foot back on the floor, I saw his eyes travel up and lock on my breasts again.\n\nTurning, I presented my ass to him. \"Unzip.\" I let him grasp the hem and wiggled my hips. Clad only in semi-transparent undies, it was time to get serious. I dropped to my knees on the couch beside him and reached for his belt buckle.\n\nLeah was prettier than I am. I don't mind admitting it about her. And, no matter what Gavin thought, those twenty-four-year-old knockers she had outshone mine. Fucking hell \u2014 as much as I hated to, I had to admit even The Bitch was prettier and had slightly bigger boobs. And I was already pretty sure Rick was a boob guy.\n\nBut I had one ace up my sleeve I'd bet my ass they didn't, because most women don't have the slightest interest in it.\n\nOver a decade of diligent practice had given me damn good control over my gag reflex. As long as I took it slow \u2014 and I was in the driver's seat right at the moment \u2014 and he wasn't monster thick, I could porn star a cock. And that's why I crawled up on the couch. Everybody knows you blow a guy by kneeling between his legs so he could look down and see your head bobbing and your tits swaying. But I knew, if you want to take him all the way, angle is key. I began to unbuckle and unbutton and unzip.\n\nI got him wet, saliva glistening the entire hard length, then I slowly lowered by mouth over him and kept going. The gasp of surprise thrilled me. I let my throat massage the sensitive head, pulling all the way back every fifteen or twenty seconds to allow a deep breath, then treating him once again to the sensation of pushing past the pharyngeal muscles, the ones that make most women give an obstinate \"No!\" to their guy's fondest wish in the oral department.\n\nAstonishingly, he seemed to understand his role: not once did he drive his hips up in an effort to get deeper, wetter, tighter like most guys do. Not once did I have to gag and push away with a look of, \"What the fuck is wrong with you?\" Except for progressively faster breathing, he held still, savoring the sensation of a warm, extremely messy mouth devouring him. I might have to teach him how to dance, but I didn't have to teach this guy how to get blown. \n\n\"I'm close.\"\n\nI pulled back, nodded to show I'd heard, took a deep breath, and descended all the way. My throat trembled a little, my tongue worked what little it could in what had become the very tight quarters of my mouth. I pushed that extra quarter inch to get firmly down and then tightened my lips so he could feel them flush against the base: mental porn of knowing how deep he was in. \n\nOne of these days, I thought, I'll take him on my back with my head hanging off a bed so that he could have the naughty visual of watching my throat bulge. \n\nMy hand cradled his balls. The other slid into his shirt and played against his nipple. After five or six seconds, my throat filled with thick liquid. Swallowing was out of the question, my gag would trigger, so I just rode it out, acknowledging what my body wanted to do but refusing to submit to it. When the jets finally ended, I slowly let him slide out, copious saliva and semen leaving his cock a mess. \n\nI've got no problems with the latter but, while I was perfectly willing to go down on him to clean up, my biggest worry with Rick \u2014 other than whether he could like me this way at all \u2014 was whether knowledge of that video made me a whore in his eyes. Gobbling a messy cock seemed risky in that respect. So, \"Hold still a moment,\" I said quietly. Stepping off the sofa, I stripped my underwear off. I noticed his eyes dropped like targeting lasers to the patch of fur between my legs: maybe he wasn't totally a boob man. I wrapped them around his length and drew the mess off. \n\nI looked up to meet his eyes, pleased at the contradictory expression on his face: half satiated, half excited. \"Rick, I would love to kneel down here and do it again, but I'm so excited I'm starting to drip. I need some attention.\" I stood, reaching out my hand. He put his in mine and I helped him to his feet, his balance slightly awkward by the pants dropping loose from his hips. I let go and turned toward the bedroom. \"Join me in there when you're naked. I'll be the one on the bed with her legs spread.\"\n\nI wasn't lying: I was so excited I was feeling short of breath. Between the fulfillment of a two-year fantasy and the slight buzz from the liquor, I wanted that guy's tongue between my legs and his fingers in me desperately.\n\n\"So, what's he like in bed?\" I'd asked Leah.\n\nShe shook her head. \"A properly bred woman never discusses intimate matters,\" she said with the most pompous air she could muster, pointing her nose in the air like a snooty society matron. \n\nThe effect was spoiled by our laughter but, \"Come on! Tell me!\"\n\n\"Find out for yourself, byotch!\"\n\n\"One thing. Throw me a bone! Just one.\"\n\n\"You're buying the beer?\"\n\n\"Deal!\"\n\n\"That man seriously likes going down. Before, after, whatever. And he absolutely does not suck at it, no pun intended.\" That sent a jagged bolt of dark lightning through my nether regions, never mind that we were sitting in a pub. I like head as much as the next girl, and I had a particularly warm spot for guys who were willing to be equal opportunity when it came to post-fuck oral. \n\nNow, all I could think about was that tongue stabbing into my pussy, those hands clasping my hips, my legs over his shoulders, my hands buried tightly in that long hair.\n\nLess than five minutes later, my heels were drumming lightly on his back as I surrendered to what would be only the first. I agreed with her: he didn't suck at all. And he loved it. I could tell. Some guys feel that first jerk, hear that first faint moan and catch of breath, and they're already mentally maneuvering north for some p-in-v action. Rick was in no hurry to move on.",
        "He let finger stroke inside me but switched his mouth to soft kisses on my outer lips and thighs. Then I felt that index finger turn more determined. A second finger joined it for a second \u2014 I thought to see if I liked being more filled, but no. It was for lube. That finger slid to my anus, playing with the nerves around there in soft stroking motions. \"Mm?\" he hummed the question.\n\n\"Yes,\" I gasped.\n\nThe mouth descended again with teasing, intermittent flicks on my button. That second finger added light presses against the muscle, spreading the juices and the saliva I could feel starting to flood downward. The press got more insistent and I allowed him entry, it sliding in just enough to fire every nerve around it. No prostate inside for me but nerves lined that opening, all screaming pleasure at the double intrusion into kitty and ass. In and out he sawed, the sharp jolts of pleasure combining with the warm glow of the molly, waiting for my cycle of pleasure to build up again. Breathing turned to panting. My hands locked in his hair to urge him, and his mouth fastened once more onto my sweet spot in an unrelenting and accelerating caress of soft tongue against hard nub. His other hand gripped the cheek of my ass to lock my pelvis against his face in a hold that wouldn't allow escape even if I wanted to flee the onrushing wave of my climax. I'm not a screamer, but I came close.\n\nWhen I quieted, his tentative stroking of my leg and soft kisses down there let me know he was ready to do it yet again if I wanted, but I didn't. I wanted the main event, not immediately, but damn soon. \"Come up here,\" I said. Soft kisses turned to hard Frenching. His hand grasped a breast, squeezing and sliding over the curves. \"Too small for you?\" I asked tentatively, afraid anything less than centerfold material didn't cut it for this guy.\n\n\"Not even remotely.\" He turned away from nuzzling my neck. \"That's twice you've asked about them. Stop. They are hot as hell and\"\u2014he met my eyes with a sheepish little-boy grin\u2014\"actually, I've been checking them out for, umm, a few months now.\" \n\nOh my God! I practically came just hearing that. I wanted this guy. Right. Fucking. Now. But, patience, Molly. Enjoy the ride.\n\nI relaxed back and let him have his fun, enjoying the compression, the moisture and warmth of his mouth, the twinges as teeth brushed the areola, the flash of lust brought by a tongue stroking roughly right over the point of the nipple. To say I was ready again, would be an understatement. \"What are your favorite positions?\" I asked.\n\nHe looked up at my face. \"Oh, I guess you on top. Umm, and missionary. I like to see a woman's face.\"\n\nI rolled up on one elbow. His face had the flush I expected. His eyes were bright and the light sheen of sweat showed he felt warm.\n\n\"On your back. I'm going to get you rock hard, then ride you. If you can, I want you to wait until I come. Tell me to slow down if you need to, but I want one good one with that thing of yours in me.\" He nodded. \"After, we're going to roll over until you're on top, and then I want you to take me hard ... as hard and as fast as you'd like. Rick,\" I gave him a wicked smile, \"I want to be sore in the morning.\"\n\nWe did. Without waiting for an answer, I slid down and sucked him deep into my mouth. I wasn't going for throat this time, just warm-up. When I heard his breathing start to quicken, I moved on top, took his cock in my hand, and slowly lowered myself down its length. My hands on his shoulders to support my weight, I rode. \n\n\"Slow a moment,\" he breathed at one point. I did, taking care not to move up and down but allowing a little circular grind against his pubic hair. \"Okay.\" Back to the vertical motion, my eyes never leaving his. \"Slow.\" Again, shifting gears to masturbate against his body. I didn't mind. I felt the pressure building in me and knew I'd get there very soon, regardless. \n\nI started a third time. I felt myself getting close and, without him saying anything, paused the up-and-down, went back to grinding, allowing him to subside a little. I didn't want any interruption in what came next. \"Don't come now,\" I begged breathlessly and began to go for real. I'd timed it well, five or six strokes in I felt the first spasm, then the second, and then I slammed myself all the way down on him and rocked my pelvis frantically against his to work my clit against his body. Wave after wave went through me. My nails left marks in his shoulders. I fucking came like a freight train.\n\nI was barely returning to awareness when I felt myself upended and thrown onto my back. I asked for hard and I got hard. I knew I'd feel this in the morning. Labia and cervix would say, \"WTF?\" But, for now, I wallowed in the pleasure I could see on his face, the flush spreading down his neck and chest, the recoil of my legs from the impact of his hips. I reached up and fondled those shoulder muscles that were as hard as the stone he worked with, stroked over the pecs and down the sides of the abs. I flattened my shoulders back to let him see my breasts sway in time as his eyes alternated between my chest and my face. I let my hips rise to meet his thrusts, letting him know I liked being fucked by him, that I wanted nothing more than his dick in me, and that there was no such thing as too hard or too fast. His eyes closed and he made a sound somewhere between a grunt and a groan as he pushed deep and held it, then one quick retreat and another slam all the way in, then a third before a long sigh of pleasure for the final shudders.\n\nRick\n\nWe both drowsed briefly. I came to first, looking down to the head nestled on my shoulder before traveling down over the breast lying against my ribs, the hips snuggled against mine so that one leg could be thrown over.\n\nMy first thought was, holy shit! This was Molly. My best friend. What the fuck was I doing screwing that up by having sex with her? Then her eyes opened. She took a moment to focus and then a big smile spread across her face. \"Hey.\"\n\n\"Hey.\"\n\nHer hand made little circular motions on my chest. I felt her hips shift and the sandpapery feel of closely trimmed bush against my hip. Her smile widened. \"Can you go again?\"\n\n\"I ... umm ... maybe.\"\n\nShe contemplated me for a long moment. The smile didn't leave her face. Maybe things weren't totally screwed up. \"I have some Viagra in my purse.\" My eyes widened at that. She carried that stuff? \"Will you take it?\"\n\n\"I...\"\n\nWhen I didn't complete that, she shook her head slightly. \"I'm not making a comment about performance. You were great and it's been, what, ten minutes? I'm not an idiot.\" She leaned down and gave me a kiss on the shoulder. \"We can wait until morning if that's what you want. But, if you're willing to accept a little chemical help, I'd very much like to go again. I'd really like a long, slow, sexy fuck with you.\"\n\n\"You have a potty mouth, you know?\"\n\n\"You've mentioned it once or twice. If you want to call it making love, I'm okay with prudes.\" She grinned to let me know she was kidding. \"But, right now, Rick, what I want is really intimate and unhurried and with you.\"\n\nI took the Viagra. She spent time helping it along. Her mouth traveled up and down my body, tiny bites alternating with kisses and then leisurely nursing on me below. She stared at the signs of it coming back to life with satisfaction.\n\n\"Will you go down on me now that we've had sex?\" She was walking her knees up the side of my body, almost as if the question was pro forma.\n\n\"Of course I will.\" That got me a huge smile. I let her kneel over my face, pulling her down onto my mouth to spend my own long minutes exploring her with my tongue and lips. She'd raise her hips when she got close, smiling to herself as her breathing calmed, then lower back down for more. Over and over she edged herself until she could tell my tongue was getting tired. \n\n\"One of my favorites is prone. I know it's not one of yours but, please, do it for a while and then we can finish the way you like.\" She moved beside me and stretched out flat on her stomach, legs spread enough that I'd have access. As I moved in to cover her, she raised her hips just enough that I could enter and then slowly pressed down against the mattress, taking care not to dislodge me. \"Just like that,\" she sighed. \"It hits the good spots just like that.\"\n\nOne of her hands went underneath her belly. I could feel her fingers brush me as she started a very slow frigging motion. The other arm stretched out to lie flat like the rest of her body. \"If you go on your elbows, you can hold my breasts.\" I obliged.\n\nIt was curiously intimate, far more so than up on our knees from behind. My entire lower body was in contact with her, my abdomen rocking on the fulcrum of her ass, my hands kneading her breasts. I moved slowly and carefully. The tickle of her fingers against my balls felt good. Occasionally I'd pause to make sure that I wasn't getting myself ahead of her, dropping my mouth to kiss my way across her neck and shoulders.\n\nThe minutes stretched by. Her breathing deepened. Tiny sighs were coming from her on each inward stroke. \"Please don't speed up,\" she begged. \"Just like that.\" I felt her fingers begin to work faster against her clit. \"But you don't have to be gentle with my breasts.\" I squeezed harder, and shifted my hands so that thumbs and middle fingers could roll the nipples between them. \"Oh. Oh. Oh!\" The last was drawn out in a long exhale of gratification and a press of round butt firmly back into me as I pushed down hard to pin her the way she obviously wanted.\n\n\"That was perfect,\" she sighed contentedly. The hand beneath her came out and reached back to stroke my flank. \"If you let me up, I'll face you.\"\n\nShe pulled me down for a long kiss after she turned. \"Thank you. Now you. Any way you want it.\"\n\nI took her at her word. Lying flat on her, I rolled over until she was on top, eliciting a small yip of surprise and a giggle. She started to sit up but I stopped her. \"No, flat. Let me feel your breasts against me and kiss me during.\"\n\nI wasn't checking the clock but my turn didn't take as long. She did all the work, letting me just savor the sensations. Her pelvis did a slow roll up and down, letting me slide within her a few inches either way. She kept her breasts flattened against my chest, my hands lightly tracing where they bulged to the side from the pressure, over and back to the curve of her butt. Her mouth feasted lazily on mine, alternately aggressive and accepting.\n\nI came for the third time, her tongue practically raping my mouth during the throes. When she was sure I was done, the kisses turned gentler, and then she smoothly disengaged and slid to my side, head on my shoulder. \"I love making love with you,\" she said softly and burrowed in. Sleep claimed us both.\n\nI woke around six thirty, a gentle snore coming from next to me. I needed to pee badly, so I got up, careful not to wake her, then went out to put coffee on. Rachel was almost always up by this time.\n\n\u25b8 You awake? \n\n\u25c2\u25c2 Yeah but can't believe this is my brother at this hour\n\n\u25b8 Bite me. I have a question. \n\n\u25c2\u25c2 Shoot\n\n\u25b8 Molly and me??? \n\nThe reply wasn't instantaneous and I feared she was searching for something like, \"Are you a complete idiot?\" I'm not quite as oblivious as Rachel thinks and I know how she'd felt about a couple of girlfriends in the past, Destiny especially.\n\n\u25c2\u25c2 As in: Molly and me \u2665\u2665\u2665? LOL\n\n\u25b8 Why are you a jerk? I wanted advice. Never mind.\n\nI petulantly ignored the ding of an incoming text. Then another. Then the phone rang. I was tempted to just send it to voicemail but I answered.\n\n\"I'm sorry. I was just teasing.\"\n\n\"I may have just fucked up one of the few good things in my life. I'm not really in the mood to be teased.\"\n\n\"Rick,\" Rachel said forcefully, \"I guarantee that you haven't fucked up anything.\"\n\n\"What do you mean by that?\"\n\n\"Just that, if she made a move on you last night, you haven't fucked up anything unless you embarrassed her. You didn't do that, did you?\"\n\n\"No, I\u2014\"\n\n\"Then you haven't fucked up anything.\"\n\nI heard noise behind me and turned to see Molly in the doorway of the bedroom, dressed only in one of my t-shirts. \"Do I smell coffee?\"\n\n\"I gotta go,\" I said into the phone.\n\n\"Wait! She's there? Rick, all BS aside, she totally has the sister seal of approval.\" That surprised me. I'd noticed that Rachel never seemed that close to Molly, though she always denied anything was wrong. \n\nI hung up and turned. I wasn't sure what to say. She took a look at my face and forestalled anything. \"Look, we can be all weird about this. Or...\" she headed for the coffee maker, \"we can just skip that part and move onto whatever comes next.\" She grabbed a mug out of the cabinet and poured, not looking at me. \"There's really only one thing.\" She rooted in the fridge for milk. \"For you, was that a one-night stand after too much adrenaline, or something more? I'd like to know either way.\"\n\n\"Umm...\"\n\nShe turned to face me. I could tell she was tenser than her words implied. \"Just spit it out, Rick. I swear you'll still be my best friend no matter which it is.\"\n\n\"What do you want?\" Basic nerd defense strategy: toss the ball away.\n\n\"I've been ready for this for years. I'd like it to be more than a hookup, but it's your call.\"\n\nThat took me by surprise. She read the expression on my face. \"I know. You're not exactly Sherlock Holmes when it comes to this kind of thing.\"\n\n\"Why didn't you let me know?\"\n\nSurprisingly, she didn't hit me with some typical-Molly answer like, \"Duh, shithead!\"\n\n\"I've got a simple rule.\" I felt a twinge of humor: it reminded me of what Gavin had said, though I was pretty sure the next words would be different. \"I don't cheat and I'm not interested in guys who do. If I'd let you know, and you were willing, I guarantee I'd have lost interest pronto. If you weren't willing, then all I would have done is make things awkward. Plus, you made a promise and I respect those kinds of things.\"\n\nI thought about it. She let me ponder, doctoring her coffee and then hunting around for English Muffins. I thought about what Leah had said last night. \"You and Leah planned this. She didn't have to go back early for a job, did she?\"\n\n\"No.\"\n\nI thought about who my best friend was. I mulled over the adult-only thoughts I'd had the last few months that included Molly, even one or two after I had a friend-with-benefits. I thought about what she'd just revealed: that she'd kept it from me so as not to cause a problem. Mostly, I reflected on the person I felt ... happy ... being near. The answer seemed pretty obvious. \"I kinda like having you around this way, Molls. A whole bunch. I vote more than just a hookup.\" \n\nI watched her shoulders drop down off the figurative coat hanger they'd been on, her entire body relaxing. She gave a quiet sigh, \"Works for me.\"\n\n<center>\u2666 \u2666 \u2666</center>\n\nMark had found me about a week after. I was getting The Nut Flush ready to move back to its regular mooring and was taking a break for lunch. \"Can I come aboard?\"\n\nHe dropped into the seat across the table from me. \"You know,\" he said without preamble, \"when I first heard the news that a member of this club had been badly beaten aboard his boat and you found him, I started to get concerned.\" He dropped a newspaper down, open to the headline that read, \"Local Businessman Victim of Robbery\".\n\nI didn't say anything.\n\n\"I set that article down in front of Sophia at breakfast this morning, and damned if I didn't see an expression of satisfaction on her face.\" He stared out the side window at the water. \n\n\"I told you before that Sophia is privy to a lot of stuff that she can't tell me, and one of the rules of our marriage is that I don't question what she doesn't offer, so I didn't ask her anything.\" He glanced at me. \"I'd just like a word or two \u2014 purely hypothetical, of course \u2014 to ease my mind.\"\n\nI met his gaze and gave him what he wanted. \"Coercing women into sex.\"\n\nHis gaze went back out to the water. His mouth tightened. \"Was Sophia one of the targets?\"\n\n\"Not successfully.\" His eyebrows went up but he didn't ask me to elaborate.\n\nHe gave a little nod and stood. He reached out to shake my hand. \"You called it right. I'm not the slightest bit angry with Sophia. Stop by sometime, anytime at all, for a drink. We'd like that.\"\n\n<center>\u2666 \u2666 \u2666</center>\n\nIt wasn't long until Connor Thompson was in the news again: \"Prominent VC charged in Sextortion\" was splashed on the crawl of the local news channel. \n\n\"Go, Rebecca.\" Molly looked at me quizzically from the kitchen where she was cutting vegetables for dinner. I pointed at the TV, adding, \"Though it's blackmail, not extortion.\" Frank would laugh if he heard me say that. \n\nI picked up the remote to try to find something worth watching when I felt a hand touch my shoulder and slide up to cup the back of my head. When I looked up, Molly leaned in and gave me a soft kiss, one totally unlike the demanding embraces of the last few weeks. Her eyes were shiny, like she was close to crying. She smiled, gave me a second kiss, and went back to the kitchen.\n\nKate's Epilog\n\nI drove Sammie over to Rick's studio to drop her off. He was spending a lot of time there trying to get a piece finished. I assumed it was the commission for Victoria Carter. \n\nI was still a bit irked at that whole article thing, but I was actually in a good mood overall. I'd been spending more time with Sammie, which kept me occupied now that I didn't have Scott to entertain me. I'd asked Rick if he would let me have a couple of extra days with her. I was feeling down and some mother-daughter time seemed just the ticket, maybe a long weekend trip. Up until now, Rick and I'd adhered to the visitation schedule reasonably closely. We'd each had an occasional \"Something came up. Can you take her tonight?\" but that was it. So, I had been a little nervous about asking for this. \n\n\"Rick, I have a favor to ask.\"\n\n\"Okay, what?\"\n\nThat was a surprise right there: no hostility in his tone. \"I'd like to keep Sammie a couple extra days and take her Disney World. Just the two of us. No one else.\" I rushed to get that last part in before he responded. I knew he worried about being supplanted as Sammie's dad. We weren't to the point of casual conversation, yet, and I hadn't told him about the Scott situation. He didn't immediately respond, so I started to fill the silence. \"I know it's a\u2014\"\n\nHe interrupted me. \"I guess that would be okay. She'll love it. You'll get some major brownie points with the munchkin.\" \n\n\"Oh!\" I was so surprised, it took me a second to remember to say, \"Thank you. The next big thing can be yours so we're even.\"\n\nNow, a week later, the shock hadn't entirely worn off at how amiable that conversation had been. In fact, his whole attitude seemed to have changed, a hopeful sign. I'd practically fallen over on Friday when he asked if I wanted coffee while we waited for Sammie to gather her stuff. I guess my apology had been a great first step. Not to mention, my conscience prompted, that it was the right thing to do. Hopefully, I could mend my mistakes despite how hopeless that had seemed eight months ago.\n\nAs I pulled up outside his studio, I saw Sophie's beautifully restored vintage Mercedes with the \"SL 4 SL\" license plate Mark had put on it when he gave her the car. Everyone turned when Sammie bounced in with her usual shriek of, \"Daddy!\" and yelling, \"Look at my mouse ears!\" I got a small nod of greeting from Rick, a warm smile from Sophie, and a cool one from Molly.\n\nRick scooped her up onto his shoulders and, after everyone had admired her ears, they turned back to the painting they had been looking at. It was a portrait of Sophie. Though I didn't want to say anything nice about Molly \u2014 my irritation with her and Rachel hadn't completely disappeared \u2014 I had to admit it was a good likeness. Sophie stared at it for a long time without saying anything.",
        "\"Do you dislike it?\" Molly asked quietly. \"If you do, please tell me.\"\n\nThe response was immediate. \"No! I like it enormously. At first glance, I was disappointed that I wasn't looking my best but, the more I look at it, I think maybe I am.\" She turned to Molly. \"Aren't I?\"\n\nMolly gave a little grin and I saw Rick's nod.\n\nThe central figure was sitting on the bed in a loosely tied dressing gown \u2014 a blue that echoed her eyes \u2014 one bare leg pulled up in front of her while the other was curled underneath. She was looking up and slightly to her left, straight out at the viewer, a breast just barely perceptible in the shadows at the open throat of the robe, while a fold of cloth and the crossed ankles preserved her modesty below. There was no makeup, no Hollywood-applied glamour to her face. The honey-gold hair was neither coifed nor bed-head, simply a woman's hair let down at the end of a day, and she was in the act of removing an earring.\n\nShe wore with an expression that, by some trick of the paint, I knew was scant milliseconds away from breaking into that incandescent smile, one that had already caused those startling eyes to crinkle with pleasure. \n\nThree secondary images, far more transparent than I was used to in Molly's work, hovered to the sides: Sophie's first minor role as the teenage Margaret Dashwood; her break-out part as Amanda, the wife in The Summer of Eucalyptus; as a topless-from-behind Lysa Dean on the couch, peering over her shoulder to tempt Ron Easterland's character in that scene from The Quick Fox.\n\n\"I did it backwards,\" Molly explained. \"The public you is in the shadows because you wanted Sophia, not Sophie. I call it Sophia and Mark.\"\n\n\"Of course.\" Sophie and Rick said at the same time. They glanced at each other and smiled. \n\nI leaned in to get a closer look at the shadow images. \"Mark?\"\n\n\"It's who I'm looking at,\" Sophie answered me. \n\nThe three of them turned back to the painting. Molly I get, and I suppose Rick, but Sophie had been from my world, was my friend. Why, then, did I feel like an outsider looking in? I felt a flash of something akin to dejection. \n\n<center>\u2666 \u2666 \u2666</center>\n\nLater, I was getting out of the car when I saw Sammie's pack still on the back floor. I gave a growl of frustration: I knew it had stuff she'd need the next day. Sighing, I called Rick and explained.\n\n\"I'll be home for another hour or so,\" he said. \"I've got company or I'd come get it and save you the trip.\"\n\nThat was nice to hear. However, the thought that he was entertaining Blondie more than balanced out the good feeling. \"I'd rather not meet your girlfriend, Rick. Could I just text you when I'm there and you\u2014\"\n\n\"Leah wasn't my girlfriend, Kate. But it doesn't matter because she's gone back to California.\"\n\n\"Oh, okay.\" Suddenly I felt enormously better.\n\nHe opened the door. He looked yummy in a navy suit and light-blue oxford open at the neck. At first, I thought he was just going to take the pack send me on my way, but he hesitated and shocked me again, \"Would you like a drink?\"\n\nI came in and saw Sophie and Mark. And Molly. Not street Molly in Converses, black jeans, and an over-sized flannel shirt over a tee. She was in a pair of tailored slacks that accentuated her long lines, a silk blouse that exposed a hint of the girls, heels ... the whole nine yards. And I almost did a double-take, was that a tattoo that peeked out of that neckline? I'd known about her arm but...\n\nMy mouth made its way through the social niceties while my mind raced. I'd never worried about Molly even though I knew she was attracted to Rick. But that was because he wasn't the unfaithful type, and because I was certain his tastes ran more to girl-next-door than grunge-next-door. \n\nBut the first was no longer a barrier for obvious reasons. The second, well, she didn't exactly look grunge right now. I'd wear those clothes. \n\nPlus, I'd read those Cosmo articles that said some men equated tattoos on women with promiscuity. If Rick was one of those guys \u2014 I really didn't think so, but I'd learned the hard way there were sides to Rick I didn't know \u2014 then the tiny ladybug on my hip seemed a lot more frigid that the koi on her arm, let alone whatever was just barely showing.\n\nAs I watched, she didn't seem to be circling the wagons. Her greeting was distantly friendly, about like mine since our last conversation hadn't ended that well. She didn't immediately move to Rick's side or track his every move with her eyes. In fact, she just went back to a conversation with Mark. Maybe tonight was just going out as friends. Celebrating the completion of the portrait or something.\n\nNonetheless, I felt anger stirring. The same kind I'd felt that day when I saw Rick check out Blondie's chest by the restaurant. I kept it off my face. Softly, softly, catchee monkey.\n\nI was distracted by Sammie, Ella, and Mac racing out of the back, followed by Rachel in old jeans and a sweatshirt. Cries of \"Mommy!\" and \"Aunt Kate!\" blended with Rachel's quieter, \"Oh, hello, Kate.\" Clearly on baby-sitting duty.\n\nI turned to Rick who was at the bar, patiently waiting for me to tell him what I wanted. \"It looks like you're in the midst of going out. Maybe I'll take a rain check if you don't mind.\"\n\n\"Sure, Katie. That's fine.\"\n\nI didn't see this coming.\n\nMolly's Epilog\n\nTwo days after showing Sophie \u2014 sorry, Sophia \u2014 the portrait, I got a text from her:\n\n\u25c2\u25c2 The goofball practically cried!\n\nIt made me feel good. The little pick-me-up was welcome. \n\nEver since The Bitch showed up right before my first real date with Rick \u2014 I didn't count when I was Connor's arm candy \u2014 I hadn't been at my most chipper. I'd seen her surprise at the sight of me, the quick assessment of how I was dressed, followed by the flash of calculation directed at Rick. I saw the determined look she got and suspected what it meant: buyer's remorse at trading Rick in for the rich fucker. I resisted the urge to say anything and continued my conversation with Mark, but uncertainty wormed its way in. She was prettier than I was, came from the same type of background, was the mother of his daughter \u2014 I knew that counted for a lot \u2014 and, probably most scary: already a master at the Get Rick Leland game.\n\nNothing that evening confirmed my fears. In fact, they seemed completely stupid. Rick paid attention to me, never seemed to wander off into thoughts of might-have-been, and later, after reminding me that young ears were just down the hall, proceeded to fuck me up one side of the bed and down the other. But still.\n\nI showed Sophia's text to Rick and he smiled. \"Of course he did. Any guy'd feel that way.\" \n\nDuh! Having that particular face light up at seeing you would probably make any straight guy feel like a million bucks. \n\nBut, apparently, I misunderstood. \"Umm, after seeing it ... that picture you owe me, would you'd be willing to do a self-portrait?\"\n\nThe glow I'd felt from Sophia's text paled next to the warmth the implications of that sent through me. Afraid I was misinterpreting him, I asked, \"Like that one?\"\n\nHe nodded. \"I was...,\" he stumbled a bit, looking very self-conscious. \"That spot in the corner of the studio, well, I'm kind of used to having my girl there. And, it's just kind of a thing with me...\" he trailed off.\n\nThe general warmth turned into a bolt of heat that headed south. \"That was a very romantic thing to say, Mr. Leland.\"\n\nHe flushed.\n\n\"However, I'm not feeling particularly romantic right now.\" \n\nI waited the heartbeat to allow confusion to set in on his face. \"I'm feeling particularly turned on, and I'm wondering how you'd feel about spending the evening doing me?\" I straddled his lap and slid my wrists up through the sleeves of his t-shirt and out the neck to clasp behind his head. It brought my mouth within inches of his face and a slightly wiggle of my arms showed him they were trapped. \"You could tie me to the bed, cut every single piece of clothing off my body, and have me in just about every which way you can possibly think of. There'd be nothing I could do to stop you.\"\n\n<center>\u2666 \u2666 \u2666</center>\n\nRick took me with him to Gavin's out in Somerset County. It was what you might expect: a massive bar running the length with loads of taps and cheap-to-middle-shelf liquor, lots of scarred oak tables to the side, a few pool tables in the back. He met us there one morning before opening time. Rick lugged the hundred pounds of wood in and set it where Gavin pointed, pulling off the covering.\n\nTall, cowboy boots, legs that went for miles, hip-hugger jeans that covered an ass to die for, tiny waist tight enough to bounce a quarter, vest hanging open to expose tits that, as per request, were exactly the size and shape of mine \u2014 talk about self-conscious moments, but he'd told me that close inspection was necessary for artistic accuracy \u2014 big hair, and an expression that said, \"Bite me!\" while a hand gestured with circled thumb and fingers.\n\n\"Fuck, yeah!\"\n\nGavin looked in closely at the chest and then I heard that snort that passed for his laugh. Traced across the breasts and belly was a close replica of my tattoo done in a stain fractionally darker than used on the rest of the skin. You had to be close to see it. \"Molly did that part,\" Rick said. \"It took her hours.\"\n\nHe turned to me. \"Fuck, yeah!\" It seemed to be his favorite artistic judgment. \"I'm gonna call her Lucille ... after the song.\" I didn't know if he was talking about the Kenny Rogers tune or Little Richard's but I just nodded. \n\nHe turned to Rick and handed him an envelope. \"The two K. We're good. Maybe I even owe you a drink or two on the house. Nice doin' business with ya, Rick. You got my number but, bud,\" his voice turned grave, \"you don't give that number to anyone without my say-so, unnerstand?\"\n\nGavin turned to me. \"Glad to see you got better taste in men now, darlin'. If you're willing to settle for second best that is. Otherwise, you look up ol' Gavin.\" He gave an actual laugh, ogled my chest one last time, then waved us off.\n\nJesus! Was it that obvious I was with Rick? I glanced over at him and, beneath the smile, saw a relaxed and contented look on his face. It was an expression that I hadn't seen for the better part of a year.\n\nRick's Epilog\n\nA grueling month later, I drove out to Tori's new house. I had refused to let her see the table base before delivering it. \"I don't like to show things before they're done. If you hate it, I'll redo it.\"\n\nShe laughed. \"I won't hate it. You're not telling me something.\"\n\nI let her hover next to me as I pulled the mover's quilt off the wood and helped the glass guy who'd followed me here set the tempered circle into place. When we had it positioned correctly, I set one chair by the table, then gave him a clap on the shoulder, slipped him a twenty, and said, \"Thanks.\"\n\nBy the time I looked back from his exit, Tori was already seated and looking down through the glass. She looked back at me with a quizzical expression. \"Well, I presume I'm looking at it in the wrong way but...\"\n\n\"Actually, you're not. First, tell me if you like what you see the way it is.\"\n\nBurled English wych elm formed four sturdy arms that sprang out of a base made from a twisted mass of root stock pierced with what looked like knotholes, swirled up and met the glass in an asymmetric pattern. Linseed oil had brought out the soft chatoyancy of the timber, and the whole thing glowed in the morning light. \n\n\"It's absolutely stunning ... and I'm waiting, mister,\" she said with mock severity.\n\n\"Well, ma'am, it occurred to me that you might entertain someday. And, if you did, you might not care to advertise your relationship with Jean.\" I unrolled the second quilt I had, revealing several lengths of wood. \"So, voil\u00e0, these are removable. If you'll give me a moment.\" I smiled at the pleased sound both she and Jean made and ducked down to slide them into the holes in the base. When settled, they didn't reach the glass, curving this way and that in the middle of the table. Rocking back on my knees, I looked up at her expectantly.\n\nShe stared for a long moment, then turned to me and said softly, \"You are worth every penny and then some, my dear boy.\"\n\nJean leaned down so that she was looking over Tori's shoulder. After a second, her arms came up and wrapped around Tori in a way that mimicked the wooden arms enfolding her own image in the illusion. \"Thank you,\" she said to her partner. Looking up at me, \"And thank you for making me so beautiful.\"\n\nAs Tori walked me to the door, she put her arm through mine. \"Please don't be a stranger, Rick. Come visit us out here some time and bring your Molly.\" The wicked grin appeared. \"Rumor has it that she actually is your Molly now.\"\n\nI looked at her in surprise. \"Sophia?\" I hazarded.\n\n\"Actually, it was Mark who slipped up.\" She pulled my arm until my head came down to her level for a quick peck on the cheek. \"Thank you for everything that you do.\"\n\n<center>\u2666 \u2666 \u2666</center>\n\nMolly was waiting when I got home. She was twirling a thumb drive between her fingers. I didn't recognize it at first, then I saw the piece of tape on the one side with the word \"Molly\".\n\n\"You still have that? Why hasn't that gone in the trash compactor, yet?\"\n\nShe didn't look at me. I just waited. \"Do you want to see it?\" she asked finally. She held up the drive so I'd know what she was talking about.\n\n\"Why the hell would I want that?\"\n\nShe shrugged. \"I don't know. Wanting to know what Connor got? Wondering what kind of slut your new girlfriend is?\"\n\n\"You're not a slut. Period. It seriously annoys me when you say that.\" She looked a little abashed. \"And I don't want to see you having sex with someone else. I'm a jealous kind of guy. Why? Is there some reason you want me to watch it?\"\n\n\"Fuck no! I don't ever want you to see this! But you went through a lot to get it, so I'm offering if you want.\" She finally looked at my face. \"It just took me this long to work up the courage.\"\n\nI shook my head no.\n\nShe nodded and I could see the relief. \"Okay, but, I swear, Rick: you'll get everything he did and more. I'll even make a video with you so that you know I didn't trust him more than you.\"\n\nI shook my head again. \"If I want to be reminded of something we do, I'll just ask to do it again.\"\n\nShe smirked at that. I opened the closet and pulled out a tool box. Grabbing a hammer, I handed it to her. \"Use the chopping block so you don't ruin my table. I'm gonna run out and get some groceries. What do you want for dinner? It's just the two of us tonight. Ella wanted Sammie to sleep over.\" \n\n\"Let's go get sushi.\"\n\n\"Okay, but I still need some things. Back soon.\"\n\nI walked out the door to the sound of motivated pounding in the kitchen.\n\nI walked back in to the sight of Molly in one of my dress shirts, drop-shouldered from the size, sleeves rolled up above her elbows. She had several buttons undone, and it was held from gapping only because it was tucked tightly into jeans. I didn't need her to move and see the sway to know that she had nothing underneath: the line of skin from her neck to her sternum was broken only by her tattoo, and two sharp peaks decorated the front of the shirt.\n\nFor a second, I remembered the one and only time I'd managed to talk Katie into going braless in public wearing anything other than a dress designed specifically to accommodate it or a bathing suit. It had been my birthday and we were in the Caribbean. It hadn't been easy and she'd been tense the whole time. Then the memory passed and I realized there was no nostalgia or excitement associated with it. Nor was there resentment that Scott could probably talk the new Katie into it more easily nowadays \u2014 I didn't really care.\n\nMolly knew I found jiggle the absolutely drop-dead sexiest thing going. So, she offered it just because it turned me on. So what if every guy in the restaurant stared and wondered what the hell I had going for me? Her attitude was, \"Yeah, I like sex. Big deal. It's between him and me, and you can think whatever you choose.\" \n\nOr, since she still had a potty mouth, \"...you can think whatever fucking shit you want.\" \n\n\"Thank God she cheated,\" I said out loud.\n\nMolly looked startled for a second, then lit up and took my arm to go.\n\n<center>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500</center>\n\nWell, I know it was a long ride. If you got here, I hope you enjoyed it.\n\nAlthough this story's done (in my mind) for the moment, I may come back someday. Obviously, Kate has some delusions she needs to work through. K\u00fcbler-Ross would probably say she's moving out of Denial and Anger, and heading into Bargaining. Molly would probably say, \"The Bitch is a stupid c--,\" except she doesn't use that word. Rick probably wouldn't say anything. \n\nIt was tempting to burn The Bitch here but I think her comeuppance takes a while: a slow, steady drip until it comes home to roost. In my mind, whether the story ever gets written or not, I have a pretty clear picture of karma rearing its head down the road. For now, unhappiness every time she encounters what she threw away is enough hold us, I think. \n\nAnd, of course, Molly's still struggling a little with not being a bossy smart-ass with Rick. Plus, she needs to teach him to dance. And deal with the imbalance she frets over: the one between what she did with Connor and what she's done \u2014 so far \u2014 with her guy. It's important to her that Rick becomes the winner in that comparison. And I'd like to see if her take on how he'd handle dinner a casa dei Trevisani is accurate.\n\nAnyway...\n\nThanks again to John D. MacDonald for the entertainment long ago. Thanks to everyone who read it.\n\n-C"
    ],
    "authorname": "chasten",
    "tags": [
        "blackmail",
        "blowjob",
        "boat",
        "cunnilingus",
        "deep throat",
        "divorce",
        "oral"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-tawdry-tangerine-farewell-pt-05"
}