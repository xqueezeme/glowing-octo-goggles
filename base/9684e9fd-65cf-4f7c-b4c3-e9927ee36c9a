{
    "title": "Loopholes Ch. 01",
    "pages": [
        "Author's note: The male protagonist here is the very same Nick from my 'Buttfuck Buddies' stories. The events described here take place a couple of years before the ones in that series. \n\nThis is a work of fiction. All characters are eighteen years or older. Don't expect realism and you won't be disappointed when you don't find it! Enjoy!\n\n***** \n\nWhistling the tune of 'Moon Over Marin' by Dead Kennedys, Nick slowly shuffled his way through the smiling, laughing people gathered in the spacious backyard of pastor Jay's house for the minister's birthday party and the traditional celebratory barbeque that came with it. Much to his own surprise, Nick had to admit that it actually felt pretty good to be back. \n\nHis first year of college had been much more interesting than he had expected and he had gotten pretty used to being on his own, yet coming home for the summer holidays and seeing some familiar faces was really nice. Although Nick had never technically joined pastor Jay's flock and had always limited his participation during religious services to his duties as the drummer in the band, he was no stranger at all among the crowd of festive churchgoers. Everyone he met greeted him with kindness, asking how things were and telling him how nice it was to seen him again. In most cases, Nick knew for a fact that those sentiments were genuine. \n\nOnce he made it across the crowded backyard and reached the sizzling grill, Nick finally saw the pastor himself, laughing and chatting with other guests as he flipped burgers and sipped on his beer. As he marveled for the umpteenth time at the uncanny resemblance between pastor Jay and Don Draper from 'Mad Men', Nick approached the man of the hour and tapped him on the shoulder. As Jay turned and recognized him, Nick barely managed to wish the burly pastor a happy birthday before Jay exploded in a big laugh and trapped Nick in a bone-crushing hug that knocked the wind out of the young man's tall, lanky frame. \n\n\"Nick! Good to see you're back in town, son!\"\n\nAfter letting him go and asking him extensively about college and music and how he was doing, the pastor handed Nick a veggie burger and thanked him profusely for coming to his birthday party, concluding by adding in a conspiratorial whisper that the church band's sound just wasn't the same since Nick's departure the previous fall. \n\n\"By the way, do you wanna play some songs later, when the rest of the band arrives?\" pastor Jay asked, grinning broadly. \"I'm sure the guys will be happy to have you jamming with them again.\" \n\n\"Sure, no problem,\" Nick shrugged, adjusting his geeky glasses. Unable to hide a hint of sarcasm from his tone, he then added with a snicker: \"I assume you'll join us too for some Rolling Stones covers at some point, right?\"\n\n\"You bet I will! Maybe we'll even do 'Sympathy for the Devil' this time!\" the husky pastor replied, chortling and heartily slapping Nick's slim shoulder before returning to grilling food and chatting with the other guests.\n\nAs he saluted the pastor with a nod and headed back into the crowd, Nick couldn't help but laugh to himself and shake his head at the thought that the only man of the cloth he knew personally was also one of the least priestly-looking dudes he had ever met. Saying hello here and there at the members of the congregation that greeted him, Nick kept mostly to himself as he ate his veggie burger and washed it down with lemonade. Then, as he skirted around the edges of the vast backyard, he finally caught a glimpse of someone that he was genuinely looking forward to seeing again. \n\nSmiling and chatting with everyone around her, with her chocolate brown hair pulled back in a signature ponytail and her hazel eyes sparkling with guileless joy, Tessa looked as beautiful as Nick remembered. Her green summer dress hugged her curvy albeit petite frame perfectly, enhancing the jutting fullness of her tits and the bouncy, plump roundness of her protruding bubble-butt. As he walked up to her, Nick couldn't help but feel a stirring in his groin at the thought of all the times he had fucked Tessa's beautiful ass and pumped her tight little butthole full of cum during their senior year in high school, when they were still a couple. \n\n\"Now this is what I call a sight for sore eyes!\" Nick said with a smile as he approached Tessa from behind.\n\n\"Oh my god! Nick?!\" Tessa exclaimed while still turning around, her eyes wide with surprise, a big beaming smile dancing on her sensuous lips as her whole face brightened up with excitement at the sight of her ex boyfriend. \"I didn't even know you were back yet! How... When... Oh, it's so good to see you, Nick!\"\n\nSquashing her buxom jugs against his chest, Tessa squealed happily as she locked her arms around Nick's tall frame and hugged him tightly. As Nick wrapped her in an affectionate embrace in turn, Tessa purred contentedly and turned her face up to meet his bespectacled gaze. Behind his nerdy glasses, Nick's brown eyes were as intense and mesmerizing as ever, giving Tessa the familiar feeling that he was staring right into her very being, seeing her and accepting her and liking her for who she truly was.\n\n\"You look amazing, Tess. As always,\" Nick said, his deep calm voice and his matter-of-fact tone making Tessa shiver in his arms as a wave of memories hit her full blast, setting her heart aflutter. It hardly made any difference to her that she was technically still a virgin and that the two of them only ever had anal and oral sex when they were a couple: as far as Tessa was concerned, Nick was her first, and always would be. He was the guy who had made her a woman, her first love, and as such he would forever have a special place in her heart. \n\nTessa was still staring dreamily into Nick's thin, handsome face as he asked: \"Are you going to sing us something later, Tess? Please say yes... I don't want to be stuck playing cheesy covers for an hour with your dad!\"\n\n\"Come on, Nick! It's his birthday, let him have some fun!\" Tessa laughed, playfully poking Nick's side as they disentangled from their hug. \"But yeah, I'll sing something. Daddy already convinced me to sing 'Shine A Light' and 'You Can't Always Get What You Want', so...\" \n\nAfter letting out a resigned groan, Nick perked up and said: \"Well, at list I get to hear you singing again, even if it's just the Boring Stones.\"\n\n\"Oh, shut up already! We both know you secretly love them...\" Tessa teasingly snickered.\n\n\"Hey, easy now!\" Nick chuckled, looking around in mock-alarm. \"I don't want your dad to hear that, it would ruin my reputation!\"\n\nLaughing and smiling together, Tessa and Nick forgot about everybody around them as they talked and talked and talked, catching up and reminiscing, happy to enjoy each other's company and to be reunited again.\n\nFrom their texts and phone calls and video chats, Tessa already knew that Nick was seeing some Mia chick from college, and, even if they weren't officially together, it was clear to the pastor's daughter that Nick was really into this new girl. Similarly, the silver promise ring on Tessa's finger was a constant reminder to Nick that things were getting fairly serious between his high school sweetheart and the guy she had met at the local Christian University. Still, as if following an unspoken agreement, both Tessa and Nick avoided asking direct questions about the other's love life, choosing to savor their renewed closeness instead.\n\nHalf an hour later, Tessa and Nick were sitting in the swing on the front porch of the house, chatting quietly by themselves away from the crowded party, when the arrival of a car pulling into the driveway followed by the sound of two high-pitched voices forced their attention away from one another. \n\nSharon and Sally, Tessa's younger sisters, had just returned from their daily training session at the track and were talking heatedly as they walked up to the house. Both blonde and tall and slim like their mother, Sharon and Sally were identical twins, and though it was easy to discern them from each other once one got to know Sharon's saucy tomboyish attitude and Sally's reserved and dreamy nature, the only thing that set them apart at first sight was the fact that Sharon styled her hair in a cute chin-length bob while Sally let her golden tresses grow long. \n\nAs the twins made their way to the house, Nick couldn't help but let his eyes linger on their long shapely legs, exposed as they were by their skimpy running shorts, and on the swelling of their ripe pointy breasts, enticingly showcased by their tight-fitting tank tops. Most of all though, it was the flaring curve that ran from the twins' thin waists to their toned heart-shaped butts that drew Nick's attention, making him smile as he told himself that Tessa's formerly skinny little sisters had really filled out nicely in the last year, developing two very similar and equally delectable asses. Being very disciplined track stars and having inherited the pastor's wife's slender hourglass build, both Sharon and Sally were endowed with taut protruding butts that a devoted ass man like Nick couldn't help but admire reverently. Still, as much as he was enjoying the sight of the twins' round little bottoms swaying side to side as the girls approached, Nick knew that neither of those two perfectly fine asses could compare to Tessa's luscious, jiggly, beautifully plump booty.\n\n\"I'm telling you, it's okay!\" Sharon emphatically stated, staring right into her twin's blue eyes.\n\n\"How can it be?! It seems impossible...\" Sally replied, arching her eyebrows in doubt and shaking her head negatively. \"Besides, it's literally wrong... Like, unnatural or something.\"\n\n\"No it's not! Lots of people do it and most of them like it too, you know that! Oh look, Tessie is with Nick!\" Sharon exclaimed, elbowing Sally as she noticed their big sister and her former boyfriend waving at them from the porch. \"Perfect, let's ask them! They should know!\"\n\n\"No! Sharon, wait! Don't...\" Sally gasped, her eyes growing big with panic as she attempted in vain to stop her exuberant twin from rushing ahead and involve Tessa and Nick in the conversation.\n\n\"Hey guys!\" Sharon chirped as she stood straight in front of Tessa and Nick, her arms crossed under her perky breasts and her head cocked to the side as she bluntly asked: \"You two used to have anal sex when you were together, right?\" \n\nAs Nick slow-blinked in momentary befuddlement, Sally groaned and cast her unsubtle twin a half-desperate and half-incinerating glance before burying her face in her hands. For her part though, Tessa just let out a soft laugh and shrugged, unfazed by her little sister's characteristic directness.\n\n\"Of course we did, Sharon. I thought you knew that already,\" Tessa placidly replied. Within a second though, she was glancing inquisitively at the twins in turn, automatically switching into her protective big-sisterly mode. \"Is that what you two were arguing about? Wait... Is someone pressuring you to do stuff? Because I'll kick them in the nuts myself if that's the case! Did either of you get a boyfriend and forgot to mention it to me by any chance?!\"\n\n\"No, Tessie, that's not it,\" Sally responded after sharing a shocked look with Sharon, both of them genuinely offended by the mere suggestion that they might hide something like that from Tessa, whom they loved dearly and had always worshiped as the awesome big sister that she was. \"We'd tell you if we had a boyfriend, of course. It's just that, well... It's about anal, specifically...\"\n\n\"We've been thinking about it, Tessie. Like, a lot,\" Sharon stated drily before exhaling and starting to explain. \"I mean, we're going to college in the fall and we feel like we should be able to do stuff, you know, beside blowjobs... We both want to stay virgins until marriage, so anal seems like the only way we can compete with all the coed sluts who can just let guys fuck them in the pussy.\"\n\n\"I still think blowjobs will do just fine, even in college...\" Sally grumbled, glancing sideways at Sharon, clearly rehashing a common argument between them. \"We give great head after all.\"\n\n\"Oh my God, Sally...\" Sharon sighed in exasperation. \"How many times do I have to tell you: it's not gonna be enough! Guys wanna fuck! Like, actually fuck, you know, stick their dicks into a hot juicy hole and pound away!\"\n\n\"So? Guys have fucked our mouths before, haven't they?\" Sally persisted, tucking her long blonde locks behind her ears. \"Nobody's ever complained. And when we deep-throat them and they push real deep, well, it's warm and wet and tight in there too, kinda like a pussy. At least, I think so...\"\n\n\"Jeez, Sal, seriously?\" Sharon half-laughed and half-groaned, turning to Tessa and Nick again for support. \"Guys, please, would you explain to this silly goose I got in sort as a twin how real sex works? Nick, Tessie... Please? Come on, help me out here.\" \n\nKeeping his mouth wisely shut, his cock having swelled to an uncomfortable state of stiff chubbiness within his pants during the twins' conversation, Nick laughed inside as he was reminded yet again of the many fun and naughty sides hidden behind the deceptively dull facade of churchgoing girls. Smiling meekly, he just raised an eyebrow as he looked at Tessa, leaving her to deal with that weird albeit arousing situation. \n\nSighing and rolling her eyes at each of her little sisters in turn, Tessa started by saying: \"Okay, first of all, both of you shut up right now before someone hears you talking like cumsluts. I mean, really, you are the pastor's daughters and so am I, and it's his freaking birthday party! Second of all,\" she went on, focusing her gaze on Sally, \"Sharon is sort of right, you really can't compare oral with anal. Having a man inside you, being penetrated... It really is something else entirely. And I mean for you, not just for him. And anal is actually very intimate, as long as it's with the right guy.\"\n\n\"Yes! Thank you, Tessie! See, Sal? I was right!\" Sharon exclaimed, interrupting Tessa. Unable to contain her gleeful sense of triumph, she even started shimmying in place while pointing at her twin and playfully teasing: \"Told you! Ahah!\" \n\n\"Sharon, come on, there's no need to rub it in!\" Tessa chuckled before she resumed. \"Sally, just be honest with me: what's really bothering you about this? You know that lots of girls in the congregation do anal to save their virginity, and you know that I do that too. So what's the big deal? Just tell me the truth, it's okay.\" \n\n\"I, uhm...\" Sally started tentatively before squaring her slim shoulders and turning her slightly flushed face up to face Tessa, Nick and Sharon. \"I just don't believe it's as good as people say it is. I think it's weird and dirty and I'm sure it hurts, no matter what everybody say. I mean, pornstars are just acting, right? And as for the other girls in our church who say it's okay, well, I think they're just lying and trying to look cool. There, I said!\" \n\n\"Aw Sally, really...\" Sharon cringed, rolling her eyes at her twin.\n\nIn contrast to Sharon's mocking tone, Nick's deep calm voice was very serious as he said: \"Skepticism... I like that. It's a wise attitude, Sally. If you think about it, in your circles a doubting Thomas shouldn't be that strange, am I right? Besides, his need for tangible proof didn't prevent him from becoming a saint after all.\"\n\nBlushing a bit but smiling widely, Sally chuckled and nodded appreciatively at Nick, causing Tessa and Sharon to laugh along too. As the tension faded, Tessa ventured: \"Sally, let me ask you this: would you think I'm lying if I told you that anal doesn't have to be painful and it actually feels really, really good?\"\n\nExhaling as Sharon stared tauntingly at her, as if daring her to call their beloved big sister a liar, Sally bit her lips and furrowed her brow before replying in a measured tone. \"Well, Tessie, you see... It's not that I don't believe you specifically. It's just that I can't... I mean, I know you wouldn't lie to me, but I can't convince myself to believe that it's true. At least not without...\" \n\n\"Not without what?\" Tessa encouraged her.\n\n\"Not without proof, I guess,\" Sally concluded with a sigh. \"But then again, it's not like I can get any proof without trying it myself. And I'm too scared to try it without proof, so...\" \n\n\"Yeah, that's a nice catch twenty-two alright,\" Nick agreed, grinning sympathetically at Sally.\n\nAfter a moment of silence, Tessa spoke, her voice firm and clear. \"Okay then, Sally. I'll get you your proof: Nick and I will show you. We'll have anal sex in front of you and you'll watch us and you'll see for yourself that it's not painful or dirty or wrong. Would that work for you?\"\n\n\"What!?\" Sally gasped in shock.\n\n\"Oh yeaaah!\" Sharon cheered, grinning broadly.\n\n\"Uh?!\" Nick muttered, blinking while adjusting his glasses as if somehow ascertaining that he wasn't dreaming. While his plump boner strained painfully within his pants, he breathed in deeply before asking: \"Tess, are you serious?\"\n\n\"Yes, I am,\" Tessa confirmed with a guileless smile, her eyes sparkling, her beautiful face set in one of those expression of mixed innocence and naughtiness that had never once failed to turn Nick rabidly horny. \"I don't see any problem with that. It would be a simple demonstration, something to help my little sisters out.\"\n\n\"I'm all for it!\" Sharon declared enthusiastically before impishly adding: \"I always wondered about you two doing it, it's gonna be interesting to see you in action!\"\n\n\"Tessie, but...\" Sally mumbled, her blushing face having turned even redder at the thought that she had instigated the whole thing. \"You have a boyfriend, and that ring he gave you... Wouldn't this be, uhm, cheating? And doesn't Nick have a girlfriend too?\"\n\n\"Actually, no, I don't. Not exactly, at least,\" Nick specified, adjusting his glasses on his nose while shifting as inconspicuously as possible in his seat, attempting to fit his achingly stiff shaft more comfortably within the constricting confines of his pants. \"What we have is... I'm not sure how to define it, but the agreement that Mia and I have is of a strictly non-exclusive nature.\" \n\n\"See?\" Tessa smiled at Sally before glancing affectionately at her ex boyfriend. \"Besides, Nick is almost family, in a way. I mean, he's like the son that Daddy always wanted, we all know that. I'm not sure if anal qualifies as 'cheating' exactly, but even if it did, I'd be doing it with one of us anyway, so it shouldn't count at all, sorta... And Nick definitely is one of us, right girls? One of us... Like in that film we all saw together, remember?\" she unexpectedly added, giggling as she recalled something she hadn't thought about in a while. \"There was that super weird part when they all chant 'One of us, one of us' and stuff like that. I can't remember the title of that movie, crap! It's on the tip of my tongue...\"\n\n\"Oh you mean that crazy old black and white film that Nick made us watch? Sure, I remember it. Very weird, but kinda fun too,\" Sally nodded with a grin.\n\n\"Yeah, 'Freaks'. Good stuff,\" Nick chuckled, remembering the time early in their friendship when Tessa and the twins had invited him over to the house to watch a movie of his choosing and he had introduced them to Tod Browning's disquieting masterpiece.\n\nChuckling while recalling the eery mantra from the most iconic scene of the film, Sharon started chanting and stamping her feet in an attempt to somehow reenact that crazy, unforgettable sequence. \"One of us! One of us! Gooble gobble! We accept him, we accept him! One of us!\"\n\nAfter laughing and chanting along with her twin for a bit, Sally still couldn't help but eventually point out: \"But wait a second, Tessie... Wouldn't it make it worse to consider Nick as part of the family?! I mean, I guess it wouldn't be cheating, in a way, but it would be incest then, and anal incest at that! That'd be even worse, wouldn't it?\"",
        "\"Well, yeah, in theory...\" Tessa shrugged, grinning playfully. \"I guess it's a good thing that Nick isn't actually family after all!\"\n\n\"That's right. Otherwise you and I would have committed quite a lot of abominable acts of forbidden sodomy together, Tess. That would be a whole lot of abominations to account for come Judgment Day...\" Nick said in a deadpan tone that made his statement sound absurdly funny to the pastor's daughters, making all three girls laugh out loud. After they had had their fill of giggles, Tessa resumed talking. \n\n\"But really, what I meant when I said that Nick is one of us is that he's not just some random guy I'd be cheating with. Nick is, well, he's Nick! You know what I mean, girls?\" Tessa asked her sisters, getting smiling nods of assent from both. \"As for me and Toby,\" Tessa continued musingly, \"I wouldn't say that letting Nick have my butt just this one time would qualify as cheating... After all, what I actually promised Toby is to save my virginity for him and nobody else, assuming that we do end up getting married in the end, that is. And anyway,\" the pastor's eldest daughter added with a perceivable twinge of sadness in her sweet voice, \"Toby doesn't really care about anal, not one bit. We don't do anything butt-related at all. He just doesn't like it...\" she concluded with a laconic sigh.\n\nIf Tessa's explanations did seem fairly reasonable to her little sisters, her words had a much different impact on Nick, especially her final revelation. \n\n\"What?! Your boyfriend is not into butt stuff?! Is he clinically insane?\" Nick asked, his genuine shock causing all three girls to burst into laughter all over again. Undeterred, Nick went on, serious as a heart attack. \"I mean it, Tess! Just answer me this: who in the right mind could ever not venerate your fabulous ass and not want to make sweet love to it again and again and again?\"\n\nAs Sharon and Sally giggled and cooed teasingly at that, Tessa just smiled and blushed a little, leaning into Nick's side and resting her head on his shoulder. \"Aw, thanks, Nick! I missed your crazy declarations of love to my big butt!\"\n\nOnce the general round of laughter that followed had faded out completely, it was Sharon who cleared her throat and eagerly asked: \"So, are we doing this or what?\"\n\nAs Sally held her breath in mixed anxiety and excitement, Tessa and Nick locked gazes, staring intently into one another's very core. Speaking slowly, keeping his tone as neutral as possible while his dick throbbed within his pants at the irresistible prospect of once again plundering his ex's epic booty, Nick finally said: \"Are you sure, Tess?\" \n\nNodding emphatically, she replied: \"Yes, a hundred percent sure. Let's do it. I want to.\"\n\n\"Alright!\" Sharon hooted, elbowing her shocked and flustered twin. \"I never thought I would say this, Sal, but for once something good came out of your silly hang-ups! Ahah!\"\n\nShaking her head, Sally playfully shoved Sharon aside and followed Nick and Tessa inside the house.\n\n*****\n\nAs soon as he found himself in Tessa's bedroom again, the very bedroom where they had had sex for the first time in their lives and then so many other times after that, Nick felt a host of memories rushing back at him. \n\nRooted in place at the foot of his ex girlfriend's bed, he just stared around, taking in the familiar scenery: the white and pink shades of the wallpaper; the hefty collection of Calvin & Hobbes comics that he had gifted her the previous year, still holding a prime spot on her nightstand; her favorite childhood plushy, Biff the Buffalo, standing sleepy guard on her dresser, the very same plushy which Tessa had playfully thrown at him right after their first time together, when he had popped her anal cherry and flooded her amazing ass with more cum than he thought he had in him, while at the same time they declared their love for each other between lustful moans of climax. \n\nLost in his reverie as he was, Nick wasn't stirred awake from his silent, motionless walk down memory lane even as the twins giggled and chattered excitedly around him, Sharon leaning against Tessa's desk and Sally commandeering the swivel chair. Only when he noticed from of the corner of his eye a flurry of movement around Tessa's curvy frame did Nick finally snap out of his trance. As he turned around, Nick's absent expression changed into a lustful one at the sight of Tessa removing her green dress and letting it drop to the floor while she kicked off her high-heeled sandals to remain clothed only in a white lacy bra and matching panties. \n\nFeeling no embarrassment at all in taking off her clothes before her sisters and ex boyfriend, Tessa nonchalantly unhooked her bra and let the straps fall off her shoulders, revealing her huge jutting tits in all their naked glory. Hearing the muffled groans of sisterly envy that Sharon and Sally always let out whenever they saw Tessa's big beautiful jugs, feeling Nick's hungry gaze on her voluptuous body as she puffed out her chest and made her pillowy melons wobble softly side to side just the way he liked, Tessa smiled widely before she turned around to give her audience a perfect view of her luscious ass too. As Nick gasped in awe, Tessa arched her back and stuck her big juicy booty out while she slowly peeled her panties down her thighs, making a big show of sliding the thin strip of cloth over the round, protruding curve of her buttcheeks before letting the white undergarment fall down her legs to pool at her feet, remaining completely naked. \n\nCocking a hip and pushing her plump bubble-butt out and up, the pastor's eldest daughter looked over her shoulder straight into Nick's bespectacled brown eyes, finding them sizzling with a desire that she knew very well and that matched her own. Feeling all fuzzy and warm inside while her shaved pussy got moister with arousal by the second, Tessa held Nick's gaze as she climbed onto her bed and knelt up at the very edge, facing him. The voluptuous brunette couldn't help but giggle as she noticed her ex's gaze darting from her bulging boobs to her pink, upturned nipples and down her soft tummy to the mound of her little virgin pussy, his eyes zeroing in on her peeking clit and the rosy, dewy cleft of her labia.\n\n\"So, Nick... How do you find me after all this time?\" Tessa asked in her soft voice, laughing half-playfully and half-blushingly, meanwhile tingling with arousal and with that delicious sense of sluttish satisfaction that she had always felt whenever she acted sexy for Nick. \n\nWalking toward the bed as if through a fog, oblivious to Sharon's teasing giggles and Sally's silent stares, Nick reached Tessa and instinctively wrapped his arms around her soft curvy body, pulling her tight to him as she eagerly leaned in closer, her majestic boobs getting squashed against his chest in the process. Naturally, as if guided by a well-honed instinct, their mouths were drawn to each other, their lips meeting in a passionate kiss. \n\nTheir lip lock was intense from the start, saturated with memories and a sense of mutual affection that remained strong and unaltered in its genuine essence in spite of all the things that had changed in their lives after their amicable break up. Their tongues danced so flawlessly together and their smooches were so intense and loving and mind-melting that Tessa was caught unawares when she felt Nick pulling back from their soulkiss to take a deep breath. His next words immediately brought a huge smile to her face as he murmured into her mouth between soft little pecks: \"You're more beautiful than ever, Tess. So sweet and sexy and beautiful...\"\n\nAs her tumid lips resumed sucking lewdly on his tongue, Tessa locked her arms around Nick's neck and held him even closer, running her fingers through his messy hair while their make out session reignited with a vengeance. As his hands began caressing her back and tracing her porcelain-smooth skin until they reached the bouncy, curvaceous roundness of her bubble-butt, Tessa couldn't help but moan and tremble all over in anticipation. \n\nThe familiar sensation of Nick's palms cupping her juicy asscheeks, along with the thrill of feeling his long fingers sink possessively into her fleshy globes while he massaged and squeezed and caressed her plump booty, made Tessa's untouched pussy even wetter than it already was while her engorged clit itched with a sweet, demanding need that made her whole voluptuous body shiver. Husky, kiss-muffled sighs escaped Tessa's smooching lips as her mind was flooded with the vivid memories of the countless amazing times when she had welcomed Nick inside her body, letting him plunge deep into her tight, super sensitive forbidden hole and thus being gifted with the best orgasms of her life as his massive cock slid in and out of her ass.\n\nKissing him deeper and more urgently by the second, maddened by the feel of his devoted and hungry hands retaking possession of her plump bubble-butt after such a long time, Tessa pressed her huge tits more firmly into Nick's chest, teasing herself by brushing the stiff buds of her nipples against his Ramones T-shirt. Soon enough, the inviting bulge of his hugely tenting crotch pushing against her soft tummy convinced Tessa to unwrap her arms from Nick's neck and bring them to his groin instead, so that she could set his rampant cock free. Breathing raggedly through their kisses, whimpering as she felt Nick's roaming fingers slide into her luscious ass-cleavage and reach first her twitching little hineyhole and then her soaked slit, Tessa undid Nick's pants and yanked them urgently down along with his boxers, making his aching boner spring out in all its veiny, raging hardness. \n\nAs she wrapped her dainty fingers around her ex boyfriend's enormous erection and started jacking him off two-handed, coaxing glob upon glob of runny precum from his already shiny glans, Tessa was suddenly reminded of her little sisters' presence as her ears registered their shocked reactions to the sight of Nick's formidable dick.\n\n\"Whoa! That's literally the only fat part of Nick's body... But it sure makes up for all the skinniness, and then some! Look at that thing... It's just sooo thick and big and hard!\" Sharon murmured, blinking her eyes in stupor. All the while, she was unconsciously licking her lips as she stared entranced at the impressive slab of cockmeat that her older sister was joyously jacking off, the detail of Tessa's slender digits failing to completely wrap themselves around Nick's veiny girth actually adding to Sharon's roaring arousal.\n\n\"Oh... My... God...\" Sally gasped in turn, equally horny and mesmerized by the vision of the biggest, hardest dick she had ever witnessed outside of porn. \"He's so... So... Huge! C-c-can she really take that monster in the ass?! I mean, I know she did already but... Wow!\"\n\nAs the twins' virgin little slits tingled with wild desire and got so unequivocally wet that their soaked panties wedged themselves within their soft pussy clefts, Tessa moaned wantonly into Nick's mouth, her head spinning as his long, talented digits caressed her drooling labia and budding clit. What really drove the pastor's eldest daughter crazy though was the way Nick delicately circled the forefinger of his other hand around her tiny sphincter, rubbing her own overflowing nectar all over the puckered pink entrance of her anus when he wasn't poking his fingertip ever so gently at the very center of her delicate twitching rosebud, teasing it into blossoming open for him.\n\nWhile Sally squirmed with horniness in the chair beside her, unable like herself to unglue her eyes from the spectacle of Nick's swollen precum-leaking pole being slowly masturbated by their older sister's tiny hands, Sharon eventually felt compelled to clear her throat and speak up in a taunting albeit obviously excited tone. \n\n\"So, uhm... Any chance we're gonna see some butt sex any time soon, Tessie?\"\n\nAt those words, Tessa let out a giggle into Nick's smiling mouth. Trembling all over as she enjoyed the feel of his ass-probing forefinger slipping tenderly into her anus and resting teasingly right past her sphincter for a moment before starting to saw ever so slowly in and out of her winking little asshole, Tessa unclasped her lips from Nick's smooching mouth and turned toward her sisters. With a pleasure-glazed look in her eyes, the pastor's eldest daughter attempted to convey some sort of educational seriousness through her response, but she couldn't help but smile languidly as she arched her brows at the twins. \n\n\"Alright, girls, I'll let you in on a little secret now. The first rule of anal sex is: don't freaking rush it! Anal is all about two things, you see...\"\n\n\"Wait, don't tell me! I know this one,\" Sharon interrupted with a chuckle, taking advantage of the pause that Nick's faster ass-fingering and clit-frigging ministrations imposed on Tessa's husky speech. \"The two things you need for anal are: a big hard cock and a tight little butthole! Right?\"\n\nRolling her eyes yet laughing along at her sister's corny joke, Tessa resumed talking between sexy moans, trying to focus despite the sweetly distracting pleasure she was receiving as Nick kept softly kissing her neck and shoulders and face while persistently masturbating her anus and rubbing her clit. \n\n\"Well, yeah, those two are pretty vital elements, of course! But that wasn't what I meant... If you wanna do anal, the most important things are relaxation and lubrication. And this, girls,\" Tessa smiled, purring and planting a swift smooch on Nick's mouth as his fingers kept working wonders on both her needy holes, \"this is the relaxation part!\"\n\nAs Nick chuckled into her succulent lips and resumed trailing kisses down her smooth neck, Tessa let go of his massive boner to grasp his head in her hands and guide his face down to her huge, pillowy boobs. Grunting with arousal, rubbing Tessa's nectar-slick clit and pumping his butt-teasing forefinger into her snug little asshole with even greater gusto, Nick immediately got the hint and started licking and sucking and slurping away on his ex's fabulous tits. \n\nAll the while, even as their voluptuous big sister squealed and sighed lustfully whenever Nick nibbled her rosy puffed-out nipples and munched on her soft tit-flesh or pushed his long index finger all the way into her twitching little rosebud, Sharon and Sally still couldn't avert their eyes from the pussy-wetting sight of his fat, rock-hard pole. Coated with precum and flexing excitedly against Tessa's cute soft tummy, Nick's impressive slab of dickmeat got the twins so horny that soon Sally couldn't restrain herself anymore and just had to voice her burning desire. \n\n\"Tessie, uhm, since you're busy with the 'relaxation' part, well, maybe, uhm...\" Sally tentatively said, breathing rapidly and squirming in her seat as her dripping slit begged desperately for attention. \"Maybe Sharon and I could, like, help you out with the, uhm... The 'lubrication' part of the process, I guess? I mean, Nick will surely need a lot of lubrication, right?\"\n\nMaddened by the pleasurable mix of stimuli coming from her asshole, clit and nipples, cooing as she felt her climax quickly approaching, Tessa snickered as she took in the unmistakable cock-hungry expressions painted on both of her little sisters' sculpted faces. Knowing exactly what Sally meant, well aware of the twins' naughty passion for blowjobs, Tessa nodded conspiratorially as she haltingly replied. \n\n\"Yeah, why not... Ooohh god... Go ahead, girls, get Nick's cock nice and ready for my ass... Aahhh yes, baby, oowhh keep fingering me like thaaat... Bite my nipples hard, uuuhh yes, Nick, hardeeer!\"\n\nCaught up as he was in the multipronged assault that he was unleashing onto Tessa's offered curvy body, Nick barely paid any attention to Sally's lust-dripping words. Instead, feeling Tessa's snug rubbery anus twitch eagerly around his probing finger while his clit-rubbing digits kept frigging away on her nectar-squishy nub, Nick increased his tit-worshiping attentions even more, focusing entirely on making his ex girlfriend cum. \n\nWithin moments, Tessa's mewls spiked up into a long, deliciously high-pitched squeal while her juices gushed all over Nick's pussy-diddling hand and her rosy sphincter nibbled on his ass-pumping digit, making it clear to him that his goal had been reached. Smiling triumphantly through the mouthful of tit-flesh he was feasting on, Nick suddenly found himself grunting with delight while his boner flexed due to an unexpected yet amazing feeling of soft warmth and caressing wetness. Peeking down while still holding his face cozily wedged between the luscious, cushiony softness of Tessa's fleshy melons, Nick saw not just one but two sets of lips intent on applying lewd saliva-slick smooches all along the shaft of his aching erection, enveloping his hardness in a tender cock-kissing embrace. \n\nThe sight of Sharon and Sally kneeling face to face between his legs, totally absorbed in the task of dutifully lubing his dick up with their mouths, made Nick growl deep in his throat as his veiny truncheon throbbed with increased horniness, meanwhile rewarding the dick-slurping duo with big globs of oozing precum. Still, that unexpected double blowjob only made Nick more horny for Tessa's gorgeous body, whose holes he resumed pleasing and whose tits he continued munching on, just as the twins were enthusiastically servicing his meaty rod.\n\nWith their eyes half-closed, Sharon and Sally synced effortlessly in their languid act of dick-worship, their lips fluidly gliding back and forth along Nick's mighty schlong in a series of sloppily sexy, perfectly coordinated suctioning smooches. Clearly used to that sort of cock-sucking duet, the twins hummed contentedly as they bathed Nick's enormous shaft in their spittle while licking up the sheen of oozing precum coating his veiny length. As the girls took care of one side of his fleshy truncheon each, sliding their puckered lips from its wide root up to its bloated purple glans with smooth saliva-drooling motions, Nick growled with pleasure and pressed his face deeper into Tessa's buxom cleavage, munching on her tits more avidly while straining to focus on fingering her spasming anus and caressing her pulsating clit through her climax. \n\nStill, when his whole glans was suddenly inhaled within the liquid heat of Sally's mouth while Sharon's tongue devotedly lapped and slurped and slobbered her way up and down and all around his pulsing shaft, Nick couldn't help but straighten up from Tessa's cushiony boobs and look dreamily into her still orgasm-clouded eyes.\n\n\"Tess... Oooh fuck Tess... They're so fucking good at this! Ohhh yes, like that... Fuck, girls, you're incredible!\" Nick mumbled as Sally face-fucking herself on his lip-stretching tool, forcing his girthy rod deeper and deeper into her constricting yet clearly experienced throat at each pass. At the same time, Sharon was gently sucking each of his beefy cum-laden balls into her mouth, nursing skillfully on them in turn when she wasn't flicking the tip of her wiggling tongue on the underside of his dick. All the while, she was jacking the base of his truncheon with her slender fingers, in order to keep his raging hardness well aligned for Sally to deep-throat more and more of his impressive length with as much ease as his girth allowed. \n\nWith a dopey smile, Tessa planted a long smooch on Nick's panting lips as she watched her little sisters give him a sample of their consummated fellating abilities. It wasn't lost on Tessa that the twins had buried their hands inside their tight-fitting running shorts and were both obviously fingering their virgin little pussies as they performed one of their amazing double blowjobs on Nick.\n\n\"Yeah, Nick, they're good, I know... My innocent little sisters have become quite the pair of cumsluts since you last saw them, don't you think?\" Tess giggled into her ex boyfriend's slack mouth as she wiggled her plump bubble-butt and rocked back to force his long forefinger deeper into her asshole. \"Keeping your virginity makes a girl develop other talents, I guess... Sharon and Sally became blowjob queens, while I became a buttslut, as you well know!\"",
        "Laughing complicity together, Nick and Tess resumed their languid make out session as he lazily masturbated her needy butthole while Sally's throat and Sharon's lips took great care of his huge boner. Soon though, as the twins once again placed their mouths on either side of his shaft and resumed sliding their amazing lips up and down along his veiny length while slobbering and suckling on his dickmeat with renewed vigor, Nick finally had to break the kiss again to pant: \"Tess, girls... I... Oohh fuck, it's so good! I won't last much longer like this. Just saying...\" \n\nGiggling while unlocking her arms from around Nick's neck to place her hands on each of her little sisters' heads, Tessa instructed: \"Okay girls, you heard him. Enough now, or your anal lesson will be over before it starts!\"\n\nThe twins let out long groans of disappointment as Tessa guided their cock-slurping faces away from Nick's massively swollen erection, but they didn't resist her. Their soft, pouting lips were still connected to his rampant dickmeat by shiny threads of saliva as Sharon and Sally looked up together at their big sister with puppy eyes and matching pleading expression that mixed cuteness and lewdness in equal parts.\n\n\"Aw, come on, Tessie!\" Sharon complained, her tongue running over her wet lips, greedily seeking the aftertaste of Nick's sticky precum. \"I bet he can stay hard after he cums. I mean, just look at this fat horsecock and these huge balls! Can we just suck him off and drink his cum? Pleeease?\"\n\n\"And even if he goes soft we can suck him hard again, no problem! Please, Tessie, please... He tastes sooo yummy!\" Sally eagerly added, her face flushed with arousal rather than shyness for a change, her hand moving steadily in circles inside her shorts as her pussy juices trickled profusely at the mere thought of blowing Nick to completion and drinking his seed.\n\n\"Hey, you two were just supposed to get him lubed up, remember?\" Tessa mock-scolded her horny little sisters with a mischievous grin. Then, biting her lips and trembling with anticipation as she looked down at Nick's amazing cock all slick and dripping with Sharon and Sally's saliva, the pastor's eldest daughter theatrically stated: \"Now girls, have a seat and get ready for the main event!\"\n\nAs Sharon and Sally sat down on opposite corners of Tessa's bed, they both shot pleading doe-eyed glances at Nick, whose smile was as big as it was goofy while he shrugged and said: \"Sorry girls, you heard Tess... And by the way, you were right before, Sally: you two can do stuff with your mouths that would put most pussies to shame. Seriously, you were awesome!\"\n\nAs the twins giggled and smiled with naughty pride at his praise, Tessa turned around and got on all fours in the middle of the bed, placing her plump jiggly booty right in front of Nick's face, thus captivating his gaze immediately. Leaning forward, she extended her arms to reach into her nightstand and fish out the bottle of lube she kept in the top drawer, making her round asscheeks wobble deliciously in the processes. Then, slowly backing up until she was positioned docilely on her hands and knees at the very edge of the bed, Tessa tilted her bouncy bubble-butt up and out, arching her back and letting her upper body rest on the bedspread. \n\nAfter savoring the long groan of desire that Nick let out at the sight of her luscious booty being offered to him like that, Tessa languidly turned her head to look over her shoulder at Nick and hand him the lube. Meanwhile, his mouth literally watering, Nick was already leaning forward and dipping his head down into Tessa's butt-cleavage, rabidly aroused by the sight of her masterpiece of an ass and high on the prospect of once again being allowed inside the warm, snug confines of her heavenly hineyhole.\n\n\"Okay, Nick. The girls have already got you all nice and wet, so now it's time to lube up my asshole too-ooh-oohh! Uuuhh god, Nick... Oooh babyyy, yesss! Uunghhh yeaaahhh...\" \n\nTessa's words vanished in a long ecstatic whimper as she was suddenly overwhelmed by the combined feel of Nick's lips suckling on the gummy rim of her pink little rosebud while his wet tongue licked and probed its way into her sensitive sphincter. With his face buried between his ex girlfriend's curvaceous asscheeks, Nick sank his fingers possessively into the soft meaty globes of her bubble-butt and held them nicely apart as he went crazy on her pliant orifice, lapping away at her tiny backdoor like his life depended on it. Mixed with the heady scent of her pussy juices, the familiar flavor of Tessa's vanilla shower gel wafting from the flawless skin of her cushiony booty and lingering all over her asscrack filled Nick's nostrils within moments, bringing back hosts of naughty memories and arousing him even more. Kneading and squeezing her epic bubble-butt while its smooth, full plumpness encased his face, Nick made Tessa squeal incessantly as he treated her to the most intense rimjob she had experienced since their break up. \n\n\"Oowwhh... Ooohh my god! Uuuh Niiiick, yeeees, lick my aaaaass! You're so good at it, it's soooo fucking good, babyyy... Yes, yeeeess I love iiiit! Uuhh,yeah, like thaaat!\"\n\nTrembling like a leaf under Nick's toe-curling analingual ministration, Tessa could feel her pussy juices dribbling in rivulets down her thighs while her rubbery orifice twitched around Nick's amazing, pleasure-gifting tongue. When he started lengthening his swipes, lapping wetly from her winking little asshole all the way down to her pulsating clit and back again, Tessa was swiftly hit by a stabbing climax so sneaky and yet intense that it left her panting and writhing like a stranded fish, much to the visual delight of her entranced sisters. Thrilled by the sight of Nick's passionate ass-slurping performance, the twins were diddling their virgin slits with such urgency that they didn't even bother removing their shorts and panties completely, leaving them partially and hastily pulled down and bunched up around their shapely, athletic thighs. \n\nStunned to witness Tessa cumming just from having her asshole skillfully eaten out by an ever more aroused Nick, Sharon incessantly caressed her nectar-slick pussy and budding clit as she mumbled: \"Wow, that's so fucking hot! I had no idea you could have an actual orgasm from that kinda stuff...\"\n\n\"I know! It's making me cum just to watch him lick Tessie's butthole!\" Sally replied, feverishly circling her clit while she brought her other hand from her drooling slit up to her mouth, so that she could lick up her own sweet juices, as she always did when masturbating. \n\nStill deeply engrossed in his oral worship of Tessa's adorable pink butthole, Nick smiled contentedly as he gobbled down his ex girlfriend's trickling girlcum and enjoyed her super sexy mewls of release. Far from being done, having always loved to get Tessa's tiny little rosebud ready for his huge cock almost as much as he loved actually buttfucking her, Nick kept munching on the pastor's eldest daughter's irresistibly cute hineyhole with gusto, only breaking his persistent ass-slurping swipes and sphincter-poking tongue strokes to tease her clit with a few swirling licks here and there. Still, Nick did occasionally break his butt-eating routine and moved his face lower for a few seconds so that he could clamp his mouth onto Tessa's soft, sopping labia and stab his tongue into her virgin pussy in a sexy parody of a deep, sloppy French kiss that allowed him to get a real good taste of her scrumptious nectar. \n\nAll the while, drunk with the constant wavelets of pleasure that surged from her super sensitive, masterfully licked anus and then coursed throughout her bent-over body, Tessa couldn't seem to stop cumming and moaning and squirming on the bed as Nick drove her crazy with his fantastic tongue, licking her lovingly and expertly like only he ever could. Another massive, unexpected orgasm smashed into the pastor's eldest daughter when Nick suddenly unclasped his mouth from her asshole after a long and deep bout of poking butt-licking strokes and glued his lips to her clit, sucking on it while easily pushing one then a second digit into her thoroughly-readied, spittle-slippery sphincter. \n\n\"Uuhhh! Oohh fuck yeeeess... Uuhhh Niiiiick!\" Tessa yelped breathlessly, clawing at the bedspread as Nick devoured her engorged love button while fluidly sawing two fingers into her tight yet eager butthole, coaxing more of her liquid pleasure to gush from her pussy and drench his face.\n\nSharon and Sally were whimpering and fingering themselves to climax too while Tessa's lust-addled brain was taken over by an unquenchable need for more, a thirst that she had only known before with Nick and that could only be sated in one way. Straining to speak coherently as her twitching little asshole clutched around his gliding fingers and her untouched pussy drooled unstoppably into his clit-pleasuring mouth, Tessa eventually managed to lift herself up on her elbows, look over her shoulder at her ex and haltingly speak.\n\n\"Nick... Oohh Niiick, pleeease...\" Tessa whimpered, her voice husky with desire. \"Nick, baby... I need you inside me now. Uuhh fuck, your fingers, your tongue... It's all soooo good! But I need more... I need your cock in my ass, baby, I want it so much... Please, fuck my ass, Nick!\"\n\nRecognizing that tone, loving the mixture of sincere need and sexy wantonness in her voice, Nick pulled back and straightened up, disentangling his face and digits from Tessa's sweet holes. His mouth and chin were shiny with her juices and he was breathing hard as he removed his remaining clothes, his raging boner meanwhile throbbing and pointing right at Tessa's fabulously plump ass. Meeting her glazed-over gaze as he adjusted his glasses, Nick felt all fluffy inside while he smiled back at a beaming, beautifully horny Tessa. Aching to make the both of them happy by burying his massively hard cock deep into her ass, Nick swiftly grabbed the bottle of lube and poured a healthy dose of it all over the pastor's eldest daughter's spittle-glinting, pulsating little butthole. \n\nHolding the gummy edges of her sphincter apart with his fingertips to make her adorable forbidden orifice gape slightly, Nick held the bottle close to Tessa's winking butt-ring and squeezed long dribbles of lubricant straight into her anal chute before he slid two digits into her oily anus and started twirling them around, coating her smooth inner walls with the slippery fluid. As Tessa hummed and wiggled her round bubble-butt in eager anticipation, Nick pressed his stiff dickmeat against her soft pussy lips and humped slowly up and down along the fleshy groove of her labia, lathering his already spit-dripping length in her overflowing juices. \n\nAs Sharon and Sally leaned closer to have a better look, their hands never leaving their respective pussies, Nick looked at them in turn and expanded on Tessa's anal teachings by saying: \"Girls, if you want my advice, never let a guy stick his cock in your ass if he's not willing to get you nice and ready with his mouth first. It's not just about lubing you up either, I mean, actual lube is still mandatory. It's more about appreciation, or asspreciation, if you will...\" Nick chuckled at his own cheesy joke, before concluding in his deep, matter-of-fact tone: \"I just don't think that a girl should give her butthole to a guy who doesn't want it enough to kiss it properly.\"\n\n\"Mmhh, yeah, that's so true...\" Tessa murmured dreamily, enjoying both the feel of Nick's huge cock sliding wetly between her juicy labia and the stimulation of his ass-prepping fingers sawing in and out of her anus while he kept adding more and more lube and lovingly applying it to her needy hineyhole, sensuously widening her tight sphincter with his usual gentleness and care. \"And one last thing, girls,\" Tessa added between soft moans while she reached one hand to her clit and started lazily circling her fingertips all over it, \"the most important tip I can give you is this: never stop rubbing your clit, especially the first times you do anal. Mmhh, never stop... Before, during and after... Playing with your clit while getting fucked in the ass will make you cum like crazy, I promise you. Just wait and see...\" she concluded with a mewling giggle. \n\nAs soon as Tessa was done talking to her little sisters, Nick slipped his fingers out of her well-readied anus and applied a generous amount of lube to his raging shaft, greasing himself up from tip to root. Then, nestling his huge purple glans against her glinting pink sphincter, Nick cupped Tessa's magnificent asscheeks in his hands and kneaded them lovingly. As he pulled her fleshy buns apart, squeezing their full bouncy roundness in his palms with possessive joy, Nick locked gazes with Tessa. He only needed to questioningly arch an eyebrow at her to get a bright smile and an approving nod in response, obtaining the confirmation that she was indeed ready.\n\n\"You're so amazing, Tess...\" Nick murmured as he instinctively leaned down onto her curvy, bent-over body until he could place a trail of butterfly kisses on her neck and shoulders, making her giggle contentedly as she undulated her bubble-butt side to side and pressed her bulging tits more firmly into the bedspread, teasing her own puffy, sensitive nipples. \n\nStraightening up again while always reverently caressing her sumptuous booty with his hands, Nick exhaled deeply as he got ready to press forward and push his throbbing schlong into Tessa's tiny, lube-glossy butthole. Sharon and Sally were holding their breath as they stared in awestruck silence at the incredible sight of Nick's shiny, obscenely big glans prodding at the miniature opening of their big sister's pink asshole. With her fingers slowly circling her clit, Tessa exhaled languidly in response to the feel of warm, meaty pressure on her anus and relaxed her winking little orifice as best as she could while Nick's bulbous tip pushed gently but firmly forward against the slick, small entrance of her forbidden hole. \n\nA general gasp of pleasure and surprise filled the room as Nick's fat purple cockhead bulged out for a moment against Tessa's pouty pucker and then suddenly punched through, slipping inside her well-greased backdoor. While her rosy butt-ring dilated docilely around his invading pole, opening up for him and sucking his swollen knob into the clingy warmth of her hungry anus, Tessa let out the sexiest, softest gasp of bliss, echoed by Nick's low moan of sodomizing pleasure. The capitulation of the pastor's eldest daughter's slick orifice was so sudden and complete that a couple of inches of Nick's girthy length popped inside her ass along with his bloated cockhead before her distended sphincter contracted in momentary protest, clamping down firmly around his shaft. Immediately, Nick stopped his butt-jamming advance, giving Tessa's convulsing anal muscles time to adjust to his veiny, rock-hard schlong. \n\n\"Uunghh... Oowwhh yeees! Oh my god, Nick... Uuhh yesss... You're in my ass! Oooh your cock is in my ass again, baby, I can't believe iiiit! Uuhh, you're so big inside meee, it's sooo good!\" Tessa mewled deliriously as she felt her asshole getting stretched out and filled up to the very limit by the familiar meaty thickness of Nick's huge truncheon. \n\n\"Fuck, Tess! You're so tight, your ass feels amazing!\" Nick panted, his eyes hooded with delight behind his glasses as he held his dick as still as possible inside the pastor's eldest daughter's spasming, suctioning anus. Even though he couldn't do anything about the joyous throbbing pulsations that her cock-nursing butthole caused in his partially embedded boner, making it flex involuntarily inside her amazing ass, Nick tried to keep his roaring anal lust in check and concentrated instead on making his awesome ex girlfriend enjoy their first sodomy since their amicable breakup. \"Are you alright, Tess? Just tell me if you want more lube or anything, okay?\"\n\n\"Uhhh Nick, baby... I'm okay, really... Oohh I'm more than okay!\" Tessa replied, her smiling mouth agape as she panted and mewled in anal delight. Her eyes were barely open as she focused on relaxing her anal muscles while at the same time she enjoyed the incredible, unique feel of having her tiny, ultra-sensitive asshole deliciously widened by Nick's massive truncheon. Whimpering as she beamed with naughty joy, Tessa locked gazes with Nick as she spoke in a husky murmur. \"I'm totally fine, Nick, I'm just uuhh... Just give me a second to get used to you again, baby... Oooh god, this feels even better than I remembered! Your cock is perfect, so hard and big in my ass! Uunghh yeaahh...\" \n\nTessa's words faded into ecstatic moans and her head spun crazily as constant jolts of pleasure centered on her well-rubbed clit mitigated what little discomfort radiated from her long-neglected and now finally cock-crammed asshole. Feeling tingles of pre-orgasmic delight all over her surrendered body, the pastor's eldest daughter couldn't help but purr in anticipation as she savored the butt-stretching presence of Nick's precum-oozing glans and the first inches of his fat shaft wedged into her asshole. Within moments, the intense roaring build-up she had always experienced during anal sex with Nick was already starting to mount deep inside her. \n\nBarely aware of the sexy moans that her little sisters were letting out in the background as they watched transfixed the very point where her stretched out butt-ring was wrapped tautly around Nick's enormous shaft, Tessa had a look of adorable dopey tenderness in her eyes as she glanced back over her shoulder at her ex's thin, handsome face. Meanwhile, she kept haltingly speaking to him as if through a sweet and pleasurable fog, just letting the words flow as her anal bliss grew. \n\n\"It's been so long, Nick... Oooh so long without this... Your cock in my ass, it's perfect! I missed it, baby, but now... Ooohh Nick, I want you inside me so bad right now! Uuhh, baby, I need you deep in my ass, please... Uuhh! Just go slow, okay? Go slow but don't stop, Nick, pleeease! Make me feel full of you again, baby... Fill my ass and make it yours, it's all yours... Only yours...\" \n\nGoing all fluffy inside at those lustful yet sincere words, his heart thrumming in his ears while his stiff boner throbbed inside the clingy ring of Tessa's overdilated sphincter and his ass-jamming cockhead spurted a huge dollop of precum right into the steamy, velvety smoothness of her narrow passage, Nick smiled as he lovingly cupped the pastor's eldest daughter's bouncy, incredibly round buttcheeks more firmly in his hands. Unable to reply to his former sweetheart's irresistible pleas with mere words, Nick leaned over Tessa's arched back and dipped his head low until his lips met hers and their mouths were glued together in a torrid, loving kiss. \n\nDraped over her curvy frame, smooching her rabidly as she lewdly sucked his tongue into her panting mouth as if it was his cock, Nick started pushing his hips forward, carefully easing his fleshy pole deeper into Tessa's epic ass. With small, measured in and out motions, Nick gradually crammed more and more of his veiny length inside the warm, tight sheath of Tessa's rectum while never breaking their steamy soulkiss. \n\nPatiently filling her butthole a millimeter at a time like he had done so many times before, Nick took notice of every little contraction and minute pleasure ripple coursing through his ex girlfriend's cock-hugging rectum, savoring all those incessant anal caresses but also using them to determine how Tessa's exquisite asshole was adjusting to the butt-stuffing presence of his thick, rock-hard dick delving into her tiniest, most delicate and sensitive orifice. Knowing her as well as he did and having sodomized her as much as he had, Nick easily managed to attune his slow yet relentless penetration with the increasing relaxation and acceptance of Tessa's willing anus: as soon as her warm, slippery anal walls started to squeeze and spasm around his massive truncheon, he immediately stopped and allowed her narrow chute to adapt, only to resume his butt-drilling incursion once her incredibly snug yet ever willing rectum relaxed and was ready for more. ",
        "Witnessing the perfect synchronicity that their older sister and her ex boyfriend shared in their anal coupling was just as astounding to Sharon and Sally as the gush-inducing sight of Nick's enormous cock gradually disappearing inside Tessa's pink little asshole. Craning their necks and leaning closer from their respective corners of the bed, the twins kept frigging their pussies as if through a trance while they stared transfixed at Tessa's lube-glazed rubbery sphincter stretching out to the limit around Nick's massive hardness. Much to the twins' disbelieving awe, as inch after veiny inch of Nick's dickmeat disappeared into her docile ass, Tessa's slick rosy butt-ring kept steadily gobbling that obscenely huge boner with relative ease, like a greedy, overdilated little mouth.\n\n\"Wow! It's really... She's actually... Oh my god she's taking him in her ass for real!\" Sally exhaled, both her hands buried in her crotch to rub her clit and finger her dripping slit at the same time.\n\n\"I know, it's sooo hot...\" Sharon replied in a daze, rolling her pulsating nub lazily between the thumb and forefinger of one hand while with the other she teased her thick nipples in turn, pulling and pinching them under her top. \"And look at Tessie, she's loving it! She's, like, cumming non-stop!\"\n\nNot even registering her little sisters' amazed voices, her world reduced only to her dripping pussy, her well-rubbed clit and her thoroughly dick-stuffed asshole, Tessa was already too far gone at that point to do anything more than reciprocate Nick's smoldering kisses and try to keep her twitching slit-frigging fingers working on her juice-soaked love button. As always, anal sex with Nick was getting Tessa so high on lust that she was in the throes of a constant orgasmic state from the very moment he jammed himself inside her hineyhole and started moving his big fat cock deeper and deeper into her ass. Now, with most of his enormous boner tucked within her silky smooth rectum and his butt-stretching penetration almost completed, the pastor's eldest daughter felt dangerously close to one of those mind-melting climaxes that she had gotten so fond of experiencing every time she got assfucked by Nick.\n\nAs it had often been the case during their many previous buttfucks, Tessa's immense build-up reached its breaking point when Nick's beefy cum-laden balls finally bumped into her sopping labia and her oily sphincter wrapped itself tightly around the very base of his massive dickmeat, engulfing him from tip to root within her snug buttery bowels. The full realization that she was once again being filled to bursting with Nick's incredible monstercock was all it took to finally push Tessa over the edge, detonating her climax in a specular, toe-curling explosion of ass-centered bliss.\n\n\"Mmmh!! Mmpphh!\" Tessa mutedly yelled into Nick's smooching mouth as her dick-packed anal chute started convulsing erratically around his veiny length and the first roaring waves of her orgasm crashed into her with a force that she both feared and craved in equal measure.\n\nBuried balls-deep inside Tessa's perfect ass, suddenly feeling the heavenly tightness of her steamy anal walls become impossibly snugger as her slick, narrow tunnel clenched and unclenched crazily all around his swollen boner in a sequence of intense yet velvety soft squeezes, Nick trembled and grunted, rooted in place. Overwhelmed by the sheer awesomeness of Tessa's climaxing little butthole and by the shaft-hugging warmth of her rippling, powerfully climaxing rectum, already hyper aroused by the twins' double blowjob and by the fact that he was once again buried balls-deep inside the first ass he had ever fucked in his life, Nick suddenly unglued his mouth from Tessa's succulent lips and brokenly announced his incoming ejaculation.\n\n\"Tess, oooh, Tess! I'm gonna cum! I can't hold it... Your ass... Soo tight, so fucking hot and tight! You're squeezing me so good, babe, you're incredible! I'm gonna... Aahh fuuck!\"\n\n\"Uuhh yeees Niiick! Cum in me, pleeease! Fill meee! Fill my ass, I need iiit!\" Tessa squealed between gasps, her mouth slack and O-shaped as her anal walls contracted crazily around her lover's massive truncheon, her body shaking like a leaf as her earth-shattering orgasm kept roaring through her like a thunderstorm of deep anal ecstasy. \"Uuhhh Niiick... Cum in my ass, babyyy!\" \n\nMoments later, his lips were once again pressed into hers in a devouring soulkiss as Tessa felt Nick's enormous boner flex crazily and swell even harder and bigger inside her convulsing chute, only to then explode in a torrential ejaculation that blasted rope upon thick rope of warm cum deep into her orgasming rectum. The indescribable sensation of once again having Nick's throbbing rock-hard dickmeat spraying her receptive anal depths with a deluge of his creamy seed undid Tessa completely, empowering her climax and making it re-detonate even harder. As her vision faded to white and her girlcum gushed incessantly from her virgin pussy while her cock-packed asshole got filled to the brink with her lover's pearly semen, Tessa soundlessly screamed her immense pleasure into Nick's kissing mouth, glorying in the best orgasm she'd had since their last anal coupling. \n\nIntoxicated by her kiss-muffled sounds of appreciation, blown away by the exquisite sensation of having his fully embedded pole sucked and massaged and milked to perfection within the tight, slippery warmth of her climaxing anal walls as his geyser-like ejaculation inundated her ass, Nick kept his arms wrapped possessively around Tessa's bent-over frame, holding her soft curvy body glued to his chest while he pumped her snuggest, deepest depths full of cum. Even after the explosive part of his orgasm was over and the initial barrage of long white ribbons petered out to dense gooey dollops oozing from his fat glans to plaster Tessa's cozy chute, Nick 's overswollen shaft still bucked and throbbed with horniness within the velvety soft embrace of his ex girlfriend's tight, dick-squeezing rectum. \n\nThe idea that he could somehow feel Tessa's heartbeat in each of the cock-suctioning pulsations of her exquisite asshole hit Nick very hard, reviving the deep, intimate connection that he and the pastor's eldest daughter had always shared and that unfailingly got renewed and celebrated every time they had anal sex. Failing to find any word apt to properly describe the sense of pure visceral closeness he felt for Tessa, Nick chose to lovingly kiss her gorgeous trembling lips instead, meanwhile leaving his imposing schlong immersed to the hilt inside her epic ass, allowing them both to savor in full the lascivious, satisfying perfection of their anal joining. \n\nMoaning and smooching sounds filled the room along with the heady smell of passionate sex while Sharon and Sally stared at the lovers' deeply conjoined bodies, their eyes mesmerized by the image of Tessa's pink dilated sphincter wrapped tightly around the thick base of Nick's massive dickmeat. \n\nThe pearly, frothy crown of overflowing cum slowly seeping past the tautly stretched rim of their big sister's cock-plugged butthole gave the twins a clear idea of just how humongous a load of sperm Nick had just pumped inside Tessa's ass. On top of that, the sight of her gushing pussy dripping so much girlcum that her thighs were visibly streaked with her nectar further testified to the immense pleasure that their sister had just received through anal sex. That tangible, undeniable proof that they too could experience orgasms as amazing as the ones that Tessa had just enjoyed, while still preserving their virginity in the process, made both Sharon and Sally's already raspy breathing accelerate even more, thrilling them to the core and filling their lust-high brains with naughty prospects, their nectar-slick fingers meanwhile still busy frigging away on their drooling little slits. \n\nFinally, when Sally gathered herself enough to speak, her voice was trembling with amazement, husky from cumming repeatedly on her own clit-circling digits while avidly watching Nick and Tessa's awesome anal coupling. All she managed to gasp was a heartfelt: \"Fuck!\" \n\nWhimpering throatily as she dipped her forefinger into her own sopping pussy and then rubbed it all around the gummy rim of her tiny, twitching hineyhole, Sharon could only reply to her twin's astounded exclamation with a long mewling sigh, followed by a dreamy: \"I know, right!\"\n\nAll the while, as the twins kept watching and masturbating in awestruck silence, Nick and Tessa never stopped languidly making out, his chest glued to her arched back and his huge boner crammed to the hilt inside her tight, cum-flooded little asshole. Still hard as a rock in spite of the ungodly ejaculation he had just sprayed into the warm, silky snugness of her rectum, Nick began slowly rocking his butt-jamming truncheon inside Tessa's buttery anal passage while they savored their afterglow together, silently celebrating their newfound closeness. \n\nWhen he finally unglued his lips from her soft welcoming mouth so that they could both take a long steadying breath, Nick unlocked his arms from around Tessa's voluptuous frame and reached a hand to her face, gently caressing her flushed cheek and tucking a long strand of chocolate brown hair behind her ear before he spoke. \n\n\"Sorry, Tess, I didn't mean to cum so soon. The thing is, well, your ass is even more incredible than I remembered!\" Nick chuckled while peppering the pastor's eldest daughter's neck with butterfly kisses. \"I really, really love your ass, Tess. I mean it.\"\n\n\"Mmh thanks, baby, I've always loved hearing you say that!\" Tessa cooed, glowing with post-orgasmic bliss and wiggling the curvy plumpness of her dick-skewered bubble-butt against Nick's slowly grinding groin. \"And there's no need to be sorry either. You know how much I love to feel you cumming in my ass! Besides,\" she added with an impish grin, biting her gorgeous lips in anticipation as she expertly started working her anal muscles around Nick's unyielding hardness, expertly sucking on his massive dickmeat with her seed-slick rectum, \"now that we've got the first one out of the way, you can buttfuck me for real! Long and hard and deep... You know, the way I like it...\"\n\n\"Yeah, I like that too!\" Nick replied with a smile, his boner flexing deep inside Tessa's cozy cum-lubed anus as he gloried in the suctioning feel of having her cock-massaging anal walls and clingy little butthole nursing lewdly on his raging pole. After trading a few more smooches, sighing with pleasure as Tessa redoubled the tender, dick-engulfing rhythm of her masterful anal squeezes, Nick spoke again, a smile in his deep, calm voice.\n\n\"So, what shall it be then, my anal princess? How do you want me to make sweet love to your ass?\" \n\nLaughing brightly as she savored the naughty thrill of being once again called his anal princess and being asked how she wanted him to sodomize her, Tessa gave Nick one final passionate kiss before murmuring her sultry, unequivocal reply: \"Ride me hard, baby! Ride my ass and make it yours.\"\n\nThose words and the deep, delicious squeeze that her creamy rectum gave to his fat butt-stretching pole were all the encouragement Nick needed. He merely took the time to suck on Tessa's soft lips one last time and push his glasses back on his nose before he straightened up and swiftly repositioned, squatting over her majestic booty with his feet firmly planted on the bed right outside of her knees. \n\nCrouched over her round juicy rump, holding his cock tucked snugly inside her greedy forbidden hole all the while, Nick grabbed firmly onto Tessa's bouncy buttcheeks and looked at her. Tessa's beaming face was pressed sideways into the bedspread and her hazel eyes were shiny with emotion as they met Nick's bespectacled gaze. Not needing words, he just raised his eyebrows questioningly and she instantly nodded her assent, grinning and biting her succulent lower lip in wanton anticipation.\n\nAs Nick slowly withdrew his girthy cum-lubed shaft from the cling warmth of her anus until he was halfway out, Tessa whimpered and panted, enjoying the sweet butt-stretching friction of his massive schlong sliding out of her narrow chute. A long cooing sigh tumbled out of Tessa's mouth as soon as Nick stopped pulling out and pushed himself back into her ass instead, slotting his boner balls-deep into her rectum again with a deliberate gliding in-stroke. After pausing for a moment to savor the thrill of full anal penetration, Nick repeated that whole process again. Once, twice, three times he slid his thick truncheon halfway out of Tessa's butt and then jammed it back in to the hilt, going slow and steady, making sure that her exquisite asshole was relaxed and ready for him to truly plow. \n\nBy small but unstoppable increments, Nick started putting more force into his motions, picking up a little bit of speed at each butt-cramming push while retreating a fraction of an inch more at each out-stroke, gradually adding length and depth to his thrusts. The welcoming yet deliciously tight grip of Tessa's anal walls around his throbbing pole felt heavenly as Nick got into an increasingly firmer and faster assfucking pace, the buttery heat and rippling softness of her rectum egging him on along with her sexy, blissful mewls of delight. Without causing her any pain, helped by the slippery sheen of cum and lube and spittle coating both her smooth dick-hugging bowels and his veiny schlong, Nick was soon pumping his huge boner at full speed in and out of Tessa's plump booty, sodomizing her with all the passionate intensity of his feelings for her.\n\nAs Nick rode her rump at a powerful ass-plowing rhythm, Tessa couldn't help but get deliciously faint with pleasure, overwhelmed as she was by climax after rolling mini-climax. Her sensitive anal tunnel sizzled with orgasmic joy as Nick's meaty shaft pistoned steadily in and out of her greedy little sphincter, stuffing her rectum so totally full of his stiff cockmeat that she could barely hang on to rationality at all, she was so mindblown by the sheer potency of the pleasure radiating throughout her surrender body. As Nick's beefy pole kept plunging relentlessly into her gummy pink asshole, triggering a new surge of climactic wavelets every time he slammed balls-deep into her tightest and hottest anal depths,Tessa simply closed her eyes and mewled like a satisfied sexy kitten, letting the sounds of her languid delight tumble freely from her parted, broadly smiling lips. \n\nFor the most part, the pastor's eldest daughter only gasped and sighed and moaned non-stop in unintelligible ecstasy, but from time to time some semblance of meaning did manage to seep into her vocalization. Invariably, Tessa's trembling words were a mix of exhortation and appreciation of her devoted buttfucker's well-honed booty-plundering skills.\n\n\"Uuungh... Ooohh my god, Niiiick! Oohh yesss like thaaat... Uuuuhh yeaahh fuck my ass! Ooohh baby, yeeess!\"\n\nAs was always the case when she had anal sex with Nick, Tessa tried to participate in the coupling either by pushing her fabulous bubble-butt back to meet her lover's rump-skewering thrusts, or by squeezing and releasing her anal muscles around his pole to match his sodomizing rhythm, in an attempt to suck him off within her soft rectum in the same way that she did when he was buried to the hilt in her ass, enormous yet motionless inside her cozy rectal passage. Tessa wanted to do all that, she wished she could focus enough to do it, but she simply couldn't pull it off, not while she was getting royally assfucked by Nick's awesome horsecock. \n\nEver since she had gifted him with her anal virginity, once his fat rock-hard dick started seriously slamming into her receptive little rosebud and that indescribable mixture of extreme pressure, slippery friction and meaty fullness inside her anus built up past a certain level, Tessa simply lost control. Overwhelmed by the combination of scorching pleasure, thrilling sinfulness and ultimate intimacy that anal sex meant to her, the pastor's eldest daughter had never been able to conjure up neither the lucidity nor the energy to act in any way while Nick fucked her ass, and this time was no different. All she managed to do was moan and pant and languidly enjoy the deep thrusting rhythm of Nick's butt-pounding cock wedging itself over and over into her snug rectum, making her cum and cum and cum in the process. \n\nUnderlined by Tessa's purring, ego-boosting vocalizations and by the fleshy clapping impacts of his thighs slamming over and over into the jiggly fullness of her magnificent round buttcheeks, Nick's rump-riding rampage kept getting more savage by the minute. His slick, furiously intense ass-stuffing thrusts were causing a breathtaking sequence of back-to-back orgasms to surge from the very core of Tessa's being, blowing her away to the point that she couldn't even find the mental clarity and physical strength to work her fingers on her clit anymore. Not that it really mattered to her: at that point, with Nick's big cum-laden balls swinging into her drooling pussy at each in-stroke and his sperm-glazed shaft plunging fluidly into the deepest depths of her steamy rectum, Tessa had reached that unique, blissful place where she could climax merely from anal stimulation and thus experience orgasm after rolling orgasm just as long as she had Nick's perfect cock sawing in and out of her eager little asshole. \n\nJust as her slack mouth was drooling on the crumpled bedspread while her body was assaulted by wave after thundering wave of butt-centered pleasure, Tessa's virgin pussy was incessantly overflowing with rivulets of sweet, shiny girlcum. Her shapely thighs were drenched in her gushing juices and a puddle of dripping nectar was forming right between her knees, and yet her lust-hazy brain desperately egged her on to speak and beg for more whenever her O-shaped lips weren't busy letting out bursts of broken, husky moans of delight. \n\n\"Uuhh fuck... Oowwhh Nick... Yes, yes, stretch my ass like thaaat! Oohh yeaaah, go deep in me, deeper yeaahhh... Uuhngh sooo biiig! Sooo haaard uuhhh! Oowhh you fill me so much, baby... I love your cock in my aaaass!\" \n\nDocile and hyper horny, blatantly radiant with anal pleasure, with her beautiful cock-jammed ass stuck up in the air, her face pressed down on the bedspread and her fabulously big tits bulging out from underneath her curvy bent-over frame, Tessa looked like the very picture of perfect sexual ecstasy in the eyes of her awestruck younger sisters. The obscenely beautiful image of Nick crouching dominantly over Tessa's sumptuous bubble-butt with his massive dickmeat pistoning full force in and out of her oily stretched-out sphincter etched itself indelibly in Sharon and Sally's lust-high minds, along with the jealousy-inducing sight of their big sis's shaved virgin pussy constantly dribbling her liquid pleasure as she was shaken by one delicious orgasm after the other. \n\nMesmerized by that scene of indisputable anal bliss, Sharon and Sally kept caressing their dripping slits as they seamlessly shifted from their sitting positions on opposite corners of Tessa's bed to lying on their sides. With their taut round asses pushed out and hanging off each side of the bed, both twins had begun fingering their twitching buttholes as soon as Nick started pounding away at Tessa's booty, the temptation to somehow emulate the lovers' passionate anal coupling having grown simply too big for the girls to resist. \n\nWhile each twin kept one hand always busy diddling her own juice-slippery pussy to maintain a steady ebb and flow of clit-centered pleasure, the way Sharon and Sally masturbated their rosebuds was very different. While Sharon held two digits buried knuckle-deep and motionless inside her anus as she flicked her engorged nub, Sally was recklessly pumping her slim middle finger in and out of her own virginally tight sphincter, trying to match the ass-pummeling cadence that Nick imposed on Tessa's bouncy, fabulous booty. Despite their different approaches to anal masturbation though, the twins were both convinced by Tessa and Nick's demonstration about the merits of buttsex: no matter if what happened in anal porn was just acting, neither Sharon nor Sally was going to doubt that Tessa's orgasms were absolutely real and amazingly powerful.",
        "The pastor's eldest daughter was in fact cumming so much and so incessantly that, while Nick's lustful butt-reaming assault went on and on with increasingly faster and harder thrusts, Tessa got to such a point of absolute full-body rapture that she couldn't even summon the energy to hold herself up on her hands and knees anymore. Her strength fully drained, her will and rationality dissolved into an all-encompassing fog of bliss, Tessa was eventually overwhelmed by a climax so potent and mind-melting that it made her barely open eyes roll back in her head while her girlcum streamed down her thighs in glinting rivulets and her knees buckled underneath her, ready to give in. As a long mewling squeal escaped her O-shaped lips, reduced to a pleasure-overdosed rag doll, Tessa capitulated completely to the anal pleasure sizzling through her and just let herself flop limply onto the bed so that she was lying flat on her tummy, joyously spent. \n\nWhile Tessa's legs shook and failed under her and she collapsed forward, Nick was right in the middle of his umpteenth gliding out-stroke. Her sudden shift in position caught him by surprise, causing his hefty boner to slip out of Tessa's clingy little asshole and be dislodged completely from its cozy sheath, accompanied by the lewd slurping sound of his fat purple glans popping out of her slippery pink rosebud. Blinking behind his glasses and panting with anal lust, Nick immediately leaned down and grabbed the round bouncy globes of Tessa's plump bubble-butt. Sinking his fingers into her juicy asscheeks and spreading them wide apart, Nick stared raptly at the delectable sight of his ex girlfriend's gaping asshole. Obscenely dilated to fit his massive cockmeat, slick with the oily mixture of cum and lube that glazed its distended gummy rim, Tessa's rosy sphincter looked absolutely irresistible to Nick as it winked and pulsated invitingly at him like a cock-hungry, insatiable little mouth.\n\n\"Mmhh... M-m-more, baby, pleeeease... Your cock, Nick, I need it in my ass so bad!\" \n\nTessa's mewling, lust-slurred words were barely out of her mouth while Nick swiftly got on top of her, draping his tall lean body over her curvy frame and nestling his aching length in the luscious, meaty softness of her butt-cleavage. With his massively erect dickmeat hotdogged between her beautifully plump asscheeks, Nick couldn't help but give Tessa's round shaft-smothering globes a few humping strokes before he guided his boner right back to the welcoming entrance of her slippery, rapidly shrinking hineyhole. As Nick's huge spongy tip wedged itself into her twitching butt-ring and stretched out her eager anus once more, Tessa exhaled a long sigh of satisfaction. A big beaming smile was painted on the pastor's eldest daughter's face as her ex's thick pole began fluidly sliding deeper and deeper into her needy anal passage, widening her receptive rectum and packing her cum-coated bowels full of his impressive horsecock once again, much to their shared delight.\n\n\"Uuuhh yeees Niiiiick! Oooh yes, I love it, yeaaahh! Uuhh fill my ass full, baby, I need you deep inside meeee!\" \n\nPressing his crotch against her pillowy booty, Nick grunted throatily the moment he found himself slotted balls-deep within the snug warmth of Tessa's velvety chute again, his whole boner hugged from tip to root within the soft, slick grip of her buttery anal walls. Immediately, Nick resumed fucking Tessa's epic bubble-butt with frantic desire, his groin slamming into her cushiony rump with rhythmic fleshy claps as he began thrusting his enormous truncheon into her rectum with all the force of his unquenchable lust for her fantastic ass. Moments later though, right as Nick was really getting back into his previous butt-busting tempo, a discordant note intruded into the pleasure moans and mewls of the lovers' coupling.\n\n\"Aww no, guys, come on!\" Sharon groaned, pouting in displeasure as she tried to keep her digits working on both her holes while at the same time she craned her neck in an attempt to watch Nick's huge cock reaming Tessa's cute little asshole. \"Don't fuck her like that, Nick, please... We can't see much with you on top.\"\n\nBiting her lips in frustration and yet still furiously pumping her forefinger in and out of her virgin anus to somewhat match Nick's ass-cramming pace, Sally echoed her sister's lamentations. \"Yeah, Nick, turn Tessie on her side or something... Please, let us see!\"\n\nEven through his booty-plundering haze, the twins' voices reached Nick and sobered him up enough to remind him that he and Tessa were not alone in the room and that the main purpose of that impromptu sodomy was to somehow teach the girls about the pleasures of anal sex. Chuckling to himself at the idea that he was involved in an educational buttfuck after all, Nick nodded calmly and then sheathed his raging cock to the hilt inside Tessa's slick rectum before wrapping his arms around her curvy frame and rolling the both of them on their side, shifting to a tight spooning position.\n\nFinding herself snuggled cozily in Nick's embrace, Tessa instinctively drew her legs closer to her chest until her knees were almost touching her big bulging tits, thus making her round bubble-butt fully accessible to him. In doing so, Tessa also incidentally allowed the sight of her dripping slit and her tautly stretched, cock-stuffed asshole to be revealed again to her horny sisters, even though that wasn't her main concern at all. In truth, pleasure-drunk as she was, Tessa had barely even heard the twins' lewd complaints: all she wanted was to be spooned as snugly as possible against Nick's slim frame and to offer him her eager little butthole in the most convenient possible way, so that he could keep sodomizing her hard and deep and gift her with as many anal orgasms as she could endure.\n\nHeld securely in Nick's embrace as his hands caressed her soft cute tummy and kneaded her fantastic boobs, Tessa turned her head his way and opened her mouth to tell him how desperately she needed him to keep fucking her ass. All she managed to murmur before his lips met hers in a torrid soulkiss was: \"Ooowh Nick... Pleeease, baby, fu-uhhmph... Mmphh!\"\n\nNot needing any prompting, knowing exactly what she was about to beg of him, Nick immediately satisfied Tessa's smooch-muffled request by stirring his achingly hard dickmeat within the steamy, buttery tightness of her rectum. Gently grinding and rocking his groin into her sumptuous booty as he held her lovingly in his arms, Nick changed pace completely from his previous all out rump-ramming assault. \n\nNever unlocking his lips from Tessa's hot tongue-sucking mouth, feeding on her priceless kiss-muffled moans and on the incessant cock-squeezing ripples coursing through her narrow chute, Nick began moving unhurriedly inside the pastor's eldest daughter's amazing asshole, withdrawing just a couple of inches of his veiny length and then pushing back in all the way, until her rubbery butt-ring was wrapped tautly around the very base of his beefy shaft and only his balls remained outside of her heavenly little orifice. A brief yet delicious pause followed, during which the conjoined lovers basked in the unique feel of Nick's enormous, fully engulfed cockmeat pulsating with joy inside Tessa's deepest and warmest anal depths, then he began pulling his thick schlong out of her snug rectum once more, repeating his deliberate butt-stuffing motions all over again, and again, and again. \n\nWhile Sharon and Sally looked on in languid amazement, each of them using both hands to diddle her own clit and asshole at the same time, Tessa and Nick lost themselves completely in their sensuous anal coupling, forgetting everything and everyone that was not themselves and what they were doing.\n\nSpooning Tessa as closely as possible while their tongues danced and wrestled together, Nick established a calm, steady deep-thrusting tempo. Purged of his initial anal frenzy, he took the time to savor each kiss he shared with his gorgeous ex girlfriend, meanwhile glorying in the bulging fullness of her tits filling his hands and savoring the plump, bouncy juiciness of her asscheeks pressing onto his groin when he was stuffed balls-deep inside her dick-suctioning rectum. As his boner slid fluidly in and out of her clingy little butt-ring and her snug anal walls rippled with steamy shaft-massaging tenderness all around his massively swollen length, Nick suddenly felt like he had gone back in time and was once again in the middle of doing what he never ever got tired of doing back when he and Tessa were still together: making sweet love to her beautiful ass.\n\nFor her part, as insanely thrilled as she had been just a few minutes earlier when she was having her luscious booty ridden hard by Nick's furiously hammering dickmeat, Tessa got instantly attuned to the new relaxed pace of his long, calm ass-cramming motions. In truth, the pastor's eldest daughter had always been a sucker for the lazy, intimate buttfucks that Nick never failed to gift her and that she herself used to request from him pretty much on a daily basis when they were a couple. Now, reliving that particularly tender yet very intense bonding experience with him unavoidably stirred a host of pleasure-enhancing emotions inside Tessa, causing glinting rivulets of girlcum to dribble from her pussy non-stop, soaking Nick's huge ballsack and further lubing up her overdilated, insatiably cock-hungry hineyhole. \n\nAs her ex boyfriend's lips devoured hers and his amazing dick kept flawlessly sliding deep inside her most sensitive anal depths, stretching out her tiny orifice out and stuffing up her tight rectum just the way she loved, the roaring ebb and flow of Tessa's previous back-to-back climaxes morphed into a constant sense of intense orgasmic joy that never spiked up too high but always kept growing by small steady increments, as if she was having one single long, uninterrupted climax. A bit more in charge of her lust-addled brain, the pastor's eldest daughter was now lucid enough to reach a hand to her virgin, sopping wet pussy and caress her juicy folds, lazily flicking her engorged love button whenever she wanted to feel an additional spark of clitoral delight on top of the delicious ever-building tremors of anal bliss that Nick's unhurried booty-plowing strokes provided.\n\nCaught in their own clit-rubbing and ass-fingering manipulations, Sharon and Sally mewled out their pleasure quietly, cumming a lot and yet never feeling completely satisfied, especially not in comparison to their big sister, whom they were watching climax over and over again, her pussy overflowing with liquid pleasure as her slick, dick-stretched butthole twitched incessantly around the impressive thickness of Nick's pistoning boner. A mix of sincere awe and naughty longing was painted on the twins' flushed faces as they both imagined how insanely good it would feel to experience what Tessa was experiencing, genuinely wishing they could trade places with her right there and then.\n\nWhile the sexy background sound of Sharon and Sally's soft moans complemented Tessa's kiss-muffled screams of release, Nick kept fucking his ex girlfriend's epic booty with long, deliberately deep ass-stuffing thrusts that allowed him to truly savor the slick, velvety snugness of her creamy anal walls. The warmth and tightness and softness of Tessa's suctioning rectum were so insanely good that Nick soon abandoned any thought that wasn't centered around her magnificent bubble-butt, his senses focusing solely on how perfectly his huge cock fit inside her welcoming, dick-hugging little asshole. \n\nThe way Tessa accepted and welcomed his gliding rump-impaling rhythm amazed and enthralled Nick, as always. He already knew very well that, once she let his thick truncheon slide into her ass, Tessa lost herself completely in the pleasure she got from getting sodomized and became blissfully docile, surrendering her gorgeous body to the chain of anal orgasms that she had never failed to experience whenever he crammed her tiny orifice full of his raging dickmeat. Far from bemoaning the fact that she was never particularly active while he fucked her in the ass, Nick had in fact always loved the complete trust in him that Tessa implicitly declared by meekly submitting to him and allowing his butt-reaming horsecock to penetrate her by way of that tiny, lovely pink rosebud of hers. It didn't even matter that it had been a very long time since he and Tessa had last had anal sex: the strong emotional connection between them was still all there, and the slow intimate sodomy they were enjoying together at that moment brought it back unchanged, as if it had never gone away at all.\n\nWith his pleasure building up more and more and his achingly hard boner kept sliding relentlessly in and out of her cock-engulfing rectum, Nick found himself marveling at the fact that, as always, Tessa's tight little butthole and her rippling anal depths were somehow managing to squeeze and release his veiny shaft in perfect synch with his incessant sodomizing tempo, sucking him masterfully even while Tessa's mind was drowning in endorphins and her whole curvy body was caught in the throes of climax after toe-curling climax. High on the physical ecstasy that her deliciously snug orifice was giving him as much as he was thrilled by the persistent liveliness of the emotional bond he could still feel linking the two of them together, Nick lost himself in the familiar sensation of plunging his throbbing hardness as deep as possible into the cozy tightness of Tessa's steamy and ever-welcoming butthole, cramming her ass to absolute fullness over and over and over again. \n\nTime lost meaning as the lovers kissed and spooned and fused together completely, connected by the strong, incessant motions of Nick's huge cock filling Tessa's snug anus. Only when his massive dickmeat began swelling and pulsating, growing impossibly harder and bigger inside her narrow rectum and thus announcing his imminent ejaculation, did Nick emerge from the immersion in pure anal bliss that he was sharing with Tessa. \n\nHis mouth was still brushing on her smooching, panting lips as he dazedly mumbled: \"Tess, babe... I... I'm gonna cum soon... Ohh Tess, I love your ass so much! I missed it, really... Ahh fuck, Tess, your ass, your beautiful ass... Your tight little asshole...\"\n\n\"Yeess, baby... Fill me again, uhhh! Ooowhh god, you feel so perfect inside my ass, Nick... Pump me full of cum again, baby!\" \n\nThat panting, scorching hot exchange between the spooning lovers did more than break the entranced silence that had descended over the room. While Nick grunted in impending release into Tessa's mewling mouth and she accelerated her clit-frigging motions in anticipation of the anal creampie she was about to receive, Sally suddenly woke from her voyeuristic trace and spoke, her voice ringing bright with arousal but also squeaky with panic at the notion that the mesmerizing sodomy she had so greedily been watching was about to come to its end. \n\n\"Wait guys, wait!\" Sally squealed, surprising everyone including herself with the lust-crazed urgency of her tone. \"Get on top of him, Tessie, please! I wanna see you ride his cock with your ass before he cums!\"\n\nBlindsided by that request, Nick slammed his throbbing boner to the hilt inside Tessa's rippling rectum and stopped there while he turned his head toward Sally. Blinking behind his glasses as he focused on the twins for the first time since he had started fucking Tessa's epic ass, Nick took in both Sally and Sharon's semi-naked bodies while taking notice of the fact that they were both eagerly fingering their own virgin buttholes and rubbing their nectar-slick clits. Panting and nodding at Sally, Nick placed a long lingering kiss on Tessa's succulent mouth as he slowly withdrew his massive length from her cum-slick asshole, pulling out all the way until his huge purple glans slipped out of her pink gummy rosebud with an audible squishy pop.\n\n\"Uhh... W-whaaa? Aww nooo, Niiick...\" Tessa whimpered in languid desperation as soon as she felt her clingy sphincter lose contact with her lover's fat spongy cockhead and she fully realized that he wasn't going to push himself into her anus again, leaving her insatiable butthole intolerably empty. \"Nooo, baby, don't leave me like this... I need you inside me, Nick! Why did you pull out? Give me your cock, pleeease! Put it back in my ass, baby, I need it!\"\n\nHugging and caressing her soft curvy body to comfort her, Nick dragged Tessa with him as he rolled onto his back first and then sat up against the headboard, all the while maneuvering her petite, pleasure-limp form until she was straddling him in a cowgirl position. Moaning and panting while her winking dick-craving orifice pulsated with obscene hunger, Tessa reached back for Nick's enormous cock with one hand even as she was still wiggling her round juicy booty and settling on his lap. Placing her free hand on Nick's chest while she arched her back, thus pushing her huge jutting tits in his bespectacled face, the pastor's eldest daughter bit her lips sexily as she wrapped her dainty fingers around her ex boyfriend's sperm-coated, massively erect pole and guided it into the bouncy, fleshy roundness of her butt-cleavage. Despite her frenzied urgency to get her ass stuffed full of dickmeat again as soon as possible, on her very first try Tessa flawlessly aimed Nick's bloated knob at the gaping entrance of her anus and slotted his fat cockhead right back into her slick forbidden hole.\n\n\"Mmmh yes, yeaahhh... Oohhh that's iiiit!\" Tessa mewled as she rocked her pillowy rump while pushing herself down onto Nick's raging hardness, eagerly forcing her dilated butt-ring to gobble his huge tip before starting to slide down along his girthy length, engulfing him inside her snug rectum again. \n\nThanks to the slippery mixture of lube, spittle and churned up cum coating both her smooth anal walls and Nick's veiny truncheon, Tessa easily managed to impale her own ass on his boner in a single reckless plunge that brought her rubbery sphincter to wrap itself snugly around the very base of his thick, meaty shaft. A radiant smile was dancing on Tessa's lips and her whole body began trembling visibly as soon as her horny little butthole was once again crammed to bursting with Nick's horsecock. Her voice sounded perfectly ecstatic as she sighed out her renewed anal bliss.\n\n\"Oohhh yesss! Fuck yes, baby! All of you, unghh, so deep in my ass... Nick, oowwhh Niiick... It feels sooo good, I love this so much!\" \n\nGrinding and rocking her fully impaled bubble-butt, Tessa threw her head back and let her brown hair cascade across her arched back as she stirred her buttery bowels with Nick's rump-stuffing pole, her drenched clit meanwhile rubbing deliciously against his groin. Unfortunately, pleasure-weakened and desperate for one last big orgasm as she was, the pastor's eldest daughter simply didn't have the strength to actually ride Nick's big cock with her ass. As good as it felt to engulf his thick butt-widening length from tip to root inside her clingy chute, Tessa knew that she needed more than that delicious ass-stuffing sensation to get off, and in fact she was only driving herself ever crazier with lust with each of her small, tormentingly sweet booty-shaking undulations. Luckily, Nick knew her well enough to understand her situation, and he was more than willing to do what needed to be done.\n\nWrapping his arms around her arched back, Nick filled his hands to overflowing with the juicy plumpness of Tessa's magnificent booty and buried his face in the soft, luscious valley of her cleavage while he started bucking his hips upward, driving his aching boner in and out of her heavenly little asshole with powerful upward thrusts. Feeling blissfully faint as her cock-packed anal depths sizzled with pleasurable stimuli, Tessa could only purr and smile lovingly at Nick to signify her approval of his move. As she focused her desire-foggy gaze on his bespectacled eyes and nodded languidly, Tessa tried her best to rock her cushiony bubble-butt up and down on Nick's pistoning truncheon in time with the quickly accelerating pace of his rectum-reaming strokes, but she didn't manage to do much. Mere seconds after he started pumping his meaty schlong upward into her willing anus, Tessa could already feel herself floating away into that dizzy, amazingly warm state of physical euphoria that booty sex with Nick always allowed her to access. ",
        "As Tessa shivered with pleasure on top of him and the dick-hugging snugness of her lovely little butthole increased its slippery grip on his boner with his every surging in-stroke, Nick held her petite curvy body tighter in his arms and peppered her huge jutting boobs with kisses, meanwhile picking up his ass-jamming pace more and more at each pass. The deep, rippling squeezes that coursed through Tessa's steamy anal walls while Nick vigorously slammed his fat dick all the way up into her rectum in an unstoppable butt-busting rhythm matched her choked squeals of impending release, confirming that she loved the fast pounding cadence he was imposing on her bouncy ass even though she currently couldn't actually say so in words but only through lustful gasps and breathless moans.\n\n\"Ooohh yesss! Uuhhh fuuh-uuhh-ck... Yeaahhh babyyy! Uunghh Niiiick... Oowwhh yeeaahh!\" \n\nEven the few scattered, deliciously broken mewls of encouragement that Tessa managed to utter here and there ended soon enough though. As the pre-orgasmic waves of pleasure roaring inside her kept growing in intensity, Tessa gave up entirely both on trying to bounce her juicy rump on Nick's rampaging horsecock and also on holding herself up with her arms extended and her hands splayed open on his chest. Letting herself be claimed by the mind-blasting anal delight that Nick's relentless ass-plowing boner was giving her, Tessa allowed herself to go limp and simply leaned down onto her lover's toned body, squashing her large bulging tits against his torso and resting her panting, O-shaped lips on Nick's own, locking their mouths together in a breathless soulkiss.\n\nEntranced by the way Nick and Tessa appeared to be syncing and fusing together yet again as they rushed at full speed to their peaks, Sally and Sharon pumped their dainty fingers into their respective assholes and frigged their nectar-soaked clits in reverent silence, all the while avidly watching the amazing anal fuck taking place before them. Their blue eyes were wide and glassy with anticipation as they stared raptly and somewhat jealously at their big sister's thick round booty jiggling away in time with the surging upstrokes of Nick's impressive truncheon ramming fiercely into her eager, stretched-out little anus. As they drank in the final frenzied stages of Tessa and Nick's passionate sodomy, neither of the twins could remember ever being so mesmerized or turned on as they were right at that moment, with their eyes glued to the distended slippery ring of Tessa's insatiable asshole sliding flawlessly along the thick, meaty length of Nick's enormous cock, again and again and again. \n\nHorny as he already was, aching to cum deep inside her buttery anal depths again, Nick kept humping up into Tessa's clingy chute with all he had, jamming his massive truncheon harder and deeper and faster into her ass by the second as they kept devouring each other's lips. While his throbbing erection pistoned incessantly in and out of her tiniest and snuggest hole, Nick put more and more intensity into his booty-plundering thrusts the closer to his climax he got. Through the final dizzying moments of their shared sodomizing frenzy, while Tessa wildly smooched his panting mouth and her warm anal walls tugged and nursed on his deep-plunging length with a lustful intensity that matched his own unquenchable desire for her beautiful ass, Nick found himself going all fuzzy inside at the thought of how genuinely enamored he was with Tessa's lovely little rosebud. \n\nHer asshole was so tight and warm and soft, and it somehow always felt like it could reshape itself to fit his huge cock to perfection, widening docilely to his deepest thrusts yet squeezing him with a sort of possessive greediness all along his girthy shaft, enveloping him a snug buttery caress that drove him crazy with pleasure. It just felt so good to be balls-deep inside Tessa's fabulously plump booty again, Nick dazedly thought as he kept slamming his throbbing hard pole up into her asshole ever more recklessly, rushing full speed ahead toward his climax. Tessa's was the first ass Nick had ever fucked in his life, the first hole he had ever cum inside of, and, for the time being, still the one hole he had pumped full of his seed more than any other, hands down. And now he was about to shoot yet another ungodly amount of his scalding hot sperm into Tessa's snug slippery rectum, adding up to the lewd yet weirdly romantic record that the pastor's eldest daughter's epic ass held. \n\nAs they watched the powerful rapid-fire strokes of Nick's enormous boner sliding in and at out their big sister's tautly stretched sphincter at blurred speed over and over again, Sharon and Sally marveled at the way Tessa's rubbery butt-ring visibly twitched and contracted with pleasure around his thick, pulsating tool. Even though neither lover could say anything out loud, their mouths being glued sensually together in an unbroken sequence of passionate smooches, the entranced twins could clearly tell that both Nick and Tessa were mere moments from cumming. Nick's ass-impaling thrusts were getting ever more frenzied, his huge cock swelling and pulsating visibly every time it surged between Tessa's bouncy round buttcheeks and disappeared up to the hilt into he clingy anus, causing her voluptuous body to shake all over with undeniable pleasure, the kiss-muffled symphony of their moaning, breathless make out session meanwhile getting louder and messier by the moment. \n\n\"He's gonna cum in her ass!\" Sharon mewled as she twirled her fully buried index and middle fingers inside her tiny little butthole, the clit-flicking digits of her other hand all the while strumming away and bringing her quickly closer to another orgasm. \"Oohh my god, Sal, look at them! Sooo fucking hot!\"\n\n\"I know! It's awesome, oooh so hot...\" Sally replied, her eyes glassy with pleasure as her perky body coursed with a current of mini-climaxes caused by the reckless ass-plugging rhythm that her slender forefinger was imparting on her own virginally tight hineyhole. A fixed smile of combined disbelieving awe and lascivious anticipation was painted on Sally's slack lips as she kept eagerly masturbating her anus with one hand and rubbing her clit with the other while she distractedly mumbled: \"Tessie is really cumming non-stop... Cumming with her ass full of cock... Ooohh god, it's amazing!\"\n\nThose trembling, lust-thick words had barely left Sally's mouth when, all of a sudden, Nick and Tessa's anal coupling reached its peak. \n\nGrunting into her smooching mouth, tensing all over as he locked his arms possessively around her voluptuous frame and squashed her bulging tits to his chest, Nick slammed his throbbing truncheon all the way up into Tessa's ass one last time and held it there. His glans was pushing as far into her snug anal depths as it could get and her tautly stretched sphincter was gripping the very base of his veiny shaft as his balls drew up and his ejaculation surged powerfully along his flexing boner, exploding deep inside Tessa's cock-engulfing chute in a huge, ass-flooding spray of thick cum. \n\nAs the jetting, creamy heat of Nick's seed inundated the tightest, most intimate recesses of her sensitive rectum and his massive butt-jamming dick pulsated crazily within her narrow tunnel, Tessa froze mid-kiss with her lover's tongue still caught between her suckling lips, thunderstruck. The total fullness in her overstuffed ass merged perfectly with the sense of emotional completeness stemming from even deeper inside of her being, thus generating an orgasmic shock that detonated with the strength of all the climaxes she had experienced during that savage anal romp put together, wiping her out immediately.\n\nAs she came spectacularly, Tessa's anal walls clenched and milked and sucked Nick's spurting monstercock in a heavenly mix of tightness and smoothness and warmth, making him mutedly growl into her slack mouth while he still kept pumping jet after impressively long jet of thick seed into her amazing ass. Even as she collapsed on his chest like a rag doll, her pussy squirting crazily while her drooling mouth remained fixed in a blissful O, Tessa's anal walls continued squeezing Nick's huge dickmeat, extending his pleasure and preventing his ungodly ejaculation from ending just yet.\n\nWhile witnessing the first few shockingly erotic moments of that devastating and simultaneous anal orgasm, Sharon and Sally also came on their own respective ass-poking and clit-rubbing digits, their pussies weeping with joy as they stared at Tessa's slit gushing and leaking her girlcum all over Nick's groin. As blown away as they both were to see their curvy big sister tremble like a leaf and then collapse on her lover's chest due to the sheer earth-shattering intensity of her orgasm, the twins were particularly electrified by the sight of Nick's big beefy balls tightening up and pressing firmly against the twitching, distended rim of Tessa's sphincter as he pumped her ass full of cum. \n\nEven though it was technically hidden from Sharon's and Sally's eyes, what with his massive boner being buried to the hilt inside Tessa's cozy rectum, the abundance of Nick's creamy load was still very obvious to the twins, as demonstrated by the fact that a frothy, pearly white crown of seeping sperm was starting to form all around Tessa's clingy, overstretched asshole. The realization that Nick was cumming so copiously inside of Tessa's pink forbidden hole that his milky seed was somehow dribbling its way around his butt-cramming pole, overflowing her deeply dick-jammed anus and actually managing to trickle out of her tautly dilated orifice hit Sally particularly hard, fueling her lust to a new unprecedented level of scorching hot naughtiness. \n\nWithout thinking, still deliciously dizzy from her afterglow, Sally suddenly stopped diddling her own clit and asshole and sat up on her knees. Never removing her eyes from the memorable image of Tessa's cock-gobbling and cum-leaking asshole firmly gripping the base of Nick's throbbing truncheon, Sally purposely knee-walked across the bed toward the moaning, kissing, still orgasming lovers. Once she was kneeling behind her panting and totally satisfied big sister, Sally reached her dainty hand toward the rounded softness of Tessa's luscious ass-cleavage and wrapped her slim fingers around the very root of Nick's fully-buried, still spurting pole. Then, much to her own surprise, she pulled.\n\nSharon had to blink her eyes to make sure that she wasn't having some kind of climax-induced hallucination as she watched her usually timid twin slowly but surely withdraw the thick, veiny length of Nick's dickmeat from the snug confines of Tessa's well-fucked little butthole. \n\n\"Whaaa?! Sal, what are you...\" Sharon gasped, her shock mixing with a renewed rush of arousal while she stared at the lewdly beautiful sight of Nick's fat schlong slowly exiting Tessa's cum-slippery orifice as Sally persistently pulled that massive, sperm-coated shaft from its cozy anal sheath. \"Oh my god, Sal... Whoa!\" \n\nWhen only Nick's huge cockhead remained tucked inside Tessa's ass, dilating her rosy sphincter to the very limit with its bulbous fleshy presence, Sally leaned down closer and tucked her long blonde hair behind her ears before giving Nick's pole one last tender tug, forcing his fat purple glans to slip out of Tessa's winking anus with a sexy slurping plop. Even though the bursting part of his torrential ejaculation had already been spent deep inside Tessa's rectum, Nick's meaty rod was still spewing cum when Sally extracted it from her big sister's gaping, seed-plastered orifice. As cum-thirsty and super horny as she was, Sally wasn't quite ready to catch Nick's potent spurts fast enough, which allowed one long ribbon of creamy semen to shoot up in the air and land across the curvy plumpness of Tessa's asscheeks, streaking them pearly white. The next jetting rope of seed splattered right between Sally's parted lips though, as she promptly dipped her face lower and opened her mouth wide to receive that precious milky treat.\n\nThe image of Nick's huge cum-shooting glans disappearing inside her twin's talented lips snapped Sharon out of her trance, convincing her to stop masturbating and egging her on to join Sally at once. Wrapping her slender fingers around Nick's thick juice-slimy shaft right above Sally's jacking hand, Sharon knelt beside her twin and stared covetously while Sally's cheeks bulged out until they were filled to the limit with surging seed, only to then return to normal as she swallowed down what appeared to be an abundant mouthful of Nick's potent ejaculate. Lewdly jealous and maddened with cum-thirst, Sharon allowed her moaning twin another couple of seconds of undisturbed cock-nursing bliss before she impatiently blurted out: \"Okay, Sal, you've had enough. My turn now!\"\n\nPushing her face closer until her sculpted cheek was glued to Sally's seed-streak chin, Sharon pulled Nick's massive dickmeat her way, forcing his bulbous sperm-oozing glans to plop out of the soft, suctioning seal of Sally's lips. Such was Sharon desire to taste Nick's cum that she managed to gobble his big purple tip and a couple of inches of his shaft within her mouth in time to capture his entire next spurt right into her oral cavity, without letting one single drop spill. \n\nDazed and still climaxing, Nick had been caught unawares by the disappointing sensation of having his raging boner suddenly removed from Tessa's exquisite little asshole, but he hadn't had neither time nor reason to protest. As soon as he felt the warm wetness of a cock-craving mouth engulfing his spewing schlong, he simply exhaled in delight and accepted that unscripted turn of events. In fact, his pleasure grew even more once he craned his neck and looked over Tessa's voluptuous and totally spent form to see the twins kneeling behind her fabulously plump booty, both intent on inhaling his huge cock and drinking his cum. \n\nMewling and cooing and suckling alternatingly on his glans with equal eagerness, Sharon and Sally shared with lewd, practiced efficiency whatever remained of Nick's prodigious ejaculation. Slowly but determinedly jacking him off together at the base while passing his shaft back and forth so that they could each in turn nurse on his bloated glans for a bit and thus gobble down his last creamy spurts and dense oozing dollops right from the source, the twins coaxed every last glob of cum from Nick's beefy balls until he was thoroughly and pleasantly drained. \n\nOnce they were sure that not another drop of tasty sperm was to be milked out of him, Sharon and Sally let go of Nick's stiff girthy length and turned their attention to their big sister's puckered, seed-oozing butthole. Still gaping but already in the process of shrinking shut on itself, Tessa's sphincter was glazed all over with overflowing cum, with rivulets of thick white sperm trickling out of its dilated, rosy opening. Fascinated by that obscenely enticing sight, Sally and Sharon splayed their big sister's meaty asscheeks apart and gingerly reached their fingers to her thoroughly creampied anus. Getting only sleepy coos in response from Tessa as they tentatively traced their fingertips around her cum-slippery butt-ring and used them to scoop up the gooey streaks of seed dripping down her luscious ass-cleavage, Sharon and Sally looked at each other and shrugged, deciding that their sister's dopey groans were a good enough sign of her giving them the green light.\n\nA litany of soft groggy mewls from Tessa followed, as Sharon and Sally collected Nick's overflowing cum from all over her asscrack with their dainty digits and voraciously brought every single stray glob they could gather to their mouths, humming with delight as they swallowed those creamy treats. Soon enough, the only place where the twins could get more leaking sperm was the rosy little pucker of Tessa's gradually closing butthole. Circling its tender rim with their fingertips, Sharon and Sally giggled as they delicately massaged Tessa's winking anus using Nick's copious seed as a kind of sexy soothing lotion, rubbing it all around her lovely rosebud and pushing some of it back into her asshole while still bringing the biggest dollops to their own mouths. \n\nOnce their big sister's butt-ring had once again tightened shut on itself and resumed its usual tiny puckered starfish appearance, thus sealing the rest of Nick's huge load within her sperm-coated anal passage, the twins just looked at each other and burst into laughter. Then, still tittering and looking intently at each other, Sharon and Sally made a big ceremony of nestling Nick's barely deflating sausage between the round fleshy buns of Tessa's bubble-butt. Satisfied with their contribution to the lovers' coupling, the twins finally set about the task of scooping up the few drops of cum left on one other's chin and cheeks, only to then lick their own fingers clean of the seed they had removed from the other's face, meanwhile still giggling whenever they met each other's eyes as if they were sharing some king of inside joke.\n\nTo the sound of Sharon and Sally's laughter, with his semi-hard cock hotdogged cozily within the soft hugging plumpness of Tessa's ass-cleavage, Nick exhaled and locked his arms affectionately around his ex girlfriend's voluptuous, blissfully peaceful form. Nick's lips had already placed a soft kiss on each of Tessa's closed eyes when a bright voice resounding from downstairs startled everyone in the room like an unexpected clarion call.\n\n\"Girls! I just saw the car in the driveway, when did you get home? Sally, Sharon, are you up there?\"\n\nTheir mother's loud yells had an instant sobering effect on all three of the pastor's daughters. Abruptly brought back from her languid absence, Tessa was the first to let out a gasping groan as her eyes popped open and she instinctively furrowed her brow. Meanwhile, Sharon and Sally looked at each other with mirroring deer-in-the-headlight expressions on their sculpted faces before they gathered themselves enough to jump off the bed and dash to the closed door. Cracking Tessa's bedroom door open just enough to peek their heads out into the hallway, the twins were prompt to answer their mother before she might decide to come upstairs looking for them. All the while rearranging their tops and pulling up their bunched up panties and shorts, Sharon and Sally took turns yelling out their reply.\n\n\"Yeah, Mom, we're up here! We just got back from training.\"\n\n\"We'll be right down, Mom, we're about to jump in the shower!\"\n\n\"Yeah, we'll just shower and come downstairs!\"\n\n\"Just a few minutes, okay, Mom?\"\n\nA short, tense moment of silence followed, during which Sharon, Sally, Tessa and Nick all looked back and forth into one another's eyes, sharing the general rush of panic while waiting for an answer from the three girls' mother, all of them dreading to hear the sound of her footsteps climbing up the stairs.\n\nAfter what felt like ages to everyone in Tessa's bedroom but was in fact merely a couple of seconds, the pastor's wife replied: \"Okay, girls. Just don't be too long.\" \n\nA collective sigh of relief resounded in the room while the click clacking of heels from downstairs got fainter and more distant until it faded away completely, signaling the all clear. Quicker than the others to transition back into mischievous glee, Sharon chuckled as she said: \"Wow, that was exciting! Okay, I guess we should actually go take that shower now. Right, Sal?\"\n\nAfter nodding at her twin, Sally turned to Tessa and Nick and declared with a beaming smile: \"Guys, that was great! A very convincing demonstration, and then some. Thanks Nick, thanks Tessie. You were totally right about anal, I'm so glad you did this for us!\"\n\n\"Yeah, right...\" Sharon snickered, an impish grin dancing on her cum-glossy lips. \"Tessie did it just for us, no ulterior motives at all, uh? It was probably just a lucky coincidence that she kept cumming like a total buttslut all the time while Nick rammed that big fat cock of his up her ass!\"",
        "\"Whatever... I still think it was very nice of Tessie, and Nick too. Alright, let's grab that shower and get downstairs to Daddy's party before Mom comes back...\" Sally concluded, grabbing her chuckling twin by the hand and dragging her out in the hallway. As she shut Tessa's bedroom door behind her though, Sally couldn't help but cast a final longing glance toward Nick's semi-hard and always impressive pole hotdogged between the plump round globes of her big sister's asscheeks. \n\nLeft alone once the twins were gone, Nick and Tessa enjoyed a few peaceful moments of silence together while he hugged her tight and she snuggled cozily in his embrace. With her head resting languidly in the hollow of his shoulder, purring as she pressed her huge boobs into his toned chest, Tessa cooed in delight as she gently wiggled her bubble-butt, shaking her luscious fleshy buns to better enjoy the feel of Nick's chubby length nestled in her ass-crack. \n\nExhaling as she savored the persistent afterglow of the epic storm of anal climaxes that his perfect butt-plowing tool had just gifted her, Tessa finally turned her lustrous hazel eyes to meet Nick's bespectacled gaze. Beaming both outside and inside as she offered him one of her sweet guileless smiles, Tessa softly pressed her lips against Nick's and giggled: \"So... That went pretty well!\"\n\n\"Oh yes, very well,\" Nick readily agreed, rubbing his nose against Tessa's cute button nose and nuzzling her flushed cheeks. \"I couldn't think of a better way to convince Sharon and Sally that they can remain virgins and still have great sex. You're the living and breathing embodiment of why anal sex is awesome, Tess.\"\n\nThe mix of matter-of-fact seriousness and genuine admiration that Nick put into his words struck a chord in Tessa, bringing back yet more memories of their time together, all of them positive. Laughing and holding tight to him as she cuddled safely in his affectionate bear-hug, the pastor's eldest daughter planted a long smooch on her ex's mouth as she said: \"Thanks, Nick! Gosh, I really missed your weird compliments!\"\n\nLaughing and trading lazy kisses as they rested in each other's arms, Nick and Tessa took their time before allowing reality to come back and dictate their next move. Only when they heard Sharon and Sally walking back down the hallway and knocking on her bedroom door while heading downstairs to the crowded backyard did Tessa and Nick fully emerge from their happy bubble, ready yet unwilling to pop it. \n\n\"I guess we should get back to the party, \" Nick flatly said, not even trying to be convincing.\n\n\"Yeah, we really should...\" Tessa sighed, scrounging her gorgeous lips in a cute grumbling pout before raising an eyebrow and adding: \"Just five more minutes, maybe?\"\n\nNick nodded and smiled in response, hugging her tighter and kissing her long and deep. Once their lips came unglued again, Tessa reluctantly disentangled herself from Nick's warm embrace and straightened up to sit on her knees, still straddling him while his cock remained snugly nestled in the soft plumpness of her luscious butt-cleavage. Propping herself up on her extended arms with her splayed palms resting on his chest, Tessa grinned playfully as she pushed her big jutting tits forward and let them jiggle away right in Nick's face, making his eyes spark with desire behind his glasses while his hotdogged dickmeat throbbed with an unmistakable jolt of arousal between her asscheeks.\n\nChuckling a bit before letting out a long-drawn-out sigh, Tessa finally dismounted Nick's lap and climbed out of bed, only to then make a big show of bending at the waist and sticking out her magnificent ass as she retrieved her clothes from the floor, making sure to always keep her back turned toward Nick so that he could feast his eyes on the fabulous roundness of her bubble-butt. Tessa loved feeling Nick's eyes ogling her big booty, she always had: it was almost a physical sensation, like an ineffable touch that wasn't actually there but still kind of was, in a vague and subtly exciting way. \n\nNeither of them spoke as they swiftly got dressed, ready to go downstairs and rejoin the pastor's party. There was no need for words. Standing at the door as they finished straightening each other up before leaving the bedroom, Tessa and Nick locked gazes one more time. Recognizing the intense, lovestruck look he was giving her, she giggled and said: \"What?\"\n\n\"Nothing,\" he replied, \"I'm just happy to be back. Here. With you.\"\n\nLetting out a heartfelt laugh, loving the way Nick said 'you' while staring deep into her eyes as if nothing and nobody else existed for him in the world, Tessa smiled brightly and nodded ever so slowly, murmuring: \"Yeah, I'm happy too.\""
    ],
    "authorname": "ZenZerker",
    "tags": [
        "anal",
        "anal creampie",
        "oral",
        "ass to mouth",
        "group sex",
        "sisters",
        "virginity"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/loopholes-ch-01"
}