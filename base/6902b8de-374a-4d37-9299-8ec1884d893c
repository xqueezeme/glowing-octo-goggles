{
    "title": "Amazing Grace Ch. 11-12",
    "pages": [
        "CHAPTER ELEVEN\n\nEthan\n\nEthan\n\nI followed her car up to her exit and then kept driving to work. If I had my choice, I would've followed her all the way to the parking lot and then watched until she was inside. My protective instincts were off the chart strong for her. She pushed all the right buttons. But she might consider me a stalker if I let it loose this early. And then she'd run for sure. She was a runner.\n\nI'd always hated runners. I could deal with brats, fighters, criers; hell, even whiners. But runners were just too damn much trouble. Hard to catch. Then once you catch them, you have to bring them out of hiding. Grace was in this group. She hid behind a pristine image, a pseudonym, and a dead husband. But she was something special when she let that guard down. And you know when she flashes you that glimpse of what's inside that you are the only one who has seen it. And that does something to a person. To me.\n\nBut so far all she'd given me was glimpses. There had been moments when I thought we were going to make a breakthrough. I saw it on her face. And then, poof! Vanished.\n\nI can go slow. If she needs to see self-control, I can show it to her. Fuck, we can't get much more vanilla. But it isn't working. She's still got one foot out the door, no closer to committing to any kind of relationship than the first day we met. What the fuck?\n\nI'd give her up if I thought I could. Or if she didn't respond to me. But that's the thing ... she submits without even realizing it. Naturally. She has no idea she's doing it. It's the most beautiful fucking thing I've ever seen. And that's why I can't let her go. She's more addictive than any fucking drug on the market. She's my personal designer drug.\n\nMy dick twitched as a brief mental image of her sucking me off in the car came into sharp focus. Then the feel of her sweet cunt milking my cock dry after our morning fuck. God, she's so perfect.\n\nI'd only been away from her for an hour and already I was craving her. It was like quitting smoking all over again.\n\nFuck, it's going to be a long night. Why the fuck are you going to John's uncle's place?\n\nI knew the answer. I needed to give Grace the chance to run. Until she stopped hiding, the only way to know if she was being true to herself was to give her the opportunity to get away. If this situation is wrong for her, she won't be able to keep herself from running.\n\nBut it's not wrong. It's so right, it scares the shit out of me.\n\n***\n\nI broke down and called Grace at work. I had to hear her voice. There was something about it that calmed me. I fully realize how idiotic that sounds.\n\nI considered blowing off the practice, but in the end, made myself go. If for no other reason than to talk to John about Grace and get his take on it. It couldn't hurt.\n\nThere were a total of six cars in front of John's uncle's house. I recognized three of the cars as belonging to John, Parker, and Holly. I tried not to cringe.\n\nI walked up to the house to greet Parker first. Parker was John's uncle. His last name anyway, and what we called him; I didn't even know his first name. That was just something you got used to in the lifestyle. Nicknames. For people who relied on building trust in their partner, we were an untrusting group. I knew a couple who'd been playing for six months before they knew each other's real names.\n\nParker wasn't in the lifestyle. He was just a loner who lived in this old house out in the country. His wife died some ten years back. As far as we could tell, he hadn't gotten back out in the dating world since. It was a waste because he was a good guy.\n\n\"Hey, Parker. How's it goin'?\"\n\n\"Ethan, hey. Things are good. John and everyone are out that way.\" He pointed toward the east. \"Better light this time of day.\"\n\n\"You joining us?\"\n\n\"Nah. My shoulder has been bothering me lately. I need to take a break.\"\n\n\"Everything else okay? Caught yourself a girl, yet?\"\n\n\"All the time. Catch and release.\"\n\nI nodded. He'd been saying the same thing for as long as I knew him, which was going on five years. I figured it was his way of politely telling me to fucking mind my own business. I kept asking, though.\n\nI walked through the side door and spotted the group. A moment later I heard John's whip crack. I knew it was his by the loudness of it. He and I were the only ones in our circle who invested serious money in our implements. We both had 12-foot, 12-plait kangaroo bullwhips that tapered to thin crackers on the end, producing a wicked sound. The other regulars sported mostly shorter stock whips or synthetics. They worked well but weren't nearly as impressive sounding.\n\nI tried not to notice Holly as I approached, but she was like an old bad habit. Every once in awhile your eyes are bound to shop even when it's not what you want anymore. She was most definitely not what I wanted. Unfortunately, she caught me looking at her. Fuck!\n\nI stopped and stood a comfortable ten feet from where she was standing and focused my full attention on John. He was explaining to Deke about timing, which was so critical to the more advanced cracks. I must've arrived at the end of his mini lesson because the other guys who'd been listening were starting to palm their whips and spread out. I created my own space and started my warm-up routine.\n\nAbout ten minutes later, I spotted John out of the corner of my eye making his way toward me. I coiled my whip in one hand and turned toward him.\n\n\"Hey, glad you could make it.\"\n\nI nodded.\n\n\"Where's our author?\"\n\n\"She's at home catching up on laundry.\"\n\n\"Yours?\"\n\n\"No. Hers.\"\n\nJohn nodded. \"You been seeing her a lot?\"\n\n\"Yeah. We spent the weekend together, actually.\"\n\n\"Oh, geez, that's great, Ethan.\"\n\nJohn was one of the few people who knew me well enough to know I didn't date casually. And that I hadn't seen anyone since Holly.\n\n\"How's it working out?\"\n\nI shrugged. \"Slow. She's, uh, complicated.\"\n\n\"Isn't everyone?\"\n\nI chuckled, \"Yeah, I guess. She's just harder for me to figure out.\"\n\n\"How come?\"\n\n\"She's been beaten down pretty good by her late husband. He cheated on her, but she didn't find out until after he died, so she never really got a chance to deal with it.\"\n\n\"That sucks.\"\n\n\"Yeah, I know.\"\n\n\"So, is she into kink? I mean, you know, not just writing about it.\"\n\n\"Yeah, I think so. I'm taking it slow, trying not to scare her and everything, but so far she's done real well. She's a natural, that's for sure.\"\n\nJohn nodded.\n\n\"I'm not getting through to her, though. Not yet, anyway. She acts like she's going to let go and then ... doesn't. I don't know.\"\n\n\"Sexually or mentally?\"\n\n\"Oh, she can come. And that's just getting better. But emotionally she's got one foot out the door, like she's just waiting for the signal to run. That's why I'm going real slow.\"\n\n\"Maybe that's the problem.\"\n\n\"What do you mean?\"\n\n\"Maybe you shouldn't take it slow. Has she given you any clear signs of being frightened of going further?\"\n\n\"No. Nervous.\"\n\n\"Of course. She doesn't know what to expect. Does she ask questions?\"\n\n\"All the time.\"\n\n\"There's your answer. She's curious. She wants more.\"\n\n\"But what if she can't handle it and she runs?\"\n\n\"Then I guess you better tie her down and do your job. Use a safeword and talk to her; you know the drill.\"\n\n\"I've just never had this particular issue before.\"\n\nJohn nodded. \"I looked up her books online and they call them 'sugar kink'.\"\n\n\"What does that mean?\"\n\n\"Bondage and discipline without the pain.\"\n\n\"Sugar Kink. That pretty much describes it.\"\n\nI caught a glimpse of Holly moving up on my flank and dropped the conversation.\n\n\"Hey, guys. Um, can I talk to you for a minute, Ethan?\"\n\nI felt my empty stomach turn. \"Yeah, sure.\" I looked over at John. He waved as he turned toward the group. \"What do you want, Holly?\"\n\n\"You don't have to sound so hostile, do you?\"\n\n\"Where's Harley?\"\n\n\"He's, uh, I don't know. Out, I think. That's not really working out.\"\n\nWhy am I not surprised? \"I came here to practice, not socialize. Is there something you want to say?\"\n\n\"Well, kind of, but not like this. Can we talk back at your place?\"\n\n\"Not tonight.\"\n\n\"Tomorrow night, then?\"\n\n\"What is there to talk about?\"\n\n\"I, there are some things I want to say. About what happened and the sort of place I was in when we broke up.\"\n\n\"Holly, save it. I don't want to rehash the past.\"\n\n\"No, me neither. I just need to say some things, okay? And then you can do whatever you want with me.\"\n\nI shifted my weight from one hip to the other. I was already growing tired of talking with her.\n\n\"Listen, go back to your practice. I'll call you tomorrow. Okay?\"\n\nI nodded. I didn't know what else to do at that point. I sure as hell had nothing to say to her and I didn't really want to hear what she had to say, either. The nicest thing I could do was just agree to a phone call.\n\nI managed to get through the rest of the evening without another Holly encounter. In truth, I spent most of my time pondering what John had said about pushing Grace. It was starting to make perfect sense to me. She had some confidence issues and I wasn't helping them by babying her. In fact, I was probably making them worse. She may not have experienced many things firsthand, but she did her research. She knows what happens. She also had to wonder why I wasn't trying any of it on her. And knowing the way her mind worked, she was blaming it on herself.\n\nI walked to the edge of the clearing, out of earshot from the rest of the group and called my friend Julian. He was opening the dungeon for a private event the following evening at 9pm. He planned to get there to ready the place at seven. We could have the dungeon to ourselves for 2 hours. Perfect.\n\nIt felt like a huge weight had been lifted off my shoulders. It was how I always felt when I had a plan.\n\nI headed back toward the house to say my farewell to Parker. Holly had him cornered in the kitchen, so I kept walking. From the looks of it, she was pouring on her charm pretty thick.\n\nAll I could focus on was getting home to call Grace. Being away from her was starting to kill me and I didn't want to think about why that was.\n\n***\n\nWork dragged on and on. The monotony was interrupted by a brief annoying phone call from Holly around lunchtime. She wanted to come to my house after work to talk. I explained to her that I had plans at seven and couldn't make it. She tried her usual bullshit to get me to change my mind but if ever I wasn't in the mood for her shit it was right then. I considered telling her off and getting it over with. I was so over her it wasn't even funny.\n\nBut the community we hung out in was pretty small. Unless one of us moved out of town, there was no way of avoiding running into each other. I thought of Grace. How Holly could hurt her with her sniping. I knew I had to try to keep the peace. So I bit my tongue and told Holly we'd have to make it another time if she couldn't spit out what she wanted to say on the phone. I thought she took it okay. It got her off the phone and out of my hair so I could go back to watching the clock.\n\nIt had to be the slowest fucking day ever.\n\nBy 4:20, I'd had enough. I couldn't stand it another minute. I shutdown my laptop and made a quick exit.\n\nAbout halfway home, I realized that my dick was fucking steel. Mental images of Grace's creamy white bare bottom being striped just about had me coming in my jeans like a teenager.\n\nGet a grip, E. You seriously can't lose your head tonight. If you want to keep seeing her...God, how I want her...Fuck.\n\nAnd there was the problem. I wanted Grace more than I'd ever wanted anyone or anything in my entire life. She was fucking perfection. Five and a half feet of the deadliest curves known to man with an angel's face that could turn the holiest saint to sin. And the way she was all fucked up in the head was adorable. Especially because she knew it. She was humble and nice and caring, and I wanted to fuck her until all those dirty words she writes come tumbling out of that sweet mouth of hers. I wanted her to scream my name as if I'm the only person on the planet. And then watch her blush when I kiss her in front of her parents because she knows I might go further; because she can't help but imagine it.\n\nI want her in my world every day for the rest of my life.\n\nI mentally calculated the number of days I'd known Grace. It was awfully soon to be making such statements. I was with Holly for a year and never came close. Somewhere in my bones I just knew about Grace. I couldn't explain it.\n\nI headed straight to the shower when I got into the house. I needed to jack off. Bad.\n\nI barely waited until the water was warm enough before stepping inside. My hand went to work on my steel rod, rubbing out a quick one in a matter of minutes.\n\nFuck, that felt good.\n\nI washed my hair and soaped my body. My dick was still bobbing around like a bottle in the ocean. Fuck!\n\nI had a choice. I could walk around with a hard dick or take care of it. Fuck.\n\nI rested my head on my left arm while my right hand started stroking. I let my mind wander where it wanted to go. Grace. Random images floated in the space between my ears. Grace's tight ass and how heavenly it was going to feel when I fucked it for the first time. Her head bobbing on my lap with a collar around her neck and a chain hanging between her pierced nipples. Marking her sweet white ass until all her pain and all her tears belonged to me. Until she belonged to me. Fuck yes.\n\nI gripped my cock as the last of my cum spewed over my hand. Damn I love that woman.\n\nThe water was getting cooler. I'd been in the shower a long time. It was worth it, though. My dick was starting to relax. God, I needed that.\n\nI turned off the water and opened the door to reach for my towel. My heart skipped a beat when I heard a voice. I froze and held my breath.\n\nHolly?\n\nI couldn't make out the words but that was definitely her voice. I listened for a second voice. Who is she talking to? I couldn't hear anyone. Is she on the phone?\n\nWhat the FUCK is she doing here?\n\nAfter I got over the initial shock of hearing someone in my house, and when I discovered it was Holly, I was pissed-off beyond belief. I jogged over to my chest of drawers and threw on a pair of shorts and a tee shirt. I didn't even bother with underwear.\n\nWhen I made my way across the living room toward the kitchen, Holly was munching on a piece of raw spaghetti and waiting for water to boil.\n\n\"What are you doing?\"\n\n\"I'm cooking you dinner. I wanted to talk to you before your date.\"\n\n\"How the fuck did you get in here?\"\n\n\"My key.\"\n\nShe held up her key and I held out my palm for her to hand it over. I remembered only then that I'd planned to ask for it after I was sure she had all her stuff. I forgot.\n\nAs I pulled my hand away I noticed another key sitting on the counter top.\n\n\"Who were you talking to earlier?\"\n\n\"Oh. Um, your friend. That writer.\"\n\nIt didn't take me long to put it together. Grace had come over and found Holly. Oh, fuck! Oh, no! Panic started to rise in me the likes I'd never felt before.\n\nI grabbed Holly's wrist and yanked her toward the door.\n\n\"Ouch! Stop Ethan, you're hurting me.\"\n\n\"Shut up, Holly. Where's your purse?\"\n\n\"I didn't bring one.\"\n\n\"Your car keys?\"\n\n\"In my pocket.\"\n\n\"Good.\" I yanked her through the front door and onto the stoop. \"I don't want you to come back here. Ever. Do you understand?\"\n\nShe had the nerve to look shocked. Her bottom lip began to quiver. \"I know I fucked up, Ethan, but I promise I won't do it again.\"\n\n\"I don't care. It's over. I'm with someone else. Now, leave.\"\n\nHolly stood her ground as if preparing to argue with me.\n\n\"I mean it, Holly. This isn't a game. Go. Now.\"\n\nShe turned and stomped toward her car. I didn't wait for her to drive off. I turned back toward the house. I needed to right this wrong. But in order to do that, I'd have to catch Grace first.\n\nI turned off the stove and checked to see if anything else was on, then I ran to the bedroom and pulled out my leather pants and a pair of shoes. I located the cuffs I'd used on Grace, plus a matching collar and ankle cuffs that I hadn't shown her yet that were part of the set. In the back of my closet was my dungeon satchel. I opened it and threw the cuffs and collar inside.\n\nI swiped Grace's key off the counter and dashed out the door to my car.\n\nCHAPTER TWELVE\n\nHome\n\nGrace\n\nWhen I finally pulled myself together enough to lift my head from my steering wheel, I had no idea where I was or how long I'd been sitting there. I knew I was somewhere in Ethan's neighborhood.\n\nI twisted and peered out the back window. I recognized the main street. I hadn't made it very far. His house was only one street over.\n\nWiping my tears for what I hoped was the last time because I was down to my last couple of tissues, I took a deep breath and shifted the car into drive.\n\nI was thankful that my mind was numb; floating in a haze. I wanted it to last for as long as possible. I couldn't stand to think about what had happened. What it was about me that just invited men to cheat.\n\nIt wasn't until I was pulling in my driveway that I saw him. I nearly rammed right into the back of his Volvo.\n\nI started to open the garage door but then changed my mind. I didn't want him in my house. So, I parked in the driveway and sat there.\n\nAfter a few seconds Ethan was standing at my door. He tried to open it but it was locked. He rested his forehead against the glass and sighed loud enough for me to hear him through the closed window.\n\n\"Grace, please don't do this. I didn't let her in my house, she still had a fucking key from when she lived there. I didn't even know she was there until I got out of the shower. You have to believe me. I would never do that to you.\"\n\nI'd suspected that she might've been tricking me on that part. But there was still the other stuff. Things she said, things he'd said. And the pierced nipples. Was that something he asked all his girlfriends to do? Is that even what I was to him...a girlfriend? I had no idea at that point.\n\nI shook my head and avoided looking at him.\n\n\"Talk to me, Grace. Yell at me, cuss me out...anything. Please.\"\n\nI didn't want to yell at him. I just wanted it to all go away. I wanted to go back to how I was before I met Ethan. Liar!\n\nI glanced across the passenger side of the car and beyond the Volvo. One of my neighbors was standing on his stoop and staring in our direction with great interest. Oh, shit! This probably looks real bad.\n\nI sat back and rolled the window down and then turned the car off.\n\n\"Thank you.\" Ethan crouched down on his haunches to get eye level with me. \"I'm sorry that happened, Grace.\"\n\nI bit back tears and nodded. \"She said some things...\" The emotions were welling up in me all over again. I didn't want him to see me cry. It made me feel so vulnerable.\n\n\"It's okay to cry. The thought of losing you makes me want to do the same thing.\"\n\nI busted out in tears and dropped my forehead to the steering wheel. It was the thought of our relationship ending that was devastating me.\n\nAfter a few moments, I lifted my head and picked up a half-used tissue to wipe my nose and eyes. I glanced to my left to check his expression. I was expecting to see that look of panic you usually see in men's eyes when you cry. Like the whole world is ending and they don't know who to call first. But Ethan was just calm. And patient. He looked sad, but not from pity. He was hurting, too.",
        "\"She told me that you were afraid to be alone. She quoted you almost word-for-word about how you wanted to spend time together and about building on a good thing, and all that.\"\n\nEthan nodded his head. \"I reuse my own lines. I stick with what works.\"\n\nI frowned at his reasoning and his blase attitude about it.\n\n\"I know this is hard to believe now, but I didn't really mean it the same way when I said it to her. I never felt the same way about her like I do you. This is different.\"\n\n\"She said you had a phrase you used to describe me. Sugar kink?\"\n\n\"She overheard a piece of a conversation I was having with John about your books. Being classified as 'sugar kink' on a particular site. Not you.\"\n\n\"Oh, yeah. I knew that term sounded familiar. She was with you last night.\"\n\n\"No. She was at Parker's house. John's uncle. She heard that we were getting together over there and she invited herself. I barely talked to her. She said she wanted to get together so she could get some things off her chest.\"\n\n\"She didn't look like she was dressed for talking.\"\n\nEthan shook his head. \"I didn't even notice. I threw her out of my house and rushed over here.\"\n\n\"Her nipples are pierced. Is that why you wanted me to pierce mine? To be like her?\"\n\n\"No, Grace. I've never even seen her piercings. Harley must've done that, or she did, I don't know. I don't keep track of her. I could care less about Holly.\"\n\n\"You never asked her to do that?\"\n\n\"No. I swear.\"\n\n\"Ethan, I don't know if this will work. I don't fit in your world.\"\n\n\"You're wrong, Grace.\"\n\nEthan glanced at his watch and heaved a sigh.\n\n\"I had these plans for us tonight. I wanted to take you to the dungeon and play. I know this sounds like really bad timing, but I think we should go anyway.\"\n\n\"Why?\"\n\n\"Because I think it could clear up a lot of things for both of us. And I think, well, I hope that it'll bring us closer.\"\n\nI looked over into his eyes for a few long, silent moments. He was being his honest and sincere self. Nothing had changed. He hadn't cheated on me as I had thought, even though I was having a hard time shaking the feeling that he had. And he appeared to want to make things work between us.\n\nI so wanted that.\n\nI nodded, \"Okay.\"\n\n***\n\nJulian met us at the door and let us in. On the way there, Ethan asked me for my safeword and then started coaching me on how to rate my own ability to continue. He made it a point to tell me that he wasn't going to go easy on me. I wasn't sure how I felt about it. Part of me was relieved that he wasn't going to pretend. But the bigger part of me was just plain scared out of my wits.\n\nAnd maybe there was a tiny bit of excitement in there.\n\nEthan spent a few minutes talking with Julian out of my hearing range. He never took his eyes off me, though, and I noticed that he was positioned between me and the door. It struck me as somewhat funny since I had nowhere to run. The dungeon wasn't exactly located in the best part of town and I'd ridden there with Ethan, so there was no escape by car.\n\nI found it amusing that my imagination started conjuring up all sorts of short movies where I'm running and he catches me. He then throws me down to punish me and have his way with me. In the end, I surrender to his will and he makes me promise never to run again. A delicious chill traveled down my body as I replayed different versions of the same theme in my mind.\n\nBy the time Ethan was walking toward me, my feet were itching to take off toward the door and I could hardly wipe the silly smirk off my face.\n\n\"That's a devious little grin. What are you thinking about?\"\n\nI shrugged and giggled nervously. \"I was wondering what you'd do if I made a dash for the door.\"\n\n\"Hmmm...What do you think I'd do?\"\n\nI shrugged.\n\n\"Okay, let me rephrase that...What do you imagine me doing?\"\n\nI could feel the heat rising up my neck and onto my cheeks. I just couldn't say it out loud to him. I don't know why.\n\n\"Go ahead. Run.\"\n\nAdrenaline coursed through my veins in an instant. It was just what my feet wanted to hear.\n\nI spun away from the door to throw him off. It bought me a couple yards of a head start but I was going in the wrong direction. I ran around the furniture grouping, placing the objects between us for a momentary standoff, each of us huffing and crouched over.\n\nMy heart was pounding hard in my chest. My mind had somehow convinced my body that I was in danger and needed to get away. It was completely exhilarating.\n\nI juked right and then changed direction to the left, but he was onto my fake. His arms wrapped around me just as I hooked around the end of the sofa and was about to make my way toward the door.\n\n\"Gotcha.\"\n\nI struggled in Ethan's arms, but he wrangled me to the sofa and managed to climb on top of me so that his knees and calves pinned my arms and his weight held my hips in place. I made one more attempt to free myself but could feel that there was no chance of escaping that position. He had me. I lay panting in defeat beneath him.\n\nEthan sneered down at me. \"That's all you got?\"\n\nI struggled again with renewed energy. He had to use his hands to keep me restrained.\n\n\"Easy, there. You'll hurt yourself if you're not careful. And it won't buy you any sympathy from me. I'll still punish you for running.\"\n\nEthan released his grip on my wrists but my arms were firmly pinned between his legs and the sofa cushions. He ran his hands through his hair, smoothing back the strands that were plastered to his sweaty face.\n\n\"You're a pain in the ass, you know that? Always plotting your escape. Never really giving us a chance.\"\n\nI froze as he was talking. Is he role-playing or is this real?\n\n\"I'll take the blame for some of it. I've been too soft on you. But that changes right now.\"\n\nEthan looked over my head and I heard shuffling on the stage. It was obviously Julian moving something around.\n\n\"Thanks. That'll work fine there. Hey, can you bring me my bag?\"\n\n\"Yeah, sure.\"\n\n\"Also, could you scare me up some shackles? Or actually, I just need a short chain I can clip to ankle cuffs. I have a runner, here.\"\n\n\"Yeah, no problem. I know just the thing.\"\n\nI shot a scowl at Ethan and he laughed at me, then opened his bag to pull out my wrist cuffs. It was embarrassingly easy for him to attach the cuffs to my wrists.\n\nJulian returned with a heavy chain and set it on the arm of the sofa. \"You want help with the ankles?\"\n\n\"Sure.\"\n\nIt didn't seem fair for him to get help, but then again this wasn't exactly a game. There weren't any rules that I was aware of. Of course Ethan would use any and all means available to him. I know I was planning to do the same when I got the chance.\n\nEthan buckled a collar around my neck while Julian worked on my ankles. My struggling was less than impressive with Julian there. I didn't want to take it out on him. He was an unwitting accomplice.\n\nMy right arm was yanked from beneath Ethan's leg as he shifted some of his weight off of it. I flailed and struggled to get it free but he had a vice-like grip on one of the hoops in the cuff, making it impossible for me to yank it from his hand. Eventually he clipped the hoop to my collar. Then he did the same on the other side.\n\nMy fingertips searched for the buckle to the collar to release it, but I couldn't quite manage it. Ethan just sat there and watched in amusement.\n\n\"You're only prolonging the inevitable with your struggling. Why don't you just give in like a good girl and get it over with?\"\n\nI gritted my teeth. \"Never.\"\n\n\"What are you fighting?\"\n\nMy arms stilled as I searched for the answer. I opened my mouth to respond and then shut it again.\n\n\"That's what I thought. You have no idea. I'm not the enemy, Grace. The sooner you learn that, the better.\"\n\nEthan stood up and pulled me up by my elbow. I started to take a step and teetered as the chain pulled taut with my foot held in place. He gripped me tight to keep me from falling over.\n\n\"You're not going anywhere without my help.\"\n\nEthan bent at the waist and hoisted me over his shoulder in one motion. Then he carried me a few yards to the place where I'd heard Julian scuffling around earlier. When he set me down I recognized the apparatus immediately. It was a St. Andrew's Cross.\n\nI blanched and then teetered but Ethan was there to keep me upright.\n\n\"Shhhhh...You knew this was coming. You deserve this, now just take it.\"\n\nI shook my head, almost involuntarily.\n\nEthan's lips were at my ear. \"You have a safeword and you know what to do. I won't go further than you can handle. You can do this, Grace.\"\n\nIt was his words of encouragement that did it. They gave me the boost of strength I needed to keep myself from panicking.\n\nEthan unclipped one wrist and attached it to a loop on the cross. Then the other wrist. He fastened the chain to something near the floor, leaving my legs together. I was thankful that I was facing the room and able to lean forward against the cross. And that I was still fully clothed.\n\nEthan caressed my cheek for a moment before going to fetch his bag. I was coming to cherish his small reassuring kindnesses. I realized that he doled them out more freely than I had noticed before. He was actually very attentive and affectionate.  \n\nWhat an odd thought to have about the person who is about to beat you.\n\nEthan's hands wrapped around my waist and unfastened my pants. Oh, shit, so much for being clothed. He pulled my pants down my thighs with my underwear in tow. The cross section of the cross provided a shield for the front of me, which was a small favor. My backside was fully exposed though, but only to Ethan because there was a wall right behind him.\n\nI felt a change within me. This was really going to happen. Somewhere deep inside I knew I could stop it if I really wanted to, but that thought was hidden somewhere. I preferred to believe that I had no control over what was happening. That I carried none of the responsibility. He was in control.\n\nIt was comforting in an odd sort of way to believe that.\n\nEthan's hand moved over my bare bottom. He caressed one side and then the other. He lifted the back of my shirt and tucked it up into the elastic band of my brassier, exposing more of my back. I shivered and pressed myself firmly against the cross. The steadiness of that wicked device was my best ally.\n\n\"I still owe you for all the whining you did our first night. Remember?\"\n\nI nodded my head and then dropped my chin to my chest. I remembered not caring at the time what the consequences were. Stupid, stupid, stupid.\n\n\"The thing I want you to remember Grace, is that I do this because I care about us. If I didn't care, your actions would mean nothing to me.\"\n\nThe defensive, snarky voice in my head retorted with: Sure that's the reason. It can't be because you like to hurt people. Noooooo...\n\n\"I admit I like it, too, but do you know why?\"\n\nI was alarmed that he seemed to read my mind. I thought for a second that maybe I'd said the words out loud. I'm losing my mind for sure. I shook my head to answer his question. Even if I had some clue, which I didn't, I wasn't going to risk my own hide saying it aloud.\n\n\"I like the intimacy of it. The level of trust you're putting in me right now acts like a drug to my system. I crave it. And every noise that you make and tear that you shed will become mine. I want it all, Grace. I want you. All of you. Your tears, your pain, your fears, your orgasms, and all your self-doubts. Let me take them from you so you don't have to carry that burden anymore.\"\n\nOut of nowhere it seemed, tears began flowing down my cheeks. I wanted to let it all go. I had no idea if I possessed the strength or courage to do it. Or if by some miracle, this punishment would somehow set me free. I doubted it.\n\nWhile what he was saying sounded sweet, I'd stopped believing in fairy tales after my disastrous marriage. And although this tale was clearly not the traditional storyline, it still sounded a little too perfect to be possible.\n\nMs Snarky retorted: Let's not wax sentimental over this. If you're going to beat my ass, then just do it. No need to make elaborate excuses.\n\nNonetheless, the tears still flowed down my cheeks. Part of me wanted to believe him. That if I'd just accept this exchange, give it all to him, things would change for me.\n\nEthan moved away from me briefly. I heard him rifling around in his bag. And then silence. I hated the silence the most.\n\nI felt his hot breath at my neck next. He kissed my cheek and licked the stream of tears there. I turned my head away from him. Those are my tears, not yours. It was hard to believe that I was feeling possessive over some lousy tears. I think I mostly resented his kindness at that moment. It was probably an incredibly stupid thing to do. I mean the last thing you want to do is provoke the Dom who is about to beat you.\n\nEthan sighed and moved away. I waited for several long, so long, minutes. My heart pounded a jungle rhythm in my chest and my entire body started to tremble.\n\nThe first swat was jarring. It wasn't his hand. It was some sort of hard, flat object. I was relieved it wasn't a whip. I didn't think I could handle a whip.\n\nHe came down again. And again. And again. Over and over in a steady rhythm. Five times, ten times, fifteen times...I'd tense at the number just before a milestone, hoping he would be finished...twenty...twenty-five...When is he going to stop?...thirty...pause...thirty-five ... Those five swats hurt the worse. He'd worked me into a numb state, but the pause seemed to erase it and then when he restarted, the pain level was ratcheted up a notch.\n\nMy toes curled and I screeched through gritted teeth. I tried twisting away and yanking my wrists free. I was crying and angry.\n\nEthan stilled my torso with hardly more than a calm caress. Then he continued...forty...forty-five...My body went limp and I let my wrists hold my weight. I gave up trying to fight it. Sobs wracked my frame until I thought I might hurl right there. Fifty...fifty-one...fifty-two. I wasn't even flinching anymore. I didn't care if he continued or not.\n\nEthan walked around the cross to stand in front of me. He lifted my chin and wiped my cheeks and then my nose and mouth. I was a complete mess of tears and snot.\n\nThen he set my head on his shoulder and caressed my hair. More tears came. Round after round of sobbing. More snot running down my face and onto his shirt but he didn't even balk. He just kept wiping them up and comforting me.\n\nIt finally stopped. I was drained. Empty. Even my ultimate defense mechanism, Ms Snarky was quiet.\n\nHe gently released my head and walked around behind me. He unfastened my wrists and unclipped the chain at my feet, then turned me around. I thought we were finished until he refastened my wrists on the cross. Then he moved to the side and I was horrified.\n\nHanging on the wall directly in front of me was a full-length mirror. My jaw dropped as I stared at the reflection. It didn't look anything like me.\n\nEthan lifted one of my legs out of my clothes and then began to widen my stance until he could attach my ankles to the feet of the cross. My clothes were still bunched around one of my ankles. I watched with an eerily distant amusement, as if the whole thing were happening to someone else entirely.\n\nI became engrossed in the woman in the reflection. She had a sweetness about her. A kind face that made you feel at ease around her right away. Her cheeks and nose were pink from crying and the rest of her skin looked so pale next to his. Pure, even. The contrast of his ink against her creamy skin was so delicious. Forbidden.\n\nHis fingers went to work on her blouse until it was unbuttoned completely. He smoothed the fabric to the sides and reached around her back to unfasten the bra. Then he pushed the bra up over her breasts to expose them. So naughty.\n\nHe roughly palmed her breasts and she arched her back in appreciation. Her nipples hardened to these gorgeous little points on her chest. He pinched and rolled them between his fingers for a moment and then stood back to admire how they responded.\n\nThe look on his face was pure admiration. It was so obvious that he loved her.\n\nHis hand trailed down her stomach until his fingertips reached her slit. He caressed her there for several strokes. She cooed and tilted her pelvis to give him better access. He just kept stroking her gently. Then she tilted her head up to him.\n\nEthan's mouth was on mine, his tongue boldly pushing past my lips. His finger slid inside my slit and then all the way inside me to his knuckle. I was soaking wet. I have no idea when or how that happened.\n\nHe felt so good. So right. He added a second finger and slowly fucked me as he assaulted my mouth.\n\nThen his fingers slid out of me and up my slit. He rested one finger on each side of my clitoral hood and began this lovely massaging motion, pinching and kneading and twisting my flesh between his digits. I got lost in the sensation. And then it started.\n\nI groaned in his mouth at my quickening. Ethan pulled his mouth from mine and turned his head so that we were cheek to cheek facing the mirror.\n\n\"Come for me, Grace.\"\n\nIt all came crashing down on me at once. His command, my image in the mirror, all the amazing things he could do to me and with so little effort. And I realized that I was witnessing love right in front of me. Only it wasn't in front of me. It was me. And Ethan.\n\nI trembled and fell apart. My climax gripped and then released me into his keeping.\n\n***\n\nMy clothes were back on me and all the cuffs were gone. I vaguely recalled Ethan carrying me to the chair and settling me onto his lap. It felt more like a dream. I was completely wiped out.\n\n\"Did I pass out?\"\n\nEthan smiled down at me. \"Not completely.\"\n\n\"Is it ... Should we get going?\"\n\n\"We still have some time.\" His grip tightened around me.\n\n\"I'm sorry, Ethan.\"\n\n\"About what, baby?\"\n\n\"For trying to run. I don't ... want to.\"\n\nEthan scraped his fingernails along my butt cheek. Even through my pants I felt the soreness. \"Ooooh. Ouch.\"\n\n\"Next time you do it for real it will be double. Understand?\"\n\nI nodded and buried my face in his neck. \"You meant what you said about me being a pain in the ass, didn't you?\"\n\n\"Yes. You are a pain in the ass. But you're my pain in the ass, now.\"\n\nI nodded. Something had clearly changed between us. Maybe it was just a mutual agreement of the way things were going to be with us, or an understanding of our feelings for one another. I'm not sure.\n\nIt felt like it had taken me ages to come to this realization, even though we'd only known each other for a couple of weeks. We'd covered so much ground in that time. For me, though, this went back much further than that.\n\nI'd been living in denial for most of my life. Not just about my own tendencies and who I was, but also about what I needed in order to feel whole. Knowing and feeling what I did with Ethan, I wondered if I'd ever even loved Robert, or if I was just in love with what that relationship represented. Security. Lasting stability.\n\nIronically, our relationship was neither of those things. I knew it before I even married him, but I went along with it because it was what I was supposed to strive for. It looked good from the outside and it made my parents and everyone else happy. But not me.\n\nRobert was perfectly content to live the lie as long as he got what he needed on the side. He might've even loved that girl. I didn't care anymore. I was angry when I found out because I felt like something was being taken away from me. It was an illusion. I never had it to begin with. How pathetic.\n\nI only felt the loss of time now and nothing else.",
        "I sighed and snuggled closer to Ethan. My inner war was silenced for the moment. My mind drifted back to the present and what we'd just shared.\n\n\"Is that what you had planned for tonight?\"\n\nEthan chuckled. \"Not exactly. I like that you picked our first scene, though.\"\n\n\"That was fun.\"\n\n\"Fun?\"\n\n\"Well, yeah. Sort of. What would you have done if I'd gotten away?\"\n\n\"That'll never happen. I won't let it.\"\n\n\"Mmmm ... I like the sound of that.\"\n\n\"You can try it, but remember the consequences when I catch you.\"\n\n\"You won't double it if we're just playing, will you?\"\n\n\"I guess you'll just have to take your chances. I might pick a whole different punishment.\"\n\n\"Like what?\"\n\nEthan shrugged and chuckled.\n\n\"I don't know if I like this evil side of you.\"\n\n\"Yes, you do.\"\n\nHe was right, of course. It was maybe the thing I liked best about him.\n\n\"Is there anything else we need to discuss about what happened today?\"\n\nI took a deep breath and thought for a moment. There was something that Holly had said that still bothered me. \"Are you afraid of being alone?\"\n\nEthan's brow furrowed as he considered my question. \"I was never afraid of being alone. It was just harder to stay clean without distractions. I'd just quit doing drugs when I met Holly. She smokes pot, but nothing else, and that was okay because that really wasn't my drug of choice. She understood what I was going through. And she was a gamer. I was just discovering how I could fill the hours with online war games and she was an RPG'er, so we just sort of fit.\n\n\"Anyway, once I quit smoking and drinking, the only thing we had left in common was gaming and we really didn't do that together as much as we just did it at the same time. For hours.\n\n\"I know this is going to sound crazy, but we hardly ever had sex.\"\n\nI twisted my neck to look up at Ethan's face and frown. It sounded ludicrous.\n\nEthan shrugged. \"I can't explain it.\"\n\n\"You didn't play together?\"\n\n\"We played all the time. Holly is really into role-playing, but our scenes hardly ever involved any kind of sex.\"\n\n\"Give me an example.\"\n\n\"Okay, so, Holly is a serious exhibitionist. Not hard to figure out. And masochistic. She liked to start a scene with her stripping on stage and grinding on something and then I enter the scene in a jealous fit of rage, usually tie her down and then whip her.\"\n\n\"And that was ... fun?\"\n\nEthan chuckled. \"You don't have to like it. That was her kink.\"\n\n\"And yours, apparently.\"\n\n\"I got the practice I wanted and the release I craved. I'm real good with all sorts of torture devices now.\"\n\n\"Oh, great. I thought you told me that Holly wanted to get serious.\"\n\n\"She wanted to get married or be collared. She needs to be settled in one place. Her father was in the military and they moved around a lot. And now, she goes from place to place. She wants to just stay put with someone. She's really simple like that. She has no romantic illusions.\"\n\n\"Like I've always had.\"\n\n\"Yeah.\"\n\n\"And you're like her?\"\n\n\"Not in the least. Although I don't know if my romantic notions are illusions or real. Yet.\"\n\nEthan kissed the top of my head and I felt warm all over.\n\n\"You ready to go home, baby?\"\n\nI made a pouty face. \"Can I stay with you tonight?\"\n\n\"Of course. That's what I meant by home.\" "
    ],
    "authorname": "D_Lynn",
    "tags": [
        "dungeon",
        "role play",
        "bondage",
        "paddling",
        "discipline",
        "st. andrews cross",
        "party"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/amazing-grace-ch-11-12"
}