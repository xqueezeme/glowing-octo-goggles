{
    "title": "The Dirty Sheets",
    "pages": [
        "All of my writing is fiction, and the characters are products of my imagination. All characters that need to be are 18 years of age or older. Comments are always very welcome and carefully reviewed.\n\nDirty Sheets doesn't sound very romantic, but they, along with Lisa's words, turn out to be a key to opening Eric's mind and allowing all his doubts to escape\n\n<center>* * * * *</center>\n\nThe white BMW X5 slowed, stopped to wait for the traffic to clear, then quickly turned left onto the short causeway that led to Whitworth Island. Slowing again, it turned right into the gravel parking area and pulled into the first available spot closest to the dune. It stopped, and the engine shut off.\n\nInside, Wilma carefully picked up the rather large canvas bag she had brought, checked the surprisingly modest bikini she had worn, which didn't matter that much anyway, slipped off the very gauzy and nearly transparent cover-up she had worn while driving, and stepped out of the car. She locked the doors and put the car keys, as she still called them even though they were annoyingly all electronic, carefully into the little pocket with the zipper that was on the inside of the bag. It annoyed her to have to keep reaching into the bag and undoing the zipper, so she left it unzipped. She crunched through the gravel till she reached the steps that carried her up over the dune. Her flip-flop caught on the top step, throwing her forward, and her frantic grab of the handrail was the only thing that saved her from a rather embarrassing tumble down the far side. Luckily, the flying bag had not spewed out any of its contents and she was able to go down the steps on that far side, gather up the bag and hope her plight had been a private one. \n\n' \n\nBut the incident pissed her off no end since the people who owned the island should realize that people would be wearing flip-flops and climbing steps in them wasn't easy. It was just simple common sense -- she hated the lack of common sense in anyone, and particularly in a business. She made a mental note to contact them during the next week about doing something to fix that if only cutting a notch through the dune, which she suspected might be illegal. Just something so you didn't have to use the steps. Ramps, maybe, anything! She hated to have her day ruined, or nearly ruined at least, by plain stupidity.\n\nAt the small kiosk, still slightly shaken, she paused, took a small plastic card from the unzipped pocket, and angrily jammed it into the card reader. In an instant, it buzzed, a green light turned on, and she could hear the gate unlatch. She jerked the card out of the reader and stuck it back in the little pocket.\n\nShe pushed the gate open, hoping what had happened wasn't a bad omen for her Saturday, stepped inside, and bent to take off her offending flip-flops, as she loved walking barefoot through the soft sand, even though it was a little hot already today. She would have to step lively to keep from burning her feet. She passed the concession stand and forced a smile at the girl behind the counter, knowing she'd almost certainly be back to see her a little later. Ahead of her stretched a lot of soft sand, and, further down toward the ocean, the now bare and hard sand of the low-tide exposed beach. And, there were people, of course. Not as many people as were there some Saturdays which was fine with her, although sometimes she actually enjoyed the larger crowd. A short walk and she selected a spot, took her towel from the bag and spread it carefully on the sand, and sat down. She sighed, and reached around behind her, untying the straps holding the bikini top in place. She let the two shoulder straps slide down her arms, then took the top and folded it neatly before stowing it carefully in the bag.\n\nWilma was on WI1, as it was called, the first section of Whitworth Island and beach. It was generally referred to as \"clothing optional,\" but that was a little bit of a euphemism as what it actually meant was women were allowed to be topless there. Actually, there was really no \"clothing optional\" area as WI2 was totally nude as was, of course, WI3, where she had never been. But she was content right here for a while, letting the sun beat down on her body, and particularly her breasts. \n\nSince it was a sweltering day, she didn't want her shoulder-length, fairly dark brunette hair touching her shoulders, so she gathered it together high up on the back of her head, took the elastic band from the bag, and snugged it around the hair making a cute little ponytail. Next came the sunscreen, which she applied fairly liberally to every bit of skin that showed, particularly to her breasts which she knew were nice but certainly not spectacular. However they were, they didn't get quite as much time out in the light as most of the rest of her. Despite her trying to be as careful as possible, as she brushed over her nipples, they immediately sprang to life, as they often did. Here, that was okay, but other times she had to be a little more careful as they could almost have a mind of their own. When she was at work, that could be a problem for sure. She also hated smelling like coconut, so her sunscreen was odorless and didn't mask the aroma of the cologne she loved to wear. And, sitting there glistening like she knew she was doing only made her more watchable, and she did like being watched. Later she was sure she'd move to WI2, where she'd have to use a little more sunscreen, but she was satisfied just to relax here now. She might get a snack and something to drink before she'd move. So, best to stay put for a while. She tightened the band on the ponytail one more time.\n\nShe heard the voice before she saw the speaker and was annoyed even before she turned her head.\n\n\"Hey, babe. You here by yourself?\"\n\nWhen she looked, there were two of them, smug smiles on both faces, each looking too predatorial for her Saturday morning.\n\nShe looked from one to the other.\n\n\"Yep, and going to stay that way too.\" The cold look in her eyes left no doubt as to the seriousness of her response.\n\n\"Bitch,\" one snapped at her as they walked away.\n\nShe'd been called a bitch before, but it was usually in her work environment. She had to smile when they were out of sight. She had wanted to say \"assholes\" in her response but had managed to hold back.\n\nSighing, she lay back on the towel, her arms straight out from her sides, her legs spread just enough to be a little alluring without actually showing anything just yet. The warmth of the sun, the feel of the gentle sea-breeze, and the faint murmur of voices were very relaxing, something she needed on her Saturdays, particularly after her brief \"incident.\" \n\nShe lay that way for maybe 10 minutes before she decided to sit up and do a little people watching herself. It was always interesting to see the topless women and, of course, compare a little but mostly just fantasize about who and what they were and why they were here. She'd always enjoyed trying to figure out and understand people and had found, over time, that she was pretty good at it. Here, all she had was what she could see, but she still enjoyed the speculating. She did the same at airports, just here, there were a lot fewer clothes, and it was a lot more fun. \n\nStill amused by her game, she tightened the band on the ponytail one more time when she became aware of a male figure that seemed to be heading straight for her. Her body tensed, and \"not again\" echoed in her brain. She didn't need two incidents on the same day, and \"asshole\" was still resting on the tip of her tongue. She was here to be seen and not to be bothered, damn it. But continue on, he had, and now he was stopped right in front of her.\n\n\"Hi,\" he said, a huge smile on his face. A smile that not only took in his whole face but that came at her from his eyes as well.\n\nDespite what her brain was telling her and that word that was on the tip of her tongue, she actually couldn't help being drawn to the smile as it was surprisingly warm and just friendly looking. \n\n\"Hi,\" she replied, a lot brighter than she had intended to.\n\n\"I noticed you over here,\" he began and kind of half-chuckled since obviously she was here to be noticed. \n\nShe smiled in acknowledgment. This was much better than the \"Hey babe\" she had gotten before. Still wary, but now curious as well.\n\nHe continued, \"and you're by yourself, and I waited a while to see if anyone was going to join you.\" Then he put his hands up in that \"I didn't do it\" gesture. \"I'm here by myself too and . . . ,\" he stammered slightly, \"I just, you know, thought it might be fun to sit and maybe talk some, and stuff.\" He raised his eyebrows in a question.\n\nAnd stuff? What was \"and stuff\"? She felt a little more comfortable, but her antennae were still up and operating. Of course, she couldn't help but be curious as to why a guy, by himself, was at a topless beach, but the answer seemed fairly obvious. If they were on WI2, he would have had no bathing suit, and his reasons might have been a little more obvious. She left him wondering for a few moments as she checked him out as best she could.\n\nHe sure wasn't a dazzling, handsome kind of a dude, just a, well, pleasant face. Not at all like the few guys she had dated in college and after, all of whom she had to admit had been pretty good-looking guys. Mostly she had been and still was way too busy to be bothered with guys and dating. But this one did have that wonderful smile that was hard not to like. Plus, that slight stammer told her a lot. If she wanted to be watched, here was someone who could watch from up close, and, surprisingly, she thought, he had been and still was looking her straight in the eye and hadn't dropped his gaze to her tits once. That was puzzling, and she needed to change that if he was going to hang around.\n\nIt was her turn to smile. \"Sure, why not,\" she said, twisting a little so that her breasts were thrust forward fairly prominently. No luck as his eyes still held hers. She had initially been very wary as he approached, but, already, that had changed and, without her even thinking about it, she was becoming the aggressive one.\n\n\"Great!\" he said with a bit too much enthusiasm. \"Let me go grab my towel.\" \n\nShe watched him retrace his steps. He was interesting in that there was nothing hugely interesting about him. Not that there was anything at all wrong with him. He was maybe six feet tall, not athletic or particularly muscular, just trim and, well, trim. Certainly not fat or thin, just very ordinary. \n\nQuickly, he was heading back with his towel and that huge grin. He spread the towel carefully, sat down, and, of course annoyingly, looked her straight in the eye. But she would not let that pass and, surprising herself, decided to tease a little. She was beginning to wonder about him. It was almost like he had been, well, totally honest with her thus far.\n\n\"So,\" she said, peering at him with one eye partly closed, \"you came over here to ask if you could join me but didn't bring your towel along.\"\n\n\"Yeah, do you think I was a little pessimistic, then?\" The smile changed to an equally enticing grin.\n\n\"Maybe, and there's one other thing.\" They were eye to eye. \"You haven't once looked at my tits. Take a look.\" She thrust her bare chest forward and swallowed her smirk at his reddening cheeks.\n\n\"Oh, I've looked,\" he replied quickly, eyes dropping to them, his cheeks reddening even more. \"What guy wouldn't?\" He unconsciously licked his lips. \"They're as nice as any I've seen for a long time, and that doesn't in any way serve them the justice they should have.\" He glanced up with that big smile. \"I hope you don't get upset with me, but your nipples are unbelievable.\"\n\nSo, he was at least a bit normal after all, even if she knew her breasts didn't quite match with what he'd said.\n\nNow, she was wishing they were on WI2 so she could see if his body was reacting to what he was seeing and saying. She was sure she'd like that. \n\n\"Thank you,\" she said quietly, knowing that she could easily reach up and pinch those nipples, and he would really see something, but that wasn't quite proper at this time. She reached her hand toward him. \"I'm, um, Wilma,\" she said after a second's hesitation.\n\n\"Eric,\" he replied, offering his hand. As he did so, she caught his \"ring check\" on her other hand. He didn't seem surprised to see the telling finger bare.\n\nHer interest increased. There was something about his face that, even when he wasn't smiling ... he was.\n\n\"So,\" he began, a little hesitantly. \"I don't think I've seen you here before.\" What he was really saying was, \"If I'd ever seen you, I surely wouldn't have forgotten you.\" As he watched her, he nibbled gently on his thumbnail. Not biting it, just kind of snapping it over his front teeth.\n\n\"I don't get here too often, a couple of times a month, I guess. You a regular?\"\n\n\"About the same as you, I guess.\"\n\nShe was just going to let him have his head to see where he was going to go.\n\n\"Are you from around here?\"\n\n\"I am now,\" she replied. \"Moved here for work a couple of years ago. Where are you from?\"\n\n\"Born in Ohio, lived there all my life until I came down here for work. Where are you from originally?\"\n\nHer turn for a bit of fun. \"I was actually born in that state up north,\" she laughed, knowing how Ohioans felt about Michigan, not even wanting to say the name. \n\n\"Poor thing,\" he grinned in return. \"Glad you finally saw the light.\"\n\n\"I assume then that you're a hard-core Buckeye?\"\n\n\"Born and raised,\" he said, and she thought he might actually have thrust his chest forward a little as he spoke. \"Are you a Wolverine then?\"\n\n\"Not exactly. I went to school out west, in California.\"\n\n\"Ah, which one?\"\n\n\"Well,\" she giggled. \"Ohio's state bird is the Cardinal, and that was my school, only not quite.\"\n\n\"Whoa, Stanford then, huh?\" He knew that it was the Stanford Cardinal, but it was the color and not the bird.\n\n\"Yep.\"\n\n\"Pretty expensive to live out there, isn't it?\"\n\n\"Holy shit!\" she exclaimed, then quickly got a sheepish look on her face. \"Sorry, but it's one of my pet things. It's about six or seven times more expensive to live out there. Terrible. I was glad when I graduated and could move somewhere else, although ...\" Her voice trailed off.\n\nHe was looking at her in anticipation, wondering why she had stopped where she did. She snugged the band on her ponytail, giving her hair a little flip.\n\n\"I moved from there to Massachusetts, which was a lot cheaper but still two and a half times what it is here. A few years in Pennsylvania which were more normal, I guess, then here.\"\n\n\"Midwest to West Coast to East Coast and then the Southeast. You've been around.\"\n\n\"Lots of frequent flyer miles,\" she laughed. \"So, what about you?\"\n\n\"Boring,\" he said solemnly. \"Started at a little OAC school outside of Columbus, Otterbein, and then finished at Ohio State. Actually was out of the country once, though, to Canada. My parents knew someone in Medicine Hat, Alberta. We drove there from Ohio. About 2000 miles.\"\n\nShe was enjoying watching him as his face was getting more and more animated as he told her about his trip.\n\n\"I remember part of it like it was yesterday. We went to Havre, Montana, and turned north, heading for the border crossing at Wild Horse. It was Big Sky country for sure. No trees, and you could see forever. Have you ever been there?\" He interrupted himself just in case.\n\n\"No, no, never. Keep going.\" Her smile was getting broader as she joined in his evident excitement.\n\n\"Lots of pronghorn antelope in the fields and a sign that said, \"No residences or services, next 47 miles.\" When we got to the Canadian border, there was just a house with a garage beside it, and you drove into the garage, and the door closed behind you. A Canadian guy came out, asked questions, checked everything, and then the door at the other end went up, and we drove off into Canada.\" He stopped as if afraid he was boring her.\n\n\"What was the town you were heading for? Don't think I've ever heard of it.\"\n\nIt was evidently not boring her if she was asking questions.\n\n\"Medicine Hat. A really neat place. I think the population when we were there was about 60,000 or so.\"\n\n\"Can hardly imagine that \"no services\" thing. I think I'd have been nervous.\"\n\n\"Not only that,\" he continued, \"but I think we only passed about three or four cars in that 47 miles, so it was fairly lonely. Still beautiful, though.\"\n\n\"I'd have been nervous for sure. Nothing in my life to compare to that,\" she added.\n\nThe big smile left his face, and she could tell he was thinking, pondering something, nibbling that thumbnail. She wondered if she should be nervous now but realized there was no reason to feel that way. In fact, she was actually glad he'd come over to talk with her.\n\n\"You said your name was Wilma, right?\" He was obviously off on another tack now.\n\nShe cleared her throat. \"I did,\" she answered, curious where he was taking this.\n\n\"It's nothing big, but you just don't hear that name much these days.\"\n\n\"No, you don't, for sure.\" A pause. \"I was named after my great-grandmother. She was the first Wilma.\"\n\n\"Oh, that's neat,\" he said, a slightly pensive look on his face.\n\n\"She, of course, was my mom's grandma, and Mom loved her to pieces. They spent so much time together when Mom was little. She took care of her all the time, so Mom wanted to remember her. I have no regrets about being named after her. It's an honor and a responsibility.\" She wondered if she was going on too much, but his eyes told her he was listening carefully.\n\n\"Too bad you won't get to spend time with her too.\" \n\n\"No, no,\" Wilma replied quickly. \"I do. She lives in California, and I see her two or three times a year. She's 94 now.\"\n\n\"Wow, that's amazing. I would never have dreamed. I guess I thought all great great grandmothers would be dead.\" He took a deep breath, and a different look crossed his face. He seemed unsure but pushed on anyway. \"Tell me about your family.\" \n\nShe noticed that his expression had undoubtedly changed and she could tell that he wasn't just making small talk but was really interested. It was a different feeling, but she was just comfortable being with him.\n\n\"I guess it's a pretty normal family,\" she began. \"I have a brother and sister, and we've always been really close. Since I moved away, we don't see each other very often, but we text and Skype all the time. Same for Mom and Dad. I call both sets of grandparents quite a bit too since they're not quite ready for texting and Skype, but that works for them.\" As she was talking, she watched his expression changing. If his look had been pensive before, it was now very wistful and tinged with what she thought to be a hint of sadness. She was puzzled but was determined to find out just what it was. \"Your turn,\" she said, pointing at him, a big smile on her face. \"Tell me about your family.\"\n\nHe looked away, off into the distance for long seconds, then back at her. \"Do you really want to hear it? The whole story?\"\n\nNow she was suddenly apprehensive and not quite sure where she'd gone with her question. Still, particularly after the look she had gotten, she was more interested than ever to hear what he was going to say.\n\n\"Listen, I don't say things unless I mean them. Yes, I'd love to hear if you're willing to tell.\" A serious look had replaced her smile.\n\nHe took a deep breath, and when he spoke, his voice had softened a good deal. \"My birth mother got pregnant at a fraternity party. Thank God she decided to have me.\" He shook his head. \"I'm sure lots of people told her not to. But she did, and I heard later that she wanted to keep me, to be my mother, but she wasn't able to with all the cards stacked against her. She, well, she decided to put me up for adoption, a closed adoption if you know what that is.\"",
        "\"I know a little,\" Wilma replied. \"I guess neither parents know much or even anything about the other. Is that right?\"\n\n\"That pretty well sums it up. My birth mom did leave a letter in the file that would be given to me when I reached eighteen. It actually allowed me to view the file if I chose to and to try to contact her too if I wanted.\" Quickly his face brightened perceptively. \"Anyway, the family that adopted me is perfect. My unbiased opinion, of course. They're my parents, you know. She's the outsider. Like you, I have a brother and a sister. I'm one happy camper with how my life's turned out.\" It was not at all the way his story had started.\n\n\"Did you see the file, and did seeing it help at all?\"\n\n\"Depends on what you mean by help. It gave me some information that doesn't really change anything but makes me, well, wonder, I guess.\" He paused, looking away from Wilma, then back at her with a look that bored straight into her heart. \"That fraternity party. She was with a bunch of guys\u2014no idea who my father was. The file did say she was valedictorian of her high school class and on a full academic scholarship. I guess I got a brain or two from her.\" He sighed and shook his head. \n\nWilma watched his face and the changing of his expressions, and she could sense the difficulty he was having trying to deal with something that obviously had disrupted his life in some way, no matter what he said about the ''perfect\" family that had adopted him. For some reason that she couldn't quite decipher, Wilma reached out and took hold of Eric's hand as he shared his story. She almost wished, for just a second, that she wasn't topless as she listened.\n\nShe realized that he had only hoped to be friendly when he'd come over to talk with her and not go into deep and possibly dark places, and he'd asked if she'd just prefer that he leave. With her holding onto his hand, that didn't seem about to happen.\n\n.\n\n\"So, would you like to find your birth mother, knowing what you know?\"\n\nHe shrugged. \"I guess I would. I'm more than happy with my life as it is and I think maybe that's why I'd like to meet her. I know her name, but it's probably not going to be the same now, so that doesn't help too much. I'd just like to meet her so I could thank her for having the courage to go ahead and have me and, you know, let her know that things have turned out okay. I suspect she might like to know that. I don't need a relationship with her. I'm sure that might be a little awkward, particularly for her. I've sent away for three DNA tests so far just on the chance I might find something. Nothing yet. I'm not obsessed about it, though. I'll be happy with whatever happens, even if it's nothing, which is what I'm expecting.\"\n\nThat huge smile came her way again as he lay down on his towel, elbow on the ground, head in his hand, just gazing at her.\n\nThere was nothing special about him visually, but somehow, he was becoming a little extra special. She knew it wasn't easy to reveal so much of yourself so quickly. She lay down on her towel and mirrored his posture.\n\nThey lay there like that, talking about everything just a little and nothing a whole lot. From this close, he was a little awestruck at how pretty she was. Not totally gung-ho beautiful, just very, very, pretty. And he did take time to stare at her breasts as she seemed to enjoy that. He did notice those nipples, that maybe they were a little larger than before, and it was all he could do to keep from touching them. \n\nCaptured by his smile, she asked, \"Want to head over to WI2?\"\n\nHe was glad she'd said it because, by now, there was nothing he wanted any more than that. She'd listened to everything he'd said and hadn't told him to bug off or leave her alone, so he was ready. He eagerly stood up and gathered his towel, helping get hers as well. \n\nHe gestured for her to stay put and quickly ran to the refreshment stand and bought two bottles of water, thankful he'd remembered to stuff some money in the pocket of his bathing suit. On a hunch, he picked up one of those two-packs of Reese's Peanut Butter Cups. Back quickly, he tucked the bottles under his arm and held out his hand for Wilma, who grabbed hold, and they began walking. He certainly enjoyed looking at her, but he also enjoyed touching her, even if it was only her hand.\n\nHe loved to go to WI2 and look, and today, he would be looking, but the looking would be a little more personal and close-up for sure. He stepped out of the way and let her lead, watching her adorable rear end swishing from side to side, very delicious looking, even with the bikini still on. At the gate, she led him through, then stopped and very carefully took the bottom of the bikini off and stowed it in her bag. Eric stepped out of his swim trunks, and she held out her hand, offering to put them in the bag with her things.\n\nSilly thoughts rushed through his head as he pictured his trunks nestled against her bikini bottoms. But the reaction those thoughts were causing made him try to dismiss them from his mind. Maybe later. They discussed where to go and soon found a place, not secluded, of course, but a little away from most of the crowd. He had to admit that, just walking along, he saw a couple of very pretty and very naked ladies. But they were only temporary distractions. And not really even distractions as he was totally focused on the one he was with. She was more than attractive and very naked as well, and he was going to take advantage of that, even if he wasn't quite sure just how that was going to happen.\n\nWilma had just gotten a quick glimpse of Eric at the gate, and she was anxious to study him a little more carefully now that they were getting their towels situated. She finally decided what the heck and just stood and stared at him. He was putting his towel down very carefully and didn't notice. She was not surprised at what she was seeing as, what had been hiding under his swim trunks, wasn't at all different from the rest of him. She usually hated the word average, but it kind of fit here. She realized that wasn't all bad; in fact, maybe it was kind of good, but she wasn't quite sure why that might be true as of yet.\n\nHe finished with the towel and straightened up to see her eyes on him. He slowly closed his own eyes then opened them. \"Can I be honest with you?\" he said, his voice trembling slightly.\n\n\"Please,\" was her prompt reply.\n\n\"If you keep looking at me like that, something's going to happen, and I think you can guess what it might be so, I don't know.\"\n\nNow, the imp of mischief was on her shoulder, whispering in her ear, and she couldn't resist. She very sensually licked her lips, her eyes half-closed. \"Maybe that's what I want to happen. We're here to look and see.\" She followed that by slowly lowering her eyes again. She could immediately see what he was talking about as his penis quickly got larger and stiffer.\n\n\"I'm gonna be the only one on this beach looking like this,\" he sputtered out and quickly lay down on his towel.\n\nShe lay down beside him on her towel. \"Sorry,\" she said softly. \"I couldn't resist.\" She looked at his erection once more to his groan. \"Nice to see I can have that effect, though.\"\n\nShe reached across the gap between them and touched him, on his right side just under his ribs. Her touch was electric, but he knew what she was touching.\n\n\"You can barely see the scar,\" she said, running her finger along the very faint line that ran from his side to nearly mid-stomach. Then, a puzzled look crossed her face, and she looked up at him, pressing a finger against the scar.\n\n\"I'm a bit of a medical freak,\" he said, laughing warmly. \"First, people my age don't get gallstones, but I did. So, they removed my gallbladder at age twenty. He reached down and took hold of her hand, sliding it along to the very end of the scar. \"Second, that's a mild surgical mistake, a small hernia that's formed since they didn't quite get the whole incision closed.\"\n\n\"I've never seen or heard of that,\" she said, running her fingers over the small bump.\n\n\"I said I was a freak,\" he chuckled, not wanting to let loose of her hand nor have her stop rubbing that scar.\n\n\"I thought they did gallbladder surgery laparoscopically these days. That's a big incision.\"\n\n\"Doc said he wanted to play it safe, and I was young and would recover quickly. As long as you don't cough or sneeze for a few days, it works too.\"\n\nShe cringed a little at that thought, even though she'd never had any surgery. \n\nOf course, it wasn't only what she'd done that was having its effect on him. Her touching his scar had generated a warming inside of him that he knew would only grow. And, it was just looking at her, at the trimmed curls on her mons, at her glistening body, at the light sheen of perspiration that was showing on top of the sunscreen, at those nipples that just wouldn't let go of his eyes, just at everything she was. Not at all what he had expected when he headed for Whitworth Island that morning. Not even what he had expected when he approached her about just sitting and talking. But it was happening, and he wasn't about to fight it. So, he decided he needed to talk.\n\n\"Why did you start coming out here to the island?\" he asked casually.\n\nShe looked at him, a half-smile on her face. Could she share the whole story with him? She'd never really shared it with anyone. It was actually a secret that she held onto tightly. That huge smile reappeared on his face, almost as if he knew what she was debating in her head.\n\n\"Okay,\" she said, finally. She knew she'd probably blush, not something she did very often.\n\n\"It started in college when rumors spread that there were holes in the wall of the women's shower room in my dorm, that guys could use them to spy on the girls. No one would use the last shower stall on the end, where you could see a small hole high up on the wall. No one but ... but me.\" This was a little harder than she first thought it might be, but Eric was just listening, no change in expression, so maybe it would get easier. \n\n\"It somehow added excitement to my life, when I could go there and take a shower and imagine someone peeking through that hole, watching me. I'd try to picture who it might be, which of the guys I'd seen walking around outside the dorm had been the one pressing his eye to that hole and watching me\u2014naked.\"\n\nShe could feel the heat in her cheeks.\n\n\"You probably think I'm some kind of a perverted slut,\" she said, wondering why she had decided to share this with him.\n\nBut she could tell that he wasn't thinking that at all, not one bit. His expression told her one thing, the slight nodding of his head told her even more, that perhaps he was treasuring that fact that she would share this with him, difficult as it obviously was for her.\n\n\"That's not a word I'd ever associate with you,\" he replied, and it was his turn to take hold of her hand.\n\nThe sincerity of what he'd said showed clearly on his face, so she decided to continue.\n\n\"As I'd walk around the dorm and outside, I'd watch the looks I was getting, checking for that special knowing glance that would tell me he was the one. I knew I was pretty, very pretty, I guess. People told me, so I got plenty of looks.\"\n\nEric was smiling at her and nodding. She knew it was his subtle way of complimenting her, and she was beginning to appreciate that more and more.\n\n\"Maybe it was all made up, and the hole in the wall went nowhere, and no one was looking. Whether they were looking or not, I was willing to show, so I did.\n\n\"During college and after, I had gone to a few nude beaches, difficult as they were to find\u2014 legal ones that is, and I had done some skinny dipping since, in college, it was easy to find others who were interested in joining me, guys in particular. That was fine with me since having other women see me naked was only about 10% as much fun as having the guys do it.\n\n\"When it had first started, I had also begun wearing revealing clothes to the mall, bending over a lot and letting people look down some of the very low necklines I wore, but I found the island to be more satisfying, at least for me. Despite the rush I got from the danger, I don't need that these days. I was also surprised a little and very content that all that took place here on the island was watching, although I've heard that in WI3, there's a little more than watching\u2014 maybe a lot more than watching.\" \n\nShe was sure her cheeks were redder than ever after that, particularly with the huge grin that had spread across Eric's face and the vigorous nodding he was doing.\n\n\"I think you're enjoying me spilling my guts way too much,\" she laughed and got a squeeze of her hand in return. She'd totally forgotten that he was holding her hand all this time.\n\n\"But I still like being watched. I struck up a casual acquaintance here with a pair of older couples but have been, well, a little wary of the younger guys.\"\n\nRaised eyebrows from Eric and her turn to squeeze back on that hand. Maybe she should be wary of this young guy or maybe warier of the way she was beginning to feel about him.\n\n\"How about you?\" she asked when she was through.\n\n\"Eh, I had a girlfriend, and I found out she liked to show what she had. She was coming out here, so I came with her and joined and have just been here ever since. I guess I don't mind showing a little, but I'm more interested in looking.\" He chuckled. \"I'm pretty sure of that.\"\n\n\"Well, that sounds fairly normal. What happened to the girlfriend?\"\n\n\"I found out she was showing everything just about everywhere and almost all the time, and I suspected maybe more than just showing, and I decided I didn't need that, so I left. I found out later that what I suspected was true. She had more guys on her string than you could count, and the showing was only part of it.\"\n\n\"I'm not quite like that, thank goodness.\" That had just seemed to come out as a natural response to what he'd said. She was watching Eric's eyes as they spent a good bit of their time now staring at her breasts and, more likely, her nipples, she was sure. And when he wasn't doing that, he was grinning at her with that huge grin she had grown to anticipate and like a whole lot and probably way too much. It just seemed to be what Eric was, summing him up in one simple feature or action. Now his eyes were back to the nipples. She slid her body closer to him. They talked some more. Then closer. More talk and closer still. She was sure, from as close as she was now, that he could see every detail of those nipples, every wrinkle, every nuance of color, and she was sure he could see that they had grown. Maybe they could grow a little more. \n\nShe took a deep breath. \"Go ahead,\" she said very softly. His eyes flipped up to hers, a look of disbelief on his face. ,\n\n\"Go ahead what?\" he questioned, and she could hear the anticipation in his words.\n\n\"Don't act so innocent,\" she giggled. \"Touch it.\"\n\nA pause. \"You sure?\" She could actually see his nostrils flare with the change in his breathing.\n\n\"Touch it and see what happens.\" She knew what that would be.\n\nHesitantly his hand reached out, stopped an inch away, then a thumb and forefinger took hold and very gently squeezed. Then another little squeeze. She was amazed at the tingling that was spreading through her body.\n\n\"Oh my gosh,\" he said.\n\n\"You better make them match,\" she suggested, noticing that she was beginning to breathe a little harder as well.\n\nA quick look at her, then his other hand went into action with the same gentle squeezing and the same result. That was the physical result, but for her, the emotional result was even more evident.\n\nAs he squeezed, she was looking and could see his erection moving with the beating of his heart. As her mind raced, she couldn't believe that she had lain here beside this guy who she had only met an hour ago and gotten naked, shared her fetishes, learned all about him and now let him touch her nipples. She enjoyed being looked at for sure, but somehow this had gotten to be a little different. As she had told him, she had always been a little wary of the guys here at Whitworth Island. Now it was her, with this unsuspecting and unassuming guy, that was doing some of the things she'd been wary of. She was certainly feeling a little different ... no, a lot different. And she was enjoying that difference more than she would have thought possible just that hour ago.\n\nMuch as he was enjoying it, and he undoubtedly was enjoying it, Eric realized that he couldn't lay there all day squeezing those wonderful nipples. Reluctantly he let loose and just enjoyed looking at them, hoping against hope that Wilma didn't mind, which was silly, of course, since she'd invited him to touch them.\n\n\"How were they?\" she said, catching him totally off guard.\n\nHow could he answer a question like that? \n\nHis eyes lifted to her face. \"You're about to kill me here,\" he grunted, \"and they're fantastic, and you know it, and you're torturing me, just as much as if you were beating me with a stick.\" He had almost a pleading look on his face.\n\n\"Can I torture you some more?\" she asked, an innocent sound to her voice.\n\nEric groaned. \"Oh shit yes,\" he grunted. \"I may as well die happy.\"\n\nShe giggled and lifted her left hand till it was right in front of his face, and he had to look at it. She extended the forefinger and middle finger and tucked the other two against the palm. Very slowly and smoothly, she moved that hand, tracking it down across her stomach, then her belly, then over her mons, where she paused for just a second, then curled it between her legs and into a cleft that was now very wet and slippery. She moved it around gently, then slowly raised it and started back up so that it was headed toward Eric, whose eyes were as wide as they'd ever been, she was sure. The hand approached his face. Then the two fingers were against his lips, and he opened his mouth and closed his lips around those fingers and sucked hard to get all of her juices that he possibly could.\n\nHe sucked hard for long seconds, then let go with a groan. She smiled. \"My turn,\" she said, and her hand moved again, this time along Eric's body, his stomach, and belly, through the light brown fuzz that surrounded that throbbing cock. The two fingers moved to the head where there was a shining drop of liquid that she slid off with her finger, moved it to her mouth, and sucked it off. Seeing the look on his face and knowing what hers had to be saying, she knew what her voice needed to say.\n\n\"Want to go to WI3?\"\n\n\"Fuck yes,\" came the instant answer.\n\n<center>* * * * *</center>\n\nWI3 was for couples only. They both knew there was a reason that it was for couples only. At the gate was another card reader with two slots. Wilma slid her card into one slot while Eric hastily fumbled for his in the swim trunks he had recovered from her bag. His card quickly joined hers in the reader. The green light came on, the clicking sound from the gate telling them they were in. Neither had ever been to WI3, so they weren't sure what to expect. Each had similar thoughts. Maybe people lying around on towels and having sex. That was a little scary as they'd come here to see and be seen but weren't quite sure they were ready to see that. Not so they found out. \n\nThere was a kind of path beaten down through the soft sand, and on either side were enclosures. There were four poles, and stretched between the poles on three sides was colorful and slightly translucent material with the open side facing away from the path on both sides. One group faced the ocean and the other the dune. As they walked along, they could see bags or shoes or other items lying by the side of the enclosures, a clever way to let you know which ones were occupied. And quite a few of them were, which piqued both of their curiosities no end. They listened carefully, disappointed that they couldn't hear any sounds although both knew that, were there moans or groans, it would have been hugely embarrassing.",
        "They soon found an empty enclosure, put Wilma's bag by the outside wall, and took their towels inside. Neither knew exactly what was about to happen, but both had thoughts and fantasies. They each knew why WI3 was for couples only and what happened when a couple got together at a couples-only spot. Those thoughts were there, but, as of now, they were only thoughts, and turning thoughts to reality was ... They laid the towels down, overlapping slightly and then lay down themselves, facing each other, now very close together. Neither was quite sure how to start whatever it was that was about to happen. \n\nEric was, at least for now, very satisfied just looking at Wilma, amazed at how pretty she was and that she was here with him. He'd never imagined himself with anyone who looked like she did\u2014he was plain old Eric, and girls or women like her were out of his reach. Far out of his reach. So, he just drank in the view and tried to burn it into his memory, certain it was a one-time thing that he could fantasize about in the future. Yet, he was still hoping.\n\nWilma was gazing at Eric as well. He looked like he was visually swallowing every bit of her, and she was wondering about herself. He certainly didn't fit the mold of men she'd dated before, the few there's been for sure. There was just something about him. The story he'd told her, the way he had told it, that huge smile that seemed to tell her more about him and what he was like than any physical details could. But here she was, in a place where she'd never been, both physically and emotionally, and she was enjoying it. \n\nAs she began running her finger back and forth along his scar, he could see the fascination on her face. Plus, Eric seemed to be enjoying it as well; he was watching her hand move back and forth. Her touching him so gently was still beyond a dream, but she was, and he wasn't going to stop her.\n\nHe began gently caressing the arm that was caressing him. It was soft and very smooth, even with the sunscreen she had put on it. He moved up to her shoulder, then slowly down her side to her hip. His finger traced a line from her hip to her navel. It circled there for just a moment, then drifted down across her belly to an obviously carefully trimmed muff, dark, curly, and inviting. He watched her belly move up and down with her breathing and had to smile. He began to gently play with that curly hair, tugging softly on small tufts with his thumb and forefinger.\n\nAs his fingers had moved, so had hers, and her gentle touching had moved down his belly to where she had also found some curly hairs and began wrapping them around her fingers, ever so close to something she so wanted to touch but was willing to torment herself and him she was sure, just as he was doing to her.\n\nHer breath caught in her throat as she watched his hand move down over her mons, spread out and stay there, moving ever so slightly, then, as she had done not that long ago, his two fingers dipped inside of her as her hips moved to help him without her even willing it to happen. The fingers weren't leaving right away either as they gently explored, her hips moving in unison with his fingers. She realized she was holding onto those tufts of hair with her entire hand and hoped she wasn't hurting him. \n\nShe felt his fingers inside of her, just enough that she could know that he was there. When he pulled them out, the hand stayed right where it was as she felt his fingers moving up her cleft, very slowly. \"He wouldn't,\" she thought and then, \"why wouldn't he?\" and finally, \"he'd better.\" He did, and her body shuddered as the feeling raced through her from head to toe and her eyes closed. When she opened them, he was sucking on his fingers. She could see him looking at her, a very different look than she'd seen before. She knew he was thinking, and she could barely wait for what she knew he was thinking about actually to happen. \n\nNot willing to torment herself any longer, she eagerly grasped his erection to a groaned \"Oh, shit!\" from him. He lay still while she gently stroked, smiling at him as she did.\n\nWith her still holding on, he was up on his knees and moving, and she knew where he was going. She reluctantly let loose. It certainly wasn't that she was a virgin or anything like that, but why was this seeming so different than anything else had been? No explanation came to her, but it didn't matter at all. She didn't want to think anyway, really wasn't able to either as he was spreading her and spreading her very wide. She knew he was looking, and she knew what he was seeing and, right then, she wanted to be seen, and she wanted even more than that. She felt his warm breath between her legs, and then his tongue hit that nub that she knew was a little bigger than a nub now, and that shuddering began again. \n\nHis tongue danced with just the right rhythm and pressure. Her mouth fell open as the sensations flooded her. All she could do was make gasps and moans; he had stolen her ability to speak. It was as if he could read her mind as his mouth danced against her. Shudders ran through her body with feelings she had never had before. It had been a long time since anything like this had happened to her and what she was experiencing was astounding and, seemingly in an instant, she had totally lost control of her body. \n\nTime was standing still\u2014everything was standing still, except that tongue that was moving ever faster. Something inside of her was building and building, and there was pressure, an intensity than she had needed for a long time, that he was giving her. His tongue was flicking away, and when his lips closed on that clit and began pulling on it with the tongue rubbing in unison with the pulling, she couldn't contain it any longer. \n\nThe orgasm started where his tongue and lips were working and instantly spread, her entire being vibrating, spasms shaking her with an ecstasy she had nearly forgotten, her body arching, pressing against him, her moans telling him what she was feeling even though they could barely penetrate her consciousness. Then slowly, she was returning to a euphoric but vaguely conscious state and was already hoping she might experience this again sometime. And soon.\n\nShe opened her eyes to that wonderful grin that had started this whole thing. She only wanted to do one thing, to do what he had done to her, to make him feel as she had felt, and she began to move in that direction, but he held her down. A puzzled look went his direction.\n\n\"That would be more than wonderful,\" he said, putting his finger to her lips. \"MORE than wonderful,\" he emphasized. \"But I know myself and, even though it would be probably the best feeling I have ever felt, I want something else. And to be sure that happens, I'm going to stop you... \"\n\n\"Oh no, you're not,\" she interrupted, moving his hand and pushing him backward. Her mouth closed on his cock, and her head began moving up and down. She could tell from his reaction that what he had said before was true. His long, guttural groans were telling more than any words could. In just a moment, though, he had her shoulders and was pulling her up, off of him.\n\n\"Oh shit, not yet,\" he grunted out. \"Not yet.\" Gently he pushed her onto her back.\n\nHe waited for her to stop him, but her look told him just the opposite, so he moved up until his face was above hers, and she quickly could feel something pushing against her pussy. She wasn't going to argue with him as she wanted what he wanted and probably even more if that was possible. She opened to him and felt him bumping against her, then pressing even harder until something was parting her lips and pushing inside. It was a phenomenal feeling as he slipped inside her, very slowly, definitely there, filling her as he moved. She opened her eyes, and he was there, above her, and locked with her eyes as he was pressing again, ever so gently sliding further and deeper inside until finally he stilled.\n\nHe didn't say anything, just had the most pleased look that she could imagine as he began to move, very slowly, in and out and in and out, gaining momentum as he moved. She began moving with him, lifting her hips as he moved in and backing off as he pulled out. She had wanted him in her mouth, had actually done that, but this was so much better. \n\nHis eyes bore into hers unashamedly; for the first time, she felt truly herself, no embarrassment at how she liked to be watched. With this man, she not only felt comfortable at being naked but letting her soul be naked too. The intensity made her want to close her eyes and hide, but this just felt right; she felt complete. \n\nShe pulled his head down toward her and kissed him, their lips touching for the first time, her tongue pressing against his lips until they parted and let her in. His teeth bit down lightly as his lips surrounded her tongue, his tongue fondling hers ever so gently. She wanted him right where he was, to hear his groaning, to have the intensity that was gripping her entire body to stay there, become a part of her as she wanted him to become a part of her. She opened her eyes and saw his, just inches from hers, still just drinking her in. Before she even knew it, his face was against her neck, and she could feel his lips working and sucking, getting ready for what was about to happen.\n\n\"You smell fantastic.\" \n\nShe could barely hear the muffled words and knew it was the Calvin Klein's Escape at work. She reached out and pulled his face in front of her.\n\n\"Is this good?\" she said hoarsely to that face. Her legs swung up around his waist, and she locked her ankles behind him, binding the two of them together, the unison movements growing in fervency until the look on his face told her he was going over the edge.\n\nThere was no way he could hold back with her words, her look, and those locked legs and, despite his also wanting it to last forever, he felt his body taking control from his brain, both within himself and inside her, and he was pumping out ropes and ropes of hot liquid there for what seemed both forever and way too short a time. Breathless and totally at peace, once more, he opened his eyes, and it was her turn to smile.\n\n\"Who are you?\" he gasped. And when she didn't say anything, \"One fantastic lady,\" he answered his own question, still not quite able to wrap his frenzied mind around the fact of what had just happened with this very beautiful and very willing lady.\n\nShe wasn't totally sure what had just happened either since she knew what she had expected when she'd left home this morning. But that wasn't what today had become. Not by a long shot. It was unbelievable while at the same time being real. She could see him hovering over her and could feel him still inside of her, so she knew it was real, even if a bit unimaginable.\n\nHe was smiling at her again, and it was gripping her like it had done all day.\n\n\"You know what that smile does to me, don't you?\" she teased.\n\n\"If that's what caused this, then you'll be seeing it a lot.\" He'd smiled at girls and women before, but never with this result.\n\nShe pulled his face down and kissed him.\n\n\"You're just so beautiful and . . . ,\" he said, gazing at her so intently she felt her heart tingle just the tiniest bit.\n\nShe knew where the \"and\" was taking him but didn't say anything.\n\n\"You know,\" he said, recovering from the kiss, \"we haven't started out like most people who are meeting for the first time.\" \n\nA puzzled look from her. \n\n\"What do you do for a living?\" he asked.\n\nShe smiled, watching his eyes as she thought about what to answer. A strange question for this moment, but somehow very intimate given what had just happened.\n\nShe decided to be totally honest and say what she actually did for a living.\n\n\"I'm Vice President of Operations at Wayland Industries,\" she said very directly. \n\nStartled, she had never seen a very wonderful expression change so quickly. \"What's wrong?\" she said.\n\nHe took a deep breath and looked away from her eyes. \"Shit,\" was his quiet reply.\n\n\"What, what?\" she asked urgently. What had happened that she didn't understand? She could almost feel his erection shrinking inside her, and he wouldn't look at her. \"Look at me,\" she exclaimed. But he didn't. He seemed to want to move away from her, but quickly her arms held him in place.\n\nSlowly his head turned, and he did look at her, shaking his head. \"Last Monday, I started as the Manager of Industrial Engineering at Wayland Industries.\"\n\n\"Oh god,\" she said quietly. Usually, she would have seen his resume, but she had been out of town last week and hadn't gotten the chance. \"I'm supposed to meet you Monday.\" \n\n\"But wait,\" he said suddenly. I saw your signature on a paper, or someone's who's a VP, and it wasn't Wilma. It started with an L, I think. Laura?\"\n\n\"Lisa,\" she answered softly. \"Wilma is my middle name.\" She tried to smile at him.\n\nHe was having none of her smile. \"I'm in deep shit,\" was all he could say.\n\nQuickly her hands were on his cheeks, and she was holding his head, so he was forced to look at her. He looked like he was about to die. \"Listen to me,\" she said sternly, \"and listen carefully.\" No change in his expression. \"On Monday, Jimmy will bring you in to meet me, and you will meet me for the first time as VP of Operations. We will exchange niceties and then we'll see each other again at the ten o'clock meeting that you'll be involved in. Then, we may see each other during the rest of the week, and we'll smile and say hi to each other. \n\n\"Now, here's the important part.\" She shook his head gently, so she was sure he was listening carefully. She spoke very slowly, emphasizing each word. \"Next Saturday, I will be at WI2 at the exact spot where we were today. And YOU'LL be there, too. Vice President Lisa is not Saturday Wilma, whose brains you've just screwed out and made her feel things she never thought were possible. You got that?\" Her eyes bored into his relentlessly.\n\nAgain, he could hardly breathe. He'd heard what she said but still. \"Got it,\" he said, \"even though I don't understand it at all.\"\n\n\"We'll work on the understanding part. Most important now is doing just what I've said.\"\n\nShe slowly rolled him off her, snugged up the ponytail one more time, and slid down his body. She held his very relaxed penis in her hand. She wouldn't have been surprised if he tried to push her away, but he didn't fight her at all and was looking at her with an incredulous expression that just made her want to kiss him. So, she did. He wasn't smiling yet, but neither did he look like he was about to die as he had just moments before. \n\nEven though she had actually not done what she was about to do too often, and being sure it wasn't her strongest suit, she let her mouth take over and allowed it to work on him in ways she never had before thought to try. The results were amazingly satisfying, too, as, no matter what was in his mind, his cock was responding to her lips and tongue and was growing, as she hoped it would. She could hear his breathing intensify, and it inspired her to work even harder. She kept it up, and soon she heard what she wanted to hear.\n\n\"Oh shit, I'm going to come.\" His body arched, and he was expecting her to let loose and her hand to come into play. That didn't happen, and there was no way for him to stop to question it anyway. It had been building, and now it just burst, and again, he was pumping out that milky liquid, only this time it was into her mouth. When the euphoria that had overwhelmed him had finally passed, his eyes opened. She was looking at him, and she opened her mouth and stuck out her tongue, which held most of what he had just shot into her mouth. She closed that mouth, and when she opened it again, it was empty. \n\nShe certainly had never done that before, and she was amazed at herself for doing it this time. At least she was sure that he would believe all those things she had just said to him. That was what she truly wanted, more than anything at this moment. \n\nHe put his hand behind her head and pulled her to his chest, squeezing her tightly against him.\n\n\"Hell of a day,\" he said into her hair. \"I don't pretend to understand any of it either.\" Looking down at her lying against him, he could see the sheen of perspiration nearly covering every inch of her body. That and the sunscreen, with the sun overhead, made her glisten like dew on gossamer in the early morning, delicate and fragile but delightfully enticing.\n\n\"I can hear your heart beating,\" she said softly.\n\n\"It's sure as hell never beat this hard before,\" he replied. He gently began loosening the band around her ponytail, finally releasing it and letting her hair fall about her shoulders. He nuzzled his face against the hair, even taking some of it in his mouth. He wanted to see, touch and taste everything there was of her. And that scent that was so seeming to define her was invading his nose relentlessly, and he had to ask. \"What is it?\" he said, pushing his face against her neck and pressing the aroma into his memory.\n\n\"Escape,\" was her answer.\n\n\"It's you, and I'll never forget it,\" he said. \"That and you are embedded in my brain, and I hope I can contain myself on Monday.\" Fingers twined in her hair, he lifted her head, kissing her forehead, her nose, and then those delectable lips.\n\n\"Oh, don't worry,\" she giggled out once the kiss was broken and as she sensed he had accepted what she had said. \"You will, and so will I. Now, let me put my ponytail back together, and then we'll jump in the ocean for a while. I'm hot as hell.\" As she said that, she turned her face toward him and licked the lips he had just kissed. \n\nHe already knew she was hot as hell, and it had nothing at all to do with temperature.\n\nHe watched her pull her hair together, then snug it up with the elastic band. She pulled hard to make sure it was secure. They drank their water and ate the slightly soft Reese's cups, then headed to the ocean where Wilma stroked out into the deeper water, padded there a while, and then back to him. Eric preferred water that stayed below his hips as he had never learned to swim that well.\n\n<center>* * * * *</center>\n\nMonday morning came, and Eric switched off the alarm clock well before it rang\u2014he had been awake for quite a while. No matter what Wilma or Lisa had said, Sunday had been, well, fairly awful. Actually, very awful. He had been introduced to Lisa at least a thousand times in his mind, none of those times meeting her seemed satisfactory as his mind wouldn't let them be. Now the time was almost here, and nothing had gotten any better. \n\nHe dressed carefully, digging through his underwear drawer where, underneath his boxers, he knew he had a couple of pairs of \"tighty-whities,\" which he thought might be a better choice for today, not knowing what his reactions might be. He decided a jockstrap might be overkill. A nice yellow dress shirt, tan khaki slacks, maybe his casual tan shoes would complete his look. Why was he concerned about shoes -- that was the least of his worries right now. He was even fretting about whether or not he should be worried. She hadn't made it sound like he should be. He was going in circles that never seemed to end. He stood in the kitchen for long minutes but decided there was no way his stomach would accept any food\u2014nothing to do but head to work.\n\nHe did go by a Tim Horton's drive-through for some coffee, his favorite double-double since he had left long before he usually did if five days of doing it could be called usual. He thought he probably should stop at Eddie's Corner Bar for a double, rather than the double-double he had gotten. He was a mess, despite Wilma's assuring him that all would be fine and there was no problem. She didn't seem upset or worried at all. But it wasn't Wilma who had screwed her boss's boss ... twice.\n",
        "At last, there it was, right in front of him, Wayland Industries. As he pulled into his assigned parking spot, he noticed a brand-new sign with his name on it, sharp and clear. He couldn't help but wonder, in his agitated state, if it would still be there tomorrow.\n\nAt last, at his desk, he plopped down in his chair and gripped the arms tightly, waiting. He was fighting with a vision where he was being awkwardly introduced to Wilma over and over when he was aware of someone standing in front of him.\n\n\"Great, you're here. Jump up and come with me to meet Lisa. She's here and anxious to meet you.\" A big smile from Jimmy, his boss. \"Listen, let me give you a little info about her before we go. She's a good looker, a really good looker, but don't let that fool you. And she looks younger than you'd expect for a VP. That's because she is young. But she has a bachelor's of IE from Stanford and an MBA from Harvard. She is one ... sharp ... cookie. Fair, but she knows what the hell she's doing. Plus, and you may have to get used to it a little, she doesn't mind at all telling it just like it is. Did you meet Angelo yet?:\n\n\"Yeah, last Tuesday, I think. I like him.\"\n\n\"Well, he calls her the Beautiful Bitch, so when he refers to BB, you'll know what he means.\" He raised his eyebrows and smiled. \"If you're ready, let's go.\"\n\n\"Doesn't bitch sort of contradict beautiful?\" \n\n\"You'll have to decide that for yourself.\"\n\nJimmy led him through the office, and Eric couldn't help but think about what he'd just heard. She did look young; maybe in her 20s or maybe in her 30s, it was hard to tell. The \"good looker\" part he was already very aware of, as much as that bothered him. And the \"telling it like it is\" part as well. Had she been doing that on the island? He hoped so, desperately. Despite fighting it, a picture of her standing there completely naked flashed through his head. That surely didn't help determine her age. And it didn't help with the image of her as the BB either. She was beautiful naked and, he realized, he had never seen her in street clothes, only in the bikini and ... without the bikini. Not the way he or anyone else typically meets their boss's boss, for sure.\n\nFar too quickly, they were at her office, and he noted the secretary's desk was vacant. Jimmy just ignored that and knocked on the doorframe of the big office.\n\n\"Got a minute, Lisa?\"\n\n\"Come in, come in,\" said a familiar voice, and he could hear a chair rolling on one of those plastic carpet protectors.\n\nAnd there she was, black skirt to just above her knees, bright red blouse mostly covered by the very proper black business jacket, her beautiful face beaming at him, her dark hair down around her shoulders\u2014no ponytail here. That face, just as pretty as the face he had pictured those thousand times in his mind, and she was heading right for him, her smile not hard to read, at least for him. The way his heart was pounding, Eric was afraid he might be having a stroke, or maybe a heart attack. He knew either could be fatal. Her hand came toward him, and he automatically responded.\n\n\"You have to be Eric,\" she exclaimed, vigorously pumping his hand, the same hand that had held his cock, that had dipped into her pussy and brought her juices to his mouth. He nearly groaned aloud.\n\n\"So good to meet you . . . ,\" he managed to get out, fumbling a little but sounding reasonably normal, but he paused at her name.\n\n\"I'm just plain old, Lisa, so call me that,\" she rescued him, her smile broadening, even more so than he thought was necessary. She certainly was not \"plain old Wilma or Lisa or whatever.\" But was she toying with him again with that smile? She still had hold of his hand, a little too long perhaps, but then she let go. \"Looking forward to working with you too,\" she added. \"I have to apologize, but I'm pretty well tied up this morning, so I can't get to know you a little better, as Jimmy knows I like to do.\" She nodded at Jimmy. \"But I'll catch you later.\" A subtle wink. \"I do like to know who I'm working with.\" A quick lick to her upper lip. A little jolt, but Eric was feeling so much better already, and he began to appreciate what Jimmy had said about her being very sharp. \n\nShe was helping him to relax and feel more comfortable with the warmth of her smile and by treating him as she would treat ... any new employee ... almost.\n\nShe stuck out her hand again. \"See you at ten o'clock,\" she said, still smiling, and as he took her hand to shake it, there were only two fingers there -- those special two for sure. He shook them, and rather than just letting go, he let them slide through his hand. Just a very small change in her eyes, but it made him feel so much better. He was amazed at the simple way she did that. He wasn't sure the Harvard Business School taught things like that\u2014probably not. Whatever it was, he hoped that, somehow, it could continue.\n\n\"See you then.\" He and Jimmy retreated from the office.\n\nThe ten o'clock meeting was uneventful except for what resulted from the fact that they sat at a round table. Eric took his seat and the rest filed in until there was only one seat left ... for Lisa, which was right beside Eric, of course. She came through the door, moving fast and apologizing for being late. He glanced at the clock on the wall. It was about 30 seconds past ten o'clock. He made a note that she obviously valued punctuality and, his mind jumped quickly to next Saturday when he was to meet her on WH2 at ten o'clock where, and he couldn't stop himself, she'd be naked. Looking around, he saw the changes in posture and even facial expressions when she'd entered the room, everyone almost snapping to attention, as if a general had just entered. As she moved across the room, all eyes followed her; there were nervous coughs, and a quick arranging of papers and pens were at the ready. He wondered if he'd be seeing the BB in action?\n\nShe was just sitting down next to him, and he couldn't look because he was sure her clothing wouldn't be there. Add to that the fact that the breeze from her sitting down had enveloped him in the gentle aroma of that cologne he had first really noticed when his face was buried against her neck, and he was sucking there. Silly as it seemed, that had been the left side of her neck, and now he was sitting to her right. It helped a little that what he was looking at was not where he'd been. He knew he was going to have trouble concentrating on the meeting content. He decided that he was really pathetic and vowed to improve, not sure just how that was going to happen.\n\n\"Have all of you met Eric?\" she began, gesturing his direction.\n\nA murmuring of yeses and smiles aimed at him.\n\n\"Good. Then let's get started.\"\n\nThank goodness he was just a listener today, and she did most of the talking so he could just sit and watch her, study her, devour her from reasonably close range. He couldn't believe that she had actually gotten better-looking in just two days. He hoped the others at the meeting didn't notice how he was looking at her. Most were very busy writing and snapping \"Yes, ma'am's\" at her requests, suggestions, and outright orders. By the time the hour was up, he could have painted her portrait, knowing intimately each strand of hair, each pore in her face, each twinkle he saw in her eyes, even the very slight misalignment of one of her teeth. As the meeting ended and his first taste of the BB part of her was over, they spoke politely and separated. \n\nThis was only Monday, but Saturday couldn't be too far away.\n\nEric was enjoying the new job. He was learning a good bit and staying late in the evenings trying to get a little ahead of things, and it was working. On Thursday, he had gotten a message that Lisa had five minutes available, and she wanted to meet with him for their \"get acquainted\" time that she had with all of the new employees that fell under her domain. Surprisingly, he had not been nervous and even survived the smell of her cologne which was a very faint aroma but still nearly overwhelming to him. They chatted briefly, and he gave her his best big smile, which she returned. No signs of the BB appeared. And no mention about Saturday, at least verbally, but she did look at the large calendar she used as a desk mat and tapped her finger on this Saturday's square and smiled again. It was all he needed, though, despite his myriad doubts, and when she put her hand forward to shake as he was ready to leave, he brazenly ignored it and put two fingers in his mouth and drew them out slowly, then shook her hand. A slight nod of the head from her along with an extended licking of her lips that had his heart beginning to pound, and he was quickly back to his desk and working away again. \n\nHe wondered what might lie ahead but couldn't clear his mind of how beautiful she was and the question of why she seemed interested in him. In that frazzled brain of his, it just didn't make sense. Still, it was happening.\n\nEric, of course, had been doing a lot of thinking during the week, almost all after he had gotten home from work. It was very dangerous thinking, and he wondered if he had inherited his penchant for overthinking things from his birth mother. He decided she had not done much good thinking when she had gotten so drunk at the fraternity party, then chastised himself as he realized that he didn't know her at all and had no right to judge her about lots of things. But this thing with Wilma, or Lisa. He had a predilection for always trying to look ahead and have a clear map in his head of where things were going. He was having a lot of trouble doing that now. And that was making his thoughts go in circles, coming around to crash into each other over and over until he would pace and pace some more and have trouble sleeping as well. It was never-ending as the week progressed and that Saturday that had seemed so close on Monday seemed to be getting no closer. So many questions that needed answers.\n\nShe was his boss, actually his boss's boss, and where did that leave him? He wanted to call her up, ask her out on a date, take her to a restaurant where 90% of the males would be envious of him. He wanted those everyday things, and somehow, he couldn't picture them happening. He hadn't read all of the Wayland Industries handbook yet, but he had searched out the section on Intercompany Romantic Relationships and found that they weren't prohibited, as long as they weren't disruptive to company business and a few other intricacies as well. \n\nThen there were those mornings when he looked in the mirror and thought that, after the males at the restaurant were envious, they would laugh and quickly say, \"What the hell is she doing with that guy?\" And that thought was repeated in his brain, over and over. It seemed that every time he remembered what had happened and the feelings that she created, both physically and mentally, and then thought of that beautiful face, he always ended with that thought. \"What the hell is she doing with that guy?\" His mind wasn't letting him enjoy reality. He was trying to deal with the trash heap his brain had become and wasn't having a lot of success.\n\n<center>* * * * *</center>\n\nSaturday finally arrived, and he was up early, showered, and getting dressed if pulling on some swimming trunks and an old Ohio State t-shirt could be called getting dressed. At last, he decided to leave, and the hour-long drive to the island was nauseatingly tedious, with his mind attacking him mercilessly. \n\nShe wouldn't be there at all. \n\nShe'd be there but only to tell him this was foolish and she wouldn't be coming back again. \n\nShe'd be there and torment him fiendishly, then leave him a beaten and frustrated hulk. \n\nThank goodness he finally pulled into the parking lot before he decided to race his car into a light pole to end the anguish.\n\nHe stuffed his wallet into one pocket of his trunks and the electronic key thingy into the other, throwing his towel over his shoulder. At the gate, he swiped his card and went inside only to have a gorgeous, topless redhead who was not watching what she was doing plow head-on into him, her enormous boobs nearly knocking him off his feet. She apologized with a face nearly as red as her hair as he took one last long look before moving on. Maybe this was an omen that today would be okay after all. Being knocked nearly senseless was one thing but having it done by enormous hooters made it seem okay. Feeble, but it was the best he could do.\n\nRemembering that first meeting at the round table with the BB, he was 15 minutes early, so he stopped by the concession stand and optimistically bought the usual two bottles of water, along with the Reese's Peanut Butter Cup two-pack that he knew would be soft and soggy before long, messy but still very tasty, then headed to the WI2 gate. There he slipped his trunks and t-shirt off and went in, moving carefully to the spot where they had settled in last week. Fortunately, it was vacant. He spread his towel, sat down, and waited with bated breath, not knowing at all what to expect after all his mind's ravings. He opened one bottle of water, and as he raised it to his mouth and was drinking, there she was. At work, she was, as Jimmy had said, \"a looker.\" Here, walking toward him naked, she was breathtaking.\n\n\"Oh god, I'm so thirsty,\" she said, taking the bottle right from his mouth and putting it to hers. \n\nAs he watched her drink, his whole body relaxed. She certainly had a knack for making him feel better. \n\nAfter a long swallow, she exclaimed, \"Good!\" She was looking at him, from head to toe. \"Almost as good as you look right now,\" she added. \n\nHe could feel the erection beginning, and she could see it. \n\n\"Bad boy,\" she quipped as she sat down beside him on his towel, her body rubbing against his. \"I wouldn't have you any other way.\" \n\nHe turned his body sideways so what was happening wouldn't be so obvious to anyone passing by. \n\nShe kissed him on the cheek. \"You notice I didn't spread my towel or anything else yet?\" \n\nAnything else? What else might she be spreading? Now he was having thoughts that he hadn't had all week, and he could feel the low burn beginning in his body. She certainly was not the BB here.\n\n\"Let's just head on to WI3. More private,\" she added with a grin, quickly reaching over and lightly tapping his erection.\n\n\"Good plan,\" he answered, groaning. \n\nWhy had he been worrying for all those days?\n\nHe jumped up and reached for her arm, missing it, and, of course, bumped her right nipple. She looked at him and then down at herself. \"They don't match now,\" she murmured. \n\n\"Why do they have to match? This way, you're unique.\"\n\n\"And weird-looking,\" she added, twisting, so her other breast was toward him.\n\nSo, he bumped that one to her broad smile. \"You know how to take care of me, don't you?\" \n\n\"Well, we certainly don't need weirdness today.\" He laughed.\n\nHe picked up his towel, draping it carefully over his arm, so it mostly hid his privates, and tossed his bathing trunks and shirt over his shoulder. She carefully wound her fingers through his, and they headed for WI3.\n\nCards were swiped, and they were inside, and it was obvious that she was intent on being on the ocean side this time for some reason. She picked the enclosure, set her bag by the outside wall, and went inside with her towel, pulling him along with her.\n\n\"Someone might see us,\" he suggested, gesturing to the wide-open space in front of them leading down to the ocean.\n\n\"That's why we're on Whitworth Island, to see and be seen,\" she answered, punching him in the ribs. \"Plus, I like the ocean, the color, and the sounds. It just seems appropriate for what sometimes happens on Whitworth.\" It was her turn to send a big smile in his direction.\n\nVery quickly, it looked like they were going to be seen as a couple was coming out of the ocean and seemed to be heading right for them. And that's exactly where they were headed.\n\n\"We're just a couple of shelters down,\" the slightly older man said, gesturing to his right. \"Care to join us?\"\n\nEric felt her arm go around his waist, her fingers pressing into him. \"Thanks,\" she said, smiling at the man, \"but I think we'll just hang out here and have our own fun.\" It seemed that everything she said just turned his furnace up one more notch.\n\nNow it was the woman's turn. \"By all means,\" she said, smiling broadly, looking from Eric to Wilma. \"Fun. That's why we're here, isn't it?\" She winked at Wilma.\n\nWilma smiled in return as the couple went off their way. Eric felt a pat on his butt. They spread towels and lay down, both on their backs, watching the puffy clouds drifting lazily in the gentle morning breeze.\n\n\"Do you look for animals and things in the clouds?\"\n\n\"I guess I don't spend much time looking at the clouds,\" he answered.\n\n\"It's kind of fun, on a day like this. Just let your imagination loose. No worries. Nothing clogging up your life for a few minutes.\"\n\nHe was sure that, as a VP and also the BB, she had lots of things that \"clogged up her life.\" He hoped he didn't become one of them.\n\n\"Don't know that I've had many days like this,\" he replied, looking from the clouds to her.\n\nShe caught his eye and smiled. \"Me either,\" she said.\n\nHe couldn't believe how that simple \"me either\" made him feel so much better; He had nothing in his life to compare it to. Nothing. He had never been with anyone like Wilma. Stanford and Harvard, and she was lying beside him, naked. He'd pinched himself many times, searching for reality. What she'd just said made it a reality, even if he still couldn't keep himself from wondering.\n\n\"Not quite as hot today,\" she said, changing the conversation slightly.\n\n\"We'll have to see about that,\" he replied, grinning.\n\nHe watched her face, saw her eyes smile at him as she rolled on her side toward him, and began playing with the short and very light-colored hair on his chest, then to that fascinating scar and little bump under the end of it. It was just so very relaxing to be here, to be together, so very comfortable with each other. \n\nWilma took a deep breath, a more serious look on her face. \n\nEric saw it and wondered -- it was his nature to wonder.\n\n\"I know that look,\" she suggested, \"and you need to get rid of it.\" \n\nHe smiled and nodded. She said it, and it sounded easy. But he was who he was, and it wasn't that easy.\n\n\"Have you read all of the Wayland Industries handbook?\" A little laugh and a shaking of his head. \"What we are doing is not technically against the handbook at all, as long as it doesn't interfere with or disrupt the functioning of the company.\" \n\nNow his eyes were wide, and he was very interested. If she was checking it too, that was very important.\n\n\"So?\" he questioned.\n\n\"So,\" she replied. \"Are you going to ask me for a date?\"\n\nHe looked thoughtful for a second, snapping his thumbnail over his teeth.\n\n\"How about dinner tonight and sex this morning?\"\n\n\"How about sex this morning and sex again after dinner tonight?\"\n\nThey quickly took care of the first part of the date, oblivious to the fact that someone might be watching from the ocean. No one was, but it didn't matter.\n\n<center>* * * * *</center>\n\nThey went their separate ways mid-afternoon, and Eric's mind was whirring. What Wilma had told him about the company policy had reassured him in that area, but not the one that kept popping up, like a cork when a tiny fish was tugging on the line. If only it were a tiny fish and not his brain that was doing it, he'd feel much better.\n\nHe'd gotten her address in a part of town he didn't usually frequent. Not surprising, as an unmarried VP was probably not hurting for money. That was something else that was a little awkward. Her degrees outstripped his. Her position outstripped his. And the way she looked, her exceptionally pretty face outstripped his by, well, by a long, long way. It just ate at him -- it was all so unusual. He tried not to let his thoughts interfere with reality, but it was difficult, the thoughts sometimes becoming more real than he'd like.",
        "When he boiled it all down, it could be summed up in what his mirror showed him. All the other stuff he didn't mind at all. It was just the mirror thing. If they were walking along together, as they would be tonight, no one would know who had what degrees, nor who held what positions with the company, but they could all see how she looked and how he looked. That was all that really bothered him.\n\nShe'd given him not only her address but the code to open the gate to Heritage Village, where she lived. She'd told him that she had a device she carried in her purse that opened the gate when she drove up, but he could enter the code and open the gate as well. That's what he'd done, driven up to the huge iron gate, or rather gates, each with the rather beautiful but nondescript coat of arms mounted in the center. He'd pulled close to the little kiosk, entered the numbers, and watched, a little in awe, as the large gates swung slowly open.\n\nHe'd driven through and followed her verbal directions until he spotted the BMW she'd described to him, and he pulled in beside it. She'd called it an apartment, but, as far as he was concerned, it was anything but that. Huge brick and vine-covered buildings, modernized with floor-to-ceiling windows, each unit looking big enough to ... he wasn't sure, maybe house two or three families. As he sat there looking around, those feelings he was having before were closing in around him, threatening to smother him. He pushed them aside and quickly jumped out of the car, now able to ignore them.\n\nLisa had debated about what to wear ... endlessly it seemed. It was just dinner, and she'd gone to dinner before, but this Eric guy was different, and she had to recognize that. She'd decided on black slacks and a pair of Peter Kaiser Aria low-heeled shoes she'd gotten while in England the last time she was there. That was the easy part. She finally chose a red, short sleeve, split-neck curved blouse that would hang loosely just below her waist. It was a little on the casual side, but she thought it fit what she was imagining. She didn't know where they were going for dinner yet, but it didn't need to be too formal. As a final accent to how she wanted to look, she carefully pulled her hair into a ponytail. That was the look she wanted, the Whitworth Island look rather than the VP look he saw during the week.\n\nFinally ready, she headed downstairs.\n\nEric walked slowly to the double front doors that had a huge faux knocker and giant brass handle on each. He found the button for the doorbell and pressed it, hearing the first two quartets from the Westminster chimes. As his heart began to beat faster, one of the doors swung open. He'd never seen her quite like this before. How could someone as beautiful as she was be almost more breathtaking standing there fully clothed than she was naked.\n\nAnd, she was smiling at him as he stood there, open-mouthed but wordless. It made his heart speed up drastically. He was having trouble thinking of something appropriate to say and was hoping that the look he knew he had to have was speaking to her in the word's stead.\n\n\"Hi,\" she said softly.\n\n\"Hi yourself,\" he finally replied, just shaking his head as he gazed at her. \n\n\"Come on in,\" she said, taking hold of his hand. He went inside far enough for her to close the door behind him but then just stood still, looking around. In the front room, the second-story windows he had seen weren't second-story at all. They were just high up on the wall but still well under the twenty-foot ceiling that towered over the room.\n\nThat was just the beginning as she took him through the \"apartment.\" He sensed her watching him as he looked around and couldn't help but wonder what it would be like to live in a place like this. Was it a possibility? He was sure the awe he was feeling had to be showing. He remembered what she'd said to him on the island and was curious about the second floor ... and her bedroom, but she skipped taking him there. Maybe later stuck in his mind, his anticipation growing. If that's what she wanted, he wanted it too. But the more they looked around, the more he realized he was liking what he was seeing, both in this place and in her. Oddly and somewhat surprisingly, in his mind, Wilma and Lisa were beginning to merge.\n\nAfter the brief tour, and with the new thoughts he was pondering, they were ready to head out for dinner.\n\nGoing down the walk to the car, she said, \"You look very nice tonight.\"\n\n\"Thanks,\" he said, glad she'd noticed the care he'd taken in selecting his clothes which, in actuality, were not much different than what he wore to work. The usual tan slacks, but tonight he'd chosen a vivid orange golf shirt\u2014orange was his favorite color and some casual Sketcher slip-ons. But he did like that she had complimented him.\n\n\"Let's take my car,\" she said with a big smile. She handed him the keys, which weren't keys, but that conveyed the message that she'd like for him to drive. He was just a tad puzzled by that, but he'd never driven a BMW, and the thought of doing that was a little enticing.\n\n\"Sure,\" he answered, opening the passenger side door and getting her settled inside. Then around the car and into the driver's seat. \"Tell me if I do something wrong.\"\n\n\"It's just a car,\" she laughed.\n\nJust a touch nervous, he got the thing started, and they were on their way. New feelings were running through Eric's body, driving a beautiful BMW with an equally beautiful lady beside him. It felt a little like a dream, even though he knew it wasn't. When they'd stop at a red light, he'd glance at the people in the car next to them, trying to look casual, as if this was all very ordinary, but wasn't sure he was pulling it off. But the thought of it being ordinary was entrancing.\n\nSometimes he'd glance over at Lisa and, if she were looking at him, he'd get a gorgeous smile which made his heart beat a little faster. If he took his hand off the steering wheel, she'd reach over and give it a squeeze. It nearly frazzled his brain when she did that. This was Lisa Haskins, Vice President of Operations, sitting next to him -- and squeezing his hand. His boss's boss. Just that thought was nearly overwhelming to him but immensely warming as well. What happened at the island was one thing. Not really just one thing but one thing for sure. This was real life, riding with her and going to dinner. He was nervous, like he'd be on any first date, but was handling it. Handling it much better than he thought he might.\n\nSoon they were pulling into the parking lot at Red's Corral, the small steakhouse he'd picked and hoped she'd like. She opened her door and climbed out, to Eric's smile as that simple action made it seem like they belonged together, which was what he wanted and was feeling very comfortable with. She wrapped her arm around his, and they headed to the door at Red's and then inside. \n\nThe hostess was there quickly, talking with Eric and shaking her head. They were seated, and Lisa made a point of reaching across the table to hold his hand. With the way she felt about Eric, it's what she would have typically done anyway. With what she was trying to do, it had a double purpose.\n\nThey ordered, talked, ate, talked, had dessert with coffee, and talked a little more.\n\nHe paid, and they left. This time he did open the door for her, as casually as he could muster, and then went to the driver's side of the white BMW and climbed in.\n\n\"Let's go to your place,\" she said quickly, catching him totally off-guard.\n\n\"What?\" he mumbled out as his eyes met hers.\n\n\"You've seen my apartment; My turn to see yours.\"\n\n\"Not fair,\" he countered quickly. \"I, um, well, I didn't clean or anything. Best to go back to yours.\"\n\nEric was not sure what to do. His place wasn't exactly a mess, but it hadn't been straightened or cleaned at all, something he knew should be done before Lisa would be allowed to go there and see it. Ugh. He was at a loss, even though her wanting to go there was tugging at another part of him.\n\n\"You sure?\" he asked, his voice a little unsteady.\n\nShe leaned across the seat, pulled his head to her, and kissed him, a small nibble to his lower lip accentuating what she was doing.\n\n\"I always have to convince you I mean what I say. But as long as I can do it this way,\" and she kissed him again, the nibble there also,\" then it's okay.\"\n\nShe watched as he took a deep breath.\n\n\"Take me to your place, and you better get there quickly, okay?\" She was just inches from him, that beautiful face gazing at his. Was that longing he could see in those eyes, locked with his, or was his imagination being seduced by the feel of her breath against his face. When her tongue touched his lips, he knew it wasn't imagination.\n\nThank goodness she had moved back to her side of the car, but he was sure she could see the tent that had been quickly pitched in his slacks. At least he could drive this way, although he was afraid his breathing might fog the windshield.\n\nHis apartment wasn't far from Red's Corral either, so they were quickly there, and she allowed him to open the door for her this time. He saw her eyeing the tent that was still there and was afraid, from her look, that she might try to grab it. He breathed easier as she maintained her lady-like demeanor and slid gracefully out of the car, and watched him close the door. She quickly grabbed hold of his arm again, and, like they were dancing, she was letting him lead.\n\nThe confidence Eric had gained at the restaurant and from that fantastic kiss he had gotten in the car was still there, but he was naturally still a little hesitant as they approached the door leading to his apartment. Up the stairs to the second floor and down the hall, they were finally there.\n\nLisa had to smile, as it appeared that Eric was trembling enough that he couldn't quite make his hand insert the key in the lock. So, she took the key, unlocked the door, and pushed him inside.\n\n\"What the hell, this isn't bad!\" she exclaimed once inside.\n\nEric shrugged, and she could tell he wasn't entirely comfortable with her seeing his slightly unkempt apartment despite what she'd said.\n\nBut she wasn't waiting for Eric and was roaming around, looking at things, as if she belonged there. She checked the kitchen area, down the hallway with a glance in the bathroom, then to the bedroom. \n\nEric had drifted to the window and was looking at Lisa's BMW parked outside his apartment. It was working its way into his brain. Lisa's BMW, not Wilma's. This was Lisa he had taken on a date. It was Lisa who wanted to come to his apartment, who was now looking around, seemingly not at all put off by what she was seeing.\n\nShe called back to Eric.\n\n\"You left the bed unmade. That's perfect.\" \n\nHearing no response, she came around the corner to see Eric shaking his head.\n\n\"Why is your head shaking?\"\n\n\"How can an unmade bed be perfect?\"\n\n\"Well, if it were made, that would just, well, not be quite right for what I'm thinking. Worse yet would be clean sheets. When I get in that bed, I want to know that I'm laying my body right where yours has lain, that a part of you is still there, that you're not only lying beside me but under me and all around me as well and when I wrap that sheet around me, I'm wrapping you around me too.\"\n\nThe look on his face told her she'd said enough that what she'd said was having its desired effect, and it was time to get what they both wanted.\n\nEric moved toward her. He put his hands on her cheeks, gently kissed her, then reached around behind her, carefully undoing the ponytail. Her hair tumbled around her shoulders. He gazed at . . . Lisa. Wilma had disappeared.\n\n\"Get undressed,\" she said seductively, \"and I'll race you to the bed.\"\n\nEric was getting undressed, but he knew that winning this race didn't matter. A close second would be plenty good enough, and that's what happened.\n\nIt was indoors, with no sun, no breeze, and no blistering heat other than what they were able to generate between them, their inner fires burning, intensifying all the feelings, the sounds, the sensations that rushed through their bodies as they clung tightly to each other. \n\nDirty sheets or not, he could feel her body bonding to his, her lips pressed against his, her tongue wrestling with his. He wanted nothing more at this moment than to touch, taste, and kiss every bit of her, to be entwined with her for the rest of his life, to be a part of her every thought, to have her possess him, as he possessed her.\n\nHe felt her hand guiding his erection and sensed that foreplay wasn't going to be a part of this that was happening. There'd be plenty of time for that later. This was about their joining, the realization that something had changed, and this was the stamp that would make it authentic, that would confirm what had happened and what was continuing to happen. It was the imprint in the wax that sealed the scroll with the story of two lives that had inadvertently come together but seemed inexorably meant to stay together.\n\n\"I've never done this on a first date,\" she whispered in his ear as she felt him sliding inside of her. \"But, I've never had a first date like this before either.\" In the darkness, neither could see the other but seeing might have been just overload as their senses were being stretched to a point that was nearly more than either could handle. Just the physical sensations were almost overwhelming, but with the emotional exhilaration that was accompanying it, each felt they might explode at any second, the ecstasy of the combination fueling the sensations that were swirling through them and creating the sounds that were surrounding them.\n\nEric clutched Lisa, pulling her against him even tighter. \"I'm going to come,\" he groaned as his body began to jerk.\n\n\"Me too,\" she moaned in his ear, her body shuddering and trembling uncontrollably.\n\nAfterward, neither was willing to let loose of the other, as if what they had found was too precious to release.\n\nThis time the sex had been more about tenderness than fulfilling desire, more about warmth than raging fire, more about lovemaking than raw passion. Still, when it ended, and they finally uncoiled their arms from each other, both were breathless and at last ready for what might come next.\n\nLisa was the first to speak. \"I've never done that before,\" she said, her lips against his ear, her body still tingling.\n\n\"What ... oh, really?\" He kissed her, a nibble to her lower lip, meaning something very special.\n\nThey lay together, holding each other, their minds filled with what had just happened.\n\nFinally, Eric spoke again. \"I guess we should get dressed, and I should take you home?\" It was more of a question than a statement, though.\n\nShe could feel his huge grin against her cheek.\n\n\"Listen, Mr. Eric, I'm staying right here, and you knew darn well that's what's going to happen. You just wanted to hear me say it,\" she said, giving him a gentle squeeze and the answer he was longing for and expecting. \n\nHe did love hearing that and couldn't believe that a simple thing like dirty sheets could change his life. Of course, it wasn't the sheets but what she'd said about them and about him that had changed things. That was the final thing that had, at long last, unlocked a door in his brain, and all his doubts had rushed out, to vanish forever.\n\nThey lay in his bed, her back against his chest, her butt wedged against his crotch, their legs pressed against each other's, their first spooning together.\n\n\"You still awake?\" she asked softly.\n\n\"Yeah,\" he answered. \"Are you?\"\n\nAn elbow to his ribs. \"Jerk.\"\n\n\"B-B,\" he shot back quickly.\n\n\"So, you've heard that already?\"\n\n\"First day.\"\n\n\"You think it fits?\" She pressed against him as she asked that.\n\n\"Well, the first B sure fits, and if the second refers to this,\" he squeezed her breast, \"then it fits too.\"\n\n\"Nice try, but answer the question.\"\n\n\"Everyone sees things through their own eyes.\"\n\n\"Eric!\" She tried to sound a little like the BB but without much success.\n\n\"Any woman with a strong personality, and in your position, is going to be called a bitch somewhere along the line. You know that. They probably taught you that at Harvard.\"\n\n\"I suppose,\" she said quietly. \"Maybe I'll get a new nameplate for my desk. Should it say Bitch Vice President of Operations or Vice President Bitch of Operations?\"\n\n\"Decisions like that are way out of my pay grade,\" he laughed.\n\n.\n\n\"So, you were lying here awake then?\"\n\n\"Yeah, just smelling your cologne and smiling.\"\n\n\"What were you thinking about?\" she was anxious to learn as much as she could about him.\n\nEric sighed and hugged Lisa a little tighter.\n\n\"About you . . . and me . . . and us . . . and the future.\"\n\n\"Pretty heavy load for this late at night.\"\n\n\"Used to be heavy, but not anymore.\"\n\n\"Good,\" she said, squeezing his hand.\n\n\"I was kind of pondering one other thing, though.\" He nibbled on her ear.\n\n\"What would that be?\" she queried, laughing and snuggling back against him even more.\n\n\"Just trying to picture what our kids might look like.\"\n\n\"Eric, my god! It's our first date!\" she cried out, twisting around to face him, wishing she could see his face in the darkness and trying to keep from laughing.\n\n\"You told me once that you didn't ask questions unless you wanted to hear the answer.\"\n\n\"Lawyers say you shouldn't ask a question that you don't know the answer to. I may have to start doing that.\"\n\nBut now they were face to face, and he kissed her gently on the forehead.\n\n\"We're not teenagers anymore, Lisa. Don't want to waste time.\" There was a lighthearted sound to his voice that she couldn't help but like.\n\n\"You don't even know how old I am,\" she quipped back.\n\n\"No, I don't, but I'm willing to bet you know how old I am.\"\n\nShe was glad it was dark so that he couldn't see the rosiness in her cheeks. \"Checked your HR file. Didn't want to be robbing the cradle, you know.\"\n\n\"So, tell.\"\n\n\"You're one month and seventeen days older than I am.\" She couldn't help but giggle when she said that.\n\n\"I'm wide awake now,\" he said,\n\nShe sensed a change in his breathing, thought she might even be able to feel his heart beating against her chest., and something was beginning to press against her belly.\n\n\"Me too.\"\n\n\"Wanna practice making one of those kids I was talking about?\"\n\n\"Sure,\" she answered, her lips pressing against his, pulling his lower lip out so she could nibble on it.\n\n<center>* * * * *</center>\n\n.My sincere thanks to MsCherylTerra and Ginlover for their myriad suggestions to keep this story rolling.\n\nAlso, a huge thanks to the Ancient Ancestors for their beta reads, input, editing, and suggestions. It's appreciated."
    ],
    "authorname": "PickFiction",
    "tags": [
        "exhibitionism",
        "romance",
        "voyeurism",
        "romantic"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-dirty-sheets"
}