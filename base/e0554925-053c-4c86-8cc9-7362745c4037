{
    "title": "Don't Break the Spell",
    "pages": [
        "I stir from slumber during the early, dawn hours. As I slowly edge my way towards consciousness I become aware of your toned body close to mine. I sigh. You always remind me of something powerful, protective. You make me feel safe. You are my man.\n\nThe room is hot and still. My eyes open slightly and I tease back the soft sheet with one hand, hoping this will cool my naked body. It doesn't. Even though it's raining outside, a peachy half-light filters through the blind. I hate this muggy weather. At least you and I are now uncovered from the waist up. If the morning is kind enough to carry any breeze through the open window, we will feel it. \n\nI turn my head to look at you. You are lying on your back with one arm flung above your head. Your long fingers are curled lightly against the bed head in repose. I shift onto my side to face you and, even though it's so sultry, I lightly rest my thigh on yours. Our skin touches; we are both sticky. In the dim light I drink in the silhouette of your handsome face. Your lips are parted, so full and inviting. I hear your breath, regular and deep. It never ceases to amaze me that I am yours. You look peaceful, beautiful, delicious. \n\nFor a long while I lay motionless and silent ... absorbing this moment ... imprinting this time upon my memory. After a short while you wriggle back and forth fractionally as if trying to bury yourself deeper into the bed. Your long, toned body sways slightly, rocked by the ocean of your dreams. Perhaps you sense that I'm watching? I don't move; I don't want this magic to end. \n\n... Hush. Don't break the spell. \n\nHardly daring to stir but unable to stop myself, I lean over to brush a few stray hairs away from your forehead. They are damply dark. My hand lightly cups the side of your face and I feel your early morning bristles tickle my palm. \n\nI stare at you closely, as if for the first time. My heart lurches. I realize that this is one of those rare moments in time when I am absolutely happy. I'm flooded with the warmth of my love for you. By way of a silent thank you, I lightly kiss your cheek and your ear lobe. I lean over and touch my lips against yours - feather-light, a whispered, hushed kiss. My tongue runs almost imperceptibly over both your lips in turn. Again you rouse, sigh and shift a little but fail to wake. \n\n... Careful. Don't break the spell. \n\nI lay motionless breathing in your scent, so masculine. I am in paradise. Tentatively I reach across to touch your chest. I rest my palm delicately over your heart and feel its constant, affirming thud. The ever-miraculous sensation of skin against skin causes me to quiver slightly. After a while my emboldened fingers roam a little further to caress, explore. You let out a soft, almost inaudible moan. Even though you are sleeping soundly, somewhere in your dreams you know that I'm here in the real world, fondling you. I smile softly and wait. \n\n... Be still. Don't break the spell. \n\nEventually my hand roams further - more adventurous this time. I hold my breath as my fingers tenderly brush your nipples. They rise and harden as if to please me. Your unconscious response to my touch arouses me beyond words. I feel my pussy tighten. My heart begins to pound in my ears. \n\nEver so lightly, gently, ever so slowly my hand slips wave-like down your torso. I don't want to awaken you, yet my body wants you \u2013 totally, absolutely. As if of its own volition, my hip sways inward and I knead myself rhythmically against your thigh. My nectar lubricates your skin and soon your leg becomes my slippery play thing. \n\nGod, how I want you! My mind reels. I want you to lay oblivious while I discover and tease. I am silently screaming for you to possess me. I don't want to disturb you; want to celebrate this magical time alone. I want you to wake and take me without a single word being spoken. \n\n... but STOP! Don't break the spell ...\n\nI roll onto my back away from you and slip my hand between my legs. My fingers are immediately drenched, I am so wet! I tease myself, running the very tips of my fingers over and around my outer lips. I'm hungry with lust. I want more but take my time, knowing that the longer I take the greater my reward shall be. \n\nI bend my legs apart, one slightly raised because it's leaning against you. Even in sleep you entice me - you are my catalyst, my stimulus. I add pressure, slowly exploring. My juices run down the valley of my inner lips and beyond. My fingers follow the oyster soft path, slowly, lightly ... down and back again ... over and over and over ... \n\nAt last I can wait no longer and allow my fingers to stray where they want to go. My clit is engorged and I gasp involuntarily as my fingers finally find their mark. I splay my lips wide with the fingers of one hand and rhythmically circle my clit with the other. My pussy instantly responds, clenching tight within. OH God! (Did I say that out loud?!) \n\n... Careful! Quiet! Don't break the spell! \n\nI close my eyes. Vivid pictures of our love-making race through my mind \u2013 your hair clutched in my fists as you burrow between my legs; the look on your face, distorted in the throws of orgasm, as I buck animal-like on top of you; your cock filling me from behind as I kneel, legs wide. \n\nI increase pace and pressure as the pictures swirl, tumbling over each other as if each wants to be the ultimate. I rub my clit faster and faster! I'm breathing hard but am trying to remain as quiet as I can. For a brief moment I turn my head towards you and wonder how on earth you can continue to sleep while my world is being rocked beyond all reason. \n\n... Hush now. Don't break the spell.\n\nOne finger, then two, slip into my dripping pussy \u2013 hot, warm, tight. It grips eagerly. My fingers imitate the movement of your cock ... in and out ... as deeply as they can reach ... harder ... faster!!! Waves of exhilaration rush through me, each stronger than the last. My body is glistens with perspiration. My hand continues to play ... in and out ...in and out ... my mind constantly filled with vision of us. \n\nThe tension builds, it's excruciating, magnificent! I ram my pussy with the fingers of one hand, while others excite my clit to the point of no return ... my whole body writhes, my hips thrust upwards. I'm beyond knowing or caring about anything other than the sensations wracking my body. I'm panting, moaning. \n\nI am getting close ... so very close ... I ride the ever increasing waves, rapturously driving myself further and further onwards. Every fiber of my body is tensed; my toes curl tightly. Suddenly I crest the last gigantic wave and crash down into an abyss of ecstasy. My whole body shudders repeatedly and I cry out your name. A long groan cracks the silence of our room as immense pleasure and relief overwhelm me. My hips drop to the bed and I lie perfectly still feeling my heart pound. My breathing is ragged. Hot, fast pulsations pump within my pussy. I am limp, wet, happy. I let my hand rest between my legs; it feels so good there. Slowly I begin to relax ...\n\n\"That was fucking amazing!\"\n\nAt the sound of your voice I gasp and turn abruptly. You're propped up next to me, smiling. I can't speak. I'm devastated! I quickly look away only to discover that the sheet has slipped off the bed completely. In that second I realize that from whatever time you woke up you not only heard, but also saw everything! I yank my hand from between my legs and curl onto my side. A deep blush flushes my cheeks. \n\n\"Don't be embarrassed, Honey,\" you whisper. \"It was awesome. Honestly.\"\n\n\"I ... I ... umm ... didn't want to wake you,\" is all I can bring myself to say. \n\n\"Well I, for one, am very pleased that you did, Baby. You can wake me up like that anytime you like! And now for the obvious question. Seeing as I was so rudely awoken, what are you going to do about it?\" \n\nAs you chuckle out these words, you take my hand and guide it down to your big cock. It's so hard, like velvet covered steal. Without thinking I wrap my wet fingers around your shaft and lean forward to kiss you ... \n\n... who cares about a damn spell, anyway?"
    ],
    "authorname": "dusty_gurly",
    "tags": [
        "break spell",
        "toned body",
        "lay motionless",
        "turn head",
        "side face",
        "fingers hand",
        "hand legs",
        "hand",
        "finger"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/dont-break-the-spell"
}