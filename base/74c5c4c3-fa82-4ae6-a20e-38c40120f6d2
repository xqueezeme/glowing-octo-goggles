{
    "title": "Sugar Heart Ch. 05",
    "pages": [
        "Three weeks into our relationship, Buddy and I were nearly inseparable. We hadn't spent a single night apart, and had taken to storing overnight things in our cars so we could keep it spontaneous. For the past week I'd been staying in his bedroom every night, as my shithole apartment building had developed a particularly bad pest problem, and between that and my barely-functioning refrigerator, obnoxious neighbours, and assorted other plagues, I was dreading going back there at all. This weekend they were spraying for bed bugs, so I couldn't go back if I wanted to.\n\nBernie had gotten accustomed to me hanging around, even if he still acted overprotective of the boy who was like a son to him. I could tell he was really starting to like me. If nothing else, I was putting plenty of smiles on Buddy's face, and that was worth a great deal to the gruff mechanic.\n\nI woke up warm and happy in Buddy's bed. The little guy was curled up almost in a fetal position with his back against my front. I nuzzled his hair and breathed in the scent of him. He always smelled so clean.\n\n\"Richard,\" he mumbled, stirring. His voice was husky with sleep. \"I was... d-dreaming of you.\"\n\n\"It came true.\" I wrapped an arm around his slender middle and pulled him closer to me. \"I'm right here.\"\n\n\"Mm. I love you.\"\n\nI grinned into his wild red hair. I would never get tired of hearing these words from him. \"Love you too, button.\"\n\nButton. As in cute-as-a, or possibly his irresistible button nose. Maybe it was a stupid nickname, one I might have facepalmed at if I hadn't been absurdly in love, but it seemed to work. It made him smile every time.\n\nHe wriggled his little butt, grinding it against my stiffened rod and making me gasp. We were both in our underwear and nothing else.\n\n\"He-hello, morning wood,\" he giggled.\n\n\"Tease,\" I quipped, playfully biting his neck and making him laugh harder. \"Why don't we see what you've got going this fine morning?\"\n\nI slid one hand down his flat belly and beneath the waistband of his underpants. I found him nice and hard, and deliciously warm. His cock, small enough to fit within my fist but very stiff and excited, was a tactile delight. As I squeezed him, he whimpered in the familiar way I had come to adore. I enjoyed holding him like a joystick, with my thumb over the deep scarlet tip that strained out of its foreskin, and fondled him sleepily until I could feel the slick wetness of precum at the slit.\n\n\"Somebody likes it,\" I whispered, placing my lips right against the edge of his ear in the way I had learned made him tremble and break out in goosebumps.\n\n\"Ohhh...\"\n\n\"Do you want me to keep going?\"\n\nBuddy's bum pressed back against my stiff bulge again, so firmly and deliberately that I groaned and gave a little thrust against him. I'd been cautious thus far of being too pushy\u2014we hadn't yet gone beyond handjobs and blowjobs, and Buddy was a particularly sensitive, timorous little guy. I couldn't forget how Bernie had compared him to a squirrel, and just as if I were trying to feed a squirrel in the park, I knew that I had to be patient and let him come to me rather than risk scaring him off with big movements.\n\nStill, Buddy also had a great big horny beast hiding somewhere inside him, and every time that beast showed itself a little was a delight to me.\n\n\"You know exactly what you're doing to me, you adorable monster,\" I snarled between kisses along his ear and neck that made him shiver. \"Don't grind against me if you don't want to be humped.\"\n\nI listened to his rapid breaths. I could practically feel him internally processing my playful warning. After a few moments, he reached one small hand back and gripped my thigh, and then jerked his little ass back hard against my stiff rod, drawing a deep grunt from me.\n\n\"Oh! You're pushing your luck, little man,\" I said in my best Soup Nazi accent. We'd watched the legendary episode of \"Seinfeld\" last night on Bernie's couch, and laughed our asses off.\n\nBuddy laughed again at my impression, but proved to be undeterred. He started teasing me continuously with his cute behind, rolling his hips in saucy little strokes against my hard-on. He wanted it\u2014he wanted me to hump him, and good.\n\n\"Oh... oh... you've been warned,\" I said huskily, and rolled him onto his front. I straddled his narrow hips and let my shaft settle against his crack. I watched his hands grab the pillow and bunch handfuls of it in his tense fists. He peeked back over his shoulder. His riotously freckled cheeks were especially ruddy.\n\n\"Is this okay?\" I whispered, always careful with him, even in the heat of teasing play.\n\n\"Go!\" he urged, wiggling his bottom.\n\nI grinned widely. He was so cute and so sexy when he was desperately horny like this. I pressed firmly against his bum and started slowly rubbing up and down, pleasuring my cock exquisitely with his tempting cleft. For a few minutes the only sounds were our heavy breathing and the occasional subtle creak of his mattress springs.\n\n\"Uhhn... underwear... off,\" he moaned into his pillow.\n\n\"Are you serious?\" I gasped. \"Mine, yours?\"\n\n\"Both!\"\n\n\"Seriously?\"\n\n\"Richard! Now!\" he huffed.\n\nI growled with pleasure. There was my beast. I rolled off of him long enough to shed my boxers and liberate him of his, and then I spread his round little cheeks wide and nestled my cock between them.\n\n\"Mmmm,\" we moaned in unison. He'd never let me do this before, and it had my heart thumping crazily.\n\n\"How's that feel?\" I whispered, thrusting a little.\n\n\"Oh g-g-good!\" he stammered.\n\n\"Could I use some lube to make this ride a bit smoother?\" I asked. \"I promise I won't try to go inside.\"\n\n\"Y-yes, I trust you!\"\n\nI rummaged in his bedside table for the bottle I knew he kept there for his solo self-love sessions, which he hadn't had need for over the past few weeks. He also had a bright pink silicone dildo in his drawer, which turned me on like crazy whenever I caught a glimpse of it, but I hadn't had the pleasure of seeing him use it. He'd never even talked about it, but I knew he was telling me something simply by allowing me the opportunity to discover it. In addition to giving me wonderful mental pictures, it told me that he did, eventually, want to get fucked.\n\nI squirted some of the water-based lube over my cock and gave it a few strokes to spread it around before settling back in between Buddy's luscious cheeks. He squealed with delight and gripped his pillow tighter.\n\n\"Hump me good!\" he exclaimed.\n\nI laughed at his enthusiasm. \"Shh... what if Bernie hears?\" I hissed, knowing he was intensely self-conscious about these things.\n\n\"He'll b-be out back... working... by now,\" Buddy assured me. \"I s-ssswear I heard his tools a minute ago.\"\n\n\"Well, in that case, I want to hear you squall nice and loud.\"\n\nHe did not disappoint me as my slick cock slid along his warm cleft. His thrilled noises were half-muffled by the pillow but wholly satisfying. I placed my hand over my prick to tuck in nice and tight. It was almost like fucking a nice, tight hole... as far as I knew. I hadn't yet had the pleasure.\n\n\"Richarrrrd,\" Buddy purred, his feet pounding excitedly against the mattress. \"Mm... mmm... touch me...? P-please...\"\n\nI chuckled and withdrew a little. He took the opportunity to pop his bum up into the air, and I reached under him to grasp his cock.\n\n\"N-not that,\" he giggled. \"I w-wanted you to t-touch my...\" He gave his bottom a little wiggle.\n\n\"Ohh,\" I breathed, releasing his rigid member and settling back on my heels. Buddy was in a doggy position, and he looked luscious. God, I wanted him badly. My eyes slid down his pale, lightly freckled back to the cleft I had just been enjoying. My hands covered both of his round cheeks and gently spread them. I stared down at the tiny, unassuming pink bud on display before me and licked my lips.\n\n\"Okay,\" I whispered. \"I'm going to touch you now. Tell me if you want me to stop.\"\n\nI slid my right thumb slowly toward his little pucker. He hugged his pillow, pressing his cheek against it as he kept his bottom stuck way up for me. I heard him breathing rapidly. My thumb circled around the pink. I saw his little hole twitch excitedly. My cock throbbed.\n\n\"God, you're beautiful,\" I breathed. \"You're so fucking sexy. This gorgeous ass... I can't believe I'm allowed to touch it.\"\n\nBuddy had felt anything but gorgeous and sexy his whole life, and I therefore made sure to remind him at every opportunity that he was. He deserved to feel sexy, especially since I'd overlooked him all the years he'd crushed on me, pining from a distance throughout high school, and then at the coffee shop, gazing at me across the counter and sneaking little hearts onto my cups that I'd ignorantly failed to notice... moron that I was. No longer would I be a moron, and no longer would Buddy be overlooked.\n\nHe shivered as I continued to tease around the edge of his virgin pink pucker, and when I finally slid the pad of my thumb straight toward his centre, he made a little mewling puppy noise and jerked slightly. He was still reasonably slick from the lube I'd slathered across his cleft, and his hole felt so inviting. I continued to massage him in little circles, and could feel the tightness of his tiny ring of muscle begin to relax.\n\nOn the bedside table, one of our phones buzzed with the arrival of a text message, which went blissfully ignored.\n\n\"This feels so nice,\" I whispered. My cock was painfully rigid and leaking precum onto his sheets. \"Does it feel nice for you, button?\"\n\n\"Yuh-yuh... yyyessss!\" He sounded almost like he was sobbing. Usually I didn't hear this charmingly feeble tone until he was cumming, or on the verge.\n\n\"Buddy... I want to put my mouth on you, if you'll let me,\" I continued, unable to resist the prospect of escalating. \"If you're the least bit unsure, please say 'no'. I don't want to push you but I really would\u2014\"\n\n\"Lick it!\" he exclaimed wildly. \"Rim me, do it!\"\n\nI bit back a laugh at his unexpected enthusiasm, and growled instead. \"You're the boss,\" I murmured as I leaned down and slid my thumb aside. I continued spreading his cheeks wide and got a nice close-up look at him before kissing him softly, right on his little asshole.\n\n\"UH!\" Buddy barked. He pushed his bum back urgently against my face, tacitly begging for more.\n\nI darted my tongue out and tasted him. All I tasted at first was lube, but Buddy's reaction at that first touch of my tongue was a profoundly delicious experience. I felt his entire body writhe. He pulled in a huge gasp and pressed back against my mouth even more insistently, rooting himself to my tongue.\n\nThere was another buzzing from where our phones perched. I didn't give the merest trace of a fuck who was texting either of us right now. All I wanted in the world was Buddy's sweet ass.\n\nI obliged him by lapping at him harder and more broadly, licking all the way up his crack, and then flexing my tongue to push a little more aggressively at his hole. Buddy's breathing was frantic, and his body was very warm and beginning to sweat. He was loving this. I was loving it. I was tasting more than lube now, tasting his own intimate essence. It made me hungrier.\n\nThere was a loud pounding on the door that made us both wrench apart, gasping, and scramble for the blanket.\n\n\"Richie!\" Bernie's brusque, gravelly voice barked. \"Don't care whatchyer doin', just make yerself decent and come outside, on the double! You'll wanna come too, Bud.\"\n\nBuddy and I looked at each other, still panting. My chin was damp with lube and saliva; his freckled cheeks were scarlet. He shrugged. We heard Bernie's heavy clodhoppers retreating back down the hallway, leaving no opportunity to ask questions.\n\nI grabbed for my phone. The texts, of course, had been from him, and did not give any information but only reiterated what he'd just assaulted Buddy's bedroom door to say. I knew Buddy did a lot of paperwork for Bernie's auto repair business, but I couldn't come up with a reason why he would come specifically calling for me. I was nothing to him but the guy his late girlfriend's son was dating.\n\n\"Holy shit, what's going on?\" I huffed as I dug around to find my clothes.\n\n\"I-I-I don't know!\" Buddy stammered.\n\nI accidentally tried to put on Buddy's boxers, which only got as far as my knees, and we both burst into laughter. I found my own and quickly scrambled into the rest of my things. Buddy, too, hastily got dressed along with me. We both had to awkwardly force stiff cocks into our underpants.\n\n\"You know him better than I do,\" I pointed out. \"Did that sound like a 'something's tragically amiss' voice, a 'you're in big trouble' voice, or a 'come help me move something heavy' voice?\"\n\nAgain, Buddy shrugged. A moment later, I helped him straighten out the polo shirt he'd suddenly gotten trapped in while trying to clamber into it.\n\n\"Th-those would all kinda sound the same,\" he admitted. \"He's always been h-hhhard to read that way.\"\n\nI slapped on some deodorant, and then Buddy grabbed my hand and dragged me to the bathroom, where he thrust a washcloth, soap, and a bottle of Listerine at me.\n\nRight... I probably didn't want to go straight from trying to tongue-fuck my boyfriend to... whatever the hell Bernie had happening. While Buddy took his daily medications for asthma and anxiety, I washed up, gargled, and smoothed out my hair.\n\n\"Decent enough?\" I asked, submitting myself for Buddy's approval.\n\nHe looked me over, taking especial notice of my crotch to ensure my erection had abated enough to escape notice, and then nodded and kissed me. I likewise approved of his appearance, and combed my fingers affectionately through his red hair before we left the bathroom. He stayed by my side as we went to the back door and stepped into our shoes. I was grateful for his presence. Shy, stuttering, and anxiety-ridden as he was, Buddy was my hero, and a surprisingly dependable rock when I was insecure.\n\nWe stepped out into the sizeable rear yard, which accommodated Bernie's garage, equipment, lift, and a variety of cars and parts. Bernie was laughing his booming, boisterous laugh as he stood chatting with an unfamiliar figure, the two of them tucked beneath the open hood of a car.\n\n\"Morning!\" I called out as we approached them.\n\nThe pair straightened and turned to face us, and I saw that Bernie's companion was a middle-aged woman. She wore jeans and a cozy-looking red flannel shirt, and her hair, dark brown with wisps of grey, was tied back in a tidy ponytail. She had an easy smile and a pleasant face, her comfortable good looks undiminished by a few wrinkles and a complete lack of makeup.\n\n\"Hey, Buddy!\" she said warmly, striding over to us, her hiking boots making crunching noises on the gravel beneath them. I glanced down and saw Buddy smiling widely. He clearly recognized her, and even stepped forward to claim the hug she offered.\n\nShe came to me next, and I was surprised to find she was ready to hug me too. \"And this must be handsome Richard!\"\n\nI accepted the embrace, and couldn't help but smile. Whoever she was, she was instantly likeable. She squeezed me as if I were her own son and patted my back.\n\n\"Great to meet you, kiddo!\" she exclaimed, pulling back from the hug to take me firmly by the shoulders and have a good look at me. \"You can call me Joanna. Or just Jo. This lug nut here's my brother.\"\n\nShe jerked her head in the direction of Bernie, who rolled his eyes as he wiped his greasy hands on a rag, but he had a pleasant expression on his face.\n\n\"Nice to meet you too,\" I replied, grinning as I belatedly noticed the resemblance between Bernie and Joanna.\n\n\"Look at this face!\" she exclaimed, taking my chin in one of her callused hands and gripping it. \"You look like a young Robert Redford! Blonde hair and all.\"\n\nShe turned to her brother, still holding onto my chin. \"Don't he look like a young Robert Redford?\"\n\nBernie stuffed his rag into a pocket and flung his hands up in the air. \"I have no opinion!\"\n\nJoanna finally let go of my face, which by now had to have been turning a bit pink. She patted my burning cheek and pulled Buddy close again, slinging an arm around his shoulders. \"You've got taste, kiddo, that's for sure,\" she told him, and kissed the top of his head. He giggled and nodded in agreement, grinning widely at me.\n\n\"All right, all right,\" Bernie cut in, pretending to have zero patience for love and affection. \"Listen, Richie\u2014I've been telling Jo about yer, uh... situation.\"\n\n\"That's right,\" Joanna continued. \"I hear you're looking for a job, Rich!\"\n\nMy eyebrows went up. \"Yeah\u2014yes ma'am, I am!\" I replied, standing up straighter now and realizing that if Joanna was going to provide me a job opportunity, I ought to be on my best behaviour.\n\nJoanna smirked and gave her brother a sidelong glance. \"'Yes ma'am', he says,\" she chuckled.\n\nBernie mirrored back her smirk. \"He knows how to polish the apple. You'd better believe I got plenty of 'yessir' when he first started hangin' around here.\"\n\nMy cheeks were really burning now, and Joanna chuckled at me when she saw. She smacked me on the back in the same way her brother had a habit of doing. \"Aren't you adorable! Yeah, well, I've been looking at hiring someone, at least seasonally, but it could turn into a permanent spot, depending on a few factors. You look like you're in decent shape. Long as you're not a slacker and you don't mind working outdoors a lot, you should do all right.\"\n\n\"I love working outdoors!\" I replied enthusiastically, not much caring at this point if the job was shovelling horse shit as long as it earned me a paycheck. Still, I was curious. \"What sort of work would it be?\"\n\n\"Landscaping,\" she replied. \"If you can mow a decent lawn, I don't need many more qualifications. I can train you in the rest.\"\n\n\"That sounds fantastic!\" I exclaimed. \"Sure, I used to do tons of yard work for my parents back in the day. I'm absolutely willing to learn more!\"\n\n\"Good man\u2014good attitude! We should discuss a few more things first, though. How's everyone feel about brunch? My treat!\"\n\nJoanna took all three of us out for a fantastic brunch at a hole-in-the-wall diner that looked like a haven for greasy truckers, but turned out to have some of the best breakfast food I'd ever eaten. Even Buddy ate quite a lot, and I whispered in his ear that I was proud of him, as he usually had a difficult time eating in the morning due to side effects from his medication.\n\nI discussed my employment history and a few other matters with Joanna, and by the end of the meal I felt confident not only that I was going to have a job by next week, but also that I was now part of a family, and that latter revelation threatened to bring tears to my eyes. Traditionally I had not been an especially emotional guy, but the events that had led to my meeting Buddy and the process of falling in love with him seemed to have knocked a few things loose that didn't seem like they intended to tighten back up again. If anything, I was opening up more and more, growing profoundly in touch with my inner self. At the moment, my inner self felt deeply touched by the wholehearted acceptance of the people around this table, particularly in contrast with the rejection I'd endured from my parents upon coming out. The people who had raised me and had seemingly loved me unconditionally were unwilling to accept me as a man who loved men, but these strangers who had no reason to trust or even like me were ready to consider me one of their own.\n\nBest of all was Buddy, who seemed proud just to be by my side. He squeezed my hand from time to time. He was usually so careful about public displays of affection and didn't like to take risks, so every touch from him was extra sweet, even if no one could actually see. When he put his hand on my thigh, I was pleased as well as surprised. He looked up at me with an expression that made my heart race. It was an expression that told me he was still thinking of what we'd done in his bed this morning, and that he wanted more. The hand on my leg slid up, and I fought not to gasp when he felt out my package beneath the table and gave my cock a squeeze.",
        "Cheeky boy. Delicious, naughty boy, so riled up as to cop a feel of my junk right here in the diner, right across from the two people who were the closest thing he had to parents. Every time I thought I loved Buddy as much as humanly possible, he gave me reason to love him a little bit more. My heart raced even faster. I couldn't take my eyes off of his.\n\n\"You two!\" Joanna guffawed across the table. \"Twitterpated as all get-out!\"\n\nWe finally quit gazing at each other, and Buddy's hand surreptitiously returned to his own lap.\n\n\"S-s-sssorry,\" Buddy stammered, turning a deep shade of red that darkened his galaxies of freckles.\n\n\"Oh, don't you dare be sorry!\" Joanna exclaimed, reaching across the table to ruffle his hair. \"It's great seeing you so happy. You go on and be young and in love, and don't you mind anyone who might have a problem with that. There are too many miserable people on this planet\u2014be the joy!\"\n\nA sheepish smile found its way to Buddy's sweet lips, and he leaned over to rest his head against my shoulder. I grinned at the gesture.\n\n\"Do I get any say in this?\" Bernie griped, though I couldn't miss the amusement twitching at the corners of his mouth. He fished a few drippy slivers of ice from his water glass and tossed them at us. \"There, cold shower for ya!\"\n\nSoon the four of us were laughing as Buddy and I attempted to pitch ice missiles back at Bernie, and his sister tried to get him in a headlock.\n\nJoanna paid the bill and included a generous tip for the waitress who had patiently put up with four adults behaving like children. As we left the diner, Buddy took my hand and held onto it. It was the first time he'd done this quite so openly in public, and I felt as if my heart could burst.\n\nWhile we would have liked to cloister ourselves back in Buddy's bedroom, we didn't have the opportunity. Bernie had a number of errands for us. It was Buddy's job to keep the groceries stocked, and their fridge was emptying quickly. Our relationship had somewhat interfered with his usual responsibilities, so neither of us dared to complain about having to go grocery shopping, nor about the several other small quests Bernie asked us to complete for him in order to pick up assorted parts and tools for his business. We even looked forward to it by the time we had set out in my car, finding a certain charm in doing little everyday domestic things as a couple. I was especially glad to be out and about with my boyfriend, now that he was brave enough to hold my hand in front of people. It didn't matter whether we were at an expensive restaurant or the local hardware store; it only mattered that we were together.\n\nOur errands kept us out all afternoon, and we were starting to get hungry for dinner by the time we were in the midst of grocery shopping. We were following a list, but also loaded our cart with extra things because they looked delicious. I started feeling guilty for grabbing things off shelves\u2014this wasn't my own kitchen I was stocking, and I couldn't afford to chip in much. I didn't want to make Bernie and Buddy pay to feed me.\n\nI groaned aloud when we directed our cart into the freezer aisles.\n\n\"Don't let me anywhere near the ice cream,\" I warned.\n\nBuddy giggled and blithely ignored me, pushing me along to direct me straight toward the Ben & Jerry's. \"C-c'mon, let's... g-get some!\" he encouraged, pulling the freezer door open and grabbing my favourite flavours.\n\n\"You're gonna be the death of me!\" I chuckled. \"Really, I shouldn't.\"\n\n\"Yes you sh-shhhould!\" he pressed, waggling two pints in my face tauntingly. He smiled a particularly coy little smile, and lowered his voice: \"I'll feed you... w-with my tongue...?\"\n\nI grinned at the thought of cold ice cream kisses from Buddy, and shifted closer to him. He didn't pull away as I pressed my front against his. Would he let me kiss him, right here in the grocery store? He looked like he might... until his eyes shifted away, and he spotted something that made his smile disappear. He turned away from me and dropped his eyes, placing the ice cream in the cart.\n\nI turned my head in the direction he'd been looking, expecting some random, possibly judgemental stranger giving us the stinkeye, but my heart leaped up into my throat as I recognized the figure of my mother. She was perusing bags of frozen fruit. I didn't think she'd seen us yet.\n\n\"Buddy,\" I whispered very softly, \"that's my mom.\"\n\nHe looked up at me, his freckled brow gently creased with worry. \"I th-thought she looked f-fffamiliar.\" He swallowed and glanced at her again, and then back at me. \"We should s-say 'hi', maybe...?\"\n\nMy expression twisted. Say 'hi'? All I wanted to do was slip away to the next aisle and hope she didn't spot us. I shook my head quickly and motioned for us to move on.\n\nBuddy stopped me, grabbing my arm. \"T-talk to her,\" he whispered, his unfathomable grey-green-blue eyes taking on that stormy look of stubbornness that was so paradoxical against his bashful personality.\n\n\"I'm not ashamed,\" he added, taking my hand and lacing our fingers together. \"Are you?\"\n\nI admired the hell out of his moments of bravery. Buddy knew exactly how badly my parents had reacted when I came out to them, and here he was, willing to stand by my side before the mother who had rejected me over my sexual orientation. \"Fuck no, I'm not ashamed!\" I affirmed, squeezing his hand. \"I love you, you amazing, wonderful man.\"\n\nMy mother was walking toward us now, and I saw her pause, balking with recognition.\n\n\"Hi mom,\" I managed.\n\nHer face seemed to crumple, trying to decide on a single emotion but only collapsing under the weight of all of them at once. \"Hi Richie,\" she said softly, rolling her cart closer to ours. I watched her eyes flick over Buddy with almost morbid fascination. \"How've things been?\"\n\n\"They were pretty awful for a little while,\" I said honestly. \"But just lately... absolutely phenomenal. It's true that sometimes you need to hit rock bottom before things really start to turn up.\"\n\nHer eyebrows went up. She looked as if she wanted to express some politely positive emotion in response to my happiness, but couldn't quite manage it. If she suspected she was an instrumental part of my \"rock bottom\", she would have been right, and I couldn't blame her for feeling crappy about that. In fact, I sort of hoped she'd been feeling crappy. I didn't want to be the only one who had suffered over our last conversation.\n\n\"I should introduce you to my boyfriend,\" I continued. I could hear my own voice growing more confident. I stared straight into her wide eyes and did not waver. \"Mom, this is Buddy. Buddy... my mother.\"\n\nMom stared at him in wonderment. She seemed to melt a little. For this I didn't blame her either\u2014Buddy was pretty disarming, standing barely up to my shoulder, scrawny and boyish, covered in freckles, with wild ginger hair and a cute snub nose that made me think of Peter Pan. I don't know what she'd expected her son's boyfriend to look like\u2014some ripped pornstar type, or a loud-and-proud diva covered in rainbows?\u2014but Buddy certainly appeared to be a surprise to her.\n\n\"Hi,\" Buddy said softly. \"H-hi... Mrs. C-C-Callahan.\"\n\nHe extended the hand that wasn't holding mine, and my mom slowly reached out to take it, giving him a little shake. She seemed very cautious now, and I wondered if it was because of his stutter. I could have told her he always stuttered, but the idea that she might be worrying she was scaring him half to death sort of amused me.\n\n\"Hello... Buddy,\" my mother said, and an actual smile spread across her face. She cocked her head, studying him very closely. \"You look familiar. Where have I seen you before?\"\n\n\"Oh... um... c-coffee shop!\" he replied, grinning sheepishly. He looked up at me and giggled, jostling me with his hip. \"Years I wait for you to n-nnotice I'm alive... and your m-mom r-remembers me after s-s-ssseeing me just... once?\"\n\n\"I know, I'm an idiot!\" I sighed, pouting at him melodramatically. \"My mom may have given me her eyes, but the observational skills didn't come with them.\"\n\nMy mom bit down on her lower lip, looking almost amused.\n\n\"Hm... um...,\" Buddy stammered, glancing between the two of us, and then down at the crumpled grocery list Bernie had given us. \"Oh, I... f-ffforgot... laundry soap. I'll be b-back in a minute.\"\n\nHe flashed me a quick smile and then withdrew his hand from mine and retreated from the freezer aisle. I grinned after him. Smart little guy, feeling out a perfect moment for me to have a bit of time alone with my mother, and picking a task that would take him all the way across the store.\n\n\"He's a sweetheart,\" I said, returning my attention to mom.\n\n\"Seems to be,\" she agreed. Her eyes dropped for a few moments, and when they returned to mine, they were full of tears. \"Honey... it's been terrible since we fought. I can hardly sleep through the night. I've been thinking about the whole thing, constantly, reading my Bible, praying... trying to reconcile my faith with my love for my son.\"\n\nI nodded slowly, keeping my expression neutral. \"Come to any conclusions?\"\n\n\"I didn't think so. But I started having... doubts. There are so many different people that have so many different things to say about God's position on homosexuality. I always thought it was a clear-cut issue, but... I'm just not sure anymore. And if I'm not sure... well, what right do I have to use it as a reason to keep me from my own sweet baby boy?\" She sniffed and pulled a Kleenex out of her purse. \"I'm sorry, Richie. I need to tell you I'm sorry. I think the only reason I couldn't handle this was because I was scared. I was scared for you, for our family... scared of something I didn't really understand. But now that I see you with your... your Buddy... I don't feel that there's anything to be afraid of anymore.\"\n\nShe smiled through her tears, and I stepped forward to pull her into a hug. She squeezed me tightly, shaking with emotion. I might not have agreed with her religious proclivities, but she had obviously been embroiled in a real struggle. She had suffered enough\u2014I wanted peace. I wanted family.\n\n\"I'm so sorry,\" she whispered.\n\n\"I forgive you.\"\n\n\"Thank you, honey.\" She pulled back and gave me a bleary smile. \"I'm still not sure of much... and your dad's not likely to come around... but Richie, I want you to be happy. I didn't think I could be happy for you, but... I am. I really am.\"\n\nI still had a lot of mixed feelings, but this was progress, and I was ready to accept what was offered. \"That's great, mom. I'm glad you've been able to shift a little. It was a really horrible feeling, losing my family because of... love.\"\n\n\"I don't want to lose you. I'm going to do my best to understand. And this Buddy... gosh, he's a cutie, isn't he?\" She smiled and wiped her face with the crumpled Kleenex. Bit by bit, the uncertainty was leaving her expression.\n\n\"He is,\" I chuckled, feeling a little flutter in the pit of my stomach. \"He's the cutest! Mom, I love him\u2014he's incredible!\"\n\nShe held her hands to her heart and laughed. \"I've never seen you like this before!\" she marvelled. \"I think I like it.\"\n\nBuddy returned lugging a great big jug of laundry soap, and I helped him heave it into the cart. My mom beamed at him.\n\n\"Buddy... I truly am glad to see my son looking so happy. You must be taking good care of him.\"\n\nBuddy blushed and grinned back at her, clinging bashfully to my side. \"W-well... he t-takes such... good c-c-care of me.\"\n\nAfter a few more minutes of pleasant chat, we all had to get moving, wary of our cold groceries getting too warm. My mother hugged both of us before she went on her way, which made Buddy smile especially brightly.\n\nI felt bad about the Ben & Jerry's again and tried to put it back, but Buddy insisted I must have it, that he wanted to spoil me. In the end, I couldn't refuse him.\n\nJoanna stuck around for dinner, and it seemed like she planned to stay the evening as well. While Buddy and I took care of the dishes and finished putting groceries away, Bernie and his sister settled in front of the TV. I heard them talking loudly about a hockey game.\n\nI couldn't help staring at Buddy's cute little round ass as he bent over to grab things out of grocery bags and load them into cupboards. When he looked around and caught me ogling him, he reddened and grinned.\n\n\"You looking at... at my butt?\" he whispered, letting his eyes slide down my body. They paused halfway.\n\n\"You looking at my package?\" I retorted, winking. It was clear we were both thinking back to what we'd been up to this morning, both thinking about picking up where we'd left off.\n\nI edged closer to him, and he moved up to meet me in the middle of the kitchen. He hooked his fingers through the belt loops of my jeans to keep me close to him as he inclined his head to beg me tacitly for a kiss. As our lips met I felt him pull harder on my jeans. His breathing intensified. Buddy the Beast had made a sudden appearance. Usually he was so careful when anyone, even if it was only Bernie, was in the house, but sometimes he just turned recklessly ravenous, and I adored these moments.\n\nHe began to push me with his skinny little body, and I let him, backing up until I was hard up against the refrigerator. I widened my stance and slid down until my hips were level with his\u2014ever since the day we'd first become an item, the day he'd passionately dry humped me in the bathroom of the coffee shop where he worked, this had become an automatic thing for me every time he shoved me against a wall. I wanted to feel his little bulge grinding against mine.\n\nBernie's heavy plodding footsteps in the hallways were impossible to mistake. Buddy tore himself away from me just as he entered the kitchen, though Bernie still flinched when he saw us there, red-cheeked and breathless.\n\n\"You boys!\" he grumbled, rolling his eyes dramatically. \"I'm gonna have to start keeping spray bottles fulla' water around here.\"\n\nHe mimed a trigger motion, complete with spritzing sound effects, as if we were a pair of cats he was trying to keep from jumping up onto the kitchen counter.\n\n\"S-s-s-sorry!\" Buddy forced out from behind his hands.\n\nBernie grabbed him in an embrace that was halfway between a hug and a headlock, and ruffled his hair aggressively. \"Now listen, you,\" he said, turning Buddy to face him. He glanced my way and beckoned me over. \"You too, Richie.\"\n\nCurious, I drifted over and stood next to Buddy. Bernie placed a thick hand on each of our shoulders.\n\n\"I'm alright with you guys, okay?\" he said gruffly. The look on his face suggested it was taking a lot of effort for him to say what he wanted to say at the moment. \"I give y'a hard time, but it's bluster, yunno? I like you both fine, and what y' got goin', it's... well, it's good. Good stuff.\"\n\nBuddy and I both smiled gratefully, but cautiously. We could sense there was a \"but\" ahead.\n\n\"Listen,\" Bernie continued, \"I got some hockey buddies comin' over to watch the game. I'm not gonna ask you to pretend like yer just pals\u2014that'd make me an asshole, and I know it. But I just wanted you both to be... aware.\"\n\nBuddy and I glanced at each other. We hadn't even paused to wonder why Bernie had had us pick up four bags of chips and two cases of beer on top of the regular groceries.\n\n\"So...\" I hesitated. \"So these hockey friends of yours... they don't already know Buddy's gay? And... you think they might not react well to a couple of dudes being cuddly around the house?\"\n\nBernie let go of our shoulders and ran his hands over his bald head as he leaned back against the counter. \"I dunno, really. Some shit just don't come up with friendships that're mainly about sports. For all I know none of 'em will give a crap, but on the other hand, they might be homophobes.\"\n\nIt took me a few moments to process this, but I could feel Buddy bristling next to me.\n\n\"I get it!\" he snapped, crossing his arms stiffly. \"Suh-suh-sssweep us under the rug for your huh-homophobe friends... so you can enjoy your t-t-t... testosterone fest in peace?\"\n\n\"Buddy\u2014for fuck's sake, I didn't mean that!\" Bernie exclaimed, reddening. \"I don't want you to disappear. In fact, I'd love y' both to watch the game with us. I'm just saying, I dunno what they're gonna think. I dunno! I thought you should be... forewarned.\"\n\n\"About b-bigotry in my own home?\" Buddy charged onward, his whole body rigid with anger. \"I thought you... supported me!\"\n\n\"I do!\"\n\n\"But you'll... you'll... have friends who are anti-gay? And welcome them in your home? Our home?\"\n\nBernie was flustered and very flushed now, looking caught between embarrassment and exasperation. \"Well shit, boy, maybe you've forgot how much we both loved your ma, regardless\u2014!\"\n\nBuddy dropped his arms and flinched back. I held my breath, watching him react. I knew Buddy's mother hadn't spoken kindly of gays, and that he'd kept his secret from her right up through her dying day. I felt my heart sink as his eyes grew shiny with tears.\n\nBuddy clenched his jaw, sniffed sharply, and turned to flee the kitchen. A moment later, we heard his door slam.\n\n\"Shee-yit,\" Bernie muttered, pacing back and forth slowly. \"He's a tender kid. I shouldn't a' brought up his ma.\"\n\n\"Hm,\" I mumbled, plopping into a chair next to the dinner table. Although I wanted to go and comfort Buddy, I also knew that excessively coddling him wouldn't help him. Moreover, I actually felt sorry for Bernie. He had never been a dad, and had never asked to be, but he'd been open-heartedly looking after Buddy for years even though he obviously had limited capacity for dealing with sensitive people.\n\nJoanna ventured up the hallway and poked her head into the kitchen, frowning. \"You guys okay?\"\n\nBernie nodded and waved her away with a waggle of his arm. She looked exasperated, but returned to the television.\n\nI sighed and looked up at Bernie, curious. \"Did you know Buddy was gay, when his mom was alive?\"\n\nHe rubbed his chin, his callused fingers making a faint scraping noise against his stubble. \"I had my suspicions, but I didn't really know 'til later. I think it was a subject we all tried to avoid.\" He looked back at me, conflicted. \"You ever just completely avoid certain things with yer friends, 'cause there are some things you don't really wanna know?\"\n\nI nodded. \"I pretty much lost all my friends when I came out. It sucked. But I think it was my fault for choosing idiots for friends. I just wanted to fit in. But that's high school. Good riddance.\"\n\n\"Yeh. I'm fuckin' forty years old\u2014I don't want none o' that drama bullshit.\"\n\nI chewed on my bottom lip as I mulled a few things over. \"Maybe Buddy might feel differently... but I don't think I actually care if any of your friends don't like that I'm dating him, so long as they don't give us any trouble.\"\n\nBernie shrugged. \"Not like they'd try to beat ya with a shovel or somethin'. They're not like that. They're good guys, with families. If any of 'em make smartass comments about gays, I don't mind giving 'em a piece of my mind. But I'm not gonna kick 'em outta my house for disagreeing with me. For disrespect, though, that's different. I'd draw a line at name-calling. Respect is non-negotiable.\"\n\nI nodded and pushed myself out of the chair. \"I think that's fair. Respect, really, is all I need from most people, regardless of their beliefs. I only wish people who 'disagree' with my sexuality would be a bit less like my dad, who thinks it's okay to equate me with pedophiles.\"\n\nBernie exhaled noisily through partially pursed lips. \"Well. That ain't right.\"\n\nI shook my head slowly.\n\n\"Say... you feel like talkin' to Buddy for me? We been through a lot together, that kid and me, but you've got that soft touch that just don't come natural to me.\"\n\nI agreed to this, and turned to leave the kitchen.\n\n\"Richie!\" he called after me. When I glanced back, he continued soberly: \"Yer a good kid. And a smart cookie.\"",
        "\"Oh... thanks,\" I chuckled, giving him a lopsided smile.\n\n\"I really would like to have the both o' you join us for the game. If Buddy feels up to it.\"\n\nBuddy didn't answer when I first knocked. When I told him it was just me, he made some kind of muffled noise that I decided to take as an invitation to enter. I locked the door behind me.\n\nBuddy was curled up tightly on his bed, facing the wall and hugging a pillow. I crawled in behind him and cuddled up close to his trembling little body.\n\n\"Please,\" I whispered against his soft hair, \"tell me why you're crying, button.\"\n\nBuddy sobbed and whimpered. I heard him swallow noisily, and make some vague guttural noises that I recognized as him struggling to form words. It was difficult enough for him when he wasn't crying. He gave up, and did not answer.\n\n\"Is it because Bernie's a great big butthead?\" I ventured, hoping an attempt at levity would not go awry.\n\nA short, staccato chuckle broke through Buddy's tears. \"Mm... n-no.\"\n\nI coaxed and cuddled him a while longer until he had calmed and was better able to speak. I shut off the light to help him. He always stuttered a lot less in the dark. He whispered to me about his mother, how she had been everything to him, and how he punished himself for ever thinking ill of her. He never doubted she loved him, even when she was on drugs and couldn't take care of him. He loved her, even when she made disparaging comments about \"the gays\", even when he had to lie about who he was. He loved her because she was his mother, and she was dying. He loved her because she'd been his safe place and his comfort when he was wracked with anxiety and bullied at school. He loved her because she'd stubbornly fought off cancer long enough to see him graduate high school. When she was gone, he hated himself, because some part of him was relieved, and not only because of her suffering.\n\n\"I feel sick,\" he breathed, \"when I think about... how things would have gone... had she lived, and I'd had to tell her the truth of who I was. Me and her and Bernie, we were a family. For a little while, things were so close to perfect. But if I'd told... don't you see how it would have torn us all apart? She would have been so, so disappointed in me. I would have been so hurt. And poor Bernie... would be caught in the middle, wanting to defend both of us. No more happy family. All the good... soured. It's like... she left while we were all ahead. And I feel disgusting when I think that's for the best.\"\n\nI squeezed him more firmly against me. My hand pressed against his and felt a warm throbbing pulse wherever it touched\u2014his, or mine, or perhaps our hearts were beating together.\n\n\"You have to stop being so hard on yourself,\" I spoke up after a lengthy pause. \"These things are always... emotionally complicated. You can't blame yourself for your feelings, or for thoughts that just pop into your head. You've endured so much, Buddy, and it's difficult for anyone to have to face the worst flaws of the people they love. At the end of the day, whether you love her or hate her or feel some crazy mix of things about her... you're allowed. You're still a good person. So was she. She had to have been, to have raised you to be such a sweet and caring person. And what might have been doesn't matter. What you have now matters. I love you, Buddy, and Bernie does too.\"\n\n\"I know,\" he mumbled, and broke off sobbing and shaking again.\n\nI held him and stroked his hair, letting him get his emotions out. I'd done plenty of reading online lately about anxiety disorders, and I knew that telling him to calm down or get over his feelings would only make things worse.\n\n\"Buddy,\" I whispered, \"I'm gonna go get some of that ice cream, okay?\"\n\nHe nodded, and I popped up to go grab a pint of Ben & Jerry's from the freezer, and a single spoon. As I was walking back to Buddy's room, I could hear unfamiliar voices in the living room, and knew some of Bernie's friends had arrived.\n\nI settled back in with Buddy, lights on this time, and coaxed him to sit up. I fed him a great big spoonful, and at last he smiled around a mouthful of ice cream, cookie dough, and gooey brownie, despite the tears still rimming his eyes and matting his lashes. I leaned in to kiss him, and, true to his word in the grocery store about feeding me with his tongue, he passed the whole mouthful to me. We both laughed and fought not to dribble on Buddy's sheets as we continued goofing off and abusing the ice cream.\n\nWe finished most of the pint by the time we'd descended to purely making out and grinding a little in Buddy's bed. I could hear guys\u2014and Joanna\u2014yelling at the television down the hall. Buddy broke our kiss, panting.\n\n\"I d-don't wanna do stuff... while people are over!\" he gasped, rolling off of me and straightening his clothes.\n\n\"That's fine,\" I sighed, awkwardly adjusting my stiffening cock beneath my jeans. I figured we were pretty safe from interruptions while the game was on, but Buddy was paranoid about doing anything sexual even when it was just Bernie in the house. I supposed I couldn't blame him. He had a lot of trouble controlling his volume when he was being pleasured. I smiled at the thought.\n\n\"Th-thank you... for respecting me,\" he said in a soft, almost sheepish tone.\n\n\"Respect. Ah... respect is non-negotiable. That's what Bernie said to me earlier. Good policy.\" I paused, looking seriously at him and taking one of his hands between mine. \"You know he'll expect his friends to be respectful... right? We could go out there and say hello, watch some of the hockey game...\"\n\nBuddy cringed. \"I... I was... rude. I know I c-can't expect him to kick anyone out of his life who isn't... pro-gay. I mean... my mom. Point taken.\"\n\n\"Well, I don't think he's very happy with himself for bringing up such a sensitive subject the way he did.\"\n\n\"Richard... I d-don't know if I can go out there. I'm scared.\"\n\n\"Of Bernie's friends? You know them, don't you? They've all been around here before, haven't they?\"\n\n\"Yeah, but... not when...\"\n\n\"...When you've had a boyfriend?\"\n\nHe nodded, and hung his head. \"P-please don't think I'm ashamed.\"\n\n\"I don't. You're allowed to be scared. Coming out can be really fucking terrifying. It's up to you, okay, Bud? I'd like to watch the game, but I don't mind chilling in here with you. Or we could just go out there as friends. I won't be hurt if you're more comfortable that way for now. You've already taken so many brave steps with me today. One at a time, right?\"\n\nHe shut his eyes for a few moments, gravely considering his options. When they popped back open again, he looked both determined and guilty. \"O-okay. We'll go. I'll say... I'll... I'll say you're my friend. Okay?\"\n\n\"Sure thing, Buddy-boy.\" I tousled his hair. \"Don't feel bad, okay? I really don't mind!\"\n\nHe sighed and hugged me one last time. \"You're s-s-ssso much more than I deserve.\"\n\n\"Nonsense.\"\n\nI let Buddy go on ahead while I put the remaining ice cream back in the freezer. When I ventured into the living room, it was just in time for a commercial break. He was busy stuttering his way through standard small talk with Bernie's hockey buddies, four guys around Bernie's age. Their eyes flicked up to me with curiosity when I entered, hands casually in my pockets.\n\nBuddy turned to face me, and his expression brightened. There was something in his eyes that flooded my chest with warmth. I felt a spark pass between us, as if we were seeing each other for the first time and falling head-over-heels in love all over again. I was pulled back in time to the first few days of our relationship, walking into the coffee shop to see him looking at me with that exact expression across the counter, ready to write my name on my cup with a little heart above the \"i\". I was so smitten with him, I couldn't breathe for several moments.\n\n\"This is Richard,\" Buddy blurted out in a loud, clear voice, without stammering for even a moment. His mouth stretched into a delighted smile. \"My boyfriend!\"\n\nI was so touched by his unexpected surge of bravery, I must have looked like a complete moron as I grinned back at him. I pulled one hand out of my pocket in time for him to squeeze up to my side, letting my arm naturally settle around him. I was proud as hell to be beside him in this moment.\n\nOnce I could tear my eyes away from the gorgeous little guy winding his arm around my waist, I looked around the room to gauge the reactions of Bernie's friends. At first, I wasn't sure what to make of the four blank expressions turned our way.\n\n\"Don't he look like a young Robert Redford?\" Joanna exclaimed into the silence. \"A mustache and another decade on him, he's the Sundance Kid!\"\n\n\"Dammit, Jo, cut that out!\" Bernie bellowed, whipping a pretzel at her. \"Yer embarrassin' the boy! Quit bein' a creep!\"\n\nJo deflected the snack missile with her beer bottle and flung a pillow at him. Soon the whole room was in an uproar of laughter, punctuated by good-natured argument as to whether or not I bore significant resemblance to Redford's Sundance Kid.\n\n\"Well, good to meet you Richard,\" one of the guys said once the noise had calmed down. He seemed genuinely friendly, and two others uttered polite greetings. The fourth seemed more interested in the Skittles commercial on TV than anything else at the moment. I was happy enough to accept apathy. It was far better than hostility.\n\n\"Well, are Butch and Sundance gonna join us for the rest of the game?\" Bernie wondered, smirking in our direction and tossing us the pillow his sister had thrown at him.\n\nI looked to Buddy, and he smiled and nodded. Every seat in the living room was taken, but several more pillows were tossed our way. We made ourselves comfortable in front of the coffee table, and for the rest of the evening we were just guys. Buddy even accepted a beer, though he could barely finish half the bottle. I finished mine, and his.\n\nBuddy and I retired to his bedroom once the game was over, and cuddled in the dark as we listened to the noise down the hall of the guys and Jo continuing to shoot the shit, and then eventually depart. I heard Bernie put some things away in the kitchen, and then head to bed.\n\n\"Sweet cheeks,\" I whispered. I was growing hard against his cute butt, having been anticipating a continuation of our morning's exploration all day long. \"Hey, little cowboy. I'm so proud of you. And I want you so fucking much.\"\n\nBuddy did not answer. I listened to his deep, even breathing. He'd already fallen asleep. I sighed softly and willed my hard-on to calm down. We could both wait till morning.\n\n* * * * * * * * * *\n\n* * * * * * * * * *\n\nBuddy woke before I did. I must have been deeply asleep, because he was already naked and working at undressing me when I returned to consciousness.\n\n\"Hey,\" I mumbled hazily, \"you trying to molest me in my sleep?\"\n\n\"Yup. But... n-now you're awake. So... awake molesting.\"\n\n\"I'd prefer that,\" I chuckled, and squirmed around the bed to help him pull off my boxers. Buddy seemed to have awoken in Beast mode, and it certainly made for a fantastic morning.\n\n\"I'm so... so... horny,\" he huffed, flinging my clothes across the room. \"And so are you.\"\n\n\"Fuck!\" I blurted out as he grabbed hold of my admittedly impressive morning wood and stroked it firmly. I was suddenly much more awake. \"Bernie?\"\n\n\"Garage.\"\n\n\"Good!\" I sat up and pushed him face down onto the bed. \"You want to continue where we left off yesterday?\"\n\n\"Yes, yes!\" he exclaimed, gamely popping his ass up into the air.\n\n\"Mmm... that is one fine-lookin' behind you've got there, Butch,\" I drawled.\n\n\"All yours... Sundance,\" he giggled, wiggling a little to tempt me further.\n\nI kissed both of his round cheeks, and then the tender apex of his cleft. He sighed and hugged his pillow. I spread him wide and licked a steady line downward until I reached his sweet little opening, which was already more relaxed than when we'd started out yesterday. I massaged his sensitive pucker slowly with my tongue, and his moans were beautiful music to me.\n\n\"More,\" he groaned, pressing back against my mouth. \"In... in.\"\n\nI poked my tongue firmly against his asshole and began to prod in earnest, working my way in. I felt his ring relax a little more, and I pushed through, shoving my tongue as deep into him as I could.\n\n\"Ohhh Richard!\" he wailed. \"Ohhh your tongue! Oh yes, oh yes, make love to me with your mouth!\"\n\nI did as he commanded, though I wished he would use the word \"fuck\". It was a challenge to get any dirty words out of Buddy. Perhaps it was for the best that he was reluctant at this phase\u2014if he'd suddenly begged me to fuck him, I'd be so turned on by the mere words that I might bust a nut before I even got halfway to pointing my cock at him.\n\nI slid my tongue in and out of him until it ached with the strain of overwork, but I powered through, enjoying myself\u2014and Buddy's cries\u2014far too much to let my body crap out on me.\n\nI had been too absorbed in feasting on him to notice he was reaching for the lube, but all of a sudden I felt the bottle pressing insistently against my knee. I pulled back and took a minute to catch my breath. Buddy rolled over onto his back. A deep flush had spread from his cheeks all the way down his neck and even his chest. There was a sheen of sweat across his face. His eyes blazed up at me, blue and green and grey all at once, looking like a storm at sea. When I didn't immediately pick up the lube bottle, he grabbed it again and pressed it against my chest until I took it from him, chuckling.\n\n\"Tell me what you want, button,\" I encouraged, my voice shaking a little. I wasn't sure exactly where this was going to go, but I knew where I hoped it would.\n\n\"Finger... two fingers!\" he demanded, settling back and spreading his legs wide.\n\n\"Two, right away? You're sure?\"\n\n\"Richarrrd!\" he wailed.\n\nI laughed and squeezed out a generous amount of lube. The way he got impatient and pushy with me when he was horny was one of my favourite things about him. I settled down and placed the well-lubricated pad of my middle finger against the hungry orifice that was already slick and partially relaxed from the labours of my tongue. I massaged him in little circles, and then began to press in with my middle and index fingers together.\n\n\"Ohh... whoa,\" I whispered. At first it didn't seem like my fingers would fit, but I pressed a little more firmly with some encouragement from Buddy, and then, gradually, I felt his snug passage relax and admit my fingers all the way inside. He gasped and twisted the sheets beneath him in desperate handfuls.\n\n\"Does it hurt?\" I asked.\n\nHe looked like he didn't know how to answer the question. \"Not in a bad way!\" he decided after a few moments' hesitation. He took several deep, slow breaths. \"Now... move a little.\"\n\nI started to gently move my fingers in and out of him, carefully thrusting as I kept my eyes fixed on his, drinking in his enjoyment. The tight embrace of his inner muscles around my fingers was the most astonishingly pleasing sensation. I didn't realize how hard I was breathing, and I had even forgotten my cock for the time being.\n\n\"Like this,\" Buddy panted, making a beckoning motion with his fingers.\n\nI curled my fingers the way he showed me, as if trying to tickle his bellybutton from the inside, and I felt my fingertips press against a spongy swelling that I quickly realized was his prostate. Buddy pulled in a sharp breath and nearly leaped right up off the mattress.\n\n\"THERE, yes!\" he yelped, grabbing my forearm and keeping a tight hold on it as if to prevent me from pulling out. He looked enraptured, and I could scarcely believe the subtle press of my fingertips could have such a profound effect. I continued rubbing his prostate, and stroked his rigid little cock with my free hand. When I wasn't watching his rapt expression, I looked down at his excited prick, which was drooling an almost continuous stream of precum. He looked like he was close to an earth-shattering climax.\n\n\"Stop!\" he exclaimed suddenly, his fingernails digging into my arm.\n\nStartled, I froze. \"Buddy... did I hurt you?\"\n\nHe shook his head and grinned dreamily, gasping for breath. \"No, no, not at all! So good, Richard, oh... so good! Just... so intense. Take a break.\"\n\nI pulled my fingers free of him very slowly and stretched out beside him, soaking up the cozy heat his body was radiating. \"God, you're gorgeous,\" I whispered. \"I'll do that for you anytime. You're so hot when you're turned on. I wanna make you cum.\"\n\nHe kissed me fervently, locking his skinny arms around my neck and plunging his tongue into my mouth. After making out with me for a few minutes, he pulled back and looked me in the eyes. \"Richard, I want to make you cum too. I want to feel it. I want to feel it inside me. I want you inside... your cock inside me, Richard. Please, I'm ready!\"\n\nI groaned and squeezed him tightly. I didn't ask if he was sure. My cock was aching to get inside that hot, snug little hole that I'd been fucking with my tongue and fingers. Remembering the pink dildo in his bedside drawer, I believed him when he said he was ready. I believed he had been preparing himself for this even before we'd ever spoken a word to one another. The thought of him fantasizing about me while he fucked himself with a dildo was incredibly sexy.\n\nI crawled between his thighs and pushed them upward. Buddy grabbed them and held them for me, leaving my hands free. I slid one beneath his cute bottom, and used the other to point my rigid cock at his well-prepared hole.\n\n\"I've been imagining this moment,\" I whispered tremulously, hesitating now that I was right here, on the brink. I wanted to savour this. Or perhaps I just wanted to tease him, and force him to yell at me.\n\nBuddy breathed as rapidly as a little puppy, waiting for me to properly pop his cherry. \"Stop imagining and do it!\" he burst out, grimacing with need.\n\nI grinned wickedly. \"Do what, Buddy-boy?\" I whispered.\n\nHe whined and squirmed beneath me. \"Richarrrrrd!\" he growled. \"PUT your COCK in me, NOW!\"\n\nA shudder rippled through me. I leaned in and pressed the dripping, scarlet-tipped head of my steel-hard cock against his waiting asshole. I fixed my eyes on his and pressed a little more firmly. It was going to be a tight squeeze. Buddy let go of his thighs so he could wrap his legs around me. Just when I was worried about hurting him, his heels dug into my bottom, encouraging me to push harder still.\n\n\"Go on!\" he wheedled. \"I can take it!\"\n\nI smiled gratefully at his encouragement. He was tugging anxiously at his hair. I grabbed his hands in mine and laced our fingers together, holding his arms above his head. I gave one sharp thrust, and felt my head pop through his ring all at once. We gasped in unison. His ass was so, so tight around my cock. Buddy's jaw fell open, and his mouth widened into a huge smile. His eyes glimmered with gathering tears. My chest felt like it might burst with the swelling warmth that was gathering there. Every beat of my heart was calling his name, and pulsing down through my body, through the swollen organ that was stretching his beautiful ass so wide.\n\n\"Richard!\" he whimpered. \"Love you so much!\"\n\n\"I love you, button.\"\n\nI leaned down over him and slowly licked the salty flesh of his face and neck. He moaned and sighed, and I could feel his inner passage relaxing a little around the broad head of my cock. He prodded me again with his heels, and I pushed in a little further, slowly sliding more and more of my hard shaft inside him.\n\n\"God!\" I groaned against his neck. \"Buddy... fuck... you feel so fucking amazing! Oh, your sweet little ass is squeezing me so tight!\"\n\nBuddy spluttered something incoherent, but I knew he wanted more of what I was giving him. His legs hugged my waist, and I started rocking my hips steadily, grinding more than thrusting. I could feel his small but very hard prick pressed between our bellies, and my lush crop of pubic hair was tickling his tight balls. I squeezed his hands; he squeezed back, and squeezed his inner muscles at the same time, clamping down deliciously on my cock.",
        "\"Ohh!\" I groaned.\n\nBuddy began to instinctively roll his hips in time with mine. The sensation was mind-blowing. We moved like a single organism, panting, sweating, moaning, sighing. It was hypnotic, practically intoxicating. It was quite some time before Buddy pushed me to change things up. He released the grip of his legs around my waist and pulled his hands free of mine. I sat back on my heels and took several deep breaths, gazing down at his flushed, perspiring body, dotted here and there with little crops of freckles.\n\n\"Grab my legs, hold them!\" he urged, sticking his legs up in the air. \"Take me, do me real hard now. Hard! I need it!\"\n\n\"You horny little beast,\" I snarled. My heart thundered at his demands. I gripped his slender thighs in my strong hands and gave him a saucy grin before pulling almost all the way out, and slamming back in, balls deep. Buddy grunted loudly. He stretched his arms up and braced his hands against the headboard. He nodded rapidly, encouraging me to continue. I thrust again, and again, steadily faster and faster. The slap of my balls against his ass was incredible, both the sensation and the noise. When I really started to pick up the pace, the mattress squeaked frantically, making me smile.\n\n\"Yes, Richard, oh, yes!\" Buddy cried out. \"Oh, harder!\"\n\n\"You want me to fuck you, bad boy?\" I growled. \"That what you want? A good, hard fuck?\"\n\n\"Yes! Yes!\"\n\n\"Tell me! Tell me what you want!\"\n\n\"Want... Richard... your cock...\"\n\n\"Say it!\"\n\n\"F...\"\n\n\"SAY IT!\"\n\nBuddy furrowed his brow and drew a mighty breath. \"FUCK me!\"\n\nThere it was, at last. Buddy's first f-bomb. I moaned with delight and squeezed his thighs, pulling his body right up off the mattress and pounding into him hard and fast. His ass was exquisite, gripping my cock every time I entered him, coaxing, squeezing, wanting my cum. His little body was so small beneath mine, so light, just a cute little boyish creature, but he was so entirely in control. I was nearly sent over the edge in seconds, but by a tremendous force of will I managed to hold off, determined to give Buddy the good, hard fuck he was begging for, the fuck we'd both needed so badly.\n\n\"FUCK me, Richard!\" he demanded, looking very pleased with himself. \"Fuck me harder! Harder!\"\n\nSweat rolled down my face. This was the most challenging workout I'd had in years, and by far the most rewarding. I hammered into him so feverishly, I was surprised I wasn't hurting him. He took my huge cock like a champ, and continued to shout encouragements at me. I fucked him so frantically, the bed frame itself was beginning to shudder and slam against the wall. Every thrust was a glorious grunting, bellowing, creaking, thumping cacophony.\n\n\"Fuck, yeah!\" I cried out, feeling like a god.\n\n\"YEAH!\" he echoed back, working his ass like a pro.\n\n\"Fuck! Buddy! I'm gonna cum!\"\n\n\"YES! Cum in me! Fill me up!\"\n\nI slammed into him rapidly as the ecstasy rose up in me, overflowing in a climax so heavenly, my eyes rolled back, and I roared at the ceiling, gripping Buddy's thighs desperately to hold him in place as I flooded his newly deflowered ass with my seed in several powerful gouts. My voice died away into a pathetic whimper as the strength began to seep out of me. I released his legs, and they dropped to either side. I couldn't even see straight as I sank down overtop of his scorching body, but immediately as our fronts connected I knew he had cum, and copiously. I had landed in a very large, very warm puddle of something that definitely wasn't sweat.\n\n\"R-Richard!\" he wailed, wrapping all four of his limbs around me. He was crying; I had fucked him to tears. \"Richarrrd... ohh... thank you!\"\n\n\"Fffuuuuck,\" I moaned into his shoulder. \"That... was... incredible!\"\n\nWe both babbled away for a few more minutes as we cuddled through the sweet afterglow of our first fuck, reiterating how much we loved each other, and how amazing the sex had been. Finally, we wiped off with some dirty clothes and peeled ourselves away from the damp bed, agreeing we needed a shower posthaste. Buddy grabbed two clean towels, and we wrapped them around our waists. I paused at the door before leaving his bedroom.\n\n\"Um... you said Bernie was in the garage... right?\" I whispered, only now coming to the full realization of just how much of a racket we'd made. \"Not... in the house?\"\n\nBuddy's eyes widened. \"Yeah. I mean... I thought...\" The flush that had left his cheeks now started to return. \"Oh... oh dear. I'm not... a hundred percent sure.\"\n\nHe squeezed my hand as we ventured out into the hallway. As we passed by the kitchen door on our way to the bathroom, we peeked in hesitantly and, to our mutual dismay, saw Bernie, sitting there at the table with a large cup of coffee and trying very hard to concentrate on the newspaper in front of him.\n\n\"Uhhh...!\" I gaped, wondering if I should apologize.\n\nBernie glanced over at us. His eyebrows went up. Abruptly, he let go of his coffee cup to give us a hearty round of applause.\n\n\"Oh,\" Buddy squeaked out, covering his eyes with his hands. \"Shhh...it.\"\n\nBernie burst into loud, barking laughter at Buddy's stammered curse. I couldn't help but join him. It was still such a novelty to hear Buddy utter any swear word. After a few moments, during which I was a little worried Buddy might burst into tears of embarrassment, he finally pressed his face against my chest and started giggling along with us. I pulled him along to the bathroom, and the sound of Bernie's enthusiastic applause and congratulatory hooting followed us down the hallway."
    ],
    "authorname": "tamgreen",
    "tags": [
        "gay romance",
        "romance",
        "gay love story",
        "love story",
        "gay drama",
        "drama",
        "gay anal",
        "rimming",
        "anal first time",
        "twink"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/sugar-heart-ch-05"
}