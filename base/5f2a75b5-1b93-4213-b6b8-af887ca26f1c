{
    "title": "How to Help a Sexual Assault Victim",
    "pages": [
        "When I was in college, a girlfriend confided in me that she had been raped\u2014by her boyfriend. It's hard, sometimes, to know what to do in situations like this, when someone you care about is in a lot of pain. I was angry and confused, and I couldn't even begin to imagine what she was feeling. She cried, I cried, and I did the best I could at the time, with what I knew.\n\nAs a therapist, now I know what to do and say\u2014as a friend, though, those actions and words don't come quite as easily. Once it becomes personal, the situation seems much harder to respond to in a way that would be most helpful for the victim of the assault\u2014but the statistics show that many of us will have to deal with it, one way or another, because one out of three women over the age of 14 will be raped in her lifetime. \n\nBelieve\n\nThe biggest fear sexual assault victims have is not being believed. It doesn't matter if a shadow of doubt crosses your mind\u2014don't express disbelief. You will break a trust that may not be repairable if you do. If your friend is confused, or doesn't remember the details of the assault, just know that this is a normal trauma response, and doesn't necessarily mean that she isn't telling the truth. The FBI estimates that less than 2% of rape reports are false. This is less than for any other felony.\n\nNo Blame\n\nI know my friend kept saying, \"I know it's my fault,\" over and over, which completely befuddled me. A sexual assault victim will often believe it's their fault, and even if they don't voice it as a concern, it's good to be proactive and tell them that a sexual assault is never the victim's fault. Asking questions like, \"Why did you go with him?\" or \"Why didn't you scream?\" are questions you just shouldn't ask. Whatever errors in judgment she tells you she may have made, it doesn't matter\u2014no one ever asks for or deserves to be assaulted. \n\nListen\n\nWhatever you are feeling (angry, disturbed, nervous, scared, awkward, they're all normal), you need to listen to your friend. Try to just reflect back what your friend says to you (this is called reflective listening.) If she says, \"I'm so scared,\" you can say, \"Yeah, I hear you're scared.\" Reflecting her thoughts and feelings back to her is the most effective form of listening, and makes her really feel heard. If she gets quiet and can't talk about it anymore, that's ok\u2014don't press her. Respect her silence as much as her words.\n\nEmpower\n\nYou aren't there to make decisions for your friend. Even if you believe she should go immediately to the police and report it, that isn't up to you. When someone is sexually assaulted, they feel as if they have lost all sense of control. In order to help her regain her sense of control, you need to support whatever decisions she makes\u2014and let them make them for herself. \n\nNormalize\n\nWhatever your friend is feeling is normal, and she needs to be told that. Victims of sexual assault often have post-traumatic stress disorder-like symptoms: mood swings, changes in eating habits and sleeping patterns, distrust and fear of everyone. My friend was afraid she was going crazy! It can be a relief for a sexual assault victim to know that these are normal. \n\nConfidentiality\n\nPlease respect your friend's privacy. She trusted you enough to tell you\u2014don't blow it now by going to her family or a friend and telling them about the assault. You are probably going to have strong feelings yourself, but it's best to talk about it with a therapist or counselor. You can even call a rape/sexual assault hotline yourself\u2014they are specially trained in helping with the issue.\n\nSupport\n\nYou may be angry when your friend tells you about the assault (I know I was!) You may even feel like seeking revenge against the attacker, especially if you know them. All of these feelings are normal\u2014but your friend needs you to be the calm, rational, and reasonable port in a storm right now. If you step into the middle of things by running off to confront the attacker, you have not only left your friend alone in her time of need, you may also be causing serious legal difficulties if your friend decides to report the crime. Remember to reflect your friend's feelings, and not to project your feelings on to her. Even if you are angry, don't make threats against the attacker. Let her express her feelings\u2014you can express yours later, to someone who can help you process them. \n\nResources\n\nIf you don't know what the sexual assault and rape resources are in your community, all you have to do is call information and ask for a rape crisis line. They are free and confidential and available 24 hours a day, and they will point you in the right direction. Encourage your friend to seek help for herself, but remember not to make the decision for her. You can also suggest counseling for your friend, and encourage her to seek it out. Rape hotlines should also have a list of therapists who specialize in sexual assault. If the sexual assault has happened within 72 hours, you can encourage your friend to go to the hospital to have a rape exam. You can also encourage her to call the police to report the incident. If she decides to do so, you can accompany her. \n\nWhat She Needs Most\n\nWhat a sexual assault victim needs most is patience and time. The journey from the pain of her assault toward healing takes a great deal of time, and involves letting go of so many fears. Don't give up on her, and accept her unique way of dealing with the trauma. Try not to give her time limits or put your expectations on her. She is her own person, and she will come to the healing she needs to, in her own time. Give her the space to do that, but always remind her that you're there for you. That's the best you can do to be a good friend. \n\n--------------------\n\nBibliography\n\nLindquist, Scott. The Date Rape Prevention Book: The Essential Guide for Girls and Women. Sourcebooks, Naperville, Illinois 2000. "
    ],
    "authorname": "Selena_Kitt",
    "tags": [
        "sexual assault",
        "empowering victims",
        "assault",
        "reflective listening",
        "sexual assault victim",
        "confidentiality"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-help-a-sexual-assault-victim"
}