{
    "title": "\u00c6gir's Wife Ch. 12",
    "pages": [
        "Kirsty sat at the table; Anna was nursing contentedly in her arms while Elsa rolled about the floor. The girls were trying to crawl but had not quite gotten the hang of it yet. She was not sure that they were ready for that, any of them. \n\nThe past few months had been filled with struggles, as life always was. They had gone through five fishermen, none of whom seemed as reliable as they wanted. Olaf had been called upon more than once to fill in gaps, but that would not be possible after today.\n\nKirsty smiled, a wedding. Today was Petrine's and Olaf's wedding. It was why she was up so early. She could not sleep. So, when the girls had woken for their six a.m. feed, she had brought them downstairs rather than disturb their fathers. \n\nLast night, she had been blessed to entertain Bjorn in her bed. Tonight would be Mikael's turn. Sven would take up his usual residence the next night as his brothers returned to sea after the festivities. Hopefully, with a full crew.\n\nIt worried her. Now she understood the importance of this being a family business. Without that bond of kinship, it was proving incredibly difficult to find and retain competent, reliable workers, which was especially troublesome since even with a full crew, they had more orders from the high-end restaurants than they could fill.\n\nThey needed another boat. The problem, as Sven had taught her, was not in buying another vessel, that was relatively easy. But the permit that they would need for it might be even more expensive than the ship. \n\nShe still did not completely understand the whole system; thankfully, they had Sven for that. Theirs was not the only family that had relied upon fishing for hundreds of years. It was the primary industry in the Loften Islands, besides the newly emerging tourism that was. \n\nNorway had been the first country in the world to recognize that sustainability was an issue, establishing a Ministry of Fisheries in 1946. It worked closely with its neighbors, the European Union, and the international community to regulate the quantity and quality of fish that were harvested each year, primarily through the licensing and permitting process. \n\nTheir problem was that new permits were not available. One way that their government had attempted to be equitable was by issuing licenses to all existing fishermen from the beginning. But since that time, no new ones were offered. \n\nThis meant that the only way to acquire the necessary permit for a second vessel was to purchase an existing one from someone who was succumbing to the vagarities of the market and giving up their way of life. The problem with that was they would be competing with big fisheries for one. \n\nIt was ironic perhaps that their very success could be as much a threat to their way of life as the seas always had been. She was trying to get her head around the whole issue but not even Mikael or Bjorn understood it fully. They were lucky to have Sven who had been as vital to monitoring the situation as he was with their girls. \n\nWhile she would have never wished any of this upon him, Kirsty was, sort of, relieved that she would not be left alone on the Homdling for long periods as Petrine had once been. Especially now that Olaf and Petrine were embarking on their new, old adventure. She was happy for them, even if she would miss her mother-in-law incredibly. \n\nAs if she has conjured the woman up magically, Petrine opened the front door, crossing to the kitchen and starting the kettle. \"A cuppa?\" \n\nKirsty chuckled at the woman's use of the British term. \"No, thanks. As soon as this little one finishes her breakfast, I should begin ours. I left Bjorn sleeping. He could use the rest,\" she tried to keep the concern from her voice. They did not want any of this delaying Petrine and Olaf. They deserved this and more.\n\nPetrine smiled as she poured the water in her cup. She bent and laughed with Elsa as she pushed a toy just out of her reach, encouraging her to practice crawling, or attempt to. Then she came to sit at the table with Kirsty and Anna.\n\nRaising the steaming cup of coffee to her lips, she sipped before saying, \"I have something for you.\" She reached into the pocket of her robe, pulled out a tablet, and laid it on the table.\n\nKirsty shook her head as she broke Anna's seal on her nipple. Being breastfed the girls had long since outgrown the need to be burped, she laid her daughter on her tummy near her sister. Returning to her seat, she picked up the gift. \"You shouldn't have. This is your day. You're the one who is supposed to receive gifts.\"\n\nPetrine shook her head. \"The tablet is not your present. Open it. Go to the library.\"\n\nKirsty frowned as she followed her mother-in-law's orders. Her eyes widened when she saw the only item on the new device. \"How? It isn't out for weeks yet. How could you possibly have gotten ahold of the new Raquel Graffen novel?\"\n\nThe woman threw back her head with a chuckle, \"Read the dedication.\"\n\nShe was puzzled. As her eyes skimmed the electronic page, her mouth fell open.\n\n\"To my beloved daughter-in-law, K. You are all I ever dreamt of, a heroine worthy of the mightiest heroes. Sorry, I could only offer you my sons. Good men, but flawed. Thank you for loving them anyway. And for my granddaughters. May they grew up to be shieldmaidens as strong and wise as their mother. Goddess bless, R.\"\n\nShe re-read the passage twice, her mind trying to reconcile those words. \"You're Raquel Graffen?\"\n\nPetrine chuckled, \"I'm surprised that you never figured it out. As much time as I spend on my laptop in the greenhouse.\"\n\nShe shook her head, trying to clear the cobwebs. \"But how? Why?\"\n\nPetrine shrugged and got that far off look that Kirsty knew meant the woman was lost in her memories, good and bad. \"It got lonely. Especially when Bjorn joined the others.\"\n\n\"But I thought that was why you taught, and the sea wife thingy, too? And quilting? The flowers? How do you ever find the time?\"\n\n\"Luckily, you'll have Sven with you to keep you company. But you have no idea how long the days can be, how lonely,\" those green eyes glistened with tears as she brought the cup to her lips once more.\n\n\"Like I said when Bjorn went to sea with the others, I had more hours in the day than I knew what to do with. I had always loved reading my Harlequins since I was a teen. Back then, though, it was one hero and one heroine.\"\n\nShe smiled and winked, \"Of course, we both know how boring that can be.\"\n\nKirsty laughed and shook her head. Would this woman ever stop surprising her? \"Yes, most definitely.\"\n\n\"I have another confession to make,\" Petrine placed the empty cup on the table and gathered Kirsty's trembling hands into hers. \"I picked you for them.\"\n\nShe shook her head, \"What do you mean? I know that Bjorn got your help and all?\"\n\nPetrine nodded, \"Yes, but what even my son does not know is that I cross-referenced the candidates with my mailing list.\" She squeezed her hand, \"That way, I'd know that at least they were curious about BDSM and especially polyandry.\"\n\nKirsty nodded as the pieces began to fall into place. Perhaps she should have felt like her confidence had been violated, as if she had been deceived, but she did not. Petrine, Raquel, or was it Olaf's Rachel had wanted to do her best by the woman who would become her replacement. Who would lead her sons and this family into the future. And she had done what she could to ensure that. How could she possibly resent the woman for that?\n\n\"Thank you. Thank you for choosing me,\" she barely choked the words out past her tears.\n\nPetrine's arms wrapped her in that warm embrace that had gone so far to heal the hurts of that little girl who always craved the love and acceptance of a mother. This woman had become that for her. And now, she was losing her. \n\n***\n\nOlaf adjusted his tie. He only owned the one. He'd had it for forty-two years. Three funerals and now a wedding. Even on this happy occasion, the damned thing still choked him.\n\n\"I swear the woman must have planned this every time we went to sea. The whole town.\" He surveyed the crowded church. He went inside it about as often as he wore a tie. He squinted, \"Helveti, there are people I don't even know.\"\n\nMikael laughed as he turned his father away from the doorway and adjusted his tie, making the damned thing even tighter. \"Only Kirsty's father, his new partner, and her friend, Roz. She thought this would be a good excuse for meeting them.\"\n\nBjorn frowned as he looked over their shoulders, \"Why did she invite them?\"\n\n\"They are our 'cousins.' Besides, I'm still hoping we can change Karl's mind and get him to come back to work with us. He was the best we've found and I know he can't be happy working with his brothers,\" replied Mikael.\n\n\"Kirsty thinks we should feel them and a couple of others out about buying their license, or at the least some sort of partnership,\" added Sven.\n\n\"Not them,\" Bjorn's face darkened.\n\n\"No business at your mother's wedding,\" Olaf put an end to the discussion before it got out of hand. \"Bjorn, you and Sven should go find the women, make certain they are ready for this show. Mikael, I guess it is time we took our place at the altar. Maybe that's why I feel like I am a sacrifice.\"\n\nMikael chuckled and slapped his father on the back, \"This was all your idea, old man.\"\n\nHe shook his head, \"No, I asked the woman to marry me. I said nothing about a wedding. And certainly not this.\" They all laughed as they dispersed. \n\nOlaf tried to smile as he and Mikael walked down the aisle. The young new priest was a vast departure from the dour, elderly man who had run their local church for as long as Olaf could remember. Like most of the people in their village and the country, they only came inside its doors for the occasional wedding and especially funerals, perhaps Christmas or Easter. But today, he did not want to think about funerals. \n\nRachel and Kirsty had both taken to this young man who like his predecessor before him had taken up the mantel of community leadership. The people might not attend services, but they still respected their priests. The church was changing slowly. From its ancient Lutheran roots to a more secular world view. It had even authorized gay marriage. \n\nOlaf smiled, wondering what this young man would think of their sons' and Kirsty's marriage. But today was about his. His and Rachel's wedding. He inhaled deeply as they reached the front of the small wooden structure. He forced himself to smile at the young man. \n\nSigurd would have made a good fisherman. Tall with broad shoulders, he reminded Olaf of Bjorn, although he was not quite as pretty in the face. Both men were about the same age. Why would a young man choose to give his life to serving a dead god?\n\nThe organ began to wail, and Olaf, like all the others, turned to face the back of the church. His smile widened as his granddaughter skipped down the aisle. In Monika's hand was a basket of wildflowers; they were freshly picked from the 'fighting fields' that morning. \n\nKirsty had spent over a week, bringing the little girl to the church each day, so that she could practice her part. She had even made them all come the last couple of times. Still, he knew that this large crowd had concerned the young woman. How would her daughter react to so many strangers? But they had all agreed it did not matter. Georgia was waiting just to the side, ready to assist in any way they needed. But Monika was halfway up the aisle, her little head down, and her tiny fingers focused on her task of strewing flowers on the old carpet.\n\nNext came Kirsty in a flowing multi-color skirt and blouse that reminded Olaf of the ones that Rachel had worn when they first met her. She held more of those wildflowers in one hand; the other slipped through Bjorn's arm. He looked far more comfortable in a suit than Olaf felt in his. \n\nThere was a pause as the music increased in volume. There, in the doorway, the mid-day sun lighting her like a halo, stood his Rachel. Her arm through Sven's, who had chosen to play it safe and use his wheelchair today. He had not wanted to cause a scene on his mother's big day by falling, though that was not as likely as it had once been. \n\nBut Olaf's attention was entirely focused on the woman next to their son. From the moment he had laid eyes on her, his heart had been lost. But he swore that never, not even when she grew ripe with Mikael, had Rachel been more beautiful than she was today. \n\nShe, too, was wearing a white dress that fell to her ankles. It was the odd mix, her dress with the braids of a shield maiden topped with a flower crown. If she wore any make-up, he could not tell. But then again, the woman had never needed any artifice. Her health and inner beauty gave her a glow that no cosmetic ever could. Especially this day.\n\nHis old heart stopped when she smiled at him. Just as it had that first day. \n\n***\n\nThey had waited as long as they could. A week. For a whole week, they had tarried in Amsterdam. By chance, Anders had slumped into Dam Square. It had been the hippie enclave for almost a decade, not a place for hardworking fishermen who favored tradition and practicality over dreams and drugs. \n\nHe had gotten lost that day and ended up in the square where thousands of unwashed and high young people hung out, often waiting for their chance at the Hippie Trail, an overland route to the east that ended in mythical Kathmandu. \n\nIn the crowds and confusion, he had stumbled upon her. Quite literally, running into the arms of the tall, blonde beauty with sparkling green eyes. Anders was smitten. Over the next few days, he had lobbied and sometimes badgered each of them in turn. It was time. Mama had been dead for two years. The Holding needed a new generation. She was perfect. Young. Alone in the world. No one would miss her. No one to come looking for her. \n\nLars had been easily convinced. He was the youngest and more than ready to try his wings with any young woman. Stig was a much harder sell. They did not have time for a woman. They were barely making by as it was. How could they afford to start a family now? \n\nAnd he? He had been somewhere in between. Seeing both sides of the issue, uncertain what their future held. Until that day. \n\nAnders had convinced Lars to go with him. They were meeting the woman, and that was how Olaf thought of her. Well, more like, the girl. They were meeting her at a small coffee house just off the square. The plan was to lure her back to the boat. \n\nShe was the curious type and had already been entranced with Anders' stories of the sea and their ancient Viking heritage. They would bring her back. Once Stig saw her, they were confident that he would give in. Olaf smiled, remembering how the two of them had almost dragged him with them that day. \n\nHis throat tightened, and his old eyes clouded over with unshed tears. Her laugh. It had been her laugh. That smile, which had captured his heart that day. She had been delighted to meet Anders' brothers. Yes, she wanted to see their ship before they went back to sea. Would she be there when they came back next month? She was not sure. \n\nA shadow crossed her lovely face. She wasn't certain what she was going to do. Even living as the hippies did was not free. And her inheritance was running low. She wanted to continue her journey, see the world. Make that trip to Kathmandu. But she was a woman only. \n\nMaybe she should go home. Back to America. She had cousins she could stay with for a bit. Perhaps go back to college, she had been studying the classics. Her particular interest was ancient gods and goddesses. Maybe she could find a commune to live in. She was not sure. \n\nBut if she was still there, then yes, she wanted to see him again. She had blushed. Her eyes shifted from one brother to the other. Olaf had wondered what she would think of their idea of marriage. It was when she dropped her gaze that he knew. He recognized in that look and her uncertainty, the signs of a sub, a true submissive. \n\nHe decided for them all. He had taken charge, practically commanded her back to \u00c6gir's Captive. Stig had not been as easy to handle, though. \"She is your responsibility. I won't have a woman getting in the way. We have jobs to do.\" \n\n***\n\nHe wanted to laugh as he watched her walked down that aisle. If his brother had known just how much trouble this one would prove to be, would he have acceded? Perhaps. Because he always believed that even Stig had fallen instantly under her spell. \n\nBut she was most definitely his responsibility now. His alone. She had been. Their family had been for seven long years. Today was a new beginning. Their beginning. \n\nHis eyes drifted away from her for a heartbeat. Transfixed by three white granite headstones. The rock was taken from the heights of the fjord where he had proposed to their wife. Though one of those graves was empty, Lars' body forever claimed by Ran, Olaf felt their presence. His brothers stood witness this day. He liked to think he had their blessing. Those tears slipped from the corners of his eyes as he turned away from their past to the future. Their future -- his and Rachel's.\n\nHe was unashamed of the tears as he held out his hand to the woman that had held his heart for over four decades. There was that smile \u2014 the same shy, submissive one that she had in that caf\u00e9 that day. \n\nWhen she placed her hand in his, the years shone in it. She was not that young girl, lost and alone anymore. But neither was he that optimistic and na\u00efve second son. They were older, and he hoped wiser. The years had not always been kind as testified by those tombstones, but they had come this far.\n\nAnd they still had further to go. Places to see. Together. The two of them. \n\nHe tucked her aged hand into his and turned to that young priest, seeing for the first time in his eyes that same guileless hope that he had possessed that day. He prayed that the man's faith was never tested in the fires of Muspelheim or the icy cold mists of Niflheim. Not that he expected any god, or goddess, to listen to his unworthy pleas. \n\nHe had given up that hope in the frigid, pre-dawn morning four decades ago. Lars' laughing blue eyes seemed to wink at him from over the untried priestess' shoulder. 'Forgive me, brother,' he entreated his ghost.\n\nHe felt her fingers tightened around his. He turned to that ageless beauty, her own tears running unchecked down her cheeks that though lined still held more of that youthful beauty than her six-decades should have. \n\n\"I feel them, too,\" her words, their shared experience, a lifetime of love, laughter, and tears bound them tighter than this man's words or a piece of paper ever could. But standing in front of this crowd, before their sons, the gods and goddesses, and those ghosts felt incredibly right. \n\nThis was a celebration of life, love, and happiness \u2014 a new dawn. And his old heart soared, her wind lifted him high as it always had. And he knew that as with his brothers, one day, he would rise to Valhalla on the wings of this Valkyrie's love. \n\nBut that day could wait. He turned his attention back to this one and the words of commitment that fell from the innocent priestess' lips. \n\n***\n\nRachel smiled until she thought her face would crack. She knew that these people were here for the free food, and especially the free alcohol. They were there out of curiosity, too. She knew what they honestly thought and felt. \n\nFour decades she had lived among them. She had learned their language, both Norwegian and the local dialect. She had taught their children in their schools. She had brought their babies and grandbabies into this world. And she had held the hand of more than one of them as they made that final journey to Valhalla. \n\nYes, she knew that Olaf would probably take Forseti to her still tender backside, again, for the sacrilege. But in her mind, Valhalla was for everyone. This life was battle enough. They were all warriors. And victory was just surviving.",
        "And they had. They had made it through it all. The two of them. She swallowed back the tears as those other faces filled her mind. Lars - laughing and grinning at some inconsequential thing, always her partner in mischief, her Loki. Anders, so intense in his love for her, in the end, it was the intensity of that love which had broken him, leaving him nothing but a shell of that man. She had been powerless to reach him in his pain. Stig, so weighed down with responsibility that only in her arms could he float above it all. And him. Through it all, Olaf was her partner. Her equal. And her Master. \n\nThis day was a celebration of that. Of the life and years that they still had ahead of them. She smiled as the receiving line thinned. \n\nThen he held out his hand. Those knuckles were swollen and creased with age. She smiled at the hair which covered them, even it was greying now. But he was still the most handsome man in the room to her. \n\n\"May I have this dance, old woman?\" \n\nShe chuckled, \"I didn't think you knew how, old man.\"\n\nHe pulled her into the center of the makeshift dance floor in the church hall. He wrapped his arms tightly about her as the song that he had sung to her thousands of times boomed from speakers in the corner. \n\nShe giggled like the woman-child she had once been, that summer day a lifetime ago when Anders brought his brothers to that caf\u00e9 in Amsterdam to meet her. \n\nShe remembered the first time Olaf had played this song for her, too. Sven was a toddler. It was just after Valentine's Day. Was it nineteen-eighty or eighty-one? Damn, her memory. She hated getting old. They had just come home, if only for a couple of days. It was, after all, their busiest and most lucrative season. He had put the record on to play. They must still have the thing somewhere. And he had serenaded her with his less than perfect singing. They had all laughed \u2014 even Stig. \n\nShe smiled up into his face, \"Well, I guess you kept your promise, old man. Because my blond hair has long since gone grey and there are way too many Decembers showing in this old face.\"\n\nHe leaned in, the kiss he placed on her lips was tender, a solemn vow between best friends and lovers, now husband and wife in the eyes of the law as they had been in their hearts for a lifetime. \"And I still love to lay you down. Every single time, Rachel.\"\n\nShe softly brushed her fingers over his face. She tried to remember the last time she had seen him without a beard, but that too was lost in the fog of time. \n\nThe music changed; a lilting female alto voice filled the air. She knew that her very traditional choice for the bride's song would be the topic of gossip, a joke, in this community for weeks. But for her, it reflected their past...and their future. \n\n\"And when the evening comes, we smile, so much of life ahead. We'll find a place where there's room to grow. And yes, we've just begun.\"\n\n'Oh, sweet goddess,' she prayed, 'let it be. Let this be just the beginning of many more years with this wonderful man.'\n\n***\n\nDag shook his blond head. Why was he here? They had never been close to their 'cousins.' Papa, especially, had always resented the men. While he struggled to survive and provide for Mama and them, Stig, Anders, and Olaf's family had prospered and grown. Mama had always called the woman 'unnatural' and far worse. \n\nHelveti, his left arm still ached. He would never forget that morning. They had cornered Bjorn, the youngest, on the playground. He did not attend the local school as they had. His mother taught him at home. It was unheard of and perhaps even illegal, no one was certain. So, to find the child there, alone, was unheard of. \n\nNils had already gone to sea with Papa, and Karl was at home with Mama. But Erik had incited Jan and him. Three older boys against one, even if he was bigger than Dag, it should be easy. Teach the kid and those freaks a lesson. \n\nExcept it had not turned out that way. Bjorn had broken his arm and Erik's nose. And Jan had spent three days in the hospital with broken ribs and a punctured lung. The authorities had become involved. Although they had gotten the worse end of the deal, the blame had fallen not on Bjorn but them. Papa had been so angry about the fine. Money, they did not have. \n\nBut that was ancient history. And not what brought him here this day. No, Nils had sent him on a mission. One purpose. He had to convince their youngest brother to vote with them. Vote to keep the family business afloat. \n\nIt was ludicrous on so many levels. There's had never been a democracy. Papa ruled his family and the sea. Mama was deputy. And after Papa died, Mama had taken over, except at sea, of course. That was no place for a woman. Nils ruled there. As the eldest, he had taken over as captain. \n\nIt had been like that for over a decade. Oh, they were brothers, so they fought. But Mama kept them all in line. Backed Nils whenever he needed. But Mama was gone now. And things were falling apart. \n\nThey had barely been keeping afloat for years. Their vessel was older than their cousins', smaller, lacking in much of the newer equipment their cousins' used. They had never ventured out as far to sea as the other men. As a result, their catches never as large or as lucrative.\n\nStill, they had managed to survive when so many others had not. They continued their family tradition when other young men their age had abandoned fishing and the islands, heading to the cities for jobs. \n\nThat was what he knew Jan wanted. After a lifetime as the second oldest, second best, he wanted to break away from Nils. Jan had already been offered a job as the second mate on one of the big cargo ships. That would put them a man down. But they could survive that.\n\nThe problem was that Jan did not want just to walk away. He did not think it was fair that the power remained in Nils' hands. They were brothers. All equal. All should share equally in what few resources remained. \n\n\u00c6gir's Brew was more than just the ship. Their fishing permit was worth far more than the boat itself. They could sell it to one of the large fisheries, divide the money, and each have enough for a fresh start in life. \n\nThe Claim, too, Jan wanted to be sold or at least divided among them. Although much smaller than their cousins' Holding, it had been in their family for a couple of centuries. The story was that one of the brothers long ago had fallen in love with a local girl, not the captive bride of tradition. For the sake of family, the others had parcelled out the tract. Leading the two distantly related families on different paths. \n\nNow all of it was under threat. If Jan had his way. Dag knew that Erik would vote with the man. Erik had never loved the sea. The man preferred books. And Dag knew his other secret as well. No, Erik would definitely vote with Jan. Then slip out of their lives to the city, perhaps another country even. Not that he begrudged his brother the chance to be who he was. And that certainly could not happen here. \n\nOf course, he was firmly in Nils' camp. Sure, he, as much as the others, sometimes chafed under his eldest brother's autocratic rule, but it was the sea he loved. Perhaps, he could like Jan barter his two decades of experience for a job with one of the sizeable Scandanavian shipping companies or cruise lines, maybe even one of the fisheries. But it would not be the same. He would be nothing more than another cog in the machine \u2014 not part of something more elemental, not part of a family. \n\nNo, the Fate of their family, their way of life rested in the hands of their baby brother. A man that Nils had alienated more than all of the others. Karl was the swing vote. And they needed his support. Whatever it took. He and Nils would give their brother. Too much rode on this one. \n\nDag inhaled the fresh, crisp salty air of early summer. He had to find the key to Karl's heart. He stubbed out the cigar that was a nasty habit; he knew he should give up. The younger man was leaning against a tree by the church. He seemed to be watching the playground. Dag frowned as he took in the young woman, swinging the little girl, and an older dark-skinned woman chatting together. The women looked as apprehensive as he felt.\n\nHe placed his hand on his brother's shoulder, \"I thought you would be in the hall, filling your plate with all their different kinds of food, brother?\"\n\n***\n\nWhy Karl was surprised that Dag had sought him out was beyond him. He should have expected it. He knew that he was the deciding vote in this battle of brothers. Jan and Erik had both sought him out earlier, making their case for selling it all off to the highest bidder, dividing everything equally, each free to begin new lives, lives all their own. \n\nKarl was torn. He knew that it was his mother's dying wish that they remain together as a family. The way it had been for centuries. But Norway's forced inheritance laws that had changed during his father's days provided for something very different. Jan and Erik wanted to take advantage of those to break away from Nils' stifling influence. \n\nAnd him? What did he want? \n\nHis eyes drifted to her again. It was the first glimpse of her he had gotten in months. She looked thinner and paler. More troubled. And considering how bruised and battered she had been the first time he saw her, that was alarming. \n\nSince answering their dying mother's plea to come home, he had lost track of her. But he had treasured each memory he held of their furtive acquaintance. Other than that first encounter onboard \u00c6gir's Captive, those were mostly evening meals around the communal table at the Holding. When they had not been at sea, his cousins had welcomed him to sleep on the ship and take meals with them. \n\nHe remembered the shy way she kept her eyes down as she passed bowls to him. The couple of times that their fingers had brushed. But that was all. He had never dared to approach her and certainly not to express his feelings towards her. \n\nNow she was leaving. His heart had stopped when he overheard his cousins speaking of how much more difficult life would be on the Holding without their parents or Georgia to help with the children. He had wanted to question Mikael about it. Where was she going? What was she going to do now? \n\nThe idea that she might return to England and whatever danger lurked there had gripped his heart like a vice. But Mikael had been drawn away by their wife and he was not close enough to Sven or especially Bjorn, whom he knew still resented their family for old wrongs to broach the subject with them. \n\nInstead, he had drifted out here to consider the situation. Only to discover her. His dream. But even if he had somehow found the courage to approach her, ask her himself, there was someone else with her. A woman he did not recognize. A foreigner for sure. Perhaps a friend of their wife's? \n\nBut what was the woman doing with Georgia? When she wrapped the younger woman in her stout arms and drew her against her bosom, he felt the anger, jealousy, and self-recriminations rise like bile in his throat. But what right did he have to be jealous? He had barely spoken to her. \n\nHe was undoubtedly in no mood to deal with Dag's pleas now. Maybe Jan and Erik were right? Maybe he did deserve a fresh start somewhere else? Perhaps if he threw his support behind their demands for liquidating the family's limited assets, then he would have enough money to follow her - wherever she went. \n\nBut was that any answer? Follow her where? And then what? Lurk as he had for the past few months in the shadows? Never finding the courage to approach her or tell her how he felt? And if she was going back there, to that unknown danger, what could he do to protect her, to keep her safe?\n\nBesides, he did not want to leave this place. He never had. This was his home. This town. Even his brothers. Though they fought. Though he knew that Nils would never respect him, never see him as anything other than an inept kid. He loved them. He loved the Claim. And he especially loved the sea, fishing, and \u00c6gir's Brew. \n\nNo, he did not want to vote with Jan and Erik to tear their family and way of life apart. To destroy their mother's dream, to break his promise to a dying woman. But what choice did he have? He did not want to lose her, either.\n\nHe sighed as he turned to the only brother that he was genuinely close to. How like Nils to send Dag to do his dirty work. That was how his eldest brother did things, delegating the jobs he did not like to others, while keeping firm control of everything and everyone. \n\nBut that was changing. Their days as simple fishermen had been interrupted by lawyers and inheritance laws that their mother had known nothing of. Nils as the eldest no longer held absolute sway. They were equal, all of them, under this new law. And he above all others had control. \n\n\"I'm sorry,\" he began.\n\n\"Whatever you want, Karl. Nils and I will give it to you. Please, just reconsider. Think about your promise to Mama. About Papa. About this family's history,\" his brother's face was lined with worry as he pleaded his case.\n\nKarl turned again and cast a final glance at her over his shoulder, \"Somethings aren't yours to offer.\"\n\n***\n\nGeorgia watched each jerky movement of the swing. Each seemed to rip away a bit more of her heart. She would miss Monika. The little girl had come so far in the past few months. She was talking more, sometimes so much that they wished she would be quiet. Since that day in the fields, a new bond had formed between them. More of equals, two lost souls who understood and needed one another.\n\nBut she had finally come to a decision. She just hoped it was the right one. She was going home. She shook her head. Not home. London had never been home. And she did not remember the war-torn land in which she had been born, torn apart by religious zealots, neighbor against neighbor. No, this was as close to home as she had ever felt in her brief life. She would miss it.\n\nWhat choice did she have, though? She had sent letter after letter pleading with Mama to leave Papa. She knew that Mikael and Roz had both done their best to convince the woman it was no sin to leave an abusive relationship. But her mother's unbending faith blinded her to it all. How could any religion condemn a woman to a life of abuse? What god would condone such a thing?\n\nNo, she had to go back. She had to get through to her mother somehow. \n\nShe only hoped that she was not putting her friend at risk with her decision. Georgia had given into Roz's pleas to live with her. She would have a room in the old North London walk-up that the woman had inhabited alone since her divorce. Roz refused her offers of rent, saying that she was doing her a favor, that having someone else in the house would be a blessing. Georgia only hoped it would not be a curse. That Papa would not find her, would not come after her, that her friend would not be hurt in the process. \n\nBut this arrangement was the only way that they would agree to her going back. It was odd that this family of strangers, her employers, had taken her into their family, cared more for her safety than her own mother did. \n\nShe forced a tight smile at Monika when she noticed the little girl watching her, \"You're doing well. Just keep swinging your legs back and forth.\"\n\n\"She is doing well. Remarkable, in fact. I can't believe the progress she had made these last few months,\" the woman's smooth and only slightly accented voice drew Georgia's attention.\n\nHer smile widened in greeting to the older woman. Her friend? Yes, certainly. But there was always this unknown, this edge of something more. Something that Georgia was not ready to examine too carefully. One thing at a time had become her mantra.\n\n\"How are you doing, sweetie?\" her friend inquired as she held out a glass of American style lemonade. Neither woman was particularly interested in the various alcoholic alternatives that seemed to have drawn most of the guests today. That and perhaps curiosity seemed to have brought the whole town down upon them. \n\nGeorgia was not sure what to say. She had never shared her story with any of them. Though this woman knew more than the others, she just could never bring herself to put it all into words. That made it too real. But she felt that Roz needed to know as much of the truth as she could manage. After all, the woman was putting her home and possibly her life at risk for her. \"As good as I can be,\" did her voice falter?\n\nThe older woman smiled and turned towards the swing, bringing the glass to her lips. After a long moment, she asked, \"Are you sure about this?\"\n\nHer shoulders drooped, she dropped her eyes to the grass beneath her feet, \"What other choice do I have, Roz? I can't just leave Mama there.\"\n\nHer friend sighed heavily, then wrapped her arm about Georgia's shoulder. Roz's dark finger lifted her head, her deep brown eyes that always did something funny to Georgia's tummy held her gaze. \"Yes, sweetie. Yes, you can. She is a grown woman. Your mother's safety is not your responsibility.\"\n\nShe shook her head. She knew that these people could not understand. But Georgia had always known she was the stronger one. That her mother needed her, depended upon her. And these past few months, almost a year now, she had abandoned her. Abandoned that responsibility. She could not keep doing that. \"I have to.\"\n\nRoz sighed even deeper, then she nodded, and drew Georgia into that welcoming embrace. \"Alright then, we're in this together, sweetie. Whatever comes, I'll be here for you.\"\n\n***\n\nKirsty flitted from table to table. She and Petrine, Rachel she kept reminding herself, or after the shock of this morning, perhaps it was Raquel, whatever the case, they had spent the whole winter and spring planning this event. They had both poured all their frustrated dreams of big weddings into this moment. And she wanted it to be perfect for the woman she now thought of as her mother. So far, it had been everything they dreamt of and planned. \n\nShe smiled as she took up an empty chair next to her father. Rachel had insisted that they invite those people most important to Kirsty, too. Roz, as well as her father -- and his new partner. \n\nShe liked the man. He was almost a decade older than her father. An actor, not some movie star type, but a solid reputation as a West End headliner. He had lived his whole life as openly gay. The men had surprisingly enough met through her mother's charity work with the youth theatre. \n\nOscar was in some ways every bit as strong a personality as her mother. The difference was that his dominance was not acrimonious or demeaning. The man was pure Daddy Dom from the way that he organized and sometimes cajoled her father into doing what was the best thing for him to the genuine care and affection that he openly showed his new partner. \n\nBut what was most important to Kirsty was that her father was happy. Genuinely happy for the first time in her life. She brushed tears away as she squeezed his shoulders from behind, \"Thank you, Daddy, for coming.\"\n\n\"We would not have missed the opportunity to see those grandbabies for the world,\" it was Oscar who answered for them. His voice camp at its best. But the way that he had claimed all of her girls as his own warmed her heart. \n\n\"Oscar is right. We have been dying to see the babies. And I can't believe the difference in Monika. It's like some sort of miracle.\"\n\nShe shook her head, \"No, just love, patience, fresh air, and her Homdling.\"\n\n\"I can see her point. And why you love it so much here, too. This place is breathtaking,\" Oscar added.\n\n\"You both are welcome here as often as you can make it. We'd all love to have you be a part of the girls' lives. Grandparents are important. And now that they won't have Olaf and Petrine around as much, it would be really nice if you were.\"",
        "\"But I can't promise no more accidents,\" she teased Oscar. The very first time that he had held Anna, she had peed through her diaper onto his custom made suit. Not to be outdone by her younger sister, Elsa had projectile vomited onto another one the next day. Olaf had brought the man jeans and an old chambray shirt. \n\n\"That's fine. For my girls, I'll buy a whole new wardrobe,\" he smiled. He took her father's hand in his, \"I'm going to get some more wine. Give you a chance to talk to your daughter alone.\"\n\nHer father squeezed his partner's hand, \"Don't be long.\" \n\nHer throat tightened at the look of real love that flowed between the men. Her new friend Sigurd had shared his favorite book, Nothing Done In Love, with her. It was a treatise on love by some New Age guru in California. \n\nAt first, she and Petrine had been reluctant to share their family's history with the new priest. Though they both suspected that the rumors of their unusual lifestyle had already reached the man, it was he who first broached the subject with them. He had done so by sharing that book, which extolled love in all its forms. He had told them that the author had died recently of cancer, but her daughter and her two husbands were carrying on her work. \n\nThe ice was broken, and the new priest was taken into their confidence, including her father's homosexuality. The young priest had restored some of Rachel's tattered faith in Christianity with his inclusivity. The church was changing, especially here. Perhaps too slowly but it was something.\n\n\"I wanted to talk to you about something, Kirsty,\" her father looked down at the table. \n\n\"Dad, say whatever you need to. You know that I am just glad you are happy at last.\"\n\nHe looked up, and she saw tears glistening in his deep green eyes, \"What did I ever do to deserve a daughter like you?\"\n\n\"You put up with a selfish barracuda for almost three decades,\" she laughed.\n\n\"Your mother is what I want to talk to you about, Kirsty.\"\n\nHer face tightened. The memories of their last encounter with the woman were still fresh in her mind. Old hurts and new brought tears to her eyes. \"What is it, Dad? What has she done now?\"\n\nHe inhaled deeply. She saw tears gathering in his eyes. \"I don't know how to say this, dear. But your mother is dying. Stage four breast cancer.\" \n\nKirsty's heart stopped. Of all the things that she had expected her father to say, this was not among them. Her parents were not young people. Both of them in their early sixties. But she had not thought she would face their deaths, not for many years yet. \"Why didn't she call? Write? Say anything? Does she hate me, my way of life that much?\"\n\nHe shook his head, \"No, not at all. Your mother is afraid. She doesn't think you'll want to see her. Doesn't believe that you'll forgive her. But, please, for your sake, even more than hers, see her. Take the children. Say good-bye. Find your closure.\" \n\nHis fingers played idlly on the rim of the glass; when he spoke again, his voice was quiet and his eyes remained lowered. \"She's different. I'm not going to excuse any of the things she did or say. I can't. But we all make mistakes. Please, tell me you'll at least think about it.\"\n\nHer hands trembled as she reached for a full glass of something that had been abandoned on the table. She hoped, whatever it was, it was strong. She brought it to her lips to discover water. Not what she needed or wanted, but taking a couple of sips gave her time to gather her scattered thoughts and slow the pounding of her heart.\n\nShe was strong. A shieldmaiden. Freyja's daughter. Hadn't she found the courage to forgive Sven and begin again? Hadn't she brought forgiveness and hope to Petrine? Hadn't she faced down her deepest fears when she stood toe-to-toe with the world's most famous supermodel, knowing that she possessed something that that woman never would - their love? \n\nYes. And she could and would face this, too. Her father was right. She owed it to herself and to her daughter's to break whatever curse hung between them. Forgiving Nancy Dickens was for their sake and her own, more than the woman who had born her. Besides, she knew that they would be by her side. Her husbands. And together, this family could and would face whatever the future or the past held. \n\n\"I'll take the girls. We'll go with them on the next trip.\"\n\n\"When is that?\"\n\nShe frowned, \"Is it that bad, Dad? Is she that close to death?\"\n\nHe only nodded and squeezed her hand, \"You know what they say, doctors make the worst patients. Your mother ignored the signs until it was too late. The sooner, the better, dear. She and I made our peace before we left. It wasn't easy, but in some ways, I feel sorry for her. She was as trapped by societal expectations as we were. Maybe more so.\"\n\nShe swallowed down the bitterness and pain as Oscar came back to the table. It was the first time she had seen the man subdued, \"You told her?\"\n\nHer father nodded as tears spilled down his cheek. His hand reached over and squeezed hers, \"You have built a new life and family here. I am proud of you. Of the strong woman, you have become. And I know that this will only make you stronger.\"\n\nHer eyes were filled with tears. Her throat so tight she was not sure she could breathe. Then she felt strong hands on her shoulders. \"May I have this dance?\" She turned and stared into the silvery depths of the man who was her best friend and confidant through it all. \n\n***\n\nMikael held his wife close as the slow, sweet, country ballad began to drift around them. Her head rested trustingly on his shoulders as tears raced down her cheeks. They would speak later about whatever her father said that bothered her, but they had planned this moment with their mother for weeks. Each of them had selected a song that expressed their undying love to Kirsty. \n\n\"Every long lost dream led me to where you are, and others who broke my heart they were like northern stars pointing me on my way into your loving arms. This much I know it's true that god blessed the broken road that led me straight to you,\" he hummed against the soft skin of her forehead. \n\nAs the song faded, his lips covered her. The kiss was slow, sweet, and salty with her tears. As perfect as she was. \"Jeg elsker deg, lilla gumman. You are everything I need but never knew I wanted. And yes, every day, I bless the broken road that led me to you. Whatever comes, whatever lies ahead, nothing can ever change that.\"\n\nThere were tears in his own eyes as the tempo changed, and his baby brother tapped him on the shoulder, \"My turn.\"\n\nMikael stole one more brief kiss before passing her into the arms of the man who had dragged him kicking and screaming to this moment, his Fate and theirs. He would always owe his little brother for that. And his mother, too. \n\nHe smiled to see his parents swaying slowly to whatever song played. It did not seem to matter to them which style or even the words. All that mattered this day was that they held one another. \n\nSven laboriously made his way to stand next to him. Mikael refused to pity the man. He might never walk well enough to captain \u00c6gir's Captive again, but as a result, he had gained something far more precious -- time with their wife. It was a trade he would have gladly made.\n\nHe reached into his pocket and drew out the thick chain. His throat tightened as he held out his hand to his older brother. \n\n***\n\nSven shook his head. He could not believe what his brother held in his hand. \"What? How?\" he mumbled as he reached out and took the white gold necklace from Mikael's hand. It was incredibly challenging to remain on his feet; to balance his weight against the arm pad as he reached out to take the offering.\n\n\"Monika,\" his brother answered. \"She found it. She was walking with Georgia along the shore one day and picked it up. I found her playing with it. And I knew.\"\n\nHe nodded, unable to force words past the tightness in his throat. He had to focus. He still was not steady on these damned sticks, but it had been vital to him that he stand for this even if he was not in much shape for dancing. \n\nNow, this. It threatened to bring him to his knees. What did he do? They had not discussed it. And one thing he knew, in their new world, making decisions together was important. \n\n\"Today is Mama and Papa's, but maybe tonight? Bjorn and I thought it might be time we all committed to the woman.\"\n\nSven shook his head as he noticed two more charms added to the length of rope, dagger, flogger, and music note. They were simple, ancient Norse runes of Joy and Gift with identical birthstones. \"How long have you had this?\"\n\n\"Before they released you from the hospital,\" he replied simply. \n\nSven nodded as the impact of it all hit him. The song was coming to an end. He must concentrate entirely on the next three minutes and forty-one seconds, perhaps the longest and certainly the most important in his life. His chance to publically declare his love to his wife. Something that now seemed surprisingly easy. \n\n***\n\nTears continued to cascade like a waterfall down her face. Kirsty was sure that not even the water-proof mascara could withstand this deluge. But somewhere along the way, along that broken road to this moment this Adonis, this man had chosen her. \n\nChosen her? The tears streamed more quickly. A man like this. Greta had been right; Bjorn did belong on the cover of a magazine. Or at least one of Raquel's novels. She would have to speak with Petrine about that later. It seemed such a shame. Then again, she was not sure she wanted to share him with the world.\n\n\"I know that it might sound more than a little crazy, but I believe I knew I loved you before I met you. I think I dreamed you into life. I knew I loved you before I met you. I have been waiting all my life,\" his voice was as smooth and beautiful as the man himself or his love that by some miracle had drawn him to her. \n\nThey had survived. They had withstood the worst. Just the two of them, alone and adrift in a sea of modernity that threatened to swallow them whole. But they had made. They had come out on the other side, stronger and more in love than before.\n\nThe fact that this man truly had waited, saved himself for her, would forever humble her. That he had seen past her dress size and insecurities to the woman that she would become, the shieldmaiden and daughter of Freyja. \n\n\"I love you,\" they giggled. That both had spoken their feelings at the same moment, said it all. \n\n\"Thank you, Bjorn. Thank you for choosing me, for loving me when I did not love myself. For helping me see myself as you see me,\" she caressed his tears away from his cheeks as she leaned in to kiss away the last of them.\n\nBut if she thought this day could not get any more perfect, then she was wrong. Bjorn brought her hand to his lips and kissed the back of it, then turned it over and repeated the action to the palm. Then he tugged gently, pulling her to the edge of the makeshift dance floor. \n\nSven stood there. She knew how much effort went into that single action. As many strides as he had made, this was still incredibly difficult for him. But he had done it - for her.\n\nTheir eyes met. Bjorn's deep green. Sven's icy blue. Some unspoken exchange. As if Bjorn weighed it all, once more deciding if this man, his brother, could be entrusted with his most precious treasure. With a simple nod, the crux was passed. Bjorn placed her hand on his brother's shoulder and stepped away.\n\nLeaving just the two of them as the soft melody began. It was Kirsty's knees that almost gave out as the words started to fill the silent room and her heart.\n\n\"If I never wake up in the morning, would she ever doubt the way I feel about her in my heart? If tomorrow never comes, will she know how much I loved her? Did I try in every way to show her every day that she's my only one? And if my time on earth were through and she must face this world without me is the love I gave her in the past gonna be enough to last? If tomorrow never comes...\"\n\nShe was blubbering. She knew it. But she could not stop. Those words hit too close to home. How close she had come to losing this man. The one that had first drawn her to them. The one who had taken her elbow, brought her through that turnstile in Tilbury that dreary October day, and into a new life. A new family. \n\nThe words of that song were made more precious because they were the public declaration of all the private moments that they had shared over the past few months. This man had become indispensable to her. From changing diapers to his knowledge of fishing that kept them afloat to his rope, even his discipline. One day she really ought to get around to telling him that standing naked in the corner no longer was punishment. \n\nShe might have stumbled, toppled them both then, if not for Bjorn and Mikael surrounding her from behind, holding her up. Helping them to finish what Sven had begun as the prophetic nature of the next words broke her.\n\n\"'Cause I've lost loved ones in my life who never knew how much I loved them. Now I live with the regret that my true feelings for them never were revealed.\"\n\nYes, it was time to go back \u2014 time for closure. Whether her father was right and death had changed her mother or not, it did not matter. Love was something that was hers to give. The goddesses' blessing. It was not something that had to be earned. And it was the final gift and offering that she could bring to the woman who had given birth to her. \n\nAnd with these men, her men, her husbands, friends, and lovers surrounding her, she knew that she had that strength. That power within her to forgive. Just as they had found the strength to forgive one another and to build a new life...together.\n\n\"I love you all,\" she blubbered as they all embraced. Unashamed. Proud of who and what they were. And the world or this tiny corner of it, be damned.\n\n***\n\nRoz stood in the shadows. Her arms wrapped tightly about her Rubenesque body. She hated herself at the moment. She should be happy for her friend. She was happy for Kirsty. But she was also jealous. The green-eyed monster had firm control of her heart and mind. \n\nHer friend had found her happiness, her place in this world. She, on the other hand, was alone, adrift, without any real purpose. Even the job that had once meant so much to her had soured. He had made sure of that. Her husband. Ex-husband. Lord James Arthur George DeWinter. Dr. DeWinter at the hospital where they had both worked for almost twenty years. \n\nShe might be the new head of the Physical and Occupational Therapy Department, but James was the Chief Executive. Not only was her ex-husband her boss, but their vitriolic divorce had become the source of gossip among the staff. Most of it was inaccurate, if not libelous. Both their reputations had suffered but hers especially. \n\nFifteen years of marriage. Years of fertility treatments and IVF. Too many miscarriages for her to think about. \n\nOf course, there had been good, too. At least in the beginning. James' intellect had challenged her as no one's ever had. He had taken her as his prot\u00e9g\u00e9 as much as his lover: the theatre, the opera, the symphony, book clubs, even a philosophy club. \n\nShe had been young, barely twenty when they first met. He was older, more than a decade older. He had gone to all the 'right' schools, a veritable list of the poshest institutions of learning in England, names that everyone knew. The best classical education that his parents the Dukes and Duchess could buy. He had traveled, too. \n\nShe had too many stars in her eyes to see the truth back then. She was his great creation, a Pygmalion social experiment. With her working-class and West Indian background, James had set out to remake her into the perfect neo-Liberal chef-d'oeuvre, magnum opus, pi\u00e8ce de r\u00e9sistance. The fact that she knew those words, let alone could pronounce each one correctly attested to his success. \n\nAnd for a time, it had been worth it. They had been happy. Not just the artistic interests, their careers, or the fancy holidays to exotic locations either, but their sex life too. It had been adventurous, to say the least. They had explored it all, wife-swapping, BDSM, and poly. \n\nBut ultimately, it had been her inability to give James a son and heir that had undermined it all. She wrapped her arms tighter about her as if to ward off a chill that was not in keeping with the sunny summer day. Those memories were still too painful for closer examination.\n\nShe knew that, like her friend, she should move on. Begin her life again somewhere fresh and new. She could too. At least modestly anyway. Despite the rumors of her gold-digging, Roz had walked away from fifteen years of marriage with nothing more than the North London home they had bought as a couple and a very modest settlement. No alimony. Not even a slice of his pension. Certainly nothing of his family's substantial and centuries old wealth. \n\nBut she had had to fight, fight nasty, for even that. A fight that had drained her, broken her. A fight that still had repercussions in her career. \n\nHer eyes drifted to the young couple that swayed unspeaking to the music. She could see that Georgia held herself stiffly in the handsome young man's arms. He looked vaguely familiar. Of course, his resemblance to Bjorn was striking. \n\nOh, yes, now she remembered. The cousin that worked with them on the boat. He had been there the day that she had said goodbye to Kirsty. It did not take her new degree in counseling and psychology to recognize that he had a deeper interest in the young woman in his arms.\n\nShe sighed; he could join the line. Something in Georgia called to her. It had from that first day they had taken Monika to the park while Bjorn and Kirsty worked out their differences. But what was it?\n\nRoz knew that she was demi-sexual; for her, the attraction was not physical but always emotional. She had once thought herself sapiosexual. That had been what had first attracted her to James, of course, his great intellect. But he had soured her on that as she came to realize there was a difference between education and intelligence. \n\nNo, for her, the attraction was always friendship. She had barely concealed her affection for Kirsty. But first, she had been involved with Raj; then she had disappeared for months, only to reappear with 'pretty boy' as she secretly called Bjorn. Of course, the joke was on her. Her friend had taken poly to a level that not even Roz had dared. Reverse-harem. And oh, what a harem that girl had. She stood no chance there.\n\nYes, there was an undercurrent of sexual attraction to Georgia. And the girl definitely brought out her Domme side. But she was reluctant to go there. She was not sure whether her new friend was truly submissive or the victim of oppressive abuse that had conditioned her responses. So, unless it was a matter of Georigia's safety, Roz kept that side of her personality firmly under control.\n\nOf course, the other possibility was that it was a maternal inclination. Certainly, the younger woman was of an age. She sighed and closed that door, too. But she could not deny the likelihood that the draw between them was some recompense for her secret sins. \n\nBut whatever it was, she had not lied to her prot\u00e9g\u00e9. Georgia coming to live with her was more of a blessing to her than it was to the girl herself. That house held too many memories. Bad and good. And unfortunately, her new studies were forcing her to face herself in ways she never had, ways she was not confident she was ready for. Long hours alone did that to you as you grew older. \n\nNo, she should use this brief reprieve to figure out what her future held. What and where she belonged now. Because she knew where she no longer fit, she just could not imagine a place where someone like her did.\n\n***",
        "Nils watched his brother hold the girl tightly. Their feet barely moved to the music. The way Karl looked at the young woman touched something profound, deep inside of him. But he was not a romantic. He was a realist. That was his place in this world. To do what was necessary to save his family, save their way of life. \n\nHe had been doing it for so long that he had forgotten anything else. Any softness, any need for a woman, or love. Some part of him resented Karl. Resented what must be done now. It was not their way. But Dag was right. Karl was the deciding vote in this family strife. They must do whatever it took to make sure that he was on their side. Even this. Even kidnapping. \n\nHe slipped deeper into the shadows. Time was not on their side in this. This late in spring, they would not have the cover of darkness to do what they must. It was risky. It was always dangerous, but their cousins had done it for centuries. Why couldn't they? Just this once, at least. One stolen bride for one brother, was that too much to ask of the gods? They would have to wait to see.\n\n***\n\nExhaustion ate at Kirsty. This day, seemingly without end, had been perfect. It was late, close to midnight when Olaf and Rachel boarded their new boat. There was not a dry-eye when Rachel's Dream set sail down the fjord. \n\nThey were heading first to Amsterdam, the city where they met. The summer would be sent sailing Europe. Rachel was most excited about seeing ancient Greek and Roman ruins. Winter they would return to help out at the Homdling and if necessary with fishing, beginning their journey again in the early spring with the Americas. \n\nHer father and Oscar were leaving on the morning ferry to Bodo. So, they were spending the night at a hotel in Reine to get an early start. Roz and Georgia would follow in a couple of days. Kirsty sensed a restlessness in her friend, something she understood well. She had thought there would be time after the wedding to talk with her about it. \n\nInstead, they had agreed that they would leave in the morning. All of them. Sven, Monika, and the babies too. They would face this together as a family. Bjorn was less than pleased. His interactions with her mother were still fresh in his mind. But it had only taken her tears and the words, \"I have to try,\" to change his mind. \n\nShe smiled as she kissed a sleeping Monika goodnight. She had finished nursing Elsa and Anna, who were once again tucked safely in their crib. She was not sure what she faced back in London. It was not a trip she looked forward to or one that she had thought to make again, certainly not so soon. But her father's words had burrowed into her mind and heart. Closure. As a daughter and a mother, she had to try at least.\n\nThe hand on her shoulder did not surprise her. She closed her eyes and leaned into the touch. \"Come to bed, lilla gumman.\" It was not a request. \n\nShe nodded and stood, one more look over her shoulder at the daughter of her heart. Would Monika, too, one day face a journey of closure? Kirsty knew that if the girl did, then she would support her, would encourage her. But it would change nothing. This was her child as much as Elsa and Anna or any other children they had. \n\nThe stinging thud to her bottom reminded her that the present was more real than the past or the future. She could always count on Mikael for that. They silently pulled the door closed on their sleeping children, and hand-in-hand walked to her bedroom. She had planned that it would be Mikael whom she called to her bed this night, but in the confusion of the day and the decisions they had to make, she had forgotten. \n\nIt seemed right; how once more he had come to her when she needed him most. She stood on her tiptoes and brushed a kiss across his cheek, \"I choose you.\"\n\nHis lips captured hers in a soul stealing kiss. She felt the world tilt as he leaned forward and fumbled with the door. Without opening her eyes or breaking the kiss, he led her in and across the room until she felt the firmness of her bed at the back of her legs. \n\nBut even as lost as she was in his kisses, she could not mistake the other hands that joined in caressing her body. Tiredness fled as they awakened her senses to something that she needed far more than sleep. Connection. Love. That fed her, energized her more than food or slumber ever would. Mikael broke the kiss and she opened her eyes. \n\nSven leaned against the headboard. Gloriously naked. Or he appeared to be \u2014 the scars on his legs and hips hidden beneath the sheet. His upper body had taken on more definition over the months as he used it compensate for his legs. He would never have Bjorn's bulkier build but damn did those biceps curl her toes.\n\nBjorn knelt at the foot of her bed. His hands still gripped her hips as he drew her forward, placing a sweet kiss on her shoulder. He, too, was naked. A sight that never failed to both excite and intimidate her. \"You needed this.\"\n\nShe nodded as she looked from one to the other of her husbands. \"How did you know?\"\n\nSven smiled, \"Because we are one, Kirsten.\" The devil himself danced in those icy blue eyes, \"Now strip.\"\n\nShe chuckled, \"I know I should not tell you all this, but that no longer frightens me as it once did.\"\n\nBjorn smiled, \"So, you have finally come to see yourself as we do. Perfect inside and out?\"\n\n\"Well, I wouldn't say perfect. Loved. Accepted. For who and what I am, not what I'm not.\"\n\n\"Such wisdom,\" Sven caressed her cheek. \"Now strip.\"\n\nShe danced on tip toes next to the bed as she attempted a striptease. \"Lilla gumman,\" Mikael warned. She increased the tempo until she stood completely naked in front of them. \n\n\"Rope,\" Sven order as Bjorn went to the toy box and came back with a length of it. He and Mikael worked together to secure her; arms spread wide at the foot of the bed. \n\nHer eyes never left Sven's. She was not certain that this night would ever come. Over the past few months, as the doctors decreased his medications, much of the erectile disfunction had disappeared. But not completely. There were still occasions where they laughed and loved through those difficult times. He had gotten better at that. And with the use of toys, his tongue, fingers, and her command, he always satisfied her even when his penis refused to follow his heart. \n\nBut despite what she had once said, it was not something she shared with the others. She had never even given Mikael any details about that night. Nor had he asked. What was private between one husband, stayed with that husband, unless it affected the whole family. This had not. \n\nStill, she had not dared to hope that Sven would ever share her like this with his brothers. Being with them all like this was to her sacred. Lofn. Rachel had shared with her this minor Norse goddess of forbidden love. She had become their patron saint of sorts. The defender of alternative lifestyles.\n\nKirsty had no more time for more musings as the solid thud of Thor connected with her shoulders. It was never exactly pain with Thor; his hundred falls of softest saude, were more like deep muscle massage, though its impact could jerk her whole body forward, straining against her rope bonds. She inhaled and closed her eyes, giving over to the release that her body craved. It had been so long, too long since she felt it at his hand.\n\nShe lost all track of time. Each blow took her deeper into that place, that place of perfect peace and love. The place she found only with them, each in his own way. She whimpered when the pounding stopped. She wanted more. She always would. It was never enough with them. Not in a whole lifetime. She had seen that revelation in Rachel's face today, felt it in her own soul. Eternity would not be long enough with her husbands.\n\nThe sharp sting on her nipples brought her back to reality. Her eyes flew open as the clovers closed around the hard buds. She stared into the dark grey storms of Mikael's eyes. His fingers collected the single drop of milk that gathered at the tip of each. He brought them to his lips, tasting her milk as he had so often over the past few months. \n\nBut she did not have the time to speak before the next blow fell. It was not the thuddy of Thor, but the sting of Herm\u00f3\u00f0ur that raced along her excited nerve-endings. She could not stifle the moan as it made contact with her bottom. She rocked forward as Mikael tugged gently on the chain between the clover clamps. Her mind exploded with the duality of sensations, trying to decide upon which to focus. \n\nShe fell deeper into the safety of sub-space. It was the release that she needed now. To put aside the turmoil of the past and the uncertainty of the future. She focused only on this moment, this place in time with them. All of them. It was perfection. She was thankful that Sven did not have her counting. She did not want to focus on anything but the feel of each blow of the flogger on her skin, each tug of the clamps on her nipples, finding her release in pain.\n\nBjorn stepped forward, his nails raking across her shoulders and back that she knew was red, perhaps even bore a few strips of courage from Herm\u00f3\u00f0ur. \"Hl\u00edn, remember the goddess of protection and consolation,\" he whispered against her ear.\n\nShe shook her head; in all their time together, she had never needed to use that word, doubted that she ever would. They were all so intuned with her, her body, her needs, her heart. He brushed a tender kiss across her enflamed skin, \"A few more, my love. Can you manage a few more for me?\"\n\nShe turned her head and smiled up at him, \"For you. Just for you, Master.\"\n\nHis beautiful face shone from within as he bent and kissed her lips, \"Always for me.\"\n\n\"Always.\"\n\n\"Spread your legs, Kirsten. Spread them wide for my brother,\" Sven's deep voice drew her attention. Her eyes met his blue depths. Her throat tightened at the desire and love she saw there. \n\nThese past few months had been so much more than she had ever hoped for with this man. He had become her partner. The one that helped with their daughters, even to becoming the expert diaper changer. She was not even surprised at the song he had chosen for their dance. Over the past weeks and months, those words that he had once been so afraid to say had come more readily to his lips. No, she never doubted how he felt about her. Not anymore. \n\nShe jumped as she felt the super sting of Loki land between her spread legs. That first blow followed quickly by others. She could not have kept count, even if he had asked. She closed her eyes; her head dropped back as she embraced the light of darkness. \n\n\"Open your eyes, Kirsten,\" Sven's command drew her back. She was powerless to resist. Her eyes met his.\n\n\"Look at me as Bjorn's floggers give you what you need. Mikael.\"\n\nHer mind exploded as her body begged to as she felt the sharp bite of Mikael's knife down her arms from her shoulder to her fingertips and back up. Across her chest and even her neck. Perhaps others would have felt fear or disgust as the tip of his blade lingered over the jugular vein. But she did not. This was trust. He held her life in his hands. \n\nBut she held theirs as well. In heart, her soul, her breasts, and yes, most definitely between her legs. When she took her husbands between her legs, it was about so much more than the reproduction that had once driven them to seek her out. \n\nNo, when she welcomed them into the warm, wet depths of her body, she offered them acceptance, understanding, unconditional love, and solace - life itself. And in turn they gave her their strength, courage, love, and lives. It was as it should be. As ancient as the goddess that came before all others, as right as the stars in the sky that led their ancestors back to this place.\n\n\"So beautiful. So perfect,\" Sven's voice caressed her. \"Come for us...\"\n\n\"Our sweet Freyja,\" their voices combined, sang through her, the smoothest melody, a song of love and completion that knew no beginning and had no end. Her legs gave way as she collapsed forward. Mikael's arms enveloped her from the front. Bjorn's body against her back kept her knees from buckling. And Sven's voice from the bed continued to caress her mind, \"Our perfect good girl.\"\n\nThe puddle continued to grow on the floor as her orgasm consumed her mind, body, and soul \u2014 her female ejaculation exuded the power of the goddesses themselves. \n\nShe lost all track of time. Whether they remained like that for seconds, minutes, or hours did not matter. It was completion. It was wholeness. It was the strength that she needed, that they all needed to face whatever lay ahead.\n\n\"Untie her,\" his voice once more held that command she loved so much. The one she had come to rely upon when her sub brain failed her. When she had been up too late during the night with their daughters, when her shieldmaiden deserted her, when she no longer knew what to do next, it had become Sven to whom she turned. \n\nHis words of praise or love, his kisses or hugs, and his commands were the solace, stability, fortitude, and resilience upon which she relied. He was her partner and helpmate. It was such an odd thing considering how things had begun with them. Now that seemed almost unreal, something that had happened to someone else. \n\n\"Bring her to me.\"\n\nBjorn lifted her and carried her around the side of the bed, depositing her so she sat astride Sven's hips. She smiled as she felt his erection brush against her core through the thin material of the sheet. She felt Mikael's hands on her shoulders, steadying her as she regained her equilibrium.\n\nSven drew something from beneath the sheet. It glinted in the low light. \"Kirsten, do you accept this collar in pledge of our undying love? A symbol of the Dom/sub relationship which lies between us? Not of abuse or subjugation but of our responsibility to cherish, protect, and care for you always? To place your needs above our own?\"\n\nShe could barely make out the white gold charms that dangled from the thick, short chain. Tears were marring her vision. Still, she fingered them.\n\n\"My ropes which may bind your body but free your soul,\" Sven smiled at her.\n\nMikael kissed her shoulder, \"My knife that cuts through to the very heart and soul of the matter.\"\n\nBjorn's fingers beneath her chin lifted her head and turned it to met his gaze, \"My floggers that strip away all that is false to the true beauty that lies within you.\"\n\n\"Do you accept us for our flawed natures? Knowing that we have and will continue to make mistakes, but recognizing that we would never hurt you on purpose?\" Sven continued.\n\n\"Do you promise to love and nurture the offspring of our bodies? Regardless of DNA, sex, gender, or abilities?\" Mikael breathed into her ear.\n\n\"Do you promise to always welcome us into the safety of your harbor? Taking each of us as equals and individuals into your body and your heart? Without preference?\" Bjorn's eyes were filled with tears as he looked from her to his brothers. \n\nBut then too, so were Sven's and she would have sworn she felt wetness against her cheek where Mikael's face touched hers. Were they hers or his?\n\nHer throat was so tight. She started to nod her head up and down. The solid sting to her outer thigh caused her to chuckle, \"Use your words, Kirsten. Will I ever teach you proper manners for a submissive?\" Sven teased.\n\nShe leaned forward, her tear filled eyes meeting the blue of his, \"Yes, I promise with my whole heart.\" She placed a tender kiss on his lips as she felt the sheet slip lower, his cock finding her welcome.\n\nShe watched transfixed as Sven handed the necklace to Mikael. But it was so much more than a mere necklace. It was her collar \u2014 the outward sign of her love for these amazing men. Her husbands were anything but simple fishermen. \n\nEach a unique combination of talents and flaws that offered her soul something it needed. Sven and his discipline and now this new partnership of equals. Mikael with his pain and laughter were the perfect combination. And Bjorn with his unwavering love and support. Each completed her differently. \n\nThe tears slipped faster from her eyes as she felt the weight of that chain and the charms that represented all of those she loved most. Mikael's fingers fumbled for a moment at the back of her neck. Then that weight, the weight of her commitment and theirs, shifted, resting firmly around her neck. \n\nIt was as pure a moment as she could ever imagine. She might never have a day like this one that Rachel and Olaf shared, but she did not need such a public display. The power of this private one was more than enough to validate the love they shared.\n\nMikael's hands found her breasts, kneading them. She felt the sharp tingles, knowing that her milk had let down. Perhaps it was a good thing that her little milk-monsters had nursed so long this night. Not only would they sleep longer so she could enjoy their daddies more, but it also meant she would not spray the whole room. \n\nSven leaned forward, taking one nipple into his mouth as she sank further down his cock. She felt warm wetness as Mikael's fingers found her ass, his fingers gently spreading the lube and opening her for him. The intensity of the double penetration was not something she had experienced often lately. Between her pregnancy, the babies, and their time at sea, their lives, including sex, had become shockingly mundane. \n\nThere was nothing mundane about this as Bjorn's lips captured hers, swallowing her cries of wonder as Mikael penetrated her tight ass. She moved a bit, adjusting her position to accommodate both Sven and Mikael. She began the slow rocking rhythm that was so often the case with Sven, her on top was the easiest and preferred position for both of them. But Mikael slowly moving in and out of her ass only augmented the feeling, taking her to another level.\n\nBut something was missing. Someone. As Bjorn stepped closer, she leaned forward, closer to Sven's chest, allowing Mikael to plunge even deeper, as her lips wrapped around Bjorn's erection. She was thankful that it prevented the scream that begged to be released, which would surely wake the children. Not even these walls were sound-proof enough to contain her joy at this perfect love. \n\nThey found the perfect pace. Kirsty savored each moment, knowing that it might be weeks or months before they could all be together like this once more. She drew the strength that she needed from their united love, taking in and cherishing each morsel. Her tears flowed as readily as the juices of the goddess. \n\nAt first, there was no rush. Simple touches. Tender caresses. Kisses on her breasts and shoulders. Her hands could not decide which husband or what part to fondle. But each stroke, each kiss, fed the flames: hers and theirs. The tempo quickened as they each, individually and together, reached for the ultimate completion. \n\nThen once more, that perfect chorus reached to Asgard, \"Come for us, our sweet Freyja.\" Their prayer met instantly by the goddess. Her body convulsed, but she need not worry; there was, after all, six strong arms just waiting to catch her. \n\nSven was the first to join her in bliss, coming inside of welcoming depths. She almost regretted their decision to wait a bit before having another baby. This night was as perfect as the one that had born the fruit of their twin girls that slept just down the hall under the loving protection of their big sister. \n\nBut there would be other opportunities. Other nights like this one. She was confident of that now. The weight of the chain tight about her neck assured her of that. Of their undying love and commitment as they said.\n\nBjorn tilted her head just a bit. His cock slipped deeper down her throat as he joined in the symphony of love that they were composing this night. Mikael leaned his head between her shoulders, his hands firm on her hips as he plunged deep into her ass, adding his own melody to the sweet song. \"Lilla gumman.\"",
        "She soared, reaching for the heights of Valhalla and joining the Valkyries. Offering la petite mort, that sweet bliss of orgasm as the French named it, to each of them, while drinking deeply of its ambrosia herself. \n\nYes, this night was a perfect celebration of Lofn, an offering of the most profound kind to their blessed goddess of forbidden love. But then again, as Sigurd quoted...Nothing done in love can ever be wrong."
    ],
    "authorname": "Tara Cox",
    "tags": [
        "flogging",
        "group sex",
        "love",
        "marriage",
        "polyamory",
        "polyandry",
        "romance",
        "submission",
        "triple penetration"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ashgirs-wife-ch-12"
}