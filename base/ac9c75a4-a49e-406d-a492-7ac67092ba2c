{
    "title": "There and Back Again Ch. 133",
    "pages": [
        "Chapter One Hundred Thirty-Three: Captivated \n\nThe fight began about as expected \u2013 with flights of arrows. The soldiers deflected the missiles with their shields, but one or two of the archers got lucky, and the first soldier fell, an arrow protruding from his neck. The emissary began casting \u2013 some sort of lightning spell, from the feel of it \u2013 and I wrenched its mana away before it could do any damage. Faren engaged with a number of hurlocks, swinging his longswords in arcs, cleaving indiscriminately, and a few of the soldiers went back-to-back, protecting each other from flanking. \n\nStill holding the emissary's mana and using it for shields when I could, I began working my way through the archers. It was difficult: though they couldn't see me, they were aware of me, and I risked being hit every time I attacked. I picked off those standing alone first, then started working on a group of six standing together to the north. I'd slash at one and then drop to my knees or dodge out of range before its fellows could divert their attacks to where I'd just been standing. \n\nI spared a glance for Faren and the soldiers, shocked at the carnage; there were more than a dozen darkspawn bodies, some still weakly twitching, strewn around the clearing, with several human corpses scattered between \u2013 but the odds were getting worse. Each person who fell had taken multiple darkspawn with him, but the sheer numbers of the monsters meant that Faren and four others were now standing together and virtually overwhelmed. \n\nAnd then I felt something that made my stomach plummet: a mana signature the likes of which I'd experienced only once before \u2013 when I'd fought the General during the final battle. That explains the coordination, then. I skipped away from the archers I'd been targeting, closed my eyes, reached out and seized all the mana I could take. It took an effort I hadn't expected, almost as though I was wrestling with the creature I hadn't even seen yet. Sweat broke out on my forehead, and I clenched my fists and pulled; with a ripping sensation, I yanked the mana away, hearing a rough cry of alarm, or pain, in the distance. \n\nFinally opening my eyes, I wiped my nose irritably, only to realise it was bleeding again. I pinched it between my fingers and then looked around, trying to reorient myself after an unknown amount of time psychically wrestling with a darkspawn mage. When I was finally able to focus, I gasped, horrified at what I saw. \n\nThe soldiers were dead \u2013 all of them, bodies torn up or fallen like leaves scattered across ground soggy with blood \u2013 and Faren knelt, a darkspawn wielding a wicked-looking jagged dagger against his throat while he panted with rage. A tiny trickle of blood escaped from a wound on his neck where he'd obviously been nicked while struggling, and a larger red spot was spreading down his arm, blood dripping off his fingers. And beside him was not only the first emissary, the one who'd spoken, but a group of hurlocks and two other figures as well. \n\nThe first I initially took as a genlock, wearing dirty but still obviously well-crafted armour; a closer glance showed long brown hair, far more than any genlock would ever have, and eyes far more alert and cunning than the black pools of most darkspawn eyes. A ghoul then. A dwarven ghoul. \n\nThe next creature frightened me even more. It was tall, a good head taller than the hurlocks that surrounded it, wearing robes that must once have been fine garments, but were now caked with blood and filth, torn and ragged in places, sagging loosely across a skeletal frame. Over top of the robes, it wore a complex, almost delicate piece of gold armour that wrapped around its chest and shoulders in a parody of human ribs. One side of its face was damaged, whether formed that way or injured at some point I couldn't say. Over its half-melted face, it wore a strange mask, part helmet, part crown, with one side sweeping up into a sharp horn. Deep chasms in its cheeks showcased decaying skin, but despite the unnatural grey colour and wounds, its face looked far more human than any true darkspawn. \n\nI had seen that face before \u2013 in my dreams, after the Joining. \n\nThe Architect. And it was looking straight at me. Oh shit. \n\nThe Architect was the source of most of the mana I held, and I wondered if some of its pallor was due to the unexpected loss of mana. It \u2013 he, I supposed \u2013 raised a shaky hand and barked a command in a language I couldn't understand, and the darkspawn all stopped moving. Faren still struggled weakly, but desisted when the hurlock holding him pressed slightly harder with the dagger. The ghoul \u2013 Utha, I realised \u2013 stepped up to him and placed her hand on his shoulder gently, and the Warden seemed to sag in place. \n\nI turned my attention back to the Architect, who was watching me curiously; neither Utha nor the other darkspawn seemed to be paying me any attention, though the emissary glared at me furiously. \n\nHe opened his lopsided, ruined mouth, and the voice I remembered from my Joining dream issued forth. \"We mean you no harm.\" Utha looked up at him, apparently startled, but the rest of the darkspawn ignored the exchange. \n\n\"Right. No harm. That's why you've killed my soldiers?\" He didn't respond, and I scoffed. \"Let my friend go, then, if you mean no harm.\" \n\nThe Architect...winced? \"I cannot. I...need him. What have you done to me?\" He took a few steps towards me, and I stiffened. \n\n\"Stolen your mana. Fun, right? Take another step and you'll find out what else I can do to you.\" I knew I could do my modified smite if I had to \u2013 it probably wouldn't kill him, but it would hurt. \n\n\"Harm me, and I won't be able to stop them from killing him,\" he warned, but he didn't take the next step, either. \n\n\"Guess we're at an impasse, then, aren't we.\" I scowled. \"And I'm pretty sure taking his blood counts as harm.\" \n\n\"I will endeavor not to kill him, but I require Warden blood.\" He reached up and rubbed his forehead irritably, a gesture I'd seen time and again from people with headaches. \"You must stop this.\" \n\n\"I'll stop when you let him go. Otherwise, I hope you didn't plan on using your magic ever again,\" I bluffed. Hopefully his confusion means he has no idea what my abilities are, or how far they will extend. \n\nHe glared at me through red-rimmed, rheumy eyes, then tilted his head slightly and turned to glance at Utha, who still stood near Faren. She focused on him intently, and he waited a moment, head still cocked as though listening, then lifted a hand placatingly and mumbled something to the former Warden before turning back to me. \n\n\"Enough. We can discuss this further later. For now, you will come with me.\" \n\n\"That's not going to happen!\" \n\n\"Come with me, or your friend will die.\" The darkspawn holding Faren shifted, and Utha snarled \u2013 though whether at Faren, me, the hurlock, or the Architect I couldn't be sure. \n\n\"No Sierra! Go! He can't stop you, and they can't see you. Go!\" Faren shouted, struggling anew. \n\nUtha turned to him, faster than a snake, and struck him in the head with the side of her heavy gauntlet. Faren collapsed in a heap, and the darkspawn holding him sheathed its blade before hoisting the dwarf over its shoulder in a fireman carry. \n\nI cried out in fear and glared at the ghoul. I wanted to scream at her, to tell her exactly what I thought of a Warden siding with a darkspawn against her own kind \u2013 but I knew she couldn't hear me, and that she'd sided with the Architect over her own kind before. The former dwarf pointed and grunted, and the darkspawn carrying Faren turned and started to walk away. \n\n\"If you come, he lives. If you walk away, I will drain him completely \u2013 I need his blood, not the rest of him. The choice is yours.\" With that, the Architect turned and followed Utha to the north. \"Leave your weapons,\" he added over his shoulder.  \n\nI hesitated for a moment. What to do? Follow the psychopath in the vain hope he won't kill Faren anyway, or leave my friend to die while I escape? Avanna has gone for help \u2013 we'll be rescued. There really wasn't much of a choice. Sighing, I dropped my daggers, arranging the three \u2013 my two combat weapons and the arm sheath Zevran had given me \u2013 in a rough arrow pointing the direction the darkspawn were headed, and shouldered my pack. They won't be able to hurt me, I think...the Architect and emissary won't approach me without mana, and the others would be flailing about in the dark trying to reach me anyway. With that small consolation, I followed behind the retreating darkspawn with a reluctant huff. \n\nWe walked well into the night, the darkspawn seemingly unbothered by the lack of light; when I started to fall behind, tripping over unseen divots and roots, the Architect finally called for a halt. Utha and the other emissary gave him strange looks when he demanded they stop, but did not openly object. I sank to the ground gratefully, twenty or thirty feet from where they set Faren; Utha proceeded to tie the dwarf up and gag him before settling beside him, her gaze roaming suspiciously in my direction without focusing on me. \n\nI knew I couldn't risk sleeping \u2013 not if I wished to keep the Architect from getting his mana back \u2013 so I sat cross-legged, prepared to wait the handful of hours until the sun rose. I fished through my pack, found myself some rations, and nibbled on a bit of jerky disconsolately as I watched the darkspawn. When the Architect wasn't watching, I dug into my bag and pulled out the first thing I could think of \u2013 a dirty sock \u2013 and tucked it underneath me, hoping it would go unnoticed by the darkspawn, and help Alistair or Aedan find me if they tried to come looking. \n\nSome of the darkspawn sat, some roamed as if keeping watch. The emissary stayed near the Architect, its demeanour almost subservient as it waited for him to sit before it settled nearby. The Architect eyed me curiously, gaze travelling between the two sentient darkspawn and me, seemingly fascinated that the ghoul could not see me, even knowing I existed. \n\n\"How do you do that?\" he finally asked. \n\nI glanced at Utha, her ruined face obscured by the darkness, and then back again. I shrugged. \"You tell me. You did it to me, after all.\" \n\nIf I could have seen his eyebrows, I could tell one of them would have been raised in confusion. His expressions were disconcertingly human, and I shifted uncomfortably as I continued. \"I assume it was something like what you did to the Grey Wardens whose taint you accelerated twenty-five years ago in Ortan Thaig.\" \n\nHe appeared to be considering it, his head tilting in that familiar canine way; after a few moments, he shook his head irritably. \"Possible, I suppose.\" He paused. \"And how are you doing this?\" He gestured at himself and the ornate staff he had set beside himself, and I knew he meant his mana. \n\nI waved a hand at myself. \"Templar.\" When he didn't respond, I clarified, \"I'm a templar. Well, something more than a normal templar, I suppose. Also your fault, I think. Look, my friend is hurt. And a dead Warden doesn't help you as much as a live one, right? Let me give him this.\" I held up one of the small healing potions that I made whenever I got the chance. \"It's just a healing potion.\" \n\nHe considered briefly, then nodded at a stump about a dozen feet from me. \"Put it there, and Utha will administer it.\" \n\nI did, and the former dwarf retrieved it and carefully poured it into Faren's open mouth after removing his gag. Once done, she re-gagged him and sat down again. I thanked the Architect, and he acknowledged it with a puzzled nod. \n\nHe lapsed into silence after that, and I sat quietly, alternating between watching the stars, and watching the various darkspawn. After a couple of hours I saw Faren stir, to my relief; he couldn't talk, but I could tell by his aborted movements that he was awake and struggling against the ropes. Not wanting him to hurt himself or panic, I called out to him. \n\n\"Faren, I'm here. Try to relax.\" I wanted to remind him we'd be rescued, but I didn't want the Architect sending any darkspawn against Avanna, so I held my tongue. \n\nHe grunted, but the twitching stopped. Shortly after that, the sky began lightening as dawn approached; without a word, a hurlock stooped to pick Faren up again, and I stood up reluctantly. We walked the whole day, stopped only briefly to allow Faren and me bathroom breaks; Utha fed Faren some jerky from one of the soldiers' packs I hadn't noticed that they'd stolen, and I ate some of my own while walking. The darkspawn didn't eat, for which I was thankful \u2013 but it was also creepy. Where do they get energy from? I was grateful for the year of solid walking I'd done during the Blight, or I'd never have been able to keep up with the darkspawn's unending stamina. As it was, between no sleep, a few months of less exercise, and the crash after the previous day's adrenaline rush, I was barely able to stumble along behind. \n\nSometime in the evening, we came to a cave opening in the side of a hill; the darkspawn entered without hesitation, taking Faren with them. The opening was narrow, and the entrance partially covered over with vines and grass. I knew anyone looking for us would easily miss it. I paused, inspiration striking as I gazed into the inky blackness beyond. \n\n\"Wait!\" I called. The Architect paused just inside and looked back at me, and I gestured to the opening. \"I can't see in there. You want me to come with you, I'll need some light.\" \n\nHe seemed to consider this, then hissed something at one of the hurlocks. The creature ventured further inside, and the rest of us waited. I bent down and fished through my pack, coming back out with a piece of jerky, taking an ostentatious bite; when the Architect looked away, I dropped another sock, standing on it so it wouldn't be seen. The hurlock finally returned carrying an unlit torch; the Architect went to light it, remembered I held his mana and he couldn't cast, and then finally set the thing on the ground near the entrance. I got out my flint \u2013 not wanting the Architect to see my Zippo \u2013 as I waited until he moved further inside, then retrieved the torch and, after a few moments of messing around, got the thing lit. \n\nWith a deep breath and a last glance at my sock, which had gone unnoticed, I slipped into the cave behind the group of darkspawn, holding the torch in front of me. It was less cave and more tunnel, heading quite steeply into the hillside. I had to be careful on my feet \u2013 the dirt floor shifted and moved as I stepped on it, setting off small dirt slides as I went. The air was stale and damp, the walls close and claustrophobic, and I concentrated on taking slow, deep breaths to keep from panicking. \n\nI'd never been so happy to reach the Deep Roads. One moment I was crouching through a narrow dirt and stone tunnel, and the next I was standing on paving stones with a twenty foot ceiling above and statues of ancient paragons every hundred feet or so. The section I was in stretched off into the distance each way, lit by the lava pools that were everywhere within the Deep Roads. It was thoroughly saturated with the taint, messing with my ability to sense darkspawn. \n\nI followed the darkspawn to the left, then into a cross-cut, before finally coming out into a chamber with multiple warped wooden doors. Several of the darkspawn turned and went through one door, but at the Architect's gesture, I followed the one carrying Faren through a different door. The room we entered was set up like a dungeon, with several barred cells; I protested uselessly as Faren was dropped into one cage. The Architect opened a second cage which was beside, but at an angle to Faren's, and gestured me in. \n\n\"No way. You think I'm going to voluntarily go in there?\" \n\nThe Architect nodded. \"I cannot make you, I realise, but it is for your protection as well as mine. I cannot control my brethren completely, and while they cannot see you, if they stumbled upon you by accident it would be...unfortunate for you.\" He paused and his tone changed, becoming more...sinister, somehow. \"And if you do not go in, your friend will die. I only need his blood, after all.\" \n\nHe gestured, and I turned to see the hurlock approaching Faren with his dagger out. Sighing in defeat, I stepped towards the cage. \"Leave your pack,\" he commanded, and I set it on the floor outside the cell. The Architect took the torch from me, setting it into a bracket on the wall, and then locked me in. The hurlock sheathed his dagger at a growled command, but proceeded to tie Faren to a stone chair they had dragged into his cell. I could see the dwarf through the bars; he had dried blood on his face and arm, but otherwise appeared ok. It was the closest I'd been to him since he'd been captured, and I wondered how his wounds fared with only the small healing potion to help him. \n\nThe hurlock pulled away the gag to a stream of profanity that would make a sailor blush; I chuckled in relief. If he's able to invent new swear words, at least he doesn't have brain damage. I waited until the Architect and his darkspawn had left and Faren's tirade had ended before speaking. \n\n\"You okay?\" I asked. \n\nHe sighed. \"I'm fine. Pissed at you, actually. You were supposed to escape, not voluntarily climb into a cage next to mine!\" \n\nI flushed. \"Yes, well, if me being a prisoner keeps you alive until we get rescued...\" He scowled, and I sighed. \"Faren, they were going to kill you if I didn't come.\" \n\n\"So let them!\" he shouted. \"I should have just killed myself and then they wouldn't have had any leverage over you. Ancestors' asses, I'm good as dead anyway when that husband \u2013 or brother \u2013 of yours finds out, nevermind what this Architect has planned for me.\" He struggled against his ropes briefly before slumping down, looking defeated. \n\nThinking about Alistair and Aedan hurt. I wondered how long it would take them to realise I was missing \u2013 which depended on Avanna getting away \u2013 and what it would do to them when they figured it out. Tears threatened, and I wiped them away angrily. What would Alistair do in this situation? Ah, silly humour. I can do that. I smiled wryly. \"Don't worry. They won't actually kill you. Maim you, maybe, or torture you perhaps, but not kill.\" \n\n\"Thanks,\" he muttered wryly. His dirty look was interrupted by Utha bustling through the wooden door carrying a large clay pot. It looked familiar, reminding me of...Son of a...it's like the pot Avernus used when he collected my blood. The Architect followed her, unlocking the door to Faren's cage and allowing the ghoul to go through. \n\nFaren cursed and struggled as Utha untied him; she held him at knife point and gestured for him to relieve himself in a rough wooden bucket before tying him back down. She kept one of his arms free, holding it tightly; the Architect, uncaring of his struggle, ripped through the blood-crusted hole in his armour with a dagger. I could see a fresh pink scar \u2013 all that was left from his injury during the battle, evidently \u2013 but then my view was blocked by the Architect. Faren gasped, then started cursing again as the sound of blood plinking into the jar echoed around the room. \n\nWhile we waited, the Architect settled into a rickety wooden chair outside my cell and regarded me quietly for a moment. \n\nFinally I broke the silence, unnerved. \"So how did you do it? How did you send me away?\" \n\nHe blinked once. \"I collect books. I spend much time in ancient ruins. I found an old Tevinter tome that contained a spell to 'send away' a person's mind.\" \n\n\"Did you know what would happen to me? Where I'd end up?\" \n\nHe shook his head. \"I presumed it separated the spirit from the body, and that either the spirit would be destroyed or end up in the Fade.\" ",
        "\"So you cast a spell you had minimal knowledge of, randomly, in hopes that it would kill me?\" \n\nHe sighed. \"How were you able to return?\" \n\nI growled. \"I have no idea! Apparently the spell was defective, or perhaps it wore off.\" As he contemplated this, I asked another question that had been driving me crazy for months. \"Why me?\" \n\nHe shifted in his seat. \"I had a vision.\" \n\nIt was my turn to blink. \"A vis- ...you tried to kill me because of a vision? What sort of stupid, delusional...\" I was indignant. \n\n\"It is occasionally possible to divine the future, if you know how to look. As I contemplated a plan to end the slaughter of my brethren-\" \n\n\"By making every human undergo the Joining and then accelerating their taint? That idiotic plan?\" I interrupted. \n\nHe nodded slowly, looking puzzled. \"How do you know that?\" \n\n\"Everyone on Ear...uh, where you sent me, knows that was your plan.\" \n\nHe frowned, silent until I gestured for him to go on. \"My plan was interrupted by the loss of the Grey Wardens I attempted to recruit,\" he paused and glanced at the ghoul still holding Faren's bleeding arm, before amending, \"most of them. As I looked for alternate ways to advance my plan, I had a vision. Of twins, a man and a woman, and somehow together they destroyed any chance of success. So I looked for a way to prevent it.\" \n\n\"What sort of imbecile are you?\" I rubbed my forehead in sardonic amusement. \"Have you ever heard of a self-fulfilling prophecy?\" \n\nHe just looked confused. \n\n\"Where you sent me, there are people, philosophers and things, who have spent a lot of time thinking about the pitfalls of prophecy. For example, what if you had a prophecy that you would...I don't know...\" I thought about one of my favourite movies. \"That you would knock over a vase and smash it. Because of the prophecy, you spin, looking for the vase, and bump it. If you hadn't been given the prophecy, maybe you wouldn't have turned, wouldn't have bumped it. The prophecy came true because you'd been told the prophecy.\" I rubbed my forehead irritably. \"What if the reason my brother and I stop you is because of what you did to me? To us? Without that, we might have let you go. But I can guarantee that, now, given the chance, my brother will kill you.\" \n\nHe gazed at me for a minute, and I imagined the cogs spinning as he considered what I'd said. Finally he waved a hand dismissively. \"It no longer matters. That plan became untenable for other reasons-\" \n\n\"-because it was stupid?\" \n\nHe continued as if I hadn't spoken. \"-and I developed a different idea.\" \n\n\"Ah yes, killing the Archdemons. Good job on that one \u2013 oh wait, that didn't go according to plan either, did it? Was it the Grey Wardens, as always, who did that? Pesky details. Does Utha know you started the fifth Blight?\" \n\nFaren, who had been listening intently, suddenly choked. \"He started the Blight?\" \n\nI nodded. \"That's right, you weren't with us yet when we talked about it. Yeah, he did. Intended to kill Urthemiel, and instead, tainted it.\" \n\n\"Because that wasn't at all predictable.\" Faren scoffed, and Utha growled at him. \n\n\"Enough,\" the Architect demanded. \"We will speak no more about this.\" He stood, clearly completely offended, and it was such a human reaction that I had to bite my tongue to stifle a giggle. He stalked into Faren's cage, taking over from Utha and watching the blood collect in the jar. Faren jerked against his hold unsuccessfully. \n\nI couldn't see how much blood they took, but they let it pour into the jar for several long minutes. Faren's colour paled, his struggle slowly losing energy, until he slumped in the chair, barely awake, breathing shallowly. Long before they were done, I was begging them to stop, worried they'd take too much \u2013 he'd already lost some blood during the battle, and I didn't know how much more his body could handle. \n\nFinally they finished; the Architect tied a rag around the wound, as Utha bound his wrist back to the chair. She then turned and left, lugging the pot of blood with her, as the Architect offered Faren a piece of jerky pilfered from my pack. When the dwarf had taken a few listless bites and a drink from a water skin, the darkspawn offered a piece of jerky and the rest of the water skin to me through the bars and then left, but not before locking Faren's cage. The dwarf appeared to be half-asleep, mumbling incoherently as the sound of the Architect's steps receded down the hall. \n\nI nibbled my jerky disconsolately, watching my friend warily; to my shock, once it was obvious that the darkspawn wasn't coming back, he opened his eyes and sat straighter, giving me an impish grin. Heart racing, I smiled back. \n\n\"Asshole.\" \n\nHis grin widened, and then he flushed slightly. \"Hey, you had to seem really worried or they wouldn't have stopped.\" \n\n\"I swear, when I get my hands on that bastard...\" \n\n\"Speaking of which, can you get us out of here?\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "celebrity",
        "celebrities",
        "romance",
        "romantic"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-133"
}