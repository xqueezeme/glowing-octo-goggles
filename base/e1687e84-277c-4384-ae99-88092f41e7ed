{
    "title": "Gullible Ch. 03",
    "pages": [
        "3.\n\nIn the middle of the night, Vickie slid out of bed to go to the bathroom.\n\nShe was gross. She hadn\u2019t cleaned up anything. Cum. Sweat. Her brother\u2019s slobber all over her boobs, and everywhere else too. She smiled at how gross she was, and her hand even reached up to worry her thick nipples.\n\nSam and Will both. Both of them in just a couple nights. She had always loved, lusted after her brother, but now she had had sex with them both. Her sister and her brother.\n\nHer mind knew exactly where that train of thought would lead, and she had no intention of wallowing in anxiety and torment. She forced her eyes to look at her body in the mirror.\n\nFor a split second, she thought she looked like a horror movie villain. Her braids were all askew and... But no. She was glowing with happiness. She couldn\u2019t even stop smiling. She felt delightfully tender, and the muscles of her legs and back were just ever-so nicely sore. She was never a girl for working out, but this feeling might change her mind.\n\nShe pinched her nipple and smiled wider.\n\nMaybe she wasn\u2019t ugly. At least not hideous, maybe?\n\nHer intellectual brain told her that despite how much she loved the idea of being still covered in their sex, a quick shower would be smart.\n\nShe sighed, still smiling, and turned on the water.\n\nShe was just going to rinse off. She didn\u2019t have the energy to pull out the braids, even though they needed it, but she did decide to scrub herself down, and so she got out the soap and went to work, humming faintly.\n\nWill came to dazed consciousness shortly after Vickie slid away from him. He had to pee badly.\n\nShe left. He could hear the shower running now. Was she angry? Did she regret it? He had just lost his fucking virginity. He had just fucked his baby sister. Well, she was only a year younger than him, but still. Baby sister.\n\nAnd then before his mind could work up into a tense ball of self-loathing, he remembered last night more physically. The sensations. Smooth skin, sweat dripping, the scent of her arousal. The moment when he pushed his cock into her.\n\nShe wanted it. She wanted to have sex with him. He remembered her looking up at him.\n\n\u201cWill, I want you to fuck me. I need you to take my virginity.\u201d\n\nGood lord, he could still hear her say it. Her voice was low and husky. She was impossibly sexy.\n\nBut it was those pills, right? The pills his elder sister had given him. Blue for him would make him more confident. Pink for Quinn would lower her ambitions. But Vickie took the pink pill. Sam said it wouldn\u2019t change basic desires, just make them more plausible. So maybe Vickie did want him the whole time. Her emotions seemed so genuine.\n\nWhat about him and the blue pill? It was supposed to be effective for about 24 hours. He wasn\u2019t sure if he still felt confident. He never had been before, but as he thought about it, he never would have had the confidence to go through with it before. So, maybe being confident was a good thing. He tried to remember how many pills were in that little tin.\n\nBut he was still worried about Vickie.\n\nA confident man would just walk into the bathroom and make sure things were okay.\n\nHe was a confident man. Also, he had to pee now, so it was either go in there with her in the shower or he was going to need to break out an empty bottle or something. That would be the less confident option.\n\nBut he slid out of bed haunted with uncertainty. Should he put on underwear? Wait until she was out of the shower? Confident people didn\u2019t have these nagging questions, did they?\n\nIn the end, he decided a naked dash to the bathroom was the right call. Thank goodness Sam was stuck on campus and his mom was off wherever the hell she was.\n\nHe opened the door, and steam rolled out. It was still hot even in the middle of the night, but it was a bit more bearable.\n\nHe sensed Vickie had been moving and now she wasn\u2019t. There was still time to flee.\n\n\u201cHey, Will. Uhhh... How are you?\u201d Her voice was surprisingly fragile.\n\n\u201cUm... I gotta pee.\u201d\n\n\u201cOk.\u201d\n\nHe went to the toilet and lifted the seat lid. He barely made it.\n\n\u201cDon\u2019t flush while I\u2019m in here, okay?\u201d\n\n\u201cSure, okay.\u201d\n\nThis was horrible. They weren\u2019t actually talking to each other.\n\nHe saw her silhouette start to move, hands running up and down her legs.\n\nHe finished peeing.\n\n\u201cHey, Vickie?\u201d\n\n\u201cYeah?\u201d Her voice came back immediately and strong.\n\n\u201cAre we okay?\u201d\n\n\u201cYeah, of course.\u201d\n\nThere was an awful, painful pause. What would a confident man do?\n\nThe shower door slid open and he stepped in.\n\nShe lunged to him and took him into a bear hug, smashing him up against the wall of the shower.\n\nHe responded, wrapping his hands around her and lowering his head to kiss her on the top of the head.\n\n\u201cAre you crying?\u201d\n\n\u201cNo! I just... I wasn\u2019t sure you still...\u201d\n\nHe reached down and lifted her head up to him.\n\n\u201cI still.\u201d\n\nThen he leaned down and kissed her on the lips.\n\nHer hug went from bearlike strength to melting into him.\n\nThey just stood there for a long while, holding on to each other, letting the water flow down their bodies.\n\n\u201cI can\u2019t believe...\u201d Will started, looking down at the incredible pale pink armful of beautiful woman he held.\n\n\u201cI know! I mean, Will, I\u2019ve wanted to tell you so many times. I\u2019ve wanted to do that for so long. Do that with you.\u201d She kept her face buried in his neck.\n\n\u201cI... Vickie, I had no idea. I always thought you were, god this is going to sound awful, but I didn\u2019t know how beautiful you were, how sexy you are. I... I love you Vickie, you know I always have, but I had no idea...\u201d\n\nShe pulled him tighter to her, luxuriating in the response his body was starting to have to her.\n\n\u201c\u2018S\u2019okay. Sam told me that guys are kind of dumb about things like this.\u201d\n\nThen she did look up to him, that shuddering insecurity rising to show in her eyes.\n\n\u201cWill, we\u2019re okay though, right. Really okay? Because I want to...\u201d Her blush rose deeply, making her look even more delicious. \u201cI want to keep uh... playing.\u201d\n\n\u201cOh god, Vickie, we\u2019re okay. I guess I don\u2019t know what all this means, but I feel like I won the lottery with you. I want to do everything with you.\u201d\n\nHe leaned down and kissed her on her upturned lips. He was also aware of how hard he had gotten, holding on to her so close and hot.\n\nShe broke the kiss off, and pushed herself away.\n\n\u201cWhew! This is dangerous. I want to just... attack you right here.\u201d Then she put up a hand holding him back. \u201cBut hold on there, cowboy. I need to get cleaned up. Maybe you can help me a little though.\u201d\n\nShe handed him the soapy loofa which he took with glee.\n\nShe turned around, and he went to work, scrubbing her back, drawing his hands across her every curve. Down her spine to the lovely little rise down at the top of her butt. Up the side of her hips to the angle of the armpit and up the outstretched arm, then back down on the other side. When he reached her butt this time, he went lower. Dropping down to his knee to make sure he scrubbed every inch of her, under her cheeks down the outside of her legs, but then back up the inside, to her inner thighs, opening her legs slightly.\n\n\u201cTurn around, Vickie.\u201d\n\nShe obeyed his confident command, and he looked up to see everything again. Her legs leading up to that incredible patch of kinky hair, and underneath, he could see her labia hanging slightly down. They looked like they were just begging to be kissed and nibbled.\n\nHe leaned in toward her, and heard her moan in anticipation. One slow lick from the bottom of her slit to the top, and a little tongue twirl when he reached her clit. She tasted delicious. There was no taste of water of soap. It was all her own flavor. He felt himself get even harder at the realization. She was hot for him too!\n\nHer legs buckled slightly and she reached out to stabilize herself with the shower bar.\n\nHe decided to tease her by going back to his diligent scrubbing. She groaned in disappointment as he pulled back. The loofa slid up her belly, covering it with suds.\n\nHe stood again and looked into her eyes as he ran the loofa over her breasts. She was on fire, and he could see it in her eyes. As the rough texture of the loofa ran over each nipple, her eyes narrowed and her mouth opened wider in a silent \u2018oh.\u2019\n\nThen he ran the loofa up her neck, and she tilted her head to follow it. Finally, her self-control failed her. She lunged for him again, rubbing her soapy body all over him, sliding and slipping in a way that brought his cock into such delightful contact with her body.\n\nHer hand dropped low between them and she ran it up and down his hardness without breaking the touch of her breasts on his chest.\n\n\u201cBed. Shower\u2019s no good. We need to get to a bed.\u201d Vickie mumbled into his chest.\n\nWith a supreme effort of will, she stepped back into the rapidly cooling spray of water.\n\nHe locked eyes with her as she rinsed off, but saw in his peripheral vision, the white soapy suds slide down her body, following the paths that his hands had so recently caressed.\n\n\u201cVickie, you are so gorgeous.\u201d\n\nShe looked to one side awkwardly.\n\n\u201cYou\u2019re saying that because we just had sex.\u201d Then a glance back at him. \u201cAnd we\u2019re going to again as soon as you get your freshly scrubbed ass in my bed.\u201d\n\nShe was smiling with her teasing, but he didn\u2019t change his expression.\n\n\u201cGorgeous. Absolutely gorgeous.\u201d\n\nShe didn\u2019t know what to do with that, so she just slapped him on the side of the butt to get him out of the way and she stepped out of the shower.\n\n\u201cScrub up, boy. Your bed was a disaster, but I don\u2019t let anyone who isn\u2019t clean as a whistle into mine.\u201d\n\nHe saw her pick up one of the big bath towels and leave.\n\nThe water was moving from cool to painfully cold, which had the fortunate effect of clearing Will\u2019s mind. He stepped under the showerhead and went to work with the soap.\n\nWhat were they going to do when Sam came back? He wasn\u2019t so worried about his mom -- she didn\u2019t show her face around there but once or twice a year, but Sam was going to be there the whole summer.\n\nAn image of Sam flitted before his eyes, loafing there in her chair, wearing nothing but panties and a loose t-shirt. His hand drifted lower, scrubbing a bit more energetically than was strictly called for. Sam was gorgeous too. His sisters were both so beautiful to him. He had always been painfully aware about how much he lusted after Sam. How had Vickie escaped his attention?\n\nGod, what a sick fuck he was. Here he was getting ready to go fuck his younger sister and he was stroking himself to thoughts of his big sister. Sick. But they were so hot.\n\nAfter a quick drying off, he opened the door to Sam and Vickie\u2019s room. The light was off. He looked to Vickie\u2019s bed and saw her under a sheet, curled up and facing the wall.\n\nDid she fall asleep? He stood there motionless. If he was a man of confidence, he should curl up right there in her bed next to her. But it was kind of a small bed. Maybe the kind thing to do was to go over to Sam\u2019s bed, or just go back to his own room.\n\nThen he saw movement under the sheet. Her shoulder was moving.\n\n\u201cAre you just going to stand there and watch?\u201d\n\nHe could hear the smile in her voice.\n\n\u201cWell, there is a nice view here.\u201d\n\nHe walked closer to her bed, his reservations gone. Her whole arm was moving now, and there was a low sound coming from her throat.\n\n\u201cBut, the view could be even better...\u201d\n\nHe reached out and slowly pulled the sheet down to the foot of the bed, exposing her luscious curves to him once again. He saw what he suspected. He could see her arm curving down, clearly aiming her hand between her legs. The movement was slow but rhythmic.\n\nHe put a knee on the bed and leaned his weight on it, slowly creeping closer.\n\n\u201cVickie... Were you that turned on?\u201d He teased her, running a finger lightly over her shoulder, raising goosebumps, even in the heat. \u201cYou had to run back here and start playing with yourself?\u201d\n\n\u201cMmm...\u201d She nodded, but didn\u2019t stop or slow down.\n\nHe thought about spooning up behind her, but then decided for something else, something bolder. If he was going to be confident for the next few hours, he was going to take advantage of it.\n\n\u201cVickie, roll over.\u201d His palm flattened out and his finger\u2019s touch became the caress of his hand, sliding down now, off her arm and to her hip. \u201cI want to watch you.\u201d\n\nShe actually twitched a bit and then growled, clearly aroused beyond reason.\n\nHer body shifted and her shoulder then her leg opened up so that she was lying on her back. She looked over to him, and her eyes were focused, hungry.\n\nHe didn\u2019t even look down to see where her hand was moving, now with more speed. He leaned down and kissed her gently on the mouth. She lifted her head up, trying to get more of him.\n\nHe laughed gently. \u201cVickie, she such a nice quiet girl. Who knew she was such a horny little minx? No, no... Keep going. Don\u2019t mind me.\u201d\n\nHe leaned down again, but lower this time. She gave a deep squeak as he latched onto her breast, biting softly on the thick nipple, then running his tongue in sloppy slow circles. She grabbed the back of his head with one hand, while the other kept going, bringing her closer to her joy.\n\nHis hand reached out to stroke her other breast, then sliding down her side to her far hip.\n\nShe was really going now. The sensation of her hand, his hand, his mouth, even the feeling of her own hand on the back of his head was arousing.\n\nHe felt her hand going faster, strumming on her clit while her hips started to rock. He tried to keep as much of his body in contact with hers.\n\n\u201cOhgod Will. I\u2019m going to... I\u2019m...\u201d\n\nThen a mischievous thought popped into his mind, it must have been the influence of the pill. His hand shot down and grabbed her wrist. He pulled her hand off and pushed it up against her breast.\n\n\u201cNo! Nononono! Will, what are you doing? I was...\u201d\n\nHe climbed over her body, pressing her down into the cheap mattress. He pulled her hand up to his mouth. She resisted for a second, then saw what he was doing. She moaned in frustrated arousal as he lifted her hand to his mouth. He licked her first two fingers, which seemed to have been doing most of the work. Her taste was heavy and heavenly.\n\nHer eyes sparkled with her need as she watched him. Then he brought her fingers to her mouth. Without thinking, she understood and obeyed, licking herself off of her own fingers. It was a flavor not entirely unknown to her, but she never dreamed that she would be tasting it while her naked brother pressed down on her, the heavy thickness of his cock so thrillingly evident on her thigh.\n\nHer legs were still shifting, trying to get any pressure, any friction where she needed it.\n\n\u201cHow close were you, Vickie?\u201d His hand slithered down between them, over her hair and between her legs.\n\nHer eyes fluttered, but she tried to keep them locked on his.\n\nHe brushed gently against her inner thighs. \u201cEven your legs are slick, baby sister.\u201d\n\nShe shuddered and groaned slightly when he called her \u2018baby sister.\u2019\n\nHe smiled, understanding all too well the thrill of those words. \u201cYou must have been so close. I almost feel bad for stopping you. Almost.\u201d\n\nHis hands slid up, gliding on the smooth wet line of her thigh. He came to her labia, and ran his finger over them, barely touching. He felt her arousal dripping from his finger as he pulled away ever so slowly. Her hips rocked up, trying to keep contact.\n\n\u201cWill... ohgod... Will... please...\u201d\n\n\u201cPlease? What would you like me to do, baby sister?\u201d\n\nHer words were coming apart as she tried to form them.\n\n\u201cSo close... I need you... just... ohgodohgod...\u201d\n\n\u201cYou want my finger?\u201d\n\nFrantic nods.\n\n\u201cOn your little clit?\u201d\n\nHis hand ran up over her mons, running through her tightly curled hair.\n\nHer eyes lost focus as her mouth pulled out into a grimace of desire.\n\n\u201cI think it might be better if you help out.\u201d\n\nHe lifted himself up on one arm and grabbed her wrist again with the other. As he brought her hand down, closer and closer, but maddeningly slowly, to where she needed it, he knelt between her legs and pressed her open with his legs.\n\nShe understood what he was doing and moaned out louder than before, finally breaking eye contact as her head pushed back into the pillow.\n\nHe aimed himself right at her lush opening. Then right as her straining reaching fingers were able to touch her clit, he pushed forth into her.\n\nHer fingers went wild, spasmodically trying to flick herself as the sensation of Will\u2019s cock pressed into her.\n\n\u201cHolyfuckholyfuckholyfuck,\u201d she panted, then losing any ability to speak, she grunted and wailed, overcome with the lightning shocks of orgasm that fired through her entire body.\n\nWill saw her lose control. It was the most beautiful thing he had ever seen. He was only about halfway inside her, still worried about going too fast, no matter how wet she was. But her hips rocked and roiled so wildly that he couldn\u2019t help but give in to his essential urges.\n\nHe pounded forward as deep as he could, and she immediately responded with a higher pitch of wailing. She flung her head back so she could look at him again, her eyes open now and burning with wild ecstatic glory. He shifted into a low heavy thrust, bringing out guttural grunts and intense squeezing all along their connection.\n\nThey stayed right there in that position for what seemed like forever. Her initial mind-bending orgasm rolled into a burry haze of sensation that she basked in. He tried his best to bring her to new heights, altering speed and angle to surprise her. Each squeal and chirp of delight was like a new and delightful joy he had never thought possible.\n\nSooner than he would have liked, he felt himself losing control. He tried to slow down, but she wrapped her legs around him and pulled him in harder and deeper. Who knew she had such strong legs? Her eyes glittered again, seeing him come up against his edge.\n\nHer hand finally left her core, and both arms wrapped around him, pulling his down onto her incredible soft breasts. She pulled his head down and whispered in a throaty, raspy, sexual voice:\n\n\u201cCum in me, big brother.\u201d\n\n\u201cUnnghhhh!\u201d Will shouted out into her shoulder as he thrust one more time all the way into her. He shot off, then twitched, half pulled out, then shot again, and again, and again...\n\nShe squeezed him as tight as she could.\n\n\u201cOh god, I love you, Will... You are the best... And damn we\u2019re getting good at this.\u201d\n\nShe laughed, deep and contented.\n\nAfter he caught his breath, he started and pushed up to look at her.\n\n\u201cVickie, you said you weren\u2019t safe. You\u2019re not on the pill?\u201d\n\n\u201cNo... but I just had to feel you. I had to feel you inside me. Oh, god it was incredible. I\u2019ll go pick up Plan B tomorrow.\u201d\n\nShe rolled him off of her and turned away, pulling him up behind her and wrapping he arms around her.\n\nHe spooned up behind her and smiled. How was it possible that this felt so good?\n\n\u201cVickie, you are the best sister a guy could ever have.\u201d\n\n\u201cNot just because I let you do that to me?\u201d\n\nSleep was coming on Will with a quickness.\n\n\u201cNo way... You\u2019ve always been the best.\u201d\n\n\u201cSo even if you slept with Sam, you\u2019d still say I\u2019m the best?\u201d Vickie\u2019s mind was whirling, thinking of her own relationship with their big sister.\n\nWill was already half asleep, and didn\u2019t quite hear her right. Surely, she wasn\u2019t suggesting that he sleep with Sam so he could compare the two... Surely not...\n\nVickie\u2019s alarm pulled Will out of the most wonderful dream. He was in a girls-only school with Sam and Vickie. Their teacher was a tall dark-skinned woman who looked like a naughty librarian crossed with a goth wet dream. Sam and Vickie were wearing the strangest uniforms.\n\nThe alarm kept beeping.\n\n\u201cWill...\u201d\n\nVickie\u2019s voice woke him up more than the alarm did.\n\nHe was on his back, and Vickie was curled up next to him. He smiled at the sensation of her body against his.",
        "\u201cUng...\u201d Vickie reached over him and grabbed her phone, but all Will could think of was how that movement drew her breasts over his chest.\n\nShe tapped a few times on the screen and then collapsed onto him.\n\n\u201cMmmm... You feel good.\u201d She twisted over to kiss him. \u201cUgh... but your breath smells awful.\u201d\n\n\u201cAnd you smell like a meadow of spring flowers yourself.\u201d\n\nShe rolled her eyes.\n\nHe kissed her back.\n\nShe rolled back and sat up to check her phone.\n\n\u201cOh, man. Talk about a low blow. Want to kiss the guy you just had sex with, or do you want to check how many likes your selfie got?\u201d\n\n\u201cI don\u2019t do selfies. Oh, crap. Go get your phone and answer Sam. She\u2019s sent me a couple messages. She\u2019s worried that you didn\u2019t text her back.\u201d\n\n\u201cOh, crap. Hey, are we staying home today?\u201d\n\n\u201cNo. I can\u2019t. I\u2019ve need to be there for Bio. And there\u2019s rehearsal, too.\u201d\n\nThere was a weird gleam in her eye, but he slid off the bed and padded off to his room to find his phone.\n\nSure enough, there were a few increasingly anxious texts. The last of which suggested that she might get in the car and drive back home in the middle of the night.\n\nWill thought what she might have seen if she had come back. He sucked air though his teeth and tapped out a quick response. All was well, he had just gone to sleep a bit early and he guessed that Vickie did too. He did mention that the pills seemed to have worked, but there was no need to call the school and get the day off for them.\n\nVickie\u2019s reply was about the same, but she ended it with several hearts, just like Sam\u2019s text to Will had.\n\nThey were both a bit slow getting ready, and so there wasn\u2019t even any time to think about losing time in the shower again.\n\nVickie brought out a couple of the muffins, now actually stale instead of only partially stale the night before, but they didn\u2019t have time to stop for breakfast, or money to pay for it.\n\nWill packed up his old battered backpack, kicking himself for not having corrected the papers for Ms Green. Then, without really thinking about it, he put the tin of pills in the pencil compartment.\n\nVickie got into Will\u2019s car for the drive to school. She wondered how much Plan B would cost. Whatever is cost, it was one hundred percent worth it. Just to feel him losing control on top of her. He was so strong, just like she had hoped.\n\nBut the weird thing was, after having sex with Will, she felt free. She had lusted after him for so long, dreamed about even kissing him. How many of her sexual fantasies involved him? How many nights did she end, thinking about his body, imagining his lips on hers? And it was all better than any of her dreams. Especially when he was inside her, the sensation was so much better than anything she\u2019d ever tried. And looking him in the eyes as he just pounded into her.\n\nAh, she was getting wet again, sitting in the car. She looked over at him, driving with a serene smile on his face.\n\nBut it was the freedom that she was turning over in her mind. There was absolutely nothing changed in her feelings toward Will, but that fantasy had been met. She shook her head absent-mindedly, and interrogated her feelings. She loved him with her entire heart. There was no change there. She still wanted to keep having sex with him. No change there, either.\n\nBut she didn\u2019t feel tied down. She always knew she would never marry Will, but maybe in her most secret fantasies, she was with him forever. Just the two of them. Now, it was like sleeping with Sam had awoken something in her, and sleeping with Will had shaken something loose.\n\nShe had never felt as much her own woman as she did that morning in the car.\n\n\u201cYou okay, Vickie? Awfully quiet.\u201d There was a hint of anxiety in his voice.\n\n\u201cI\u2019m wonderful. I\u2019m really absolutely wonderful.\u201d She looked over at him and smiled wide. \u201cYou fucked me into absolute bliss.\u201d\n\nShe delighted in the rapid succession of emotions that flew across his face. Shock, confusion, embarrassment -- that blush was adorable -- then a kind of self-satisfied happiness.\n\n\u201cWell, okay. Glad to be of help.\u201d He chuckled, but his smile stayed there for the rest of the drive.\n\nWhen they pulled into the parking lot, and she slid her hand over to his leg and squeezed.\n\n\u201cI\u2019m going to need a regular dose of that bliss, you hear?\u201d\n\nHe was so cute when he stammered out an enthusiastic, \u201csure!\u201d\n\nShe was nearly late to first period, but it wasn\u2019t a big problem. She loved French, but she was well ahead of the textbook right then. It wasn\u2019t going to be a brain intensive day except for biology, and that wasn\u2019t hard, just needed her to focus.\n\nWhich was exactly what she wasn\u2019t doing. She was thinking about those pills, trying to figure out what specific effect they had. Will did seem much more aggressive. She thought about how he pulled her hand back right as she was getting ready to come. That was wonderful, and would he have done that before? And with her, were inhibitions really that much different?\n\nShe thought about whipping her shirt off in first period French. She smiled at the absurdity of it. She thought about the reactions she would get. The group that would make fun of her popped up first, but then the guy in the front row who was nursing a crush on her came into her mind. And there was Darika over there to the side. She was painfully shy, and super cute. She would flush such an adorable shade of pink, Vickie was sure. Vickie was also very aware of how much she would love to find ways of making Darika blush.\n\nAnd then there was Mademoiselle Mercier. She was such a lovely young woman, nearly a girl herself. She spoke English with a luscious accent that drove even the dullest boys to her class. And when she spoke French? Well, even before Vickie was more physically aware of her attraction to women, there was a good reason that she was always on top of her French homework. Although perhaps it would be nice to have to attend her remedial sessions.\n\nVickie\u2019s mind was lost in these thoughts, and in particular, she was nearly leering at Mademoiselle Mercier\u2019s well-tailored, tight green jacket. But she felt no urge to whip off her shirt.\n\nShe certainly gave in to her base desires the night before, but those were already bleeding through the edges of her consciousness well before. Perhaps the pill\u2019s effect wore off, or maybe it just didn\u2019t work as well as the blue pill. She was puzzled, but not a little bit aroused.\n\nShe made it through the rest of her classes just fine, no urge to throw the cute boy in English to the ground and molest him, no sudden overwhelming need to press that tall redhead against the wall of the shower and lick her head to toe after PE. Well, the urges were there to be sure, but no more than usual.\n\nShe thought to herself that her sexuality was certainly becoming more a part of her personality, but again, nothing more than was already happening pre-pill.\n\nShe would have to find a way to talk to Sam about that.\n\nWhat was different, was that she was thinking all this through in the front of her mind all day long. She had a scientific mind for these things. First it was trying to figure out how much the pill affected her, then it was running through all sorts of silly hypotheticals, just to see if the urges became strong enough that she had to tamp them down.\n\nThe specific urges didn\u2019t, but a whole day of focusing on all of the boys and girls she would like to enjoy did have an effect on her baseline arousal. And that on top of losing her virginity -- well, her penis in vagina virginity, anyway -- the night before put her on edge. It was like she was buzzing with sexual energy, and anything could amp her up.\n\nThat boy had arms just like the dude in that porn video. She watched as he flexed them to pick up a book. The way that girl brushed her hair up over her ear, how would it feel to run her fingers through those thick loose curls? Even in Biology, there was a girl who squatted down to get something out of her bookbag, and from Vickie\u2019s point of view, she could see the barest hint of a barely-there blue thong. She thought for a good while about what was connected to that little piece of fabric, nearly humming to herself.\n\nAgain, she ended up with a release for the last class of the day, so she had an hour to kill before rehearsal. For a split second, she thought about going to the third-floor bathrooms and locking herself in a stall just to take the edge off. The way she was feeling, she could probably get what she needed in a few minutes. That wouldn\u2019t be an urge brought on by the pill, it was just a result of where her mind was all day. The mind is a powerful thing after all.\n\nThen in a fit of defiance, she decided that she was stronger than that. She couldn\u2019t be led around by the clit. And then she found her feet walking her toward the costume room. That couch. There wasn\u2019t anything strange about that. A nap would be perfect to reset her mind for the rehearsal.\n\nAll the drama rooms were open, but empty. The lights were all off though, so she just walked through in the darkness to the couch. She tossed her bag to the floor and flopped down herself, curled up and closed her eyes.\n\nHer mind wasn\u2019t going to let her drift away easily. The way she curled up put one hand perilously close to her breasts, and it seemed like her nipples were aching for sensation. In her mind, it seemed like they were pushing out into her silky new bra. It seemed like they were pulsing with each heartbeat. And her pulse wasn\u2019t slowing.\n\nHer hand slid, almost of its own volition, down slightly, pressing up lower than the neck of her shirt. The shirt was pretty thick, and then there was the fabric of the bra, which was so delightful as it slid against her, but stood as a barrier to what she was now consciously working toward.\n\nShe grumbled into the couch cushion. Was she going to fiddle with her nipples right here? To get at them properly, she would need to take of her bra. It wasn\u2019t like she was going to masturbate right there. At that thought, though, she felt her stomach warm.\n\nIt was just a little bit, just to take the edge off. She would be more clear-headed, and she needed to be clear-headed for rehearsal.\n\nHalfway through this justification, she realized that she already had the bra unclasped and was pulling it out from her sleeve.\n\nShe heard herself moan out loud as her boobs slid back into place, rubbing those hyper-sensitive nipples against the heavy fabric.\n\n\u201cFuckit.\u201d\n\nShe sat up and untucked her shirt from her pants, so she was able to slide a hand up. She grunted as her hand grabbed her breast. She was a bit surprised with the strength she used to maul herself, but the warmth seemed flow through down again to her belly and below.\n\nThen door opened and the light came on.\n\n\u201cVickie!\u201d\n\nFor a split second, Vickie\u2019s mind locked up at the how obvious this was. Why did she not think of Quinn coming in like she did last time. Did she want this to happen?\n\nVickie\u2019s body wasn\u2019t much quicker to react.\n\nThere she was sitting on the couch in the suddenly very bright light. Her bra was hanging over one arm of the couch and she had a hand up her untucked shirt, clearly feeling herself up.\n\n\u201cQuinn!\u201d\n\n\u201cUh, hey there... um... you need a sec?\u201d\n\n\u201cOh, uh... no. I was thinking about my costume.\u201d In the dark. \u201cI was thinking...\u201d Bra on the couch. \u201cMaybe I might try it without the bra again?\u201d\n\nQuinn stood unmoving. Vickie grinned stupidly and tried to pull her hand down. There was no way anyone would believe that.\n\nBut for some reason the shock of being discovered -- again, did she want to be discovered? -- didn\u2019t lower her arousal. On the contrary, seeing Quinn there, cute, very much into her Quinn, seemed to make things worse. Or perhaps better?\n\nThere was an eternity of silence.\n\n\u201cYou... uh... want a hand?\u201d\n\nOh god, did she want a hand.\n\n\u201cYeah... sure.\u201d\n\nQuinn closed the door behind her, paused, then turned the lights back off and slowly walked over to her. Her face showed her confusion clearly.\n\nVickie finally got her hand out from under her shirt, but she dragged it over her crotch and thigh which felt much nicer than it should have.\n\nQuinn stood right in front of her, unsure what to do.\n\n\u201cVickie... You said that we were... I mean, you said Will...\u201d\n\n\u201cI know... Ah... Sit down here.\u201d Looking up at her was making it impossible not to look at her boobs. But then she sat down so close to her, so that she was locked in on her lips, her eyes, god those glistening lips...\n\n\u201cVickie...\u201d\n\n\u201cOk. Quinn. Here\u2019s the thing. I just wanted to try out the blouse again.\u201d\n\n\u201cThe blouse.\u201d\n\n\u201cRight, but... without... without the bra. You said it would look... You said it would look good.\u201d\n\n\u201cVickie, I don\u2019t... I mean... I respect your relationship with your brother. It\u2019s clear that you love each other very much. I don\u2019t want to cause trouble between the two of you.\u201d\n\nWhile she was talking, both girls leaned closer to each other.\n\n\u201cI do love my brother...\u201d\n\nCloser.\n\nVickie had been staring directly into Quinn\u2019s eyes, but now she shot a glance down to her lips. So pink. Deliciously pink. So close.\n\nTheir lips touched, barely brushing against each other, but neither of them kissed.\n\nVickie looked back up into her eyes and held her gaze. Those eyes were so brilliant. Even in the dark, they glistened with excitement. She was excited to be there. With her. Then Vickie melted into her.\n\nThey kissed softly, then with passion. Vickie leaned into her, but then found herself being pressed back onto the arm of the couch as Quinn\u2019s pent up desire took hold.\n\nVickie wrapped her arms around her and pulled her tight, almost on top of her.\n\nTo Vickie this felt so right. Just a week ago she didn\u2019t know that she liked girls like that, just a couple days ago she didn\u2019t know Quinn was into her. But right then on the old ratty couch in the costume room, there was no one else in her world, and everything felt right.\n\nThen there was a shock of chilly fingers on her waist. Quinn\u2019s hands made an exploratory move up her untucked shirt. With a moan, Vickie urged her on with an amorous squeeze, and her hand began a journey down Quinn\u2019s back, lower and lower.\n\nThe touch of Quinn\u2019s hands on the underside of her breast was electric. They actually broke their kiss and pulled a bit apart to give her hand room.\n\nQuinn was being as gentle as her passion could allow, but that wasn\u2019t what Vickie wanted.\n\nFrustrated, she pulled her hands from Quinn\u2019s lower back and began to paw at the buttons of her shirt, nearly popping them off as she rushed to get more flesh contact on her body.\n\nQuinn went up on her knees, sliding one over to straddle Vickie\u2019s hips as she scooted down, peeling her shirt open.\n\n\u201cOh my god, Vickie.\u201d Quinn giggled nervously. \u201cThis is so much better than those pics I took.\u201d Her hands moved to caress those breasts that she worshiped.\n\n\u201cOh, you\u2019ve been looking at those photos, have you?\u201d Vickie half moaned. She was trying to sound unmoved by the tingling joy that came from Quinn\u2019s hands.\n\nQuinn blushed slightly.\n\n\u201cYou have no idea...\u201d\n\nThat thought was almost more powerful than having Quinn\u2019s hands on her breasts. Quinn, sprawled out in her bed, looking at the pictures of her on her phone.\n\n\u201cMaybe I do...\u201d\n\nVickie\u2019s hands now started to work on Quinn\u2019s shirt. It was a thin, puffy black blouse. Vickie had a bit of trouble working around Quinn\u2019s arms, but she got the bottom of the shirt untucked and the bottom button undone. She wondered what kind of bra she would be wearing.\n\n\u201cQuinn!\u201d The voice came from beyond the door.\n\n\u201cGoddammit!\u201d Quinn rocked back and looked at the ceiling.\n\n\u201cQuinn!\u201d\n\n\u201cWe didn\u2019t even get a chance to nap this time.\u201d Vickie looked up at her with a smile, not even attempting to cover her breasts.\n\nQuinn sighed in frustration, then, using her director\u2019s bellow, screamed out, \u201cI\u2019ll be right there!\u201d\n\nThen in a lower hungry voice, \u201cWe\u2019re running costumes for some characters today. You really should try the blouse without a bra.\u201d\n\nThen she twisted and hopped off, leaving Vickie topless and lying back on the couch, nearly panting with desire.\n\nWill showed up to rehearsal a bit at a loss. He had a very confusing period with Ms Green. She seemed even more interested in the papers he had coming due, but he didn\u2019t make much progress with them. He was going to have to set aside a full weekend to get things straight there.\n\nWhen he came into the main drama room, he saw Quinn darting between the tech people and the actors. She saw him come in and waved him over.\n\n\u201cWill, get back to Sue. We\u2019re going to try out your dressing gown costume tonight.\u201d\n\n\u201cWhat\u2019s a dressing gown?\u201d\n\n\u201cGet yourself back there and Sue\u2019ll show you.\u201d\n\nShe spun past him and back to the other actors, so he went off to the costume room, where he found Sue behind a small pile of fabric and clothes.\n\n\u201cWill! You\u2019re late. Change into those.\u201d\n\nShe pointed off to a clothes rack. On it hung what looked like a set of pajamas and a robe. He shrugged and took them to the dressing room.\n\nThe costume seemed totally new. There was even a tag on the sleeve of the pajama top. He thought they didn\u2019t have money for this kind of thing.\n\nThe pajamas were a dark blue, and silk, or something like it. The fabric was incredibly smooth and felt great against his skin. The robe was a little heavier, but it fit well, and he certainly liked it better than the suits he would have to wear for most of the show.\n\nWhen he walked out onto the stage, someone whistled and shouted out, \u201cHey there Hefner!\u201d\n\nEveryone turned to look at him and he noticed some odd expressions. James, the guy playing Dr. Bradman, came up next to him and looked him over.\n\n\u201cLooking smooth there, Will. Kind of like a middle-aged creep who acts like a teenaged girl online. Like Mr. Hetch, but, you know, classy.\u201d\n\n\u201cThanks?\u201d\n\nSue rushed up to him and started pulling and poking at the costume with no thought to the body beneath it.\n\n\u201cYeah, this will work. Quinn! The Hefner suit looks fine. You want him to stay in it?\u201d\n\nThen Quinn came out from behind the curtain and gave him an appraising look.\n\n\u201cHuh. Yeah, that\u2019s not bad. Yeah, Will, stay in it. It\u2019s not right for all of the scenes we\u2019re working tonight, but I want to see how it looks in the lights. Where are your slippers?\u201d\n\nWill looked at Sue.\n\n\u201cIn the costume room. They\u2019re in the box next to the big sewing machine.\u201d\n\nQuinn turned back to him. \u201cVickie\u2019s in there, too getting scarves. Bring her out. We need to get started.\u201d\n\nWill shrugged and went off in search.\n\nHe found Vickie in the costume room. She was wearing Madame Arcati\u2019s wildest costume. There was a big uneven green skirt, with some kind of apron-looking thing.\n\nHer back had been turned, but when he came in, she twirled around, startled.\n\n\u201cOh, god, Will. You scared me. I\u2019m umm... I\u2019m trying to figure something out.\u201d\n\nShe turned more fully to him and put her hands on her hips.\n\n\u201cWhat do you think?\u201d\n\nShe took off the apron to show a loose, poufy white blouse. It was cut quite low, and Will didn\u2019t even try looking away.\n\n\u201cUh... looks great?\u201d\n\n\u201cCan you see the bra?\u201d\n\nThere was a cream-colored edge of the cup rising above the neckline clearly visible.\n\n\u201cYeah. Uh, I mean, yeah, I can see it. The color, you know. And the neck is low.\u201d\n\n\u201cUgh. I know. I\u2019m going to have to wear the other shirt. Quinn wanted me to, well... I\u2019ll just wear the other shirt.\u201d\n\n\u201cWhat did Quinn want you to do?\u201d\n\n\u201cShe wanted me to go with this one without the bra.\u201d\n\nWill\u2019s face must have changed because Vickie stopped and looked at him for a moment.\n\n\u201cYou and Quinn, both, eh? Both of you want to see all this?\u201d Vickie\u2019s voice was odd. He couldn\u2019t tell what she meant.\n\n\u201cWell, I mean, I\u2019m not going to lie. You look incredible.\u201d He lowered his voice. \u201cAnd you\u2019ve got the best boobs around. You would look so sexy in that.\u201d",
        "\u201cAnd what do you think about Quinn wanting me to walk around without a bra.\u201d\n\n\u201cUh... I... It\u2019s kind of weird. Don\u2019t think that I\u2019m a pervert or anything, but it is kind of hot that she is attracted to you.\u201d\n\nVickie rolled her eyes, but smiled. \u201cGod. You are such a dude. You want to see us lez out for your amusement? Wait, no. Don\u2019t answer that.\u201d\n\nThey stood there silent.\n\n\u201cI just need to get my slippers. Quinn said once you get your scarves to come on out. We\u2019re about to start.\u201d\n\nVickie narrowed her eyes at him, but didn\u2019t drop her smile.\n\n\u201cAnd, Vickie, I don\u2019t care what you wear. It\u2019s a costume, anyway. But you would look even more incredible if... you know...\u201d\n\n\u201cI thought you were supposed to be all confident. Did the pill wear off?\u201d\n\n\u201cWear the shirt. No bra.\u201d\n\nVickie felt her neck and cheeks flush. Why did that affect her so powerfully? She made shooing motions with both hands.\n\nHe laughed nervously and found his slippers, in a new box, too, slipped them on, and left Vickie alone.\n\nHe actually felt really good in the costume. The silk slid so nicely over his body and the robe was comfy too, even if it was gaudy as sin.\n\n\u201cHefner, get over here. We\u2019re starting up. Where\u2019s Vickie?\u201d Quinn, now wearing a gorgeous floor-length green sheath gown, aimed him toward a high-backed chair on the stage.\n\n\u201cShe\u2019s on her way. What\u2019s a Hefner?\u201d\n\nQuinn turned to Sue, who was hemming Mrs. Bradman\u2019s skirt. \u201cOur Will here doesn\u2019t know his porn history, Sue.\u201d\n\nSue took a few pins out of her mouth. \u201cYouth today, they\u2019ve got no sense of their roots.\u201d\n\nWill stood there looking back and forth from Sue to Quinn, then the two girls broke into giggles.\n\nWill looked at Quinn longer. She had never looked so beautiful right now. It wasn\u2019t the dress, although that was incredible, and it seemed designed to accentuate every curve she had perfectly. She would have looked as beautiful in her tip dress from work, or in anything. What was stunning to Will was the way she laughed. There she was in the formal gown of an elegant woman, but she was laughing like a geek. She was teasing him, he knew that, but it wasn\u2019t mean at all. It was like she was bringing him into her group.\n\nWill felt himself fall even a little bit more for her.\n\nThen Vickie walked on stage.\n\nQuinn and Will both stopped cold. She might not have been as gorgeous as Quinn, and her dress didn\u2019t flatter her nearly as much, but she was sexy as all hell.\n\nAnd she wasn\u2019t wearing a bra. Anyone could tell. She had taken it off, but added a corset-looking thing that tightened her waist and made her magnificent breasts stick out higher and even more proudly. They shook tectonically over the neckline of the blouse, covered only in a light scarf, as she walked across the stage to stand in front of Sue.\n\nWill and Quinn were useless mannequins, but Sue was only slightly less struck.\n\n\u201cSue, I went ahead and tried the corset too. Is it too tight?\u201d\n\n\u201cUh... well... uh... How does it... It looks incredible! It looks great. How does it feel?\u201d\n\nSue seemed to switch her brain to costuming tasks. She walked around Vickie and tugged at the shirt, then the corset.\n\n\u201cIt feels good. It\u2019s tight though. I can breathe, I think.\u201d\n\nVickie laughed, which shook her breasts even more. Will could swear he saw the edge of dark pinkness peeking out from the blouse, and he became aware of a tightness in his pants.\n\n\u201cQuinn, what do you think?\u201d Sue spun Vickie around to face her. Will finally broke his gaze from his sister to Quinn\u2019s face, and he immediately saw the depth of her attraction to Vickie. Could everyone tell? It seemed so obvious that she was trying hard not to pounce on her. Then he thought of himself. Was he that transparent? Could everyone see how much he loved his sister? And Quinn?\n\nEveryone was looking at Quinn for her pronouncement, when the power went out. Every light in the entire school went off, and the stage went pitch black.\n\nSomeone squealed out in surprise.\n\nThere was a brief moment of silence, then a metallic-sounding click. Another click and the emergency exit lights came on, a dull reddish glow that did nothing to light the area, but did light up an exit sign, far in the back of the house.\n\nWill\u2019s hand was on a chair, and so he slid into it.\n\n\u201cOkay then...\u201d Quinn\u2019s voice came out clear and unwavering, showing her natural leadership. \u201cJames, you aren\u2019t in costume. Can you find your way out to the drama room? See if this is the whole school, or just us. Everyone else, let\u2019s just hang loose for a sec and see how bad this is.\u201d\n\nA voice came from the control booth at the back of the house.\n\n\u201cQuinn! That wasn\u2019t us! We weren\u2019t doing anything!\u201d\n\n\u201cI believe you. No worries. Hang tight. No one is up in the flies or rigging?\u201d\n\nA couple of voices echoed out in the dark with negative replies.\n\nQuinn kept up a slow conversation with all the groups, and Will thought it must be just to keep everyone calm. It wasn\u2019t dangerous, but people might get spooked. She really is a great leader. So much better in all ways than Mr. Hetch.\n\nThen he felt a hand come down on his arm.\n\nVickie\u2019s voice chirped out in surprise, then they both laughed lightly.\n\n\u201cYou want to sit down? I\u2019ll get up.\u201d\n\n\u201cNo, it\u2019s okay.\u201d\n\nThen her leg bumped into his. Then her thigh slid over him.\n\nWith a deep sigh, she sat down on him. His mind spun as she grabbed his arms and wrapped them around her waist, pulled so small by the corset.\n\nHe leaned into her, placing his mouth right behind her ear.\n\n\u201cWhat are you doing Vickie?\u201d\n\n\u201cNothing.\u201d She wiggled herself on his lap, then started rocking her hips on him.\n\n\u201cVickie...\u201d\n\nHer head lolled back and she whispered so he could just barely hear her.\n\n\u201cI\u2019ve been going crazy all day, and now this costume... Did you see the way Quinn was looking at me? This corset is wild, but it\u2019s too thick.\u201d\n\nWill couldn\u2019t control himself. He reached his hands up slightly, tracing the embroidery of the corset, then up further to her incredibly sensitive skin, covered only by that flimsy blouse fabric. He ran his fingers up the swell of her breasts.\n\nShe leaned back onto him hard and the rocking of her hips grew slower and more deliberate. He could feel himself grow harder. She had to be able to feel it.\n\n\u201cVickie?\u201d Quinn\u2019s exasperated voice broke through the haze.\n\n\u201cMmm... huh?\u201d\n\n\u201cAre you okay?\u201d Her tone changed from exasperation to curiosity.\n\n\u201cOh, yeah... I\u2019m great.\u201d\n\nWill slid his hands up again, now glancing off of her protruding hard nipples.\n\n\u201cI asked if you wanted to read through a scene with Will and me. We could do act three, scene one with just the three of us. Are you off book yet?\u201d\n\nRight then, Will felt the power he had. He pinched lightly on Vickie\u2019s nipple, first softly then more aggressively.\n\nShe yelped out, but in a much lower needier quality.\n\n\u201cAre you okay?\u201d There was a strange catch in Quinn\u2019s voice now.\n\n\u201cYeah... I\u2019m good... I\u2019m not quite off book yet though. How about you, Will?\u201d\n\nBy now Will was mauling both her breasts, but Vickie reached up, grabbed his right hand, and thrust it up and into her shirt so that he was caressing and teasing her breast directly. He got even harder against her rocking. They were right there, in front of all their classmates, and none of them could see anything.\n\n\u201cI\u2019m still getting a grasp of things. I\u2019m pretty slow. I\u2019ll need a lot more work, I think.\u201d\n\nAt that point, there was a bright white light that shone out from between the curtains. Everyone but Quinn swung their head to see what it was.\n\nThat was how Quinn was the only one who saw Vickie stand up so quickly, with one boob hanging out of her blouse and a panicked look on her face. She also thought she saw something suspicious about Will\u2019s silky pajama pants.\n\nJames parted the curtains and walked in using his cell phone as a flashlight.\n\nQuinn quickly stepped close in front of Vickie as James explained things, blocking her from everyone\u2019s view.\n\n\u201cPower\u2019s out everywhere. All the school and the neighborhood around. The teachers said everyone has to get out, go home. All club activities have to be cancelled for safety\u2019s sake.\u201d\n\n\u201cWell. That\u2019s definitive.\u201d Quinn\u2019s spoke normally before her director voice rang out again. \u201cThat\u2019s it, everyone. We\u2019ve got to close up shop. Everyone home, tech and cast. Spend this time back home going over what you need to take care of. Next week we\u2019ll have to make up this time with quality effort. Alright, get out of here.\u201d\n\nEveryone started talking and shuffling around at once, half disappointed with losing the time for the play, and half excited about getting to head home early.\n\nIn this hubbub, Quinn turned around to Vickie, who was still standing right in front of Will on the chair.\n\n\u201cYou sure everything\u2019s okay? You sounded a little uncomfortable, Vickie.\u201d\n\nThere was still almost no light at all, with only the erratic illumination from James\u2019s phone, but Quinn locked eyes with Vickie. Then Quinn\u2019s glance shot down for a split second. Vickie followed her gaze to see her breast hanging out. She blushed an almost painful red.\n\nVickie started to speak, but Quinn cut her off.\n\n\u201cI think I see what you mean about how this shirt without a bra might be dangerous.\u201d\n\nAnd as she spoke, she reached out and touched Vickie\u2019s exposed breast. She held it gently, then pulled the blouse up and covered her again, and then let go. Vickie\u2019s skin was tingling with the sensation of Will\u2019s aggressive squeezing and now Quinn\u2019s delicate soft touch. It was all she could do to repress a moan.\n\nQuinn glanced back lightning-quick to Will, who was sitting there, only slightly slack-jawed. Then Quinn reached out and touched Vickie\u2019s shoulder.\n\n\u201cWill, Vickie, I was really hoping that you two would be off book by now. Why don\u2019t you two come home with me and we can run though our scenes together.\u201d\n\nVickie replied immediately. \u201cY-y-yes... Ok. I think that would be great. Will?\u201d\n\n\u201cSure.\u201d He was convinced something was going on, but he couldn\u2019t read either girl well enough.\n\nQuinn glanced down at Will, as if his agreement was never in doubt, then back to Vickie.\n\nVickie asked slowly, \u201cShould we invite James and the rest?\u201d\n\nQuinn tilted her head. \u201cNo. Everyone else is off book. This is just to get you two... up to speed.\u201d\n\nBy now just about everyone was gone. James was heading back out of the theater, but he turned back.\n\n\u201cC\u2019mon guys. I\u2019m leaving. I\u2019m gone, no light, yeah?\u201d\n\nThe three snapped out of it and followed him back to the drama room. They picked up their things, but without discussion, they stayed in their costumes, just grabbing their clothes to change into later.\n\nWill and Vickie got in his car and followed Quinn back to her home. Again, he was infinitely grateful that his car made it all the way, not just because it tended to just die for any number of reasons, but he was also running on fumes. He had been driving around more than usual recently, and even though his check should have been deposited that day, almost every dollar of it was already spoken for. And gas was pretty far down his list of necessities.\n\nHe hadn\u2019t really thought much about where Quinn lived. She was new to the area, but never really talked much about her family. But as they turned into a lonely road, he realized there was only one place they could be going. There was a housing development called Spanish Moss up in the hills. It was a golf course and a country club, but there were homes there, too. Will used to have a friend that did lawn work up there. It was like another world. That\u2019s the only place they could be going.\n\nHe felt Vickie tense slightly as they passed through the heavy gates to the development, then smaller, but no less impressive gates to what had to be a mansion. This was Quinn\u2019s house? People like Vickie and him only belonged here as caddies and cleaners.\n\nIn front of a massive multi-car garage, he parked his car next to Quinn\u2019s, even more sensitive to the difference. He was quietly thankful she didn\u2019t open the garage to expose them to what had to be a dozen cars that would more money than they would see in their lifetime.\n\nQuinn hurried over to guide them through the lawn to the back yard. She didn\u2019t say anything, but she was moving fast.\n\nWill followed quickly, thinking that it was only right that they would go in the back door, and he would probably move just as fast if he were her, so no one would see what kind of people she was bringing in.\n\nThen he remembered how he was dressed and felt even more ludicrous.\n\nBy the time they did get to the door, Will was feeling absolutely awful. Never had he felt more keenly how much of a different world he lived in. She asked them to come over, but she had to be ashamed of them. Quinn herself might not think he was as pathetic as he felt, but it was so painfully clear that she lived in a different world. How could she seem so normal at the restaurant? Why was she even working there?\n\nThen they were in the back foyer, and up the stairs. They were still silent, and the mansion was silent, too. Quinn didn\u2019t call out on coming home, and no one called out to her either.\n\nDown a dark hallway, and finally the trio found themselves in front of a door. Quinn turned around to look at them. She had a tortured look on her face. She looked so embarrassed, it was like she was in actual pain. Will was certain he felt worse.\n\nShe smiled a weak, artificial smile, and then opened the door and nearly pushed them inside.\n\nThe room was massive, nearly twice the size of their living room at home. It had to be her bedroom. There was a huge four poster bed to one side. Then there was an overstuffed couch next to a bookcase packed with books of all kinds, including what looked like several collections of graphic novels and manga. In front of the couch was a tv that looked nearly as long as the couch. And under the tv were game consoles and controllers.\n\nWill looked back to Quinn after scanning the room. The embarrassed look had mostly faded, but what was replacing it was something akin to panic. Her eyebrows were lifted in a kind of sweet questioning line, and it looked like her eyes were actually starting to glint with tears.\n\nVickie had been looking at her too. But her understanding was deeper. She darted forward and took Quinn into a tight embrace. Quinn nearly squeaked in surprise, but then closed her eyes and returned the hug.\n\nWill stood there awkwardly, not wanting to stare at what seemed like a private moment, so he looked back at the room for a while. He thought about going over to the bookshelf, but heard Quinn\u2019s voice.\n\n\u201cSo, this is my place... I know, it\u2019s...\u201d\n\n\u201cIt\u2019s exactly perfect. Just like you.\u201d Vickie said.\n\nWill was confused. She was embarrassed? How could anyone be embarrassed about living like this?\n\n\u201cQuinn, this is wonderful. I\u2019m never letting you back to our place though. We live in a pit compared to this.\u201d He was trying not to think of what she must have thought about their disaster area.\n\n\u201cNo! I mean... I would love to go back to your place.\u201d Quinn looked back and forth at the siblings. \u201cThis? This is all just stuff. There\u2019s nothing special here. There\u2019s no life... I was only at your place that once, but with you two and your sister... There\u2019s real family there...\u201d\n\nQuinn started to trail off, but again, Vickie understood and broke the silence.\n\n\u201cReal family?\u201d She rolled her eyes and laughed. \u201cYou\u2019ve never had to get ready in the morning with this lump in the bathroom. He uses up all the hot water and he doesn\u2019t even have any hair to wash.\u201d\n\nQuinn giggled a little, and Will started to understand a little bit, although he still couldn\u2019t see how you could be embarrassed about being rich. It was also very strange to see Quinn, who was such a taskmaster and leader as director of the play, suddenly turn awkward and embarrassed. She seemed very different here. It was like she wasn\u2019t in charge in her own bedroom.\n\n\u201cSo,\u201d Vickie, clearly taking over from Quinn as the woman in command, said, \u201cWhy don\u2019t we run through some of the scenes. We don\u2019t need to block it all out, we can just sit of the couch, right?\u201d\n\nQuinn nodded grateful at the change in topic.\n\n\u201cSure,\u201d Will agreed.\n\nHe set his backpack down, again noticing that he was still wearing that absurd silk pajama and robe combo.\n\n\u201cShould we change?\u201d\n\nVickie cut him off immediately. \u201cNo, there\u2019s no need. Let\u2019s just go with what we\u2019ve got.\u201d\n\nVickie was looking at Will, but he saw Quinn shoot a glance down at Vickie\u2019s chest, and he smiled.\n\nThe three awkwardly moved to the couch and fumbled through starting a read-through. Quinn had her script open because she was reading all the other roles. Vickie really did have most of her part down, but Will had so many lines, and he wasn\u2019t just being modest when he said he was a bit behind.\n\nThey loosened up after going through the first two acts, but before they started act three, Quinn called a break.\n\n\u201cI can\u2019t believe I\u2019ve been so rude. Do you guys want something to drink? Maybe a snack? Heck, it\u2019s time for dinner if you want it. Why don\u2019t I get us some food and we can eat, then finish the rehearsal.\u201d\n\n\u201cSounds great to me.\u201d\n\n\u201cSure!\u201d\n\nAnd in just moments, Quinn brought up some sandwiches and chips. She also brought up a six-pack of beer. She shyly put it on the table in front of the couch.\n\n\u201cWe\u2019ve also got some soda and some tea, I think, but it\u2019s Friday, and, I mean, you guys are the first people... the first friends I\u2019ve ever had over...\u201d\n\nWill looked with thirst at the beer. He\u2019d had a few before, but wasn\u2019t a drinker at all.\n\nHe reached out for a bottle, but Vickie\u2019s hand came down on his wrist.\n\n\u201cWill, we can\u2019t... I mean. Will drove over here, so I don\u2019t think it would be good for him to drink.\u201d\n\n\u201cOh, yeah. I didn\u2019t think about that. Well, unless you guys stayed over? We\u2019ve got extra rooms all over the place here. I mean, if you wanted to...\u201d\n\nThis time Will broke in. \u201cReally, could we?\u201d He tried to tamp down on his enthusiasm, but he didn\u2019t know what he was excited about. The beer, or staying over, whatever that meant.\n\nQuinn looked to Vickie, who smiled and moved her hand from her brother\u2019s wrist to the neck of her own bottle of beer.\n\n\u201cAre you sure?\u201d Vickie looked carefully at Quinn.\n\n\u201cOf course! I\u2019m... I mean, I\u2019m so happy that you\u2019ll stay. Do you need to call anyone?\u201d\n\n\u201cNo one\u2019s at home until... when is Sam coming back?\u201d Vickie realized she couldn\u2019t open the bottle.\n\n\u201cI think Monday.\u201d Will seemed fairly certain. \u201cShe said they were going to let her take Monday off since she was helping them out. I\u2019ll text her in a sec.\u201d\n\nQuinn pulled out a bottle opener and the three of them clinked the bottles together and took a sip before digging into the sandwiches.\n\nBy the end of dinner, both girls were quite giggly and Will was feeling pretty comfortable, too, so that when they got back to reading through the play, they were all making silly mistakes and laughing at each other\u2019s goofs.\n\n\u201cAh,\u201d Quinn looked up from her script. \u201cMy pen\u2019s dead!\u201d\n\n\u201cI\u2019ve got plenty in my bag.\u201d Will swung his bag up onto the couch next to Quinn.\n\nQuinn unzipped the front and dug around for a pen. She pulled out a pen and a little mint tin that rattled.\n\n\u201cOh! I\u2019ve got beer breath. I need a mint. Can I?\u201d\n\nVickie and Will looked at each other.\n\nBefore Will could get his thinking straight, Vickie piped up.\n\n\u201cSure! Try the pink one, they\u2019re the best.\u201d\n\n\u201cOkay.\u201d Quinn opened the tin and took out a pink pill.\n\n\u201cWait!\u201d Will bowed his head, kicking himself for not just letting things go.\n\n\u201cOh, it\u2019s fine. Will\u2019s just worried about running out. He\u2019s got plenty.\u201d\n\n\u201cI don\u2019t want to eat up all your mints, Will.\u201d Quinn sensed there was something else going on.\n\n\u201cVickie, stop. Quinn. Those aren\u2019t mints. They\u2019re...\u201d\n\n\u201cQuinn! Come with me to the bathroom for a sec.\u201d",
        "Will brought his head back up, and looked at Vickie, but didn\u2019t speak.\n\n\u201cWhat\u2019s going on guys? This is weird. Is this some secret sibling thing?\u201d\n\n\u201cMaaaaaybe.\u201d Vickie stood up, wobbled a little, then grabbed Quinn\u2019s hand. \u201cI gotta pee!\u201d\n\nShe dragged Quinn over to the attached bathroom and through the door.\n\nWill could hear them talking, but didn\u2019t understand anything. He was so confused. He really cared for Quinn and didn\u2019t want to trick her into liking him, especially now that he could see she was not like them. He wasn\u2019t thinking marriage or anything, but there was no way her family would look at him as anything but a white trash failure.\n\nHe stood up and felt a little light-headed. What was Vickie going on about? Why did she want Quinn to take the pink pill?\n\nHe walked over to the bookshelf and ran his finger across the spines of a few manga collections. There were a lot there that he had never even heard of. He liked manga a lot, but couldn\u2019t afford to actually buy them. His mind drifted back to the various viruses that he accidentally put on the school library computers trying to find a way to read them online. Maybe Quinn would let him borrow some sometime.\n\nThe bathroom door swung open and both girls came out. They stared at Will with a united dangerous look. They strode out toward him without a word until they stood right in front of him.\n\nWith deadly serious expressions, both girls stuck out their tongues. Will was going to laugh, but he saw that they both had pink pills right there. Then Quinn and Vickie put their tongues back in their mouths and swallowed visibly.\n\n\u201cVickie!\u201d Will\u2019s eyes were wide open in distress.\n\n\u201cNow, Will,\u201d Vickie raised a hand and opened her palm. \u201cIt\u2019s your turn. Take your medicine, big bro.\u201d\n\nWill looked at Quinn, who seemed to be the more drunk of the two, but her expression was firm and hid something else, too. Quinn nodded and smiled slightly.\n\n\u201cShe told you?\u201d\n\n\u201cShe told me. It\u2019s just for fun. You guys will stay here tonight. There\u2019s no reason to worry.\u201d\n\nWill was trying to figure this out. Why would Vickie tell her? And then why would Quinn agree to take it? The only answer was coming from his libido, but that couldn\u2019t be possible.\n\nVickie took the blue pill in her fingers and raised it to Will\u2019s mouth.\n\n\u201cTake your medicine.\u201d\n\nWill took the pill and then Quinn handed him a bottle that only had the dregs left.\n\n\u201cHmmm... Well, I think I need to get us some more beer,\u201d Quinn went off to the main door. \u201cThen maybe we can get on with the good stuff. We\u2019ve still got a few scenes to read, you know.\u201d\n\nWill and Vickie both watched her leave, their eyes locked so hard on her that she had to feel them.\n\nBut when Quinn was out of the room, Will turned on his sister.\n\n\u201cWhat were you thinking? Did you tell her what that pill does? Why did you take one?\u201d\n\nVickie laughed. \u201cSam\u2019s right, you know. You are far too gullible for your own good.\u201d\n\n\u201cWhat does that even mean?\u201d\n\n\u201cOk. I won\u2019t lie. I told Quinn everything I know about the pills. She thought it was hilarious. It was her idea that we all take one. Well, she wanted you to take the pink one too, but I said we should keep to Sam\u2019s original plan.\u201d\n\n\u201cBut, what... I mean... Are you trying to get together with her tonight?\u201d\n\nVickie tilted her head in thought, and then the door opened.\n\nQuinn came in with another six-pack of beer.\n\n\u201cI don\u2019t know if I can handle much more, but it\u2019s better to have extra than not enough, right?\u201d\n\nWill kept his eyes on Vickie, hoping for some kind of response, but she sidled up to Quinn and took two beers. She opened them both and handed one to Will.\n\n\u201cOk then! Let\u2019s get back to the reading.\u201d Quinn sat back in her spot on the couch and picked up her script. She looked at the siblings for a moment, then they all sat back down.\n\nAnd they started to read through again.\n\nThe reading went very slowly. Everyone was feeling the effects of the beer. And despite what she said, after taking a few sips from Vickie\u2019s bottle, Quinn broke down and got one for herself.\n\nBeyond simple reading mistakes and giggles and a little bit of slurring, there were other distractions. Will was in the middle of the two girls, and there was no direction he could turn without his mind falling directly in the gutter. To the one side was Quinn, leaning back in her long silky green gown that traced every one of her curves with painful detail. And to the other was his sister, wearing that loose flowy blouse that hid nothing. It even showed two darker areas that suggested those incredible nipples that he remembered licking and biting just that morning.\n\nHis erection had to be visible to anyone who cared to look down, and he knew that his sister was sneaking glances, but to his confused arousal, he was pretty sure Quinn had been looking, too.\n\nThe giggles and teasing reached a point where Will couldn\u2019t keep up. He just kept looking back and forth at them and trying his best to keep to the script. Should he just leave them together? It seemed like Vickie didn\u2019t mind much about the gap between their world and Quinn\u2019s. Maybe it would be the confident, gentlemanly thing to do to just leave them alone. After all, Quinn was really more into Vickie than him, right?\n\nAs his subconscious was beginning to drag him down, Quinn spun a little toward him and leaned back, flopping her feet up on his lap. He nearly jumped up as she flexed her feet, coming dangerously close to his hardness.\n\n\u201cAh... that\u2019s better. Don\u2019t mind me, Will, I\u2019m just stretching out.\u201d Quinn giggled.\n\nLooking over at her, he could see that the slit in her gown opened up, revealing a long pale stretch of leg. He defensively looked over at Vickie, but she was admiring the same expanse of leg, too.\n\n\u201cWell, if we\u2019re getting comfortable...\u201d Vickie reached back and undid the corset she was wearing. She tossed it on the table and sighed a deep sigh.\n\n\u201cVickie, you really should wear those more often. You look so hot in that one. But we need to get you a real one that laces up. I would love to tie you up... I mean lace you up...\u201d\n\nVickie smiled with a little bit of embarrassment, being reminded of her size. She was still amazed to learn that people might find her attractive instead of a big fat cow.\n\nThe reading went on a big longer, but no one was paying attention. Will was wracked with indecision. The only thing that made sense was for either him or Vickie to leave, or both of them. But Vickie showed no inclination to go. Taking off that corset was just the opposite. But with Quinn\u2019s feet right there, he couldn\u2019t exactly just get up and leave.\n\n\u201cOk, okok...\u201d Quinn wasn\u2019t slurring, but only just. \u201cIt\u2019s clear we\u2019re getting nowhere. Will has had too much beer and is screwing up all his lines.\u201d\n\n\u201cBooooo!\u201d Vickie hit him on the shoulder with her script. \u201cBut I don\u2019t think Quinn has had enough.\u201d\n\nVickie leaned over almost on top of Will, and she flashed her fingers like claws.\n\nQuinn cringed back in mock-horror.\n\n\u201cWill, grab onto her legs.\u201d He did, mechanically. \u201cSo, Quinnyquinquin... You\u2019re going to finish that bottle, or these fingers of mine will find out how ticklish you are.\u201d\n\nQuinn\u2019s eyes flashed with something like real shock or excitement.\n\n\u201cNoooo... It\u2019s like still half a bottle!\u201d\n\n\u201cDrink up it, madame director!\u201d\n\nVickie placed a finger on Quinn\u2019s heel and started to run her fingernail slowly up her foot.\n\nQuinn twitched hard and squirmed against Will\u2019s grip. Will, for his part, found holding on to her incredibly exciting. When she twitched, one of his hands slipped up to her calf and the smoothness was heavenly.\n\n\u201cOkokok... I\u2019ll drink...\u201d Quinn wheezed a bit, but she was smiling for real. She brought the bottle to her lips and started drinking. Every time she stopped to get a breath, Vickie ran that fingernail up again and she nearly choked, but went right back to it.\n\nBy the end, there was a rivulet of beer running down Quinn\u2019s chin, and Will glanced to see Vickie looking hungrily at her, as if she wanted to just run her tongue up from her neck to her mouth.\n\nThis image had an appreciable effect on him. And Will was startled to discover that Quinn\u2019s left foot was now resting right on his cock. He was startled, but even more excited to see Quinn look him in the eye, then wink.\n\n\u201cOk! Now I\u2019m going to be in really bad shape. Thank you very much Vickie. No...\u201d Quinn was slurring now. \u201cVickie is my best friend. She would never be mean to me. You aren\u2019t Vickie. You\u2019re Victoria. Evil nasty bully Victoria.\u201d\n\nWill laughed, knowing that she had never let anyone call her Victoria. He looked over to her to see her blow up, but found her with a very thoughtful expression.\n\n\u201cAnd, my dear not-friend Victoria. I think you owe me a favor!\u201d\n\n\u201cWhat? I don\u2019t owe you a favor...\u201d\n\n\u201cYou owe me fashion show!\u201d\n\nVickie looked dumb for a slip second, then flushed hard. Will could see the flush run deep down through her blouse.\n\n\u201cBut...\u201d Vickie stumbled. \u201cI... uh... I don\u2019t have the... er... costumes for that.\u201d\n\n\u201cPhhttt... I\u2019ve got a whole load of stuff for you to wear. You forget I\u2019m a theater geek. There\u2019s a costume cabinet over there. I want a fashion show!\u201d\n\n\u201cQuinn! Ahh...\u201d\n\n\u201cVictoria seems reluctant. Maybe she needs to be ordered to do it. If only he had a strong confident man here to make her obey. Her inhibitions have to be very low in the face of a confident man.\u201d\n\nAs Quinn said this, with particular emphasis on the words \u2018confidence\u2019 and inhibitions,\u2019 she was staring at Will with a wicked grin, and flexing her foot directly over his cock.\n\n\u201cDon\u2019t you want to see a fashion show, Will?\u201d\n\nHe stammered. \u201cShe\u2019s my sister...\u201d\n\n\u201cBut she is really really hot, isn\u2019t she? Just look at her.\u201d\n\nWill couldn\u2019t help but agree. What would a confident man do?\n\n\u201cYes. I think Victoria...\u201d A swift kick let him know that only Quinn was going to be able to get away with that. \u201cVickie ought to give us a show.\u201d\n\n\u201cYay!\u201d Quinn rolled back on the arm of the couch and pointed toward the standing closet where the clothes apparently were.\n\nVickie, with a great show of reluctance, made her way over to the closet and opened it up.\n\n\u201cI\u2019m not going to fit into any of your clothes, you know that, right?\u201d\n\n\u201cYou aren\u2019t calling me flat, are you? Victoria is such a bully!\u201d Her words were still slurring a little bit, but the smile was genuine. She giggled. \u201cOh, I think you\u2019ll find some things that should work.\u201d\n\nWith that, she looked back at Will and flexed her feet on him. She was smiling wickedly, knowing exactly what she was doing.\n\nHe felt so passive this whole night, but maybe the pill was starting to have effect, because a brilliant idea came to him. He reached his hands up and gently grabbed onto Quinn\u2019s feet. With his thumb, he pressed hard into her arch, and then started rubbing and stroking them.\n\nQuinn\u2019s eyes nearly rolled back in her head and she gave out a deep satisfied moan so loud that Vickie\u2019s head popped out from the folding screen she was changing behind.\n\n\u201cWhat is my brother doing to you?\u201d\n\n\u201cOh, wow... That\u2019s good. He is massaging my feet. Ooooo and he is really good.\u201d\n\nWill was oddly pleased to hear Vickie mutter something about never doing that for her, and he kept up the work, running his hands over her feet, pressing hand into the smooth skin and then rubbing gently on her toes, one by one.\n\nVickie finally came out from behind the screen. She was clearly not pleased. She was wearing a cowboy outfit, complete with flannel shirt, vest, jeans, chaps and even a cowboy hat.\n\n\u201cHow do you even have all this stuff in my size over here?\u201d\n\nThe shirt and jeans were far too tight, but in the best possible way. She looked sexy, but also more than a little bit absurd. In fact, even though she had a big belt buckle, Will could tell that she hadn\u2019t been able to zip up the jeans completely.\n\n\u201cBoooo!\u201d Quinn tossed a potato chip at her. She hopped up, stumbled back onto the couch, then rushed over to Vickie.\n\n\u201cVictoria, dahling, you know what kind of fashion show this is supposed to be, right?\u201d In a flash, she unbuttoned the shirt nearly down to her belly button. Vickie squealed and covered herself, then darted back behind the screen.\n\nWill heard them whispering again, then Quinn came out and stood in front of the couch.\n\n\u201cGimme your robe, Will.\u201d\n\n\u201cWhat?\u201d\n\n\u201cYou did okay with my feet, I want to see what you can do with shoulders while Victoria gets into a more suitable suit.\u201d She giggled again. \u201cSuitable suit suit suit.\u201d\n\nPuzzled, Will stood up and took off his silk robe and handed it over to her, becoming even more aware that nothing could possibly hide his arousal. And did she glance down at him?\n\nShe took the robe and put it on, then turned away from him. It seemed like she was dancing for a bit, wiggling and writhing, and then, like magic, she bent over and stepped out of her dress. With a fling, it went soaring off to the side and she plopped down on the ground with her back to the couch.\n\n\u201cWow.\u201d\n\n\u201cWhat can I say? I got skills. Now get back there and let\u2019s see if you do, too.\u201d\n\nWill sat back down and swung his leg over to get behind her. When he was in position, she shrugged off the top of the robe, exposing her shoulders, and although he knew it, it was only then that he truly took in that her incredible smooth pale expanse of skin was unbroken be a bra strap. She was completely topless.\n\nHe lifted her long hair up and let it flow like a little stream of dark blonde water over her neck and in front of her shoulder, trying to stealthily look over her shoulder, but she noticed and slapped his hands.\n\n\u201cLess leering, more rubbing!\u201d\n\nHe had never given anyone a backrub, but nothing could keep him from placing his hands gently on that skin that he had dreamed of for so long. He hadn\u2019t even done anything yet, but she purred in response. Did she want this -- whatever it was -- as bad as he did?\n\nHe started moving his hands gently over her shoulders, then back to her neck. She leaned forward slightly, and so he traced down both sides of her spine, which caused another guttural noise that he felt as vibrations through her back.\n\nEncouraged, he moved up to her neck, her lovely elegant neck, and pressed slightly on either side. He had a sudden epiphany. Quinn was making almost the same sounds that Vickie did when they were having sex. He listened carefully to Quinn\u2019s little moans, and tried to learn how she responded, what made her feel good. He did his best to focus on those sounds, to focus on making her feel good, but it was increasingly difficult. Once the connection between giving a backrub to Quinn and fucking Vickie was made in his mind, it was impossible not to hear her moans as explicitly sexual. It didn\u2019t help that she had to know he was hard, but if she leaned back just a little bit, she would have even more direct evidence.\n\nWill heard a noise from the screen, and looked up. Quinn also look up, but much more slowly.\n\nVickie stepped out again, this time dressed to kill. Sam had once said that she could be a goth sex kitten if she wanted to be, and they saw proof of it right there. The two long braids of her hair were pulled up into rolls on top of her head. And she had to have gotten ahold of some makeup back there, because she looked even more pale than usual, but with dark eyeliner and dark glossy purple lipstick. She was wearing the corset from her costume, but no shirt at all, only a loose gauzy black wrap draped over her shoulders obscured her breasts. She wore long silky black gloves that went all the way up to her elbow. Below that was a long black, but utterly transparent dress. They could both see underneath she was wearing fishnet tights.\n\nThe only thing that broke the image was her eyes widening almost comically, when she saw that Quinn\u2019s robe was open and she wasn\u2019t wearing a bra.\n\nWill and Quinn both sat there, completely stunned, each of them feeling their libido driven harder and faster.\n\nVickie smiled awkwardly, not sure how to interpret their dumb stares. She leaned a bit back onto the screen and started to move back behind it, but Quinn was faster.\n\n\u201cDon\u2019t you dare!\u201d\n\nShe jumped to her feet and made to dart over to Vickie, but she was still feeling the effects of the beer. She ended up stumbling and fell right in front of her. Vickie stepped forward to catch her and they both fell to the ground.\n\nVickie was on her back and holding onto Quinn, who was right on top of her, but with her head right at boob-height.\n\nThe little gauzy black wrap that had been covering her breasts? Nowhere in sight.\n\nWill could see the desperate panic in Vickie\u2019s eyes, and the aroused shock in Quinn\u2019s.\n\nIt was only then that Will realized how slow her was, and that something truly world-bending was going to happen that night.\n\nThis was confirmed beyond any doubt when Quinn started lowering her head toward Vickie. She was doing it slowly, achingly slowly, giving Vickie every chance to stop her.\n\nVickie\u2019s gaze flashed over to Will. He then remembered that Vickie had basically given up her chance at being with Quinn so that he could try to fulfil his dreams first. Vickie was looking at him for permission.\n\nWithout a second thought, he nodded approval, and it was as if a dam broke within her. Vickie reached out and grabbed Quinn\u2019s head and pulled her into her, onto her breasts.\n\nQuinn squeaked in surprise, but almost immediately went into moaning those same moans that were brought out by Will\u2019s massage. She twisted her mouth to get in reach of Vickie\u2019s nipples, pointing up and hard with arousal.\n\nVickie collapsed back more fully onto her back and twisted her head to the side, feeling those longed-for sensations flow through her. Quinn\u2019s hands were mobile too. While her tongue ran circles around her nipples, her hands roamed up and down her sides, as if she didn\u2019t know where she wanted to feel first.\n\nVickie glanced back down to her chest. Her breasts were totally uncovered, well, one had a blonde nymph greedily sucking and pawing it, but the other rolled and shook with their combined movements. It really was beautiful. In this bizarre new lust-filled world, maybe she was too.\n\nWith that thought in her mind, she rolled her head back and caught sight of her brother, sitting on the couch still, with what must be the most painful erection in the history of man. He looked conflicted though, almost sad. He smiled at her, but not the lascivious grin that she had hoped to see, more of a resigned grimace.\n\nShe saw him stand up, noting the huge tenting of his silk pajama pants with hunger made more pointed by Quinn\u2019s ministrations and hands that were roving further down now. But then he turned away from them.\n\n\u201cWill!\u201d Vickie\u2019s voice cracked awkwardly in her agitation. Quinn pulled her head back and looked around with a confused and frustrated gaze.\n\n\u201cWill!\u201d Vickie repeated, softer this time. \u201cWhere are you going?\u201d\n\nWill turned back and gestured vaguely to the pair of women, half-clothed and rolling around on the ground.\n\n\u201cI was going to... uh... give you guys some privacy.\u201d\n\nQuinn looked at him now, and with some heat. \u201cYou don\u2019t have to, you know.\u201d\n\n\u201cWhat, just sit there and watch... watch you two?\u201d\n\nVickie absentmindedly ran her hand through Quinn\u2019s long hair that was strewn over her back. \u201cMaybe... Maybe you don\u2019t just watch.\u201d\n\nQuinn smiled. \u201cWhat would a confident man do in this situation, Will? She\u2019s your sister, so you don\u2019t have to do anything with her, but I heard that you were kinda... you know... interested in me? And that backrub felt really nice. I bet your hands are good at other things, too.\u201d\n\nWill\u2019s mind flipped. What would a confident man do? He hadn\u2019t been thinking like that. But how weird would that be, making out with Quinn while she made out with his sister. That objection dissolved almost as soon as he considered it.",
        "What would a confident man do?\n\nVickie spoke up as he wavered. \u201cI talked to Quinn in the bathroom. Before we took the pills. She\u2019s okay with this. And I\u2019m more than okay with this.\u201d\n\nA confident man would take control. Both girls saw a slow meaningful grin spread across his face.\n\n\u201cOkay then. Let\u2019s do this right though.\u201d He strode over to the bed, covered in frilly pillows and a light comforter. He hopped up and reclined back with his hands behind his head. This had to look ridiculous, but it was just a role. He was confident now.\n\n\u201cQuinn, stand up and face me.\u201d\n\nHis tone surprised her, but she obeyed. The robe was barely hanging one from the sleeves, and she pulled it up over her shoulders. She was suddenly a little embarrassed, standing in front of these two siblings nearly naked. It didn\u2019t occur to her that she had been sucking Vickie\u2019s nipples not more than a few seconds previously. Somehow that wouldn\u2019t count, anyway. Her arms reflexively moved about, trying to cover herself.\n\n\u201cArms down to your side. Vickie,\u201d He almost called her Victoria, but didn\u2019t want to push his luck. \u201cWould you kindly stand up next to Quinn.\u201d\n\nVickie was less taken aback, and was enjoying the direction this was going. She stood up next to Quinn.\n\nIt was a lovely comparison for Will. To one side was Quinn, the taller, thinner girl, long blonde hair, shifting her weight from foot to foot. She was excited, but unsure. She might come off bossy at school, but here, she seemed almost wanting to be ordered around. Then there was his sister, a woman he really hadn\u2019t understood at all well until the previous night. He wasn\u2019t even sure he knew her well now, but he was impressed by what he could see. She was standing firm, feet apart and looking at him boldly, hungrily. She was a good deal shorter and a little wider, but right then, she was sex incarnate. Her breasts, now free and heaving over the corset were the objects of the most passionate dreams, and her left nipple was glistening from Quinn\u2019s attention. The diaphanous skirt she was wearing was nearly falling off, like it would float away at the first tug, or nibble.\n\n\u201cVickie, I think we both want to see a little more of our dear friend, Quinn. Don\u2019t you think so?\u201d\n\nVickie glanced at him. Will seemed sort of different, like he was playing a role. Was he really so gullible that he thought the pill was working, or was this all just him playing? In the end, it didn\u2019t matter too much to her. She decided to take on a role, too. She would be the procurer, the one who brought Will delicate pieces of flesh. She would bring Quinn to him, dripping wet and begging. The mere idea got her more excited than she was expecting it to.\n\nVickie\u2019s smile turned more ravenous. She couldn\u2019t trust her voice though, so she merely nodded.\n\n\u201cGood. Why don\u2019t you start with her robe. Take it off and set it to the side.\u201d\n\nQuinn froze in anticipation. Her eyes darted from Will to her side where she couldn\u2019t quite see Vickie. She didn\u2019t dare turn her head, but didn\u2019t know why.\n\nVickie slid behind her like a predator. She placed her hands gently on Quinn\u2019s hips, then glided them up her sides.\n\nQuinn shivered, feeling almost ticklish, but deeper, more passionate.\n\n\u201cQuinn, this robe is so nice.\u201d Vickie was pleased that her voice came out steady, deep and smoky. That was the character she was playing now. \u201cThat silk must feel so good on your skin. Does it feel good?\u201d\n\n\u201cYee...e... yes... It\u2019s so nice...\u201d\n\nVickie\u2019s hands approached her shoulders and Quinn shrugged back, trying to get more contact. The hands stopped as if in punishment, and Quinn sighed out a ragged lungful of air.\n\nAfter the briefest of moments, Vickie\u2019s hands reached out and held onto the front of the robe. She pulled back, putting Quinn on display for her brother.\n\nHe tried to keep an appearance of casual confidence at this unbelievable sight, but without a conscious thought, his hand reached down to touch himself.\n\nHer breasts were flawless. They were exactly what he had imagined, and they jutted out with her light brown nipples pointing high and hard. For an instant, Will wondered if his sister Sam\u2019s breasts were as similar to Quinn\u2019s as the rest of her was.\n\nHis eyes finally drifted up to hers and he swallowed hard. She was looking at him with a look of panic and insecurity. Underneath all her competence and confidence, she was just a girl showing herself to her friends for the first time.\n\nWill battled down his first instinct, which was to jump up and fall at her knees and praise her beauty to the sky. He was a confident man, now. There had to be a way to make her feel worshiped, but not lose his role.\n\n\u201cSimply gorgeous.\u201d He had to take his time, \u201cVickie, would you please remove Quinn\u2019s panties?\u201d\n\n\u201cOf course!\u201d\n\nVickie spun around a bit quicker than she had planned, nearly falling out of character, dropping to her knees in front of Quinn, who looked down with a good deal of remaining nervousness.\n\nVickie smiled and winked up at her. Then her hands were on her again. Back on her sides, right above her hips, skin to skin this time, Vickie could feel the warmth radiating off of her.\n\nThose hands slid down her sides to her hips, coming into contact with the smooth fabric of her panties.\n\n\u201cOoo... These are from that swanky lingerie store, Faith, aren\u2019t they?\u201d\n\nThis time it was Quinn who couldn\u2019t trust her voice. She nodded.\n\nVickie grinned and started pulling them down. \u201cMaybe we should go there together. I need to pick up the gifts you bought me.\u201d\n\nBut then Vickie\u2019s hands were at the prize, her panties stuck to her for the briefest of moments, then she pulled them down and off to the ground.\n\nQuinn flushed, knowing that not only were Will\u2019s eyes on her, but Vickie\u2019s too, and Vickie was so much closer, she had to be able to see... to smell how aroused she was.\n\n\u201cVickie, why don\u2019t you describe our good friend Quinn to me.\u201d Will hoped this might be what Quinn needed for confidence.\n\n\u201cOh, god, Will, she\u2019s just beautiful. She\u2019s got the most amazing hair. It\u2019s so smooth.\u201d Vickie stood up and ran her hands through it, making Quinn moan and her eyes flutter closed. \u201cOoo... She liked that! Um... Her face is just incredible, she\u2019s got a strong nose, it\u2019s just like Sam\u2019s... well, before Sam broke it. Her chin and neck... Her skin is just, I mean, wow, don\u2019t want to run your fingers down her neck?\u201d\n\nAgain, Quinn stayed completely still, but she shuddered a bit at this description. Vickie looked at Will, who smiled, and then Vickie did run the back of her hands down Quinn\u2019s neck, letting her fingernails trace over her flushed skin lightly. Quinn reacted with a low-pitched growl.\n\n\u201cAnd her boobs, I mean, what can I say? They\u2019re just about the most perfect boobs I\u2019ve ever seen. And those nipples, just look how hard they are! Maybe we can play with these soon. Her hips flare out like... like... like, just, damn. And here she got the cutest little bush, it\u2019s so light and fluffy-looking. It looks totally natural. Should I look closer, Will?\u201d\n\n\u201cOf course, please do! Quinn, open up your legs a little bit. Thank you.\u201d\n\nVickie paused, trying to control her excitement and stay in her role.\n\nShe knelt down in front of her again.\n\n\u201cI thought it was good when I took off her panties, but oh, man, brother of mine... She is adorable! She\u2019s got the cutest little... lips... And Will, should I tell you? She\u2019s really really wet. I can see her just glistening. She must be really excited. I wonder why?\u201d\n\nThen Vickie lowered her voice to speak to Quinn alone, but in a way that Will was certain to hear. \u201cI\u2019ll tell you the truth though. I\u2019ve been wet for hours.\u201d She giggled and winked again.\n\n\u201cVery nicely done, Vickie. It seems that you like our friend quite a bit.\u201d\n\n\u201cYes, oh god, yes. I mean, I would love her even if she didn\u2019t look like this, but I can\u2019t deny... Just look at her.\u201d\n\n\u201cGood. Why don\u2019t you bring her over to the bed. No, no... You keep your clothes on for now. We\u2019re going to play with our little Quinn first.\u201d\n\nVickie\u2019s frustration about still wearing clothes, such as the were, was real. But the thought of both of them playing with Quinn, like a toy between them, made all hesitation evaporate.\n\nVickie stood and took Quinn\u2019s hand, then led her to the bed. Will was no longer leaning back, but sitting up straight, watching with keen appreciation.\n\n\u201cGo ahead. Lay her down on the bed so we can both get a good look at her.\u201d\n\nQuinn moved like a zombie, letting Vickie arrange her on her back between the two siblings.\n\nWill leaned over and looked at Quinn in the eyes.\n\n\u201cAre you sure about this?\u201d\n\nQuinn nodded, without expression.\n\n\u201cTell me. Tell us what you want.\u201d\n\nShe croaked out a noise, then flushed in embarrassment. She cleared her throat gently and then looked back and forth between them.\n\n\u201cI... I want this...\u201d\n\nVickie placed her hand on her chin, turning her head toward her.\n\n\u201cWhat do you want, Quinn?\u201d\n\n\u201cI want... Oh, god, I\u2019m so confused... I wanted you, but when you told me about Will, I started thinking... And then tonight... I\u2019m not drunk. I was going to ask you to come back here, but I couldn\u2019t decide who I wanted to invite. I want both of you. That\u2019s not right, right? I can\u2019t want both of you. That would make me a slut, right?\u201d\n\nWill leaned down and gently kissed her forehead.\n\nVickie ran her hand down her chin to her neck, then in between her breasts.\n\n\u201cYou aren\u2019t a slut, Quinn. And who cares if you were. It\u2019s just a stupid label. You\u2019re you. Do you want us tonight?\u201d\n\n\u201cGod, yes. Please?\u201d\n\nWill leaned back a bit and deliberately looked up and down Quinn\u2019s prone body.\n\n\u201cGood. Vickie, why don\u2019t you start?\u201d\n\nWithout a pause, Vickie swung a leg over Quinn and stared at her, then slowly began lowering her mouth to hers.\n\nWill held his breath as Vickie\u2019s lips got closer and closer. He could even see Quinn struggling. She was trying to hold back and enjoy the anticipation, trying not to just grab her and pull her down. There was a darting tongue, licking her lips, then they kissed.\n\nHe could actually hear them both moan into each other, and then Vickie lowered her body onto Quinn\u2019s, her huge breasts hanging, then smushing up against Quinn\u2019s.\n\nWill barely had any real experience at all, but this was so much more visceral than any porn he had ever seen. The girls turned their heads slightly, the kiss getting more heated, and four hands explored with wild jerky movements.\n\nVickie slowly started working down from Quinn\u2019s mouth, kissing her chin, then following where her hands had been, licking and nibbling down her smooth neck. She ran her tongue across Quinn\u2019s clavicle, then started down toward her breasts.\n\nWhile her attention was focused on the unreal sensations brought out by Vickie\u2019s tongue, she didn\u2019t notice Will creeping closer. She jerked in surprise as he ran his hand through her hair, scratching her fingernails on her scalp. Her eyes closed and her mouth opened in a moan of satisfaction. Will\u2019s fingers in her hair, then Vickie\u2019s lips, oh god, Vickie\u2019s lips on her breast.\n\nShe turned her head and looked into Will\u2019s eyes as he brought his mouth to hers. Right as their lips touched, Vickie bit gently on her engorged nipple, causing her to groan in Will\u2019s mouth.\n\nThey continued, Will, kissing her with growing urgency, and Vickie now leaving her aching breast, moving lower.\n\nQuinn couldn\u2019t focus her mind. The inevitable trail that Vickie was tracing, it was like a line of fire running from her neck over her breast down to her deepest need. But she was fully engaged with Will, who was now bringing his other hand into play on her other neglected breast, rubbing his finger over her nipple.\n\nShe was moaning and chirping as the siblings went to work, a breast harshly kneaded, her belly tickled with Vickie\u2019s tongue and a few strands of falling hair, her thigh flexing involuntarily against Vickie\u2019s leg.\n\nShe thought that she should reciprocate. She should do something, anything, but she was lost in the sensation. At one point she couldn\u2019t even tell who was touching her where. She saw Will\u2019s eyes flash in hunger, and she knew she must look like the most wanton, wild, and depraved woman there ever was. And in a flash, she thought that was the most wonderful thing to be.\n\nBut that was nothing compared to when Vickie finally made her way to her goal. Quinn raised up her head, dislodging Will, so that she could see Vickie, there between her legs.\n\nVickie licked slowly up the inside of each thigh, her eyes locked on Quinn\u2019s.\n\nWill reached back and grabbed a couple of pillows to prop up Quinn\u2019s head so she could watch every moment.\n\nVickie moved in, with the lightest of kisses and licks. Then a gentle nip at her labia that made Quinn\u2019s entire body shudder.\n\n\u201cPlease...\u201d\n\nVickie\u2019s smile grew wider as she licked her deep trough, but avoided the visible nub that had pressed itself outside its hood.\n\nWill caressed Quinn\u2019s breast. \u201cPlease what, Quinn?\u201d\n\n\u201cHgnn... ohgod... Vickie, please... I\u2019m right there... just a little more...\u201d\n\nWill wanted to draw out the agony a little more, but Vickie couldn\u2019t hold back. She lifted Quinn\u2019s legs up and pulled them apart further, then dove hard into her.\n\nQuinn flung her head back onto the pillows, but Will could see Vickie\u2019s tongue dart out and run a few circles around Quinn\u2019s clit, then she smashed her face further down, and he was only aware of Quinn\u2019s spasms growing stronger and more rapid.\n\n\u201cOhfuckohfuckohfuckohfuck... YES! dontstopdontstop... FUCK!\u201d\n\nQuinn repeated this mantra several times, crying out with decreasing comprehensibility and volume, then screaming as her body was wracked twisting with ecstatic shudders. He fell over on top of her, holding her down, holding her tight, and it seemed like that was a spur to even higher heights of bliss.\n\nFinally, after several repetitions, Quinn seemed to lose the ability to call for more. It was almost like she passed out, but her eyes were still wide open, dazzling and darting around.\n\nVickie popped up from where she was kneeling. \u201cIs she okay?\u201d\n\nWill saw her face and broke out laughing. There was a thick sheen of lust covering Vickie from cheek to chin.\n\n\u201cMmmmokaaay...\u201d Was Quinn\u2019s word from deep in the depths of her orgasm-wracked brain.\n\nQuinn rolled over, knocking Vickie to the side and out from between her legs. Will reached out and grabbed her body, shifting it over more fully onto the bed.\n\nVickie crawled up on the other side of Will, looking over him at Quinn\u2019s wrecked body.\n\nQuinn looked at them with thrilled exhaustion. She looked at Will, then Vickie.\n\nQuinn\u2019s voice was raspy, but warm. \u201cYou two? Are you...\u201d\n\nWill moved closer to Quinn, and Vickie followed, draping herself over her brother, pressing her breasts into his back.\n\n\u201cWhat do you think?\u201d Will whispered, only inches from Quinn\u2019s ear.\n\nVickie started running her hand up Will\u2019s leg, but her eyes were still on Quinn. \u201cWould it be so awful if we did?\u201d\n\nQuinn\u2019s eyes glittered. \u201cNO!\u201d then her eyelids lowered subtly as Vickie\u2019s hand reached out from her brother\u2019s leg to caress Quinn\u2019s. \u201cNo. It\u2019s not... I wouldn\u2019t be awful at all. I think... Vickie, you are so hot... I can\u2019t imagine Will keeping his hands off of you...\u201d\n\n\u201cOk then.\u201d Will leaned in further and licked Quinn\u2019s earlobe. \u201cI\u2019ll let you in on a secret. It\u2019s all a very new thing for us, but, you\u2019re right.\u201d\n\nThen he rolled over slightly, pushing Vickie back. She didn\u2019t break eye contact with Quinn, but started to slide on top of him.\n\n\u201cSee Quinn, now that he\u2019s a confident man and all,\u201d Vickie\u2019s smile was enigmatic, \u201cIt was me. I couldn\u2019t keep my hands off of him.\u201d\n\n\u201cShow me.\u201d Quinn snuggled into herself and giggled like a little girl. \u201cShow me how you can\u2019t keep your hands off of him.\u201d\n\nVickie purred and finished straddling her brother. Finally, she looked down at him, slightly taken aback by the desire in his expression. Well, who could blame him, with two gorgeous nude schoolgirls in bed with him. She reached down to take off her skirt, but Will stopped her.\n\n\u201cKeep it on. It\u2019s sexy. And with that corset, damn... You are a goddess.\u201d\n\n\u201cYes, she is.\u201d Quinn untucked her hand and ran it over Vickie\u2019s feet.\n\n\u201cQuinn, take off her tights.\u201d\n\nQuinn happily reached up and pulled the fishnets down. The way she did, she knew they were going to rip, and she didn\u2019t care at all. And they were both pleased to see that she wasn\u2019t wearing anything underneath.\n\nVickie tilted her head, a blush creeping over her, and pulled the skirt up so she could get skin to skin contact. She started rolling her hips over him.\n\nWill grunted involuntarily and realized that there was no way he was going to last long. He could feel the course hair of her sex rubbing up against his cock and his belly. When she humped forward, it was like her lips were pulling him off. The sloppy wet sounds echoed in the room with their panting and Quinn\u2019s hard breathing.\n\n\u201cVickie... ohgod... I\u2019m way too close... I\u2019m not gunna...\u201d\n\n\u201cGood.\u201d Quinn and Vickie said at nearly the same time, then they laughed together.\n\nBut Vickie had the control. She sat up high on his lap and arched her back harder, slipping the tip of his cock right on the very edge of her. Then with an evil gleam in her eye, she started rocking back and forth again.\n\n\u201cOOohhh... Ugnnn... Ohgod Vickie yeah... yeah...\u201d\n\nThen, right as he felt he couldn\u2019t hold on another second, he felt Quinn\u2019s hand reach out and grab him by the chin. In a primal gravelly voice, she demanded, \u201cFuck him!\u201d And then her darted over and dropped her mouth onto his.\n\nWill could barely breathe. He tried to respond to Quinn\u2019s lips. God, how long had he been dreaming of those lips? He was able to wrap his hands around her waist, but the sensation of Vickie\u2019s pussy riding down onto him drove everything else out of him mind.\n\nHis hips shook uncontrollably which drove him hard and deeper into Vickie than she expected. She yelped out in a stab of ecstatic bliss, but he was already at his peak.\n\nHe squeezed Quinn tight as he shot off into his sister. He worried that he was squeezing her too tightly, but she had already shifted on top of him and was rubbing her chest against him at an angle, moaning in pleasure that he could feel viscerally. And she had stopped kissing him. When he squeezed her, she dropped her head into the crook of his neck and kept grunting something that sounded like, \u201cyes.\u201d\n\n\u201cHoly crap... Quinn, he\u2019s still hard... ohgod... feels so good...\u201d Vickie was rocking smoothly, pumping him deep into her with a slow heavy rhythm.\n\nWith reluctance, Quinn turned her head back and looked at Will\u2019s cock, glistening with both of their lust, sliding into her friend. It seemed impossibly big and impossibly long. When she pulled up it was like there was always more of it.\n\nShe knew that she had to try it for herself. She was going to lose her virginity tonight to two siblings. At the thought, her entire body flushed red. She had already played with her toys, so it shouldn\u2019t hurt, but damn, it did look big.\n\nVickie was performing now. She saw the way that Quinn was looking at her, and she deserved a real show. Vickie was going to show her how wonderful this felt. She rocked back harder so that her breasts, lifted up by that incredible corset, shook hard in time.\n\n\u201cQuinn... Ughh... can you see him? God, he feels so good... Ghhnnn... so good inside me... And when I lean in a little... ohfuckohfuck... just like that, he rubs up against my clit... sogood...\u201d\n\nShe reached up and started pinching her nipples, feeling herself rise to her own orgasm. Right then, one of her braids fell down from her head and started whipping around as Will plowed into her. He remembered the night before and reached out to grab it. He pulled once, bringing her head down toward Quinn, then handed the braid to her.",
        "\u201cShe likes it. Hnnghh... Pull her hair...\u201d\n\nQuinn was thrilled to find something so fun. The other braid came down and then Quinn had both braids, pulling Vickie down each time she pounded down. Quinn saw her eyes flash with surprise and lust.\n\nAnd Vickie saw Quinn\u2019s frantic gaze shooting back and forth from her face to her boobs to the cock that she was slamming down onto. Watching Quinn get hotter and more flustered was the tripwire to her climax.\n\nShe leaned forward again to get just the right pressure on her, only to have Quinn toss the braids aside and reach out to grab her in a hard, tight hug. Quinn squeezed the air out of her, and her vision went blurry as her lust exploded within her, slamming through her body.\n\nQuinn squeezed her tighter and she slipped back deep onto Will\u2019s cock, redoubling the pneumatic bliss pulsing through all the more sensitive parts of her.\n\nFor a moment, she thought she would pass out, but Quinn held on to her kindly and gently, guiding her down onto her back. She was panting hard, and she felt hands all over her, caressing and teasing.\n\n\u201cHoly... Fuck...\u201d\n\nWill and Quinn were on their knees looking down at her. They both giggled as their hands gradually moved from Vickie\u2019s body to each other\u2019s.\n\n\u201cWill...\u201d Vickie took a moment to get her breath again. \u201cWill... I want to see you two... I want to see you fuck her.\u201d\n\nQuinn blushed and looked away, thinking that she shouldn\u2019t show how badly she wanted him to ram his cock into her.\n\nNot understanding her thinking, Will was touched to see Quinn react so coyly.\n\n\u201cQuinn?\u201d\n\nQuinn muttered something.\n\n\u201cQuinn? It\u2019s okay, we don\u2019t have to. It\u2019s...\u201d\n\n\u201cNo.\u201d Her voice was dripping with need. \u201cI want it. I want it all.\u201d\n\nThe siblings glanced at each other, a bit startled with her firmness.\n\n\u201cI want... everything.\u201d It was like a switch had flipped in her mind. She turned and looked at Will with a wild animal expression. \u201cYour sister just ate me out. She licked my pussy until I came in her mouth. And now I need you to fuck me. I need you to make me feel what she just felt. Fuck me with your dick still wet with her cum.\u201d\n\nWill didn\u2019t have a moment to think about what a confident man might do in this situation, because Quinn simply leapt onto him and dragged him down. She pulled him on top of her and ran her hands over him as she slid her legs over his hips.\n\nHe tried to regain some kind of agency in this, leaning down to kiss her, but she pulled him tight, squeezing him harder than she did Vickie.\n\nIn his ear, she whispered, \u201cI need you to fuck me hard, press down onto me, fuck me into the floor.\u201d Her voice sweet and girlish, totally at odds with the message.\n\nThen she raised her voice. \u201cVickie, I need you to aim your big brother\u2019s cock.\u201d\n\nIn a flash, Will felt a hand on his hardness. Vickie rubbed him up against Quinn, so incredibly slippery. With each flick of his crown against her, she shuddered and moaned, twisting in his arms just enough to feel the resistance.\n\nThen she grabbed his head and pulled him into a hard kiss, nearly bumping teeth. Her eyes on his, wild and filled with excitement.\n\n\u201cNow, fuck...\u201d then she yelled out in triumph as he pushed into her. He was only going to press in a little bit, but even though she was almost painfully tight, she was so slick, so welcoming, and her hands jumped down to press him into her so hard, that he pushed nearly all the way into her.\n\nThe entire time, which seemed like minutes to Will, she wailed out, not in anything like pain but with joy and the thrill of it.\n\n\u201cAgain... Ughh... again... hnnnngg... harder... harder...\u201d\n\nQuinn struck up a chant and he pounded into her, first with a worry he might hurt her, but as she kept staring at him, with that wild animal smile, he put everything he had into it.\n\nAnd to his surprise, he felt her start to lose control almost immediately. Her eyes popped open wider and she shot a glance to Vickie, who was sitting to the side with a hand in between her legs and an expression of uncontrolled desire. One of Quinn\u2019s hands slipped over and grabbed Vickie\u2019s unoccupied hand. Their skin went white as she squeezed hard.\n\nThen Will decided to see if he could help her even more. He dropped his body heavily on hers, smashing her breasts to his chest. He slid his arms around her and squeezed her like she had squeezed him. His held her as tight as he could, pressing her into the bed and pounding harder and harder into her with his hips.\n\nThat was exactly what she had needed. The weight of his body covering her as he filled her, slamming down onto her. She couldn\u2019t even rise to conscious movement. Everything was sensation and reaction.\n\n\u201cOHfuck... yesyesyesyesyes... ohgod... moremoremoremoremore...\u201d\n\nThen Quinn started wailing. Her hand let go of Vickie\u2019s and it flailed around uselessly, slapping Vickie\u2019s leg and then Will\u2019s side. But she couldn\u2019t twist or shudder because Will was holding her too tight. Her entire body lit up with orgasmic energy and had to squirm, to thrash, but no matter how she struggled, she couldn\u2019t shift her body at all. There was a hint of panic in her as she was almost unable to catch her breath, but the intensity of her orgasm just kept multiplying. With each movement she couldn\u2019t make, it was like her nerves opened even wider to the pleasure.\n\nWhen Will finally did roll off of her, it was like her senses came back one by one and slowly. The orgasm was still roiling within her, banking off of one end of her and echoing back, giving her aftershocks that curled her toes.\n\nShe heard a voice humming, high and sweetly. She might even know the tune. Then she realized it was her own voice resonating with the vibrations in her body.\n\nShe smelled sex. It was everywhere, permeating the entire room. She knew her own scent, but this was more, heavier and almost demanding. So wonderful.\n\nShe felt hands, comforting, welcoming, kindly, sensual hands, gently caressing her.\n\nHer eyes fluttered open and she saw her friends, her lovers, leaning over her. They both looked incredibly turned on, but with a hint of concern for her. She loved them both so deeply.\n\nThe only sense that didn\u2019t seem satiated was taste.\n\nShe looked back and forth at the two siblings.\n\nWhat could she possibly do to remedy that?\n\n \n"
    ],
    "authorname": "shudai",
    "tags": [
        "costumes",
        "cunnilingus",
        "ffm",
        "brother sister incest",
        "romance",
        "school",
        "older brother",
        "younger sister",
        "threesome",
        "two women one man"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/gullible-ch-03"
}