{
    "title": "Melissa Shows Off Ch. 02",
    "pages": [
        "A little time had passed since Melissa quit working at the club. She still had vivid memories and occasional flashbacks and felt the exhilarating rush of adrenaline flow through her body when she thought about those wild nights. It started as a bit of exhibitionism with her wearing the club's skimpy uniform while serving drinks, it quickly progressed to her being coaxed into stripping on stage in front of everyone and then performing private lap dances. But it was the trips to the VIP room where she serviced several men and the sex with Don and Mike while Jack looked on that made her pulse race.\n\nWhat Melissa found odd was how she felt guilty at times when thinking about those fond memories, it wasn't about having sex with someone other than Jack but for the intense amount of pleasure she enjoyed during her brazen acts. She really was a slut that week she worked at Mike's club. The guilt never lasted for more than a moment or two and quickly subsided when she realized how damp her pussy got when she thought about being naked in front of a roomful of cheering men, each of them lusting for her. There was also the fact Jack himself encouraged everything that happened and got intense pleasure from her being a slut too.\n\nBut as the saying goes all good things must come to an end, Melissa knew it was something that couldn't go on forever. The reality was, she was out of work and needed to find a regular job and being a slutty stripper wasn't a long term career option. It was fun but now was the time to get serious about getting her career back on track.\n\nJack also had fond memories of his wife's extreme erotic adventures. Surprisingly it also gave him insight into his previous relationship with Tabitha who was a stripper and, without thinking, compared her to Melissa on occasion. He had a self-realization or epiphany of sort about what turned him on about dating Tabitha in the first place. It was purely a sexual fantasy and nothing real or meaningful but with his wife he enjoyed the best of both worlds during that week at the club. She was his sexual fantasy but with the feeling of love on top of the sex. He could now start to embrace the fact that he was turned on by knowing other men were aroused by seeing Melissa naked and it only intensified with her teasing them. \n\nJack had even come to accept he enjoyed watching his wife give complete strangers handjobs and blow jobs, this of course is what happened in the VIP room. But most of all he could admit he loved watching Melissa be a little submissive for Mike and Don when they fucked her. Both Jack and Melissa were excited by this new aspect of their sex life but truly didn't know where it would lead. They had opened Pandora's Box and there was no turning back now. What they could agree on was there would be no new experiences or further leaps into for the immediate future until the dust settled on what had just happened at the club.\n\nAs part of Jack's final payment from Mike for all his help, he asked for one of the waitress uniforms as a memento of the time Melissa spent working for him. Mike thought it was awesome and had no problem with that request knowing that they would use it for role playing in the safe confines of their bedroom. Jack also agreed to help Mike with his accounting on an as needed basis, simply as another set of eyes over the business end of the club. Mike told him that anytime Melissa wanted to come back, even for one night, all she had to do was show up. He again said it would be great if Melissa would agree to work some private parties but Jack told him not to get his hopes up.\n\n\"If you remember correctly, that's what you told me about her stripping,\" Mike responded with a sly grin on his face.\n\nJack couldn't help but to give Mike a sheepish grin in return because he knew Mike was right.\n\n\"Touche!\" he cracked, making them both laugh. \n\nOver the next month or so, Melissa would wear the club uniform around the house for Jack as part of their roleplaying, he loved her waiting on customers at the club in the short black, ruffled skirt that barely covered her ass and swayed across her butt as she walked. She would unzip the white crop top so her breasts hung out, especially as she bent over in front of Jack just like she did for the other men in order to get tips. With the uniform they could relive that time of exhibitionism and voyeurism. Jack made Melissa laugh by playfully tipping her by stuffing cash into her top and grabbing her tits, he would grope her until she pretended to be offended and slap his hands away. When he wasn't touching her breasts he was grabbing her ass when she bent over. It was a safe way to relive their experience in the safe confines of their home.\n\nNeither Melissa nor Jack knew the number of men that fondled Melissa during her time as a waitress or how many of them saw her naked from stripping. It was impossible to determine but probably in the hundreds. What was even more staggering was she had given about a dozen blow jobs and twice as many handjobs to the customers in that one week which was way more than she had previously in her lifetime. Those thoughts had become the fuel to their sex life. But there was one thing Jack didn't quite understand and that was why Melissa was so willing to let Mike take her anal virginity while still not allowing him to fuck her ass. He had tried on multiple occasions before the club and after to get his wife to let him sodomize her but she still refused. He was left with only the memory of seeing her bent over the desk while Mike penetrated her ass. Jack thought it sounded stupid but Mike seemed to have some sort of special power over Melissa that turned her into a submissive slut. While still a turn on, it was also a source of frustration for him.\n\nMike was also convinced he knew Melissa well enough that he would eventually get what he wanted and wasn't giving up. He called Melissa a couple of times asking her to work private parties but she turned him down. Mike was laying it on strong telling her how beautiful she was and how guys loved her because she was a gorgeous, tall blonde with blue eyes and long legs. He remarked that her nice round butt was out of this world, that she was the total package and could make thousands of dollars if she wanted. He was chipping away at her defenses and it was becoming harder for her to say no to him.\n\nIt led to Jack and Melissa discussing the offers but at the end of the day, she just wasn't ready to go back to that lifestyle. Deep down though, she wanted to try a party and feel the rush but it was a scary leap she wasn't quite ready to take. Just the thought of performing at one of these private parties fueled some intense fantasies which carried over into the bedroom where her and Jack would talk about it before, during and after sex. Neither of them wanted to say it out loud and admit it, but they both were desiring another exploration into her exhibitionism and his voyeurism. As if a part of some divine plan Melissa started dressing in a more revealing way when they were out at dinner or just socializing, but there were of course limits. That was until one evening when a new opportunity to experiment arose. Jack was watching a football game on TV and Melissa commented on how the visiting team was better than Jack's beloved home team. Jack got a little annoyed, seeing as his wife didn't know much about football and she seemed to want to taunt him. He came up with an idea that might shut her up.\n\n\"If you know so much about football, let's bet on the game,\" he told her but she just continued, not answering his challenge.\n\nMelissa kept needling him, telling him how much his team sucked and how they were losers until he repeated his challenge.\n\n\"Put your money where your mouth is if you know so much or are you like Bethany, all talk and no action?\"\n\nMelissa's eyes narrowed, referencing her friend was a low blow, especially considering all the crazy adventures they had while Bethany was a borderline prude. \n\n\"Okay, if I win, you dust off your wallet and pay for me to have a shopping trip. I need some new clothes for any job interviews I'm going to be having. So you'll be like my sugar daddy.\"\n\nJack couldn't help but chuckle at that comment, \"It's a deal, but when I win, you will be serving drinks during next Sunday's game wearing the club uniform.\"\n\nMelissa responded, \"That's a no lose situation for me. It's a deal.\"\n\n\"Not so fast baby. I already made plans to watch the game with Fred and Max.\"\n\n\"You want me to wear that uniform in front of them?\"\n\nJack simply smiled as Melissa thought about it.\n\n\"I don't know about that Jack. Are you sure that is what you want the bet to be?\"\n\nI'm positive. I've been thinking about it for a while. God knows the guys would love to see your ass and tits in that outfit.\"\n\nMelissa knew he was right about Fred and Max but felt pretty good after looking at the score. \n\n\"Sure, it's a deal. I'm going to win anyway. You're going to cry when you see how much I charge to your card.\"\n\nThey sealed the deal by shaking hands and both sat back to watch the rest of the game. Melissa was a little nervous about possibly losing but also found the idea intriguing. Both guys had previously seen her in various states of dress or more accurately undress. She was well aware of how they looked at her, it was how they socialized and had fun with each other but this was different. Aside from knowing them it was not the same as being inside the club and unlike the one time they saw her naked when she came out of the shower this would not be an accident. \n\nJack was less worried than Melissa; in his mind he trusted his friends to keep their mouths shut and not say anything to their other friends. He was getting more excited as his team scored to make it a one point game, Melissa was wringing her hands and laughed nervously as they engaged in some friendly smack talk. The tension kept building and it had come down to a last second field goal attempt by Jack's team. Melissa did her best to jinx the kick, saying how he was going to blow it. Jack responded by telling her he was the best kicker in the league. Time seemed to be in super slow motion as the kick went up. It was going wide or at least looked like it was, Melissa cheered loudly but a last second gust of wind blew the ball through the uprights for the win. Jack jumped up from his seat and shouted. He was full out gloating to his wife. After a moment it sunk into their minds what the real consequences of the game now meant.\n\nJack told his wife, \"Why don't you go put on the uniform now, you know, maybe practice for next week.\"\n\nMelissa was a little pissed off that she lost the bet but was equally excited by the thought of showing off again. She put on the uniform for Jack and served a couple of drinks. The entire time, he was telling her how much the guys would love seeing her in her revealing outfit and not to worry because they wouldn't tell anyone. Melissa's disappointment subsided and she began to tease her husband even making some very suggestive comments.\n\n\"Do you think they'd like me to bend over like this so they could see my panties? How about like this so they can see my tits? I wouldn't want to embarrass them or make them feel uncomfortable.\"\n\n\"The only thing they will be uncomfortable with are the hard ons they'll have.\"\n\nThat led Melissa to respond, \"I don't want to fuck them Jack. I don't mind showing off but I don't want to have sex with people we know.\"\n\n\"That's fine dear. Showing off a little skin is more than enough.\"\n\nMelissa breathed a sigh of relief knowing they were on the same page and understood how far this could go. Of course this rehearsal led to some incredible sex and reminders from Jack what his buddies would be thinking of doing to her. Melissa countered with her own descriptions of what she thought they would want to do with her too which drove Jack over the edge.\n\nOn the day of the game, Fred and Max arrived right on time. When the doorbell rang, Jack looked to his wife who was standing there in the club's uniform, very nervous about what was going to happen. He motioned for Melissa to answer the door and greet his friends. Her heels clicked as she went down the hall and opened the door. \n\nBoth of the men stood silently in the doorway in total amazement and shock, their eyes fixated on their friend's wife's mostly exposed body. Her short ruffled skirt showed off her long, slender legs which were encased in fishnet stockings, her black heels made them appear even longer than they actually were. Melissa's cheeks flushed as there was an awkward silence but it was exciting, she caught their gaze move from her legs to her top which was unzipped halfway showing significant cleavage. Finally she invited them in and led the way to Jack, his friends gave him a wondering look. \n\n\"What's up with this Jack? Not that I'm complaining but damn! Melissa almost gave us a heart attack,\" Fred asked with a shake of his head.\n\nMax chimed in, \"You should have warned us buddy.\"\n\nJack laughed at his friend's surprised reaction, he understood what they were saying and told them, \"Well guys, Melissa made the horrible mistake of losing a bet to me and this was the payment. I thought it would be fun for us while teaching her a lesson. Now honey, go get us some beers and bring them into the living room.\"\n\nMelissa gave them all a smile and dutifully retrieved the beers bringing them to the guys. She leaned over in front of Fred first and then Max to pour them their drinks into frosted glasses. She could feel their eyes on her breasts as she played the part of their waitress. She took a deep breath as she bent over to pour Jack's beer knowing with how she was positioned they were getting a really good show. From their vantage point they could see her high cut, white sheer lace panties. The white satin fabric was contrasted by her black skirt which seemed to draw the men's attention to her ass. Jack noticed his friends openly staring at Melissa's bottom which filled him with pride, he was basking in their envy.\n\nA moment later all of the men were staring as Melissa left the room to get herself a drink, her short skirt swaying back and forth across her round ass with each step. Her heels gave her butt an extra shake and she made sure to enhance her wiggle just a little more, knowing she had captured their full attention.\n\nMax commented, \"Damn Jack, thank you for winning the bet. Be sure to include us in the winnings anytime. I'm not sure I can pay attention to the game.\"\n\nFred agreed. \"I know I won't be able to take my eyes off of her.\"\n\nJack jokingly responded, \"I'm sorry guys. I didn't want you to be distracted from the game. I know how much you wanted to watch it. I can tell Melissa to get dressed.\"\n\nBoth of the guys jokingly responded that they would suffer through the afternoon of distraction but they were only doing it for Jack and he owed them. They were all laughing but fell silent when Melissa returned and sat down in the chair opposite Fred and Max. Her short skirt could not hide her panties from their view, even when she crossed her legs. The men tried to watch the game but found it to be a very difficult task. Every time Melissa moved a muscle, she could feel all eyes turn towards her. It was thrilling for her to be showing herself off to Jack's friends in their own home. She crossed and uncrossed her legs often to see their reactions and was not disappointed. \n\nWhen not giving short peeks between her legs, she was continually getting up to get more beer and snacks for the men. Each time she would give them longer looks up her skirt or down her blouse as she served them, she noticed the formation of bulges which made her wet. On top of the beer they all did a couple of shots together, Melissa was quickly getting more than a little drunk and giggly. At the end of the first quarter she decided to unzip her top a little more to the appreciation of the guys, by the end of the half she had it undone almost all the way. The men were getting clear views of her entire breasts except for her nipples. Fred and Max would tell Jack how gorgeous she was and how he was a lucky son of a bitch to have such a sexy wife.\n\nDuring the second quarter the men barely gave Melissa a break; rather than have her get them all a drink at the same time they figured out they would get more peeks at her private parts if she served them individually. At first Melissa was a little annoyed but quickly caught onto their little game and decided to go with the flow, she even upped the ante a little by pulling her panties further up between her ass cheeks to show them even more of her sexy butt.\n\nJust before halftime, with everyone feeling no pain from the shots and beers, Max commented, \"You look really sexy in that outfit Melissa, I mean really sexy, but I think you'd look even better if you took it off.\"\n\nFred was shocked that his friend made that comment and looked at Jack for his reaction. He was sure that was going to be the end of the fun but instead of being pissed off Jack looked at his wife. Melissa was caught by surprise herself and turned to her husband. There was dead silence for a few moments, as if Jack and Melissa were trying to read each other's minds. Finally Jack gave her a very subtle nod of approval.\n\n\"Are you sure you could handle me taking it off? I wouldn't want to embarrass you guys,\" Melissa teased, feeling a huge wave of excitement similar to her first stage show. \n\nMax responded, \"I'm not sure but I'm willing to take the chance.\"\n\n\"Me too,\" said Fred. \"It's not like we haven't seen you naked before,\" a reference to the time she accidentally walked into the room naked while he and Max were there. \"Besides, we could use some halftime entertainment.\"\n\nThe tension hung in the air as all three men wondered where this would lead. Melissa was in control but they were encouraged that she hadn't rejected the idea. She stood in the center of the room in front of the television making sure all eyes were on her. She teased her private audience pretending to tug at the zipper, then she unzipped it and held it together with her hands. The room was silent as the men waited anxiously to see what she would do next. \n\nMelissa used this opportunity to negotiate with her husband, \"What's it worth do you Jack?\"\n\n\"What do you want dear?\"\n\n\"I want that shopping trip with your credit card.\"\n\nJack playfully stroked his chin, looking up towards the ceiling, pretending to be thinking about it while his friends pleaded with him, half in jest, to make the deal. \n\nWhen Melissa flashed her 34B tits to the men before quickly covering up again, Jack caved, \"It's a deal but you have to stay naked for the rest of the game.\"\n\nFred and Max let out a cheer while not believing their luck. They always lusted after Melissa whenever they were around her and made it a bit of a habit to check out her long blonde hair, blue eyes, pert breasts, trim figure, long legs with sexy muscle definition and of course her lovely round ass. While they had gotten a quick glimpse of her naked once before, they were now on the verge of seeing her again for an extended period of time. They were extremely excited at the opportunity to see her parade around nude for the rest of the afternoon. \n\nWithout saying a word, Melissa removed her top to reveal her breasts, her nipples hard from the excitement of showing off again, but this time, in front of a much smaller crowd. She walked over to the bar and poured herself a shot with the men's eyes fixated on her bouncing breasts. She quickly downed the shot before returning to the center of the room to finish her little strip tease. She turned her back to the men while slowly unzipping the back of her tiny, ruffled skirt. She began to tug at the sides, pulling it down over her hips exposing her sheer white, high cut panties. She let her skirt fall to the ground, stepped out of it and did a very slow turn to face the guys.",
        "She stood there in her sexy little panties. There was dead silence in the room as the men were entranced as she smiled and placed her thumbs inside the waistband then began to pull them off. When they were pulled down to just above her pussy, she turned her back to them again, bent over and pulled them down the rest of the way, exposing her ass and pussy to her husband's friends. She stepped out of her underwear and threw them at Max, hitting him right in the face which made everyone laugh and broke some of the tension in the room.\n\nMax took a deep whiff of his surprise gift, then held it up to Fred's face to tease him too. She did a pirouette for the guys, proudly showing off her nudity for them. Melissa was feeling just a touch of the excitement of being nude in front of an appreciative audience again, a much smaller one, but exhilarating nonetheless. She liked being the center of attention, prancing around naked knowing Fred and Max wanted to do much more to her than just look at her.\n\nSitting quietly, Jack was a very proud husband and reveling in the fact that his best friends wanted his life with his wife. His dick quickly hardened seeing Melissa flaunting her naked body. He knew his friends didn't understand how their buddy could allow his wife to wear a skimpy outfit in front of them, let alone take off all her clothes but he also knew they weren't going to question their good fortune. He chuckled to himself thinking about how they would react if they knew what she had done at the club.\n\nMelissa continued her serving duties after noticing the men had empty glasses. Their eyes watched every wiggle of her ass, noticing how the muscles of her cheeks alternately tightened with each step. She stopped halfway to the kitchen, looked over her shoulder to make sure they were checking her out, gave her ass a quick shake for them and continued on to the fridge. For the rest of the afternoon Melissa played the part of a nude waitress for Jack, Fred and Max. The football game had become secondary to her antics. She was making sure to give them good looks of her pussy lips by sitting on the edge of her chair with her legs parted. It gave her a feeling of control having them in an almost trance-like state staring at her body. \n\nAs the game neared completion the guys were not even trying to hide their erections. Melissa had made it clear that nudity was as far as she was going to go, no matter how much Fred and Max hinted about taking it further. When it did finish Melissa boldly told them the show was over too, signaling for Fred and Max it was time for them to depart. Reluctantly Fred and Max complied after finishing their beers and got up to leave. Melissa gave each guest a peck on the cheek and a little hug. She took the opportunity to rub her breasts up against them both just to give them a little bit extra thrill. Fred fought the urge he had to grope her but Max was much nervier grabbing a handful of her ass causing her to squeal before leaving.\n\nAs soon as the door was closed behind Jack's friends, Melissa told him, \"We need to go into the bedroom. I'm so horny, I need to get fucked.\"\n\nJack couldn't wait for his friends to leave and followed his wife into the bedroom where she helped him strip and sank to her knees to begin sucking his dick like a wild nymphomaniac. He told her how hot she looked being naked in front of his friends and how they both wanted to fuck her.\n\n\"You know they are going to go home and jerk off thinking of you, don't you?\"\n\n\"Yes I know. If they stayed any longer I may have let them fuck me too but I didn't want to do something we might regret.\"\n\nJack swallowed hard not realizing how hot his wife had gotten. He laid her down on the bed and began eating her wet pussy. In between licks, he kept telling her how his friends would love to be there tasting her, fondling her and doing all sorts of nasty things to her. It quickly drove her over the edge to a hip bucking, wild orgasm followed shortly afterwards by another. Melissa's face was red from being so horny and the power of her orgasms, Jack smiled at her as he climbed between her legs.\n\nBefore entering her, Jack told her, \"This one is for Fred and Max you cock tease.\"\n\n\"Yes dear, but I'm your little cocktease. Now quit talking and fuck me.\"\n\nMelissa felt her husband's dick slide easily into her and started to dance inside of her juicy cunt. The whole time he was fucking his wife, Jack repeatedly told her how sexy she was and how much his friends wanted her. She closed her eyes and fantasized about them each taking a turn on top of her until she felt Jack tense up. He shot a huge load of sperm into his wife. It was only the first load as they fucked again that night before finally going to sleep.\n\nOver the next week, Jack and Melissa talked about her exhibitionism several times and how much they both enjoyed her showing off. Melissa wanted to be discreet in the ways she exhibited herself, not really wanting episodes like being nude for Fred and Max to be a regular occurrence. They were both concerned that eventually someone in their circle of friends would reveal their secret kink and it would make things very awkward. So they planned to figure out how to fulfill Melissa's desire to show off her body and Jack's desire to be a willing voyeur safely and minimize the risk of being embarrassed with their friends.\n\nThat Saturday morning Jack approached Melissa with an idea, \"Seeing we don't have any plans for tonight, let's go out to dinner and a few drinks.\"\n\nMelissa readily concurred and replied, \"Yes, I'd like that. Where do you want to go?\"\n\nJack mentioned their favorite restaurant but added, \"Maybe we could stop up at Mike's club after dinner.\"\n\nJack swore he had no hidden motive but thought it would be nice to visit as customers rather than employees. Melissa of course was suspicious and rightly so, but agreed that it might be fun. That afternoon, she went out to get a manicure and pedicure, then to have her hair cut and styled. All on Jack's credit card which he didn't mind since they were venturing to the club. She also had a few packages with her which piqued his curiosity when she got home. Jack told her she looked stunning as he tried to see what she bought, but she swatted his hands away.\n\nThe outfit Melissa bought for their night out was a denim button down mini skirt, paired with a high neck, sleeveless, white crop top along with her white, open toed heels. She had a couple of buttons on the skirt undone to show off a generous amount of her long, lean legs which seemed even longer thanks to the heels. Her top was opaque showing off just a hint of her dark areola underneath but wasn't really obvious. Jack liked that she wasn't wearing a bra, he thought it was sexy how her breasts jiggled as she walked. He also loved the bare shoulder look in general and that she was showing a lot of bare skin without revealing too much. It was sexy not trashy.\n\nJack gave her a wolf whistle when he saw her, \"Damn you look sexy tonight baby.\"\n\n\"Thank you dear. I hoped you'd like it.\"\n\nAs they walked to the car, Jack noticed a confident strut in the way his wife moved with her long blonde hair blowing back against a warm, summer breeze. He knew this was going to be another fun night. Heads turned as they entered the restaurant which boosted Jack's ego. They enjoyed their casual meal and drinks together. Both of them had a nice buzz as they tried not to show each other how anxious they were to go to Mike's club and return to the scene of their craziest sexual adventures. Melissa excused herself to use the restroom and when she came back to the table Jack noticed a couple of more buttons were undone from the bottom of her skirt. He smiled at her seeing that even more of his sexy wife's thighs were exposed. She let him know it was time to go which caused an immediate stir in his pants, she clearly wanted to attract some attention at the strip club and was in a great mood.\n\nThe ride to the club was quick. When they walked inside they were immediately flooded by memories of those special evenings where Melissa stripped off her clothing and proudly displayed herself to all of the men. The place was packed, full of horny guys of varying ages and social status. Jack saw the heads turning to follow Melissa as they found some seats at the bar. It intrigued Jack that a woman with her clothes on seemed to draw the attention of the predominantly male crowd even though there were plenty of naked women around. He assumed they hoped that she was a dancer and would soon be stripping on stage. Sitting at the bar allowed Melissa to proudly show off her legs that were barely covered by the denim material now that she was perched on a bar stool.\n\nAs if he had been watching on his surveillance camera, Mike came down from his office as soon as Jack and Melissa sat down. He greeted them with a wide grin on his face. He hugged Melissa while giving her a friendly peck on the cheek, Jack waited and shook his friend's hand. Mike graciously told the bartender that all of their drinks were on the house as long as they were there. Melissa spotted a familiar face as Don came out of the backroom with one of the dancers. She knew what probably went on inside having been there before with the huge man. He greeted the couple too but didn't hang around he was busy managing the club.\n\nMike asked Melissa, \"So are you here to dance a couple of sets? You know, customers have been asking where you've been and I've been wondering myself.\"\n\n\"Sorry to disappoint you Mike but Jack and I are just her for a couple of drinks. My dancing career is over.\"\n\n\"Your fan club will be disappointed to hear that Lyssa,\" Mike replied calling her by her stage name.\n\nShe smiled at his reference to her and replied, \"Life is full of disappointments Mike. They'll get over it.\"\n\nMike chatted with them for a few more minutes before returning to work, he promised to come back later. Jack and Melissa relaxed and found themselves enjoying watching the action in the club without the pressure of her waitressing or performing. It was fun getting all the looks of admiration from the guys in the club. It was a huge turn on when a couple of them even came up and asked her for a lap dance. Melissa was truly flattered but informed them she was just a customer like them and enjoying the show. As Mike said he would, he came by every so often to talk and predictably he kept trying to get Melissa to go on stage. He told her the guys would absolutely love to think they saw a lady come in for a drink and end up stripping, but she kept telling him it was not going to happen.\n\nMelissa and Jack sat for a few minutes before she went to talk to a couple of her friends that she met while working at the club. It was fun for her to talk to the girls and even went outside to smoke a joint with them. Jack saw what was going on and felt his heart beat a little faster; he knew that pot always made his wife horny which could only mean he would benefit from it later. When she came in from outside and returned to Jack, she was clearly relaxed and in a great mood. She stood next to Jack at the bar swaying her hips to the music. He watched his wife knowing she was feeling no pain from the drinks and pot. Once again Mike appeared, Jack thought he must be continually watching her because he was ever the opportunist. He suggested that if she really wanted to dance, she should do it on stage and get paid for shaking her fine ass.\n\n\"I don't know Mike. I'll think about it,\" she replied, showing that the walls of resistance were coming down.\n\nJack sensing her inhibitions disappearing jumped at the opportunity and encouraged her to have fun. The guys shared a look seeing she was seriously contemplating it, but she still seemed a little reluctant. Mike grinned at Jack before walking away to speak with the DJ, Melissa and Jack watched the short conversation which ended with the DJ nodding. The dancer on stage, who had been one of Melissa's friends at the club, finished her set.\n\nAs she collected her tips from the floor the DJ announced to the crowd, \"Hey guys, I'm sure you've all noticed the gorgeous blonde lady at the bar with the finest legs in town. Well, I think if we gave her a little encouragement, we might get her up here on stage. What do you say gentlemen, let's give a big round of applause for Lyssa.\"\n\nMelissa felt all the attention in the room shift to her, she was more than a little embarrassed by being singled out and gave Mike a playful but dirty look. Jack thought it was a brilliant display of manipulation by pressuring his wife into it. She was smiling and blushing as the crowd cheered and called for her to dance. But Melissa still resisted and tried to wave them off.\n\nThe DJ pressed further, \"Come on guys, you have to do better than that if you want to see Lyssa get naked for us.\"\n\nThe roomful of drunken men began to scream, shout, whistle and cheer so loud the sound was deafening. Now it was Don pressuring her as he went over to offer his big hand to escort her onto the stage. She couldn't fight the urge anymore, after a short pause she looked at Jack who was grinning from ear to ear and that was permission enough. She placed her hand in Don's and followed him to the stage driving the men wild. The DJ knew what songs she liked and promptly queued them up once she stood center stage. The music started and she began strutting around the perimeter of the stage. Her heart was beating hard in her chest as she surveyed the crowd; there must have been over a hundred pairs of eyes on her as she began to dance, moving her hips and body to the beat of the music. It was an incredible feeling having all of the sexual admiration from the men, she saw her husband proudly watching from the bar and knew he was getting hard from the show. She had a soft chuckle realizing he probably had the idea in his mind all along. \n\nMelissa decided to have her fun lifting her blouse and flashing her tits for the crowd which got another loud cheer, then she toyed with them after they were shouting for her to take it off. As the first song was nearing an end she quit teasing them and pulled her blouse over her head, exposing her bare, 34b tits. She began to bend and squat to give the crowd a view of her thong and ass cheeks and playing with the buttons of her skirt, undoing one at a time until there was only a single one left but not hiding much. The men went wild again as she unbuttoned the last one and let her skirt fall to the floor. She paraded around the stage, collecting tips and showing herself off, reveling in the unbridled passion the men were showing her. She was basking in their admiration, knowing she was the object of their sexual desires. What made her wet was understanding that each of them wanted to fuck her and Jack would actually let them if she wanted. She also knew the more they desired her, the more he desired her too. \n\nShortly into the beginning of the last song, Melissa stripped off her thong and pranced around completely naked on stage, except for her heels of course. Jack thought his wife never looked better as she exposed her long legs, bare pussy, ass and tits for the entire crowd, she had a look of pure bliss on her face as she gave everyone what they wanted. She especially loved looking into the faces of the men nearest the stage when she got down on the floor and spread her legs wide, she turned her body slowly so everyone could have a good view of her pussy. She grinned wickedly as she used her fingers to spread her lips. Satisfied they had a good enough look of her like that she turned over onto all fours presenting her ass, all the while taking more and more tips. When the third song ended she felt just as disappointed as the crowd. After gathering the remaining money thrown onto the stage, she exited and went back to the dressing room.\n\nWhen she was fully dressed, she joined Jack and Mike back at the bar for a drink. She smiled at the pair of men as she took a spot between them. Mike went straight to encouraging her to work for him at some private parties and to be a regular dancer at the club. Melissa assured him it wasn't going to happen and this was a one off, it was fun and she might come back on a random night but it wasn't going to be a regular thing and definitely not working parties. Disappointed but not giving up Mike was able to convince Melissa to do another set that night and for extra kicks she even gave a couple of lap dances at the encouragement of Jack, who watched on the surveillance camera in Mike's office. He loved watching his wife draped over a stranger's body, letting him look, touch and grope her all over except for her pussy. Jack never tired of seeing his wife cock teasing men in this manner. Melissa was amazing at giving the men private dances and leading them on, she even aroused one so much he had an orgasm in his pants while she was grinding her ass against his crotch.\n\nAfter her final lap dance Melissa joined Mike and Jack in his office. As expected Mike tried again to lure her back but again was unsuccessful, her heart wasn't into becoming a full time dancer. She went to sit down next to her husband but Mike beckoned for her to go over to him. Jack noticed the other man's weird control over Melissa as she went to him without question. \n\nMike told her, \"I can't thank you enough for coming out here tonight Lyssa. That was quite some show you put on out there tonight. The men will be talking about it for a long time, telling their friends how a woman came out of the crowd to dance on stage. Word of mouth is everything in this business. Thank you.\"\n\n\"You're welcome Mike. I had fun too but before you go any further, I don't want to do this on a regular basis.\"\n\n\"I know Lyssa. I get it.\" \n\nMike reached out brushing her blonde hair away from her face, he gently tucked it behind her ear. Jack was surprised as Mike placed his hand behind her neck and leaned in to kiss her. He was watching as the other man seduced his wife and manipulated her. What he found most interesting was how he kept calling her by her stage name.\n\n\"You're a beautiful woman Lyssa, with a nice body.\"\n\nMike was emboldened and felt her tits through her blouse, when she didn't stop him, he lifted it to expose them. Without any hesitation he leaned down to suck on her already hard nipples. Melissa felt the urge to stop him but there was just something about him that left her helpless so she let him continue. Everything he was doing and saying was making her hotter and hornier, it was clear where this was going and Jack understood too as he sat back in the seat getting comfortable. He stared into Melissa's eyes as he undid her skirt one button at a time as Mike stared directly into her eye. Again, she showed no sign of stopping him and the skirt fell to the floor while he touched her between her legs. \n\n\"Wow Lyssa, you must have really enjoyed yourself out there tonight. Your panties are soaking wet.\"\n\nHis fingers pressed against her pussy through her panties and he rubbed, the satin material was getting increasingly damp. Melissa tried not to show how pleasurable it was but she couldn't control the muffled moans escaping from her mouth. She was sounding like a purring cat. Mike knew he had her and could do what he wanted. Without warning he ripped off her thong leaving her stark naked. Jack sat up a little more at the abrupt way he tore his wife's panties away but remained silent, his silence was a tacit approval for Mike to continue his seduction of his wife. Melissa's body tensed as Mike's finger began to probe her hot pussy while his thumb stroked her clit. His other hand went back to fondling her breasts. She looked to be completely subservient to him as he worked her pussy and clit faster. Melissa moaned louder as she got close to cumming, but then Mike stopped his manual manipulations and told her to get on her knees. Jack watched in awe as his wife obediently complied with his direction.",
        "\"Do you know what you are about to do?\"\n\nMelissa nodded and said, \"Yes sir.\"\n\n\"Tell me what you are going to do Lyssa. Tell Jack what you are going to do.\"\n\n\"I'm going to suck your dick Mike,\" Melissa said as she looked up at him with her soft blue eyes.\n\nHe smiled as Melissa unbuttoned, then unzipped his pants, she pulled them down along with his underwear releasing his semi-hard dick. She took a hold of it and slowly stroked him while looking over at Jack. His reaction was nothing short of lustful. Melissa knew she could do whatever she wanted for Mike and Jack was not going to interfere. She began to lick Mike's balls while continuing to pump his shaft. Mike placed his fingers into her blonde hair keeping control over her. She licked the length of his cock like it was a dripping ice cream cone, she worked her way up to the head where she dragged her tongue underneath the ridge of the head. Mike was moaning softly as Melissa swirled her tongue all around it, giving the tip butterfly flicks before opening her mouth and taking his cock deep into her throat. She felt his grip tighten in her hair and started to bob servicing him like all the other sluts in the club.\n\nMike groaned appreciating her talent, he looked at Jack and told him, \"Damn buddy, your wife sucks a mean dick.\"\n\nHe let her suck his dick for a few minutes before pulling her by the hair, he spun her around and made her bend over his desk. Melissa was very familiar with this position having been fucked like this before by Mike while Jack watched. He approached from behind and teased her opening by rubbing the head of his cock up and down her slit. Melissa moaned freely, her breathing got shorter and faster the more he teased her with his eight inch cock.\n\n\"What do you want me to do now Lyssa?\" Mike asked.\n\n\"I want you to fuck me with your big cock Mike,\" she replied.\n\n\"Tell your husband what you want me to do.\"\n\n\"Jack, I want Mike to fuck me hard. I need his big dick inside me.\"\n\nJack sat silently with a smile and intensity in his eyes watching his wife's servitude of Mike, never once objecting but enjoying every moment. Mike turned her head so she was looking directly at Jack. He then thrust himself deep into her pussy and began to fuck her. He began fucking her faster and faster as she writhed on the desktop, clutching the edges as she allowed Mike to ravage her pussy. Her husband witnessed the look of pure pleasure on her face as her eyes rolled into the back of her head while she lightly bit her lower lip, her hot pussy was being penetrated roughly. He was fucking her hard enough that their skin was slapping together loudly and Jack could hear the sounds of her juicy cunt.\n\nMike grabbed a handful of Melissa's hair, pulling on it forcing her head up and said, \"Listen baby, I need you to do me a favor and work a party for me. What do you say Lyssa?\"\n\nShe grunted out her reply, \"No Mike. I can't do that.\"\n\n\"That isn't the answer I want to hear Lyssa. He's a very powerful man and I need your help.\"\n\nHe smacked her ass sharply and pounded her pussy even harder. He tugged on her hair again, treating her like the whore she really wanted to be.\n\n\"You want to do it, don't you Lyssa? Just admit it. Tell me the fuck'n truth.\"\n\n\"Yes Mike. I'll do it. I want to do it,\" she screamed just before she started to come to a violent orgasm.\n\nMike had a smug look of satisfaction on his face, having broken her. He looked over at Jack and said, \"I tell you buddy, the pussy is so much better when they get turned on from stripping. Your wife has the hottest pussy I've had in a long time.\"\n\nAfter Melissa's orgasm, Mike made her get down on her knees again to suck his dick. It was his way of making sure his girls knew who was in charge. When he was on the verge of cumming he began rocking his hips. Melissa struggled with his eight inches as he fucked her face until he blasted his load into her mouth and then made her lick him clean. \n\nWhen Mike was done, he looked at Jack and said, \"It's your turn buddy. Thanks for sharing some of the best pussy I've ever had. She gives great head too.\"\n\nJack couldn't refuse, his cock was ready to burst through the front of his pants. He quickly got his cock free and fed it to his wife. She hungrily took it between her soft lips, her head bobbed furiously on it as Mike looked on.\n\nJack told his naked wife, \"That's it baby, suck my dick like you did for Mike. I know you like being a little whore for us. That's it baby, suck it like the cock sucking whore you've become.\"\n\nMelissa couldn't believe what she was hearing but it only made her want to suck more dick. Jack wanted to fuck her pussy too, he stopped his wife's incredible blow job and made her lay back on the desk. She spread her legs, waiting for her husband's dick. Jack approached her and ran his dick up and down along her lips like Mike did, making her beg for it, calling her by her stage name too.\n\n\"Go ahead Lyssa, beg for my dick like you did for Mike, you fucking slut.\"\n\n\"Oh fuck me Jack, I need to get fucked. I'm so hot, I need it badly. Please, please fuck me.\"\n\nSatisfied with her pleas, Jack plunged his dick deep into his wife's pussy. Mike sat in one of the seats and watched the action, happy with the outcome. Jack and Melissa kept their eyes focused on each other, they shared the passion of the night. Jack kept calling her a \"whore\" and a \"slut,\" but it didn't bother her at all, she enjoyed being called dirty names and it drove her to another raging orgasm. Jack couldn't hold back much longer and moments later filled her pussy with his sperm.\n\nIt took a few minutes for Melissa to recover from her double fucking Once her senses were calmed, she got dressed with Mike, of course, reminding her that she promised to work the party for him and it was going to be the following Saturday. He also told her it would be on the customer's yacht and to invest in a really nice bikini to wear. The last comment was for her to not wear her wedding ring, they didn't want any complications. She understood what he was saying and agreed. Mike excused himself and they left the club for the night. The drive was oddly quiet, Melissa was deep in thought about the party while Jack was shocked how well the night went. \n\nHe had a secret and that was the whole evening had been planned with Mike beforehand. Jack was hoping to coax his wife into dancing again and desperately wanted her to agree to do a party for Mike. He had hoped that once she got to the club she wouldn't be able to control her desires to be the object of men's sexual fantasies. He knew Mike would want to fuck her again and she would want to be fucked; it played out almost exactly as he had hoped. The one thing he didn't count on was Mike telling him he couldn't watch her on the yacht because there was no way to get him on board so she would have to go it alone and then tell him about it afterwards.\n\nWhen they got home that night, Melissa still wasn't sexually satisfied and needed Jack to screw her again which he was more than willing to do. Afterwards, he told her how wonderful the party would be and not to worry, just to enjoy the sex and be ready to tell him all about it. Melissa confessed to her desire to jump on the stage as soon as they went inside the club. She also confirmed to Jack that Mike had some strange dominant control over her when she was horny. He laughed and said he noticed it too. Everything was good as they closed their eyes and fell asleep in each other's arms.\n\nAt breakfast, Jack asked if she was really prepared to do the private party and Melissa told him she thinks it might be fun, plus, she gave her word to Mike. She asked if he was still okay with it and he assured her he was. Melissa mentioned that she'd need a new bikini of course, which meant a shopping trip during the week making her husband laugh knowing she was going to be hitting their credit card.\n\n\"Just remember the sexier the better,\" he commented.\n\nIt was Wednesday afternoon when Melissa went to the mall to find her bikini, it was quiet, which she liked and a bit of a break from looking for a job. She was growing frustrated with giving her resume out and figured she could also pick up another outfit for any potential interviews. There was a trendy store she was particularly interested in going to that catered to a younger crowd. She had heard some of the other dancers talking about it and figured it would be a good place to find a new bikini for the party. She looked around inside, it was mostly a store for women but had some men's swimwear too. There was only one other person, a man, in the store when she got there. She noticed he was tall, good looking, in his late 20's, browsing but she didn't pay too much attention to him. Slowly she went through the various racks of suits but couldn't make up her mind and was beginning to feel anxious. They had all sorts of choices from mild to wild and everything in between and didn't know how revealing of a suit she should buy.\n\nShe was lost in concentration as she went through her options when a voice spoke from behind her, \"Is your name Lyssa?\"\n\nIt took a moment, she didn't catch on but then it hit her, sending a wave of panic through her body. The young man in the store recognized her from the club. She took a deep breath before turning around to respond because she did not know what to say or do. He was standing there smiling at her as if he was meeting a celebrity.\n\nThe man then said, \"Oh my God, it is you. I swore I'd never forget you.\"\n\nMelissa gave him a frightened look and told him, \"Please be discreet.\"\n\n\"Oh, oh, I'm sorry. It's nice to see you again.\" He then whispered, \"You probably don't remember me but I saw you at the club and uh, you, uh took me into the VIP room.\"\n\nHer heart sank. She actually did remember him because he was so cute. He was one of the guys she blew in the VIP room. There was a flood of memories as she recalled how he looked, how she felt at the time, what she did for him and how his cum tasted.\n\n\"You do look familiar,\" she said with a shy smile.\n\nHe whispered again, \"You were fantastic that night. The best I've ever had.\"\n\nMelissa now went from being nervous to being flattered and a bit turned on. They made some small talk as he fawned over her and she mentioned that she was trying to pick out a bikini for a party. He was fascinated that she would be working a party. She explained she was having trouble deciding and the young man, who introduced himself as Mark, offered to help. While she was hesitant at first, it sounded like an intriguing idea, especially for an admiring fan. He had already seen her completely nude and had received one of her signature blow jobs so this was mild in comparison, so she agreed. She went ahead and picked out three bikinis to try on to get Mark's opinion. \n\nThe first bikini was a regular suit and most conservative. It covered her entire butt and showed very little cleavage. Melissa knew this wouldn't be the one but wanted to tease her fan before revealing too much of herself. The dressing rooms had a semi-private area where a customer could get a second opinion from a spouse or friend which is where Mark was waiting. When she came out to get his opinion, his eyes scanned her half naked body from top to bottom. She knew he was recalling seeing her fully naked body before at the club so let him have his moment. He told her it was nice but wanted to see the others. Melissa laughed to herself as she turned back to the change room. As she changed out of the first bikini she saw that her nipples were hard and there was no denying what was starting to happen between her legs. There was a building fire for sure.\n\nThe second bikini showed more cleavage and was cut higher in the back so her ass cheeks hung out. She was confident that this would be more along the lines of what Mark liked. His eyes lit up when she came out and twisted and turned in front of him. He stared intently getting more aroused as she looked at herself in the three mirrors which showed her every angle. She could see his reflection and he was watching her every move, she offered him a smile every now and then as she adjusted her top several times before going back to the dressing room to try on the last one. \n\nMelissa felt a little more adventurous as she left the curtain partially open so Mark could watch her undress as she put on the third bikini. He immediately noticed he could see her naked body in the reflection of the mirror and wondered if she did it on purpose, not that it mattered. He was getting an unexpected treat on his weekday trip to the mall. He felt his pants tighten in the front as his eyes scanned Melissa's naked body. He was reminded of her striptease at the club and how comfortable she was being naked in front of a crowd of admiring men. What he remembered most was she had rejected several men who wanted to take her into the VIP room that night but not him; he was so excited that she accepted his request.\n\nMelissa finally came out in the last bikini, Mark's mouth literally hung open. It had tiny electric blue in color with triangles of cloth that only covered her nipples and a sliver of material in front that barely contained her pussy lips. In the back there was nothing more than a thin string between her ass cheeks. The top tied around her neck and the bottoms also tied together on the sides. Mark could see her from all angles thanks to the mirrors and thought she was hot.\n\nAll Mark could mutter was, \"Wow,\" as he stared at her.\n\nMelissa asked, \"It's not too revealing is it?\"\n\n\"Not for a private party where you'll be stripping anyway,\" he replied. \"You look stunning.\"\n\n\"Thank you Mark. I can tell you like it,\" she replied, making a reference to his obvious erection.\n\n\"You're making it difficult to go back to work. I'll never be able to concentrate now.\"\n\nAfter a short pause she replied, \"Well, maybe I can help you out.\"\n\nMark was confused by her remark. He wondered if she meant what he hoped or was there a different meaning. Melissa was feeling very horny after being this young man's personal model. She also realized she had given him a lapdance and blowjob before so there was no need to be modest now. She gave him a seductive look and motioned for him to follow her into the dressing room. He hesitated for only a split second, not believing his good fortune. He had a nervous energy as he followed Melissa into the dressing room; it was the opportunity for sex but also there was also the fear of getting caught. \n\nOne thing he knew for sure was there would be no forgiving himself if he ever passed up this type of opportunity. He quickly closed the curtain behind him. Melissa smiled at him as she looked up into his big brown eyes. She asked him for assistance in untying her top. He did as she asked, freeing her breasts, then she repeated her request for help untying her bottoms. Mark had the bikini undone and off in a flash, making her giggle. She stood in the dressing room completely naked in front of him. She had him sit on the bench just like at the club.\n\nMelissa got close to him, rubbing up against him like she was giving him a lap dance without the music. His hands immediately began to roam over her naked skin as she offered her hard nipples to his lips. She moaned softly as he sucked on them while his finger found her pussy. She never let anyone play with her pussy in the club, it was against the house rules but there were no rules in the dressing room of the shop. He found her pussy damp while he finger fucked her. Melissa moaned in his ear as he quickly added a second finger. She reached down and unbuckled Marks' belt, undid his pants and reached inside. She freed his cock and stroked him while he continued his fingering of her pussy. She wanted to sit on his cock and have him inside her but knew that was going too far. She did lower herself down and teased the head at her opening. Mark groaned as he bucked his hips upward trying to push in. Melissa's body tensed as she had an orgasm from all the fingering and teasing. \n\nWhen she caught her breath, Melissa got down on her knees and pulled Mark's pants down to the floor. She let her blonde hair trace over his naked thighs while he felt her hot breath inches from his dick. She knew she had to get this over quickly before they got caught so she took his entire dick into her throat and began to blow him. Her tongue swirled over the head and shaft as she sucked him deep. Her lips gave his shaft the perfect amount of pressure and his dick moved smoothly between them. She loved the taste and feel of this man's cock in her mouth. \n\nMark was getting close to cumming and placed his hands on the back of Melissa's head. She enjoyed the feeling of him taking control as he started to pump his dick in and out of her mouth in rhythm to her bobbing head. He was grunting and roughly fucking her mouth when he lunged and filled her mouth with his sperm, it was a huge load and some leaked out of the sides of her lips. She swallowed all she could and then licked him clean; she made sure his balls were drained. She gave him a look from between his knees, cum still on her lips and her bright blue eyes sparkling. She licked her lips making him smile as he zipped up quickly. Mark told her he had to get back to work but not before giving her his card which had his cell number on it. He told her to let him know when she'd be dancing at the club again or if she was willing to do a private party for him and his friends. \n\nAfter gathering her composure in the dressing room and changing into her street clothes, Melissa decided to purchase two of the bikinis leaving the conservative one behind. She walked up to the counter to pay for them and was embarrassed when the female clerk gave her a knowing grin. She kept grinning the entire time while cashing her out causing Melissa to blush a bit. The clerk cleared her throat and motioned to Melissa that she had something on her chin as she put the receipt in the bag. Melissa blushed even more but politely thanked her, wiped the remnants of Mark's cum from her face, then quickly exited the store. When she was safely outside and alone, she burst out laughing at getting caught blowing the guy in the dressing room and then leaving cum on her face. So much for being discreet she thought to herself. She only hoped Jack would understand because she had to tell him.\n\nLater that evening, after dinner, Melissa confessed to her whorish actions that afternoon. She was apologetic, almost in tears, telling Jack she didn't know what came over her. As she expected, he not only was okay with what she had done but he was turned on by it. As proof, he took her into the bedroom where he made her tell him every little detail of her afternoon adventure. Jack insisted she give him a blow job too, telling her to pretend it was Mark she was sucking.\n\nHe told his wife, \"Damn, Lyssa, you're such a cumslut but I love you for it. I can't wait for this weekend.\"\n\nIt only took a couple of minutes of Melissa's sucking to make Jack blast a load into her mouth and like a good slut she swallowed it all, just like she had earlier that afternoon with Mark. Unlike the afternoon though Jack reciprocated by eating his wife's hot pussy until she had a couple of orgasms herself. By that time, he was hard again and took the opportunity to give her pussy a good fucking, it was clear now that both of them could hardly wait for Saturday. She wanted to show off again and play the part of a whore to which her husband replied that she wasn't playing a part of a whore, that she was one. Melissa smiled at him and wagged her finger playfully but she was starting to wonder if he was right.\n\nAs the weekend approached, Melissa was getting more excited, nervous and even a little scared. Being on a yacht in the middle of the ocean was completely different than being in the club. She wouldn't be able to leave if she wasn't comfortable and didn't quite know what to expect. That Friday evening, Mike called and told her a car would be sent for her about 2 PM. He also explained to her that the customer was closing a business deal on his yacht and she would be joining them afterwards as part of a celebration. He assured her several times the client was a long time customer and her safety wouldn't be compromised so there was nothing for her to worry about. ",
        "Mike told her the customer wanted one woman, the best Mike had. They had several women on previous occasions and it didn't work out. Some were better than others and sometimes there was jealousy among the girls, so the customer didn't want any drama. He told her to wear a sexy bikini and to bring a change of clothes for when it gets cooler towards the sunset. He expected the party to be over around 8 PM but it may run a little long if they were still partying. She was sure it was going to be a long and tiring day but decided not to worry about it. \n\nThe next morning, Melissa was nervously getting ready, making sure to bring her makeup case, along with the items she would need to take care of her hair during the day and some personal items. Packing wouldn't be complete without taking along several pairs of shoes to change into, not to mention a couple of dresses and sweaters. Jack had to keep reminding her that she was only going to be gone for the day, not a weekend trip. He even stopped her from nervously running around the house to give her a reassuring hug and kiss that everything was fine and he was okay with whatever happened on the yacht. She appreciated the support and loved the fact he wanted her to enjoy herself and experience as much pleasure as possible.\n\nA black SUV arrived promptly at 2 PM; Melissa gave Jack a kiss and hugged her goodbye. He watched from the door as she quickly got into the car, not wanting to attract more attention than necessary from the neighbors. There was plenty of liquor in the SUV and there was a note telling her to help herself, so Melissa poured herself some wine to help calm her nerves. Her job was to be sexy, dance and to service the men. Melissa simplified her role to being a paid escort which gave her a little wave of excitement. \n\nThis was taking her exhibitionism to another level but she had already given guys handjobs and blowjobs in the VIP room, she had also let Don and Mike fuck her so it wasn't like she hadn't gone down this road before. Mike had explained beforehand that he wanted her to be comfortable with the customer's requests but stressed that the more accommodating she was, the more money she would make and that was the bottom line. He emphasized that each of the men were worth millions, if not more, and were very, very generous to beautiful, friendly women. \n\nThe ride went faster than she thought and much to her surprise Mike was there at the dock. He smiled as he took her by the hand to escort her onto the yacht, he spoke quietly telling Melissa he was there to make the introductions but would be leaving before the boat set sail. He complimented her on how gorgeous she looked in her sassy off the shoulder, blue and white print mini sundress with simple white sandals. Melissa felt his hand slip down to caress and squeeze her ass as they boarded the ship. Mike introduced her to Sam, the owner of the yacht and a good customer of his. He looked like he was in his mid 50's, salt and pepper hair, in decent shape, not quite six feet tall. Mike handed a young crew member Lyssa's bags as Sam greeted her with a soft hug and kiss on the cheek. She thought he was handsome.\n\nSam told Mike, \"Wow, Lyssa is absolutely stunning Mike. You've outdone yourself this time buddy.\" \n\nHe then looked at Lyssa and said, \"Thank you for joining us this evening sweetheart. I think you'll have a good time yourself and don't worry, we are all perfect gentlemen.\"\n\nSam seemed like a nice man and made her relax with his compliments as she replied, \"Thank you Sam. I hope we all have a good time too.\"\n\nMike had been honest with Sam explaining that Lyssa didn't have a lot of experience but Sam immediately found her initial nervousness to be a real turn on. The men shook hands and Mike left the boat. Sam took over and guided her to the back of the boat where there were three other men sitting around drinking near a covered outdoor bar. The conversation quickly went quiet when they saw Lyssa, their eyes scanning her tall body. They greeted her by standing up with big smiles on their faces, obviously pleased with their entertainment for the day.\n\nSam introduced the men as Jerry, his best customer, who looked a little older than their host, maybe in his late 50's or early 60's with mostly gray hair and more than a few pounds overweight. Next was Al, Sam's Executive Vice President who was a very handsome man in his early 40's,standing well over 6 feet tall, muscular and looked like a former athlete. Lastly, there was Jeff, Jerry's legal counsel who was average in every way. He was about 5' 10\", average weight and looks with blonde hair. Lyssa was offered a drink that she gratefully accepted.\n\nMelissa was shown around the yacht just as it was leaving the dock for the rest of the day. There was a captain, crew of three, a bartender and chef. The crew doubled as waiters once they were on the water. The deck they were on had an indoor seating lounge with stairs that led down to four bedrooms, each with its own bathroom. They then went upstairs to another outdoor seating area with a bar and a hot tub. Sam bragged that it was over 100 feet long and cost him several million dollars. He was obviously trying to impress her with his wealth and in a way was succeeding even though money wasn't that important to her. Melissa noticed as the more time she was spending with him the more he touched her, first her arms, then her shoulders, now they were walking with his arm around her waist. \n\nSam led her back to the deck to join the others. By the time they returned, Melissa was ready for another drink. He told her there were marijuana laced brownies and cocaine readily available for her use if she wished. She was definitely interested in the brownies. What she did enjoy was the men were treating her like a regular guest, making small talk and taking time to compliment her on her beauty. She knew they were all sizing her up and thinking about fucking her as they were gazing at her gorgeous face, checking out her breasts and long legs as they chatted but she was pleased that they were not pushy and were being respectful.\n\nMelissa took the liberty of tasting one of the brownies as she sipped her next drink. She let out a little moan savoring the flavor which got a good laugh from the men. \n\n\"What is it with women and sweets?\" Al asked in response to hearing her.\n\nFeeling sufficiently relaxed, Melissa told Sam she was warm and wanted to change into her bathing suit. Sam grinned, he was impressed that she suggested changing and didn't need any encouragement. He took her by the hand to guide her to the bedroom below where she found her belongings. She closed the door so she could change in private, it was more about needing some time alone to gather up the courage to get into her bikini and rejoin the party because she knew that once she walked outside there was no turning back. Actually, they were out in the middle of the ocean so she couldn't back out if she wanted to. That thought seemed to give her peace of mind since there were no options she just had to roll with it. \n\nAs she removed her clothing, Melissa checked out her naked body in the mirror thinking, \"Not bad for a married woman in her early 30's. I still have it and I have four men waiting for me to entertain them.\" \n\nShe continued to look at herself in the mirror from various angles before deciding to wear the tiniest bikini she brought, the last one she showed off for Mark before she blew him in the dressing room. There wasn't much to it, she posed in the mirror and for a moment almost lost her courage. The buzz from the alcohol and pot laced brownies were just enough to convince her to leave it on. Everyone knew why she was there so there was no use pretending to be modest now. She slipped on a pair of white heels to make her look taller and her legs even longer. She stood at the door with her eyes closed breathing deeply, collecting herself before reaching for the door and climbing the stairs.\n\nWhen Melissa appeared in front of the men, she casually walked up to the bar to order another drink, she didn't pay them any attention other than a little smile leaving them to openly gawk at her and watching her every move in unison. They were extremely impressed with what they were seeing as they stared at her in the electric blue bikini that barely covered her nipples, leaving most of her pert breasts uncovered. The only material around her waist and ass was a string that held up a sliver of material that, for now, concealed her pussy lips but nothing else.\n\nJerry looked at Sam and said, \"It looks like you've lined up some first class entertainment for us today Sammy.\"\n\nHis comments were echoed by the others as Melissa turned and sashayed towards them, her breasts jiggling as she walked. Her nervousness was gone, hidden by the drugs and alcohol. She saw the way they were looking at her, almost drooling at the sight of her body, and that made her juices start to flow. Even the bartender was staring lustfully at her. \n\nLyssa walked into the middle of where the men were sitting and did a slow turn, playfully asking them, \"Do you think my suit is too revealing? If you want, I can go change into something more conservative.\"\n\nAl responded, \"I think your bikini is fine Lyssa. As a matter of fact, I think it's too conservative.\"\n\nThat brought a little laughter out of the guys and helped break some of the initial tension. Melissa thought it was funny whether it was a group of rich millionaires or a group of average guys watching a football game, men acted the same way when there was a hot woman around and sounded the same too.\n\nThere were only four chairs where the guys were sitting and Lyssa asked, \"Isn't someone going to offer me a seat?\"\n\nJerry immediately tapped his lap and replied, \"You can sit right here honey.\"\n\nShe took him up on his offer, sitting on Jerry's lap, he put his arm around her waist and stroked her long, bare leg as the men continued their conversation while keeping a watchful eye on her. Al, Jeff and Sam were getting on Jerry about taking up all of Lyssa's attention so she took turns sitting on each of the laps while they stroked her legs or ass. She found it odd that they didn't try to explore her body more but there was also plenty of time for the action to heat up. She was enjoying the friendliness of it all and seeing how the men interacted was interesting.\n\nMeanwhile, back at home Jack was anxiously waiting for time to pass. He could only imagine what would be happening on the yacht as his wife was the entertainment for a group of men. He was also nervous because he couldn't be there to protect her from possible mistreatment but also trusted that Mike wouldn't put her in a position like that. He tried to distract himself by doing some chores around the house and watching TV but he still couldn't help but wonder what his wife was doing at each particular moment. Mike had basically transformed her from a cocktail waitress, to a stripper who gave occasional hand jobs and blow jobs in the back rooms of the club to being a high priced escort. That didn't bother him so much as not being there to witness her in action and that made him a little jealous but there was nothing he could do about it, he just had to wait for his wife to come home and then tell him all about it.\n\nMelissa made the rounds sitting on the lap of each of the guests, she would slowly lower herself then grind her ass a little as she got comfortable. By the time she had taken a turn on each person there were four very hard cocks and one wet pussy. Sam asked her if they could see her dance routine. Apparently Mike had told him about it and how much of a reaction she got from the crowd in the club. She was feeling very frisky, added with being the only woman on board and having all the attention focused upon her, the touching and being paid well; she was game to do a striptease for them. Sam had a voice activated sound system so Melissa easily added a few songs onto the playlist, refreshed her drink and started to dance for her small audience.\n\nRight from the beginning of her swaying her hips, she had them captivated. She turned around giving them a view of her ass, then backed it up giving an even closer look. She was dancing so close to them, it was like she was giving four men a lap dance so that's how she approached it. She bent over to stick her ass up high letting them feel and grab her as she danced. She took off her top just before the first song ended much to the pleasure of the men. \n\nMelissa danced in front of them for a quick minute then moved from guy to guy letting them fondle and suck her nipples as things began to heat up quickly. She was grinding her ass against them as they spread their legs for her. She could feel their hard members and knew it wouldn't be long before she would have to start satisfying each and every one of them. Sam untied her bottoms before the third song started, leaving her completely nude except for the heels, she again moved from one man to the next. This time though they were much more free with what they did, she was fingered, had her tits sucked, her legs and ass fondled. She was in heaven as four men were getting increasingly horny and desiring her more and more. \n\nAs each second passed she was getting hotter, almost to the point of desperation. She stood in front of them showing them her bare pussy, Jerry got up and kissed her while slipping his hand between her legs and slowly fingering her. Al and Jeff moved in as well, each of them sucking on a breast. Melissa moaned with pleasure as the three of them stimulated her body. She forgot about Sam, but he had stripped off his own clothes before coming up from behind her. She giggled feeling his hard on push against her ass, it would not be long before the others were naked too. \n\nAll of a sudden things started to happen very fast. Melissa had been positioned down on her knees in the middle of all four men and was staring at four erections inches from her face. They were mostly average sized dicks of varying widths but Jerry was pretty well hung, maybe 7.5 to 8 inches long. Her heart pounded in her chest as she took turns with each of them stroking them, it was overwhelming how they were all unique, whether it was their length or girth or even hardness. She put her mouth around each one starting with Sam, she sucked each man for a few moments before moving on. \n\nIt was such a crazy moment for Melissa as she lost track of who she was sucking because her focus was solely on the cock in front of her face. She could only imagine how hard Jack would be if he could see her sucking and pumping all the meat in front of her. Her eyes were on fire as she held two cocks together and licked around their heads, she even tried to put them both in her mouth. The men were amazed with her spirit and absolute hunger for their cocks. For some reason she noticed the bartender watching her, she had a feeling he wanted a piece of her too. It was quite a whorish display she was giving.\n\nSam took the lead suggesting they move her to a cushioned bench area to make it easier to access her entire body, meaning, so they could fuck her. Melissa could see how they wanted her as she was bent over, Sam moved in front of her and fed her his cock while Jerry lined himself up behind her. Melissa would learn this was how the two men liked to seal their business deals, by sharing a hot woman at the same time. Melissa groaned deeply with Sam's dick in her mouth as Jerry started pumping his big cock into her pussy. She particularly liked how Jerry's big dick felt inside her, it reminded her of Mike. As the two men celebrated closing their deal Al and Jeff watched and drank with their hard pricks swinging in the air.\n\nIn the middle of her satisfying the two men, another boat came close by and the passengers shouted their encouragement, Melissa didn't stop working Sam with her mouth and Jerry didn't slow down at all. It was intoxicating to know her slutty actions were on display for about a dozen other people, both men and women. Sam and Jerry waved to the other boat without stopping what they were doing. Sam felt the swell of his ego being able to bang such a sexy woman so freely. That was an advantage of being rich like him and his friends. Melissa could only imagine what the people on the other boat were thinking about her, one woman on a boat with four guys. \n\nMelissa was impressed with Jerry's stamina given he was the oldest one there, he was close to cumming though. He wrapped Melissa' long blonde hair around his fingers and tugged snapping her head back and off of Sam's cock. He slapped her ass, once then twice as he neared his orgasm. Sam smiled down at her as he watched, she loved the rough treatment as bucked her hips and slammed back against Jerry. He loved the younger woman and her energy, he was feeling like himself back in his twenties. Finally he grunted loudly and exploded inside her to the cheering on of Sam, Al and Jeff.\n\nHe gave Lyssa's ass one more slap as he climbed off her and proclaimed, \"Holy shit Sam, that is some damn good pussy.\"\n\nJeff quickly replaced Jerry, who had been anxiously waiting for his turn at the hot blonde who was there to service their needs. He slipped himself inside her willing pussy and started to pump in and out of her. Sam held her head still as he fucked her sweet lips, Melissa's eyes were watering as it was difficult to catch her breath with the man's cock sliding into her throat over and over. His short thrusts told her he was going to cum. She tasted his tangy sperm and swallowed every drop as her lips and tongue milked him dry. She wanted more of it and the look she gave him told him that too.\n\nSam told Lyssa, \"Wow, you could give blow job lessons honey. My wife never sucked my dick like that.\"\n\nLyssa looked up and smiled at him and replied, \"Maybe she doesn't enjoy it as much as I do.\"\n\nSam nodded and laughed, he was impressed with her skill and attitude. Al was even more excited after hearing Sam's comment, he wanted to experience her cocksucking charms on him again. He presented himself before her lips, held her head steady and like Sam fed her his dick. Al and Jeff were now spit roasting Melissa like their bosses; enjoying her sweet body exactly like they had. Jeff was fucking her hard, repeating the spankings Jerry had started knowing how much she seemed to enjoy it. That made it more difficult for her to concentrate on the dick in her mouth but that didn't stop Al from being the first one of the pair to cum in her mouth. Unlike Sam, Al leaned back a little and his cock sprung from Melissa's mouth and some of his cum shot onto her face. She giggled as he seemed apologetic but she reassured him it was fine. \n\nJeff turned Melissa over so he could fuck her in the missionary position. He wanted to see her beautiful face as he continued to penetrate her. She was enjoying the intensity of the man on top of her, he thrust hard as he kept eye contact. She spread her legs wide open as the three others watched intently. She could also see the bartender over Jeff's shoulders and he was also enjoying the live sex show in between serving drinks. Jeff's breathing became more rapid as he stared into the woman's cum covered face. Melissa wrapped her legs around his waist and lifted her hips to meet his downward thrusts. Finally he shot a huge load of sperm into her as he pushed himself into her pussy as deep as he could.\n\nWhen he finally withdrew, Jeff said, \"You were right Jerry; she's got one hot pussy.\"\n\nSam threw a towel at Melissa so she could wipe her face and pussy from the cum. The bartender brought her over a drink and gave her a wicked smile. She winked at him as he handed it to her knowing he had enjoyed the show. After taking a couple of moments to recover from the first round of servicing the four men, Sam told her she could shower and rest up in her bedroom. When she was done, she could get dressed and join them for dinner. ",
        "\"Sounds good, thank you Sam,\" she said with a smile.\n\nMelissa appreciated the time alone to rest after all the sex. She took her time in washing away the remnants of sperm from her face and from her pussy. The hot water felt nice on her skin as it got rid of the sweat, mixture of her and the men's orgasms. She let her fingers move down between her legs, she had several small orgasms but not a big toe curling one that she desired. She closed her eyes and played with her clit reliving some of the experiences of the day but stopped short of climaxing. She knew there was going to be more sex and wanted to cum with the men. \n\nOut of the shower, Melissa did her makeup again and her hair, she put it up into a high ponytail thinking it would entice them. After struggling to decide on an outfit she chose a yellow, high neck, opaque sundress with thin straps that tied in the back behind her neck leaving an open back. The waist was fitted and the bottom flared making it very playful and good for glimpses of her white lace thong. She smiled as she stepped into her white, opened toes heels, she did the ankle straps up completing her attire.\n\nLike an encore appearance, she came up the stairs onto the deck and was greeted by the watchful eyes of Sam and his guests. The men complimented her on her choice of clothing, then escorted her up to the next level where dinner would be served. Under the guise of being gentlemen, they allowed her to climb the stairs first but she knew that they were really acting like horny teenagers and looking up her dress. Once she was at the top of the stairs, Melissa stopped and pretended to adjust the strap on her heels, thus ensuring the men following her got a view up her dress to her bare ass. Even though they had already seen her naked, she knew they were still undressing her with their eyes and gave them a little thrill before dinner.\n\nThe bartender had now become their waiter and he too complimented her on her lovely appearance. Over the next hour or so, the five of them enjoyed several cocktails and a gourmet meal prepared by a personal chef of Sam's. As part of her desert, Melissa enjoyed another pot laced brownie which enhanced the buzz she was already feeling from the alcohol. Sam took Melissa aside and explained that each of the men wanted their chance to be alone with her in a room downstairs. \n\nShe knew this was going to be an experience, and agreed to service Jerry first since he was the true guest of honor thanks to the business deal. Melissa, even in her high and intoxicated state, knew money came first with these men. After Jerry, she would be joined by Jeff then Al and finally Sam would top off the evening.\n\nMelissa finished her drink and got another one for the road before she proceeded to her cabin to wait for Jerry. She was only there for a few minutes before she heard a gentle knock at the door, followed by Jerry's entrance. He again told her how beautiful and personable she was, unlike the other escorts before her that Mike had provided. She thanked him for the compliment and wondered how many times they had done this. Jerry was smooth, she thought it was his maturity that was attractive and she stepped into his arms for a gentle kiss which turned into a longer, open-mouthed make out session. Their hands roamed over each other's bodies before he untied her dress. She stripped it off for him as he undressed. He took a moment to appreciatively gaze over her naked body only keeping on her heels. Melissa was proud of her figure and turned for him so he could see her from every angle once more.\n\n\"Stunning. Simply stunning.\" He said smiling.\n\nJerry again drew her in close to him so he could lick and suck on her nipples. His excitement grew fast, he grabbed a handful of her ass while inserting two fingers into her pussy. He was surprised that she was already damp, he fingered her faster enjoying the knowledge that she was having a good time rather than thinking of this as just a job. Her appreciation made the experience even more enjoyable for him. Melissa reached for his cock and gently stroked it as he played with her naked body. \n\n\"I want to taste this lovely pussy.\"\n\nJerry laid her down on the bed and got between her legs so he could lick her pussy. She exhaled deeply and moaned, she was very thankful that someone finally thought of her needs too. He was quite talented and had her squirming on the bed as she enjoyed the way his tongue played with her clit. It wasn't long before he had her hips bucking wildly while he held onto her continuing to devour her pussy. It was the first big orgasm of the night, she cried out and pulled his head into her body tightly. Once she started to come down from her climax she released him and he sat back gasping with juices covering his lips. He laughed seeing how hard he made her cum. \n\n\"It's your turn now,\" as he looked down as his erection. \"I want you to suck it nice and slow baby. Nice and slow.\"\n\nMelissa nodded her head and followed his instructions. She started by licking and gently sucking his balls, she kissed his upper thighs before dragging her tongue up the length of his shaft. She gave him a little smile as she flicked her tongue over the head and kissed the tip making Jerry jump. She worked her way back down to his balls and up again a few times. \n\n\"Incredible,\" he groaned, enjoying the best head he had ever gotten. \n\nMelissa concentrated on the head of the man's large cock, she used her lips and tongue on it and licked all around the ridge of his penis. Finally she took just the head between her lips and sucked on it lovingly. She was worshiping the man's dick and sending him to a state of nirvana. She opened her mouth wide and took him deep into her throat as her head slowly began to bob. She was very deliberate in how she sucked Jerry's cock which was exactly what he wanted.\n\n\"That's it baby; suck it nice and slow; just like that. Oh, that feels so good baby. You really know how to suck a dick honey.\"\n\nHe took a hold of her ponytail, like it was a handle and slowly thrust his hips up to fuck her mouth. He wanted to cherish every second of Melissa's expert blow job. She was really enjoying giving him such a special blowjob and moaned when he started playing with her tits. She sucked his dick for easily fifteen minutes before he lifted her head, stopping her. He had her lie down and spread her legs, once again taking a moment to enjoy the sight of her nakedness. Jerry rubbed the head of his dick up and down her opening a couple of times and then drove it inside. \n\nMelissa let out a cry as his large cock pushed deep into her cunt. Jerry loved that he could force out such a reaction from a much younger woman. He put her legs up onto his shoulders, her heels pointing straight up at the ceiling as he started fucking her. Melissa stared up into his eyes while moaning, he could see the pleasure he was giving her and knew she was enjoying it as much, if not more than he was. Melissa smiled as she focused on the feeling of Jerry's cock moving quickly and deeply inside her, he was the largest of the four men and knew what to do with it.\n\nJerry had already cum once that day so Melissa knew this time he would take longer. She was happy to switch positions from time to time so he could enjoy her body, Jerry fucked her missionary, her on top and reverse cowgirl before he had her turn onto her hands and knees. His thrusts became faster as he grabbed the ponytail and tugged, he began slapping her ass continuously as he got close to cumming. His breathing had gotten faster and shallow, his thrusts were accompanied by loud grunts. Melissa closed her eyes as she felt him release his sperm into her once more. \n\nAs Jerry took a few minutes to recover, Melissa gently massaged his shoulders as he regained control of his body and senses. He thanked her for an enjoyable day and for being so sweet to him. He wasn't expecting that sort of kindness. She smiled at him and wished him a great rest of the night. In the few minutes it took Jeff to arrive Melissa had cleaned herself up and straightened out her ponytail. Unlike Jerry he was all about his own pleasure. Jeff had her kneel down on the floor and suck his cock as he stood in the center of the room. He pulled her head along his shaft as she bobbed on him hard and fast. It was the complete opposite of Jerry but that was good for Melissa, she wanted it a little rougher from this guy. Jeff got her onto the bed, had her flat on her back as he drove into her pussy.\n\n\"I'm going to fuck you good,\" he mumbled making Melissa grin, the real Jeff was making an appearance and she was truly his whore now.\n\nHe too put her long legs up onto his shoulders but unlike Jerry he pushed them forward pinning Melissa under him. She groaned deeply as he plunged in and out of her harder and harder. Melissa closed her eyes as her second large orgasm hit as her knees bounced off her own chest. Jeff gritted his teeth and grunted feeling her pussy gripping at him while he pounded her. He didn't last much longer after her orgasm, he pulled out and made her suck his slick cock until he deposited a heavy loud in her mouth. Melissa swallowed every drop of his cum and loved it. \n\nJeff also thanked her and left her to wait for Al. When he came inside her room he only asked for another blowjob, he thought that would be okay but couldn't do more because he was married. Melissa didn't quite understand the logic but was more than happy to suck his dick. She took her time and played with him a little, she would take him to the edge then ease up and then take him there again. Finally she allowed him to cum in her mouth, his cum tasted so good to her that she kept sucking until he tapped out. Al thanked her for her talents before leaving her alone to freshen up. It was nearly twenty minutes before Sam came to her cabin for his turn. \n\nOnce he stepped in, he told her, \"We are thrilled with your services today Lyssa. You are the sexiest woman we've enjoyed on our excursions and I think you'll be pleased with the compensation. The men have been very generous in their tips.\"\n\n\"Thank you Sam, I'm glad you all enjoyed yourselves today. I've never done this before, so I was a little nervous about how this would go.\"\n\nHe replied, \"I could tell you were nervous but believe me honey, you've been fantastic. You are one sexy lady. I'll tell Mike you are our preferred lady.\"\n\nMelissa smiled warmly as Sam took her into his arms as he kissed her and caressed her soft skin. She knew that she had to do more for Sam than the others and seeing as though he was so complimentary of her she wanted to give him an extra special memory. She helped him undress and when he was naked she stepped back to admire him. She took a hold of his hard cock and pumped it while he took his time licking and sucking on her nipples. Melissa let out a little whimper as one of his fingers found her asshole and teased pushing inside. She gasped as he gently inserted it into her, fingering her ass for a short time.\n\nMelissa chuckled to herself as Sam sat comfortably on the edge of the bed and she found herself once again on her knees. He took a hold of her ponytail and guided her mouth down around his cock. He wanted a wet, sloppy, slutty blow job and Melissa was happy to oblige. As she sucked his prick, he raved about her abilities, she bobbed up and down on him hearing how good she was at blowjobs. Sam then asked her to crawl onto the bed and stay on her hands and knees for him because he wanted to take her doggie style.\n\nSam caressed her ass cheeks and squeezed them as he stuffed his cock into her wet pussy. He continually told her what a lovely ass she had and Melissa felt she knew what he wanted to do. He got his thumb covered in her juices and then stuck it into her ass. Melissa closed her eyes and groaned as he fucked her pussy with his cock and moved his thumb in and out of her ass. It felt good to her and then Sam asked for it; he wanted to take her anally\n\n\"Oh, Lyssa, you have such a fine, tight ass, I sure would like to fuck it before you leave. What do you say honey? I'd really appreciate it dear.\"\n\nLyssa felt almost obligated to comply with his request and told him, \"I guess it would be alright but make sure you use enough lubrication.\"\n\nSam got a wide grin on his face and assured her he would use plenty of lube. He withdrew himself from her pussy and reached inside the small nightstand drawer for some lubrication. Melissa felt a sense of excitement since anal was just not a regular thing for her. She also couldn't help but think how jealous Jack was going to be to hear another man sodomized her and he still hadn't. He held the tube to her ass and squirted some directly around her hole, he used his finger to spread it around and repeated. She was appreciative that he was taking his time. He put some lube on his dick and rubbed it around. Melissa took a deep breath and braced herself as she felt his dick up against her ass.\n\nSam told her, \"When I first saw your bare ass, I knew I had to fuck it baby.\"\n\nHe pushed against her asshole forcing it open to accept his dick. As promised, he went slow and easy, pushing just the head into her before going deeper. Melissa liked how it felt initially but it would get painful as soon as he pushed a little deeper. She stopped him from time to time so she could adjust to being sodomized for only the second time in her life. Sam was enjoying his initial penetration of her butt, he knew this was new for her. Her ass was so tight, it felt like it had a firm grip on his dick. He inched himself deeper and deeper into her, being sensitive to her ability to accept a cock in her anus. She felt so full and finally when she felt his stomach against her behind, she knew he had his entire dick in her. Melissa felt him begin to move slowly in and out of her ass.\n\n\"Oh baby, you have such a tight ass. It's even better than I imagined. Oh fuck, you are so tight.\"\n\nMelissa moaned and groaned, she was beginning to relax and enjoy the cock in her ass. Sam could sense her getting used to him being inside her and took it as time to thrust faster, then even faster. She wasn't expecting him to start going so hard but it was happening, she gripped the sheets with her fingers and pulled. Sam was done being patient and gentle, he just wanted to tap Melissa's ass. Their skin slapped together, he was fucking her with such force her ass was wiggling in waves each time he slammed all the way into her.\n\nHe kept telling her, \"That's it baby, take my dick in your ass. Take it in your tight ass.\"\n\n\"Fuck my ass Sam. Ohhhhh, fuck my ass.\"\n\nMelissa was letting out squeals and yelps as Sam fucked her ass for a very long time. She had no idea how much time passed but knew his stamina was a result of cumming earlier in the day. There was something about being taken like this that turned Melissa on beyond imagination, it was wild and so basic. It made her feel even more submissive to be servicing him with her asshole. He was breathing hard and his strokes shortened, Melissa could tell it was about to be over. Sam gave one final brutally hard thrust and released his load inside her. Melissa shook underneath him cumming herself which surprised them both. He collapsed on top of her and remained inside her ass for the next couple of minutes until his legs were strong enough for him to stand up.\n\n\"Damn Lyssa, you are one hot piece of ass. I mean literally, one hot piece of ass.\"\n\nSam got dressed letting Melissa lay there on her stomach. Her body glistened from perspiration and cum oozed from her ass onto the bed. The man pulled an envelope out of his pocket and set it down on top of her ass with a laugh. \n\n\"Here you go babe, you definitely earned it. Thanks for a great day. I know the guys agree you are one of the best Mike has ever sent us. We'll be sure to ask for you next time. So you know you have time to shower and relax a little before we dock.\"\n\n\"Thanks Sam. I appreciate your generosity,\" she said rolling over onto her back and picking up the envelope.\n\nShe looked inside and saw it was stuffed with $100 bills, she remembered this was only her tips. It didn't include the money Mike owed her. She took his advice and showered, all the while thinking about the thousands of dollars she had just made in just one afternoon. She started to think about Jack and how he was going to react to all the details of her sexual antics. He was going to be on her like a wild animal. She put her sundress on, forgetting about the thong, after everything that happened she didn't want it on. She joined the men up on the deck for a drink and they all exchanged kind words. They really complimented her and told her how much they enjoyed everything, Melissa told them she was equally as happy and loved the experience. She also made mention of their generosity and how much she appreciated it. Everyone was relaxed and she thought it was now just a matter of time before they docked, but Sam had one more idea.\n\nSam took a hold of her hand and spoke, \"You know our young bartender Donny has seen a lot of you today. He's heard us bragging about your talents. I think he'd really enjoy one of your blow jobs.\"\n\nMelissa looked at him not sure what to say but saw the young man out of the corner of her eyes packing some of the bottles up behind the bar. She laughed and thought to herself, \"These guys just paid me thousands of dollars, I might as well do it. What's one more dick?\"\n\nShe went over to the bar and smiled at him, he stopped what he was doing and wiped the top of the bar with a rag. \n\n\"Do you want a drink Lyssa?\" He asked. \n\n\"Not exactly. Can I come around?\" she asked, not waiting for an answer as she went around behind the bar. \n\n\"What are you doing? Not sure if Sam would..uh..want you back here,\" he stammered as Melissa knelt down in front of and reached for his buckle. \n\n\"Trust me Sam won't mind,\" she answered looking up at him with a grin. \n\nShe undid the belt, then his pants and tugged them down until they fell around his ankles. She paced the palm of her hand over his bulge and massaged it, she grinned as it grew and grew until she could see the tip poking out of the top of his underwear. It was obvious to her Donny had a very large cock and she was going to enjoy pleasuring him. She yanked at his underwear freeing what must have been nine solid inches, she couldn't help but giggle as it almost hit her in the face.\n\n\"Mmmm...Donny you have a gorgeous cock!, she complimented him while taking a firm hold of his shaft and pumping it. \n\nHe groaned as Melissa softly flicked her tongue at the tip of his penis, he couldn't believe this woman was down on her knees servicing him just like the others. She kissed along his length, inch by inch until she reached the base, she pushed his cock up to his stomach as she licked and sucked his balls. Donny put his hand on the bar to support himself as Melissa worked him over with her mouth. \n\n\"Holy fuck it's true, you are amazing at sucking dick,\" he said in between moans. \n\nMelissa loved hearing that and opened her mouth wide and took in a couple of inches. She started to bob slowly and stroked him at the same time. He was already tensing up so she knew he wasn't going to last very long. He took a hold of her ponytail as she started moving along his shaft faster, taking more and more of him into her throat. Donny was struggling to hold on, he didn't want this blowjob to end. Melissa had complete control over him as she wrapped her lips around the head of his cock and pumped it hard. He was going to cum, he grunted and groaned loudly as Melissa used her tongue and lips. \n\n\"Where do you want to cum?\" She asked him. \n\nDonny looked surprised by the question but quickly answered, \"I want to cum on your face.\" \n\nMelissa looked up at him with her blue eyes, her smile gone and replaced by a look of desperation, she wanted him to cum. His grip on her hair tightened and he made her head tilt to the side a little bit, he took a hold of his cock with his other hand and stroked it fast. Her look grew more intense as his pumping became frenzied and his body lurched. She gasped as he covered her face with a huge amount of cum, coating her lips and landing over her nose and eyes. Donny groaned as he drained himself, no doubt his excitement had been building throughout the course of the day from watching her whorish actions.",
        "\"Wow. That was a lot,\" Melissa cracked with a laugh which made Donny break up too. \n\nAfter a quick exchange Melissa was back cleaning herself up again for the final time on the yacht. They reached shore and after some pleasant goodbyes and promises to request her services again, the SUV arrived and she was on her way home. Mike did not make the ride so she got to enjoy some peace and quiet for the thirty minutes it took to get home. She couldn't wait to see her husband and relive the entire day with him, no doubt he was going to be ready for her and waiting."
    ],
    "authorname": "Jay142",
    "tags": [
        "blowjob",
        "exhibitionism",
        "exhibitionist",
        "group sex",
        "public nudity",
        "slut",
        "stranger",
        "stripping",
        "wife"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/melissa-shows-off-ch-02"
}