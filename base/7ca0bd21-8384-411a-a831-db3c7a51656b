{
    "title": "Flyover Country Ch. 04",
    "pages": [
        "Author's note: This is a long story, some 68,000 words in total. If you don't like lengthy stories, please pass this one by because you will not enjoy it. The story is being posted in 4 Parts submitted one day apart.\n\nThanks to Blackrandl1958 for her editing skills. I would also like thank Harddaysknight for taking a lot of time and energy to beta-read this tome and show me where to improve it. Both have helped me immensely and any errors that still exist below will be there because of mistakes I alone have made. I sincerely appreciate the sacrifices the two of them have made to help me get back in the game\u2014after all, it's only been twelve years since I last posted a cheating wife story.\n\nThe following is not a stand-alone story. You will need to read Parts 1 through 3 for this Part to make any sense.\n\n* *\n\nFlyover Country, Part 4 (of 4)\n\nBy Longhorn__07\n\nCHAPTER EIGHT\n\nSharon was dying. She'd been dying for almost a year, a little more every day. The cancer was an aggressive one; it was literally eating her alive. She'd hung on for almost four months longer than any of the doctors thought possible. But when I brought her back to the hospital this time, we both knew she was never going to leave it.\n\nHer breath was coming in short gasps. The morphine drip wasn't enough any longer. She was hurting badly, but fighting hard to stay alive for just another minute to be with me and her two babies. But the suffering ... oh my God, how she was suffering.\n\nI got up from the straight-backed chair the hospital allowed next to her bed and leaned over my wife of only a very few years. I kissed her lips. I didn't think she was still enough with us to know what I did, but maybe... Her breathing evened out for a few seconds, then resumed the hoarse gasping, but it was weaker now.\n\nI bent closer to whisper in her ear. \"Honey, I'll always love you. Your son and daughter know you love them, and they love you. We'll all love you forever, honey. You don't have to fight any more, baby. It's time to let go. I'll take care of Tommy and Judy for you, and they'll take care of me, darling. Don't worry anymore, we'll be okay...\" I kissed her forehead and her lips again and stood where I was, leaning over her and stroking her wasted arms and face.\n\nAfter a few seconds, she exhaled softly and simply never took in another breath.\n\nThe monitoring instruments began to keen a loud, warbling tone, but they were announcing something I already knew. My Sharon was gone.\n\nWearily, I stood erect, then bent forward again to kiss her lifeless lips one last time. I patted her hand and backed away from the hospital bed to let the doctor and nurses in.\n\nI bit my lips and turned away to face Sharon's mother and father. I embraced Judy and then Bruce I embraced Judy and then Bruce. I slipped to the side so they could step to the side of the bed and say goodbye to their youngest daughter.\n\nI searched for the door through my tears. I went out, on my way to find my son and daughter. I had to find some way to tell a three-year-old girl and her four-year-old brother their mother wasn't ever going to hold them in her arms ever again\u2014that she was a with the angels now and would watch over them for ever and ever...\n\n* * *\n\nI drifted for a time, lost in my grief but trying to be the best father and mother to two small children. That meant I had to help them past their grief while trying to get through mine at the same time, and not letting the grieving overwhelm us.\n\nI found myself hating Anchorage, and by extension, the whole state of Alaska. My in-laws lived there, and I had an amazing relationship with them, but there were just too many memories there\u2014memories of places Sharon and I had gone, and things we'd done together.\n\nLike wounded animals, seeking their burrows to heal from injuries, my children and I moved home to Texas where we wouldn't be reminded every day of what we had lost. Bruce and Judy, my father and mother-in-law, and my children's grandparents, weren't happy with my decision, but they understood. They were wealthy. They could fly to Texas any time they felt the need for a visit.\n\nA trust fund a great-aunt set up for Sharon matured the year after Tommy was born, and the money it represented came to me after Sharon passed. I didn't want it; I tried to give it back, but my in-laws wouldn't take it, and the great-aunt was deceased. So I became a multi-millionaire overnight. I put it to good use and established two trusts, one for each of my children for college or whatever they decided to do with their lives. The excess sat in a bank and made more money for my children and me than we'd ever be able to spend.\n\nBack home, Mom and Dad had decided they didn't need to be driving around the country any longer, searching endlessly for that perfect RV camp site. The current plan seemed to be just doing the vagabond thing during the spring and autumn. Winters and summers were considered seasons where travel was just not fun enough. They welcomed me and their two grandchildren home with open arms. Mom and Dad already had a two-bedroom house on the north side of the city and a getaway cabin up in the hill country. They sold that house and moved to one with four bedrooms, hinting broadly Tommy and Judy might want to come visiting sometime.\n\nMom and Dad were about as happy as I'd ever seen them. They got to see their grandchildren often and started a campaign to spoil the little ones terribly. They said that was their job\u2014it was what grandparents were supposed to do.\n\n* * *\n\nI'd just turned thirty-six. I didn't worry about my advancing age\u2014I had no feeling that time was passing me by or anything like that. I had my son and daughter and I was working hard at taking care of them.\n\nThomas Bruce Singletary, was five, and Judith Lea almost four now. Times had been rough just after Sharon passed, but she'd been sick for so very long. The length of her illness was a kind of grieving even before her death. The kids hadn't comprehended much\u2014how could they?\u2014but they understood their Mom wasn't hurting any more, and that was a good thing. It didn't make up for the loss, but it was something.\n\nI owned a business. Well, I was a partner in a business. Sharon's friend, Teresa Cunningham, and I had performed similar functions in the business world and I flat stole her away from my father-in-law. Together, Teresa and I formed a consulting firm that would essentially inspect every aspect of a business enterprise and prepare a report for the owners or board of directors that identified weaknesses in any part of their enterprise.\n\nTeresa ran most of the day-to-day executive functions, only bringing me in when some problem might mean a shift in policy or direction. I'd seeded most of the startup from the trust fund Sharon left me. I owned fifty-one percent of the company. Teresa and her husband, Carl, owned the remaining forty-nine percent. Eventually, I was going to make it easy for them to buy out my interest because I just didn't want to work very hard, and I wasn't going to do much work for the rest of my life. It wasn't that I was that lazy\u2014I just wanted to spend most of my time raising my two children. And that's just what I did.\n\n* * *\n\nOn a bright, sunny, Texas kind of day, my son and daughter conned me into taking them to one of those places offering a high grade of cardboard that masqueraded as pizza. As compensation, they had many, many dinky little games and rides for young children to enjoy. Even at not-quite-four years of age, Judy knew exactly how to fit a game token in the slot and would pause gleefully at the startup routine while clapping her hands. Only when that was over, would she climb aboard the ride or begin playing whatever the \"game\" required. At times, I wasn't entirely sure what the game wanted a player to do but my two children seemed to have an instinct for those things. Whatever! They had fun and that was what was important.\n\nI sat in one of the semi-circular booths and watched my two children only a few feet away from me on one of the rides, a four-foot wide merry-go-round that rotated at a pace that seemed to me to be excruciatingly slow. I'd have been incredibly bored riding it myself. They seemed to like it though.\n\nI'd helped them climb aboard and then come around the barricade to sit back down for a while. I was armed, of course. My .45 caliber Glock 38 and I took our responsibility to protect the children against any and all bad guys very seriously. I looked all around at the other bored parents and waited for a specially made pizza I'd ordered as a substitute for the buffet table version. I hoped it would taste a little better than the ones set out on the warming tables under those heat lamps.\n\nThe kids would join me when the ride ended to help eat the pizza I'd ordered special, or they'd make their choice from the buffet. I was betting they'd want to go to the tables instead of eating one their Daddy had ordered. I watched their happy faces and smiled myself. Sharon was never going to be forgotten, but we were doing our best to work through her absence. It'd been almost a year since she'd died.\n\n\"Hey, Cowboy...,\" a woman said, \"got room for a couple a' girls there?\"\n\nI wore a Stetson outdoors\u2014it was sitting beside me on the plastic seat\u2014so the word \"cowboy\" wasn't entirely weird. But why in the world would anyone be...?\n\nThen I half-recognized the soft contralto. I jerked my head around to find a woman, a beautiful woman, and a little girl standing at my shoulder.\n\n\"My God...,\" I whispered, \"Mercedes...?\" I was abruptly on my feet and facing a lovely, raven-haired woman with crystalline blue eyes. I had no memory of standing.\n\nShe smiled tentatively, then with more confidence. I didn't know whether to take her in my arms or not. I wanted to, but I'd read about her marriage some years ago. True, I'd read in a magazine she was getting a divorce, but I didn't know if it was true or not.\n\n\"Hi, Matt,\" she said softly. She stepped up to me and kissed me gently on the lips, which solved that problem. I almost wrapped my arms around her to return that kiss with interest. My hands cupped her elbows and I inadvertently urged her closer, and she came willingly for another kiss. I wasn't about to do anything with a married woman, and she surely understood my feelings on the subject from the time we'd spent together. On the other hand, she wasn't acting married...\n\nThere was a tug on the outside knee of my blue jeans.\n\nI backed away from Mercedes a few inches and looked down at the cutest little girl in the known universe\u2014except for my little Judy, of course. I couldn't help but smile at her. She wasn't a bit shy; she returned my smile with a cute grin of her own.\n\n\"Are you my Mommy's friend?\" she demanded in a sweet, little-girl voice.\n\nI squatted to get down on her level. I'd always thought it rude of adults who talked down to young people, literally, and figuratively.\n\n\"I think I must be,\" I assured her. She couldn't have been anyone else in the world except Mercedes' daughter\u2014well, perhaps her clone.\n\n\"Are you MY frien'?\" she asked.\n\n\"For ever and ever,\" I replied. Miniature Mercedes grinned happily, scootched closer, and put her little hands on my shoulders and gave me a kiss on my right cheek. I couldn't do anything except give her a hug and a kiss right back.\n\n\"What's your name, sweetie?\" I asked.\n\n\"Mattea,\" she answered in her little voice, \"...but you can call me Mattie...\"\n\nI was shocked. It was clearly a feminine version of my first name ... but was it intentional? I shot a glance up at Mercedes.\n\nShe smiled and nodded. She'd named her daughter after me. I was a little shaken. Mercedes mouthed the word \"Later...,\" to me. Most assuredly, I was going to need to know how this came about.\n\n\"...How old are you, Mattie,\" I asked, that being the second question all adults ask a child just introduced them.\n\n\"Three!\" she answered quickly. She knew all the questions too. She had trouble showing me just three fingers on her right hand and finally had to use her left hand to assist holding an errant little finger down.\n\nI stood up and looked around to find my children. It was about time\u2014yes, the ride they were on had eased to a stop and they were clambering off, eying me and the two strangers with me. I turned to face them as they raced up and went down on my haunches again.\n\n\"Tommy ... Judy, I want you to meet some really good friends of mine. This is Mercedes ... and her daughter, Mattie.\"\n\nThe children stood looking at each other for a moment, not quite knowing what to do. I pushed everyone past the awkwardness, suggesting everyone go get some pizza from the buffet's warming tables, and refresh our soft drinks\u2014stuff like that. Judy wanted to investigate the soft serve ice cream machine immediately, of course, but I gave her a look. She knew better; she'd thought she'd give it a shot\u2014just pushing the envelope like all children do.\n\nIn moments, all three kids were on one side of the booth, stuffing cardboard pizza in their mouths and talking amongst themselves as if they'd known each other all their lives. They started a game of kicking their feet up into the underside of the table just so they could hear the thump.\n\n\"...I'm pretty sure people who kick tables don't get ice cream,\" I commented at large. The thumps ceased, forthwith, as they say.\n\nIn the process of getting plates full of pizza back to the table for three young children and taking possession of the custom pie I'd ordered, Mercedes wound up on the bench seat inside of me on \"our\" side of the semi-circular booth. There was plenty of room at first, but Mercedes closed the distance almost immediately. She and I were sitting hip to hip, with our elbows and the outside of our upper arms touching. It didn't bother me one bit. I liked it a lot, but\u2014\n\n\"I didn't get a chance to ask a couple a' questions,\" I remarked, \"...like ... what're you doing here and ... stuff like that?\" I figured that would get the ball rolling. It didn't occur to me to be quiet so only Mercedes could hear.\n\n\"...Hadda fine' you!\" Mattie replied instantly, pointing dramatically at me. Mattie's reply knifed through all the background noise, loud and clear.\n\nI was taken aback. I don't THINK my chin dropped to my chest, but it may have.\n\nI shot a glance at Mercedes. Her face was still in the process of turning a dark shade of red; she didn't look at me.\n\nMattie was delighted at the impact her comment made on the two adults at the table. She grinned happily and repeated herself a couple of times, dancing on her behind, and making faces at everyone. My two kids joined in, of course.\n\n\"Shhhhhhhhhhhh...,\" I told them in a low voice, \"...eat your pizza ... then we'll get some ice cream...\"\n\nThank God for the power ice cream has over small children! They shushed immediately and each took a bite from their slice of flavored cardboard.\n\nI looked at a still blushing Mercedes at my side. I was grinning, but it was in appreciation for how cute the two girls and one little boy were.\n\n\"Just for the record,\" I began, \"...I've been trying to find you too, but my guy couldn't track you down ... you just disappeared!\"\n\n\"You were looking for me...?\" she asked, surprised. She looked me in the eye, her blush fading.\n\n\"I ... read you were getting a divorce...,\" I told her hesitantly. I didn't want it to seem like I was stalking her or anything. \"I tried getting in touch with you, but couldn't ever find a phone number or anything, so I hired a private investigator, but he could only go so far ... he lost your trail in ... ahhhh ... Billings, Montana, I think it was.\"\n\nShe grinned. Well, my Uncle Runs Far ... Great-Uncle Walter Runs Far ... picked me up there and took me to his home down in Wyoming. Mattie and I lived there with him and his girlfriend for a while 'cause Reggie ... my ex ... was being an ass about everything. We needed to get away to somewhere quiet and ... out of sight!\" she explained.\n\n\"It worked!\" I applauded, grinning. \"The investigator I hired said it was like you dropped off the edge of the earth!\"\n\n\"I'm really glad you came,\" I continued. \"How long can you stay this time?\"\n\nMercedes studied my face for a moment, searching my eyes for something. She leaned closer. \"...Until you kick us out...,\" she breathed into my ear.\n\nInstead of answering, I gently kissed her lips, taking my time but not trying for too deep a kiss. Three pairs of bright eyes were observing everything we did, of course.\n\n\"What's that song...?\" I asked, \"...until the twelfth of never...?\" I couldn't stop smiling.\n\nI kissed her again. We turned back to the kids, who'd been watching us the whole time, but hadn't interrupted. They were busy munching down on the ersatz pizza.\n\nClearly, they really wanted an ice cream cone and were working hard to be good. Mercedes and I ate the remainder of our pizza one-handed, her left hand was intertwined with my right under the table and neither one of us was about to let go.\n\n\"Where are you staying,\" I asked. I was going to move the two of them out to the ranch as soon as it could be arranged. I hadn't debated the issue with myself. Mercedes might have a different view, but I thought I could wear her down if she didn't want to live with me and my kids.\n\nMercedes chuckled and shot a look out the window. \"We just got here. Mattie and I, and my private investigator ... we were on our way to the hotel down the street when we saw your truck\u2014he knew what it looked like\u2014and I told him to turn in here,\" she explained and chuckled again. \"He's in his car out there, with our luggage and everything in the trunk!\"\n\nI laughed. Mercedes and I were like two children. It seemed to me rekindling a romance we'd been in before we'd gone our separate paths should be a little more difficult, but things were definitely promising. This felt really good.\n\n\"Wanta stay out on the ranch with us?\" I asked quietly.\n\n\"You still have...? I thought\u2014\"\n\nI nodded. \"Sorta\u2014same place, new house,\" I explained.\n\n\"Can Joe ... his name is Joe Conway ... put our stuff in your truck?\" Mercedes asked, not wasting time even appearing to debate the right or wrong of staying at my ranch with herself.\n\nI took out my key remote and pointed it out the big plate glass window. I opened the front and rear doors, and then the tailgate. \"I only have two child seats...,\" I warned.\n\n\"Got it covered,\" Mercedes interjected. \"I brought Mattie's all the way from Cheyenne country!\" She disentangled the fingers on her right hand and hauled out her phone.\n\n\"...Joe ... Mercedes ... hey, would you be so kind as to put our things in Matt's truck, please?\" she asked. \"...In the ... back part...?\" she asked, looking at me.\n\n\"Have him put them in the truck bed,\" told her. I had an idea. \"Tell him we'll pay extra for the concierge service, okay?\" I thought that was fair\u2014private investigators didn't generally get involved with toting suit cases around or installing car seats.\n\n\"Daddy...?\" my son, Tom, asked.\n\nI raised my eyebrows and chin to acknowledge him.\n\n\"Are Mattie an' ... ummmm ... 'cedes?' he asked, his eyes flicking toward Mercedes, \"...are they gonna stay with us?\" he finished.\n\n\"I think so,\" I answered evenly. \"Mercedes has been my friend for a long, long time and I think Mattie will be my friend too ... and they can be your and Judy's friends, whatcha think?\"\n\nTom shrugged\u2014didn't much matter to him. \"Okay,\" he said, blessing the whole thing.\n\n\"Yeaaaaaaaaaaa!\" Judy cheered enthusiastically. New friends were just fine with her. She stopped. Excitement lit her eyes and she turned to Mattie. \"You wanta ride horsies?\"\n\nMattie's eyes widened. \"Horsies??\" she exclaimed, visibly thrilled by the very idea of horses in her future. She nodded happily.\n\nThe plates of pizza were finally consumed\u2014mostly. There were some crusts and a stray slice of mushroom (which none of the kids liked) was conspicuously left in the center of one plate, but that was about all. Ice cream cones were licked until the cream was well spread across all three young faces and a final run was made at previously untried games.",
        "Before he left, \"Joe\" had placed Mattie's booster seat between Tom and Judy's, which I thought was cute. Tom's was still on the driver's side, right behind me, which was his desired place. Judy didn't care, so everything was in order as far as the three munchkins were concerned. All three of them fell asleep, of course, somewhere between two and three minutes after we left the parking lot.\n\n* * *\n\nI'd had a custom job done on the new pickup to get some wide, very comfortable bench seats installed, front and back. I caught Mercedes gazing into the back seat at the sleeping trio with a gentle smile on her lips. With them asleep, she unbuckled her seat belt on the far passenger's side and slide across to rub shoulders and hips with me.\n\n\"If that isn't the cutest backseat full a' kids in the whole world, I don't know what is!\" she declared.\n\nI glanced up at the rearview mirror. I had to agree. Three perfectly adorable children ... and two of them were mine.\n\n\"Baby...,\" Mercedes said softly, \"...I'm so sorry ... about Sharon,\" she offered. \"It was so sad...\"\n\n\"She was a wonderful woman...,\" I told her. \"She was a great wife and a super mother ... but she was in so much pain when she finally passed. It was hard on Judy and Tom, but we had a long time to prepare for it, and now we're slowly gettin' on with gettin' on,\" I said.\n\nMercedes patted my arm and kissed my cheek.\n\n\"I have a message for you from Sharon,\" I remarked after a while.\n\nMercedes was startled, and a little alarmed. A message from a deceased wife could be more than a little uncomfortable.\n\nI shot a look at her. \"Well ... indirectly, anyway,\" I said, relenting.\n\nI directed my attention back out through the windshield at the road ahead. \"A couple a' months before she died, Sharon shooed all the doctors and nurses out and made me lie beside her on the hospital bed so she could talk to me without straining anything.\"\n\nI pointed at a building on the side of the road we were about to pass. It was Jesse's Barbeque where Mercedes and I first met. She recognized it instantly.\n\n\"Ohhhhh ... honey, we have to go there ... real soon, okay?\" she asked delightedly. I noticed she was calling me \"honey\" again, just as she had before we split up those years ago. I liked it. It felt great.\n\n\"We will...,\" I assured her, patting her thigh, \"we will.\"\n\n\"Anyway, Sharon told me that when she was gone, she wanted me to go out and find a woman to love and who would love me and our children\u2014she made me promise,\" I told Mercedes.\n\nMercedes looked down, studying her hands in her lap.\n\n\"So...,\" I continued, \"...I don't want to scare you off, but my dear wife made me promise to love and to let me and my children be loved ... so if that's not how you see things working out...\" I had to pause there for a moment. \"If that's not what you want and it's going to be like last time...\"\n\n\"Stop there!\" Mercedes demanded, pointing out at a roadside park just ahead.\n\nI just had enough time to brake and pull in without making it a violent maneuver and waking up the kids. When we stopped, a cloud of Texas dust we'd kicked up drifted past the cab.\n\nMercedes swiveled to face me and threw her arms around my neck and mashed her lips against mine. \"I want you ... I love you ... and I am never going to leave,\" she swore. \"I meant what I said ... I'll be here with you, beside you, 'til you kick me out ... understand, Matthew James?\"\n\nI kissed her back and put my arms around her. \"You used the 'L' word,\" I murmured. \"We didn't do that last time we were together ... even though I wanted to...\"\n\n\"I know...,\" she said softly. \"I wanted to say it, too, but if we had\u2014\"\n\n\"\u2014We'd never have been able to go our separate ways and ... wouldn't have been able to do the things we had to do.\" My voice was low and rumbling with emotion. \"...But this time, Little Dove That Calls At Morning\"\u2014it was her Cheyenne name\u2014\"I'm going to say it morning, noon, and night, so if you're not ready for...\"\n\n\"Say it!\" she insisted.\n\n\"I love you!\" I replied instantly. \"I\u2014love\u2014you!\"\n\n\"I love you, too,\" she cooed. She sighed happily and rested her cheek on my shoulder.\n\nWe sat there a few more minutes, kissing, but not speaking. I put the truck back in gear and we pulled back out on the highway. We didn't do much talking as we drove; we didn't need to. Our relationship, one that had been disrupted years ago, seemed to have picked up where it left off. We were amazingly comfortable with each other and already making commitments to each other.\n\n* * *\n\nAfter their nap on the way home, all three kids were wired when they were awakened at the ranch. They wanted to do everything and do it all at once. When the horses down by the corral whinnied, it settled the question of what to do first. Mercedes and I escorted all three children down there after loading up with a small bag of apples.\n\nThe kids fed the other horses while I saddled two Shetland Ponies I had for my kids. I had in mind a place where I could get another one for Mattie, and I told her so. She was thoroughly delighted. I got a big hug and a bunch of kisses from her.\n\nJudy reined her gentle animal around the paddock by herself. She'd only been doing that for a month or so, and she was very proud of her ability to do it. I put Mattie on the saddle behind Tommy and my son took his new friend on a long ride. Three-year-old Mattie held tight to Tommy's waist while Tommy guided his Shetland around. After a while, five-year-old Tommy came back to where Mercedes and I were standing and had us move Mattie to a position in front of him so Mattie could see where they were going.\n\nShe loved it. Tommy got a big hug and a kiss on the cheek for that. He didn't quite know what to do about Mattie kissing him, but he decided to accept it much like he did kisses from his little sister. He would tolerate them, but wouldn't return the kisses.\n\nAfter a while, the kids decided they wanted to go swimming. We unsaddled the ponies, watered them, then brushed and curried them before turning them back out into the pasture. I raced the youngsters back to the house and shooed them upstairs to change into swimsuits.\n\nI offered, and half expected, Mercedes to take this opportunity to unpack all their stuff\u2014we'd already selected her and Mattie's rooms\u2014while I watched my all the kids in the wading pool, but she wouldn't hear of it. She opened one suitcase to retrieve her and Mattie's swim suits and we all decamped to the wading pool. Mercedes and I watched as the three kids laughed and played in the sunshine and water.\n\nAs the sun dropped low on the western horizon, I fired up the grill and seared a couple of steaks for myself and Mercedes, and did some chicken drumsticks for the kids. In addition to baked potatoes, I roasted some asparagus tips and assorted veggies just to stave off any potential nutritious-diet guilt.\n\nAfter dinner was over, the three youngsters used their waning energy chasing fireflies around the backyard. By bedtime, all three children were in the latter stages of exhaustion. Mercedes and I supervised showers for all of them, my two went into the master bath in my bedroom and Mercedes took little Mattie into the bathroom accessible from the hallway outside their room.\n\nAll this was according to my diabolical master plan. I wanted all three children totally worn out ... so they'd sleep like little logs all ... night ... long!\n\n* * *\n\nMercedes and I went from my children's bedroom door to Mattie's, gazing at them as they slept. I had my arm around her waist, no longer even pretending we were just the friends we'd told the young ones we were.\n\n\"I'm pretty sure when the Bible talks about angels...,\" I said, \"the model that was used was a sleeping child.\" I smiled.\n\n\"Mmmmmmmmmm hmmmmmmmm,\" Mercedes agreed. She shifted from beside me, to in front of me in a lithe move. She wrapped both arms around my waist and plastered herself against me. We shared our first unchaperoned kiss since she and Stephie left me behind years ago. We'd both been mindful of the fact that three pair of eyes were watching closely.\n\nIn her room, Mercedes opened another suitcase and retrieved a nightgown before we walked down the hall to what had been my bedroom. It was ours now. We didn't bother discussing it.\n\nWe spent the night together getting reacquainted with each other's bodies and making love. It turned out we still knew how all the parts fit into other parts, and what buttons to press, and when. Everything worked out fine. Mercedes got up just before dawn, put on her nightgown and went to \"her\" bedroom where she still hadn't unpacked her luggage.\n\n* * *\n\nWe maintained a pretense of sleeping separately for almost three weeks. Mercedes would get up early to go back to \"her\" bed, but the alarm clock didn't go off one morning. The first she and I knew of the problem was when all three kids climbed into bed with us and announced\u2014demanded\u2014someone should get up and fix breakfast. They didn't much care who took care of preparing pancakes and sausage links, but they needed it done quickly so they could watch cartoons.\n\nMercedes was in a nightgown, and I was in my boxers. We were fortunate we'd taken the time before falling asleep the night before to put on something; I didn't even want to think what would have happened if they'd caught us nude\u2014way too many questions. I resolved to change the batteries in the baby monitors in their rooms, and turn up the volume so we'd have at least a chance of getting some advance warning.\n\nAfter we got caught, Mercedes officially moved into the master bedroom with me. To our surprise, none of the children seemed even remotely concerned that Mattie's mother was sleeping every night with Tommy and Judy's father. It didn't bother them in the least. We'd anticipated a lot of angst and intense confusion.\n\nEncouraged by that, after considering how easily they'd already accepted our closeness, Mercedes and I sat them down and talked about mommies and daddies and how we would like it if I could be Daddy to all three of them and Mercedes could be the Mommy for all three. I told Tommy and Judy their Mother was in heaven watching over them forever, but explained how Mercedes would be their \"Mommy\" to take care of them every day. Judy and Tommy accepted the new arrangements very easily. They'd already formed a close bond with Mercedes, and she with them.\n\nMattie, whose father had been absent since before her birth, wondered only if I was going to be her Daddy, would I would still read stories to her like we'd been doing for the past few weeks. When she heard I would read even more stories and that I'd never leave, she was all in.\n\n* * *\n\nWe expected telling our parents was going to be traumatic and we anticipated a ton of advice to slow down, think things over and come to a rational decision\u2014stuff like that. We expected there wouldn't be any outright opposition, but maybe a little resistance...\n\nSince they were closest, we went to my Mom and Dad's home first.\n\nMoments after Mom and Dad gave all three children some quick hugs, Mattie, Tommy, and Judy escaped to the backyard. Tommy and Judy wanted to show Mattie the sandbox and swing set Dad built for my two kids back there. That left Mercedes and me to accept a glass of Mom's lemonade and sitting down for \"the talk\" we knew was coming.\n\n\"Mom,\" I said after taking a deep swallow of lemonade, \"This is Mercedes,\" I said by way of introduction. \"We're going to get married,\" I added.\n\n\"I told Matt I didn't really need to be introduced to you,\" Mercedes chimed in before either Mom or Dad could frame a response. \"We've already met, actually, Lea, in a video chat years ago\u2014Matt introduced us, then,\" Mercedes continued. \"Do you remember?\" she asked my Mom sweetly.\n\nMom was taken aback. I was sure she'd been about to ask some very searching questions but hadn't been able to get them out. She looked Mercedes over very closely. \"Ahhhh ... no, honey, I don't think...\"\n\n\"How 'bout if I was holding up a pair of fancy handcuffs ... hmmmmm?\" Mercedes asked merrily. \"...Or how about a nice little strap-on ... that you left behind from your first trip...?\"\n\nMom blinked, then comprehension struck. \"Oh, crap!\" Mom blurted in consternation. She blushed a really interesting shade of red almost instantaneously.\n\n\"The girl in the mirror!\" Dad exclaimed. He was grinning.\n\nDad got up, stepped over to Mercedes and shook her hand formally. \"Very nice to meet you, young lady,\" he said. There was an approving note in his voice. Dad was on our side. He proclaimed us a nice couple and went out to the kitchen to get the pitcher full of lemonade for refills.\n\nWhen Mercedes revealed she was half Cheyenne, Mom and Dad were amazed. After Mercedes told how her dad always said he'd counted coup on a smiling Irish lass, and her mother maintained she'd captured a Cheyenne warrior for her very own, Mom and Dad were thoroughly enthralled. After dinner, when the three kids pleaded with my Dad to read them stories, it was clear my parents were as captivated by my Cheyenne maiden and her baby girl as I was.\n\nComments about the relationship thing being too quick or rushed never developed. Our body language seemed to reassure Mom that everything was going to be just fine.\n\nBy the time all the dishes were washed and put away that evening, Mom and Dad were working hard on getting their third grandchild to call them \"Grandma\" and \"Grandpa.\" They succeeded with hardly any effort at all. Mattie's paternal grandparents had always been distant and she hardly knew them, so she adopted Tommy and Judy's without even thinking about it.\n\n* * *\n\nA week later, we flew up to Philadelphia so Mercedes could introduce me and my children to her parents. I thoroughly enjoyed meeting them. When I first met Mercedes years ago, I'd thought I would love getting to know them and that proved to be correct.\n\nAfter some concern on their parts\u2014Mercedes' divorce decree was less than two months old when she came to find me\u2014they accepted me and my children with open arms. We had a great time.\n\nI had a suspicion Mercedes actually talked with her mother, Fiona, about the three weeks we spent with each other way back when. It seemed she'd probably had done it shortly after Mercedes left me behind, because Fiona gave me a very thorough hugging before we'd even been introduced. \n\nBy the time we left to go home, Tommy and Judy had another set of doting grandparents intent on spoiling them rotten.\n\nMercedes called her ex-husband's parents to see if they wanted to see Mattie, but they declined. So be it.\n\n* * *\n\nAll five of us flew up to Anchorage to talk to Tommy and Judy's maternal grandparents. On the aircraft, all three kids had a fantastic time, quickly capturing the hearts of all the flight attendants in first class. All three got extra snacks, goodies, and lots of attention throughout the flight. While the attendants babysat, mom and dad held hands and napped.\n\nIt went very well with Bruce and Judy, though I'd been concerned beforehand. They both knew Sharon had charged me with finding a mother for the two children, and someone for me to love and be loved. They were surprised I'd done it so quickly, but they took Mercedes in and made her feel welcome without reservation.\n\nAll in all, introducing ourselves to all the in-laws went very, very well.\n\nMercedes and I fit together like two interlocking pieces of a puzzle, and we had since our beginning. We'd never had a \"first date\" and had gone from \"just met\" to totally involved, in nothing flat. Since she'd returned, we immediately slipped back into a full relationship, watching ourselves carefully for problems the whole time. We couldn't find any.\n\nEncouraged, Mercedes and I were married a whole three months after Mercedes and Mattie surprised my children and me in the pizza restaurant.\n\nCHAPTER NINE\n\nBeing married to Mercedes an adventure, but a comfortable one. We agreed on so many things, but we always had things to talk about. Whenever we found a difference of opinion, we always discussed alternatives and decided on a path together. Sometimes, I adopted her slant on a particular difficulty and sometimes she came over to my side.\n\nHonestly, the worst things that plagued us were times when Mercedes got into a \"what might have been\" mood. Mercedes sometimes worried that she should not have been so adamant about keeping her dancing career so sharply in focus. She wondered where we'd be in our relationship if she hadn't left me behind to pursue her career.\n\nI took a more pragmatic view. First, what happened, happened. All of that was history\u2014we couldn't change it. Second, we had three small children to love we wouldn't have otherwise had, and there was no way we could ever regret our children.\n\nWe both knew, even if she didn't want to admit it, if she had not stayed with her dance troupe, she'd have come to regret it\u2014perhaps bitterly\u2014later. Any deep relationship we'd explored back then might not, probably WOULD not, have survived and we wouldn't be together now.\n\nIn spite of everything that had happened to us, we were married now, and we had three wonderful children. We found ourselves deeply in love and having a wonderful time with our blended family. We fit together beautifully and settled into our roles easily. Mercedes was Mom to all three children and I was the Dad. We worked together to establish boundaries and rules within the family. We taught the children, by living it, what a loving relationship was like every day.\n\nOne of the things we did, was to make certain Mercedes and I had date nights every so often\u2014actually, quite often. We were newly wedded, after all. My mom and dad (AKA Grandma and Grandpa), loved having the kids over for a sleepover and a couple of times, for a whole weekend.\n\nWhenever they weren't available, we had a pair of sisters take care of all three kids. Many years ago, I'd sold a horse, Ginger, and another young mare to two young teenage girls by the name of Ingram who still lived not too very far away. Amber and Pamela were in their late teens now\u2014just the right age for babysitting a trio of adorable young children, and we took advantage of them a lot. We paid them pretty darn well too.\n\nThe kids often stayed in daycare during the week. I wanted them to, and I got Mercedes to agree. The daycare we chose was fairly small with a great caretaker to child ratio so there was plenty of excellent supervision. We thought it was important for our three kids to meet, play, and work on projects together with other children. I think Tommy, Judy, and Mattie all had a great time, judging from the stories they recounted to Mercedes and me. I was pretty sure they learned a great deal about getting along with others and working in concert with them too.\n\nThings were settling down very nicely. Actually, things were just darn near perfect.\n\n* * *\n\nThe overhead bank of TV monitors said the 3:18 flight from Philadelphia had landed, on time even. Mercedes and I were waiting beside the carousel where the luggage should be making its presence known shortly. We were waiting for Mercedes' latest recruit for her dancing school. She told me only that it was a woman she knew from the dance troupe who was also retiring.\n\nMercedes had retired from touring after an ankle injury, and a lengthy recovery. The injury was severe enough so that while the injury did heal, the ankle was never again going to be strong enough to withstand the constant stress of on-stage dancing plus the enormous number of hours of practice. So now she taught, and she was having a great time doing it.\n\nI was absentmindedly watching departing passengers down the long concourse checking in for their flights and wondering why all, or at least most, of them didn't used the check-in kiosks set up all over the place. It didn't make sense to me to wait in long lines rather than use the touch screen method, but, whatever!",
        "\"Hey ... did someone say this is national 'Fly Naked Day'?\" asked a soft voice behind my left shoulder.\n\nI flinched, my shoulders hunching defensively as I turned around to find\u2014\n\n\"Stephanie!\" I gasped. \"My God, what're you doing\u2014?\" I flicked a glance at my dear wife who was smiling smugly at me a couple of steps away. I'd been set up. I'd deal with it later, when we weren't in an international airport's main concourse.\n\nI turned back to Stephanie, took her hands in mine and held her at arm's length. A few years had done nothing to diminish the effect the blonde, big-boobed, and leggy woman had on me, and every heterosexual male in sight\u2014plus a fair number of the women too.\n\n\"I should have known,\" I remarked, and I truly should have. Come on, a new dance instructor, and from Philadelphia...? I just wasn't paying attention.\n\n\"It's great to see you,\" I told Stephanie and gave her a kiss on her left cheek. \"And ... who's this?\" I asked, moving a long step backward. There was a little Stephie-clone hiding behind Stephanie's left leg, which I noticed was bare beneath a skirt that came only to mid-thigh. Clearly Stephanie still had a streak of exhibitionism running through her.\n\n\"This is Daphne ... Daphne, honey, can you say hello to Matt?\"\n\nI squatted down on my haunches to get on eye level with the little girl, obviously Stephanie's daughter. Smiling, I held out my hand. \"I'm very happy to meet you, Daphne. Did your mother tell you she and I were friends from a long time ago?\"\n\nThe little moppet nodded hesitantly, then grinned. Without warning, she closed the distance between us and threw her arms around my neck and gave me a hug. I wasn't expecting it, so she almost toppled me backward. I had to save myself with my left hand thrust quickly behind me on the fake marble floor.\n\nSettled again on my heels, I put my hands on her waist and tugged her toward me to return her hug and give her a little kiss on her cheek. \"So ... let's do the question game all grownups do,\" I suggested. \"How old are you...?\"\n\nShe held up four fingers, smiling happily.\n\n\"What's your name?\"\n\n\"Daphne Mercedes Walton,\" she answered brightly. I shot a quick look up at Mercedes.\n\n\"You know that lady?\" I asked, pointing at my wife.\n\nDaphne nodded vigorously. \"Aunt Mercedes...,\" she replied.\n\n\"I think Aunt Mercedes needs a hug, too, don't you?\" I told her.\n\nThe little four-year-old nodded again and raced to Mercedes. My wife bent over to pick up the youngster and the two of them hugged tightly.\n\nWhen I stood up, Stephanie walked into my arms, wrapped her arms around my waist and gave me a more thorough hug than she had before. \"I missed you, Matt,\" she murmured. She kissed me lightly on the lips, pulled me tight against her body, then deserted me and moved to Mercedes. The three females did a three-way hug for a long moment.\n\nA warning buzzer went off and the luggage carousel began moving along its serpentine path, carrying all the passenger's belongings around for retrieval. Stephanie pointed out her and Daphne's bags as they moved past so I could snatch them and wrestle them off the belt, and then onto the floor beside us. Stephanie and Mercedes grabbed a large suitcase each and rolled them off toward the exit while I pulled two huge duffle bags\u2014fortunately they had wheels on them\u2014behind me. Little Daphne shrugged on a tiny pink backpack decorated with bunnies and trudged along with us to the temporary parking.\n\nI loaded everything into the bed of the pickup, climbed into the driver's seat, and adjusted how my Glock was riding in its belly-band holster. The airport wasn't supposed to be a place of danger, but\u2014stuff happens!\n\nI started the engine and turned on the air conditioning. Mercedes and Stephanie were already engaged in what appeared to be the start of a long, long conversation and Daphne was listening intently.\n\n\"So ... where we headed?\" I asked. I was sure I already knew.\n\n\"The guest room's already made up,\" Mercedes replied serenely.\n\nI had known where we were going\u2014just wanted it verified.\n\n* * *\n\nAt home, Daphne was reunited with Mattie and introduced to Tommy and Judy who welcomed the new girl without hesitation. Tommy did ask if I had any friends with little boys, but he didn't seem too upset.\n\nIn moments, all four of the children ran outside to the playground we'd had built in the backyard. Mercedes and Stephanie continued their marathon chat and I sat on the deck to watch the children play.\n\n* * *\n\n\"Talk!\" I told Mercedes when she couldn't escape me any longer. We were in bed and I'd rolled her onto her back and was leaning over her after a lengthy make out session.\n\n\"About Stephie?\" she asked innocently.\n\n\"About Stephie!\" I said firmly. \"What's going on?\"\n\n\"She needed a job, I had a job for her, she's like my little sister\u2014you know that. I love her, I wanted her to work with me in the studio, she agreed, she came down here, and I want her to live with us so I can have my sister around all the time, okay?\"\n\nThere was nothing threatening in the whole run-on explanation. She'd clearly rehearsed it beforehand. Actually, none of it surprised me. But\u2014\n\n\"The last time you brought Stephanie here to the ranch, you did it to drive a wedge between you and me,\" I told her bluntly. \"Is there some reason you feel a need to separate us now?\"\n\nMercedes chuckled. She wasn't disturbed at all. She put her hands on the back of my neck and pulled me down for a long kiss.\n\n\"That didn't work out so very well back then, did it?\" she murmured softly. \"You and Stephie connected pretty darn well, and we ended up like ... like the three musketeers, huh?\"\n\nWell, not really. The three of us had been involved sexually for two of the three weeks I'd spent with Mercedes back then\u2014wild, steamy sex that went on virtually all day, every day. I didn't remember Alexander Dumas ever having the musketeers engage in sex with each other.\n\nI shifted uneasily in the bed and Mercedes captured my right leg between her two thighs and held me still. \"Mercedes,\" I began, \"...we're married now, not single, unattached and ... I don't know what ... irresponsible, maybe? We can't just...\" I was reassured Stephanie wasn't there to push Mercedes and me apart, but the alternative was a minefield that needed to be negotiated also.\n\n\"Shhhhhh,\" Mercedes whispered in my ear. \"Stephie came here to work with me in the dance studio and I love her to death and I want her close. She'll be a good friend to you, too, honey. She's not going to come between us in any way ... understand?\"\n\nI didn't answer immediately. I was still mulling over her reply because I wasn't quite sure\u2014\n\nMercedes slid closer to me and wriggled the hem of her nightgown above her waist. Before I knew it, she was guiding a hard-on I didn't even know I had between her pussy lips and deep inside her.\n\nI never did get to ask any more questions.\n\n* * *\n\nIt worked. It worked very well. We became Mercedes' version of the Three Musketeers again, reprising our relationship from years ago, sans the sex. Mercedes and I were a typical married couple, and Stephanie was our house guest. Sort of, anyway. For a guest, Stephanie sure did a lot of the work around the house.\n\nWe divided all the chores and other things that needed doing around the house. We didn't have a working ranch, so the tasks we had to complete outside the home were minimal. I usually took care of them, but I was often joined by the women.\n\nMercedes and Stephanie would leave every Monday, Wednesday, and Friday morning in Mercedes' SUV en route to the dance studio for the adult classes they taught. In the late afternoon on Tuesdays and Thursdays, they held classes for younger girls (and a few boys) after school let out.\n\nI would fix breakfast for our four children, get them dressed for daycare if I needed to go into the office that day, or in play clothes if we had a \"free\" day. If the weather cooperated, the kids would spend most of the morning playing outside. They liked me outside on the deck, where they could see me and where I could watch them as they played. Occasionally they even dragooned me into playing whatever pretend character fit the fantasy of the moment.\n\nAfter an early supper on Tuesday and Thursday, I'd take all four of them in their dancing clothes into the studio where they'd join dance classes of other children in their age group. Tommy wasn't terribly enthusiastic about dancing classes, but the three girls were totally enthralled with learning how to dance with Mercedes and Stephanie. Tommy put up with it though, and even seemed to enjoy himself some of the time.\n\nWe settled into the routine but, at the same time, we made sure things were fresh and spontaneous. Mercedes' and my date nights expanded, more often than not, to include Stephanie coming out with us to go to dinner, dancing, concerts or to just to a movie now and then. We got involved, on a minor level, with some of the local charities and movements, too.\n\n* * *\n\nWe were invited to a ball at the home of Kyle Mulvane whose purpose was to raise money for the preservation of a number of local historical sites. The joke was that the Mulvanes owned half the southwest side of the city and had options to acquire the remainder. They were, in their own estimate (and most everyone else's also) movers and shakers in the big city. I had an invitation for myself and one, but I wangled another one so Stephanie could go with Mercedes and me.\n\nThe event was black tie optional. Mercedes and Stephanie wore full-length evening gowns. The color of Mercedes' was \"sea foam\" (I'd have called it a greenish-grey if I'd been asked). It was an off-shoulder number with a slit down the lower left-front that exposed her long, slender leg as she stepped. It looked fantastic on her.\n\nStephanie's was a beautiful royal blue that went well with her blonde good looks. It had a deep V that showed off her cleavage to maximum advantage. There was a slit in her dress to show off her leg on the left side.\n\nI was the ugly duckling of our little trio in a black tuxedo jacket and pants\u2014with a white formal shirt and black bow tie and a cummerbund along with a pair of patent leather Wellington boots. I liked my cummerbund; it felt good around my waist ... and it helped hide the print of the Glock 38 I was carrying in a belly band holster.\n\nI'd thought of leaving the .45 caliber weapon at home, but I actually felt naked without it. I'd had a concealed carry permit forever and I felt even stronger today about self-protection and protecting all the children and women in my extended family circle. One of the first things I did after returning to Texas from Alaska had been to get my carry permit renewed.\n\nThe three of us got a lot of notice when we walked in, mostly because the two women I was escorting were utterly gorgeous in their gowns. We captured a lot of attention when we began dancing, too.\n\nMercedes and Stephie loved to dance. They'd danced professionally for years, of course, and now taught dancing in their own studio on the west side of the city. More than that, they wanted me to enjoy dancing also.\n\nI knew enough to be able to shuffle my feet around and hold on to an attractive woman while she danced even before I met Mercedes and Stephanie, but they took everything to a much higher level in their short visit when we'd been together before. Though I considered myself born with the proverbial two left feet (and those tacked on backwards), my two ladies coaxed me into greater and greater efforts, the longer we were together.\n\nThey had, in fact, developed a new step, designed for two women and a man to dance together comfortably. I thought of myself as just a prop, there to showcase Mercedes' and Stephanie's dancing skills. They could probably have used a manikin from a retail store in my place, but I was ambulatory and could move myself onto the dance floor, so they chose me.\n\nWhat we were doing was adapted from a routine they'd danced while touring with the troupe, the three of us were always in motion and always in close contact. After months of practice, I was just beginning to have enough confidence in myself on the dance floor to start having fun holding one woman and then the other in my arms while we whirled around each other in a complicated pattern. It was fun and I enjoyed it immensely. Who wouldn't? I was the focal point around which two lovely women were dancing.\n\nApparently, we looked good doing it, too. We attracted more interest the longer we danced. I hadn't realized it, but we'd worked our way very close to the low stage where the band was playing. When the number was over, I saw the orchestra leader smiling down at us and clapping silently, motioning behind me. When I turned, the dance floor for a good distance around the three of us was clear of other dancers. There was some nice applause for our efforts.\n\nI bowed as best I could. Mercedes and Stephanie curtsied and smiled prettily. We strolled off the dance floor in the direction of the bar. This was all fun, but dancing with these two was hot work!\n\nThe girls were welcomed into a knot of men and women at one end of a long bar. Mercedes and Stephanie were being received with broad, admiring smiles and were getting tons of compliments. I made myself useful and went to the other end of the bar to get two glasses of white wine for them and a bottle of (flavored) water for myself. As the bartender finished pouring the wine, I heard an uproar from where I'd left my two dance partners.\n\n\"Lesss see 'em, bitch! C'mon ... ya been flashin' 'em all night, showin' off, so now...!\"\n\nMy head snapped around. Stephanie was being accosted by a short, rotund man who was all hands and aggressiveness. I caught a quick glimpse of him grabbing at her breast, catching the upper part of her gown and ripping it downward. Stephanie's right breast, and then her left, popped into full view.\n\nI was in motion before I formed the thought to get over to her. I must have run, but I never recalled doing it; time did that trick it has of slowing down in a crisis. Abruptly, I was behind and to the right of the man assaulting Stephanie. I had an instant to see Stephanie's eyes on me. She didn't appear to be under any stress\u2014she was just waiting for me to make things right again.\n\nGrabbing the guy by his right shoulder, I yanked him around with my left hand and buried my right in his gut, doing everything I could to punch my fist all the way through his spinal column. As he jackknifed, his chin met my right knee coming up hard and fast.\n\nHis upper body was knocked back upright and he kept on going over backward until he stretched his length on the hard floor, bleeding and already comatose. I started to go after him; I was going to apply the toe of my size eleven Wellingtons to his rib cage, but it just wasn't necessary. He was clearly down for the count.\n\nI wheeled around, found Stephanie and took her protectively in my arms. She nestled there, wrapping her arms tightly around my waist.\n\n\"You alright, honey?\" I asked softly, pulling back so I could look her in the face.\n\nShe nodded and put her cheek against my chest and held on even tighter. After a moment, I withdrew a few inches, pulled off my tuxedo jacket and put it around Stephanie's shoulders to hide her nakedness.\n\nThere was considerable pandemonium all around us. Some people were asking plaintively what was going on and others were answering, giving accounts of what they'd seen. Not everyone, of course, had seen it from the beginning. The explanations were beginning to wander significantly from what had actually happened. I looked around for Mercedes. She was at my right elbow, looking concerned and a little worried.\n\nMercedes held up her phone. In this age, they're carried even into formal ballrooms. \"I've got it all on video!\" she yelled triumphantly. \"I got everything. Short And Pudgy there tried to rape Stephanie right here on the floor, and I got it all on camera!\" Her voice cut through the madness and shut down all discussion for a long moment.\n\nI nodded my understanding and urged Stephanie around, captured Mercedes with my eyes and we began moving towards the broad set of stairs leading up to the door we'd come in. We were intercepted a few feet short of the first step by a very tall, very beefy, guy in a tuxedo he barely fit into.\n\n\"Mr. Mulvane would like to see the lady's phone, sir,\" he said to me matter-of-factly. He motioned off to his left. Standing against a tall column was the Mulvane in question. His expression was not that of a welcoming host. Judging by the look on his face, he was anxious, angry, and worried by turns. Mostly, though, he was angry\u2014totally pissed off!\n\n\"No!\" I answered shortly, but I don't think belligerently. \"...Not goin' to happen!\" I started around the guy's right\u2014it was like going around a small mountain\u2014but he stretched out his right arm and put his hand on my chest to stop me.\n\nHe looked at Mercedes and made a \"gimme\" gesture with his left hand while holding me at bay with his right. I moved and the man-mountain's left hand grabbed my shoulder to hold me in place.\n\n\"Look down!\" I growled gutturally. I was not in a good mood.\n\nHe didn't bother. He was certain he had control of the situation.\n\nI prodded him in the belly with the Glock I'd drawn from its holster. \"Look ... DOWN!\" I warned him.\n\nHe did finally and, with more intelligence than I'd given him credit for, instantly understood the situation had changed. He wasn't actually in control of a damned thing.\n\nMy trigger finger was inside the guard and all I had to do was apply a tiny squeeze. Glocks have the safety built into the trigger itself and I had already pulled through that tab ... any more pressure on the trigger and it would start throwing big slugs into Mr. Man-mountain's body.\n\n\"It's angled upward,\" I said conversationally. \"If I start shootin', I'm gonna put nine .45 caliber slugs right through your goddam heart ... understand me?\"\n\nHe nodded. His hands went up slowly to show me they were empty.\n\n\"You have a gun?\" I asked.\n\nHe nodded. \"Small a' my back,\" he explained.\n\n\"Take it out,\" I told him, \"...slow ... your left hand ... thumb and forefinger only!\"\n\nHe did exactly as I ordered, moving very carefully.\n\nI reached across my body with my left hand and took the big semi-automatic from his unresisting fingers. I backed up a couple of paces, keeping the muzzle of my weapon pointed at the man-mountain the whole time. There were gasps from behind me. It was the first time most of the crowd saw I was holding a gun on the man.\n\n\"On your belly,\" I ordered. He didn't hesitate, prostrating himself immediately.\n\n\"Stephanie ... Mercedes...\" I motioned the two women around to my left and dropped my right arm so the muzzle was aimed down. My trigger finger was finally extended along the frame under the slide so a sudden finger spasm wouldn't fire the weapon.\n\nMercedes, Stephanie, and I were up the steps, across the lobby, and out the door in nothing flat. I dropped the bodyguard's weapon on a credenza in the lobby as we strode by. The SUV we were driving was brought to the entranceway by an unsuspecting valet, and we drove quietly away.\n\nThings went smoothly for us after that; no one tried to accost us. Three city police vehicles whipped past us a couple of miles down the road, all going in the opposite direction at high speed. They paid us no attention at all, though.\n\nOur trip to McReady Airfield continued without incident. I'd owned the airfield for almost a year, but I'd left the name intact. Lots of weekend flyers, who were my best customers recognized the place by the old name, and they used it because they knew it.\n\nMinutes after we arrived, our SUV was in its parking slot next to the hanger and we were aboard the twin-engined Cessna we'd flown into the city. I started a takeoff roll while Mercedes and Stephanie were still getting buckled in. Forty-two minutes after we were wheels-up, we had the plane already chocked and tied down. A moment later, we were safely inside our ranch house/castle. With the security system we had, NO ONE was going to bother us there.",
        "* * *\n\nThat didn't end it, of course. By the next afternoon, detectives in the big city had worked out the identities of all the players. They coordinated with the county Sheriff where we lived to come interview us. In fact, there were enough of them to make up a six-vehicle caravan which made its way inside our gates and up to the main house.\n\nThe Sheriff himself came to our front door, literally hat in hand. He knew my dad had been sheriff of this county through some of its most turbulent years and he was aware most of the old guard in the county remembered those times and my dad very well. When the current sheriff saw Dad standing outside our front door, the sheriff was all courtesy, deference, and polite requests.\n\nInside, Stephanie, Mercedes, and I gave the city cops written statements we'd already prepared and answered their questions for as long as it appeared they were sincerely trying to document the facts of what happened. We also gave them a copy of the video Mercedes had captured on her phone.\n\nThe moment the most junior detective asked a \"gotcha\" question, one of our attorneys cut the questioning off with a curt remark to the effect that the three of us would not answer any more questions, now or ever. He made it stick, too. The young detective got a number of irritated looks from his fellow cops.\n\nOne of the official entourage turned out to be from the District Attorney's office, and it appeared she knew all of the team of lawyers I'd had flown in that morning. When a detective shot a questioning glance in her direction, she shrugged. There was nothing she could do.\n\nShe knew my lawyers were good\u2014they were better than good, they were outstanding\u2014as well they should be, considering how much I was paying them. I hoped I was going to get my money's worth.\n\nAnother group from my team of attorneys was already in the DA's office in the city, demanding to know why the idiot who'd attacked Stephanie wasn't already behind bars and charged with attempted rape, and assault. He probably should have been charged with terminal stupidity, too, had there been such a charge.\n\n* * *\n\nThree weeks and four days later, it was all over. Doofus turned out to be Mr. Mulvane's youngest son. Mulvane tried to defend his boy's behavior, and even shift the blame to Stephanie. Our lawyers jumped on that, letting Mulvane's and the city's attorneys just what they'd do to them in court for victim shaming. Our lead attorney appeared to be salivating at the thought of tearing them a new one in a public arena.\n\nThe Mulvane team backed off and once the backtracking started, it was a snowball rolling downhill. Under pressure, the District Attorney charged Doofus with three felonies and an assortment of misdemeanors. It turned out there were a dozen videos of the incident in addition to the one Mercedes shot, and none of them showed anything favorable to the Mulvanes.\n\nDoofus eventually pleaded guilty to a single charge of attempted rape and was sentenced to six months in jail, avoiding hard time in a Texas prison, but he still collected a felony conviction on his record.\n\nThe DA had initially wanted to do the Mulvanes a favor and charge him with a misdemeanor, but our attorneys made sure the local media were well informed of what was going on. The DA hadn't won his office by very much in the last election and he preferred to not have a well-to-do adversary (me) backing a law-and-order opponent next time around.\n\nThe DA's office tried to make something of me having \"brandished\" a weapon, but we countered with a suggestion the huge bodyguard's actions constituted unlawful restraint and use of potentially deadly force was entirely appropriate. A video surfaced showing the behemoth planting his right hand on my chest and that ended any implication I might have acted imprudently. If the man-mountain had actually confiscated Mercedes' phone, that would have opened up another big can of worms\u2014theft, obstruction, and tampering with evidence, were among the worms mentioned. Wisely, the DA backed away from any suggestion he might even contemplate filing against me.\n\nMy lawyers were disappointed. They'd seen a chance for a ton of billable hours if the DA had actually moved forward.\n\nStephanie's suit against the Mulvanes for creating a hostile environment\u2014the attorneys said something like that, but I wasn't listening too closely\u2014was settled immediately out of court to avoid even more adverse attention. Suddenly, Stephanie was a millionaire, and Mulvane even paid her attorney fees.\n\nOur team of lawyers went back to Dallas, I quit shelling out vast quantities of money for their services, and peace descended on our ranch. I foolishly thought that was going to be a permanent condition.\n\n* * *\n\nA few weeks later, my Mom and Dad came by to collect all four kids\u2014Stephanie's little girl, Daphne, had long since been adopted as one of my parents' grandchildren\u2014and the whole group was on a long weekend camping trip in Mom and Dad's big RV. I didn't count sleeping in a nice bed inside a substantial RV as \"camping,\" but, each to his own. Judging by the video chat we'd had earlier in the evening with them, the kids were all having a ball.\n\nMom and Dad couldn't stop smiling. Having four grandkids all to themselves without any of the parents along was Mom and Dad's idea of heaven.\n\nI was in bed and, since Mercedes wasn't with me, I was perusing the cable provider's premium movie channel lists for movies to DVR and watch later. I was relaxing and enjoying not being \"on call\" for any child-sized emergency that might erupt down the hall without warning.\n\nThe hallway door opened and Mercedes glided in. She surprised me; I'd thought she was in the master bath and should have come into the bedroom through that doorway instead of from the hall. I was doubly surprised when Stephanie stepped in the bedroom right behind my wife.\n\nBoth women were dressed in diaphanous black peignoirs that didn't conceal a darn thing on their luscious bodies. I made sure the coverlet was far enough up to hide my middle because there suddenly was a small tent building there.\n\n\"Matt ... dear ... WE have a problem!\" Mercedes announced in serious tone of voice.\n\nI could almost hear Scooby Doo saying \"Ruh Roh\" somewhere close by.\n\nMercedes sat on the bed on my right side and confiscated the universal remote control. Stephanie established herself on the bed to my left but didn't make any attempt to get close to me. She simply sat there looking radiant and luscious. Okay...\n\nMercedes started the DVD player, scrolled through the options and selected a clip labeled simply, \"Stephanie,\" and clicked on it. Whatever she was about to play, she'd had it prepped and ready.\n\n\"Watch this!\" Mercedes commanded.\n\nIt was the video she'd taken of the \"Mulvane Incident.\" I was well acquainted with it. I watched as Doofus capered around in front of Stephanie for a moment and then reached up to put his hand on her upper chest. A second later, he grabbed the top of her formal gown and ripped downward. Stephanie's big breasts spilled into view.\n\nShe didn't open her mouth to scream, though others within range of the phone mic surely did. Suddenly, I flew into focus from stage left, grabbed the guy and quickly beat him down. I did like the way I'd done that. Enough force to get him off Stephanie, but I'd held back when I could have stomped him into the ground. I thought it showed I was finally maturing.\n\nAll of my attorneys liked what I'd done, too. It left no wiggle room for the authorities to charge me with anything. The clip ended with a view of me sliding out of my jacket and settling it over Stephanie's shoulders to hide her bare breasts.\n\n\"Did you see it?\" Mercedes demanded with a lot of emotion.\n\nI wasn't sure what she meant, other than the obvious. \"I've seen it before, yes,\" I answered noncommittally. I had no idea what Mercedes' point was.\n\nMercedes started the video over. \"See what's happening here, Matt ... watch Stephie's face ... watch her eyes...\"\n\nI did just that as Mercedes played the clip in slow motion. I didn't see much of anything I hadn't seen before. I shrugged, reluctantly\u2014I really wanted to add something to the discussion\u2014but I had to concede defeat. I didn't know what it was my wife wanted me to see.\n\nMercedes crawled up on the bed and I made room for her, shifting under the blanket closer to Stephanie, who was on top of the blanket and therefore, safe. My wife pointed the remote at the player again and restarted the video in slow motion.\n\n\"You see...?\" Mercedes almost whispered. \"...Our Stephie isn't afraid of that guy ... she's not even looking at him; she's looking at you coming to save her. See...?\"\n\nWell\u2014that seemed to be about right. Stephie wasn't watching Doofus' face, or looking down to watch what he was doing to her dress. She did, in fact, seem to be looking to where I suddenly came into view. She didn't even flinch while I disposed of the creep. When I stepped away from him and turned back to her, all she did was tilt her face up to look me in the eye, put her arms around me, and tuck her face into my chest.\n\nMercedes backed the video up to where Stephanie was looking up into my face and froze the image there. My wife leaned over and kissed my lips gently. \"Baby,\" she said softly. \"...Stephie wasn't afraid; she knew her knight in shining armor was coming to save her ... and you did.\" She paused for a moment to let her words sink in. \"Honey ... see how she's looking at you...? You can see it. My \"sister\" is in love with you ... and you know it,\" she finished.\n\nI grabbed a big lungful of air. I couldn't deny what Mercedes said.\n\n\"...And here's what Mrs. Stanley got with her phone...\" Mercedes remarked, pre-empting anything I might have said to defend myself.\n\nMercedes played another very short clip; it only showed me shedding my tuxedo jacket quickly, draping it over Stephanie's shoulders and hugging her close to console her. When the player reached the end, Mercedes backed it up and stopped it with me looking down at Stephanie.\n\n\"...And darling,\" Mercedes murmured, \"...you love her, too!\"\n\nI didn't know what to say. What she said was true, though I'd been denying it to myself for a long time. I couldn't refute what Mercedes was telling me. The video was incontrovertible.\n\n\"Honey...,\" I began in a strangled voice, \"I would never\u2014\" I stopped, glancing at Stephanie. I didn't want to hurt her, but I had to reassure my wife\u2014\n\n\"Baby,\" I started over, \"...I just could not ever cheat on you. I wouldn't do that to you...\"\n\nMercedes had been busy while I tried to sort my way through this minefield. She'd shut off the DVD player, dimmed the lights in the bedroom to a warm shade of twilight, and then stood up to undo her peignoir and let it slide down to pool around her ankles.\n\nMovement on my left caught my eye. Stephanie was removing her peignoir also, and smiling happily me as she did it. The two nude women slipped beneath the coverlet and cuddled close to me. Stephanie pillowed her head on my left shoulder and on my right, Mercedes snuggled against me, then braced herself up on her left elbow.\n\n\"Baby...,\" she whispered softly, \"I know you would never cheat on me ... you don't have it in you, honey...\"\n\n\"But...,\" I protested.\n\n\"Shhhhhhhhhhhh. I know...\" She kissed me and patted my chest reassuringly. Both women kissed me on each cheek.\n\n\"Look at us, Matt, baby,\" Mercedes said serenely. \"No one here is cheating on anyone ... no one is betraying someone else ... no one is deceiving anyone ... no one is going behind somebody's back ... it's all right out in plain view ... right?\" Mercedes cooed.\n\nStephanie rose on her right elbow and leaned in to kiss me on the lips. When I didn't object, she did it again, longer and more sensuously this time. \"I do love you, Matt,\" she whispered. \"I have since ... forever, and I always will.\"\n\n\"See there?\" Mercedes murmured from the other side. \"She loves you, I love her, she loves me and I love you, and you love me ... and you love Stephie ... don't you, honey?\"\n\n\"I ... I do, yes,\" I admitted, \"but...\"\n\n\"And since you caused Stephie's divorce, we just have to make all this right ... you can see that, right?\"\n\n\"I didn't\u2014hey, wait! How did I cause...?\" I protested. I hadn't even been there.\n\n\"...Because he wasn't you ... and didn't know how to be you,\" Stephie said softly. \"...And I didn't even know I was looking for you the whole time. It was all very unfair of me, but I didn't know, so Danny never had a chance. I was so sorry about that, but it was too late for him and me from the beginning...\" Stephie said softly, regretfully. \"...But now I'm here with you and Mercedes, and I promise you, we're going to be the most loving and the happiest three people in the world...\"\n\nI took her at her word, and I accepted that Mercedes meant what she said also.\n\n\"But...\" I took a deep breath. I let it all out in a long sigh of defeat.\n\n\"Do you know how complicated this is going to get...?\" I asked rhetorically. Neither of them was listening to me, but I didn't mind, considering what their hands were doing under the covers...\n\n\"Mmmmm hummmmm,\" Mercedes mumbled cheerfully from my right side. \"Yep,\" Stephie chimed in from my left, \"...but we'll work our way through it, baby. It'll just be wonderful...\"\n\n* * *\n\nAnd mostly, it was. We had our spats\u2014both women were strong, spirited, individuals and I was known to have some headstrong tendencies myself\u2014but we made an ironclad agreement always talk things out and especially to never let things fester. We never went to bed angry. Some nights we stayed up pretty darn late, but we ultimately resolved everything before the lights were turned off.\n\nWe made love, the three of us all together, or sometimes just two of us. When we made love as a trio, it seemed to be right for two of us to make love together to the third\u2014and then rotate things around until all three of us were sated. I still loved to please a woman with my mouth, so while I was doing that, the other girl was taking care of the kissing and stroking above\u2014and then we'd switch. When we were in the mood for some good, old-fashioned raunchy sex, we took care of that too\u2014quite often, as a matter of fact.\n\nWe made a determination the three of us needed lots of time with each other, probably more than a couple did. We solved that dilemma by allowing Mom and Dad, or our babysitting teenagers, to babysit the four children frequently. My parents loved all four of the children, and wanted to see them often, and for longer and longer periods.\n\nWhen Mom and Dad needed a rest, or had commitments, we enlisted the services of Amber and Pamela for babysitting duties. They were well paid, and they loved our kids to death.\n\nWhen Pam went off to college, and Amber succumbed to the charms of a local boy, marrying him in a traditional June wedding, they referred us to other girls in the area who would keep the kids for us overnight or for a weekend now and then. There was, in fact, a never-ending supply of babysitters and we used them extensively.\n\n* * *\n\nBefore the first of the kids started grade school, I adopted both Mattie and Daphne. Mattie was named after me; Mercedes' husband never knew that, but he wouldn't have cared much. He'd never wanted children and couldn't be bothered to be a father. He agreed to release all parental rights without having to be coaxed. Daphne's ex agreed to the same thing, partly because he'd met a woman and felt he should concentrate on having a family with her. He didn't have the money to visit Daphne regularly and their relationship died a slow death.\n\nI was surprised when Stephie, and then Mercedes wanted to have more babies. I thought four children was plenty; they convinced me through discussion, and less aboveboard means, how wrong I was. Stephie had another little girl, and Mercedes had a boy a couple of years after we became a loving trio, then Stephie gave us a boy and Mercedes, another girl.\n\nI loved all of them. My life is filled with the love of my ladies and all the children around us.\n\nEPILOGUE\n\nI looked down the slope and saw my nineteen-year-old son, Tommy, and two of the older girls coming up to the big house, probably for supper, though they were a tad early for that. Mercedes held out a refilled glass of iced tea to me and we all three settled back in our porch furniture to enjoy the coolness of the early evening.\n\nTommy had grown up to be a brawnier version of myself, but one could see his mother in the shape of his nose and the seriousness in his eyes on occasion. Seventeen-year-old Mattie was a cute, vivacious clone of her mother, Mercedes, and eighteen-year-old Daphne had all of Stephie's grace and beauty, and her big breasts too. Tommy and Daphne attended Texas A&M already and Mattie was starting there in the Fall.\n\nMy daughter, Judy, wanted to be a pediatrician and she was in pre-med at TCU, but home with us for a few weeks between terms. Judy was out in the backyard supervising all four of the younger children playing there. I could hear their excited squeals and shouts.\n\nWhen I was a teenager\u2014younger than our older children were today\u2014my Mom and Dad had allowed me to stay on my own down in the house the trio of our kids just exited. When it came time, I'd convinced Mercedes and Stephie that doing the same for our older children was a good way to promote responsibility and resourcefulness and usher them into adulthood gradually. I thought my idea had worked quite well.\n\nThe four of them had set up housekeeping\u2014there were plenty of bedrooms in the latest version of the house down there\u2014and it seemed everyone was happy. The children had a degree of independence that they cherished, and it gave us adults a little space to raise the younger brood. Not having to listen to the latest incomprehensible craziness of whatever was called music in their generation was a distinct plus in my book.\n\nI watched Tommy, Daphne, and Mattie climb steadily up the asphalt toward us. The plowed field where I'd run myself into condition was long gone, of course. It was just grassland now.\n\nThe two girls and Tommy were arm in arm. They stopped. Tommy and Mattie turned to face each other very deliberately. Young Mattie reached up to wrap her arms around Tommy's neck and proceeded to kiss my son very thoroughly. When they released each other, Daphne pulled Tommy to her and put her own version of a lip lock on Tommy.\n\n\"Well ... crap!\" I exclaimed. What our children were trying to tell us was unmistakable.\n\nThe young adults were moving again. Tommy had his right arm wrapped around Mattie's upper body and his left around Daphne. The young women had their arms wrapped just as securely around him.\n\nMercedes chuckled beside me. \"I told you he'd figure it out sooner or later,\" she said, leaning across my body to talk to Stephie.\n\nStephie's tinkling giggle answered Mercedes. \"Took him long enough, huh?\"\n\nEvidently, I'd been a little blind to some things going on around me.\n\n* * *\n\n\"Dad...,\" Tom said to me as the three of them walked up to the porch. He wasn't defiant so much as he was earnest. The girls gave me a kiss on the cheek and stood waiting. They were smiling gently.\n\nI looked at the three of them. I tried for a baleful expression, but I couldn't make it work so I gave it up.\n\n\"You all understand how danged convoluted and complicated everything's going to get, right? I asked looking them all in the face in turn. I was looking for some embarrassment or chagrin, but I didn't find any.\n\n\"Yes...,\" they said in unison. They smiled again. The girls mounted the steps to link arms with their mothers. \"But we'll always have our mommies and you to help us over the rough spots, Daddy,\" Mattie said quietly and confidently.\n\nI let the air in my lungs rush out. There was no sense fighting a stacked deck.",
        "\"Well ... get inside and get washed up for supper,\" I said, standing and moving to front door. I embraced Tom and each of the young women as they passed by me into the living room.\n\nI watched them as they disappeared inside. I sighed. I really had not ever wanted them to grow up, but\u2014there it is.\n\nMy two lovers, my wives, came to me, holding me in their arms for a long moment and kissing me over and over. After a while, I opened the screen door and ushered them inside. I closed the screen door behind me and walked around the house to find our babies out in the backyard. I wanted to hug and play with them before they grew up too.\n\n* * *\n\nI have met and loved four women in my life. One betrayed me, two left me behind before reentering my world, and one left me a widower. If there is anything that I've learned from them, it's that life just keeps marching on and it's a heady ride. You better grab on and hold tight because the twists and turns will throw you if you aren't careful.\n\nTHE END"
    ],
    "authorname": "Longhorn__07",
    "tags": [
        "loving wife",
        "romance",
        "cheating wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/flyover-country-ch-04"
}