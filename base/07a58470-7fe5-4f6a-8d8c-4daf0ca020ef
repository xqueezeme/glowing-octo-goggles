{
    "title": "The Change",
    "pages": [
        "PROLOGUE\n\nThe creature sat, crossed-legged on the ground. It had been a long time since it first came to this realm. A very long time. It had enjoyed killing many humans throughout the centuries and planned to continue savoring the taking of life for a long time. They were so easy to break down and destroy. Finding someone that thought they were a pure, good soul and then watching that same pathetic human kill and eat a fellow captive... The creature shivered in pure pleasure. It took months to wear down the strongest of them and the creature enjoyed every second of it.\n\nTime was meaningless to it. It couldn't die; not naturally. It could be killed, however, and was forced to move from one land to the next when its pursuers were too close.\n\nThere were others like it and if they banded together, they could conquer again but so many things were different. They hid themselves out of fear: fear of each other and fear of what might happen if they gathered en masse.\n\nSo, he hunted alone. Quietly. He'd been in this new place for nearly a year, building up his base of power. The longer he corrupted the land, the stronger he became. He killed periodically but mostly captured and tortured.\n\nHe had a few lesser beings with him -- demons he found over time. He bound them to him with blood and rituals. Dark magic. He was strong and growing stronger.\n\nSomeone was hunting him - a foe from another time. He was not afraid. A single enemy meant nothing. The ones that were powerful enough to take him alone were long gone.\n\nThe fire pit in front of him spit and crackled. Part of the last human's leg had fallen into the fire. He'd give the rest of them the remains and they would eat it or live off of what they could in their pen underground. Some were starting not to care any longer.\n\nThe creature lay back against the tree, savoring its dead coolness. His eyes closed as he thinks back to the many battlefields and spoils of war he'd enjoyed over the years. Centuries ago he was on the frontlines of the assault, boiling the blood of his enemies where they stood against him. Times were different now. The original host was scattered with no way back and no way to call for reinforcements. Only one method existed to reopen a portal but the cost was too high.\n\nSuddenly, his eyes flew open. The fire had gone out, snuffed out by no natural breeze. The black lines on his face are pulled into horrendous figures and shapes as he frowned in concentration.\n\nThe creature reached into the pit to pull out the leg. His black, jagged fingernails scrapped off the bits of flesh and fat remaining. The bone breaks easily across his thigh and he casts the pieces on the ground next to him.\n\nIt takes a moment to read the bones. What he sees there makes his own flesh crawl. The bones can't say clearly what is happening but they never lie. Something in the way they were arranged tickles a memory at the back of his head but he can't remember why. Whatever it is, it terrifies him.\n\nSomething else was coming for him. After a moment, the creature whistled shrilly through decayed teeth and a high pitched cry answered him. He would find the source of this and deal with it before it found him.\n\n<br> CHAPTER 1\n\nI work in a small office as the IT guy - mainly programming and grunt work when it comes up. It's a pretty good place and I enjoy the work. I've been a computer nerd since I was a kid and I taught myself everything computer related: fixing computers, programming, some networking... everything. I never seemed to bother with college and I only have vague ideas about trying it out some time. I just find that I can teach myself better with real world issues.\n\nI liked to read a lot and played tons of games (yes, I was a D&amp;D nerd) when I was growing up so I was pretty chunky. The ugly glasses and bad fashion sense didn't help my image but I blame growing up in the 80s and not having parents that really cared one way or the other. I mean, seriously. Parents shouldn't let their kids out of the house in a tent for a t-shirt and glasses larger than their face.\n\nNow, though, I keep in shape by running occasionally and eating somewhat healthy... ish. I got tired of being fat when I was out of high school and decided to do something about it. Along the way I learned I enjoyed it. I really like the feeling of running flat out until I'm exhausted. It's like I'm testing my limits and finding out how far I can go... and then if I can go further the next day. I could still stand to lose a little extra weight but I'm doing well.\n\nOnce most of the fat went away I learned that I inherited my parent's good looks. I'm no show stopper but I do well and I'm told I have a boyish face. I'm thinking of growing a beard but I had a traumatic experience with \"face pubes\" when I was younger so I'm a little reluctant. What if it looks like I rolled around in pubic hair with my face slathered in glue?\n\nI'm keeping in shape and I enjoy my job. I think I'm pretty smart as far as that goes. I know enough to get by but mostly I understand there is so much I don't know. I also have a healthy sense of curiosity. Most of the times I will actually look around me when walking -- up at tall buildings, on the ground around me, at other people walking, everywhere. You'd be surprised at what's around you. Case in point - walking up a steep sidewalk I noticed a half-naked creepy old guy standing at his window (slightly below street level because of the incline) staring at people walking by.\n\nSo, I'm happy except for one thing - relationships. I'm shy. No getting around that - remember me growing up a nerd? I don't faint when a woman looks at me but I also can't build up the courage to start a conversation. When I was younger, I once spent 20 minutes at a bar, goading myself into asking a pretty girl if I could buy her a drink. That didn't work out so well. I've gone out on some dates and have had some experience with women but I never seemed to find what I was looking for - or she didn't and the relationship never started.\n\nSpeaking of working up the courage to ask someone out - I have a crush on my coworker. She's maybe 5'7\" (to my just-under-six) with a lean body, shoulder length brown hair. She's no super model but, really, who cares? You'd take a second glance if you were a guy and she walked past you but you'd mostly think, \"Huh, she's cute.\" Not drop-dead gorgeous but she is self-confident and has this little half-smirk on her face most of the time, like she just thought of a hilarious dirty joke and she's about to tell everyone. We both have a sarcastic sense of humor and neither of us has a problem making fun of the other.\n\nWhile I like my job I have to say she definitely makes it that much more enjoyable. I've thought about asking her out but she's my coworker and I have no idea how she feels about me personally. Also, I'm a guy so I'm stereotypically blind to \"signs\" and I temper what I think are hints with the knowledge that I'm probably being overly optimistic about her. I probably have PTSD from the girl at the bar.\n\nFast forward to now - a Thursday in February and I've been looking forward to Friday all week. It seems like all of our printers decided to take a dump at the same time and I already hate printers.\n\nI got in some time after 7:30 and my coworker, Sarah, isn't in yet but it's no big deal since our company is pretty easy going. I start the day tackling some of the more minor projects while I wait for her to show up.\n\nSarah arrives a little after 8 and grunts in reply to my \"good morning.\" It's not freezing but she's wearing a pretty heavy coat. I check her out through pure reflex and today she's wearing thin slipper-like shoes with gray and black stripped pants. She has a cute little rounded butt. Not big, really but its not flat like a board and I appreciate that. Her jacket spoils the view a bit since it's so big. She seems withdrawn and doesn't want to talk so I go back to cursing at printers.\n\nOur area is small (2 cubicles) and stuck in a corner so there's some privacy. Usually we make fun of users and trade jokes back and forth but today she's acting strange. She's shifting around in her chair a lot, not concentrating and occasionally glancing my way. My ego would like to think she's fallen madly in love with me but, more likely, she's sick and is working up to tell the boss that she's leaving for the day. However, she doesn't leave and she keeps quiet all day. The one time I ask if she's okay she just shrugs her shoulders and tells me she's fine. She sounds like she's coming down with a cold but I leave her alone.\n\nThe day drags on to 3 o'clock and it's mostly a standard day - a little bit of computer maintenance and some programming here and there. I do all of the computer work today since she's not feeling good. She doesn't ask me to do it but I don't mind; there were plenty of times she's worked on my projects so I could get a break. From what I can see by glancing, I think she's just moving her mouse around every so often and looking up websites. I see the Mayo Clinic website once or twice so I was right about her not feeling good. Whatever it is, it must be something other than a cold if she has to look it up.\n\nFrom 3 to 4 o'clock my routine falls into doing a little bit of work and then looking at the time in the bottom-right corner of the monitor. Every 5 minutes. I swear to god.\n\nPeople slowly file out and I can hear our warehouse guys turning off the heavy machinery. We do large scale printing and we're shutting down the warehouse for three days. Our company sent out two huge orders so we're flush until next week. I hear they had the warehouse working overtime on the projects and they're letting them have a three day weekend to make up for some of the extra hours.\n\nThe time gods (Cronos? Chronos? Or was that someone else?) hear my prayer and 4 o'clock finally hits. Just as I'm about to get ready to go, Sarah finally talks to me.\n\n\"Hey.\" She says (startlingly me - she's been so quiet all day). \"I need you to help me out with something.\"\n\n\"Sure. What'd you need?\" At this point I'm mostly glad she's even talking to me. I was half worried she was pissed at me for something. I stand up, assuming she needs me to look at something on her desk or computer.\n\nShe hesitates. She's still sitting and I do my best not to look down her shirt but I can see the tops of her breasts. She doesn't have a big rack but they look like a nice handful. The shirt she's wearing is a brown top with a somewhat low neckline. Her skin is smooth and white with a sprinkling of freckles. She's got a nice neck - a tad thin and a little long. I appreciate the sweep from her shoulders up to her chin. It's graceful. Now that I see her, she does seem slightly paler. Almost flushed.  \n\nShe stands up, too. Her tongue darts to the corner of her mouth and she looks over my shoulder for a moment before looking back to me. \"I'm trusting you here.\" she says. \"Come with me for a second.\" I wrinkle my eyebrows. That's not like her at all. She grabs her jacket and puts it on before turning to walk. She's awkward with the coat and it almost seems like her body isn't moving the way she wants.\n\nI follow her. \"Lead the way.\" I answer lamely. Is it something with her car? I hope not. I can ... I can probably change the oil in a car and probably get the tires off but that's about it.\n\nRather than going outside, she heads out to the warehouse through a little path towards the back and makes for the stairs leading up to the second floor. We keep some old files and other junk stored up there. So, yeah. Odd. She doesn't talk as she's walking. Me? I'm staring at her ass. Actually staring. I'm not glancing out of the corner of my eyes here; my eyes are locked onto her ass. I don't usually do that but I can't help it. Those pants are even tighter than I thought.\n\nMy dick notices. I have a raging hard-on. The boner is not fueled by some fantasy of her taking me to some secluded spot and ripping my clothes off because my brain hasn't even made it past staring at her ass. Her pant legs make suush-suush-suush noises as she walks. I never understood how women (and some men, I suppose) could wear such tight clothes all the time. I'm not complaining in this case, mind you. Although, I thought the pants fit her slightly loosely earlier?\n\nAs she starts up the stairs I find myself having a hard time keeping a decent thought in my head. Did she always have such a fine ass? Have I never noticed? Her jacket is slightly too large and covers the top half of her ass cheeks but ... they're so round and firm looking.\n\nGod. Now I'm imagining pushing her against the top rail of the staircase and taking her from behind - slamming my dick hard between those lovely cheeks. I'm almost drooling from the thought of it. My pulse is racing and I have to keep swallowing and wetting my lips. I think my hands are shaking, too.\n\nWe reach the top of the stairs so I try to stop staring at her so hard. It's actually physically difficult to pick my head up and stare at the back of her head. I have to force myself to keep my hand from my crotch. All I want to do is rub myself. Or grab her and do... something with her. My mind can't seem to decide.\n\nThe top of the stairs look out to the whole warehouse. I'm glad everyone's gone because I'm somehow sure they'd be able to hear my thoughts from a mile away or they'd wonder why I have a baseball bat down my pants leg. I tell myself to get my shit together and keep my eyes above her shoulders.\n\nAh, but then I see the back of her neck and that sets off a whole new chain of thought. The area that sweeps up from the shoulder to the side of her neck is taunting me. My brain tries to dig out old school knowledge and all it can come up with is tendon- something-something. I can picture myself kissing her there and nibbling a little. I'm drooling again. I want to fuck her so bad and I'm not even one of those guys. You know - arrogant guys that think all the women want them. I watch porn. I like porn. I like women. I just don't stare at every single woman out there and immediately think of banging them. Damn. My balls are throbbing and aching.\n\nI push myself through the fog and try to not think of any part of her body. She leads me to the middle of the room near one of the main shelves and then turns around. It's hot up here but she keeps her jacket on. It looks like she's about to break out in a sweat and she still sneaks glances over my shoulder. I half-turn to see what's going on when she talks again.\n\n\"Swear to me, \" she starts. \"Swear to me that this stays here. We've worked together and I trust you. You don't make fun of me for this and you don't tell anyone else about it. I need some help and you're it.\" I'm taken aback by her seriousness. So much so that I forget about all the different positions I'd like to have her in right now.\n\n\"Yeah, of course. I swear.\" I assure her. It's true. I'm not an asshole. I'm sarcastic and I give people a hard time but I know my limits and I usually know how much people can take and when not to push it. \"What's going on?\" I was really, really starting to hope this would turn into some kinky secret-sex-at-work thing but apparently not. Damn. I'll have to masturbate so many times tonight to work this ache out of me.\n\nShe's nervous. She stares at the floor, at the ceiling and then back to me. Obviously she's working up her nerves and having a hard time telling me whatever she needs to tell me. My brain starts in with thinking of pushing her back against the wall before I shut it down and think about a white square on a black background. It sounds stupid but it keeps me thinking about something safe. I'm starting to worry about myself and I think a trip to the strip club is on the menu for tonight.\n\nShe stares straight at me this time and then takes off her jacket. I can see little beads of sweat below her hairline. She wets her lips. My eyes follow her tongue in slow motion and I automatically imagine her going down on me. Fuck. White square. Black background. White square... It's been a long time since I got laid but this is ridiculous. Now I'm getting hot and I'm not wearing a damn jacket. I can feel my cheeks burning as if I'm blushing like a... like a... like a what?\n\n\"I need you to look at something. You stay where you are and you look at it and tell me what it is. You don't touch me. You don't get near me. You don't laugh at me or make fun of me. Deal?\" Whatever it is, she must be upset because her voice goes husky at the end. Is she going to cry? If so, why am I getting more turned on? Is it her voice or the thought of her crying?\n\n\"I said I'd be good and I don't even know what's going on. What...\" I falter. I seriously do want to just grab her, rip her shirt off and suck on her nipples. I mean, they're right there. Is she even wearing a bra? Is it my imagination making me think I'm seeing her rock hard nipples pressing against her shirt? I swallow and try again. \"What is going on?\"\n\nGreat. Now I'm staring at her chest. White square, black background. White circle... circle? I see the swell of her breasts pressing against her shirt and her nipples look like they're trying to break their way through. They're somewhat flattened against whatever the fabric is of her shirt and, yeah, she is wearing a bra. I think she picked the wrong ones because they're too small for her. Her breasts are making the outline of the bra that much more visible. Damn. Fuck a \"decent handful.\" Her tits are firm and large. C-cup? I'm bad about bra sizes. I swear to god her cleavage is deeper than it was earlier.\n\nShe doesn't notice me staring or doesn't care. She just looks at me, wets her lips again and turns around.\n\nThen, I see it. She doesn't need to do it but she pulls her pants down ever so slightly (maybe just a couple inches) and pulls her shirt up an inch or two. She leans against the shelf next to her with both hands and has her head down.\n\n\"What is it?\" She asks. \"I've been feeling fucked up all day and I felt something back there earlier. What the fuck is it?!\" Her voice is still husky but I don't even notice. I'm staring at it.\n\n\"It's... Jesus Christ.\" I take a step forward. There is a nub just above her ass crack. I take that back. It's more than a nub. It's about 3 inches long and has hair on it. Thick brown hair.\n\nI watch as it wriggles slightly back and forth. \"Jesus Christ... I think it's a tail!\"\n\nShe shudders. Or shakes. I don't know. I'm transfixed. It's not just the tail. She's got a dark patch of hair running from the small of her back up into her shirt. And that thing *is* moving. Slightly. Side to side. Wait... is it a little longer? I can almost see her crotch and I'm praying that her pants fall down. I somehow figured she'd be the kind of person to show her bones more - you know how some skinny people's hip bones show a little bit? She's not one of those people. She's padded. Strong looking. How in the world did she fit in those pants?\n\nWait, what's wrong with me? She's got a fucking tail growing out of the base of her spine! I hear myself yelling that in my own mind but my eyes keep following the curve of her back and the way her hip is shaped. Now I notice that the hair on the small of her back seems darker already and more spread out.\n\nSarah turns her head and looks at me from the side. \"A what? Are you... are you f... fucking kidding me?\"\n\nI can't help myself anymore. My hard-on has not gone away, her ass is right there and I can't think straight. This smell... What is it? It's musky and it makes me grind my teeth together. I take the two steps left between us and grab the base of her nub... tail... whatever with my right hand and... and I pull her against me.\n\n\"HEY!\" she yells. \"Don't...!\" She starts to turn toward me, hands still on the shelf.",
        "I pull her hard against me and her ass slams into my crotch. My left hand grabs her left shoulder to keep her in place. I push her down with it but I can feel her strength and she only moves because she wants to move. She moans and shudders a little more. I lean into that beautiful neck and allow her to stand upright a little. \"Don't... what?\" I say through clenched teeth. I want to bite something. Her. Her neck. My heart is racing and I feel... not angry... agitated. On edge.\n\nThis isn't me but I don't care. It just feels right, right now. Sarah squirms but not to get away. Her pants have fallen down a little further and now it's just her panties between me and her cunt. She's wearing black panties but the bottoms of them are stained a darker color.\n\nThe bulge in my pants settles in-between her ass cheeks and her breath catches a little. She rubs herself on me and I hear her panties rasping against her skin. I somehow notice that the tail ... her tail... I'm holding is longer and thicker now. The hair growing out of it is long and bushy. I can feel the muscles of her shoulder and neck moving under my left hand. It feels like she's broken out in a cold sweat. I feel tiny pinpricks on my hand and her shoulder turns a slight shade of brown, like her hair.\n\nMy mouth is right by the corner of her neck. That sweet, sweet spot. I lean in further and bite ever so gently. She moans louder and rubs against me harder. Her panties catch on my pants and they pull down a little. Her hair seems thicker. I bury my face in it and find her ear to nibble on. The tips of the ears are pointed but I don't notice.\n\n\"You want me to stop?\" I breathe in her ear. I know the answer. I just know it.\n\n\"Noooo...\" she moans as she rubs her ass up and down against my dick.\n\nThat's all I need. I grab the bottom of her tight fitting shirt and pull up. She puts her arms up to help. The shirt is tight and I have to pull hard. That thick line of hair runs all the way from her ass up to her shoulders now and I watch for a moment as it creeps up even more. I break her bra strap getting it off. My fingernails leave light red tracks down her back briefly before they fade away. Her breasts bounce as they're released. They're bigger now and I see the lines from where the edge of the bra was cutting into them.\n\nShe grips the shelves near her. They creak and vibrate under her grip. I grab her right tit with my right hand and she's larger than I thought. My fingertips brush coarse hair as I reach for it. I tweak the nipple and she cries out wordlessly. My left hand dips down to the bottom of her stomach and she brings her hand down on mine to push me down and into her. She wants me in there. The hair around her crotch is so thick. I almost pull pubic hairs when I reach my fingers in.\n\nHer pants fall down to her ankles. I feel thick hair through my fingers. She's hairy. Really fucking hairy and already really fucking wet. It's not sweat but her pussy juice wetting down the hair around her crotch. I find her clit and start rubbing. Her juice has made her slippery and my hand glides smoothly around in circles even through all of that hair. I move the tips of my fingers down to her pussy lips and the base of my hand rests her clit. I push against her and rub my hand up and down.\n\nThe shelf creaks some more as she moans and her fingers dig into the wood like it was cold butter. Her nails have lengthened and blackened and the trail of hair on her back has reached the top of her neck. I don't even care. Her tail is ... wriggling... against my stomach. I don't know why none of this bothers me. It just doesn't seem important. The fingers on my left hand dive into her wet cunt and she screams out, \"Christ!\" It's guttural but I can still understand her. Her teeth are different. Sharper? Longer? Her lips look darker. She was wearing light red lipstick earlier but now they look more like the color of blood.\n\nI'm working my fingers in and out of her and she can't stand still. She's so wet. \"F...\" she tries again. \"Fuck me! I want your cock in me! Fuuuuuck!\" Her voice is thick like her tongue is swollen. She can't decide between pushing her ass against my crotch or shoving my hand deeper into her. I don't care. Right now I call the shots. I'm not the aggressive type but right now I'm doing what I damn well please.\n\nI kneel down and pull her panties down to her ankles. Her legs are corded with muscle and turning brown as thick hair grows out of her. She keeps trying to stand on her toes. I can't get her pants off with her shoes on so I yank them off and throw everything behind me. Her pussy juice is slowly making its way down her legs. I lick one of the trails from her thigh up to her ass. Normally I'd be slightly disgusted at the thought of getting hair in my mouth and between my teeth but I want her so bad and she tastes incredible. I feel the muscles in her leg as I dig my fingers into them. They're rock solid and, like her shoulder muscles, I can feel them shifting around.\n\nHer pussy is right there in front of me but I can barely see her pussy lips through the hair. Hair? It's too thick for that. Her ass (which is definitely larger than it should be) has a fine growth of brown hair and the inside of her thighs are black from thick hair already wet from her juice. I grab her ass with both hands and dig my face in-between her cheeks. She's hot and wet and hairy and I love it. I can barely control what I'm doing - licking and sucking and biting and she's screaming for more.\n\nShe tastes salty and she's slick with her own juice. My tongue slides around her pussy lips and dips into her. I can feel the muscles in her vagina tense and relax over and over. My nose, mouth and part of my chin are wet from her. I bite her pussy lips and she pushes hard into me - almost knocking me down. She's strong but my fingers are curled around the front of her hips and I hold on.\n\nMy cock is bursting out of my pants. I feel the top pressing hard against my belly button as I'm crouched down. It wants release but I'm not ready yet. It doesn't occur to me that my dick is longer it should be.\n\nThe hair on her ass is getting thicker. I can feel it growing through my fingers. I hear popping noises and look up to see the skin on her back is moving. Rows of muscle around her spine and shoulders are growing. The hair has spread across her entire back now.\n\nHer legs are longer and her toenails are growing. She pushes herself up onto her toes and I have to adjust myself to her new height. The pinky toes on each foot are moving back and to the side -- her feet are rearranging themselves.\n\nShe's not moaning anymore - she's growling low in her throat. I spread her ass cheeks and push my tongue into her pussy. I can't tell if my tongue is longer or the position is different but my tongue is deeper in her now. My teeth ache and the need to bite something grows. My hands are hot and itching as I'm squeezing her ass. The hair on her body is thick but luxurious. I pull some of it between my knuckles as I knead her ass.\n\nFinally, I can't take it anymore and I pull my face out. She's got her own face turned to look at me and it's different. Longer. Her teeth are sharper and she's breathing in ragged deep breaths. I can see the muscles on her arms bulging - muscles she never had before. They're corded but not too bulky. I stop fooling myself about the hair on her body. It's fur covering her now. She does this whine and growl at the same time and I can barely hear the words \"more\", \"please\" and \"now.\"\n\nI look down at a sudden pain in my own hands. They've changed. Like her. The hair on my arms is getting thicker as my own fur sprouts out. My hands are lengthening slightly while the nails turn black. It doesn't hurt anymore. I'm not in shock but something is coursing through my body and it feels good. I feel confident. Powerful. I'm still me at the core but I feel like I'm at the top of the world. My shirt is tight and moving against my body. I try to pull it off but end up simply ripping it in half without even trying. I'm covered in dark brown fur the same color as my hair. My own muscles are hardening and growing. I can feel movement at the base of my spine and I know what's happening.\n\nMy pants rip off easier than my shirt and my body adjusts. Calf muscles bulge and my fur is nearly exploding from my body.\n\nMy cock draws my attention. I used to be about seven inches and decently thick when I'm hard. This is twelve or over and fat. Wait, what they hell? It's attached to my body by a line of skin? My dick seems slightly more red but otherwise basically the same. Pre-cum dots the tip of my dick and it bobs in time to my heartbeat. I watch brown fur creep up the thick skin covering my cock and a part of me thinks, 'sheath.'\n\nSarah whines again to get my attention. She's beautiful. Her tail is an arch of fur and it curves halfway to her shoulders. I think she's holding it in that position on purpose. She's tall now and I'd guess at least seven feet. Her body is thick and strong but slightly padded in some parts - her ass looks soft enough to jiggle a little but her arms look sculpted - at least what I can tell through the thick coat of fur. The tips of her ears show through her hair and she's standing up on the front of her feet. I can see thick black padding on the bottom of her feet and the joints of her toes are long enough for her to stand comfortably on now.\n\nI can only assume I look about the same but I'm distracted and not focusing on myself.\n\nShe bends over and puts her hands on the ground with her legs wide. She's spreading herself for me. She turns her head and looks directly at me. Her face is now a muzzle with a black nose and black lips. Her eyes are pleading with me.\n\nA growl bubbles up from deep inside me. I grab her neck and push her head down to the ground. She automatically raises her beautiful furry ass higher in offering. The hair around her crotch is nearly black from her own juice. My left hand holds her down at the neck and I step around to stand behind her. I let her go and bend over, supporting myself with my left hand on the ground.\n\nMy right hand guides my dick into her. It glides in and I growl with teeth bared. I can see my nose pushing out and turning black. It burns a little but is nothing to me. Sarah is all. I push all the way into her and she yells something that could be \"YES!\" but it comes out as some excited barking sound. She pushes back into me and I hit her cervix. Her claws dig into the floor and they cut furrows from the wood.\n\nI drop my right hand to the floor and mount her properly. She's mine. My legs and feet are longer and the position feels good; natural. My own muzzle is complete. I bite hard into her neck. She almost purrs in satisfaction. I think she's moaning and growling at the same time and that's how it comes out.\n\nThere's no gentleness or slowness to what I do next. There's no asking if it's okay or if it hurts. I fuck her. Her head is down on the ground submissively and she pushes into me every time I thrust. I slam into her and the floor groans. Our claws are carving grooves into the wood. I go fast. The animal in me demands it. Later there will be time to explore. For now our blood is up and we just rut.\n\nHer pussy makes wet slapping noises every time I slam into her. My sheath rubs against her wet pussy lips in interesting ways. I feel her pussy tight around me. My claws have cut hand and foot holds into the floor for me and I'm able to push harder. I feel the wood splintering but the bottom of my feet are thick with padding now and I feel no pain.\n\nI lick her ear and the side of her neck as I'm fucking her. Sometimes I bite her and sometimes it's hard enough to draw blood. When I do, it's hot and salty and makes us both push harder and growl. She tries to pick her head up to look at me and I growl at her. I'm able to hold myself completely up with just my left hand so I push her head down with my right. I try to say \"stay down\" but it comes out as a deep growl. She actually gets more wet and pushes herself harder into me.\n\nI stand and, in the same motion, put my hands around her waist to pick her up. She's surprisingly heavy but I'm so strong. I'm still inside her. I shove her against the wall and it shakes. Her sweat soaked furry breasts flatten against the wall and I start pounding up and into her again. My dick rubs against the slightly ribbed, small g-spot near the front of her pelvis in this position. She's panting and whining and moves herself slightly for me to be in a better position.\n\nSarah reaches around to the back of my head with her right hand and grabs onto me. We're both grunting with the effort and I'm near to orgasm. I shake her hand off of me and grab the hair (fur?) on her head with my right hand and yank her back from the wall a little. She puts her hands on the concrete wall in front of her to brace herself. My left hand reaches across her furry chest to grab her right tit as my rhythm speeds up.\n\nWe're both so close. She's whining and gasping and grunting and I'm trying to hold back as long as I can but I'm too close.\n\nSuddenly, she orgasms. It hits her hard and she breaks a hole in the concrete wall as her body shakes. The claws on her feet nearly break through the floor. I follow shortly after and everything goes white. I think I yelled or... something but I'm not sure.\n\nI feel my cum jetting into her and she buries my cock deeper inside her. She tries to kiss me. It... doesn't really work but we try. Mostly we lick each others muzzle and bite each other a little.\n\nWe collapse. I'm still in her and still hard but I feel like I ran five marathons nonstop. Her legs are jumping every now and again and we're trying to catch our breath. She licks me and I bite her ear somewhat gently.\n\nHer smell fills me: the fur, the sweat, her juice, her musk and just her. This is her. It almost overwhelms me. We don't try to talk. We just lay together, in the dark, now that it's late. The small windows above us show the dark sky and faint light from a nearby streetlamp.\n\nAfter some time I can feel something changing. The feeling is like someone tugging hard on my body in all directions. The fur is going and my muzzle is shortening. Hers, too. It works by degrees. I weakly try to move and end up just shifting positions against her. She pushes back into me and I stop moving. \"Don't.\" She says. \"Don't move. Just stay there.\" I can hear her. Her face is nearly back and the fur is almost gone -- it tickles my body as it pulls back into her.\n\nHer back is against my chest. I reach my arm around and cup her left tit possessively. She sighs and presses back into me. My head rests on her shoulder. She's so warm against me. Her breasts are large and I can't help but squeeze them. They're soft against my rough hands. Sarah moans quietly as I tease her.\n\nIn this position I can see my own arm and it's huge. I look like I've been lifting serious weights my entire life. I didn't even know some of the muscles existed. As I knead Sarah's breast, muscles ripple along my forearms like waves on the ocean. I feel like I could snap a steel bar if I tried hard enough.\n\nI bring my hand down to Sarah's stomach and I feel her abs. She's ripped and I guarantee she wasn't like this before. She looks like an Olympic level athlete. The sex made things a little hazy but I'm pretty sure her breasts have shrunk a little now that she's human again. Regardless, she's way bigger than before this all happened. D-cup or more. Probably more. Her whole body is bigger than she was before she changed which probably means I am too. It's hard to tell right now.\n\nI run my tongue around my teeth but they're mostly back to normal. My canine teeth are sharper than I remember and they feel more prominent. The teeth next to them feel slightly more sharp as well. All of them are straighter. I had a chip on a back tooth before but it's fixed now. Amazing.\n\nIts quiet out and we're both still naked but we're not cold. I don't know if it's the sex but my body temperature feels higher and I feel the heat of her body as well. Whispers of steam roll off of our bodies and into the air.\n\nMy leg is starting to go numb on the hard wood floor so I go sit in the corner to change positions. Sarah comes over and sits on my lap, against me. I automatically cross my arms around her. \"I'm yours.\" she says, simply. I don't know what to say to that but some of the wolf stayed - I feel like I would die protecting her and kill anyone that hurt her. I lean my head into her neck and kiss her gently in response.\n\nThe whole time I never lost who I was but the other feelings are still there. I feel like I could do anything. Face anything. I'm me but... enhanced. I could walk on my hands on the edge of a skyscraper without fear. My arm muscles flex in response and anticipation.\n\nI grew more conscious of Sarah's naked body against mine and I grow hard again. With her sitting on me, my cock goes straight out and rubs against her still dripping pussy. I bark out a started curse when I see myself. I was circumcised as a baby but I'm uncircumcised now and much thicker and larger. I never saw what size it made it up to when I changed but I'm guessing it didn't stop at twelve. The sheath is gone. I wonder if the sheath and being uncircumcised are related?\n\nSarah draws a deep breath and smiles lazily. Her voice is sultry. \"I think,\" she says, turning to face me. \"I think I'm ready for another round. Let's see if you still howl when you cum.\"\n\nShe turns around to face me, wraps her hand around my cock (did it double in thickness?) and closes her eyes. She guides me deep into her and I grab her waist. She starts out slow and brings herself up on her knees and then down again around me. Her ass settles softly against my thighs. She's leaning into me and pushing herself back every time she goes down. She covers my mouth with hers and we kiss while she fucks me. She moans into my mouth as I squeeze her ass with my hands.\n\nWe take our time this time. I don't howl when we're done but I've seemed to pick up the habit of growling.\n\n<br> CHAPTER 2\n\nIt's nearly midnight by the time Sarah and I are finished exploring each other. Most of our clothes are ruined. Her jacket, shoes, pants and panties are still in one piece but everything else is gone. Oh, my shoes are fine except they don't fit anymore. Nothing fits us anymore.\n\nI'd have to be measured to be sure but I'm definitely taller. It's a completely strange feeling. For years and years I was just under six feet tall and now everything is stretched out. I work my arms in various positions just to get the feel of them.\n\n\"Goddamn shoes!\" Sarah growls. \"I paid $150 for these fucking things!\" I laugh and she throws them at me. I would think that having my body suddenly lengthened would take some getting used to but I grab the shoes out of the air without thinking. She's not impressed. \"Don't laugh, fucker. You owe me a new bra and a new shirt.\"\n\nShe crosses her arms under her tits and scowls at me. It looks more like a pout and I smirk at her. \"You keep standing like that and we're going to be here for another couple hours.\" I tell her. She smiles and tilts her head, slightly confused before she realizes what she's making her breasts do.\n\n\"Fucking men. All the same.\" But she laughs a little while she says it. I haven't heard her curse this much before. I don't know whether it was the change or if I just never got to know her personality outside of work. I watch her turn to gather up her clothes and I get hard again. It's the bending over and seeing her ass up that does it. I clear my throat (that comes out as a small growl) and turn to get my things. My overeager cock eventually calms down.\n\nWith my clothes under one arm I slap Sarah's ass (it does jiggle slightly) with the other and we make our way downstairs and out. Thankfully our company is too cheap for security cameras except for the dock and that's not the way we go out. Sarah's breasts sway and bounce as she walks and I thank whatever gods are listening for everything that's happened this night.",
        "Even in the open air of the warehouse we're not cold and the concrete floor doesn't bother my feet. I stop for a moment and look at the bottom of my right foot. The skin is thicker under the ball of the foot, the joints of the toes and the toes themselves. It doesn't look like normal skin (it's slightly darker) but it's not black padding like a dog. I can still feel what I'm walking on but it's neither cold nor does it hurt my feet. They skin on those parts are almost like a callus. No wonder my hands felt rougher against Sarah afterwards -- they're almost they same as my feet.\n\nOutside feels no colder to me. It's February and we should be freezing but I'm not. Is it the sex? No, that was too long ago. I'm amazed that I don't feel uncomfortable or self-conscious about being naked outside. I don't have the sudden urge to run to the woods, jump over streams and murder a deer but I do feel better being in the open. I can see more and it's more open -- better chances to move in case of something happening and easier to see anything before it gets too close. Huh. Why would I think of it like that?\n\nI walk to my car, feeling the crunch of gravel under the new padding of my feet. It's almost like when you have your mouth numbed for dental work -- you can feel the pushing and pulling but it doesn't actually hurt. I know I'm stepping on some sharp rocks but I only feel them as something I'm stepping on. My toes curl around the larger stones and dig slightly into the ground.\n\nSarah follows me automatically. She doesn't walk to her car and she doesn't ask me if she should come with me. I barely notice how different that is. Just this morning we were coworkers. Now we're... something different. If she walked off to her own car and told me she'd see me in the morning I would be angry and tell her no, she's coming with me. That actually bothers me. She's her own woman; she should be able to do what she wants. But, there's this new part of me that's growling loudly. That's what's driving the possessive and aggressive feelings. She's mine! She needs to stay near me! I watch her back and she watches mine! How can we hunt and protect each other if we're not together? It's almost impossible to push those feelings down. They're primal.\n\n\"You smell funny.\" Sarah says. \"What are you doing? Whatever it is, can you turn it off? I feel like I need to bite something hard. Look, I have goose bumps from it. What is that smell?\" The hair on her arms and the rest of her body is standing at attention. I'm fighting with myself and she's picking it up from me. I put my anger aside and Sarah stops rubbing her arms. In any case, she's not thinking of going to her own car or going off by herself. Does she even notice that she's just following me without asking?\n\nI unlock the doors and we throw our ruined clothes in the back seat. There's a pause as I close the door. It should be awkward - we're standing in the middle of a dimly light company parking lot, naked with dried cum on us. But it's not awkward and it's not bothering me.\n\nShe's her. I look at Sarah. Not her tits, not her crotch but her eyes. She's looking back at me with a small look of apprehension. Her eyes are beautiful - gold tinged with green. I was pretty sure they were brown before. \"Are you...\" she begins. I put my finger on her mouth and tell her, \"Wait.\"\n\nTime slows as my awareness kicks in. I hear her heartbeat, strong and steady. If I focus I can hear a small suuush-zuu, suuush-zuu which I can only assume to be the blood moving through her body. I hear a much, much fainter heartbeat somewhere else. Is it my own? Why would it be fainter? I smell things - different kinds of car smells. I can tell they're different but I don't know how or what it means. I smell myself and I smell me on her. There are other scents around both of us but I can't tell what they are except that they're there.\n\nSuddenly, light flares and I look at the streetlamp on the other side of the street. The lamp hasn't brightened but I can see as if it was a cloudy day at 2 in the afternoon. I hear bushes rustling and probably about 50 feet away I see a rabbit's eye hidden behind branches. The faint heartbeat gets stronger. I can hear a rabbit's heartbeat from 50 feet away. So that's what that other heartbeat was...\n\nI close my eyes and take a deep breath of the cold night air. The crazy rush of smells and sounds calms down. I open my eyes again. Sarah is watching me with a half-smile on her face. \"You, too?\" she asks.\n\n\"Yeah.\" I say. \"Everything's different. I didn't answer you back in the warehouse. You said you were mine and I didn't answer.\" I step forward, settle my forehead against hers and close my eyes.\n\nI talk to her with my eyes closed. \"I don't know what happened up there. I don't know what made that happen or if it'll happen again. I didn't even have the balls to ask you out before today. I love you. I couldn't live without you now. I will be by your side forever. I don't own you but you're mine.\" I lean back and tip her head up with my fingers. \"And I'm yours.\" We kiss.\n\nI pull her close to me. Her tits press against my chest and I feel the hard nipples. I don't care if it's because she's excited or because of the cold air. My dick is hard and presses between us into the bottom of her stomach. My left hand goes to the small of her back and I pull her tight against me. My right hand goes between her shoulder blades and holds her tighter still. Our tongues twine and move rapidly against each other as we kiss. I feel her canine teeth and prick myself on them. We both taste the blood and she growls low in her throat. I feel small hairs stand up at the back of her neck.\n\n<br> Finally, we stand apart. She looks at me again. \"I... I was worried. I mean, I could smell ... something that made me feel safe and warm, but... Is that crazy? Just a bit ago I could actually smell something that made me know you loved me. Well... I didn't know that it meant that but I felt safe and happy and it felt like love somehow. I... I was still worried.\"\n\nShe puts her hand on my chest, near my heart. \"Whatever happened up there... Whatever...\" She lays her head next to her hand. Suddenly, she clenches her hand and I can feel her fingernails cut into me a little bit. The pain is remote. She looks up at me and her eyes are hungry. I smell something. Fire. Like a raging firestorm. Strong and hot. It consumes me.\n\n\"You are mine.\" She says. She reaches out, grabs the back of my head and pulls me down for another kiss.\n\n\"Mine.\" she whispers.\n\nSarah grabs my dick with one hand and pumps it slowly. I can feel her smiling through the kiss. She pulls back and leans over to kiss the head of my cock. I feel her sudden surprise. \"Wait... weren't you cut before? Well, fuck it. This is better, anyway.\" She pulls back the skin and brings the head slowly into her mouth. With her other hand she shoves me against the car and I hear the car creak and move on its springs. She's strong - so strong. If I had fought her off I could stand my ground but I'm beginning to believe I'm not the only one that could dent metal with my bare hands.\n\nShe goes down to one knee and takes more of me into her mouth. I grab her hair with both hands and close my eyes. She's pumping me with one hand while pulling her head up and down the length of my cock. Her tongue licks and wraps around me. Her teeth lightly brush against the head of my dick and almost cut. Up and down... I dig my toes into the ground and feel my toenails grip, digging lightly into the asphalt. Her tongue feels rough against me.\n\nUp and down, up and down. Her mouth is so wet and her tongue seems too long to fit in her mouth. We're rocking the car. I can hear the springs creaking rhythmically with Sarah's head. I'm close to an orgasm and she knows it. My hand tightens on her hair and she goes faster. Suddenly I'm over the edge and I cum. She stops moving her head but keeps pumping with her hand. I grit my teeth and my throat rumbles. Sarah swallows each jet of semen greedily.\n\nFinally, she pulls her head off. She looks directly at me and smiles, showing her teeth. They're perfectly straight and her canines ARE sharp. \"Mine.\" she says again. She puts her head down and cleans me off with her tongue, slowly, one part at a time. She looks up at me every time she licks up and she's making a very loud \"Mmmmmmm...\" noise. She could reach her nose with her tongue if she wanted to do it.\n\nWhen she's finished, she stands up and dusts her knees off. She stares at me with those hungry eyes and it smells like the world should be burning around me. \"All mine.\" I just look at her and say, simply: \"Yes.\"\n\nShe gets in the passenger seat and I notice I've left a dent in the side of the car where I was leaning. I guess we'd have to relearn our limits.\n\nI look forward to it.\n\n<br> CHAPTER 3\n\nI can honestly say I've never been in a car while naked - I haven't even had the pleasure of having sex in a car. I'm thankful I have cloth seats because leather would just stick and rub wrong.\n\nDo I put the seatbelt on? Why is that even a question when I'm naked but not when I'm clothed? Sarah is trying to figure out how to get her seatbelt to work with her new tits. The chest strap is annoying her and rubbing on her wrong. I have to bite my lip to keep from laughing but then I actually do bite it and I choke off a curse from the quick pain. She glares at me. Finally she fits the belt between her cleavage and leaves it alone.\n\nI have to adjust the seat and move it back for more leg room. I also pump my feet on the brakes and accelerator to get an idea of how my new body works in the car. The padding on the bottom of my foot grips the peddles more so that's a bonus. I almost break the shifter putting the car in reverse. The steering wheel shakes when I accidentally grip a little too hard.\n\nMy house (rented) is not too far away from work - maybe 10 miles. We're both lost in thought on the drive there. She stares out of the window and is feeling around her body lightly. I'm having a hard time controlling my dick simply because of Sarah sitting there naked. That and I can see her tracing her breasts, hip and thigh with her finger. She smells like hot sex and... something else that tightens around my heart. Her own innate scent, I think. It's like a fingerprint - unique to her. I'll never forget that smell for as long as I live.\n\nEven the way I drive is different now. Clouds hide the stars and the moon is a sliver but I still see clearly. Sarah has to remind me to turn my headlights on to keep up appearances. When I focus hard enough, time seems to slow down a little. I tried it while a bird flew in front of the car and I could see its wings flapping. Sounds are taking me longer to control - everything is too loud to my ears. The car tires roar against the road.\n\nJust as I think I'm handling the sounds better, Sarah looks at me. \"Could you stop whatever it is you're doing?\" She dips her fingers into her pussy and comes out with a clear string between her fingers. \"I've been wet since the warehouse. I'm not totally complaining but, Jesus Christ. Is it always going to be like this near you?\" She contemplates the pussy juice for a moment. I wonder how much of my sperm is in it - I came a lot tonight.\n\nSarah shifts and I smell something subtly different about her. My mind conjures an image of summer days where a friend is spraying themselves with a water hose, only they decide to spray you for the hell of it and you both chase each other around. Is this what some smells are doing now? Like with the fire scent making me think of possession, jealousy and passion? She's still smiling. Her fingers dip to her mouth and it widens into a full-toothed smile. \"Mmmmmmmmmm...\" she says with that husky voice she can apparently do on command now. She's sucking her fingers while pulling them in and out of her mouth slowly.\n\nShe pulls the hand down to her pussy again and spreads her legs a bit. My head is pounding but not from a headache. The smell is incredibly strong. Her. Her smell. Some of me is mixed in there but her scent overpowers everything else. Her fingers slip inside her pussy. \"Oh man... Incredible.\" she moans. She teases me like that for the two minutes it takes before I finally pull up to the house.\n\nI'd fuck her right then and there but we'd literally break the car and I think we're both too big to fit in one seat anyway. She watches me get out of the car with lazy eyes and her lazy smile. I open her door and almost take it off the hinges. She's undone her seatbelt so I snatch her out of the car. She must weigh 200 pounds of nearly pure muscle now but I do it effortlessly.\n\nWe make it into the house before fucking. Missionary, this time. Old school. On the floor. Our orgasms are fast and hard. She kept trying to turn over so I could take her behind but I held her in place. Images cycle through my head of dogs mounting and rutting but I'm still human, dammit.\n\n\"Was it your favorite position? Doggy-style, I mean.\" I ask her when we're done and holding each other. I'm half-hard and my dick lies between her legs, against her pussy.\n\n\"Huh. No, actually not. I like...liked to be on top. I felt like I was in control and I could get in a good angle to make it hotter.\" She chuckles. \"Now, though... Now all I can think when we're fucking is that I want you on top of me, fucking me like a dog. Ahhhhh, damn. I shouldn't say things like that. Seriously. Me even thinking of doggy-style makes me want you more. I never even really liked it like that before. Fuckin' thing...\" Her voice trails off. She's massaging her cunt, playing with her pussy lips and I wonder if I'll be able to go again soon.\n\nHunger saves me this time. I'm starved and I feel like I haven't had food in weeks. I'm not even embarrassed by the fact that we end up with leftover pizza, sandwiches and nearly half of everything else in the fridge. I should feel sick eating as much as we did but I just feel full and even more energetic. Sarah eats almost as much as me. She starts slow but after the first bite she realizes she's starving too. We barely even talk.\n\nSarah's nibbling on string cheese while looking around the house. We're both still nude. \"Not a bad place,\" she says. \"It just needs a lady's touch.\"\n\nI grin at her. \"Well, you're no lady but my place is yours - as you already know.\" She grins back at me and then punches me hard in the short ribs. She's way faster than I expected so her fist connects. I think she doesn't know how fast and strong she is, either. There's a sharp 'crack!' as she connects and a sudden pain. The pain is remote and all I do is notice it and grunt from the impact. The skin where she punched me is a bright angry red. I think she almost broke a rib.\n\n\"Jesus. That'll leave a bru...\" but the mark fades back to normal while we watch. We look at the spot where the bruise was starting and then back at each other.\n\n\"Fuck.\" she mutters. She traces her hand on the spot but it's just skin; healthy healed skin. \"Un-fucking-believable.\"\n\nWe shower together and I'm finally out of steam. My dick is trying to get hard but only making it half-way. I think if I waited longer it'd be ready but we're both exhausted. Before all of this I think the most I could get a full hard-on was twice, maybe three times a day. I don't think that's as much a problem now. More testosterone or something else?\n\nBut the problem is, she's naked and the way the water runs down the new curves of her body is making me horny. I turn her around to face me. She knows what I'm about to do. She leans her hard body back against the shower walls while I kneel down and suck on her cunt. I definitely get hair in my mouth but maybe my body thinks and reacts different because I barely notice.\n\nMy right hand grabs her ass and I look up at her. I move my finger towards her asshole and touch it but then pause. I look at her again. She braces her right forearm against the wall and looks back at me intensely. \"Do it.\" she says. Her voice is rough.\n\nHer ass is slick from the shower and I've got my tongue deep into the folds of her pussy. I take the middle finger of my right hand and play with the rim of her ass. She gasps and then growls low in her throat. She roars when I plunge my finger into her without warning. I don't know how she does it as a human but she roars and her ass pushes back against my finger, driving it deeper.\n\nI rub my index finger against her ass before pushing it into her, too. She's gasping, growling and saying \"Yes, yes, yes\" over and over again. My tongue is definitely not as long as when I'm changed but I still try to tongue-fuck her.\n\nShe can't control her legs very well. I pound my fingers hard and fast into her ass and it's only minutes before she screams and shakes from her orgasm. I don't stop. Sarah's repeating \"Fuhhh... fuhhhh... fuhhhhh!\" while her legs twitch from the multiple orgasms. I just dig my mouth into her crotch harder and suck her lips in and out of my mouth while licking inside her.\n\nI finally pull back and she sits in the tub with her head down. \"B... bastard. Fu..fucking bastard. I love you.\" She's laughing and still twitchy.\n\nWe rub each other down in the hot shower water. \"You should see yourself.\" she says. \"You've got muscles on top of muscles. And, it's weird. I always liked clean shaven men before but seeing you with a hairy chest and cock... It's fucking hot. So, I guess whatever that was tonight changed more than just our bodies. Like wanting you to mount me...\"\n\nShe's rubbing and massaging my back off as she says this, her hands working the soap over my body. She sprays the soap off and I feel her hands tracing the hardness of my back. \"It definitely did something to us.\" I hear her voice rumbling \"Rrrrrrrrrrr\" and her fingernails dig into my sides and back. I suddenly feel her rough tongue on my back and it feels really fucking good. She's still growling but in-between she's licking up and down back as if she's cleaning me off herself.\n\nWhen she finishes I look back at her. She almost looks embarrassed but she's also licking her lips. \"See? Why the hell did I just do that?\" She asks me. \"I just... I just wanted you to be clean and you smelled so damn good and... I just wanted you to be clean so that's what I thought of doing.\" She's not scared. She's not in shock. She's not about to cry. She's just talking aloud to herself and working through why she just licked the water off of my back. I hold her face in my hand and kiss her. Her tongue is still rough but not as rough as it was. Do our bodies change a little bit without us noticing?\n\nFinally, we crawl into bed. We don't, contrary to popular opinion, screw again.\n\nI tell her, \"We need to talk in the morning. We need to work out whatever this means for us.\" She nods, sleepily and we pass out, spooning each other.\n\n<br> CHAPTER 4\n\nWhen the alarm goes off at 6 am it hits my ears like a jackhammer. I'm standing in the corner, scanning the room before I realize I'm not in bed anymore. The only thoughts going through my mind when the alarm went off was \"Noise! Loud! Attack!\" I think it took only a second for me to go from bed to corner of the room and I wasn't even awake. I'm crouched and I've got my arms held out and low to my sides with fingers and fingernails out to grab or rip. I'm snarling and my teeth are bared. I don't remember doing any of that.\n\nSarah is at the other side of the room and it looks like the change hit her the same way. She's crouched on the ground with her arms wide and fingernails dug into the carpet in front of her. Her left leg is half-stretched behind her and her right leg is held close under her -- pressing into her breasts. She looks like a great cat ready to pounce on something. We're both breathing hard.\n\nThe clock is crushed and a tangy, disgusting smelling smoke rises from it. I must've broken it on the way to the corner. The mattress is ripped on both sides and the simple metal bed frame has collapsed. I try to remember exactly what happened but I can't grasp it. I look at my fingernails and I see how sharp they are still. We both must've clawed the mattress grabbing for purchase and then broke the frame as we leapt.",
        "Realization comes to Sarah and she yells out a startled \"Fuck!\" She's breathing hard and my adrenaline spikes from her smell. Apparently, her freaking out makes me freak out even more. We look at each other. Her eyes are dilated and glittering gold.\n\nI slowly stand and loosen my muscles. Sarah takes a second longer but then stands up, too. \"Jesus-fucking-Christ\" she says. \"No more fucking alarm clocks. I almost killed...\" she looks around the room sheepishly. \"... something.\"\n\nHer hair is wild from sleep and she's still breathing fast. Her breasts are bouncing in time to her breathing and I'm hard from her, the adrenalin or both. She looks at me, looks at my dick and raises an eyebrow. \"We could...\" her eyes lose focus a little and she brings a hand down to rub her clit. \"We should... Dammit! Stop doing that!\" Sarah jerks her hand away from her cunt and opens the window. She sticks her head out of breathes deeply. \"Stay over there until I clear my head. Your smell... I keep getting a mental picture of me with my ass up and you fucking me and I can't think straight. We need to talk about some things before we do anything else. Put on some clothes for god's sake.\" I pretend I don't see her playing with her nipple throughout that speech.\n\nI'm able to find some of my older shirts and pants that kind of fit. I tear my underwear (boxer briefs) at the side as I put them on. Unfortunately the head of my penis sticks out of my underwear so I push it down and to the side a bit. It sticks out there, too. Sarah watches me while she stands next to the window. I can smell her and I know what she's thinking regardless of her telling me to give her a break. Her smell is strong, hot and humid and I feel myself flush with the blood rush. My teeth grind together and I almost take her there but I don't. I close my eyes and breathe deeply several times to calm myself down.\n\nSarah finds some of my clothes to fit her. We're both fooling each other. With our new sense of smell the clothes change nothing. We're working hard to control ourselves - it's like working a weak muscle we never knew we had. I don't have any coffee so we grab some Coke and sit across from each other at the little table in the kitchen.\n\n\"Where do we start?\" I ask.\n\nSarah thinks about it for a moment and answers. \"Easy - what happened last night? Well, okay. I don't even need to ask that, do I? I changed.\" She pauses again. \"Did you change because of me or were you going to already?\" She mulls this over. \"I think because of me. How did it feel to you? Was there anything different to you before the warehouse?\"\n\n\"No.\" I tell her. \"I was fine the whole day. The only thing I noticed was when we walked up the stairs I had a hard-on and really wanted to have sex with you every possible way. I was just horny, though, not anything else. I think you were putting out a smell that did something to me. Some crazy aphrodisiac or something. I only started changing after I'd been eating you out for a while.\"\n\nShe shifts uncomfortably in her chair and licks her lips when I mention eating her out. \"Okay, okay. So, yeah. So it's me. I did it to you. No, wait. Don't interrupt. I'm not going to say I'm sorry because we both know I'd be lying if I did. This.\" She holds up her hand and clenches into a fist. Muscles stand out in her arm like a small tree trunk. \"This is a gift. I wouldn't give this back if I could and I'll kill anyone that tries to take you from me. I don't know if that's me talking or the change talking but we're together and nothing is going to change that now.\"\n\nI'm nodding my head. \"You're right. You're totally right. I wouldn't give any of this up, either. I was happy enough with who I was before but this is unbelievable. How, though? How did it happen? Is it a one time thing? It wasn't a full moon last night, I know that. Are there others like us? Can we make others like us?\"\n\nSarah taps her finger on the table and looks down, thinking. \"I don't know. I think... I think if we have these bodies then maybe it won't just happen once. Last night in the shower when I was...\" She stops and looks slightly embarrassed. \"... licking you, my tongue felt different. Before I did it, I just felt this sudden urge to hold you down and clean you off. Like, 'He's dirty and I should clean him because I'm his...'\" Sarah looks confused and then takes a breath. \"Because you're who you are. So, I did it. After I started, I felt my tongue do something. It was bigger and felt strange against your skin. It kept bumping against my teeth so I know it was larger. The same thing happened this morning. When the alarm went off and I was on the ground, I had claws not fingernails or toenails.\"\n\n\"So. Werewolves, huh?\" I say, because I have no idea what else to say right now. We both sit there for a few moments. \"Why? Why you? Or us?\" I ask.\n\n\"The fuck should I know?\" she says, angry at something. \"You want to call up a psychic and ask? Or go see the doctor? They'd have fun with that. We could see how fast we heal from antidepressants or whatever other meds they tried to pump into us.\" I snort and wave my hands because I know how that'd sound.\n\nI try another question. \"Do you think there are more of us?\"\n\nSarah bites the corner of her mouth and wrinkles her brow. \"Maybe? I have a hard time thinking I'm ... we're the only ones like this. I mean, yeah, why us if we're the only ones?\"\n\nThe conversation dies off again. I reach across the small table for her hands. She meets me half-way and we hold hands for a moment. I break the silence. \"You know. I don't really know anything about you. We talk at work but that's it. I don't... I mean...\" I falter. What should I say? I know we have some things in common but to get to where we are now we'd usually have been dating for years.\n\nSarah looks at me - simply and honestly. She just looks right at me. She grips my hand and it almost hurts. \"We'll learn. I can't live without you now.\" she says.\n\n<br> CHAPTER 5\n\nIt's getting close to 7 so I call into work and tell them I'm not coming in today. I'm sure my boss thinks I just want a long weekend but after this past week he's happy and doesn't care. Sarah calls in 20 minutes later and he's less happy about having nobody in the IT department but he can't really fire us so it doesn't matter.\n\nNormally I shower in the morning but for some reason I don't feel the need and it's not because we showered last night. I just feel more natural in my own skin and my crazy nose tells me I don't smell bad so what's the point? My hair is kept short and stays in shape if I just run my hand through it a couple times. I do shave, however. I'm still not ready to try a beard. Sarah comes in while I'm cleaning myself off. She nips me on the shoulder and rubs my side affectionately before brushing her teeth. We're both still naked. She doesn't shower, either.\n\n\"My hair is different.\" She says. \"Feel it. It's thicker and softer. Shit. That alone makes the whole thing worth it.\" She doesn't even have to wet her hair down to make it stay in place, she just uses my comb a few times and it stays.\n\n\"That was my tooth brush, woman!\" I tell her, jokingly. I try to use my best fake man-of-the-house voice.\n\nShe cocks her eyebrow and looks at me from the side. \"Yeah? What're you going to do about it?\" She smacks my ass and darts away when I reach for her playfully. \"Too slow, old man!\"\n\nI laugh and then actually try to grab her. Everything slows down and I watch my hand reach out for her waist. She sees it coming and twists insanely fast. I've never seen anything move as fast as we just did so I forget to stop myself. I end up breaking five tiles when my hand slams into the wall. It doesn't even hurt.\n\nSarah reaches up and pats me on the cheek. \"You're my little dumbass. Yes you are.\" She uses her \"You're a cute little doggie\" voice on me. I can't help but laugh at it.\n\nWe're hungry again and Sarah needs better clothes that actually fit her. She decides to combine both of those needs and go to the mall. We figure it's during the week and early morning so it shouldn't be too busy. I ask if she's going to be cool just wearing my old t-shirt and she grins at me. \"Hell, yeah. Bring on the stares, I say. They don't have a freakin' chance.\" I grin back at her and we kiss.\n\nThe kiss turns into groping and the groping turns into us suddenly breaking apart and stepping away. \"Okay, Christ.\" I say. \"This will be an actual problem for me. Every time I even think of something related to sex then that's all I can think about.\"\n\nSarah doesn't look at me. \"Same here.\" she says. Her voice is rough and her scent is hot and spicy. I know she's mentally talking herself down from having sex with me.\n\nIt takes a second for my eyes to adjust to actual sunlight when we're outside. I sneeze three times before I can see properly. Sarah is smarter than me and just shades her eyes until she can handle it. It's sunny out but the wind is cold. I barely feel it. My shoes don't fit very well but I don't have a choice so I scrunch my toes in. It's kind of painful and I feel my toenails cutting into the material. I grab a pair of my jogging shoes for Sarah. She just barely fits into them.\n\nWe talk on the drive to the mall. I learn that she hates jewelry but likes to dress well. She says she used to wear earrings every so often but the holes in her ears closed after last night so that's out. She tells me a little about her childhood. Her mother died when she was young so her older brother and father raised her. She looks up to both of them and still talks to her dad a lot. I'm guessing that's where the cussing and non-jewelry-wearing come from.\n\nI rest my hand on her thigh. She automatically covers it with her hand while she's talking. She didn't date much and, at 25, has only had two boyfriends. They both lasted only a few months. Her father and brother taught her all the tricks the boys try to use on women.\n\nI tell her about my childhood. She chuckles at me being a nerd and demands to see my high school photos. We hadn't really talked ages before but I'm secretly glad she's only 5 years younger than me. She doesn't believe me when I tell her I've never had a girlfriend but then does when I tell her I played Dungeons &amp; Dragons as a kid. I tell her it was valuable research because otherwise I would probably only know about werewolves through all the goddamned advertisements for the Twilight movies. She makes retching noises and I love her even more.\n\nFifteen minutes away from the mall she unzips my pants. She doesn't ask and isn't shy about it. She just reaches over and struggles with the zipper until it's down and the button is off. I scoot my butt down on the seat to make it easier for her. When she pulls my pants down my dick almost puts her eye out because her face is too close. She yelps and calls it a dick which sets us off both laughing for a few moments. She unzips her own borrowed pants and pulls them down. I just now realize she's not wearing panties.\n\nSarah pleasures herself with her right hand and pumps my cock with her left hand. I can't get used to being uncircumcised. It's so different. Better. I seem more sensitive than I was without the extra skin. I keep my left hand on the wheel and lean my right arm on her body to rub my hand down her side and grab her ass. My hand almost reaches her pussy so I play with her ass a little instead.\n\n\"I've been ... I've been wanting ... wanting this all fucking morning.\" She gasps as she fingers herself. \"Every time I remember your cock in my mouth last night... God!\" Now her mouth is on me and she's not slow this time. She's bobbing her head up and down and I have to focus on the road. Every so often she pulls back to lick and suck on the top of my dick and then lick up and down the length of it. I feel her tongue change against me. The top of it roughens and it's not fitting all the way back in her mouth. She's whining slightly as she's sucking me off -- cute little \"ehn...ehn...ehn...\" noises.\n\nTraffic is light so I'm barely paying attention. A jacked up truck roars past us and then slows down, letting me catch up to it. The driver and passenger are staring into our car. They're both young and look like they're hicks that stumbled into a Gap store for the first time in their life. The passenger whistles and they both cheer us on. We hear it perfectly through the traffic and two rolled-up windows. Sarah doesn't even turn around. She pulls her right hand out of her pants and flips the guy off. The driver laughs and guns the truck forward.\n\nSarah pulls off of me again and sucks on my balls. I grab her by her hair and stick my dick back in her mouth. She moans and starts slapping her pussy as she masturbates herself. My toes curl and I put a dent in the steering wheel as I cum. Sarah's still masturbating but now she's swallowing my load and making little \"ahhn ahhn ahhn\" noises as she does. Her own orgasm rocks the car and I'm starting to think this little Geo Prism is not going to last us long.\n\nWhen I stop cumming she licks me clean and I can hear a very small growl as she does it. Her eyes are slightly blank and her ears are more pointed than they should be. Her tongue is longer and it wraps around more than half of my cock during one of the licks.\n\nI grab her by the neck and pull her up to kiss. She's definitely growling and her sharp claws are kneading at my thigh. Her tongue fills my mouth.\n\nI dart glances at the road. Sarah is jerking me off again. When I break from the kiss she blinks several times and her eyes are more focused. I'm only slightly disappointed when she stops jacking me off. She wipes her mouth with the back of her arm and then licks it off with that long tongue of hers.\n\n\"See?\" she says. \"Not a second thought to cleaning you off. I don't even feel ashamed or weirded out about it.\" She rolls her shoulders and zips her pants up. \"By the way, you're on your own with your pants. I think it'll take a while before you're able to zip them up, Mr. Perky.\" She laughs and squeezes my dick fondly.\n\nIts 5 minutes before I get soft and 2 minutes after that when we roll into the mall parking lot.\n\n<br> CHAPTER 6\n\nI can barely hear my own thoughts and my ears feel like they're bleeding when we pull into the parking lot. There's so much noise. Sarah plugs her ears and I close my eyes to try to filter some of it out.\n\n\"Fucking Christ. This is crazy. How are we supposed to handle all this goddamned noise?\" I ask her.\n\nShe closes her eyes before answering. \"Try focusing on one of the sounds. It's starting to help. The other noises are there but not so bad.\"\n\nI hear a mother screaming at her kid about wanting the latest Pok\u00e9mon game. She's calling him a greedy little brat. There're three teenagers talking about the movie they just watched. There's a mother and father walking with their three kids. The mother is talking and talking about how she wants to go to some religious retreat with her female friends but the tones she's using and the way her voice changes minutely makes me think it's more than just a retreat - she's probably cheating on her husband. The husband isn't paying attention; his \"Yeses\" and \"Sures\" sound perfunctory and bored. The daughter is screaming at her younger brother for taking her miniature makeup kit and the younger brother is laughing, running and calling her a raccoon. The older brother is listening to some band. I can't hear the music very well but there's screaming and guitars involved. Some young kid is talking to another kid. He's telling him about this girl he fucked but he's lying - lying because he hesitates slightly every so often and his voice is all wrong and sounds too eager to please or impress the other kid. Hundreds of voices roaring in my ears.\n\nI'm starting to get a headache. I try focusing but it's hard. Through all of the laughter and yelling and lying and screaming there's a solid and reassuring noise. Tha-thump, Tha-thump. Sarah's heartbeat is strong and loud, right next to me. I focus on it. I slow my breathing and my heartbeat slows down to nearly match hers. The other sounds fade into the background. If I focus on one of them I can hear what's happening clearly. Certain words ping for attention but it's bearable now.  \n\nI open my eyes and Sarah is watching me. She's smiling happily and I bask in her scent. It's carefree. Another mental image forms - rolling down a clover-covered hill as a child (pup, something says) while the sun shines down on you.\n\nI put my forehead against hers and our noses touch. Out of some instinct, we rub them together softly and Sarah sighs.\n\nWhen we get out I have to remind myself to focus on her as the sounds and smells hit me more strongly. It's easier now that I know the trick. I may have to start wearing sunglasses if it doesn't get easier to adjust to the brightness of the sun.\n\nSarah's nipples push the borrowed t-shirt out slightly and her breasts are perky and large. I imagine caressing them and sucking the nipples into my mouth while fingering her ass. I've got a hard-on and the tip is nearly out of my pants.\n\nPeople look at us strangely when we make it inside. Most of them wait until we pass but some of the younger ones (men and women) are ogling Sarah. My shoulders itch from being near so many people at once and I don't like the way the men are looking at Sarah. I step closer to her to put my arm around her waist.\n\nSarah grins and leans into me to whisper, \"You're growling, honey.\" I blink and realize she's right. She laughs and snuggles up to me. \"My strong protector. You be sure to keep me safe from all of these 80 pound teenage boys.\"\n\nI was never fond of large crowds before but now it's much worse. I find myself going out of the way to go around people and to get as far from them as I can. The hair on my neck is standing up and I keep looking for exits while glaring at everyone.\n\nWe're nearly to the store when I hear a guy behind me whisper to his friend, \"Dude, I'd fuck the hell out of that slut!\" My blood roars to my ears and I whip around, snarling. I'm baring my teeth and only a few feet away from the guy before I feel Sarah tugging on my arm.\n\n\"What did you fucking say?! Answer me!\" I yell at the guy. His face goes from smirking to pure terror in less than 2 seconds. I know it's not the way I look or how big I am that terrifies him. His friend falls over backward in his rush to get away from me and he spills his drink (Pepsi) all over himself. The man that talked has pissed himself and is sputtering trying to talk and apologize at the same time.\n\nI can feel my claws in my clenched fist. They weren't this sharp a little bit ago and I'm drawing blood with them. I feel hairs lifting all over my body. My nostrils are flaring. In my mind I can feel his windpipe being crushed between my teeth.\n\nSarah's got one arm hooked around my arm rubs my back with her other hand. My left arm nestles between her breasts.\n\n\"Sweetheart. Hey. Let it go. Hey, let it go.\" She's using a voice on me that's supposed to be calming and it is, slightly -- the kind you use on a scared animal to reassure them. \"Let it go, he's just an asshole. Isn't that right? You're just an asshole, aren't you, guy?\" She uses the same voice on the man and under other circumstances I'd be laughing.\n\nThe guy, however, is trying to break his neck agreeing with Sarah. He's fallen to the ground and actually scooting backwards to get away from me. Sarah is still rubbing my back and making \"shhhhhh... shhhhhh...\" noises. Some people are watching but mostly they're walking very fast away from all of us. A fat, balding security guard pushes his way through people and is slightly out of breath.\n\nHe's still walking to us when he asks, \"Is everything all right here? What happened? Are you okay, ma'am?\" As he gets about 10 feet away I can hear his heart rate speed up. The guard stops and leans on a brick flowerbed before trying to continue.  ",
        "\"Is.... what's...?\" He's sweating and his heart is jumping all over the place. His hand goes to his chest and he's breathing wrong. I smell blood that isn't really there and I want to tear the asshole's throat out with my teeth. Mixed in with the scent of blood is the smell of panic coming from the security guard behind me. I have a mental image of a deer too scared to run when it's suddenly confronted by a predator and knows it's going to die.\n\nSarah grabs the back of my neck and pulls my head down but I'm still staring at the guy. I can hear the urgency in her voice as she whispers to me. \"You've got to calm down. You're doing this to them. Your scent is burning my nose and making me want to kill everyone here. Everything smells like blood and I'm having a hard time concentrating. You've got to calm down. You've... you're... You're terrifying them and you're going to give that guard a heart attack. I can hear it starting to happen. Calm. DOWN.\" The last is whisper-yelled into my ear.\n\nI growl at the man and turn my back on him. I don't know why but it feels like one of the worst things I can do short of killing him or pissing on him. He's sobbing behind me.\n\nI turn to look at the guard and part of me is ashamed. He is going to have a heart attack. His eyes are dilated and he's on one knee. \"Please...\" he gasps. \"Please... I don't... Please...\" He's clutching his chest and his face is turning a slight shade of blue. He doesn't even know why this is happening to him.\n\nI breathe deeply and focus on Sarah's heart. Her pulse is sped up and her heartbeat hammers in my ear. I'm guessing that's my fault. Even though she was yelling at me to calm down I can smell her excitement. She's wet because of me and because the killing smell is in the air. I close my eyes, focus and breathe. My own heartbeat slows.\n\nSarah pulls my arm and we walk away. I stop by the security guard. He's sitting down with his head hanging but I can tell he's improving. I crouch down and put my hand on his shoulder. \"I'm sorry.\" I tell him before walking away.\n\nSarah stays close to me and cocks an eyebrow. \"So, okay. I guess we have a learning curve here.\" I grimace and keep my eyes ahead, scanning the crowd again.\n\n\"I'm not a possessive person... well, I wasn't a possessive person before last night but I'll be damned if I let someone talk like that to you.\" My lip curls at a boy leering at Sarah but I keep myself under control. I've never been like this. I've always been way more laid-back and carefree. Sure, lack of sleep and stupid people can piss me off but never like this. I still feel the adrenaline running through my system. I'm not sure I like this part of the deal. I don't want my first response to be killing someone if they piss me off slightly.\n\n\"Oh, I get it. Trust me. I get it.\" She says. \"I'm not asking you to apologize, I just felt sorry for the guard. I... well, shit. I'm sure you could tell but you were turning me on there and I couldn't help it. The way you smelled...\" she coughs and looks away for a moment. \"Well. Ummm. Yeah. Let's just find some clothes and then eat something.\"\n\nAs we're walking, I smell something different. Now I notice that almost everyone here has the same underlying scent. People. Humans. Sarah doesn't have that scent and neither do I - another mark against us for the case of being \"normal\" any more. Everyone else: men, women, children, everyone else has the same scent. But something sticks out in the crowd -- not a human smell but not a smell like me or Sarah. The smell gets slightly stronger when I spot a man going through the exit. He's tall and lean but otherwise normal. He almost looks like he's dancing through the crowd. Just before he opens the glass door, he turns and glances at me. He looks away quickly and leaves when he notices I'm watching him. For a second there I thought he looked scared.\n\nSarah just now notices the other scent. \"Wha... what's that smell? That's not right...\" She says.\n\n\"I think it was that guy that just left. See him? The tall one over there.\" I point him out and I know we both can see him clearly even though he's outside. \"Should we follow him?\"\n\n\"No, fuck it. I'm starving and I want to get away from all of these people.\" Sarah tells me.\n\n<br> CHAPTER 7\n\nThe nearest store turns out to be JC Penny and the smell of perfume staggers me before we even get close. Sarah's wrinkling her nose. \"Goddamn that's rank.\" she says between her teeth. \"We go in, I grab some things and we get out. Try not to kill anyone.\"\n\n\"Well, if your tits weren't so huge, we wouldn't have this problem. You'd only have to worry about me shoving you against the wall and mounting you.\" I grin at her when her pulse quickens. She punches me lightly on the arm. \"Fucker.\" she whispers.\n\nWe avoid the sales people and Sarah works like a tactical swat team in finding her new clothes. Her eyes dart around the store to find likely racks of clothes and it takes her seconds to dig through to find what she wants. I hear her cursing under her breath, \"Fucking ruffles everywhere\" as she searches. She picks out some slacks and relatively plain tops but the colors match and look good together. She finds two pairs of shoes by holding them against her feet to check the size. I wander off briefly and find a short black skirt and a white button down shirt for her. She looks them over when I bring them to her, looks back to me and then adds them to her stack.\n\nThe store's mostly empty so we have our choice of checkouts. The nearest one is empty except for the young bored checkout girl behind the counter. Sarah piles on the clothes and the girl's face transforms into her \"Happy Store Employee Face\" when she notices us.\n\n\"Did you find... did you find... did...\" Sarah and I turn to look at her but of course we can tell what's going on just based on smells and sounds.\n\nThe girl is looking at me but her eyes are unfocused. She's wearing a button-down red top with ruffles around the collar. She's got her hand at her neck. \"I...\" she tries. The girl (Sandy, her name tag reads) brings her hand up to her mouth and sticks her finger in. She's sucking on her finger and moaning with her eyes half closed. Her other hand goes to her chest and she massages her breast with her hand.\n\nI feel myself get hard for the hundredth time today and my pants constrict around me. Sarah looks over to me and grabs my dick bulge with her hand.\n\n\"You could...\" She starts. \"You could take both of us, you know. My cunt is dripping. I need it.\" She leans in to me and speaks in a rush. \"You could take us both to the back and fuck us. I want it and you know she does. I want to feel your cock pounding into me from behind. I... I want it so bad.\" She's whining towards the end and rubbing my dick through my pants. \"Make her your bitch, too. Ohhh...\"\n\nThe checkout lady isn't sucking on her finger anymore. She's got that hand down her skirt and she's fingering herself while making \"oh! oh! oh!\" noises. I almost do it. Almost. A part of me wants both of them and more. I've had fantasies about threesomes but, realistically, I've always been more attracted to just one-on-one sex. Now, though, I want both of them and any other women I can find.\n\nIs this the change making it different? It's hard to think right now. I can feel something that I'm doing. It's hard to explain but I'm doing something to cause this or to make it worse. My body feels like it's vibrating slightly and there's this smell - a spicy overpowering smell. It's doing something to make them feel like this.\n\nI walk away and Sarah tries to hold me back. I'm stronger but not by a huge margin. I tell her over my shoulder as I walk, \"You deal with this. I can't do this right now.\" She smells disappointed and I call myself five kinds of an idiot as I go. I take the nearest escalator up to the men's section. I figure I'll be safe there.\n\nI'm lost in my own thoughts as I walk but I do notice that other guys give me a wide berth. Whenever I get close to someone they automatically move out of the way. They smell scared and I get a mental image of small animals scattering before a large predator chasing after prey.\n\nI find a bench and sit, waiting. It's some time before Sarah walks up. \"Christ. Wow. Jesus.\" She says. \"That was... yeah. It was some feedback or something. She got fucking horny and your scent changed to ... something and then all I could think about was fucking. What the hell. I wanted you to fuck her while you sucked on me. I wanted to sit on her face while I gave you a blowjob. I wanted everything. I'm not even bi... wasn't bi... Shit. I still want you both.\"\n\nI nod. I don't trust myself to speak yet. Sarah keeps talking. \"Oh, also, I knew exactly where you were. I shouldn't be surprised by any of this any more but I could look up and point to where you were exactly. I followed where you walked like there were neon signs pointing the way. Hey. Kiss me.\" She drops her bags and I stand up and kiss her. We're rough with each other and having a hard time controlling our teeth while we're doing it. I pull off and bite her neck, feeling the tendons between my teeth. She moans and we almost find a booth. I hang on with my teeth and squeeze her ass. She's hot for it. So hot.\n\nShe pulls back from me this time and sits down on the bench. I stand, watching her and I breathe her scent in deeply. She talks rapidly to herself. \"This is really fucking hard. I've never wanted anyone or anything so bad in my life. The sex, yeah. But mostly just you. When you walked away I was more sad that you weren't standing with me than I was with you not fucking us. Well, I was pissed about that, too but it turns out I don't like being apart from you more. I'm not needy. I can be on my own. Could be on my own... before. This is hard.\" She closes her eyes to compose herself and then stands. \"Oh, that girl woke up a little after you left and ran, crying. I had to find a different salesperson.\"\n\nShe pauses for a moment. \"Another question for myself - why doesn't the thought of you banging other women bother me?\" She looks slightly confused and then shrugs her shoulders. \"Something to puzzle out later.\"\n\n<br> CHAPTER 8\n\nWe're more careful on the walk this time. I'm thinking about what I did back in the store and wondering how I can rein it in. I mentally go over parts of my body wondering what and where a mental or physical switch might be to make it happen or to stop it happening.\n\nFor a moment I think I feel something that reminds me of the feeling earlier but it slips away. I keep working at it while we order food. It's greasy but we order two servings for each of us anyway. Sarah doesn't let me pay for hers and I don't push it.\n\nIt's before noon so we're able to find a table well away from everyone else. We devour half of our food in seconds and then slow down for the rest of it. The sun is shining through the large skylight and we're both enjoying the filtered warmth.\n\nUnfortunately, the acoustics are bad here and sounds are louder. It doesn't help that there are at least ten groups of high school students giggling and talking loudly back and forth. I pick out conversations of parents trying to get their kids to finish the last bites of food or trying to get them to eat something other than french fries. The high school kids are mostly talking about their teachers, classes and the other boys and girls. They're so young and I'm slightly embarrassed for them.\n\nI'm focusing on the food in front of me to force the sounds to a drone when there's suddenly someone else sitting at our table and talking to us. Sarah and I are up and standing back in a defensive position before the third syllable is out of the person's mouth. The chair was empty only a second ago.\n\n\"I never thought to live to see the wolves return.\" She says. It is a woman, now that I see her. She's young and dressed in light gray slacks with an off-white long-sleeved plain top. Her curly red hair is pulled back and up into a ponytail. Her eyes are gray and she's looking from one of us to the other. There's something odd about her and it takes me a moment to figure out what it is - she has no smell and I can't hear her heartbeat or anything. I can only hear the noise her clothes make and the small tapping noise her finger makes on the glass table. She has a small sun hat sitting on her right knee.\n\n\"Please, sit. I'm not here to hurt you. Trust me, that would be quite difficult to do. I don't have a lot of time.\" She gestures at our seats as if inviting us to her own table.\n\nI look at Sarah and nod my head toward the table. She shrugs and we both sit down. The other thing I notice is that nobody bothered to turn to look at us. I know we must've made a racket by suddenly jumping back from our table - my chair even fell over\n\nThe woman is looking at both of us and she seems pleased with herself. She has small, elfin-like features. Like a young child, almost. I'm keeping my hands on the table and my body is tensed. Sarah's heart is pounding and I know she's ready for anything. The stillness in the air makes me imagine a pair of wolves at the top of a hill looking down at prey - only there's a tiger at the bottom of the hill stalking the same thing.\n\n\"Such fine specimens, too. Just into the change? I imagine your passions are running quite hot right now.\" The tops of her cheeks turn reddish and I have a hard time putting an age to her. I finally decide on just under 30. There are small green specks of color in her eyes. Her finger is tapping on the table like she's impatient but I don't get that feeling from her. It's harder to tell since I can't smell her but her body language makes her seem relaxed. She's pretty enough in a nondescript sort of way but I'm too tensed to think about anything other than whether I'd need to kill this strange person. Or whatever she is. I know she did not walk up and sit down without either of us noticing.\n\nKill her? I sigh mentally. I definitely need to work on my new anger issues.\n\n\"My name is Amelia,\" she says, giving no last name. Her voice has an interesting and firm cadence in the way she pronounces her words. The 'a' in 'name' is straight and she puts strong emphasis on the 'm', for example. There's a very slight pause between 'is' and 'Amelia' -- I don't think English was her first language even if she speaks it perfectly well.\n\n\"It is a privilege to meet you both. I really only have minutes before I have to go but I noticed you earlier and only just worked up the courage to pay my respects. You're wondering, of course, how I know about you two. It's difficult to explain in short order but you both stand out very, very brightly. I would hope... what is it?\"\n\nThere's this smell in the air suddenly. It's death -- rotting corpses and rats bringing filthy diseases. I almost gag on it. Sarah's growling in the back of her throat and looking for the source. Amelia watches us, still tapping her left hand. With her right she grabs the salt shaker, takes the top off and spills salt over the table. She raps hard on the glass and the salt jumps and scatters. She stares at it for a moment.\n\n\"I have less time than I thought and, once again, the wolves prove their worth.\" She stands, putting her hat on. Sarah and I stand with her. We're still looking around but we can't pinpoint where the smell is coming from. Amelia presents her right hand towards us, palm out and open. The stone on her ring finger is turned around, facing the palm of her hand. \"I wish we had more time but I will find you both again.\" She closes her hand into a fist and vanishes. But, not entirely.\n\n<br> CHAPTER 9\n\nWe both watch as Amelia reappears ten feet away and then vanishes again, only to reappear twenty feet away. Nobody else notices but they automatically move out of her way when she appears near them. She continues vanishing and reappearing until she's out of sight around a corner.\n\nI look at Sarah and she's watching her go. \"The smell is stronger the way she's going.\"\n\nBefore all of this I would've let the lady go. I mean, sure, I would've been a little curious but not if I knew about this horrible smell. Anything that smells like that can't be good. The previous me would let Amelia handle it while I walked away. None of my business. But, now... now I can't let it go. Whatever it is doesn't smell right. It's wrong and it shouldn't exist. I feel the wolf in me growling and hunkering down on the ground. It wants to kill it -- to erase it from this world. I have to go.\n\nWe follow quickly, moving through the crowd. We catch a glimpse of the strange woman in the distance but then she's gone around another corner. The smell is getting stronger and I hear a rasping buzzing noise. I want to go down on all fours and run flat-out to whatever it is. I'm getting goose bumps at the thought of killing this thing. The smell burns my tongue and I want to vomit but I'm not stopping.\n\nA glance at Sarah shows the same thoughts and pains from her. Light brown hair is slowly, slowly covering her arms and her muscles are twitching. I put a hand on her arm and she snaps her eyes up to mine. She calms and I see the hair recede slightly.\n\nA woman screams in the distance, loud and shrilly. Neither of us hesitates -- now we do run flat out and we're fast. People are a blur and we shove anyone that doesn't move quickly enough. The rotten smell slams into my nose as we round the corner. My heart is racing and time slows like it did in the car last night.\n\nAmelia is standing in an open courtyard. She has her left arm pulled up against her body. Blood is coursing down the arm and I can smell her now - it's her own blood. Her right hand is straight out in front of her and open, palm down. She has her eyes closed and her mouth is moving but she's making no sound. She has her forehead wrinkled in concentration. Her hat is about 5 feet to her left and her hair is loose. The blood from her arm has made a small pool at her feet. She's... flickering. She's solid for seconds and then flickers for half a second, over and over.\n\nThere are quite a few people around but nobody is looking at Amelia. They've unconsciously made a hole around her. Everyone is watching a man and woman near the center of the courtyard. The man is on his side and has his hands around his throat like he's choking; only he's not moving. His wife or girlfriend is standing with her hands over her mouth and she's terrified. They both look young, perhaps in their thirties.\n\nThe ... thing standing behind the couple is the source of the smell. It's cloaked in tattered black and green robes. In place of a face is the skull of a deer or other small headed, long faced animal. Horns protrude from small holes in the side of its hood and it has skeletal hands. It's pointing at the man with its right hand and a sickly green light is flowing from its finger into the man's chest. Black specks float in the green stream and it oozes like warm honey.\n\nThe rasping is louder and it sounds like millions of insects rubbing against each other. Amelia moves her hand in a small circle and then side steps to put her left foot directly into the small pool of blood at her feet. It immediately blackens and the man lying on the bench takes a shuddering breath, scratching at his throat with his hands.\n\nThe smell from the creature is suddenly stronger. I dry heave.\n\nIn that second, Sarah leaps. She's beautiful. Deadly. She's snarling and her canines are long and sharp. I can see hair sprouting in tufts from her forearms. Her claws are out and black. She lands fifteen feet away on all fours and leaps again without pause at the thing standing behind the man.\n\nInstincts drop me to the ground on all fours and I bound after her. People are startled but they seem dazed, as if in a dreamlike state. Sarah hits the creature seconds before I reach it. There's a crackling sound and I smell singed hair. She's got what might be a throat in her mouth - a mouth that's elongated but not quite a muzzle. A small remote part of me is glad she's still wearing my baggy clothes because she's changing and would've burst out of anything she bought today.",
        "I make a final leap with my back legs and my arms are out to grab. I notice too late a shimmering yellow light in the air, inches away from the thing. As I pass through the field, I feel an intense burn. I land on the thing's right arm and hear it snap. My muscles are bulging and brown hair is flowing over my body. I can see my nose in front of my face as I bite into where its chest should be. I rip cloth and only find a ribcage with a globe of that green light hovering behind bones. I think I was trying to tear through whatever stomach the thing might've had. I rip its arm off with barely a tug and part of its shoulder comes with it.\n\nThe thing is making a wailing sound as if it's yelling into a fierce wind from the bottom of a canyon - \"Uohhhhhhhhhhhhh!\" The sound stops suddenly and the green light in its chest winks out.\n\nSarah has broken through the skeleton's spine and severed the head. She howls next to me and I join in. It's not a howl of triumph - it's a howl of rage that there's no flesh to rend or entrails to eat. Out of anger we break the thing into pieces.\n\nWe're both still on all fours. Our claws have scratched lines in the marble floor and there's a small crack where I landed on the thing's arm.\n\nI nuzzle my head against Sarah. She licks me back. We're half-way to being fully changed and only now does the fact that we're in a public place dawn on me. I don't care yet - I'm staring at Sarah and she's staring back at me.\n\nShe's ripped the front of the t-shirt I loaned her as her breasts grow into the change. I can see a patch of fur between her breasts that runs down to her crotch. The line of fur thickens and spreads out just above the mound of her vagina. I can see the start of her tail pushing out through the tops of her pants.\n\nWe stand at the same time and I shove her against the wall closest to us. We don't have full muzzles so kissing is inconvenient but we're able to make it happen. I grab her tit and squeeze hard. The padding on my palm is rough against her soft, furry breasts.\n\nHer legs wrap around me and the bulge in my pants is rubbing against her cunt. My cock is out of my pants and growing larger. A line of skin is attaching it to my stomach. It's not a full sheath but it's partway there. I rub my dick bulge against her pussy furiously and she's pulling on my hair and yelling for me to fuck her cunt numb. I can't suck on her tit because of the way my mouth is so I'm licking her nipple and biting her breast. Sometimes I bite through flesh and she bleeds but the mark heals almost instantly. The blood excites us.\n\nThe tip of my cock is four inches out of my pants and she brings one hand down to grab it. She's yanking and pulling and begging me to put it deep inside her. The palm of her hand is scratches my naked dick because of the rough padding on her hands but it feels good.\n\nI hear someone loudly clap once behind me and Sarah yells at them to \"Fuck the hell off!\" It comes out strange because of her mouth but you can still tell what she's saying. I'm trying to take my pants off with one hand when I feel a strange calmness fall over me. It's slow but it's distracting me. I growl and keep dry humping Sarah but I turn my head to look behind me. Sarah screams wordlessly and then yells at me not to stop. However, whatever this calmness is, it's affecting her too.\n\nI set Sarah down. We're breathing hard and the changes are withdrawing slowly. My heart is trying to slam its way out of my chest. Amelia is standing behind us and has her eyes averted slightly.\n\nNow it's my turn to hold Sarah back as she lunges for the other woman. I have to use two hands and plant my feet against her strength. \"You fucking cunt!\" Sarah screams. \"If you ever do that shit again I will rip your goddamned throat out and eat your fucking heart! I will fuck my man when I want to fuck him!\" I don't talk to Sarah or try to calm her down. I'm nearly as pissed as she is but I'm not sure killing this woman is a good thing.\n\nAmelia is making placating gestures with her hands. \"I know, I know. I apologize but I had no choice. If either of you had changed too far I would not have been able to stop you at all. I'm really very sorry. The legends say the wolves were always hardest to restrain. Too much passion. Too many raw emotions. Peace, girl. This is for the best.\" At the word \"girl\", Sarah howls and pulls harder against me. I don't think she appreciated that.\n\nThe woman Amelia is holding a piece of the creature's cloak in one hand, rubbing it between her fingers. \"I have to go.\" She says. \"You can think about killing me later but I have to follow this trail before it grows too cold. If I do not die before I am done, I will find you this weekend. Hurry, I've shielded us from curious onlookers but it won't last long.\" She kicks gently at our JC Penny bag near her feet. \"I've brought your clothes back for you.\"\n\nAmelia makes a fist with her right hand and closes her eyes. Then, her fist opens and she's gone.\n\n<br> CHAPTER 10\n\nSarah's cursing Amelia under her breath but I hear her clearly. Thankfully we're close to one of the exits so we're out in no time. I follow her as she stalks off to the car, still pissed. The anger rolls off of her and it's affecting me, too. Below that is the scent of her need but she's too pissed to do anything about it. We have to walk around the parking lot to get back to our car since we're on the wrong side.\n\n\"You know, that shirt you're wearing doesn't actually cover anything.\" I tell her. Sarah just glares at me. Thankfully, nobody is looking our way and we're walking between cars. Her shirt is torn badly and only barely covers her left tit.\n\n\"You're talking to me about this? You're not even wearing a shirt, or didn't you notice?\" She asks.\n\nDamn. She's right, I didn't notice. My nakedness doesn't bother me and I can barely tell the difference between clothed and not.\n\nI try again. \"So, what the hell was that?\"\n\n\"I needed some dick, what the fuck do you think?! That fucking whore!\" She yells.\n\n\"No, no.\" I say. \"The thing. The... skeleton... thing.\"\n\nShe keeps walking while she talks. \"It was death. A dead thing. As soon as I saw it and saw what it was doing to that guy, I wanted to destroy it.\" She frowns for moment. \"Actually, now that I think back to what I can remember, I don't think I cared at all about the man dying. All I knew was there was this unnatural thing that shouldn't exist and it smelled like shit. Huh. Is it sad that all I thought of that guy was that he was meat? Dying, weak meat? I saw that fucking woman there too but all I knew was that thing was there and it shouldn't be real. Everything went red and I only remember bits and pieces after that.\"\n\nShe shivers and I pull her close to me. \"The way it's neck felt in my mouth. I was burning up. I needed to kill something. I thought, 'neck' and 'vulnerable' and that was it. When it was broken and gone I was more awake but still burning hot and you were there with me. You don't know what it's like. Or maybe you do... You're unlike anything else. You were huge and strong and on the ground with me, killing that thing. I wanted to lick your muscles. I wanted to suck your cock dry. I wanted you to mount me like your bitch and pin me to the ground. You're powerful. I wanted all of that. I went from killing to wanting you in me hard and fast and that fucking bitch ruined it.\" Her lips are pulled back and her eyes are dangerous. \"Whatever we did last night bonded us and changed us, I know that now. I still want to kill something. I still taste blood in my mouth. I want to be fucked.\"\n\nWe get to the car and are almost inside before we both stop to face back to the mall. Our nostrils are flaring and we're both catching the scent of something bad. There's a darkness on the corner of the roof about 100 feet away. The sun is out but there's a wavering oval shape of pure black that's rippling in the wind. It smells like the thing in the mall but slightly different and much stronger. It smells like a chemical plant from hell.\n\nI've taken two steps towards it. I'm standing next to the back of the car with my hand on the frame between the door and back window.\n\nSuddenly, something shoots out from the void, lightning fast. Time slows for me again but the bolt is moving so fast - straight for Sarah. I grip the car frame for purchase and it crumples like paper. All of the back windows shatter and I launch myself over the trunk towards Sarah. The car heaves and the rear driver tire explodes.\n\nThe bolt burns through a small tree (setting it on fire and breaking it in half) and is almost touching Sarah by the time I slam into her. The blackness was aimed for her heart but she moved slightly at the last possible second and I reached her just in time to push her a little more. Whatever it is goes through her side and then burns a deep groove through the concrete parking lot. Sarah is down and I'm lying on top of her. She's screaming and jerking. I'm trying to move her hands from her side to see how bad it is. It's grazed her ribcage. I see melted bones and blackened muscle through her skin. It looks like whatever that thing was has cauterized the wound on the way through.\n\nI roar in anger and pain for her. My feet burst through my shoes and the claws dig into the ground. I feel fur flowing in waves down my body and my face is already a muzzle. My pants simple fall apart as my thigh and leg muscles push against the fabric.\n\nI crouch and spring at the thing on the roof. I can feel my tail making minute adjustments as I'm in the air. It moves left and then right and then back and forth a little more as I aim for the roof of a car in front of me. I don't even have to think about it -- the tail automatically adjusts for me. I clear over fifteen feet before landing on someone's car. The roof collapses, windows shatter and the axles buckle under me. The car alarm shrieks in my ears. I barely pause -- I crouch into the landing, tense, feel the claws on my feet ripping through metal and then jump again. My feet tear a hole in the roof of the car as I go airborne and the black padding on the bottom of my feet protect me from jagged metal edges.\n\nI jump again and again and again. I leave four crushed cars behind before I finally reach the roof. I have to claw my way up part of the wall. Chunks of concrete fall to the sidewalk below me.\n\nThe thing is gone but the scent remains. I'm crouched. My feet are long and the toes support my weight as I lie down nearly flat. The muscles on my arm are thick and I feel them vibrating, waiting to be used. The claws on my hands dig into the floor below me. Dark brown fur lines my body and my sheath is holding my dick close to me. My tail is held low to the ground and steady. It's an extra weight on my spine but it's comforting and gives me extra balance that I didn't think I needed.\n\nMy ears twitch, looking for signs of something moving. I'm drawing in the scent through my muzzle and tasting the air with each deep breath. There's nothing other than the smell and a round black spot burned into the ground where the thing hovered. I memorize its scent and I know I can track it if it ever shows up again.\n\nSarah's not screaming anymore. I see from here that she's pulled herself into the car and has the seat back. I can hear her breathing fast but she doesn't sound panicked. With a last look I turn and walk on all fours to the edge. One family is just now getting out of their car and heading into the mall. They aren't close to us but they're too close for me to move. I wait for them to go inside and then give them a few moments before grabbing the side of the building and leaping.\n\nAt this height I clear nearly fifty feet before landing. The cement cracks around me and I crouch into the landing, skidding on my hands and feet. My arm and leg joints yell at me in pain for a second before adrenalin or my fast healing takes over. The thick padding on my feet and hands rub off slightly on the ragged ground but they're tough and I dig my claws in to stop. I put a dent in the side of a hummer as I come to a complete stop. If I had kept jumping or running then this wouldn't be a problem but I need to be careful in the open.\n\nI only now realize that my tongue is out and I'm panting. I laugh at myself but it comes out as \"grufaw\" because of the muzzle. Between waiting for people I slowly make my way to our car. I stay crouched on all fours to keep a lower profile. I'd be huge if I stood straight up. Someone's noticed the other cars and is wondering whether they should call the police but his girlfriend tells him not to get involved.\n\nSarah reaches over and opens the back door of our car when I get close. It's tight and I have to push my way in. I try to ask if she's okay but it comes out as a strange whine that ends in a question mark. She's taking deep breaths and has her eyes closed but guesses what I'm asking.\n\n\"Fuck how I'm doing. Did you kill it?\" I growl in frustration and she sighs. \"It's not there anymore, is it? I can't smell it as strongly. Fuck, this hurts. Did you see what it did to the parking lot? Fucking thing.\"\n\nShe turns her head around and looks at me with one eye. \"Hey,\" she says. \"Thank you. You saved my life. \"\n\nI get my head around and nuzzle her neck, licking her. My tongue is long and rasps on her skin. It seems to soothe her and she makes a satisfied noise. \"Of course,\" she continues. \"I was already moving out of the way and your retarded tackle probably didn't actually help that much. Other than breaking your car, of course.\"\n\nI bark a laugh (that actually comes out as a bark) and bite her shoulder. She squeals at me and pushes at my muzzle. \"Get off me! You're attacking a dying woman. Mad dog! Mad dog!\" She dissolves into laughter that trails off into giggles. I grin through the muzzle and it feels funny. It probably looks like I want to eat something rather than smiling.\n\n<br> CHAPTER 11\n\nI lick Sarah's shoulder, neck and ear before settling back into the car. My change back is slow but happens when I calm down. It's itchy but not painful. I find myself wondering where it all goes as I wait to go back to normal. Then I start wondering how the hell I'm going to get back home without any clothes. Sarah calls me a moron and tells me she'll just run in and buy something for me to wear.\n\nI have her show me the wound. It's partially healed but it's ugly. If it's healing at all any more then it's going really slowly. The skin around the edge of the wound is black and I can still see the muscle and bone. She says it doesn't hurt but I can smell that she's lying. We use the ripped t-shirt and a roll of Gorilla tape from the car's trunk to patch her up temporarily. It takes some creativity to get the tape under her breasts and still allow her to breathe but we do it.\n\nShe strips to changes into her new clothes before getting out and her hand strays to her side occasionally. She winces when she gets out of the car but stands straight and tall. I admire her strength.\n\nShe whines about her new bra making her side hurt but I tell her that if she doesn't wear it, I'll have to follow her naked and beat the men off of her. She laughs and tussles my hair.\n\nI grab her wrist before she leaves. \"If I smell anything like those things then I am going in there, naked or not, changed or not. You come back to me if you see them. Don't fight them alone.\" She taps her lip with a finger and watches me for a second. \"Deal.\" she says and I'm a little surprised she agrees so easily.\n\nI sift through conversations around the parking lot while I wait for her to come back. It sounds like two people finally called the police. Mall security is looking at one of the cars but have no idea what happened. A younger guard asks about hail and there's a pause before an older guard calls him an idiot.\n\nI smell Sarah even before she opens the glass doors to come back outside. A tightness in my chest relaxes a little and I smile at her when she shoves a bag through the window.\n\nIt takes several different positions before I find one that lets me stretch my legs to get the pants on. She bought a pair of dark blue jeans that are slightly bigger than I need but I appreciate the extra size. A black polo shirt goes with it. She tells me she had to go to three different stores to find shoes that fit my new feet size.\n\nMy cell phone is still amazingly intact in the glove compartment. I call my insurance company and tell them some freak accident happened in the parking lot. They're skeptical but I tell them about the other cars so they call out for a tow truck to haul it off for inspection. We wait just long enough to make sure the tow truck loads up the right car and then we find the right combination of buses that get us home.\n\nSarah's tired on the ride home and mostly leans against me. Her head fits nicely against my shoulder. I hold her close, careful of her side. She clenches her teeth on some of the bumps.\n\nBack at the house I order three large pizzas and we settle in for the evening. Sarah's appetite is good but she's sweating and I can smell something different about her. There's a stench coming from her wound and it's mingling with her smell.\n\nShe finally looks at me and says, \"What? You've been itching to say something and you're worried about me. My nose doesn't lie. Apparently. Now, anyway.\" She tries to grin but it comes out as a grimace.\n\n\"You need to be in bed.\" I tell her. She tries to wave me away but I press on. \"No, seriously. You look like shit. You're sweating and I see you shaking every so often. My nose is just as good as yours and that thing in your side smells like rotten meat.\"\n\n\"Oh, thanks, ass. I'm fine. It's healing and...\" She stops and clutches her side. I barely have time to react before she pukes up half of what she's had for dinner. I see and smell blood in the mess. \"I'm f...fine. Fuck off. I'll be fine.\"\n\nI stare at her and then simply pick her up. She struggles but it's half-hearted. She's in pain and weak. I bring her to the bedroom and lay her down on some clean sheets.\n\nI've never really taken care of anyone beyond the standard cold or flu but I know the basics. I'm able to get her clothes off and she only makes a meager attempt at sexual humor. Now I know she must be sick. She feels hotter than normal so I bring her a thermometer. Decades of living as a normal human cause me to freak out when it reads 135 degrees. Thankfully, I remember our higher body temperatures and stop myself from calling 911. She's lucid and seems mostly okay otherwise so I think that's just our new fever temperature. I could've lived without learning that.\n\nI bring wet towels for her neck and forehead and I clean out her wound as best as I can. She only bites me once in pain and then contents herself with shredding the rest of our mattress. I call her a baby several times but I'm a little worried. There are black and green bits in the wound. I vaguely remember high school biology and there's nothing about green tinges to muscles that I can remember.\n\nIt takes her throwing up three more times before there's no more blood in the vomit. She's sweating profusely and keeps her eyes closed. I towel her off the best I can\n\nThe green coloring is finally fading and the black parts are flaking off inside her. My heart comes down from my throat when her breathing becomes steady and relaxed. She's even able to keep down some Gatorade after a while.\n\nI don't know what time it is when I finally strip down and settle next to her in bed. We're both too hot for sheets or blankets so I just lie next to her. She whimpers in her sleep and it's a half animal sound. It makes me grind my teeth and feel useless. The wolf in me feels like a failure. I should be keeping her safe. We watch each other and protect each other. Failure! If she had died... I don't know how to finish the thought. I'm snarling and my blood is racing. My anger makes Sarah thrash against me in her sleep so I force myself to calm down for her sake. Stupid. Stupid mistake."
    ],
    "authorname": "Lycandope",
    "tags": [
        "werewolf",
        "magic",
        "violence",
        "ogres",
        "transformation",
        "threesome",
        "mmf",
        "two women one man"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-change-9"
}