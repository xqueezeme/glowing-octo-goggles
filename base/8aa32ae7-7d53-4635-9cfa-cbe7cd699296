{
    "title": "The Experiment Pt. 03",
    "pages": [
        "Note: With this final story in this storyline, just don't forget to mind the category. If it's not for you and you want to know how the story ends anyway, you can read the last few paragraphs...\n\nEdited by: Pope1944. Thanks!\n\n*\n\n\"You know Heather, despite everything I've discovered about you these past couple of months, there's one thing that absolutely has to be clear.\" I told my girlfriend. \n\n\"And what's that my dear?\" she replied in a smooth voice, her mouth right to my ear. \n\n\"I'm not a submissive person...\" I wasn't sure of how she'd react to this. She knew it; it wasn't the first time I was saying it out loud. I moved very slightly, trying not to show my nervousness. \n\n\"Oh really? Are you very sure about this?\" she asked.\n\n\"Yes.\" I replied, gasping. To my credit, I only gasped once. \n\n\"Hmmm. Tell me, lover, have you ever been with a dominant partner? A really dominant one?\"\n\n\"Well, no. I never have.\" I admitted. \n\n\"So you're more of a dominant man yourself?\"\n\nI grinned, shaking my head. \"In life or in bed?\"\n\n\"Is there a difference?\" Heather replied, squeezing her hand harder.\n\n\"Yes, of course.\" I said, shaking my head slowly. \"In philosophical discourse and argument, I'm quite dominant, but other than that I'm not a boor. And in bed, well, it depends on the\u2014\" I stopped short as Heather squeezed again, but managed not to gasp this time.\n\nHeather glanced at me and cleared her throat. After licking her lips, she calmly said \"On the woman? So you've never been with a man?\" She was smiling as she asked that, looking me right in the eyes. \n\n\"Nope, never.\"\n\n\"Shame... I know of a few men that would love to play the domination-submission game with you.\" As she finished, she squeezed her hand again, her saliva making a distinctive squishing sound. \n\n\"Oh...\" I said involuntarily. \"Well in bed, with you,\" I specified, \"I'm up for most things. But in life\u2014\"\n\n\"Again; is there a difference?\" She interrupted me. \"You think that when we're out shopping, or with friends or on campus, that I don't think about fucking you, about sucking your cock or pressing my pussy against your face?\" When she finished, she slipped her hand up and down, making me squirm. \n\n\"Shit!\" I exclaimed, grinning. But I tried my best to focus. \"You remember my tease about you and men with low willpower?\" This was a while ago, when I had told her that all her boyfriends had been submissive men. \"Well, I'm not one of them. Think you can handle that?\" I said in what I hoped was a confident voice. \n\n\"Sure, I can handle that no problem. How about you? Think you can handle me?\" she asked, breathing faster. \n\n\"I think the answer to that is obvious. How about you untie me and\u2014\"\n\n\"Oh no... we're not done talking.\" \n\nI swore mentally as she said that. \"How long have I been here?\" I asked. I could see in her smile that she was, in fact, surprised I had lasted this long.\n\nIt had begun about thirty minutes ago. With a dare of course. Heather told me that she'd be able to reduce me to a quivering mess unable to hold a conversation. I said \"Go for it!\" and so a few minutes later I was utterly naked, standing in her spacious living room, with my hands tied together straight above my head and attached to a long taut rope. Heather had then disappeared in her room and come back wearing nothing but a garter belt and suspenders. She had loosened her dark hair and as she walked towards me I stared in wonder at her bright beauty. Even back in our first college year, as students, Heather had had a stunning figure. At twenty she'd already had the curves that would have made any woman jealous. Even though she had never tried to dress to enhance or flaunt her breasts, hips or ass, nobody could have missed them. \n\nHeather was now fully ripened, the glorious bloom of a woman at her peak. Even if I had seen her naked many times by now, when she came out wearing nothing but those suspenders, I had been buffeted by her sexual presence and felt myself tremble. And get hard. Her large breasts had swayed and shook with her every step, her pale pink nipples almost glowing on her tanned skin. For me, in her living room, she had deliberately walked like a model, highlighting the curves of her hips and roundness of her thighs. The pure white lingerie a stark contrast on her golden skin. The thin strip of dark pubic hairs above her pussy served as another contrasting point. \n\nA minute later she was standing right in front of me and my cock was betraying my feelings by standing fully hard. And so she had begun to caress my cock with one or two hands, had taken me in her mouth as I talked, and had even slipped my cock against the wet lips between her legs. Sweet torture. \n\nNow, twenty-five minutes later, I was still talking somewhat coherently despite her best efforts. And the subject was rather important. I wasn't, in fact, a submissive man in real life. And it was now perfectly clear that Heather was a dominant woman both in and out of bed. The ball had made that explicitly clear. \n\nI had to take control over the conversation. And suddenly I knew how. \"Heather... Domination is fun and all, but didn't you tell me that you were a feminist?\" Of course she had, it was one of the defining features of her life. \n\nShe froze for a brief moment as I said that before replying \"Yes, of course I am. That's why you're standing there all tied up and I can do whatever I want with you.\" \n\nShe sounded calm but I knew I had her on the defensive when she turned around, her back now to me. She then rose on the balls of her feet and proceeded to move back against me, pressing her sweet ass on my cock. Given that my cock was pointing upwards, it didn't bury between her legs. Instead, it ended up pressed between my belly and her ass, its underside enfolded deep in her crack. Heather moved her ass from side to side, my saliva-coated cock between her buttocks. \n\nShe then reached between her legs and placed her hand gently on my balls. After a minute, she moved away and pulled my cock down, trapping it between her legs this time. I felt her wet and burning pussy on the topside of my cock. Heather began moving forwards and backwards slowly, teasing my entire length with her lips. \"You were saying?\" she asked, a hint of laughter in her voice. \n\nLooking down, it really looked like she was fucking me, moving back and forth like this. I scrunched my eyes closed for a moment and said \"I was saying that a feminist should strive for equality, not domination.\"\n\nAs I said that, I saw her shoulders dropping slightly and she dropped on her heels with a sigh. I was pretty sure she was about to concede defeat as she pulled away from my cock. But as the tip of my cock slipped against her anus, I gasped one more, and last, time. When she turned around, I saw her expression change. She had indeed been ready to concede, but her eyes widened and her grin flourished. \"Really?\" she asked, excited like a schoolgirl. Heather even jumped up and down a few times, making her decidedly-not-schoolgirl breasts bounce with her. \n\nShe stared into my eyes a few seconds. \"Really Jer? You're into anal?\" I didn't say anything, knowing I couldn't fake my way out of this one in my current state. \"Oh my gods!\" Heather said, jumping up and down again. \"Oh right! I remember the bit with Aoife, when she was...\" she stopped herself. \"Oh boy, do I have you now! You mean that if I do that again...\" and she did, turning around and pushing my cock against her asshole, \"that you'll be putty in my hands?\"\n\n\"Untie me and we'll see who will be putty when my seven inches are sheathed in your ass!\" I growled.\n\n\"Oh no mister... Oh no no no.\" Heather was still grinning. She had pulled away again and had turned back around, looking at me with glee. \"Did you know that anal sex is the ultimate submission for a woman? Or that I've never let any man there? Or that I'm never going to let one? But now I know how I can get you to break!\"\n\nI didn't know if her use of the word 'man' was deliberate of just generic. Had she let a woman...? In any case she turned around once more, rose up on her toes and slipped my cock against her pussy before pulling out and letting my glans tease her asshole. And I was indeed broken. My cock was covered with her juices and slipped sweetly against her anus. I twitched forward, vainly trying to test her resolve against anal sex. It failed, obviously. I was still securely tied and couldn't move with any sort of force. \n\nHeather was laughing, and I couldn't do anything about it. She had kept me on the verge of climax for the past half hour with her hands and mouth. Now with all this talk of anal sex with my cock against her asshole, I was completely unable to hold any sort of conversation. There was only one thing I could do. \n\nTaking a deep breath, knowing I was very close to climaxing, I hid it the best I could and started talking. Or tried to. I wanted to make her believe that I was going for one last attempt. After a few words, Heather reacted as I hoped she would: she used her hand to rub my cock against her asshole a bit harder. And that was all it took. I hid my climax until I exploded against her sweet little asshole and she gasped as I did. And laughed. She held my cock against her hole, letting me spend myself on her. \n\nClimaxing while tied up was a new feeling, both frustrating and exhilarating. I kept trying to push against her, but she was squarely in control. She did keep rubbing my cock against her and the feelings were remarkable. I had an anal fetish, and it had been a fucking long time since I had sodomized anyone. This was pure delight... and frustration at the same time. When I was done she released my cock and dropped down on all fours in front of me. I could see some of my sperm on her asscheeks, but most was dripping down lower into her crack, coating her pussy lips before falling to the floor. \n\nHeather then leaned down even more until her face was on the floor, her ass thrust upwards towards me. She then grabbed her ass with both her hands and played with my cum for a while. \"You like this, lover?\" I could only nod. When she placed one of her fingers on her asshole and played with it I gasped out loud, seeing and feeling my cock twitching. \"Oooh... This feels really nice!\" she cooed, teasing me like a demon. After that she slipped part of her finger inside her ass, pushing some of my sperm with it. \"Well, what do you know... there's now some of your cum inside my ass.\" she sighed loudly. \"And to think that your cock won't ever go there... Such a shame...\" \n\nI tried one more time to break the strap that was binding my hands... in vain. I wanted to drop behind her and fuck her. I was still hard, perfectly hard despite having just cum. Heather on her knees, ass outwards, with her asshole filled with my cum... Shit! And the damned woman knew it! She turned her head and looked at me. \"What would you do if you weren't tied?\"\n\n\"I'd fuck that perfect asshole of yours until you'd start talking gibberish, overwhelmed with too many climaxes...\"\n\n\"Even though I told you I didn't want that?\" she replied, her voice slightly different. \n\nAs I looked at her as she stood up and turned around to face me, I could see that she was more serious. She looked at my cock and smiled. She came very close to me, pressing her breasts against my chest, and whispered into my ear \"You can do whatever you want with me, but don't try to sodomize me without my consent, please.\" Again, I knew she was serious this time. I didn't know how I knew, but even if she was smiling, something was different. Heather could move from this dominant roleplay to an authentic voice in a blink of an eye. But wasn't she dominant in real life? Right now, I was completely at a loss. \n\nI nodded, adding \"Of course... Never without your\u2014\"\n\nBut she interrupted me. \"No self-respecting feminist would let herself be sodomized.\" My eyes narrowed as I looked at her: her expression was different once again. Not playful, exactly, but not serious anymore either. Was she teasing me still? Was she dead serous about not anal sex? I was unsure of what she was trying to say. All I knew was that she didn't want me to fuck her ass. At least not now. \n\nAfter that she brought the little step right in front of me, climbed upon it and began to untie my hands. I leaned down and grabbed the perfect nipple that was just at the right height, and sucked it in my mouth. Heather gasped and moaned as she untied me. My arms hurt a bit as I brought them down, but I didn't care. I grasped Heather, forcing her breasts against my face as I feasted. After a few minutes though I needed to fuck something. I turned her around on her little step and slipped my cock between her cheeks. When I found her warm pussy I pushed up wards and finally impaled myself inside her. \n\nWe both moaned at the same time and I began fucking her. This position was fun, with her higher than me, but I needed something more intense. Heather was rather tall for a woman, and soon I pulled her down from the step. Holding her from her hips I began pounding into her. It felt so damned good! \"Still hard... That's good,\" she said. \"That's very good...\" I had been teased for a long time, and despite my amazing release against her asshole, I wanted more. Grabbing both of her massive breasts in my hand, I pulled her close against me, forcing me to slow down a bit. Whispering into her ear in turn, I asked \"Can I just caress it with my thumb?\"\n\n\"Hmm hmm, yes, but no more.\"\n\nI pushed Heather on all fours, then pressed her head down on the floor. With both my hands on her ass I fucked her hard again, staring at the mess of sperm all over her. When I placed my thumb on her asshole I growled, caressing the sensitive skin and feeding my fetish. Soon, even though raw pleasure was beginning to overwhelm me, I noticed that Heather was also responding to my caresses, moaning in time with my thumb as it pressed slightly harder. She was breathing faster and faster as well. It could be because of her own impending climax, but it could also mean that she wasn't as opposed to anal sex as she claimed. \n\nThat would have to wait for another time, though, as I felt my climax cresting inside me. When I began crying out I felt Heather twitching in front of me, her own climax exploding. We came together, and while I managed not to push my thumb inside her, I never stopped caressing her asshole as I spewed whatever was left of my cum inside her pussy. \n\nI finally crashed upon her and we fell to our sides. I managed to keep my cock inside her as I was spooning her, trying to help her stretch her climax for as long as possible. Eventually we stopped gasping and I said \"You know, one day you'll be the one strapped up there, and I'll have my way with you...\"\n\n\"Oh no you won't... I'm the dominant partner, remember?\"\n\nWe both laughed, but some part of my mind wondered how serious she actually was. She knew, knew it perfectly well after being my friend for more than for ten years and after the discussion at the ball, that I was not like her previous boyfriends. I had met most of them, and it was obvious that Heather usually chose submissive men. Yet she had chosen me and she was maintaining her dominant facade. The coming week was shaping up to be memorable, as we would probably have to solve this through sex like this... \n\nI woke up alone the next morning in Heather's bed. She was gone for the day, having a class and a few meetings today. Downstairs I found a letter from her. Here's what Heather had written. \"Dear lover. I know you'll be glad to hear this: I've decided to I'll let your fuck my ass! Yes, really! Before though, there's something you'll have to do. Or agree to let me do. It's simple really, and won't be long. All you have to do in order to get access to my lovely little asshole, is, simply, to let me fuck yours with a strap-on dildo. Simple, no? Love, Heather. xxx\"\n\nOh the little minx. The little bitch! I laughed out loud, alone in the kitchen. While I was not, in principle, opposed to submitting to her strap-on, I still had reservations. First, if I agreed, it would mean that she would win. Even though being sodomized was indeed a submissive thing, if I went through with her proposal I would be the submissive one. Second, I had never had anything in my ass before! I was aware that anal sex could be painful if rushed, or even when done carefully, but her proposal brought that pain home. \n\nI had never had a girlfriend that viewed anal sex as a normal part of our sex life. One of them had let me do it more than the others, but it was always a special thing. None, of course, had ever proposed to sodomize me! I had never considered that aspect of my fetish. I spent the rest of the day thinking about it, and the solution I came up with was both ingenious and, of course, completely dominant. \"Now, how can I get my hands on Aoife's email or phone number?\" I thought with a naughty smile. \n\nWhen Heather came back from campus later that day, she invited me to a restaurant. She then disappeared to her room to change and told me to install a specific app on my phone in the meantime. I was puzzled, as it was an accounting app, but did as she told me to. I explored the app a bit before she came back down and was still curious as to why she wanted me to install it. \n\nWhen she reappeared, I grinned. And growled. On campus and around town, Heather always dressed conservatively. She wasn't conservative at all though. It was just a decision she had taken years ago, the best way she had found to reconcile her luscious, preternatural curves with her staunch feminism. She couldn't exactly walk around looking sexier than a fertility goddess and preaching feminism. Well, technically she could have done it as it's not a direct contradiction, but it would be harder to get her message across. Just like if I tried to teach philosophy wearing a pink tutu. \n\nBy looking at her, it was obvious that we were going out of town for dinner. She was wearing a rather tight leather jacket which did nothing to hide the deep valley of her cleavage. In fact, it was clearly cut to enhance it. A flat chested woman, or even one with average sized breasts would look silly with such a jacket. Heather? She looked positively dominant. Her tight black skirt helped with that look, but most of all, her ponytail was the defining factor. \n\nShe often tied her hair in a simple pony tail, either right at the base of her skull or slightly higher. But with very long hair like she had, if she tied it too high, it swished around too much and attracted the attention of every male around. Tonight, she had tied it as high as it was possible to do it. And it wasn't simply held by a elastic band. Oh no. It was a firm tube, approximately five inches long, which rose from her skull until it freed her hair. It made an impressive sight, and if the sexy leather jacket wasn't already a clear enough sign that Heather was dominant, this made it explicitly clear. \n\n\"Hmmm... I like the look.\"\n\n\"Why thank you!\" she replied, a genuine smile on her lips. \n\n\"Is it a coincidence that the tube is about as long as my fist is large?\"\n\nHeather stopped walking and looked at me. Her expression had changed, had become a lot hotter. \"My dear... You keep thinking that you're the dominant partner here. Tsk, tsk, tsk... Now, give me your phone, I need to do something to that app.\"\n\nI smiled, enjoying this game, and gave her my phone. \n\nI tried my best to make her explain that accounting app, but failed. As soon as we got our table, she went to the bathroom. I looked around me, trying to see if I recognized anyone, perhaps from the ball, but nothing popped up. It was all very mysterious. When she got back at our table she asked, without preamble and with a very neutral expression on her face: \"Are you interested in my ass only for you, or for my pleasure as well?\"",
        "\"What?\" I said, almost choking on the bread. \"Well, for both, of course. Are you telling me you like anal sex?\"\n\n\"I said no such thing.\" she replied, her expression still very neutral. Almost formal, as if she was talking to a student that got a bad grade. After clearing her throat, she looked into my eyes for a few seconds and said \"If I agree you could pleasure my ass, would you like that? Even if that didn't give you any pleasure at all?\"\n\nI narrowed my eyes, very curious about her intentions yet glad we were talking about anal sex. \"I guess so, yes.\"\n\n\"Ok then. Load up that accounting app.\" She shushed me before I could ask any more questions with her finger on my lips. \"Just do it. Ok, now, swipe upwards, wait two seconds and swipe to the left.\"\n\nAs I did, I saw the app blacking out and then single red button appeared on my screen. I pressed it and saw Heather starting on her seat. I looked up at her, eyes wide. \"Are you serious?\"\n\nShe nodded, then whispered \"I can't turn it off on my end without taking it out. You're in total control, my love.\" \n\n\"You mean that I can do that at will and as long as you stay here, you can't stop me?\"\n\nShe nodded again. \n\nI was shocked. I was fully aware that the fact that I'd known Heather for ten years, as a friend, wasn't any guarantee that I knew her sexual proclivities or most of what she liked or didn't like in bed. Yet seeing her in a very public place wearing provocative clothes, utterly dominatrix ponytail with a bluetooth enabled buttplug in her ass? That was mind blowing, even considering what I had seen and heard at the ball. \n\nI found that my heart was racing, and that it was getting very hot in here. I pressed the button again for a second and saw her squirming on her chair, a peculiar smile on her lips. I leaned forward and said \"Think you can cum from just from that?\"\n\nShe looked at me, the fire bright in her eyes, and replied \"It's all up to your fingers dearest.\"\n\n\"This is going to be a nice evening...\"\n\nAnd it was! Twenty minutes later I could see that Heather was becoming giddy, and that her powerful mind was starting to falter from too much pleasure. I came close to letting her climax earlier, keeping my finger on the button for a long time while I whispered a sexual fantasy into her ear. When she grabbed my thigh forcefully and held her breath, I released the button and stopped talking. \n\nThe fire that I had seen in her eyes turned to rage and she was clearly angry with me from stopping. \"What?\" I said innocently. \"We're just talking, right?\" I saw her upper lips curl back like angry wolfs do, but she didn't say anything. \"So, Heather my love. About that anal sex proposition. Think we could skip it? Think you'd let me have your ass if I keep my finger on that button until your climax?\"\n\nHeather laughed slowly, a low-pitched laugh that was both very seductive and scary at the same time. \"Oh my dear... You have no idea how long I could resist this type of punishment. Women aren't slaves to their impending climaxes as men are, you know?\"\n\n\"Oh, really? Then why are you looking at me as if you wanted to kill me?\" She didn't reply, then jumped when I pressed on the button. \"Come now Heather... You placed yourself in that situation. You know I could let you cum right now. Here and there, no waiting, no more teasing. What do you say?\"\n\n\"And let you fuck my ass before letting me have yours? Not a chance!\"\n\nI knew I would not win that debate. I sighed, took another deep breath and looked at her. \"Do you know, Heather, that if do get access to that delicious asshole of yours, through whatever means, I'm going to pound into you like a stallion in rut?\" I pressed on the remote as I finished talking and she jumped again. I could see that she was still close to cumming, and I guessed that she used her thighs, closely pressed together, to maintain some stimulation when I released the button. \n\nThis time though, I wouldn't release it. I wanted to see her climax right here in the restaurant. \"What do you think about that, my love? Eager to get my fat cock in that small little asshole of yours? Think you can handle it, handle the intensity with which I'm going to ravage it?\" Her expression told me that she was loving every single word that were coming out of my mouth. \n\nIt also confirmed that Heather loved anal sex and that she was just playing with me. Heck! She was wearing a bluetooth buttplug in a public restaurant, for Christ's sake! That confirmation meant that any reluctance I still had regarding my plan with Aoife simply evaporated. But that was for later. Right, I had a job to do. \"Can you feel it Heather? Can you feel my cock forcing your delicate sphincter apart, pushing it wide opened? Can you feel every inch of my cock sliding deeper and deeper into you until I would feel the curve in your colon?\" When she opened her eyes in surprise, I added \"Oh yes, that can happen my dear. I'm not some submissive, weak-minded, pathetic excuse for a man... Oh no. I will not stop if you moan in slight pain. I'll just take my damned pleasure and ride you until I fill that well lubed and fully loosened asshole with my sperm.\"\n\nShe was climaxing even before I could finish my sentence. Seeing her climaxing in the restaurant was a remarkable experience. Both her hands were grabbing the edge of the table, her knuckles were white, she was halfway hunched over the table and she had stopped breathing a while ago. Her face was completely red and glistening with sweat. She was, essentially, a sex goddess. I now had a hard-on that could cut steel yet no way to make use of it here. \n\nWhen she placed her hand on my arm and tapped it twice, I released the button. She was trembling and breathing hard all the while trying to remain inconspicuous. Eventually she calmed down enough, gathered herself and said that she was going to the bathroom. \"And don't even think of hitting that button while I walk away or I'll make you pay!\" she whispered into my ear.\n\nBut I grabbed her arm. \"Oh my dear, I think you're misreading the situation. The question is not what you're going to do if I press this button. Oh no, no, no. Rather, it's 'What re you going to promise me so that I won't press it?' Is that clearer?\"\n\nStanding right next to me, Heather was both angry and extremely aroused. She smiled, shook her head and leaned down to say \"What if I promise you that you could eat my ass? Would that be enough?\"\n\n\"Oh yes... Tonight. As soon as we're back from the restaurant.\"\n\n\"Pfff! Pervert!\" she threw at me before turning away. \n\nI was laughing as she walked towards the bathroom, and half tempted to press on the button anyway. About 45 minutes later we were back home and she headed for the shower. \"When I come back out,\" she said, \"you should be fully naked on our bed.\" I grinned, thanking that those words could vie for the record of the least necessary words of all time. \n\nWhen I saw Heather walking up the stairs after her shower, fully naked and dripping with water, I trembled on the bed. She wasn't a huge fan of sexy stripteases, and her body was a force of nature that didn't need inflated anticipation in any case. As I saw the body with which I was, incredibly, becoming more and more familiar with, my mouth fell open. \n\nHer two large and heavy breasts moved slowly every time she walked up a step, dancing lazily as if they were as confident as Heather was herself. Then her slim waist gave way to her hips, already wide, which were enhanced by her raised legs. The smooth curve of her upper thigh melding into her hip and then vanishing into her waist, which appeared and disappeared on either side, was hypnotizing. \n\nWhen my eyes focused on her pussy, and that thin line of unshaven dark hair, my heart skipped a beat. I was going to fuck that pussy very soon. But first, and Heather was very aware of this, I was going to eat that lovely ass of hers. As if by accident, once she was up the stairs, she turned around and bent forward. I gasped when I watched her two voluptuous asscheeks, clearly defined by fine, smiling apple lines on either side, part slightly as she bent at the waist. Of course I could now see her large pussy lips, but most importantly I could see the freshly cleaned asshole I had been fantasizing about. \n\nI finally noticed that she was holding a long leather strap in her hand. I had no idea what it meant, but I soon forgot about it when she bent over a cabinet, pushing her ass out. I was still reclined on the bed, naked as she was, my cock already hard. I remained there, enjoying the stunning view, the bulbous curves and darker cleft in between. I sat on the bed and crawled down like a beast until I was kneeling right behind her. And then I feasted. \n\nI had kissed her asscheeks many time in the past, but now, instead of that being the goal, it was merely an entree. I used the tip of my tongue to tease the droplets of water, planting small kisses. Soon I was licking her from the apple of her ass to the small of her back. We were both beginning to moan. \n\nWhen I shifted from the first cheek to the other, I was planning on teasing that second one in the same manner. Instead, I was caught by the strap. Unbeknownst to me, Heather had slipped the strap between her thighs and the cabinet, and had been ready for me. When I moved over her crack, she slipped both ends of the strap around my head and pulled me tight. \n\nShe, in essence, forced me to do what I had been planning on doing: burying my face deep in her ass. I tried to laugh, breathe and lick her pussy at the same time and failed at all of them. When I placed my hands on her thighs, I managed to pull my head just enough so that I could reposition it slightly and felt myself being pulled deeper. And this time, my opened mouth covered her entire pussy. \n\nWhen I pushed my tongue inside her I immediately tasted her drenched pussy, that intoxicating taste I had grown to crave. My nose was crushed against her asshole and my cheeks were squashed between hers, but I was in heaven. She released the strap slightly and allowed me to breathe. But before she could pull me back down to her pussy, I titled my head and ended up with my mouth right on her asshole. \n\nI heard her laughing, as if from afar, as I abandoned myself to my little fetish. I had enough slack, so to speak, to move a bit. I began by kissing her asshole and soon I was rimming her, making my tongue dance on that taboo spot. My erection was now raging and I was really glad to hear her moaning in pleasure. At this point I didn't really need any more confirmation, but there it was again. Heather loved anal!\n\nSlipping my hands under the strap, I grabbed her cheeks and pushed them apart. With the added space, I opened my mouth and pressed my tongue against her hole. I felt her shivering and to my surprise, she relaxed immediately. Oh the thrill! Oh the perverse thrill of this anal fetish. And how incredible it was to be able to let myself loose with the woman I had secretly loved for so long! It was dirty, it was taboo, it was unhygienic... Yet I was floored with so much damn pleasure I was feeling. Heather pulled on the strap much harder, as if to pull me deeper into her. \n\nI began fucking her ass, as much as one truly could with a tongue, and I felt her responding, pushing back. I was in fucking heaven! I squeezed her asscheek twice and she released the strap so that I could breathe before diving back in. As I was taking deep breaths, my heart racing at 120, she asked me \"Wanna sodomize me?\" in a voice that told me she wanted my cock more than keeping up her little game. \n\n\"Shit yes!\" I exclaimed and tried to get up. \n\nBut she tightened the strap again and I found my face pressed sideways against her round ass. \"So you'll let me sodomize you?\" \n\n\"What?\" I mumbled, with my jaw barely able to move.\n\n\"That was the deal, yes?\"\n\n\"Damned minx!\" I said after she released the strap just a fraction. \"That was your deal!\"\n\n\"Ok then, eat my ass, mister!\"\n\nAnd I kept going! I stormed her crack, from the bottom of her spine all the way around to the top of her pussy. And it was working like crazy! Heather was breathing harder and harder, as well as moaning and groaning. When I felt that she was on the verge of climaxing, I was very attentive to the reactions of her body. I placed one of my hands on her buttocks, with a finger very close to her asshole, and the other one all the way around her thigh. \n\nWhen I felt her spasm with the ignition of her climax, I slipped that index finger against, then inside her asshole as my lower lip was pressed hard against her clit. She screamed as I did, but I could instantly hear that it was a scream of raw pleasure. The strap fell away and I repositioned myself at an even better angle, using my other hand to hold firmly myself against her ass. \n\nHeather cried so damned long, overwhelmed with pleasure. Add that to the already long list of confirmations... I felt her legs trembling more and more until she screamed one last time before crumbling all over the cabinet. I stood up and watched her shaking, covered in sweat, experiencing more sexual pleasure than men probably could even imagine. \n\nI though she was exhausted, but Heather surprised me by getting up and taking me by the hand. She pulled me to the other side of the room into what was a small cubicle between the closet and the tiny upstairs bathroom. She pushed me back against the wall with a hand on my chest and then slipped that hand up until she was holding me against the wall by my neck. She then turned mostly around, twisting her ass until my cock was lined up with her pussy. \n\nWhile keeping her balance with her other hand on the opposite wall, she managed to guide my cock against her pussy and unceremoniously impaled herself upon it. With the leverage she had on the other side, and with me pressed against a wall as well, she started to pummel me. Somehow, Heather had managed to transform a position that was usually submissive into a dominant one. I, without a doubt, was the one being fucked. \n\nAnd it was transcendently good! Each of her thrusts, which slammed me into the wall, filled me with a crazy amount of pleasure. I may not be a submissive man, but right now I was in paradise! \"My turn now to make you go crazy...\" she breathed. \"You think you'll ravage my ass, yeah? Guess again... If I ever deign to let you have my ass it will be like this... Look down, lover. Look down and imagine that you're in my ass right now. Being fucking pounded!\" she cried hoarsely. \"You will not ram me, I'll pummel you! I'll slam you into the wall as I push my ass all over your cock. And when your damned length will reach that curve in my colon, I'll simply climax!\"\n\nI was flabbergasted by her intensity. And it was more, so damned much more than enough to push me over the edge. I had devoured her ass for a long time, my erect cock straining to penetrate anything. After slamming me into the wall for a long while, Heather pulled away until my cock slipped out. \"Hold it steady with one hand and spit on it.\" When I did, she impaled herself until her ass hit my body. She then pulled all the way out again before impaling her pussy again. \n\nSeeing her pussy leaving then devouring my cock like this was insane. She was dripping wet and I slid right in most of the time. Yet sometimes she would be just a bit off and the brief pressure before we aligned was wonderful. Sometimes when she pulled away there was an audible plop sound, quickly followed by my moan when she slid back over my cock. \n\nLooking at me, Heather said \"What if I let you lift that cock of yours just an inch... Can you imagine what it would feel like to spear my asshole like this? To bottom out in my ass in less than a second?\" I didn't reply, shocked as I was with the idea. \"And now...\" she added \"what does it feel to know I'll never let you do it?\"\n\nShe was still fucking me in the same manner, pulling completely away before slamming back down. I looked down, seeing my hand keeping my cock as still as possible, and knew that I could simply relax my fingers. Just a fraction. If I did, my cock would indeed pierce her asshole and then... Shit! \"Oh no Jer...\" she whispered hoarsely. \"Don't even think about letting your cock go up.\" She groaned in pleasure. \"But then again, how wonderful would that feel? With my sweet ass all over your big cock... Damn!\"\n\nI was overwhelmed by the combined onslaught of sensations and fantasy. I was being thoroughly fucked and the sweet release was upon me. I don't know how I managed not to let my cock lift that fateful inch... But suddenly it was my turn to scream as pleasure exploded from my cock. I filled her soft pussy with my sperm, soon hearing it being squished and squeezed out of her in this position. \n\nI grabbed her hand and pulled it away from my neck and quickly bent her forward towards the wall. Heather, forced to place both her hands against the wall or else fall on the ground, found herself fucked properly as I finished my climax by taking control. \n\nWhen I collapsed behind her, she turned around and squatted in front of me. Drained and sexually satiated, I looked at her with a silly grin on my face. \"I love you, I love you so damned much!\" I said to her in a panting voice. \n\nShe grinned, a pure grin devoid of any sexual game, kissed me on the lips and said \"I love you too, crazy man! And if you keep fucking me like this for years ans years, I'll probably ask you to marry me myself!\"\n\nShe began to laugh as she realized what she had said, and we were still laughing after making our way to the bed. When she looked at me after we stopped laughing, I could see in her eyes a twinge of worry. About marriage. I whispered, very faintly \"No worries love,\" before kissing her gently on the lips. She grinned again and kissed me back, a lot less gently. We kissed that way for a long time before falling asleep out of sheer sexual exhaustion. \n\nAs wonderful as last night's fun had been, I was still barred from actually penetrating her ass. As we woke up and cuddled this morning, I tried to make her change her mind. And failed. Just as I had let another man fuck her before having a threesome with Aoife, she was adamant about needing to fuck my own ass before letting me have hers. Well, I had something else in mind. \n\nNow, how to contact Aoife. I was aware that it was her real name, and while there wasn't a ton of Aoifes around, this being a college town, there was still quite a few. Could I pilfer through Heather's contacts list? Maybe. While Heather was in the shower, I grabbed her phone and did a quick search. No Aoife. A codename then... I tried Irish, four leafed clover, leprechaun and redhead. Nothing. Damn. I was sure they had had contact outside of the ball. They were much too familiar with one another, and it clearly wasn't the first time that they'd had sex together. \n\nAnd then it hit me. \"Nymph.\" She had called Aoife her favorite nymph at the ball. And there it was. I took mental note of her number and decided to call her this very morning. Later, in my office with the door closed and locked, I took a deep breath and called her. I knew it was her the moment I heard her voice. \"Hello?\"\n\n\"You know, I'm pretty sure you're my favorite nymph as well...\" I said cryptically. \n\nAfter a long pause, she said \"Who is this?\" in her sweet voice. \n\n\"Oh no... You don't remember me. Has it been so long since the time we made love?\" I dared. \n\nMore silence. Then, to my delight, \"Jeremy?\" she asked, laughing with that brilliant laugh of hers. I could almost see the sun in that laughter. \n\n\"What if it is?\" I asked. \n\n\"Well, you're in big trouble! We're not supposed to break anonymity outside the balls... So, wanna grab a coffee?\"\n\nThen it was my turn to laugh. From what little I had seen by talking to her at the ball, both before and after our threesome, Aoife had a bright, quick mind. I was really looking forward to meeting her and not just because she was stunningly beautiful and sexy, nor just because it could potentially be the first step towards another threesome. If she agreed to what I had in mind, I could well work my way to taking Heather's ass without having to submit to the same. ",
        "When I saw her at the caf\u00e9, my heart skipped a beat. As majestic as she had looked at the ball with her made up hair, her mask and the sumptuous ballgown, she was even more attractive now. Her hair in a simply ponytail, a basic clingy white shirt and tight jeans; I couldn't have imagined her dressed any simpler. Yet it worked. Damn it it worked so well on her! \n\nKnowing what we had already shared, I stopped in the middle of the caf\u00e9 when she looked at me. I looked at her from toes to head, bit my lower lip and tilted my head down in a slightly predatory way. And Aoife read my signals like an open book: she flushed, grinned shyly and finally laughed as she invited me to join her. Her cheeks were still sexily flushed when I arrived and she said \"Gods... Judging by your attitude, you're either still with Heather or you've dumped her and are now trying to get me!\"\n\nI laughed and said \"Christ! No, I'm still with Heather.\"\n\n\"I know silly! We don't talk every week, but last time we did, you were still the focus of her life.\"\n\n\"Who is this Heather you're talking about? The one I know treats me like a submissive lover-of-the-day...\" I asked. \n\n\"Pfffff!\" She exclaimed, laughing. \n\n\"But if I were to try and get you, what would be... er, my chances?\"\n\nAoife narrowed her eyes and smiled. \"Did you just assume that I'm single?\"\n\nI was stunned by her question. Honestly, I had. \"Well, of course not...\" I stammered. \n\n\"Shut it, Romeo.\" she interrupted me, laughing now. \"I am single. But you wouldn't stand a chance. Not since you are with Heather, and even if guys separated, you'd be on my black list.\"\n\n\"Why?\" I asked, playing along.\n\n\"Because I know how much she loves you, silly.\" Very, very few people would have the audacity to call me silly like that. Yet, coming from her I didn't mind. At all. She continued \"And she'd be truly heartbroken if you ever left. Heartbroken as she hasn't been in so many many years.\"\n\nI stared into her bright green eyes and let the silence hang for a long moment. \"Why do I feel like I learn so much about my relationship with Heather by talking with you?\"\n\n\"Because you do, my dear!\" she finished by winking. \"I'm Heather's alter ego, didn't you know? Like in the film 'Fight club'. I'm the extroverted version of her. Can't you see you're sitting with Heather right now?\"\n\nShe had me for a moment there, and I laughed with her as it became obvious. I leaned much closer to her and whispered \"Oh! So that means that I could drag you to the bathroom and fuck you until your cries of pleasure filled the caf\u00e9?\"\n\nShe laughed again, harder this time. She then looked at me differently, her expression changing. \"You really are different than all her previous boyfriends. None of them would have dared try that joke, afraid to displease her.\"\n\n\"Is that a yes?\" I asked, my turn to sink at her. \n\nOnce more her melodic laughter filled the caf\u00e9. \n\nAn hour later we both got out and I kissed her cheek before parting ways. I felt like a million bucks, grinning like a fool. She had agreed! She had fucking agreed! She had been surprised by my plan, but when we began talking about anal sex, I had suddenly felt her feet on my leg. And then I'd seen her smile. When I asked her why I should trust her to keep the secret instead of turning this into a bigger plan against me, she paused and said \"You're the first man I've seen that can challenge her. And that dominating bitch\" she somehow said the word in a loving way \"needs a lesson.\"\n\nFive days later I received a text from Aoife that simply said \"Could you get out of the house in three days, Friday night? ;-)\" My heart skipped a few beats and I took a deep breath to calm it down. \n\n\"Sure! Give me until tonight to inform Heather!\" I replied.\n\nLater that day I told Heather that I'd be busy three days later and that she'd have an evening all to herself. As I said it, I realized that we have been spending most of our days (and nights!) together even though we still had both our places. And, obviously, we spent most of that time in her home. Another milestone in our relationship. I was grinning as I left her and began counting the hours until that Friday night. \n\nThe following day, she told me that Aoife would visit Friday night. I feigned being upset to miss her, and added the fact that I didn't know that they saw each other outside of the balls. \"Rarely...\" she said. I made her believe that I would try to cancel my meeting, then told her I had failed. She teased me about it, saying that everything was possible when Aoife came to visit. \"Indeed!\" I thought, trying to contain my smile. \n\nFriday evening I went down to see Heather in her office and found her standing in front of her bookcase. Before she could even talk, I grabbed her from behind and hugged her hard. She began to talk, most likely to tell me that Aoife would arrive in one hour, but I interrupted her by sliding my hand down her pants. \n\nHeather moaned and pressed her head back against my chest. Soon she was hotter and wetter and I pushed a finger inside her. \"You know...\" she said, her voice very soft. \"Aoife's coming tonight... Are you sure you wanna arouse me like this?\" \n\n\"Ooooh, teasing little minx!\" I said.\n\n\"Who's talking about teasing? Cancel that meeting and who knows what's going to happen.\" she added.\n\n\"You know I can't!\" I said, trying to hide my excitement. \n\nI pressed her hard against the book case and let my fingers work their magic. When I felt that she was close to climaxing, I pulled my fingers back and she gasped in shock. \"What the hell?\" she said. \n\n\"Well, here's some teasing for you!\" I replied, laughing. \n\n\"Ha! You think you can win at this game?\" Heather's eyes narrowed as she looked at me, and then she grabbed her phone. \"Aoife? Ready for tonight? Good! Would you mind bringing that new dildo you were talking about? Yes! That's the one. What? Of course he's already gone! I wouldn't have teased him like that otherwise! Great! See you soon!\"\n\nThe look of pure triumph she gave me after hanging up was truly picture worthy. Then again, my acting in the face of it should have earned me an Emmy! A few minutes later I was ready to leave and she kissed me goodbye, saying \"I'm going to take a shower... I'll need to be clean all over to enjoy that dildo... anywhere I might wish!\" I narrowed my eyes and threatened to jump her. But she laughed and ran to the bathroom. And so I left and drove away. Of course, I only parked the car a few streets over and came sneaking back to the house. I waited patiently until Aoife arrived but didn't let her see me. \n\nShe had a bag with her, probably containing that special dildo she had talked about with Heather. It was supposed to be a very realistic dildo that could get warm and felt both hard yet slightly squishy like a real cock. It was also a dildo that could be used by a woman to fuck another woman. In a sense, both ends were designed to slide inside a pussy, but only one of those ends was cock-shaped. The other end was designed to fit inside a pussy but give that woman a relatively firm grip so that she could fuck the other. \n\nHeather did have such a dildo, which she had planned to use on me, but it wasn't realistic at all. Neither was Aoife's, for that matter. Her plan was not to let Heather see it and a little bondage with a blindfold should do the trick. While they were in the kitchen, I spied on them through a window and listened in. They mostly talked about things that didn't concern me, but about thirty minutes later Aoife asked Heather \"Did you let him fuck your ass? We both know you want him to!\"\n\n\"Of course I want him to! Have you seen his cock! It will fit perfectly back there, and it's been a long time since I've had anal sex... So, yeah!\"\n\n\"Why not let him do it?\" Aoife asked. \n\n\"I enjoy teasing him too much!\"\n\n\"Nasty bitch!\" the redhead said, laughing. \n\n\"Indeed!\" Heather laughed as well. \n\n\"What would you do if he forced himself on you?\"\n\n\"Against my wishes?\" Heather asked, sounding surprised. She thought about it for a moment and said \"Christ... I think I'd climax harder than ever before.\"\n\nAoife replied \"What? Dominant Heather? Heather the dominatrix, the madam?\"\n\n\"I'm not a madam!\" she replied. \"You think I own a bordelo somewhere?\"\n\n\"Ha! Maybe not, but I'd be your first employee!\"\n\n\"Are you serious? You'd let me prostitute you?\" Heather asked, visibly surprised.\n\n\"If you promise to carefully select my clients, why not?\" the foxy redhead replied. \n\n\"Damn! You're even crazier than I thought Aoife!\"\n\nAoife laughed, as if her craziness had been long established. \"But we were derailed. Do you think he knows that you're a little closet submissive? That you'd climax so hard if he imposed himself on you?\"\n\n\"Of course not!\" Heather laughed. \"I don't mind if you know that Aoife, but him? No. Not yet in any case!\" She laughed. \"You know what though? I'd certainly let you fuck my ass with that realistic dildo you've been talking about!\"\n\nAoife and I both grinned at the same time. The two of them soon disappeared up the stairs to Heather's room. At this point I couldn't see them or hear them, but I patiently waited for Aoife's signal. The following fifteen minutes were the longest of my life. Finally, after an eternity of waiting, I finally heard the loud music. It was my signal. By now Aoife would have said to Heather that it was to prevent the neighbours from hearing her cries of pleasure, but it also served two other functions. The first was as a signal for me, and the second is that it would allow me to sneak up to Heather's room undetected. This was it!\n\nMy heart was beating fast as I sneaked back into the house and undressed in the living room. The music was really loud, and I was sure that our little plan would work! I climbed the stairs, trying to be as silent as I could. When I looked at the scene in front of me, I nearly fainted. Aoife was practically naked, with nothing but a pair of black panties on. Her hair was now unbound, tumbling over her shoulders. It barely hid her firm breasts and I felt a thump deep in my chest when I looked at them. Her smile was both conspiratorial and sexual as she stood behind Heather with a dildo in her hand. There were a couple of dildos on the bed, one of them glistening with lube already, and one opened bottle of lube on a shelf. \n\nBut as wonderful as Aoife was, Heather stole the show. She was securely tied to a stool I had already seen in the basement. It was a very high barstool which hadn't seemed to serve a purpose. Now, it's purpose was clear. Heather was naked, bent forward on the stool, her massive breasts pushed out on either side. She was wearing a pair of high heels and her legs were straight above them. She was bent at ninety degree, with her back straight. Her hands and ankles were tied at the base of the stool, so she couldn't really move. The final touch was a black blindfold securely held over her eyes. \n\nOr, rather, the real final touch was just how her ass stood out in this position. Christ! We had dabbled with bondage a few times, but nothing really extreme. In fact, I realized now that she had never been securely tied like this. It had been more of my part... Not anymore. Smiling at me, Aoife said \"Now Heather... I know you've enjoyed my fingers and that you're ready to taste the dildo. Want me to do it?\"\n\n\"Yes mistress!\" came her reply. \n\nBy now I was now standing right behind Heather's ass, my cock hard and ready. Aoife said \"Let me lube it just right...\" and then spat a gob of saliva right on my cock. Using her hands, she then spread it all over, staring right into my eyes. \n\nSilently, as I shook with desire, I mouthed \"You're next!\"\n\nShe replied, in the same manner \"With pleasure!\" Out loud, she said \"Are you ready for this?\"\n\n\"Gods yes! Fuck my ass!\"\n\nAoife then placed one of her hands on Heather's hip and I placed my cock directly against Heather's asshole. As I did, Heather said \"Damn! It's even body temperature!\"\n\nAoife's eyes widened in surprised, but she quickly recovered \"Yes... I had a warm magic bag next to it...\"\n\n\"Great!\"\n\nI was grinning, trying not to laugh out loud. But then again, I was about to fuck my lover's ass for the first time. Staring at the junction between her asshole and my cock, I pushed slowly. I saw her skin move, then stretch until her buttocks were slightly pulled back in. At one point her muscles relaxed and her lubed hole opened for me. \n\nWhen I felt my cock beginning to enter and her asshole stretching at the same time, I bit my lips to stop myself from moaning. Heather gasped as I kept pushing and cried out when her sphincter finally swallowed my glans. That moment when her hole tightly wrapped around the base of my crown was magical. I managed to contain my own moan as I felt her muscles contracting hard around me. \n\nI was finally inside her ass! Aoife, still standing right next to me, leaned forward and spat on my cock again, adding more lube. \"How's that, my little slave?\" she asked. \n\n\"It's insanely good mistress!\" Heather said, breathing harder now. \n\n\"Want more?\"\n\n\"Gods yes!\"\n\nSo I pushed deeper, overwhelmed by a storm of pleasure as I saw my cock disappearing into her. I pulled back a bit, Aoife spat again and I pushed back deeper still. Heather was now groaning with pain and pleasure and I was on the verge of crying my own pleasure. But I had to contain myself. Aoife said \"You like it like that, don't you? Slow and steady until I bury myself all the way?\" \n\n\"Gods yes!\" my girlfriend moaned. \n\nAoife then wrapped her arm around me before spitting again as my cock kept creeping forward. When she did, a crazy idea popped into my head. I reached for the bottle of lube on the shelf next to me and coated my middle finger with it. I then wrapped my own arm around her back and slipped my hand down to her ass. Taking a small risk, I pushed my hand inside her panties and my middle finger found her own little asshole. \n\nAoife looked at me with wide eyes, but soon she was smiling, shaking her head in disbelief. When I pressed harder and felt my fingertip entering her asshole, she gasped. Heather said \"Is it good for you as well, Mistress?\"\n\n\"Oh yes! More than you know!\" \n\nI pushed deeper again, feeling a second knuckle entering that pretty Irish ass. I had met her only twice before, and even though we'd had sex together, it was in a very peculiar situation. This wasn't a ball, wasn't a sexual game. But she was clearly willing... In fact, she probably wouldn't have accepted to be part of my plan if she hadn't been opened to the idea o having sex whit me again. \n\nAs I played with her asshole, I looked at my cock and saw that I was nearly all the way in. When Aoife leaned forward and spat, it gave me an even better angle on her ass and I pushed my finger as deep as I could. She gasped again and Heather laughed until I pushed all the way in. \"Fuck!\" my girlfriend cried out. \"This is so damned good! I don't know if I'm going to be able to tease Jer much longer...\"\n\nAoife laughed, her face now clearly flushed, and said \"Really?\"\n\n\"Yes! This is so fucking good! Wanna start fucking me? You're too deep!\" she laughed breathlessly. \n\n\"Ok then. Do you like surprises?\"\n\n\"You know I do...\" Heather replied. \n\nAnd with that I grabbed Heather's hips with my two large hands and began fucking her. She gasped and froze when she felt my larger hands on her hips and then cried in raw pleasure when she realized that I was fucking her ass. \"Bastard!\" she cried. \"Both of you!\" she added between gasps of pleasure. \"Once I cum I'm going to get my revenge you two so bad!\" but she was also laughing and moaning in so much obvious pleasure that we weren't too worried. Aoife, pushing the game, said \"It's mistress for you, my dear. And how are you going to get your revenge strapped like you are to that stool?\"\n\n\"Fuck... Fuck Mistress I mean!\" she tried to add something, but she was too far gone. \n\nBy now Aoife was bent over Heather and had pushed her panties off to give me the best access. And soon I realized that one of her hands had snaked around Heather's body and was now caressing my girlfriend's clit. \"Damn! This is so damned nasty!\"\n\nAoife laughed \"Wish you had two cocks Jeremy?\" As I laughed she added \"Heather, you have to know that your boyfriend here has a finger all the way up my ass!\"\n\n\"Never enough for him...\" she said, but both Aoife and I knew that she was on the verge of a climax. \n\nI spread my feet slightly apart and fucked her harder, with longer and smoother strokes. Heather was now babbling incoherently, moaning her pleasure louder and louder. \"Who's the dominant one now, Heather?\" I asked. \n\n\"Shut up and fuck me! Fuck my ass raw!\" she cried.\n\n\"Oh no... That won't do.\" I slowed down, grinning when I heard her growl of frustration. \"Say it.\"\n\n\"Fuck you and that amazing cock of yours! You're the dominant! Now just fuck my ass and let me cum!\" she cried. \n\nI was laughing as I resumed fucking her for all I was worth. For a brief moment I considered what was happening and was overwhelmed. I was assfucking my girlfriend without having to endure her dildo, I was finger-deep in the ass of an extraordinarily lovely woman and I was about to hear the orgasmic throes of my girlfriend, an orgasm from anal penetration. Not only did she like anal, she was one of the rare women who could actually climax from it! What the fuck more could one guy ask for?\n\nGripping her hips firmly, I abandoned myself, wondering if I could keep from climaxing myself. Aoife was writhing on Heather's back and I slipped a second finger in her ass. She moaned out and turned her head to look at me, fire in her eyes. Her deft fingers had never left Heather's pussy and in the end we won the race. \n\nHeather laughed and cried at the same time, gasping for breath as she climaxed. She was firmly attached to the stool and trapped under Aoife, but she trashed nonetheless as her climax took her. I was on the verge of climaxing as well, but decided to save myself a while longer. \n\nSoon Aoife and I moved off of Heather and, still fighting for breath, she asked to be released. \"Trouble breathing in this position...\" she said. Yet as soon as we untied the last manacle, she turned and jumped on me. \"Aoife! Take him with me, I need to have his ass!\" Aoife, laughing wildly now, joined Heather and for a while I was afraid that they would win: fighting with your hands covered in lube and with an erection wasn't ideal! \n\nIn the end, despite all this, I was still physically much stronger than they were. Feminism or not, I overpowered them. I knew I would tease her about this later. I ended up pinning Aoife on the bed while holding Heather with my hands. I knew that if she really were fighting for her life she could have pulled away, but she wasn't. She had just climaxed and was grinning ear to ear. When she began laughing, I relaxed slightly and, very suddenly, I realized that my cock was nestled against Aoife's ass. Twisting around slightly I felt my cock slipping between her cheeks and she gasped in surprise. \n\nMy cock was still coated with lube and I had pretty much filled her ass with even more... \"Heather, look at me...\" I growled, still holding her tight. When she did, I said \"Not only have I managed to fuck your ass without having to humiliate myself, but I'm now going to fuck your friend's beautiful ass as well!\"\n\n\"What?\" that was Aoife. But she was laughing and I could even feel her parting her legs slightly as well as turning her ass up against me. \n\n\"Ah! You know what's worse, Heather? She wants it!\"\n\n\"Noooooo!\" Heather cried out as she laughed even harder. \n\nReleasing Heather's hands I grabbed Aoife's shoulder and guided myself against her asshole. Minutes after leaving Heather's ass I felt Aoife's opening up to my cock. After gasping, Aoife said \"Take me... take me deep. Now!\" When I arched my body, pushing into her completely, Aoife screamed and trembled beneath me. Gods! She was loving this even more than Heather was! It seemed that I was graced with two anal crazy women in my life. ",
        "I reached around her shoulder and grabbed her neck in my hand while pushing the other down beneath her. As soon as I reached her pussy she groaned and I felt her body twisting and shaking with pleasure. As I did my best to please her, I looked at Heather. Our eyes locked and she looked at me with an expression I couldn't decipher. She was smiling though, a strange smile. \"So, my love,\" I asked. \"Earlier, did you say that I was dominant just to get your orgasm?\"\n\n\"Of course...\" she replied, still in the game. But I could see that she wasn't convinced. \n\n\"I don't believe you. It pisses you off that I was right.\" \n\n\"About what?\" she asked, her eyes narrowing. \n\n\"About dominant women's secret desire to be dominated.\"\n\nShe paused before replying, taking a few breaths while Aoife kept moaning beneath me. Finally, she said \"Not all dominant women. No.\"\n\n\"How about you?\"\n\nThe smile she gave me then left me speechless. Her only real reply was a nod. \n\n\"Once I'm done with this gorgeous redhead nymph, it's going to be your turn again.\"\n\nHeather's eyes opened wider when I said that, and the lust I saw burning in her eyes drove me wild. For the moment I turned my head towards Aoife and buried my face in her neck. I gently bit into the delicate flesh on the side of her neck and gaged her reaction. She liked that. Liked that a lot. When I turned my head and bit the back of her neck, beneath that thick red mane, she shook with pleasure. \n\nSeconds later, as I closed my hands harder on her pussy, I felt her body pulsing twice before she froze and arched her back. She buried her face in the mattress and screamed her pleasure. If I had kept on fucking her tight ass I would have cum right there. Instead I stopped and simply pushed hard against her. Soon she was bucking under me and I felt her hand pushing me. \n\nAfter pulling out I rolled on my back and stared at Heather. \"Come here my love. I want to take your ass again, in cowgirl this time. I wanna see your incredible body bouncing on my cock, impaled in your ass as your breasts dance for me...\" And so she did. She was still wearing her heels and it made her legs look even more sexy. But I was dazzled by her heavy breasts as she crawled over me. Soon though my eyes wandered down as I felt her placing my cock against her asshole. \"Shit!\" I moaned. \"This won't take long.\"\n\n\"Take as long as you wish my love...\"\n\nWhen she dropped upon my cock, her ass pummelling my upper thighs, I knew I had ten seconds. Maybe less. But I didn't care. I was transfixed by her beauty, by her sexiness, by the lust in her eyes as she rode my cock, her knees up high while I stared at her opened pussy and speared asshole. The sight was simply more than I could take and I finally came. \n\nIt was physically painful for a few seconds until the flood of pleasure washed the pain away. It was now my turn to scream and I briefly wondered if the neighbours would hear me despite the music. I felt my cum rushing out to fill her ass and the sensations changed as it coated it. But Heather kept riding me hard and I felt myself briefly losing touch with reality. Eventually I grabbed her hips and stopped her. \"Come here...\" I whispered. \n\nWhen she collapsed on me we hugged each other hard. Despite the intoxicating sensations of my cock in her ass and her legendary breasts on my chest, all I could feel was overwhelming love for her. \"I love you so much!\" I said in her ear.\n\n\"So do I Jer... I love you.\"\n\nIt wasn't the first time we had said it, but we were both aware that the breaking of her dominant persona meant that our relationship had deepened. With a finger I invited Aoife to join us and we all hugged. Soon after we all shared a shower, the small price to pay for anal sex. \n\nAbout two hours later Aoife was sleeping in the guest room and Heather and I finally found ourselves alone in our room. It was dark except for a single candle. Standing naked next to it, Heather joined me and stared into my eyes for a long time. \"You scare me, Jer.\" It was the second time she had said that to me. \n\n\"Good!\" I said and she laughed. \"I'm serious Heather, my love. I have never seen you with a man that can really challenge you. Secretly I have long desired to be that man, and now...\" I paused. \n\nShe finished for me \"Yes, you could be that man. But I admit that I don't know what's going to happen from now on.\"\n\n\"Oh? You knew before?\"\n\nShe giggled and said \"Well, pretty much, yes. Now, I feel like I'm in your hands.\"\n\n\"Like I'm in yours, my love. Gods I love calling you that!\" I said, smiling with her. \n\n\"Do it again!\"\n\n\"What? You want me to fuck your ass again?\" I said, laughing now. \n\n\"No silly!\" she was laughing as well. \"Call me 'My love'. I kind'a like it.\"\n\nI did, and then kissed her."
    ],
    "authorname": "MrIllusion",
    "tags": [
        "big breasts",
        "threesome",
        "anal",
        "secret",
        "trick",
        "hidden",
        "tease",
        "blindfold",
        "bondage",
        "redhead"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-experiment-pt-03"
}