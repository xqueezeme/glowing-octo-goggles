{
    "title": "There and Back Again Ch. 015",
    "pages": [
        "Chapter Fifteen: Small Pleasures in Dark Times \n\nOnce I scrubbed and washed, I dressed with my usual clothes underneath the dress, and opened the door to find the same servant standing outside. She looked surprised to see me, and I started to wonder if she had expected to be required to help me dress. She covered her surprise with an offer to do my hair, which I did take her up on. So I sat while she moved around me, tucking my hair up into an elaborate hairdo with curls that I never usually let loose escaping artfully in places. By the time I got back to my room, Leliana was awake and dressed in her armour, which had also been cleaned, and she beamed as she saw me all fancied up. \n\nWe went down to the main hall together, and I was delighted to be served fruit, bread, cheese, and little sausages, instead of porridge. Alistair, Aedan, Morrigan, and Sten were already there, and Theron joined us shortly. There was a beautiful serving woman who blushed every time she even glanced at Theron, and I was able to make an educated guess what he had been up to the night before. I grimaced, disgusted, and both Leliana and Aedan narrowed their eyes at him. Bann Teagan wandered in just as we were finishing, looking at least slightly more rested. He smiled gratefully at everyone. He came over to bow over my hand, kissing my knuckles, and I heard Leliana cover a snort with a cough; once Teagan released me, I kicked the bard's shin under the table mercilessly. She jumped and grinned at me, unrepentant. Theron glared daggers at Teagan's back the entire time, and Leliana started choking again, meeting my gaze and rolling her eyes with me. \n\nEveryone enquired about my health, and I tried to brush them all off. Truthfully I had no idea why I had passed out, and wasn't sure I wanted to think about it too carefully. Did it mean there was something wrong with my body back home? Too many other things to think about. Ignore it. \n\nI noticed Isolde didn't join us for breakfast, and assumed she was sitting by her son's or her husband's bed. And avoiding Alistair, presumably. I was okay with that - the woman pissed me off on principle, and her voice made my ears bleed. I finally met Jowan, the idiot blood mage, who was being allowed a room in the castle (instead of the dungeon) but was being restricted to the main hall and his own room, and followed everywhere by one of the castle's knights. He had the decency to look no more than slightly resigned at that. Since I figured he was going to end up Tranquil, I figured he'd better get used to it. \n\nFinally everyone had eaten and it was time to plan. We begged leave to borrow a private room to talk in, and Teagan reluctantly walked away after escorting us to the small private library. Aedan checked for people lurking in the hall or outside the window before we started speaking. \n\nThe obvious starting point was that the group needed to go to Kinloch Hold. We needed Circle mages and Lyrium to free Connor from his possession. And it couldn't wait - there was only so long anyone was going to be able to keep the demon sedated. Morrigan volunteered to stay in Redcliffe, to help Jowan keep Connor asleep, and also since she was the only one who could keep an eye on the blood mage. She claimed that someone had to be awake at all times with Connor, so two mages were sort of necessary. Once the group agreed to that, she opted to leave to do...I have no idea. Whatever. \n\nAedan pointed at myself and Theron next. \"You two will stay here as well. I don't want you to reveal Theron's identity until Eamon is healed, but I need you safe.\" Theron argued, but everyone, including me, was on Aedan's side and eventually he backed down. I wondered how long before he tried to order us to do it his way. I didn't want to find out just how many of us would ignore the order, and what that would do to his apparently fragile ego. I myself wasn't thrilled at being left behind, but really, what did he expect? We'd discussed this before we even arrived. \n\nThe rest of the group planned to cross Lake Calenhad by boat, and then travel the rest of the way on foot - with the shortcut, it should only take two days to get there. We discussed what to expect - convincing Greagoir, finding Wynne, some demons, blood mages, or abominations in pretty much every room past that point. I reminded them about the sloth demon trapping them in the Fade, and to try to remember that it was only a dream. For those companions whose dreams I was aware of, I'd taken each aside and warned them what to expect. When I played the game, I almost always had Alistair, Morrigan, and Wynne as my companions, so I wasn't much help for Sten or Leliana. Using the Litany of Adralla, rescuing Irving and the others, killing Uldred. Aedan figured it would take a day or two to get through the tower, and then two back to Redcliffe. So all told, approximately a week round trip. \n\nAedan and Alistair decided to go find Bodahn and grab a couple of tents and some more supplies for the journey, so they all agreed to leave the next day. As most of them had been up late the night before, talking to Teagan and worrying about my unexplained black-out, I was the only one well-rested. They all stumbled off to get some sleep before their journey the next day. \n\nDeciding that being active might tire me out so I could sleep later, I dressed in my linen pants and shirt, and wandered down to find out where the knights spent their time. I found Ser Perth in the courtyard, training with his men. Perfect. I explained to him what I wanted, and he sent me back inside first to find the Redcliffe vault. Running into Teagan on the way, he ushered me to the vault to help as I picked through several sets of armour. I wasn't strong enough for any of the heavy stuff, but we finally found a light enough set of leather armour that would fit, and Teagan handed me a wooden practice sword and escorted me back outside. \n\nI spent part of the morning walking, running, and jumping around in the armour, with Ser Perth's instructions, trying to get used to the weight and the restricted movement. After an hour of that, he had one of the eldest knights of the bunch agree to work with me. Wayne had trained dozens of knights, and despite a dramatic facial scar, was quite grandfatherly. Until the first time he knocked me down, and then it was all business. He gave me pointers on my stance, my swing, and my dodge. He laughed so hard the first time I tried to attack with the practice sword that I actually got a hit, accidental as it was, on his heaving back as he bent over guffawing. \n\nChanging tactics, Wayne had me put down the sword and work for a while on hand-to-hand combat. He informed me that as clueless as I was about fighting in general, giving me a sword was just giving me permission to stab myself. He encouraged me to stop thinking so much - rapping me on the head as I hesitated, trying to think about what to do next - and I finally started using my instincts, a little at least. I had taken a self-defense class as an option in University, and the brawling seemed to build on that a bit. I was able to use my smaller size and my speed to my advantage, learning grabs and throws. He started pitting me against some of the younger knights, and with a bit of work, I was actually able to grapple one to the ground and make him submit. Everyone cheered, and I realised most of my companions had wandered out to watch while I had been distracted. The good-natured lad allowed me to pull him up before saluting me and stumbling off to hide from the ridicule of his peers. I was exhausted, sweaty again, but somewhat happier. I limped - my body, as much better as it was than the one at home, wasn't used to the movements, and I swore I pulled something in my hip when I had made that last throw. Wayne handed me a small vial of red liquid, similar to the poultices I'd seen with Duncan, and smiled as I drank it. I took my leave from the knights, promising to return the next morning. \n\nI wasn't exactly hungry after the exertion - one reason I didn't really exercise at home was it made me nauseous afterwards - but knew I needed something, so Leliana and I found a servant who agreed to bring a platter into the library for us, where we both sat, me exhausted, her thoughtful. \n\n\"Teagan's quite attractive, isn't he?\" She grinned, eyes sparkling with mischief. I threw an apple at her, which she caught and bit into with relish. \n\n\"Am I seriously the only single woman, who isn't obviously an apostate or from Orlais, in all of Ferelden? Honestly, you'd think they all hadn't seen a girl before.\" \n\n\"Well, you are quite beautiful, Sierra. And you blush so prettily every time one of them looks at you! You can't blame them for being besotted.\" \n\n\"Yes I can,\" I grumbled, and Leliana laughed, her musical voice making even that sound enchanting. \n\nSomehow Leliana managed to draw me into a conversation about shoes - she was horrified that I was wearing my boots under my velvet gown - and that's how the rest of the group found us a while before dinner. Aedan and Alistair were covered in dust from their trek to Bodahn's camp and back, and that turned into a discussion where I bemoaned the lack of indoor plumbing in Ferelden. I explained what showers were, and got a variety of reactions; longing from some, horror at the thought of standing under a spray like that from others. Sten merely wondered if we made showers for anyone his height, as Ferelden definitely didn't make bathtubs with Qunari in mind. \n\nA servant informed us that Bann Teagan awaited us for the evening meal in the main hall, and we all climbed to our feet to join him. Alistair pulled me aside, quickly, a silly grin on his face. \n\n\"If I tell you a secret, will you keep it to yourself?\" \n\n\"Of course. You don't see me spilling your other secrets to anyone, do you?\" \n\n\"This one is special, though. I know of a place, a way you can have pretty close to a - what did you call it? A shower? - right here in Redcliffe. But you can't tell anyone, okay? I found it when I was young, and I don't want everyone to know.\" \n\n\"A shower? How?\" \n\nHe proceeded to tell me about a way to get under the castle, wiggle through a place where part of a back wall had caved in, climb over some rocks, and end up somewhere in the foundation of the castle. There was a little room, probably formed by the flowing water over many years, where water from the lake poured down, drained across the floor, and out a hole on the opposite side. And the room, he had figured, was right underneath the kitchens, so it was actually quite warm, even in winter. There was even a little natural ledge to put your clothes. The water was apparently cold, but the water pressure sounded wonderful. I agreed readily to keep his secret, and made plans to visit there as soon as I could. I worked really hard not to picture the body I had accidentally seen in the stream standing under a waterfall - get a grip, Sierra! \n\nAt dinner, everyone was still a bit subdued, the horrors of the last several days still fresh, but we had a few laughs. Everyone was astounded at how much Aedan and Alistair could eat, and they were forced to admit it was a Grey Warden thing. When Aedan tried to insist that he didn't eat nearly as much as Alistair, the templar threw a bun at his head. It missed, hitting Sten instead, which caused everyone to absolutely crack up as the Qunari jumped up and challenged Alistair to a duel to the death. Aedan and Leliana stopped laughing long enough to soothe the giant into withdrawing the challenge, with some discussion about how unworthy Alistair was to duel with Sten, and how we really did sort of need all the Grey Wardens we could find to combat the Blight. \n\nSten stalked off to bed, and Morrigan also excused herself. Isolde hadn't joined us, and Teagan apologised on her behalf, explaining that she was alternating meals between Connor's room and Eamon's. So that left just Teagan, Aedan, Alistair, Theron, Leliana, and I. And Prince, of course, gnawing on a bone in the corner. Teagan offered us wine, which everyone accepted but me. Somewhere, Leliana had found a lute, and with some begging and pleading, she settled onto a stool and played and sang for us. Her voice rang sweet and clear, and we were all mesmerised. \n\nAfter a couple of songs - played just to showcase her talent, I'm sure - she switched from classical and beautiful to upbeat and funny. She had several of the boys banging the table in time, and finally it was too much. Teagan jumped up from his chair, grabbing my hands to pull me out of mine, and started spinning me around. I had no idea how to dance - I'd never danced on Earth, nevermind in Thedas, and I kept tripping over my heavy boots. When I tried to use them as an excuse, he pushed me back into my chair, knelt in front of me, and pulled off both boots and socks before I could even complain. Grabbing me up again, he spun me and twirled, and I clung to him just to avoid falling over or spinning out of control. When he had me close, he actually convinced me to stand on his own sturdy boots, and showed me the steps. It left me slightly off balance, but his hands were sure, and my reflexes better in this body than I was used to, and before I knew it we were dancing. \n\nSuddenly he let go, and I wobbled around looking for my chair, only to find Aedan standing right behind me. He grabbed me just as Teagan had, and started spinning me again. I began to giggle as I was passed from Aedan, to Theron, and back to Teagan again, spinning wildly around the room, never able to fully catch my breath before the next partner grabbed me again. I spun one final time, and a very hesitant Alistair stood smiling at me hopefully. I took his offered hands and twirled into his arms, and despite neither of us really knowing the steps, it felt...perfect. We both seemed to know exactly how the other was going to move, and I thought I might even look graceful in spite of myself. My face was red, and I hoped everyone would think it was purely exertion. We finally spun to a stop as Leliana ended the music, and Alistair assisted me to my chair before bowing, slightly formally, both to me and to Bann Teagan, and taking his leave presumably to go get some sleep before tomorrow. \n\nTheron smirked arrogantly at me before also taking his leave, and Teagan kissed my hand again before heading to his own room. Aedan pulled me aside to check what I was going to do for the night, so I asked Leliana if she'd be willing to share with me again. She nodded, a slightly confused look on her face, so I reassured Aedan and followed the bard up to my room. Once the door was closed, she turned, looking slightly concerned. \n\n\"Are you unwell?\" \n\n\"No, I'm fine. Why?\" \n\n\"I don't understand why you wish me to share your room.\" \n\nI sighed. \"Long story, but basically I find I am unable to sleep here unless I'm either completely exhausted or not alone. Look, if you'd prefer not to...\" \n\n\"No, it's fine. I don't mind. I just...expected you to be worried about sharing a bed with me.\" \n\n\"Why? Do you kick in your sleep or something?\" \n\n\"Well, probably, but that's not my concern. You know about Marjolaine...and me. Together.\" \n\n\"Uh, yeah?\" \n\n\"Sierra, you're a very attractive woman.\" \n\n\"Oh, I see. You think I should fear for my virtue?\" \n\n\"I suppose that's one way to put it.\" \n\n\"Alright. Let's just stop dancing around this. You're not super-picky about the gender of the person you love. I'm pretty sure that doesn't mean you're helpless to fight the urge to ravish me the minute I let my guard down. You're aware that I like men, and yes, I have given it some thought, but women just don't do it for me. I trust you not to do anything inappropriate, and really trust me I'm not that great a catch anyway. So if you are okay with it, and you promise not to grope me in my sleep, I promise not to tell anyone that you kick in yours. Deal?\" Leliana broke out laughing, and I grinned impishly. \n\n\"You're a very strange woman, Sierra.\" \n\n\"You have no idea.\" \n\nAt that, I stripped out of my clothes, put on a t-shirt with my panties, and climbed into bed. I carefully hung Leliana's amulet off the headboard, and she smiled. I gestured to the other half of the generous bed, and she finally shrugged, shucking her own clothes, and crawled in beside me. \n\n\"Thanks for the music tonight, Leli. It was wonderful to laugh and forget for five minutes that the world is trying to end.\" \n\n\"My pleasure.\" \n\nI was fighting my drooping eyelids, but losing the battle. I tried to mumble something else, but failed, falling deeply asleep. I woke when the bed shifted, a few moments later, and opened my eyes to see morning sunlight peeking through the window. Leliana was climbing out of bed, trying to be quiet, so I cleared my throat to let her know I was awake and sat up. \n\n\"How can it be morning already? I just fell asleep.\" \n\n\"Go back to sleep, Sierra dear. It's still early.\" \n\n\"I want to see you off.\" I shrugged off her suggestion, getting up and changing into my trousers and shirt again. She donned her leather armour, packed her things into her bag, and signaled that she was ready. I followed her down to the main hall, meeting up with the rest of our group except Morrigan and Theron. Teagan even came down and wished everyone an easy trip. Too bad we already know that's unlikely. I walked the group down to the docks, hugging each as they boarded the small boat Teagan had promised them. Hugging Sten was like hugging a wall. I need to stop doing that. I watched, trying to avoid tears, as they cast off and the rowers started moving them away from the dock. \n\nThere was mist on the lake, and I lost them in it shortly. Turning around, I headed back to the castle, trying not to worry about them. Trying not to wonder where I'm going to sleep. As I entered the courtyard, I saw Wayne, and my spirits lifted. I shouted that I would change into armour and be right back, and he laughed as I eagerly ran up the steps to the castle. A bit of exhausting, mindless brawling is exactly what I need. \n\nBack down into the training yard in just a couple of minutes, I grinned as I saw Wayne's surprise at how fast I'd been. I imagined most ladies in Ferelden can't just change without help and lots of time. I spent a few minutes again adjusting to the weight of the armour, and then Wayne started drilling me on the brawling moves I'd learned. There was only one I was any good at, which I'd learned in self-defense class, and he told me that even in armed combat it would serve me well - no one would expect it from me, being small compared to the average opponent I was likely to face. I basically tossed a 'bad guy' across my back and to the ground. Apparently it looked quite graceful when done right (not that you could see that when I did it), and most men relying on swords would never know how to guard against it. I practiced it until I could do it in my sleep - to an unprepared, inexperienced foe, at any rate. It was good for the Redcliffe Knights as well - I could see them re-evaluating their skills as they tried to counter the various throws and trips that Wayne was teaching \n\nOnce convinced that I could be taught, and after quaffing the contents of another red vial, Wayne again allowed me a practice sword. I spent the rest of the morning, alongside a couple of raw recruits, practicing various sword forms and stances. Wayne was right - once I'd learned to stop over-analysing every move, I was much better. I probably would never be an expert swordsman, but I could hopefully at least avoid stabbing myself with a bit more practice, maybe even defend myself if required. I briefly wondered if I'd be able to translate any of the skills I'd learned into my real body at home. Not that sword fighting was much in-demand, or anything. ",
        "Finally happily exhausted, I turned to head into the castle in search of food, and was seriously considering using Alistair's waterfall, when I ran into Mother Hannah from the Redcliffe Chantry. \n\n\"Oh! Pardon me, Mother. How is everyone faring in the village?\" \n\n\"As well as can be expected, my lady, and thank you for asking. Actually, I was just here talking to Bann Teagan about the orphans you met the other night. He's been kind enough to fund a small orphanage to be set up, and I was hoping he could spare some servants to help run the place. I hadn't quite realised how bad things were at the castle, I suppose, and there's really no one to spare. I don't know what to do - I only have a couple of Sisters, and neither of them are really good with children.\" \n\n\"You know what? I have an idea. I need to get a bit cleaned up and have a bite to eat, but would you be available to meet with me in a couple of hours? Let me see what I can do to help.\" \n\nShe agreed, a hopeful look replacing the worried one she'd been wearing, and left for the village. I wandered inside, asking a servant for a bucket of warm water and some towels to clean myself up with, and headed to my room to do just that. I changed into the simpler linen dress Leliana bought me, instead of the fancy velvet one, and plodded back down into the main hall. Teagan was there, eating distractedly with a pile of papers in front of him. I asked a servant for something to eat, and joined him at the table. \n\n\"Good afternoon, my lord.\" \n\n\"And to you, my lady. Missing your friends already?\" \n\nI nodded. \"Hopefully they will be back in a week or so.\" \n\n\"I hear you have taken to embarrassing the new Knight recruits on the practice field while we wait.\" I giggled and he grinned. \n\n\"It's not my fault if they can't prevent being beat up by a girl!\" \n\nWe chatted for a bit, and then I mentioned running into Mother Hannah. \n\n\"She told me that you were willing to help fund somewhere for the orphans to go. Is that true, my lord?\" \n\n\"It is. And I hear you gave her some coin as well. Sadly it might not work out; it seems we have a significant lack of people to take care of the children.\" \n\n\"I have an idea about that. Would you be opposed to paying someone to do it?\" \n\n\"I have no objection, no. What did you have in mind?\" \n\n\"I need to figure some things out. Let me get back to you.\" We talked a bit about the budget he had set for the orphanage, and I asked a few questions about how much different types of work might pay in a village like Redcliffe. He looked at me strangely, but answered my questions honestly. \n\nFinally fed, I took my leave of Teagan and walked down into the village. I hadn't seen Theron all day, so I went alone. First I stopped at the tavern, then I went into the village proper and found the small house I was familiar with from the first day we'd spent preparing the town for the attack. After a brief visit, I met two young women outside the Chantry a few minutes later. They curtsied to me, and then fell into step behind me as I went inside in search of Mother Hannah. \n\nWe found her in the back of the Chantry sitting at a small desk piled with books. When she saw me enter, she motioned to a chair beside the desk, but then looked uncertainly at the two women with me. I gestured for them to stay a little bit away, and they turned to chat with one another quietly. \n\nMother Hannah gave me a confused look and I smiled. \n\n\"I have your orphanage workers for you, Mother.\" I nodded in the direction of Kaitlyn and Bella. \"And if you agree, I think I even have a location for you.\" \n\nI outlined my plan, in which the orphanage would be set up in the home formerly owned by Kaitlyn's parents, and now occupied only by the young woman and her brother. Kaitlyn and Bevin would share a bedroom, another would hold Bella, and the rest of the house could be converted to play rooms and bedrooms for the orphans. They would need more space eventually, but for now with just a few children, it actually fit perfectly. Kaitlyn needed some sort of work to support herself and her brother, and she was used to taking care of Bevin so she was good with kids. Bella was a bit older and miserable in her job at the tavern. They were both kind, and both were eager for the chance to do something worthwhile, especially if they could also be paid for it. I explained the salaries I expected would need to be paid, and the money to essentially pay rent on the house, which would add up to less than Bann Teagan had offered for the budget. But the Chantry would have the responsibility of overseeing things, making sure the children were well cared for, and for that they could have the rest of Bann Teagan's coin. \n\nMother Hannah thoughtfully eyed the two young women, and then agreed that the solution at least made a great deal of sense. She wanted to speak with Kaitlyn and Bella herself, but I was confident it would work out. I left her to discuss the arrangement with the girls and spent the rest of the afternoon, on the floor of the Chantry, playing with the two adorable toddlers I'd met that first night. They remembered me, and soon were climbing all over me as I laughed and tickled them. It felt good to be able to relax for a while, and despite the noise I think everyone was so happy to see the tragic young faces smiling for once that we didn't get so much as a dirty look. \n\nThoroughly sweaty and now covered with dust from crawling around on the floor, I headed back to the castle a bit before supper so I would have the chance to wash up before eating. A servant was happy to arrange a bath for me, and while I was left to do my hair without help, I managed to put it up and left a few curly tendrils hanging near my face as she had showed me. A quick glance in my tiny compact mirror confirmed I was as good as I was likely to get and I descended to the main hall for supper. \n\nIt was a much quieter evening, with just Teagan, Theron, Morrigan and myself. I told Teagan the arrangements I had made for the orphanage and he was impressed that I had worked it out so well, without exceeding his budget, and with Chantry approval. I felt just a little better that the sweet tiny people I'd wanted to protect would be cared for better than I had been. \n\nAfter dinner, Teagan asked me to take a walk with him, and I felt it would be impolitic to refuse. Somehow Theron's extremely dirty look did not deter me in the least. Morrigan smirked and disappeared back upstairs. Teagan had a servant fetch my cloak, and then offered me his arm and led me upstairs and out a door to the castle's battlements. It was a beautifully clear evening, and the stars were stunning; as I looked out over the lake, I thought I could even see the Circle Tower in the distance. \n\nFinally he spoke. \"My lady-\" \n\n\"Sierra. Please, my lord. I feel so awkward with such formality.\" \n\n\"Then you must call me Teagan.\" I nodded agreement, giving him a small smile. \"You are not what I expected.\" \n\nI chuckled. \"I have no doubt that is true, my l...Teagan.\" \n\n\"You're clearly a noblewoman, yet even your ignoble friends treat you like an equal. You're uncomfortable with titles, though you must have used them your entire life. Your bodyguard looks at you like a beggar might stare at a free meal. You can't fight, yet you would offer yourself in defense of strangers. You care about everyone, regardless of station; you crawl around on the floor with orphans. You travel with Grey Wardens, you somehow share a mabari with one, and you wear the strangest boots I've ever seen even underneath a beautiful dress. \n\n\"I do not know what to think of you, Sierra.\" \n\n\"I am not surprised, Teagan.\" \n\n\"You're not going to tell me what you're hiding, are you.\" \n\n\"No, my lord. I'm sorry, but I can't. I truly wish I could; I hate all of this. The lying.\" \n\nHe sighed, and I echoed him. My hand slipped from his arm and I hugged myself, leaning against the low wall of the battlement, looking out over the village of Redcliffe, wishing yet again I was a better actor. I felt his hand on my shoulders, his presence almost palpable against my back. \n\n\"I won't ask questions. I will trust you. But please. If there is anything I can do, any help I can offer, you only need to ask.\" \n\n\"Thank you Teagan. I truly appreciate it, but...may I ask why? You have no reason to trust me.\" \n\n\"I like to think I'm a pretty good judge of character. You don't say everything, but you mean the things you do say. And generally I'd say the company someone keeps gives an indication of their worth. If Alistair believes in you, I could do no less. \n\n\"And, well...I guess I'm a sucker for a beautiful woman in trouble.\" \n\nWithout even thinking, I pulled away slightly, self-conscious. Teagan withdrew his hand, stepping back and moving to stand beside me. \n\n\"There's someone else.\" He didn't word it as a question. I didn't deny it, I couldn't, but I wasn't about to wade into that conversation either. 'I think I'm in love with a man I thought was only a fictional character, but I realise I don't deserve him now that I know he's real, or perhaps he's not and I'm just crazy, and you're all figments of my imagination.' I just couldn't see that ending well. \n\n\"You are a remarkable man, Teagan. One day, you will meet someone who will be the luckiest woman alive when she captures your heart. I wish I could be her, in so many ways, but...that's just not possible, for me.\" \n\nSuddenly chilled, and more than a little bit awkward, I excused myself and slipped inside. I ran to my room, wishing to be alone, but once I was the daunting prospect of sleeping alone in the big bed overwhelmed me. I cried for a bit, unsure whether I was crying for myself, or Teagan, or what I could have had if only everything wasn't so messed up, or for what I worried was happening to my companions as they travelled to Kinloch Hold. \n\nI finally moved the big winged chair over in front of the fireplace, which I lit using my handy Zippo. I opened the copy of the Chant of Light that Leliana had borrowed from the castle's library and left behind in the room. I read confusing religious prose by firelight until I fell asleep curled in the chair."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-15"
}