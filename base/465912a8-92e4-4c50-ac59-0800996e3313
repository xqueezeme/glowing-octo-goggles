{
    "title": "Hungry for Self-Love",
    "pages": [
        "Dressed in my mermaid style black chiffon knee length dress, I was out on the wide open floor with my boyfriend of three months, dancing to all our favorite songs. I didn't care that a few strands my expensive, tight up-do blonde hair were starting to fall. I didn't care that my professionally applied makeup was starting to shine from sweating. I didn't care that my dangling silver earrings were slapping my neck and I didn't care that my bare feet were starting to get dirty because I had removed my high heels due to discomfort. \n\nI did care that I was with Mario at his senior prom. I was 18 and a junior while he was one year older and one grade above me. Mario was 6 foot tall, built, intelligent, and cute but his best quality was the charm he possessed. He seemed more mature than his chronological age. When the dance had ended, instead of going to the after-prom, we drove to the motel that he had reserved for us. \n\nWhen we walked in our room, Mario had a dozen white roses sitting on the table with chocolates resting on the pillow. He wanted my first time to be special. I was a still a virgin and wanted to wait for that special moment for him to be my first. That time was now. In the beginning, it was somewhat awkward, but soon we were kissing while sitting on the edge of the bed. With our lips locked, I helped him take off his white tuxedo jacket. Soon after, his vest, bowtie and buttoned up shirt were on the floor.  \n\nI stood, turned around but continued looking over my shoulder and smiled, \"Do you want to do the honors and unzip me?\" \n\nMario returned his flashy smile, reached out and calmly slid the zipper down, \"It would be my pleasure.\"\n\nMy dress was snug so I had to shimmy it down my body. Now standing in my high heels wearing nothing but my matching black bra and panties, Mario gasped, \"Wow...you look...you look...hot as hell.\" \n\nI snickered because I was waiting for a more eloquent description but we were both horny and anxious. He dropped his dress slacks, showing me his seven inch thick cock which was now erect and ready for action. My pussy was gooey but my mind was apprehensive for fear of the pain. Hooking the thong strings with my thumbs, my panties soon joined Mario's underwear on the floor. After stepping out of my heels and unhooking my bra, we were two naked entangled bodies on the bed. We were kissing, rubbing and writhing around under the sheets. His hard cock was rubbing against my abs and inner thighs, smearing tails of precum along the way. I wanted it inside me. \n\nWhile under the blankets, Mario shifted his body around until he was on top of me in a sixty-nine position. It was nice to take that leaking cock in my mouth and suck out the sweet fluid from the tip like I had done many times before. I worried my pussy might be a little pungent from all the dancing and sweating but that was put to rest when his tongue quickly went to work on my smooth vaginal lips. That turned me on which only inspired me to suck deeper. I was gagging but doing my best to swallow every inch. When my legs clenched around his submerged face, we resembled Siamese twins growing together. We sucked each other for several minutes but I was concerned Mario would cum before he fucked me. \n\nWith his musky balls bouncing and grinding into my nostrils, I finally had to catch a breath, \"Get your condoms. I need you inside me.\" \n\nHe brought the box over, pulled one out and gave it to me, \"Now it's your turn to do the honors.\" \n\nI tore it open and held the slippery circular latex condom in my hand. After checking which way it rolled, I put the rubber ring around his head and slowly unraveled it all the way down to his pubic hair. With my saliva smeared up and down the shaft, the condom slid on with relative ease. The reservoir tip was perfectly aligned with his hole so we were ready for action. My pussy was extremely wet so no lube was needed. \n\nI wanted to control the entry so I instructed him to lie down on his back. After he complied, I straddled and stood overtop his waist. I was excited yet reluctant when I squatted down while taking hold of his packaged hard-on. Holding it in place, I maneuver my puffy labia until the tip of his penis rested just inside my folds. \n\nAnxiously, I took short puffs of air like a weightlifter ready for a tough lift when Mario encouraged, \"You can do it baby. Sit down and take as much time as you need.\" \n\nI allowed my weight to sink until the head of his cock reached my hymen. Two more large breaths along with closing my eyes, I just sat down, forcing Mario's manhood to breakthrough and my virginity was no more. It was painful but I was relieved it happened. I sat still on his cock for a moment, to regain my composure. Digging my bare feet into the mattress, I began to gingerly ride it until it began to feel better. \n\nI was beginning to enjoy myself and bounced a little harder. Even though it was still painful, I desired to have it deep and didn't care if it hurt. My pussy lips were mashing against his pubic hair with every downward slam. From masturbating and oral sex, I knew what a clitoral orgasm felt like but this would be my first vaginal. I pounced harder and harder!\n\nPoor Mario was getting pummeled but in a good way when I panted, \"I'm gonna cum on this fuckin dick! It's so big and juicy. You want me to fuck you harder?\"\n\nMario was shocked at my filthy mouth but I couldn't help it. I was getting into it and talking that way made me feel slutty and feeling slutty was that moment's high I craved. My vagina had been woken up and now I needed it to spasm. \n\nMario responded, \"Oh, baby. I do want you to fuck me harder. Ride it baby. Use it to get off but you better hurry cause I'm about to shoot.\" \n\nWith my hair now having fallen even more, along with my boobs bouncing right along with me, \"Don't you fucking dare blow your load! You wait for me to cum on that fucking prick! You hear me? Oh, I'm gettin close. I want to feel that fucker!\" \n\nMario pressed his heels and head into the bed, arched his back while loudly grunting, \"Dammit, I'm cummin! Augghhhohhhh! Augghhhhhoohhhhhh!\" \n\nI was so close and feeling his throbbing, ejaculating cock I screamed, \"Fill that fuckin rubber up! Blow the tip off of it...eeeeaahhhhhhhhhh! Oh, I'm cummin toooooo! Ohhhhhh! Yessssss...ahhhhaaaaa!\" \n\nI collapsed on his chest. We started kissing when he groaned, \"That was intense. I loved it. I didn't know you could get so dirty. That is what kept me from lasting very long.\" \n\nI giggled, \"Neither did I. It felt so great and I was on fire.\" I kissed his nipples and began to lick around the tip before adding, \"I hope you don't think we are done. We are just resting a minute and you are going to fuck me again.\" \n\nGetting up off his cock, the tip of the condom was full of Mario's milky white seed. My cum was also sporadically smeared all over the outside along with some of my spotting around the bottom. I pulled the used latex covering off and wanted to test it for leaks. I blew it up like a small balloon and looked through the light to see the cum sliding around inside. It was air tight which was a good thing. I put the ring between my lips and tipped it up, allowing all the slime to run into my mouth. \n\nMario about flipped, \"Oh my god! That is the sluttiest thing I have ever seen and I am hard as a rock again watching you do it.\" \n\nPinching the tip with my finger and thumb, I stretched the used condom out towards the ceiling so every last drop could drain on my tongue. I smiled out of the corner of my mouth, knowing Mario was loving that spectacle. After I had swallowed his trapped spunk, I began to suck his slime covered cock again. He was correct, it was already hard and ready for round two. \n\nAfter I had orally cleaned his erection, I slid a fresh condom back on and he ended up fucking me in every position possible. The bed was thumping, we both were grunting and sweating until I had several more orgasms while Mario ended up filling a total of three condoms. The dancing had made us sweaty before we arrived to the hotel but that turned out to be nothing compared to the soaked perspired bodies we displayed after that long sex session. We were drained and fulfilled. We showered together and kissed like a couple on their honeymoon. \n\nEarly in the morning, he took me home and we texted each other until the sun rose. My vagina was sore but happy. The next week was the last week of school and we saw each other but never had the opportunity to be alone to screw again. He was working long hours while our fast pitch softball team was nearing the state tournament. I spent my time either practicing or trying to study for final exams. Our schedules never meshed but I was so ready for another hot steamy sex session. \n\nThere was a big problem. Every year, right after school was out, my father booked our family vacation at a log cabin in the mountains. It was a tradition and we would hike, fish, and enjoy the outdoors while connecting again. There was my older sister who was home from college, my father, my mother and me. Normally, I was excited about the four of us bonding but now I was no longer a virgin and wanted to explore sexually with my boyfriend. I was dreading the trip. \n\nThat Saturday morning, we lost in the final four and after kissing Mario who was in attendance, we headed up to the cabin. Once we arrived, mom unpacked the groceries and Lexi and I settled into our room. We had time for a short boating trip before dark and returned to a nice dinner prepared by my mother. I loved my family but I was like a dog in heat, looking to breed. \n\nMy pussy and my entire body, yearned for sex. Maybe it was my new found sexual awakening or my hormones or the combination of both but I believe losing my virginity created a nymphomaniac creature. At that moment, I sympathized with guys and their urge to fuck. That evening, I fantasized about sex and looked at everything phallus shaped as my best friend. \n\nBefore bed, my father called the family into the kitchen while holding out his hand with a smile, \"Hand them over.\" \n\nLexi responded, \"Hand what over?\" \n\nDad's smile got wider, \"You girls know what. Hand over the cell phones. Your mom and I are making a pact to not look at anything electronic while on the trip. Let's enjoy the way it used to be with no outsiders and no distractions.\"\n\nI looked at my father like he had lost it, \"Are you nuts? I can't live without my phone. How am I gonna communicate with Mario?\"\n\nMy dad laughed, \"C'mon girls, please. Do it for me. Just think, if you don't talk to Mario for a few days, he will be even more excited to see you. I will compromise. Hand them over for three days and I will give them back in the middle of the week. Deal?\" \n\nLexi was in a serious relationship as well but we both agreed. We both texted our guys and explained what was going on and I used a few more heart emojis than usual. We grudgingly handed them over and all four were placed in the safe where only my father knew the combination. We all played a board game in front of the fire place and I will admit that I enjoyed myself in spite of my lust. \n\nThe next morning, my sister and parents were going for a long hike. I passed because of the long week I had just encountered and needed a rest. Dad didn't mind as long as I participated in everything else the remainder of the week. They left me alone and I knew that familiar hike would last until almost dark. I had the place to myself, yet I had no Mario, no porn, only my own body. After I showered, I was starting to plot and scheme how I was going to masturbate. I wanted more than just a \"rub your clit\" kind of climax. I needed something more. I needed my vagina to be penetrated. Mario had opened the door and now it was ready for business. \n\nI started off with just a traditional finger bang. I sat on my bed completely naked with my hair still wet, legs spread, knees up, rubbing my clit sideways until it tingled before dipping my middle finger like a darting snake tongue. My legs quivered and I spasmed all over my digit. After licking off my juices, I took the end of my rubber-coated hair brush and pressed it to my now swollen love button. That time, my motion was circular and I ended up putting it inside me when I grunted out another spasm. I loved how it felt inside me, but in my lustful state, I needed more. \n\nI contemplated how I could spice things up. I was going to use something as a dildo to fuck myself if it was the last thing I did. That started my own personal cabin scavenger hunt. The first stop was my parent's bedroom. Looking for anything that I could use in a sexual way was my quest. Hoping to find a dildo or vibrator, my mom had nothing in her things. When I rummaged through my father's suitcase, I found a box of Magnum XL condoms. Not knowing if I would need them, I took several just in case. Those size condoms not only made me think of dick, it made me want big dick. Since I had only had intercourse one time, the thought of being a slut is what aroused me so much. \n\nIn the bathroom, I confiscated a long thin candle that sat in the window. When I entered the pantry beside the kitchen, I hit the jackpot. On the counter, there were cucumbers, squash, and zucchini. I want big dick, well I had to look no more. Of course some of the vegetables were much too big to actually fit inside me but after sorting thoroughly, I had found one of each that might. It was going to take some effort but I was going to at least give it a try. What was the most interesting was an additional, long thin squash with hundreds of little bumps all over it. \n\nWhen I opened the refrigerator, I spotted a packaged, long, curled salami-style sausage link that Mom cooks for breakfast. It was two feet in length and very thick. I would not need that much, so I cut it in half, knowing 12 inches was more than plenty. My pussy was so wet, I probably would not need any lube but just in case, I took the bottle of granola vegetable oil out of the cabinet. I wasn't sure if it could be harmful inside my vagina, but in my young mind, I also didn't care. \n\nI was in my room and fantasizing which \"big cock\" I was going to take first and how was I going to take it. I wanted to bring these \"guys\" to life and each one needed a name. The 10 inch cucumber was Large Luke because it rhymed with \"cuke\" which was short for cucumber. The fat, bell ended squash was Yeti because the word \"squash\" reminded me of a big Sasquatch cock. The large zucchini reminded me of an Italian because of the name so I called it Big Tony. Finally, the massive sausage was Aaron because it just reminded me of a Midwestern guy, maybe from Iowa with a big dick. I don't know why I thought of Aaron, it was just the first name that popped in my mind. \n\nWith all the \"guys\" present, I was ready to be a slut for them. I wanted to feel them stretching my recently deflowered vagina. Before I was to start, I unraveled a condom down the candle. I unrolled another one down the sausage which fit perfectly. I could barely fit those XL rubbers around the cucumber and zucchini and they covered only about half of the vegetable. There was no way a condom was going to fit on the squash. Now that the \"men\" were ready, so was I. \n\nI needed no lube as I first worked the candle in and out of my pussy before slowly sliding it up my ass. My lady juices provided enough lube in the beginning. As friction increased, I pulled it out of my rectum to squirt cooking oil on it. When it slid back in, I gasped, \"Auggh!\" That had a great feel so while on all fours, I glided in and out of my asshole. Now the friction was to my advantage and to get myself over the edge I had to further my fantasy. I needed to verbally play the role and believe I was a slut. \n\n\"Fuck my ass with that long prick! Is that all the deeper you can go? My boyfriend fucks me deeper than that!\" I bellowed aloud as I plunged my ass with the candle. \"There you go. Now you are going to make me cum! Use it! Use my ass to get yourself off!\"  \n\nI was nearing an orgasm. As I spewed obscenities, I reached between my legs with my other hand, allowing my head to fall to the mattress. I lifted my ass even higher, offering it to my imaginary anal sex partner while I masturbated. Working my clit with lightning speeds, I cried out, \"Oh! Oh! I'm...I'm...I'm...Ohhhhh! Cummmmin! Augghhhhh!\" \n\nI clenched my ass around the object and fell sideways onto the bed just to allow my pussy to twitch, uninterrupted. I slipped the candle out of my ass and sat it on the table. I was demanding someone to fuck me, \"Which one you guys are going first? Who's man enough for this tight young pussy?\" \n\nSince I was on all fours, I wanted something in my vagina, doggie style as well. While naked, I went to the shed and found a small wooden bench with a built-in hole in the middle and a roll of duct tape. The cucumber nearly fit inside the hole but slightly too small. I placed the end of the vegetable just inside the hole, taped around the back and the front, therefore stabilizing it while poking out. Large Luke was ready to fuck me. \n\nNot to make a mess, I stripped the sheets off my bed and covered it with our plastic shower curtain. I turned the bench sideways and placed it up on the bed, braced against the headboard. It was perfect. At least 9 smooth latex covered inches were sticking out and I wanted to take every last one of them. After jerking \"Large Luke\" with a handful of oil, I quickly got back onto my hands and knees position, facing away from \"him.\" I backed up until the mighty cucumber was against my vaginal lips. \n\nI knew it would not be easy, but my arousal was in control. I continued to back up, feeling the large girth, trying to stretch its way in. When the pain was unbearable, I would stop, allowing my walls to acclimate. Breathing irregularly I continued the fantasy, \"Oh, you are so big, Luke. Hold on, give me a second. You are going to hurt me.\" I was even answering his imaginary questions, \"You don't think it is going to fit? Give me a minute, we are going to make it fit.\" \n\nI shimmied my ass while moving backwards until much of the huge cucumber was buried in my pussy. I rocked back and forth, allowing the greased object to do what I intended for it to do which was to fuck my hungry hole senseless. The bed began to rock as well and the clunking on the wooden floor became louder. \n\n\"That's it Luke. Fuck me doggie style with that big fucking cock of yours! Stretch me out! I know it hurts but I don't care! It hurts because you are so fucking big but don't you dare stop!\" I begged as the bed continued to thump...thump...thump against the wall. \n\nIt was painful because my vagina had never been filled so full. I was naughty and such a slut in my mind as I screamed, \"Make me cum you fucker!\" When my orgasm ripped through me, I smashed my ass back on the cucumber as hard as I could handle, \"Ooooohhhhhhhh! Yeeesss, like thaaaaaaat! Ohhhho!\" \n\nWhile I climaxed, I bit my lip and shuddered with my face planted into the plastic curtain covered mattress. It hurt so good but I eventually pulled off the rubber-covered vegetable and collapsed on the bed on my back. When I looked up at Large Luke, I could see some of my cum smeared on the side of \"his shaft.\" Feeling myself, my pussy was swollen and gaped which turned me on even more. I could easily enter 4 fingers. Being that imaginary slut was fueling my sexual fire for that day. I wanted something even naughtier...even nastier...but what would do that? \n\nThen it hit me. If somehow I could have \"cum\" sprayed on me or in my mouth, that might catapult me to sexual perfection. That could do it. My body was in heat but the answer lied once again in the cold refrigerator. I poured a glass of whole milk and added a cup of tapioca pudding my sister likes. After stirring in some salt and putting it in the microwave for several seconds, I felt like I had my \"cum.\" I retrieved a turkey baster out of the drawer and I brought it all to my bed night stand. I slurped a big mess of warm soggy pudding up the tube, awaiting my moment. ",
        "I looked at the zucchini and asked, \"So Big Tony, are you ready to fuck me with your big dick?\" \n\nI picked up the long green vegetable and tried to suck it but I could not fit much of the latex covered end in my mouth. After oiling it up, I laid on my back, with my legs up on the headboard, working the tip around my already stretched opening. I giggled while ordering my imaginary lover, \"Quit playing around and put it in me.\" \n\nWith a twist and pull, it began to slurp its way into my twat. Before I stuffed more and more inches inside, I would twirl it and then pump in and out with short quick strokes. It was a sensitive technique that worked like a charm. Before long I was fucking myself with about 10 inches of thick Zucchini!\n\nMy head thrashed, \"Oh, do it Tony! Give it to me! Do me like the big slut that I am! Oh yes! You know it. You know what I like! Yes, I like your big fuckin dick!\"\n\nIt was all in the wrist. I was reaming myself and cursing at my imaginary partner. That is when I came with a stream of female squirt up on my stomach causing my abs to quiver. I had never squirted before and thought I peed accidently. With little concern, all I knew is how good it felt and wanted more. I continued to assault my vagina with the zucchini. \n\nI was moaning and groaning, \"Like that! Fuck the piss out of me again! Keep going! Oh! Oh! Oh! Ohhhhyyyyyeeeeeeesssssss!\" I began to squirt again and since my legs were now over my head, it sprayed my face and mouth. \n\nI shook my head like a dog trying to dry off. After tasting the liquid, I knew it was female ejaculate. I fucked myself to a couple more orgasms but on the last one I sat up, took the baster and began to squirt the warm milky pudding in my mouth, fantasizing I was getting double teamed and the second guy was cumming in my mouth. I slammed my upper body back down on the bed, arched my back and climaxed so hard I almost passed out! That time, the squirt landed on the headboard, dripping down like a hose had been turned on it. \n\nI pulled \"Big Tony\" out of my stretched canal and dropped it on the floor. I had to take a minute to myself. I trembled with pleasure allowing my squishy, greasy pussy to calm down. I stumbled back to the panty to retrieve a cardboard box that held some canned food. I dumped it, then took scissors and cut it down into an elongated flat piece of cardboard. I cut a hole in the middle for a particular reason. \n\nGetting back on the bed, I stuck the thinner end of the squash up through the hole. The bell end, stopped it from going all the way through the opening. Adding two pillows underneath it for stability, I carefully oiled up the end of the thick veggie. I was somewhat experiencing d\u00e9j\u00e0 vu, thinking about the prom night. This time I was going to add extra pleasure. I greased up the thin bumpy squash first and slowly slid it up my ass. It was tight and gave me a unique sensation when I moved around. \n\nI commanded \"Yeti\" as I stood overtop it, with my feet on the cardboard, \"You lay still and let me get up on it. Don't you hurt me. I will do all the work. It's so fat, I'm nervous but I need it.\" \n\nI squatted down and even though the two previous vegetables were huge, they were no match for that thing, especially since I already had something in my booty. I squirmed and gyrated with the end just inside my labia. Letting gravity take over, I sat down further causing the orange end to stretch me even more, almost to the point of tearing. \n\nI was directing 'him,' \"Careful. That is one, big dick. Oh fuck, I don't know if I can take it! I'm trying, give me a second!\" \n\nThen I sat down and that monster slid deep in my pussy. I thought I was having a baby it hurt so much. With my knees bent, I began twerking up and down on it, fucking myself. I could feel the ribbed squash rubbing against the smooth one with just a thin wall of skin separating them. I needed something to hold onto as my legs tired quickly. I got down on my knees and rode Yeti until I quickly orgasmed. Strangely, I didn't squirt but only dripped down the side of the squash. It felt great nonetheless. \n\nWhile on my knees, I rocked back and forth, \"Fuck me Yeti! Stretch my worn out pussy, you son-of-a-bitch! I'm so full. I can't believe how much of you I'm taking. It hurts so bad but I love it!\" \n\nI gasped, \"Oh. Here I go agaiiiiiiiinnnnnnn! Oh My God! Yeeeeaahhhhhhhh!\" \n\nThat time I did squirt down on the shower curtain, leaving a small puddle. I stood up and the squash tried to lift with my vagina but my feet planted on the cardboard caused it to plop out of me, leaving a monster opening. With a grunt, the squash buried in my rectum also plopped out. I was in a full body tremor. Looking down, I no longer had a tight, cute little pussy. I now had a worn, gaping cunt. I felt like such a slut! I felt so alive! \n\nIt was time for the foot long sausage. When I picked it up, it was still cold to the touch. I slid the condom off and put it in the microwave for 45 seconds. It warmed and swelled up causing it to split open on the sides. While letting it cool. I took a kitchen chair in the bedroom and sat it directly in front of the full length mirror. When I put the condom back on the greasy cooked meat, it felt like a real life cock. The split sides simulated a veiny shaft and because it was warm, \"Aaron\" was ready to fuck me. \n\nI sat on the edge of the chair with my legs spread wide. I had never seen my vagina so stretched and swollen. It looked like the mature ladies I had masturbated to when watching porn. I was ready for that warm length. Using both hands, I directed the puffy latex covered salami into my gaped opening. When the warmth began to penetrate me, I squealed in delight. \n\n\"You feel amazing, Aaron. I want you to fuck me with that veiny rod. Fuck my cunt like it deserves,\" I ordered my imaginary lover while fantasizing him on his knees in front of me as I watched it disappear inside me, through the mirror. \n\nStarting out using both hands, I fed my hungry cunt inch after inch until I was impaled on most of it. Not stopping, I had at least 11 inches buried inside me because I could only hold the small protruding section with one hand. I thrusted the warm meat in me like a horny gigolo. I was getting fucked by a 12 inch dong like a good slut craves and actually watching it vanish and then reappear was so hot! \n\n\"I'm taking it all. You are touching something way back there in my cunt! Don't you stop Aaron! Give it to me! Harder god dammit!\" I whimpered every time the tip pressed against my cervix.\n\nThe faster I pumped, the quicker I felt the urge to squirt. This time I was building to an amazing climax. I felt like it was starting in my toes and going to explode throughout my body. My legs and feet were suspended in mid-air. I was going to cum and cum hard! \n\nSlamming the cooked sausage deep in my pussy, I screamed, \"Ohhhhh...Myyyyyy...GGGGGooooodddddddd!\" \n\nWhen my orgasm ripped through my vagina, I squirted on the mirror while spasming. My legs straightened and the chair fell backward, causing me to land on the floor. I didn't care, my pussy and inner thighs were clutched tightly around the foot long meat. I was cumming so hard, I even scooted on my back away from the overturned chair. While on the floor I keep reaming my hole until another orgasm hit, then another, then another. I was literally fucking myself silly. \n\nWhile laying on my back and my knees bent, I withdrew the rubber covered sausage and tossed it to the side. I was trying to catch my breath and let the full body quiver subside. I had never experienced anything like that before. I could fit my own fist inside my hole and I dabbled and played around with that for a while. I eventually knew it was time to clean everything up. \n\nThe cabin was a mess. It took at least 20 minutes to get everything back in order. When my family came home, my pussy was still tingling a couple hours after my last orgasm. I couldn't wait to fuck Mario when I got back but hoped I wouldn't need that size to get myself off like that again. Time would tell. \n\nMom had fixed a nice salad and we all were eating the fresh cucumber that had been cut up inside it, I couldn't help but smile to myself when my sister said, \"Mmm, I love these fresh cucumbers.\" \n\nAs I smiled, I thought to myself, \"You can say that again!\""
    ],
    "authorname": "Brittni4u",
    "tags": [
        "masturbation",
        "veggies",
        "lose virginity",
        "sixty nine",
        "condom",
        "stretching",
        "food",
        "gaped pussy",
        "squirting",
        "objects"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/hungry-for-self-love"
}