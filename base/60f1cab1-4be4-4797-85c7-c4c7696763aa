{
    "title": "Alex's Gifts Ch. 17",
    "pages": [
        "As requested, here's the next installment after a much shorter delay. This one's been a long time coming. Please read the ending with your tongue firmly planted in your cheek.\n\nThanks again to Samuraisan for editing, and a gracious welcome to US Scotsman who came on board starting this chapter in order to free me up to do more writing and less dawdling over commas and semicolons.\n\nThanks & Enjoy.\n\n~~~~~~~~~~~~\n\nInsatiable\n\nAlex was startled awake by a knock at his door. He blinked away the sleep as his bedroom door swung open to reveal a petite brunette wearing a tight camisole and light pink cotton panties.\n\n\"Megan, what are you doing? What time is it?\" Alex asked, his brain not quite functioning.\n\n\"It's seven thirty, I figured you'd be up by now. Do you want me to leave?\"\n\n\"No, it's alright. I was up late last night. Where's Case?\" he asked.\n\n\"Still sleeping. I didn't want to wake her up. I thought I'd see what you were up to,\" she said with a sly smile. She clutched her hands together across her hips and twisted on the balls of her feet.\n\nAlex rolled over and felt his erection slide through the sheets, just what he needed. Remembering Carrie's training from the night before, he urged it to be quiet. He knew Megan would jump him the second she saw it, and he wasn't quite in the mood for her shenanigans this early in the day.\n\n\"Woah! What's all this?\" Megan asked in surprise as she stepped into his room and looked at the floor. He'd left his collection of panties and swimsuits where they lay after his long talk with Carrie, having fallen asleep almost immediately after she'd left. Megan bent down and rifled through the garments. \"So this is the collection Casey was talking about.\"\n\nAlex sighed. \"Yes, it is.\" His stiffness had subsided below obscene levels so he threw off his sheets and sat on the side of his bed. He braced himself for what he knew was coming.\n\n\"Wait, how did you get this?\" she demanded, holding up her tan-colored briefs.\n\nAlex stood and walked to his dresser as Megan's questioning eyes followed his naked body. He quickly pulled on a pair of boxers and a shirt, then motioned to a chair. \"Sit. We need to talk.\" He wasn't looking forward to this, but it had to happen now.\n\n\"I'll say.\" Megan curled her short legs into the upholstered armchair.\n\nAlex sat opposite her and sighed. \"You're not going to like this; and for my part, I'll say I'm sorry now, but I know that won't make it any better.\"\n\n\"What did you do?\" Megan asked, starting to get suspicious.\n\n\"I watched you with your pink toy. Last week, before the party. After you left I took those,\" he said, motioning at her stolen underwear.\n\n\"What do you mean you watched me?\" Megan said, raising her voice in pitch as she sat forward and contemplated Alex's meaning.\n\n\"There's a hole in your wall that leads into Ben's closet. He showed me and I saw you.\" Alex braced for Megan's fiery temper.\n\n\"MOTHERFUCKER!\" Megan screamed as she stood up and flailed her tightly balled fists at Alex, hitting him on his chest and shoulders. He raised his arms in self-defense while she yelled, \"How could you?!\" She felt sick to her stomach and collapsed. \"I trusted you,\" she whimpered and then curled into a ball on the floor.\n\nAlex reached out and she flinched away. \"I'm so sorry,\" he said, knowing it meant nothing. \"I should have stopped it.\"\n\n\"Why didn't you?\" Megan groaned through clenched teeth.\n\n\"I tried, but Ben wouldn't listen.\"\n\n\"Not good enough!\" Megan snarled. She lifted her hurt face to meet Alex's eyes.\n\n\"I know,\" Alex said, hanging his head in his hands. \"I took advantage of you, I should have said something.\"\n\n\"I feel like I'm going to puke.\" Megan groaned and clutched her stomach.\n\n\"I tried to make it okay,\" Alex said softly. \"Once I found out I took control. Ben hasn't seen anything. I only watched you and Casey.\"\n\n\"She knew too?\" Megan asked in disbelief.\n\nAlex sighed and lowered his head. \"She caught me watching what we did in your room. I made her promise not to tell you until I tried to work it out with Ben. Please don't be angry with her, she doesn't deserve it.\"\n\nMegan groaned again, wrapping her arms around her knees and clenching into a tight ball on the floor. She'd been betrayed by the two people she'd come to treasure the most.\n\nAlex spoke with a wavering voice. \"I shut it down after you and Casey got together before the party. I took over everything the day you and I were alone in your room. It didn't feel right, and I'm sorry I didn't do more. I...I...thought I did the best I could, Meg.\"\n\n\"You should have told me,\" she whimpered from the floor.\n\n\"I know that now. I didn't want to fight with Ben. I couldn't convince him to stop without it blowing up.\"\n\n\"I am going to destroy him,\" Megan said, her wrath evident as her face scrunched into a red ball of fury.\n\n\"Please don't. I know he deserves it, but let me talk to him first, then you can have your way.\" Alex thought of what Carrie did after Lily made similar threats against him for violating her privacy; how she came to his defense to help diffuse the situation.\n\n\"What if he doesn't stop?\"\n\n\"Find where the hole is and hang a picture over it. Just please let me try to fix this first.\"\n\n\"Not good enough. He'll just make another hole. I need payback,\" Megan said with venom in her voice. \"I want him to see something that will make him never want to watch me again.\"\n\n\"Like what?\" Alex asked.\n\n\"I don't know. I want him to feel as sick as I do,\" Megan said, still clutching her abdomen.\n\n\"We could put on a show for him. If he knew what we've been up to maybe that'll get him to stop,\" Alex suggested.\n\nMegan looked at him sideways, furrowing her dark angry brow. \"Was that your plan all along? You and him perving and spying on me, and then you fuck me while he watches?\"\n\n\"No! I only watched you that one time, I couldn't help it when I saw what you were doing. Look, it's just an idea. I'm telling you the truth, I swear it. I could have lied about this.\" He grabbed her seamless panties and held them up. \"I didn't know you then, but I do now, and I just want to make this right. If you want, I'll go over there, rip the camera out of the wall and patch up the hole right now.\"\n\n\"Tell me your plan,\" Megan said, resigned to the fact that Alex was on her side.\n\n\"I don't really have one. When you said you wanted him to see something that would make him not want to watch, I thought of what he most likely wouldn't want to see you doing; and that was me.\"\n\n\"That's probably true. If it was Case or another girl he'd probably never come out of his room again.\"\n\n\"I'm sure of that. Besides, Casey won't do it. Sonya might, but it would have the opposite effect. How about if I talk to him again, except I'll try harder. Then if he still says no...\"\n\n\"We fuck.\"\n\n\"Like rabbits,\" he added. Megan chuckled and Alex was glad to see her display some emotion other than wrath.\n\n\"If you told me about this when it happened I wouldn't have been so mad. You know I'm not shy. It's just creepy with my brother. I could never be with him like you are with Casey. I don't really care if he gets his rocks off looking at me, but I don't want to be recorded without knowing it.\"\n\n\"I completely understand, Meg, but he's been doing it for a couple months. I only found out last week when he set up the camera. That's why I didn't tell you right away, it wouldn't have mattered.\"\n\nMegan growled and Alex put a hand on her shoulder. He tried to calm her as only he was able to do. It worked, at least momentarily. Megan's face relaxed and her muscles came unknotted.\n\n\"When should we do it?\" she growled through gritted teeth.\n\n\"This afternoon, after you get off work.\"\n\n\"Alright, I'll be ready.\"\n\n\"I got something for you,\" Alex said, hoping to change topics. He stood and went to his closet, rifling through the pile of lingerie he'd kept hidden until he found the pink lace teddy that Lynn picked out. He turned and handed it to Megan, who's eyes immediately went wide.\n\n\"It's beautiful!\" she exclaimed. \"But this doesn't make up for what you did.\"\n\n\"I know. That's not why I'm giving it to you. I just saw it and thought of you. There's a lot more where that came from, but I want you and Casey to be together when I give you the rest. Maybe later tonight.\" he suggested.\n\nMegan ran the fine lace through her fingertips. \"I know something you can do to make up for it,\" she said, pursing her lips in thought. \n\n\"Anything for you, Meg,\" Alex said and nodded his head. He could immediately sense what she needed; release.\n\n\"Take off your clothes and lay on the floor. I have a lot of pent up frustration I need you to do something about. Plus Casey wouldn't have me last night and I'm pretty sure that was your fault, too.\"\n\nAlex could only shrug and do as the fiery brunette commanded. Laying on the floor, he watched her undress and willed his manhood to stand. By the time Megan stood over him he was ready for her. She spat into her hand in a very unladylike move, and then rubbed between her legs, coating her angry pussy with moisture. She stepped over him with one leg, squatted, and used two fingers to spread herself open as she hovered over Alex's cock.\n\n\"We're skipping the foreplay this time,\" she said, then dropped down, engulfing his shaft in one quick movement. Alex grunted once he was fully inside her and focused on sending pulses into her depths, twitching and jerking his cock against her tight grasp. Megan moaned and pressed a hand below her belly button, trying to feel what Alex was doing from the outside. \"That's a new trick,\" she said while grinding against his pelvis. \"I like it.\" \n\nMegan threw her head back and moaned, then rose up and drove back down onto him. She quickly began a rhythm, hands on her knees, feet on the ground, tight little ass bouncing forcefully off of Alex's lap with an audible slap. She worked herself into a fervor while Alex lay back and let her have her way. He could feel her frenzied hunger and sensed her climax approaching. He kept his fire low, biding his time, assuming she would need more than one go-round to leave satisfied.\n\nAlex was right. Megan moaned and flung her head forward, whipping her long hair wildly as she stared intently into his eyes. She stopped with him halfway inside her, as an orgasm ripped through her, her taught legs fluttering and small breasts quivering while her hips and back spasmed out of control. After several moments, she regained composure and again began driving Alex into her unquenchable chasm. Each time she came crashing down, she let out a startled squeak between panting breaths. Sweat beaded across her brow and chest, condensing into rivulets that trickled between her careening breasts.\n\nMegan kept up this pace for several minutes. She rode Alex, forcing him in and out of her depths until she cried out, climaxing for a second time. Her breath came in ragged gasps, her skin slick with perspiration, and yet she started again, still unfulfilled. Alex began pushing back, lifting from the carpeted floor. He tried to work her excitement to a boiling point, to bring her to an end that would finally leave her content. Minutes more passed and the frenzied girl continued to bounce on his cock, her secretions overflowing and coating his lap. A wet slap signaled the end of each thrust. And still, the frustrated girl persisted.\n\nAlex fed his fire, willing his climax to rise, and urging Megan to reach her final peak. Her legs began to shake and he could feel her giving out. With one final push of his gift, he struck out forcefully, commanding her to body to let go of it's pent up energy. She immediately collapsed on top of him while his own orgasm coursed through his body, sending his hardness throbbing into her core. Megan jerked on top of him, her sweat-slicked body clenched tightly around his. He could hear her moan and gasp in his ear, struggling to breathe regularly while he convulsed and emptied into her warmth. \n\nAlex wrapped his arms around Megan's flushed and exhausted body, holding her tightly until she regained her breath and her muscles calmed. He sat up, lifting her clammy torso with him. She curled her weakened legs around his back and sat on his lap, still with him inside her. \n\nMegan opened her eyes lazily and purred, \"That's what I needed.\"\n\n\"Feel better now?\"\n\n\"I do. Your sister is good at taking, but she's not the best giver. You could teach her a thing or two.\"\n\n\"I'll work on that, but I think it'll still take both of us to keep up with you,\" he said and chuckled.\n\n\"You're probably right. I just can't get enough, can I?\"\n\n\"You will never hear me complain.\" He kissed her softly.\n\n\"How did you last that long? That was incredible.\"\n\n\"I've been practicing; I knew you were going to be a while, so I took my time.\"\n\n\"I didn't think guys could do that.\"\n\n\"You'd be surprised.\" Alex kissed her again, this time seeking entrance into her mouth. The two lovers held each other, mouths and tongues interlocked until Alex softened and tumbled out of her tender folds.\n\n\"Let's take a shower. I have to start work soon.\"\n\n\"I'd like that,\" Megan replied and then stood and helped Alex to his feet. They dressed again in just their underwear and slid out his doorway and around the corner into his bathroom. Alex turned on the water and watched as Megan got undressed. He dropped his boxers and stepped into the warm water, joined moments later by his fierce companion.\n\n\"I've never taken a shower with someone else before,\" she said, wrapping her arms around Alex's broad chest. He returned her embrace and guided her under the showerhead.\n\n\"I really am sorry, about Ben I mean. I should have been harder on him, got him to stop,\" Alex said while stroking her wet hair.\n\n\"It's ok, Alex. I'm not really mad at you. The damage was already done before you found out. If you hadn't taken care of the camera and told me about it, it would have been worse.\"\n\nAlex grabbed the soap and a washcloth and began to clean the svelte brunette. Taking his time, slowly working his way from her feet to her thighs, to her soft breasts. Once she was lathered, he ran his hands over her slick skin, caressing and massaging her tightly muscled body. He slid a soapy hand over her firm flat stomach and down between her legs, slipping a finger through her folds and over her sensitive button. Megan moaned and leaned her head against his shoulder. Alex continued to gently rub circles around her clit, sending sparks of passion into her body. She mewled and then gasped, quaking under his touch in awe of how quickly he'd brought her to climax for the fourth time that morning.\n\n\"Mmm, you have magic fingers,\" Megan cooed. Alex spun her under the water and rinsed the soapy lather from her body. He kissed her neck, and then trailed down her chest, circling her perky breasts. He took a dark pink nipple into his mouth and flicked his tongue across its pronounced nub causing Megan to gasp and wrap her hands around his head. He continued to pour his attention into her body, licking through her shallow cleavage and trailing down over her belly button. From his knees, he nuzzled up between her legs and kissed her soft lips. He flicked his tongue out and curled it around her clit, pulling it into his mouth and pinching it lightly between his lips.\n\nMegan leaned back against the wall of the shower and lifted a leg, resting it over Alex's shoulder while he continued to lavish her with attention. \"Enough!\" Megan yelped when she could take no more. \"I need you inside me again.\"\n\nAlex stood slowly and Megan kept her leg over his shoulder, stretching it up as he got to his feet. Her ankle hooked onto his shoulder and straightened between them until it was vertical, her toes pointing up. He wrapped an arm around her waist for support. Crouching down, Alex used his free hand to align himself with her entrance and pushed between her pink petals. Megan whimpered as he slid inside and began thrusting his hips. \n\nTheir position only allowed for several inches of penetration and Megan soon wanted more. \"Pick me up,\" she said. Alex grabbed her firm backside tightly from between her legs and lifted, pressing her against the wall and sliding her up as he stood straight. Megan simultaneously picked her second leg up and over Alex's other shoulder in an amazing display of elasticity. She was now folded in half, both feet pointed in the air, sandwiched between her lover and hard tile.\n\nAlex arched his back and pushed his hips forward, driving his full length into the flexible gymnast. Megan yelped as he came to rest deep inside her. Holding that position, Alex tried again to make his cock dance, flexing and clenching his muscles. Megan gasped every time she felt him jump and push against the walls of her ribbed tunnel. She tried tensing against him, tightening around his shaft and rippling her core in response. Alex gasped and smiled when he felt her move and then began thrusting lightly. He leaned in and held her wet body firmly as his hips began to sway in earnest, driving her against the tile wall. He pushed as deep and hard into her as he could, feeling that was what she wanted most.\n\nMegan soon cried out in release, her face a mask of ecstasy. Alex pumped into her several more times and groaned as his climax sent shivers down his body and an eruption of cum into her tightness. He pushed her hard against the wall until their convulsions ceased and Megan lowered one leg to the ground. Alex set her down after her second leg unfolded and kissed her deeply.\n\n\"I hope that was enough to keep you satisfied for a while,\" Alex said with a grin after breaking off the kiss.\n\n\"I've never had that many orgasms so fast,\" she said with admiration in her eyes. \"You are amazing,\" she added and then leaned in and rested her head against his chest, listening to his heartbeat slow. \"I hope you saved some for this afternoon. I want to do this again and really teach Ben a lesson.\"\n\n\"Oh yeah? What do you have in mind?\" he asked, wanting to see how far the fearless girl was willing to go.\n\nMegan stepped back under the shower and said, \"I want it to be dirty. Lots of screaming and talking nasty. I want you to come on my face, come loads. I want him to see it, and I want to lick it clean while he's watching. Then maybe you can do what you did to Sonya when we were playing truth or dare,\" she said with a sheepish grin.\n\nHe slid a hand down her back and through her crease, coming to rest on her tight little ring. \"You want me in there?\" he asked while tickling her backdoor with his middle finger.\n\nMegan squirmed and gasped. \"I've been thinking about trying it. Oh god stop, Alex, save it for later,\" she pleaded when she felt him start to prod with more force.\n\nAlex dropped his hand down and shrugged. \"Alright, you're in charge. I'll do whatever you say.\"\n\n\"Good,\" Megan said. \"Oh, wear some of that sexy underwear you have. I'll put on what you just gave me.\"\n\n\"Looking forward to it,\" Alex said with a grin. Now hoping more ever that Ben wouldn't agree to shut down his illicit operation.\n\nThe two finished washing up and Alex shut off the water. After drying off he pulled on his boxers. Megan remained naked and bent to pick up her pink cotton panties. Handing them to Alex, she said, \"Here, you earned these; but no more stealing my undies mister, got that?\"\n\nAlex nodded then took her gift and held them to his nose. \"I promise,\" he said through the thin cotton material while holding up his other hand as if taking a pledge.\n\nMegan laughed and shook her head. \"Weirdo.\"\n\nThe two shared one last kiss in the doorway and then went their separate ways; Alex headed back to his room, and a very naked Megan turned silently into his sister's room.\n\nAlex dressed quickly and cleaned up his collection of panties and swimsuits, placing them safely back inside the heavy chest at the foot of his bed before adding the pink pair Megan just gave him. He needed to give his little girls their gifts soon or they were going to run out of panties, he thought with a chuckle.",
        "Feeling a grumble in his stomach, Alex went downstairs for a quick bite to eat before beginning his first day of lifeguard training. While he ate a bowl of granola, he contemplated the day's activities. The training was all online and according to the materials he'd reviewed yesterday it would cover the basic information that he'd learn to apply in practice over the coming days. It should be easy, he'd done plenty of similar training in the past for his work in computer security. Read the material, take a short test, then move on to the next lesson. Jump through hoops until you've been proven capable of learning something.\n\nBack upstairs, Alex turned into his office and opened the packet of information his boss Emily had given him the day before. He logged into the online training system, created an account, and began the first lesson. Over the next few hours, he covered the basics of the lifeguard manual: characteristics of what makes a good lifeguard, their responsibilities, decision-making skills, and legal considerations. At the end of each lesson was a ten-question quiz requiring eighty-percent to advance. He scored perfectly on the first four sections and learned about basic safety, pool rules, surveillance techniques, and recognition of drowning.\n\nAs he wrapped up the fifth lesson, he heard a knock on his office door and Casey entered.\n\n\"Hey Case, aren't you working today?\"\n\n\"I'm just about to leave. Jenny had some stuff to do this morning and doesn't need me until later. Megan left a little bit ago, she sure was in a cheery mood. I'm guessing you had something to do with that?\"\n\nAlex nodded. \"That's good. I told her about Ben and the hole in her wall.\"\n\n\"Oh wow, how did she take it? What are you going to do?\" Casey was surprised her friend would be so happy given the news; but it didn't take a genius to figure out how Alex could have cheered her up.\n\n\"She was pretty pissed at first, but I told her I'd take care of it; and we have a backup plan if Ben won't stop.\"\n\n\"I'm amazed you got her to calm down. I thought for sure she'd be all fired up after she found out,\" Casey said.\n\n\"It definitely took a while to calm her down,\" Alex said and smiled inwardly. It took five times, actually. \"I'm going over there later to see what I can do.\"\n\n\"That's good. Let me know how it goes. It's so creepy, I hope you can sort it out without causing a big mess,\" she said.\n\n\"I think it'll be alright. As I said, we have a backup plan just in case.\"\n\n\"I was thinking about what you said yesterday morning, about doing something this weekend. I think I'd like to go camping and take some friends, maybe see if Lily would like to come.\"\n\n\"That sounds like a great idea! I have to make sure work doesn't need me this weekend, but it should be alright. I'll know for sure tomorrow.\" Alex couldn't remember the last time they went camping. It was always something their father would do, pack everyone up in the minivan and drive up into the woods for a few nights in the wilderness. He missed those times a lot, being together as a family without all the other distractions.\n\n\"Okay, let me know and I'll take care of everything. Will you ask Lily if she wants to go?\"\n\n\"Sure. Do you need money for anything?\" Alex knew Casey didn't have much saved up. This was her first summer working and typically Alex took care of any big expenses she had throughout the year.\n\n\"Nope, Jenny offered to give me an advance. This one's on me.\"\n\n\"Sounds great, I'm excited about it.\" Alex stood and gave Casey a hug and then leaned down and kissed her softly. \n\nCasey blushed and said, \"I'll let you get back to work. Let me know tomorrow and I'll find out who else wants to come with us. See ya tonight.\"\n\n\"Bye, sweetness. Say hi to Jenny for me,\" Alex said as Casey walked out of his room. She nodded and smiled, closing the door behind her.\n\nAlex returned to his training, flying through the next several sections on injury prevention and action plans. As it was nearing midday, his phone rang. He didn't recognize the number, but it was local so he picked up.\n\n\"Hello?\"\n\n\"Hey Alex, this is Natalie. Lily gave me your number. I'm having some issues with my laptop and I don't really want to go to the Y to finish this training. Do you mind if I come over?\"\n\n\"Sure, I have a spare you can use.\"\n\n\"Great, thanks. I'll be there in ten.\"\n\n\"Okay, see ya then.\"\n\nAlex hung up. The thought of spending time with Natalie alone was very appealing. He'd been told twice that they were a lot alike, but really knew nothing about the exotic brunette. He turned back to his training and finished the lesson he'd started, acing another short quiz before his stomach started to growl. Closing his laptop, he left his office and went downstairs to make lunch.\n\nThe doorbell rang while Alex was pulling leftovers from the fridge. He opened it to find Natalie standing on his porch, conservatively dressed in a faded pair of jeans and a baggy black hoodie. Her curly chestnut mane framed an exquisite olive-skinned face that immediately kindled his fire. He forced himself to calm and think with his big brain rather than his little one. \n\n\"Hey Natalie, come in. I was just making lunch. Want some?\"\n\n\"Sure, that would be great. After all this mess with my laptop, I forgot to eat. I was so worried I might not finish on time,\" she replied.\n\n\"Okay, I'll fix you a plate real quick. Lasagna or ravioli?\" Alex asked as he led Natalie into the kitchen.\n\n\"Ravioli sounds good. You cook a lot?\"\n\n\"No, Casey does most of the cooking. But these are leftovers from the party we had last weekend. Gene's catered and we have a fridge and freezer full,\" he said.\n\n\"Oh, I love Gene's. He's such a good guy,\" Natalie said with a genuine smile.\n\nAlex popped Natalie's plate into the microwave while he prepared his own. Once both were done he slid hers across the kitchen island and handed her silverware.\n\n\"Thanks, smells amazing,\" she said.\n\n\"So what happened with your laptop?\" Alex asked after taking a few bites of pasta.\n\n\"My hard drive has been getting bad sectors for a few weeks and it finally decided to die on me. I think the disk encryption key got corrupted and I don't have a way to restore it, so now it won't boot past the BIOS.\"\n\nAlex's jaw dropped. She was speaking his language; and he was speechless.\n\n\"Let me guess, you're surprised I know about disk sectors and encryption keys?\" Natalie asked with a raised eyebrow. She'd obviously dealt with this type of response before.\n\n\"I...uhh...I don't know what to say. Actually, I do. You are not what I expected, Natalie.\" Alex grinned at her after repeating the line she'd given him the day before at tryouts.\n\nNatalie laughed. \"I suppose that's fair. I think there are maybe twenty girls majoring in my degree at school, out of several hundred.\"\n\n\"What degree would that be?\"\n\n\"Computer science. I'm also minoring in electrical engineering,\" Natalie said, flexing her credentials and taking another bite of ravioli. She knew Alex was a big tech geek, at least according to his sister.\n\n\"Impressive. Having a hard time deciding between software and hardware?\"\n\n\"No, I definitely want to do software. I just felt it was important to have a good understanding of the other side, too. I'm most interested in embedded systems programming.\"\n\nAlex nodded his head. That's what he made his money doing. Programming networking switches and routers and developing software that kept the information that flowed through them secure. He shook his head, unable to believe such a gorgeous young woman would choose to follow his same field. Not that her gender made him doubt her abilities; it's simply a male-dominated industry. Women were rare, and attractive women were nearly unheard of. It's a large part of why he'd never had much experience with the opposite sex until recently.\n\n\"I know a few things about that,\" he said humbly. \"Did you bring your laptop? I could take a look at it.\"\n\n\"I brought it, but I don't know why. I tried everything I could think of.\"\n\nAlex cleaned up their plates once they'd finished eating and took Natalie up to his office. \n\n\"Woah,\" Natalie said as she stepped inside. \"Is that a server rack?\"\n\n\"Yep. Sometimes I need to do a little heavy lifting.\"\n\nNatalie shot him a sideways look and continued to check out his gear. Alex had multiple desks and workstations, a huge array of monitors, laptops of varying sizes, and the aforementioned server rack in the back corner that flashed with blue, red, and green lights. Posters of network diagrams, flow charts, and electrical circuits adorned the white walls. Cables and devices were strewn about every surface but were well organized. He couldn't focus in clutter. \n\n\"Holy crap, I had no idea. Your sister said you were into tech, but this is seriously impressive,\" Natalie said, it was her turn to drop her jaw.\n\n\"Yeah, she's never really understood what I do,\" Alex responded.\n\n\"She is probably the least tech-savvy person I know,\" Natalie said and laughed. \"So what do you do?\"\n\n\"Have you heard of a company called SecDev?\" Alex asked.\n\n\"Yes, I have. I want to try and intern with them next school year. There aren't many local companies that do what I want to do,\" Natalie replied. \"You work there?\" she asked hopefully. Having an in would be a huge help towards landing a job there.\n\n\"Actually, I started that company.\"\n\n\"WHAT?!\" Natalie shouted in shock.\n\nAlex handed her an old business card from a stack he kept on a nearby shelf. It read, 'Alex Donovan - Founder and CEO' with an embossed blue SecDev logo that Natalie easily recognized.\n\n\"I don't believe it,\" Natalie said while shaking her head and re-reading the card for the fifth time. \"Why don't you don't still work there? What the hell are you doing taking a job as a lifeguard?\"\n\n\"Have a seat and I'll give you the short version,\" Alex said, motioning to a desk chair beside his own. Natalie set her bag down and dropped into the chair, spinning to look at Alex with an intent gaze.\n\n\"I started SecDev when I was in high school. I graduated a couple years early and was going to college when the business took off. I dropped out of school because it was pretty pointless for me at that time.\"\n\n\"I can imagine. If I owned a company like SecDev I sure wouldn't be in school,\" Natalie said, nodding in agreement.\n\n\"I sold the company a little over a year ago after my dad passed away. My family needed me, and I was pretty worn out. It was a lot of work, plus I was gone from home constantly. I kept most of my original intellectual property and patents, plus a few customers. Now I'm a part-time consultant. They call me when no one else can figure out their problem; but I'm getting tired of that too, spending all day behind a laptop. It's not like I need the money.\" Rarely did Alex flaunt his wealth, but he took Natalie for no fool and knew she could estimate within reason what his company would have been worth.\n\n\"Wow Alex, I don't know what to say.\" Natalie was floored. Sitting in front of her was a person who had done exactly what she hoped to do. Make a great product, build a company around it, then sell it, get rich, and do whatever you want. He had to be three or four years younger than her. It was mind-boggling.\n\n\"Yeah, you do,\" he said with a grin.\n\nNatalie laughed, \"You're right. You are definitely not what I expected.\"\n\n\"The feeling is mutual. Please don't take this the wrong way, but I've never met someone so beautiful, who was interested in all this.\" Alex raised his arms and motioned at his cathedral of gadgets.\n\nNatalie blushed, \"I get that a lot, but not usually phrased so nicely. Thanks, Alex.\"\n\n\"Tell me when you're ready to work for SecDev. I know the CEO and CTO, they're friends of mine and owe me far too many favors.\"\n\nNatalie beamed, \"Thank you so much. You have no idea how much that means to me; and your story, what you did, it's...it's...inspiring,\" she said, having to search for the right word.\n\n\"Thanks. I'm happy to help. I'll even do you one better. As I said, I'm looking to wind down with my consulting work, but I still want to keep a few clients around in case I decide to get back into the business. You know, leave the door open. I could throw some work your way. At least enough to put some bullet points on your resume before you graduate.\"\n\nNatalie was speechless once again. She didn't know what she did to deserve his favor, but she could tell he was being honest. She could sense no ulterior motive, he genuinely just wanted to help. After several moments she meekly replied, \"That would be amazing. I'll have plenty of free time this summer.\"\n\n\"Great, I'll think about it and get back to you. Now, let's get you set back up so you can finish the training. I'll take a look at your laptop while you catch up. I'm about halfway through.\"\n\nHe logged Natalie into one of his spare workstations and pulled up the training website while she fished through her bag for her laptop.\n\n\"Here you go,\" she said, handing him the small computer. She turned to the desktop and entered her credentials into the training website. \"Phew, I didn't lose anything. Looks like I'm all set,\" Natalie said in relief as she was able to pick up where she'd left off.\n\n\"Great, I'll see what I can do about this guy,\" he said, lifting the laptop.\n\nAlex spent the next half hour tinkering. He cloned her laptop's drive onto a spare disk he knew was good, and then set to work repairing the encryption key. Without that key, the disk wouldn't boot into the operating system. He was impressed Natalie knew enough to keep her drive secure, but she should have kept a spare key in case of emergencies. Alex reached deep into his bag of tricks to coax the laptop back to life and eventually it chimed the familiar startup sound. Natalie turned to look at him, her gorgeous face split by a huge grin.\n\n\"You didn't?!\" she said, again astounded by the young man.\n\n\"Piece of cake,\" he said nonchalantly and stretched his long arms over his head. \"I made a backup key for you. Put it in a safe place and if this happens again you won't be locked out.\"\n\n\"Thank you!\" she said graciously, standing to look over his shoulder at her familiar desktop wallpaper. \"I screwed up and wrote over the backup key I had, and of course I didn't realize it until I needed it. Lesson learned.\"\n\n\"Been there many times.\" Everyone made mistakes, at least she knew what she should have done. Alex was suitably impressed.\n\n\"How's the training going?\" he asked.\n\n\"Good, I'm almost caught up to you.\"\n\nThe pair continued working through lessons for several hours, largely in silence. The topics shifted toward rescue skills, CPR, first aid, and how to handle specific types of aquatic emergencies. Alex was learning a lot and focused intently. The information could save someone's life, or worse, cause someone harm, and so he treated it with the seriousness it deserved.\n\nFinishing the last quiz with another perfect score, Alex moved on to the final test that covered the entirety of the day's training. He had to score over ninety percent to pass or risk having to repeat sections until his score improved. After an intense half hour, Alex was pleased with a passing grade. He printed the results and a certificate of completion and shut down his laptop.\n\n\"All done. I'm going to go for a swim. Feel free to join me when you're finished.\"\n\n\"Just started the test,\" Natalie said, her concentration evident.\n\n\"Good luck,\" Alex replied, knowing she wouldn't need it.\n\nAlex went into his room and changed into a pair of speedo briefs. He could have chosen a more conservative suit, but the chance to show off for Natalie in private was too much to pass up. He also knew that with his new gift he'd be able to tell if she was interested, and maintain control if she was not. He had no specific plans for Natalie, but the exotic brunette intrigued him beyond any girl he'd met.\n\nGrabbing a towel, Alex walked downstairs and out to the pool. He slid into the water and began his warm-up routine. After several minutes, he was in full rhythm, pacing across the twenty-five-yard pool as all other thoughts and concerns were forced from his consciousness. After nearly a half hour he began to tire and slowed.\n\n\"I passed,\" Natalie said with a broad smile. She was standing on the edge of the pool wearing a familiar blue one-piece swimsuit. It belonged to his sister Lily, she must have borrowed it.\n\n\"Congrats! Come on in, the water's refreshing.\" Alex admired her beautiful body as she sat and then slid into the pool. Her breasts were large, cleavage was displayed prominently out of the top of Lily's old suit. He admired her curvaceous flared hips the most, and what lay behind and between them. The blue suit was tight around her middle and Alex could make out a little crease starting to form as the stretchy fabric pulled into her softness when she slid off the edge and into the water.\n\nNatalie dunked under and wet her dark curly hair. Surfacing, she smiled at Alex. She wasn't oblivious to his glances. Most times when she caught boys looking she ignored them, it was a daily occurrence that she'd learned to deal with, but this felt different. Maybe it was his trusting nature, or how he helped her with the laptop, or his intriguing background in a field she cared very much about. It didn't matter, she trusted her instincts, and so far they'd had nothing but good things to say about the young man.\n\nAlex watched as Natalie swam several laps before coming to rest in front of him treading water. \"I like what you've done to the pool. Must have been some party,\" she said, referring to the two balloon arches that crossed overhead, now beginning to show their age. He'd also had a huge slide installed along with a pair of large mechanical sunscreens that covered the lounge area.\n\n\"It was. The girls all had a good time. I did too. I think these balloons are about done, though,\" he said pointing up at the saggy arches of blue and white.\n\n\"I can help you take them down if you want. Although I was kind of hoping we could do some practicing for tomorrow.\"\n\n\"That would be great, thanks. What sort of practice do you have in mind?\"\n\n\"Water rescues mostly. I've never done anything like that,\" Natalie said.\n\n\"Alright, let's give it a shot.\" There's no way he would pass up a chance to wrap his arms around his beguiling guest.\n\n\"We need a flotation device, like a raft or inner tube,\" Natalie said as she scanned the vicinity.\n\n\"I can get that.\" Alex climbed a nearby ladder out of the pool. He could feel Natalie's eyes on him as he walked to the small storage shed next to the patio and retrieved a few different foam and inflatable things they could use for the practice. He brought them back to the pool and set the assortment near the edge of the deeper end. He stood as Natalie swam over to him and looked up at his body, pausing notably to admire the slight bulge in the front of his swimsuit. His cock twitched and he encouraged it to grow slightly.\n\nNatalie stared in astonishment as Alex's trunks filled out in front of her eyes. She felt a familiar ache between her legs. It had been a long time since she was with anyone other than her girlfriends and she couldn't help but wonder if what he had under his tight briefs might be hers for the taking.\n\nAlex grinned, enjoying her conspicuous attention. \"Okay, what's next?\" he asked.\n\n\"I guess let's start with the easiest one. I'll be a conscious victim and you come save me.\"\n\nAlex nodded as Natalie swam to the middle of the pool and turned to face him. Remembering his training, he knew he needed to execute an active victim front rescue and grabbed one of the pool noodles. He dove into the water and swam up to her, announcing loudly, \"Stay calm, I'm here to help,\" while Natalie faked flailing in the water like she was drowning. She stopped and Alex pushed the foam flotation device between them and pulled her arms over it so she could use it to stay above water. Then he grabbed one end of the noodle and swam her to the closest edge.",
        "\"My savior!\" Natalie said and giggled girlishly. \"Okay, my turn, same thing.\"\n\nNatalie and Alex repeated the maneuver several times, taking turns until they switched scenarios. \"This time I'll be facing the other way,\" Natalie said and turned in the water. Alex swam up behind her, holding the float in front of him until he contacted her body. He reached under her arms in an attempt to pull them behind her back and over the foam noodle but ended up with two handfuls of her hefty breasts instead.\n\n\"Oh my,\" Natalie said softly as Alex lingered.\n\n\"Sorry,\" he said quickly and reached up into her armpits and pulled her over the floatation device. Once she was floating on her back, he swam her to the side.\n\nChoosing not to linger on his little slip-up, Natalie said, \"Okay, my turn. Except I want you to pretend to be unconscious and floating face down.\"\n\n\"Alright,\" Alex said and assumed the position she'd requested. He felt her swim up behind him and then her skin began to contact his as she reached under his arms and pulled him to the surface. Her soft breasts pushed hard into his back and he felt her hands explore his tightly muscled chest while dragging him above water. She pulled him over the pool noodle so his face was out of the water and he floated on his back. \n\nAlex kept his eyes closed, staying in character. When he felt her stop he continued to play dead while her hand circled his broad chest and slid down his flat stomach. He felt her lips press into his and responded, drawing her tongue into his mouth for an intense first kiss. Her hand continued down his stomach and came to rest on his bulge, sliding across the tight fabric of his speedo. When she broke off the kiss he opened his eyes and smiled, saying \"I didn't realize we moved on to mouth to mouth already.\"\n\nNatalie snickered and said, \"You weren't responding. I did what I had to do to bring you back to life. That's what the manual says.\" Alex immediately shut his eyes and feigned unconsciousness again until Natalie's soft full lips brought him back to life for a second time. He felt his suit tighten and calmed his fire to avoid a wardrobe malfunction, but still maintained a respectable size so Natalie would know he appreciated her attention; and she did, continuing to run her hands around his body and over his cock, circling his nipples and then traveling far between his legs and fondling the entirety of his tightly wrapped package.\n\nAlex felt her hand slide under the band of his speedo and wrap around his swollen spongy shaft. She shifted to his side and used both hands to push his trunks down until he sprang free. Bending down, she took him into his mouth and he instantly became hard.\n\n\"I don't remember reading about this in the manual,\" Alex said, grinning down at Natalie from his back.\n\nShe ignored Alex's attempt at a joke and focused on his magnificent cock. Yet another unexpected surprise. She sucked hard on his tip and thrashed it with her tongue, pumping his shaft with one hand and cupping his ass firmly under the water with the other. Alex's body bobbed and sloshed in the pool, supported by the foam noodle and Natalie's hand on his rear. She heard him groan in pleasure as she licked his length and then drew him into her mouth again, this time pushing his thickness as deep as she could into her throat. Her head bounced on his lap for several moments before Alex let out one final grunt and she felt his hot cum splash against the back of her mouth. She moaned, sending vibrations into him while feeling him twitch and shoot cream onto her tongue. Once he calmed, she released him and looked over at his relaxed face, making a show of swallowing every last drop.\n\n\"It's been a while since I've done that,\" Natalie said after licking her lips clean.\n\n\"It certainly doesn't show. That was spectacular.\" Alex dropped the pool noodle and sunk into the water. \"May I return the favor?\" he asked boldly.\n\n\"Maybe later. I'd like to get out now.\" She almost agreed but was nervous about going so far in such a public place. Exhibitionism was not her thing. Plus, what she just did startled her, it was almost like she lost control and that was not a comfortable feeling.\n\nAlex sensed her trepidation and that it wasn't aimed entirely at him. \"Alright,\" he said and lifted himself out of the water. He helped her up, admiring her curvaceous hips as she stepped out of the water, and handed her a towel. \n\nWhile he watched her dry her long curly hair he said, \"Can I ask you a personal question?\"\n\n\"Sure, I guess.\"\n\n\"What are you? I mean, where are your parents from?\"\n\nNatalie laughed. Most boys didn't have the courage to ask. \"My mom is half Japanese and my dad is a second generation immigrant from Brazil.\"\n\nAlex nodded and couldn't keep himself from saying, \"That makes a lot of sense.\"\n\n\"What do you mean?\" Natalie was curious now.\n\n\"Well, your face is so beautiful, I can see the Japanese in your eyes and pretty little nose. But your lips are definitely Brazilian, and so is this.\" Alex stepped forward and ran his hand down her hip and then curved it in until one of her magnificent cheeks was pressed into his palm.\n\nNatalie blushed at Alex's complements and turned, allowing him to explore her Brazilian half. She felt his hands trace the curves along her waist on either side, then travel over her hips before coming together on her backside, cupping and kneading her firm flesh.\n\n\"Spectacular,\" Alex said. \"I've never met a girl as stunning as you, Natalie, I mean that. Since the night of Lily's birthday party, I've thought a lot about having a chance to see more of you.\"\n\n\"Oh God,\" Natalie said and turned. \"I hope that isn't what this is all about. The other girls were way more excited about that than I was.\"\n\n\"No, no, I don't mean to give you the wrong idea. This isn't some elaborate setup,\" he chuckled. \"You just happen to be my favorite memory from that night, especially after what you let Lynn do.\"\n\nNatalie blushed, her olive skin turning a few shades darker. \"Lynn told me about you two last night,\" she said, hoping to change the topic from her uncharacteristically scandalous behavior. She began walking towards the patio and Alex followed, his eyes glued to her jiggly blue swimsuit-clad butt.\n\n\"Oh?\" He said over her shoulder. He was going to have to be careful with his sister's friends. Seems word was getting around and Lily may not react well if it reached her.\n\nNatalie stopped on the patio and turned. \"She said you two had sex yesterday in the mall bathroom. I didn't believe her, I thought it was another one of their tricks.\"\n\n\"Her and Carrie?\" Alex asked.\n\n\"Yeah, those two are always scheming.\"\n\n\"Lynn seems harmless, and Carrie's done playing games, at least as far as I'm concerned,\" Alex said, keeping the details vague but knowing Natalie would still make at least one accurate assumption.\n\n\"So it's true?\" Alex nodded. \"Does Lily know you're chasing after all her friends?\" Natalie asked with a raised eyebrow as she turned to open the sliding glass door.\n\nAlex shook his head. \"Lynn said the same thing. I'll tell you what I told her; I'm not chasing anybody. In fact, she's the one who followed me into the men's bathroom and pulled me into a stall. She made it very clear what she wanted,\" Alex said honestly. \"Just like you were pretty clear a few minutes ago,\" he added with a smirk.\n\nNatalie huffed and went inside, still not sure what make of Alex's promiscuity and her own lack of self-control. \"You grabbed me first,\" she said.\n\n\"That was an accident, I swear it. Maybe I stretched it a bit, but can you blame me? You have to know you're irresistible. I bet every guy in your classes at college dreams of having a chance with you.\"\n\nNatalie sighed. \"I deal with those creeps every day.\"\n\n\"I don't doubt it. All I can say is that I am not like them. If you aren't interested then just say so. We can just be friends or at least colleagues,\" Alex said as they walked upstairs. \"We're too much alike to not be something.\"\n\nHe was right, and Natalie knew it. She'd never had a guy talk to her like this. It's like he knew exactly what she was thinking and wasn't afraid to say what he thought. It made it very hard to distrust him.\n\nNatalie stopped in front of his bathroom and turned. \"You are not what I expected, Alex Donovan, Founder of SecDev and lifeguard in training. But I'm going to take a shower now.\" Stepping inside the bathroom she closed the door before he had a chance to respond.\n\nAlex shook his head and grabbed a change of clothes from his room before stepping into his sister's bathroom to rinse off the chlorine. He hoped his explanations to Natalie would calm her. If it turned out she wasn't willing to pursue their relationship further, he felt content with remaining her friend. It was an unexpected benefit of his gift. The ability to quell his passion left doors open that he would have otherwise slammed shut in frustration.\n\nNatalie took her time in the shower, deciding how she wanted to proceed with the startlingly alluring boy across the hall. His behavior was refreshing, she was tired of immature man-children throwing themselves at her. He was right though, she certainly came onto him first. It had been a long time since she'd made an opening move. At first, she couldn't conceive it was her doing, spontaneous blowjobs had never been part of her playbook. She liked it though, a lot! Coupled with their shared interests and her professional admiration for what he'd accomplished, it turned out the choice was easier to make than she expected.\n\nAlex heard Natalie clear her throat from his office door. He swiveled in his office chair and opened his eyes wide in pleasant surprise. She was wearing the blue thong he saw the night of Lily's party along with a matching lace bra that was partially hidden behind her curly wet hair. He leaned far back in his chair, put both hands behind his head, and whistled long and slow.\n\n\"Down boy,\" Natalie said with a smirk. \n\n\"Ahhwooo,\" howled Alex playfully, leaning forward in his chair and grinning like a fool.\n\n\"Alright, here's my deal,\" Natalie began matter-of-factly, arms folded under her breasts. \"I'm not looking for a boyfriend. I really need this lifeguarding job and don't want something between us to cause problems. I also need the SecDev internship, but I'm not doing this for favors. If you can live with that then I'd like to take you up on your offer.\"\n\nAlex thought for a minute; not because he needed to, he just wanted to keep looking at her delicious figure. Calming his fire, he took a moment to appreciate her logical and forthright approach to the situation. He was too used to girls just jumping on him, or at least being so obvious in their affections that he didn't have time to consider the consequences. Carrie's advice of being open and honest early was definitely the best approach to take with Natalie, and it seemed to be paying off.\n\n\"Well?\" Natalie said, moving her hands onto her sexy hips to signal her impatience.\n\n\"Sorry, it's hard to think when you're standing there like that.\" Putting on a more serious face, he added, \"As I said before, if this isn't something you want, just say so; and if your mind changes later, I can deal with that. Otherwise, I'll follow your lead. I'm not looking for a girlfriend either, and I also don't want our jobs to be affected.\"\n\n\"Good,\" said Natalie, relieved he could continue being mature about the situation.\n\n\"I'm also certain you will get the SecDev internship with or without my help. But I will put in a good word regardless. I'm also serious about having you pick up some of my consulting work, you'd be doing me a huge favor.\"\n\n\"Thank you, Alex. I don't know what to say. Guys don't act like you have around me.\"\n\n\"Go on, say it,\" he said with a smile, never tired of hearing the words.\n\n\"Yes, alright, you're not what I expected. I need to have a talk with your sister. She's filling her friends' heads with lies.\"\n\nAlex grinned and then said, \"Carrie and I took care of that. Lily's coming around, it's not her fault.\"\n\n\"That makes me happy. Your sister deserves to feel better than she has lately.\" \n\nAlex nodded and watched Natalie's wide hips swing towards him, stopping just out of reach. \"So you and the troublemaker are scheming together now?\"\n\nAlex chuckled. \"I'm not entirely sure. I went from being her plaything to something else last night. She did say that you and I would make a good couple. Lily mentioned it to me too, that they wanted to set the two of us up; but that was before...\" he trailed off, reaching dangerous territory. He couldn't explain the true nature of his and Carrie's relationship.\n\n\"Those two have been trying to set me up for years and it's always ended badly. Until now, at least,\" she said, stepping forward into Alex's outstretched arms.\n\nAlex slid his hands up and down Natalie's milk chocolate brown thighs, marveling at the smoothness of her skin and the extreme ratio of her waist to hips. He leaned in and kissed her toned stomach, circling her belly button and then trailing down her side and over the waistband of her light blue thong. Continuing his exploration, he traced his tongue down the seam of her panties, following the crease of her upper thigh. When he reached the middle of her legs he nuzzled into her soft mound and felt heat pulsating from her depths.\n\nNatalie moaned and pulled her wet hair back from her shoulders as she looked down at Alex pressing his face into her aching pussy. He stood slowly and removed his shirt, then wrapped his long arms around her, reaching between her shoulder blades and expertly unclasping her bra. Natalie helped pull it forward and over her shoulders. He immediately grasped her soft breasts in both hands and leaned in for a kiss as Natalie closed her eyes and parted her lips. She held his broad shoulders and moaned deep in her throat as he brushed his hands across her dark nipples and circled them with thumb and forefingers. Alex's hands overflowed with her soft supple skin as he slid them down her back and held her magnificent ass in his hands, still probing her wet mouth with his tongue.\n\nThe pair gasped for breath when their passionate kiss finally ended. Natalie smiled and said, \"You're a great kisser.\"\n\n\"Wait until you see what else I can do,\" he said and swung her around until the two traded places. He knelt again and this time took her panties down with him, rolling the silky blue fabric over her thighs and letting it fall to the floor. Glancing up at her sex, he could see no sign of hair, she looked smooth, like Jenny. Two dusky folds protruded from her outer lips and hung enticingly between her smooth thighs. Natalie gasped as he licked over her mound and two small puffy hills, kissing and probing with his wet tongue, gradually reaching deeper into her.\n\n\"Sit,\" he said softly. Natalie turned to find his office chair and pulled it under her naked body. She folded into the chair and sat forward on the edge, spreading her legs wide and opening the dark petals of her sex. Alex reached out and pulled on the chair, bringing her within reach as he leaned in to examine her. She was very different than other girls he'd been with recently. Her skin darkened the closer it came to her center, starting as a pale olive in the creases of her legs and becoming coffee brown over her two puffy lips. Her inner folds were shades of chestnut and ebony, two dusky wrinkly ribbons that surrounded a dark pink, almost red opening that glistened with moisture. \n\n\"Are you lost?\" Natalie asked impatiently.\n\nAlex looked up at her, pausing briefly to cherish her voluptuous breasts. \"No, just admiring.\"\n\n\"You're going to make a girl self-conscious acting like that.\"\n\nAlex shrugged, \"I'm just enjoying you. You're different, I like it.\" Then, to prove his point, he ran his tongue slowly through her steaming cleft. He flicked his tongue over her small button, trailed back down between her fleshy lips, and pushed into her tender opening, probing the source of her heat. Her taste was as intoxicating as her chocolate skin, Alex couldn't get enough as he sucked her meaty folds into his mouth and mauled her sensitive clit with his tongue.\n\nNatalie moaned and ran her hands through his hair. She felt an orgasm quickly approaching but wanted to savor the moment. She employed a trick she'd learned under Carrie's tutelage and stared at one of his posters in an attempt to distract herself.\n\nAlex reached out with his gift and tried to inflame her passion, but he met a resistance that he'd never encountered before. He ignored it and continuing pleasuring Natalie with his mouth. Lapping between her folds, sucking her clit into his mouth, and driving his tongue deep into her tunnel. He poured everything he had into her and yet she showed no signs of reaching a climax. She would moan and whimper, push back against his deep probings, and gasp when he focused intently on her most sensitive parts. She was sending all the right signals, but come, she would not. He was starting to think he was doing something wrong until he raised his eyes and watched her. She was staring at the wall, he could see her concentrating on something and his gift told him she was intentionally diverting her attention.\n\nThat won't do, thought Alex. He shifted sideways and twisted Natalie's chair, breaking her line of sight and distracting focus. He bore down on her clit, rolling it over his incisors. He reached out and felt the wall blocking his senses weaken and crumble. Inflaming his warmth, he pushed it into Natalie and encouraged her release. She screamed and bucked her hips in reaction to his simultaneous assaults. An orgasm ripped through her, more powerful than anything she'd felt, and she cried out in vibrato as her muscles twitched uncontrollably. She wrapped her legs around Alex's head and held him tight against her rippling pussy as he continued to punish her tenderness. She yelped again in surprise as a second wave of pleasure suddenly washed through her, sending jolts of electricity up and down her torso, bouncing between her stiff dark nipples and the raw center of her pleasure. \n\nMoaning and shaking, Natalie spread her hands through Alex's hair and then pulled at it, begging him to stop. He ignored her and after another minute of his tongue lashing her throbbing cunt, she came for a third time, completely losing control of her senses and unleashing a short torrent of wetness that splashed against Alex's chin and throat. She sat convulsing in the chair, legs clamped shut and bronze body flushed as Alex pulled away. He wiped her juices from his face and neck with the back of a hand and smiled at the girl's helpless revelry.\n\nNatalie eventually opened her eyes and groaned, looking down at Alex. \"What did you just do to me?\"\n\n\"Like I said, just enjoying you. You seemed to be playing hard to get there for a while,\" he said with a grin, his maw still slick and shiny with their combined wetness.\n\n\"That thing at the end. I came so hard I lost control. That's never happened. You were better than Carrie; and I'm guessing you know what kind of compliment that is.\"\n\nAlex laughed. \"Yes, she does take pride in giving good head.\"\n\nNatalie sighed heavily when she saw his tented shorts. \"I want more of you but I don't think I can handle it now.\"\n\n\"That's okay, there's always tomorrow,\" he said and winked.\n\n\"I'm not going to jump you at work. What if we got caught?\"\n\n\"You might be surprised at what goes on in the staff locker room,\" Alex added with a hint of mystery.\n\n\"What?\" Natalie asked, a mixture of intrigue and confusion apparent on her pretty face.\n\n\"You'll see, I wouldn't want to ruin the surprise.\" Alex circled the room and gathered Natalie's underwear and his shirt. He pulled the t-shirt on and handed Natalie her bra. He held her panties to his face and inhaled her musky scent while watching her lock away her magnificent breasts. \"Do you mind if I keep these? I've been thinking about them a lot since the party.\"",
        "\"Be my guest. I'll borrow Lily's, she won't mind.\"\n\n\"No, don't do that. She'll find out and I'll have to explain. I have something you can wear, be right back.\" Alex left and entered his bedroom. Sifting through his secret closet collection, he chose a strappy thong in dark purple that Lynn picked out from Victoria's Secret. Back in his office, he held the panties out to Natalie and said, \"Lynn helped me pick these out. I think the color will suit you.\"\n\nNatalie tried to be surprised by his infatuation with her panties, that he had a cache of newly purchased women's underwear in his room, and that he was keeping some secret about the YMCA locker room; but after everything else that happened that afternoon, she just threw it on the pile. Stepping into the thong panties, she lifted the multitude of straps over and around her broad hips and looked down in approval.\n\n\"You're right, these are great. I love all the little strings,\" she said while plucking them, arranging each in perfect symmetry over her bronze skin. \"I'll make sure to tell Lynn thanks.\"\n\n\"You are absolutely gorgeous.\" Alex walked up to Natalie and ran his hands down her waist and slid down across the straps. He pulled her into an embrace, cupping her bare bottom and pulling her chest against his torso. She whimpered and he leaned in for one last kiss.\n\n\"I'll let you pack up and finish getting dressed. If I stay here much longer you're going to have to take these back off,\" he said, snapping one of the narrow bands against her hip.\n\nNatalie giggled and nodded. \"See you shortly.\"\n\nDownstairs, Alex stood staring out the kitchen window at the two drooping arches that threatened to fall into the pool. He reminisced at how far he'd come. His transformation at Carrie's hands was remarkable. The thought of being with someone like Natalie would have been unimaginable mere days ago. She was the pinnacle of his former self's desires. In hindsight, he realized if he'd simply made an effort to get to know her, he'd have had a shot. Confidence is what Carrie gave him above all else. She was right once again, that was the key, but he also wagered his big dick played a role in Natalie's excitement.\n\nAlex chuckled and decided to head outside and dismantle the balloon decorations. As he bent down to untie a string of balloons, he heard the door open and saw Natalie step onto the patio dressed again in faded jeans and a nondescript black hoodie. Her chestnut hair was tied tightly behind her head in a flowing ponytail. Alex observed how the simple changes so drastically altered her appearance. She was obviously practiced at hiding her sexuality and he thought it a shame she had to resort to such lengths in an attempt to be treated normally by her peers.\n\n\"Let me give you a hand,\" Natalie said and walked to the opposite corner. Together they untied the remaining columns of balloons and herded them into the garage. For the next half hour, the pair laughed and cheered as they slaughtered their way through hundreds of deflated rubber spheres with scissors and knives.\n\n\"This is cathartic,\" Natalie said, picturing one creep after another as she slashed and stabbed into a string of the squishy blue balls.\n\nAlex picked up her signal without needing to look at her. \"You know, if you want to be left alone you should make yourself seem unavailable. Most of them won't chase what isn't theirs, they're too scared. Trust me, I've been that guy.\"\n\n\"What do you mean?\" Natalie said while plunging a knife into a white balloon with a hiss.\n\n\"Put on a ring,\" Alex said. Natalie shot him a flustered look. \"Not literally, just tell the creeps you're with someone. Make it known you are not on the market. You try to hide your looks but that makes it worse.\" Alex knew, he delighted in seeing what was hidden. It fueled the imagination and sapped reason from the brain. He drew her focus and stared into her dark eyes. \"Stop letting them think they have a chance.\"\n\n\"I've tried that but it doesn't work. I can't just announce it on the news. Guys I've never met come up to me all the time.\"\n\n\"Sounds like you need a story that will spread on its own then,\" Alex said.\n\n\"Can I say I'm dating the founder of SecDev?\" she asked with a shy smile.\n\n\"That would probably work. Just don't forget to say how handsome and filthy rich he is,\" Alex said, impressed at her ingenuity.\n\n\"That wouldn't be such a stretch,\" she said and walked up to Alex, cupping his jaw and pulling him in for a kiss. \n\n\"I thought you said you weren't looking for a boyfriend,\" he said after she broke off their tender kiss.\n\n\"I'm not. You're going to be my scarecrow,\" she said, chuckling at the metaphor.\n\n\"Don't know how I feel about that, but if it makes you happy and keeps you safe, then I won't say no.\"\n\nNatalie blushed at his concern. \"I should take off. Thanks for your help, you really saved me; and thanks for everything else, too.\" She darkened further and looked at the floor before adding, \"I'll see you at work tomorrow.\"\n\nAlex smiled warmly and said, \"Bye, Natalie. You are definitely not what I expected.\"\n\nNatalie grinned. \"Neither are you, Alex. Goodbye.\"\n\nAlex checked the time, it was just after five and he was due at Megan's by six. Upstairs in his office, he tidied up after Natalie's unexpected visit and checked his email, responding to a few clients that he wouldn't be available to fulfill their requests until tomorrow night. Shifting gears, he headed into his bedroom to change his clothes. From his dresser, he selected one of his sexy pairs of briefs and slid them on, tucking his cock into the front pouch and angling it down for best effect. He added a pair of khaki shorts and a white linen button-down shirt. After inspecting himself in the mirror he nodded in approval and went downstairs. In the kitchen, he fixed a quick bite to eat and contemplated what he was about to do.\n\nHe'd offered to make one last attempt to get Ben to stop his illicit video operation and if he didn't succeed, they'd have wild and crazy sex in her bedroom with the hope it would turn Ben off from the whole operation. Alex wasn't sure the plan would work, but he had to do something. Megan was beginning to mean a lot to him, and she certainly meant a lot to his sister Casey.\n\nResigned to his fate, he went down into the garage and pulled on his helmet, started his motorcycle, and raced down the driveway. Five minutes later he pulled into Ben and Megan's house. Their parents' cars were absent, which was a plus. He knew they'd be making a lot of noise if the first part of the plan fell through. There was one vehicle he didn't recognize, a white cabriolet, a rather girly car for Ben to be driving. After climbing up the porch steps, he let himself in and went upstairs. The bedroom doors were shut and he heard noises coming from Ben's direction. He knocked on the door and heard him swear followed by sounds of scrambling. \n\n\"One minute,\" Ben said hurriedly.\n\nAlex waited patiently until Ben opened the door, thinking he probably interrupted one of his porn sessions. Ben finally opened the door a crack and relief washed across his face. \"Hey dude, come in,\" he said and then grinned like he was opening a present. \n\nApparently, he had been. \"Hi Alex,\" a familiar face said from Ben's bed.\n\n\"Becky, how are you?\" Her makeup was smeared and her straight blonde hair was nested in the back. He knew exactly how she was, her sexual energy was practically tangible.\n\n\"Mmm, good,\" she said, curling her lips into a seductive smile.\n\n\"Sorry to interrupt. Ben, can we talk in private for a few minutes?\"\n\n\"Sure. I'll be right back,\" he said to Becky and ushered Alex out and into his parent's room. He left the door open and turned to Alex with a shit-eating grin on his face.\n\n\"You and Becky, huh?\" Alex asked, surprised to find the busty blonde in his room.\n\n\"I called her back last weekend and we ended up hitting it off. Haven't done the deed yet, but I was getting super close before you showed up, you cockblocker!\" he said in jest.\n\n\"Sorry man, I wouldn't be here if it wasn't important,\" Alex said. He truly was sorry and happy for his friend. Becky may have been the solution they were looking for all along; her attention might have pulled him away from spying on his sister; but it was too late for a new plan.\n\n\"What's up?\" he asked, obviously impatient to get back to his fling.\n\n\"We need to talk about the hole in your wall,\" Alex said with a serious look on his face.\n\n\"What about it?\"\n\n\"It needs to stop.\"\n\n\"No way man! I haven't even seen anything good yet. I think the motion sensor stopped working, I just replaced it,\" Ben said.\n\nIt wasn't the motion sensor, it was Alex deleting the recordings. \"It's not right, man. It's not fair to Megan and it's creepy as hell.\"\n\n\"What?! You practically set half of it up. Why the change of heart? You sure weren't complaining when I showed you the first time.\" Ben was obviously jealous and angry that he missed the big show. However, it was his own fault and Alex had no pity to spare.\n\n\"I thought about it and decided it was wrong. What more do I need to say? Megan and I hung out this weekend at Casey's party and once I got to know her better this all just feels bad and really unfair.\" Alex said, starting to become frustrated.\n\n\"So what, you're going to tell her if I don't stop?\"\n\n\"No,\" Alex said, technically not lying since he'd already told her. \"She will find out one way or another, and the longer it goes on, the worse it will be.\"\n\n\"I'm not going to shut it off. I spent too much money on that gear to waste it for nothing.\"\n\n\"If money is the problem then I'll take the equipment off your hands. Shit, I'll pay you double. I just want this to stop,\" Alex said. He knew Ben was conscious of his wealth. Ben never had much, and he hated when someone pointed that out or even tried to help him. Alex knew he was fighting a losing battle at that point.\n\n\"Oh, fuck off, man. It's my room. It's my sister. I'll do what I want. If you want to tell her, go ahead. That's on you.\" He was mad now, Alex could see his face start to flush and hear the angst rising in his voice.\n\n\"Come on, Ben, please?\" Alex tried one last time to plead with his friend.\n\n\"No, shut up. I'm done talking about it,\" he said loudly.\n\n\"You might see something on that camera that you really don't want to see.\" Like me fucking your sister. Raising his voice, he said, \"What if I told Becky that's how you treat women? Would she like that?\" He stabbed his friend where he knew he was most vulnerable.\n\n\"ASSHOLE!\" Ben screamed, spit flying from his mouth. He turned and left the room. Alex heard him sprint downstairs and slam the front door closed. \n\nAlex walked across the hall and knocked softly on Megan's door and then entered. She was sitting on his bed, hands folded in her lap, obviously expecting his arrival. He shook his head and grimaced. He felt pretty bad he'd pushed Ben so far and hoped he didn't just lose his best friend. \n\n\"That didn't sound good.\"\n\n\"It wasn't. He won't budge. Even though he has Becky in his room right now. I threatened to tell her about it and he blew up and left. It'll be a while until he cools off.\" The last time he saw Ben this mad he disappeared for most of an afternoon.\n\n\"Who's this Becky floozy? She's way too hot for him.\"\n\n\"Lily's friend. It's a long story, I'll tell you later. I'm just as surprised,\" Alex said.\n\n\"We should invite her over for this. Think she'd be interested?\"\n\n\"Now there's an idea. I'm sure she would, Carrie called her a cock fiend,\" he said with a chuckle. \"It's going to hurt Ben a lot though. You know how long it's been since he's had a girlfriend.\"\n\n\"I don't give a shit, I want to hurt him. Besides, this doesn't have to change anything between him and that hussy. Maybe if the two of us get into it he'll actually like it, the fucking perv,\" she spat, disgusted that she'd even entertain the idea of purposefully turning him on. \"Here, I got these so we could cover up. If he copies the video I don't want my face on it. There are a couple extra so you can give one to Becky if she wants to join.\"\n\nAlex took the masks. He recognized them from Jenny's store. They were made of flimsy plastic but were fashionable. Black and red swirling designs covered the surface. They only covered the area around the eyes, leaving the nose and mouth open, which he knew would come in handy later.\n\n\"Good thinking. Alright, I'll go talk to her. Your parents are gone for a while, right?\" \n\n\"Yeah, all night.\"\n\n\"Let's do this, then.\" Alex walked back across the hall and stood in front of the door momentarily. He kindled his gift and urged his cock to grow to a noticeable bulge. Moments later he knocked softly on Ben's door before opening it. Becky was bent over and obviously busy rifling through Ben's stuff.\n\n\"Oh, hey. What was that yelling about?\" she said, standing up and looking innocent. He noticed her glance down at the front of his shorts and her eyes went wide as she stepped forward, unable to resist the temptation.\n\n\"Ben and I got in a fight. He's going to be gone a while.\"\n\n\"What are you doing here?\" she purred, sticking out her ample chest and licking her lips while eyeing him up and down.\n\nJust like Sonya was, he thought. This should be easy. He took a step closer until they were almost touching and said, \"Megan and I were just talking next door. She was wondering if you wanted to come over and join us for a little fun.\" Then he reached over and touched her arm, immediately feeding his fire and channeling heat and frenzy into the sexy blonde. He pulled her hand down and pressed it against his cock.\n\n\"Oh my gosh, Alex. Fiona told me it was big but I didn't believe her, she tends to exaggerate.\" She bit her lip and stroked him through his shorts, feeling his size continue to increase under her fingertips. Her pussy ached for attention after three days of playing with Ben. The boy could kiss, but he sure was taking forever to round the bases. She was just about to jump him when Alex barged in.\n\n\"If you want to see it, you'll have to come next door. Oh, and wear this and pretend like we're strangers. It's Megan's kink.\" he said, handing her a mask and hoping his flimsy explanation was sufficient.\n\n\"That little girl is just full of surprises,\" Becky said, licking her lips. \"Alright, give me a couple minutes to get my things together.\"\n\nAlex nodded and left immediately. In the hall, he pulled out his phone and then stuck his head through Megan's door and waved her over. Once she was outside he used the backdoor he installed in Ben's system to restart the video camera and delete the previous recordings. \n\n\"Whatever happens from now on will be recorded,\" he said while stripping off his shirt and pants, leaving them outside the door to Megan's room. Megan did the same, revealing the sexy lace teddy he'd given her. \"I told Becky to pretend like she doesn't know us.\"\n\n\"Oh, a little role play, I like it. How about if you pretend to be my brother?\"\n\nThat'd be easy, she looked enough like his sister. \"Alright; but I'm gonna do things to you that I'd never do to her.\"\n\nMegan giggled. \"I'm counting on it.\" \n\n\"You go first, lay on the bed and play with yourself. Keep your eyes closed and I'll walk in and watch for a while. That should send the right message.\"\n\n\"Good idea,\" Megan said and sauntered through the doorway. Alex watched her tight little ass wiggle it's way across the room and felt his excitement grow. He kept a loose lid on it, for now, knowing he'd needed to conserve his energy.\n\nAlex watched as she climbed into her bed. He admired the lingerie he'd gifted her. It fit her perfectly. Two thick lacy ribbons ran from her shoulders to her taut belly, arcing gracefully over her perky breasts. He could see the outline of her pink nipples through the semi-opaque material. A deep vee of bare skin dropped nearly to her belly button where it met a belt of pink rhinestones that glittered in the light. Lace and silk covered her front, cut high on her hips and wrapping around her upper thighs before narrowing to a thin strip that divided her pale round bubble butt. She was truly dazzling, the picture of young feminine beauty.\n\nMegan laid back on a pile of pillows and spread her legs, staring at the opposite wall. She knew where the peephole was. Alex couldn't help but remember the first time he saw her naked and exposed in much the same position. He watched as she ran her hands over her breasts, cupping each handful and squeezing them together, rolling her soft flesh under the lacy lingerie. Her hand slid down the narrow trail of exposed skin between the lacy straps of the teddy and continued slowly across her flat stomach until she had two fingers pressed firmly between her legs. Then she closed her eyes.\n\nTaking that as his cue, Alex walked into the scene and silently closed the door behind him. He walked close in front of the camera and stood in profile. He took his bulging cock in hand and stroked himself through his semi-transparent skin-tight briefs, slowly at first. He fondled his balls, tugged on his tip and coaxed himself full, the stretchy fabric of his underwear straining to keep him contained. Megan had her head back, eyes closed tightly and was rubbing two fingers in circles over her clit, he could already see a dark wet spot developing in the pink silk covering her little puss. Alex continued stroking himself while focusing on bringing his passion to a boil, he urged his well to fill, wanting his first eruption for Megan to be as massive as she'd requested.\n\nHe coughed and Megan sat bolt upright with a fake look of shock on her face. \"Brother! What are you doing in my room?!\" she yelled. \n\n\"Hiya sis, I just happened to walk past your door. It looks like you could use some company.\"\n\n\"Look at that thing!\" Megan exclaimed, putting a hand over her mouth and gasping loudly in mock surprise. Alex had to admit she was a good actress.\n\nAlex grabbed his bulk and waved it at her, still standing directly in front of the camera. \"Come and have a taste, little sis. It doesn't bite.\" His balls ached with pressure. Whatever he had done seems to have worked, he felt like he was ready to burst. \"I've got a big load stored up for you,\" Alex added, starting to get into character.\n\n\"Oh, goodie!\" Megan squealed. Clapping her hands and bouncing off her bed, she lunged at Alex, coming to a stop on her knees in front of him, masked eyes looking up in awe and admiration. She flashed him a hidden smirk and said in a girly voice, \"It's so huge, big brother. I don't know if it will fit.\" Lifting up her two small hands she cupped and stroked his silky package. A small bead of precum dribbled out of Alex and left a dark spot on the tip of his white briefs.\n\nMegan curled a finger around the front of his waistband and pulled the stretchy material out and down, just enough to send Alex springing free. She tucked the band under his dangling sack and opened her mouth wide.\n\nAlex heard the door open behind him and turned his head. Becky was standing there masked, jaw agape, wearing a matching set of white bra and panties. He held out a hand and motioned for her to stay put. She was still off camera, as was everything above Alex's chest, so the discrete communication wouldn't be apparent on the recording.\n\n\"That's it, suck my big dick, little sis,\" Alex said as the small girl took his tip into her mouth. \"Mmm, that's right, lick it,\" he said and groaned theatrically. He heard a gasp behind him and turned, putting a finger to his lips, telling Becky to keep it down.\n\nMegan slurped noisily on his knob, thrashing her tongue around his tip and coating his shaft in spit with her hand. She released him with a loud pop and said, \"You taste so good, big brother,\" then quickly returned to noisily gobbling up Alex's cock. \n\nAlex put a hand on either side of her head and thrust out his hips. Megan took four inches of his thickness before choking, spittle running down her chin. He pushed harder as Megan relaxed and was ready to accept more of his girth. Alex could feel her fighting a gag reflex as her throat closed tightly around his cock, spasming as he pushed farther down her gullet. He intentionally softened himself slightly to make it easier on the struggling girl.",
        "\"That's it, take it all in,\" Alex said, pushing until her nose pressed against the short hairs above the base of his shaft. She gurgled and sputtered, coughing lightly as he slid his length out of her. \n\nMegan looked up with her mask-covered face and said, \"Did you like that, big brother? Your huge cock was all the way down my throat.\"\n\n\"I liked it a lot, little sis.\"\n\nMegan sucked him back into her mouth and bobbed her head, flicking his tip with her tongue and sliding a petite hand up and down his shaft. Alex let his flame rise, his balls roiled with pent up seed, he needed release badly. He grunted several times and then cried out, \"I'm going to come.\"\n\nMegan popped off his tip and continued stroking him with her split-slicked hand. \"Spray it all over my face, big bro. I want to taste your cum!\" she said enthusiastically, bouncing on her knees.\n\nAlex moaned loud and low and then howled as the first thick blast shot from his cock and struck Megan's mask right between her eyes. He spasmed and unleashed another rope that covered her from nose to chin. Thick gooey liquid poured around her lips.\n\n\"That's it, let me have all your cum. It tastes so good!\" Megan said, licking around her mouth as Alex continued to fling spurt after spurt of his cream onto her face, coating her cheeks, chin, nose, and forehead. He came for nearly a full minute and by the time he was finished Megan would have been unrecognizable even without the mask.\n\nAlex watched as she turned and crept over to face to the camera, still on her knees. She stopped a foot from the peephole and began using her tongue and hands to clean the cum from her skin, making a dramatic show of licking and sucking the globs of jism from her fingertips as she wiped the mess from her bespattered face.\n\n\"Come over here and help me,\" Megan said, looking past Alex to the startled blonde in the door. Alex was sure Becky was horribly confused, but if his intuition was right, she was more than willing to jump into this bizarre display.\n\nAlex stepped back out of view of the camera and admired Becky's bare bottom as she slowly walked by him. She was wearing a white satin thong and matching bra, looking very sexy as she sauntered past. The blonde got to her knees next to Megan and began licking her cheeks and forehead, even lapping up drips that ran down the plastic mask.\n\n\"Mmm, you make a good cum slut,\" Megan said with a wicked grin. Alex swallowed a laugh and struggled to contain himself as Megan called his brother's new girlfriend degrading names.\n\nBecky grinned and got into the act. \"Your brother does taste good. And I bet you taste even better,\" she said before leaning in and kissing Megan on the lips in front of the camera. Alex watched as the pair slowly undressed while maintaining their lip lock. Megan first removed Becky's white bra and fondled her massive breasts. She pinched her dark brown nipples and pulled on them, stretching Becky's pliable tits to extreme proportions. Then Megan slid her hands down Becky's torso, wrapped two fingers under her panties, and tugging them down. She broke off their kiss and turned and sat, crawling backward on the carpet until she was in the center of the room with her feet pointed at the doorway where Alex stood. The petite brunette lifted a leg and reached down, popping the clasps that secured her lingerie together. Her naked pussy came into view and she slid a finger through her slit and probing into her moist center.\n\n\"Come and find out what I taste like, slut,\" Megan said, spreading her lips wide for Becky and the camera.\n\nBecky crawled forward on her hands and knees and immediately dropped her head between Megan's legs. The prone girl wailed and thrashed as Becky licked her cunt, slurping loudly as she sucked her thin lips and clit into her mouth. Megan lifted her legs and spread them wide, doing the splits on her back. Becky dropped lower and trailed her tongue between Megan's ass cheeks.\n\n\"That's it slut, lick my butthole!\" Becky moaned and whipped her tongue around Megan's tight ring.\n\nAlex re-entered the scene, now totally naked except for his mask, and dropped to the ground behind Becky. He bent his head down and ran his tongue through her smooth shaved pussy and felt her buck in surprise. Alex heard her moan again while Megan continued to scream bloody murder in response to the assault Becky was making on her sensitive clit. Alex continued to lick Becky's puffy folds, just able to reach his tongue out to cover her exposed button.\n\nAlex got up on his knees behind Becky and pushed his cock through her crevice, sliding it between her pale cheeks and forcing it down through her heat, rubbing it hard against her clit. Becky pushed back against him, her aching pussy wanting desperately to be filled. Alex angled for her entrance and slid into her. Becky turned her head to the side and groaned slowly while she felt his cock cram into her hungry void. Once their hips touched, Alex pushed with more force and made his hardness dance and pulsate inside the lusty blonde. Becky wailed and trembled, her pale ass cheeks fluttering under Alex's grasp.\n\n\"You like my big brother's cock in your pussy, don't you, slut? Does he feel good?\"\n\nBecky grunted as Alex pulled out and drove back into her. \"Yes,\" she gasped. \"He's so big,\" she added, then turned her face back between Megan's split legs.\n\nAlex maintained a steady pace for a minute or two before he felt Becky's climax coming. She began to bounce and drive back against him. He stopped thrusting and let her work herself into a frenzy, slamming back against his thighs and jiggling her round ass up and down and around in circles, milking his cock with her tight rippled depths.\n\n\"That's right, fuck my cock until you make my sister come,\" Alex said brusquely. He heard Megan cry out at his words as if on cue. Her hips shook violently, bucking Becky off her convulsing loins. Becky was also losing control as Alex retook command, impaling her deep and hard, causing a loud clap to ring out with every thrust. The two girls came simultaneously in a cacophony of howling and moaning, shuddering as their bodies were overwhelmed by shattering releases. Alex pulled out of Becky when she collapsed to the floor and then stood, stroking his slick hardness while the two girls recovered.\n\nMegan got up first, rolling over and propping herself up on her hands and knees. She looked back over her shoulder at Alex and said, \"My turn, big brother. Come and give me that big thick dick of yours.\" Becky moved out of the way, crawling back several feet with a hand clasped between her legs, unable to believe Alex had just fucked her like that.\n\nAlex went to Megan's dresser, his heavy shaft bouncing vigorously as he stepped across the room. He opened the top drawer and pulled out her pink toy, knowing its hiding spot from when he first spied on her. He intended to give Ben a taste of the show he missed. Kealing beside Megan, he turned her body so her ass was pointed at the camera. Spreading her slick lips he slid the vibrator into her and heard her gasp. He pushed and pulled the pink rod through her pussy, spreading her cheeks wide so the camera would pick up every last detail of the penetration. He looked at the hole in the wall and smiled while he fucked her pussy with the handheld toy.\n\n\"Oh god, big brother, that feels so good,\" Megan said with her face buried in the carpet. She let out a muffled scream and then shook, coming a second time, but with less force than her first. \"You just made me come!\" she cried out as small tremors shook through her core.\n\nAlex withdrew the toy and slid it up her crevice, circling her tight wrinkly hole. He pushed lightly, urging Megan to relax. As the tip pressed into her, Megan squealed. \"Yes, put it in my ass!\" She lifted her head and shook it in delight, flinging her mousy brown hair in circles.\n\nAlex pushed the toy in farther, nearly halfway, and then used a hand to urge her to pivot, turning ninety degrees so the camera was now to her side. He knelt between her legs and reached down for his shaft, pointing it towards her gushing pink opening. When he filled her second opening Megan lost it, howling and shrieking like a banshee. Alex grabbed her hips to steady her and eased farther into her. He felt the end of the vibrator contact his pelvis and he drove deeper, forcing both into Megan at the same time.\n\n\"Oh, god, I'm so stuffed. Fuck me!\" she shouted. \"Fuck me hard big brother!\"\n\nAlex left the pink toy lodged deep in her ass and backed his throbbing cock out, starting a rhythm that quickly increased in tempo as Megan continued to scream and flail against him. She came, and then came again as Alex railed in and out of her cunt while the vibrator filled the rest of her. He slid back far enough that he could wrap his fingers around the end of the toy and slowly pulled it. Megan erupted again as it popped free of her pink ring.\n\n\"Put your cock in there, fuck my ass!\" she shouted, her sweat-slicked chest heaving.\n\nAlex pressed his tip against her dilated hole. He wrapped his hand around his shaft and gently increased pressure as Megan pushed back against him at the same time. With a sudden release of tension, Alex popped into Megan. She groaned and leaned back, driving more of his length into her.\n\n\"Oh big brother, your huge dick is in my ass and it feels so good!\"\n\nAlex smacked her butt and she yelped. \"You like that, dirty little sister?\" \n\n\"Oh yes, harder, harder!\" she wailed between gasps.\n\nHe slapped her ass again and again, gradually turning her pale skin red with handprint-shaped welts while she bounced against Alex's cock, burying it deep in her tight round butt. Alex began thrusting in earnest, driving his cock in and out her naughtiest of places. It was so hot and tight that he had difficulty keeping himself under control. He was losing focus as he rammed into her while groans and cries of passion filled the room.\n\n\"Come in my ass, big brother!\" she shrieked. Alex fed his gift until he was ready to burst. With one final thrust, he drove into Megan's hot center and moaned.\n\n\"I'm coming!\" he shouted in response as his cock twitched and erupted deep inside Megan's dark hole. After several spasms, he slid out of her and pumped the remainder of his seed onto her bright red cheeks while staring down into her gaping opening.\n\n\"Fuuuuck,\" Megan groaned and dropped to the carpet. She put her hands on her ass and rubbed his milky fluids around her tender skin, dipping her narrow fingers into her yawning chasm, unable to believe Alex had fit inside her. \n\nFully spent, Alex stood and picked up his cell phone outside the door and stopped the recording. He removed his mask and smiled down at Becky who was sitting on the floor in a state of mild shock at what she'd just witnessed. He noticed a hand pressed firmly into her pussy, and another wrapped around one of her fleshy tits. She'd been masturbating while he and Megan put on their final act. That'll look good on the tape, he thought.\n\n\"That was fucking wild, you guys,\" Becky said with wide eyes. \"Alex, I had no idea you were such an animal.\"\n\nMegan laughed, still laying on the floor naked covered in sweat and smearing his cum around her little bubble butt.\n\n\"It was a show. I'm not normally like that,\" he said with a grin. \"But it was kind of fun.\"\n\n\"Damn right it was!\" said Megan groaning loudly.\n\n\"Do you care if Ben finds out about this?\" Alex asked Becky while she took off her mask.\n\n\"No. I mean, we just got together. He's fun but what you just did was out of this world,\" Becky said while tickling her clit and staring as his drooping manhood.\n\n\"I want you to stay here and screw his brains out when he gets back. Can you do that? Don't tell him about this, he'll find out on his own.\" \n\n\"I don't understand,\" Becky said, now even more confused.\n\nAlex walked up to the wall that separated Ben and Megan's rooms and pointed at the camouflaged peephole. \"There's a camera in here and I just recorded everything we did. Ben is going to see it, probably later tonight. He's been trying to tape Megan without her knowing and we just taught him a lesson.\"\n\n\"So he doesn't know about you two?\" Becky asked.\n\n\"No, the little perv does not know about Alex and I. That's the whole point,\" Megan said, finally sitting up and taking off her cum-streaked mask. \"You were a bonus.\"\n\n\"So the masks, you two pretending to be brother and sister, the slut talk, it was all a show to get Ben to stop spying on you?\" Becky asked Megan.\n\n\"Exactly. And I'm sorry about that, I got a little carried away.\"\n\n\"I think we all did,\" said Alex chuckling.\n\n\"You two are nuts; but I'll stick around and take care of Ben, he owes me that much. Besides, watching you two has me all worked up anyway,\" she said with a smile, still sliding a finger between her legs.\n\n\"Thanks, Becky, and sorry for using you in this little scheme of ours. I figured you wouldn't mind though,\" he said with a wink.\n\n\"It's alright. After Fiona told me about you, I knew I'd have to find out eventually,\" she said with a smirk.\n\n\"Ben's a good guy, despite all of this. I'm glad you're with him,\" he said.\n\n\"Yeah well, we'll see how long that lasts after he finds out about what you just did to me.\" Becky and shook her head in disbelief.\n\n\"You'll just have to make him forget all about it.\"\n\n\"I'll do my best,\" she replied with a sly grin.\n\nThe girls stood and got dressed, picking their clothes from the pile outside Megan's door. Becky left and entered Ben's room to await his return. Alex pulled on his shorts and shirt and closed the door to Megan's room, turning to look at the petite brunette.\n\n\"Think that did the trick?\" he asked.\n\n\"I don't know. I'm not even sure I can walk straight right now,\" she said staring at him in awe. \"That was insane, Alex. Even for me.\"\n\nAlex shrugged. \"You told me what you wanted me to do.\"\n\n\"Yeah, but I wasn't expecting that!\" she said in an exasperated tone.\n\n\"Good, someone needs to keep you on your toes.\" Alex bent over and picked up her cum-stained mask. \"I'm going to keep this as a souvenir.\"\n\n\"Didn't manage to nab a pair of Becky's panties, huh?\"\n\n\"Nah, I already have a pair of hers. This is much better,\" he said. \n\nMegan laughed, \"You never cease to amaze, Alex.\"\n\n\"Just the way I like it. You coming over later?\"\n\n\"Yeah, I'll be right behind you. I don't want to be here when Ben finds out.\"\n\nAlex bent down and pecked her softly on her lips. \"Good, see you shortly. I have more presents for you and Casey.\" \n\n\"Oh goodie!\" she said, bouncing her knees in excitement. \"Bye, Alex. Thanks for putting on a good show.\"\n\n\"My pleasure, little sis,\" he said and then flashed a devilish grin at the giggling girl."
    ],
    "authorname": "MagnusRhodes",
    "tags": [
        "18-year-old",
        "pool",
        "swimsuit",
        "oral sex",
        "panties",
        "ffm",
        "squirting",
        "anal sex",
        "role play",
        "facial"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/alexs-gifts-ch-17"
}