{
    "title": "Unexpected Threesome Ch. 18",
    "pages": [
        "Withdrawing the residue of my erection, I rolled off Tash, slipping my swimmers the rest of the way off me and chucking them onto the floor for the morning.\n\nShe just continued to lay there, face up, arms out to her side, staring at the roof. The giant T shaped tear in her one piece completely exposed her breasts, which now rose out of her red swimmers like towering light brown mountains surrounded by a red ocean. It took only the slightest elevation to see the rest of what was exposed. The flaps of the tear were peeled back revealing a V of flesh that extended from under her breasts to where it came to a point as it turned her mound into her crotch. The material around her crotch looked scrunched up from the pounding she'd just had; wet and stained by sweat, her juices and cum.\n\nShe looked completely, alluringly, ravished and was making no attempt to strip herself out of the now useless suit.\n\nHer hand slid across the narrow distance between our bodies, brought it over my hips and cupped my flaccid, sticky cock; playing gently with it.\n\n\"Ned, I've never had sex like that before.\"\n\nIt was clear it was intended as a positive statement, but \"like that\" covered a broad range of possibilities. My ego wanted to explore them but my common sense said 'not yet'.\n\nNot wanting to disturb the hand on my cock, I lay as still as I could while I bent my arm around the top of her head and stroked her hair in a silent appreciative recognition of her words. Gradually the movement of her hand stopped. I raised my head just enough to see she'd slipped off to sleep. \n\nI brought my own arm to a more comfortable position and let myself drift off to sleep too; the hand cupping my cock never far from my mind. I vaguely recall drowsing into semi-wakefulness in the middle of the night with her hand now covering a night hard-on, but the next clear memory is of being woken at first light to find her turned on her side towards me, propped on her elbow, running her finger up and down a full erection as she kissed my cheek. She was still in the destroyed swimsuit; the triangular upper flap now draped down partly closing the torn gap\n\n\"Morning Ned.\"\n\n\"Morning.\"\n\n\"That was pretty good last night. Where did you learn to do it?\"\n\n\"What?\"\n\n\"The role play. The sex.\"\n\n\"I'm sure many young studs your age would know stuff on the sex side that would blow your brain compared to me. But a good professional spends his life role playing.\" \n\nThen I added with what I hoped she recognised as a self-depreciating grin...\n\n\"I just repurposed the skill. But did the role play really make that much difference?\"\n\nTash thought for a moment. It was clear she knew the answer. She was just trying to formulate it in a way she was happy to admit to.\n\n\"Yes, a big one. You sussed me out disturbingly quickly on where I was coming from. But the simple fact is that, while you might be too knackered after 5 hours swimming a day to get up to much, the brain didn't stop. You had a mixed group of nearly naked young adults spending all this time together and a hero figure in the coach.\n\nAs you're swimming up and down the lanes the brain is looking for entertainment of its own. If you're following a guy with a cute butt - and in a swimming squad they all have cute butts - and you can see the bulge of his balls and dick in his swimmers trailing between his legs, you're going to start imagining things. If one is swimming toward you with a bit of a hard on, you're going to imagine even more because you know he's got randy thoughts too. And when there's no cute butt or hard on to focus on, there's always the coach.\n\nThinking about sex was my favourite way to entertain my brain while I was swimming. And five hours a day leads to some pretty heavily imprinted fantasies.\"\n\n\"So now you've done it, does that let you tick it off a bucket list or is it like a video you keep wanting to replay occasionally?\"\n\n\"It definitely a play again video; but then there's some others to put on the play list too.\"\n\nTash had a grin a mile wide as she teased me with the last statement. I turned towards her and immediately she closed the small gap between our bodies, slipping my erection inside her torn swimsuit and into the wet warmth of her crease.\n\nInstinctively I brought my hand up, peeled back the flap of material covering her upper breast and covered it with my hand; tweaking her nipple between two out stretched fingers.\n\nTash put and arm around my neck and pulled my head in towards her breasts and she started rocking back and forwards on my hardened shaft as her other hand held it tight into her crease and against what I reasonably assumed was her clit. \n\nHer bosom was no less inviting for the fact it was surrounded by the remnants of her swimmers. I licked and nuzzled at her upper nipple while my hand fingered the lower one; quickly turning them both into attractive jutting peaks which made the upper one all the more attractive to suck.\n\nAs Tash quickly worked herself up into a state of excitement, her initial gentle rocking on my cock soon turn into bunk shaking full thrusts, bending my cock down further so that it maintained its own firm pressure in her crease without the assistance of her hand. She first thrust herself forward slipping right along its length until my cock was pushed deeply into the back of her torn swimsuit, then pulled herself back until the bell itself was playing against her clit. \n\nFive or six of those in very quick succession and she came; nearly suffocating me in her cleavage as she held my head in a crushing grip.\n\nAlmost immediately she used her hand to introduce my shaft into her sex, only looking for a shallow penetration before rolling me onto my back and mounting me with her legs outside mine with her arms extending her torso into the air. From there she pushed down to bury me in her until her mound was hard against my pubis. I could only watch with delight as her breasts bounced up and down like a pair of basket balls as she ground herself against me to a second orgasm.\n\nThen squeezing me tightly, she changed her previous grinding movement to a longer stroke one, until she had me squirting my seed into her again. By the standards of the morning romps on the boat it was something of a quickie.\n\nAs she rolled back off me it wasn't hard to imagine that my cum and her juices were again filling the much abused crotch of those ripped red swimmers. We both lay there for another hour until I heard the first sounds of one of the other girls in the main cabin.\n\nI excused myself from Tash to get up, put on the pair of speedos I'd thrown on the floor last night and slip out of the cabin. It was Ellen, dressed only in one of her fuck me bikinis, filling the kettle.\n\n\"Can you put on some water for me too?\"\n\n\"Sure Mr Smith.\"\n\n\"So you heard, did you?\" \n\n\"Let's see now.\"\n\nEllen walked up to me, wrapped her hands around my butt, pulled my crotch against hers and started vigorously dry humping me.\n\n\"No Mr Smith, No Mr Smith, don't fuck me Mr Smith, don't, stop, Oh Mr Smith, don't stop.\"\n\nTash opened the door and walked into the cabin, smirking at what was going on, even if with something of a red face. She and Ellen are both Australian, so know that humour between mates can be at times a bit brutal. Leaving me to the erection she'd created, Ellen walked over to her and put her arms reassuringly around her; bringing her crotch more firmly against Tash's than I was used to seeing Ellen do.\n\n\"I'm sure you know you're going to get teased about these things don't you. It's a small yacht and it's our way of breaking down any barriers and inhibitions. But that shouldn't stop you. We all have our little things and you'll get your chance to tease too. But it does sound like Mr Smith was very naughty. Does he need to be punished?\"\n\nEllen turned towards me, giving me the sort of wicked grin that tells you she's contemplating something naughty. \n\n\"Tash, you know on the boat we can do a good line in walking the plank and keel hauling for naughty boys don't you. I've always wanted to experiment with a bit of tying to the mast and flogging too, but the local police might take objection.\n\nMy goodness. What happened to those? Oh, OK, come to think of it, you don't have to answer that question. Just out of interest, was Nigel's surname Smith?\"\n\nEllen had spotted Tash's shredded red swimmers cascading from her hand, the damage fairly obvious; as indeed was a certain yuckiness in their torn crotch. As Tash folded them up and consigned them to the bin she looked back at Ellen and nodded her head.\n\n\"Yes.\"\n\nEllen walked over to me, drawing a line down my naked chest with the fingers of one hand, while those of the other drew a line up the erection that was pushing out my swimmers.\n\n\"Ned, I had quite a crush on one of my third year professors. I reckon you'd look a bit like him in a pair of hospital scrubs. I might have to see what I can rustle up.\"\n\nIt was about now Amy emerged from the centre cabin.\n\n\"What' all this about.\"\n\nIt was Ellen who responded.\n\n\"Have a look in the bin.\"\n\nAmy went over and pulled the red swimmers from the bin; holding them up by one of the shoulder straps to let their full length drape down in a way that showed the damage. Then she held them higher as she examined their crotch. Even from where I was standing I could see globules of dried cum on the patch of material stiffened by dried body fluids.\n\n\"Oh dear, they've seen a bit of action haven't they. Explains what we heard last night. Nice one Tash. You may have given me a few ideas too.\"\n\nAmy reconsigned the swimmers to the bin and we settled down for breakfast. \n\nWe had a big day planned. Issie's departure had sent the boat into a bit of a funk. With the week spent on the diving course and then the week before and after her departure spent doing little more than mopping around, there'd been far too little time spent exploring the incredible beauty of Huahine, the island on which the town of Fare, where we were anchored, is based. On our original schedule we were meant to be long gone by now; yet in some ways we'd barely started our stay here. \n\nCertainly the snorkelling and diving around Fare had been spectacular and the girls had tried out the surfing on the famous nearby beaches, especially Ava Mo'a Pass. But all the surfing this side was a reef break and really only Ellen was up to the standard that required. Dedicated though they were, the others had quickly decided the risks weren't worth the benefits.\n\nA lot of what we wanted to look at was on the east side of the Island, opposite where we were anchored on the Western side. Given the choice of hiring a car or trying to get there by boat, we chose the latter. I say trying because, unless we wanted to go back out to sea and circumnavigate the island, our trip would entail using the tender to navigate some shallow internal passageways. With several days' worth of activities planned there we decided to move the yacht to the closest deep-water starting point in Bouyarne Bay. From there we could use the Rib to navigate the narrow channel between Huahine-Nui and Huahine-Iti (which translates as big and little Huahine), down Maroe Bay and around towards the town of Faie, the starting point of our adventure.\n\nThe maps told us the trip to Bouyarne Bay should be safe enough. Just the same, we hoisted Ellen up to the spreader and Amy manned the bow pulpit to keep an eye out for coral heads; Tash watching out for their signals while I concentrated on steering.\n\nAnchoring as close as we could to the narrow passageway between the two islands, we piled into the RIB; myself, three girls, two surfboards, a backpack with towels and clothing and a picnic basket. The girls are light, so weight wasn't a problem with the 15hp motor easily pushing us along at planning speed. Keeping everyone and everything aboard and the girls' breasts in their bikini tops as the boat bounced about in the choppy water was a bit harder.\n\nAs went entered the narrow and shallow channel between the islands we slowed right down; Ellen and Tash in the bow, kneeling on the floor and looking forward and down to give warning of any obstacles. But it quickly turned out that the underwater wildlife rather than navigation hazards became the focus of attention.\n\nNumerous rays, turtles and small reef sharks seemed to have sought shelter in the relatively safe waters of the channel. The girls got all excited and Amy pulled out the GoPro to get some underwater footage for the blog and video pages. Attaching the camera to a long pole, she bent deeply over the side of the RIB to let her hold it under the water, resist the pressure on the pole from the forward movement of the boat and see what she was filming. Ellen and Tash quickly joined her in bending over the side to look at what she was filming and direct her to notable sights, rather than keeping an eye forward.\n\nAll I could do was slow the boat down; both to help Amy by reducing the pressure on the camera pole and to account for the fact somewhat less attention was now being paid to navigation. Mind you, the girls weren't the only ones whose attention to that was flagging.\n\nOpposite me on the RIB, Amy, in nothing more than a tiny bikini, had her arse in the air as she lay face down across the inflated side tube of the RIB, with her knees spread wide apart to brace herself as she filmed the beautiful world under the water.\n\nIn my own opinion anyway, nature's most beautiful attraction wasn't under the water. It was just across the RIB from me. Amy's judgement was right. For all Tash's voluptuous beauty, it was Amy's body I was always drawn back to.\n\nSoaking wet from the spray we'd all been drenched with as we'd crossed the more open waters of Bouyarne Bay, the gorgeous azure material of her scrunch back, tie sided, Brazilian cut bikini bottoms clung to the sculptured light olive skin of her bum like it was painted on. The scrunch back drew the material into the fold of her bottom from where it spread out to partly cover her bum checks like a pair of delicate butterfly wings; the waist band arching up each side from where it just exposed the top of her crack to where it met the high cut legs seams and continued on to form the tightly drawn side tie which hitched delectably over her hip.\n\nBut as always with Amy, the piece de resistance lay between her legs where the prominent bulge of her mound screamed out her sexuality at me. From every angle, but especially from this one, it was a goldilocks mound; large and prominent enough to bring any male to cross legged frustration with its fecund femineity but not so large as to be gross or distorted. Down the centre of it, the seam of the material snuggled into the faintest hint of the line of her crease; nothing as crude as a camel toe, but enough to never let you forget what lay within. \n\nI knew all too well what lay within. I'd explored it with my fingers, cock and tongue. I've separated her engorged labia and stared lustfully at her swollen clit and the opening to her sex; a wet, dark open void anxiously waiting for whatever I was about to thrust into it. I've watched as my hardened manhood plunged in and out of her body, its length emerging glistening with her juices.\n\nBut still that most innocent sight of it delicately covered by a bulge in her bikini bottoms only released my eyes from their fixation and my mind from its desire to plunge my cock into it for long enough for me to take in the sight presented by the other girls.\n\nTash was on the same side of the boat as Amy; opposite me. Turned to look over the angle of the blunt bow, she also was nearly square onto me, even though further forward. Like Amy, she was kneeling legs apart, bum up as she looked over the side.\n\nI'd been trying, since she arrived on the boat, to work out what it was that felt so familiar about Tash. It was only staring at her butt now that the penny dropped. Appearance wise she very much reminded me of Kate Upton in the movie \"The Other Woman\" even if she was the complete opposite of the bimbo like character Kate was given. And that extended to the small white tie side bikini she had on to day.\n\nTash didn't have the prominent mound Amy had, but had a pretty cute butt just the same; broader than Amy's as befitted her more curvy figure. But as Tash had positioned herself to look over the bow, she must have dragged down the front of her bikini pants because unlike Amy's almost painted on ones, Tash's were hanging a little loose. The weight of the wet material had pulled the leg seam away from her thigh, giving me a view straight into her crease and at her sex. Distracting to say the least.\n\nEllen was alongside me, looking over the opposite side of the boat to the other girls, giving me more of an elevated profile view of her. She too was wearing a tiny scrunched back, Brazilian cut, string sided bikini, a bit like Amy's except it didn't have tie sides. In profile, her butt, capping as it did her long slender legs, was every bit as cute as Amy's; the distraction value increased by the peek down her bum crack given to me by the low slung waist band. \n\nUnlike the others, Ellen was wearing a light gauze, white suntop over her bikini. It too had become wet from the trip across the bay and now clung transparently up against her bikini top, revealing the jutting nipple that the wind across the wet material had raised. \n\nWith the girls apparently completely distracted by the underwater sights, I thought I could safely perve at the above water ones without being sussed out; enough that I'd grown a bit of wood that sat as a ramrod straight bar pushing out the front of my swimmers. Not a full on one, but obvious enough even when I was sitting down.\n\nBut twice I was caught by Tash. Once when I was staring straight up Amy's butt and looked up to see her eyeing me off. The second time when I'd been staring up the gap in her bikini and suddenly realised she was looking straight back at me; she giving me a cheeky grin and a wiggle of her butt as our eyes met. And there was no doubt she could see the wood.\n\nAfter we safely navigated the channel, we entered the more open water of Maro'e Bay. With a couple of km to travel down the Bay, Tash decided she's like to give wake boarding a go; something she actually come prepared for with a tow rope.\n\nThis was meant to be a fun day, so there was nothing lost in giving it a go. It turned out Tash was pretty good at it; having done a lot with her family. Still, on the choppy waters she wasn't immune to falling and quickly proved that a string tie bikini is not the ideal garment for it when you have a figure like Tash's. The first time she fell she only had a blowout in her top. As she regained confidence, she kept signalling for us to go faster. So the second time she fell she was just about stripped out of her bikini all together. Her pants ended up around her ankles and her top came off completely. \n\nWe pulled her aboard stark naked where she tied her pants back on before we turned around and retraced our steps looking for the lost top. Fortunately it had swallowed a lot of air in the fall and we found it floating in our wake. \n\nEach of Amy and Ellen wanted their turn too. Less skilled, they had more falls, but the speeds were slower and after Tash's example they'd tied their bikinis on more securely. The only additional exposure we had was a top blowout from Amy.\n\nAt the head of Maro'e Bay we turned left and navigated another shallow channel between the main island and the outlying sandy cay of Motu Vavaratea. Then we travelled North up the deep sheltered bay which forms the harbour for the township of Faie, past the Huahine Pearl Farm and across to a low scrubby cay to the north called Motu Mahara. \n\nWe delicately navigated around to the exposed South East corner of it, where we beached the RIB within sight of what we'd come for; a famous left hand breach break. It might be famous, but out here on a small island in the middle of the Pacific we still had it completely and absolutely to ourselves.",
        "The trip may have been complex, but it wasn't that long; only about 7km in all - around 4 nautical miles. \n\nTo say the girls were excited is an understatement. They are all keen, mad, passionate surfers in the way that only those who know a surfer can even imagine. But their opportunities had been a bit sparse recently and now they had this perfect rolling break all to themselves; surfers heaven.\n\nWith only two boards between the three girls (OK, four of us in total - I was going to have a go too, but was willing to sit back and acknowledge my lesser skills), it was decided that Tash and Ellen should get first go, leaving Amy and myself to set up camp in a shady spot in amongst the low hanging branches of the tropical vegetation.\n\nAmy spread out a towel and lay herself down; trying to get the right balance between sun and shade that let her dry herself out from the wet trip and enjoy the tropical warmth, while not cooking her skin or overheating. I followed suit alongside her, building myself a little sand pillow and backrest under my towel to let me watch the girls surfing (and to be honest, perve at Amy's body sprawled out alongside me).\n\nWe chatted for a short while - discussing the bucket list for the next few days on the island - as I took advantage of my elevated position to stare down along the length of her body. Amy's breasts might not have the same humungous quality as Tash's, but they were large for her slim body size in a way that was incredibly sexy; all the more so when the golden flesh of their perfectly shaped orbs was only partly covered by a bikini top that was a little too small for its job. Then there was that stomach of hers; taut and plank flat in a way that continued in a straight line down to where her delectable mound turned down under her crotch with only her gorgeous navel breaking the surface of sculptured excellence. To top it off, the pants she had on today showed a bikini bridge that offered teasing views down alongside her mound; leaving little to the imagination.\n\nMid-sentence she fell quiet and rolled over on top of me, resting her head on my chest as her legs straddled mine and she wrapped her arms around my upper body. Amy's a contemplative young lady and I searched for what it was had suddenly made her feel the need for solace.\n\nI ran my hand through her hair...\n\n\"Are you missing Issie?\"\n\n\"A little bit. We'd known each other long enough to feel a close bond. I like the others, but there's not been time for the same closeness to develop.\"\n\n\"How are you getting on with Tash?\"\n\n\"Good. She's fun to be around and certainly makes the yacht more lively.\"\n\nHer answers had seemed genuine, but none of her answers had offered conversation starters to explore anything that might be bothering her.\n\nI started to give it one more try...\n\n\"Are you...\"\n\nWhen she cut me off...\n\n\"Ned!\"\n\n\"Yes.\"\n\n\"I'm fine. You don't need to analysis me. I just wanted some time to feel close to you.\"\n\nShe lifted her head up towards mine, closing her eyes and puckering her lips in an unmistakable request for me to kiss her. I bent my head down to find her lips; pecking them and kissing around her cheek as I embraced her. But I could see the arch of my body was denying her any real comfort. I squirmed off to the side of the sand pillow I'd created, laying diagonally across her and my towels so I could lay flat.\n\nShe crawled up my body so that her head was over mine, playing her lips against mine and offering her tongue to lightly wrestle externally with my own. Then she lifted her hips, worked the erection that had grown in my swimmers into its vertical position along my stomach and brought herself down straddling it; squirming on it until I could feel its length settle into the fold of her crease. \n\n\"Ned, I don't want this to finish. I don't want to give up your love or the love I feel for you. Yes, I know I have to. I don't need a lecture. But that doesn't mean I want to. But for now, for the next short time, I just want you.\"\n\n\"OK, no lectures. I'm not looking forward to the day either. But I don't think the 75 year old me is going to be that attractive to the 45 you old you.\"\n\nI immediately regretted adding the last sentence. I'd said no lectures.\n\n\"I'd prefer to make that judgment. But I understand.\"\n\nShe lifted her hips up, slipped her hand under, pulled her swimmer's gusset to the side, undid my swimmer's drawstring, exposed me and brought herself down to penetrate my shaft into her; squirming down to bring her mound firmly against my pubis.\n\n\"Let me lie here and cuddle you.\"\n\nAs she slipped her arms under mine and lay sprawled across the top of me like a blanket, I put one arm around her and stroked her long hair with the other; letting her lie there in silence. Issie's departure had changed what Amy sought from me. Far more often now she wanted sex, or even just contact, which was intimate, rather than the wild, screaming, bouncing, multi-orgasmic sex she'd chased before. It was almost back to the earliest days of our relationship. The screaming stuff still happened, but the balance had changed.\n\nIt was certainly no burden to me to indulge her. I loved the feel of my shaft just lying inside the warm wetness of her sex; revelled in it even. I got enough wild sex to satisfy any man half my age, so some slower stuff was no frustration inducing tease. The grip her sex had on it sensitised my shaft in a way that sent little shivers of pleasure through my body without threatening a release. \n\nBut I couldn't help myself. Instinctively as I ran my hand down the length of her long hair to where it cascaded over her shoulder and down onto the towel, I extended my thumb out and brushed it against the nipple sitting inside her bikini top and against my chest. I felt it instantly harden; which encouraged me to leave it there, playing against the jutting projection as even through the thin, unlined material my sensitive finger registered the swelling of the plinth on which her nipple stood and the cute little dimples that dotted its surface. \n\nMy brain had just caught up with my instinct and was starting to challenge whether nipple play came within \"just cuddling\" when I felt her reposition herself to give me clearer access to the nipple as she brought her lips back up to mine and kissed me before planting kisses across the surface of both of my cheeks. I took that as a message that she'd like me to continue.\n\nEmboldened, I slipped my forefinger and thumb into the side of her top and rolled the naked flesh of the nipple between them.\n\nAmy's head returned to rest on my shoulder, leaving me to feel the rise and fall of her chest and the soft sound of her breathing as I continued to fondle her nipple. Lying motionless on top of me, she was clearly enjoying me play with it. Like so much of Amy, her nipples were in the goldilocks zone. A bit bigger and maybe a bit darker than normal, but not anywhere near so big as to have that stretched all over the end of her breast look and feel that I personally find unattractive. There was an immense tactile pleasure in just rolling its hardened cylindrical perfection between two fingers.\n\nHer whole being communicated contentment to me as she lay there; just occasionally shuffling a bit on top of me; pushing her mound ever firmer down onto my pubis and seemingly trying to merge our bodies into one single entity. But always she left me with easy access to her nipple.\n\nIt wasn't that long before I noticed her breathing becoming faster and heavier; occasional almost heaving, accompanied by a little spasm through her sex that squeezed against my shaft. Amy is the only one of the three girls - four counting Issie - perfectly able to have an orgasm on nipple play alone; and fairly easily at that. My playing with it had been for my pleasure; but the knowledge it had such a profound effect on her increased that pleasure.\n\nWhen she climaxed, it wasn't accompanied by one of her screams or any pounding of her body down on mine. It was just a sudden holding of her breath proceeding a deep, satisfying, prolonged groan while I could feel her sex contracting against my shaft. But still she just lay there.\n\nMaybe five minutes later, a second orgasm followed; much as the first.\n\nI was happy to give her nipple orgasms all day. There was clearly something in what was happening that fulfilled some deep need she felt. Amy's no selfish lover, but what she was seeking now was something other than sex in its rawest sense.\n\nBut I was also aware the others would be coming back soon. I'd been lifting my head to keep an eye on them and when I saw them coming into the shallows, I patted Amy on her but and told her it was time to get up and do some surfing.\n\nHer instinctive reaction was to squeeze her sex onto my shaft and start moving up and down on me; trying to bring me to a climax. But there was no time for that. Girl on top is my endurance position; I don't cum that fast. And for various reasons I didn't want to finish a performance in full view of the others. I clamped my hand on her bum to slow her movement.\n\n\"There's no time for that and no need. We can catch up another time. Let's go surfing.\"\n\nI half turned to encourage her to get off me. She lifted her hips to slip me out of her and climbed off, kneeling next to me. I quickly covered my erection with my swimmers and picked up the back pack to ferret out my boardshorts; positioning the bag on my lap to hide the erection while I let it settle back down.\n\nBy the time the girls reached us I had my boardshorts on and I think I managed to avoid displaying any obvious sign of sexual activity. All they'd seen from the beach was Amy lying still on top of me; cuddling yes, but ambiguous for anything else.\n\nAmy and I took the boards from them and headed off to the water. I'm not going to pretend I'm either a skilled or passionate surfer. Amy shares the passion of the other girls, but being from England, for her it's a newly acquired skill; so she's not up to the standard that their lifetime of surfing has generated. My; well, I've done some over the years, but not enough to show and finesse. \n\nWe were both out the back waiting for another wave when Amy paddled over alongside me, slipped her hand half way up the leg of my boardshorts and said...\n\n\"Thank you for earlier. I needed that.\"\n\nShe'd caught me a bit off guard with the suddenness of it. I looked up into her eyes and found her staring back; her doe like eyes a deep well of something I couldn't quite put my finger on. Whatever it was, it was clear she meant the words. Before I could answer she was paddling off towards the break area again.\n\nI watched as she paddled onto a wave, transfixed as she lifted her cute butt into a downward dog like position before standing up and shooting off towards the beach. A picture of feminine grace and sexualised athletic beauty\n\nMy relationship with Amy was always the most complex; her many years of being with a physically and emotionally abusive partner creating deep needs in her that she seems to find some satisfaction for in our relationship. Issie's departure seems to have deepened it, especially since she's now been on the boat far longer than the other two and we feel some stronger connection between each other for that reason alone.\n\nStill, I worry for her. She tells me she's not damaged and perfectly able to act rationally and to a degree that's true. But she's a lovely person and a stunning beautiful woman. Longer term, she deserves, and should easily be able to attract, a much more appropriate male than myself. I just worry that she won't be able to let go when the time comes for her to move on. In the mean time we share a deep love that's completely out of line with our age difference; but I'm well aware that knowing how much I love her is incredibly important to her. I can only imagine that the whole cuddling thing on the beach was her need for a physical reaffirmation of that.\n\nThis was meant to be a day of surfing and only a true surfer can understand that, when you have a perfect left hand break and a beach all to yourself, it really did mean a day. A whole day. The girls continued to take turns on the boards, interspersed with lunch and various refreshments we'd brought with us. I took some turns, but not every one; which inevitably meant both Ellen and Tash spent time on the beach with me.\n\nTash is proving to be an interesting addition to the boat. I had very quickly formed an emotional bond with Ellen that let me say I loved her. There's just something in her manner and maturity that made it easy for me to do that.\n\nWhile it's early days, for Tash I can't honestly say it has moved beyond lust. And the reciprocal of that is that she too is just using me for sex. All in the most respectful and even affectionate way of course. But it is more of a close emotional relationship that reflects our age difference with a sexual one that ignores it.\n\nBut she has brought to the boat a playfulness that transcends even what existed before, which combined with her forceful personality, has imprinted itself on everything. And often that means a physical playfulness too. A mere one example is that, when I prematurely took the last sandwich, she almost launched herself at me, crawling up over my body to try and reach it in my outstretched hand. We both knew that had she asked for it, then it was hers. And my outstretch hand, in trying to deny it to her was simply an automatic and momentarily teasing reaction to her physical approach to getting it. \n\nThe girls have always done that sort of thing; but Tash does it more often, does it as much between the girls as with me, and brings to it a greater exuberance than before.\n\nBut she too has picked up from the others the habit of seeking to induce the \"full horizontal boner\" whenever she can; which you will recall is the girls' semi competition of teasing me into an erection in everyday circumstances which grows in my swimwear so that it points out horizontally instead of vertically. As she climbed over me, it was inevitable from the degree of intimate contact she was going to get an erection. But as soon as she felt through her crotch that the starting alignment of it was going to grow it vertically she bounced herself down on it a couple of times and pinned it there until she changed that to the horizontal one she sought. And as she ate the sandwich, she happily bowed to the applause of the other girls for her efforts. \n\nWith the other girls, she has brought into a boat a degree of acceptance of the whole BOB (Bi on the Boat) thing that was only really danced around before. Amy and Issie had started to get into it, but let's just say that, when there some sort of general orgy happening, Amy and Tash seem to have no limits. And even Ellen, who has been pretty half hearted about it, seems to be a lot more comfortable with it now. Still, as far as I know it's only when there is a general orgy - so it's sideline activity while I'm involved - that the BOB really comes into play. At other times they seem very comfortable with being in close physical contact with each other, but I don't know they instigate actual sex.\n\nLike all days, this one had to come to an end and it was time to pack up the RIB for the long trip back to the yacht.\n\nI'd sent the girls ahead with the boards and esky while I packed up the backpack with our towels and excess clothing. As I rounded the bend to where the RIB was I was, to say the least, a bit taken aback with the sight in front of me. The RIB was broadside onto the beach. On the beach side of it Tash was bent over the inflatable sidetube where the mid-boat thwart (seat) was. She was kneeling on the beach with about her upper stomach on the sidetube; legs spread wide apart. Quite an attractive sight you might think. And so it was.\n\nBut bent over the top of her was Amy; with the gorgeous little mound bulge of her prominently on display between her equally spread legs. \n\nAnd bent over the top of her, with her now almost straight but still well spread legs supporting her weight, was Ellen.\n\nI stopped for a moment, somewhat taken aback - if not transfixed - by the sight. I must not have been heard on my approach, because as I walked alongside them and tossed the bag into the boat, Tash looked up towards me to ask, while the other two just grinned at me...\n\n\"Ever seen a pussy stack before?\"\n\nIt took me a second to realise the significance of the co-joined words. 'Pussy' and 'stack', because frankly the concept was foreign to me.\n\n\"No.\"\n\n\"Can you work out what to do with one?\"\n\nNaturally an answer pretty quickly came to mind. But my first reaction was 'no, surely not'.\n\n\"Do you mean...\" I wasn't quite sure how to finish the sentence. But I'd said enough.\n\n\"Yep, I'm not carry the weight of these fat bitches above me because I like the feel of Amy's tits pushing into my back. We saw the boner you got from watching our upended pussies earlier, so now you can use them. So get on with it. Oww!\"\n\nThe final exclamation had come from Any's friendly dig in her ribs for the fat bitches comment.\n\nI moved around between their legs. As I looked down on the extraordinarily beautiful sight a lot of things went through my mind that will take longer to set out than my mind took to process them. Still, they're important.\n\nThe first was that the boner was back with a vengeance. I'd got a bit of wood on just from the sight as I approached them. Now it was rigid, hard and pushing the material of my swimmers well above the waist band.\n\nThe second was 'shit', how do I do this? If pussy stack is actually a concept, I would imagine it's usually associated with an emotionless orgy high on some brain numbing substance, or just part of a mindless porn fantasy.\n\nThese are real girls, each with their own emotional and physical needs from my relationship with them and are certainly not affected by any substance. My general rule for sex is that 'the girl cums first'. How do I get that result with three of them in a position that I haven't used on them - I haven't done doggy style with any of them individually let along a stack of them - and where I don't have easy access to all the erogenous zones that I would normally use?\n\nHow many pokes does each one get? What about foreplay? Who do I cum into and how do I ensure that result? Their pussies are covered by their bikini bottoms, how do I access them when their legs are interlocked like they are?\n\nWith so many question and worries about the whole thing, it was a wonder my boner didn't shrink away. But it was actually keen to get down to the task at hand. I decided I'd just have to wing it, Tash's words of 'get on with it' ringing in my ears.\n\nFirst things first. I freed my erection from my swimmers, pulled them down my legs and chucked them onto the floor of the RIB under the girls' noses as if to announce the whole thing was about to commence. \n\nInstinctively I ran my hand up and down the stack of pussies a couple of times, the closeness of their bodies making a smooth transition from one to the next. On the third and subsequent times, as I ran my hand along, I extended my finger and pushed more deeply into the front of their mounds to try and tickle up their clits a bit. It was time to expose them.\n\nAmy and Tash were easy enough. With string tie bottoms, I undid the right hand tie and pulled the material aside, fingering each one a little in their clit and sex to see how they were responding and finding them fairly receptive. Ellen's bottoms weren't string tie. Pulling them off her would put a lot of weight on the other girls as I brought her legs up, so I just pulled the gusset aside and fingered her a bit too.\n\nThe girls were giggling a lot and responding with ohhs and arhhs to my fingering but on the whole seemed to be treating it all as a bit of a joke; which I found encouraging. It took some of the pressure off. As I stood back for a moment I considered my options. As I was fucking a girl I could fairly easily reach around and play with her nipples or tickle up the clit of a girl above her. Wrapping a hand around to the clit of a girl being fucked or one below her was more difficult because of the overlapping and entangled legs.",
        "But I also knew that with my angle of penetration, hitting a girl's g spot was no sure thing and that apart from Amy, nipple play alone wasn't going to get her there. Really, their clits were the only certain path to give them an orgasm.\n\nI decided to tackle Tash first because at the bottom of the stack, she was the most difficult proposition. I took Amy's hands and directed them onto Tash's nipples to encourage her to play with them; getting Ellen to do the same with Amy. Then kneeling behind Tash I slipped my shaft into her sex, slowly penetrating her and giving her a few thrusts to open her up and get her and my shaft well lubricated with her juices. Then I withdrew and bent my shaft down under her crotch; bringing its length against her clit.\n\nMoving back and forwards slowly while surging and bouncing my shaft to apply more pressure, I started concentrating on really bringing her to a high state of arousal. With a good pattern established I could use my free hands to start fingering each of the other girls while my cock slid back and forwards across Tash's now wet and slippery clit; mainly playing with the other girls' clits but adding in a bit of finger penetration to really juice them up and sensitise their g spots. \n\nAs I knelt and bent down to Tash, Ellen's crotch was nearly in my face. I watched in delight as my fingering of her clit caused it to engorge and swell, virtually looked up into the depth of her sex as it opened to my playing with it and saw the honey start to pour out of it to lubricate my fingering of her. Ellen's clit is delightfully, abnormally large and sensitive. I brought my tongue against it and started slurping up her juices; tickling the tip of her clit as I flickered my tongue at it, then taking it between my lips and sucking it. \n\nI could feel and hear Ellen writhe and moan in ecstatic response; all the more so when I slipped my now free fingers covered in her juices inside her bikini top and slimed up her nipple with them before raising it to a jutting peak.\n\nAmy's always a joy to make love to because she cums so quickly. I don't know whether it was Ellen's nipple play or my concurrent fingering of her shallowly located g spot while thumbing her clit, but she soon tensed and let out what was, for her anyway, a subdued cry. Mind you, subdued is a relative concept. Had there been anyone else on the island they would have heard it. The other nice thing about Amy is that, once she cums the first time, she just seems to keep cumming.\n\nBy that stage I could tell Tash was getting fairly excited too. Her thighs were rocking in time to my shaft and her breathing getting fairly fast and loud. It was time to finish her off. I pulled my shaft back and thrust it into her sex; deciding I'd just have to put up with the discomfort of forcing my hand between Tash's thigh and Amy's, to let me finger Tash's clit.\n\nI tried to force her legs apart as far as I could so that the tightness of her pussy didn't cause me to go off prematurely. My erection had a lot of work to do and I couldn't afford to lose it on the first girl. Fortunately about a minute later, she too climaxed; her contractions pressing firmly down on the shaft that I held buried deeply within her.\n\nAt exactly the same time, Ellen also climaxed to my oral stimulation of her clit which I'd kept up with only a momentary pause as I'd repositioned myself in Tash. \n\nNow it was Amy's turn. I withdrew from Tash and located the tip of my manhood inside Amy's sex. I knew she would be easier to deal with. Elevating myself a bit, I used the back of the opening to her sex as a lever point to drive the tip of my erection down against her g spot; raking it firmly against the front wall. Because of its shallow location, it was something I could achieve with a reasonable degree of success and without putting too much pressure anywhere else.\n\nI quickly checked Ellen was still playing with Amy's nipples; something that contributed a lot to her arousal. Because she was then, now I was using my manhood on Amy, the hand that was previously tickling Amy's clit could be used on Ellen's; since I was now standing too high to bend my mouth down to her sex.\n\nWith a bit of elevation, my visual perspective changed; from a close up of Ellen's sex to an overview which brought home to me more forcefully the fact I was actually fucking three women at the same time. Before my brain had been preoccupied with the detail and logistics of what I had to do. Now I'd managed to bring each of them to an orgasm, it was like the pressure was off. Now I could really get into it and enjoy it.\n\nAs I looked down I could see my shaft disappearing between the lips of Amy's delightful mound and into her sex; emerging each time glistening with her juices. Just above that, the elastic of the leg hem of Ellen's bikini had exaggerated the bulge of her mound within which I could watch my fingers stroke the length of Ellen's abnormally swollen bud, honey flowing copiously from her sex, down around my fingers and dripping onto my shaft as it plunged back into Amy.\n\nDirectly forward I could enjoy the view over Ellen's perfectly formed back. Slim, strong, oh so feminine, starting where it emerged from the sexy line of the waistband of her bikini bottoms, up the shapely line of her figure to where her broad shoulders were covered by her cascading long hair. Only the thin string of the lower tie of her bikini top broke the line of her arousingly naked flesh.\n\nOff to each side was the delightful sight of a line of breasts. Tash's humongous ones, spread apart around the narrow thwart she was resting on and being played with my Amy's fingers, Amy's large ones pull out by Ellen from where they would otherwise have been squashed against Tash, so that Ellen in turn could play with them and the bulge of Ellen's smaller ones, the nipple of her right breast being tickled up by me.\n\nDistracted, almost overwhelmed momentarily by the visuals, I was almost caught by surprise when Amy's second orgasm was announced by her usual deafening screams and the spasmodic jerking of her body. I slipped my shaft deeply into her body and held it here to let me enjoy the way her contractions pummelled its length.\n\nThe success I'd had with using penetrative sex to activate Amy's g spot encouraged me to try the same with Ellen. Hers was more deeply located and she wasn't prone to the same sort of continuous orgasms that Amy has, but still, I knew her G spot worked and she was already highly aroused from the fingering I'd been giving her. I withdrew from Amy and relocated my manhood in Ellen's receptive sex.\n\nOnce again, by adopting a slightly too high stance and leveraging my shaft against the rear opening of her sex to pressure the tip down against the front wall, I was hoping the g spot would do the trick.\n\nAs I stood higher over her and started thrusting I found my eyes focusing down on that single thin bikini string that divided her back. It teasingly aroused me with its fragile bow while at the same time I found it an intrusive man made presence on the otherwise seductively naked perfection of her back.\n\nI reached up and pulled the bow to release it, casting the strings off from her body, so that the corners of the tiny triangle covering her breasts draped down over Amy; repeating the process with the neck tie otherwise hidden by her long hair.\n\nThen I applied the juice slimed fingers of my left hand to the task of teasing up her previously neglected left nipple. Her nipples seemed to like the lubrication provided by her own vaginal juices which I'd transferred there on my fingers. They rose quickly to a full, almost exaggerated hardness as my fingers slid frictionlessly across their textured surface.\n\nMy focus now was entirely on Ellen. She wasn't a screamer like Amy. Indeed, when she'd joined the boat her orgasms had been signalled by little more than a silent tensing of her body; a product of previously needing to self-satisfy on a small yacht lacking any real privacy.\n\nSlowly, no doubt influenced by the performances put on by both Amy and Issie, her arousal had started to be accompanied by moaning. To say they rose to a crescendo with her climax would be a gross exaggeration. But they did get a bit louder; usually finishing with a highly audible groan. \n\nEllen had already been moaning when I was fingering her. Now the moans grew louder, until with a machinegun like series of grunts, she too climaxed.\n\nAfter letting her orgasm run its course with my shaft held buried fully in her, I decided it was time for my turn. It was something I'd been planning almost from the start. Absent a premature release, the question of who I cum in was not one to be taken lightly. On top of my own desires - and I do often have preferences - there was the semi political issue of keeping everyone happy and feeling equally treated. They cared about the issue, possibly even more than me.\n\nFrom the outset, I'd decided it should be Amy. She seemed to need it most; as evidenced by her earlier need for affection. Tash had already had enough attention today and was never in the running. Ellen might be a bit peeved, especially since she was the last served, but I'd just need to make it up to her later.\n\nWithout making any fuss about it, I withdrew from Ellen and repenetrated Amy; pushing myself firmly into her crotch at the same time my lower stomach pushed into Ellen's. \n\nThe fact that I'd got this far wasn't a sign I was some sort of sexual athlete. It was simply the case that the sort of leveraged half penetration I used to stimulate Amy's and Ellen's g spot wasn't all that stimulating to me. Don't get me wrong. It was nice and very enjoyable, in a highly sexualised way. But it wasn't rubbing up my cock in the sort of way that quickly generates a release. Plus Amy and Ellen knew they shouldn't grip me until they knew I was ready to cum. It was just part of the sharing understanding.\n\nTash had been a riskier proposition because she was naturally tight, I had been using a deeper penetration and she was new enough not to be fully conversant with the understanding. But by getting her well warmed up before starting and spreading her legs to lessen the grip I'd made it through.\n\nAmy well understood my intentions and I could feel her gripping me more firmly even before I started thrusting. As much as one can be delivered with a gentle kindness, she was in for a fast and hard pounding. Between holding an erection in her body for nearly an hour earlier in the day and the stimulation of the pussy stack, my testosterone count was stuck on high.\n\nOne part of me wanted to hold her thighs - or at least Ellen's thighs - so I could really slam them home. But I was cognisant of Ellen being there too (Tash I couldn't do much about except finish quickly). So instead I cupped Ellen's breasts, rubbing my palms up and down on them as I banged away at Amy.\n\nI was out to enjoy my own orgasm; but hadn't given up on what I could do for the girls. Although my thrusts were long and fast, I had enough elevation to apply some downward pressure on Amy's g spot. In any case, once she's had a couple of orgasms, she seems to go into some state of enhanced sensitivity that lets even vaginal sex bring on another one. \n\nEllen was going to be a more borderline proposition. As I thrust in and out on Amy, my lower stomach was moving up and down against Ellen's projecting bud. There was at least a chance that, combined with the nipple play would give her another climax too. But in the end, success or otherwise in that was her problem.\n\nThrusting in and out of Amy is always a delight. Especially after a lot of sex play, she's just so warm, wet and slippery, with a goldilocks grip. It takes all my willpower not to release after just a couple of thrusts; but that would be to deny myself so much pleasure. And one of those pleasures, especially in the sort of fast and furious sex I was delivering her, was to see her move into what seemed like a constant orgasmic state.\n\nIt seemed like after only a couple of thrusts she started up...\n\n\"Oh...oh...oohhh...oh Ned...aarr... oohh... ooohhh fuck... shit... oh Ned... aarrr... aaaarrrr... AAAAHHHH... ooorrr...oh Ned, keep going...more...please more... don't let go yet Ned...please... not yet... oh...oh...AAAAHHHHH... oohhh \n\nHalf way through that Ellen started up; barely audible over Amy's cries...\n\n\"mmmm...ooooo...\" \"ooooooohh...aaaaaaahh.\"\n\nThe combination of two girls in a state of orgasm and Amy's body quivering and spasming in her sexual frenzy gave me no chance to hold it any longer. My balls boiled as a giant well of pleasure collected in the base of my cock and moments later shot up the whole length of my shaft leaving me able to do nothing except throw myself at Amy's crotch and bury my shaft as deeply in her as I could while I filled her sex with my cum. Wave upon wave of pleasure left me bent over the stack of girls under me until the last shudders of my orgasm had emptied every last drop of my seed.\n\nI barely recovered my composure when I heard Tash from the bottom of the pile.\n\n\"I hope you guys are finished. I'm getting a cramp down here.\"\n\nI pulled out from Amy and eased myself off Ellen, letting Ellen and Amy in turn lift themselves up and off the pile; leaving the four of us standing in a somewhat dishevelled, indecent state. Me naked with my cock still half rigid and dripping juices and cum from the end of it, Amy and Tash with their pants falling off, breasts out the sides of their tops and Amy leaking cum down her leg, Ellen topless and with the gusset of her pants still pulled aside - her mound bulging out.\n\nBit by bit we restored ourselves clothing wise, even if sweat and bodily fluids permeated them. A swim was in order to freshen up; which required nothing more than a few paces around the RIB where the tepid shallows of the lagoon awaited us. The girls hadn't lost any of their playfulness, running into the water before tackling and pushing each other over like a bunch of teenagers. I was trying to amble in behind them with as much dignity as the remaining wood filling out my swimmers from my last erection would let me.\n\nBut any sense of mature age dignity was to be denied to me. As soon as I was in range they all started splashing me, then quickly surrounded me to push me rapidly forward until I was in waist deep water, where I was tackled by the combined weight of three women. One or more of them - and in the melee that surrounded me, I actually wasn't sure who - was optimistic enough to think that groping and then jerking the remaining wood through my swimmers was going to make it grow again. If only. It was going to be at least 15 minutes and probably an hour before that would work.\n\nMind you, that may not have been the only groping that occurred. When you feel like you're being playfully drowned by the owners of a combined total of six breasts, three pussies and three butts, the mere struggle for survival is going to result in some groping; quite a lot actually.\n\nThe playfulness subsided until I found myself lying on my back in water just shallow enough that I could rest my head back on the sand and have a reasonable chance of not drowning. The three girls were lying on top of me; Ellen in the centre and Amy and Tash within the embrace of an arm. A total of four female legs were occupying the space between my widely spread two.\n\nThere we discussed our touring plans for the next couple of day. It was going to be intense. There was still much we wanted to see on Huahine, but we were well behind the mental timetable we had set for ourselves before Issie's bombshell exploded on us. We were keen to move on to Bora Bora.\n\nIn the slowly shelving water, the girls' bodies floated in that in between state where they rested on me, but much of their weight was taken by the water. In that condition the light beach surge moved them up and down ever so slightly. In the half hour we rested there, that meant Ellen's mound and lower stomach rubbing against my cock restored the wood the girls had been looking for earlier and Amy and Tash had a good rub of their crotches against my thighs. But we all chose to ignore it."
    ],
    "authorname": "Joanmcarthy",
    "tags": [
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/unexpected-threesome-ch-18"
}