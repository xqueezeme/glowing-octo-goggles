{
    "title": "Necessity is the Mother of Obsession Ch. 03",
    "pages": [
        "The Push - Tactics Are Everything \n\nAuthor's note: \"Necessity is the Mother of Obsession...\" The full title wouldn't fit in 35 characters. This story arc is my first attempt in the Erotic Couplings genre. My other attempts all seem to have devolved into Romance. I suppose this could be, too. In any case, this is Part 3 of a 5-part story arc. Again, there is a lot of non-sexual moving the story forward at the beginning, then the more erotic stuff, including some erotic coupling, exhibitionist/voyeur and bi/lesbian. Please vote/comment. Consider it like applause. It's how I know whether I'm pleasing my audience. Enjoy... \n\n* * * * * \n\nWednesday Early Morning \n\n\"Five o'clock is obscene,\" Karen mumbled as she reached for the wakeup call. The phone was on her side of the bed. She picked it up and put it right back down. \n\n\"Then you can go back to sleep, once we've got Lu on her way,\" John told her, nuzzling into her from behind and sending shivers through her body. Karen moaned. \n\n\"Ohhh...\" Karen moaned as she rolled over to face him. \"But why waste it?\" She felt down his gorgeous naked body until she found his rapidly swelling cock. \"Such a delightful way to wake up.\" \n\n\"If I didn't have to piss so bad,\" he told her, starting to struggle out from under the covers. \n\n\"I'd join you, but I'm with him,\" Lu commented from the far side of John. She was already expertly extricating herself from the bedding and heading for the bathroom. \n\n\"Okay, you win,\" Karen told them both. Being near the edge of the bed, she was able to get out and follow Lu before John could free himself. By the time he made it to the bath, Lu was in the shower and Karen was sitting on the toilet. Deciding not to be a boor and piss in the sink, he headed over to Karen's bath. His hard-on had gone down and he was just finishing up when Karen walked in. \n\n\"I guess I better shower alone,\" she told him as she turned on the water. \"Too many temptations otherwise.\" \n\n\"Okay, I'll go make breakfast for the three of us,\" he acknowledged. \"I can clean up later.\" \n\nHe had cheese omelets on toast with turkey sausage ready by the time Lu strolled in, wearing the hotel robe. \n\n\"Just borrowing, John,\" she told him. \"I'll have to hustle back to my hotel to change, then I'll meet you at Morton's.\" \n\n\"You settled somewhere out here, didn't you?\" he asked as she sat and he served. \n\n\"If you consider Carson City 'somewhere out here'... or Glenbrook, actually. On Lake Tahoe,\" she smiled. \"For business in Vegas, I book a hotel and charge you for it.\" She was just finishing breakfast when Karen walked in, also in a robe. She sat and John served, then she turned to look at Lu. \n\n\"I hope we're okay after last night,\" she told Lu cautiously. \n\n\"Okay?\" Lu beamed. \"Girl, that was the best no-penis fuck I've had in forever! Actually, any kind of fuck in forever. I owe you big time. You present as Miss Prim and Proper, inexperienced and all, but my God! You're a fucking natural!\" \n\n\"We'll be able to work together, though, right?\" Karen asked, still a little unsure. \n\n\"Better now than ever,\" Lu nodded. \"When it's showtime, I'll still be the professional hard-ass lawyer and you'll still be the professional hard-ass P-A. Nobody needs to know different.\" She stood up and took off the robe, putting over the back of the chair. \n\n\"I've got to get dressed and bail, John,\" she told him. \"I'll see you at work.\" \n\nKaren quickly stood up and took off her robe, too, then held out her arms for a hug. It took Lu less than a second to decide why not? and move into Karen's arms. And kiss. Karen wasn't holding back. \n\nLu let herself melt and wondered again at how good this young woman felt. She had to be a decade younger, at least, and that usually meant all eagerness and ineptitude, at least in Lu's experience. Karen was different. Hesitant at first, but when she decide to give, she gave her all. Their naked skins pressing into each other - soft, warm, sexy as hell... their combined scents and tastes were overpowering. \n\nThey eventually eased up, and the women got to laugh at John's expense as he adjusted himself in his bed pants. Lu looked back to Karen and smiled slightly. \n\n\"Sic 'em, girl,\" she said. \"I hate to do this, but I've got to go.\" \n\nKaren muttered \"sure...\" as she stepped back and watched as Lu headed into John's bedroom to retrieve her clothes and head out, with the blazer but minus the blouse ruined the night before. \n\n\"Did you want to get some more sleep?\" John asked after Lu had left. \n\n\"Can we fuck while we do?\" Karen asked. John could have sworn it was a truly ingenuous question. \n\n\"We can try,\" he smiled. \"We'll be on time if we're up by eight.\" \n\nWednesday Day \n\n\"Mills wants to downsize because he's afraid,\" Orin was telling them over their pre-meeting coffee at Morton's. \"He thinks the bubble's going to burst and that land value is going to crash. Plus, he thinks that any capital expenditures at this point are going to become huge liabilities. He and his son have pretty much everything they own in Morton. He wants to sell off now and get to Morton's secure core of products, pretty much immune to market fluctuations.\" \n\n\"And those would be their long-term defense contracts and their 'clean up the environment' line... the ones that industries use to meet EPA regulations,\" John nodded. \"So he'd need convincing that staying in is almost guaranteed profit. Not an easy sell.\" \n\n\"We can fuck up the sale of any real estate by insisting on complete environmental impact studies, through the EPA,\" Lu spoke up. \"Just the legal maneuvering alone could stretch it out years, even if they're clean. And there's enough radon in the ground water to screw up the test results, if we want to get picky.\" \n\n\"We do know that Tikken is not only doing well, they're about to get a contract for NASA's Mars mission,\" Orin put in. \"Which, of course, nobody is supposed to know about. They'll have to be tooled up by 2018, when NASA's Proving Ground phase starts. And of course, the Nevada desert is a great place for harnessing solar power.\" \n\n\"So that might be the 'guarantee' Mills needs,\" John pointed out. \"We have to play that one close, though, since it isn't public knowledge.\" \n\n\"Okay,\" John told his team, standing up. \"Let's plan on lunch at the Bistro again. Except this time we buy more than just drinks. I want Karen paying attention to the arguments and not thinking about menus.\" \n\nHis team joined him as they made their way to the conference room where the day's festivities were to occur. \n\n* * * * * \n\nThe morning had bordered on disaster. Morton, Mills and Pearson had each begun to get involved, expressing their opinions about the company's direction and taking it out of the hands of their paid mouthpieces. It had devolved into arguing, without support facts - more emotions than anything else. \n\nKaren was kept busy supplying John and Lu with \"facts and figures\" so they could counter the more emotional outbursts, including at some points supporting Mills, so that the meeting didn't get completely derailed. \n\nNow the four were sitting at lunch, reviewing the train wreck in progress. \n\n\"Bob Mills is going to fuck this company over if he doesn't get his head out of his ass,\" Lu stated, with obvious irritation. \"You'd think for an experienced businessman, he'd pay closer attention to alternative strategies with a better than even chance for success.\" \n\n\"I think I know how to handle this,\" John came back. \"We just have to survive the afternoon. Once I can get Bob alone and explain a couple of highly confidential things, he may soften. By the way, he intends to bring his son, William - better known as Billy - to the meeting this afternoon. Billy's a lawyer on Bob's payroll and can sit in on the negotiations. He just doesn't have any voting or veto power.\" \n\n\"I'm mentioning this because I want you to start flirting with him, Karen. He's known to have a roving eye and believe me, he's going to see you. I told you that you were a major player before, but you just didn't know it. This is where you come in. From what I understand, Billy is half the problem. He's pushing his old man to liquidate Morton's assets. He has his eye on other investments.\" \n\n\"We're going someplace tonight that has dancing and I want you to keep him out on the floor and away from his father while I talk to Bob. I don't care what you have to do to make it happen.\" \n\nBoth Lu and Orin looked at John like he was crazy. \n\n\"John...\" Lu started, but Karen held up her hand to stop her. \n\n\"Of course... Sir,\" she told him and bowed her head slightly. The submissive gesture was not lost on a single person sitting at that table, and probably not by anyone nearby. John smiled. \n\n\"That's my girl...\" he told her softly. \n\n\"Okay,\" he turned back to the others. \"This afternoon we keep them arguing. Not throttling each other, but point/counterpoint/counter-counterpoint, etcetera. We'll keep mixing in What-Ifs and see if we can end the afternoon with a draw. Karen and I will work on the Mills' tonight. \n\n\"Fair enough... Sir...\" Lu told him, with the obvious emphasis and reference to Karen's accession. \n\n\"Okay with me,\" was Orin's take. \"I'm just sitting on the sidelines with the first aid kit, anyway.\" \n\nThey finished lunch and John paid, then they headed back to the virtual Coliseum with the lions and gladiators going at it. \n\n* * * * * \n\n\"Lu, please walk out with me,\" Karen whispered to Lu as the meeting wound down. \"Shark-boy is going to try to intercept me, I know. I want a deterrent until tonight.\" \n\n\"Not a problem, luv,\" Lu whispered back. \"Want me to kiss you in front of him, too?\" Karen could hear the smile in her voice, even through the stone face Lu was wearing. Karen tried very hard not to giggle. \n\n\"I don't think that will be necessary,\" she whispered back. \"Although I love the sound of it.\" \n\n\"Oh, you teasing bitch, you,\" Lu commented quietly. \n\nShe had chosen to sit on the other side of Karen from John for the afternoon meetings, since it would be easier to consult with Karen and her font of knowledge. Now it was John leaning over towards Karen and telling her under his breath, \"I don't know what you two are conspiring about, but I want in on it.\" \n\nWhich made both Karen and Lu have to sit on their reactions. \n\n\"I think we're done for today,\" James Morton announced as he stood up. The namesake of the company still commanded respect among his juniors. \"Let's all take a nice long evening to relax and come back at this tomorrow with less emotion and more logic. I'm not looking to stir up the pot just so the lawyers can have a feeding frenzy.\" He looked pointedly at several of the lawyers sitting at the table, Billy Mills and Lu included. \n\n\"Ouch!\" Lu whispered to Karen. \"Guess we're doing my job too well.\" Karen looked down at her laptop to hide the smile as people slowly got to their feet and effected an exit. \n\n\"C'mon, folk,\" John told his people. \"Let's go. And Orin... I want a word with you before you take off.\" \n\nThe four of them worked their way towards the door and as Karen had predicted, Billy Mills was hanging around just outside it. Karen steeled herself to be pleasant as she and Lu trailed John and Orin out the door. \n\n\"Ms. O'Reilly,\" Mills spoke up as she emerged from the room. \"May I have a word?\" \n\nJohn looked over his shoulder for a moment, then turned back to Orin as they moved on. Karen stepped out of the flow of traffic, Lu right at her side. \n\n\"Certainly, Mr. Mills,\" she told him. \"How may I help you?\" She endured the several seconds of gawking she got from him as he regarded her, and managed to keep a slight smile on her face. She noted that when he looked over at Lu, he looked back fairly quickly. \n\n\"I understand from my father that you will be joining us for dinner this evening,\" he told her and she nodded. \"My father's asked me to pick a place and I wanted to ask if there were some particular kind of entertainment or ambience you'd prefer?\" \n\nOkay, so he noticed me eyeing him during the meeting, she smiled to herself, letting the smile show to him. Let's see what I can do with it. \n\n\"Lu, cover your ears,\" she joked to her companion. \"Mr. Mills... look, can I just call you Billy?\" \n\n\"Sure,\" he smiled. \n\n\"Truth is, Billy, I haven't had much of a chance to go dancing since I got dragged into this gig,\" she lied to him in a confidential tone. \"So if you chose some place with dancing, it'd be great.\" \n\n\"Any particular kind of music?\" he asked, feeling like he was setting the hook. \n\n\"Anything is fine,\" she told him, \"although Latin is kind of nice.\" Lu leaned back and looked at her with raised eyebrows. Karen wasn't sure if she was play-acting or not. \n\n\"Latin is good,\" he told Karen, trying to avoid looking at Lu. \"I know a pretty good Tex-Mex place off the Strip with a good band and not too crowded. Fairly decent menu, too. If you'll give me your number, I'll text you the info once I've cleared it with The Boss.\" \n\nKaren agreed and gave it to him, he thanked her, and then she and Lu watched as he walked off in the direction his father had gone. \n\n\"Girl, are you nuts?\" Lu asked Karen as they started after John and Orin. \"Latin? He'll be all over you.\" \n\n\"That's sort of the point,\" Karen agreed. \"It's a moderately safe way to be 'Sensual' and I get to decide how far it goes. Latinos can be fairly protective of their women, and they'll understand if I object to something Billy-boy wants to do. And if I decide to get frisky, I can do that, too.\" \n\n\"Just make sure John's keeping half an eye on you,\" Lu told her. \"Since I won't be there.\" \n\n\"Yes, ma'am, Ms. Protector of Female Virtue, ma'am,\" Karen smiled. \"Let's go find the guys.\" \n\nLu gave her an elbow and a smile. \n\n* * * * * \n\nWednesday Evening \n\nNot quite what I had in mind, but this is Vegas, Karen thought to herself as she, John, Bob and Billy Mills sat at their table at the Cuba Caf\u00e9. To be fair, the food had been fair to good, the drinks were moderate and this time she wasn't ignorant of the dominant language. Their waitress was one of the very few who actually smiled around the customers and they were basically marking time, waiting for the band. \n\nShe'd stayed quiet while John and Bob Mills groused about the politics of mergers and other business maladies, and she knew John was playing to him. She got into the conversation when Billy brought up vacationing in Mexico and she got to show off some of her \"world traveler.\" She'd managed to spend significant vacation time in Central and South America, plus some in the Caribbean, as the guest of a high school girlfriend. Or more precisely, her high school girlfriend's parents. She'd taken Spanish in high school, and college, and was pretty good at picking up dialects quickly. \n\nThat got them into cross-conversations, John and Bob on opposites sides talking shop and Karen and Billy on opposite sides talking Latino culture and countries. Billy was excellent at slipping in the subtle innuendo about the hot-blooded Latino lovers and suggestions that he'd learned a lot that he'd love to show Karen. She kept her smile going, knowing she had a job to do, but also giving herself the one-night-stand benefit of the doubt when it came to the younger Mills. After all, he wasn't unattractive. \n\nSomewhere around 6 feet and the neighborhood of 175 lbs. to her eyes, he had longish shaggy sandy blond hair, a decent tan, deep blue eyes and a sparkling smile. He had a sort of athletic build and moved with an easy grace, probably from some kind of sports. He'd dressed Las Vegas casual - light slacks, a flowery shirt and a light jacket, no tie, whereas both John and Bob had gone coat-and-tie. Billy didn't wear a lot of bling. Just a gold chain and cross around his neck and a fancy watch. She'd seen him switch his wallet to his front pants' pocket as they entered, so she figured he must know something she didn't. \n\nThe bulge of his wallet hadn't hidden the bulge of his pants, though. Enough of a bulge to be noticeable. And Karen had to admit that the last few days with John had blown away a lot of her reserve... the walls that kept her from getting fucked over yet again. Of course, it could all come crashing down at the end of the week, but somehow, some little voice in her head was getting stronger and stronger, telling her she was competent and capable and could damn well look after herself. She didn't need a man to run her life. Having one that appreciated her and made her feel special was awesome, but she didn't need him. \n\nShe did need the paycheck, though, so she wasn't going to do anything to get herself fired. She'd figured out just exactly what information John wanted to share with the elder Mills and why Billy needed to be kept far from it. \n\nI can do that, she thought. And if I'm really good at what I do, maybe John will reward me with some Number 27 time... Then she abruptly caught herself as she slipped off into fantasizing. \n\n\"See something you like?\" Billy asked, pulling her back to reality. \"Or maybe just a naughty memory?\" \n\nShowtime. \n\nShe leaned forward as if she was going to say something confidential, then pulled back, glancing quickly at John and Robert, still engrossed in talking. She turned back to Billy with a half-smile. \n\n\"Do you dance?\" she asked, nodding towards the dance floor where the band was just starting some Salsa Rock. He smiled and rose to help her out of her chair in response. John paused to look at them. \n\n\"Dancing,\" she told him and put her hand on his shoulder. \n\n\"You don't have to be careful around me, Ms. O'Reilly,\" Robert told her. \"I'm not carrying tales back to the boardroom.\" \n\n\"It's Karen, and thank you, sir,\" she smiled, then leaned down and gave John a soft kiss. \"Remember, you're driving me home, luv,\" she told him and they both smiled. Then she turned to move with Billy out onto the dance floor. \n\nSome fast rock, loosen things up, tease a little, she thought as they moved onto the floor with a half dozen other couples coming out to dance. I'll sweat the intimate stuff later. \n\n\"Part of the naughty memory look?\" Billy asked, nodding back in John's direction as they started to dance. \n\n\"Part of it,\" Karen smiled demurely, making a point to look down at Billy's crotch before looking back up at him. Okay, I think I've got his attention. \n\nTheir salsa rock was more like a blown open jitterbug, but he was a good lead and she liked it. He took the opportunity to do some mild groping when he could twirl her into his arms, but it was momentary and it wasn't obnoxious. In fact, Karen liked the way he felt. He was strong, he was fluid, and as they worked up a sweat, she realized he smelled good, too. \n\nOh, boy... she thought as the floor gradually filled up and their dance space collapsed. I hope to God John isn't shitting me about not being jealous, 'cuz this guy is turning me on. \n\nThe band changed up their tempo slightly and Billy paused slightly. \n\n\"Bachata?\" he asked. \n\n\"Santo Domingo?\" she asked with a smile. \n\n\"South Beach,\" he answered with a grin that went ear to ear. \n\nHoly fuck! she thought. This is going to get really raunchy, really fast! Fasten your seat belts... She held out her hands for his lead. \n\nIn three minutes, she was ready to jump his bones. Turns, wraps, hair combs, catches, sit drops, two hand lead turns and more undulating, passionate body contact than anyone could normally have without fucking standing up. He knew what he was doing and was delighted to find out she did. ",
        "Six minutes in and she was thinking, maybe a quickie? I wonder if John would shit? He'd said he expected me to go as far as I was comfortable. He'd said he wouldn't go Neanderthal over intimate time. I have to trust that. But where? \n\nBy nine minutes in, she was ready to throw him to the dance floor and rip his clothes off. He turned her into him so her head was near his ear and she moaned, \"Billy, we've got to do something about this!\" She ground her ass back into his hip and thigh. \n\nHe turned her out and brought her back in on the other side. \"You mean this?\" he asked, pressing an obvious erection into her. \n\n\"Oh, fuck, yes...\" she murmured, spinning out and coming back into a tight cage. \n\n\"How about we take a break and rehydrate over by the bar?\" he asked. \"End of this song.\" \n\n\"Abso-fucking-lutely!\" she told him and went back to enjoying how he was turning her on with the dance. \n\nThe song ended and Billy almost dragged her off the dance floor... if she hadn't been dragging him. They eased their way past the bar to the wait station where the ice machine was, just to the side of the restrooms. There was a dark corner there, and Karen pushed Billy back into it, dropping to her knees and unzipping his pants. It was dark enough, and out of traffic enough, that only one of the staff coming for a bucket of ice would see them. And the bartender, if he looked hard enough. \n\nShe quickly freed his cock from its confines and was delighted to find it was as healthy as she'd hoped, with a veiny surface and huge glans. It disappeared into her mouth immediately. \n\n\"Oh, fuck!...\" he moaned as he grabbed the ice machine and leaned back into the wall. He wasn't expecting this kind of aggressive woman. \n\nI'm glad John talked me into wearing this dress and shoes and nothing else right now, Karen thought as she wolfed down Billy's hefty package. It's going to make fucking him so much easier... \n\nShe knew she was already so wet, she was dripping and she had every intention of making excellent use of the fact. He was already hard and only got harder as she sucked his shaft deep into her mouth and swirled her tongue around the head. She didn't stay there long... just long enough to make sure he was rock hard. Then it was time. \n\nShe stood up before him, while he was still stunned by her aggressive and impromptu blowjob. \n\nI never thought Mama insisting on ballet lessons would pay off like this, she thought as she swung her leg up in a grand battement, placing it on his shoulder and leaning into him as she fumbled for his cock and then steered it towards her pussy, rubbing it against her sopping slit and finally coaxing the head in. \n\nThat was about the point where he came out of his daze and took over. He reached under her butt and lifted her onto him with one hand while coaxing her leg down with the other. She dropped her knees to either side as he slid the rest of the way in, and she threw her arms around his neck to help support her weight while he slowly began to rock in to her. \n\n\"Damn, you're good!\" he murmured to her. \"You always go after what you want like this?\" \n\n\"Not always,\" she moaned. \"Are you complaining?\" \n\n\"Not on your life,\" he moaned as she pressed against him. \"Just tell me I don't have to worry about your boyfriend coming after me.\" \n\n\"He won't be coming after you,\" she told him as they gently rose and fell together. \"He's too busy doing his business deals, with all his top-secret profit-making secrets. If you take care of what I need tonight, it's less he has to do. And speaking of that...\" She nestled in next to his ear and breathed, \"Fuck me! Fuck me hard and make me cum my brains out. Try to get us thrown out of here...\" Then she nipped his ear. \n\n\"Oh, you bitch...\" he groaned, low and throaty, like an animal. He picked her up and turned her so her back was to the wall and pressed in against her, driving hard and driving deep. Her moans as he buried himself just spurred him on. Talking gave way to grunting and groaning, moaning and thrusting as they unleashed their pent-up libidos, each taking from the other, each giving back, each climbing to the inevitable. \n\n\"Oh, fuck! Oh, fuck! Don't stop! Don't stop!\" Karen's moans were loud enough to catch the busboy's attention, but she didn't notice. And Billy did as he was told, speeding up and driving harder. His breath was ragged with the work and his shirt was soaked with sweat, but he didn't care. Right then he was in the hottest cunt he'd had in a very long time and he was going to lose it very, very soon. \n\n\"Fuck, yes! Fuck, yes! Fuck... oh, yeah! Right there! Oh, fuck! Don't stop! Don't... oh, fuck! You're gonna, you're... oh, Fuck! Cumming!!\" Karen wasn't subtle about going over. Two waitresses, the bartender and the previous busboy all watched in amazement as she came and came hard, grinding down into Billy, crying out her release. \n\nWhich took him over the edge. Everything built up until, with one explosive \"OH FUCK!!\", he began throbbing and pulsing and spending his seed deep within the woman driving him crazy. \n\n\"Oh, yeah, fuckin' give it to me!\" Karen moaned, aftershocks crashing into each other as he kept driving into her. \"Oh, fuck, yes...\" \n\nEventually, they slowed down, and received a standing ovation from the staff. Which caught Karen by surprise and actually embarrassed her. She felt herself blushing as her sensible side asserted itself. Billy eased her down to the ground and helped her smooth her dress back in place before putting his shriveling cock away and zipping up. Noting Karen's embarrassment, he turned to the staff. \n\n\"Thank you, thank you,\" he told them, taking a bow. \"No need to applaud... just throw money... next show same time, same place tomorrow night, or as soon as can be arranged. Thank you... thank you...\" \n\nHe had them laughing as he took Karen's arm and steered her in the direction of the Ladies' Room while he headed for the Gents'. In fact, the bartender reached in his pocket and pulled out some change and tossed it in their direction, which got Karen and Billy chuckling as they escaped. \n\nSitting in the stall, Karen was having a war of guilt versus exhilaration going on in her head. \n\nWhat the fuck have I done? she wondered, half in panic. I fucked John's competition. Or his competition's son. I am such a slut... John's going to despise me. \n\nYou fucked Billy Mills, the other side jumped in. Exactly what John told you to do... keep Billy occupied so he could talk to Bob Mills without his son around. You're a fucking hero! \n\nWhy? Because I get turned on by a guy with a cute smile and easy manner? she argued with herself. That's not a hero. That's getting out of control and letting it go too far. \n\nThe hell it is! Billy's happy and thinks he got over on John because of your comments, Bob will have the NASA contract information without Billy knowing about it, you get to let John take you back to the hotel and pamper the hell out of you... win-win-win! You rock, girl! \n\nOh... shut up. Just fuckin' shut up... \n\nNeener-neener-neeeeener... the victorious one taunted in a singsong in her head. \n\n* * * * * \n\nBack at the table, Bob Mills glanced at the dance floor where his son was dancing with his adversary's girlfriend. \"They make a pretty good couple,\" he observed to John. \n\n\"Yes, they do,\" John admitted. \"Karen doesn't get as much socializing time as she'd probably like, so it's good for her. I've only had her for six months and she's been saving my ass on a regular basis, I'll tell you. She can come up with the most amazing information on short notice.\" \n\n\"Then you two aren't... um...\" Bob prompted, not exactly saying it. \n\n\"Oh, yes... we are,\" John confirmed for him. \"Just. The trip out here, in fact.\" \n\n\"What happens in Vegas, stays in Vegas?\" Bob asked. \n\n\"Sort of... it certainly lets us be less formal than around the office. Where it goes after we get back? I haven't a clue. But I definitely like the girl.\" John leaned forward conspiratorially. \"And speaking of amazing info... I'd like to share something just between you and me, while the others are away. Can I trust your discretion?\" \n\n\"The better part of valor,\" Bob nodded. \"Sure... what's up?\" \n\n\"There's a nice surprise coming around the bend if you don't fight us too hard,\" John told him in a low voice, barely audible against the background noise. \n\n\"Yeah?\" Bob looked skeptical. \"What's that?\" \n\n\"This is sensitive data, Bob. I'm trusting you,\" John told him. \"Tikken's about to come into a hefty NASA contract with a production start up by mid-2018. That's a short time to ramp up. Put your assets and theirs together and it can be done and be very lucrative. Eight figures lucrative or better. And since it's NASA, it'll be ongoing for the solid near future and probably long after that.\" John sat back to gauge the elder Mills' reaction. \n\nBob Mills' face stayed inscrutable. But John could tell he was thinking. Eventually, Bob sat back and took a pull off his drink. \n\n\"That's some pretty amazing information,\" he told John slowly. \"Got that from your girl Friday, did you?\" \n\n\"In a roundabout way,\" John told him. \"Independently confirmed with Tikken and NASA through very discrete contacts. It won't be released to the press for another month, maybe two. But it isn't technically insider trading because we're pursuing a merger independent of any specific contract. All you have to do is let the merger happen while keeping Morton stock at reasonable levels, then sit back and cash in when it's over.\" \n\n\"To borrow from Lee Marvin,\" Bob told John, \"And that puts a whole new wheel on the wagon, don't it?\" \n\n\"Paint Your Wagon,\" John nodded, \"and yeah... it's a different kind of gold, but worth it, I think. Nothing against Billy, but I think he's a little too shortsighted to appreciate this. That's why I want to keep this between us.\" \n\n\"Well...\" Bob Mills drawled as he looked over John's shoulder at the mention of Billy's name, \"you might have reason to have something against him...\" John looked over his shoulder to where Bob was looking. He saw Karen virtually dragging Billy off the dance floor. He laughed softly, which seemed to confuse Bob. \n\n\"She probably wants to get laid,\" John explained, turning back. \"Or give him a blowjob if he's well endowed. Like I said, she's a special girl.\" \n\n\"And you don't have a problem with that?\" Bob asked, eyebrows raised. \n\n\"Not at all,\" John assured him. \"I don't own her. Yes, she works for me and she's damned good at it. But she's her own woman and she can boff whomever she wants. I don't mind sloppy seconds, as long as it's an everybody-wins situation.\" \n\n\"You know, John, you've got a strange way of doing business,\" Mills commented, taking another pull at his drink. \n\n\"Bob, I win if we make Morton obscenely profitable. Which happens to include you. I just don't see a reason to be combative if cooperation gets us all what we want. Oh, and I'll give you a contact so you can verify my 'rumor' about the NASA contract, but I'd appreciate if you kept it to yourself for now. I don't want Jim Morton or George Pearson getting their panties in a bunch over it.\" \n\n\"In your ways there is wisdom, young Padawan,\" Bob smiled. \"I'm going to have to explain my change of heart to Billy, somehow. Obviously, I can only allude to recent information of a sensitive nature, but he's not going to be happy with that.\" \n\n\"You can tell him you got it from me, but you can't give him details,\" John smiled. \"That would be the same source that doesn't mind him fucking my girlfriend, as long as everybody's happy.\" Mills laughed. \n\n\"Yeah, that would definitely put a twist on him,\" he smiled. \"I may just use that. And I hate to be a party-pooper, but when they get back, I'm going to suggest we call it an early night. We still have to meet tomorrow, and I think some people are going to be caught off guard by my change in attitude.\" \n\n\"I've got the check, Bob, so feel free. I may see if I need to salvage my reputation with Karen with some time on the dance floor, but you're right, it's going to be an interesting day tomorrow.\" \n\nThe two men raised their glasses to each other and finished their drinks in silence, contemplating just how much the future was about to change. \n\n* * * * * \n\nKaren and Billy returned to the table, Bob Mills made his excuses, he and Billy took their leave but not before John noticed Billy's slight smirk and Karen's flushed attitude, and the two couples parted company until the morning. As soon as the Mills' had left, Karen turned to John. \n\n\"We're going back to the hotel,\" she told him and waited just long enough for him to pay the check before heading out the door. She ignored his questions about how she was doing, and when the valet brought their car, she took the keys and told John, \"I'm driving.\" \n\nHe wasn't sure what kind of burr she had under her saddle, but he shrugged it off and went to the passenger side. They didn't speak until Karen had driven down the street a little and found a darkened turnoff that ended in a gravel parking lot. She killed the engine and lights, took off her seat belt, leaned over the console and unzipped John's fly, withdrawing the cock she'd come to know and like so well. \n\nJohn, for his part, was surprised but enjoying it. Karen really had her Randy on and who was he to fight it? He leaned back in the seat and moaned as she went down on him, bringing him up to full erection almost immediately. She didn't wait long to spring. \n\nOnce she had him hard, she crawled over the console and straddled him in the seat, kneeling on the edges and facing him. With a slightly wild look in her eyes, she hiked up her dress and guided him into her until she was sitting down completely, his turgid manhood sheathed in her hot, wet, and semen-lubricated cunt. \n\n\"Sloppy seconds?\" he asked more quizzically than anything else. \n\n\"You got a problem with that?\" Karen growled as she bore down onto him, grinding into him. \n\n\"Not at all, babe,\" he murmured. \"Just curious.\" He recognized the animal off her leash and was more than happy to let her run. \n\n\"Billy's a good fuck,\" she told him as her breathing became ragged and she ramped up towards her orgasm. \"But he's like the teasing appetizer. You're the satisfying main course. Now can we just shut up and fuck? I need this...\" \n\n\"Yeah, you do,\" he smiled and stopped being passive, stopped letting her use him. He reached up and took her wrists where they were holding onto the seat on either side of his head. He lifted up, thrusting deep into her while pushing her hands back, wrapping them behind her, holding her firmly in place while he took several quick, hard strokes. \n\n\"Ohhhh, Gaaaahd...\" she moaned as he manhandled her. \"Where's a 27 when you need it?\" \n\n\"Back at the hotel room,\" he told her. \"So we'll improvise.\" He took her hands from behind her back and held them up over her head as he continued to pound away. Her moans and groans and mewls were telling him she was close to going over. Suddenly, he let go of her wrists, dropped his hands to the hem of her dress and pulled it up sharply, inverting it, exposing her breasts and covering her head as if with a sack while he held both the dress and her wrists over her head. \n\nShe could no longer see and she had limited movement while he held her like that, but she did have one hell of an orgasm. The thrill of being helpless while he continued to undulate beneath her, continued to grind his groin against her mons and clit, was what it took. With a cry into the night, she came. \n\n\"Oh, fuck, Yes, John!\" her muffled voice came from inside her dress. \"FUCK YES!!\" He smiled as he kept rocking against her, feeling her pulsing on him, knowing she was lost in her pleasure. \"Fuck! Yes! CUMMING!!\" \n\nHe eased up pummeling her with his cock when he felt her subside into aftershocks, collapsing against his body and giving him an inspiration. Her beautifully shaped breasts with their largish nipples were now right in front of his face. Those same nipples that he now knew were directly connected to her clit. He sucked one into his mouth. \n\n\"OHMYFUCKINGGOD!!\" Karen would have launched herself out of the car if the roof hadn't been there and John hadn't had such a good grip. \n\n\"Oh-God-oh-God-oh-God... Oh, God, John! You bastard! You beautiful, sneaky bastard! You're going to... oh, fuck, you're gonna... I'm gonna... OH FUUUUUCCCKKKK!! CUMMING!!\" As she went over again, he switched his grip so that he was holding the dress and her wrists in one hand and dropped the other to the unoccupied tit, squeezing slightly and rolling the nipple. Her moans were now bordering on howls. \n\n\"Jesus, John! You're going to kill me!\" she moaned as she was barely coming down from the second cum before heading right back up. \"Dying here!\" \n\nHe just chuckled into her breast and kept suckling, deciding after a bit to switch nipples, rolling the now very distended first nipple between this thumb and forefinger while he sucked the other deep into his mouth, flicking it with his tongue. When she went over the third time, he could feel her thighs starting to quiver, partly in relief, partly in fatigue. \n\nHe let her coast down from her third orgasm but stayed rigidly buried to the hilt, letting go of her wrists and pulling the dress down as he let go with his mouth. She kept rocking slowly, gently, in his lap as she dropped her hands to his shoulders and leaned forward to kiss him. \n\nThe kiss was slow and unhurried, but the raw energy she was pouring into exploring his mouth with her tongue and crushing his lips with hers was anything but tame. He responded in kind and got lost in her wonderful feel and taste and scent... she reached his core just by being alive. \n\nEventually, they broke the kiss. \n\n\"You haven't cum, yet,\" she told him as she laid her head on his shoulder. \n\n\"Mm-hmm,\" he agreed. \n\n\"Don't you want to?\" she asked, nuzzling his neck. \n\n\"I'd love to,\" he told her. \"But I'd rather it be back at the hotel, in a bed, or somewhere similar. The night is still young and we can stretch this out a good long while.\" \n\nShe struggled to sit up and reach over to the steering column, where she pulled the keys out of the ignition and handed them to him. \n\n\"You're going to have to drive,\" she told him as she collapsed back onto him. \"Somebody wiped me out.\" His soft laugh was answer enough to thrill her and make every nerve in her body tingle. \n\nIf I have to quit, she thought, I am not letting this man out of my life! \n\n* * * * * \n\nKaren was in Heaven. \n\nBack at the hotel, trussed up in good ol' Number 27, a dozen rock solid cums to her credit and now slathered from her face to her tits with the biggest load she could ever remember, and it was John's! \n\nThen there was a knock at the door of the suite. \n\n\"What the fuck?\" John mumbled as he eased his exhausted body out of the bed and into a robe. He started to head for the door, then changed his mind, turning back instead to unclip Karen's restraints so that still in Number 27 and covered in cum, she had free movement. \n\n\"Stay, go, clean up, don't,\" he told her. \"Whatever you want. I'm going to see who's at the fucking door. And... you are fucking amazing!\" And to Karen's broad grin, he headed out of the bedroom, pulling the door mostly closed behind him. \n\nAccording to the peephole in the door, it was Lu. He opened the door. \n\n\"Your timing is impeccable,\" he told her with sarcasm dripping from his voice. \n\n\"Sorry if I caught you in flagrante delicto,\" she apologized as she stepped into the suite's foyer. \"We just got some information you might be able to use with Pam Morton. I thought you should know. Where's Karen?\" ",
        "\"What information?\" Karen was suddenly standing in the doorway to her bedroom, still in Number 27 and still covered in cum. Lu looked genuinely shocked for a moment, until a devious smile began to spread across her face. \n\n\"Sorry to interrupt you, luv,\" she told Karen. \"That looks delicious! I'm going to go grab a drink...\" She turned to head for the kitchen, but couldn't resist turning her head back to John. \n\n\"Is that all from one cum?\" she asked, shaking her head in disbelief. \"Wow...\" Then she laughed to herself and kept on going to get her drink. \n\n\"I'll clean up and be out in a minute,\" Karen told John as she watched Lu's retreating backside. \n\n\"If you want to fuck with her head, just clean up the cum,\" John smiled, then turned to follow Lu. \n\nThey were sitting at the dining table when Karen came in, dressed in a hotel robe left open enough so that Lu could see that Karen was still wearing Number 27, and still had on the wrist and ankle cuffs. \n\n\"Oh, you teasing bitch, you,\" Lu commented quietly. \n\n\"That's the second time you've called me that,\" Karen smiled as she grabbed a bottle of water and sat. \"And the second person to call me that in one day. I must be doing something right.\" \n\n\"Him?\" Lu indicated quizzically, nodding towards John. \n\n\"No. Billy Mills,\" Karen went on, ignoring Lu's look of surprise. \"So what's this new Pam Morton information?\" \n\nIt took Lu a moment to regain her composure. \"Okaaayyyy,\" she drawled as she pulled out her cell phone. \"Who knew Billy'd be into B&amp;D?\" She looked down to fiddle with her phone. \n\n\"He wasn't,\" Karen told her blithely. \"He was into a quickie up against the wall by the ice machine at dinner. John's the B&amp;D aficionado.\" Lu sat on whatever response she was contemplating. For several seconds. \n\n\"Okay,\" she finally told them, \"according to independent, confidential sources...\" \n\n\"One of your girlfriends?\" John interrupted. Lu shot him one of those looks. \n\n\"According to independent, confidential sources who just happened to be at a swingers' party in Tahoe and broke the rules to get pictures...\" she started again, then put her cell down between John and Karen, \"Pam Morton screwed up. She is boffing her stepson and with the help of a couple of nubile, stacked women...\" \n\nJohn slowly flicked through the pictures, perhaps a dozen, all showing a well-endowed Pam Morton fucking a young man while two young - probably late teens, early twenties - also well-endowed bimbettes played with both of them. The pictures had been moved from the text stream to the picture gallery, so there wasn't any identification of who had sent them. When he finished, he handed the phone to Karen, who scrolled through the pictures more slowly, studying them. \n\n\"I thought you might want some blackmail material,\" Lu told John. \"In case Plan A falls through. Not that I think it's going to.\" She eyed Karen and there was a bit of lust trying to get out. \"By the way, Pam Morton is into a bit of creative bondage now and then.\" \n\nKaren nodded as she heard Lu's words, but kept looking at the photos. \n\n\"She's got really big nipples and a big clit,\" Karen commented finally. \"And the guy only has average equipment. Must do something special with it, if she's going to risk boffing him in public.\" \n\n\"She nursed both her kids,\" Lu offered. \"Hence the nipples. Haven't made the acquaintance of her clit. Or her stepson. His name is Brad. Short for Bradford.\" \n\n\"Thanks,\" Karen murmured, still looking at the pictures. Out of nowhere she announced, \"damn! It's warm in here...\" and slipped the robe off, continuing to look at the pictures. \"I can't see what kind of tonguing she's getting from the girls,\" she complained, looking even more closely. \"Does your confidential source have any more of these?\" When Lu didn't answer, Karen looked up. \n\nLu was mesmerized and John was smirking. Lu was obviously staring at Karen in the harness and totally oblivious to anything else. John was finding it amusing. Suddenly, Karen found it amusing, too. She snapped her fingers a couple of times and Lu didn't react, so Karen quickly slid out of her chair and beneath the table. The next change of expression on Lu's face was a violent look of shock as she pulled back in her chair, looking wildly around. \n\n\"Old fashioned girl tonight,\" Karen's muffled voice drifted up from beneath the table. \"Stockings and garters and soaking wet.\" \n\n\"Oh, God...\" Lu moaned and slid down in her chair. There was a very loud slurping sound from below and John was trying very hard not to laugh out loud while Lu's eyes virtually crossed. Karen must have really gone after her, because it wasn't long before Lu's writhing was evident and her breathing became ragged panting. \n\n\"Oh, fuck, bitch...\" Lu moaned as she tried to keep a lid on her reactions. \"Oh... fuck... cumming...\" \n\nThe slurping became a squishy fap-fap-fap as Karen switched to finger-fucking the woman, already cumming, whose legs she was between. And keeping it up until she drove Lu over the edge again. \n\n\"Oh, fuck!... again...\" Lu moaned softly as her body began to shake where she sat. \n\n\"Karen?\" John spoke up. \"Please don't break your toy... I need her tomorrow with all her brains intact.\" \n\nThe squishy fapping eased up and a little bit later, Karen emerged from under the table and sat back in her seat, Lu's juices soaking her smiling face. \n\n\"John, she has the sweetest pussy, I'm telling you!\" Karen gushed to him. His response was to get up, go to the kitchen and come back with a napkin. \n\n\"You might want to wipe all that sugar up, a bit,\" he suggested, handing it to her. \"You're becoming quite the connoisseur.\" \n\n\"Just a quick study, Sir,\" she bowed slightly to him as she dabbed her face. \n\n\"I thought I told you...\" he started, then realized she was still in Number 27. \"Never mind...\" he finished. \n\n\"John,\" Lu started as she tried to stand on wobbly legs, \"I think I'm going to make my escape while I can still walk. I'll see you two at the meeting tomorrow.\" \n\n\"You can still walk?\" Karen asked in faux-innocence. \"Damn!...\" \n\n\"You, girl, are wicked. Wonderful and wicked,\" Lu told her, pointing at her with her index finger. She then managed to smooth her dress and weave her way to the foyer door, where she turned to look at the two of them. \n\n\"Marry her, John,\" she told him flat out. \"Or I will. Bye.\" She let herself out while John and Karen were laughing. \n\n[to be continued]"
    ],
    "authorname": "eidetic",
    "tags": [
        "erotic coupling"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/necessity-is-the-mother-of-obsession-ch-03"
}