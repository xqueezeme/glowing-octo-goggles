{
    "title": "First Night",
    "pages": [
        "I write what I know, some of the events of this story are true and others are fantasy, I'll let you decide which is which. One night/weekend recently I moved into a new apartment with my girlfriend of just over a year; this is the night/weekend I'm writing about.\n\n<CENTER>***\n\nChapter 1</CENTER>\n\nHer name is Katy. You've seen the type; young, first time out on her own in her own place, a little rebellious, full of energy and just a little bit flirty with everyone she meets. She works as one of the counter helpers at a local independent cinema here in town. She's tall with a fine nubile 22 year-old body, long curly brunette hair, a diamond stud in her left nare, a slightly bigger diamond stud in her right chin and a naughty gleam in her eye that hints of a subtle spankability; so much so that if you were distracted by her outright beauty, you might miss it. \n\nI didn't.\n\nThis night was just like any other that I've spent over the last several years when I have some time to myself, at the movies. I walked in and saw her standing there behind the counter smiling at everyone and generally being pleasant while quietly going about her job. Being a regular there, she knows me by sight and smiled at me when I walked through the door. I walked up to the counter in my usual way and she greeted me in hers.\n\n\"How are you tonight?\"\n\n\"Good.\"\n\n\"Seeing a movie?\"\n\n\"No, I thought I'd just come in to smell the popcorn.\"\n\n\"Jerk.\"\n\n\"I know but don't tell, I have a reputation to uphold.\"\n\n\"What will it be?\"\n\n\"'The Girl With the Dragon Tattoo.'\"\n\n\"Just one?\"\n\n\"Unless you want to go.\"\n\n\"With you?\"\n\n\"Funny.\"\n\n\"What's wrong? You don't seem quite yourself this evening.\"\n\n\"'Just one' is all it is.\"\n\n\"You come a lot on your own.\"\n\n\n\"Yeah but tonight is different, I should be here with my girlfriend or at our new place together.\"\n\n\"Why isn't she here?\"\n\n\"Girls night out.\"\n\n\"Sounds fun to me, what's the big deal?\"\n\n\"Normally that would be fine but tonight is our first night in our new apartment and she's spending the weekend out of town with all of her friends.\"\n\n\"That sounds like a great way to break in a new apartment.\"\n\n\"Tell me about it...\"\n\n\"That sounds like a great way to break in a new apartment.\"\n\n\n\"Yeah, yeah, yeah, everyone's a comedian.\"\n\n\"Well it made you laugh didn't it?\"\n\n\"Yes it did, thank you very much!\"\n\n\"It really is a shitty way to spend the night in a new apartment, in bed alone that sounds like a shitty deal to me.\"\n\n\"It is, so that's why I'm here and before I get to be too much of a Debbie Downer, I'm going to see my movie!\"\n\n\"Need any snacks?\" she asked with that slightly naughty smile.\n\nTrying to put on my best non-pouty face I said, \"Not unless you come with it,\" and walked to my movie.\n\n<CENTER>***</CENTER>\n\nWalking out of the empty movie theatre, I saw her cleaning up after the last show and said, \"Have a good night!\"\n\n\"Well it should be an early night since I come back early tomorrow.\"\n\n\"That sucks, being responsible can get in the way of some good times, can't it?\"\n\n\"Yes it can, so what's your excuse?\"\n\n\"Bad start to the night, not my fault though. Made the best of it, saw a good movie and got to talk with you.\"\n\n\"Well what can I say, I'm a ray of sunshine on a cloudy day.\"\n\n\n\"Where did you get that from, the Oxygen Network?\"\n\n\"You're an asshole!\"\n\n\"I am what I eat.\"\n\n\"What?\"\n\n\"Ass.\"\n\n\"You eat ass...?\"\n\n\"Not literally, well, technically, maybe.\"\n\n\"Huh.\"\n\n\"What's that mean?\"\n\n\"I've done that before, sort of. Haven't thought about it again.\"\n\n\"Anal?\"\n\n\"Sounds so dirty when you say it like that but yes, anal, like a porno.\"\n\n\"It's a lot of fun if it's done right. Most guys don't do it right so they turn a lot of women off of it before they've even had a chance to enjoy it. Most guys just jam their junk in a woman's ass and expect her to get off on it like a porno.\"\n\n\"Would you let a guy stick his dick in your ass?\"\n\n\"Well, if I were gay I would. Girlfriend, remember?\"\n\n\"Well does she let you fuck her in the ass? Would you let her use a strap-on on you?\"\n\n\"Sometimes yes and no, I wouldn't.\"\n\n\"So why do you think she enjoys it?\"\n\n\"She doesn't all that much now that you bring it up but it's not because we do it wrong. She's just not that kinky.\"\n\n\"How do you feel about that?\"\n\n\"I feel like a little kink is a good thing once in a while, nothing slutty, just kinky.\"\n\n\"Kinky is good, trying new things is better.\"\n\n\"Yes it is, what time do you get off?\"\n\n\"Probably about an hour after I leave here...\"\n\n<CENTER>***</CENTER>\n\n\"This is a nice place,\" she said taking her first sip of her second special recipe margarita I made for her.\n\n\"We like it,\" pouring myself a third margarita. \n\n\"Looks like the witching hour is upon us.\"\n\n\"I thought it was about margarita-thirty.\"\n\n\"Cute.\"\n\n\"I think so, how is your homemade margarita? Good I expect.\"\n\n\"Delicious! I love that you made it just for me.\"\n\n\"I always come prepared.\"\n\n<CENTER>***</CENTER>\n\n\"These margaritas are starting to go to my head.\"\n\n\"Well I guess I'm going to cut you off light weight. Did you want a nipple for it?\"\n\n\"You really are an asshole.\"\n\n\"I am what I...\"\n\n\"I heard you the first time, why don't you start with my mouth first.\"\n\nWe were sitting on the couch facing the TV but after she said this we slowly turned towards each other. I set my glass down on the coffee table then I grabbed her margarita glass and set it down next to mine, looking at her the whole time.\n\n\"Kissing you could be dangerous.\"\n\n\"...live dangerously...\"\n\nHer beautiful lips were moist with sweet margarita mix, tequila and a little bit salty from the rim. Slowly our mouths met and bit by bit they opened, breathing in the intoxicating scent of sex and margaritas. Soft lips followed by an expert tongue, touching lightly, teasing each other then gently massaging each other's tongues.\n\n\"Mmmmm, God that's good.\"\n\n\"Tell me about it right, you're a sensual kisser, I love your tongue.\"\n\nI stopped kissing her and grabbed her face in both of my hands and I let my nose caress hers and slowly traced my nose around her face, breathing in the faint hint of her Pour Femme perfume. I love the way women smell. I love how they take care of themselves. I love that they take care of their details just for me.\n\n\"Wow, I like that. Where did you learn how to do that?\"\n\n\"I don't know where I picked it up, I just did somewhere.\"\n\n\"Well I like it, it's hot.\"\n\n\"Take off all your clothes.\"\n\n\"Nice, does that actually work for you?\"\n\n\"Sometimes. Do it.\"\n\nShe stands up hesitantly in my living room, spins around and flashes that naughty-flirty smile of hers then turns around with her back to me and starts to undress. She leisurely takes off her shirt, turns to smile at me again and then gets back to her business. She unzips her pants and seductively follows her pant legs one at a time down to her bare feet.\n\nI stand up, coming up behind her I let one hand ease around her waist squeezing her pelvic bone and tickling her smooth skin while the other hand slips up her upper back, up her neck and to the back of her head where I gently grab a handful of hair. \n\n\"...oh wow... I... love... your... hands...\"\n\nI pull her closer using her hair to turn her face toward me and kissed her lightly. After tickling her flat stomach I started tracing her panty line. Soft moans seeped from her lips. Being behind her she couldn't really touch me so she started rubbing her breasts through her bra, moaning the whole time.\n\nI use her hair to tilt her neck and lightly tease my tongue along her neck and shoulders all the while teasing her by tickling her just above her bikini line. Her kisses start to get stronger, her breath heavier and she uses her hands to hold where mine are on her body. She starts to put my hand on the front of her panties with one hand and she tries to rub my hard cock through my jeans with her other hand but I pull away. \n\n\"...it's not time yet...\"\n\n\"Oh Jesus, what else are you going to do to me before you let me come?\"\n\nI answer by spinning her around and kissing her harder than before, I pull her hair so her head lays back and I start kissing down the front of her neck. My other hand searches for her bra clasp and unsnaps it. I step back and use my hands to guide her arms forward then slip off her bra. As she kicks it out of the way I have 2 nice-sized B almost C-cups looking at me, begging me for attention. I grab her again and kiss her, using the middle finger of one hand to trace up and down her spine. I feel her goose bumps all the way down her arms.\n\nI use the first fingers on both hands to slip around to the front of her panties, going underneath each side strap. Still kissing her and smelling a mix of her perfume and her excitement, I slip her panties down past her hips then let them fall to the ground. I held her close to me again, never breaking lip contact, always searching for her eager tongue.\n\nI find it.\n\nI use my middle finger to outline around her ass cheeks then up and down between them. A soft touch, just enough to tickle and tease her, she's almost ready. I pull her hair again with my other hand and this time I get my nose almost touching her skin and I start to smell her neck, starting at her ear and sloth-like I move down her neck.\n\n\"...holy Jesus... fucking let me come...\"\n\nI twirl her around again to where her back is to me and I grind my clothed hard cock into the naked flesh of her ass while holding one hip with one hand, I start to trace around her shaved clitoris and labia. Getting closer to her pussy with each pass I dry fuck her ass while kissing the back of her neck. I push her head forward and breathe a hot breath onto her neck when I finally touch her pussy lips. She is dripping wet and lets out a long, slow loud moan to my touch.\n\nShe grips my hand with both of hers and holds it to her clit. She starts grinding on my hand harder and faster, holding it tighter and tighter as she breathes heavier and faster. She lets out a small screech which becomes a yell.\n\n\"Ahhhhhhhh... Ahhhhhhh... Ahhhhhh... AH, AH, AH, AH, AH, AH...\"\n\n\"AHHHHHHHHHHHH!\"\n\nThen she falls back into me and stumbles haphazardly as I help her back to the couch. She lays there for a minute or two without saying anything. I randomly caress her breasts as her breathing subsides. She opens her eyes to look at me as I gently twirl her nipples in my hands.\n\n\"No one has ever made me come like that before.\"\n\n\"Like what?\"\n\n\"Just using their hands.\"\n\n\"First time for everything.\"\n\n\"Yes it is,\" as she rises up from the couch. She pushes me back onto the love seat and kisses me deeply, using her tongue to search out and massage mine. She starts rubbing my rock hard cock through my jeans.\n\n\"Why are you still dressed?\"\n\n\"Because you haven't undressed me yet.\"\n\nShe leaves a wet spot on my leg as she roughly removes my shirt.\n\n\"Stand up.\"\n\nShe unbuckles my belt, pops the button on my jeans, unzips them and pulls them down forcefully.\n\n\"Step out of them.\"\n\nI step out of them as she starts taking my underwear off. Once off she just sits and stares for a moment.\n\n\"Not too big, not too small. It's just right.\"\n\n\"Who are you, fucking Goldilocks?\"\n\n\"Shut up.\"\n\nThe world that her tongue introduced to my tongue was nothing compared to what was in store for me once she started giving me a blowjob. No preliminaries, she went after my cock like it was her last meal. Putting her hands on both hips, she goes down on my cock as far as she could, taking time to lick the rest of my shaft that was out of her mouth. Standing there in front of her looking down at her head moving forward and back like a tennis match. Every time my cock touched the back of her throat, her tongue darted out to tickle the rest of my shaft. After a minute or two of that she grabbed my cock with one hand and started pumping it in time with her mouth, her other hand she placed around my cock fingers flat against my stomach above my shaft, thumb below working back and forth slightly. \n\nI love that.\n\nShe continues to pump my shaft with her hand but she stops her head to keep only my cockhead in her mouth and she sucks it moving her head in circles, licking up and down my opening. Moving her other hand underneath my balls she starts massaging them. I start to moan and she looks up at me and smiles.\n\nContinuing to lick and suck my head, she starts twisting her hand on the way up and twists it the other way on the way back down. Her copious saliva lubricates her hand pumping my cock. Working furiously on my cock, she knew what she wanted and went for it. Her hands continued to massage my balls and she felt them tighten. I moaned uncontrollably and I put my hand down on her forehead to try to push her away, she shakes my hand away.\n\nShe speeds up her hands and tongue, my moans grow louder. She looks up and smiles again, flicking her tongue just under my cockhead. Her hand on my balls starts a slower, harder massage, she knows I'm close.\n\n\"...oh fuck, oh fuck, oh fuck...\" was the only response I could muster.\n\nShe was now a whirl of activity, almost a blur working back and forth on my cock. Using both hands she worked me harder and faster. I started tensing and tried to push her away again but she shook me off and pressed her mouth down on my cock harder.\n\n\"UUUUUUUGH! AH! AH! AH!\" as I came spurt after spurt then falling back into the chair behind me.\n\nAs she finishes swallowing, she looks at me and says, \"Slightly sweet with a hint of salt, your come tastes really good, I could do that again right now.\"\n\n\"Give me about 15 minutes and I will oblige you. Thirsty?\"\n\n\"Yeah I could use some water.\"\n\n\"Question.\"\n\n\"Yes...?\"\n\n\"How could your girlfriend NOT want to be here to break in your apartment in style?\"\n\n\"Well, we have a year-long lease to figure that out. I think we might've made a mistake moving in but I figured after being together for a year we'd know each other well enough but I guess not.\"\n\n\"Well she's crazy. If you were my boyfriend, I'd be doing to you what we're doing now.\"\n\n\"Isn't that what we're doing?\"\n\n\"Yes but if we were boyfriend/girlfriend it would be legal.\"\n\n\"Does it bother you that I'm dating someone?\"\n\n\"Obviously not otherwise I wouldn't be here. Does it bother you?\"\n\n\"A little bit, she and I are happy but she's not that kinky but more importantly she should be here tonight.\"\n\n\"If it bothers you that much, we better make it worth it.\"\n\n\"I concur!\"\n\n\"Thank you Frank Abagnale.\"\n\n\"Oh you caught the reference did you?\"\n\n\"I work in a movie theatre, hello? McFly...\"\n\n\"There's nothing sexier than a naked woman kneeling in front of you giving you a blowjob.\"\n\n\"You might be right but I'd love to try to prove you wrong.\"\n\n\"Prove away.\"\n\nThose were the only words she needed to hear. \n\nShe took her time moving back to the couch, showing me all of her unclothed assets by the glow of the TV. She threw off most of the cushions but left two of the fluffiest. She laid back on them with a slight smile on her lips and her half-open eyes holding my stare. She moved her right hand up her right thigh and pulled her wet hood up to reveal her clitoris.\n\nI like this girl.\n\nTwo fingers together she slowly moved down her clit then lingered back up. Never losing my gaze she continued using her two fingers to rub her clit, slowly, ever so slowly. Torturing me or torturing herself I'm not quite sure but she loved to touch herself. Spreading her fingers a little bit she used them to start rubbing on either side of her clit, something she must really enjoy because she let out a loud moan and shivered. A little faster she continued to rub either side of her clit, my cock grew in response.\n\nShe put all her fingers together then started to use her whole hand to rub her clit in a circular motion. Sometimes more pressure, sometimes less but always in slow circles. Always looking at me, she watched as my cock grew and I started rubbing it. She started moving her hand up and down on her clit in rhythm with my hand on my cock. She smiled.\n\nShe's getting close, her pace quickened, up and down up and down up and down she worked it. Little beads of sweat started to glisten on her flat stomach. Her hand went a little further down and one of her fingers disappeared into her sopping tunnel. In and out she worked, faster and faster. Then she inserted two fingers and kept rhythm with me. My cock was rock hard now but she never broke eye contact. She watched me watch her.\n\nShe moved her other hand down her breast and inched closer to her clit. She let her left hand take over and moved her right hand up to her mouth and inserted her two fingers to suck on them. I thought that kind of thing only happened in pornos but she loved the taste of her own juices. She moaned louder, breathing heavier and faster. One hand in her mouth the other in her pussy, she started to buck. The muscles on the inside of her legs quivered, she tensed all over. \n\nShe held my stare for her release.\n\n\"OHHHHHHH! OHHHHHH! OHHHH!\"\n\nNever taking my eyes off her, I didn't let her rest.\n\nShe was wet and ready. I moved in between her legs and positioned the head of my cock outside of her wetness. I grabbed my cock and slid the head in between her pussy lips to get it lubricated. Just the head at first, moving up and down. We watched each other as I teased her. I stopped briefly and put another inch in. Her eyes closed slightly, she smiled.\n\nDrawing almost all the way out and moving a little bit in I teased her like that for a few minutes. Inch by inch I put my cock into her like that. Inch by inch I pulled in and out. Her pussy juices were flowing freely now, down the crack of her ass and onto to couch cushions.\n\nFinally I made it all the way in and I just stayed there for a few moments. I leaned in and I kissed her, she kissed me back harder. Grabbing the back of my head she held my mouth to hers. Tongues intertwined I slowly started to whole-cock fuck her with strong strokes. Almost all the way out but always all the way back in.\n\nShe wrapped her legs around me as I worked in and out of her. Slowly and gently at first but my pace quickened when I started feeling her pussy starting to tighten. I pumped harder and faster, hitting her pussy like a madman.\n\nMoaning softly in my ear her breathing started to quicken, the moaning turned to heavy breathing and the heavy breathing turned into some kind of grunting sound. A sexy, sultry animalistic noise. I started pounding her so hard I thought her pussy would start waving a white flag but she didn't stop. In fact, her noises became almost a growl as I pounded her. One arm clasped around my neck and both legs wrapped around my back as she rode my cock, she stiffened, shuddered and let out a long squeal.\n\n\"AAAAAAAAIIIIIEEEEEEE!\"\n\nMy cock still inside her, I stopped fucking her to allow her a few moments to recover. She opened her eyes and loosened her grip then relaxed back on the couch cushions saying, \"Holy fuck that was amazing!\"\n\n\"Yes it was.\"\n\n\"I think I have about another 5-10 minutes in me before I come, do you think you can come again when I do?\" I asked.\n\n\"Yes I believe I can but you might have to fuck me doggie style so I can rest a little bit after that thrashing. Besides, I can always finger myself while you fuck me.\"\n\nI knew I liked this girl.\n\nTaking my cock out of her for a few moments I grabbed a few of the couch pillows and cushions and made a comfortable place for her to be for the next round. She positioned herself leaning on the couch arm, resting on the pillows. She had her ass back towards me, looking back over her right shoulder she wiggled her assets back and forth to tease me. She propped herself up on her elbows and pushed her ass back toward me, I didn't need further prompting.",
        "Still wet, I slid into her pussy pretty easily, after a few strokes I was all the way in and she was comfortable. She watched me as I slowly started fucking her again. Grabbing her hips I slid her back and forth on my hard cock. I saw her little ass looking back at me.\n\nI grabbed her ass cheeks and massaged them as I fucked her. I could feel her watching me but I couldn't take my eyes off that beautiful ass. I started rubbing a finger in between her ass cheeks as I fucked her and she jumped.\n\n\"What are you doing? That tickles!\"\n\n\"It's supposed to. Do you want me to stop?\"\n\n\"No...keep doing it...it makes me tingle.\"\n\nWho was I to stop then? I continued to rub a finger up and down her ass while I fucked her doggie style. My pace quickened, seeing her ass right there and fucking her I was going to come soon. I brought my thumb to my mouth and licked it.\n\n\"What are you going to do with that?\"\n\nMy reply was simply to put my thumb on her asshole and start rubbing it very quickly. It didn't tickle her anymore. Her asshole started clenching and unclenching, so did her pussy around my cock. She flipped her head and her hair flew around in the air.\n\nI love that.\n\n\"I'm getting real close,\" as my fucking quickened and my thumb kept pace.\n\nShe laid her head down on the arm of the couch and reached a hand down to her own clit and she said, \"Go for it.\"\n\nI grabbed her hard with one hand and resumed fucking her like a madman. With the other hand I kept massaging her asshole. Getting really turned on I inserted the tip of my thumb into her ass and it puckered around it, spasming the whole time. She let out a moan. I could feel her hand on her clit quicken as sometimes her hand would touch my balls as she worked her own clit. We were keeping time with each other \u2013 thumb in asshole, cock in pussy and hand on clit all working together. Faster and harder I fucked her, I had my whole thumb inside her ass now and she was bucking back against me.\n\n\"Tell me before you come!\" she said.\n\nBalls slapping up against her pussy she used her other hand to massage and tickle them.\n\n\"Keep doing that, I'm going to come.\"\n\nMy balls started to tingle, she tensed and moaned. Breathing faster and louder she came. \"AAAAAHHHHH!\" She didn't have time to enjoy her orgasm, my balls tightened.\n\n\"I'm going to come!\"\n\nShe pushed me back and scooted underneath me in one smooth motion. \"Jack off into my mouth\"\n\nThen she wrapped her lips around the head of my cock, massaged my balls with her hand, propping herself up with the other. I grabbed my cock and started pumping it.\n\n\"UUUUUUUUNNNNNNNHHHHH!\"\n\nPump after pump I dumped my come into her mouth, she greedily gulped it down. Spent, I fell back into the couch leaning against the arm, eyes closed.\n\nAfter a few minutes, I opened my eyes, she was propped up against the other arm and I said, \"Wow.\"\n\n\"Yeah.\"\n\n\"That was a lot of fucking fun!\"\n\n\"Yes it was. I'm ready for a shower,\" as we were both shimmering in sweat.\n\n\"Me too.\"\n\n<CENTER>Chapter 2</CENTER>\n\nThere's something about a long, warm shower that hits you just right. That first stream of hot water hits you and all your troubles seem to melt away. A shower so hot that when you step out the mirror is fogged over, the walls are running with condensation and your body is red all over. If you shower with the lights off it's like being in a dark sauna while being gently massaged, this is the kind of shower I was taking. \n\nA few minutes into it I felt a cool breeze behind me followed by breasts pressed up against my back, arms from the body those breasts were attached to wrapped around my body and a kiss to my neck introduced me to my invader.\n\n\"Miss me?\"\n\n\"I was wondering when you were going to join me, I thought I was going to be showering alone.\"\n\n\"I'll bet you did, what would you have done if you did shower alone?\"\n\n\"Not what you think.\"\n\n\"Well studies show 75% of people sing in the shower and the other 25% masturbate, do you know the song they sing?\"\n\n\"No.\"\n\n\"Well, you must be part of the 25% who masturbate!\"\n\n\"Haha, for your information I don't jerk off in the shower that much. I prefer to use AstroGlide or baby oil because it feels more real that way. AstroGlide would wash off in the shower and baby oil can be treacherous.\"\n\n\"So what do you use then?\"\n\n\"Conditioner.\"\n\n\"Does it work?\"\n\n\"It gets the job done but it doesn't beat the real thing.\"\n\n\"Nothing does.\"\n\nWith that she grabbed the Axe body wash off the shelf and started pouring it little by little over the rest of my body. She set the bottle down and started rubbing up one arm and down the other. Getting me lathered up she started massaging my chest then leaned up to kiss me.\n\nTurning us around she got behind me and starting rubbing up and down my back going in between my ass cheeks and down the back of my thighs. She reached around the front of me and started lathering up my cock. Underneath my balls and stroking my slowly hardening cock; between her hands and the hot water, my head was swimming.\n\nShe used her hand to grab my cock and leisurely stroked me. With her other hand she started to massage my balls, both hands staying in the same rhythm. She stopped at the top of my dick and started moving her wrist in circles focusing on the head of my dick.\n\n\"That feels really good.\"\n\n\"Care to finish the job? I want to watch.\"\n\nWith that she sat down with her back against the back of the shower and reaching up she handed me the bottle of Garnier conditioner and said, \"Tell me before you come.\"\n\nI squeezed the conditioner into my hand and started rubbing my cock, the hot water hitting me in the back, me stroking my dick and a hot woman sitting in front of me waiting for the prize. I next moved to repeating her moves \u2013 one hand twisting around my cock head and the other massaging my balls. She smiled watching me as I jerked off in front of her.\n\n\"More conditioner.\"\n\nShe squeezed the bottle into my right hand and I moved it back to my cock, this time pumping my entire shaft. We locked eyes as I continued stroking, she brought her knees up to her chest then slipped a hand down between her legs to start playing with herself. Just at the top, she moved her two fingers back and forth on her growing clit.\n\nI picked up the pace a little bit, massaging my own balls and stroking my shaft; she matched my speed. Still staring into each other's eyes we mutually masturbated in the shower, \"Fuck the song,\" I thought and smiled. She smiled back, spread her knees until they hit both sides of the tub and starting using her whole hand on her clit, moving the pressure back and forth, up and down.\n\nI crouched slightly, stuck my first finger out in front of her and moved it to my ass. She looked down and I started to put it in. I started slightly crouching down to meet my finger as my hand pumped my cock \u2013 I went faster and started moaning. She watched, smiled and started watching my hands work my body.\n\nShe continued to hump her palm, legs spread. I removed my finger, turned, adjusted the shower head, then took a step closer to her. I turned again slightly to rinse the conditioner off and reinserted my finger into my ass, crouched down again and started pumping my cock. She got the idea.\n\nShe started pumping her palm and brought her pelvis up to meet it. She started getting faster and faster, so fast she started sliding down. I took a small step forward to brace her as she was coming up to her orgasm. She closed her eyes and started breathing really heavy.\n\nEnjoying the show, I slowed my pace; stroking my cock as I fingered my own ass, I watched her as she came closer to her orgasm. Eyes closed tight, her mouth opened with a low moan. She kept humping herself faster and faster; eyes closed as tight as they could be she let out what could only be described as a screeching hiss as she finally gasped and thrust one last time, finishing her orgasm. She shuddered, legs relaxed, she opened her eyes.\n\nHer eyes locked on my cock as I fingered myself and pumped away in front of her. She got up to her knees, pushed me back and moved my hands away. She put my cock head in her mouth, put one hand on my balls and put the other hand to my ass. She pushed a finger into my ass as she massaged my balls. Licking my head she looked up at me and smiled as she had my cock in her mouth.\n\nI started squatting slightly every time she finger-fucked my ass. I was breathing heavy and fast now. I started to pump her face every time I squatted. Massaging me and sucking me at the same time, I started fucking her face faster.\n\nTrying to keep up she kept fingering my ass. Trying to do too much she stopped moving her mouth on my cock so I grabbed the back of her head and started fucking her face faster and harder. I started panting in earnest now as I sped closer and closer to my orgasm.\n\nShe held her head back as I face-fucked her, controlling the depth of my thrusts. As she slipped another finger into my ass I grabbed the hair on the back of her head and fucked her face faster and faster. I started grunting instead of panting until finally thrusting into her mouth, held her head in place and shot my load into her mouth. Time after time I spurted into her mouth and time after time she swallowed. The girl loves to swallow cum it appears, not like my girlfriend, she doesn't even bother to take it in her mouth then spit it out.\n\nI started to waiver in place and grabbed the rail to steady myself. She dismounted from my cock and I knelt down to kiss her. Tongues intertwined I tasted a hint of sweet and a hint of salt from my cum.\n\nShe stopped and said, \"Most guys don't want to kiss a woman after a blowjob.\"\n\n\"Well, most guys are assholes.\"\n\n\"But you're an asshole.\"\n\n\"Yes but I figure if a woman is good enough to suck me off, especially swallow, the least I can do is kiss her afterward.\"\n\n\"Why?\"\n\n\n\"She did the work, she got the prize and she swallowed, what's she going to do? Regurgitate it and spit it into my mouth? No.\"\n\n\"True, so you're not into snowballs?\"\n\n\"No. If I ever finish early I always clean a woman up and finish her with my tongue, regardless of whether I just came inside her or not.\"\n\n\"That's refreshing.\"\n\n\"Well I have rules when it comes to sex, the first one of which is, 'the woman comes first, always.' Even on my birthday.\"\n\n\"Too bad there aren't more assholes out there like you.\"\n\nI smiled, grabbed both of her hands and pulled her up. I had her step around me so she could enjoy the hot shower but this was also self-serving. As she faced the shower, her tight little ass faced me and was the same height as my face.\n\nI grabbed the Axe body soap, poured it into my hands and started washing her ass and the outside lips of her pussy. Back forth I lightly rubbed, lathering her up as she showered. Keeping one hand working on her pussy lips I moved one hand to her ass and moved it up and down. She clinched her butt cheeks together and laughed, \"That tickles',\" she said.\n\n\"I know but it won't\"\n\nI continued to work both her pussy and her ass but I stopped at her asshole and rubbed around it. Every once in a while I playfully poked at her asshole as I circled it and rubbed her pussy. A little deeper each time I got into the first knuckle eventually then withdrew.\n\n\"You do that really well.\"\n\n\"Thank you, rinse yourself off and I'll continue.\"\n\nDoing as she was told, she rinsed the soap off and presented her ass to me. She spread her ass cheeks with her hands and let me insert my finger again, this time a little deeper. The second knuckle went in and she shivered.\n\nHer hands let go of her ass and they moved to her breasts, she massaged them as I rubbed her pussy and fingered her ass. I got up on my knees and started licking her ass, encircling my finger as I moved it in and out slowly. The tension in her ass slowly melted away as she let me tongue and finger fuck her little by little.\n\nWith every little thrust, she used her hands to brace herself against the shower wall as she pushed her ass back to me. Finally, my finger was all the way in. I made small circles with my whole finger and her ass relaxed just a little more. I licked and flicked around her asshole with my tongue, working my finger in and out of her ass.\n\n\"I so want you to fuck me right now. I want you to just rail me hard and fast.\"\n\nI didn't say a word I just continued to finger fuck her and lick around her ass. Her ass started to pucker once in a while around my finger, I could feel it twitching with my tongue. I felt her vagina throbbing with my finger, her pulse quickening little by little. I stopped rubbing her pussy and used my hand to massage her ass cheeks.\n\nI pulled my finger almost all the way out of her ass then brought my middle finger up to her pussy lips and pushed it in a little. Once both fingers were straight, I inserted them both slowly \u2013 one into her pussy, the other into her ass. \"OOOOOOOOOOHHHHhhhhhhhhhh,\" she let out uncontrollably. \n\nI could feel each finger going in and out through the thin wall between them, I continued to lick her ass; her pulse was beating faster and faster. She shuddered then moved one of her hands down to her pussy lips. Using four fingers she rubbed her clit in circles as I finger-fucked her ass and her pussy.\n\nShe spread her legs to allow me better access to everything she offered. Still pumping away at her both of her lower holes, she was looking up to the ceiling in ecstasy. Her long, wet hair dangled down towards me, I stopped massaging her ass and grabbed her hair pulling it down firmly but gently. She let out another long, slow moan.\n\nShe pushed her ass out towards me, away from the wall and I licked in earnest. She removed her last hand from the wall, leaned up against it and grabbed the back of my head pushing it into her ass. I kept licking and kept fucking both her pussy and her ass simultaneously.\n\nPushing out further she ground her ass into my face and onto my fingers. Grabbing the hair on top of my head she pulled tighter and started pulling my face into her ass in rhythm with her backwards thrusts. She was getting close.\n\nShe tried looking over her shoulder at me but couldn't manage it. Her breathing was coming in gasps now as she slid down the wall and kept thrusting back at me. Fucking her pussy and her ass at the same time, she was starting to almost convulse. Her whole body jerking as she closed in on her orgasm.\n\nI decided to do something a little different for her just to see what she'd do. I withdrew the finger from her pussy and started to press it against her anal opening. Her other hand started working her clitoris furiously, she stopped thrusting her ass back at me just long enough to let me get my two fingers started into her ass.\n\nLong and slow I put both into her ass in one long, slow push. About 30 seconds worth of pushing she pushed back and wiggled her ass slightly when the going seemed to stall. Once all the way in, she shivered. I responded by putting my ring finger into her pussy, followed by my little finger.\n\nThis finally seemed too much for her as she started sitting down on my hand and face and was losing her balance. She literally sat on my face and hand and I tried to hold her as best I could as she ground down onto my face and hand. Her one hand nearly pulled my hair out holding my face to her ass and her other hand squeezed her clit and she held it in place, putting pressure in just about every place she could get it.\n\nShe shuddered time and again, letting out moans with each breath as she almost fell back with her orgasm. Exploding with a scream, she was stiff as a board for several seconds and then fell limp in a pile on top of me. As she slid down, I removed my hands from her body to cradle her. I leaned back and brought her with me, letting the water wash over both of us in our post-orgasm resting place.\n\n\"Ummm, that was incredible. How was that for you?\"\n\n\"I've had better.\"\n\nWe shared a laugh as the shower started to turn cool. \"Why don't we get out of here before the water turns cold? Besides my fingers are all pruny!\"\n\n\"I could use some sleep, you fuck like a madman. I'm done. Where do you get the energy?\"\n\n\"When it comes to sex, I have all the energy I need. I can fuck all night if I want to.\"\n\n\"Well, you're done tonight because I need a timeout. You wore my mouth out, you wore my pussy out and you wore my ass out. I'm ready for bed!\"\n\n<CENTER>***</CENTER>\n\nSlipping under the comforter, I opened it up and let her slide in beside me. As she pushed her body back into mine she said, \"You're nice and warm.\" It was the first and last thing she said.\n\n<CENTER>Chapter 3</CENTER>\n\n\"Where is he?\"\n\n\"Still sleeping, we hit it hard last night.\"\n\n\"You skank, what else did you do?\"\n\n\"We had a lot fun but he wanted fuck my ass and I didn't give it to him. I let him tickle my ass then he had a finger in my ass when he fucked me doggie style and during the shower he licked my ass. It wasn't too terrible but I just didn't want my anal virginity to be taken last night.\"\n\n\"Why? Was he too rough?\"\n\n\"No, he was actually very good about it. He gave me several orgasms before inserting his whole thumb in my ass and he didn't just jam it in there. He inched it in, slowly but surely and to be honest, he was fucking me so hard and so fast that I barely noticed it going in at all. It made my fucking toes curl when I came!\"\n\n\"There was no 'oops' moment?\"\n\n\"No he was a gentleman about it.\"\n\n\"Well there's hope for you yet.\"\n\n\"I don't know, I still think my asshole is exit only...\"\n\n<CENTER>***</CENTER>\n\n\"So do you have any plans today?\"\n\n\"Not really, I was just going to unpack a little bit and get the kitchen organized so I can cook something to eat.\"\n\n\"You mean your culinary skills go beyond making margaritas?\"\n\n\"Yes, quite beyond if I may say so myself.\"\n\n\"Well you'll have to cook for me someday soon but for now I need to head to work for the early shift, will you be around later?\"\n\n\"Yeah, like I said, I'm just going to start unpacking and get the kitchen organized. Enjoy work!\"\n\n\"Have a good day unpacking!\"\n\n<CENTER>***</CENTER>\n\n\"This is unexpected,\" I thought. I stared at Katy and her tall brunette friend in the doorway as she introduced her. April is it? Of course her name is April, what else would it be? I think the two names are conjoined twins, for every \"Katy\" there is an \"April\" and vice versa. I left my second thought, \"Yet another tall brunette with brown eyes...\" alone and said:\n\n\"This is a surprise!\" I said as they kicked off their shoes and walked into my place carrying a big paper bag.\n\n\"Well, I didn't know if I would be coming back today so I didn't tell you I would. I figured you wouldn't mind some extra company, that's why I brought April.\"\n\n\"Of course not. If she's a friend of yours she must only have a few minor convictions on her record.\"\n\n\"Oh, ha ha ha.\"\n\n\"Hey give me a break, you're the first live person I've talked to all day and I've been unpacking besides!\"\n\n\"I'll give you that.\"\n\n\"It's a nice place, it'll be even nicer when things are unpacked and it's decorated\" April said.\n\n\"Yes it is, thank you.\"\n\nThey made their way through the living room to the kitchen and started to unpack their grocery bag on the counter. Jack Daniels, Diet Coke and ingredients for an Italian dinner fit for three, including a freshly made store-bought tira misu.\n\n\"I figured if you unpacked the kitchen today you could cook dinner for the three of us if we brought the refreshments.\"\n\n\"That is a language I understand. But before I do that, I need to shower. Make yourselves at home.\"\n\n<CENTER>***</CENTER>\n\nI love being watched, especially when I'm cooking. The more than ample counter space provided a nice stage for my performance; it's so wide it feels like a hibachi grill. They sat on the two bar stools on the other side of the counter watching me prepare and cook our chicken alfredo, wedding soup and romaine salad. They kept the drinks flowing and the conversation going.",
        "<CENTER>***</CENTER>\n\nWith the smell of garlic still lingering in the air, we finished our tira misu. We were about halfway through the Jack Daniels and Diet Coke when the conversation turned sexual.\n\n\"So, Katy tells me you're a great fuck.\"\n\n\"If it comes from her it must be true.\"\n\n\"Katy also tells me you're an ass man.\"\n\n\"Does she tell you everything?\"\n\n\"Only the good shit.\"\n\n\"Well, shit isn't good.\"\n\n\"That's not true.\"\n\n\"Why? Does yours smell like roses?\"\n\n\"No, I just like anal sex and Katy tells me you're a great fuck. She also tells me you wanted her ass last night and she didn't give it to you. I'm here to tell you that finding a man who knows how to please a woman anally is hard to find and if you're such a man then we need to get to know each other.\"\n\n\"I agree because the woman who actually likes anal sex is rare indeed.\" I stood up and started moving the coffee table, \"I think we need to get more comfortable.\" \n\nI disappeared for a moment and grabbed the comforter and several blankets as well as a few pillows and laid them out of the floor. I also presented a bottle of AstroGlide and a box of condoms which I sat next to our drinks on the coffee table.\n\n\"We won't need the condoms unless you have something you don't want to give us, I just had my yearly last week and I have a clean slate, so does Katy but then you already knew that. And we're both on birth control so we're all good.\"\n\n\"Nice, I prefer skin on skin and I also prefer there to be no grass on the playground either.\"\n\n\"Well I have a Brazilian done the day after my yearly, so you're in luck. Katy shaves hers as you found out last night but I like the smoother for longer treatment the Brazilian gives me.\"\n\n\"I haven't had a Brazilian chick in a long time, those are my favorites. I've been trying to convince my girlfriend to get one but she won't.\"\n\n\"Why not?\"\n\n\"She's afraid of the pain.\"\n\n\"She's sounds like she's a pain in the ass or she should at least let you be!\"\n\n\"She's cool, I just wished she was a little more freaky. \n\n\"Freaky is good, slutty is not but where is the line?\"\n\n\"Anal sex is freaky, anal fisting is slutty. Honestly, what would you do after you did that?\"\n\n\"You won't have to find out on me, I love oral sex, being rimmed and then being fucked.\"\n\n\n\"Well I have a few rules when it comes to sex, one of which is 'If I lick it, I stick it.'\"\n\n\"Any others I should know about?\"\n\n\"The first one that comes to mind is 'the woman comes first, always.'\"\n\n\"I like it, anything else?\"\n\n\"No old people, no dead people, no young people, no animals and no bodily functions except for those required for the deed. Anything else I may be inclined to try using the three strikes you're out rule. If you try it three times and don't like it, then ditch it.\"\n\n\"Sounds like a solid foundation to me, now let's put it to use\" she said standing up as she lifted off her shirt. She walked over and straddled me as I sat on the love seat, Katy sat open-mouthed on the couch.\n\nApril took my rocks glass out of my hand, set it on the arm and kissed me hard. There's something about a woman who tastes like my favorite drink that just gets me going. I reached up with my left hand and undid her bra then followed her straps down her arms letting her firm B cups into the fresh air.\n\nShe sat back on my knees and I leaned forward and started kissing her shoulders, one hand behind her back, the other one massaging her left breast. I started licking around her right breast and nipple, slowly working my way in then putting her nipple into my mouth. I bit down just hard enough to her nipple between my teeth and started to flick it lightly like I would lick a clit. I circled her nipple with my tongue then started to move to her other breast.\n\nShe unfolded her legs and inched forward to snuggle me close as I licked her left breast. Her hands were running through my hair she pulled my face into her breast. I grabbed under her ass and scooted forward and down to my knees, I laid her down on the comforters still licking and sucking her breasts. She let her hands fall away and unbuttoned her jeans, then unzipped them. Katy was still watching from the couch, I saw April look over to her and smile.\n\nApril lifted her ass and I grabbed her jeans and underwear and slipped them off as she wiggled out of them. There before me was a lovely little Brazilian pussy, wet and ready to be play. A small dribble of her excitement stretched from her pussy to her panties as they came off.\n\nI put a pillow under her head then buried my face. Full mouth on her wet clit, slightly sweet, pungent and lovely I dove in. Licking up one side of her clit and down the other, she moaned her approval. I glanced over at Katy and she was still watching intently but not knowing what to do or say.\n\nTurning my attention back to April I started licking down her lips on one side then up the other. Her excitement dripped into a pool on the comforter just below her ass cheeks. Licking in between her lips she grabbed the back of my head and started pumping my face. She grabbed harder and started pumping faster, she brought my head up to her clit to finish her off.\n\n\"Lick faster!\"\n\n\"Ooooooh, right there!\"\n\n\"Ah... ahh... ahhh... ...fuck me! ...fuck me! ...fuck me!\"\n\n\"AHHHHHHHhhhhh...\"\n\nFinally the release with a huge sigh and she fell back limp, legs dropping to the floor and hands moving up to rub her stomach and breasts. Eyes closed for a minute, she opened them and looked over to Katy still sitting on the couch, dumbfounded. April smiled and said, \"You weren't kidding, he eats pussy like a shark in a feeding frenzy!\"\n\nA very orgasmic girl, I like that.\n\nKaty still didn't know what to say, she just smiled slightly and nodded her approval.\n\n\"Time for round two,\" she said as she started removing my clothes.\n\nNow completely naked she told me to lie down as she walked toward my head. I knew what was going to happen and it's one of my favorite things in the world, eating a woman out while she straddles my face. She started to sit down, knees on either side of my head, she positions herself inches from my mouth and leaned forward. She pushed her pussy down on my face and I greedily started to tongue her clit. Though I couldn't see her, I could hear Katy starting to make some noise. \n\nPutting my mouth on April's pussy she started grinding her hips down pushing her pussy further onto my face giving more pleasurable pressure all around her clit, she started moaning. Grinding her pussy into me in small circles, she used my mouth as her personal masturbation tool, my tongue flicked her clit to help her along. Her pace quickened and she started breathing heavier. Her moistness slowly trickled down my cheeks out of both sides of my mouth. \n\nGetting close to orgasm she lifted herself away from my lips, leaned back on her hands and brought her feet to a sort of reverse table position over me, we looked at Katy and she was leaning back into the couch, eyes closed, hands down the front of her jeans rubbing slowly but surely. \"We'll get to her later,\" she whispered to me, \"I don't think she's ever had a threesome or been with a woman before.\" \n\n\"This will be weekend of a lot of firsts then,\" I whispered back.\n\nShe then positioned her ass above my lips and said, \"I showered right before we came over.\" \n\nThat was all I needed to hear. I made my tongue hard and just stuck it right in her ass, twirled it around then pulled it out and started licking it gently up and down. She started laughing as it always tickles at first but then she started to really get into it moaning and breathing heavy.\n\nI stopped what I was doing and made my tongue hard again and slowly pierced her ass as deep as I could with my tongue, moving my head up and down so my hard tongue fucked her asshole.\n\n\"God I love the way you tongue-fuck my ass!\" as her legs and arm started to tremble. She tried lying back on me to steady herself but when she reached down to rub her clit she couldn't hold herself off of me, the whole reverse table position wasn't working. Katy opened her eyes wondering about the break in the action but continued to rub her own clit faster and faster.\n\n\"Get up, lay back on the comforters, then roll your ass up, put your legs up on your shoulders.\" As she did that I placed a pillow under her ass and a couple for me to lean on. \"Good idea,\" she said. Her legs now comfortably in the air she was now able to watch me as I stuck my tongue back in her ass. I slowly pulled out and worked all the way around her asshole then to her perineum and back in again.\n\nShe reached down between her legs with her right hand and started pulling up on her hood and exposed her clitoris. She held it with her other hand, licked her fingers of her right hand and started flicking her own clit as I tongued her ass. She moaned loudly. Katy moaned as well. We glanced over and Katy was now bottomless, legs spread apart and she was working her own pussy over like a mad woman. Her juice was running down her ass and onto the couch cushion.\n\nYou know those moans that are subconscious, the ones that happen spontaneously when you did just the right thing at the right moment? That's what April did when I slowly licked my middle finger and slowly inserted it into her. I licked around her asshole as I buried my finger all the way in and I kissed her ass cheeks, her low soft moan let me know she was close to coming.\n\nHer legs shook, her stomach started twitching and her pelvis started bucking up to meet my finger-fucking her asshole. I continued to lick around her asshole and fingerfuck her ass and she kept rubbing her clit. Her bucking pace picked up, her breathing was faster and deeper. Finally she stopped playing with her clit as she pushed both hands to the floor and let out a low shriek as she came. \n\n\"AAAAHHHHHHHEEEEE!\" as her ass twitched around my finger. I licked around her ass for a moment longer and she looked down at me and said, \"Holy fuck, you eat pussy like a pro but the way you tongued my ass...\" she trailed off.\n\nI smiled at her and looked over at Katy on the couch eyes still closed, now fully undressed and not quite finished with her own orgasm. I looked back at April and smiled again, I held up my ass finger to her and then circled my mouth with it to make her wait for a moment, she understood. I tiptoed away to wash my face and hands and soon joined April back in the living room.\n\nShe sat there fixedly watching Katy's impending orgasm. I motioned my head over to Katy and we both went over to her. April moved to Katy's pussy and licked her fingers. Katy smiled and moved her hand away, April then started lightly licking Katy's clit.\n\nSimply enjoying the show, I kneeled in front of the couch watching. April was eating pussy like a pro, whole mouth on clit, flicking, tonguing and moving her head is small circles. I moved to the couch and leaned in sucking on Katy's breasts...\n\n\"What the...!?\"\n\nShe pulled away from April's mouth and looked at us both. \"What are you doing?!\"\n\n\"Helping you,\" I said.\n\n\"'Helping me', how?\"\n\n\"Helping you get off.\"\n\n\"I was doing just fine by myself and listening to you guys.\"\n\n\"Well we finished about 5 minutes ago, you must not have noticed. We've been watching you, it was hot. We decided we should help you finish.\"\n\n\"But I've never been with 2 people before, let alone another woman!\"\n\n\"Well, first time for everything,\" I said.\n\n\"This is a weekend of firsts then,\" April chimed in.\n\n\"Look Katy, I saw you there leaned back, legs open, and I thought you were hot,\" April said. \"I just wanted to taste your pretty little pussy. I've only been with a woman one other time and we just fingered each other. You just looked so hot lying back playing with yourself, I wanted to help.\"\n\n\"We meant no offense Katy, we just saw you enjoying yourself and wanted to help, honestly that's all it was, we weren't trying to be subversive or anything.\"\n\n\"Well, it just surprised the hell out of me feeling two mouths on me.\"\n\n\"Was it nice?\"\n\n\"...Well...\"\n\n\"It's okay to say it did.\"\n\n\"It did feel nice when I had my eyes closed, it just really surprised me when I felt two mouths on me. I always thought that kind of thing was slutty, especially with another woman involved.\"\n\n\"I'm your best friend; you knew we were coming over here tonight. You must've thought something was going to happen given what you guys did last night, right?\"\n\n\"I just didn't know it would involve me with two people, or you.\"\n\n\"What can I say, you looked hot and I wanted to help.\"\n\n\"Me too, I thought we could bring you over the edge in style.\"\n\n\"I didn't come over here with a plan to eat you out, I was going to let him do it but I just saw you there and your pussy looked so deliciously wet, I just wanted to try it. Besides, who better to be your first experience with a woman than your best friend?\"\n\n\"That's true, I just wished you guys would've given me some advanced warning or something. It surprised the shit out of me.\"\n\n\"But it felt good.\"\n\n\"Yes it did.\"\n\nWith that April slowly moved Katy's hands away from her guarded pussy, she smiled and slowly lowered her head down to kiss Katy's clitoris. Katy hadn't quite relaxed yet so I stroked her arm as I kissed her. After a minute, I felt Katy become less rigid; April was torturously slow about kissing her clit and licking up and down Katy's folds. I kissed Katy again then looked her in the eye and I mouthed, \"Okay?\" she nodded 'yes', smiled and closed her eyes.\n\nApril put both her hands on her friend's mound and started to lick and suck in earnest. I paid special attention to her breasts, licking them, sucking them and nibbling on them as I worked my way down to her stomach and bikini line. She sighed and watched us both as we worked on her orgasm.\n\nPlaying with her nipples, I squeezed and gently pinched her nipples, April was furiously working at her first pussy. She wanted to give her friend an orgasm to remember. Licking up and down, she inserted a finger into her friend and started finger-fucking her. She started to concentrate more on her clit as her friend started panting.\n\nShe inserted a second finger and started to fuck her faster. I sat back and just rubbed Katy's breasts and ran my fingers along her skin. I was enjoying the show and they seemed to be doing fine without me so I just continued to let one hand linger on Katy and let the other wander over to April, lightly touching her neck, shoulders and breasts.\n\nApril sensing her friend was close kept time with her tongue and fingers working inside and outside to the same beat. Katy was starting to sweat, being so close to orgasm once before she was interrupted, she was now starting to sweat and pump her hips into her friends' mouth. April's head bounced with each thrust, always licking her friends pussy and always fucking her with her fingers.\n\nFaster the two of them went at it, I kept lightly touching them both. Breathing became heavier and faster, April even started sweating. Keeping her mouth on her friends pussy she kept flicking her clit and finger-fucking her pussy until finally, Katy grabbed the back of her friend's head and blew.\n\n\"AAAHHHHHHHH!\"\n\nBasking in the afterglow, April and Katy smiled at each other and closed their eyes again, neither had moved from their position. I went to the bathroom to get a hot washcloth for the cleanup. \"I hope this isn't sacrilegious,\" as I handed them a Winnie the Pooh washcloth. This seemed to be an icebreaker as they both laughed out loud and April wiped her mouth and then took her time wiping off Katy's pussy.\n\n\"That was a lot of fun.\"\n\n\"Yes it was.\"\n\n\"Well, we've gotten the one rule out of the way, now it's your turn,\" April said turning to me. \"Sit in the love seat,\" she said.\n\nI moved and spread my legs for her. \"You've licked and sucked my mouth, my pussy and my ass tonight, now it's time to fuck me in all three holes.\"\n\n\"I love the holy trinity.\"\n\n\"Good, because you're going to visit mine tonight. When you were licking my pussy and my ass I just wanted to flip you over and fuck the shit out of you.\"\n\nMy dick was already getting hard as she said this. She moved in between my legs and held my dick in her hand and started slowly sucking it to get it to its full length and hardness. She grabbed the AstroGlide and squirted on her hand and slowly started to pump my dick with it. Her hand was small but her grip was firm, with the AstroGlide it felt almost like a mouth or pussy was on my cock. I moaned my approval.\n\nShe continued to slowly pump my dick then starting licking around the base and taking each of my balls in her mouth, one at a time. She stopped pumping my cock with her hand and just used her thumb to make small circles on my frenulum. That almost made me come right then.\n\n\"Scoot down,\" she said as she took her other hand to lift my balls. I scooted down to the edge of the cushion and she started licking underneath my balls. She licked in circles, then up and down. Every time she went down, she went a little further until finally she started licking my ass.\n\n\"Oh Jesus!\"\n\nShe just smiled up at me as she licked, and continuing to use her thumb near the head of my cock she felt my balls start to rise up a little bit. \"Whoa, slow down boy. You need to fuck me first before you come.\"\n\n\"Then stop doing that because I'm getting close. No woman has ever licked my ass before and certainly never while she used her thumb the way you're doing it now.\"\n\n\"You like?\"\n\n\"Good God yes!\"\n\n\"I just wanted to return the favor. Want to fuck me yet?\"\n\n\"Regulators, mount up!\" This caught a laugh from Katy as April immediately started positioning herself above my cock. She was wet and I was lubricated with AstroGlide and her saliva so she started to slowly settle in on my cock. One long, slow steady plunge and we were sitting skin to skin.\n\n\"Ooooohhhh that feels nice, I'm going to love riding your cock.\"\n\nHer wetness was already evident but once she sat down completely she started leaking out around my cock and dripped down my ass. She wrapped her hands around my neck, leaned back and started slowing rocking back and forth. She breathed in long and slow, eyes never opening she seemed like she was in her own little world. Her sweet pungent odor wafted up between us as the squishes of her movements started picking up pace.\n\nI'm glad she sat on my cock, I can fuck all night with woman on top so I was guaranteed not to nut for a long time and in fact, even go back to my starting point before we started fucking. I could enjoy the show before me and she could have as many orgasms as she could handle in one sitting. Katy for her part was watching her friend get off on my dick.\n\nApril started moving back and forth faster and she let out a guttural growl. Her hands tightened around my neck and she threw her head back. Letting go with one hand she looked like she was a rodeo rider about ready to be bucked off her horse. Grinding faster and harder she started rubbing her breasts with her free hand, looking like she was going to almost pass out.\n\nHead back and grinding down harder, she was bouncing up and down hitting my balls with every down stroke. Her eyes started fluttering as she was breathing heavier and heavier. With one final thrust she hit it off, she gave herself an orgasm.\n\n\"UUUHHHhhhh!\"\n\nGiving her a minute to come down from her orgasm high, I asked, \"Was it good for you?\"\n\n\"I've had better,\" without missing a beat.\n\n\"Oh yeah?\"\n\n\"Yeah.\"\n\nWith that, I smiled and grabbed a hold of her as I stood up with her still impaled on my cock. I bent over and laid her down on the comforters. I grabbed both of her legs and folded them up to her chest. In prime position now I started fucking her using small strokes.\n\nMy strokes got longer and longer but never changed pace, this went on for a few minutes. Keeping the pace for a few minutes I then slowed slightly but started to slam a little as well. She greeted each thrust with a moan of approval. With the encouragement I started getting a little rougher by slamming a little harder and a little faster.",
        "She started moaning louder and breathing heavier. She opened her eyes and we locked our gaze while I fucked her harder and harder. She smiled slightly and spread her arms out to brace herself. I took my queue and really started to hammer her hard. Her moans became grunts as she was both bracing herself and pushing back at me as I pumped. Katy, naked on the couch watched as we fucked. She was rubbing herself in pace with our rhythm, giving new meaning to the term rhythm method.\n\nApril started to stiffen and her eyes started closing so I eased off and said, \"Easy there Ramjet the Rookie, you're not coming yet.\"\n\nShe let out a moan/whine as she opened her eyes again and looked at me, \"You're a bastard.\"\n\nI smiled and let her legs down. Switching to missionary position I continued to fuck her slower and slower with longer and longer strokes, almost all the way out and all the way back in. She smiled at me as she apparently loves to be teased.\n\n\"...I know I'm a bastard and all of us bastards know each other...\"\n\nI'm up for the job.\n\nI sped up my strokes and started to hit it harder. She put her hand down between me and her clit and smiled as the pressure made her shiver. Faster and faster I pounded her pussy, she groaned in agreement. \n\nHer shivers never ended as she started to pant. Sweat was running off of her body as my cock was putting her pussy through a workout. Katy continued to rub her clit in pace with us and we fucked, she used her other hand and started finger fucking herself with alternating rhythm.\n\nApril's breathing was labored now, she was losing her own rhythm as her orgasm was approaching. She brought her fingers up to her face and she played with her pussy juice in front of me. She licked her fingers then stuck them in her mouth. \n\nI fucked her harder.\n\nShe put her hand back down between us and she quivered again. A few more powerful strokes and she quivered again.\n\n\"Are you close?\"\n\nShe couldn't answer. She was starting to tighten up again, readying herself for another orgasm.\n\nI stopped fucking her.\n\nShe opened her eyes immediately and let out a whimper, \"What the fuck are you doing? I was so fucking close!\"\n\n\"I know, that's why I stopped.\"\n\n\"What the...?\"\n\n\"Get on your hand and knees and I'll show you.\"\n\nShe nearly sprained her ankle trying to switch positions as fast as she did. She knelt down on a pillow, put her hands down and she flipped her hair as she looked over her shoulder at me and gave me a nice randy smile. I stood up and walked over to the couch and stood in front of Katy.\n\n\"I need some lubrication.\"\n\nShe scooted down the couch, one hand on her clit and one on my cock, she took my cock in her mouth as far as she could.\n\n\"Really lube it up.\"\n\nShe licked her tongue around my cock head and left a saliva trail all around it. She worked back and forth like that for a minute or so and sucked the head as she removed her mouth from my cock.\n\n\"That's hot,\" shot April.\n\n\"Thanks Katy.\"\n\nI can't explain it. Most guys when they get a blowjob get closer and closer to orgasm and blow early if they've been warmed up. For me it's just the opposite. If a woman starts a fuck session by blowing me or interrupts a fuck session by blowing me, it's like giving Popeye his can of spinach. I get Superman dick and can fuck almost as hard and fast as I want to without cumming.\n\nKaty went back to rubbing herself down and I knelt behind April, cock ready for entry. I slipped just the head in and ran it up and down her slit moving in and out slightly. As I continued to do that she grabbed a pillow and rested her forearms on it and then her head, she lifted up to glance back and smiled.\n\nI returned my attention to fucking her. Deeper and deeper with each stroke, I finally hit bottom in a few minutes and I started to thrust harder. I gripped her hips tighter and started hitting it quicker and quicker. Her moans were louder, her breathing heavier. Katy was sweating now as well, I'm not sure how many orgasms she had watching us but it was clear from the pace of her fingers on her clit, she was close to another one. Her face was flushed and her eyes were closed.\n\nMy pace quickened and I started feeling a tingling sensation deep down that signaled my orgasm was approaching in a few minutes. I quickened my pace even more and April started letting out low throaty groans. I gripped her harder and fucked her in earnest.\n\n\"I'm going to come on your dick. Fuck me harder!\"\n\nI grabbed her ass cheeks and massaged them hard as I continued to pound her. She kept moaning louder and louder. She stopped thrusting back at me and started quivering. I decided to help her out by licking my thumb and rubbing her asshole round and round. \n\n\"I want you to come with me.\"\n\nShe reached back between her legs and started to tickle and massage my balls with her fingers.\n\nI love that. That is ultimate trump card for me, no matter how far away from orgasm I am, I will come quickly when a woman does that. Sometimes even if she does it for a short time and stops I still have a difficult time not cumming.\n\nI groaned approval but I didn't want to come yet, this was too good. So I thrust hard with every word I said, \"Don't... do... that!!!\"\n\nWith that she came \"AAAAAAAAGGHHHHHH!\" and collapsed on the comforters. I was so close to coming, if she would've touched my balls again I would've come inside her.\n\n\"That was fucking sexy,\" Katy said from the couch.\n\n\"Why didn't you want to come with me?\"\n\n\"We still have one hole to go.\"\n\nApril turned back to me and smiled a big cheeky grin.\n\nAs she lay on the floor I ran a finger up and down the length of her ass crack. Her asshole puckered every time I passed it. Katy laid down on the floor next to April and they talked small talk about something that I wasn't paying attention to, I had a beautiful tight little ass in front of me and a hard cock with a purpose in mind.\n\nI licked my forefinger and started circling her rosebud. Increasing pressure as I moved toward the center, she arched her back towards my hand. I had the first digit in and started wiggling it slowly. She brought her right knee up off the ground and started rubbing her clit at the same time.\n\nI moved in up to the second digit and I started kissing the back of her neck and upper shoulders. She started getting goose bumps. \"I love your finger.\"\n\n\"Well we're just getting started.\"\n\n\"I know, I can't wait for your cock.\"\n\nI had my whole finger in her ass now, working it slowly in and out. I inserted my middle finger in her pussy and worked it slowly as well. Both fingers going in and out I could feel them both moving with just a small layer of flesh between them. \"Ohhhhh yes!\" she replied to my fingers as she play with her own clit.\n\nI made my finger wet enough and making small circles with both fingers, I was loosening her up a little bit for what was to come next. I stopped, pulled my fingers out put them together and started slowly pushing them in.\n\n\"Wait a minute,\" she said as she got herself back up into her previous doggie style position. \"OK, go ahead.\"\n\nHow considerate of her, I'm getting ready to fuck her ass and she's getting into position for me. I knew I liked this girl. I grabbed the bottle of AstroGlide and hovered it above her anal opening and dropped a few drops down onto it. I quickened the pace of my two fingers working in her ass.\n\nShe breathed in through pursed lips. \"What? Does it hurt?\" Katy asked.\n\n\"Yes a little bit but it feels good once the initial stretch is over with.\" Katy was laying down next to April's head watching the whole scene and seemed amazed at her friend's willingness to be ass-plundered.\n\nTwo fingers one digit at a time, a little AstroGlide and finally my fingers reached their end. A little more lube and I started working them in and out in full strokes. April continued to play with her slippery clit as I moved my fingers in and out.\n\nI got up on my knees with my cock still hard, \"Katy, come here.\" She got up and moved to me, near April's ass. \"I need some lube on my cock.\"\n\nShe bent down to suck my cock like a good girl and I smiled and said, \"No you dork, I need AstroGlide on it.\"\n\n\"You're a bastard!\"\n\n\"I know, we already established that but that still doesn't change the fact that I need my cock lubed up.\"\n\nI handed her the bottle of AstroGlide and she squeezed some into her hand and started rubbing my cock with it, slowly all the way up and all the way down. She varied the pressure as she stroked and man did her hand feel good, the woman knows her way around a penis. \"Now more on her ass,\" as I continued to work my two fingers in and out of April's ass.\n\nI sped the pace of my fingers up as Katy dropped more lube on April's ass. After a minute and a lot of lube, I dislodged my fingers and moved my cock closer to her ass. \"More lube.\"\n\nKaty did as she was told and dropped more on her friends ass. I put my hand on top on the small of her back and guided April's ass towards my soon-to-be happy cock. My cock head was at her rear entrance and I started slowly pushing it in. April pushed back a little and whimpered slightly.\n\n\"It's difficult to think that it would still hurt with that much lube, why do you do it?\"\n\n\"Because...\" as she pushed back a little more and she bore down slightly like she was going to the bathroom and my head popped through her initial ring, \"...it...feels...really...good...\" She was concentrating on getting my cock inside her ass and she trailed off.\n\nKaty's mouth dropped open as my cock head disappeared. Inching forward I went slowly but surely. After a few minutes I was a little more than halfway in. Katy gave me the bottle of lube then went and laid back down near her friend and held her hand. \"Are you all the way in yet?\"\n\n\"No, just a couple more inches to go.\"\n\n\"Jesus Christ, it feels like I'm giving birth!\"\n\n\"Almost there.\"\n\nBriefly turning her attention back toward Katy she said, \"I love getting fucked in the ass. It hurts starting out but it is a lot of fun once you get going.\"\n\nInch after inch I finally reached bottom and said, \"Done.\"\n\n\"Good.\"\n\nI let her get used to having my cock inside her ass then I used the same process going out as I did going in, slowly and surely I moved out of her ass an inch then back in an inch for a few strokes. Two inches back and forth for a few strokes, then three inches and so on until I was moving back and forth with slow full strokes. Her ass was starting to relax around my cock, that's a good sign.\n\nStill holding her friends hand, Katy came back toward me and watched me fuck her friends' ass. She kissed me and we started making out as I ass-fucked April. Katy reached down and massaged me around the base of my cock, I moaned.\n\nWith my free hand I reached down to start fingering her slippery cunt. She let out a loud sigh and grabbed my hand with hers. April started with playing with herself as I fucked her ass. I picked up the pace as her ass was starting to expand to accommodate my cock.\n\nKaty broke away and sat in front of April. April got the idea and raised up on her elbows, Katy scooted forward onto her arms putting her pussy right in front of April. April bobbed her head down and started licking the pussy in front of her. Katy grabbed the back of April's head and started thrusting her cunt into her friends' face.\n\nI was getting close again, I started fucking April so hard and fast that she stopped eating Katy's pussy until Katy grabbed her hair and jammed her face back into her pussy. Katy used her other hand to spread her lips so her friend could have better access to her clit.\n\nApril reached one of her hands back and started to massage my balls. The tingling went from my balls up and down my entire body. I sped up my thrusts and started fucking her ass with reckless abandon. She moaned in pleasure into her friends' pussy. Katy moaned with the extra vibration.\n\nFucking her as hard and as fast as I could, the tingling that started a minute before was reaching the point of no return. I asked April, \"Where do you want it?\"\n\nShe pulled her face off of her friends pussy and said, \"Come in my ass.\" Katy forced her face back down on her pussy and she started bucking faster and harder. \n\nThe tingling was complete now, I was balls deep in her ass and I finally let myself release. \"AAAAAAARHHHHHH!\" But I still kept pumping through it as April screamed her orgasm into her friends' cunt, \"MMMMMPH!\" April not wanting to be outdone, kept licking her friends clit while I kept fucking her ass.\n\nA few seconds later, Katy let loose her own orgasm, \"OOOOOOOHHHHHHH!\"\n\nAfter a few more pumps I collapsed on April's back and she soon fell forward onto Katy's legs. All of us lay there sweating and smiling. The afterglow was unbelievable and I dismounted to grab two hot-as-I-could-stand wet washcloths from the bathroom for the cleanup.\n\nWhile the two of them were cleaning each other off, they said, almost in unison:\n\n\"That was fucking-A hot.\"\n\n\"That was fucking hot.\"\n\nI smiled, turned away from the clock that read 11:30 and said, \"Yes it was and it's still early.\"\n\n\n\n<CENTER>Chapter 4</CENTER>\n\n\"Well it may be early but there's no way you're getting my ass again tonight. That fucking felt good as fuck but I won't be able to sit right tomorrow.\"\n\nI smiled and turned towards Katy, \"So I guess that leaves your ass then.\"\n\nShe didn't say anything but just looked at me sheepishly in return. She was wavering from her ass-as-exit-only stance so it was best not to push her too far too fast, so I changed the subject. \"April, how many times have you had anal sex?\"\n\n\"This was the third time and it was by far the best. You can ass-fuck me anytime you want.\"\n\n\"Except again tonight.\"\n\n\"Right.\"\n\nWe all lay around naked for a little while as we drank the rest of the Jack and Diet Coke. I started thinking about the night's earlier activities and my cock started growing with the recap. They both noticed, to which April said, \"Stand up.\"\n\nWho was I not to? I stood and took a few steps to where they were both sitting. I bent over and picked up two pillows and placed them on the floor in front of me. They knew what to do.\n\nPositioning her knees on a pillow, April reached out to my cock first using one hand to slowly jack me off and the other to massage my balls. My cock reached its full length in a few minutes and she started sucking on my cock head, flicking the opening with her tongue as she continued to jerk me off. Just keeping the head in head mouth, she rotated her head so my cock felt all of her lips.\n\nKaty was watching and waiting for her turn, rubbing her breast with one hand and her clit with the other. A light bulb seemed to go on for her as she took her hand from her breast and started massaging her friends' clit with it.\n\nWhile jerking them both off, she scooted closer to my cock and kissed her friend on the cheek, April moved her head and moved my cock to Katy's mouth. Katy went down as far as she could on my cock and bobbed her head up and down on it for a minute or two. April started jerking me off while I was in Katy's mouth as Katy's hands were occupied.\n\n\"I like that, I wished I could have that every day.\"\n\n\"What? Two women sucking your cock?\" April replied.\n\n\"Yes. That's one of the sexiest things you can ever see as a man, two women orally appreciating your cock.\"\n\nKaty must've been doing a very good job because April stopped our conversation and starting trying to make out with her while she was sucking my cock. Katy disengaged from my dick and the two of them started making out in front of me. \"I am the coolest guy I know,\" I thought. I continued to slowly jack myself off as I watched the show in front of me.\n\nThe two of them starting exploring each others' tongue and mouth as they faced each other kneeling on the pillows. Katy was still rubbing her clit as well as her friends. April reached over and started rubbing Katy's clit.\n\nBoth of them were fairly wet at this point as you could smell the sex in the air. Katy was concentrating on the clits but April used her fingers and inserted two into Katy's pussy and two into her own. Both of them moaned under their breath as they fingered each other and made out.\n\nKaty started to sit back a little bit bearing down, her breathing pace had quickened and she started to lose rhythm, she was going to come soon. April sensing the proximity of orgasm started finger-fucking herself faster and went deeper into Katy's cunt as well.\n\nKaty unconsciously spread her legs and they started to shake as April's hand was moving like a blur. Finally she moaned into her friend's mouth and shivered to her orgasm as she sat back on her heels. I never moved, I stood there watching them get each other off as I slowly jerked off. Twisting my hand around the head of my cock and then making small strokes at the top of my cock.\n\nCatching her breath for a second or two, she opened her eyes and stared at April. She started moving her hand up and down on April's clit faster than she did before. She reached behind April's head and brought her face to her and deep-kissed her. April was moving her hips in time to Katy's hand.\n\nApril used both hands and grabbed Katy's hand, she pulled it tight against her cunt and started humping her friend's hand faster and faster. She tried to throw her head back and scream her orgasm but Katy held fast and smothered her scream. The orgasm came but the sound was muffled.\n\nKaty seemed please with herself as after April's orgasm she smiled and started kissing her friend sweetly. April rose back up off her heels and responded in kind. I was still a step away, slowly jacking myself off, enjoying the show. After a couple minutes, I stepped forward and put my dick close to their faces.\n\nThey sensed my presence, opened their eyes, moved both their mouths over my cock and continued to make out with my cock in between their lips and tongues. Katy ran one hand up and down the inside of my right thigh and the other to tickle April's breasts. April used a hand to massage my balls and her other hand to tantalize Katy's breasts and shoulders.\n\nEvery once in a while one of them would take the end of my dick in her mouth, lick and suck for a few seconds then resume making out around my cock. Eventually each one let a hand of theirs find the other's clitoris, massaging each other slowly as they continued to make out with each other and make out with my cock. Things started to get more serious as Katy turned to me and started using her thumb trick on the base of my cock this time instead of just below the head.\n\nThe result was the same.\n\nI grabbed the back of her head and moaned. I felt like pushing her head all the way down, that's how good it felt but I didn't. She moaned as April started really massaging her clit. She dislodged my cock from her mouth and said, \"Scoot back.\" As I did so she scooted forward. She spread her legs and looked at April and then looked down. April took her queue.\n\nApril scooted in between Katy's legs and Katy straddled her friend's face. Katy continued to work her mouth and hand magic on my cock. She massaged my balls with one hand and lifted the hood off of her clit with the other, April feasted hungrily.\n\nAfter a minute or two Katy was starting to moan loudly and grinding into April's face. I looked down at April and licked my middle finger then thrust it up into the air. April understood and did as she was told. She licked her middle finger then started teasing Katy's asshole with slow circles then one quick jab and she was in to her first digit.\n\nKaty squealed with delight, ground her pussy down even more onto April and moved both of her hands down to her clit, one to hold the hood and the other to flick her clit as April licked it as well. When she removed her hands from my cock, I grabbed her head with both of my hands and started to face fuck her.",
        "April's finger went to the second digit and Katy damn near lost everything, she couldn't move anymore she just knelt there and took all the pleasure that was coming her way. Between my face fucking her, a finger in her ass, her friend's tongue on her clit and in her tunnel as well as her own hands on her clit all she could do was sit there.\n\nShe started to buck unconsciously with her impending orgasm, April's finger reached the bottom and Katy lost it. She shrieked, lost her balance, fell to one side, lost my cock from her mouth and fell to the floor in what looked to be an almost-seizure but the smile on her face and the sweat dripping from her brow said otherwise. April and I smiled as I knelt down to move the bit of hair from Katy's face. April positioned herself underneath me and started licking my balls.\n\nShe reached up to pump my cock a little bit as she licked my balls and though I was nowhere near coming, I had those tingles all over my body again and shivered. Katy was resting watching our show for a few minutes and seemed to be enjoying it. We locked eyes and I looked down at April's pussy, which I hadn't realized she was using her free hand to rub, and Katy got the point.\n\nShe moved between her friends legs and buried her face in her mound. I have to give it to her, she needs no preliminaries, she just dives right in to sex and I like that about her. As she started working April with her tongue, April spread her legs wider and moaned.\n\nApril continued to lick my balls and pump my cock. I started to lean forward on my hands and knees and positioned myself above her mouth and she started sucking the end of my cock. She reached behind my ass and started tickling my ass crack but she also pulled down on my ass so I started to face fuck her. She pulled down a few more times giving me an indication of how far down she wanted me to pump.\n\nSo there we were, one massive orgasm out of the way for Katy, one coming for April and me pumping April's face with my cock in a quasi-69 position with a front row seat of Katy eating April's pussy. Katy was licking up and down April's pussy lips and April started to thrust her pelvis up every time Katy brought her head close. \n\n\nApril used one hand to keep me from thrusting too deep and used the other to grind Katy's face into her pussy. She was moving her pelvis in circles now, holding Katy's face down on her pussy. Katy was moving her head in circles to keep rhythm with her friend and licking her clit the whole time.\n\nApril's moaning was muffled but still audible. She was moaning louder and louder now and she started grinding harder and faster into Katy's face. Her knuckles were white on her friends head trying to hold Katy to her pussy.\n\nI slowed my face-fucking pace to a crawl and went down a little further with each stroke. April pulled my ass down further and she took me almost all the way in her mouth. She stiffened, held me in place there and screamed a muffled scream on my cock as Katy finished her off.\n\nThe love seat in my apartment is a really good height for sex; I've fucked my girlfriend in it several times. She'd put her knees in the seat and lean forward towards/over the back; the oversized cushions are incredibly soft and with the pillows underneath her stomach she could be in a doggie-style-like position with little or no effort on her part.\n\nI held my hand out to Katy and she grabbed it. I led her to the chair, turned her to where she was facing it and helped her get into it the way I like to fuck my girlfriend.\n\n\"Are you going to fuck me in the ass?\"\n\n\"Yes.\"\n\nI looked down at April and I motioned her to move to the back of the chair. She grabbed the bottle of AstroGlide on her way there and she ran her fingers down her friends back gently as she passed by. I put a hand on Katy's lower back and used my other hand to start slowing inching into her pussy with my fingers.\n\nKaty was already wet but this was making her slippery yet I wanted more. I held out a cupped hand to April and she squeezed some lube into it. I rubbed it all over my dick then Katy's pussy and ass. As I did this, April grabbed a padded chair to sit on while she watched the show. \n\nI worked my fingers in and out of Katy's pussy until she was ready. I stood all the way up and then pushed my cock inside of her dripping pussy. As I slowly did this, I used a thumb to start massaging her asshole. She moaned with pleasure.\n\nApril held her hand and moved the hair from her face, they shared a smile. Katy's was one of slight apprehension; April's was one of quiet reassurance. I started fucking Katy with long slow strokes and she was pushing back to meet me. April rubbed her friends' upper back gently as she watched me fuck her friend.\n\nShortening my strokes I pulled almost all the way out and fucked her with just my cock head. I licked my first finger and started rubbing it up and down Katy's ass crack, again her asshole puckered every time I got close. I placed more pressure on my finger as I rubbed and she started moving her hips in motion with it. I held out my finger so April could put some lube on it and once she did, I slowly put the first digit in Katy's ass.\n\nKaty squealed as my finger is bigger than April's but instead of jumping forward she clamped her ass around it and ground her ass around. Still using just my cock head to fuck her, I quickened my pace. I slid another section of my finger into her ass and she thrust back towards me.\n\nShe's almost ready.\n\nI grabbed her hip with my other hand and started to give long, fast thrusts spaced out a few seconds each; she grunted with each one. I slipped my finger in completely and started alternately finger-fucking her asshole and fucking her pussy. She threw her head in the air and her hair flipped around right along with it, I love that.\n\nAlmost breathless she was unable to verbalize her orgasm but she thrust back against me and froze there, hugging the pillows and biting her arm in orgasm, screaming through her teeth.\n\nI slowed my pumps down and gave her long strokes the length of my shaft so I never broke contact with her. My finger was still in her ass and I started to wiggle it in widening circles. I motioned for April to give me more lube so she lubed my middle finger as well. I pulled out my finger and put the two together and slowly started to advance them into Katy's ass.\n\nEvery time I stoked inside her pussy I inched forward into her ass a little more with my fingers. I twisted them slightly each time trying to stretch her out a little more. Her face was a mixture of pleasure and pain but she never said a word she just stayed in place to receive more of my fingers. I obliged.\n\nAfter a few minutes my fingers were completely inside of her ass and I was still filling her pussy with my cock. I continued to thrust my cock into her pussy but never moved my fingers. Pumping a little faster with each thrust she was breathing heavy but couldn't speak.\n\nI kept picking up the pace and she kept pace right with me and then she did something surprising, she used both hands and spread her ass cheeks to accommodate my fingers. She was ready.\n\nI started fucking her hard and fast and I moved my fingers in and out slowly at first. She started bucking back at me like a wild animal and I was just trying to hold on so she didn't fall off the chair when she thrust back. I kept fucking her pussy and made deeper and faster thrusts with my fingers, she kept meeting me pushing back against me.\n\nShe was open-mouthed, making odd noises but not really vocalizing anything. I kept fucking her and she was moving her hips in small circles back towards me. The circles became faster and smaller until finally she stopped. Her whole body tensed and she buried her face into the love seat cushions and shivered for about 30 seconds then fell limp against the pillows beneath her.\n\nI smiled to April and she smiled back. \"Hold on,\" she said then disappeared down the hallway. She reappeared and she was holding something shiny and silver in her hand. \"I think we should capture what comes next on video,\" holding her camera up.\n\n\"I agree.\"\n\nKaty, head still buried in the cushion, simply nodded in agreement.\n\n\"Katy if you want to stop at any time you just say so, okay?\"\n\nKaty looked back and smiled a tired smile. She had the look of someone who had been thoroughly ravished, wanted more but wasn't sure if her body was up for it. She now wanted her ass to be taken but she was almost spent, the last two days of orgasms had almost worn her out. I'm not sure she had had this much sexual activity in such a short period of time in her life before and it was beginning to show, she was satisfied but clearly nearing the end of her energy.\n\nApril grabbed the camera and the lube, she handed me the lube and held out her hand so I squeezed some into it. She started to slowly bring my cock back to full life, capturing the moments on film. Slowly but surely she worked my cock up and down with her hand stopping once in a while to get more lube. After she put my cock at full mast she turned her attention toward Katy's ass.\n\nShe concentrated on lubing around her hole first, making small circles around it and making sure the lube was slightly warm before touching her friends' ass. After the outside was sufficiently lubricated, she stuck her forefinger in up to the first knuckle, twisted it around a little bit then went to the second knuckle, Katy backed into her friends' finger. I gently stroked my cock watching the scene, getting it ready for Katy.\n\nOnce April's first finger was all the way in she pulled almost all the way out, I dropped some more lubricant on Katy's asshole and April stuck her second finger in. In a lingering thrust she inserted both fingers simultaneously all the way inside Katy's ass. Katy let out a low, almost inaudible groan. April started finger fucking her friends' ass and then she said, \"Katy, it helps to play with your own pussy while someone is fucking your ass. Sometimes women can orgasm from pure anal sex but sometimes they need a little help with their own fingers or their partners.\"\n\nI don't know if it actually happened or not but my cock seemed to get hard as a steel rod as I watched Katy start to play with herself and her friend finger-fucking her. I stopped stroking my cock and took a step closer; April took about a minute to withdraw her fingers then steadied the camera on the action and used the zoom to get closer to it. Katy looked back and felt my hand on her back, she also saw me grab my cock. \n\nShe knew what was coming.\n\nI put the head of my cock at her anal opening and started to press. I dropped some more AstroGlide at the top of her ass crack and let it slide down her ass and around my cock head. I pressed a little further to start my head going in then grabbed her hips to bring my cock a little more inside her. Once I got it started better I said, \"Now bear down like you're going to the bathroom.\"\n\nKaty did as she was told and with a short burst my cock head was fully inside of her ass. She was still fingering herself and April was watching with eyes wide open, wishing she was getting fucked as she watched the hot scene in front of her. I pushed forward about an inch and Katy groaned/whimpered.\n\n\"Are you okay?\"\n\n\"Yes but please take it slow, be gentle.\"\n\n\"No worries, I know how to have anal sex. Remember we can stop whenever you feel like it.\"\n\n\"I know, that's part of the reason why we're doing this.\"\n\nI moved forward with another inch, Katy stopped rubbing her own clit and she started to stiffen up. I used my thumb to quickly rub her ass crack just above my cock and she started almost convulsing and yelled into the seat cushion she was facing and shuddered to her first ass-inspired orgasm. Laying motionless I inched forward and was now almost halfway in, Katy resumed playing with herself. April stood with legs spread wide and started fondling herself as well.\n\nEvery time I advanced in an inch, I dropped more lube onto her ass crack and my cock. After about 10 minutes of working my cock inside Katy's ass, I reached bottom. \"I'm all the way in.\"\n\n\"Good, I wasn't sure how much more I could take.\"\n\n\"Okay, you should start moving with what you're comfortable with. Small thrusts back and forth or small circles or some combination of the two and be sure to continue to work your pussy!\"\n\nKaty did that, gently rocking back and forth moving my cock in and out of her ass in short thrusts until she was up to an inch, then two, then...\n\nShe stiffened up, stopped working her own pussy, threw her head back and let loose her second ass-orgasm, \"AAAAAHHHHHHhhh!\"\n\nApril said, \"That was fucking hot!\" as she sped her hand up on her own clit. She set the camera down on the counter next to her, used both hands and started to reel. Her orgasm hit and she almost fell down with the shaking. \"I thought it was fun to ass-fucked but holy shit is it hot to watch Katy get fucked in her ass.\"\n\nI kept dropping lube here and there as Katy moved to larger and larger thrusts. Almost all the way out and definitely all the way back in. Still taking her time I started to take over the thrusting, Katy fully concentrated on her ass pleasure and her hand on her clit. April moved to the front of the chair and held up the camera to get a good shot of me ass-fucking her friend.\n\n\"...Oh...\"\n\n\"...Fuck...\"\n\n\"...Me...\"\n\nWas all Katy could manage with her first real ass-fucking. After a minute or two of that it was clear April wanted to get in on the action so while I ass-fucked her friend, she climbed on the back of the chair and planted her pussy in front of her friend. She held the camera and focused it down on her pussy, Katy wasted no time in started to eat her friend out and she did so vigorously.\n\n\"Are you ready Katy?\"\n\nShe nodded her head into her friends' pussy and used her free hand to spread one of her ass cheeks a little farther apart. I started to slowly pick up the pace; instead of a long stroke every minute or so, the strokes were now about every 30 seconds \u2013 most of the way out and all the way back into her tight little virgin ass. Katy started moaning, which gave April some extra vibration on her pussy as she was getting eaten and April moaned as well.\n\nI love listening to the sound of women having an orgasm or simply working up to one. The tingles started appearing in my balls. My pace quickened yet again, the thrusts were coming a little harder and a little faster each time. April grabbed the back of her friend's head and started thrusting her pussy into it, Katy was eating her pussy as hard and as fast as she could. April was barely able to keep the camera on the action, let alone having it focus.\n\nI started using my thumb again to tease Katy's ass crack during my thrusts and she started thrusting back to meet me. She started moaning more and more into her friend's pussy, April leaned back to put her back on the counter and continued to face fuck her friend with her clit until finally she bucked up one last time, held her friend's face to her cunt and let her orgasm go with a loud shriek, \"EEEIAIAEEIE!\" Even while leaning back she still almost fell off the back of the chair with her orgasm.\n\nShe composed herself briefly and watched as her friend was still getting ass-fucked. Katy was starting to breath really heavy in time with my thrusts, her hand working furiously on her pussy. I grabbed her hair and pulled it slowly and steadily until she started an almost hiccup like sound. She jerked her head down and rested it on her friends thigh and let out her own orgasm, muffled though it was, \"MMMMPHHHMMM!\"\n\nI continued to fuck her ass, the strokes were full, long and hard. I wasn't sure if she was ready for an ass pounding until she said:\n\n\"What the fuck are you waiting for? Fuck me like you mean it.\"\n\nI pulled almost all the way out, lined the top of my cock with AstroGlide, capped it and threw it aside. I thrust as hard as fast I could and after two strokes my cock was balls deep in her ass. April was holding the camera up so she had a good angle on the action and I started pounding Katy's ass hard and fast.\n\nAfter a series of half thrusts I went back to the full strokes hard and fast. Katy had her arms around her friends' waist and was holding on as she got the first great ass-fuck of her life. She was half moaning half whimpering as I pounded her ass into submission.\n\nShe moaned and her breathing was heavier and faster, mine was the same. I was almost panting as the sweat dripped off me. My balls were tightening and the tingles were starting. I didn't want to come yet so I needed to distract myself a little bit.\n\nI don't know where the inspiration came from but out of nowhere my right hand came down with a loud crack on Katy's ass. She whimpered slightly but almost before she was done with the whimper she groaned. I smacked her ass again and she did the same thing. The tingling in my balls was still there but it stayed where it was.\n\nI fucked her ass as hard and as fast as I could and every once in a while I smacked her ass for good measure. My balls were no longer slapping against her pussy, they were up almost completely and the tingling I felt was almost the entire length of my body.\n\n\"Flip your head back!\"\n\nShe did and I grabbed her hair with both hands and pulled a steady pull. I thrust my cock into her ass like my life depended on it. Faster and faster, I couldn't believe I hadn't come yet, the scene was fucking hot and her ass was so tight but I just kept pounding her ass time after time.\n\nThe tingles completely covered my body and still I kept fucking her ass, I was running out of breath and sweating like a madman. Then it finally hit me. I grabbed all of Katy's hair in one hand and pulled it a little more and with the other, I laid a good smack on her ass.\n\nShe let out a moan-shriek that made her sound like a wild banshee, she hugged her friend hard and convulsed to a window-rattling orgasm, \"EEEEEIAAIIEEOOOOO!\" That sent me over the edge. I thrust into her several times as I dumped my load into her ass grunting like an animal as I did it.\n\n\"UNNH... UNNNH... UNNNH...\" until my load was spent inside her ass. After a minute or so I dismounted and fell back onto the couch, Katy collapsed in the chair.\n\nWith that April shut off the camera and said, \"Anyone for a shower?\"\n\nNeither Katy or I said a word, we were both spent and didn't move.\n\n\"Suit yourselves, I'm going to hop in now, join me when you feel the need.\"\n\n<CENTER>***</CENTER>\n\nOne by one we joined her in the shower and then one by one we got out, dried ourselves off and then went to the queen-sized bed in my bedroom. Me, then Katy then April, none of us were awake long.\n\n<CENTER>Chapter 5</CENTER>\n\nI woke first and oddly enough, we were all still in the same position we fell asleep in. I guess we were really tired and with good reason. I left them in bed and went to the kitchen, back to where this all started...\n\nI started breakfast; three omelets with tomatoes, green peppers and cheese, homemade salsa to go top, sour cream if they wanted it. Chunky hash browns with freshly crushed pepper and garlic butter, turkey sausage links to be completed with cranberry juice, milk and fresh coffee from the cappuccino maker.\n\nI was finishing up cooking the meal when I heard footsteps behind me; I kept cooking playing like I hadn't heard. Within a second I felt one hand up the back of my neck, one come around to my cock. She turned my head and kissed me, it was April.\n\n\"Good morning!\"\n\n\"Good morning! Go wake up Katy and let's eat!\"\n\nShe kissed me again then patted my ass on her way down the hallway. A minute later she returns with a sleepy Katy in tow. \"Breakfast?\"\n\n\"Yes, dig in.\"\n\n<CENTER>***</CENTER>\n\n\"That was monumental last night, my ass still hurts. I can't sit straight. I'm glad these bar stools are padded,\" Katy said.",
        "\"He hit it pretty had didn't he? So you like?\"\n\n\"Yeah, I like!\"\n\n\"Me too!\" and I smiled. \"We slept late didn't we, must've been tired.\" \n\n\"No shit!\"\n\nFinishing her coffee, surprisingly it was Katy who jumped up and said, \"Anyone up for a roll right now?\"\n\nApril and I looked at each other then back to Katy. Katy was already walking back towards the room shedding her pink camisole on the way. April and I jumped up to follow her, watching her little ass shake as she walked down the hall.\n\nBy the time we got into the room she was already naked and on all fours in the bed. \"April, get in front of me, I want your pussy now. Michael choose your hole,\" as she threw me the AstroGlide.\n\nApril took off her clothes and laid down on the pillows in front of her friend, Katy bowed her head down to her friends' pussy and started licking like her life depended on it. April was already hot and seemed ready to blow. Being told what to do and having her friend eating her pussy so ravenously was almost enough for her to come instantly, she's that orgasmic.\n\nI knelt behind Katy, my cock already growing hard and stuck my tongue in her pussy. Licking up and down several times she stopped eating her friend briefly and used her two hands to pull her ass cheeks apart. One good ass fuck and she's an anal slut, I love a quick study.\n\nAs I pulled her cheeks apart, I tongued her hole as deep as I could. Rotating my tongue as best I could, I made her squeal into her friends pussy. Propping herself up on one elbow, she used that hand to finger fuck April, she used her other one to start playing with herself.\n\nApril was enjoying her ride so far, Katy licking up and down her lips, stopping every once in a while to flick her clit with her tongue. Working her fingers in and out, she brought April close to coming then stopped. April whimpered in response and kept thrusting her pelvis up to her friends' mouth. Katy kept her tongue out but didn't engage her friends' pussy with it, April was trying to get herself tongue-fucked but her friend was intent on teasing her.\n\nI spread Katy's ass cheeks and started licking long strokes up and down her crack. I stopped from time to time to lick around her hole teasing her as well.\n\n\"Are you going to fuck my ass or not?\"\n\nI didn't answer. I just continued to lick her ass. Stopping for a moment I licked my middle finger and \n\nstarted inserting it into her ass. Continuing to lick her ass I slowly finger-fucked her as she again bowed her head and started eating her friends' pussy again, this time faster and harder.\n\nApril's response was immediate. She grabbed her friends' head with both hands and started grinding her pussy into it. With her back against the wall she was breathing heavy and her face was turning red. Moving one hand to the back of Katy's head she leaned down away from the wall and started bucking.\n\nUsing my middle finger I was fingering Katy's ass while licking her ass around my finger as I had done last night. I used my other hand to rub my cock and to fumble to find the lube that was on the bed somewhere. Her ass was firm and her asshole was tight, it puckered around my finger every time I pulled it out.\n\nKaty kept finger-fucking her friend and licking around her clit in faster circles. Moving her head up and down as well, she was attacking April's pussy like she was starving. April couldn't compete anymore, she finally let loose her orgasm with a loud shrill, \"AAAAAAEEEEEEEEE!\"\n\nLetting April bask for a moment, Katy turned to me and said, \"Fuck my ass!\"\n\n\"Get on your back.\"\n\nKaty looked confused for a moment but did so anyway. Never dislodging my finger, I rode her ass until she was laid down beside April. \"Give me a pillow April and Katy, lift your ass.\" Both of them quickly did as they were told so I pulled Katy down the bed before I put the pillow under her ass.\n\nI wasn't doing a very good job of lubing my cock, so April grabbed the bottle from me and squeezed some into her hands. She grabbed my cock with a nice, soft touch and started gently stroking me concentrating on my cock head and upper shaft. Katy, legs spread wide was fingering herself as she watched her friend lube my cock, her excitement was dripping on the pillow underneath her ass.\n\n\"Lift your legs.\"\n\nKaty did and then she moved her hands to her ass cheeks and spread them apart. I didn't bother with her ass yet as I grabbed the lube from April and squeezed a liberal amount of it onto Katy's pussy lips and let it run down her ass as well. When she had enough lube I moved up onto my knees and placed my cock at her pussy's entrance. I worked it in a little bit and started moving back and forth, deepening my penetration with every stroke.\n\nOnce I reached bottom, I started fucking her hard and fast and she moaned with every thrust. April laid down next to her and slithered her hand in between her friend and I, she put her friends' clit in between her middle and ring fingers and started gyrating it back and forth. Katy was in heaven, she closed her eyes, head rolled back and stopped vocalizing.\n\nI was pounding her pretty good at that moment, her ass up on a pillow, legs up in the air, she was loving life. April moved to start making out with her and Katy tried to make out with her friend but she just had too much going on to concentrate on kissing. April kissed and used her tongue on Katy's face and lips and continued to please her friends' pussy.\n\nKaty was stiffening up and wasn't moving much at all. She seemed to thrust back at me a couple of times with her hips but she just laid there mouth open, not making a sound. I continued to fuck her as hard and as fast as I could. She stiffened completely for about 15 seconds and finally went limp, never saying a word or seeming to breathe.\n\nI didn't wait. I grabbed the AstroGlide from the pool of lube it was in (I had forgotten to cap it the first time) and squeezed it out onto Katy's pussy and let it roll around my dick. I pulled out of Katy's pussy and squeezed a trail along the whole length of the top of my shaft. Facing me, April straddled her friend and pulled her ass cheeks apart for me. What a considerate friend.\n\nShe licked her friends' cunt a few times for good measure then allowed me access to her friends' ass. She put the head of my cock to Katy's ass while I grabbed her thighs and pulled her to me. My cock head started going through, I grabbed underneath Katy's ass and pulled her closer to me and my head popped through. Katy let out a small whimpering moan.\n\nApril was still straddling her friend but moved her head off to the side to watch the show. She moved her hand back to its previous position and started moving back and forth on Katy's clit. I moved my cock a little further into Katy's ass, Katy didn't move, she only moaned her approval.\n\n\"Stick it all the way in,\" April said.\n\nI smiled, grabbed Katy hard and with a long, slow push I buried my cock. She winced a little to start but by the time my balls touched her ass, she smiled slightly. Staying there for a moment she then started to rock back and forth on the pillow, moving my cock in and out of her ass slowly and gently.\n\nApril smiled up at me, \"She's an anal slut now, I hope you know what you started.\"\n\n\"I hope she doesn't meet some asshole guys who ruin it for her,\" as I started pushing my cock back and forth inside her ass. Still on my knees I pump her slowly but surely, April's hand still on her pussy, Katy opens her eyes slightly and smiles at us.\n\n\"She needs something to do with her mouth.\"\n\nTaking her queue Aprils situates herself on top of Katy's face just enough so she had access to her pussy but not so much so that she couldn't see my cock going in and out of Katy's ass. April hovered her pussy above Katy's face and waggled a little bit. April sighed a little bit when Katy tongue found its home. She rested her head on her arm and watched the show I was giving her.\n\nMoving in and out freely now, I sped up my thrusts a little by little. Katy had her hands back spreading her ass cheeks for me and April on top of her working her clit. Katy was thrusting back slightly, legs bouncing against my chest.\n\nApril started bouncing her ass up and down, pumping her pussy into Katy's face. Both of them were moaning now, almost in unison. April laid her head down on the bed and moved her hand to her own ass, she started rubbing her ass up and down making herself shiver.\n\nKaty was groaning a loud but muffled groan. When I stopped pumping occasionally I could feel her ass twitch around my cock and I could feel her pussy throbbing in delight. April's hand was moving faster now and Katy was thrusting back as much as she could.\n\nKaty moved her hands from her own ass and moved April's hand away, she started fingering April's ass inserting a finger little by little. Every little thrust brought a moan from April, she pumped her ass a little faster onto Katy's mouth.\n\nThey were both humming right along, sweating, moaning, panting, shaking \u2013 all of it. They were both getting close. I started fucking Katy's ass harder and faster, she started making some sort of half-screech, half-moan noise, sounding like a haunting banshee. She stiffened up, stopped moving and shivered underneath April to a leg-shaking orgasm. \n\nAfter a moment, she started munching on April again as fast as she could. Tongue back and forth, head up and down as much as she could, she worked April's pussy. Fingering her ass, April wasn't going to last much longer.\n\nPumping her pussy in her friend's face, she started shaking. She held on to Katy's waist as Katy continued to lick and suck her pussy. April's mouth opened and she buried her face into Katy's thigh, screamed her orgasm and fell loose on top of her. The two of them lay there for a few moments and I surveyed the scene of sweating bodies with the smell of sex hanging in the air.\n\nApril seemed please with herself, stood up and disappeared from the room for a minute. Katy opened her eyes, looked at me and said, \"I love how you ass-fuck me. It's too bad you have a girlfriend, we could make a habit out of this shit. Maybe, she'd have me over and all of us could have some fun, you said she doesn't do anal.\"\n\n\"No, not yet and she doesn't do threesomes either, especially not with really hot women. She talked about it before when we first started dating but she doesn't anymore.\"\n\n\"That's a rip, it sucks to be you.\"\n\n\"No, she's good, she's just not that kinky. She talked a good game for a while but nothing much happened afterwards. She'd tell me stories of what she was like before we started dating and it would be nice if she did some of that shit with me.\"\n\n\"So why don't you just break up with her.\"\n\n\"As I said, she's good; I just wished she was a little kinkier. I want her ass and I want to see her eat some chick's pussy, which would be hot.\"\n\n\"She's done it before?\"\n\n\"Yes but not with me and since we started getting serious, everything kinky it seems is off the table.\"\n\n\"This weekend has been great and we can revisit this once in a while but I won't be the other woman just so you fuck my ass anytime you want.\"\n\n\"I know, this weekend wasn't about all that. It was about breaking in my apartment in style when my girlfriend should be here, doing what we're doing.\"\n\n\"What are we doing?\" April's voice called from behind me. I turned and she had a washcloth in her hand. She walked towards me and reached out for my cock. She started washing me off.\n\n\"Katy had hers, now I want mine.\"\n\nFinished with cleaning my cock, she laid down on top of Katy and started kissing her. She wiggled her ass at me, tantalizing me. She moved slightly so she and Katy could rub their pelvises together while I fucked her. They were deep kissing; tongues and lips intertwined, hands roaming, breasts moving together, they were quite the pair to watch.\n\nI grabbed the lube and squeezed out a large amount on my two fingers, April had already had an orgasm and had just woken up recently so I figured she was ready for both fingers right away. I was right. I inserted them and twisted them slightly trying to loosen her up a bit and when I did she pulled Katy's hair and shoved her tongue in her mouth, Katy started to suck on it like she would my cock.\n\nTwisting my fingers a little more I started moving them in and out of April's ass, she moved her ass in little circles grinding both my fingers and Katy's pussy all at once. They seemed to be enjoying each other on their own but April still kept squirming against my fingers. I saw both of their pussies grinding together and I got an idea...\n\nRubbing down April's pussy, I continued rubbing down Katy's pussy as well. Up Katy's pussy, then up April's. Who knew a double stacker could be so much fun? They kept making out with each other and with the exception of the occasional moan, they seemed to be in their world. And what a world, I've had threesomes before but never with two tall athletic brunettes with brown eyes. If there is a heaven, this is what it must be like.\n\nApril stopped for an instant and glanced back at me. They were still grinding their pussies together and I was still mixing their excitement with my hand. April shimmied her ass back and forth, wiggling my fingers inside her. She smiled. She watched as I grabbed the lube and her smile got a little bigger. By no small coincidence, so did my cock.\n\nKaty snaked one of her hands down between the two of them to play with herself, April adjusted her pussy so it was directly on Katy's hand. That way every time Katy moved her hands and fingers she pleasured both of them at the same time. This brought them to a new level of deep kissing, trying to grab each others' faces, writhing around but trying to stay in contact with Katy's hand; they didn't know I was there and that was fine by me.\n\nThey both were grinding into one another, Katy's hand pleasing them both and April pumping Katy like she had a cock to fuck her with. Their pace quickened, their faces red with exertion, sweat creating a seal between them. When they rubbed together they made a slight squeaking sound that I found quite funny but they were unaware of.\n\nSoft squishes emanated from their seeming conjoined pelvises. Moans and groans came from the other end. Kissing each other, breathing each others' breaths, each one working hard trying to fuck the other one, they were both working towards an orgasm and each was very close.\n\nA lot closer than I thought.\n\nApril was quivering as she grabbed a hold of Katy. Katy lay still as April started to orgasm. April tried to wrap all of her limbs around Katy as she shook. Moaning her orgasm, she sucked on Katy's tongue as she came. Katy lay there still playing with herself and pleased with her handiwork.\n\nApril remained still for a few moments then opened her eyes and started pumping Katy again. As she pumped, Katy moved her fingers faster and faster. I reached out again to April's ass and rubbed up and down her crack. Dropping some lube onto her ass, I sped up my strokes and so did she.\n\nShe was pumping Katy hard and fast, Katy was using her hand to help herself along and I decided to push her over the edge. I reached underneath them both and stuck two fingers into her hot dripping pussy and sure enough, she stiffened up, eyes closed and let out a screaming sigh that would've made any metal head in a mosh pit proud.\n\nI let the moment rest a little bit as I lubed up my cock but when I finished doing that I got behind April and started rubbing the length of my shaft in between her ass cheeks. I saw the goose bumps rise on her arms; she shivered and clenched her ass cheeks together a few times. She put all her weight onto Katy, put her arms behind her back and spread her ass cheeks for me.\n\nI let the lube run a little bit on her ass and I positioned my cock at her anal entrance. She wiggled back at me as best she could, she was relaxed but she'd still need some prompting. I pushed forward a little, she pushed back. My cock head started pushing through and she bore down and it popped all the way in. She shivered again.\n\nShe lifted her ass slightly to give me better access and I pushed forward a little more. She let out a low moan. Katy switched hands and started rubbing her own pussy, she was enjoying the scene playing out on top of her.\n\nMoving inside April a little more she started moving her ass in little circles, pushing me further inside her but also providing some lovely friction in her tight little ass. Katy switched to rubbing April's clit a little bit as she threw her head back and puckered her lips at me, then smiled.\n\nAlmost all the way in I decided to just go for it and push it all the rest of the way in hard and fast. April stiffened and whimpered, \"You naughty boy! That surprised the shit out of me but fuck that felt good!\" She continued moving her ass in little circles for me, it felt incredible. Her ass accommodated my cock and she was starting to thrust back at me.\n\nShe propped herself up on all fours then reached down to play with her own pussy. Every so often she'd reach her hand back far enough to tickle and massage my balls every time I thrust into her ass. Katy resumed playing with herself enjoying the porn that was playing out in front of her.\n\nUsing long strokes I was fucking April's ass as she played with herself. She was really starting to heat up as she was thrusting back at me. I grabbed her hips and really started to pound her ass into surrender, I didn't want her to walk right for a week after this.\n\nI kept fucking her ass and she continued to play with herself. Katy scooted up the bed, grabbed April's head and shoved it into her pussy. April greedily started eating Katy's pussy. Katy and I shared a smile.\n\nKaty spread her lips for her friend. April continued to lick her pussy, her head bobbed up and down with her tongue strokes. Katy's other hand was on the back of April's head, she tried to hold it in place as she humped her face with her pussy.\n\nApril was having difficulty concentrating now as I pounded her ass. Every so often she stopped eating Katy out and just let me have my way with her ass, no distractions. Katy would thrust up at her to get her going again.\n\nApril's hand was a blur going back and forth on her own clit, I continued to fuck her ass like there was no tomorrow. She was moaning but Katy kept her from verbalizing anything as she held her friends' face smothered in her pussy.\n\nKaty then wrapped her legs around April, dragging her down to one elbow. Katy grabbed April's hair and started moving her head, guiding her to her sweet spot. Katy was getting close and so was April.\n\nKaty, lips spread, holding April's head in her sweet spot was starting to spasm. She thrust up once and held it there. April was bearing her weight but kept licking at Katy until she exploded. \"AHHHHHHHhhhhh... AHhh... Ahhhh...\"\n\nKaty collapsed back on the bed allowing April's head to come up. \"Fucking rail me!\" she said once her mouth was free. I doubled my efforts as I grabbed her hips as hard as I could. I started jackhammering her ass with my cock.\n\nApril started getting slippery from the sweat that covered her body, her eyes were closed tight in a mixture of pleasure and pain. April was still on all fours and was bracing herself against my anal onslaught. Katy watched the show in silence, having finished her orgasm already.\n\nApril was moving very stiffly now, she was getting close to another orgasm. My balls were slapping her wet pussy but my balls were tightening and I had tingles starting from my cock and spreading throughout my body. Holding on for dear life I kept at April's ass.\n\nApril dropped to her elbows then her head to the bed; she pushed back at me like downward dog. You know a man invented that yoga move and God bless him, I thought. She started biting her arm, she quivered.",
        "I wouldn't last much longer. She tried reaching back to touch me but couldn't manage. Her arm fell against the bed and she yelled out as she reached her anal orgasm. \"Oh FUCK me!\" I thrust a couple more times, hands clenched, eyes tight and I finally blew my load inside her ass, pump after pump, spurt after spurt, I collapsed on top of her and she collapsed on the bed in front of Katy.\n\nKaty let us lay there for a minute before she said, \"That was fucking hot.\"\n\n\"I'm not going to sit right for a week, damn you wore my ass out.\"\n\n\"You two have wore me out.\"\n\n\"Well you earned it, holy shit what a weekend! I'm guessing these weren't your first threesomes?\" April said.\n\n\"No, I've had several, why?\"\n\n\"As we've seen already, you're not like most guys. You don't get in the way, you seem to know when to get involved, you seem to know when to sit back but most importantly you don't feel like you need to be the director like you're starring in your own porno. This was my first threesome experience but I've heard from my friends that their boyfriends or sex partners are always in a fucking hurry to get fucked or sucked that the experience is over with before it has a chance to really get going.\"\n\n\"Well a threesome isn't all about me and besides that, I still have my sex rules to think of. The first of which is, 'the woman comes first, always' and if there's two woman that means two orgasms before I think about mine.\"\n\n\"Don't the women cancel each other out?\" Katy asked with a sly grin.\n\nLaughing I said, \"No, only if we're in a different area code. Anyway, the whole point to having threesomes is to find people you're comfortable with and have more sexcapades, right? A guy cumming too quickly or trying to direct the action doesn't allow for that to happen. He makes himself the center of the attention and it should be the women. If the women have a good time and don't get jealous the first time, you're more likely to have more threesomes and that's the whole idea.\"\n\n\"I love fucking two women at once,\" I continued, \"It's a lot of fun and someone always has something to do. If you treat a woman right, she'll do things like have threesomes. You can't be a two-pump chump and you have to have her orgasm early and often. Usually one person ends up being the center of attention and what woman wouldn't want to be fucked and sucked at the same time?\"\n\n\"Hear! Hear!\" April agreed.\n\n\"April's right you know. I like the fact that things seemed natural this whole weekend. If this is what all threesomes are like, I'd love to have more of them. I hate guys who try force your head down to their cock for a blowjob or who don't take time to warm you up before sex. It doesn't even have to be oral sex but touch me for fuck's sake; my erogenous zones extend beyond my vagina!\"\n\n\"I know and I like it. You two are very responsive and I like that! I encourage that kind of behavior!\"\n\n\"So do you think we crossed the line from kinky to slutty this weekend?\" April asked with a hint of sarcasm.\n\n\"No I don't but I'd love to test those boundaries another time as well, you two were fantastic! I find it hard to believe you've never slept with each other or another woman for that matter.\"\n\n\"Your tongue is the best I've ever had and yet as good as you are, we do know each others' equipment since we're both so equipped, so I think it comes more naturally to us.\"\n\nKaty nodded in agreement.\n\n<CENTER>***</CENTER>\n\nThey helped me strip the bed and I took it downstairs to the washing machine. Returning I started loading the dishwasher and generally cleaning up from the weekend's festivities. \"So how are you two going to be spending the rest of your Sunday?\"\n\n\"We're not sure, sitting in a padded chair for me,\" April said. \"How about you?\"\n\n\"Collapse in a heap after you two leave I guess then go from there.\"\n\n\"Like I said earlier, I don't know how often we can do this but since you have a girlfriend, I don't think it should be that often. It really is too bad she doesn't do anal and she's not into threesomes. Is she cute?\"\n\nMy laptop was open so I brought her picture up online and Katy said, \"She is cute. We might be able to help you with her. She's cute and I would love to see her looking up at me while she's eating my pussy. I'd love to see her watch as you fuck me or April in the ass and giving us the kind of pleasure you gave us this weekend.\"\n\n\"That sounds like a soiree for sure but she would never go for it. She's territorial and a little insecure. She would never have the two of you over, let alone fuck you or all of us.\"\n\n\"That's too bad, she has potential. But still, maybe we could arrange a serendipitous accident of meeting and find a way of all coming back here. Does she drink?\"\n\n\"Yes but the last time she got drunk was her 21st birthday going on two years ago now.\"\n\n\"Well, we'll figure it out because I really would love to fuck you again...\"\n\n\"Me too...\" April chimed in, sitting gingerly in the love seat.\n\n\"...but I wouldn't want to do it much more than we already have since you two are in a committed relationship.\"\n\n\"I agree, this weekend wasn't about that.\"\n\n\"True. Let's just see what happens. You have my number right?\"\n\n\"Nope, I don't have either of your numbers.\"\n\nWe all exchanged numbers, said our goodbyes and we went our separate ways. I walked downstairs, threw the laundry in the dryer and came back to the apartment and sat on the couch. The dishwasher was drying the dishes, I turned on the TV and selected some instant movie to watch, I saw the opening credits...\n\n<CENTER>***</CENTER>\n\nI felt the tickle of hair on my face and I stirred. I felt some moist but cold lips on mine and I opened my eyes. There stood my girlfriend.\n\n\"Have you been asleep all day?\"\n\n\"No, I did some laundry and the dishes. You're home early,\" as I glanced at the clock, it said 3:20 p.m.\n\n\"I know. I felt bad that I was gone the whole weekend. I decided I wanted to come home and help you break in the apartment since this was our first weekend here,\" she looked at me randily as she ran her hand up my thigh..."
    ],
    "authorname": "nuum",
    "tags": [
        "rimming",
        "threesome",
        "2 women 1 man",
        "oral sex",
        "blow job",
        "cunnilingus",
        "group sex",
        "shower",
        "first time"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/first-night-13"
}