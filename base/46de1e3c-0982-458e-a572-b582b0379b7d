{
    "title": "As Time Goes By Ch. 03",
    "pages": [
        "This is a long love story in three chapters but you'll have to wait for the sex. If you want a plotless quick thrill, then there are plenty of those elsewhere on this site. Some characters from my earlier stories make an appearance in this tale (although it is not necessary to have read those stories, it might help to know the characters). Characters in sex scenes are eighteen years old or over. All characters are imaginary\u2014any resemblance to persons living or dead is purely coincidental \n\nCopyright \u00a9 2015 to the author. \n\n***** \n\n\"You!\" \n\nWe must have looked a pair of fools, standing there and gawping at each other. Then Dusty shook her head and turned to leave. \"I'm sorry\u2014this seems to have been a mistake.\" She almost dashed towards her car. \n\nI caught up with her while she was fumbling to get the key into the lock. \"Wait, let's talk. You've come all this way\u2014don't you even want to see the carpentry shop?\" \n\n\"What's the point? You won't want me here.\" \n\nI took hold of her elbow, not hard but it seemed to affect Dusty. She flinched a little so I let go and rested a more gentle hand on her forearm. \"Who said I won't want you here? I didn't say that,\" I told her, \"We'd better thrash this out now. It's obvious that neither of us could have known who we were meeting. I was told to expect a Louise Duncan. I suppose you were told to see a Miss Roberts?\" \n\nDusty nodded. \n\n\"Before we go any further, there's something I have to tell you,\" I said, \"I went back to Radclyffe's several times hoping to see you and try to explain.\" \n\nShe shook her head. \"No need to explain. I know how unattractive I am.\" \n\nUnsympathetic of me, perhaps, but I found myself annoyed with such a defeatist attitude. \"Where the hell did you get that nonsense from?\" I demanded, my voice perhaps a little more harsh than it should have been. I saw Dusty flinch again at my tone and I softened it a lot. \"Louise, or Dusty, whichever you prefer, you are not unattractive. You're a very nice-looking girl. As I told you that night, my leaving like that was nothing to do with you and everything to do with me. I told you then it was personal and I couldn't explain. \n\n\"You weren't to know but Dot, my lover, had died a few months before. We'd been together a long time and I loved her so much and I was hurting. 'As Time Goes By' was her favourite song and when it came on the radio that night, it just broke me up. That's why I ran out on you, and that's why I kept going back to Radclyffe's hoping to see you again so I could apologise. I'm apologising now and hope you can understand that it wasn't your fault. Now, can we start this visit again?\" \n\nI held out a hand and Dusty slowly grasped it. We shook hands. \"Thank you,\" she said, \"Before I came here, my father said he thought you were a widow.\" \n\nI smiled a little. \"I suppose that's as good a word as any. Come on and I'll show you the workshop. Call me Fran, please. Do you prefer Louise or Dusty?\" \n\n\"I'm Louise at home but I'm used to Dusty.\" \n\nThere was quite a change as soon as we entered the shop. The shy girl suddenly became the total professional. She closely examined all the tools and tested some of the machinery, making little noises of approval as she did so. She transferred her attention to the unfinished works, picking up pieces and checking them over before turning to me and saying: \"Your Dot was very good\u2014better than very good. There's some lovely work here although it all needs finishing off.\" \n\n\"That's why I kept everything as it is, hoping that somebody could complete them one day. Dusty, what say we give things between us a try? Say six months. If you'd like to finish off these pieces to start, I'm sure a lot of Dot's former customers would snap them up and pass the word around. We'll sell them at a reasonable price and the money will be yours. At the end of the six months, if you decide to stay and run this as a business we'll work out a fair rent for the workshop and flat.\" \n\nDusty thought for a moment then said: \"I'd like that. Okay, let's give it a go.\" \n\nAs I took her up to see the flat, I asked: \"Why 'Dusty'?\" \n\n\"It's from senior school. I opted to go to woodwork classes, the only girl there. I'd got about eight years' start on the boys and I was far better than any of them. So one of them nicknamed me Sawdust and that gradually turned to Dusty.\" \n\nDusty moved in a few days later and apart from helping her to settle in the flat I left her to it. She knew her business and I wasn't about to interfere. I saw little of her during the first week, although when I walked past the shop I could sometimes hear the lathe running or a saw being used. She obviously had the right work ethic for I noticed that sometimes she worked well into the evening. And then she came to me one day while I was working in the yard and said, in her shy way, \"Come with me please, Fran, I'd like to show you something.\" \n\nThe 'something' she wanted me to see turned out to be quite a few things, completed items of Dot's furniture. Her work was excellent: my untrained eye couldn't tell where Dot's work had finished and Dusty's began. I wanted to cry. \"Thank you, Dusty, you've done Dot proud. She would have been so impressed by this.\" \n\nMy prediction was right. The completed pieces were snapped up and Dusty continued to finish Dot's work. When there was nothing left she started to produce items of her own. Now I could see a difference, for her original pieces had their own distinctive mark. They, too, sold well. At the end of the six months I asked Dusty if she wanted to stay and she said yes, that she loved being her own boss. I was pleased because although we didn't see all that much of each other, I had started to grow fond of the girl. It was good just to know that there was someone around. But God, Dot, I still miss you so. \n\n* * * * * \n\nIt wasn't just the sex, although I missed that very much\u2014after all, I was still a youngish woman and my needs had not diminished with Dot's death. Meg, the Welsh woman, had helped me but that was a one-off. When I did have the urge, I had active fingers and my little vibrating friend to help me. I'd put Dot's dildo away, though, because to me it was part of Dot and without her it was nothing more than a funny-shaped piece of latex. So as I said, it wasn't just the sex. More than anything, it was the companionship. Although I was sleeping well, our great bed felt empty without Dot cuddled up against me during the night. I frequently hugged her pillows to my body as they still had the lingering scent of sandalwood clinging to them. \n\n* * * * * \n\nWe had a very hard winter that year. For something like four or five years the winters had been comparatively mild, the worst of them having seen no more than heavy rain and occasional lashing hail-storms. But now the frosts started early and the temperature outside plummeted. The ground got harder to work until eventually I had to leave it fallow until warner weather arrived. I wasn't too worried for over the years I had salted spare money away knowing that sometimes I would have to ride out a tough winter. I still had the egg business to fall back on and the only major chore was keeping the chicken runs cleaned out. They were safe enough because Dot had installed good insulation years before. \n\nChristmas had come and gone and one morning early in January I woke up to the strange hush and the oddly clear light which often suggests overnight snowfall. I pulled back my curtains to look out of the window. It had snowed all right, with a vengeance. There must have been at least two feet or more out there. I know, in some countries that would be a light fall, but here it was a lot. And then I realized that it was freezing inside the bedroom. I touched a radiator and it was icy. \n\nWe have oil-fired central heating and I knew it couldn't be the fuel supply because that had been topped up recently. It had to be the boiler and when I checked, it was. Completely dead. And one thing was for sure\u2014nobody was going to get through to fix it until most of the snow had gone. Any clearance would be confined to the major roads and my place was a long way from the nearest of those. I wasn't too worried as I had a good store of firewood for the range in the kitchen and the fireplace in the sitting room. The range has an old-fashioned back-boiler, too, so at least I'd have some hot water. I checked the lights and the power was still on\u2014that was a blessing for there was plenty of food in my freezer so I could have hot meals. \n\nI could have hot meals? What the hell was I thinking of. We is what I should be thinking. Dusty was not going to be comfortable in that little flat. I dressed in a hurry, grabbed a couple of things and went across to the carpentry shop. The snow was deep enough in places to spill into the top of my gumboots. It was uncomfortable but I had some longer ones in the cottage to use when necessary. \n\n\"I'll be all right here,\" Dusty told me when I got to her and explained the problem. She didn't look all right and the flat was a damned sight colder than the cottage. \n\n\"No you won't,\" I told her, \"You haven't even got a fireplace here. And the shop will be too cold for you to work. You're coming back to my place. I've brought Dot's sheepskin coat and old gumboots for you, you're almost as tall as she was so they should fit. We'll treat this like a holiday, Dusty. All we have to do is clear a path to the chicken runs and see that they're fed and watered. Then we can sit by the fire and tell each other ghost stories or something. I've got some great DVDs so you can pick out any films you'd like to see.\" \n\nThe day went okay. We managed to find enough odd jobs to keep us busy and after supper I put on a selection of CDs. I lit a number of plain candles, turned off the lights and we sat by the fireside with a large quilt over our legs, cosy and warm, until it was bedtime. That was when Dusty and I had a disagreement over the sleeping arrangements. \"I'll sleep here on the sofa,\" she said. \n\n\"Take it from me, Dusty, I've slept on here myself and it wasn't very comfortable. You're taller than me so you'd be bent like a pretzel in the morning. We'll share the bed.\" \n\nA look of fear flitted across Dusty's face. I held up a hand to reassure her. \"I'm not going to do anything. It's a huge bed with plenty of room. I've still got Dot's winter pyjamas and dressing-gown so you can use a set of those. And we'll be a lot warmer sharing the bed.\" I had to argue for about ten minutes but Dusty saw sense in the end. I wasn't sure if she was afraid I'd molest her or if she was so used to putting herself down that she couldn't break the habit. We climbed into bed on opposite sides and lay there with our backs to each other. We said 'goodnight'. We slept. \n\nI woke around six in the morning to an arm around my waist and the feel of a body pressed up against my back. I'd been having a lovely dream about Dot and our life here, and for no more than a couple of seconds I thought it was her and then I returned to reality, of course it couldn't be Dot. Briefly, I wanted to weep but pulled myself together. It was Dusty, wasn't it? \n\nI eased myself round so that I didn't disturb her. In sleep, all of the habitual worry seemed to have been erased from her face and she looked sweet and contented. Unable to resist, I bent over and kissed her lips very gently. She murmured and stirred but didn't awaken so I left the bed as carefully as possible, leaving her to rest. \n\nThere had been fresh snow in the night. By the time Dusty got up, I had fires going in the grate and the range and was cooking breakfast. The first thing she said to me was: \"Thank you for insisting about the bed. That was the best sleep I've had for a long time.\" \n\nWe spent the day doing a few more essential chores and for our evening meal I dug a chilli with rice out of the freezer. When everything was cleared up, I invited Dusty to look through the DVD collection and pick any film she fancied. After a few minutes she said: \"Here's one I've heard a lot about. Can we watch it, please.\" She held up the case. It was Casablanca. \"Isn't this the film where Bogart says\u2014\" \n\n\"No he doesn't,\" I interrupted, \"That's a myth. But yes, we can watch that.\" \n\nSo we settled on the sofa, put Casablanca in the machine and watched it. Dusty surprised me by sitting very much closer to me than I would have expected. I hoped that perhaps she was starting to come out of her shell. \n\nEventually the film arrived at the scene where Ingrid Bergman was persuading Dooley Wilson to play 'As Time Goes By'. As soon as the music started, Dusty snatched up the remote, hit the pause button and grabbed hold of my hand. \"Oh God, Fran, I'm so sorry, I didn't know that tune was from this film. Do you want me to turn it off?\" \n\n\"Don't be sorry, Dusty, I knew it was coming.\" I squeezed her hand in reassurance. \"It doesn't upset me now. That night in your hotel, it was unexpected and hit me hard when I was still feeling raw. I'm really okay with it now. You're enjoying the film, I'm enjoying the film. So let's carry on enjoying it together.\" \n\nAt last the story reached its end, with the villainous Nazi major dead and Bogart and Claude Rains as police captain Louis Renault walking into the night mist. Bogie had the final words: \"Louis, I think this is the beginning of a beautiful friendship.\" \n\n\"What a lovely film,\" said Dusty, \"I did enjoy it.\" Then she realised that she was still holding my hand. \"I'm sorry, Fran.\" She reddened and tried to pull away but I held onto her. \n\n\"Dusty, will you please stop apologising for everything. It's been nice holding your hand.\" I think I surprised the two of us then by lifting her hand and placing a very gentle kiss on it. Dusty looked startled, confused even, so I tried to lighten the moment with my very best Bogart imitation: \"Louise, I think this is the beginning of a beautiful friendship.\" \n\n* * * * * \n\nI think it was from that evening Dusty began to come out of herself a little. When I awoke the following morning, she was once more cuddled up to me, a look of contentment on her sleeping face. She said nothing about it later, not even one of her embarrassed apologies, and I guess that she was unaware. I didn't mention it, not wanting to upset her. The film she picked for the evening was Gone With The Wind. But... \n\n\"Before we watch the film, Fran, can I talk to you about something?\" Her voice was little more than a whisper and she didn't meet my eyes. \n\n\"Of course. Anything you like.\" \n\n\"That night in the hotel\u2014you were right.\" She reached out and hooked a couple of fingers in mine, toying nervously with them. \"I was... I am a virgin. I've known I'm a lesbian for a long time but I didn't know how to go about meeting someone. And I was frightened. I didn't even know how to recognise another gay woman... still don't...\" \n\n\"Dusty, not all of us do,\" I said to reassure her, \"We haven't all got gaydar and even for those who have, it isn't exactly a precision science.\" \n\n\"Anyway, I thought the best thing to do was come up to London and ask a taxi driver to take me to a lesbian bar. That's how I ended up at Radclyffe's.\" \n\n\"And you were lucky.\" I tried not to sound stern\u2014now Dusty was talking I didn't want her to clam up. \"That wasn't the cleverest way of looking for a partner. Radclyffe's is a decent place, well run. You could have been taken to somewhere far worse where you'd have been an obvious target, even a victim, some place where they might all have been like that Belle woman, perhaps far worse.\" \n\nShe hung her head. \"I know that now... I was stupid...\" \n\n\"Not stupid, love, but very na\u00efve.\" I thought of something else. \"When we got to your hotel, Dusty, you seemed to believe I'd like it rough. What made you think that?\" \n\n\"I went onto my father's computer one evening, got the internet and called up a couple of lesbian films\u2014they both showed it as being rough. Then I heard Dad coming so I deleted them.\" \n\n\"And were they the only two films you saw?\" \n\n\"Yes. I didn't dare try again in case I got caught.\" \n\n\"Poor Dusty, you really found the wrong films.\" I reached out, stroked her hair gently. \"There must be thousands of lesbian films on the internet and I bet a high proportion of them show sex as being loving and tender. Tell me, do your parents know you're gay?\" \n\nDusty shook her head. \"I'm scared to tell them. You probably think badly of me but I'm a terrible coward, Fran. I'm scared of just about everything.\" \n\n\"No, I don't think badly of you.\" Something, however, had made Dusty the way she was and sooner or later I'd have to find out what. Not this evening, though. It had been an effort for her to tell me what she had and I was not going to press her any further. \"I'm glad you could talk to me, Dusty. Now, let's watch the film and forget everything else for the moment.\" \n\n\"Okay.\" Dusty gave me a weak smile. \"Thanks for listening to me. Fran, can I hold your hand again, please? It made me feel easier.\" \n\n\"Of course you can, sweetie. It made me feel good too.\" I took her hand in mine and drew her closer as we started to watch the drama of Scarlett O'Hara and Rhett Butler. That night in bed, Dusty cuddled up to me before she went to sleep. It probably did both of us some good, giving me the companionship I'd missed so much and her the comfort she so obviously needed. \n\n* * * * * \n\nThe snow lasted about a week before the thaw set in. It wasn't the last snow of the winter but it was the worst and by the time other falls came around the boiler had been fixed and the central heating working. Dusty insisted on going back to her little flat and it was handy for her work. One thing did change though. I had come to enjoy her company and I think Dusty liked mine too, so from then on we would take our meals together most evenings and watch a film or listen to music. \n\nAnother thing I discovered about Dusty during the ensuing months was that despite her shyness she was a very good businesswoman as well as being a master carpenter. She told me, with some pressing, that while working for her father she had attended evening school in business studies and had gained distinctions throughout. So what the hell was wrong? She had so much to be proud of and yet she mostly refused to accept her own worth. \n\nRoger Duncan phoned me several times to see how she was getting on. \"I'm calling you, Fran, because Louise will only say 'all right' when I ask her.\" I was able to reassure him that her business was thriving with full order books. \"Too shy for her own good, my daughter,\" he said, \"Crazy\u2014she only seemed to go that way from her mid-teens. Always a little shy before that but nowhere as near as bad.\" I wanted to ask him if he knew what had turned Dusty but thought he might see that as interference. \n\nI was growing more fond of Dusty as time went on yet was frustrated by the way she consistently denigrated herself. \n\nIt had to happen\u2014eventually I cracked. The time arrived when I just boiled over, completely forgetting the promise I had made to myself to always be gentle with Dusty. As usual we had finished our meal and were watching a French film, Amelie, starring Audrey Tautou. I heard Dusty almost whisper something to herself. \n\n\"What did you say, Dusty?\" \n\nShe looked at me, apprehensive, and her reply was little louder than her whisper. \"I said I wished I was nice looking like her rather than what I am.\" \n\nI felt my chest tighten with annoyance. \"And what are you, Dusty?\" \n\n\"Plain, ordinary, unattractive...\" \n\nExasperated, I grabbed her hand and practically dragged her into the bedroom, stopping in front of the large cheval mirror. \"Have a good look, Dusty, and tell me what you see.\" \n\nShe looked once and then cast her eyes down, a characteristic move. \"Nothing really worth looking at.\" ",
        "\"God almighty, girl! Look again!\" Dusty raised reluctant eyes to her image. \"Shall I tell you what I see?\" I continued, \"I see a lovely young woman... I see a very lovely young woman who has nothing to be ashamed of. I see a lovely young woman who's got loads going for her. The only thing I can see wrong with this lovely young woman is for some reason she can't or won't recognise her own worth. You're gorgeous, Dusty, and you could be a lot happier if only you'd accept that fact. Christ, look at your face, it's a classic heart-shape. Look at those gorgeous eyes of yours, and that cute nose. In fact, you're not unlike that Audrey Tautou you've just been admiring. Can't you see that?\" \n\nI marched her back into the sitting room and sat beside her, still holding on to her hand. \"I don't know where you got these negative ideas about yourself, Dusty, but they are self-destructive. Did your parents put you down all the time or something like that?\" \n\nFor the first time, Dusty showed some animation and snatched her hand away. \"No! My parents are lovely people, they did nothing but encourage me. Don't you dare say anything against them!\" \n\nAt least I'd got a reaction. I retrieved her hand. \"Okay, I'm sorry\u2014I was wrong but it does happen in some families. It's got to be something, though, so what? We're not moving from here until you talk to me because frankly, I'm getting pissed off with listening to you put yourself down. I've grown very fond of you Dusty, and don't you dare ask me how I could. I hate to see you like this. So just talk!\" \n\nWhen I said that I was fond of her, Dusty raised her head and for the first time looked me in the eyes. For very long seconds she said nothing and then muttered: \"School. I was badly bullied at school. I guess I was a bit of an oddball. Some of the boys were jealous because I was so much better than them at woodwork so they called me names or cold-shouldered me. There were a couple of boys who wanted to be chefs and opted for the cookery classes. Nobody saw anything wrong with that. But a female carpenter? Oh no, that wasn't on. While some of the boys were unpleasant to me, the girls were worse...\" \n\n* * * * * \n\n...and the worst thing was that the girls who persistently tormented Dusty were all Upper Sixth-formers and prefects, eighteen-and-nineteen-year-olds, all about to go to university, the cr\u00e8me de la cr\u00e8me as the Headmistress would proudly boast, those who by rights should have known better. They were devious about it, too, doing nothing when there were witnesses around. Dusty knew that if she reported them, not only would she be disbelieved but the bullying could well become worse. \n\nMostly it consisted of hissed insults... 'ugly bitch Duncan', comments like that, and 'accidental' bumps in the corridors, her books, again 'accidentally', being knocked into puddles. The crude 'jokes': \"Who'd shag Dusty Duncan? The blind man, as long as his guide dog didn't run away from her.\" And similar. But one day they were waiting for her in the lavatories, five or six of them. \n\n\"What are you doing here, Duncan?\" \n\nDusty tried to edge past the girls who suddenly surrounded her. \"I want to go to the toilet.\" \n\n\"So what are you doing here? This is the girls' toilet. Use the boys'.\" \n\n\"Why should I?\" \n\n\"You do woodwork,\" one sneered, \"That's a male occupation so you must be a male.\" \n\n\"Yeah, you must be a boy because you haven't got any tits.\" \n\nOne of them pushed Dusty against a wall, clutching her by the lapels. \"And if its a titless boy who thinks its a girl, perhaps they cut its dick off when it was born.\" \n\n\"Maybe it was only tiny so they threw it away.\" Laughter all round. \n\n\"So if she hasn't go tits and a dick, there's only one answer,\" said another, \"She's a dirty, ugly, disgusting lezzer.\" \n\nThere was a chorus of jeers. \"Yeah, a lezzer, a filthy, ugly, disgusting lezzer.\" \n\n\"And what do we do with filthy, ugly, disgusting lezzers?\" \n\n\"We teach them not to come into our toilets.\" Dusty was grabbed and thrown from one girl to another, over and over, harder and harder. Then one of them missed. Deliberately or otherwise, the result was the same. Dusty's head smacked against a wall. The skin split and blood poured as a huge contusion appeared. \n\nThere was a brief silence, as if the bullies realised that they'd gone too far this time, until one said: \"And that's what happens to filthy, ugly, disgusting lezzers.\" \n\nThere was one of this clique who never touched Dusty or called her names, Alice something... In fact, she always looked vaguely ashamed but she did act as lookout. Now she called out: \"Welles is coming.\" Miss Welles was the girls' Physical Education teacher and generally acknowledged to be a tough one. The gang slipped out of the back door, one turning to glare at Dusty and make a zipping motion across her mouth. \n\nWhen Miss Welles came into the lavatory block, Dusty was trying to staunch the flow of blood with a handkerchief. \"What's happened to you, Louise?\" \n\n\"I tripped, Miss, hurt my head.\" \n\n\"Let me have a look at that. Right, you're coming to the school nurse.\" Miss Welles took a handful of tissues from her pocket and gave them to Dusty. \"Use these. Now, Louise, did you have some help to trip?\" \n\nDusty stared at the floor. \"No, Miss.\" \n\n\"Hmm. Why don't I believe your, Louise? And I think I know who's responsible. I've been trying to keep an eye on them but I can't be everywhere at once\u2014you're not the only one being picked on. Just say the word and I'll have them straight in front of the Head.\" \n\n\"No, please... I just tripped.\" Dusty raised her head and looked the PE teacher in the eyes. \"You might believe me but the Head won't\u2014they're mostly her blue-eyed pets. I'd be the one in trouble for lying.\" \n\nMiss Welles looked grim. \"Okay, Louise, you're probably right. But I'll personally make sure that nothing like this happens again.\" \n\nFor several days the school's speculation and gossip was about why a number of favoured Upper Sixth prefects, all due to leave shortly for university, were taken into the gym every evening for a week by Miss Welles and given an hour's hard, double-time, non-stop circuit training which left them exhausted. It was noted that the same girls seemed to go to great pains to avoid Louise 'Dusty' Duncan and several others. \n\nBut Dusty had had enough. She was legally old enough to leave school and she did so without taking any GCSE exams. Instead she asked her father for a job and he was pleased to take her on. He had suspicions about her reason for leaving school but as Dusty wouldn't say anything, he didn't push it... \n\n* * * * * \n\n\"And you've let those vicious bitches ruin your life?\" I was enraged on Dusty's behalf. \"God, but I'd like to kick the crap out them myself.\" I touched the faded scar on her forehead. \"That's how you came by this. And I suppose they're all doing nicely out of life?\" \n\n\"Oh, yes.\" Dusty's little laugh was bitter. \"From what I've heard, one's got a law degree and is training to be a barrister, a couple are in medical school, another one has qualified as a teacher.\" \n\n\"Well, think about this. Unless they change completely, those lawyers and doctors will always be a load of shit. As for you, you've got your own business, Dusty, your work is respected and sought after, you are respected and well thought of by people round here, and the business is successful. And you've done that all by yourself, so you've got a lot to be proud of, more than they have. No matter how high in the world they go, you'll always be their superior.\" \n\n\"Maybe not,\" Dusty said, \"There's something else, and it puts me in a bad light. I'm so ashamed of myself.\" \n\n\"Do you want to talk about it?\" \n\nDusty nodded. \"It was when I went to see my parents a couple of weeks back, I'd gone into town for something...\" \n\n* * * * * \n\n\"Louise? It is Louise Duncan, isn't it? Dusty?\" \n\nDusty turned from the shop window she had been gazing into. A young woman in Salvation Army uniform was standing by her side. She looked familiar. \"Dusty?\" \n\n\"Yes. Do I know you?\" \n\n\"Alice... Alice Rayner... from school...\" \n\nA sudden, unwanted memory hit Dusty hard and she raised an involuntary hand to her scar. School lavatories, a bunch of older girls pushing her around, her head smashing into a wall, one of them standing watch at the doorway. Alice Rayner... \n\n\"Yes, I remember you!\" She spat the words out. \n\n\"I know I can't be a very welcome sight, Dusty, but I want to apologise for the dreadful things we did.\" Alice's voice was subdued, her eyes downcast. Seeing somebody other than herself like that brought an unfamiliar feeling of elation to Dusty's breast. \n\n\"Why should I accept your apology? It's about six or seven years too late.\" \n\nA whispered reply. \"I know. I always felt terrible about the way we treated you but I didn't have the gumption to stand up to the others. I wanted to be one of their clique so badly and...\" \n\n\"And so you helped to make my life a misery.\" Dusty could feel herself getting more and more angry. \"So why bother to approach me and say sorry now?\" \n\n\"I've said I always felt bad, I've always wanted to make amends... there's something else now, Dusty. I found God, or rather God found me... He's shown me the right path. I can't escape my past weaknesses and bad behaviour but I can try to make a better future. I'm so very sorry for the part I played in bullying you.\" \n\n\"Do you ever see any of your old friends?\" Dusty said. \n\n\"Sometimes in the street... I don't mix with them now but, yes, sometimes...\" \n\nDusty thrust her face towards Alice. \"Well, when you see them again, you can tell them they were right about me. I'm a lesbian, a lezzer! Let's see, what was it? An ugly, filthy, disgusting lezzer. Tell them that so they can feel good about themselves. As for you, Alice, you and your apologies can fuck off! You can fuck off and find your God somewhere else. And if you find him under the wheels of a moving bus, so much the better!\" \n\nDusty turned and stormed away. After a few yards she glanced back. Alice was still standing there, her face a mixture of misery, shame and remorse, and there seemed to be tears tricking down her cheek. Good! Dusty was two streets away before she became fully aware of what had happened, of how she had behaved. She felt a sudden rush of shame herself and turned to face a wall so that passers-by couldn't see her own tears flowing. Why did I do that? That wasn't me. Alice meant what she said...  \n\nHastily, Dusty retraced her steps. But Alice wasn't there... \n\n* * * * * \n\n\"Why did I act like that, Fran? I'm not a nasty person. No matter what, I've always tried to be a nice person. I've never told anyone to fuck off before. I've never even used the word. And Alice was obviously sincere.\" \n\nI touched Dusty's cheek. \"No, you're not a nasty person, in fact I think you're a very good person. But there was a lot of poison and hurt inside you, Dusty, and it had to come out sometime. It's like lancing a boil, the sooner it's done, the better. Perhaps things will start to feel easier for you now.\" \n\nDusty nodded. \"Alice... if I'd acted differently, Fran, I think perhaps Alice and I could have become friends...\" \n\nTears were pouring now and Dusty fell into my arms, sobbing bitterly. I held her close, letting her get it all out. I hoped that this would be all to the good for her. When she had calmed, I wiped her face as best I could then lifted her from the sofa and took her back to the mirror. \"Forget about the tears, Dusty, they can make anyone look bad. Just look again and tell me what you see.\" \n\nHer reply was hesitant. \"Someone nice...?\" And then a nervous little laugh. \"Someone a tiny bit like Audrey Tautou, perhaps...?\" \n\n\"Yes, someone nice, someone lovely. Hold on to that thought, Dusty.\" \n\nDusty came into my embrace. After a while, she said: \"Fran, why have you kept on bothering with me?\" \n\n\"Because I love you.\" \n\nGod, where had that come from? The words had just come out without me even thinking. And then I realised it was true. I loved Dusty. Earlier I had told her I was fond of her but it really was so much more than that. It had been building up inside me for some time without my realising, I think maybe from that first snowbound morning in bed together when I had kissed her sleeping lips. For a long time I'd believed my feelings for Dusty amounted to sympathy and compassion, and perhaps they were at first, but I knew now that they were so much more than that. \n\nDusty looked at me, wonder in her eyes. \"Did you mean that, Fran? Do you really love me?\" \n\nI felt a sense of wonder myself. \"Yes, Dusty, I meant it. And I don't mean I love you as a friend. I love you as a woman--it's taken me a long time to recognise it but ... yes, I love you.\" \n\nDusty looked me straight in the eye, one of the very few times she had done so. \"And I love you, Fran. Apart from my parents, you've been one of the few people who has always been there for me, who really cared for me. It took me a while to understand what I was feeling but I think I've loved you for quite a long time now. I didn't say anything, I tried not to show anything, because I didn't think...\" \n\n\"You didn't think I could be interested an ugly, filthy, disgusting lezzer,\" I finished for her. She nodded. \"Well, that's as may be, Dusty, but I don't know any ugly, filthy, disgusting lezzer. I certainly am interested in a shy, lovely lesbian master carpenter.\" I tilted her chin and kissed her softly. \n\n\"Fran, can I stay with you tonight?\" \n\n\"As many nights as you want.\" \n\n\"Just for tonight, Fran, for now,\" said Dusty, \"I just want to sleep with you like I did when we were snowbound, for the comfort. It's silly, but I'm still a bit scared of the whole thing and I don't think I'm ready for...\" \n\n\"You're not ready for sex yet?\" \n\n\"You do understand, don't you Fran?\" \n\nI gave her another gentle kiss. `'I understand. Don't worry about that, I can wait as long as it takes.\" \n\n* * * * * \n\nAnd I waited quite a few months. We carried on, truly loving each other, but poor Dusty seemingly unwilling or unable to commit to her true nature and me. We did our separate day's work, we would have our evening meal together, perhaps watch a little television or listen to some music together, and then we would kiss goodnight and Dusty would retire to her small flat above the carpentry shop. \n\nFrustrating? Yes, a little because I loved her and wanted her but I was determined not to push her into anything. One thing I had discovered about Dusty during the time she had been here: quiet and shy as she was, she could also be very stubborn. If I forced the issue, then she might easily back out for good. Whatever, good things are worth waiting for and I'd told Dusty I could wait as long as it took. So I continued to rely on my fingers and my tiny vibrator to help me out when I felt randy. \n\nThings changed one summer evening, literally without warning, about an hour after Dusty had returned to the flat. I'd had a shower and was sitting in my robe, reading a book when there was a quiet, almost timid-sounding, knock at the cottage door. I called out. \"Who's there?\" There was no reply, just a repeated knock. Although any kind of trouble was unlikely where we lived, I always kept a stout stick by the door, just in case. Checking that the stick could be easily reached if necessary. I opened the door. \n\nDusty stood there, clad in a bathrobe. Without saying a word, she stepped over the threshold , took my face between her palms, and bent her head to kiss me on the mouth. This was far from the usual goodnight peck of a kiss; her lips were so soft and gentle and clinging that I had to catch my breath. After long seconds, she drew back and I sighed deeply. In a low voice Dusty said: \"I've realised I can't go on being afraid forever, Fran\u2014it's no good for either of us and it's certainly not fair to you. I think I'm ready to try now, if you still want me...\" \n\n\"Still want you? God damn it, Dusty, I love you. Of course I still want you.\" I threw my arms around her and held her tight to me. \n\nTears welled up in her eyes. \"And I love you, Fran. I needed to be sure. I want you to make love to me. I know I can't replace Dot but I'll try to be good for you. I promise you, Fran, I'm not the type to wander. You'll be my first lover and my only love.\" \n\n\"There's no question of you replacing Dot,\" I told her, \"You are such totally different people.\" I buried my face against Dusty's shoulder so that she wouldn't see the sparkling of tears in my own eyes. Dusty smelled of soap, clean, sweet and fresh, as if she had just taken a shower before returning to the cottage. And there was a hint of body lotion, Obsession I think. We stood there for lord knows how many minutes, just hugging each other then without another word I took her hand in mine and led her to the bedroom. \n\nI switched on a small bedside lamp thinking its soft, dim light would probably suit Dusty best. We sat on the edge of the bed and cupping her head in my hands, I kissed all over her face, just gentle kisses, forehead, eyelids, nose, cheeks, lips. Her skin felt so soft beneath my lips that I almost whimpered with pleasure. Now was Dusty's moment, though, not mine. \n\nI released the belt of Dusty's robe so that the garment fell open. Beneath she wore only bra and male-style boxer shorts, both simple, non-exotic garments in plain white cotton. I slid the robe down so that it fell from her, easing her back and planting a series of butterfly kisses across her shoulders as I did so. I caressed her arms and torso and thighs with feathery touches, using only my fingertips, and brought my mouth to hers. As our lips pressed together, I allowed my tongue to brush against her lower lip. Dusty's mouth opened a little and the tips of our tongues met in gentle caress. Her arms gripped me to pull me closer and a low moan escaped her as a slight shiver shook her frame. \n\nI did nothing more for a while, except to lie beside Dusty and continue with gentle kissing. I nibbled her ear and her neck and throat and jawline and rubbed her body with light and tender touches. At one point she pulled away a little, saying: \"Fran, I do love you but I don't know what to do.\" \n\n\"And I love you, Dusty, and all you'll ever have to do is what comes naturally\u2014believe me, it will. But right now you don't have to do anything. Tonight's about you, not me. Just relax and leave it all to me.\" I continued with my tiny kisses until her breathing became low and heavy. I reached behind her and released the catches on her bra. As I took it from her, she put her hands over her breasts. \n\n\"Please don't look, Fran. My boobs are so small...\" There was shame in her voice. \n\n\"What does that matter?\" I said, \"Mine aren't all that big and anyway, I like small boobs.\" \n\nI took her hands away from her breasts but so as not to upset her, I didn't look at them immediately. Instead, I brought her hands to my mouth and gave each finger in turn a lingering kiss. And when I had done so, I sucked her fingertips over and over before turning her hands and burying my lips into her palms and nuzzling them. When I felt her relaxing again, I looked at her breasts. \n\nYes, they were small as Dusty had said but they were neat, shapely cones with large puffy areolas and hard stubby nipples. There was a cute little mole on her right breast, just below the nipple. \"Oh Dusty, they are so beautiful.\" I bent forward to give the tip of each breast a tiny kiss. ",
        "\"Do you really think so? I've been wanting to get them enhanced.\" \n\n\"Please don't,\" I said, \"I love your boobs, Dusty. It'd be a shame to do anything to them.\" Holding one breast in each hand, I ran my tongue around her pebbling areolas several times before taking one nipple between finger and thumb and toying with it while sucking the other into my mouth. I could feel the nipple growing more erect under the ministrations of my tongue and transferred my attentions to the other. I alternated between her breasts with fingers and tongue, sucking each into my mouth as far as possible. As I played and suckled, Dusty began to make soft moaning noises. But then she tensed up again and withdrew a little as if trying to crouch into herself. \n\nI had an idea. I stood up and immediately Dusty looked hurt and scared. \"Don't worry, I'm not going to leave you in the lurch again,\" I told her, \"I want you to feel safe and relaxed\u2014I'll only be a few minutes so don't panic and run away.\" \n\nI dashed into the bathroom and began to run hot water into the huge tub. Dusty had smelled of Obsession and so I added some Obsession bath essence to the running water. About half-a-dozen scented candles were scattered about the bathroom, untouched since Dot had died. I quickly lit them, made sure that the bathwater was a comfortable temperature, and ran back to where an apprehensive Dusty waited and grabbed her hand. \"Come along.\" \n\nHer robe remained where it had fallen and she was now clad only in the white boxer shorts. She tried to cover her breasts with her free hand but I stopped her. \"Dusty, I've already seen them and I've told you they are beautiful. You've got tits to be proud of, so be proud of them.\" \n\nI led her into the bathroom where the mingled scents of the candles were very strong. I dropped my robe and stood naked. Dusty stared, her eyes seeming to fix on my shaven mound, and then reached out a hesitant hand to brush against one of my nipples, giving a little sigh as she did so. \"You can't go in the bath like that,\" I said, \"Take your shorts down.\" \n\nShe turned her back, slid her hands into the waistband of the shorts and pushed them down so they fell at her feet. Seconds passed and then she turned towards me, her eyes lowered. Her slim body with its small breasts and cute tuft of curly dark hair on her mound was lovely. I took both of her hands in mine and said: \"Look at me, Dusty.\" She raised her eyes to mine and I added: \"You are perfect, Dusty, and don't ever believe otherwise. Just keep telling yourself\u2014you are perfect. Now, you want me to make love to you and I want it too but you're still nervous. So we're going to sit together in this lovely warm, scented bath until you're relaxed and comfortable.\" \n\nI climbed into the bath and had Dusty sit between my legs, her back to me. The water reached our shoulders and I pulled Dusty closer so that my breasts, with their already stiffened nipples, pressed into her back. I covered and gently caressed a lovely breast with one hand while rubbing slow circles on her midriff with the other. Dusty's nipple hardened under my touch and she leaned back with a sigh, beginning to relax already. Hesitant, she put a hand over mine holding her breast and pressed it a little closer as I placed fairy kisses over her shoulders and neck. \n\nAfter a while, when the tension seemed to be easing from Dusty's body, I turned her head and kissed her, allowing my tongue to trace the shape of her lips. She gave a little sigh and her tongue crept out to meet mine. She twisted against me so that she could bring one arm around my neck. Still cupping the one breast, I moved my other hand down so that it rested lightly on her mound. Instead of tensing again or flinching as I half-expected, Dusty pushed forward with her hips and my middle finger automatically slipped along her slit. \n\n\"Can we go back to bed now, Fran?\" she whispered. \n\nWe climbed out of the bath and I wrapped each of us in a large, fluffy bath-towel before leading Dusty back into the bedroom. I patted her dry, kissing and nibbling at different parts of her body as I did so. Taking her to the bed, I said: \"Lie face down, sweetheart.\" \n\nThere was a flash of apprehension in her eyes. \"Dusty, I promise you I am not going to do anything that will hurt you or offend you or upset you. Will you trust me in this?\" \n\nEyes wide, she nodded and settled onto the bed as I had asked. I lifted one of her legs and started to suck her toes while caressing her calf. I ran my tongue along her instep and she flinched slightly then giggled a little. I lifted her other foot and gave her delicious little toes the same treatment. Through my hands, I imagined that I could feel Dusty's fear dissolving. I gradually kissed and sucked my way down her legs, one after the other, and spent a long time licking the hollows at the back of her knees. Again, when I reached her backside I took ages to tongue-bathe and nibble my way over each buttock. \n\nI ran my tongue from the base of Dusty's spine, and as I did so, I slipped my hand between her legs, taking care not to be too invasive. I just wanted to check that she was responding. Her pussy felt wet and slippery to my fingers and I took that as a good sign. \n\nWithdrawing my hand for the moment, I continued to kiss my way up her back to the nape of her neck and one of her ears, which I nipped slightly before running my tongue all around it. \"You can turn over now, Dusty,\" I murmured. \n\nWhen Dusty was on her back, I licked from slightly above her pubic line to between her breasts, over her throat and chin to end with my lips on hers. I kept the kiss gentle; I was feeling confident now that Dusty was at ease but I didn't want to do anything to startle her. Our tongues mingled as we kissed and Dusty's hand crept to the back of my head to hold me close as she sucked my tongue. Moving away, I took hold of her hands and gave them the same attention that I had paid to her feet and legs. I sucked each finger in turn and licked her palms, to move up and mouth the inside of her elbows then under her arms and the undersides of her breasts. I paid several minutes lip-service to the mole on her breast\u2014I don't know if it did anything for Dusty but it was so charming that I couldn't resist. I nibbled and played with her pebbled areolas and nipples until they were erect and then returned to kissing her deeply. By now Dusty was responding in the way that I had hoped and intended, holding me close, her lips and tongue as active as mine. Her moans and sighs, with the occasional whimpering noise, had become continuous. \n\nIt seemed obvious that Dusty was fine but knowing how apprehensive she'd been, I checked. \"Dusty, sweetheart, are you really comfortable with this?\" \n\nDusty just murmured: \"Oh yes, please don't stop Fran.\" Continuing to take it easy, I licked my way down her torso, stopping only to spend a few minutes with my tongue delving into her navel which must have been sensitive for she started giggling again. I moved down to settle between her legs. \n\nDusty had a small pussy but I could see that my careful and lengthy foreplay had worked for her outer lips were heavily swollen. The sparse covering of hair was very damp with beads of moisture clinging to it, and I could smell the strong muskiness of arousal as small droplets oozed from her pussy. I kissed all around her lips then teased them apart with my fingers, exposing sweet and delicate inner lips and a tiny seed-pearl of clitoris protruding slightly from its hood. She glistened with pussy-juice. \n\nWith just one finger, I eased into her. Dusty's vagina was very tight but well-lubricated and I didn't find it too difficult to penetrate her. I sought for her g-spot and then a great surprise, I think for both of us. Dusty must have been more aroused than I thought because without warning she spasmed and her pussy clenched down hard on my finger. At the same time, an explosive \"Oh!\" burst from her lips. Her body relaxed and she was panting heavily. It seemed only a mild orgasm but it was a start. \n\nI began licking her pussy in earnest while keeping my finger in place, caressing the inner walls to stimulate her further. I ran my tongue all around the outer lips and then nibbled at her inner lips. My mouth was quickly coated with her tangy-sweet juice and I tried to bury myself even further into her pussy. Dusty's breathing became shallow and heavy and little tremors were shaking her hips. Within seconds she was gasping rapidly and I guessed that she was near once more. I fastened my lips onto her clitoris, sucking strongly and flicking it with the tip of my tongue. \n\nDusty came again and this second time it was massive. She grasped my head as if to try and pull me inside her, her hips jerked a number of times and she was crying out in her ecstasy \"OhGodohmyGodohGod!\" \n\nNot knowing how sensitive Dusty's bits might be, I didn't want to overdo it so I moved back up and folded her in my arms. Still fighting for breath, she clung to me, wrapping arms and legs about my body. \"That was... wonderful... so wonderful...\" She fastened her lips to mine, running her tongue over my mouth. \"Is that me I can taste?\" \n\n\"Yes, lovely isn't it?\" \n\n\"Uh-huh.\" She cuddled closer as her heartbeat and breathing slowed down. After a while, she said in a tone of awe: \"I don't feel scared any more, Fran.\" \n\n\"Dusty, there's no need to be scared now that I've got you. So you can sleep in peace.\" \n\n\"But Fran, you haven't had it yet...\" \n\n\"There's no need right now, sweetheart,\" I said, \"I told you, tonight was for you. We've got all the time in the world for you to love me. I'll just take this off\u2014\" my towel was still wrapped around me, \"\u2014not because I'm expecting anything from you but because it's so much nicer with bare bodies holding each other. Get some sleep now. Remember what Scarlett O'Hara said: 'Tomorrow is another day.' \" \n\nI lay behind Dusty and spooned our bodies together, one arm around her, a hand resting lightly on a breast. I listened as her breathing slowed until she was asleep. In my mind I said: I've done what you told me, Dot, found someone new so I won't be lonely any more. I'm sure you'd like her... you might even love her... I could almost imagine merry laughter and a voice saying: That's great, my pretty lass. I'll keep an eye out for both of you... and cherish her or I'll come back and kick your arse... oh dear, excuse my heavenly language...\" \n\nHappy and smiling, I drifted off to sleep myself. \n\n* * * * * \n\nI took Dusty to meet my folks and they welcomed and liked her. I took her to see Emma and Sam whom she knew slightly through her father; Emma had had a little boy, Jonathan, who was now two. The children took to Dusty straight away and she to them. I guessed that some of her workshop time would soon be given over to toy-making. I also called Lainy and Caro to tell them that everything had come out right in the end. Dusty was still reluctant to face her parents with the truth about us, though, and I didn't push it knowing that she'd come round in her own good time. \n\nThere was someone else I needed to tell about us. I got on the phone one afternoon and made a call. \"Hello... Mother Barrow... it's Fran... there's someone I'd like you to meet... if we can come to visit you soon?\" \n\n* * * * * \n\nAfter Dusty and I had been together for a few months, she plucked up the courage to come out to her family. I think Mother Barrow had something to do with that. When we visited, she told Dusty that if a strait-laced Yorkshire farming family like hers could accept a lesbian daughter, then surely a Sussex family could. I suspect that to Mother Barrow, everywhere south of Yorkshire was cosmopolitan, sophisticated and tolerant\u2014I didn't disillusion her. Anyway, to Dusty's surprise she found that her parents had suspected it all along. \n\nThey were just pleased that she had found happiness in a stable relationship. \n\n\"Don't you realise, Louise,\" said her mother, \"that we love you so much we never really cared what you are as long as you're happy.\" \n\n\"Anyway,\" Roger Duncan grinned, giving his daughter a hug, \"if we were looking for clues, what sort of small girl prefers a hammer and nails to a Barbie doll?\" \n\nWhile we were with Dusty's parents, she had her chance to make her peace with somebody else. We had gone to the local market town and following on from our shopping decided to go for a coffee. As we approached the coffee-shop, Dusty suddenly stopped and grabbed my arm, pointing down the street a few yards to where a young woman in Salvation Army uniform had taken up post, standing with a collection box. \n\n\"Is that Alice?\" I asked. \n\n\"Yes. Fran, what shall I do?\" \n\n\"Do whatever you think is right, sweetheart,\" I told her. \n\nDusty hesitated a moment, then said: \"Please wait here, Fran.\" She approached the other girl and I heard her say, voice uncertain: \"Alice... Alice, I was so nasty to you the last time we met. You were trying to make amends and I threw it in your face. Can you please forgive me?\" \n\nThe Salvationist gave her a tremulous smile and even from where I stood I could see tears in her eyes. \"I guess I deserved it. I'm the one who should beg your forgiveness again, Dusty. We were so vile to you. Thank you for coming to see me.\" They looked at each other for long seconds and then, spontaneously, both opened their arms and they hugged. I think that final healing came for Dusty at that moment and I think she also made a good friend. After a minute or so, Dusty turned and beckoned me over and I wondered how she was going to introduce me. As I drew near, Dusty reached out to take my hand and there was pride in her voice as she spoke. \"Alice, I'd like you to meet Fran... my wife... my wonderful wife... \" \n\n* * * * * \n\nDusty and I have been together for several years now. I love her and she loves me and so far it's worked out well. And Lainy was right. I still feel love for Dot although now it's a different kind of love. I guess true love never really dies, it simply adapts. \n\nWe have expanded our separate businesses: Dusty's furniture is sought after, being as well-regarded as Dot's was: commissions are booming and she has taken on an assistant, a good lad from the village who loves woodwork and shows great promise. In addition to produce I now grow flowers to provide local florist shops and hotels. I've also acquired some additional land so that I can have my goats at last and I'm thinking of going in for cheese-making. Old Joe Brownlee's 'boy' works for me and Joe himself comes in occasionally to help out despite his age. Mary Little is now Assistant Dean at the agricultural college and at her request I go over occasionally to give talks on running a small agricultural business. We've built an extension onto the cottage so that it's more roomy and we've modernised the carpentry shop and the flat. Everything seems to be just great. \n\nThe change in Dusty has been amazing, due, I think, to a combination of things. She has my constant love and support together with that of her family, as well as friends like Alice and others. And she takes great pride in her work and business skills. She is now a bright, confident young woman who carries herself with assurance, no longer self-critical and trying to hide from the world. I am so proud of her. \n\nSometimes I worry a little, though, mainly because of the age gap\u2014at last I can understand Dot's misgivings from early in our relationship. I'm fourteen years older than Dusty and I wonder if at some point she'll find someone younger and more attractive. Then again, Dot was almost twenty years older than me and it never occurred to me to stray because I loved her so dearly. Anyway, I make sure Dusty never sees my concern\u2014I don't want to cause her any kind of heartache. \n\nSo will this last? I think so. \n\nTime will tell. \n\nThe End"
    ],
    "authorname": "Maonaigh",
    "tags": [
        "shy girl",
        "homophobia",
        "bullying",
        "older/younger",
        "lesbian love",
        "first time",
        "gentle seduction",
        "orgasms"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/as-time-goes-by-ch-03-1"
}