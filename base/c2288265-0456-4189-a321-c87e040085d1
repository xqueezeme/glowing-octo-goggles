{
    "title": "Officers and Men Ch. 03",
    "pages": [
        "I told my Mum that something had happened to Andy and that I was heading back to London to sort it out. She gave me a hug and said that she hoped it all worked out OK.\n\nI drove back to London at speed, reaching our barracks at about half nine that evening. While I wanted to dash to the Guard room and speak to Andy I knew that to keep our secret I needed to find out some other way, so went to the Operations Room and nonchalantly put my head around the door and asked how things were going, after all I was a bit concerned that something had happened and our secret was out.\n\n\"Andy Sargeant has been nicked Mam,\" said the duty operator.\n\n\"What?!\" I said in surprise.\n\n\"Friday midday Mam, three MP's came into the cookhouse and asked him to go with them.\"\n\n\"Bloody hell!\" I said, \"Where is he?\"\n\n\"Guard room Mam,\" said the Operator.\n\n\"Well it's nothing to do with me this time,\" I said with a soft grin, everyone knew about our little problem some weeks ago. \"Has anyone been in to see him?\" \n\n\"Lieutenant Hall has Mam, took him his gear and everything.\"\n\n\"I'll go visit. Thanks for letting me know.\" I said, and left.\n\nThe thought I'd had on my drive down just wouldn't go away; perhaps it was to do with me. Perhaps someone had smelled the big hidden hairy rat that was our relationship and he'd been locked up until he confessed he was screwing the boss into ecstasy. His lanky boss that had taken down a cabinet minister's son, his lanky boss that had not a month ago almost caused a monumental fuck up that might have put The Army, London District and the Intelligence Corps on the front page of all of the tabloids. We were the Int, the last thing we needed was publicity.\n\nNo; we had been better than that.\n\nI walked across the dark empty parade square at the front of our barracks and knocked on the guard room door. It was opened in a flash and a very smart rifleman leapt to attention. \"Mam,\" he said.\n\n\"Can I have a chat with Corporal Sargeant please?\"\n\n\"Well,\" he said with some discomfort, \"Not really Mam, he'd under close arrest.\"\n\n\"Oh for Christ's sake Deano, let the Captain in, she isn't going to try and spring him.\"\n\nI will confess that at one point on my drive home I did consider it -- briefly!\n\nThe guard commander came to attention and saluted, \"Deano, get Captain Major a cup of tea, and make one for the jailbird in there.\"\n\nDeano, a very young looking Rifleman fresh out of training brought two battered china mugs out and took me through the back corridor to where the long row of cells were.\n\nHe opened the first, \"Andy, you have a visitor...\"\n\nSeeing me, Andy leapt to his feet with just the biggest smile, but seeing the Rifleman behind me came to the best attention that he could with no laces in his shoes and wearing trousers with no belt or braces.\n\n\"Mam!\" he said.\n\n\"Corporal Sargeant.\" I replied, \"Tea?\" I handed him one.\n\n\"Right Andy,\" said Pete, \"we're going to trust you with the Captain here; Mam we'll be just outside if you need us.\"\n\n\"Thank you Sergeant,\" I said, and pulled the cell door closed behind me. \"So Andy,\" I said, conscious that there could be half a dozen men outside listening to us, \"what's happened?\"\n\n\"Not really sure Mam,\" he said. \"Three MP's came into the office yesterday and asked to see my ID card and said that I had to go with them. They took me off to their truck and locked me in the cage and drove me to the police station. The police said they'd had a report that I'd raped someone and they wanted my DNA to check if it matched a sample they had. The MP's brought me back here yesterday and that's all I know.\"\n\nHe looked so scared and all I wanted to do was hug him and tell him it would be OK.\n\n\"Is it...\" I thought back to the conversation I'd heard half of the other day but didn't want to confess to, \"Is it your ex-fianc\u00e9e?\"\n\n\"Could be,\" he said, \"The thought has crossed my mind, but they haven't given me any details.\"\n\nI stood up, my rage burning inside me a second time, although this time it wasn't my fault.\n\n\"OK Corporal, leave it with me and I'll get straight onto it.\" I finished my tea, needing so much to take my man in my arms and comfort him and by implication me as well, a kiss at the very least, but that I really couldn't do in these circumstances.\n\nAndy stood up again, \"Thank you Mam,\" he said reading my apprehension and desire so well. He came to attention again adding \"Mam,\" he swallowed hard, \"I wonder if you could get my phone from the Guard commander and contact my girlfriend for me.\"\n\n\"Of course Andy,\" I said, hearing someone open the cell door; I was right not to discuss what had happened, they were listening! \"What do you want me to say to her?\"\n\nHe looked at me with that gentle smile of his, \"Tell her... tell her I'm so sorry I couldn't get to her parents place and I hope they didn't feel let down. Tell her...\" he looked into my eyes, \"Tell her I love her, I love her so much that it hurts and I promise that as soon as I get out of here I'll be straight back in her arms... where I belong.\"\n\n\"I'll see to it that she gets the message Andy, in fact I'll add some romantic shit, women love all that.\"\n\n\"Thank you Mam, thank you so much.\"\n\nI turned, gave him a surreptitious wave and took his phone back to my room for safe keeping. I also rang his Mum and Dad and explained what we figured might have happened.\n\n\"Bitch!\" Snarled Pam, \"just you fucking wait until I get that fucking woman to one side, I'll...\" Dave took the phone and said he would contact Lee who could contact the Met Police and find out what was going on.\n\nNot having slept more than a few hours on that Saturday night, I was wide awake and in the shower by seven and ready to kick some doors down.\n\nI contacted the Royal Military Police who could only give me an incident number and suggested I contact the Met. I did so, but as Captain Major of the Intelligence Corps. They referred me to, of all people, the Avon and Somerset Police! They couldn't tell me anything as the investigation was still taking place. I replaced the receiver and contacted my new best mate Katy.\n\nThe second her gentle caring voice answered the phone, I was crying.\n\n\"Hey hey, Linnie Darling! It's OK, Avon and Somerset's finest are already on the case. She chatted with me for a while longer confirming that Lee had found out that the DNA sample was a match and was from a condom supplied by his ex-girlfriend Alice who made a complaint that she had met him in London a few nights ago when she attempted a reconciliation, and they had started to heavily pet in the back of her car. She had tried to stop him because she knew that he'd slept with some other woman so he put on the condom, and then she begged him to stop but he raped her.\n\n\"Which night?\"\n\n\"Last Thursday,\" said Katy.\n\n\"Bitch!\" I screamed, \"That fucking bitch!\"\n\n\"Linnie!\" said Katy in a panic.\n\n\"Is Lee there?\" I said in a rush.\n\n\"No... he's at work.\"\n\n\"Find him!\"\n\n\"What?\"\n\n\"Lee, find him.\" I was panting now, \"Then you tell Lee to tell the detective to contact our company HQ and ask where Andy was on Thursday.\"\n\n\"Why?\"\n\n\"Because that mad cow was on the phone talking to Andy when I came back into the room from swimming. Swimming in a fucking hotel pool 300 miles from London. Now Andy's a big lad but no way would it stretch that fucking far...\"\n\n\"Linnie you fucking beauty!\" She screamed, \"I'll call you back.\"\n\nI went across to my office, and waited for David's phone to ring. I woke from a light doze an hour later and ran into his office to answer it.\n\n\"Intelligence?\" I said brightly and with due innocence.\n\n\"Good afternoon, can I ask who I'm speaking to please?\" said the voice.\n\n\"Captain Lin Major,\" I said, \"How can I help?\"\n\n\"My name is Detective Constable Ian Cook from Avon and Somerset police. We're trying to confirm the location of Corporal Andrew Sargeant last Thursday evening, at about 2030 hours.\"\n\n\"Oh that's easy,\" I said calmly, \"he was with me in my hotel room, working on our plans for the following day.\"\n\n\"Where was the hotel?\" he asked. \n\nI told him.\n\n\"Can you evidence that?\" he said sounding much happier.\n\n\"Yes I have receipts for the two rooms,\" thought I'd throw that in, \"and for the meal we ate that evening in the hotel restaurant, we were there for four days from Monday evening through to Friday Morning when we left. We got to know the waiters and waitresses extremely well.\"\n\n\"And you would have known if Corporal Sargeant had travelled to London in that time?\"\n\n\"Definitely,\" I said, \"We left for work at eight in the morning, were together at the local Army Reserve Centre all day with other witnesses, back to the hotel for six or half past, then dinner -- more witnesses of course - and a few more hours work in one of our rooms.\"\n\n\"Excellent!\" said the Detective, if I send you a statement form could you fill it in to confirm that for me?\"\n\n\"Certainly, send it now and I'll write it, sign it, scan it and mail it back to you, hard copy in the first class post tomorrow morning.\"\n\n\"Could you let me have the details of the hotel?\"\n\n\"I'll email you the confirmation they sent me and I'll scan the receipts for you.\"\n\n\"Thank you Captain.\" He said brightly.\n\n\"Can I ask what this is about? I understand you took his DNA?\"\n\n\"Not really Captain, but this has blown the lid off of the problem, and we'll be re-reading somebody's sworn bloody statement, that's for sure.\"\n\n\"Excellent,\" I put on my strong Army Captain voice, \"when can I have my Corporal back, he's locked in the Guard room.\"\n\n\"I'll contact the Met directly, they should let the RMP know.\"\n\n\"Quick as possible please, he's been in there since Friday.\"\n\nI could hear a chuckle from the other end. \"Put me through to your guard room,\" he said, \"I'll tell them to let him go!\"\n\nI had to work hard to keep the emotion out of my voice. \"Thanks Detective, I want him back...\" quickly adding, \"At the coal face, can't have him loafing around in jail...\"\n\nI completed the call putting him through to the Guard commander, and hugging Andy's mobile to my chest, and opened my Email account on David's PC. The statement form arrived and I completed it, my phone wedged against my ear and talking to an overjoyed Katy into the bargain, then signed it and walked through to the multi-function printer scanner thing and scanned everything financial I had kept; defending the country against all enemies foreign and domestic is one thing, keeping accountants happy is much harder.\n\nOnce I had emailed the whole lot off to DC Cook I walked out into the afternoon sunshine and across the square to find the Riflemen shaking his hand and sending him on his way back with laces in his boots and a belt on his trousers and his bright green beret back proudly on his head. \n\nI wanted to run to him, my wonderful secret boyfriend, my man; I wanted to run to him, hug him and tell him what me and his sister and brother in law had done, and how much I'd missed him.\n\nAs I started to walk towards him I heard a voice, it was David the second in command, his rush to the barracks from his weekend away obvious.\n\n\"I've just heard, Thank God they've sorted that out.\" He grinned and we headed over to Andy.\n\nWe met halfway, \"Andy, yours I believe.\" I held out his phone, \"I contacted you girl,\" I said, \"she got your message.\"\n\nAndy became the perfect Guardsman and jumped to attention, saluting the two officers in front of him.\n\n\"Thanks Mam,\" he said, reaching out for his phone and putting into the large patch pocket of his camouflage trousers.\n\nI looked him up and down, \"You OK Andy?\"\n\n\"Could do with a shower and a comfortable bed Mam, right as rain after that.\"\n\n\"Well done Corporal Sargeant,\" said David with a grin.\n\n\"Thank you Sir, I understand from the RP Sergeant that Captain Major raised her voice a bit and before I know it I'm out and free.\"\n\n\"I had a phone call from Avon and Somerset Police, seems the person that reported you didn't know that you weren't in London.\" \"Bloody good job you stayed over Lin,\" said David with a knowing smile. If only he really knew!\n\nWe both headed for our rooms at separate ends of the barracks, and he texted me the second I entered my room.\n\n\"I'm hungry,\" he wrote quite simply, \"Italian, Piccadilly, sixty minutes. Dress casual but revealing.\"\n\nI texted straight back, \"message received and understood.\"\n\nI showered, washed my hair, did a bit of an emergency make-up fix and let my hair out of my military pony tail and associated clips. I dressed in a tailored lace top that Katy had bought for me 'because of my fantastic tits' with a balcony bra under it, and went made and put on tights and a short skirt.\n\nI put my green Softshell over the top of all of it, and decided to drive out in my car to try and avoid any 'didn't those two go out on the same evening before?' two and two putting together to make an embarrassing four by the Guard room staff.\n\nI drove out, parked my car by a meter and pumped it full of change to keep it there all evening. I jumped on the Tube and was at Piccadilly Circus in a matter of minutes.\n\nI wasn't the same happy go lucky 'Downtown' whistling chick that had done the same thing a couple of weeks back, this time I was on edge, buzzing with adrenalin and really not sure how I was going to stop myself jumping on my man the second we sat down.\n\nI trotted up the stairs and into the evening just starting to darken.\n\nThere leaning on the wall of the Tube station entrance, in the same green jacket as me was Andy. Despite his near miss and his incarceration, no his second incarceration, he looked wonderful and was even wearing the same cheeky grin that he normally had, especially when I was there to see it.\n\nI ran to him.\n\nWith my arms around his neck I clung to him, hugging him for all I was worth and trying hard to impact all of my emotion that I'd held in check since his text message Friday evening. Before I knew it I was weeping into his neck and shaking.\n\n\"Hey Baby, it's OK.\" He tried to calm me.\n\n\"Oh Andy,\" I sniffed, \"I was so scared, I thought... I don't know what I thought, but I've never been so scared in my life! Oh thank God it's all OK.\" \n\nI put my hands on his cheeks and kissed his lovely face, every bit of it until I was sure that I was kissed out and he knew for certain that I had worried about him.\n\n\"All down to you Baby,\" he said, at last able to use that particular term of endearment that I loved to hear from him.\n\n\"I might have had a bit to do with it,\" I grinned with just an air of self-satisfaction to it.\n\n\"Thank you,\" he kissed me long and hard and it made my head spin. \"I could eat a fucking horse,\" he said, \"let's go.\"\n\nAs we walked to our little Italian place that we had our first London date in, he chatted about what had gone on back with the Avon and Somerset Police.\n\n\"Walking to the tube station I had a long chat with Lee. Lee had a chat with Mum and Dad and it seems that Detective Cook had a bit of a bollocking from the Detective Chief Inspector for not doing a simple check like where the fuck I was when the supposed rape was supposed to have taken place. Mum reckons the dopey fuck was so excited to have a real DNA sample like a condom and just wanted to nick people. Of course the army locked me up, a civvy would have been on bail.\n\nThe DCI is an old mate of Mum and Dad's and once he found out that Alice had tried to screw over Dave and Pam's boy, he asked her to come into her local station to confirm some things and the nice friendly detective got her again to very sweetly swear on oath that the exact time and date of my attack. Her sister gone with her and she confirmed that Alice had phone her to ask what she should do. She got out her phone and showed him the call. \n\n\"He's mental,\" the sister had said with some spite, \"But then that's the bloody army for you.\"\n\nAlice said that I had dumped the condom on the floor of the car and ran away once I realised what I had done.\"\n\nHe paused as we entered the restaurant, and the waiter smiled and called us straight across to the empty booth we had occupied on that wonderful night.\n\nWe ordered the same antipasti but this time I went with a Chicken Napolitano while Andy had a further mountain of pasta with a classic bolognaise sauce.\n\n\"The DCI reminded them they were on oath and they both nodded proudly. Then it seems that he showed them copies of the receipts and asked how I could have been having dinner with an Army Officer up north 300 miles away and still be able to rape her in a car in a car park in Kensington Gardens.\n\nThe sister insisted that it was just the army covering up for their own and what other witnesses did they have. He showed them the CCTV footage of you and I walking through the hotel reception on our way back to your room at the exact time I was supposedly raping her.\n\nThis went for about ten minutes that Alice eventually cracked and claimed it was her sister's idea and she'd never wanted to do it. The sister blamed her and the DCI arrested them both for attempting to pervert the course of justice. They were kept in cells overnight and released on bail the following morning. Both of them are claiming they have mental health problems.\"\n\n\"Can't argue with that,\" I said.\n\n\"Apparently Alice said it was post-traumatic stress disorder because I'd been away at war so often.\"\n\n\"Cheeky bitch!\" I giggled.\n\n\"Yeah well,\" he said, \"Avon and Somerset remanded them both on bail with a condition that they aren't to come within 100 metres of me.\"\n\n\"I'm pleased.\" I put out a hand and squeezed his. \"I'm not pleased that I missed my weekend with you because of that fucking woman and I now have to wait another two weeks until we can be together again and I get the nastiest feeling that I'll have come on just in time for that.\"\n\n\"I'll take my chances,\" he grinned, \"besides you are just as gorgeous when you are on as when you aren't.\"\n\n\"Awww Andy,\" I purred, \"you say the sweetest things!\" I chuckled.\n\nWe finished our dinner and Andy was starting to flag just a little bit. After all he hadn't slept well for the last two nights and had been quite stressed. It being only just gone eight, I suggested that he walk back to my car, I give him a lift to a few blocks short of the barracks and I go round the block a few times and drive back.\n\nWe did that and kissed and cuddled in my car for a great half an hour and we eventually pulled apart and he walked back. As for me I decided that I would drive the hour or so to Mum and Dad's happy that I could tell them the good news, have supper with them, sleep over and drive into work the next day with no suspicions as to the Corporal and the Captain coming in within twenty minutes of each other for a second time.\n\nIt worked well, and I rang him to tell him what I was doing.\n\nAnd of course it was just as he was walking into the barracks and he had the same barrage of banter as we'd had before. By the time I reached Oxford, I was starting to feel my two disturbed nights as well and parked on the drive just in time. \n\nMum and Dad were a bit shocked by the whole case but pleased that all was resolved, and looking forward to seeing him for our next weekend off.\n\nI was hoping for a chance for the army to send us somewhere really impressive for a couple of weeks in the summer like Cyprus or Gibraltar or the Caribbean but they didn't think that was a real necessity for us; they did however send a section of us across the Atlantic to Canada. This time as well as Andy, there was my colleague Mick Turner now promoted to Captain, one of the sergeants from the team and a dozen operators and while it was nice to be away from the office and on a bit of a jolly with Andy, we couldn't act any differently to when we were there. \n\nWe were on camp and living in barracks so I couldn't even go out with Andy in the evenings unless the whole section did. It was hell.",
        "And it was about to get much worse.\n\nWe arrived in the camp in a lorry and we were all bundled in the back. There was the usual collection of colourful boards at the entrance to the camp announcing which regiments were there. I took only a cursory glance at them as we drove in.\n\nThere was a Scottish infantry regiment, a Scottish armoured regiment, some logistics and a detachment of Royal Military Police, plus a couple of squadrons of armoured regiments detached from their home bases as part of this battle group.\n\nThe exercise went well and Andy was sent out into the plains, sometimes in a personnel carrier, and once from a helicopter. We just did our jobs, no mobile text messages of course, and I saw him just twice.\n\nHe ran through the tented headquarters that had been set up and reported to Mick and I. \n\n\"Mam!\" he said jumping to attention, and seeing another Captain next to me, \"Sir!\" he flung up a salute just as the Guards had taught him.\n\n\"Corporal Sargeant!\" said Mick, \"How's things out there?\"\n\nHe replied with the age old army response, \"All going to plan sir!\" he snapped, \"just not sure which plan.\"\n\n\"All good then,\" I said, \"There is someone around here that knows which version we are on, and when I see him I'll be sure to let him know.\"\n\nAndy reported on what he had to report on, and Mick told him to grab himself a quick meal in the HQ canteen that seemed to run 24 hours a day.\n\n\"Thank you sir,\" he said, \"I'll do that, not had a meal cooked by someone else since got off the plane.\"\n\n\"I'll join you Andy,\" I said, and we walked across the tent camp to the largest one from which steam and the occasional clatter came. We round a corner, \"Put your beret on,\" I whispered. He did so taking off his helmet.\n\nThis meant, quite simply, that everyone would see that he was Int Corps and so was I and there would be less discussion of why a Captain and a Corporal were sat quietly chatting to each other in the same mess tent and not officers/men as it might be expected to be.\n\nThe cooks had somehow managed to produce a quite reasonable cottage pie and we took a plate each along with a superb apple crumble. Comfort food, and that was what we both needed.\n\nWe sat opposite each other on one of the large form tables with benches each side and began to eat. A couple of tired looking squaddies approached our tables, saw our conversation about to start and our 'green slime' berets and headed to the next table just in case.\n\n\"Hi Andy,\" I whispered.\n\n\"Hey Linnie,\" he said not smiling, but still making eye contact.\n\n\"Andy, I've missed you so much,\" I said taking a forkful of mashed potatoes.\n\n\"Me too,\" he said staring at his plate in that 'operations haze' that takes over after a few days, \"I love being in love with you, but,\" he took the chance and looked at me and smiled, \"when did this shit become so hard? When did I stop wanting to go out and do my job that takes me away from you?\"\n\nI struggled not to smile, instead taking a long slug of my tea. We were less than four days into a three week exercise and to try and find some light at the end of the tunnel, I asked him what we would do with the week leave we would have after we flew back to the UK.\n\n\"I know what I want to do,\" he said.\n\n\"After that,\" I said taking another fork of cottage pie, \"I'd quite like a few days away, anywhere you fancy going?\" He looked at me across his mug of tea and grinned, and I barely stopped myself from laughing at him. \"I've no problem with you going there Andy,\" I whispered, \"But I don't mean...\"\n\n\"Lin!\" It was Mick, clasping his own mug of coffee with a couple of slices of bread spread thick with jam, one of Mick's staples on operations, \"and Andy!\" he said with his usual ebullience. \n\nMick was about three years behind me, a boy from a council estate, with parents both on sick benefit that had left school with no qualifications, a bad attitude, and several warnings from the police and the biggest chip on his shoulder.\n\nThe only job he could get was a night shelf stacker in a huge supermarket on the outskirts of town; he hated every moment of it and when he grumbled, the store manager pointed to where the door was and said the choice was his. Shelf stacking at four in the morning he saw some old friends from school, now boyfriend and girlfriend.\n\nIt wasn't that they ignored him on purpose, in his store uniform with all his colleagues he was invisible and faded into the background. Once they passed him for a third time, he spoke to them. They both seemed pleased to see him.\n\nThey were both about to finish their A levels with a view to University, and they asked what about him.\n\n\"Oh, I'm just doing this to fill in time and earn some cash.\" He made up on the spot. The obviously didn't know that height of his qualifications was a D in Design Technology.\n\n\"You taking a year out?\" said the girl.\n\n\"Errr, yeah,\" he fabricated, it had been almost two.\n\n\"That's so cool, we aren't travelling until after Uni. What are you doing when you get back?\"\n\n\"Not sure yet,\" he said, \"Several options I got on the boil, you know.\"\n\nHis options at that time were whether he was going to find another job that would employ someone with no qualifications and almost a criminal record. In fact the first supermarket he applied to, not far from his house, recognised him as part of a group of little shits that used to hang around in their mall and cause trouble so sent him on his way pretty quick hence his massive walk each morning to get to this store. \n\nThe girl hugged him and boy shook his hand,\n\n\"We'll see you around Michael, yeah!\"\n\n\"Yeah,\" he said with a hard pressed grin. He wouldn't see them again that was for sure, not unless they became doctors, dentists, police officers or social workers; that was the only way people like him would meet people like them.\n\nHe walked home at half past six that morning watching all the commuters in the expensive suits driving their expensive cars and finally had the epiphany that his teachers had been trying to drum into him since he went through puberty and his problems began. Perhaps it hadn't all been easy for them. Perhaps you had to do it for yourself. The two old school friends both came from the same background he did, perhaps...\n\nHe kept on walking, feet sore from the cheap safety shoes the firm made him wear, and came to the local college just unlocking the doors and he went in and sat down in the refectory with a coffee from the machine pulling his jacket around his shoulders with some small amount of shame to cover up his corporate clothing. He saw a few more people he recognised in passing and they all nodded to him and smiled.\n\nAs his head started to nod there was the clatter he'd been waiting for and the advice and guidance office opened and he walked in, he still insists it's the point that he turned his life around. The advisor took one look at his uniform still with the dust on the knees of his black trousers.\n\n\"Resits?\" she said. He nodded, \"Take a seat, let's get you signed up and educated.\"\n\nSo he went back to college 6 weeks later, retook his exams the following summer and got excellent results. The college put him straight into a foundation course and he blasted through that, so much so that the college applied for a scholarship to a Russell Group University for him where he was accepted. He studied psychology and despite his apparent poor start he graduated with a first. \n\nOver a beer one night he admitted to me the real reason he applied to Sandhurst; his father had been in the army, and his bullying older brother had joined up as well, and they had trained him to be mechanic.\n\nHis brother and both parents threw it in his face at every opportunity about how successful he was, he had a career, he was a going to be a corporal in a few years, he had travelled the world; blah blah blah.\n\nAs he progressed and got qualifications over and above his brother and was the first person in the family to go to University, they all had to change their tone slightly so now it became his brother didn't have a huge loan, his brother had done it all himself, his brother had worked hard to get what he had. He hadn't of course; his brother had signed his life away the way we all did.\n\nHe asked if they felt that he hadn't worked hard.\n\nMick's hands were clean, not like his brothers, and his brother would always have a trade.\n\n\"And dirty hands...\" said Mick who swore that he never would.\n\nSo he decided that he would go to Sandhurst, get a commission and he would make a point of having his brother salute him not once but twice a year, whether it meant flying to the other side of the world he would do it, just to piss off that smart-arsed grease monkey and let him know that even with his trade he would always be second best. He knew his former infantryman father would respect his commission.\n\nAt least one occasion I know that his bi-annual revenge fest took place as we were both just happened to be in the Logistics Corps Centre he was based at and, as Mick had described, his brother was so army mad he saluted Mick and I as we walked into the workshop he was working in.\n\nDespite his desire to get a commission he was the least rank conscious soldier I ever met and he just had the ability to get one with everyone and could keep the respect of all he worked with. Mick was a mate, and probably the nicest soldier (after Andy) I ever met and technically Andy reported to him while he reported to me, so when he bounced into the seat next to me to chat with Andy I couldn't really complain.\n\nThe three of us had a chat and some banter until Andy looked at his watch and said he had to go and meet up with the patrol he was assigned to go back out to the war, albeit a pretend one, and all too soon we'd finished our meals.\n\n\"Until later Mam,\" he said with a smile, \"Until later young sir.\" He said to Mick, Mick grinned, it was an 'In joke' they shared.\n\n\"Fuck off Corporal Sargeant, there's a good lad.\" He grinned, slapping Andy a resounding blow on the back and making out he'd hurt his hand on the body armour.\n\nAndy walked away with only one look back at me and what I took to be the hint of a wink.\n\n\"I like him,\" said Mick.\n\n\"Yeah,\" I said sipping the last of my tea, \"I met his family, they're all really nice as well.\"\n\n\"That all passed off OK?\"\n\n\"Yeah, I went down and apologised and they couldn't have been nicer. Turned out it was his ex-girlfriend, mad bitch accused him of rape a few weeks ago.\"\n\n\"It's alright for you, I had to deal with the girlfriend and the girlfriend's mother. Cried all kinds of infamy against me, virtually blamed me for ruining the entire day. Bitch.\"\n\n\"Sorry Mick,\" I said I grinned.\n\n\"No problem,\" he said, \"Did you meet his Mum and Dad?\"\n\n\"Yes,\" I said.\n\n\"Old Bill,\" he said using the popular slang for police, \"I bet the girlfriend isn't going to come out of that little charade so well.\"\n\n\"I doubt it.\"\n\n\"He told me his brother in law is former RMP and has joined the police locally, so that's three cross coppers after her.\"\n\n\"Oh yeah,\" I said, \"And I wouldn't want to get on the wrong side of his sister either.\"\n\n\"You've met her?\" said Mick.\n\n\"Yes,\" I said, conscious that I'd let my guard down a bit quick, I recovered quickly, \"She was at his house when I went to apologise. His twin.\"\n\n\"Cool,\" he said finishing his tea, \"I'm glad all that got sorted, he's too nice to be wrapped up in all that kind of shit.\"\n\n\"Yeah,\" I said and finished mine.\n\nMick grinned at me and taking our mugs headed back to war. I didn't see Andy for another seven days as his part of the battle moved on without us. I had all but gotten him out of my mind until one dark night at a shade after three in the morning. I walked across a vehicle park to clear my head of the incessant buzz of radio traffic from the headquarters I had spent the best part of a fortnight in.\n\nI was looking up at the stars, just taking in that beauty that we all take for granted so often, when I heard a voice, \"Captain Major Mam.\"\n\nI turned, the shape was unmistakable. \"Corporal Sargeant?\"\n\n\"Yes Mam,\" he said and walked across to me. It was pitch black and he took me in his arms and kissed me. He needed a shave and did smell the worse for ten days on exercise but it was one of the sweetest kisses ever.\n\n\"Until later baby,\" he whispered, and walked away. I wasn't to see him for another three days, but his absence was useful.\n\nThe absence was useful, for it kept him out of harm's way for what came next. The pitch black wasn't quite as pitch as I thought it was. As my part of the exercise came to an end, the Headquarters element was stood down and we made our way back to the huge camp that the British Army had there.\n\nI showered and washed my hair, dressed in clean clothes and packed and sorted my gear for the return flight to the UK. I was dog tired but didn't want to sleep as my body clock was all over the place.\n\nSo I went to the Officers Mess for a meal and a drink to round off the proceedings. I stepped into the bar, just in jeans and sweater with a fleece over the top to keep off the Canadian chill.\n\nJust as I started to relax I saw a Cavalry Officer in his combat uniform slightly the worse for the beers he'd been putting away. It turned out that while I had never met him he had certainly seen a picture of me before.\n\nThe passing years had made him bold and he came and found me in the small anteroom I had gone and sat in with a collection of newspapers, stood in front of me and looked at my tits as if remembering what they looked like from the picture that had been on the 60\" plasma TV in his mess not six years before. I didn't recognise him of course, I only knew of the names on the long circulation list.\n\nHe pulled his beret from his pocket and held it so I could see the colour and the badge. \"Hi Strumpet, long time no see.\"\n\n\"I'm sorry?\" I said.\n\n\"You're gonna be\" he grinned.\n\n\"If you're from Roger's Regi...\"\n\n\"Oh don't kid yourself Strumpet Major, you can sit back and pretend you're sweet Miss Perfect to everyone else but I know the real Strumpet.\"\n\n\"Fuck you,\" I said reverting back to the girl I'd been some years ago.\n\n\"I suppose you think you got away with that shit don't you, well I'll have you know that Roger Turnball and David Traynor-Davis were both close personal friends of mine.\"\n\n\"Like I said Major, Fuck you.\" I said.\n\n\"Roger Turnball ended his career as a Major in The Logistics Corps you Bitch!\" he snarled and he made to raise a hand but his cry had a steward walk past. He calmed just fractionally once the private had gone, \"He transferred out of his family Regiment just because you ruined his career. And TD? Ended up as a staff officer for a bloody reserve unit!\" He snarled, \"You wrecked both of their careers!\"\n\n\"How the fuck did I ruin their careers, Roger sent all the emails, or did your forget that bit?\"\n\n\"But you will be sorry you ever crossed the Dragoons,\" he whispered, \"The perfect Captain Major has finally fucked up and I was there to see it!\"\n\n\"What?\"\n\n\"Kissing a fucking grunt at three in the morning? What kind of slut are you?\" I took a deep breath and stood. \"Oh remember it now do you? All coming back to you, you whore!\" He folded his arms, \"The secret is out Captain Strumpet, you should never have intimate liaisons with the common soldiery in front of a Scorpion Tank with its night vision equipment turned on.\" I felt dizzy, \"It's just a shame I don't have photographs, because they'd go straight to the Daily Mail, along with a bit of a story on who you personally destroyed two fine men just because they upset your delicate female sensibilities.\" He sniffed in triumph, \"And then I'll have your fucking corporal;\" his foul breath right in my face, \"You'll just be cashiered and sent on your way with the tabloid press hot on your heals; but your pretty corporal? I'll have him locked up in Colchester -- a few months there will teach him not to fuck around with officers above his station. Mind you, you'd fuck anybody. Strumpet...\"\n\nI tried to run away but he grabbed my arm.\n\n\"Let go of me!\"\n\n\"No way,\" he said, \"Tell you what strumpet, you come to my room tomorrow night and I'll think about forgetting what I saw.\"\n\n\"I'd rather go to Colchester,\" I said.\n\n\"Your choice bitch, but remember your Corporal will back in tomorrow afternoon from the war and ready to shag the strumpet... you'd better make your mind up.\"\n\nI turned and stormed out of the room and out of the mess. I thought I had left all of that behind me, and having had such a wonderful few months it dragged me right back down again.\n\nI went to my room, sat on my bed and hugged my pillow, wanting desperately to talk to someone and feel better. I couldn't and didn't want to talk to Andy, my chief worry there being that he would take revenge on that particular arsehole and get himself into all kinds of trouble.\n\nIn desperation I emailed Katy, telling her the story of what had happened those long years ago and what they had done to me. She replied and told me to get out my laptop and we started to chat via Skype and I stopped crying, it was so nice to see that friendly face, along with Laura sat on her lap.\n\n\"You were right not to tell Andy,\" she consoled me, \"Leave him out of it, can I tell Lee?\"\n\n\"Yes,\" I said, thinking that while Lee was a police officer he was the other side of the Atlantic and couldn't interfere with anything or make things worse.\n\nAs had already been pointed out that Lee, like his Father in Law Dave, had joined Avon and Somerset Police from the Army, specifically the much-maligned Royal Military Police and unknown to me he telephoned some old friends of his, one of them being the Special Investigation Branch Sergeant Major at that same camp that Andy and I were in.\n\nThe next morning I headed from my accommodation across to the mess for breakfast and felt better for getting the problem off of my chest and I had started to work on a response should the comedian in question try to bother me again.\n\nHe was waiting for me in hallway of the officers' mess, and I made to walk past him but he stepped in front of me, not bothering with the two other men in the area sat in large leather high backed chairs.\n\n\"Ah, The Strumpet,\" he said with glee. Then suddenly the two men that had been sat in the large leather chairs were stood either side of him.\n\n\"Major Carmody?\" said the first showing him a black leather wallet with a shiny badge in it, \"My name is Staff Sergeant Logan of the Special Investigation Branch, Royal Military Police, this is Sergeant Price; can we have a word please?\"\n\nThey put both put a gentle but insistent hand on each of his elbows. He looked only slightly more shocked than I did.\n\n\"Get your hands off of me, how dare you!\" he snarled.\n\n\"Now then Major, let's not make this unpleasant shall we?\"\n\nI had my breakfast, and when I came out of the mess to head for my office we were using prior to our departure, he was still stood under a distant tree being spoken to by the MP's. Back in my office, I had a phone call asking me to wander across to the MP's office at my convenience. I did so. \n\nWhen I got there, Staff Sergeant Logan was stood in the foyer waiting for me, and asked me to take a walk with him.\n\n\"Just to let you know that the joker shouldn't be bothering you anymore. If he does, just ring me.\" He handed me a business card. I wanted to thank him but my voice wouldn't let me. He smiled and shook my hand, \"not having fuck-ups like him dragging down my army, no way.\" He said, \"You do actually have the emails with his name on don't you, because we've told him that we have.\"\n\n\"Yes,\" I said, \"yes I have.\"\n\n\"Good,\" he said, \"Put the fear of Christ into him. He's under the impression that the army destroyed it all and he can use the memory of it against you. He started on some shit about you and some Corporal.\" I flinched, \"Well we told him that this was the Army of the 21st Century and there was no crime in that. However, threatening a female Captain would see him out of the army and in prison. ",
        "He mentioned lots of names of people he knew but we just pointed out that no one wants to go stirring up bad memories, as all kinds of people will get to hear about it; the least damage it will do to anyone is you, while Major Turnball of the Royal Logistics Corps, who is just starting to surface out of that particular cesspit doesn't want to have to start treading water now if you get my drift.\"\n\n\"Yes,\" I said wondering how they had got all of this information.\n\nHe smiled guessing my thoughts. \"Lee and Katy both send their regards Lin,\" he said with a grin, \"our secret yeah?\"\n\n\"Yeah,\" I said extending a hand.\n\n\"Don't tell... err... anyone else about it until you're safely across the pond, right? Katy insisted and she sounds proper scary over the phone. Lee was my platoon commander in Afghan, and we're good mates still.\"\n\n\"Right,\" I said, \"Our secret, thank you so much.\"\n\n\"No probs Mam, don't you worry about a thing.\"\n\nI was able to hide my part upset, part rage from my colleagues, and was conscious that my Andy would read me like a book and I made it so that he didn't see me until we were on the plane and flying back. I did see Major Carmody of the Dragoons one more time as we were all sorting out our flights at Gander Airport for our trip home. He appeared to be somewhat the worse for wear and had a black eye, a fat lip and other facial bruising. While I saw him there was no eye contact between us, and despite the assurances of the MP's I still felt there was every opportunity for him to speak to David (who had flown out especially for the end of the exercise) and any number of senior officers. But it wasn't to be.\n\nLanding at Brize Norton we went through the normal airport checks people go through, even those carrying SA80(A2) assault rifles and Glock 17 automatic pistols. Being officers David, Mick and I led the move through customs and I noticed that Mick had some marks on his hands.\n\n\"I was out for a run on the shingle track at BATUS,\" he said, \"Showing off in front of some pretty Canadian MP girlies and tripped, went down on to my hands like a twat.\" he said holding them up. \n\nThat was weird; Mick was one of those that hated running for the sake of it and all but lived on a machine except for the those bi-annual fitness tests we all had to do.\n\nBesides which the previous summer, I had gone to his wedding in Swindon along with David. He never showed off in front of girls, or perhaps she just never showed off in front of me.\n\nWe all headed back to London on a coach and Andy and I fought our desire to just check each other out, and like a complete amateur I had packed my phone charger in my bag and my battery had gone flat somewhere over the Atlantic I so couldn't even text Andy to start a bit of a conversation with him.\n\nBack in London we handed in our guns and as Mick handed back his Glock I had a better look at the back of his hand.\n\nHis knuckles didn't look they had impacted on gravel, they looked like he had impacted on someone's face. Our guns checked over and handed in we walked back to our office to put away some of the company documentation we had taken with us.\n\n\"So Mick,\" I said, \"I notice that when you fell over you didn't bash your face, and... aah... some of the gravel was teeth shaped?\" I brushed gentle fingers across the back of his hand.\n\n\"Nothing for you to worry about Lin,\" he said with that cheeky but still business like grin of his.\n\n\"Are you sure?\" I said, \"the last thing I want to hear about is...\" then it came to me. Carmody of the Dragoons. \"Mick, tell me you didn't beat up...\"\n\n\"Lin,\" he said, \"Ask me about it on the day you leave the army and I promise I tell you, but not before.\"\n\nI gave him a bit of a look that I'd learned from both my Mum and Pam, which let him know that he wasn't off the hook by a long stretch but I wasn't going to take it any further.\n\nWe all just wanted to get into our civilian clothes and go home for our weeks leave, but David insisted that military protocol was followed and the twenty of us that went on the exercise were all into the large briefing room and doing a SWOT analysis, one of David's favourites, being strengths, weaknesses, opportunities and threats.\n\nIt took for ever and while I could normally sit through this kind of thing relaxed and calm I just wanted out of the meeting, out of the office, out my uniform and into my tight jeans and tailored blouse, into my car, into a quiet bedroom somewhere and then get Andy into me.\n\nDavid noticed my distraction and was kind enough not to take me to task over it. Had he so desired he could have ordered us to stay on camp to rest until the next morning before facing our journey's home - the fact that he hadn't just added to my impatience! It was six thirty on a bright spring London Thursday evening and I'd just had enough.\n\nEverything conspired against me that day and once released after a hellishly long debrief, I dashed back to my room to find that I'd left my mobile on charge in the office along with the small pack that I kept my 'life' in -- keys, ID, some cash, emergency plastic, some feminine hygiene products (you never know), some mints and a tiny scent spray that clipped onto my kit or my body armour - all in my desk drawer where I put it for safety when I stripped my gear down prior to handing in the guns.\n\nBack at the office I bumped into David and apologised for my shortness and unprofessional approach during the meeting and passed it off as 'time of the month' temper with added tiredness and a touch of jet lag, and promised him that it wouldn't happen again.\n\n\"Don't worry Lin,\" he said with smile, \"it was a tough month, for you more than anyone, and I've had some great feedback from the Brigadier;\" he reached out and took my hand, \"I'm proud of what you had the team doing over there, we've earned some significant brownie points on the back of this.\"\n\n\"Thank you sir.\" I said.\n\n\"Right, now for heaven's sake fuck off home and don't come back for a week!\"\n\n\"Yes sir!\" I said with a grin and stood.\n\n\"Oh and Lin?\" I stopped and turned and didn't take a deep breath. Which was good because David had filled a paper cup from his filter coffee machine, \"Have some caffeine before you drive home?\"\n\n\"Yes sir.\" I took the cup, sipped it and then nodded and smiled at the quality.\n\nAs I returned to my office and got my things, I counted down to control my displeasure with myself and checked that I finally had EVERYTHING and stepped outside only to see Andy's car slowing and stopping level with me.\n\nI bent down and looked in at the window that he powered down.\n\n\"Hey Baby!\" he said quietly but with real enthusiasm.\n\n\"Hey You!\" I replied trying not to let my smile at our brief reconciliation overtake my military bearing.\n\n\"I'm driving straight to Mum and Dads,\" he said, \"You coming? We can go back to yours tomorrow or the day after honey, or yours tonight, I'm easy.\" We hadn't had a second to plan our weeks leave as we might have done.\n\n\"Sounds perfect,\" I said, \"If I can ever get out of this fucking place.\" I explained my mishap with my 'purse' as he called it.\n\n\"Just stick a clean shirt on, drive out of camp and you can have a proper soak at Mum's place.\" He narrowed his eyes. \"You OK baby?\"\n\n\"I'm fine,\" I said, \"Long days, tough fights and not all of them the battlefield. I'll tell you the whole story when we get back to your Mum and Dad's place tonight I promise.\"\n\n\"OK baby, See you soon and drive carefully.\"\n\nMy burst of adrenalin at seeing Andy and our jolly talk soon wore off and I trudged up the stairs dragging my booted feet up each one; David's coffee was helping but not that much.\n\nI pulled my kit off and stuck it into my holdall and fighting the temptation to follow Andy's advice had a shower and felt way better. I reconciled myself with the fact that the traffic would have cleared and my drive down to the West Country would be that much easier.\n\nPartially refreshed by my shower, invigorated by being back in girlie clothes and smelling of deodorant and perfume and having some cleavage on display I got in my car and headed west.\n\nThe radio was enough company and my car just seemed to know the way and before I knew it I was driving along the narrow country road with the large drive that I knew so well.\n\nPam's welcome was as wonderful and warm as it ever was and I swear she hugged me or held my arm all evening except for the arrival and consumption of another of her Fish and Chip suppers around her wonderful warm and welcoming kitchen table.\n\nKnowing that I had to have a chat with him before Katy or Lee, I took his hand and said simply 'Bedtime' and we headed up to his room. \n\nI stripped naked slowly and he watched as every item came off, \"Now Andy,\" I said, \"I have something to tell you and I don't want you to be angry.\" I lay back in his big strong arms and told him the story of Ranger Roger and Strumpet Major, the I Corps Ice giant. I then added the bits that had taken place over the last few days, the MP's, Katy and Lee, Carmody being taken to one side and warned and subsequent black eyes and Mick's scratched and bruised knuckles.\n\nHe took it well, but did thank me and by implication Katy and Lee, for not telling him over the pond.\n\n\"I promise Darling Lin,\" he said pulling me against him so we could feel naked flesh against naked flesh, \"No one is ever going to hurt you again.\" He had a bit of a growl to his voice.\n\n\"Thank you Andy,\" I said, \"but I must point out that of the twenty four officers involved, chances are most of them are still in the service and are still senior commissioned officers while you are just a Corporal.\"\n\n\"Just a Corporal?\" he grinned.\n\n\"Yeah, a Corporal,\" I replied stroking his handsome face with my fingertips, I lowered my voice \"But you're my Corporal and no one is going to hurt you either.\"\n\nWe both stared into each other's eyes and as one, mouthed 'I love you'.\n\nWe made love gently, but passionately and while the orgasms where quite quick in arriving they were still wonderful and we both slipped into a deep sleep almost straight afterwards.\n\nWe packed his car with lots of stuff and after another day and night in Somerset, drive to Oxfordshire and my parents, after all we spent more time in the West Country than we did in Oxfordshire, sorry Mum.\n\nDad was greatly impressed with Andy and finally had a man he could talk to about cars and football, while I think Mum took a while to warm to him because of his wacky sense of humour and that he was sleeping with her daughter and wasn't an officer and/or a graduate. His charm worked after a while of course and I think that the prospect of grandchildren was now much closer.\n\nHis car was packed with camping equipment and we headed to the Cotswolds and camped for two nights just enjoying the countryside and the 'Us' time. Then it was into Cirencester and a really nice hotel having both had enough of 'roughing it' even in his luxurious tent.\n\nHe had all of the kit but it was still camping and we'd both done enough of that in the last month, especially for Andy who had been playing soldiers more actively than me in the relative comfort of Brigade HQ. But the real clincher was the fact that both of us woke at least once from nightmares reaching around the tent for our guns...\n\nThen it was back to Pam and Dave's house, the reunion with Katy and Lee and my long overdue hug for them both, a huge bunch of flowers for Katy and bottle of Lee's favourite Irish whiskey.\n\nPam had done all of my laundry while I'd been away, plucked from my black holdall in Andy's room, then dried and ironed so I could step straight into them, then we were both back to London and the delights of our day jobs.\n\nWe worked really hard to keep our relationship a secret, and we did have to work at it. After all our relationship was so tight now and we were starting to get to that 'answering the other's questions and finishing their sentences'; we went out for nights together, we'd stagger our leaving times, giving it at least half an hour so we didn't establish too much of a pattern for the squaddies on the gate to recognise. We ate out, sometimes just sitting in a pub and having a drink, a few movies, at least two West End shows, one night we even ended up on the M40 and called in to see my Mum and Dad. Mum convinced us to stay over and I was so pleased that I'd bought a double bed to replace my King size single after our cosy but quite wonderful first night sleeping at my home. Andy didn't have any other clothes with him, but we had tea with Mum and Dad, went to bed early, and got up at six had a shower and headed back into London, with Andy pecking me on the cheek and jumping out of the car at some traffic lights, a short run to Baker Street Tube station and his coffee stop arriving back at the barracks half an hour after me but still in time for duty\n\nIn the summer we booked a fortnight in Florida during a period of downtime for the company when it just shut down prior to a build-up in the autumn and our turn to be the Intelligence team on high alert and readiness for deployment across the globe. I left my car at his parents place and Katy drove us to Heathrow in her car. \n\nWe had a wonderful time acting like kids (again) and did all the parks, ate too much food, swam in our very own pool, went to the beach and got a tan and, of course, screwed like rabbits. Our rented villa was self-catering and I just got into the whole thing of cooking for us both and being 'her' to 'him' with no distractions or interruptions from any family, much as we loved all of them.\n\nThe American holiday was another big moment in our relationship. Back in London and back to normal I still had to hide the fact that I was completely head over heels in love with Andy and I knew he felt the same way about me; it was getting harder and harder for us to work together and there had been a few occasions that our familiarity had almost got the better of us.\n\nThere were times that I just wanted to go sit on his lap and hug him, especially when it was time of the month; there was one occasion that he started to stroke my hair back from my face, the way he did when we were on our own time, and he realised and made like he was swiping at an insect. Our love lives were the opposite of everyone else's. Most people saw their loved ones at home and missed them at work. We saw each other at work and had no home during the week to go to.\n\nThere was another period of operational training just as British Summer time ended and the season turned from a fine balmy late summer into crisp and damp autumn and the company found itself back on exercise again, on the training areas around the garrison town of Colchester (home of the military prison, known to old soldiers as the Glasshouse) and after three weeks of hard training, not just our trades but including real soldiering and practising our military skills we became part of the reaction force for six months.\n\nThere being nothing to react to, at Christmas we spent the day with my parents all dressed up to the nines. So much so, that Andy pulled on his warm coat and took Dad to the pub and bought him a pint. Dad was never much of a drinker and after half of his beer he was approached by a neighbour and Dad introduced 'Linette's boyfriend Andy' and told him of his war hero status, along with my exploits. More beer was bought but Andy was a much more seasoned drinker than my Dad and he was watching the time, bringing my slightly tipsy Daddy back to the roaring fire, my slightly cross Mum and the wonderful lunch that Mum and I had prepared. \n\nMum and Dad had even bought him a Christmas present and he was very touched, and shook hands with Dad and kissed my Mum on the cheek, almost unheard of in our house. \n\nBoxing Day morning we dressed up again we drove to his parents and relived the whole day again, this time in the West Country, and Pam's huge house was full with her lovely family, with toddler Laura evident for the whole day. Pam and Katy continually handed her to me or encouraged her to wobble across to 'Auntie Lin', and while I put up with their giggles and smiles I have to admit it was wonderful and I did start to feel extremely broody, and even Andy noticed.\n\nWe stayed over for the rest of the holidays at Pam and Dave's with one day where I was on duty and had to head back into London. Andy offered to come back in with me, but I said that could be just a bit obvious.\n\nNew Year's Eve was celebrated at the village pub down from Pam and Dave's house. Asking what my parents were up to for that celebration, Pam was amazed when I said that they'd never really celebrated New Year and she seemed genuinely shocked. At once Pam invited my Mum and Dad to come to her place for the celebration and I was just as amazed and shocked when both Mum and Dad said they'd love to come. They stayed over in Katy's room, and despite their advancing years they managed to stay up until past one thirty, and had a wonderful time, even singing along to the songs on the stereo. My Mum was most impressed with the whole set up, especially Katy and Lee's baby girl Laura, and she got on with Pam like a house on fire, setting too with her in the kitchen for the food when everyone declared an attack of the munchies after the five minute walk back to house and the cool crisp moonlit night and fresh air.\n\nMum and Dad went home on the second of January, with Katy sending me a short video of Laura toddling across to my Mum and her look of shocked delight when the Laura held up her hands to her and said 'Nan-nan.\"\n\nThe New Year began with news; David, the old Unit 2IC was on the move with his promotion and had been replaced by a new Major, a woman who was not used to so much banter and looked at us rather strangely sometimes. She was a hard arsed regular like me, and not used to the kind of happy chat that existed between many of us in the unit, again particularly Andy and I.\n\nShe was there for a reason, and the budget cuts had finally arrived. At a management meeting she discussed new cost saving procedures and staffing, suggesting that we were over-staffed and several of the unit members could be spread across country, then using the available technology we could be that much more efficient with our resources.\n\nI noticed that Andy's name was right up there, first on the list for staff that could be posted, and while the suggested site for him was only in Hampshire and not the ends of the earth, it was still furthest away from the rest of the unit and much farther than I wanted to travel.\n\nI held my emotions in check, but think she saw something in me. \n\nBitch.\n\nI only say that because within two weeks I was given a warning order to fly out to Bahrain and the large coalition of Navies fighting off Somali pirates. I would go to Bahrain for between four months and six months, depending on the need. Not because I spoke Arabic or Farsi as you would expect but because there was a need for someone to ensure that the Europeans were all singing from the same song sheet.\n\nI rang Andy on his mobile in the office, almost unheard of between us, and I asked him to meet me at my Mum's. We both drove there in separate cars.\n\nOnce there I fell into my Dad's arms and cried, telling him that the bloody Army was sending me to the Middle East and not sending Andy along to take care of me.\n\nDad held back the obvious 'Well you did join up Darling and it kind of goes with the job' instead doing what he did best and giving his little girl (even though she towered over him by a foot almost) a hug and telling her it was all going to be OK.\n\nAndy arrived minutes later and with one look at my face pulled me into his arms.\n\n\"Bahrain Andy!\" I sniffed and snarled at the same time, \"That fucking woman is sending me to Bahrain! She said it's because there's been some falling out between the Europeans and an alleged 'lack of understanding'; beside which, apparently, Horseguards Parade reckon the whole project is far to Navy Blue and they think some squaddies should go out.\"",
        "\"Bastards!\" hissed Andy hugging me tight, \"well, I doubt they'll send me with you.\"\n\n\"No,\" I wept, \"just me, nothing to do with the company, just that I have special skills.\" I wiped my face with my sleeve, \"Fucking woman, I think she suspects Andy.\"\n\n\"We'll just have to Skype and face time each other,\" he said, you'll get leave after three months and chances are because you are so clever they'll send you back early.\" He grimaced, and said what Dad should have, \"It's what we both signed up for Baby.\"\n\nSo we had another night at my parents place with Andy holding me as I cried myself to sleep into his shoulder. Following Christmas I'd left a toothbrush and clean shirt, boxers and socks for Andy in my room and we headed back at different times of the early morning. Driving back through bleary eyes I had the same thoughts that Andy confessed to in Canada.\n\nThis all used to seem so easy when I was single, and the idea of putting on a tropical dress and spending some time doing something so exciting would have been bread and butter. Now I just thought of it as a further six months of my life stolen from me and away from my... boyfriend? We had been in a relationship now for ten months and while I quite like having a 'boyfriend' it didn't seem to cover even half of what I felt for him, and term 'partner' seemed so cold and politically correct that I never used it, not once.\n\nSo after a few booster injections, a fortnight back at Intelligence Corps HQ practicing my modern languages I signed out some tropical issue dresses, bought some flat shoes and sandals, packed three month's supply of sunscreen, I wished a very teary goodbye to Andy, Pam, Dave, Katy and Lee while Mum and Dad drove me to Brize Norton for my flight to Bahrain.\n\nThe facilities there were quite superb, fully air conditioned and seeing as I hardly drank quite comfortable. Sadly it was comfortable but 7 hours flying time away from the most important man in the world to me.\n\nWe emailed and Skyped almost every night, and I had lots of face time with Mum and Dad, Pam and Dave, particularly Katy and I threw myself into my work, having a couple of pictures of him in a frame I kept in my beside table and put away each morning, just in case someone might see his handsome face and ask who he was.\n\nSix weeks into my posting I received a letter from my old mate Mick Turner who wrote telling me that he was being posted to Washington DC for a year on an accompanied posting taking his school teacher wife with him.\n\n\"So Lin, I suppose before closing I should tell you about how that cunt Carmody came upon his injuries on the second to last day of the Canada trip. The Brigadier was a fine chap and you'll remember I was pretty much his runner for the whole exercise and he liked me. I called into his office one evening and stood just outside his tent to hear Carmody at the top of his voice going to great lengths telling him that you'd got the Military Police to come after him and threaten him and how much of a disgrace you were to the Army after he'd seen you kissing a Corporal or a Sergeant and playing tonsil tennis with him in the lorry park. \n\nHe then went on to say that you'd had an affair with Lord Turnball's son and had him kicked out of his regiment, and he wanted something done about you as you were no better than a common whore.\n\nLin, I was minded to rip a hole in the canvas right there and then, but didn't and I pleased because the Brigadier ripped a hole in him instead.\n\n\"Carmody? Some of us remember the Incident very clearly and to be honest Turnball was lucky he wasn't cashiered and drummed out of his regiment for the shit storm he almost caused. His father, who is also Colonel of the Regiment, had him transfer out; hide the name hide the shame, that kind of thing. Now if you really want me to go and talk to military police about their chat with you and go on the record then I am more than prepared to do that. Not a particularly good career move for someone of your age and rank?\"\n\nCarmody of course tried to splutter out some shitty defence, but the Brigadier said that if he heard his name in context with the highly regarded Captain Major, he would find himself in charge of a rear party in some arsehole garrison town counting blanket until he qualified for his pension.\n\nLater than night I'd finished packing and went into the mess to clear my bill, and Carmody was taking a piss in the bushes by the door and I coughed to let him know I was there. \"More fuckin' Int corps,\" he railed, \"More fuckin' green slime secret agents, well green slime...\" he said taking hold of my shirt collar, \"you tell that fuckin' whore Strumpet Major...\"\n\nSorry Lin, but I wasn't having that. The nice graduate, the Sandhurst qualified officer took a step back and the nasty little street shit from Swindon appeared and I decked the bastard. I punched fuck out of him, and told him that the Brigadier had himself sanctioned some 'human resources with extreme prejudice'. I punched him another half a dozen times telling him that if I ever heard him talk about my good friend and boss like that again, he'd find himself with his own 76mm gun up his arse with no lubricant.\n\nA risk I know but it was dark and he was shitfaced so I took the chance. Sometimes it's nice to be from the dark side of the road.\n\nAnd finally, I think Andy Sargeant is a great bloke and you two are totally suited to one another and I trust that when he finally sees sense and asks you to marry him, Jane and I get invited to the wedding.\n\nHow did I know? I'm a Psyche graduate from one of our nation's finest Universities and while you were good at hiding your tracks you weren't that good. \n\nA final word of warning, I know you've been in the army for a while but I'm not sure that Andy, as an Int Corps Corporal, should have uniform shirts and jackets that smell of the same perfume that you wear.\n\nRemember my invite to your wedding, All my love\n\nMick\"\n\nI laughed folded the letter and emailed Andy about its contents.\n\nA week or so later, I emailed my old team just to let them know how it was all going and including a photo of me in my tropical dress. The email to Andy's account bounced back as 'undeliverable'.\n\nI thought nothing of it and just figured it was a bit of a glitch. It was one hell of a glitch but not so bad in the end. \n\nIt turned out that the cow of a 2IC had started to give Andy a hard time and a distinct drop in his productivity since Captain Major had gone. Andy said he was sure it was just a bit of some cold and flu symptoms and he'd be back punching at his weight really soon.\n\n\"I know you and your sort Sargeant,\" she said, \"You grunters need to remember your place and keep away from officers.\" Andy said nothing, \"Keeping quiet are we? Good, nice to see that you DO know your place.\" She stood and leaned across the desk, \"If I had my way when that silly starry eyed bitch went to Bahrain, I wanted to send you to the Falklands but there were not spaces. You take a big fat step back and leave the officers alone!\" Andy still said nothing. \"Well?\"\n\n\"Nothing to say Mam!\" he said, the Guardsman in him keeping him safe.\n\n\"Get out of my sight!\" she growled and Andy turned to the right and marched out of the room at speed. He emailed me on my Hotmail account from his Hotmail account and told me about it.\n\nAndy had long since qualified for his pension, and without my knowledge contacted Human Resources and applied for the many redundancy places available. He had been recently promoted and was now, like his Mum once was, Sergeant Sargeant and filling in the form on line applied to join the Avon and Somerset Police and after some tests that he was given time off for, he was readily accepted.\n\nI emailed another officer in London and asked why Andy's emails were bouncing back.\n\n\"He's left the Army,\" came the reply.\n\nThe next skype to Andy was a bit tense \"When were you going to tell me Andy?\" I said with just a hint of peevishness about it.\n\n\"All we be revealed when you get home,\" he replied, \"trust me.\"\n\nI was sent photos of Andy's presentation and the dining out on his last day, and during his speech, the commanding officer said that Sergeant Sargeant... a few giggles, would be leaving the army to become Police Constable Sargeant as part of the Avon and Somerset Police.\n\nHe made some jokes about his time in the army and everyone laughed, except for the new woman boss who really didn't like his familiarity, even though he was on his way now.\n\nThe one positive thing was that now Andy was a civilian, I was told that my job was done, I was presented with a very fine Arabic sword and a headdress and told I would fly home at the end of my third month after a job particularly well done.\n\nI emailed everyone with the time that I'd be home and back in London, that was still my unit.\n\nThere was a reply from Andy, \"Hey Lin, that's wonderful! Pack enough gear for a long weekend and I'll pick you up from the Union Jack Club across from Waterloo at 1800 on Friday.\" This was another of our favourite meeting places and easy to get to, and I will confess that we had shared a double room once, slightly pissed from a great Friday evening out, we visited and showed our ID cards and where given a very nice en suite double room with a bit of an old fashioned look because we had no bags. We bought tooth brushes and everything and had a crazy night of semi pissed lust, so much so that was the first night that I blew him all the way to orgasm and let him come in my mouth. Another first for us that showed how close we were.\n\nAt least I thought it did; but somehow he had left the army, joined the police and had moved home all without telling me. He loved me and I loved him, so I agreed to the meeting, and looked forward to my fortnight disembarkation leave and packed my bag.\n\nDressed in my raciest undies, still copied from the pair that his sister had given me almost a year ago, in my tightest black Levi's and a tailored top I stood in the small parking area across the road from the special Army Hotel in London.\n\nHe swung into the bay at exactly six o'clock and I beamed a grin at him. Soon I was in the car and kissing him.\n\nPretty soon, he'd pulled out into the slow stream of traffic and the north circular and before I knew it we were heading into the Cotswolds and the same lovely hotel we'd stayed in before.\n\nWe had dinner, wine, and we walked around the gardens in the moonlight.\n\n\"I've just realised, I don't have to salute you anymore Darling,\" he said taking my hand and kissing it.\n\n\"Just don't you forget who's in charge PC Sargeant?\"\n\n\"Yeah, I can pretty soon show you who the boss is Captain Major.\" With that he grabbed me and pulled me into his arms and kissed me long and hard, I rubbed my hands across his face and neck loving the feel of him against me.\n\n\"So... so you've err... left the army then?\" I said.\n\n\"All part of my master plan,\" he said.\n\n\"A master plan,\" I kissed his cheek, \"From a fucking Guardsman?\"\n\n\"You are so going to regret that comment Captain.\"\n\nI pushed myself against him, feeling him grab my arse and give it an experimental slap.\n\n\"Yeah,\" I whispered into his mouth, \"you wish.\"\n\nHe gave me that wonderful smile of his, and I could have forgiven him anything.\n\n\"Other than a reserve commitment to Her Majesty, I'm now free of the Army's controlling influence and I can now do what I've been wanting to do for nearly a year,\" he kissed me again, \"Darling Lin,\" he dropped to his knee, \"will you marry me?\"\n\nI was totally lost for words. \n\nWhile we spent weekends, holidays and evenings together and when we weren't being military we were boyfriend and girlfriend and the whole rank structure that was so much of our lives just disappeared. I had just really been enjoying our time together and I had a tiny fear that this trip was just a way for Andy to let me down and talk about how our lives were going to be so different so we would be seeing less of each other and down would go our relationship, but this?\n\n\"Lin?\" he said looking just a bit worried by my inactivity.\n\nThe tears coursed down my face for what was the most romantic moment of my life. I stared up into the face of my big strong man, now a civilian, \"Yes Andy!\" I all but cried out, \"Yes, I'd love to marry you.\"\n\n\"I know you will love and honour,\" he said, slipping the most gorgeous diamond ring over my finger, \"How about obey?\"\n\n\"You'll be fucking lucky...\" I said, twisting and turning my new jewellery to catch the moonlight; I wore it proudly from then on. We went back to our room and stripped out of our clothes and made the most wonderful love.\n\nLaying naked in his arms and drinking champagne he explained that he, like me, had started to begrudge the army for keeping us apart. He decided the best thing was for him to leave before that Bitch of a major did something shitty to him, so he joined the police as he'd always planned and that way spend more time with me, as my husband this time.\n\nOur engagement was the best news my Mum had heard since I graduated from University, Dad was just happy that I was happy.\n\nPam and Dave were just as they usually were, but she spotted the ring as I walked into her kitchen and she shrieked and hugged me, stopping only to kiss my cheek dozens of times, and I again thanked her for spotting how good we were for each other.\n\n\"Oh that was easy Darling,\" she said still hugging me, \"When he first got home, he said about Starbucks, then the mix up and how gorgeous the officer that locked him up was; he'd never spoken of any girl like that. Then I could hear it in the way you talked about him, and then the look in his eye when he saw you confirmed it all. \n\nIf I wasn't sure about the attraction in my kitchen, the way you took to coming out with us and the fact that neither of you could take your eyes off of the other once when you both dressed up, all we could do to keep you apart,\" she giggled.\n\n\"Yeah but you took her up to Katy's room that first night,\" said Andy, \"thought you were trying to save her from me for a moment there.\"\n\n\"Final test Andy,\" she said looking at me, \"I knew that Darling Lin was still confused and would have to make that particular decision for herself, and if I made it too obvious I could spoil what you two had going on. Had total confidence in my Linnie of course.\" She kissed my cheek again, Pam has been like a second Mum to me since that very first weekend and still I love her for it.\n\nWe married that summer after he had completed his basic police training, and I had been finally been promoted to Major in time to change my name. \n\nKaty had arranged my hen night being chief bridesmaid, and it was decided it would be a little black dress night and made up to the nines. I was joined by a couple of flat mates from Uni that I'd stayed in regular contact with and a few female officers that I could count on as good friends, one of which had served with Andy in Germany. In our room at the hotel Katy did our hair and make-up and checked that we all co-ordinated.\n\nKaty improved on my look from the first time I'd worn the stretchy LBD and we were all head turners that weekend we invaded the City of Bath. I had never had so much male attention before in my life, and even the silver 'Bride to be' sash I wore did little to limit the comments and wolf whistles I got.\n\nKaty loaned me her lovely lacy yet still sexy looking wedding dress and my Dad walked me down the aisle in that lovely church in that lovely village that Andy came from and Andy wore his Police uniform with a chest full of medals that announced his previous employment.\n\nTwo rows down in the church was of course my mate Mick and his wife Jane, flown back from Washington especially, along with a few more colleagues in their khaki uniforms, all of their medals glinting in the sun. For a joke my new sister in law Katy and taken the miniature medals that I usually wore with my mess dress and attached them very cleverly to my garter that I showed to the photographer.\n\nWe honeymooned in America again, driving Route 66 in a huge RV and sharing the driving and enjoying small town America as much as we did the big ones. Being really tall, being military honeymooners and being English we were met with warmth wherever we went.\n\nI decided that I would keep my maiden name at the unit in London for the sake of simplicity and no 'didn't we have a Corporal Sargeant here some months back?' comments that were bound to happen, but once back home I managed to swing a transfer to a training base not far from his parents place and we bought a house, Andy's redundancy providing the deposit and taking a fair lump off of the asking price. \n\nAt a conference there, I bumped into David, my old 2IC now a colonel and he noticed my name badge, Major Sargeant.\n\nMy promotion to Major passed him by, he went straight for the name change. \"So you married Steve Sargeant then,\" he said taking my left hand and inspecting my ring finger and both of my rings I wore with so much pride now.\n\n\"Yeah,\" I smirked, \"A couple of months ago, he's a police officer now, just down the road.\"\n\n\"Well you give him my warmest regards Lin, he always was a nice lad, and you two had something, right from the start.\"\n\n\"Did you know?\" I said.\n\n\"I'm an intelligence officer Lin,\" he said grinning over his tea, \"and despite the obvious drawbacks of that as a job title I had my suspicions to start with; you two could just communicate in a way that most officers and men never do.\" He grinned, \"But more than that, I was in an Italian Restaurant in the West End one Friday night and saw you and him in a booth.\"\n\n\"David...\" I stuttered, \"I... you never said anything, you never told...\"\n\n\"Lin,\" he soothed and walked me further towards the window of the conference suite looking out over the parade ground, \"You kept it to yourselves so well, neither of you upset the balance of the unit and after a while I didn't think it was the army's business.\" He sipped his more of his tea and looked across the parade square, \"besides, the restaurant was a nice unobtrusive one, far from the madding crowds and the British Army wasn't it?\"\n\n\"Yes.\"\n\n\"Which was precisely why I was in there; I was there with my partner Edward.\" I smiled and he smiled, some questions not asked answered, \"I know it's a twenty first century fighting force that allows its soldiers to live their lives the way they wish but an intelligence officer that was gay? Not something I wanted to scream from the rooftops at least until I'd made Colonel. The grandees at HQ, The Ministry and UK Land Forces wouldn't have taken to that kind of thing at all.\" He turned and looked me up and down, \"But the thing that really convinced me? I don't think I'd ever seen two people so much in love.\" That brought a tear to my eye, \"I'm so pleased for the pair of you,\" he looked around. \"I'm a Colonel in the Intelligence Corps Darling, I can keep a secret.\" he said putting a finger to his lips.\n\nOn my arrival at my new posting I was finally able to introduce myself as Major Lin Sargeant; Major Sargeant, Sargeant Major, Hahaha, said the admin Staff Sergeant.\n\n\"The last person that took the piss out of my name spent the weekend in jail,\" I said, not adding that the following weekend that person and I screwed each other senseless.\n\nBut laughing about names became pretty academic, as within four months I was pregnant and a few months after the birth of our daughter, I accepted an offer of a part time job with the Foreign Office that I could do mostly from home and some part-time work with a London University I resigned my commission and Andy and I lived the normal life of a married couple. My Mum is quite the Grandma, nearly up there with Pam, and even though I loved my job as a soldier it doesn't begin to come close to my job as a Mummy and our daughter Sofia made us into the perfect family. I can't wait to have more.",
        "Bliss. "
    ],
    "authorname": "Androgynousother",
    "tags": [
        "straight sex",
        "romance novella",
        "oral",
        "drama"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/officers-and-men-ch-03"
}