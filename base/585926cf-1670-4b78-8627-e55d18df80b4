{
    "title": "The Futanari Diaries Ch. 02",
    "pages": [
        "A/N -- Thanks for the comments received for the last chapter. For those who might have read anything else I've submitted, the first chapter wasn't as smutty as anything else upcoming. Yes, there is a plot to all of this, and yes, there is some romance and emotions will be involved, but being very honest, this is the smuttiest piece of work I've submitted to this website. There is a lot of sex in most chapters going forward, but there's still a plot taking it forward.\n\nI've actually got an idea of how this will develop, sticking with the alternative reality theme, and little bits of the world I'll drop into conversation from time to time. The idea amuses me but it's about making it work.\n\nI've had a lot of fun writing this, letting my imagination run wild, so I can only hope you enjoy the rest too. Comments and feedback appreciated as always.\n\n*****\n\nStaggering out into the kitchen for breakfast had Mum and Caroline laughing at me. \"Are you sore?\" Mum asked.\n\n\"A little bit but Jade did spend at least half of yesterday buried in my bum.\"\n\n\"Did you enjoy yourself?\" Caroline asked, taking a seat across from me. Jade always sat next to me for breakfast and dinner. We had been close since the day I was born.\n\n\"I've always loved Jade. She's been a fantasy of mine for years. I just didn't realise...\"\n\nMum sat to my left at the head of the table. \"Do you understand why?\" Smiling and nodding, she asked, \"What will you tell your friends?\"\n\n\"Well, being fucked by my sister isn't illegal and I'm sure plenty will be jealous of me. Then there's my mother, and I just know even my friends, who are not interested in futanari, will be incredibly jealous. But I also won't gloat and I'll talk to Jade first.\"\n\nJade joined us as I chewed on some toast, kissing my cheek, before she poured herself some cereal. \"How are you, Jade?\" Mum asked.\n\n\"Wonderful, Mum,\" she said happily, \"I finally got to be intimate with the man I love. My girlcock is a little sore today though. Worth it though.\" She paused before asking, \"Mum, can he move into or at least sleep in my room every night until he goes to university?\"\n\n\"I don't see a problem with that. Ben?\"\n\nI replied by giving my big sister a cuddle. I didn't need to say a word otherwise. \"Speaking of university, have you decided where you're going?\" Caroline wondered.\n\n\"I'm not sure yet. I've applied to any that have the courses I'm interested in. Why?\"\n\nShe smiled before replying. \"Would you like to go to a university where you can enjoy yourself?\" The question was followed by a knowing glance. \"We obviously don't have fraternities or sororities like they do in the States, but futanari will generally live together and someone like you will be very popular if you chose to live with a group of them.\"\n\n\"Caroline, you're effectively setting him up to be gangbanged constantly,\" Jade said, laughing away, \"I would have thought he should just get a girlfriend or two?\"\n\n\"It's up to him in the end, but look at him, Jade. Futagirls are going to fall over themselves now that he's eighteen. He'll learn what I mean when he gets to school. He's eighteen and has now had sex. They're all going to know and...\"\n\n\"Is there anyone special at school you've perhaps had feelings for?\" Mum wondered.\n\n\"One or two, I suppose,\" I replied with a shrug.\n\n\"Do I know them?\" I gave her a knowing look. My best friend, who was a futagirl, hadn't been able to attend my birthday. \"Are they futanari?\"\n\n\"Yeah...\" I blushed as Mum squeezed my hand. I'd been attracted to girls, or one or two at most, and futanari, but if I was going to be honest, I'd always preferred the latter. When Jade confessed she was one, I could probably never explain to her how happy that made me.\n\n\"Then you'll see what Caroline means. Are you driving your brother to school, Jade?\" She nodded, Mum smiling at me. \"Make sure you say goodbye to your sister properly when you get there.\"\n\n\"Okay, Mum.\"\n\n\"Good boy.\"\n\nAfter brushing my teeth and grabbing my bag, Jade led me outside to her car, Mum and Caroline wouldn't leave until a little later. I rested my hand on her thigh the entire drive as she wore a short skirt, not surprised she lifted my hand as she spread her legs, feeling her thick girlcock covered by her panties.\n\nArriving by the school gates, I got out as my sister followed me. She looked fantastic in her short skirt and blouse, stockings and low-heeled pumps. There was quite the crowd around, unsure if anyone would recognise my sister. When she stopped me with a hand on the shoulder, she turned me to face her and, before I knew it, was kissing me deeply, her arms wrapped tightly around my waist. I practically melted into her, feeling her groin press into me, one hand moving down to give my butt a gentle squeeze.\n\n\"See you this afternoon, Benji,\" she whispered, \"I love you.\"\n\nFeeling my cheeks blushing, I managed to stammer 'Love you too' before she slid back into the car and took off. Walking through the school gates, I felt the stares of everyone who had seen my sister kiss me, and some of the stares were... It left me thinking that maybe Mum, Caroline and Jade had been right.\n\nI definitely twigged something was different when moving between classrooms during the morning. Most women ignored me as usual, but every futanari I passed would smile at me. As usual, some waved or wished me hello. A few I knew even gave me a hug, wishing me happy birthday. That was a little different. At my locker to grab my book for the last lesson before lunch, I was stopped by my best friend, Vanessa. I knew she was futanari, and I'd also nursed a little crush on her for a long time by now. She was a reminder of my sister in many ways, probably the reason why I did have a crush.\n\n\"Quite the kiss at the gate this morning,\" she said, resting her hand on my chest. Like all futanari, she was taller than me and beautiful, long wavy brunette with ocean blue eyes anyone could get lost in, \"That was your sister, right?\" Nodding and blushing, she giggled before stepping closer. \"Did you make love during the weekend?\"\n\n\"You know,\" I whispered.\n\n\"Benji...\" I smiled. I didn't mind the term of endearment from those I cared about. \"Of course we know. Nearly every futagirl in this school knows. It's all in the pheromones. You're now eighteen and definitely no longer a virgin. As for being your sister, there's nothing wrong with that. Plenty of brothers have lost their virginity to a futanari sister.\" Stepping even closer, I had to look up slightly as she was at least 5'10 for now. \"You like me, don't you?\"\n\n\"I have for a long time, Ness,\" I confessed. I was one of only a couple who called her that. We'd been best friends for years.\n\n\"I knew it, I just wanted to hear it. Come see me at lunchtime. I promise you it'll be worth it.\" Caressing my cheek, she leaned down and left a soft kiss on my lips. \"I like you just as much in return, Benji. I just had to wait until the right time to tell you. I'm not the only one either.\"\n\n\"Really?\" I asked in disbelief.\n\n\"As I said, we know, Benji. Your last couple of months here are going to be a lot of fun.\" She kissed me again, a deeper kiss as her tongue explored my mouth, pressed back against the lockers as I whimpered into her mouth. \"Definitely going to be worth it, handsome,\" she whispered, \"You're still unbelievably cute, but there's something about you now that is intoxicating.\" Sighing, she kissed my cheek. \"We'd better get to class.\"\n\nI could barely concentrate, particularly as two futagirls in the same class kept looking at me, and their eyes matched what I'd seen when Vanessa looked at me. Same as when Jade had made love to me. Same as her three friends. It was actually a nice feeling. After eighteen years of feeling ignored, it was somewhat thrilling to be the clear object of desire.\n\nVanessa was waiting for me by the playing field, taking my hand and leading me to where a blanket had been laid out, five other futagirls I knew already sat down. As soon as I sat down, I was inundated with questions about who kissed me that morning and bluntly asking how much I'd been fucked over the weekend. I didn't want to share too much but confessed Jade and I made love on Saturday before spending all Sunday fooling around.\n\n\"Vanessa wants to fuck you,\" Georgie told me.\n\n\"Georgie!\" Vanessa hissed.\n\n\"Oh come on,\" Chloe retorted, \"Everyone knows how much you like him, Vanessa. The only person who didn't seem to know what the man himself.\"\n\n\"Is that true?\" I asked softly.\n\nVanessa replied by pulling me closer and kissed me hard. The other word I'd use was passionate. Again, I melted against her, not standing on ceremony as I slid a hand underneath her skirt, earning a moan as I felt her rapidly expanding girlcock underneath her panties. \"Fuck,\" she moaned, breaking the kiss, \"I've got lube, Benji. Do you want to?\"\n\n\"More than anything, Ness. Are you sure? And where?\"\n\nShe stood up and offered her hand, helping me up as we walked towards the bathrooms. She changed her mind and turned towards the changing rooms. They should be empty at lunchtime. Entering one of the shower stalls, she locked the door and pounced on me, our lips crashing against each other as I was backed against the wall. \"I'd love to do so much with you, Benji, but we don't have much time.\"\n\n\"We can just make love, Ness.\"\n\nHer face broke out into a warm smile, her fingers running down my cheek to my chest. \"Let's get naked.\"\n\nHaving not been naked in front of anyone except my family before, I felt surprisingly confident as I quickly disrobed, standing before her with my cock pointing out. She had a smaller pair of tits than anyone in my family, but she was fit and toned otherwise, with a similar size to my sister between her legs. \"You're fucking gorgeous,\" I said.\n\n\"And you're even more handsome naked, Benji.\" Gently grasping my cock, she smirked. \"Is that because of me?\"\n\n\"Definitely.\"\n\n\"Get on the floor, handsome. On your hands and knees. It'll have to be quick, but if you'd like to come visit one afternoon, we can...\"\n\n\"This afternoon?\"\n\nThat brought everything to a halt as she helped me up and kissed me. \"I want our first time to be better than this,\" she murmured, \"Can you handle waiting until then?\"\n\n\"Do you need to cum?\" She nodded. \"I can blow you. I'm not very good yet but...\"\n\n\"Benji, you'll be blowing me. That alone will make me cum so fast.\"\n\nThere was nowhere to sit so I just sank back to my knees and started to please her. Running my hands up and down her legs, I eventually grabbed the base of her girlcock, running my tongue up and down her shaft, eventually circling the thick head, tasting her sweet pre-cum before I finally took part of her length in my mouth. She moaned softly, her fingers caressing the back of my head. \"I'll try not to be too rough,\" she moaned, \"Can you deepthroat yet?\" Shaking my head, she smiled down at me. \"I bet Jade will teach you. I knew she'd be your first. Everyone knew how much she loved you.\"\n\n\"Did... you want to...\" I asked before swallowing her girlcock again.\n\n\"We all knew she'd be your first, Benji. The fight would be who was next. I warned everyone, and I mean everyone, off you.\" She paused before adding softly, \"Benji, I was eighteen last month. You're going to be my first.\"\n\n\"What?\" I exclaimed in surprise. I would have thought... \"But surely... Ness, it's you...\"\n\n\"I just masturbate constantly.\"\n\n\"But... why?\" She gave me a look as if I was an idiot. \"What about others?\"\n\n\"Do you think we get jealous? Will you be jealous?\"\n\nI sucked her girlcock a little longer as I thought. \"No, I know futanari have ridiculous sex drives. Then again, some of us men feel just the same.\"\n\n\"Make me cum. Will you swallow?\" Nodding eagerly, she caressed the back of my head again. I couldn't quite take her entire length, that would require more skill, but using my hand around the base of her shaft, I focused on her more sensitive areas, her hips starting to move and I could sense she was getting close.\n\nShe was polite enough to warn me before I felt that first spurt fill up my mouth, her cum as tasty and as sweet as my sister. I managed to swallow down each massive spurt though some did leak out, dribbling down my chin, before she finally stopped spurting. I waited until she'd taken a few deep breaths before I cleaned her cock up and down before sitting back on my knees, smiling up at her. She was down on hers quickly, kissing me all over my face and hugging me tightly.\n\n\"You're coming home with me this afternoon,\" she ordered.\n\n\"I'll call Jade and let her know. I guess she was right after all.\"\n\nGetting dressed, she suggested I clean my face. I said I was going to wear whatever cum was on my face like a badge. Holding her hand, I earned a few glances. Some pointed and laughed. Others nodded their approval. Any futanari practically stripped me with their eyes. Joining our friends back on the blanket, they all giggled and smiled as Vanessa ensured I sat back against her, feeling her still hardness pressing against me.\n\n\"How was it?\" Chloe asked, \"I'm assuming it was a blowjob rather than sex.\"\n\n\"I've never cum so hard,\" Vanessa replied, \"He's coming to mine this afternoon. About time I lost my virginity. I just had to wait a month to have the man I wanted.\"\n\nSighing, I shook my head. \"I felt so alone sometimes,\" I admitted quietly, \"I didn't know any of you liked me this way.\"\n\nVanessa hugged me tightly from behind. \"We just had to wait, Benji. I'm sorry, but do you also understand?\"\n\n\"I do. Um, does anyone else...\"\n\n\"Vanessa first, then we'll see,\" Georgie said, the other four futagirls nodding their heads eagerly. I felt myself blush as their eyes told me everything they felt and also wanted from me.\n\nI found concentrating for the last two lesson rather difficult before we were let out for the day. Jade had replied to my text, telling me to have fun and to call when I was finished so she could pick me up. I was still only learning to drive, Jade or Mum perfectly happy to taxi me about. Vanessa did have her provisional so could at least drive us home.\n\nI'd been to her house plenty of times over the years. Her father worked. Her mother was a stay at home mother, as Vanessa did have a brother and two sisters, all of them younger than herself. Her mother was delighted to see me, and I'd always had a feeling her mother was futanari. Her two sisters were also futanari, as far as I knew.\n\n\"Lovely to see you again, Benjamin,\" she said. She always called me by my full name. I didn't mind as she was always nice to me, \"Happy birthday. The big one-eight.\"\n\n\"I'm going to give him his present upstairs, Mum,\" Vanessa stated.\n\nShe gave her daughter a knowing grin. \"Just keep the noise down when you're fucking him and ensure your door is locked.\" I'd never heard her mother curse before, and blushed as she figured out why I was there rather quickly. Vanessa took my hand and kissed my cheek. \"I'll keep your siblings down here when they get home. How are you getting home, young man?\"\n\n\"Jade will pick me up later.\"\n\n\"Okay. Well, off you go and enjoy yourselves. Do you need any lube, Vanessa?\"\n\nI chuckled as Vanessa groaned. \"I've got plenty, Mum.\"\n\nVanessa practically dragged me upstairs to her bedroom, somewhere I'd been plenty of times before, but as soon as she shut and locked the door, I felt like prey to a predator. Dumping our bags, she grabbed the front of my shirt and dragged me closer to kiss me, her mouth hot and wet, her tongue exploring my mouth in seconds.\n\nShe practically ripped off my shirt while I helped take off her blouse, freeing her bra covered tits, then unzipped her short skirt to reveal a pair of panties, the head of her girlcock already poking out the top. \"I'm going to leave on my socks and shoes. Do you like that idea?\"\n\n\"God yes.\"\n\n\"But you're getting naked, Benji.\"\n\n\"Whatever you want, Ness.\"\n\nAs soon as I was naked, she had me down on my knees again, carefully sliding her girlcock into my waiting and willing mouth, telling me she just wanted me to suck it a little, she'd much rather slide it somewhere else soon. Still, she looked down at me as I managed to swallow as much of her as possible, recognising the look. The same I saw in Jade's whenever we were making love.\n\nI guess my big sister knew what she was talking about. I didn't particularly understand but I wasn't going to complain. Despite the love of my family, and having some good friends, I'd still felt alone for a long time. I was beginning to comprehend why.\n\n\"Okay, handsome,\" Vanessa whispered, \"We need to get your cute butt up onto the bed. I've not done this before but Mum has been training me.\" Before I could ask, she smiled. \"Yes, Mum is like me.\"\n\n\"Always wondered,\" I said as I stood up. Getting on her bed, she had me lean forward on my knees, feeling her waste no time in burying her tongue between my cheeks. When I released one hell of a moan, she giggled.\n\n\"Found you like having your arse eaten, Benji?\"\n\n\"God yes.\"\n\n\"And having a thick girlcock slide inside you?\"\n\n\"It's wonderful. And when you cum, we both feel euphoric.\"\n\nShe spent longer than I thought eating my arse. I guess she liked it, before I felt the application of lube and her fingers started to spread me nice and wide, though she continued to use her tongue from time to time. I moaned. I whimpered. I was eventually begging for her girlcock so she could just fuck me. She playfully slapped my butt and told me to be patient.\n\nWhat did surprise me was, just like my sister, she had me lie on my back as she insisted we were making love. I wasn't just a fuck to her. It made me smile as I realised how much she seemed to actually like me. Pressing herself against me, I moaned softly as her thick head slowly spread me and popped inside, her face lighting up as she felt the tight confines of my arse around her girlcock.\n\n\"It's wonderful,\" she whispered, leaning forward to kiss me as I felt more of her sliding inside me, \"Oh Benji...\"\n\nHer eyes never left mine as she started to gently thrust, and once her entire length had slid inside me, feeling her body press into mine, she started to blink rapidly, reaching up to caress her cheek. \"I feel the same way about you, Ness,\" I whispered, \"I have for a long time.\"\n\n\"Still going to share you though. Someone like you deserves everything, Benji.\"\n\nI'm not sure why I'd been told that by more than one person but I wasn't going to complain. I loved my family, and my depth of feeling for Vanessa... She'd been one of my best friends since the earliest days at school. We'd always been close. Now that I thought about it, more of my friends were futanari than male. I could count female friends on one hand as they just ignored my presence.\n\nWrapping my legs around her waist, she started to pump me a little harder. After being fucked by my sister all weekend, I won't say I was used to being pounded, but digging my fingers into her back, I urged Vanessa on to give it to me. Her face lit up and I felt her thrusting into me faster, burying her length nice and deep each time, her kisses getting more passionate each time.\n\nI urged her on with every passing minute, desperate to feel her cum in me. It had been a warm day, both of us starting to glisten with sweat. Moving my legs, she rested them over her shoulders, feeling even deeper inside me. \"Oh my god, fuck me!\" I cried.\n\n\"Going to cum so hard in you, Benji!\" she exclaimed.\n\n\"Fill me, Ness. Again and again!\"\n\n\"Oh fuck yes...\" She drove her harness into me again and again before I felt that throb before she unloaded. She practically squealed with delight, still pumping into me with each spurt, until she was clearly finished. Leaving herself buried in me, her face lit up with a smile as she moved my legs so she could lean down to kiss me. \"I... Benji... I...\"",
        "\"I feel the same way, Ness. Trust me on that.\"\n\nFeeling her pull out, resting to my side, we turned to face each other as we cuddled together. Gazing into her blue eyes, I was surprised that she was the first one to start blushing. \"Thank you for being my first,\" she whispered, \"You'll have to visit, like, a lot.\"\n\n\"I'll do what I can,\" I replied, chuckling more to myself. Saturday morning, I was a virgin. By Monday afternoon, I'd slept with two futagirls and I think had more possibilities available.\n\nIt didn't take long for Vanessa to be hard again. This time, she had me on my knees and practically mounted me from behind, groaning as she didn't waste time giving me her entire length before she started to fuck me. I'd obviously thought about being fucked by futanari before but the sheer delight when being fucked was better than anything I imagined.\n\n\"Oh god, fuck me, Ness,\" I moaned.\n\nI felt her bite my neck for a moment before she practically growled into my ear. \"Harder?\"\n\n\"God yes.\"\n\n\"I'll thank your sister for breaking you in for me.\"\n\n\"She spent nearly all of Sunday buried in my arse!\"\n\n\"Want to fuck at school?\"\n\n\"I'll do anything you want, Ness.\"\n\nPressing my head into the pillow, she lowered my arse and started to drive into me harder. She had me grunting and groaning, our skin slapping together with each thrust. \"I love your arse, Benji. My god, you're going to be popular!\"\n\n\"My arse is yours, Ness. Well, I think Jade might fight you for it.\"\n\n\"We'll fuck you together one day. Spitroast you.\"\n\nShe changed the angle and I felt pressure, knowing she was now pressing the right places inside me, just like Jade had done time and again on Sunday. Reaching underneath, my cock was incredibly sensitive, warning Vanessa I was going to cum. She told me not to worry, the sheets would need changing anyway.\n\nMy orgasm set off hers as I definitely squeezed her inside my arse as I erupted all over my chest, more of my cum landing on her bed. As I was enjoying an orgasm, she slammed her girlcock into me and erupted, my arse filled by spurt after spurt of more cum. She rested on my back as I laid down flat on her bed, both of us breathing heavily.\n\nFeeling her pull out made me groan with disappointment, though when I spooned back against her, she slid her girlcock back inside me. \"There we are, it's back home already,\" she breathed into my ear, feeling her start pumping into me again.\n\nA knock at the door caused her to stop and pull out, opening the door as her mother slid in. I didn't bother covering up as Vanessa resumed her position, sliding her girlcock back inside me and continued to slowly fuck. Her mother took a seat by the bed. \"Well, you are just delightful, Benjamin.\"\n\n\"Thank you, Mrs...\"\n\n\"Julie. I think we're familiar enough by now.\" Smiling, she asked, \"Want to see my girlcock?\" Nodding eagerly, she lifted her skirt and untucked herself. Lubing herself up, she was soon incredibly hard. \"Ten inches of girlcock, Benjamin. Have you had something this big yet?\"\n\n\"Not yet.\"\n\n\"How big is your Mum?\"\n\n\"Nine. Caroline is ten.\"\n\nSmiling, she nodded, understanding the unspoken agreement. \"Ah, I'll let Caroline have first go. Don't think she'd like me being the first ten inches that you get. Vanessa, would it bother you...\"\n\n\"Can we do it together, Mum?\" she asked, not breaking her slow thrusting into me. After everything I'd experienced the last seventy-two hours, I just accepted it.\n\n\"I think it's a little soon for double penetration, sweetie, but a spitroast would be a lot of fun. Long as I get my hands on that tight little butt of his too.\" Leaning over, she kissed Vanessa on her cheek before leaving a soft kiss on my lips. \"One more cum, Vanessa, then you should do some homework before dinner.\"\n\n\"Thanks, Mum.\"\n\nVanessa filled me up for a third time around fifteen minutes later. We needed a shower after that, covered in sweat and cum as we were. Getting dressed, we continued to kiss and cuddle before we sighed together as we walked downstairs. At the front door, we shared a long embrace and kiss, Jade beeping the horn when appearing outside. We'd see each other the next day, but part of me didn't really want to leave. Julie gave me another peck on the cheek before leaving the house.\n\n\"So is your bum full of cum?\" Jade asked as soon as we departed.\n\n\"Three loads.\"\n\nJade giggled. \"Wow! So you had a fun afternoon then?\"\n\n\"You know Vanessa well enough, Jade. She was wonderful.\"\n\nShe gave me a look. \"You love her, don't you?\"\n\n\"I think I'm going to love a lot of people, Jade.\"\n\n\"Who do you love most?\" she asked quietly. I just looked at her until she pulled the car to the side of the road to lean over and kiss me.\n\n\"Want to make love tonight?\"\n\n\"Jade, I'll be in your room from now on. I'll be disappointed if we didn't.\"\n\nThat put a smile on my big sister's face, humming happily to herself the rest of the drive home. Mum and Caroline were already home when we arrived, taking one look at me, both bursting into giggles. \"So you had fun this afternoon?\" Mum asked, \"Was it Vanessa?\"\n\n\"How did you...\"\n\n\"Ben, you've clearly had a crush on that girl for years,\" Mum said, \"She obviously just waited until you were old enough to return those feelings in an intimate manner.\"\n\n\"I was... her first,\" I said softly.\n\nMum and Caroline hugged me. \"Did you treat her right?\"\n\n\"I think so. I think she wanted to say she loved me but... hesitated...\"\n\n\"You're still young and learning about each other.\"\n\nMum sniffed my hair. \"Well, at least you showered to wash off the smell of sex. Dinner will be ready in an hour.\"\n\n\"Okay.\"\n\n\"Is she still leaking out of you?\" Caroline wondered.\n\n\"I think my underwear will be moist...\"\n\n\"Cathy, can we...\"\n\nMum smiled at her, then looked at me. \"Trousers down, young man. We want to see.\"\n\nI was surprised to find myself bent over the dinner table, my trousers and underwear slowly pulled down, my legs spread for me. I could feel her cum still leaking out of me, Caroline or Mum spreading my cheeks. \"Oh my, his bum must be just overflowing with her cum,\" Caroline said excitedly.\n\n\"Three loads?\" Mum asked. I just nodded, unable to stop the moan as finger caressed my arse. \"Do you like that, baby?\"\n\n\"I love you, Mum,\" I whispered.\n\nWhat I didn't expect next was a soft tongue, glancing back to see Mum between my cheeks, Caroline with her girlcock in hand. \"Oh god,\" I moaned as I felt Mum's tongue actually inside my arse.\n\n\"Well, your new girlfriend tastes wonderful,\" Mum stated, giggling to herself, before she made me moan again, sliding two fingers inside me, \"And feels like she's enjoyed your arse this afternoon too.\"\n\n\"Mummy,\" I whimpered.\n\nMum lifted me up so I was resting back against her, fingers still buried in my arse. With her other hand, she slowly stroked my cock. \"I'm going to look after my little boy,\" she whispered into my ear, \"You'll always be my little boy. I love you so much.\"\n\n\"Love you too,\" I managed to say. With her fingers up my bum and her fingers around my cock, I wasn't going to last too long.\n\n\"Fuck, I'm going to cum too!\" Caroline stated.\n\n\"Oh god,\" I groaned, Mum's hand a blur on my cock, no surprise I blasted all over the tiled floor. Caroline moved to stand in front of me, Mum gently pushing my head down, the first spurt of Caroline's creamy cum blasting into my face. Leaning further down, the next hit my face before I got my position right to take the next couple in my mouth. Feeling her fingers at the back of my head, I took the tip of her girlcock in my mouth to take the rest direct from the source.\n\n\"Oh yes, baby,\" Caroline moaned, \"That's a good boy. A very good boy.\"\n\nAs soon as she was finished, I turned back to my mother, lowering myself to my knees and lifting her skirt. I could see her hard girlcock in her panties, lowering those and taking her immediately in my mouth. \"Oh baby... oh baby...\"\n\n\"I want to taste your cum,\" I moaned, \"Please cum for me, Mum.\"\n\nTears ran down her cheeks as she caressed my head. \"Anything for my darling boy,\" she said softly, \"A couple of minutes at most.\"\n\nWith lips, tongue and my hand, Mum didn't last too long as she was simply far too turned on. Jade was sitting at the table, watching with an amused expression, though I figured she was probably stroking her own girlcock at the same time. Returning my attention to Mum, I put everything I'd learned so far into making her orgasm.\n\nShe let me know when she was close and just got ready for the eruption. Her fingers gripped my hair tighter to keep my head in place, but I was going to swallow everything anyway. \"Oh baby, I'm gonna cum,\" she moaned.\n\nThen she filled my mouth. Spurt after spurt of creamy deliciousness. She came hard and I couldn't swallow it all, some eventually dripping down my chin on the floor. As soon as she was empty, she dropped to her knees and hugged me so tightly, I almost couldn't breathe. Feeling her shudder was a surprise. \"Thank you, baby,\" she cooed into my ear, \"I've been waiting for you to do that for me.\"\n\n\"We'll make love on the weekend?\"\n\n\"All weekend, baby. Caroline too, and you can't forget your sister either.\" Leaning back, I caressed her cheek, using a thumb to wipe her cheeks, earning a sweet smile. \"You're sleeping with me from Friday to Sunday. I'm going to cuddle my little boy after we make love each night.\"\n\nJade cleared her throat. \"I do remember something about him going to do homework, Mum,\" she said, humour in her tone.\n\n\"Yes, yes, okay. Um...\"\n\n\"I'll clean up the mess, Cathy,\" Caroline offered, \"You just re-focus on dinner.\" Kissing my cheek, she whispered, \"I'm so turned on watching you suck your mother's girlcock, Benjamin. So fucking hot. Want to suck mine soon?\" Nodding eagerly, she cuddled me tightly before helping me to my feet. \"If you'd like, I'll help you learn how to deepthroat. Futagirls like me love men who can take our entire length down their throat.\"\n\n\"I'd like to try, Caroline. For you,\" I said, once I was upright. That earned another tight hug before she turned me around, patted my butt, and told me to scoot.\n\nFocusing on my homework, I was busy listening to music at the same time, so didn't hear Mum shout that dinner was ready. When Jade touched my shoulder, I almost shit myself as I was busy concentrating. Turning off my music, she was busy trying not to laugh at me as I was doing what I could to get my heart-rate back under control. Getting to my feet, she hugged me before giving me one hell of a kiss, whispering into my ear that the blowjob I'd given Mum earlier had turned her on completely.\n\n\"Am I getting fucked tonight?\" I whispered back.\n\n\"Oh god yes, you are, Benji.\"\n\nDinner was even livelier than normal. Now that I was eighteen, the three futanari in my life had no problem with innuendo, double entendres, and just flat out stating what they were thinking about. I'd grown up around it but there was a subtle difference since Saturday, a charged atmosphere, left thinking that, after dinner, I could find myself bent over the table, or the couch in the living room, and fucked by the three of them.\n\nAnd they knew I'd love every second.\n\nFinishing my homework after dinner, I returned to the living room, Mum and Caroline watching television. Jade was in her room, focusing on her own studies. Mum was on one of the recliners, patting her lap for me to sit with her. Considering she was bigger than I was, I'm sure many men would have been embarrassed. She couldn't pick me up or carry me, but she was still at least five inches taller than me.\n\nI felt her erection within a few seconds of sitting down on her. Meeting her eyes, she smiled at me. \"You're hard,\" I whispered, \"Do you want me naked?\" Nodding eagerly, I stood up and stripped off my shorts and t-shirt. I was already not bothering with underwear around the house. Straddling her lap, I leaned down and kissed her with all the love I felt.\n\n\"Wow...\" Caroline whispered, \"That's beautiful.\"\n\n\"I don't know if I can wait until the weekend,\" Mum murmured.\n\nSliding out of her lap, I wasn't surprised she wasn't wearing her panties, so lifted her skirt to reveal her thick girlcock. \"Want another blowjob, Mum?\"\n\n\"Can Caroline and I give you a facial together?\"\n\n\"Of course, Mum. Anything you want.\"\n\nTaking me by the hand to their bedroom, Mum and Caroline stripped naked, sitting me back on my knees as they lubed up their girlcocks and started to stroke themselves. \"How many loads, Cathy?\" Caroline wondered.\n\n\"Two each. Really cover him in our cum. Is that okay, baby?\"\n\n\"Can I lick you clean afterwards?\"\n\nCaroline turned to Mum. \"Are we really sending him away to university? I want to keep him here.\"\n\nMum giggled. \"Yes, because he's going to find so many futagirls to love while he's there. But he'll come home to visit often because he's a good boy.\"\n\n\"Your good boy, Mum.\"\n\nWatching two slightly mature futanari stroking their thick members in front of me was incredibly erotic. And the language they used when describing what they'd like to do to me was depraved in many ways. What I learned is that they both definitely want to fuck me together, promises of more threesomes that I could imagine, and if Jade wanted to be involved, I'd best get used to the idea of having two girlcocks in my arse at the same time.\n\nTheir first load each practically covered my face, opening my mouth to take at least a spurt or two from each of them, hearing them giggle as I made sure the gulps were audible, smacking my lips and proclaiming my mothers were delicious. I hadn't realised I'd said that before I felt two arms around me. \"Thank you, baby,\" Caroline whispered.\n\n\"I should have called you that long ago... I'm sorry...\"\n\n\"Mum is Mum. Call me... Ma?\"\n\nSmiling, I thought that was a wonderful idea, but as far I was concerned, and had thought since Caroline had become a permanent fixture in my life, I had two mothers. Mum then suggested I'd earned a third creamy load on my face before being so wonderful. The second load didn't take too long, but the third did take time, Mum and Caroline sitting back on the bed as I took time to stroke both of them off. Holding Caroline's long, thick girlcock in my hand took some getting used to.\n\nAfter leaving a third load on my face, I could feel it dripping all over me, taking time to lick Mum's girlcock up and down, cleaning it up nicely, before I did the same thing for Caroline. \"I'll blow you tomorrow when you get home, Ma,\" I said, \"I've neglected you.\"\n\n\"Hush, silly boy,\" she said, \"Now go show your sister what we've done to you!\"\n\n\"Thanks, Mum. Ma.\"\n\n\"You're welcome. We should be thanking you though,\" Mum said.\n\nJade took one look at me and burst into laughter after I walked into her room. What surprised me next was the fact she licked my face clean, kissing me each time so we could share their cum. That left me wondering if she'd ever fooled around with them. She returned a look that suggested I was asking a very stupid question. Shrugging, I blushed but said, \"I just don't know the rules.\"\n\n\"There are none. I've sucked them off. They've sucked me off. But I've never fucked them.\"\n\n\"Why not?\"\n\n\"There's only one man in this family I've ever wanted to fuck. And that man isn't our father.\"\n\n\"Okay... Want to shower before bed?\"\n\n\"I've got some studying to do. You go but you can relax in here if you want. I just love your presence nearby sometimes, Benji.\"\n\nAfter a shower, I grabbed a book from my room and returned to Jade's, lying back on the bed to read as she typed away on her laptop. I heard her sigh a couple of times in frustration, eventually getting up, grabbing some lotion, and started to give her a massage. Kissing the top of her head, she rested it back against my chest as I kneaded her shoulders and arms. \"Come to bed,\" I whispered, \"We'll just cuddle tonight.\"\n\nLifting her head further back, her face was lit up with a wonderful smile. \"Okay. I'll have a quick shower,\" she said softly.\n\nShe showered quickly, returning wrapped in a towel, closing the door. Watching her just dry off was somewhat erotic, hanging the towel up before she slid under the sheets to join me. Gently pulling me closer, I felt her arms wrap around me as I rested my head just above her breasts. What I didn't expect was for her to start shaking. \"What's wrong?\" I asked quietly.\n\n\"I'm just so happy, Benji. Happy tears. It just sucks we had to wait so long.\"\n\n\"Rest of our lives. Even Vanessa, after one time together, realises how important you are to me.\"\n\nDriving me to school again as usual, Jade did the same trick as the previous day, getting out and giving me one hell of a kiss before wishing me a good day. I watched her walk back to the car, a definite shake of her arse, before I shook my head, walking towards the main building. I was intercepted by Vanessa and her friends, and I was greeted with a similar sort of kiss.\n\n\"Morning, lover,\" she cooed, \"How are you this morning?\"\n\n\"Pretty damned good, Ness. You?\"\n\n\"Wonderful,\" she replied, looping her arm through mine. As we walked, any futanari we passed smiled at me, rested a hand on my forearm, even kissed my cheek. \"They obviously know I fucked you, Benji. We can sense it.\"\n\n\"Does that mean... you know...\"\n\n\"Only if you want to, Benji. You know the rules we learned. We never make you do anything you don't want to.\" Stopping near our locks, I found myself surrounded by six utterly beautiful futanari. \"Benji, do you want to make love to me?\" Feeling my jaw drop, I was surprised she started to blush. \"I didn't even ask you yesterday. I just thought you wanted...\"\n\nTaking her hand, I squeezed it first. \"Ness, it's exactly what I wanted, but do you want me that way too?\" She nodded eagerly. \"Okay, but there's just one thing. I haven't done it yet, perhaps obviously, and I've already promised...\"\n\n\"Jade?\" Shaking my head, I felt myself blush as she stepped closer. \"Mummy? Does Mummy want to be your first?\"\n\n\"Yes,\" I replied, barely audible.\n\nThe six of them thought it was incredibly sweet, finding myself in the middle of a group hug. \"Would you like to be with me like after?\" Ness asked, surprised by how hopeful and eager she sounded.\n\n\"I'd love to, Ness.\"\n\nHer face lit up. The other five squealed and were ever so excited. Ness kissed me hard, finding myself pressed back against the lockers, her cock tenting behind her short skirt, feeling it press against me. The only thing that stopped us was the warning bell for our first lessons. Pulling back, the look in her eyes was intense. \"See you at lunch?\"\n\n\"Definitely.\"\n\n\"Want to find somewhere we can fuck?\"\n\n\"God yes.\"\n\n\"I want you to take the final two lessons today with my cum in your bum.\"\n\n\"When do we get our chance?\" Chloe asked. I stared at her in surprise, while she blushed, looking a little shy. \"I think I can speak for all of us when I say we'd all like a little fun, but we know how Vanessa feels about you.\"\n\n\"We'll talk about it later. It's up to Benji, but I promised no jealousy on my part,\" Vanessa started, \"We'd better get to class.\"\n\nIt was difficult to keep my concentration during my classes, thinking about the way my life had changed so much within a few short days. I'd woken up on my birthday feeling utterly miserable and alone. Hell, I was probably depressed in a certain way. Here I was, four short days later, in love with my sister, sharing something special with one of my best friends and likely falling in love, and with opportunities for even more fun with others.\n\nMark and Mike wouldn't shut up during the short morning break. Apparently my name was a hot topic. Vanessa hadn't said anything but everyone was aware I'd blown her in the changing rooms yesterday and that I'd gone home with her after school. The fact Jade had dropped me off and kissed me passionately both days since then had also set tongues wagging. I didn't gloat nor was I arrogant. I thought I was just very lucky, certainly not special. Mark gripped my shoulder, said it was because I was a good guy and that he wasn't surprised so many liked me.",
        "\"No surprise nearly the entire futanari in our year group like you anyway. You've just been blind to their obvious interest,\" Mark suggested. He tapped my temple. \"You've probably been overthinking. I understand, it sucks being single when everyone else seems to be hooking up. You'll be making up for lost time quickly enough.\"\n\n\"Thanks, mate.\"\n\nHe gripped my shoulder again. \"Mate, Vanessa has been in love with you for years and you've been an object of interest to most others.\"\n\nMeeting up with Vanessa at lunch, we practically wolfed down our food before she dragged me to the changing room. Plenty of people saw us and watched with interest. Finding ourselves a shower store, we stripped eagerly, Vanessa grabbing the tube of lube she had in her pocket. Leaning against the wall, she got me nice and ready with her fingers before lubing up her girlcock and sliding it inside. Both of us groaned as she slowly buried the entire length.\n\n\"Oh god, fuck me, beautiful,\" I moaned, \"Nice and hard. Just fill me up.\"\n\nGrabbing my shoulders, she pumped into me nice and slow, letting me get used to her thick cock again but, once I was nicely spread for her, she started to pump into me nice and hard, the slap of her skin against mine echoing around the shower room. Neither of us said much except to curse, or for me to urge her one. She complimented me on how tight my arse was. Otherwise, we spent most of our time moaning and grunting.\n\n\"Cum in me, beautiful. Cum in me,\" I begged.\n\n\"Oh fuck, here it comes, Benji!\"\n\nThat usual throb I was already used to before I felt that warming sensation. I counted how many times her thick member throbbed in me, each leaving a large, thick load of creamy cum deep inside me. I managed to stay upright as Vanessa leaned down, her breasts pressing into my back, chin resting on my shoulder, feeling her breath on my neck. \"Fucking hell,\" she muttered, \"Can we do this every day?\"\n\n\"Definitely.\"\n\nFeeling her pull out, I turned around and we kissed, the passion almost overwhelming as I ended up pressed against the wall, feeling her fingers wrap around my cock. What I didn't expect was for Vanessa to drop to her knees, looking up at me with nothing but love in her eyes. \"I've never done this before, but you need to cum too, Benji.\"\n\n\"Trust me, I'm going to cum no matter what you do.\"\n\nSmiling even more, she lowered her mouth and wrapped her soft lips around my shaft. She might not have done it before but she must have done reading. It wasn't as good as Jade, though she'd get better, but the simple fact she was doing had me moaning loudly. \"Oh fuck... Ness...\"\n\n\"Just give me warning but I'm going to swallow everything.\"\n\nHer head was soon bobbing up and down. Her eye contact was exemplary. She ran her hands all over my body. I couldn't help myself looking down, knowing it was going to make me explode even quicker. But she looked so eager to please, running my fingers through her hair... \"Close,\" I whispered.\n\nShe had just enough warning before I unloaded in her mouth. And just like she'd promised, she swallowed my load, smacking her lips with delight before kissing up my body. \"After you fuck your Mummy, you'll cum in my pussy too?\"\n\n\"Definitely.\"\n\nKissing me softly, we just gazed at each other before someone cleared their throat. \"Okay, you've had your fun. Get dressed and out of here.\"\n\n\"Yes, ma'am,\" we said in unison.\n\n\"You're not in trouble. Try not to be so obvious next time though.\"\n\n\"Yes, ma'am,\" we said in unison.\n\nDressing quickly, we walked outside to be greeted by Miss Wilson, who stood with arms folded under her large breasts but a smile on her face. And there was no doubt she knew exactly what went inside the shower stall. She looked me up and down before glancing at Vanessa. \"I hope you treated him right, Vanessa.\"\n\nShe wrapped an arm around my waist, making sure I leaned into her. \"Of course, ma'am. His bum is currently full of my cum.\"\n\nMiss Wilson smiled. \"Good to know.\" She jerked her head. \"Bell will ring in a few minutes. Best you go grab your things.\"\n\nWalking towards our friends, I had to say, \"I can't believe she's so calm about it.\"\n\n\"You realise she's futanari, right?\"\n\n\"I know, but still...\"\n\n\"If it was a female teacher, she'd have freaked out. You know what they're like about our kind, and they're even worse to men who love being fucked by us. Male teacher would have given you a fist bump but warned you to be careful. Miss Wilson was probably thinking about fucking you too.\"\n\n\"You think?\"\n\n\"Definitely.\"\n\nSitting in class for the final two lessons of the day was interesting as I felt her cum leaking out of me constantly. Chloe was sat to my left, another futagirl I knew, Bailey, was sat to my right, and both knew exactly what I'd been up to at lunch. Glancing to my right, Bailey continually licked her lips and gave me what I'd call 'sex eyes'. Sitting back, she lifted her skirt and gave me a look at her hard girlcock. My jaw dropped before I smiled, making a blowjob motion with my hand. Her eyes lit up. When the bell rang for the end of the day, she got up and dropped a piece of paper on my desk.\n\n\"My number if you do want to suck me off one day, Benjamin,\" she whispered, caressing my cheek for a moment, before she disappeared out the door, leaving me in stunned silence.\n\nJade picked me up as she'd finished classes for the day, greeting me with the sort of kiss that left me weak at the knees. \"I'd bend you over the bonnet of this car and fuck you right now,\" she growled into my ear.\n\n\"You won't need to lube me as Vanessa fucked me at lunch.\"\n\nI didn't expect her to laugh out loud before she hugged me tightly. \"I'm so glad you're being looked after. She's loved you for so long.\"\n\n\"Mark told me the same thing. I must be just blind, oblivious or stupid.\"\n\nThe next three days were almost the same. Jade dropped me off at school each morning, leaving me with one hell of a kiss before she drove off. Vanessa, Chloe, Georgie and others would meet me, no surprise Bailey quickly attached herself to our group. I called her within a day and, though we'd gone to the same school for six years, we hadn't been part of the same circle of friends, but I found she was very sweet and funny, and I invited her to join our group. She'd also spoken to Vanessa, told her she was interested in a little fun. Vanessa promised her it would be possible.\n\nEach lunchtime, Vanessa and I would eat before we'd sneak away. There were woods near the back fence of the school perimeter, finding a secluded spot where I ended up on my hands and knees, Vanessa fucking me nice and hard from behind. She'd leave a nice load of cum inside me, we'd make out for a little longer, before dressing and heading back in time for the bell for the last two lessons.\n\nFriday ended differently. My last class was with Miss Wilson, who was one of the history teachers. She was one of my favourites as she had a cracking sense of humour, kept the lessons interesting but always learning, and she was lovely to look at. The fact I knew she was futanari, without her ever confirming it, was just icing on the cake. The bell rang for the end of the day and everyone prepared to leave.\n\n\"Mister Marsh, I'd like a word with you. Everyone else dismissed. Enjoy your weekend.\"\n\nMark gave me a look and I wondered what I'd done wrong. Vanessa was in the same class, kissing my cheek, whispering that she'd see me on Monday, aware I'd be busy the weekend. Once the room was empty, the only sound was the click of Miss Wilson's heels as she walked to the door, closing and locking it.\n\n\"Front and centre, Mister Marsh.\"\n\nGetting up with some trepidation, I walked towards her desk, though she gestured for me to walk around it and stand by her chair. I couldn't help glance at the cleavage on display before meeting her emerald green eyes behind the thin frames of her glasses.\n\n\"I'm very disappointed, Benjamin. I heard you had a birthday party on the weekend and I wasn't invited.\"\n\nI felt my brow crease in confusion. \"But... you're my teacher... one of them anyway.\"\n\n\"And?\" She stood up, no surprise she was taller than me. The average height of futanari is six foot, at least. \"Everyone in this school is aware of your... proclivities, Benjamin.\" What I didn't expect was her soft fingers to caress my cheek. \"You've grown into a fine, handsome young man,\" she said softly, \"But I wonder what you think about one of your old teachers?\"\n\n\"You're fucking hot, Miss,\" I blurted out, \"And you're not that old.\"\n\n\"Yet I didn't have an invite.\" She tutted, shaking her head. \"I think you need discipline. Hands on the desk.\"\n\n\"What?\"\n\n\"I said hands on the desk,\" she ordered in a tone that suggested I just do it.\n\nFiguring I should just do as she said, I placed my hands on her desk and wasn't surprised when she gently pushed me forward. That's when I felt her press into me, her breasts eventually poking my back, feeling her hot breath by my ear. \"Have you fantasised about me, Benjamin?\" I nodded, not trusting my voice. \"Thinking about my big girlcock. Would you suck it for me?\" I nodded eagerly to that. \"Would you like me to fuck you?\" I nodded enthusiastically. She tutted again. \"So you want me like that but no invite to your birthday party. I'm hurt, Benjamin. I thought you liked me...\"\n\nFeeling her pull back, I didn't expect her to undo my trousers then roughly pull those down alone with my underwear, leaving me bare arsed. She caressed each cheek, rather complimentary, before she smacked my right cheek. I winced and it stung, but it was also... nice. Then she slapped my left cheek. Again, it stung but it also felt... pleasurable. She alternated again twice more and I released a light moan.\n\n\"You like that?\" she whispered into my ear.\n\n\"I didn't know I did!\"\n\n\"Do you want me, Benjamin?\"\n\n\"God yes, Miss.\"\n\n\"I'd love to fuck you right here, right now. I really would. You're so fucking cute, it's driving me insane. I know you've liked me for years too, ever since you started here.\" She pressed into me, her hard girlcock no doubt covered by at least her panties. I released a soft moan, pressing back against her. She kissed my cheek. \"I know you want me too,\" she breathed into my ear, \"Are you busy this weekend?\"\n\n\"My Mum...\"\n\n\"Oh, that's really sweet, Benjamin. Your first time with her?\" Nodding, she kissed my cheek again. \"How about one day after school next week. Make it Wednesday. Tell your Mum it's a study session. But you'll be studying my big girlcock as it brings you nothing but pleasure.\"\n\n\"Okay,\" I replied after taking a deep breath, \"Is it... okay to do that?\"\n\n\"You're eighteen and an adult. You're doing this of your own free will. And you like me, so no, it's not a problem.\"\n\n\"We can... do something now...\"\n\n\"I'd love to, Benjamin, but if we're caught, I'd get in a lot of trouble. Just having you like this would probably see me disciplined.\" She paused before asking, \"Did you like it?\"\n\n\"Yeah...\"\n\n\"Thought you might. Pull up your trousers. I'll give you a lift home.\"\n\nWith my trousers back in position, I turned to face her. Her red hair was vibrant, framing her pale, pretty face. Her green eyes were breathtaking. I know I stared at her in silence, long enough her face broke out in a grin. Leaning forward, that first kiss was something else. I couldn't believe my luck. My sister. My mother. Caroline. Vanessa. Bailey. God knows who else. And now one of my teachers.\n\n\"I think my sister is waiting for me, but thank you, Miss.\"\n\n\"Okay, sweetie. One thing. When you're at my place week, I'm not Miss Wilson. I'm Sandra.\"\n\n\"Yes, Miss. Of course.\"\n\nEscorting me to the door, she unlocked and opened it before resting a hand on my shoulder. \"I want your last couple of months here to be memorable, Benjamin. You're going to finish top of your year in all likelihood. I know you and Vanessa... Is she understanding?\"\n\n\"Of course. I... just didn't know that I'd be so popular.\"\n\n\"Good. I'm hoping you'll be a regular visitor, and maybe after you've graduated...\" Kissing my cheek, she wished me goodbye and a fun weekend.\n\nJade was outside waiting for me. She took one look at me and smiled. \"Who was it?\"\n\n\"I haven't been fucking or anything. But Miss Wilson...\"\n\n\"Oh, a teacher?\" She laughed and hugged me. \"Well, good for you, Benji.\"\n\n\"We didn't do anything but she's asked me around for a study session next week.\"\n\nGetting into the car, my sister snorted. \"Study session, my arse. She's going to fuck you senseless and you're going to love every minute.\"\n\nI knew she wasn't wrong about that. Still, I had to pinch myself how much my life had changed in just a week. And I had more to look forward to that very evening."
    ],
    "authorname": "UltimateSin",
    "tags": [
        "futanari",
        "futa",
        "dickgirl",
        "anal",
        "blowjob",
        "facial",
        "dominant girl"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-futanari-diaries-ch-02"
}