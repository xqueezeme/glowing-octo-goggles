{
    "title": "Dominant Species Ch. 34-36",
    "pages": [
        "Rachel jumped to her feet. \"I've... I've got to go. I can't stay here any more.\"\n\nReggie looked with sadness at his sister, but she was right. \"Go to him as soon as you can travel. Whatever it takes, you get him and get your family to safety.\" She ran over and embraced him, she was shaking with emotion right now. \"Get things packed.\"\n\n\"I'm going too.\" They all turned around to see Abigail standing. \"I may be tolerated, but I know when I'm not wanted. I'll take my chances out there.\"\n\n\"Me too,\" said Silvia. She got up and hugged Abigail. \"We can take my car. I'll take my chances on the road, I can't live in a place that would do this to innocent humans.\"\n\nRachel joined their hug, tears streaming down her face. \"Get the kid's stuff ready, the car is in the garage and we need it packed before dusk. As soon as the sun is below the mountains, we need to take off, before anyone can stop us.\" They nodded and went off to gather their meager belongings while their children kept sleeping. Rachel linked Marcus again, and filled him in on what was said at the meeting. \"Marcus, love, I don't even know who my father is anymore.\"\n\nMarcus sent his love back, there was nothing else he could do; he wanted to regret his actions, to make it all go away, but he couldn't do that and there was no point in wallowing in self pity. They would have to suck it up and go with it. \"All right, if you have the car, drive to town as fast as you can. I'll have Josi meet you in front of the bank, Reggie needs her safe and she can help protect you guys on the road. She's not bad at riding shotgun.\"\n\n\"The car's going to be full, Marcus.\"\n\n\"Don't worry about anything but the people, sit on each other's laps if you have to, just get out of town. We need you safe.\"\n\n\"What about you? How are you going to be safe? Come with us, Marcus.\"\n\nHe paused. \"You know I can't abandon my patients, love. Don't worry about me, I have a plan. I'll be up at North Fork in a week or so. Please, love, for me. Keep Raven safe with you. I have nothing to live for without you.\"\n\n\"And I have nothing to live for without you.\" \n\nShe closed the bond and opened the door to their bedroom; she allotted herself one suitcase to carry the essentials. The rest would have to be abandoned, unless she could get someone to deliver it later.\n\nTears ran down her face as she looked around the room; the memories in photos on the walls, the life they had built together here, it was all gone now. Wiping her face, she steeled herself for what was coming up. She had to get her family through this, no matter the cost.\n\nWhile she was packing, back in the living room Reggie was still pacing back and forth while his mother watched in worry. He was linking his friends, lining up those people he would need to initiate the challenge. The Pack meeting had spooked them, now that they knew what the Alpha had planned, he had people coming to him asking how they could stop it. So far, he had over a dozen who pledged to support his challenge.\n\nHe cut off the latest mind link and looked back at his Mom. She was hunched over, her face in her hands, crying softly as she watched her family explode apart around her. He walked off to the guest room, hoping she would somehow talk her mate out of this madness before it was too late.\n\nReaching the room, he pulled off his shirt and looked in the mirror. He knew he was strong, but he would need to be ready and rested. He closed off all links and laid down on the comforter, hoping to get a couple hours of rest before this all went down. \n\nHe was almost asleep when the door softly opened; without opening his eyes, he knew it was him Mom. She walked over to the bed and sat down; opening his eyes, he could see the dried tears on her face and the redness of her eyes. \"Mom?\"\n\n\"He won't listen to me anymore, Reggie.\" In a flash, he was sitting up, taking her into his arms as she broke down emotionally. \"I can't stop it!\"\n\nHe hugged her tightly until her sobs stopped. \"I've got it, Mom. I'll do what I have to do. I'm just sorry for what it is going to do to you. I don't want you hurt.\"\n\n\"It's too late, baby,\" she whispered in his ear. \"And I'm only doing what I have to do.\"\n\nReggie didn't have time to register the meaning before he felt a sharp poke in his neck. His mouth opened in shock, but the fast acting sedative was already flooding his brain and shutting it down. Lisa withdrew the hypodermic needle and tossed the injector into the corner of the room. \"Shhh...\" She caught his weight as his muscles gave out, laying him gently back on the bed. The last thing he heard before blackness took him was his mother. \"Sleep, baby. I can't let you do this.\"\n\nShe got up and locked the door as she left.\n\n-\n\nJosi paced back and forth in the front office of the clinic. The sun was going to be down in another thirty minutes, and she hadn't heard a thing from Reggie. His link wouldn't respond to her, no matter how hard she pushed on it.\n\nMarcus had been gone for most of the day now. With each passing hour, the humans he had bitten were improving, with a dozen that had already woken up. She and the others who could had been very busy caring for everyone and explaining what had happened. So far, no one had freaked out.\n\nAt least, not too much. They had all seen too much death already not to cling to the life rope when it was tossed to them.\n\nFinally, Marcus pushed through the doors of the clinic, tossing off the blanket and putting the glasses in his pocket. He smiled as Josi ran to him and hugged him tightly. \"Easy, little one, your mate might get jealous.\"\n\n\"I'm not worried about that, he knows you're an old man, even if you are my brother in law now.\" She stepped back and looked at him, noting the changes from when he left. He was carrying a Glock 19 on his hip, and was wearing a mesh hunting vest with a half dozen thirty round magazines stuffed into the pockets. She could see two barrels sticking up from the rifles on his back, recognizing the flash hiders as being from AR-15 sporting rifles. \"Marcus? Are those for the trip to North Fork?\"\n\n\"In part.\" He took off one of the rifles and handed it to her, it had a Trijicon illuminated reticle scope that didn't need batteries, so it was still working. He pulled three more magazines out of his pocket and set them on the table for her, then from the other pocket he pulled out a small 9mm semiautomatic she recognized as a Smith and Wesson M&P compact. \"These are for you. As soon as the sun sets, a car is going to leave my house with my family, Silvia's family and Abigail's family. They are going to pick you up at the bank on the way through town. I need you to protect them on the way, and make sure they get to North Fork safe and sound for me.\"\n\nShe looked down at the weapons, but then she picked up on what he didn't say. \"So what are the rest of the weapons for?\"\n\n\"I'm staying here, Josi.\" \n\n\"NO! He will KILL you!\" She pushed him onto the couch, anger coming off of him in waves. \"Reggie told me they are coming for you. You HAVE to leave.\"\n\n\"I can't, Josi. But I won't be alone.\" As he stood up, other townspeople started to make their way in the door. Those that could protect their eyes were making their way here, and they were carrying duffel bags full of weapons and ammunition.\n\n\"Doc, what do you need us to do?\" Deputy Robert Stevens was the highest ranking law enforcement official left in town, but he was clearly deferring to Marcus.\n\n\"Start talking to those people who can fight, figure out what they can comfortably do and arm them up. When the rest get here, we will set up the rest of the defense. We don't have much time.\" The men nodded and started laying the armaments on the appointment desk. Patients who had overheard what was going on, who knew the Alpha was coming after Marcus for what he had done to them, started picking out things they were used to.\n\nOne thing about Northern Idaho was that pretty much everyone knew how to shoot, and many had military experience at some point. While they were getting weapons ready, Marcus gathered the Deputy and other men around a map to talk tactics.\n\n\"First off, boys, it's worse than I thought. I told you they were coming for me, but that's not all.\" He paused and looked down before looking him in the eyes. \"I told you earlier that werewolf law was not to turn humans and not to let humans know we exist. Alpha Richard has decided that the new turns are a danger to him and his Pack, and so are humans knowing of us.\"\n\n\"Why? We've known your family for generations, Marcus!\" Stanley Drummond shook his head.\n\n\"It's the way things are; or at least the way they were. Look, I told you we were a small Pack. Even after all the people who have been lost here, humans still outnumber wolves in this town by far, and wolves can still be killed by hunters. It may be paranoid, but it's consistent.\" He looked around, making sure to make eye contact with each one. \"It's not all Alphas that are like that; Alpha Marcus, he bit every surviving citizen of his town just like I bit everyone here. We don't have central authority we can go to right now to resolve this, there are no communications, no law enforcement. Right now there is us and them, and they are coming for us.\"\n\nDeputy Stevens nodded. \"Then we'll be fucking ready for them.\" Using the map and Marcus' military experience, they identified likely attack paths and defensive emplacements. While they were working on this, men and women started pouring in to the building, all of them heavily armed and with serious faces. By the time everyone had been assigned, they had fifty shooters available on and inside the clinic and six surrounding buildings. \n\nMarcus called them all together just before sundown. \"My friends and neighbors, thank you for standing up for your town today. The people coming are coming to do you harm, and you cannot allow that to happen. Humans and werewolves need each other, now more than ever.\"\n\nHe waited for the murmuring to die down before continuing. \"There is still a chance to fix this, to stop it before we kill each other, so I need you to give me that chance. When you are in place, pass word back to me if you spot men or wolves coming. It is CRUCIAL that no one starts shooting until Deputy Stevens orders it.\" He looked over to the Deputy who had an air horn in his hands. \"When and ONLY when you hear the air horn, do you shoot until the threat is gone. Don't worry about me or anything else, we won't have anyone outside so if it moves, shoot until it doesn't. Got it?\"\n\nA chorus of \"Yes Marcus\" yells came back. \n\n\"One last thing. I'm going to go out and meet them and try to stop this.\" The murmurs started up again until he raised his hand. \"If they shoot me or kill me, let them. Deputy, don't give that order for me, I'm going to do what I have to do out there. I'm still a Werewolf, so it's not your business. If they come past me to attack the Clinic, THEN it is your business. Got it?\"\n\nDeputy Stevens nodded, and walked forward to shake Marcus' hand. \"Got it. Take care of yourself out there, Marcus.\"\n\n\"You too.\" Looking at the fading light coming in around the door, he looked at everyone one last time. \"Time to take your positions, everyone. Good luck, and may God bless you.\"\n\nThe people covered up and moved out of the room, some heading back outside to their sniper positions on other buildings, and some to places in or on top of the clinic. Those who couldn't move were still arming themselves and taking defensive positions within the clinic. Soon Marcus was left with only Josi.\n\n\"You can't do this, Marcus. Don't sacrifice yourself.\"\n\n\"I have to do anything I can to stop this, Josi. All of these people, all those in the Pack, they are all my friends. If I have to be killed to keep my friends from killing each other, so be it. Now, I need you to be with my family.\" He pulled her into his side. \"If I'm killed, it's going to be very hard on Rachel and Raven. Please, I need you with them, I need you to help them through this. You're family now.\"\n\nShe gave him one last hug, then pulled a towel over her head and put her sunglasses on. \"You get your ass up to North Fork in one piece, Doc.\"\n\nShe walked out the door, not looking back, because she didn't have time to cry no matter how much she wanted to.\n\n--\n\n\"Ready?\" Silvia was behind the wheel of the classic car, Ray-Bans and a hooded sweatshirt on with thin gloves. The back seat was full with Abigail and the three children they had between them, all huddled together under a thick blanket for protection from the remaining sun. She also had a Glock in a shoulder holster and a pump shotgun between her hip and the door.\n\n\"Ready. As soon as I pull the door open, you fire up the engine and I'll jump in. Don't stop for anyone or anything, we have to get ahead of them if we're going to make it out of here. Just... don't kill them if you don't have to. They are my friends and family, even if they are trying to kill us.\" She had the door unlocked and was gripping the handle. \"Three... two... one... GO!\"\n\nThe door flew open as the V-8 engine roared to life. Rachel didn't open the door, it was a convertible so she jumped in just as Silvia was flooring it. They peeled tires out of the garage and tore down the short driveway to the main road.\n\nThe Pack members gathered in the covered porches of their homes reacted instantly. Some shifted and ran for them, others stayed in human form but raced to cut off their escape. Silvia turned onto the road, the back of the car skidding and knocking a grey wolf into the ditch. \"GO GO GO!\" Rachel grabbed her AR-15 and shot into the ground, stopping a group of four wolves in their tracks as they started to chase them, but more were coming from every angle.\n\n\"RACHEL! We're not going to make it to the highway!\" She could see them, they had almost reached the cattle gate that separated their rural housing development from the main road. If they got it closed, all was lost.\n\nRachel spun back around and sat down, placing the rifle down she closed her eyes and focused inward. In her mind, she found the links connecting her to the Pack and her Alpha. She cut them.\n\nHer scream shocked everyone in the car, Silvia looked over in shock to see if she had been hit, and even Abigail poked her head out quickly to see what had happened. She was breathing heavily, eyes closed with the pain of the pack bond being lost.\n\nRachel looked back to the gate, whatever she had done had affected all the other wolves as well. They were on their hands and knees, holding their heads as they screamed in pain. They shook it off and got up, but they had lost precious seconds, seconds that made the difference.\n\nThe old convertible caught air as it jumped over the concrete of the cattle gate. Silvia locked up the brakes and spun the wheel, power sliding on the dirt road until the tires found pavement. The tires screamed out as the engine roared, and they quickly left Rachel's home and life in the rear view mirror.\n\nBack at the main house, Richard watched as his daughter sped away. The warriors of his pack ran back to the safety of the shade. His Beta, Ron Johnson, knelt in front of him. \"Alpha? Should we pursue?\"\n\nHe shook his head. \"Leave her. She made her choice, and she can live with the consequences of it.\" He looked across, the setting sun was now behind the mountains. \"Gather the men, we shift and head to town to finish this.\"\n\n\"NOT YET.\" The voice of the Pack Elder, Diane Moonbeam, rang out over the yard. She walked slowly across the yard, the men making way for her. Pack Elders had no official rank, but they were an impartial arbiter of Pack laws and traditions and even Alphas deferred to them for certain things. Stopping before Alpha Richard's imposing form, the five foot nothing great-great grandmother looked up at the man she used to change the diapers of. \"A formal challenge to your leadership as Alpha has been filed. Call the pack together.\"\n\n\"Very well, Elder Diane.\" He sent out a mental communication, and soon all but one of the thirty nine remaining members of the Salmon Pack were gathered in the yard. They made their way as a group to the challenge circle. From the air or ground it looked like a circular oasis of grass in a formal garden. Werewolves knew better; none would walk into the circle willingly, there was too much blood and history in there. \n\nAlpha Richard took Lisa's hand in his as he walked, scanning the group for his son and not finding him. When they reached the edge, he looked around and saw no one standing opposite him. The Pack was just as confused, the young men were looking around in panic and frantically trying to mind link with Reggie, but he was not answering.\n\n\"Elder Diane, do I have a challenger?\"\n\n\"Yes.\" She looked around the group. \"Challenger, enter the circle.\" No one moved at first, and then Lisa dropped Richard's hand and walked to the center.\n\n\"LISA! What are you doing?\" Richard fell to his knees, the realization hitting him of what she was doing. \"Stop this foolishness, please!\"\n\nShe looked at him with disdain. \"My mate, that's EXACTLY what I have been saying to you all night. Stop this foolishness. You can't order the death of your son, widow your own flesh and blood and order the deaths of an entire town. MADNESS! They are not our enemy. Right now, you are.\"\n\n\"You are my mate, my life, my equal in all things. You can't challenge me, you are our Luna, our Alpha Female!\" He was starting to panic, she wasn't bluffing.\n\n\"Actually, Alpha,\" Diane said, \"The Pack Laws contain no restrictions on who can challenge, as long as they are supported by at least 25% of the adult members.\"\n\nLisa smiled. \"Who stands with me? We can't attack our friends, coworkers, and innocent humans. Everything changed with the solar storm, and our laws must as well. We have seen or heard of three wolves find their mates in the past few days, including my son, and all with humans. How many wolves will lose their mates if we wipe out this town?\" She looked around. \"Are you willing to risk the future of you children on a fear of what MIGHT happen? Or should we focus on making sure that the new wolves get through the change and strengthen our Pack?\"\n\nThe members started to move as they talked and linked amongst themselves. Slowly, six people lined up behind her.\n\n\"Six isn't enough,\" Richard said. \"Please, baby... withdraw the challenge. Go home.\"\n\n\"You know I can't, Richard. Now that the challenge has been made, now that I am in the circle, I can only fight you or be killed.\" She looked around. Realization hit more people, if two more didn't stand up for her, their Luna and the one they all looked up to as a surrogate Mother would be killed by them.\n\nFour more people quickly moved behind her.\n\n\"The requirements for a valid challenge to the Alpha position have been met,\" said Elder Diane. \"Alpha, you must step in the ring to fight to the death, or you can concede the challenge and the position and put yourself at her mercy.\"\n\nHis shoulders slumping, Richard looked into the eyes of his mate. She met his gaze, anger and determination blazing in her eyes. \"So be it.\" And he took a step.\n\n--\n\nIt was just getting dark as Silvia's car entered town. They had been able to put the blanket in their laps and take off the sunglasses, and that made it easy to see what was happening.\n\nWar.\n\nRachel scanned the rooftops, she counted over a dozen firing positions, most with scoped rifles. As they pulled into view of the clinic, she could see more on the roof, in the yard and behind vehicles in the parking lot. She frantically tried to link Marcus, but he wasn't responding. Her eyes went forward, she saw Josi standing outside the bank. \"Up there,\" she said, pointing at the bank parking lot. \n\nSoon she was embraced in a hug as a heavily armed Josi ran to the passenger door. She returned the embrace, then pushed her back so she could look at her. \"Where's Marcus?\"",
        "\"He's in the Clinic.\" She looked back at the building surrounded by townspeople. \"He's staying. He plans to walk out to try to stop Alpha Richard, if that doesn't work the humans will stop them.\"\n\nRachel's face paled. \"It will be a massacre! Wolves can't fight against rifles!\"\n\n\"Yes, it will be.\" \n\nShe looked at the young girl with concern. \"What about Reggie? Have you heard from him?\"\n\n\"Nothing, he won't answer. Why? Is he all right?\"\n\n\"I don't know, Josi. He was going to challenge the Alpha.\" She looked around. \"If the Pack comes, that means he lost. Marcus asked me to make sure you were safe, so get in.\" She opened the door and motioned for her.\n\n\"No.\" Josi's face was set. \"They need me here. You go on, I'll be all right.\"\n\n\"No, YOU go.\" Rachel grabbed the girl by the shoulders. \"It's MY mate who is in trouble here. If he stays, I stay with him. I need you to take these people up to North Fork and wait for me there.\" \n\nThe argument went back and forth until Silvia had heard enough. \"STOP IT!\" She looked at them. \"Both of you stay. We have time, it doesn't take that long to get there. We will go to the other end of town, if you aren't there to meet us by the time the moon is high, we'll leave. It's not like we're going to get lost, it's the next town up.\"\n\nThe two women nodded to each other, then to Silvia. \"I'll be back soon,\" said Rachel to Raven and the others.\n\nJosi took up an Arnold Schwarzenegger accent. \"I'LL BE BAACK.\" They smiled as the car pulled away. \"Come on, Marcus is going to be pissed and I need you to calm him down.\"\n\nShe was right, on both counts, but it was too late. They let him think the others were already gone for North Fork so he couldn't force them to leave. He didn't have any better luck with his desire to keep them out of the fight, as Josi took up a defensive position on the street corner and Rachel wouldn't let him go anywhere without her.\n\nIt didn't take long until the wolves arrived. Running in a single column, they came into town and spread out into a line, surrounding the clinic on two sides. Their sharp vision picked up the townspeople on the roofs and in the yard, and they were in no hurry to get killed.\n\n\"Marcus, what do you want us to do?\" Deputy Stevens had runners going between their command post and the various buildings and groups, and was receiving regular reports on what they saw.\n\n\"I'm going out there. Hold fire unless they attack you.\" He took off his rifle and vest, then unbuckled his gun belt and left it on the table. He looked over in shock as Rachel's rifle and pistol were set down too. \"Stay here, baby. Please.\"\n\n\"No.\" She put her hands on his cheeks. \"We get through this together, or we go to the moon together.\" Her eyes dared him to disagree, but every mated male knew the look she gave him. And no man was immune from it.\n\nDropping his shoulders, he took her hand in his and led her out the door. He looked around at the people on the rooftops, silently reminding them of his orders. They started walking towards the parking lot as two wolves trotted forward from the trees. One held a white shirt in its mouth and was waving it; he recognized the two wolves coming his way, and looked at Rachel with trepidation. \n\nIt wasn't Reggie.\n\nWhen they were across the road from them, they ducked behind some shrubs and shifted. Lisa came out with the shirt covering her to her knees, then Richard walked out next to her.\n\nMarcus looked Richard in the eye. \"Good evening, Alpha.\"\n\nRichard shrugged. \"I'm not the Alpha now, Marcus. Lisa is.\"\n\nMarcus' jaw dropped, while Rachel squealed with happiness. \"Mom! You found a way!\" She rushed forward to embrace her mother, and was almost there when the first shot rang across the open space.\n\n\"DIE DEMONS!\" More shots rang out from a building to Marcus' right.\n\nRachel dropped to the ground holding her leg, while Richard pulled Lisa to him and turned to run for cover. The shots followed him, one, two, three into his broad back as he ran. He pushed her behind a stalled vehicle as he fell to his knees.\n\nMarcus had reacted instantly to the shots, running across the road and scooping Rachel up in his arms. He jumped the sidewalk just in time to see the shot that took his father in law's head off, splattering them both with blood and gore. He kept going, rolling behind the car until they were next to his mother in law.\n\nA single shot rang out, this one was not at them, they could hear it hit and then the sound of a body hitting the sidewalk.\n\n\"CEASE FIRE! CEASE FIRE!\" The Deputy's voice yelled out from the clinic.\n\nMarcus could hear the howls and the sounds of the wolves running to their Alpha. He looked over at Lisa, she was in shock and her eyes were wide open and unfocused. \"MOM!\" She didn't respond.\n\n\"MOM! Tell them to retreat!\" She didn't move.\n\nHe looked back to see Deputy Stevens with the air horn raised above his head. \"NO! CEASE FIRE!\"\n\nThe wolves were closing in fast. \"MOM! Stop them NOW!\"\n\nShe shook her head and looked at him.\n\nThen her eyes rolled back and she fell to the side. \n\nHe grabbed her, and his hand went into the mess of an exit wound below her shoulder blade. He had seen this before, he knew there was no surviving a shot through the heart. \"MOM!\" He pulled her to him as the bond snapped in death. \n\nThe pain hit the entire Pack, some stumbled and many howled, their fury forward as they moved to avenge their Alphas.\n\nMarcus let her go, then crawled over to where Rachel was lying on the grass, clutching her thigh in pain. Looking past her, he saw the Pack was almost on them. Their wolves were in control, they were a killing machine of frightening efficiency as they thundered closer. He looked back behind him, the Deputy was running for the cover of their fighting positions, finger on the air horn as he prepared to unleash hell on the Pack as soon as he was out of the way.\n\n\"STOP!\" The command almost shook the ground, the power behind it was a thing to behold. The Pack responded instantly, it was as if their legs no longer worked. They fell to the ground instantly, exposing their necks in submission as the Alpha command blasted their ears and their minds at once. Marcus couldn't feel it because he was no longer Pack, and neither did Rachel, but every other wolf did. It was the kind of raw Alpha power they had not seen before, and it came from a most unlikely source.\n\nJosi stepped forward, dropping her rifle to the ground as she walked away from the clinic. She was almost regal in bearing, her nascent wolf had surged forward with the transfer of the Alpha position. Her eyes were glowing brightly as she looked at her Pack; meeting each of their eyes, she took in their submission to her as they accepted her as their leader. When it was done, she ordered them to retreat and sit in ranks farther back.\n\nAs the wolves moved away to defuse tensions, Josi turned her attention to the humans. \"WE ARE BETTER PEOPLE THAN THIS,\" she thundered. \"THERE WILL BE NO KILLING TONIGHT. WE WILL BURY THIS CONFLICT WITH THOSE WHO HAVE DIED OVER IT TONIGHT.\"\n\n\"What about them? How can we trust the wolves,\" one of the men shouted, his question quickly seconded by others.\n\n\"How can they trust you?\" Josi looked over the people who moments before had been ready to wipe out those she now considered her family. \"Haven't enough of our friends and neighbors died already? There is nothing to be gained by fighting each other. Life will give us enough challenges on its own. Now, put down your weapons and come down here.\" Turning to the Pack, she glared at them. \"Take Richard and Lisa home and prepare them to meet the Moon tonight.\"\n\n\"Luna? How many men should I leave to protect you?\"\n\nJosi smiled. \"I don't need protection, Ron.\" She looked at her Beta. \"Where is Reggie? I expected to see him.\"\n\n\"He's still sleeping it off, Luna. Lisa drugged him last night to prevent him from challenging his father, then SHE challenged him. Richard ceded the Alpha position to her rather than fight her, that is why we were coming her to help the humans, not kill them. She risked her life for them.\"\n\nA tear escape Josi's ear for the mother in law she barely met. \"Return home, Beta. I will be back before dawn.\" \n\n\"Yes Luna.\" He called forward a dozen men who shifted, one of the wolves at the back had run forward with shorts so they didn't freak out the humans too much. The men gently lifted the bodies of the former Alpha pair and carried them off.\n\nJosi turned to Marcus, who had placed his shirt over Rachel's leg wound and was tightening a belt around it. Deputy Stevens had already directed their medics out with a stretcher, and she was loaded up and on her way into the clinic within minutes. Marcus ran ahead to prep for surgery, although she would heal quickly from the wound, blood loss could still kill her if her artery was not repaired.\n\nWhen the area was clear, Josi turned and waved the humans over to the picnic area on the dried out lawn. Deputy Stevens sat down across from her as her wolf finally retreated, her eyes returning to normal. \"What the hell was all that, Josi?\"\n\n\"My mate is Reggie, and he is the new Alpha- the new leader- of our Pack. As I am his mate, the power and authority of that position passed to me as well. It's a shock to me, my wolf wasn't supposed to come out yet, I was just bitten last night and I haven't even had the fevers yet.\" She pulled down her shirt and showed off the mating bite. \"All of the sudden my mind was full of power, full of links to the Pack. I didn't know what was happening, but my wolf did.\"\n\nHe nodded slowly. \"It's a good thing too.\" He looked around, many of the people were still nervous, some were shaking as the adrenaline dump starter to wear off. \"My real question is why? Why did Richard hate us so much he was willing to kill us?\"\n\nJosi held up her hand, she closed her eyes and entered the Pack bond. When the question was asked, Elder Diane was the one to answer. \n\nWhen she had finished talking over the link, Josi opened her eyes again. \"Richard has never trusted humans, even as he had to live around and among them. When he was ten, he was out with his parents and some other Pack members and friends. They were learning to track and hunt, running through the woods, when a shot rang out. His mother dropped instantly, the bullet hit her in the front shoulder. The wolves scattered, Richard hid in a thicket, and he watched his Mom bleed into the ground as the rest of the Pack surrounded and killed the hunter who did it.\"\n\n\"Louie Baskett?\"\n\n\"Yes. Louie was a poacher, hunting of wolves was illegal but there was a black market for pelts.\"\n\nOne of the older townspeople spoke up. \"I remember that, they blamed it on a bear, but his family knew it was wolves. When Tristan Baskett learned that werewolves were real, he put it together. That's why he shot them tonight, he was getting revenge.\" He looked over to where a few men were picking up his body and carrying it to the pyre. \"Who stopped him?\"\n\n\"I did.\" Josi looked up, she didn't regret killing the third person in two days any more than the first two, and her wolf was in full agreement. \"Richard moved on, he never let on how much he blamed humans and not just the hunter. He was good at hiding his true feelings, even from his own family. It was only in the last day we learned of his hatred and mistrust, not just of humans but of werewolves who had been turned. He considered Rachel to have a mate who wasn't worthy of her in Marcus, and he helped guide him into being a doctor because he didn't think he was strong enough to be a true son to him.\" She paused and another tear escaped. \"When he found out his son was mated to me, a young and weak human in his eyes, he realized that his line would be forever polluted by the human influence from then on out.\"\n\n\"Are all Packs like this?\"\n\n\"No, Deputy, most don't differentiate between turned and born wolves. We believe our mate is chosen by the Moon Goddess herself, and how could she make a mistake?\" She looked at the men and then looked down. \"Richard was furious that Marcus broke his command and turned all those people, even though it would save them. I'm sure Marcus told you about the dangers of new turns?\"\n\n\"Yes,\" said the Deputy, \"He said that without a mate or Alpha the wolf becomes unstable and can go crazy.\"\n\n\"There is that, but Richard was also paranoid. Our Pack isn't huge, if all the people Marcus bites make it through the change, you will be more than twice the size of ours. Richard didn't like that threat coming up in what he considered his territory, so he moved to wipe it out before they became wolves.\" She looked around at their faces, she could see the gears turning. \"I've talked to Reggie about this already, we don't look at it the same way. We see you as friends, neighbors, coworkers- and for a bunch of you, new Pack members. We are determined to make this work, and to live side by side with our human friends.\"\n\nDeputy Stevens reached across and offered his hand, she shook it with a smile. \"I'd much rather do that than fight, Josi. We need to recognize what we have in each other, if we hadn't had wolves around we'd be burning another hundred people tonight. We owe Marcus for saving our family members and friends.\"\n\n\"And if we didn't have humans, we'd lose something we really need- new blood and ideas. The Goddess created us to live with the humans, not in place of them. As a former human, I'd rather we work together.\" \n\nAt the thought of 'former humans' her face fell. \"SHIT! Abigail and Silvia are still waiting for me on the north end of town.\" She stood and looked around. \"I have to get them and return home, we have a lot to do. I'd like to meet again tomorrow night, and come to agreement on how we can cooperate and live together from this night forward. Agreed?\"\n\n\"Agreed. We can meet here two hours after sunset.\" Deputy Stevens gave her a quick hug. \"You did a good thing here today, kid.\"\n\n\"Alpha.\" Her eyes flashed in irritation. \"I will send more people late tonight, to help those undergoing the turn with the fever. Reggie will come in my place tomorrow night, as I'll be undergoing the turn as well. Good luck, my friend.\"\n\nShe made her way through the crowd and into the clinic; Marcus was just coming out of the treatment room and was tossing the disposable gown away, then wiping the blood off his body with a towel. He felt her Alpha aura approaching before he smelled her. He turned and kneeled, exposing his neck to her. \"Alpha Josi, I'm sorry it came to this.\"\n\nShe put her hand on his chin, lifting it to her. \"I am too, I am sorry for your loss. Is Rachel all right?\"\n\n\"Yes,\" he smiled. \"She won't be walking for a day but it should heal without permanent damage.\"\n\n\"That's good. A Pack needs a good doctor for times such as these. Have you had enough of the rogue life, Marcus?\"\n\n\"I have, Alpha.\"\n\nHer wolf pushed forward again, and her canines started to elongate. She used one to slice her palm open as Marcus did the same. They clasped their hands together as Marcus pledged his loyalty to their Pack, then when Josi accepted him they felt a zing through their hands and the bond snapped into place. Marcus sat down, his wolf pleased to be back. \"And Rachel?\"\n\n\"When she's ready. I need to get the rest of the humans and return home. I need you, Beta, to stay here and look over our new Pack members. I'll send Reggie up, he can supervise the turns after we send our parents away.\"\n\nMarcus sighed. \"Rachel and I should be there.\"\n\n\"I know, Marcus, but this can't be postponed, it's tradition to burn them when the moon is high. You concentrate on making her relax and heal.\"\n\nMarcus laughed. \"Yeah, that won't work. You know how they say doctors are the worst patients? Well, nurses with doctor mates aren't much better.\"\n\nJosi gave him a quick hug. \"I'm glad you're back, Marcus.\" She turned and walked out the front doors of the clinic, turning north and walking quickly through the small town. She smiled as she felt Reggie awaken, his love pushing through the bond as the Alpha power rested with him. \"Good morning, my love. Sleep well?\" \n\n\"Josi? Where are you? What's going on?\" \n\n\"So many questions.\" She filled him in on what had happened since his Mom hit him with the sedative.\n\n\"Holy shit, Josi.\"\n\n\"I know, my love. I don't know if we'll ever know all the answers, but there is one that has been bothering me all night.\"\n\n\"What's that, love?\"\n\n\"If I scratch you just right, can I get your back leg to whap up and down on the floor really fast?\""
    ],
    "authorname": "partwolf",
    "tags": [
        "werewolf",
        "alpha",
        "luna",
        "mate",
        "war",
        "pack",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/dominant-species-ch-34-36"
}