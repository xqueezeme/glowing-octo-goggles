{
    "title": "Kathryn's Question Ch. 02",
    "pages": [
        "Kathryn finally opened her eyes and looked up at me. \"That was WAY better than I was expecting. I see now what you meant when you said that someone else's hand makes it feel completely different.\"\n\n\"I did okay?\"\n\nShe beamed. \"I'd say that was more than okay. The doctor is VERY impressed!\"\n\nIt was all rather silly small talk, but I think we were both more than a little embarrassed by what had happened, so we stayed away from the more weighty topics. I really wasn't sure what she'd say if I expressed my feelings to her.\n\nPicking up my watch from the floor, I said, \"It's nearly 10:30. I should probably be getting home.\"\n\nKathryn sat up. \"Will you come back tomorrow?\"\n\n\"What time?\"\n\n\"How about 7:00? That will give us some time before my parents get home. I asked them to call when they're setting out, so we'll know when to expect them.\" She flashed a distinctly evil grin I was to become very familiar with. \"The doctor has more plans for her subject.\"\n\nI lay in my bed for a long time that night, trying to come to grips with the day's events.\n\nNext morning, in order not to make my mom suspicious, I made like I was going fishing, something I often did in good weather. I headed out the front door with rod and tackle box, walked around the block and got to Kathryn's house a little past 6:30. Her shade was still down, so a picked up a few pebbles and threw them at her window, something we'd always done. I didn't want to wait for the appointed hour.\n\nA moment or two later, the shade went up. Kathryn must have been kneeling, her elbows resting on the window sill. Her bare shoulders made me aware she was probably naked. (Another surprise about my closest friend. How long had she been doing this?) Her long hair was sleep-tousled but her eyes were sparkling. It suddenly dawned on me that she'd become a woman somewhere along the line and stupid me had never noticed.\n\n\"What are you doing out there?\"\n\nI looked at the rod and tackle box I was holding. \"This? I thought my mom would question why I was coming here so early.\"\n\nHer face had an inscrutable expression. \"What are you planning to catch?\"\n\nI grinned up at her. \"A mermaid?\"\n\n\"Why don't you come in then, and we'll see how successful you are...\"\n\nI'd known for years that her family kept a spare key under the flowerpot by the back door, so with thumping heart, I let myself in.\n\nMy friend and I usually used the basement when we got together, and I'd seldom been in her bedroom. Once we got to a certain age, her parents, while not actively discouraging it, made it clear they'd rather we weren't up there. Until yesterday they'd had no reason to worry.\n\nI found it had been repainted in cool blues with some pink accents, all distinctly feminine. Her bedspread was pink and blue, too, but I never noticed it at the time, because the sight that met my eyes when I got there, stopped me cold.\n\nKathryn had taken the time I'd been on my way up to brush her hair and make the bed. She was now lying sprawled out, naked as the day she was born, her hair like a halo around her head.\n\n\"Do you like what you see?\" she asked, her voice low and full of lust.\n\nI just stood in her doorway, drinking it all in. God, she was beautiful.\n\nShe rolled to the edge and sat up, feet on the floor. \"Could I take your clothes off?\"\n\n\"I'll do whatever the doctor orders,\" I answered thickly.\n\nKathryn padded over to me. Pulling my T-shirt out of my pants, she had it over my head in a moment. She kissed me right in the center of the chest. Her hair, just below my nose, smelled like wildflowers.\n\nMy sneakers were off and my belt loosened in short order. Then she stopped with her hands on the snap on my jeans. \"You're already getting hard. The doctor approves.\"\n\nI was indeed. It was such an erotic thrill to have this naked goddess kneeling in front of me as she pulled down the zipper and slid my jeans down my hips. Next came my briefs and my erection sprang free as joyously as it had the evening before. After slipping the pants over my feet and taking off my socks, she remained back on her heels, just staring at my cock.\n\n\"It's so beautiful,\" she murmured.\n\nI stood there silently, my erection throbbing with each beat of my heart.\n\nKathryn seemed to be in a trance, as she examined my manhood closely, before reaching out her hand. \"Mmm... So hard and yet so soft. I have to do this...\" With that she leaned forward and kissed the tip.\n\nEven though I was hoping she might, I couldn't believe she'd actually done it. In our local society, good girls didn't do things like that. There was one, rather plain and overweight, from across town who'd become infamous because she was willing to give blow jobs. It made her very popular, but gained her absolutely no respect. Behind her back, people ridiculed her. She could have a date any night she wanted, but no one would ever consider going steady with her.\n\nKathryn was looking up at me. \"Robby, would you like me to take you in my mouth?\"\n\n\"I...um...\"\n\n\"Would you think less of me if I did this?\"\n\nHolding my cock at its base, she leaned forward and about three inches disappeared inside her pursed lips. When I felt her tongue move underneath, I jumped involuntarily. She immediately slid back.\n\n\"Did I hurt you?\"\n\n\"Um, no. Just surprised me, that's all. Look, Kathryn---\"\n\nShe looked up again. \"I want you to call me Kathy when we're doing stuff like this.\"\n\n\"Why?\"\n\n\"Because Kathy's my name when I'm being naughty.\"\n\nThis may have been the most surprising thing she'd said yet. I had no idea my friend even thought about sex, and in the past day, not only had I found out VERY differently, but she knew far more than I did.\n\n\"You actually want to give me a blow job?\"\n\n\"Why do you say it that way? It's not such a bad thing, is it?\"\n\nI was flabbergasted. \"It's just that girls like you---\"\n\n\"Girls like me don't do things like this?\" She took me in her mouth again, and this time the fluttering of her tongue on the sensitive part just under the head sent me through the roof. The feeling was indescribable.\n\nLooking down, I could only see the top of her head, but as she worked with her hand as well as her mouth, I longed to see what this looked like. Reaching down, I pushed her hair back over her shoulders and held it.\n\n\"Thanks,\" she said, removing me from her mouth. \"It was getting in my way.\"\n\nIt was hard to believe that this girl I THOUGHT I knew was actually giving me a blow job. And I hadn't even had to ask. \n\nWithout conscious thought, my hips began rocking as I felt an orgasm building. From her enthusiastic sucking and licking, Kathryn seemed to be enjoying what she was doing.\n\nRight at the end, it came to me that she needed to be warned. I didn't think she'd want to swallow what was coming.\n\n\"Kathryn, ah, Kathy, I'm about to come. You better stop or---\"\n\nThat's as far as I got. She grabbed my hips so I couldn't pull away and fluttered her tongue underneath the head of my cock. I couldn't help it. With a loud groan I began cumming harder than I ever had before.\n\nKathryn kept right with me, my cock buried in her mouth as it pulsed over and over and over. At one point she gagged a bit but didn't let go. I almost passed out.\n\nPulling away, she wiped her mouth with the back of her hand. \"Holy cow! I think there was more of it than there was last night.\"\n\nLightheaded and unsteady, I stumbled over to her bed and flopped back. \"My God...\" was all I could say.\n\nShe came over and lay down next to me, taking my hand. \"The doctor observes that her subject had a really strong reaction to that.\"\n\n\"I may never recover.\"\n\n\"So I did a good job?\"\n\n\"I can't believe you did that at all!\"\n\nKathryn seemed suddenly unsure. \"You don't really think any less of me, do you?\"\n\nI turned to face her, thinking for a minute. \"No. Not really.\"\n\n\"As long as this remains our secret, I have no problem with it. Actually, it was kind of fun.\"\n\n\"Does semen taste, you know, yucky?\"\n\nShe looked up at the ceiling, thinking. \"Well, it's salty and thicker than I thought it would be, but it didn't taste bad, sort of tangy.\"\n\n\"Why did you do it?\"\n\nNow she turned and looked at me shyly. \"With all the reading I've been doing, I wanted to try, partly because it's very, very naughty, and partly because I was just curious.\"\n\n\"So you liked it?\"\n\n\"Yeah. I liked it a lot, especially when you started thrusting. That really got me excited.\"\n\n\"Do you always sleep with no clothes on?\"\n\nShe giggled. \"No. But after last night and with no one home, I wanted to do it. Actually after you left, I had to play with myself again.\"\n\nI pulled her to me and kissed her hard. This time there was no hesitation or awkwardness. Our tongues got in on the action, too. I thought to myself how cool it was to be French-kissing someone. I didn\u00d5t even think of the semen she\u00d5d just swallowed.\n\nIt was easy to tell how turned on Kathy was. She practically dragged my hand down to her breast while her other hand felt around for my stiffening cock.\n\n\"Ohh...that feels so good,\" she sighed. \"Please suck on them.\"\n\nI didn't need any encouraging and for the next several minutes she gave me a running commentary on what felt good and what didn't. I noticed that as her nipples became more engorged, the harder she wanted me to suck.\n\nGetting overly enthusiastic, I bit one. Not hard, but she definitely felt my teeth. She jumped a mile.\n\n\"I'm so sorry!\" I said.\n\n\"You didn't hurt me. I was just startled, that's all.\" Then a grin suffused her face. \"Actually, I think I had a small orgasm.\" She pushed my head down. \"The doctor wants you to try that again. Work me up and then try a small nip.\"\n\nWe spent at least a half hour working that out. While her breasts weren't huge like the bunnies I'd seen occasionally in friends' copies of Playboy, they were wonderfully soft. Her nipples were a revelation. I know now that they were longer than average and also thicker. I found it fascinating the way the skin around the nipple puckered.\n\nI'd worked Kathy into a frenzy by this point. For the past several minutes her body had been moving, sort of like the thrusting I'd done into her mouth earlier.\n\n\"Robby, I really, REALLY have to cum!\"\n\n\"Haven't you been doing that?\"\n\n\"Those are just little tremors. I want an earthquake! I NEED an earthquake!\"\n\nI started to move my hand down, but she grabbed it.\n\n\"No. Would you like to, um, do what I did to you?\"\n\n\"You mean use my mouth?\"\n\n\"Yesss!\" she hissed. \"That would be so naughty!\"\n\nI hesitated, not having any idea what that would be like. I thought of the fact that women pee from down there, forgetting that she had faced the same thing when she'd done me.\n\n\"Please, Robby! I really want you to.\"\n\nIt would give me a chance to look at a real woman close up, something any kid would be curious about, but I had no idea what to do.\n\nIt was like she read my mind. \"I'll tell you what feels nice. Okay?\"\n\nAs I moved down the bed, Kath pulled her knees up and apart and reached down with both hands to open herself up. I got down between and just stared.\n\n\"What?\" she asked, putting her head up.\n\n\"It's, well, a lot different than what I was expecting.\"\n\nSince she didn't have a lot of pubic hair and had very thick outer and inner lips, her sex was quite impressive. Labia, I remembered they were called. Everything looked swollen and hot and coated with her liquid. At the bottom was that holy of holies: her opening and the source of a trickle of milky white fluid. The scent rising from her genitals was intoxicating.\n\n\"What do I do?\"\n\nShe giggled. \"The doctor isn't really sure, but I'd suggest you use your tongue.\"\n\n\"Where?\"\n\n\"I guess mostly around the top where my clitoris is.\"\n\nShe indicated by moving her hands farther apart. This exposed a small red button about the size of the tip of my little finger at the top of her inner lips. This must have been the hard thing I'd felt the evening before.\n\nI lay down between Kathy's legs and lowered my head.\n\n\"Try licking from the bottom to the top,\" she said. \"Oh yes...That's very nice.\"\n\nHer lubrication tasted as good as it smelled and I quickly became an aficionado of \"eau de femme\". While Kath seemed to like me licking around her opening, she went positively crazy when my tongue hit her clitoris. I quickly worked out that if I made my tongue very soft and wide and swirled it around that hard little nub, her hips would begin churning almost immediately. But then there was that liquid at the bottom...\n\n\"Robby, don't tease me like this!\" she said when I'd moved my tongue away for about the fifth time. \"Stay at the top. Please!\"\n\nAs I moved my tongue up this time, Kathy pushed her hips against my mouth and grabbed my head. She was so swollen by this point, her lips stayed open.\n\n\"Oh, yes! That's it. Try taking my clit in your mouth...gently...mmmm..oh yes, that sucking is so nice. Oh my gosh, that's good. Keep doing that! I'm going to...going to...AAAAAHHHHHHHhhhhhhhhhhhh...\"\n\nI tried to stay with her flailing body but couldn't. Her spasms lasted for at least ten seconds after which time she just collapsed back and lay there. I rested my cheek on her inner thigh and watched her pussy continue to pulse gently. There was a huge wet spot underneath her on the sheets.\n\n\"I may never be able to focus my eyes again,\" she finally sighed. \"That was incredible.\"\n\n\"I did okay?\"\n\nShe gently touched my cheek. \"Silly boy...\"\n\nWe lay next to each other as I stroked her hair and kissed her face. \"I think I've fallen in love with you, Katherine.\"\n\nShe smiled. \"I think I've always been in love with you. I just didn't know it until recently.\"\n\n\"How long?\"\n\n\"Several weeks. You were just to dumb to notice. Or maybe I wasn't flashing the right signs.\" She reached up and touched my face. \"I'm not very experienced at this love thing.\"\n\nI kissed her nose. \"I think the doctor is doing very, very well. And I'm happy to be her test subject.\"\n\nThe phone rang and Kathryn leaped from the bed and disappeared from the room. Her rear end moved deliciously.\n\nI lay back on the bed, hands behind my head with the biggest shit-eating grin on my face. This had to be the best weekend ever.\n\nShe appeared back in the doorway and stopped. \"What are you thinking?\"\n\n\"That I have to be about the luckiest guy on the planet. Who was on the phone?\"\n\n\"My folks. They're just setting out.\" She came over and sat next to me, her hand gently stroking my cock which began rapidly expanding. \"That gives us at least five hours more...\"\n\nI grinned. \"To do what?\"\n\n\"I think more of the same is in order. The doctor wants to verify the results of her last experiments.\n\n\"Come down here and let me kiss you first.\"\n\nWe each came twice more before time ran out. Kath got busy laundering her sheets and I reluctantly returned home without any fish for the first time ever. I think my mom might have begun suspecting something because I was not in a bad mood because of my lack of fishing success.\n\n-=-=-=-=-=-=-=-=-=-=-=-\n\nKathryn and I decided that for public consumption we would play our growing relationship very cooly. There was certainly no sense in making ourselves the targets of more ridicule at school. We also felt is was better if our parents didn't know, either, because then we'd be constantly subjected to, \"Where are you going and what are you doing\u00d3? And we certainly didn't want ANYONE to know what we were getting up to while we were together.\n\nFor the moment, with the end of our senior year coming up fast, it made sense that we'd spend a lot of time together studying, and although we were confined to her basement where anyone could come down at any moment, it was better than my living room which was the other place we generally studied.\n\nFortunately, both Kathryn's mom and dad worked. If we raced home from school that gave us a good three hours of possible \"sex time\" as Kath called it. \n\nThe problem was her sister Melanie. We never knew when she'd be around. One time, Kathy was being very naughty and had me pinned to the floor, riding my face with her juicy pussy (we both loved that term), when Mel came crashing in the back door, shouting for her sister.\n\nFortunately, I was still dressed, but Kathy had taken off her dress upstairs in order to surprise me. As Melanie trooped down the stairs, I sat on the sofa, putting a large physics text over my erection. Kath disappeared into the laundry room.\n\n\"Where's my sister?\" Melanie asked.\n\n\"What?\" I said, looking up with what I hoped was a convincingly startled expression. \"She, um...I guess she's upstairs. I was reading over some stuff and...\"\n\n\"Her dress was up in the kitchen.\"\n\n\"I'm in the laundry room folding up clothes,\" Kathryn called out.\n\nJust then she came out and my eyes just about popped out of my head. With only Mel's clothes in there, she'd slipped on a pair of her jeans. Being at least 4\" taller than her sister, on Kathryn they looked as if they'd been painted on. On top was a T-shirt so tight it was clear she wasn't wearing her bra. Her sexy belly button peaked out in the gap between the T-shirt and jeans.\n\nThe effect was stunning.\n\n\"So what do you think, Mr. Wiseacre?\" Kath said somewhat harshly. \"Still think I shouldn't wear more casual clothes?\" Then she pretended to notice her sister. \"Oh hi, Mel. Hope you're not mad I have your clothes on. Robert said he didn't think I'd look good in jeans.\"\n\nI tried to read her sister's face. Was she going to swallow this?\n\n\"Gee, Kay, no. In fact you look pretty cute. I always said you should dress up more.\"\n\nI could detect something in her voice, but what? Would she say something to her folks? Mel could sometimes be a bit odd.\n\n\"I'll be upstairs. Jason said he'd call before dinner.\" She turned for the stairs. \"Don't get into any trouble down here, you two. And Kay, I'll take your dress up to your room for you.\"\n\nWith that she left.\n\n\"She suspects something,\" I said.\n\nKathryn shrugged. \"Maybe, maybe not. I'll have to talk to her. Don't worry, Robby; the doctor will take care of it.\" Standing in front of me, she put her hands on her hips, her head cocked to the side. \"So what DO you think?\"\n\n\"I\u00d5m really worried. What if she tells your folks?\"\n\n\"No, silly! I meant what do think about how I\u00d5m dressed!\"\n\nI looked her over carefully, making sure she could tell I was devouring her with my eyes. For all her outward confidence, it was easy to see that Kathy could be very unsure about her body.\n\nToday, kids would say she looked \"super hot\" or maybe \"bitchin\". To me, she looked like a goddess. Anybody who knew her wouldn't believe it. As she gazed down at my hardening erection, her nipples grew noticeably and I detected a bit of a wet spot in her crotch.\n\n\"You don't have any underwear on, do you?\"\n\nHer voice was thick. \"There wasn't any time. Besides, I don't think I would have been able to fit anything under these jeans,\" she answered, undoing the snap. \"So how do I look?\"\n\n\"Like any guy's wet dream. Those jeans look amazing on you.\"\n\nKathryn's smile was huge. \"You really mean it?\"\n\nI pointed down to my crotch where my own jeans were being stretched uncomfortably.\n\nThen for the first time I saw that delightful little shimmy women do when they take off tight pants. It's quite unconscious but truly heat-producing. Kathryn was an expert from the get-go, although she only found out later what a turn-on it was for me.\n\nThe jeans dropped to the floor and she stepped out of them. Her eyes as she looked at me were hooded with lust. There was only one thing she wanted.\n\n\"Make me orgasm. I want your mouth on me.\"\n\nWith that, she flopped down next to me on the old sofa, turning sideways and laying her head on the padded arm. One leg she threw over the back and the other rested on the floor. Opening herself with both hands I could see her swollen clitoris and the flow coming from her vagina. Everything was red.",
        "\"Suck me off!\"\n\nWho was I to argue with a woman in obvious need?\n\nKathryn came quick and hard. Normally, I would have stopped, but that time I kept on. She came repeatedly, and had to turn her head into the sofa pillow so her moans wouldn't be heard by Melanie upstairs.\n\nHer hips churned and humped at my face and I happily licked up all the nectar I could. By the time she pushed my face away, I'd counted three orgasms. She lay there trembling and bathed in sweat.\n\nWith her eyes shut and legs splayed open, I slipped my jeans down and lay on top of her, kissing her mouth and throat. Kathryn was practically purring. Her body, even though the T-shirt still covered her top, felt wonderful.\n\n\"What got into you just now?\" I asked.\n\n\"Hmmm. I don't really know. I think it was almost getting caught by Mel. If she had come in quieter, she could have gotten partway down the stairs and we never would have noticed her. She would have seen me humping your face. That got me really excited.\n\n\"Then I had those jeans on. In my state, they felt wonderful on my crotch. And the way you looked at me. You were like a lion sizing me up for dinner.\"\n\n\"I didn't mean to be.\"\n\n\"It made me all tingly.\"\n\nShe shifted a bit under me to get more comfortable and the head of my cock slipped down between her lips. We both felt it immediately. All it would take is one little push... God, she looked so desireable.\n\nKathryn pulled back. \"Robby, we can't. You know that.\"\n\n\"Come on,\" I almost whined. \"Just a little.\"\n\n\"No. We've been through this before. I'm not, well, ready to do it. Besides, it's dangerous. What would we do if I got pregnant?\"\n\n\"You're right, I guess.\"\n\nI pulled away and sat there, a bit confused. Kathy could be so hot, so demanding, but yet this was one place where she stood remarkably firm.\n\nShe sat up and cuddled against me. \"I'm not saying we'll never do it, Robby. It's just that now is not the right time. When we do \"it\", I want it to be special. I want something we'll remember always. Not just a quick in and out, and then worrying for weeks that I might be pregnant. No thanks!\"\n\n\"We could use a rubber.\"\n\nShe touched my face tenderly. \"No. When you put it in me, it's you I want to feel, skin to skin. Don't you like all the other things we've been doing? Don't you like it when I do this?\" She reached out a stroked my raging hard-on. \"Or when I do this?\"\n\nShe scooted off the sofa and knelt between my legs. Lowering her head slowly, she took as much of me into her mouth as she could. With both hands, she stroked my cock and played with my balls, and in about ten seconds, I forgot all about my disappointment.\n\n-=-=-=-=-=-=-=-=-=-\n\nThe next five days our relationship took a strange turn -- strange for me, that is: it was the first time I'd experienced a woman's period.\n\nI hadn't seen Kathryn that morning because she had to be at school early for a band rehearsal. We ususually sat together at lunch and chatted, but that day she was fairly quiet. I thought she was mad or let down with me for badgering her the previous evening. I didn't know what to say.\n\nSince it was Friday, she had to work at the library and she'd probably close up alone. This was my chance to get a look at some of her \"sex books\", something I was quite eager to do. We planned for me to meet her at 9:00 to walk her home.\n\nShe came out promptly with her book bag looking pretty heavy.\n\n\"Did you get some?\"\n\n\"I took the ones I thought you'd be most interested in, but they have to be back first thing in the morning. They'd be missed for sure. I hope you're a speed reader,\" she grinned.\n\nMy parents were out, as were my two brothers, so we sat in my living room. The books were everything Kathryn had described. I couldn't believe people did some of the things they said were done. One woman and a dozen men? Sure, I'd heard stuff whispered in the locker room about things like that but I thought it was just fairy tales.\n\nOther things, though, really fired my imagination -- and my libido. Kathryn, instead of enjoying the books with me (which I'd expected), sat off to the side watching me.\n\n\"Are you mad at me for last night?\" I finally asked.\n\nShe shook her head.\n\n\"What's wrong then?\"\n\n\"Melanie knows what we were doing downstairs. And she did watch -- that last time.\"\n\n\"Is she going to tell on us?\" I asked, very alarmed.\n\n\"No. But we had a long talk.\"\n\n\"Good or bad?\"\n\n\"Good, I guess. She made me tell her everything.\"\n\n\"Everything?\" Panic hit me right in the gut \"She's not going to tell our folks, is she?\"\n\n\"No, she won't.\"\n\nThis was a lot for me to absorb. One slip and we'd both be in a ton of trouble. I was not happy.\n\n\"Is that why you're so quiet today?\"\n\n\"Partly... I also got my period this morning.\"\n\nI knew what that meant on a technical level, but I wasn't prepared for Kathryn to be so down.\n\n\"Are you sure you're okay?\"\n\nShe rolled her eyes. \"I HAVE had a period or two before this, you know. It's just that they're a pain, literally and figuratively. It also means we can't do as much as we have been the past few days.\"\n\nBy the end of the evening, I was pretty keyed up by all I had read. I thought the idea of nymphomania was pretty cool. Kathy seemed almost like that sometimes. I also never realized how many positions you could make love in. Kath at least showed some interest in this.\n\nI said, \"I think the one where the woman rides the man sounds really interesting. It would be sort of like when you sit on my face.\"\n\nShe playfully swatted my arm. \"You just think that because you're inherently lazy.\"\n\nWe began kissing. I was really confused by Kath's rapid changes in mood and put it down to \"hormones\". I'd find out much later what it actually was.\n\nKathy could definitely make out. She had a very long tongue and used it well, and I loved the way she'd trap my tongue and suck on it. My cock got hard pretty quickly, and she rubbed it for awhile but didn't take it out.\n\n\"My folks won't be home for quite some time and we'll hear them long before they come in the house,\" I said. \"My brothers are up at a friend's cabin. They won't be back before Sunday.\"\n\n\"All this reading has given me some ideas. Could we do some experimenting?\"\n\n\"So the doctor is in?\" I joked.\n\nShe got off the sofa and stood in front of me, mock severity on her face. \"Take your pants off, young man!\"\n\nKnowing that this could be good, I quickly did as I was told.\n\n\"I want you to tell me exactly how everything I do feels, okay?\"\n\n\"Sure.\"\n\nShe got some hand cream from her purse and squeezed out a generous amount.\n\nFor the next half hour, she tugged, stroked and squeezed on all parts of my penis, saying things like, \"How does this compare to this? And when I do this? Or this?\"\n\nIt all sounds very clinical and detached, but it was anything but. Her skillful hands had me twitching every which way, but she wouldn't let me cum.\n\nOne side benefit is that I also was also learning what I liked and didn't like. Firm pressure and tugging felt great. Sometimes she'd drag one finger very slowly up the underside of my penis and by the time she got to that spot under the head, I was almost ready to cum.\n\nThen she went out to the kitchen for a wet rag and towel and proceeded to do the same thing, but using just her mouth, then her mouth and her hands. All through this she tortured me by stopping just below the crest.\n\n\"Now I want to try this,\" she said as she pushed me down on the sofa.\n\nKneeling between my legs she slid about 4\" of my cock into her mouth. Then she withdrew and did the same thing again, taking a deep breath between strokes. As I watched, more and more of my cock slipped inside and I could feel myself sliding into what I assumed was her throat.\n\nAfter about five minutes of this slow and steady work, she had my entire length in her mouth and throat. Looking up at me, I could see the triumph in her eyes. With that, she withdrew and plunged forward again. Underneath, her tongue slithered and flicked at my erection. The sensation was beyond anything I'd experienced yet.\n\nShe kept up a slow and rhythmic movement, just enough to keep me in a state of utmost excitement, but never enough to orgasm.\n\nFinally she leaned back on her heels. Her face was red and glowing from her efforts as she wiped her mouth on the back of her hand. \"How was that, Tiger?\"\n\nI didn't know what to say. I don't think I ever had to come that badly before. \"That's it? You're not going to finish me off?\"\n\n\"I just wanted to see if I could do it, she said, then grinned. \"Of course I'm not going to leave you hanging! I just needed a bit of a breather. Now lie back and shut your eyes. I think I'm beginning to understand what you like.\"\n\nWith that she slid my entire cock into her mouth and took me to heaven.\n\n-=-=-=-=-=-=-=-=-\n\nThe next four days were pretty well like that. We'd been intimate for over a week now. While we experimented with how she liked her breasts played with, and made out a lot, I was getting desperate for a taste of Kathy's honey, despite all the wonderful things we were both learning. I so much enjoyed making her orgasm, the more violently, the better.\n\nMy period will be over soon,\" she said, and patted me on the head playfully. \"Believe me, I want to feel your tongue just as much as you want to taste me!\"\n\nThe ongoing problem was trying to find a place and time when there weren't people around who might catch us. Melanie seemed to be hanging around the house a lot more. I'd thought she'd be eager to see all her old friends, maybe get a summer job, but no. She was usually home and it was getting irritating.\n\nWe began to be more creative. I could occasionally borrow my dad's car and we did that on the fifth night, finding a quiet spot in a small park at the far end of town. Not many of the kids used it for parking because the cops checked the place often (probably for that reason), but we left our car on a side street about a quarter of a mile away and walked in. At the far end of the park, far away from the road that ran through it and most of the picnic tables, we found a very secluded spot, sheltered by trees. It had a lone picnic table in the center.\n\nWe'd been walking with our arms around each other, occasionally stopping for kisses, and Kathy seemed very eager. Several times she'd bit my lips and neck and one time almost sucked my tongue out of my mouth.\n\nLittle time was wasted when we found our \"spot\". We were all over each other. Kath had her dress over her head in less than a minute, and to my delight, the faint moonlight showed there was nothing under it. To our right a small stream babbled and the frogs set up a noisy thrumming.\n\n\"It feels so good to be naked outdoors!\" she said, spinning around on the grass, arms outstretched. \"I wonder why we have to wear clothes all the time? Come on slow poke, get those things off. I want to see you naked in the moonlight!\"\n\nTrying to do it too quickly, I made a hopeless mess of pulling my jeans over my sneakers, but was treated to Kath making like a wood nymph, dancing over the small grassy area. That sight was engraved on my memory and is with me still, as fresh today as when it happened.\n\nOnce free of my clothes, the cool breeze did feel very nice and as Kath came close I grabbed her in, she molded her body against me and I could feel her long nipples hard against my chest. As we kissed, she wrapped one leg around mine and was humping against me. The space around us was electrified.\n\n\"Lie down on the picnic table, Robby.\"\n\nI did as ordered and Kathy surprised me when she climbed up also, but facing the other way. Having read her \"library books\", I had a good idea what was coming, but the reality of doing a 69 with such a hot woman went far beyond what I'd imagined -- and believe me, I have a good imagination!\n\nKath's pussy was actually dripping as she put one leg over my head. I loved the way being on her knees opened everything up. Her clit was exposed, throbbing and very hard, as was my cock, as we both attacked with our tongues.\n\nI don't know if I brought her off, or she brought herself off using my tongue, mouth and nose, but within only about three minutes, she had a violent orgasm. The way she collapsed down on me, I couldn't breathe at first, but as I struggled to get her to move, I was thinking, \"What a way to die!\"\n\nAs soon as she recovered, we started all over again. This time I took it slower, but she still came before I could. Actually, I think what I was doing felt so good, she really wasn't concentrating on me. That was all right. I'd had her undivided attention for the past four days.\n\nAfter her second massive orgasm, I crawled out from under her, helping her to stretch out on her back on the table.\n\n\"You look so beautiful like that,\" I said as I kissed her forehead.\n\nShe smiled dreamily, lost in a sexual fog.\n\nEventually, Kathy sat up and looked around. \"This is such a perfect night, isn't it? You couldn't ask for a better one.\" Swiveling carefully, she sat on the table with her feet on one of the benches. \"Come and sit next to me.\"\n\nIt seemed pretty surreal sitting there in the park with no clothes on, chatting about school, the upcoming summer holiday, everyday stuff really. Anyone could have walked in on us, but to be quite honest, I got the impression that Kath couldn't have cared less. She seemed so comfortable with herself. I think that was the biggest difference between us. I hadn't yet come to grips with all that had been happening, actually being naked in front of a woman. I LOVED what had transpired, but was I comfortable? No. I guess it was residual guilt. Something like that.\n\nKathy was ready to go again and signaled it by kissing me deeply, her tongue plunging into my mouth. Our hands got busy too, and she soon had me ramrod stiff, and I played with her alabaster-hard nipples.\n\n\"Pull them! Twist them!\" she moaned into my mouth. \"Oh God, that feels so good!\"\n\nShe stopped stroking me and got up. \"I want that thing in my mouth -- all the way.\" Kathy's eyes smoldered with sexual heat as she stood in front of me, staring down at my cock. \"It really is gorgeous. Such a big head and long, hard shaft, and yet so soft to the touch.\" She reached out lovingly with her hand. \"I love cocks.\"\n\nI lay back a bit, propping myself on my elbows and watched as she knelt between my legs. Wrapping both of her warm hands around the base of my cock and balls, she began by licking from top to bottom, getting it nice and juicy. I anticipated what was coming, my heart beating fast.\n\nWith a look of utmost concentration, she lowered her head, leaning forward to make her throat straight, and engulfed my straining erection. Moving slowly she went all the way to the bottom in one move, something she'd never accomplished before.\n\nI could feel everything: her lips, tongue and throat as they all closed on my cock. It was hard not to tip my head back and close my eyes, enjoying it all, but I wanted to watch this amazing female as she worked her magic.\n\nYou have to remember that this was long before \"Deep Throat\" came out. There was no mention of this sort of thing in any of the books I'd seen and I'd never heard of any girl in town who could or would do something like this. To watch my cock slowly disappear in and out of Kathy's mouth and to feel her tongue slithering along the underside remains for me the pinnacle of eroticism.\n\nKathy's concentration was complete as she observed my reaction to everything she did. Each time she'd come out there would be a pause for a big breath, then she'd lean forward and work her mouth magic. Her lips would grip me fairly hard and I could swear she'd close her throat around my cock. Over the past few days, she'd worked out just how fast to do it so that she could hold me off for quite a long time. I swear to God the hair on the back of my neck was standing up.\n\nFinally, she decided to put me out of my misery and sped up slightly while massaging my balls with one hand. Just as I was about to erupt, she touched a finger to my rectum.\n\nI don't know if it was the night, being naked outdoors, the long build-up to my release or the shock of her touching that most taboo of areas, but I bellowed like a bull as a torrent of semen was unleashed from my cock. Kath had timed it perfectly, taking a huge breath before driving me in to the root while my cock spasmed at least ten times directly down her throat.\n\nWhen she finally let me slide out, there were tears in her eyes from the effort and a huge smile on her face.\n\n\"I thought I was going to lose it there,\" she said. \"Your pubic hair was really tickling my nose!\"\n\nI was completely spent for the moment, but I managed to croak out, \"I loved that, and I adore you.\"\n\nShe leaned forward and held me as I tried to get my eyes to focus.\n\nI thought we were finished for the night when I got up, but Kathy immediately jumped up on the picnic table, this time from the side, laying down flat but with her feet up on the edge. Her legs opened obscenely. \"I want you to do me again.\"\n\n\"Really? Okay, if you think you can take it.\"\n\nAs I drew my tongue up the length of her slit as slowly as she'd taken me in a few minutes earlier, Kath was already squirming.\n\n\"That is SO good, Robby. You do me so well. Mmmm... Just like that. Slowly. Ohhhhh...\"\n\nHer clit was already quite hard when I finally sucked it into my mouth and rolled it slowly with my lips. Her hips went crazy, thrusting at me and her head was rolling from side to side on the table in her ectasy. I felt inordinately proud of myself that I could drive her to such heights. Just when I thought she was about to cum, she pushed my head away.\n\n\"Put it in, Robby. Put it in.\"\n\nStupidly, I said, \"What?\"\n\n\"Your cock. Inside me. I want you to make love to me.\"\n\nI thought she'd taken leave of her senses, especially after the last talk we'd had on the subject. From the times I'd felt the same urge were when she'd driven me almost to the point of no return. I knew what she was experiencing.\n\n\"Are you sure that's a good idea, Kathy? I mean---\"\n\nShe propped herself up on her elbows staring wildly at me. \"I know what I'm doing! I just finished my period, Robby. It would be almost impossible for me to get pregnant tonight. Do you want to make love or not?\"\n\n\"Of course I do, but---\"\n\n\"No. No 'buts'. I wouldn't take this risk if I didn't know the percentages. I DON'T want to get pregnant, but I DO want to feel you inside me. Don't be so cautious,\" she said more gently. \"It will be all right. I promise.\"\n\nI smile now when I think of that exchange. Our roles were completely reversed from any other couple I've ever heard of.\n\nKathy lay down again and reached down between her legs. With one hand, she held herself open, and with the first two fingers of her other hand, she started tracing slow circles around her engorged clit.\n\nHer expression was one of pure lust. \"C'mon Robby. I've been thinking about this all week. It's my special surprise for you.\" She seemed to get lost for a moment in the sensations she was causing with her fingers. Mmmm. I'm very close now. You don't want to be a virgin anymore, do you? Make a woman of me and I'll make you a man. I love you. I want to make love with you. Now.\"\n\n\"You're sure?\"\n\n\"I'm sure.\"\n\nI stepped forward as she pulled her legs up and back, holding them with her hands. Her gash glistened in the moonlight.\n\n\"Just go slowly. You're rather large, you know.\"\n\nThis was something I'd read in the Kinsey book. 8\" is about 2 1/2 past the average. Kathy had never mentioned the fact before now, although she undoubtedly knew it. As for thickness, I'd never thought of measuring that, but I knew I wasn't skinny.\n\nAs soon as she felt my erection touch her open slit, Kath grabbed me. \"Let me do it.\"\n\n\"This is going to hurt you, isn't it?\"",
        "\"Yes, but only for a moment, my love, only a moment.\"\n\nShe began rubbing my cock up and down her slit, getting the end of it coated with her fluids. Then she brought it down to her opening.\n\n\"Push slowly.\"\n\nI did, but nothing happened at first. Kathy was now up on her elbows again, and both of us were looking at the same thing.\n\n\"A little more...that's it...\"\n\nAll at once her opening dilated and the head of my cock popped into her vagina. The feeling of her tightness cannot be described.\n\n\"Wait there for a moment,\" she said, her brow furrowed in concentration. \"Let me get used to it... Okay, push a little more. Good. Now back out a bit and push again.\"\n\nI did and moved in a small amount further. That's when I hit her hymen.\n\n\"Give me a minute, Robby,\" she said as she began to play with herself again.\n\nI watched as I felt my cock's head squeezed by her tightness.\n\nShe began breathing harder and I could tell she was getting close again. All at once she heaved herself towards me. For a moment nothing happened and then I slid forward another few inches.\n\n\"Ahhhh...\"\n\nI started to pull out.\n\n\"No, stay there. It's okay. Just give me a minute.\"\n\nKathy lay back, panting, her eyes looking up into the infinity of the night sky. \"It's so right to be out here doing this,\" she murmured. \"Okay pull out a bit again, then go in slowly.\"\n\n\"Does it hurt?\"\n\n\"Only a little,\" she answered with a tight smile. \"Now move in and out, slowly.\"\n\n\"Can I push in farther?\"\n\n\"You'd better!\"\n\nAfter maybe a dozen or so strokes, I was buried to the root. Stopping, we both looked down.\n\n\"I guess this means we're not virgins anymore,\" I said.\n\n\"I can't believe you went in so easily. I feel so full, it's incredible.\" She looked up at me. \"I'm glad it's you this first time.\"\n\n\"I am too.\"\n\nShe grinned at me. \"Now get busy!\"\n\nThe first time in your life is unforgettable. I'm sure most first times aren't all that enjoyable, though, because generally young couples have no idea what they're doing. In those days, books on sex were few and far between, and even though we'd read a lot, we still had no idea of the finer details that come with experience.\n\nHer vagina felt even better than I had imagined it would, tight and warm and resisting my thrusting in the most incredible way. Kath had her hands out, gripping the sides of the table so she could push herself at me, which she did with more and more force, the hotter she got.\n\nI'm not saying we did the best job ever, but we both came, and it was very good. By the time I did, we were going at it pretty hard, both of us grunting as our bodies collided. Kath had put her legs on my shoulders and I was holding her waist. Down between her legs, her hand was busy.\n\n\"I'm going to...cum,\" I told her feeling the tightness in my balls. \"I should pull out.\"\n\n\"Don't you dare! I want all of you tonight.\"\n\nWith that comment, she did something inside and tightened up even more. I pushed forward, once, twice and then came.\n\n\"I can feel you throbbing inside me, Robby! I can feel it. Ohhhhhh...\"\n\nKathy's orgasm was not her biggest but it lasted for a long time. Her pussy continued to pulsate around my softening erection for several minutes.\n\nEventually, I pulled out and watched as a stream of semen oozed from her.\n\n\"I hope we just didn't do something we'll regret.\"\n\n\"Robby, I will never regret what we did for a moment. It was beautiful.\"\n\n\"You're a woman now.\"\n\n\"And you're a man. Hold me, Robby. Hold me tight.\"\n\nI picked her off the table and sat down on one of the benches. As we were kissing and snuggling, I thought I saw movement off under the trees. Somebody had been watching us.\n\nAlthough I was alarmed, there wasn't much I could do. First of all, I didn't want to ruin the moment for Kathryn, and second, I couldn't just run after the bastard with no clothes on.\n\nInstead, I told Kathryn how much I loved her.\n\nAs things turned out, I should have been very concerned."
    ],
    "authorname": "val wrangler",
    "tags": [
        "masturbation",
        "her first time",
        "voyeurism",
        "female virgin"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/kathryns-question-ch-02"
}