{
    "title": "My Journey Ch. 05",
    "pages": [
        "This is the fifth installment of My Journey. Although not necessary, this story will be more appreciated if you read Chapters 1 thru 4 first. Thank you to all who read my first four submissions and provided feedback. \n\nI hope you enjoy reading the story as much as I enjoyed writing it. (And I REALLY enjoyed writing this one!)\n\nPlease, please leave comments and suggestions!\n\n___________________________________\n\nWhitney separated from her lover's mouth and asked \"Do you think it worked? Do you think our little show got them interested?\" \n\nEllen, with supreme confidence, answered \"I'll be eating Trish's pussy and you'll be fucking daddy's cock by the end of the weekend. I guarantee it!\"\n\n\"I hope you're right. Just the thought of fucking my boyfriend's dad makes me absolutely creamy!\"\n\nThe two lovers kissed again before Ellen said \"Come on, let's get to bed.\" Whitney and Ellen stood from the shallow water and lovingly toweled each other off. Ellen kissed Whitney on the lips and whispered \"I love you.\"\n\n\"I love you too\" Whitney replied as they walked naked to the house, each with an arm around the other. \n\nI already knew that Ellen wanted to bed her Aunt Trish, but I was shocked that Whitney wanted to do me. \n\nAfter the words sunk in, all I could think was \"Ellen, you are going to be so surprised when Trish sticks her six inch clit in your mouth!\"\n\nThe next evening I told Tina and Trish what I had witnessed that morning in the pool. Of course it led to more mind blowing sex between the three of us.\n\nThe remainder of the week passed quickly. Saturday morning I took Mark to the range so he could put some rounds through his birthday present. I took the Colt 1911 my dad had given me on my eighteenth birthday and let Mark shoot that too. My son was a natural. It didn't matter which firearm he used he had great groups. A couple of hours and more than a hundred rounds later it was time to head home. \n\nMark had plans to spend the rest of the day with Whitney. Trish, Tina, and Ellen were going shopping and would be gone by the time we got home. I was going to fire up my smoker and cook some ribs for supper. That would give me at least six hours to sit around and do nothing.\n\nOnce at the house, Mark got ready for his day with Whitney and headed toward the front door. \"See you later dad!\" He yelled toward the kitchen where I was finishing the prep work on the ribs.\n\n\"'Bye Mark. Have fun, and be good!\" I hollered back. \"Hey! Are you gonna be back for supper?\"\n\n\"Only if I can bring Whitney\" he joked back.\n\n\"See ya both tonight then. Dinner about six!\" I said.\n\n\"K. See you around six.\"\n\nThe house was finally empty, maybe for the first time since Trish became part of the family. I poured a glass of bourbon, grabbed a cigar out of my stash, and took the ribs out to put on the smoker.\n\nI sat in a lounge chair by the pool and lit my cigar. There was nothing better than a glass of bourbon and a cigar while the smoker chugged away. \n\nI relaxed in the chair for a long while nursing the golden elixir and puffing on my stogie. My sun glass covered eyes were closed while I enjoyed my vices in rare silence when I detected a cloud pass in front of the July sun. When the cloud didn't move out of the way, I opened my eyes to see what was going on.\n\nIt was Ellen, and not a cloud, that was impeding the sun's rays from reaching me, and she was dressed in her scandalously skimpy swimsuit.\n\n\"Well, hi honey. I thought you went shopping with your mom and Aunt Trish?\" I inquired.\n\n\"Hi daddy. I just wasn't in the mood to shop today\"\n\n\"Are you sick?\" I asked. Ellen was never not in the mood to shop.\n\n\"No daddy! I just wanted to hang out by the pool. Is that OK?\"\n\n\"Sure. Pull up a chair. But there's one condition\" I said.\n\n\"What's that?\"\n\n\"You can't tell mom about the cigar.\"\n\nEllen's smile told me she understood. She pulled another lounge chair near mine and reclined it all the way back. I tried to be discreet as I stole a long glance at her exceptional body stretched out on the chair, but she turned her head and caught me with my head turned her way. Hopefully the sunglasses prevented her from seeing that I was staring at the two ample fleshy mounds on her chest.\n\nEllen smiled when she saw where my face was pointed. I didn't respond, hoping it would make her think my eyes were closed. \n\nI turned my head so I was no longer looking at her, sipped my drink and smoked my cigar. We were quiet for an hour, the two of us, enjoying the perfect summer day as the waterfall splashed and the birds sang and flitted overhead.\n\n\"Daddy?\" Ellen's question broke the silence.\n\n\"Yes, sweetie?\" I answered.\n\n\"Can I talk to you about something?\"\n\n\"You know you can Ellen. What's on your mind?\"\n\nEllen got out of her chair and took the short steps to where I was sitting. She straddled the chair and me, lowered herself to my lap, and sat directly on my groin, her hands resting on my chest.\n\n\"Sweetie, you probably shouldn't sit on me like that, especially when you're practically naked\" I said.\n\nEllen ignored my suggestion. \"I know what's going on daddy\" she declared.\n\n\"Well I would hope so honey. I've only cooked ribs a hundred times, you should know what's going on by now\" I answered, hoping my answer would bring some levity to the situation.\n\n\"Very funny dad. I'm being serious. I know what's going on\" she reiterated, her expression as serious as a heart attack.\n\nI took off my sunglasses so she could see my eyes. \"What are you talking about?\"\n\n\"Don't play dumb with me daddy. You know what I'm talking about\" she insisted.\n\n\"I'm afraid I don't honey. Why don't you tell me.\"\n\n\"You? Mom? Aunt Trish? You don't think I know what's going on? I'm not stupid, daddy. I see they way you and mom look at Aunt Trish. Do you think I haven't noticed the new, huge, matching wedding rings they wear? Do you think I haven't noticed you're all wearing two wedding rings? Do you think I didn't notice that Aunt Trish's \"apartment\" is attached to your master bedroom?\" Her tone was simultaneously accusational and mocking.\n\n\"Those are all excellent observations honey, but you still haven't told me what you think is going on.\"\n\n\"OK. I'll tell you what I think. I think you and mom are both fucking Aunt Trish. That's what I think. I think mom and Aunt Trish are bi, and I'm cool with that. It also means that mom and Aunt Trish are committing incest, and I'm cool with that too\" she answered confidently, her crotch beginning to rub against my hardening cock. \"I can tell by the way your cock is responding that I'm right. And since I'm right, I want in. I want some of Aunt Trish's pussy.\"\n\n\"That's a pretty bold demand young lady. And what if I don't help you in your quest to seduce Aunt Trish?\"\n\nA wicked, victorious smile spread across her face. \"I'll tell mom you fucked Whitney\" she answered boldly, defiantly.\n\n\"Oh you will, will you?\" I answered coolly. I took a long draw from my cigar and said \"Now, before you try to further your blackmail attempt, let me address what you've said so far. First, you don't know what you think you know. Second, if you want some of Aunt Trish's pussy, you'll need to take that up with her. Good luck with that. Third, I'm getting hard because there is a nearly naked eighteen year old bombshell grinding her crotch against mine. And finally, I don't think your mom would be too happy if I told her that you were skinny dipping and tried to seduce me in the pool.\"\n\nEllen's face registered a look of angry disappointment at my response. It was obvious that I had just beaten her at her own game, and that I held all of the cards. Of course, my carefully worded response did give her permission to try to seduce Trish. I hoped she picked up on that.\n\nAfter glaring at me for a few seconds Ellen said \"Fine. Be that way.\" She pouted, stomped away, and dove into the pool.\n\n\"It's going to be interesting tonight, I bet\" I muttered as I returned to my bourbon and cigar.\n\nEllen spent the next half hour in the pool under the waterfall, undoubtedly licking her wounds and plotting her next move. Once she had successfully salved her ego, she swam to the far end and lay in the four inch deep pool that her mom and Aunt Trish had ingeniously integrated into the design. (It was genius because one could lay in the water while still catching sun. It was also brilliant because two or more people could have sex in the water without being submerged.)\n\nAt about 3:00 I got up and checked on supper. My ribs were coming along nicely, but still had a ways to go. I ducked in the house to pour another glass of whisky. Before I opened the door to come outside, I glanced toward Ellen. She was apparently feeling a little better because her hand was inside her bikini bottom and she was playing with herself. I was pretty sure she was thinking about Trish, and had apparently come up with another plan. I stood inside, observing my daughter as she masturbated while, presumably, fantasizing about my transsexual wife. The scene was very erotic and I would like to have moved closer, but I had already thwarted her plans once today, I wasn't about to do it a second time.\n\nI went to the fridge and got a cold drink for my daughter.\n\nAfter Ellen had completed her solo exploration, I ventured back outside. She was still relaxing in the shallow pool. I approached and offered her a glass of iced tea.\n\n\"Thanks daddy. It's warm out here.\"\n\n\"Looks like it, you're sweating\" I said. Her impeccable form sported a glistening sheen of perspiration from her recent session of self-pleasuring.\n\n\"Oh, yeah, I guess I am.\" She paused. \"Listen, daddy, I'm sorry about how I handled things earlier. I never should have put you in that position.\"\n\n\"Apology accepted, honey, and I understand. Your Aunt Trish is a very beautiful woman. I can appreciate your attraction to her. But, it's wrong to blackmail me or drag me into something that you need to address with her as an adult. Understand?\" I asked.\n\n\"I do, and you're right. I won't do it again\" she answered humbly. \"One more thing daddy.\"\n\n\"Yes, honey.\"\n\n\"Please don't tell mom or Aunt Trish, OK?\"\n\n\"OK.\"\n\nI lied. Tina, Trish, and I no longer kept secrets, and I would tell them what happened as soon as the opportunity presented itself.\n\n\"I'm going to go take a nap\" Ellen said as she dried off and padded toward her room.\n\nI had the backyard to myself again. I enjoyed the blissful silence with my vices. The area around the pool provided limited shade, and the sun was becoming uncomfortable. With whisky and cigar in hand, I decided to venture to The Clearing for a few minutes of shade and introspection. I sat on the cool grass, my back against a tree to enjoy the rest of my cigar and to sip my bourbon, which now had been diluted by the melting ice. The sip became a gulp and the whisky was gone. I finished my cigar and crushed it in the grass. I have always said \"you don't buy whisky, you rent it\" and ducked into the trees to relieve myself. \n\n\"The world is my urinal\" I said as I extricated my unit.\n\nWhen my bladder was empty, I lay on my back in the cool, shaded grass. \n\n\"Clark?!\" I heard Tina yell from the backyard. \"Clark?! We're home! When will dinner be ready!?\n\nI glanced at my watch and noticed I had napped for a couple of hours or so. I walked back to the house and checked my ribs before going into the house.\n\n\"Hi, honey\" I said to Tina and gave her a peck on the cheek.\n\n\"Oh! Hi sweetie. Where were you?\" she asked.\n\n\"I was dozing out in The Clearing. Did the two of you have a good time?\"\n\n\"We did. It was nice to just spend time alone with Trish. Will dinner be ready soon?\" \n\n\"Whenever you're ready\" I answered. \"I was surprised that Ellen didn't go with you.\"\n\n\"She said she wanted to go hang out with some friends today\" Tina answered.\n\nTrish came down the stairs from our room and into the kitchen. \"Hi Clark!\" she said before giving me a peck on the lips. \"I hope I'm not interrupting\" she said.\n\n\"Nope. Did you have a nice time?\" I asked.\n\n\"Sure did. It's always fun to just walk around and I love spending time with just Tina.\"\n\n\"I asked Mark and Whitney to come for dinner too. That OK?\" I asked.\n\n\"Great!\" they answered.\n\n\"Since you're both here now, you should know that Ellen didn't go anywhere today. In fact, I think she's still napping in her room. \n\n\"Really?\" they both replied with raised eyebrows.\n\n\"I wonder what's up with that?\" Trish asked.\n\n\"It was because of what I overheard between her and Whitney the other night. While you were gone, she tried to blackmail me into letting her have her way with you, Trish. She said she knew what was going on between us: That the wedding rings and the apartment are proof that all three of us are involved in a love affair; that her mom and Aunt Trish are bi; and that you're both into incest. She has no problem with any of it. Of course, we already know that. She just wants Trish's pussy. She also said if I didn't let her have her way with Trish she would tell you, Tina, that I seduced Whitney.\"\n\n\"What did you say? What did you do?\" Trish asked, fascinated yet frightened.\n\n\"Well, I told her she didn't know what she thought she knew. That if she wanted Trish she would have to work that out with Trish, like two adults. I also told her that if she tried any of the blackmail crap again I'd tell her mom that she tried to seduce me while she was skinny dipping.\"\n\n\"Did it work?\" Tina asked.\n\n\"Well the subject got dropped and she apologized for doing what she did, but I think she has another scheme to get to Trish.\"\n\n\"As far as her threat, have you and Whitney...\" a slightly jealous Tina asked.\n\n\"No, sweetie. You would already know if we did.\"\n\n\"Thanks for telling us, Clark. I do have to ask though, did she try anything? With you?\" Tina asked with concern in her voice.\n\n\"She sat on my lap in just her bikini when she tried her blackmail bit, and she rubbed herself against my woody\" I confessed.\n\n\"You were hard?\" Tina asked.\n\n\"Honey, I had an essentially naked eighteen year old in my lap. I may be old, and I may be her dad, but I am not dead!\"\n\n\"You're right. I'm sorry. I know you wouldn't have done anything with your daughter. Yet.\" A knowing smile crossed her lips.\n\n\"But Tina, baby, I would have gotten hard too!\" Trish interjected.\n\nTina laughed, kissed her wife, and said \"That's because you're a slut!\" and continued to laugh.\n\nAll three of us were laughing when we heard Ellen's bedroom door.\n\nEllen came into the kitchen barefoot wearing a halter top tied under her bountiful breasts and a pair of tight blue denim cutoffs which accentuated her firm, round ass. She turned so she was facing Trish. Ellen began a post-nap stretch. With her fingers interlaced she raised her arms high above her head and arched her back. Her magnificent rack pressed forward against the restraint of her top, spreading the opening and exposing her cleavage. The three of us looked at each other knowingly, and stifled the urge to giggle at her blatant attempt to entice Trish with her womanly form. \n\n\"Wow! I must have been tired! What time is it?\"\n\n\"'Bout a quarter after five\" I answered.\n\n\"I've been out for four hours?\"\n\n\"Right around that, yeah\" I said. \"And you're awake just in time for supper. What are the odds of that?\" I teased.\n\n\"So when can we eat? I'm so hungry I'll die if I don't eat!\" she exclaimed in her usual hand to the forehead fake swoon.\n\n\"As soon as Mark and Whitney get here\" Trish answered.\n\n\"Mark and Whitney are coming? Sweet!\" Ellen squealed.\n\nA few minutes later Mark and Whitney arrived. Once in the kitchen, Whitney greeted Aunt Trish and Mrs. P with the usual hug, pressing her sundress covered body against theirs.. \"Hi Mr.P\" she said, and gave me a hug too. Her hug was unexpected. Her very sensual 'grind-my-crotch-against-yours' hug was a surprise. \n\nI now pretty certian that I did not misunderstand the early morning conversation at the pool.\n\nDinner was casual as we sat in lawn chairs and ate ribs, potato salad, and pit baked beans from paper plates. I cook some pretty good spare ribs (St. Louis cut, of course), and they did not last long. More important than good food, there was a lot of good laughter. Everyone was in a great mood and conversation flowed effortlessly. \n\nEllen got out of her chair, tossed her plate in the garbage and began to untie her halter top. Her eyes were glued to Trish's, her face bore an innocent yet seductive look.\n\nEllen took her time untying the knot of her halter, and when the knot was released, she slowly slipped the skimpy garment from her shoulders and placed it on her chair.\n\nFor a moment, I expected to see her standing topless in front of us, but her breasts were \"concealed\" in her tiny bikini.\n\nEllen performed a small back and forth rotation of her hips before unsnapping her cutoffs. Her eyes were locked on Trish's until she bent over to pull down her shorts. Her bikini top did almost nothing to hide her tits as they hung in front of her. Luckily for her, she was facing us. If she had bent over and exposed her round, scantily clad ass to me, I would have been behind her to tongue her hole so fast I would have left a vapor trail.\n\nShe stood again and stepped out of her shorts before bending over again to pick them up and place them on her chair. Once again her eyes were focused on Trish. Ellen seemed to be in a daze. It seemed to me that Ellen thought she and Trish were the only ones in the backyard. \n\nEllen extended her hand toward Trish and said \"Care to join me in the pool?\"\n\nThe three of us had discussed what Ellen was wanting to do. Trish wasn't going to start anything, but if something did happen, Tina and I were going to be good with it. \n\nStill, Trish looked to Tina and me for approval before responding to Ellen's offer. In turn, Tina and I looked at each other, discussed the situation without saying a word. Tina's eyes were twinkling and glassy. I turned back to Trish. She saw the right side of my mouth move up into a nearly imperceptible grin.\n\nTrish smiled back at me and said \"I'd love to. Go ahead and get in the water, I need a minute to change\".\n\nTrish went up to our room to put on her suit, and Ellen nearly skipped to the pool before jumping in feet first in the deep end.\n\nTrish emerged from the house in her one piece suit with the frilly little skirt that helped to cover her specialness. She was barefoot, and her hair was pulled back in a pony tail that exposed her slender, graceful, feminine neck. She walked across the yard, through the shallow pool, and into the deep dark salt water. \n\nThe two women swam and chatted in the pool while the rest of us sat and let the great barbecue digest a little before doing anything.\n\n\"You know, I've never seen the two of you use your own pool. What's up with that?\" Whitney asked Tina and me.\n\n\"We use it a lot, just not when the kids have friends over\" Tina answered.\n\n\"Why not?\" Whitney asked.\n\n\"We don't think that you young kids should be subjected to us old folks in swimsuits. You know, we don't want to scar you impressionable young kids\" I answered.\n\n\"I'm not a kid. I'm eighteen. And you two aren't old! You both look really good\" Whitney confessed.\n\n\"It's very sweet of you to say that Whitney, but we have these things in our house called \"mirrors\", and they tell us a different story\" Tina answered with a laugh and a smile.\n\n\"Whitney's right ya know\" Mark piped in. \"You both look a lot younger ever since Aunt Trish moved in and got us all eating right. You look especially good, mom\"\n\n\"Well, thank you Mark. I'm glad you believe that, but I think you must want me and dad to buy you something. What is it and how much is it going to cost?\" Tina teased.",
        "\"Nope. Just calling 'em the way I see 'em\" he reiterated his stance.\n\n\"You both are very sweet\" Tina said\n\n\"So you'll join us in the pool? After all, I'm the only friend here and I have already assured you that I won't be scarred\" Whitney encouraged.\n\n\"OK. But just for a little while\" Tina acquiesced. \n\nWhitney was out of her chair and stripping off her sundress in a heartbeat. Thankfully she had her swimsuit on under the dress. She ran to the side of the pool and jumped. Her shout of \"CANNONBALL!\" told us what mode she used to enter the water.\n\nMark went to his room to put on trunks while Tina and I went to our room to change.\n\nOnce in our room we stripped in silence. My eyes never left Tina's body. Despite the fact that there were three beautiful women in the pool I still desired Tina's body. I had never stopped desiring her body. When she was naked I took her in my arms and told her I loved her.\n\nHer hands roamed my back and intermittently cupped an ass cheek. \"It's gonna happen, isn't it?\"\n\n\"Are you going to be OK if it does?\" I asked.\n\n\"We've dealt with everything to this point, we can deal with whatever happens tonight\" she answered.\n\nI slipped a finger between her thighs and let it slip toward her sex. The swollen button of her clit was obvious and I could feel the heat from her aroused core. \"I'm glad you're not apprehensive about this honey.\"\n\n\"Oh, I 'm apprehensive alright, but I'm turned on too.\"\n\nI slipped into a pair of loose fitting swim trunks and Tina put on a one piece that was exponentially more conservative than the suits worn by our daughter and her friend. When Tina checked herself in the mirror, I could not believe how hot the suit made her look. She showed very little skin, but the construction of the suit was such that it accentuated everything about her. Her breasts looked bigger, her waist smaller, and her hips more shapely.\n\n\"That suit is hot!\" I said.\n\nBefore she answered she checked my crotch. The slightly turgid cock she found there told her I was sincere.\n\n\"Thanks!\" she said.\n\nWe walked hand in hand to the pool. Ellen, Whitney, and Trish were busy splashing each other, laughing so hard they barely made any noise. Trish said she was tired and took a seat on one of the submerged ledges in the deep end. \"I need a break\" she said.\n\nTina and I strolled through the shallow pool and into the deep water. Tina released my hand and swam under the water fall allowing the powerful water to cascade over her body for a minute before taking perch on the ledge across the pool from where Trish was seated. I dove to the bottom of the pool and swam it's length underwater. I surfaced on the far end and turned my back to the side of the pool to survey what was happening. Trish and Tina were still seated on the ledges, the soothing saltwater slapping against their necks. Ellen and Whitney were floating on their backs in the middle of the pool, and Mark was in a lounge watching the goings on from behind his sunglasses. I made my way over to Tina and sat next to her allowing our bodies to touch. \n\n\"Looks like we have front row seats\" she whispered in my ear. I took her hand in mine and let my body relax in the warm salty water.\n\nWhitney made her way to the shallow pool and reclined on her elbows allowing the late afternoon sun to bathe her spectacular youthful body. Ellen made her way toward Trish and made a motion like she was going to splash Trish. \"Don't you dare!\" Trish scolded. Ellen thought better and instead moved closer to Trish and gave her a hug.\n\n\"That was fun Aunt Trish, thanks.\"\n\n\"You're welcome sweetie. I had fun\" Trish replied.\n\nStill embracing her aunt, Ellen lowered her face and gave Trish a peck on the lips. Ellen pulled back and gazed at Trish. Ellen mover her head slightly to the side and cocked it a little. She was going to move in for a more intimate kiss. Trish flashed a look toward Tina and me. I smiled my approval, and Tina was biting her lower lip in anxiety. That was all Trish needed and she also turned her head slightly to accept Ellen's tender, open mouthed kiss. \n\nSoon their kiss escalated, and we could tell from our seats that they were each probing the other's mouth with their tongues. I glanced to my right to see that Mark had joined Whitney in the shallow pool. They were on their sides, heads propped on one arm, positioned in a way that they could see the goings on between the two women across the pool.\n\nWe saw Ellen drop her right hand from around Trish and lowered it in the water. Trish intercepted it and placed it back where it was. \n\nFrom where I was sitting, it occurred to me that the dark coating of the pool caused the water to appear almost black, but when there was a person in the pool, the contrast of their skin against the finish was severe, making it very easy to see a person in the water. I could plainly see that Trish was sitting with her legs spread and Ellen was between them. Ellen's knees were bent and her thighs rested against the front of the ledge seat. She was supporting her weight with her arms that were wrapped around Trish.\n\nAgain Ellen dropped her hand in the water. This time I could see she was trying to get between Trish's legs. Again Trish was quick to intercept the intruding hand and again placed it around her neck. Ellen got the message the second time, and the next time she lowered her hand she only lowered it to the side of Trish's left breast where it met no resistance. \n\nThey remained in that position for a while, kissing and gently touching each other. Trish's hand glided across Ellen's soft skin from her breast, down her left side, across the small of her back and to her ass. Her hand never cupped or grabbed; it just followed the contour of Ellen's firm teenage body. Ellen's hand became more bold, moving from the side of Trish's breast to the front, her palm massaging Trish's nipple. My daughters thumb strummed at my wife's nipple. A mew escaped from one of the women indicating that their arousal was increasing.\n\nEllen pulled her mouth away from Trish's just long enough to pull the strap of Trish's suit off her left shoulder. Trish lifted her arm and pulled it out of the strap, allowing her left breast to be freed from it's satiny confine. Ellen now had access to Trish's naked mammary and continued to palm the surface, strum the nipple, and heft the weight of my lover's wonderful boob.\n\nI glanced at Tina. She watched the unfolding erotic scene with rapt attention, never taking her eyes off of the coupling lovers.\n\nEllen returned to Trish's succulent mouth and they again kissed passionately before Ellen broke the kiss this time to release Trish's right breast from it's nylon prison. Ellen pushed the suit down until it was bunched up around Trish's waist. She was now naked from the waist up and Ellen attacked those marvelous breasts with gusto. Trish scooted forward a little on the ledge and pulled Ellen up to straddle her and sit on her lap. Ellen's long lean legs snaked behind Trish. Ellen's hands were now free to explore Trish's body unencumbered.\n\nAs I watched, I figured Trish must really have her surprise tucked away well if she allowed Ellen to sit on her like that.\n\nIt was Trish's turn to assist Ellen with her swimsuit. Trish's hand roamed over my daughters back seeking the knot that held the tiny pieces of cloth in place. She found it at Ellen's neck, and pulled on one of the ends unfastening the fragile strings. Trish left the top where it was and returned to stroking the lovely young girl's back briefly before returning to the bikini top and pulling it down, freeing the firm fleshy mounds.\n\nAs soon as her tits were free, Ellen began rubbing them all over Trish's breasts. Ellen surrendered her oral grip on Trish's mouth. She pushed her breasts together from the sides and looked between their two writhing bodies so she could rub her nipples directly on her aunt's.\n\n\"I have wanted this for the longest time Aunt Trish. Your body feels so good against mine. God, I'm in heaven!\" she cried. \"Suck my nipples Aunt Trish!\"\n\nTrish complied and lowered her mouth to the young woman's ample bosom alternating between nipples and driving our daughter crazy with lust.\n\n\"Oh my GOD! You have a great tongue Aunt Trish. I can't wait to feel it on my pussy. Don't stop, don't stop, keep sucking!\" Trish now had both hands behind Ellen and was grabbing Ellen's ass cheeks hard, pulling them apart and massaging them.\n\nI glanced over at my son and his girlfriend. They were still in their suits and watching the action, but they were now openly caressing each other through their clothing. I could see that Mark was very hard and Whitney's nipples threatened to tear right through her suit.\n\nTina was breathing hard now, obviously turned on by the sight of our daughter being pleasured by our wife, her left hand buried between her legs and she was rocking her hips back and forth.\n\nTrish grabbed the loose ends of the knots holding up Ellen's suit bottoms and gave both sides a tug. A shift of Ellen's hips caused her tiny swimsuit bottom to begin a slow descent to the bottom of the pool. Ellen was completely naked giving Trish unfettered access to her body. Trish wasted no time in commencing her digital assault. First, her well manicured finger traced up and down Ellen's ass crack, intermittently stopping to focus attention on her asshole. Ellen seemed surprised whenever Trish's finger touched her there, but her moans and gasps indicated she liked it.\n\nTrish reached a little further between Ellen's legs and slipped a finger into her nieces sopping wet eager pussy.\n\n\"Aaaahhh! God! Trish, you're inside me! Your finger feels so good!\" Ellen's hips were actively thrusting against the invading finger trying to get more inside her. \"Stop teasing me Aunt Trish! Finger fuck my pussy! Aaaaahh God yes!\" she wailed.\n\nThe two women continued to couple, kissing, caressing, and probing for several minutes until Ellen exclaimed \"That's enough, I don't want to cum yet. I want your pussy Aunt Trish. I want your pussy now. Give it to me. Let me make you cum!\"\n\nTrish locked her mouth on Ellen's and sucked the young girls tongue into her mouth. The two violently thrust and twisted their tongues in the most urgent kiss I have ever seen.\n\nTrish stopped kissing and said \"It's not too late for us to stop, honey.\" She was audibly panting now. \"We may have crossed the line of aunt and niece, but if we go any further, everything changes, everything. Even things you haven't thought about yet. Are you ready for that? Can you handle that?\"\n\n\"Yes, yes, God YES! I'll do anything to be with you Aunt Trish. I can handle it. I want you sooo much!\" Ellen replied.\n\nTina had the crotch of her suit pulled aside and was pumping two fingers in and out of her enflamed, hairless pussy while she frigged her clit with her other hand.\n\nWhitney had Mark's cock out of his shorts and was stroking it's length with her delicate fist. He was stroking her clit through her swimsuit bottom.\n\nTrish gently pushed Ellen off her lap and into the pool so she could change position. Ellen was treading water in the deep pool, her full backside exposed to my view. The dark pool and water seemed to intensify the contrast between the creamy skin usually covered by her suit and the rest of her tanned, golden brown body.\n\nTrish was standing on the submerged seat now, the water just above her knees. Her back was to the pool and to us. She bent over at the waist while looking back and keeping eye contact with Ellen. She began to lower the swimsuit over her hips. Her motions were agonizingly slow, meant to tease her soon-to-be lover. The frilly skirt of her suit kept her cock hidden. Tina and I were waiting for Ellen's reaction when it finally came into view.\n\nTrish slid the clingy garment a little lower until it rested at the crease of where her ass cheeks met her legs, exposing her perfect womanly ass. Trish palmed each cheek with her hands spreading them apart to expose the pleated entrance. Trish stroked her exposed puckered hole with the middle finger of her right hand. \n\n\"See anything you like?\"\n\nEllen whimpered.\n\nI gulped.\n\nMark and Whitney stared.\n\nTina came.\n\nYes, the scene was that sexually charged.\n\nTrish turned around, sat on the edge of the pool and removed the rest of her swimsuit, tossing it on the grass behind her. She never allowed her legs to spread, keeping her cock a secret.\n\n\"You have a choice to make young lady. You can stop now, or you can kneel in front of me and make love to me with your mouth. It's your call.\"\n\nEllen answered by scrambling onto the seat and kneeling in front of her aunt. \"I want to eat you Aunt Trish. Please, let me make love to you!\" She sounded desperate and on the verge of crying.\n\nEllen began to pry Trish's legs apart and at the same time began lowering her mouth to Trish's proffered sex.\n\nShe was not expecting to get slapped on the bottom of the chin with a six inch erection.\n\nWe could not see Ellen's face, but I am certain it was a look of confusion. \n\nWe could see Trish's face, and it registered a look of concern and fear. Her eyes searched Ellen's face for understanding, acceptance, anything.\n\nTime seemed to stand still there in our backyard.\n\nMark and Whitney's mouths were wide open. I'm sure they were doing the math in their heads. If Trish had a cock, the entire dynamic of any relationship they believed to exist between their parents and their Aunt Trish necessarily had to change. \n\nBut it didn't stop Whitney's hand from pounding Mark's cock with fury, or Mark's fingers from creeping around the tiny bikini bottoms to play with Whitney's bald pussy directly.\n\nNo one spoke.\n\nNot until Trish said \"Now do you understand why I told you everything would change?\" her voice cracking from what she perceived to be Ellen's rejection. She reached for her swimsuit behind her, ready to put an end to the encounter and retreat to the seclusion of her apartment. \n\nEllen's petite fist around the base of her girl-cock stopped her. \"Don't go. Please\" Ellen implored. \n\nTrish's retreat stopped.\n\n\"I'm sorry. I just didn't expect... this.\" Ellen's hand was languidly stroking the rigid member in her hand. \"It's... it's... it's beautiful.\"\n\nEllen lowered her mouth to Trish's cock and slurped the head into her eager sucking mouth. Her tongue swirled around the swollen head while one hand pumped the veiny shaft. Her other hand found it's way between her legs and began to claw at her drenched pussy. Ellen was as enthusiastic at cock sucking as she was at eating pussy.\n\nTrish's countenance changed from one of rejection to one of relief and she threw her head back in pleasure. \n\nTrish had been turned on for so long that Ellen's hot suctioning mouth threatened to siphon the cum right out of her balls.\n\nI was excited beyond belief. I pulled both straps of Tina's suit off of her shoulders. She instinctively pulled her arms through the loops and offered no resistance as I pulled her suit down her body exposing her bountiful bosom to the cool water and my hands. Sliding off the submerged seat I quickly removed both of our suits and retook my place next to her on the seat where I groped her tits while she masturbated at the sight of our daughter pleasuring our wife.\n\nSo enthralled were Tina and I at the sight of our daughter sucking our wife's cock that we didn't notice the other couple slip into the deep pool.\n\n\"Oh! Oh! Oh!\" Trish panted. \"I'm so close honey, so close. Oh yeah! I'm gonna cum. I'm gonna cum!\"\n\nEllen never let up and kept sucking Trish's cock and fingering her own pussy. I could tell from my vantage point that Ellen was cumming on her own fingers, and Trish let us know she was too.\n\n\"OhOhOhOhOooHHHH! Yes! Yes! Yes!\"\n\nEllen sucked and swallowed everything Trish deposited in her mouth.\n\nTina and I watched in silence as Trish recovered from her cum and slipped back into the water in front of our daughter. The two exchanged subtle touches and sweet kisses, their frantic physical coupling evolving into tender emotional lovemaking. \n\n\"You two are kinkier than I would have ever imagined\" a naked Whitney said as she silently glided in front of Tina, spooking us. \"Let me help you\" her pleading voice dripping with desire as she replaced Tina's hand with her own. The touch of the young woman's hand on her sex immediately sent Tina over the edge and waves of orgasmic convulsions swept over her body.\n\nWhitney showered Tina's face and lips with fluttering little kisses, their breasts making fleeting contact. \"Weren't they beautiful!? You are so lucky to have those two women in your life. And you!\" Whitney said to Tina \"You are fucking radiant when you cum.\" She placed a tender, loving kiss on Tina's lips.\n\nWhitney slid over in front of me, grabbed my throbbing cock in her hand and began to gently stroke my manhood. Mark took Whitney's place in front of his mom and proceeded to kiss her shyly, the way first time lovers do. \n\n\"Let's see if you fuck as well as you cook\" Whitney said with a wink, pulling me out of my seat by my cock and leading me to the shallow pool.\n\nAt the shallow pool Whitney laid me on my back and straddled me. Tina had her legs wrapped around my son's waist as he carried her to the shallow pool. Mark placed her on her back next to me. I instinctively took her hand in mine, and we kissed. I could tell her heart was racing, as was mine. After all, we were both about to fuck gorgeous eighteen year olds!\n\nWhitney teased me by rubbing my cock with her wet slit while she sucked my tongue and probed my mouth with hers. Her firm C cup breasts were mashed against my chest, and her rock hard nipples burned holes into my flesh.\n\nI was delirious with lust. I had just watched my daughter fellate my wife, my son was between his mom's legs licking and sucking her erect nipples, and my son's pretty eighteen year old girlfriend was straddling my hips, preparing to fuck me. \n\nEllen was suddenly at Whitney's side, their mouths engaged in a passionate tongue swap. Ellen fondled Whitney's firm boobs.\n\n\"That was so fucking hot girl!\" Whitney remarked of her friend's recently completed oral tryst.\n\n\"You have got to taste her!\" Ellen replied. Ellen's right hand glided down Whitney's back and caressed her ass before grasping the shaft of my cock. \"Let me help.\"\n\nEllen's hand pulled my erection to it's full upright position. Whitney instinctively raised her hips off of mine and Ellen guided my cock between the engorged labia and into the slick pleasure chamber that was Whitney's pussy. Whitney slowly lowered her weight onto me and my middle aged cock sank to the hilt inside of her teenage vagina.\n\nWhitney gasped and her body shuddered. She looked at her boyfriend and exclaimed \"Your dad's cock is inside of me!\"\n\nAt that moment I heard Tina say \"Stick your cock in mommy's pussy baby!\" Mark's hips lunged forward as he buried his meaty shaft inside of his mom. \"OH MY GOD! Fuck my pussy baby! Fuck your mommy's pussy!\"\n\nWhitney began pumping up and down on my cock while Ellen licked and sucked her tits. The sexy blonde may have been a teenager, but she was talented, and knew how to please a man. Mark was thrusting his stiff pole in and out of his mom's weeping gash. Trish was at her side now, her flaccid penis was in Tina's mouth and her tongue was in Mark's. \n\nBeing aroused for so long while watching my daughter please my shemale wife coupled with the taboo and depravity of what was happening in the shallow pool, it did not take long for the beautiful blonde riding my cock to bring me to the verge of an orgasm.\n\n\"Whitney, you are such a good fuck! If you don't stop now I'm going to cum\" I pled.\n\n\"It's OK Mr. P. I want you to cum.\" \n\n\"But you haven't...\" I protested\n\n\"Don't worry. Ellen will take care of that. Won't you lover?\" She replied.",
        "Ellen turned her attention away from her friend's tits to give me a devilish smile and a wink. I knew I was going to be in for a show.\n\n\"Let it go, cum inside of me!\" she cried.\n\nI needed no more encouragement. I began thrusting hard into the young girl's body, hoping I could make her cum before I did.\n\n\"That's it, fuck your son's slutty girlfriend. Fuck me! Cum inside me!\"\n\nWhitney's dirty talk pushed me over the edge, causing all of the desire that had built up over the course of the day to spill out of my cock into Whitney's slick tunnel.\n\nI came so hard my ears were ringing. Whitney continued to pump up and down on me, milking the last of my semen from my body. \n\nIt took a few seconds for me to become aware of my surroundings again. It was Tina's cries of pleasure that brought me back to reality.\n\n\"I'm cumming! I'm cumming! Mommy's cumming on your cock honey!\" she squealed.\n\nMark responded by pumping into her willing body even harder, grunting each time he bottomed out in her steamy hole.\n\n\"I want to see you cum honey! Cum all over mommy! Aaaaaahhhhh GOD!\"\n\nMark growled like an animal and pulled his cock out of his mom's slippery passage. No sooner was his cock clear of her pussy before giant ropes of thick white cum spurted from the head of his stick. Spurt after spurt, rope after rope of his cum landed on his mom's face, tits, and belly. Trish was quick to lap up the gooey cum from her wife's body. Trish, always a considerate lover, promptly shared Mark's deposit with Tina; their mouths sealed together as they passed the teenagers sperm back and forth. \n\nWhitney had allowed my cock to slip from her folds and was now on her back next to me in the shallow pool. Her legs were spread further than I thought humanly possible and Ellen was between them, licking and sucking at her friend's well fucked, succulent sex.\n\n\"Oh Ellen! That's it! Eat your daddy's cum out of my pussy you dirty little slut!\" Whitney hissed.\n\nTrish slipped between Tina and me. Laying on her right side she let her bent left leg rest on my thighs and gently thrust her softening she-cock against my leg. I turned my torso slightly so I could hold her and kiss her luscious lips. In that position I could see my wife and son in an intimate post-coital embrace and could hear their loving confessions.\n\n\"I can't believe that just happened, mom. You were incredible\" Mark confessed, tenderly kissing Tina's lips.\n\n\"Oh, sweetie. You were wonderful too. You fucked me so good.\"\n\nMother and son continued their gentle kissing and touching, allowing their new intimacy to germinate.\n\nOn the other side of me I could hear Whitney orgasming under the talented tongue of my daughter. Trish was watching them intently.\n\n\"Look baby! She's swallowing your cum!\" Trish gasped.\n\nI turned just in time to see my daughter lick a glob of my cum out of Whitey's pussy and make a big show of swallowing it. Ellen returned to her lover's mound, making a final pass to be sure none of the combined love liquids went to waste.\n\n\"You taste so good mixed with Whitney, daddy. I can't wait to taste your cum from the source.\" Ellen climbed between Whitney's spread legs and allowed her body to collapse on top of her girlfriend. The two young lovers kissed sweetly and whispered their devotion to one another.\n\nTina extricated herself from Mark's embrace, got out of the water, and walked to the house. She emerged moments later with two blankets and spread then on the grass in the early evening sun. \"I need to dry off before I shrivel up like a prune\" she said as she reclined her naked, sexy form in the middle of the blankets. \"Anyone care to join me?\" Tina invited.\n\nMark was the first to join his mom in the warm sun, laying down next her on the blanket. Ellen and Whitney were close behind. Whitney took her place next to her boyfriend and began to play with his semi-erect tool. Ellen lay down next to her mom opposite Mark. \n\n\"He feels good, doesn't he?\" Ellen asked her mom, her right index finger drawing invisible circles around her mom's areola and nipple.\n\n\"You mean... the two of you have...?\" Tina asked, playing dumb.\n\nEllen nodded, a joyful smile on her face. \"On our birthday, right here by the pool. It was our present to each other\" she confessed. \n\nTrish and I arrived at the blankets. Trish reclined next Ellen and pressed her pelvis against her niece's ass and kissed the young girl's neck. I lay down next to Trish.\n\n\"But that's not important right now. I want to know the truth about Trish\" Ellen demanded.\n\nThere was a pregnant pause amongst the six of us. Tina turned onto her right side and propped her head up on her right hand.\n\n\"Well?\" she asked as she looked straight at me. The smile on her face told me she was curious as to how I was going to answer.\n\n\"I like being penetrated by a woman with a dick. Your mom did not take pleasure in taking care of me that way, so I sought relief outside of our marriage. That's when I met Trish\" I said. Kissing Trish on the cheek I slid my hand down her belly and unashamedly played with her cock. \"Trish and I became lovers. After Trish and I had fallen in love, she sought out, and seduced, your mom. They became lovers too, but neither your mom nor I knew about the other. Trish then brought us all together. I love your mom, and I love Trish. Your mom loves Trish, and she loves me. Trish loves both of us too, and none of us would ever consider living without the other two. We realized we needed to do something to make our relationship permanent. So, earlier this year the three of us exchanged vows. It may not be legal, or recognized by the state, but we are all married to each other: We are now husband and wife and wife, and we each wear a ring given by the other two. That's the \"Cliff Notes\" version.\"\n\nThere was a brief period of silence.\n\n\"So, have you sucked Aunt Trish's cock?\" Ellen asked, her back still to me as she toyed with her mom's breast.\n\n\"Yes I have sweetheart\" I answered.\n\n\"Has she fucked you?\" Ellen's shapely right leg was draped over her mom's left leg and Ellen ground her pussy into Tina's thigh.\n\n\"Of course. We're married. I won't withhold anything that might give Trish or your mom pleasure\" I confessed. \n\nEllen turned her head toward me, and with a wild look in her eyes said \"I wanna see it.\"\n\n\"See what honey?\" I asked, somewhat bewildered.\n\n\"I wanna watch Aunt Trish fuck you\" she answered matter-of-factly, still rubbing her mound against her mom.\n\nHer candor took me aback. I love feeling Trish's cock inside of me, and I had no issue giving myself to her in front of Tina, but I was not sure I wanted to do this in front of my children and Whitney. \n\nI may have been feeling uncertain about it, but the way Trish's cock began to respond in my hand told me she liked the idea, and was willing to show Ellen how she made love to me. It was then that I realized my own cock was stirring and beginning to press against Trish's cheeks.\n\n\"What do you think Trish?\" I asked. \n\nWithout a word, Trish positioned herself on her back. She drew her knees to her chest exposing her asshole to me and said \"Get me ready, baby!\"\n\nI knew what she meant and assumed my position of worship between her legs. I took her limp cock in my mouth and swirled my tongue all around it while sucking on it for all I was worth. I could feel the blood starting to fill her penis. While still sucking, I raised my head and allowed her puffy meat to leave the confines of my mouth. I gave her scrotum a long lick before beginning to lower my head to her dark little pucker. I glanced up at Trish. She had a lustful look of anticipation on her face. I also looked at my lovely daughter. She had shifted her position so she could watch her aunt and me without straining her neck. Tina and Whitney were also watching intently, but Mark was busy licking and sucking his mom's tits apparently uninterested in what was happening at the other end of the blanket.\n\nI looked back at Trish and said \"Looks like we have an audience\" before extending my tongue and gliding the flat surface across her bud, soliciting a moan of pleasure from her throat.\n\nTrish loves having her ass eaten almost as much as I love eating it. I focused my attention on her beautiful anus, and began licking and sucking her hole in earnest. I stiffened and pointed my tongue, penetrating my wife's pussy. Trish loves having my tongue in her ass, and my piercing of her sphincter unleashed a barrage of encouragement from her.\n\n\"Oh God! Yes! Fuck me with your tongue baby! Ooh! I love that. Eat my ass. Eat my pussy baby!\"\n\nNot being one to disappoint, I made oral love to my wife's backside for several minutes, all the while stroking my own erection. I reveled in the feeling of her smooth anus as it clamped around my invading tongue; her cock growing and stiffening in anticipation of the main event. I could hear Ellen's running commentary on how hot and dirty our foreplay was.\n\n\"I love how you eat me Clark and I don't want you to stop baby, but we need to give the people what they want\" Trish said, her hand gently stroking her now fully erect cock. \n\nExtricating myself from between Trish's legs I took position on my back on the blanket and opened my legs in invitation to my wife's cock.\n\nTrish positioned herself between my legs, ready to take me missionary style. \"Ellen, sweetie, why don't you come over here and get Aunt Trish's cock wet and ready for your dad\" Trish suggested.\n\nEllen knelt next to me and took her aunt's cock in her mouth. She sucked and licked it for a couple of minutes before releasing Trish's pleasure pole, leaving it wet and shiny with her saliva.\n\n\"Thank you sweetie. Are you ready for this? Are you ready to watch me make love to your daddy?\"\n\n\"God yes! This is so fucking hot!\" Ellen exclaimed, her right hand clawing at her wet pussy. \n\nTrish placed her swollen cock at the entrance of my ass, the mushroom head nudging me open. Trish kissed me, her tongue making a quick swipe inside my mouth, and said \"I love you so much baby.\"\n\n\"I love you too Trish. Make love to me\" I responded.\n\nTrish slowly pushed her hips forward. My asshole relaxed, accepting the now familiar intruder into my body. Inch by inch Trish's cock pressed into my accepting cavity until her pubic bone was pressed against mine and her balls pressed against my perineum. My already hard cock became even harder as we became one.\n\nI looked around at the others, hoping to etch this moment permanently into my mind. Ellen was still kneeling next to us. Her knees were wide apart as one hand furiously stroked her wet slit and engorged clit with both hands. Whitney was behind Ellen, her arms wrapped around my daughter massaging Ellen's firm breasts and erect nipples while she rubbed her own breasts on her friends back. Tina was on her side, her head propped up as she watched, through glazed over eyes, her wife fuck her husband. Her left leg was bent at the knee and Mark was busy thrusting two of his fingers into his mom's sloppy wet bald pussy. Mark was on his side behind his mom. I could see his hips thrusting and I assume he was sliding his big, hard cock in between his mom's ass cheeks.\n\n\"I love giving myself to you like this\" I confessed as I gazed into Trish's eyes.\n\n\"I'm glad you enjoy it baby. I love to be inside you. I wish we could be like this all the time.\"\n\nTrish started to pull out of me and then slid back in. She began to make gentle love to me. I wrapped my legs around her waist and crossed them at the ankles, allowing me to thrust back against her. Trish propped her upper body up on her arms and rolled her hips up and down causing her cock to slide in and out of my ass. Every now and then she would lower herself to me and drag her nipples across my chest as she kissed me. \n\n\"Look at his cock! It's oozing!\" Whitney cried.\n\nIt was. An almost constant stream of pre-cum oozed from my cock just like it always did when she fucked me.\n\n\"You two are so beautiful together\" Ellen whispered breathlessly, her self-stimulation bringing her to the verge of cumming.\n\n\"I want to ride you honey\" I said.\n\nTrish kissed me deeply before withdrawing from me and laying on her back. I straddled Trish and reached behind me to guide her spear into me only to find another hand already stroking Trish's cock and aiming it at my ass. It was Ellen. \n\n\"I've got it daddy. Go ahead and have a seat\" she urged. Ellen shifted slightly to get a better view.\n\nI lowered myself onto my wife's tool as my daughter watched.\n\n\"Oh my God! That is sooo fucking hot!\" she exclaimed as Trish's cock spread me open and slid into my relaxed, lubricated asshole. Ellen pulled her left hand out of her pussy and reached under me between Trish's legs. She slipped a couple of her pussy juice lubricated fingers into her aunt's ass.\n\nMy mouth was clamped to Trish's and she almost screamed into my mouth when her niece's digits probed her rectum. Trish began to buck against the phalanges in her ass so I sat up to get better penetration from Trish's cock. \n\nWhitney took this opportunity to get up from behind Ellen and get more intimately involved in the action. On hands and knees she crawled toward Trish and briefly sucked each nipple before kissing Trish lustfully. Whitney then swung her right leg over Trish and straddled her face. She lowered her hairless pussy to my wife's mouth while she looked at me and took hold of my cock.\n\nAfter Trish licked and sucked her pussy for a couple of minutes Whitney groaned \"Is there anyone in this family that can't eat pussy? God you are good Trish!\" Tina and I were the only ones who hadn't eaten Whitney. But that would change.\n\nEllen continued to drive her fingers in and out of Trish. Trish's hips continued to thrust and buck against Ellen's hand, making it unnecessary for me to do anything to keep Trish's cock pistoning in and out of me. I let Trish do all the work. Whitney had her left arm around my neck while she kissed me and tugged on my drooling cock with her right, her hips grinding against Trish's talented mouth and tongue. I cupped Whitney's breasts in my hands, my thumbs flicking up and down over her pronounced, erect nipples. Trish must have been doing a hell of a job on Whitney's pussy as the young blonde's breathing became short and erratic. \n\nI broke from Whitney's mouth so I could see what was happening on the other side of the blanket. Whitney placed her head on my right shoulder, her face turned toward her boyfriend and my wife. \n\nTina was on top of Mark, bouncing on his very hard cock, her hands mauling her own breasts while Mark stroked her clit with a thumb. Tina seemed to be staring into her son's eyes, but she had a very distant look on her face, her eyes glazed over in a combination of satisfaction and lust, overcome by the physical and emotional sensations of being thoroughly fucked by your own child. \n\nMark glanced in his girlfriend's direction. A broad smile crossed his handsome face. I could not see Whitney's expression, but I imagine her eyes were closed, mouth slightly open, in a state of total, overwhelming sexual bliss.\n\nThe sensations of a cock in my ass, a tender young hand tugging on my shaft, and the firm youthful breasts in my hands caused my mind to drift away from Mark and Tina and focus on what was happening in our own foursome.\n\nEllen's voice interrupted the wordless chorus of pants, gasps, and moans. \"Oh my God daddy! Just watching Aunt Trish fuck your ass is making me come! This is so fucking sexy! I'm cumming daddy! I'm cumming daddy! Oooooh FUUUUUCK!\" As Ellen came on her fingers she collapsed against me, her torso pressing against mine as her mouth sought out Whitney's. As the two kissed Whitney's grinding on Trish's mouth became more convulsive and I heard her moan into my daughter's mouth as she came. I could feel Ellen's arm moving against my back as she continued to finger fuck Trish's ass while Whitney continued to tug on my pole. The direct stimulation of Whitney's hand and Trish's cock coupled with the kinkiness of the situation pushed me over the edge. \n\n\"I'm gonna cum honey. Fuck me Trish, cum with me. Cum with me!\" I implored.\n\nI felt Ellen's hand thrust even harder, Whitney's stroking become more urgent, and Trish's bucking more intense.\n\nAnd then I exploded. My cock was like a cum cannon, shooting it's payload onto Whitney's belly. My sphincter convulsed and spasmed around Trish's cock. Trish made a final powerful upward thrust into me. I felt her cock swell in my rectum before it pulsed and spurted, delivering her honey deep inside my body. I could feel Ellen's hand jabbing into Trish's butt, slowly withdraw, and jam in again. Trish reacted by thrusting into me, duplicating Ellen's rhythm. Whitney's stroking transitioned to a massage as my cock began to soften in her hand. Her chest was still firmly pressed against mine as she and Ellen continued their passionate kiss.\n\n\"Oh! Oh! Oh! YEEESSSSS!\" Tina hissed as she came on her son's cock. \"Mommy's cumming on your cock baby! You're making mommy cum! Ooooh FUUCK!\"\n\nTina never stopped impaling her luscious pussy on her son's meat as she came, her velvety tunnel continuing to massage Mark's stiff meat.\n\n\"Oh mom! You feel so fucking good! I'm gonna cum! I'm gonna cum in your pussy!\" Mark cried as he grabbed Tina's hips and tried to hold her tight to him.\n\nTina was quick to escape his grasp, lifting her shapely body off of his. \"You can't cum inside me baby\" she said as she positioned herself between his legs. Tina took Mark's engorged head between her lips and stroked his rigid shaft with her hand until he came in her wet sucking mouth. I could see Tina's throat working as she swallowed her son's precious, virulent cream.\n\nMark was nearly delirious, and could only utter \"Oh my God!\" over and over. When Tina had devoured all of her son's sperm-laden semen, she lay on top of him and engaged him in a lustfully passionate kiss, slowly transitioning to the gentle, emotional kiss of lovers.\n\nWhitney was now on her back, her legs wide spread and Ellen was between them rubbing her mound against Whitney's, their breasts mashed tightly together as they lovingly kissed each other's face, neck and lips. \n\nTrish's spent cock slipped out of my clutching ass. I did my best to clench my ring tight in an attempt to keep my wife's syrup inside of me. I felt empty without her inside of me, and a groan of disappointment escaped my lips.\n\nI gently kissed Trish's lips as I gazed into her mesmerizing eyes. \"That was incredible honey. I love you. I love you so very much\" I whispered. I continued to gently kiss Trish, basking in the glow of the love our family had just shared.\n\nThough overpowered by the sound of the waterfall, the backyard was filled with whispers, moans, and the sounds of sexual satisfaction and enduring love.\n\n\"I love you mom.\"\n\n\"That was so hot.\"\n\n\"You are so beautiful. I love you.\"\n\n\"Thank you baby.\"\n\n\"I can't believe that just happened.\"\n\n\"I haven't cum like that in a long time.\"\n\nI felt a hand on my back, and then a pair of lips on my cheek. It was Tina. I separated my lips from Trish's and sat up, allowing Tina to kiss Trish's lips. Tina then rose slightly and turned to me. Her eyes expressed a myriad of emotions as I have learned only she can. I saw lust, concern, love, shame, embarrassment, joy, and contentment. I gently held her chin and placed a tender kiss on her lips. When I moved away slightly, I saw a tear trickle from her eye.\n\n\"Tina, honey, are you OK?\" I whispered.\n\nShe nodded and answered \"I feel so selfish, like I neglected you today. I'm sorry.\"\n\n\"You have nothing to apologize for. Things happen sometimes. I enjoyed watching you enjoy yourself today. You and Mark are beautiful together.\"\n\n\"It may have been the sexiest thing I have ever seen\" Trish added reassuringly.",
        "Tina looked back and forth between Trish and I. \"So you're OK with it? With what happened?\"\n\n\"Of course honey. We already agreed we would be, right?\" I answered. \n\n\"Are you OK with what Clark and I did with Ellen and Whitney?\" Trish inquired.\n\n\"I was a little preoccupied, but the four of you put on one helluva show! Yes, I'm very much OK with it\" she answered. \"Mark would like to sleep with me tonight, if you're good with that.\"\n\nTrish and I looked at each other and smiled. \"Have fun!\" we answered in unison.\n\nTina kissed Trish and me in turn. \"We'll be in the apartment bedroom. I love you both so much\" she said emotionally before rising to take Mark's hand and led him, naked, into the house.\n\n\"The three of you really are in love, aren't you?\" Whitney asked, almost in dismay.\n\n\"We are. I simply cannot imagine not sharing my life with Clark and Tina. I'm a very lucky woman\" Trish answered.\n\n\"And I'm a very lucky man. I love Trish and Tina with all of my being.\"\n\n\"You were right daddy. I didn't know what I thought I knew. I had no idea how deep your relationship with mom and Aunt Trish is. I think it's beautiful. And I think it's beautiful the way you give yourself to Aunt Trish\" Ellen confessed.\n\n\"The three of us are equals, and I would never deny your mom or Aunt Trish anything that might please them\" I answered.\n\n\"Aunt Trish, would it please you to sleep with me tonight?\" my sly daughter asked.\n\nTrish's face broke into a wide smile as she saw how my daughter just played me. \n\n\"It would please me very much!\"\n\nWhat could I do? I had just told my daughter that I would never deny my wife pleasure. \"Enjoy yourselves\" I said with a knowing smile.\n\nI lifted myself off of Trish so she and Ellen could retire to my daughter's bedroom for the evening.\n\n\"I guess that just leaves the two of us young lady\" I said to Whitney. \"Care to spend the night in bed with a tired old man?\" I asked.\n\n\"Not really\" she said, causing my heart to sink a little. \"I want to spend the night in bed with you! Come on, let's go upstairs\"\n\nI walked hand in hand into the house with my son's eighteen year old girlfriend. Still holding hands we silently climbed the steps to the master suite. At the edge of the bed I took Whitney in my arms and held her firm naked body close to me, and kissed her on the forehead. I reached behind me and pulled the sheets of the king size bed down. Whitney climbed into the expansive bed first, reclining in the middle of the mattress on her left side with her right leg drawn toward her chest with the knee bent. Her curly blonde hair cascaded over her shoulder, covering a portion of her right breast. All I could do was stand and stare at the sight of this ridiculously attractive and sensual creature in my bed.\n\n\"Are you coming to bed Mr. P?\" she asked, snapping me out of my trance.\n\nI slid between the sheets, scooting as close to Whitney as I could and pulling the covers over our bodies.\n\nWhitney placed her right arm around my neck, and her right leg over my thighs. She kissed me sweetly on the lips. \"Thank you Mr. P\" she said.\n\n\"For what?\" I asked.\n\n\"For opening your home and your family to me. You and Mrs. P always make me feel welcome, it means a lot.\"\n\n\"No need to thank us for that. It's obvious that Mark and Ellen are both in love with you. As long as that's the case, you're family\" I said.\n\n\"I love both of them too. I guess you and I are a lot alike that way, huh?\"\n\n\"I guess we are\" I confessed.\n\nWhitney closed her eyes and showered my lips and cheeks with delightful little kisses.\n\n\"And thank you for doing what you did with Aunt Trish today. You licking her asshole and letting her fuck you like that, well, it was hotter than I ever would have imagined. I really enjoyed it.\"\n\n\"Not as much as I did\" I confessed.\n\nShe smiled. \"I enjoyed your cock in my pussy too. You're an even better fuck than I had hoped.\"\n\n\"I absolutely loved making love to you too, Whitney. You are very enthusiastic and passionate. But I've got to ask, why would you want to have sex with me? You are a beautiful and vibrant young woman and my son's lover, why would you want to sleep with your boyfriend's dad?\"\n\n\"That's a fair question Mr. P, and it deserves an answer. I am very much in love with your son. I haven't even thought of another man since our first date. He treated me like such a lady that I just knew I would be his wife someday. The truth is... I need sex. Everyday. I love making love, whether it's to your son or your daughter. Mark knows that when he leaves for the Marines, he takes my favorite cock with him. I tried to reassure him I would be OK as long as I could make love to Ellen, but he knew better. He knew before long I would be looking for a hard cock to fill my pussy. He loves me, and said he would be OK if I found a guy to screw while he was away, but I could tell he was lying. He didn't want some strange guy fucking me, which is why he suggested that I try to fuck you.\"\n\n\"So, this was a test drive of sorts, to see if I could fill Mark's shoes while he is gone?\"\n\nI could see in Whitney's eyes that she was afraid to answer truthfully, and her hesitation in answering served as confirmation. Eventually she did offer a very contrite \"Yes\" and lowered her eyes from mine, embarrassed by the situation she had put me in.\n\n\"So how did I do?\" I asked. \"Did I pass?\"\n\nWhitney's head snapped up and she smiled into my eyes at my question. \"With flying colors!\" she squealed. Whitney pressed her lips to mine before saying \"I have a couple of questions I need to ask, Mr. P.\"\n\n\"Fire away sweetie.\"\n\n\"The first one is kind of embarrassing. Buuut... my home life isn't so good, and... so... would you mind... would... would it be OK if I called you... if I called you daddy?\"\n\nI was moved by the childlike innocence of her tone, and surprised by the question itself.\n\n\"If you're comfortable calling me that, I'd be honored to have you call me daddy.\" I kissed her forehead. \"What's your second question?\"\n\n\"Daddy, will you please lick my pussy?\"\n\nI answered by moving faster than a man my age has ever moved. I threw the covers back and positioned myself between her toned, athletic legs. Whitney spread her legs and placed them behind her arms. Her sex was on open display before my lusting eyes and I gazed upon the most inviting pussy I had ever seen. Whitney's pussy, like my wife's and daughter's, was devoid of pubic hair. Her clit was already engorged and her ample, prominent lips resembled a blossoming flower. A trickle of clear fluid leaked from her pussy hole, making it's way toward her tight little rosebud of an asshole. I waited for the rivulet of fluid to reach her pucker before I lowered my head, extended my tongue, and licked her from the bottom of her asshole to her clit in one continuous motion, causing her to moan.\n\nShe tasted divine.\n\nI wanted to bury my tongue in her weeping gash, but could not resist eating her ass first. I pointed my tongue and circled the rim of her anus with the tip numerous times, making sure to remain clear of her entrance. Eventually I could no longer resist penetrating her butt hole and I pressed the tip of my tongue against her tight opening.\n\n\"Ooooh! Daddy! That's so nasty!\"\n\nI continued to force my tongue into her tight little hole, soliciting groans from Whitney's throat.\n\n\"That is sooo good! Oh my God! Daddy! Fuck my ass with your tongue!\" she cried.\n\nI plunged my tongue in and out of her ring, reveling in the smoothness of her sphincter on my tongue and the tanginess on my tongue.\n\n\"That is incredible! Why hasn't anyone done this before?! Oh, yes! Yes! YESSS!\" She hissed.\n\nWith my tongue still stroking in and out of her rectum I began to stroke her clit with my right thumb, unleashing a torrent of cursing from her mouth and a steady stream of lubrication from her pussy.\n\nI withdrew my tongue from her backdoor and placed my mouth over her throbbing clit. I inserted two fingers of my right hand into her gushing slit. As I sucked on her swollen clit I slid my fingers in and out of her very wet pussy. Whitney's hands were on the back of my head, pulling my face tightly against her crotch. I briefly slipped the middle finger of my left hand into her cleft to lubricate it, then began to insert it into her asshole. She went absolutely wild as my finger slid deeper and deeper into her ass. Once I had my knuckles pressed against her ass cheeks, I began finger fucking her ass in earnest. When I slid the digit out of her ass, I slid the two fingers into her pussy. I alternated this thrusting all the while sucking on and flicking her clit.\n\nI was starting to tire from being in this position and decided it was time to make her cum. I curled the fingers of my right hand, searching for her spongy G spot with my fingertips. \n\n\"FUCK!\" she yelled, indicating I had indeed located the spot. Still finger fucking her ass and sucking her clit, I strummed her G spot with my fingertips.\n\n\"What are you doing to me?! Oh my God! What are you doing!? Don't stop! Don't stop! Please don't stop!\"\n\nI was happy to oblige the young woman, and didn't stop anything that I was doing. \n\nMinutes later Whitney alerted me to her pending orgasm. \"I'm gonna cum daddy! Oh my God daddy, I'm gonna cum. I'm gonna cum! Oh! FUCK! What's happening?!\"\n\nAnd then she came. Her entire body convulsed as she experienced her first ejaculating orgasm. She was squirting all over my hands and face.\n\n\"YES! YES! YES! OH FUUUUUUCK!\" she screamed.\n\nI tried to catch all of her cum in my mouth, but there was just too much. Her ejaculate was on my back, in my hair, and all over the bed.\n\nIt was obvious she had never squirted before. Hell, I had never made a woman squirt either. It was pretty damn cool!\n\nI felt Whitney pulling me toward her. I moved up her luscious body until we were face to face. Whitney kissed me wildly and licked the residual ejaculate from my face.\n\n\"What did you do to me daddy? Oh my God that was INSANE!\"\n\nWhitney's hips were rocking and bucking, and before long my achingly hard cock slipped into her velvety smooth tunnel for the second time.\n\n\"Ooooh YES! Fuck me with your cock daddy!\"\n\nI was so turned on by our passionate oral session that I was already on the verge of cumming, and I told her so.\n\n\"I'm not gonna last long sweetie.\"\n\n\"I'm gonna cum again too. Fuck me daddy! Fuck me!\"\n\nI pounded her teenage pussy with all that I had, bumping her clit with my pubic bone on every thrust.\n\n\"OhI'mgonnacum! I'mgonnacum!\" her words came so fast that they ran together. \"Aaaaaah! YES!\" she exclaimed as her pussy erupted in spurts again, this time all over my cock.\n\nHer orgasm pushed me over the edge. I pulled my cock out of her quivering pussy, gave it a couple of strokes, and came all over her youthful body. One glob of cum landed on her right tit, another just above her belly button, a third, fourth, and fifth created a puddle just below her navel until it ran and pooled in her belly button.\n\nI licked my cum off of her breast and out of her belly button. I slipped my cock back into her dripping wet snatch before pressing my lips to hers. I pushed my tongue into her mouth and allowed my cum to roll down her tongue. We swished the cum around with our tongues before we each swallowed our share.\n\n\"Oh my God daddy, what just happened?\"\n\n\"You squirted, sweetheart.\"\n\n\"That was amazing! Oh my God I've never done that before. Do you think you can teach Mark how to do that?\" Whitney inquired.\n\n\"I think it would be more enjoyable if you taught him how\" I answered.\n\nWhitney smiled at me as my answer sank in. \"You're probably right\" she said.\n\nWith Whitney snuggling me as close as possible, we fell asleep.\n\nI awoke in the morning to the unmistakable sensation of having my cock sucked. When I opened my eyes I was staring directly at Whitney's pussy. Acting on instinct, I gripped Whitney's ass cheeks and plunged my tongue into her enflamed slit.\n\nThe fog of sleep slowly subsided and I began to realize something was wrong. Whitney didn't taste quite the same as last night, and on second glance I noticed her pussy lips were smaller.\n\n\"Whitney?\" I asked.\n\n\"No daddy, it's me! Surprise!\"\n\nIt was my daughter and she returned to enthusiastically devouring my cock.\n\n\"What do you think you're doing?\" I asked, stunned by the present situation.\n\nEllen didn't answer for a few seconds, preferring to slurp and suck on my cock. As she transitioned into the cowgirl position she answered \"Getting us both ready...\" she paused for effect, then impaled herself on my erection \"...to FUCK!\""
    ],
    "authorname": "npanxx",
    "tags": [
        "middle age",
        "tranny"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/my-journey-ch-05"
}