{
    "title": "Yours Ch. 01",
    "pages": [
        "Characters are over 18 and fictional.\n\nThis is my first attempt at a story of this nature, and I'm still deciding on whether or not to write a second chapter.\n\nAll comments, complementary or critical, are greatly appreciated.\n\n==Edit==\n\nI don't usually change things I've already uploaded, but as I've decided to continue this story I've cleaned up a few mistakes I noticed upon re-reading, and some that were helpfully pointed out to me.\n\nI'd like to thank everyone for the supportive comments this story has received. My writing won't improve if I don't get feedback, and knowing what works and what doesn't is a great help.\n\nSo thank you.\n\n- BB\n\n*\n\nI hated my twin sister's best friend.\n\nHer name was Jessica.\n\nWhen we were younger, she tormented me endlessly.\n\nShe mocked me for my skinny frame, my slightly higher than average voice, and for a dozen other apparently obvious flaws. This continued through all the years I'd known her. Recently, her favourite comment was about the fact that I was 18 and had never kissed a girl.\n\nI blamed this partly, but not entirely, on her. Every time I met her, my confidence took another hit. Even if she had a little Friday-night sleepover with my sister, even when our families went on summer trips together, even when we were just supposed to be hanging out and being civil to each other, she would just never stop with the criticisms, the insults, the stupid little nick names.\n\nIt felt like she'd set me up as a kid for my life as a teenager. All the way through grade school and high school, I'd been picked on in some way or another. She wasn't always the source of the insults, but she usually inspired them. I was the designated whipping-boy pretty much my whole childhood, all thanks to her. I had friends, sure, and not everyone hated me. But everywhere I went, every new class, every new group of people, she was there. She and my sister were always the among the most popular, and Jessica lead them against me.\n\nOver the years I could feel it having an effect on me. I didn't like going out much, I hated meeting new people. I was shy, quiet, withdrawn, and lonely. Like I said, I blamed it on her that I hadn't had a girlfriend before. There's only so much social rejection a guy can take before he just stops trying.\n\nI couldn't understand why she seemed to hate me so much. Over the years I learned that I wasn't special, she just seemed to hate most people, and I happened to be around her a lot. She really was just a bitch, in general.\n\nAs we got older, her insults got better. And by better, I obviously mean worse. They went from being general to being painfully specific. She picked up on my cracking voice, my sparse peach-fuzz facial hair, and my growth-spurt induced clumsiness. When we hung out with other people in a group, she'd point out how I got nervous when I talked to girls, and she'd constantly belittle me in front of new people.\n\nWhen we were younger, I hated her. Like, really hated her. I wished she was dead. I'd grown up a lot since those days, emotionally. I felt that I was more stable. I still didn't like her, but at some point I'd tried to stop paying attention to her constant hostility. These days it had calmed down a lot. She still never had a civil word to say to me, but over the years it'd been reduced from constant mockery to the occasional snarky remark.\n\nIt didn't help that she went from being a cute little girl to a gorgeous young woman. She had a beautiful, perfectly symmetrical face, with big green eyes and soft, flawless skin. She also developed quite large D cup tits pretty young, which made her even more popular. Both she and my sister took good care of their bodies too, jogging together most days after school.\n\nAnd she was tall. I grew slower than her, and she'd delighted in towering over me while she did. It lasted way longer than it should have, but thankfully not forever. At 18 I was an even 6 feet, and she was around 5'9 or 5'10.\n\nI knew, objectively, and through people telling me, that she was attractive, but I never felt that way about her. I felt nothing but distaste and disgust for her.\n\nMy parents never noticed, even when she'd insult me to my face when we were young. They thought it was just normal kid stuff. Rose, my twin sister, knew about it of course, but it was never as bad when she was around. I wasn't alone with Jessica very often, but she'd really ramp it up when we ever were. I started spending less and less time with the two them.\n\nI think that was one of the worst things about the whole ordeal. Rose and I used to be really close, but we'd grown apart the more Jessica had become a part of her life. By the time we were 18, we were like strangers living in the same house, going to the same school, but hardly saying more than a few words to each other a day.\n\n==\n\nIt was a Saturday, and I'd woken up late.\n\nBy the time I got showered and got downstairs to make myself breakfast, Jessica was already there. I usually tried to get something to eat and go back upstairs to spend the day on my laptop before bumping in to anyone, but I'd stayed up too late the night before and ended up sleeping in.\n\nI walked towards the kitchen. She'd be in there by now. She came here every Saturday morning, ate breakfast, then hung out here all day with my sister, only occasionally leaving to exercise or shop or something.\n\nMy parents welcomed her as if she lived here. They didn't notice how little time I'd spend in the rest of the house on Saturdays.\n\nI walked in to the kitchen and she was there, eating some toast. Our eyes met and her face lit up with that little look of sadistic glee she reserved just for me. The entrance of her favourite toy, her favourite victim.\n\n\"Morning, faggot,\" she said.\n\nI ignored her. At this point, it had been maybe months since I'd actually spoken to her. I'd managed to stay out of her way all Summer, and even though we'd been back at school for a while, we didn't share any classes, so I never had to see her. She'd forced me into the life of a recluse just to avoid her at home, seeing as I didn't have any friends I was really close enough to that I could hang out with outside school.\n\n\"I said good morning you little twerp, what are you, deaf and ugly?\" she said.\n\nA classic insult. Most of these had lost their sting through re-use, but it wasn't so much about what she said any more. It was about her attitude. Her constant, hostile, domineering tone. Her smug arrogance, and condescension.\n\nI was walking over to the fridge to get out the orange juice. I opened it and peered inside, trying to look like I really didn't care about her. And then, on an impulse, I just said,\n\n\"Go fuck yourself, Jessica.\"\n\nIt stunned her for a second, but she was quick to recover.\n\nI'd spoken back to her before, obviously, but I could never keep up with her. She was always too quick-witted, too shamelessly unrelenting for me to ever gain any ground.\n\n\"Whoa, you got me there, kid, some real original stuff.\" she said.\n\nShe called me \"kid\" sometimes, even though I was older than her. Just another of her many little ways of being condescending to me.\n\nI got out a glass and poured myself some juice.\n\n\"But unlike you,\" she continued, \"I don't need to fuck myself; I've got someone to do that for me.\"\n\nHer boyfriend was an asshole of the highest degree, but he hadn't ever really targeted me specifically. Still, he was tall, muscular, and handsome, and if that isn't a good enough reason to hate someone, then I don't know what is.\n\nAs I drank my juice, a dozen half formed insults and comebacks crept into my head, but as usual I didn't have the skill to get them out in time.\n\n\"I mean, if you want someone other than your right hand to fuck you for once, I could maybe fix you up with a friend of his. I'll ask him if he knows any other faggots.\" she said.\n\nAs usual, the frustration and unfairness of the situation started to get to me, but I kept it from showing. I slowly finished my drink and made my way across the room to the door. She stood up and moved to intercept me.\n\n\"Oh, no clever comeback this time? Just gonna run way?\" she said.\n\nI stopped.\n\n\"You know,\" I said, trying to appear calm, \"I do so enjoy these bitchy chats with you, but I've got something much more fun to do right now. Like stab myself in the face with a pencil.\"\n\nThis was a line I'd been working on for a while.\n\nAgain, she seemed taken aback. I tried to continue to the door, but she moved completely in my way.\n\n\"You should just be grateful a girl as hot as me is even talking to you. It's probably not going to happen again for a long time.\" she said.\n\nShe stared into my eyes, daring me to challenge her. I met her gaze.\n\nIt was strange. She'd used the \"block the door\" trick a lot when we were younger, when she was much taller than me, but now I had the height advantage. I didn't exercise much, and I was slim, but I probably had enough muscle to have the weight advantage too. If it came to a physical struggle, I could probably best her. Force her to the floor, or at the very least push past her. I tried to tell myself this. I tried to force some confidence in myself.\n\nBut this wasn't a physical struggle; it was a psychological one.\n\nAnd, as always, I was the one that looked away first, staring at the floor to avoid her eyes.\n\nShe let out a harsh laugh.\n\n\"See you around, faggot.\" she said.\n\nShe turned and left, heading towards the living room where my sister was probably watching TV.\n\nI fucking hated her. The years of humiliation and abuse came flashing back to my mind. My heart sped up and my fists clenched. Good God, how I fucking hated that woman. I wanted to smash something, anything. I grabbed a glass from the table and gripped it tight, my knuckles turning white.\n\nI wanted so badly just to throw it to the floor, to see it smash. I wanted to destroy something.\n\nBut no.\n\nI did what I always do, and repressed it. I took a deep breath and let out a shuddering sigh. I fought my rage back to sleep, and put the glass gently back on the table.\n\nI grabbed some snacks and spent the rest of the day in my room, trying to forget the conversation.\n\n==\n\nThe next time I saw her was a few weeks later, on a Friday night. It had been a while since Jessica had stayed over, but it used to be the norm. Pretty much every week she'd come over for dinner, then stay the night and all of Saturday.\n\nShe'd arrived late, it was almost midnight and my parents were already in bed. I'd been sitting in at the kitchen table, on my laptop, when she arrived. I stayed in there for as long as I could, hoping she would leave. When I realised she was staying, I wanted to go straight to my bedroom, avoiding her completely. Only problem was, I'd left my laptop charger in the living room, and my battery was running low. If I wanted to maintain my one link to the internet, I'd have to go where Rose and Jessica were now talking alone.\n\nI couldn't decide.\n\nI approached the door to the living room. It wasn't closed all the way, and I could hear them talking. I didn't want to go in. I didn't even want to see her. I felt the familiar flare of nervousness, shame, and fear that was my constant companion throughout my encounters with Jessica.\n\nI just waited outside the door, chastising myself for my cowardice.\n\nI couldn't help but listen.\n\n\"So how come you're not with him tonight?\" asked Rose.\n\n\"We've just been spending a lot of time together, you know? I mean, every Friday night for weeks now.\" said Jessica.\n\nThey were talking about her boyfriend, I assumed.\n\n\"So...you've been fucking, then?\" said Rose.\n\nI instantly felt even worse about what I was doing. This was private.\n\nBut I really wanted to hear this, suddenly.\n\n\"Well, yeah.\" said Jessica.\n\n\"And it...isn't any better?\" said Rose.\n\nJessica sighed.\n\n\"No...it's still not...not great.\" she said.\n\nWhoa, her handsome, popular, 'alpha male' boyfriend was shit in bed?\n\nI couldn't help but smile.\n\n\"I think it might be...\" she trailed off.\n\n\"What?\" asked Rose.\n\n\"It's kind of embarrassing.\" she said.\n\nRose laughed.\n\n\"Come on, seriously, you're not going to tell me?\" she said.\n\nJessica laughed too.\n\nI guessed that they told each other everything, so this was like an in-joke or something.\n\n\"OK,\" said Jessica, \"Well basically it's...uh, I don't really know how to say this...\"\n\n\"Yeah?\" said Rose.\n\n\"I think he might be...a little bit too small.\" said Jessica.\n\n\"Wow, really?\" said Rose.\n\n\"Yeah...I think. I just don't, you know, feel a lot from it. I mean, I've never been with anyone else, so I don't really know, but-\"\n\n\"Wait, wait, how big is he?\" asked Rose.\n\nThere was a pause.\n\n\"Maybe...like...this size?\" said Jessica.\n\nShe was gesturing, but I couldn't see it.\n\nRose burst out laughing.\n\n\"Oh my God, really?\" she said.\n\nJessica was laughing along too.\n\n\"Why?\" she asked, \"Is that not good?\"\n\n\"Fuck no!\" Rose giggled.\n\nI could only assume that this meant that he was hung like a hamster, or something.\n\n\"Wait, is that when it's hard?\", asked Rose.\n\n\"Yeah...\" said Jessica.\n\n\"Wow, that is...not good.\"\n\n\"So...does it just always feel better if it's bigger?\" asked Jessica.\n\n\"Yep.\" said Rose. \"Bigger is always better. Some guys, usually tiny ones, say that's a myth, but trust me, bigger is better. Sorry, but it sounds like your boyfriend is just a needle dick.\"\n\n\"Fuck.\" said Jessica.\n\nThere was a pause.\n\n\"And I guess it doesn't help that he only lasts two minutes and couldn't find my clit with a GPS.\" she said.\n\nThey started laughing again. I took this opportunity to head up to my room, internet or no. I had some stuff to think about.\n\n==\n\n\"Needle dick.\" I murmured to myself.\n\nThat was interesting.\n\nSee, I was a lot of things. I was nerdy, shy, weak willed, socially awkward, and incredibly average in both grades and appearance, but one thing I'd never been was a \"needle dick\".\n\nTruthfully, I'm hung like a horse.\n\nEverything I'd ever learned about sex, I learned from the internet. I mean yeah, I got the Health Ed class, slide show biology stuff, but I mean real sex. And because, like most teenage boys, I was so...interested in the subject matter, my education was pretty well rounded. I knew all about porn-stars, and how they usually represented the most extreme end of the penis-size scale. I knew that the average was around 5 \u00bd inches long, and maybe 3 or 4 inches in girth for this part of the world, and I was pretty far above that on both counts. I knew that there was an ever present debate about whether size actually mattered to women. I'd read reports of women saying that they'd dumped guys for being too small, and of women saying they'd done the same for the opposite reason.\n\nYeah, I knew a lot about penis size. And I knew I had a pretty huge cock. But it wasn't until that exact moment that I actually considered it something to be confident about. I mean, what good is a big dick if you can't even talk to a girl? And I'd read enough forum entries from women claiming to have been stretched to the point of intense pain to know that bigger doesn't automatically mean better, despite what my sister thought.\n\nWhen I'd thought about it at all, I'd just considered my abnormal size to be something I'd just have to deal with. A little problem I'd have to worry about if I ever actually got laid.\n\nBut now it was an advantage.\n\nThis overheard girl-talk was just the beginning.\n\n==\n\nOver the next few days I thought a lot about what I'd heard. I wanted to use my cock, somehow. I wanted Jessica to know I wasn't the weak little nerd she always made me out to be. I wanted her to know that, at least in this area, I was superior to her boyfriend.\n\nBut how?\n\nMy chance came the next time Jessica stayed over, two weeks later. I didn't try to eavesdrop again, but instead stayed in my room, going over the plan.\n\nMy parent's bedroom was actually on the ground floor, and my sister's and mine were at opposite ends of the top floor. When Jessica stayed over, she and Rose shared her bed, even though there was a guest room downstairs too. There was a bathroom between our rooms, complete with bath tub and shower. This was where I would carry out my plan.\n\nI woke up as early as usual, but waited an hour before heading to the bathroom. I knew the girls probably wouldn't be up for a while.\n\nI went in and had a long, hot shower. I spent as long as I could in there, washing my hair over and over again, scrubbing every inch of my body, waiting until I could put the plan into action. We had an electric shower, so I didn't have to worry about wasting the hot water.\n\nAfter almost an hour, I'd had enough. I got out and stared at myself in the mirror. As always, I thought I looked completely average, except for my cock which hung thick and limp between my legs. I'm more of a 'show-er' than a 'grower', so even soft it looked unusually big. When it first started to grow it used to get in the way when I walked, and I worried about people seeing the bulge it made. But I'd switched to boxers over briefs, starting wearing looser pants, and gotten used to it.\n\nI examined it from a few different angles, holding it out and handling my similarly large balls. I guess it did look pretty impressive, if you're in to that kind of thing.\n\nI tried to get myself psyched up for the big plan, tried to force some confidence in myself. I felt good about it.\n\nBut it was taking longer than I thought. I tried to kill time by reading the backs of bottles of my sister's conditioner and hand lotion. Why did girls always seem to need so many bottles of crap?\n\nFinally, after a long wait, I heard my sister's bedroom door opening.\n\nJessica coming to use the bathroom.\n\nI quickly took my stance; completely naked holding my cock in my hand, in full view of the door and pointed towards the toilet bowl.\n\nI was trying to make it look like I was just using the bathroom after a shower. I'd already pissed, it was just about showing it to her. I'd left the door unlocked and ajar, so she wouldn't think anyone was inside.\n\nI started to get more and more nervous as I heard footsteps approach.\n\nI felt my heart freeze in my chest when the handle was pushed down.\n\nIn this split second, I realised how incredibly stupid this whole thing would be if it was my sister that walked in, and how stupid I was for not considering this possibility.\n\nI relaxed somewhat when the door paused after being pushed only slightly, and I heard Jessica yawn.\n\nHere we go.\n\nI looked down at my cock, and tried to look natural.\n\nI heard the door open, and then...\n\nSilence.\n\nI turned my head slowly.\n\nIt was Jessica, wearing nothing but a long t-shirt.\n\nShe was staring at my limp cock, her eyes wide. She stood for a few seconds, just staring, not reacting at all.\n\nI broke the silence.\n\n\"Uh...do you mind? I'm trying to piss, here.\"\n\nI shook my cock slightly to illustrate the point.\n\nShe gasped suddenly, and met my eye. Her hand went to her mouth in an almost lady-like manner, and she quickly backed out of the room and slammed the door.\n\nI heard my sister's door open, then slam as well.\n\nI let out a huge sigh and let go of my cock, stretching my arms up.\n\nI'd done it. My little exhibition mission was a success. We'll see how much she insulted me now, knowing that my cock was so much bigger than her boyfriend's.\n\nI put my hands on my hips, smiling, and thought about my victory. I got that size was, like, a measurement of manhood for some people, but I didn't really get it until then. It really felt good to have her look at me like that.\n\nI remembered the look on her face, the complete shock, the almost panicked look in her eye as she backed away.\n\nI thought about her long, smooth legs, only the very top of her thighs covered by the t-shirt she'd been wearing. I thought about her big, perky tits, how the two points of her nipples were clearly visible against the thin fabric.",
        "For the first time in my young life, I saw Jessica in a completely sexual light.\n\nI looked down at my cock.\n\nIt was rock hard, my entire ample length pointing straight out from my body.\n\nI quickly grabbed some hand lotion from a nearby shelf and smeared it all over my hands. I started stroking my cock with both hands, thinking about her face and body. I thought about her shock, about the open mouthed awe. Other images of her started popping in to my head, memories of how her tits looked in a bikini when our families would go to the beach together, or of her soft full lips wrapped around a straw.\n\nI'd always hated her so much that I'd never considered these things so hot until now.\n\nI jerked my cock faster, and faster, and within a few minutes I was having the most intense orgasm of my life. Shot after shot of my cum splattered against the toilet bowl. My knees shook with the pleasure. I let out an involuntary grunt, and I had to put a hand against the wall to steady myself. When the last few spurts of cum were finished, I took a step back and sat on the edge of the tub.\n\nI just sat for a few minutes, thinking about what had just happened.\n\nThen, because I didn't know what else to do, I took another shower.\n\n==\n\nJessica had left about an hour after our encounter, which was definitely unusual. When my dad asked Rose about it, she said,\n\n\"I don't know, she just rushed out this morning. I guess she has something to do.\"\n\nThat week at school I didn't see Jessica at all. It wasn't that unusual, but I'd occasionally see her around, only to be flipped off or something equally juvenile. I was eager to see how she'd react now.\n\nEvery night that week I jacked off, both to the memory of Jessica, and to as much porn containing a similar \"big cock reaction\" scene as I could find, which was disappointingly few. I bookmarked a few of the least fake looking \"Wow!\" moments, but none of them compared to the real thing.\n\nLooking back, it made sense that I somewhat fetishized the whole \"reveal\" thing. It was literally the only sexual thing to have happened to me at that point.\n\nAnyway, apart from my porn preference, nothing else changed at first. But that Thursday, my sister wanted to talk to me.\n\n\"You don't mind if Jessica stays over again tomorrow, do you?\" she asked.\n\nI didn't really know what to say to this. It was the first time I'd been asked in a while. My opinion didn't usually matter.\n\n\"It's just,\" she continued, \"I know you two don't get along very well. I mean, that's why I hardly ask her to sleep over any more, I just couldn't put up with you two bickering all the time.\"\n\nI hadn't realised that was why she'd been spending less time here. Well, that plus her boyfriend.\n\n\"But she's been acting really weird lately, and she won't say why.\" she said, \"I think if I can get her over here, she'll be willing to open up a little more. She usually does when she stays over.\"\n\nShe smiled at this, and I smiled too, because we were probably remembering the same conversation they'd had.\n\nThe truth was, I'd never wanted to see Jessica so much in my life, which isn't actually saying a lot considering how much I hated her. But I made a show of it anyway.\n\nI sighed.\n\n\"That's two weeks in a row that I'll have to stay in my room all night.\" I said.\n\n\"I know, I'm sorry,\" she said, \"I'll owe you one, I promise.\"\n\nI sighed again.\n\n\"Fine, I guess.\"\n\nShe smiled.\n\n\"Thanks, bro.\" she said, punching me lightly on the arm.\n\nAfter she left, it occurred to me that it had been a long time since I'd really spoken to Rose like that. I realised that my weird sexual plans with Jessica seemed to accidentally improve things with my sister.\n\nI chose to take it as a good sign.\n\n==\n\nThe next day, Jessica arrived a bit earlier, around 10 pm. I was once again in the kitchen with my laptop, my charger left in the living room. I was aiming for a repeat of the first night, and I planted the charger so I'd have an excuse if I got caught. After leaving them alone for a few minutes, I crept out towards the living room, trying to hear their conversation. I wanted to see if she'd bring up our little meeting.\n\nThey were talking about nothing relevant, at first. Their friends, their teachers, boring school shit. I was waiting outside for about half an hour when they finally started talking about sex again. By this point I was sitting beside the door, leaning against the wall and incredibly bored.\n\n\"So...how have things been lately? You know, sex wise.\" asked Rose.\n\nI turned quickly, and realised that, because the door wasn't closed all the way, I could actually see through the gap at the hinges a little bit. I realised I looked like a stereotypical peeper hiding at a keyhole, but it was perfect. I could just about make them out sitting sideways on the sofa, facing each other.\n\nJessica sighed in answer to Rose's question.\n\n\"Still pretty bad...in fact, even worse now.\", she said.\n\n\"Worse?\" Rose probed.\n\nJessica ran her fingers through her hair.\n\n\"Yeah...I was on the internet a few days ago. I wasn't looking for it or anything, but I saw a...a penis. A picture of one, I mean.\" she said.\n\nRose just waited.\n\n\"It was only for a second, I swear, I looked away as soon as I could.\" said Jessica quickly.\n\nIt occurred to me that she was actually talking about seeing my cock, but obviously didn't want to tell my sister that.\n\n\"So what? Calm down, it's just a little porn. Nothing to be embarrassed about.\" Rose said, laughing.\n\n\"Uh, yeah, but you know I don't look at that stuff.\" said Jessica, \"I mean, I don't even really...\"\n\nShe trailed off, and was silent for a few seconds.\n\n\"Yeah, and you're like the only person I know who doesn't. It's so weirdly old-fashioned of you.\" said Rose.\n\n\"I know, I just...But anyway, this guy in the picture. It was...uh...big. It was soft, he was just holding it, but it...it was just so...thick! And long too...\" said Jessica.\n\nHearing her describe my dick like this was really turning me on. She was clearly impressed by it.\n\n\"OK, so you saw a picture of a big cock. It's pretty much impossible to go on the internet without seeing one these days.\" Rose laughed, \"It's not like it makes the one you're getting any smaller.\"\n\nJessica sighed again.\n\n\"It's just...I may have actually...over-estimated when I talked about him last time. I said it was like this.\"\n\nShe held her thumb and forefinger apart, from here it looked like she was indicating maybe four or five inches.\n\n\"But it's really more...\" she held up her pinky, \"Like this.\"\n\nThe girls were soon laughing their asses off, and I had to try so hard not to join in. \"Needle dick\" really wasn't an exaggeration.\n\nThey kept talking after they'd calmed down.\n\n\"I mean,\" said Jessica, \"I actually compared it when I was sucking him off. My finger is literally only a tiny bit smaller. I didn't really get it before, but he's so small! No wonder it wasn't any good with him. I checked the internet, it said the average penis size is 7 inches long, with an erection.\"\n\n7 inches? That's way off. She probably got that figure from some random forum.\n\nMy sister agreed.\n\n\"I wouldn't say it's 7 inches,\" she said, \"I think that's actually considered big.\"\n\n\"Well the penis I saw...in the picture...was almost that big completely soft!\"\n\n\"Wow, that sounds pretty hot. Could you send me a link to it?\" said Rose.\n\nUgh, I thought, creepy. But of course, Rose didn't know it was my cock she was talking about.\n\nJessica made a similar sound of disgust, before realising that Rose wouldn't know why.\n\n\"What?\" said Rose.\n\n\"Oh, nothing, I just...you know, I don't remember where I saw it, and I didn't save it or anything.\"\n\n\"Shame.\" said Rose.\n\nJessica pushed on.\n\n\"So I'm just...like, disappointed about this whole thing. I mean... he's my boyfriend. He's really hot, and his body's awesome...but should I really stay with him if I don't get any pleasure from him? Plus...you know, he's kind of an asshole.\"\n\nNo arguments here.\n\n\"I don't know...\" said Rose, \"I guess it just depends on how important it is to you. If you really want to stay with him, you can just explain that he isn't satisfying you. You know, teach him how to go down on you and stuff. There are other ways he can make you feel good.\"\n\n\"But I thought you said \"bigger is always better\", remember?\"\n\n\"Well, yeah, when it comes to dicks. I mean, nothing beats that feeling of being completely filled up...\" she trailed off, probably thinking about her own experiences.\n\nThis conversation was making me increasingly uncomfortable.\n\n\"But,\" she continued, \"Like I said, there are other ways. I mean, lesbians don't even have cocks, but they can still pleasure each other.\"\n\n\"I guess so...but I just find myself wondering, you know? What would it be like to be really fucked by...like, a...a huge penis.\" said Jessica.\n\nShe sighed.\n\nThere was a lull in the conversation.\n\n\"Let's move to the kitchen, I'm starving.\" said Rose.\n\nI panicked, realising I was about to be discovered. I stood up and made my way back to the kitchen, trying to find a balance between speed and stealth.\n\nI managed to get back to my seat, with my laptop open in front of me and headphones on, before they got in. Rose seemed surprised to find me sitting there, but didn't say anything.\n\nJessica looked almost scared of me for a second. It was so strange to have her look at me like that, with no disdain or hostility. Perhaps she thought I would bring up the bathroom thing, revealing where she'd really seen that cock. But too soon, her usual look of arrogance returned, although it looked a little forced.\n\nI took my headphones off and tried to greet them casually.\n\n\"Evening, girls.\" I said.\n\n\"Hey...I thought you were going to, you know, stay upstairs tonight?\" said Rose.\n\nShe wanted to continue their conversation. I didn't mind, I was used to being rejected in favour of Jessica. But I didn't want this to end with me running away upstairs. I thought quickly.\n\n\"I was, but I thought I'd just chill down here for a while. Tell you what, if you go and get my laptop charger from the living room for me, I'll head upstairs and give you some space.\"\n\nShe sighed and rolled her eyes, but headed into the hall.\n\nJessica hadn't said anything. She just tried to act normally.\n\n\"So, what are doing...faggot?\" she asked.\n\nShe was clearly still nervous, and I smiled.\n\n\"Oh nothing, just thinking about our little encounter last week.\"\n\nHer eyes widened. I'd gone straight for the elephant in the room.\n\n\"God! Shut up!\" she hissed, looking behind her at the door.\n\nI stood up and started collecting up my things, ready to head to my room.\n\n\"Tell you what, if you feel like talking about it later, in private, I'll probably be awake most of the night anyway. Feel free to stop by my bedroom any time.\" I said.\n\nShe opened her mouth to reply, anger obvious on her face.\n\n\"Hey!\" I said, throwing up my free hand in a neutral gesture, \"Just to talk. If you want.\"\n\nShe closed her mouth, and didn't say anything. She just nodded, and moved aside when I went to leave.\n\nI met my sister in the hall. She handed me my charger with a smile, I returned it, and we continued on past each other.\n\nWhen I closed my bedroom door, I released a huge breath. It was so tough acting like I didn't care about this stuff, like Jessica walking in on me was just a funny little accident, like deep down I didn't still hate, and kind of fear her.\n\nBut I had to prepare. I'd given her an open invitation to my room. As a joke, sure, but I was confident she'd take me up on it tonight.\n\nIt sounded like she was really obsessing over my size, the amazed and impressed tone of her voice still clear after a week. But she was also afraid of my sister finding out, it seemed. The way she just moved out of my way...that had never happened before. It was amazing.\n\nOne way or another, through either fear or curiosity, she'd end up in my bedroom that night. I knew it.\n\n==\n\nIt was around 2 AM when I heard footsteps in the hallway.\n\nI'd been lying in the dark, listening to music with one ear-bud for about the last hour, waiting for her to arrive. I'd heard them go to bed around midnight. When I heard the footsteps, I shut off my MP3 player and dropped it on the floor.\n\nThere was a soft knock at the door.\n\n\"Yeah?\" I grunted.\n\nThe door slowly opened, and it was Jessica. She stepped in and closed the door behind her.\n\nI sat up and turned my lamp on, acting like I'd just been woken up.\n\nShe was wearing the same clothes she'd been wearing earlier. She must have gotten dressed again, because she wouldn't have slept in them. It occurred to me that she'd probably been waiting for Rose to fall asleep before coming over.\n\nI usually wore a t-shirt and sweatpants to bed, but tonight I was just wearing my boxers.\n\nIt was weird how nervous she looked. There was barely any hint of her usual bravado.\n\n\"What?\" I said.\n\nI tried to keep my tone of voice steady, to sound confident.\n\nShe avoided my eyes.\n\n\"Uh, you said I could come over, if I wanted to talk...\" she said.\n\nShe was trying to sound confident, too, but there was a bit waver in her voice.\n\n\"Yeah, I was kidding about that. Get the fuck out.\" I said.\n\nShe seemed taken aback. Then I got the reaction I wanted, her old attitude flaring up in her defence.\n\n\"Seriously? You're kicking a hot girl out of your bedroom? I mean, I'm only here to talk, but when are you ever going to get even that again?\" she said.\n\n\"Yeah yeah, you're a huge bitch, I get it. But you are in my bedroom, and it's two in the fucking morning. You've never wanted to talk to me before in your life. What's this really about?\"\n\n\"I...I just don't want you to tell Rose about...what happened...\" she said.\n\n\"Why not? You walking in on me in the bathroom isn't that weird, is it? Or maybe you told her something about it already?\"\n\n\"I...You...\" she stuttered.\n\nShe paused, unable to think of a good lie or flippant retort. I'd finally won an exchange, made her speechless. It felt good. But it wasn't nearly enough.\n\n\"This is about my cock, isn't it?\" I said.\n\n\"What?\" she said, surprised.\n\n\"Yeah, you caught a glimpse of it and now you want a closer look, right?\"\n\nShe didn't say anything.\n\nI waited.\n\n\"Well, if you really don't want anything then I'll say it again; get the fuck out.\" I said.\n\nShe didn't move.\n\n\"Jessica? Hello?\"\n\n\"I want to see it.\" she said.\n\n\"What?\"\n\n\"Your...your penis. Show it to me.\" she said.\n\nI didn't like how she'd said that. Like it was a command.\n\nI chuckled.\n\n\"No.\" I said.\n\nAnger flashed across her face, and she finally met my eye for more than a few seconds.\n\n\"Look, it's not a big deal you little freak, just show it to me and I'll go.\" she said.\n\nI laughed again. I was really beginning to enjoy her hostility, for some strange reason.\n\n\"Tell you what. Since it's 'not a big deal'...strip.\" I said.\n\nHer eyes went wide.\n\n\"Yeah, in your dreams you loser.\" she said.\n\nI shrugged.\n\n\"Well, if you say so. Get out so I can get some sleep.\" I said.\n\nAgain, she didn't move.\n\nI pushed a little more.\n\n\"I mean, it's only fair, right? You want to see me naked, so first I have to see you naked.\" I said.\n\nThere was a pause for about a minute.\n\nWithout saying anything, and once more staring at the floor, she reached down and pulled her top up over her head.\n\nI couldn't believe it. I thought that, if she was going to do this at all, it would take a lot more than just a few orders with an arrogant attitude. I think I really underestimated how much she wanted to see my cock again.\n\nShe was wearing a plain pink bra, and it looked incredible. It seemed too small for her, the way her cleavage spilled out over the top. The rest of her looked good too, her flat stomach and smooth skin.\n\nWithout hesitating, she threw her t-shirt to the floor and unbuttoned her jeans, pulling them down and kicking them off. Her panties were plain and white. Her legs were amazing, smooth and long, one turned slightly to the side to show a defined calf muscle. I hadn't noticed, but she was barefoot, and her toenails were painted red.\n\nI blew my mind how I'd seen this much of her body before, in a bikini, but back then it hadn't interested me at all. How I thought about her had changed so much, and so quickly.\n\nShe stood proudly now, a little gleam of achievement in her eye. She'd risen to the challenge, and now it was time to collect.\n\nI slowly pulled the covers off, revealing my boxer-clad lower half. Looking down, I realised that my usual bulge was even more prominent, as I was beginning to get hard.\n\nShe was staring at my bulge with clear anticipation, and what I thought was maybe arousal playing across her face.\n\nShe realised that I'd stopped.\n\n\"Ke...keep going.\" she said, meeting my eye.\n\nI just crossed my arms.\n\n\"I'm seeing you in your underwear, you're seeing me in mine.\" I said.\n\nAnother flash of anger jumped across her face. I really liked seeing her frustrated, and my cock gave a twitch in response.\n\nShe clenched her fists and her jaw. Our eyes locked, and I held her gaze. We were already way past the point where I would normally have given up. But not this time.\n\n\"But hey, if you want to stop, then....\" I reached for the blanket.\n\n\"NO!\" she said, surprising me with the volume of her voice.\n\nWe'd been talking just above a whisper this whole time, due to the late hour. It was mostly out of habit. When the doors were closed, the rooms in this house where pretty much sound proof. We could be screaming our heads off in here, and I doubted anyone would hear us.\n\n\"No...\" she repeated, more quietly.\n\nShe realised I wasn't going to give in, for once. She slumped her shoulders slightly, as if in resignation.\n\nShe reached behind her back and closed her eyes. She held that pose for just a few seconds, hesitating, before suddenly unclasping her D cup bra and dropping it to the floor. Her beautiful tits sprang free. They were incredible, so big, yet seemingly untouched by gravity, standing out proudly on her chest, shaking slightly as she breathed. This made me notice that her breathing was getting heavier. Her nipples were dark, and stiff.\n\nBy now my cock was beginning to strain against my boxers, making me uncomfortable.\n\nShe crossed her arms over her stomach, lifting her breasts up even more. She looked away, ashamed.\n\n\"Well?\" I said, letting her know she wasn't finished.\n\nAgain, she looked back at me, but the anger in her eyes lasted only for a second. She was learning that I wouldn't be moved by her annoyance.\n\nQuickly, and with none of the hesitation of her earlier movements, she pulled down her panties and kicked them off. Every movement made her boobs jiggle, it was so fucking sexy. But I kept my expression neutral. From the way she was standing I couldn't see much of her pussy, but she had just a neat, well trimmed triangle of pubic hair.\n\nI looked back at her face. Her hands were on her hips, and there was that same gleam of victory in her eye. She knew I was enjoying her body, and she must have felt like it gave her some measure of control.\n\nGlancing at the panties spread out on the floor, I could see a small wet patch on the crotch of them.\n\nThis was turning her on.\n\nI smiled, and she followed my gaze. She was startled when she saw what I was looking at, her eyes once again going wide with shock. She opened her mouth, as if to make some sort of excuse. I raised one eyebrow and smirked. She looked away, closing her mouth.\n\nNothing to say. How wonderfully unusual of her.\n\nBut then she remembered.\n\n\"Ok...it's your turn now.\" she said.\n\nI sighed, but moved around on the bed wanting to give her the best view.\n\n\"Would you like to get closer?\" I said.\n\nHer eyes were fixed on my bulge again. She nodded quickly and moved forward a few steps, then hesitated, before closing the distance completely and kneeling beside the bed. I wasn't expecting her to get that close, but I could still see her tits so I didn't mind.",
        "With my left hand I lifted the waist band of my underwear. With the other, I reached in and grabbed my slowly stiffening cock. I just held it inside for a few seconds, watching her expression. This was it, the reaction I'd been waiting for.\n\nI pulled my cock completely out of my underwear and let it drop against my thigh.\n\nHer eyebrows shot up, and her eyes went wide. Her mouth formed a perfect \"O\" of surprise, and again she brought the tips of her fingers up to cover her mouth in a gesture of alarm. She also let out a weirdly cute little gasp.\n\nShe held that pose, as the silence stretched.\n\nIt lay along my right thigh, still not hard enough to be completely erect, and unable to support it's own weight otherwise.\n\nShe stared at my cock silently as I stared at her face, trying to burn her expression into my mind.\n\nAfter a little while, she met my eyes again, before quickly turning back to my cock. Her expression of complete awe was seriously turning me on, and my cock twitched again.\n\nI didn't want to be the first to break the silence, but I was desperate to hear what she was thinking.\n\n\"Well, is it everything you hoped for?\" I asked.\n\nShe was startled by my voice. She met my eyes again for only a few seconds before looking back.\n\n\"Uh...\" she started. Her voice seemed lower, breathier, and somehow more seductive than before. I guessed it was because of how turned on she was getting.\n\nShe shook her head slightly.\n\n\"I...\"she said.\n\nShe let out a stunned laugh, holding her head and shaking it again.\n\n\"It's huge.\" she said simply, turning to meet my eye.\n\n\"Yeah,\" I replied.\n\nShe let out another little laugh of disbelief, and smiled.\n\n\"And it's not even hard yet.\" I said.\n\nHer a face suddenly darkened with, again; shock, disbelief, but this time also fear, it seemed.\n\n\"Really?\" she said.\n\nI nodded.\n\nShe looked at it again.\n\n\"Can I...touch it?\" she asked.\n\nShe reached towards my cock.\n\n\"No.\" I said.\n\nI suddenly, impulsively, grabbed her wrist and twisted her arm roughly to the side. She grunted in pain, and met my eye with that same anger I was used to.\n\n\"Ow, what the fuck! Get off me!\" she shouted, struggling against my grip.\n\nI twisted her arm back, and leaned close to her.\n\n\"I don't know how you don't already know this, Jessica, but I fucking hate you.\" I said, almost whispering.\n\nDifferent emotions seemed to flood across her face, anger and pain and fear.\n\n\"Now get out.\" I said.\n\nI pushed her back. She tumbled backwards on to the floor, giving me a clear view of her pussy. Her smooth, pink pussy lips were clearly glistening with arousal.\n\nShe stood up angrily, gathering up her clothes and holding them in front of her.\n\n\"You know what?\" she said, \"Fuck you, faggot. My boyfriend's dick is twice the size of yours anyway.\"\n\nI laughed at that.\n\n\"That's not what I heard.\" I said, holding up my pinky finger, copying her earlier gesture.\n\nShe was outraged, and confused, but she didn't say anything more.\n\nShe took one last look at my cock, her eyebrows still furrowed in anger, but biting her lip with clear lust. I held my pinky up beside it for a comparison, mocking her.\n\nShe made a noise of disgust in her throat. I laughed again as she turned to leave, showing me her perfectly round and perky ass. I'd never paid much attention to asses before, and made a silent note to remedy that.\n\nShe left, still completely naked, and slammed the door behind her. In her hurry, she left her panties behind.\n\nI was as surprised by my behaviour as she was. Originally, I didn't intend to kick her out. I figured if we got this far along in the plan, I would just have sex with her, or something. Just go with whatever happened next.\n\nBut that didn't seem like enough now. I didn't want to just fuck her.\n\nI wanted to make her beg for my cock.\n\nI wanted to dominate her, completely.\n\nMy dick was rock hard, now. I'd been trying to keep from getting fully hard while she was here, but I liked seeing her so dejected and angry, maybe even more than I liked looking at her perfect, naked body. I idly stoked my shaft a few times, but I didn't want to masturbate.\n\nI vowed then that the next time I came, it would be all over Jessica's face.\n\nAnd she'd beg for it.\n\n==\n\nThe next day, things were a little different. I fearlessly strode in to the kitchen where the girls were eating breakfast.\n\nAnger flashed across Jessica's face for a few seconds when I walked in, but she didn't say a word. Which was pretty much a first. Rose seemed surprised at her, but didn't comment.\n\nThroughout the day, the three of us spent time together. I talked mostly to Rose, revelling in being able to spend time with her without being hassled. Jessica didn't say more than a few words to me, and when she did she avoided my eyes. More than once I caught her glancing at my crotch.\n\nJessica left before dinner.\n\n\"Wow, today was a lot of fun!\" said Rose, when we were alone after dinner.\n\n\"Yeah. It's nice, hanging out with you again.\" I said.\n\n\"I think Jessica's finally started to warm up to you, she didn't insult you once!\"\n\nShe seemed genuinely pleased.\n\n\"Yeah, that only took, what, 18 years?\" I said.\n\nRose sighed.\n\nShe looked guilty.\n\n\"Look...I know Jessica's pretty much hated you since...well, forever. I've tried to talk to her about it, but...I mean, it's not really just about you, she's not the easiest person to get along with normally anyway...and I guess she always just thought that you were trying to come between us...\".\n\nShe seemed to get lost in thought, but I let her finish.\n\n\"I'm sorry.\" she said, \"I'm sorry for always choosing her over you...but she's my best friend, you know?\"\n\nI nodded. It actually felt good for her to admit this to me. We hadn't discussed it since we were kids.\n\n\"But now, it seems like we can finally all hang out together again, just like we used to!\" she said.\n\nI guess she remembered our childhood a little differently.\n\n\"Rose...I know how me and Jessica fight has always been a problem for you, and I'm sorry for that. But yeah, I think if she's willing to...to keep a civil tongue, maybe we can start to hang out again, the three of us.\" I said.\n\nI didn't really think I had anything to do with the aggression Jessica felt towards me, but I was willing to admit some of the responsibility if it meant things would finally settle down. At least, settle down as far as Rose knew.\n\nRose hugged me, and we spent the rest of the day just catching up. It was pretty great.\n\nLater that night, I thought some more about Jessica.\n\nI really didn't know why she was being so civil. If anything I thought she might be even more aggressive, considering how mad she'd been last night.\n\nI didn't know if it was fear that I'd tell Rose about the whole thing, or if she was just too obsessed with my cock to want to make things worse. Or if deep down, on some level, she liked how I'd treated her, just a little.\n\nI sincerely hoped it was the last one. What I'd done, pushing her away, even hurting her, it had felt good. Really good. Over that week, the build up to the next Friday night, I imagined, again and again, grabbing her, holding her down, forcing my cock deep inside her. I imagined her begging me to fuck her, pleading for me to cum inside her.\n\nI didn't jack off though. I remembered my earlier promise to myself. My next load would go on her face.\n\nI didn't know how likely any of my plans really were, but it had become an obsession. Any free time I wasn't hanging out with Rose, I spent online, reading about submission and dominance. I wanted to do this right.\n\n==\n\nShe came over again on Friday night and the three of us spent time together, like before. Again, Jessica and I didn't talk much, but the mood was still pretty relaxed.\n\nRose went to the bathroom, leaving us alone only once, and I took my chance.\n\n\"You're very quiet tonight.\" I said.\n\nShe didn't say anything.\n\n\"You know, you left those pretty panties in my room last week.\"\n\n\"Shut up!\" she hissed, looking panicked.\n\n\"Oh, you don't want them back?\" I said.\n\n\"Just shut the fuck up, you freak!\"\n\nOh, a little bit of defiance. I liked that.\n\n\"Now that's not very nice.\" I said, \"And here I was hoping we could take this opportunity to...repair our relationship. You're such a big part of Rose's life, it's really a shame we're not closer.\" I said.\n\nShe looked me in the eye.\n\n\"Fuck you. Who the fuck do you think you are?\" she hissed.\n\nI felt the rage begin to build up inside me, but I repressed it. I wanted to seem neutral, like none of this was a big deal.\n\nI laughed.\n\n\"There's no need to be so hostile, Jessica. I'll tell you what, I'll head up to my room soon, and let you two spend a bit of time on your own.\"\n\nI leaned in closer.\n\n\"But tonight my door is open, if you want to come get your panties. Seriously, feel free to drop by.\" I said.\n\nRose came back just as Jessica was about to reply, so she didn't say anything.\n\nI spent another few minutes with them, then made my excuses to Rose and headed up to my room.\n\n==\n\nI was so excited. It was 1 AM and I'd been almost pacing the floor in anticipation. I wanted so badly to hear what they were talking about, if the topic of size came up again. I wanted to hear Jessica admit how badly she wanted a big cock. My big cock.\n\nBut I'd get all that tonight, I hoped.\n\nI was trying to relax by reading when I heard her approach.\n\nShe knocked softly.\n\n\"Come in.\" I said.\n\nThis time she was wearing pyjamas, pink with little black flowers.\n\nCute.\n\nI put my book down and sat up in bed. I'd gone back to my usual sleeping clothes, a black t-shirt and sweatpants.\n\nShe stood for a while, just looking at me.\n\nShe seemed even more nervous than last time, maybe because now she knew what was coming.\n\n\"Yes?\" I said.\n\n\"Uh...\" she started, \"You said I could come over.\"\n\n\"Yes, I did.\"\n\nI paused.\n\n\"But what do you want?\" I asked.\n\n\"I... You know what I want.\" she said.\n\nShe seemed annoyed, but she was trying to stay casual.\n\n\"Do I?\" I asked in mock confusion, \"Remind me.\"\n\nShe glared at me, furious. She knew what I was doing. She knew I wanted her to say it. Her jaw clenched. I could almost see the decisions going back and forth in her mind.\n\n\"I want to see your penis.\" she said, slowly and clearly.\n\nI leaned back, smirking. She hadn't even opted for the \"just came to get my panties\" excuse, she was committed to this now.\n\n\"Well, you know the rules.\" I said, gesturing to her body.\n\nShe sighed, but this time didn't hesitate.\n\nShe slipped out of her pyjamas quickly and quietly, revealing a lacy black bra, and matching panties.\n\n\"Oh, those are cute,\" I said, gesturing, \"Did you get all dressed up for me?\"\n\n\"Fuck you.\" she said, folding her arms across her stomach.\n\nI sighed.\n\n\"Always so hostile. You know if you keep up this attitude, I don't think I'll want to do this any more.\" I said.\n\nShe didn't say anything, but I could feel her apprehension.\n\n\"Well?\" she said.\n\nI smiled, and pulled back the covers. I didn't reveal as much as her, instead just slipping my pants down, showing my underwear. I grabbed my bulge through the fabric of my boxers, and squeezed it.\n\nShe was once again completely transfixed.\n\nWithout speaking, she quickly threw off her bra and panties and walked up to the bed, kneeling beside it in the same position as last time. I could see from here that her discarded panties had that same damp patch on the crotch.\n\nI took a moment to appreciate her big tits as she knelt there. I always preferred bigger ones in porn, and hers were so beautiful, so perfectly shaped. Her breathing was getting heavier again, and I liked watching her boobs rise and fall, jiggling slightly each time she exhaled.\n\n\"Take it out.\" she said, still staring.\n\n\"What?\" I said.\n\nShe looked at me.\n\n\"Take it out!\"\n\n\"Hmmm...\" I said.\n\n\"What? What's wrong?\" she asked.\n\nHer voice had a note of desperation to it.\n\n\"Ask nicely.\" I said.\n\nJust like that, she was back to angry.\n\n\"Oh, fuck you! Just pull the fucking thing out!\" she hissed.\n\nJust like always, her tone and expression almost scared me, filling me with doubt and apprehension. I repressed these emotions, instead thinking of the anger I felt towards her.\n\nI sighed, and shook my head.\n\n\"We won't get anywhere unless you learn some manners.\" I said.\n\nHer jaw clenched and she narrowed her eyes. Just like last time, she seemed to resign herself to the task. It had to be done, so she just had to do it.\n\nShe dropped her eyes.\n\n\"Please.\" she muttered.\n\n\"What?\"\n\n\"Please, OK? Please get your penis out!\" she said, angrily.\n\nI grabbed her roughly by the jaw and forced her to look at me.\n\n\"You can do better than that.\" I said.\n\nRage spread across her face, only to disappear in a flash.\n\nShe suddenly looked sad, and desperate. She seemed to realise that I wasn't just delaying things to irritate her. I really wanted her to beg.\n\n\"Please.\" she moaned, voice shot through with desperation. \"Please...\"\n\n\"Please what?\" I asked, digging my fingers in harder.\n\n\"Please let me see it,\" she said quickly, \"Let me see your...your...\"\n\nIt occurred to me that I'd only ever heard her say \"penis\".\n\n\"My cock, Jessica. Say it.\"\n\n\"Let me see your cock, please!\" she moaned.\n\nI released my tight grip on her face. She pulled back and rubbed her jaw, but didn't say anything.\n\nSighing, I reached down and pulled out my cock.\n\nShe smiled with delight and leaned close to it. It was even bigger than she'd seen it last time. I was fighting to not get fully erect just yet, but making her actually beg for it was turning me on so much.\n\nShe was staring at it, and biting her lip hard. She started bobbing up and down slightly, and making little whimpers. I was mesmerised by her beautiful breasts jiggling and bouncing, when she let out a loud moan, and I realised that her hands were in front of her pussy. She was rubbing herself behind the bed. She was masturbating to the image of my cock.\n\nI suddenly grabbed a handful of her hair and pulled it hard. She screamed out in pain. I pulled her face close to mine, leading her by the tight grip I had, and whispered in her ear,\n\n\"You do not fucking touch yourself until I say you do. Do you understand me?\"\n\n\"Let go...get off me you bastard!\" she whined.\n\nI pulled again, hard, and she stopped struggling.\n\n\"I asked you a question, bitch. Do you understand?\" I repeated.\n\n\"Fuck you! Get the fuck...ahh! Stop!\"\n\nI tightened my grip.\n\n\"Listen to me, slut!\" I growled. \"You're only here because I allow you to be. You will do exactly what I say, when I say it, or you can get the fuck out. Now are going to apologise, like a good little slut?\"\n\nThis was it. She'd either submit, or leave. There was only a second of hesitation before,\n\n\"Yes! Yes, I'm sorry, I'm sorry, I won't do it again, please!\" she cried.\n\nI let go of her hair and shoved her head away. Her pose from last week was repeated, with her sprawled out on the floor, tits jiggling wildly, and pussy clearly slick with arousal. She sat up and rubbed her head, stroking her hair into shape.\n\n\"I'm sorry,\" she said again, \"I'm sorry.\"\n\nShe took her place again at the side of my bed, her eyes returning to my cock, but this time she kept her hands where I could see them.\n\nThat was the first real show of dominance I'd forced on her. I'd hurt her, called her a slut and demanded an apology from her for touching her own body...and she'd accepted it. She seemed so different, suddenly. Neither desperate, nor defiant. For the first time, she just seemed...submissive.\n\nThis was the greatest night of my life.\n\nMy cock was bigger than when she'd last seen it, and just about in the air. Any more stimulation and I wouldn't be able to stop from becoming fully erect. But I didn't want her to see that just yet. I wanted her to earn it.\n\n\"Tell me Jessica,\" I said.\n\nHer eyes snapped to mine.\n\n\"Do you like looking at my cock?\" I asked.\n\n\"Yeah...\" she breathed.\n\n\"Why do you like my cock so much?\" I said.\n\n\"Because...because it's big...\" she said slowly.\n\n\"Yes, but why do you like my big cock?\" I said.\n\nShe didn't reply. She was thinking.\n\n\"Is it because,\" I continued, \"Your boyfriend is so small? Does he leave you unsatisfied?\"\n\nShe nodded slightly.\n\n\"Answer me.\" I said calmly.\n\n\"Yes!\" she blurted out, eager to obey me, \"Yes, he's tiny, like my pinky finger. Just like you said.\"\n\nShe held it out to demonstrate. She didn't seem to care how I'd found out about her sex life.\n\n\"I never feel good with him...he's never even made me cum...\" she said.\n\nShe was staring at my dick again. It was bobbing slightly, in time with my heartbeat. She let out a little moan of desire.\n\n\"I've actually never...\" she said.\n\n\"Never...?\" I said.\n\nShe looked at me again.\n\n\"I don't...think I've ever had an orgasm. Even alone I just get too...I don't know, nervous.\"\n\nShe went back to staring at my cock.\n\nThis was a revelation. Miss super-confident mega-bitch had never even had an orgasm before. I was going to give her her first orgasm. I vowed it.\n\n\"Do you want to touch my cock, slut?\" I asked.\n\nHer face lit up.\n\n\"Yes, yes, please. I want to touch it.\" she said.\n\n\"Sit over there.\" I said, gesturing to the other end of the bed.\n\nI moved back on the bed to give her space.\n\nShe eagerly jumped up and sat where my legs had been. Her body was incredible, and seeing her like this, I had to try hard to distract my thoughts so I didn't get fully hard.\n\n\"But, you do have a boyfriend, don't you Jessica?\"\n\nShe looked at me, confused.\n\n\"Yeah, I do, but-\"\n\n\"Now, what kind of a girl would even touch another man's cock if she already has a boyfriend?\" I asked.\n\n\"I don't...I don't know...I just want to touch it...\"\n\nShe was staring at it again.\n\n\"Jessica, you have a boyfriend.\" I reminded her, \"The only reason you should want to do this with me, would be if you were...a slut.\"\n\nShe didn't say anything.\n\n\"Are you a slut, Jessica?\"\n\nShe'd already accepted me calling her it, but now she had to accept it for herself.\n\n\"I...\" she hesitated.\n\n\"Because if you're not a slut, then you should probably just stay faithful, and leave.\"\n\n\"No!\" she moaned.\n\nShe looked into my eyes.\n\n\"I am a...a...\", she swallowed heavily, struggling with the admission, \"a slut. I am, I'm a slut.\" she said.\n\nAdmitting it aloud seemed to have a strange effect on her. Her eyes went hazy, and a big, lazy smile spread across her face.\n\n\"I'm a slut.\" she said again.\n\n\"Whose slut are you?\" I prompted.\n\n\"I'm...I'm your slut.\" she replied slowly, \"I'll be your slut...Just let me...please...\"\n\n\"Touch it, slut.\" I said calmly.\n\nShe reached out and grabbed it, letting out a moan of lust as soon as she did. It continued to grow in her hands until she was holding my full, thick erection. I enjoyed how it felt, her soft warm hands wrapped around my cock. She marvelled at the girth of it, lightly gripping with one hand and running her other up and down the shaft. She bit her lip and let out another low moan. I lay back and enjoyed the sensation.\n\n\"It's so... big.\" she sighed, with obvious amazement.\n\nShe explored the base, gently cupping my large balls in her hands, before she moved upwards, exploring the head. I was so turned on that some pre cum began to leak out, and she started rubbing it around the tip with her thumbs. She started to slide the skin down, but stopped when I let out a small grunt of pleasure.\n\nShe looked up at me, as if surprised to see I was still there.\n\n\"Oh, do you like that?\" she asked.\n\nShe looked like she really wanted me to feel good. At first I was confused that she didn't know what I would enjoy, then I remembered the only other cock she'd had experience with. She could probably fit that whole thing in one hand with room to spare.",
        "\"Oh, of course,\" I said, \"You've never done this with a real cock, have you slut?\"\n\nShe shook her head, then turned back to my dick.\n\n\"Well,\" I said, \"The head is the most sensitive part. What feels best for a guy is putting pressure around the top, then sliding the skin up and down.\"\n\nShe did what I said, and was soon slowly masturbating me with both hands. I felt incredible, but I wanted more.\n\n\"Stop.\" I said.\n\nAfter a few seconds, she stopped her hands.\n\n\"No, I mean, let go.\"\n\nShe slowly let go, and crossed her arms under her chest. She'd been squirming for a while now, trying to bring some friction to her wet pussy. I was pleased to see that she hadn't tried to touch herself again, obeying my earlier command.\n\n\"You're going to suck my cock now, slut.\" I said.\n\nHer eyes went wide with fear, and she sat back as I stood.\n\nI got off the bed and finished undressing. She turned to face me, scooting closer so her feet were on the floor.\n\n\"I'm not sure about this.\" she said.\n\nI didn't say anything.\n\n\"I mean...I've done this with my boyfriend, but his is...you know...and...\" she said.\n\nShe looked away nervously. She seemed to be really afraid of my size, suddenly.\n\nI grabbed her jaw, but more gently this time, and turned her towards me.\n\n\"Listen to me Jessica. You came into my room tonight, and begged me to show you my cock, didn't you?\" I asked.\n\n\"Y...yes.\" she whimpered.\n\n\"You want this, don't you? You want to know what a real dick feels like, don't you?\" I asked.\n\nStill holding her face, I grabbed my dick by the base and shook it slightly.\n\n\"You want to taste this real cock, not your boyfriend's little clit, don't you?\"\n\nShe nodded again.\n\n\"Say it.\"\n\n\"Yes. I want to taste your cock...please.\" she said softly.\n\n\"Really?\" I said.\n\n\"Yes...please, I want to taste it. I want to suck your...your big dick. I want to know what a real cock tastes like...\"\n\nI stroked her cheek gently with my thumb.\n\n\"Good girl.\" I said.\n\nI let go of her face.\n\nShe nervously took my shaft in her hands again, slowly stroking its length. Without any more prompting, she leaned forward and licked the head. She made a little expression of displeasure at the taste of my pre cum, but went back for another one. She quickly started licking all around the head, sometimes wandering down the shaft. Her hot, wet tongue felt incredible. I let this continue for a few minutes before getting her to move on.\n\n\"Ok, slut, it's time to put it in your mouth.\" I said.\n\nShe looked into my eyes, and nodded once. She seemed somewhat stunned by this whole experience, but so eager to do a good job, to do what I told her.\n\nShe slowly tried to put the head in her mouth, just managing to get her lips around my girth. She pushed harder, squeezing my cock further and further. She could only fit a few inches inside. Her tongue was going crazy, and her hands were sliding all along my shaft. It felt so good, so warm and wet. She suddenly let out a long, lusty moan.\n\nI started to thrust my cock forward, pushing back along her tongue. It was clear I wasn't going to get any further until she'd had some practice, so I was content with my little thrusts for now. I was only able to enjoy the sensation for a few moments before I was aching for release. I hadn't masturbated all week in anticipation of this.\n\nI slowly pulled my cock out of her mouth. She looked up at me, tears touching the corners of her eyes, but a huge smile on her face. She licked her lips, and wiped the spit from around her mouth.\n\n\"Did that feel good?\" she said, breathing heavily.\n\n\"It did.\" I said.\n\nShe smiled even wider and licked her lips again. I was amazed at how quickly she'd submitted to me.\n\n\"Did you enjoy it?\" I asked her.\n\n\"Yes! Oh my God, it's just so big and thick. The way it...pulses. Having it in my mouth is so fucking hot. I'm...\" she trailed off suddenly.\n\n\"You're what?\" I asked.\n\n\"I'm dripping wet, right now.\"\n\nI already knew this, but it felt good to hear her admit it.\n\nI smiled.\n\n\"Jessica, what's it like when your boyfriend shoots his little load?\" I asked.\n\nShe smiled again, knowing where I was going with this.\n\n\"It's just...a few weak spurts. Like, a teaspoon's worth.\" she said.\n\nI gently took her jaw.\n\n\"Do you want to see what it looks like when a real cock cums?\" I asked softly.\n\n\"Yes, yes, please. I want to make you cum, I want to see you shoot your load.\" she said, nodding vigorously.\n\nI ran my other hand through her hair.\n\n\"Then finish me off.\" I said, guiding her head back towards my cock.\n\nShe went straight to work, trying again to fit as much of my cock in her mouth as possible. She bobbed her head back and forth irregularly, and lightly stroked my balls and shaft with her hands. The sides of my cock were scraping slightly against her teeth. This was my first experience with this, but even then I knew she wasn't doing a very good job. I was just too big for her to get a real feel for it.\n\nBut it still felt incredible, and after just a minute or so I was ready.\n\n\"Just your hands, now.\" I said.\n\nShe quickly backed off my cock and started jerking me hard with both hands, her spit working as lube. She was staring at my cock with an intensity I'd never seen before. Her breath was heavy and her face was flushed.\n\n\"Do you want me to cum on you, slut?\" I asked.\n\nShe didn't look at me, but started chanting under her breath,\n\n\"Yes, yes, cum on me, please, cum, cum on me, yes...\"\n\nI grabbed her head for balance and let the feeling overwhelm me. Hot, burning lines of pleasure jolted from the tip of my cock. It was incredible, ten times better that the last time I masturbated. I let out a loud groan of pleasure. The first shot splattered across her face, and a few landed on her tits. Without being told, she shoved my dick back into her mouth, desperately swallowing my cum. She started choking slightly, not used to the amount, but kept at it. I held her head there until I'd finished, then let her go.\n\nShe immediately fell back on the bed and started rolling around, clutching her boobs and rubbing her firm nipples. She was rubbing my sperm around on them, moaning and whimpering. She brought her arm up to wipe the sticky fluid from her face, and ran her tongue up across it. Her face was scrunched slightly in displeasure of the taste, but she moaned softly again, and continued grabbing her heavy tits.\n\nI felt light-headed from the force of my orgasm, and she was really confusing me.\n\n\"Jessica?\" I said.\n\nShe sat up and started squeezing her thighs together, still squirming.\n\n\"I've never felt this good before...please, please let me touch myself...I think...aahh, I think I'm going to cum soon...oh God I'm so wet...\"\n\nI was surprised that she obeyed me even now, her hands never once going near her crotch despite how much she obviously wanted it.\n\nShe was covered in my cum, begging me to let her touch herself. I took just a few seconds to appreciate the position I was in. My cock, which had begun to wilt slightly, was back at full mast within a few seconds.\n\nI sat down on the bed beside her. I lay down, and she crawled to the other side to make room. I took her gently by the arm and guided her towards my legs. I got her to straddle me, sitting right up against my cock so that it pointed straight up, lying parallel against her stomach.\n\n\"Oh my God, you're still so hard...\" she said.\n\nShe was still fidgeting, a pleading look in her eyes.\n\n\"Come here.\" I said.\n\nShe leaned forward to obey me, and as she did my cock ran along her stomach. She pushed it back until it was flat against my body, pressed between us. I pushed her up, and guided her until my cock was between her legs, her weight supported by her knees on either side, and her pussy resting gently on the under side of my shaft. She let out a small sigh when she first made contact, started letting out little humming moans with every breath. She was soaking wet. Her pussy juices began literally dripping down the sides of my cock, leaving little trails of moisture.\n\n\"Listen to me, Jessica.\" I said, \"Tonight...I'm not going to fuck you, do you understand me?\"\n\nHer expression instantly turned from a lustful haze to disappointment, and panic.\n\n\"But...please, I'm so wet, I-\"\n\nI tucked my fingers beneath her chin, and put my thumb gently on her lips, silencing her.\n\n\"No, not tonight. You haven't earned it yet.\"\n\nShe looked like she was going to cry.\n\n\"But... you have been a good slut for me tonight. So I'm going to let you orgasm. Would you like that?\"\n\nHer face grew excited again.\n\n\"Yes! Yes, please make me cum, please, I'm so wet...\"\n\nI pushed upwards with my hips, sliding my thick shaft along the outer lips of her pussy. She turned her head, moaning at the sudden intense feeling.\n\nI moved my body back, and just looked at her.\n\nShe took the hint and began to thrust her own hips up and down, sliding her wet pussy along the length of my cock over and over, moaning gently every time she ground her clit against it.\n\nShe started slowly at first, savouring every inch, but soon began to pick up the pace. Within just a minute, she was humping against my cock with a quick and steady rhythm, her eyes closed tight in concentration. Her body was slick with sweat. Her huge tits bounced slightly with every movement.\n\nI realised then that I hadn't even touched her tits yet. I reached out and grabbed them, hard. She gasped loudly and opened her eyes. They felt good, so soft and heavy, and a little sticky from my cum. Her nipples felt rock hard against my palms. I quickly pinched them both between my thumb and fingers and squeezed.\n\nShe let out another loud gasp and closed her eyes, throwing her head back to let out a low, guttural growl. I couldn't tell if it was in pleasure or pain, but I didn't care. I squeezed harder for a few seconds, drawing another long moan from between her parted lips, then I let go. Her hands went to straight to her nipples and she began lightly pinching and rubbing them herself.\n\nHer body was shaking more and more now, and it seemed like she was close to orgasm.\n\n\"Look at me, Jessica.\" I said.\n\nIt seemed like she tried, but she was still screwing up her face in pleasure.\n\n\"Slut.\" I said, grabbing her jaw, \"Look at me.\"\n\nShe did this time, gazing into my eyes.\n\n\"Do you want to cum, Jessica?\" I asked.\n\nHer voice came out in a shuddering, shaking breath,\n\n\"Yesss...please, I think....I think I'm...Oh God, I'm think I'm close...\" she moaned.\n\n\"Do it...cum for me.\"\n\nHer voice caught in her throat, and her hips began to spasm, breaking her rhythm. She lay back slightly against my cock, forcing the girth further between her folds. She never looked away from me.\n\nI wanted her to face me, to look me in the eye so she'd always remember her first orgasm, and who gave it to her.\n\nI reached behind her and grabbed her firm ass hard, digging my fingers in deep. She gave a throaty growl as I thrust my hips forward, providing even more stimulation.\n\nSuddenly, with a loud, shaking squeal, she came. Her hips were still jerking back and forth, continuing the stimulation on my cock. She was panting hard, every other breath coming out in a ragged moan. She was still pinching her nipples, harder now, as hard as I had. Her orgasm seemed to last minutes, her eyes never leaving mine the whole time. As she rode the waves of her orgasm to the end, she let out one final moan, and collapsed against my chest, her head on my shoulder.\n\nI held her for a while, my hands still on her ass, just enjoying the feeling of her warm naked body, still shuddering from the power of her orgasm.\n\nWe lay like that for a few minutes. Her pussy was still resting against my erect cock, the bottom of which was now completely coated in her juices. Once the little aftershocks that made her body twitch and quiver had completely stopped, she looked up at me.\n\nI moved my hand up to her head, and idly ran my fingers through her hair a few times.\n\n\"Oh my God...that was so...so good...,\" she sighed.\n\nShe closed her eyes and lifted her head, lips parted slightly, as if to kiss me. I held my hand against her collar bone to stop her. She opened her eyes, confused. She seemed disappointed.\n\n\"Get out.\" I said.\n\nShe blinked at me, confusion spreading across her face.\n\n\"Wh...why? I mean...\"\n\nShe looked down at my cock, still erect between her legs.\n\n\"Aren't you... Don't you want to... fuck me?\" she asked.\n\nI sighed again, and pushed her to the side. She rolled off of me, and turned to face me.\n\nI didn't look at her.\n\n\"I already told you, Jessica, I'm not going to fuck you tonight.\"\n\n\"But...please? Please, I want you to fuck me... I want to feel how...how a real cock-\"\n\nI turned sharply to look at her, silencing her. I didn't want to hear my earlier words repeated back to me.\n\n\"No, slut. Not tonight. Get out.\"\n\nShe bit her lip. She once again looked so desperate. But for once in her God damn life, she didn't argue.\n\n\"OK. I'll go. Can we do this again? Please?\" she said.\n\n\"We'll see...\" I said, turning away from her.\n\nI grabbed the blanket and pulled it over me. I lay down with my back to her.\n\nShe got up and walked to the other side of the bed, towards the door. She put her top back on without her bra, ignoring my sperm on her body, but left her lower half bare. When she was finished, she turned to me.\n\n\"What should I do about...you know, the guy I've been...?\"\n\nShe didn't seem to want to say \"boyfriend\". She hadn't said his name either, I noticed.\n\nI looked at her, and considered it.\n\n\"Jessica, you're not my girlfriend.\" I said.\n\n\"I know...\", she said with a smile, \"I'm your...slut, right?\"\n\nShe seemed almost proud of it, although her smile was tinted with shame.\n\n\"Look, I don't give a fuck what you do with that needle dick, or anyone else for that matter. As long as you keep doing what I say, you can fuck whoever you like.\"\n\nI really meant this. I knew I didn't have to tell her not to fuck anyone else, because I knew it wouldn't matter. She was really obsessed with my cock by now. I doubted she'd even look at another guy. And being with her boyfriend again would only serve to remind her how big I was in comparison.\n\nShe seemed uncertain. I got the feeling she wanted to be given a command, something she could do to make me happy, to prove herself, to \"earn\" my dick, as I'd put it.\n\n\"There is one thing you can do for me though...\" I started.\n\nHer face lit up. I was right.\n\n\"Learn how to give a decent blow job. That was pathetic tonight.\" I said, with a touch of disgust in my voice.\n\nHer face fell, but she didn't reply right away.\n\n\"I will.\" she said, \"I'll practice, I promise.\"\n\n\"Good.\" I said.\n\nShe didn't leave. It still seemed like she was waiting for something.\n\n\"Thank you, for this. Thanks.\" she said.\n\n\"Was that really your first ever orgasm?\" I asked.\n\nShe nodded.\n\n\"Yes, definitely.\"\n\nI laughed softly.\n\nShe hadn't seemed sure about it before, but now she knew. Whatever faint shadows of pleasure she'd experienced alone, or with her boyfriend, weren't even close to the real thing. What she'd felt tonight as she humped my huge cock, that was what an orgasm felt like.\n\n\"Well, you're welcome. Now get the fuck out so I can sleep.\" I said.\n\nShe nodded once. As she turned to leave, I noticed the fading pink marks on her ass that my fingers had made when I grabbed it. She left, closing the door gently behind her.\n\nI lay back and thought about what had just happened. I hadn't really planned how that had gone. My only real goal had been to make her beg to suck my cock, and that had gone very well. When it came to it, right after that, I knew I could have fucked her. I could have pounded her until she screamed. But I didn't want to.\n\nI mean, I wanted to, obviously, but on some level it just didn't feel right. There had to be...more. There was something more important here than just sex, just losing my virginity.\n\nI wanted to see her even more degraded. I'd seen her beg, but I wanted to see how desperate she could really get.\n\n==\n\nThe next day, the two of us hung out with Rose again. Things were even better, it seemed. Jessica spoke to me more, and she kept meeting my eyes, and smiling a lot. It was amazing how much she'd changed, literally overnight.\n\nI was really getting to know another side of her. She was surprisingly intelligent, making references that caught me off guard, and comments that made me genuinely laugh. It seemed that she was still witty, even when she wasn't being aggressive. It was so strange to see her as a real, full person and not just a complete bitch. Talking to her like this, I really felt that we could almost have a normal relationship.\n\nThat is, of course, if I didn't still hate her fucking guts.\n\nI left them alone for a little while, and Jessica went home just before dinner, as usual. After dinner, Rose and I talked about her.\n\n\"Jessica seemed to be in a good mood today.\" I said innocently.\n\n\"Yeah, right? She's been pretty quiet lately. I thought it was because she still wasn't used to being around you, but apparently it was about her boyfriend.\" said Rose.\n\n\"Really?\"\n\n\"Yeah, he...well, let's just say they weren't really...compatible. She wasn't sure whether or not to stay with him, but she told me this morning that she's decided to leave him. She seems a lot happier, now that she's made the decision.\"\n\nI wasn't surprised to hear this, but I was delighted. We hadn't even had sex and she had already chosen me over him. The best part was, I didn't even have to tell her to.\n\n==\n\nThe next Friday, the casual conversation with Jessica continued when Rose was around. She seemed completely comfortable in my presence now, laughing and joking with me like she did with Rose.\n\nOnce again I left them alone, heading to bed first. I wanted to give Jessica a chance to get Rose completely to sleep before visiting me.\n\nI heard her footsteps approaching my room just after midnight.\n\nShe didn't knock this time, she just walked in and closed the door behind her. It doesn't matter what she was wearing, because before either of us said a word she began to undress. Within 30 seconds, she was once again naked at the side of my bed.\n\n\"Good evening, Jessica.\" I said, without looking up from my laptop.\n\n\"Evening.\" she said.\n\nI turned to her.\n\n\"Can I help you with something?\" I said.\n\nShe smiled and rolled her eyes.\n\n\"Yeah, I want to see your cock.\"\n\nI raised an eyebrow.\n\n\"Sorry, I mean, pleeease let me see your cock?\" she said, smirking.\n\nShe lifted her chest up, thrusting out her big tits.\n\nI didn't like this. Before, she'd been genuinely pleading. Now she was just going along with what I wanted. She probably thought we would fuck tonight. She had seriously misread this relationship, it seemed.\n\n\"No, get out.\" I said.\n\nI turned back to my laptop.\n\n\"Aww, don't be like that.\" she said, \"I promise you won't regret it. I've...been practising, like you asked.\"\n\nI didn't ask her to practice, I told her. This was becoming irritating.\n\n\"Jessica, get the fuck out of my bedroom.\" I said.\n\nShe seemed a little worried now.\n\n\"Ok, I'm sorry, I'll do it properly...I really want to...to suck it and...\" she said.\n\nI was getting pissed off with her now.\n\nWithout turning, I slowly reached out and grabbed a handful of her hair.\n\n\"Wait, no, I'm sorry, I AH-\"\n\nI yanked her head towards mine, putting her ear right in front of my mouth. Her hands were wrapped around my wrist, and she was still struggling.\n\n\"I'm not going to say it again, slut. Get. Out.\" I hissed into her ear.\n\nI released her head and she stood up quickly, gathering her clothes. I didn't look at her, but I heard her sob once before she left.\n\nFor a second I just sat there, wondering at what I'd done. First I kicked her out of my room after literally begging me to fuck her, and now I wouldn't even let her practice sucking me off. Was I insane? A lonely virgin turning away this beautiful, eager girl?",
        "But it wasn't just any girl. It was Jessica. The girl I'd spent my entire childhood and adolescence being tormented by. The girl I'd spent so many years fearing and hating. I didn't want her as a girlfriend, the idea almost disgusted me. The only way this would work was if she was submissive to me, just like I'd read about.\n\nShe had to learn that she couldn't just come over here and flutter her eyelashes every time she wanted to fool around. I was in control here. I decided what we did and didn't do. And if she disobeyed me, she would be punished.\n\nI only hoped I'd made the right move.\n\n==\n\nNext week, I found out that I had.\n\nThings had gone back a step between us in everyday life, the relaxed chatting replaced with the former icy silence. But she still didn't dare insult me any more. And Rose didn't really notice any difference. My sister was great, but she could be somewhat socially dense at times, completely missing out on the clear tension between me and Jessica.\n\nThat night she knocked on the door at around midnight.\n\n\"Yes?\" I said.\n\nShe opened slowly and walked in, closing the door gently behind her. She was wearing a thin night gown. It wasn't anything too erotic, but I could tell from the thin weave that she wasn't wearing any underwear. I doubted she would have dressed like that to share a bed with my sister.\n\nShe stood at the door, her arms straight down at her sides, staring at the floor.\n\n\"What?\" I said.\n\n\"Look...\" she said. \"Are we going to...do something tonight, or not? I'm getting kind of anxious, if you know what I mean.\"\n\nI sighed.\n\n\"No Jessica, what do you mean?\"\n\nShe looked up.\n\n\"I mean...\" she said, \"I haven't...cum, since the last time we...you know...\"\n\n\"Well, you went your whole life without an orgasm up until two weeks ago, why the sudden hurry for another?\" I asked.\n\nShe looked away. She laced her fingers in front of her, fidgeting and nervous.\n\n\"It's...it feels different now. It's like my body has...woken up, or something.\" she said.\n\nI didn't say anything.\n\n\"I just...I never really got horny that much before, but now...I get wet, sometimes, when I'm alone...And you told me not to...to touch myself...\" she trailed off.\n\nI was surprised she'd remembered to obey that rule even when I wasn't around.\n\n\"I dumped my boyfriend.\" she said, \"I know you don't care, but I didn't want to be with him any more.\"\n\nShe looked away again, nervously.\n\n\"And...you told me to practice, I've been practising.\" she said.\n\nTold, not asked. Better.\n\n\"Practising what?\" I asked.\n\n\"Giving head. I'm getting pretty good, I think.\"\n\n\"Oh, and who have you been practising with, if not your ex?\" I asked.\n\n\"No, no one else. I've been using...other stuff.\" she said.\n\nI really wasn't sure about this. She obviously wanted to do something, and she was a lot more submissive than last week, but she wasn't quite desperate enough to beg. I was pretty sure I'd have to leave it another week or two for her to get really desperate.\n\n\"Ok, slut,\" I said, turning to her.\n\nShe smiled brightly. It was kind of hot to see how much she seemed to enjoy being called \"slut\".\n\n\"I'll make you a deal. If you can fit my whole cock in your mouth, I'll do whatever you want tonight. Sound good?\"\n\nHer eyes widened. She looked terrified.\n\n\"I...I don't think...\" she stuttered.\n\n\"If you don't want to try then just leave.\" I said.\n\nShe only took a second to decide. She pulled her night gown off in one sweep, revealing her wonderful naked body to me. She walked over to the bed and took her usual spot, kneeling beside my crotch. I didn't move this time, just waited.\n\nAfter a few seconds she realised what I wanted, and climbed up on to the bed.\n\nShe got on her knees and reached forward. She dug her fingers under my waistband, and I pushed my hips up as she pulled down my pants and underwear. I still felt a little thrill from the sense of exhibition. My dick was already getting hard from seeing her body. She took it in her hands and began slowly licking around the head.\n\nShe spent a minute or two just admiring it, slowly running her hands up and down, feeling it's girth and weight in her grip, occasionally planting gentle kisses on the shaft. She took her time with this, seeming to enjoy being allowed to hold it. \n\nShe seemed to have a better idea of what she was doing, this time. She kept swirling her tongue around the head, and never stopped the rhythm she had with her fingers. Within a minute my cock was rock hard and pointing straight up. She was almost massaging my shaft firmly with both hands, rather than the frustratingly light strokes she'd been using before. She kept her teeth completely out of the way, too. It felt amazing, I could do nothing but close my eyes and enjoy it.\n\nThen, without any sign of preparation or ceremony, she started trying to force my thick shaft into her mouth. Her tongue felt much better than last time, she seemed more aware of how to use it. As she pushed her head down farther, she began to moan loudly. This was so much better than two weeks ago. She really had been practising.\n\nBut not quite enough, it seemed. No matter how much she tried, she could only get about 3 or 4 inches of it into her mouth before she started gagging. She kept trying, each time seeming to get just a little bit closer, but in the end she didn't even make it half way.\n\nAfter maybe 5 minutes of this wonderful sensation, she pulled it out. She was panting loudly. Her mouth was covered in her own spit, and it was drooling down on to her heaving chest. She gazed at my cock with a look of almost hatred, and then lust, as she realised she wouldn't be able to take it all. She met my eyes, then quickly looked down in shame.\n\n\"I can't do it.\" she mumbled.\n\n\"You're giving up?\" I asked.\n\n\"Well...look at this thing!\"\n\nShe was holding it by the base, and she shook it slightly.\n\n\"It's impossible to fit it all the way!\" she whined.\n\nI reached out and rested my hand gently on her head.\n\n\"Well, until you do, you're not going to cum again.\" I said.\n\nHow's that for incentive?\n\nShe looked desperately in to my eyes.\n\n\"Come on, that's not-\"\n\n\"Are you arguing with me?\" I said, cutting her off.\n\n\"No, no, I'm not, I'm sorry...It's just...your cock felt so good on my pussy, even when it was just rubbing it...I can only imagine how good it'll feel if you force it up inside me...into my hot, tight little...cunt.\" she said, a slight moan carrying off the last word.\n\nI'd never heard her talk like this before, and I could tell from her reddening face that she wasn't used to it. She was trying to seduce me, to manipulate me.\n\n\"Shut up.\" I said, \"Finish me off.\"\n\n\"Can I at least touch myself when I do it? Can I try to make myself cum?\" she asked.\n\n\"No, you're not allowed to orgasm unless I say so, do you understand me? Now finish me off, and get out.\" I said.\n\nThis was important. She had to be willing to obey me, even if she wasn't directly getting anything out of it.\n\nShe sighed and started again, running her tongue all over the head of my cock. I'd been doing some practice of my own, trying to increase my endurance. I was usually able to come two, sometimes three times in quick succession before being unable to get hard, but I still wanted to last as long as possible.\n\nEven with her new techniques, I was able to last 10 minutes before pumping her mouth full of cum. She closed her eyes as I came. I knew that sperm supposedly tasted awful, but she seemed to be savouring the experience, letting out purring little moans as she swallowed.\n\nWhen I was finished, she quickly crawled up the bed and straddled my thigh, putting her arms around my shoulders. Her pussy was dripping wet and hot, and she was rubbing it very slightly against my leg.\n\n\"It's so good when you cum in my mouth, when your huge cock pulses for me...oh God, I'm so wet...\"\n\nI didn't say anything.\n\n\"Please.\" she said, looking me in the eye, \"Please, just touch me...I need to cum, please make me cum.\"\n\nI let her continue.\n\n\"Please, I'm your...your little slut.\" she moaned desperately. \"Make your little slut cum, please let me cum for you, please...\"\n\nI sighed.\n\nI grabbed her tightly by her stiff nipples, and pulled her closer to me. She let out that same little growl as before that I couldn't identify as either pleasure or pain, but was maybe a mix of both.\n\n\"You're a greedy little slut tonight, aren't you?\" I hissed, increasing my grip.\n\nHer body wanted to move away, but she had to lean closer to avoid her nipples being pulled even more.\n\n\"I'm...I'm sorry, I'm sorry!\" she cried.\n\nShe brought her hands down to lean against my chest, but she wasn't trying to stop me. It was so satisfying, seeing her accept the pain without resistance.\n\n\"Do you think you have a nice body, slut?\" I asked her.\n\nOver the pain I was causing her, she struggled to answer.\n\n\"I...I...I don't know, I...aaaahhhh.\" she whined.\n\n\"Answer me.\" I said calmly, twisting her nipples again.\n\n\"Yes! I...I think I do...\" she said.\n\n\"What's nice about your body, slut?\" I asked.\n\nI started to loosen my grip slightly, only to tighten it even further. I repeated this action, gripping and loosening, again and again.\n\n\"I...aah...aaaaahhh,\" she moaned.\n\nI gripped harder, prompting her to answer.\n\n\"My...my tits! I have big tits!\" she cried.\n\n\"What else?\" I said.\n\n\"I'm...mmmmm,\" she moaned, \"I'm fit...I keep f- Fit!\" she gasped.\n\n\"What else?\"\n\n\"I don't know, I...\"\n\n\"Do you think men notice your body?\" I asked quietly.\n\nShe bit her lip tightly, and nodded.\n\n\"Do you like it when they look at you?\" I asked.\n\n\"I...I don't know.\"\n\nI started lightly twisting her nipples again.\n\n\"Ah! Yes, I...I like when they look at my tits! I...want them to want me...\"\n\n\"And what does that make you?\" I asked.\n\n\"A...a slut, I'm a slut. I want them to look at me, I want to make them hard...\" she said, gasping.\n\nI knew this about her already, of course. For all her secret inexperience, she seemed to revel in being wanted by men, always dressing to show skin and cleavage. She'd had a reputation around school for being a tease for a while now. I wanted to hear her confess it to me, confess that she was just a vain bitch. As someone who'd never really been considered attractive, it was so satisfying to punish her for this. I know it was petty, but I wanted to hurt her.\n\n\"Do you want to do anything else with all these admirers?\" I asked.\n\n\"NO!\" she shouted, \"No, only you, only you...ahahh.\".\n\nI pulled her close to me, leaned in and put my lips to her ear.\n\n\"Get out, slut.\" I whispered.\n\nI released her nipples. She gasped and moaned at the relief. Her hands jumped up to her boobs and she started gently massaging them.\n\n\"Out.\" I repeated.\n\nShe gathered her clothes and left quickly, avoiding my eyes.\n\n==\n\nThe next Friday she came over again, this time wearing a little black neglig\u00e9e. It was completely see-through except for the bra, which was pushing her boobs up and giving her the most spectacular cleavage. I could see that she wasn't wearing any panties underneath it.\n\n\"Do you like this?\" she asked, swirling the hem around the top of her thighs, \"I bought it for you.\"\n\nIt was so strange, how even though I'd seen her naked so many times by now, this little bit of cover made things so erotic.\n\n\"It's very nice, Jessica.\" I said calmly.\n\nHer face lit up with delight. She bounced happily, her cleavage jiggling. She really wanted to please me. But I wanted her naked.\n\n\"But we wouldn't want to get it all messy, would we?\" I said.\n\nShe shook her head, huge smile still spread across her face, and started to slip out of it.\n\nSeeing how much my opinion mattered to her, how happy a simple compliment made her, was a huge turn-on.\n\nShe undressed, laying the thin material gently on my desk instead of just discarding it. She got up in front of me on the bed, then reached over and pulled my cock out of my underwear. I really enjoyed the look on her face every time she saw it, a recurring little shock of delight and arousal.\n\nAgain, she spent the first few minutes just kissing and licking it gently, enjoying the weight of it in her hands. I was fascinated by the look of admiration she had, and the almost reverential, worshipping attitude she showed towards my cock.\n\nShe was even more skilled than last time, and she managed to get even more of my thick shaft into her mouth. I finally reached her throat, but she couldn't push any farther no matter how hard she tried. After 15 minutes of intense effort on her part, I came in her hot, humming throat, thrusting the 5 inches or so that she could take as much as I could.\n\nAfterwards, she crawled up and lay beside me, her head resting on my shoulder.\n\nShe told me about how she went to bed every night straddling her pillow, to try to sooth the desires of her pussy. She told me how almost every time she went to sleep, she had vivid dreams about sucking my dick, and swallowing my cum, and that she woke up in the middle of the night, soaking wet. She told me about how she had to change her panties every time she thought about me for too long. She told me she couldn't concentrate in class, and that her parents, and Rose, were asking why she seemed so distracted all the time.\n\nShe told me she needed to cum.\n\nShe begged me to touch her.\n\nI told her to get out.\n\nShe looked devastated, but left without comment.\n\nI'd honestly never been happier in my life. Every week, the bitch I'd hated for years would come to my bedroom, suck me off, beg me to let her cum, and then leave incredibly frustrated but still obeying.\n\nShe was getting closer, though, to taking me completely. If she kept it up, I thought she could be deep-throating me in just a few weeks.\n\nBut as it turns out, I'd underestimated her.\n\n==\n\nJust one day before I was expecting to see her again, on the next Thursday, she approached me in public.\n\nI was hanging out with some friends in front of school, just after class had gotten out, when she walked up to me and told me she needed to talk, privately. My friends were stunned. I wasn't very close to them, or anyone really, but they all knew how much of a bitch she was. Not just to me, but to pretty much everyone except her closest friends, a group that I'd certainly never been a part of.\n\nI was honestly too shocked to reply, not knowing how to act. I could do nothing but let myself be led away by the arm.\n\nShe took me aside and whispered in my ear,\n\n\"My house is empty all day. If you want, you can come over later and we can...continue things.\" she said.\n\nI stepped back to look at her. This was the first time she'd brought up our little meetings outside of my bedroom. She bit her lip nervously, then leaned in again.\n\n\"Please...I really can't wait until tomorrow...just let me try today. I'm...I'm getting wet right now, just talking to you. I can't take it any more.\"\n\nI was shocked that she was being so bold, saying all this out in the open. I didn't know how to react.\n\n\"Shit...there's Rose, look just...I'll be waiting for you, if you want to come over. Please.\"\n\nShe walked up to Rose. They talked for a few seconds, then Jessica took off in the opposite direction.\n\nRose spotted me and walked over.\n\n\"Apparently Jessica hasn't been feeling well. Have you noticed her being a little off lately?\"\n\nI shrugged.\n\n\"I hope she's not coming down with something.\" she said.\n\n==\n\nI wasn't sure whether or not to go over to her place. It felt a little like she would be in control if I went where she told me to. But the way she'd asked...so meek, and pleading.\n\n\"I'll be waiting for you, if you want...\"\n\nI'd thought maybe another week of denial would be enough, but apparently she couldn't handle that. I decided to go with it. I showered and changed my clothes, and left the house an hour later.\n\nI knew where she lived, it was only a few minutes walk away from my house.\n\nShe was completely ecstatic that I'd decided to come. She invited me in and locked the door behind me. She seemed so subservient, even in her own home. She offered me something to eat or drink, she took my jacket off for me, asked me again if I wanted anything. But I didn't want to waste time.\n\nWe headed up to her bedroom.\n\nI hadn't been in it since we were kids, but it looked pretty much the same. A few things were different, like the double bed in the middle of the room, and the computer desk in the corner with a big swivel chair. Her computer was a few years old, and judging by how neat and tidy the whole area was, compared to her other desk in the corner which was covered with note books, I assumed she didn't use it much.\n\nShe still had that heavy wooden bookcase that I remembered, filled with all sizes and types of different books. They'd been mostly children's or young teen books before, but now almost half them looked weirdly like textbooks.\n\nShe was so excited about me being here. At first I thought she was just desperate, so much so that she was willing to invite me here just to try again a day sooner, even if she didn't have a chance, but the confidence in her smile told me otherwise.\n\nShe really thought she could do it.\n\n\"You're really eager to try again, aren't you?\" I asked.\n\n\"Yep.\" she said lightly.\n\nShe sat me down on her computer chair, and began to undo my belt buckle.\n\nI stopped her hands with mine.\n\n\"Aren't you forgetting something?\" I said.\n\nShe was confused for a second, but then realised what I meant.\n\n\"Oh...right...\" she said.\n\nI nodded.\n\nShe slowly began to undress, not making eye contact. I thought she'd gotten used to stripping in front of me by now, but she seemed so much more nervous, more humiliated, than when we were in my room.\n\nHer blinds were drawn, but not her curtains. Her body was even more unbelievable in the soft daylight.\n\nShe soon stood completely naked, hands by her sides, waiting for me to instruct her. Her earlier nervousness had disappeared, replaced by the strange gleam of confidence she usually had when she got naked.\n\nI think she enjoyed undressing for me. I didn't know whether it was the pride she had in her body, or just a desire to please me.\n\nI gestured to my crotch, and she went back to where she was before, on her knees in front of me, unbuckling my belt. She pulled my pants around my ankles and my cock sprang free, almost fully erect already. Something about doing this here, in her room, was really turning me on.\n\nShe began by kissing and stroking my cock, like always. Every time it seemed to take her a little while just to get over how big it was. The way she stroked it with her fingers, and held it against her cheek, always so gentle and admiring, as if worshipping it.\n\nShe licked me until I was fully erect, then she started gently sucking around the head. Her lips had made a seal around my cock head, and she sucked in her cheeks and started bobbing up and down with a steady rhythm. This felt different from what she normally did, somehow. The pressure inside her mouth was just a little more intense.\n\nShe pulled back after a few minutes.\n\n\"I want to show you something.\" she said.\n\nShe stood up and walked around her bed to her drawers. She opened the bottom one, dug around and pulled out a long object.\n\nIt was a cucumber.\n\n\"This is what I've been using for practice.\" she said.\n\nShe grinned and walked back over to me, kneeling in front of me again.\n\nShe held the vegetable up against my cock. The cucumber was about 2 inches shorter, and a good deal thinner.\n\nShe laughed.\n\n\"I couldn't find a bigger one.\" she said.\n\nShe threw it on the floor and got back to work.\n\nShe started again with kissing and licking, and soon progressed to the new thing she'd been doing earlier, with her lips clamped firmly around the top and her head bobbing steadily up and down. This time she was swirling her tongue around the tip in time with the rhythm of her head. I groaned with pleasure and grabbed a handful of her hair. I didn't pull it hard, just tugged on it.",
        "Every few seconds she bobbed deeper, another quarter of an inch or so. After a few minutes of this amazing routine, she had about almost half of my cock in her mouth, and she wasn't slowing. As she continued, I felt my cock head push against her throat, and keep on sliding down. When she finally stopped, there was only two inches left of my cock outside. She inhaled sharply through her nose and pushed hard.\n\nI couldn't believe it.\n\nShe moaned loudly, the vibrations adding to the pleasure, as she finally took the last of my cock inside her.\n\nHer lips were firmly wrapped around the base, and her tongue was licking against my balls. She'd done it. It felt insanely good, my mind was going blank from the sensation. I could feel every inch of my cock as I never had before, the whole thing was so warm and tingling with pleasure. I was suddenly so glad I'd made her do this.\n\nShe held this pose for maybe 10 seconds before slowly, but steadily, lifting her head off my cock. It looked bizarre, like a magic trick, all these inches of thick cock, drenched with spit, just flowing out of her hot little mouth. I groaned as she pulled back. When she reached the head, she pulled out it from between her lips with a pop, kissed it lightly, and rapidly swallowed the entire thing again. She repeated this a few times, swallowing, her lips sinking down to the base, then slowly sliding up.\n\nI entered her completely over and over. I literally felt like I was going to pass out, I'd never felt anything this mind-blowingly good.\n\nJust as my cock left her mouth for about the tenth time, I stood up suddenly and grabbed her head. I plunged my dick deep into her wet throat as hard as I could, and started thrusting in and out. She was moaning loudly, but didn't resist. She brought her hands up to my sides, digging her fingers into my hips for support. She kept her head still as I fucked her mouth. The sound of her hot, moist throat filled the room. My mind was completely blank as I came hard, pumping my hot cum down her swallowing throat. My hips continued on their own, making little jerking thrusts with each shot. When I was done, my knees felt so weak I could barely stand.\n\nI fell backwards into the chair, grunting at the sensation of my still-hard cock sliding once more out of her throat. She stayed on her knees with her eyes closed, panting heavily.\n\nThe only sound in the room for a few minutes was our strained breathing.\n\nWhen she opened her eyes, she seemed to be in some sort of trance. She slowly looked up at me.\n\n\"Did I do good?\" she asked quietly. Her voice was a low purr, heavy with arousal.\n\nI didn't say anything.\n\n\"I wanted to do good for you...I wanted to make you feel good...\"\n\nShe crawled towards me on all fours. My cock had begun to soften, and she leaned over to it and kissed it softly on the shaft. She closed her eyes and rested her head on my lap, like a dog would.\n\n\"I kept practising, every night...I wanted to take your whole cock...I wanted to feel you cum in my throat...\"\n\nIt seemed like submitting to me, being used or hurt by me, put her into this docile little daze. Fucking her mouth the way I did seemed to have a powerful effect on her.\n\nI finally found the strength to reply.\n\n\"Stand up.\" I said.\n\nShe slowly stood. She was relaxed, her eyes heavy lidded, and her lips parted. She stared straight ahead.\n\n\"Spread your legs.\" I said.\n\nShe shifted her weight slightly and moved one leg out. Her pussy was so wet that the lubrication was literally flowing down her legs. Her inner thighs were completely soaked, and the liquid was continuing to slide down, some trails of it reaching almost to she sides of her knees. I reached out and gently ran my finger along her thigh, sliding it around in the slick moisture. She shivered at the slight contact, and let out a small moan.\n\n\"Why haven't you made yourself cum?\" I asked.\n\n\"Because...you said...I'm not allowed.\" she answered, her breath catching.\n\n\"Does that matter? It's your body, isn't it?\" I asked.\n\nShe seemed to consider this for a moment.\n\n\"But...I'm your slut.\" she said simply.\n\n\"Yes...you are. And you've been a good little slut for me...\"\n\nShe slowly turned to looked me in the eye.\n\n\"I have? I wanted so badly to take your whole cock...did I do good?\"\n\n\"It was good. And now you get your reward.\"\n\nHer eyes widened. She began to show signs of normality, as her body began to fidget and squirm.\n\n\"Yesss...please yes, I need it, please...\" she whimpered.\n\n\"Go lie down on the bed.\" I said.\n\nShe let out a little squeal of delight and walked to the bed, suddenly animated with joy, bouncing happily as she moved. She pulled the covers all the way back and lay down.\n\nI stood up and undressed fully. My cock was rock hard again, and as I walked over to her it swayed back and forth with my steps. She stared at it, as if imagining what it would feel like inside her.\n\n\"There...there are condoms, in the bottom drawer...I'm...I'm on the pill, but if you want...\" she said, gesturing to where she'd pulled the cucumber from.\n\nI walked around and opened the drawer. I reached into a pile of her panties, and found a small box at the bottom. I took them out and chuckled to myself. These must have been her ex's. They weren't any brand I recognised. He must have had to buy them online, or something.\n\nI pulled one out of the box and threw it to her. She jumped up immediately and started to unwrap it. I climbed onto the bed, and she tried to push it around my cock. She stretched it hard, trying to fit it around my girth. She just about managed, but it was incredibly tight and uncomfortable. She unrolled it just a few inches before it tore at the top and split down the side.\n\nShe let out a little squeal of surprise as the condom broke, and I felt the same way. Even regular sized condoms were supposed to stretchy enough for almost any size, but then I remembered that these probably weren't regular condoms. Her ex probably had to buy a special size to fit him without being too loose, meaning even though they stretched, they were still far too small for me.\n\nShe stared at the shredded latex draped across the top of my dick. She seemed hypnotised my it. I took her gently under the chin, and turned face up towards mine.\n\n\"I don't think those are big enough, Jessica.\" I said softly.\n\nShe sighed slightly and bit her lip, seeming to look at me with a new found level of arousal. It was the ultimate comparison between the tiny penis that she was used to, and the giant cock she was about to get.\n\nShe moved quickly away from me as I removed the torn rubber. She lay back down and stared at me. She had one finger in her mouth, and was sucking on it absent-mindedly, playing with her lips.\n\nWe got in to position, her on her back and me on top. I wanted to take a little while to appreciate the scene first. She really was beautiful. I reached down and cupped her right breast, massaging it. She moaned slightly. I enjoyed the feel of it, so soft and firm.\n\nI looked down at her pussy. The sheet below her was already soaked in her juices. I knew she was ready, but she suddenly looked so small.\n\n\"Is this really what you want?\" I asked.\n\n\"Yes, yes, please...\" she whimpered.\n\nI pushed the head of my cock gently against the folds of her pussy, but went no further. She closed her eyes, and bit her lip hard.\n\n\"It's going to hurt, you know.\" I said.\n\nShe looked up at me.\n\n\"I like it when you hurt me.\" she said.\n\n\"You do?\" I asked.\n\nI was genuinely surprised, and curious.\n\n\"Yeah...when you pull my hair, or hurt my nipples...it feels good...I like it.\" she said slowly.\n\n\"You mean like this?\"\n\nI quickly grabbed the nipple of her right breast and squeezed it hard, twisting it. She cried out and arched her back.\n\n\"Yesssss...\" she hissed.\n\nI released her.\n\n\"I like it...\" she whimpered, her breath heavy, \"I like it when you hurt me. I like the pain.\"\n\nI really hadn't expected her masochistic side to be so strong.\n\n\"It reminds me that I'm yours...that I'm your slut...\" she said.\n\n\"You like being my slut, don't you?\" I asked.\n\n\"Yes, yes, I'm your slut, I'm yours...\" she said.\n\nShe wrapped her arms around my neck and pulled herself close to me, nuzzling her face against my neck.\n\n\"I want to be yours, I'm yours...\" she said.\n\nShe seemed to have a tendency to babble when I prompted her to talk like this. I pushed her roughly away from me and clamped my hand down over her mouth. She whimpered softly into it.\n\n\"Look at yourself.\" I said calmly, \"All that attitude. All that arrogance. And now you're mine? Just like that? Is a big cock all it takes to own you?\" I asked.\n\nShe moaned loudly and tried to move her head against my grip. I tightened my fingers and pushed her harder into the mattress. I held her there, and just watched her staring into my eyes, unable to speak.\n\nI pulled my hand away.\n\n\"I...I'm yours...I want to be yours...Only yours.\" she repeated.\n\nHer voice was shaking now, full of lust.\n\nSomething inside me was so satisfied by seeing her like this. But I could still feel it there, just like always. The deep pit of black rage inside me was rearing its head.\n\nI grabbed my cock with my left hand, and slowly began to push it against her pussy again.\n\n\"Beg for this.\" I said.\n\n\"Yesss...\" she moaned, \"Please fuck me. I want your big cock so bad...please fuck me, please...\"\n\n\"Do you really think you deserve it, slut?\" I asked, pulling my hips back.\n\n\"I...I don't know...I took your whole cock...just like you told me...\" she said quietly.\n\n\"Is that enough?\" I asked, my anger rising, \"Does that make up for how you've treated me our whole lives?\"\n\nShe looked ashamed, and terrified.\n\n\"I'm sorry...please, I'm so sorry...I'm just-\"\n\n\"A bitch?\" I said.\n\n\"Yes! Yes, I'm such a bitch, I know, I'm just-\"\n\n\"And now you want my cock? You think you've earned that?\"\n\nI felt the hot anger burn up in me, and this time I let it. My hand flew to her throat, and I pulled her close to me, choking her.\n\n\"After the years of abuse, the insults? After turning my own sister against me!?\" I shouted.\n\nShe didn't try to say anything, she couldn't. I tightened my grip around her throat for a few seconds as she gagged and choked, before shoving her back to the bed.\n\n\"Why should I give you anything you want?\" I said quietly.\n\nShe coughed a few times, and rubbed her throat. A tear rolled down her cheek.\n\n\"I'm sorry...\" she said, her voice ragged, \"I'm so, so sorry. Do what you want to me. P...please. Please. I'm...I'm sorry.\"\n\nHer voice was so soft, so meek. So utterly submissive. As she began to cry, I knew this wasn't an act, as I expected of her before. She wasn't just saying what I wanted, doing what I wanted because of my cock. She really was sorry for how she'd treated me in the past because now she wanted to belong to me.\n\nThis was it. She was beaten, broken, lying before me a willing slave. All that was left now was to fuck her. And now I was ready.\n\nI grabbed my cock by the base and pushed it against her pussy yet again. I started slowly at first, pushing with my hips until I felt her drenched pussy lips give slightly. She whimpered and began to pinch and twist her nipples. But I couldn't push any farther. The head of my cock wouldn't fit inside.\n\nThis felt like more than just a size issue, there was something physically preventing me from entering. I looked down at her body, disbelieving. My cock was pushing against her hymen. Her ex was so small that he hadn't broken it.\n\nI grinned. All I could think about now was how much this would hurt her.\n\n\"You feel that, cunt? I'm about to take your virginity.\"\n\nEvery humiliating memory of every old insult, every dirty look, and every God damn day I'd had to spend hiding in my own house fuelled me on. I let the full force of my anger take me over, finally releasing it after years of suppression. I gritted my teeth and forced myself into her tight cunt, pushing hard against the vice-like pressure. She was screaming now. It sounded like she was in a lot of pain. But this was what she'd wanted, what she'd begged for.\n\nI thought of those forum entries, about the women who'd been in so much pain after being with a well hung man that they'd never gone near them again. They talked about how it hurt to be stretched, how it ached for days afterwards. That's what I wanted for Jessica. I was going to fuck this girl raw.\n\nI started to push harder, forcing her pussy open. Her moaning increased, and she started that little guttural growl in her throat. It was difficult to enter her, she was so tight and I was so big.\n\nI continued my slow, hard penetration. She was so hot, and so wet. I was barely in and it already felt fantastic. When I got about half my length into her, her pussy started to pulse and quiver around my cock. I started to pull back out, slowly. When my cock head reached her opening again, I thrust in hard, back up to half length. At first it was slow, my muscles tensing with the effort of every thrust, but each time I got faster and faster, until I was pounding her hard with a rapid rhythm. It felt amazing, the intense heat, the tight walls of her pussy gripping and trembling around my cock. I brought my hands to her shoulders for a better grip, digging my fingers in hard, and started pounding even harder.\n\nTears were freely flowing down her face and she hadn't stopped moaning and squealing, her voice jumping and shaking as I fucked her. With each thrust I forced more into her, until I was almost completely inside each time. My body was slick with sweat and my breath was ragged with effort. It felt so good, I didn't know how long I'd be able to last.\n\nI kept up the pace, and soon I was surprised to feel my balls meeting the heat of her pussy lips. I looked down to see I was bottoming out; my entire cock was entering her completely with each stroke. I moaned with pleasure and increased my pace again. My hips were burning and her bed was shaking and creaking with my effort. I felt her wrap her legs around my waist, tightening around me each time I bottomed, as if wanting to hold me there.\n\nI looked down at her. Her tits were bouncing wildly. She was biting her lower lip hard, and her eyes were closed. I grabbed a handful of her hair and pulled. I wanted her eyes open.\n\nShe looked into my eyes, her face flushed and stained with tears. I felt the pleasure getting too intense. I plunged into her one last time. Her legs tightened around my back and she threw her arms around my neck. We screamed together as I shot my load into her, pulse after pulse of hot sperm filling her tight pussy. Intense pleasure fired down my cock, it felt like my whole body had gone numb except for this lightning bolt of sensation.\n\nAs my orgasm ended, the strength left my hips and I collapsed on top of her. My cock began to wilt slightly, becoming softer. With a huge effort, I rolled off of her, my slimy cock pulling out of her pussy and bringing with it a flow of semen, and some blood.\n\nI looked at her. She was breathing as heavily as I was. Her eyes were closed, and her lower lip was bleeding, a thin, red trail running down her chin. The sensations had been so intense that she'd broken the skin by biting too hard. Tears were still rolling gently down her face, and she let out a weak sob every now and again.\n\nWe lay in silence for a long time. I just watched her.\n\nAfter a while she slowly opened her eyes, meeting mine. She wiped the tears from her face. Groaning slightly in pain, she rolled to her side and moved her body closer to me. She crawled over until she was above me and set her head gently down against my shoulder. She reached up and slid her arms around my neck, hugging me.\n\nI used my thumb to wipe the blood from her chin, then gently rubbed it across her lips. She opened her mouth and licked my thumb as I pushed her lips around. I swept my hand up to her head and started to stroke her hair. I grabbed the blanket with my other hand and pulled it over us. She reacted to the warmth by snuggling close to me, nuzzling into my chest, and I put my arm around her waist.\n\nI wasn't really sure what to do. I felt completely drained of all emotion, all thought. All I knew was that holding her like this, for now, felt good.\n\nI ran my fingers up through her hair, caressing her gently. I had no idea what to say to her. I didn't know what I wanted any more.\n\nShe sighed happily against my chest, her warm breath tickling me.\n\n\"That was...\" she started.\n\nShe sighed again, and closed her eyes.\n\n\"That was incredible.\" she purred.\n\n\"Did it hurt?\" I asked.\n\nShe looked up at me.\n\n\"Yeah...But it felt so good...\"\n\nShe moved her hips forward, bringing our faces closer until her cheek rested against mine. Her hands moved up to caress my hair.\n\n\"When you...when you penetrated me...I had an orgasm.\" she whispered softly in my ear. \"It hurt so much...and I liked it...oh God,\" she said, shivering slightly, \"It felt so good...I'm so glad that...that you were my first. My real first, I mean\" \n\nI felt her smile, and she kissed me softly on the cheek.\n\n\"I just...I kept...cumming, over and over...when I took it all...when you were completely inside me...I thought I was going to die...\"\n\nShe slowly kissed me a few times along my jaw, letting her lips rest for a few seconds each time.\n\n\"My pussy still hurts.\" she said, wriggling her hips. \"Aahh...\", she sighed in pain, \"It hurts, but I like it. I'm all stretched out by your big cock.\"\n\nShe sighed happily and pulled back.\n\n\"Thank you.\" she said.\n\nShe held her face a few inches from mine. Her eyes were so big, such a clear, perfect green. Her smile seemed so sweet, so genuine. So innocent, somehow.\n\nWithout thinking, I kissed her. Gently at first, our lips moving tenderly together. I loved how she responded to my touch, pushing her body back slightly against my arms. I took her lower lip between my teeth and bit down, hard. She moaned softly, and I felt blood flowing into my mouth, metallic and warm. I'd re-opened the wound she'd made before. I released her lip and she slid her tongue into my mouth. She kissed me passionately, and I returned it.\n\nOur first kiss. My first kiss.\n\nShe pulled back, breathing heavily, blood staining her lip.\n\n\"I love you.\" she said.\n\nFor a second I was stunned. Then I felt a sudden flash of anger. She loved me? I gripped her hair and pulled it back, hard. She hissed and whimpered in pain, and I forcefully grabbed her jaw with my other hand. I loved the sounds she made, her soft mewls of pain and pleasure.\n\n\"How can you love me?\" I asked slowly, \"You don't even know me.\"\n\nShe gasped sharply in pain again as I tightened my grip.\n\n\"I do...I...I love...you,\" she moaned.\n\nI gripped tighter for a few seconds, until I saw tears touching the corners of her eyes. I released her, and she let her head drop onto my chest. Her breathing was heavy and I could feel her tears against my skin.\n\n\"Good.\" I said. \"Good girl.\"\n\nShe sighed happily and wrapped her arms around me.\n\nI didn't know how I felt about her any more.\n\nI thought about the things that usually made me the most angry, the worst memories of her mocking, of her public humiliation. Just like always a few hot waves of rage pulsed up in me, but I let them go, calming myself. The anger, the hatred, the repulsion I'd always felt for her was still there, though it felt lessened slightly.\n\nI thought about her grinding her pussy against my cock, begging for an orgasm. I thought about her delight in pleasing me, her face lighting up as I complimented her. I thought about her stunning resolve to deep throat my cock, surprising me by succeeding so quickly. My dick started to stiffen at the memories. Not much, just a twitch to remind me that she still turned me on.\n\nI thought of the few times we'd spoken recently, about how pleasant it had been just to hold a casual conversation with her. I thought about how good it felt just to be stroking her soft hair, and holding her naked body against mine. I felt the warmth of emotion that I honestly thought I'd never feel for her, a sweet affection that made me want to just hold her close to me.",
        "I couldn't understand it. The emotions I felt, such strong, deep seated hatred, and the new, bright joy and admiration, all mixed up with the lust I felt for her. Such completely opposed, conflicting feelings, but I felt them all for the same person, at the same time.\n\nWithout saying anything, I slowly pushed her off me. I got off the bed, and she curled up under the covers. I noticed that my cock was still wet with our combined juices, and her blood.\n\nI picked her panties up from the floor and used them to clean my cock. When I was finished I tossed them carelessly towards her. They landed on her thigh, but she didn't seem to notice. I got dressed and left without either of us saying another word.\n\n==\n\nI didn't see her for a while, after that. She took the next day off from school, and didn't come to stay over. When I asked Rose about it, she said that Jessica had been sick after all, and she couldn't get out of bed. I thought that part might actually be true, she could have been in so much pain that she couldn't walk. I smiled at that image.\n\nShe didn't come over on Saturday, either. Instead Rose visited her, hoping to cheer her up, or make her feel better. She suggested I join her, since Jessica and I were becoming closer recently, but I declined.\n\nAs the week went on, I didn't see her again, even at school. I didn't look for her, exactly, but it felt so rare not to see her at all these days. I didn't ask Rose any more about her, either. I almost did a few times, but something in me hesitated. I was still conflicted about my feelings for her.\n\nI thought about her constantly, remembering both why I hated her, and why I was starting to like her, all while trying not to picture her when I felt like jacking off. It was the strangest sensation. I'd had crushes before, what I thought was love at the time. Girls I watched from afar but never had he courage to approach, like many guys. I felt those same stupid feelings again, for Jessica. I thought about her smirk, her eyes, her wit. I also thought about how good it felt to hurt her, to watch her squirm in pain.\n\nI became lost in my thoughts, ignoring my friends and school work. I tried to distract myself by staying online all the time, reading, or watching movies. But my thoughts always drifted back to her.\n\nI stayed up for hours passed midnight almost every night, trying to think through my emotions half the time, and trying to forget them the rest. This is something I was usually good at, ignoring thoughts that made me uncomfortable, like homework I still had to finish, or if I thought that something was going to go badly, I could just make myself not think about. But this was too big, it was too much. I started falling a sleep in class, and I was tired all the time, just trying to understand what I was feeling, or to ignore it.\n\nThe next Friday I went to bed as soon as I got home from school. I was vaguely aware that there was something that I should be waiting for, but I'd pushed any thoughts of Jessica away. I was too sleep deprived and emotionally drained to care about what I'd forgotten.\n\nThat night, I jerked awake. I looked at my alarm clock to see that it was an hour after midnight, the bright, red 1:08 hurting my eyes. I sat up and held my head, trying to remember what had woken me.\n\nThere was a soft knock at the door."
    ],
    "authorname": "BackyardBottomslash",
    "tags": [
        "masochism",
        "orgasm denial",
        "big cock",
        "deep-throating",
        "sister's friend",
        "submisson",
        "dominance",
        "virgin",
        "female submission"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/yours-31"
}