{
    "title": "Mine, All Mine Ch. 04",
    "pages": [
        "Author's Note: Hey awesome readers! This is the last chapter of Mine, All Mine. If you haven't read the other chapters, might want to head to my profile and do that first so you know what's going on. Hope the ending is as fun for you to read as it was for me to write! Thanks for reading. :) \n\nText copyright \u00a9 2016 Eris Adderly\n\n*****\n\nPart IV: Mother Lode\n\nTaylor felt like the walking was good for her. That's why she parked Walt as far out in the back forty as she could manage. Besides, hiking through the campus parking lots in the summer sun went a long way to thawing out her bones from the last hour and a half in the freezing lecture hall.\n\nHer laptop bag bounced against her thigh as she went, while her brain sorted plans for the weekend.\n\nShe'd have to get the cameras, review the footage, document it, compile the data ... Somewhere in there a shower and a grocery run would need to happen, and she was going to have to force herself not to procrastinate on that. Sometimes the necessities of life were such a pain in the ass.\n\nHer phone vibrated in her back pocket; the extended vibe that meant a call and not a text. She reached back to grab it.\n\nHa HA! Didn't scare me today, you little fucker.\n\nThe caller ID showed her lab buddy, Reina Ochoa.\n\n\"Hey Reina,\" she answered, puffed with accomplishment that her ringer hadn't given her a heart attack today.\n\n\"Hey Taylor, how's it going?\" It sounded like she was driving.\n\n\"Not bad, not bad,\" she said, nearing the Jeep. \"What's up?\"\n\n\"Listen,\" Reina said, \"I'm really sorry but I'm not going to be able to help you this weekend.\"\n\nAw, come on. Seriously?\n\n\"Why, what's going on?\"\n\nReina made some long-suffering noise on the other end of the line. \"I got a call last night that my grandma fell. Apparently she fractured a hip. And her hands and arms are beat up real bad.\"\n\n\"Oh my god, is she gonna be OK?\" She stopped alongside Walt's green sides, shrugged off her bag.\n\n\"Probably.\" Reina sounded resigned. \"But either way, I'm the closest relative right now with a car, so I'm driving up to Lubbock as we speak.\"\n\n\"Wow.\"\n\n\"Yeah. So I'm probably going to be up here for at least a week. I feel really bad. I just ... there's nothing else I can do.\"\n\nTaylor's jaunty mood sank, but she had to say the right thing.\n\n\"No, no. You gotta help your family. I totally understand.\"\n\n\"If you want, I could give you Erin's number. She might be down to go check out the bats.\"\n\nTaylor knew Erin even less than she did Reina.\n\n\"Um, I think I'll be OK. I'll figure something out.\"\n\n\"OK,\" Reina said. \"Well, again, I'm really sorry. Nothing ever goes down the way you expect it, no?\"\n\n\"You got that right,\" Taylor said, marveling to herself at how much of her life that observation applied to at the moment. \"OK, well. Good luck with your grandma.\"\n\n\"Thanks. Good luck with the bats.\"\n\n\"Haha, right? OK, talk to you later.\"\n\n\"Later.\"\n\nTaylor stared at her phone, her backside leaning against the driver's seat of the Jeep.\n\nNow what?\n\nShe'd wrangled Reina into making the return trip to the mine with her because even though she and Ian had been trying to act like everything was normal, the idea of going back with him to ground zero made her toes curl. And in a cringe-y way, not in a good sexy way.\n\nBut now who was she going to ask? She needed those cameras back this weekend. The due date on this project was coming up fast and there still had to be time for data sifting.\n\nOf course she had plenty of acquaintance-level friends, and perhaps Reina had been the closest of them, but Taylor wanted help at the mine from someone she knew well enough to at least be sure they wouldn't do anything stupid. A person she trusted to catch her when she had to jump back down off that ledge, for example. She excluded herself from this criteria, as she'd already proven unable to meet it. Though bro-jobs probably didn't count for the sort of carelessness she was hoping to avoid.\n\nAnd her inner circle of friends had shrunk by one with the recent ugly departure of Amy. Even Chelsea and Nick were shunning Ian's ex for the crap she'd pulled.\n\nOut of the three left, besides herself, again there was only one option. One reliable, helpful, sanity-shredding option.\n\nYou can't just keep it together, woman? Not for half an afternoon?\n\nShe could act like an adult, couldn't she? One day of poor choices didn't necessitate a second. And by now, Taylor was sure, the last traces of spontaneity had drained from her system.\n\nLook. You need help. You know where to get it. No more tomfoolery.\n\nHe answered on the fourth ring, just when she thought she'd get a reprieve and it would go to voicemail.\n\n\"What up, Sharpie?\"\n\n\"Stuff,\" she said, already gritting her teeth to ask the favor. \"Ian, what are you doing on Saturday?\"\n\n* * * *\n\nTaylor's boot slid in the dirt and a shower of small rocks clattered down and away toward the black, open pit a few feet behind her. She swore and swiveled the tread under her toes back and forth a few times, carving out another flat spot and reached again, stretching her arm and fingertips to the limit.\n\nThe camera she'd nestled in above the wooden tunnel crossbeam touched her hand and she gave her fingers a flick, toppling it forward into a fumbling mid-air catch. With a zip and a tuck, she had it stowed in its padded little case and then further stashed inside her backpack.\n\nOn one hand, collecting the cameras seemed to go a lot faster than setting them up. Just grab, make sure they were powered down, and pack. For some reason, though, every part of the process felt like it took an excruciating amount of time, from the drive, to the descent into the mine, to picking their way back to the camera sites. It was just another variation, she thought, on what appeared to be the theme of the day.\n\nEverything was going bass-ackwards.\n\nShe squatted and sat down to brood, her back to the tunnel wall, while she waited for him to return. They'd agreed to meet back here, regardless of who finished first. Taylor hated to admit it, but at this point, she might have been better off if she'd just taken Erin's number from Reina. It was all just too uncomfortable.\n\nOn the drive to the mine, their normal banter must have had better things to do, because it left the shop in the care of awkward small-talk. Taylor hated small-talk the way cats hate it when anthropomorphizing owners try to put little outfits on them. It felt wrong and unnatural.\n\nShe'd attempted to give Ian a friendly hard time about his unprecedented decision to forgo shorts for pants today, but the role of his usual smart-assery had been recast with something sober and irritable. All she'd managed to get out of him was some grumbling about mesquite bushes and thorns and then a dozen or so more miles of silence. Broaching the topic of his job had yielded nothing of any more substance. It felt just like their text conversations, only in person, and with no helpful emojis.\n\nThe first trip to the mine had been an adventure; this one was a chore. Ian had even volunteered to retrieve one of the roost cameras, under the auspices of efficiency, but Taylor was beginning to suspect it had been an excuse to be away from her.\n\nIf he has such a problem with it, why did he agree to come out again in the first place?\n\nBecause he was Ian. He could no more resist a friend needing help than a McFly could back down from someone calling him chicken. She couldn't help but wonder whether she'd been willfully na\u00efve in asking him this time. Would another reasonable person have been able to predict the stormy vibe of this whole outing?\n\nGrit crunched under tennis shoes from further down the tunnel, and a light bobbed into view. Taylor stood, dusting off her hands. Just one camera left, and they'd agreed she should do the ledge again because the stronger person needed to boost and catch.\n\n\"Here you go,\" Ian said, handing her the camera he'd brought back. It joined its fellow in her pack.\n\n\"All right,\" she said, unable to help the way she matched his Spartan tones, \"it's just the ledge and then we're done.\"\n\n\"OK.\"\n\nOK. That was all Taylor was going to get out of him, she already knew. He'd said they were still friends, that day she'd shown up at his apartment, but this sure as hell didn't feel like it.\n\nShe moved past him back up the tunnel, her head lamp turning the void into earthen walls. Their footsteps were the only part of them making any attempt to be together.\n\n* * * *\n\n\"How long are you going to be?\"\n\nTaylor hauled herself the rest of the way onto the ledge and got her feet under her.\n\n\"God damn, man, I just got up here,\" she said, coming to a careful stand to avoid whacking her head on the ceiling. \"I can't imagine that long, just give me a few minutes.\" \n\nThe fuck is his problem? This is less work than the first time.\n\nThe crankiness in her voice sounded like her mother and she made a face no one could see. Any number of disturbing new precedents were establishing themselves today. Not the least of which was that fact that Ian Killbourne was starting to get on her nerves.\n\nShe palmed her way along the rock wall at the back of the ledge, ducking in a few places to save her scalp as she made her way over to the last camera. \n\nA rhythmic plastic tapping caught her attention as she went, and Taylor looked down. \n\nOh for\u2014 \n\nShe knelt to tie her boot, entirely unwilling to hover as a ghost over her mom's shoulder, reading a headline like: College Student Trips On Shoelace, Plummets To Death in Friendzone.\n\n\"Taylor,\" Ian's voice called up, impatient \"what are you doing?\"\n\n\"I'm getting this fucking camera!\"\n\nBrisk movements took her the last few feet and she snatched the device down, flexible tripod and all, from the tiny outcropping where she'd left it. They were snapping at one another now, and if that wasn't a signal to wrap things up, Taylor didn't know what was.\n\nThis is ridiculous. Why's he being such a dick?\n\nShe had to force herself to take careful steps back to the edge where he'd boosted her up, her ego working double-time to make her see red and be careless.\n\n\"All right,\" she said, crouching in place at last, \"are you ready?\"\n\n\"I've been ready. Let's go.\"\n\nTaylor ground her teeth. \"All right. One. Two. Three!\"\n\nShe pushed herself over and dropped. Like last time, Ian's hands caught her waist, only now the grip was harsher than she remembered. He grunted.\n\n\"Damn. Jump down, not on.\" With a shake of his head, he hoisted his own pack and turned to leave. Taylor felt her cheeks get hot. Her mile-long fuse had reached an end.\n\n\"Hey,\" she said, adding the last of the cameras to her bag, \"what's your problem today, huh?\" \n\nHe'd started an aggressive hike back toward the shaft, thumbs under the straps of his backpack as though he wanted to keep his gesturing in check.\n\n\"My problem,\" he said, without looking back, \"is that there's no way for me to be here without thinking about what happened on our last trip. And it's really kind of pissing me off.\"\n\nYou don't say?\n\n\"You're pissed off?\" They both ducked under a low ceiling, but kept moving. Brighter light promised escape ahead, but contentious words pulled at their feet like sucking mud.\n\n\"Yeah. I am. I mean, I'm not saying it's totally your fault, or anything. You know? I realize I could've said 'no'. But I didn't. And the fact is: that blow-job was a fucking tease.\"\n\n\"Excuse me?\" She'd almost caught up, and wanted to grab onto his pack and whip him around to face her. \n\n\"No, that's not what I mean,\" he said, the edge on his tone dulling ever-so-slightly. \"I don't mean you were teasing me, per se. I just mean\u2014\"he stopped and turned halfway back, trying to make thoughts into words\u2014\"it was like a taste of something I'm never going to have. Like ... that is just beyond the realm of things that are possible for me.\" One hand had come out to flail his frustrations.\n\nSomehow, Taylor couldn't right her frown as he turned and started walking again. \"Hey. The only reason that sort of thing is 'outside the realm' for you, is you. I'm not the one who stayed with someone who wouldn't blow me for four years.\"\n\nShe winced at herself. Jesus, you're being just as bad as he was. Worse, maybe.\n\n\"And I'm telling you like I told you before,\" he said as they stepped at last into the falling sunlight of the shaft, \"that wasn't the only thing going on between me and her. There were other issues.\"\n\n\"What other issues?\" She let her pack down into the dirt and fisted her hands on her hips, exasperation burning on high now that they were a sneeze away from flat-out yelling at each other. \n\nThe situation was progressing from bad to worse. The idea of remaining 'just friends' was gut-twisting enough, and it was a turmoil she'd brought upon herself. Now they were riling each other up in an escalating feedback loop of pointed words and harsh tones. 'Friends' was whipping past like a missed freeway offramp.\n\n\"Are we really going to have this conversation right now?\" His eyebrows threatened to leave his forehead. Taylor folded her arms and looked at him with her own obstinate stare.\n\n\"All right,\" he said, the words coming clipped. \"Fine.\" \n\nHis backpack joined hers on the ground. For a long moment, those green eyes of his bored into hers, challenging her to back down in her quest for details. When she didn't, he lifted his chin in fortification, ready to take no shit if she decided to start judging.\n\n\"My main problem I had going on with Amy was that I couldn't be myself around her. In the bedroom. And I didn't think I was ever going to be able to. And right up until she pulled that shit there at the end, I was really killing myself over whether I was going to just end it myself. And then you came along and\u2014\"\n\n\"Wait, what does that mean, you couldn't be yourself around her?\"\n\nHis forehead went into his hand, and she could see he was reliving old arguments. \"I mean, I talked to her about it. A whole bunch of times. I was trying to explain it, but ... every time she'd either laugh it off or act like I was being some sort of misogynist freak. I just ... gave up, after a while.\"\n\nIan's beating-around-the-bush levels had flown several thousand feet north of her tolerances. Taylor wanted to deck him.\n\n\"Ian, what is 'it'? What is the big fucking deal here?\"\n\nHe drew himself up, bracing for impact.\n\n\"I wanted to be her Dom.\" Her eyebrows tried to leave and join the rest of her hair, but he continued. \"I wanted to have that ... relationship. At least in the bedroom, anyway. Not everywhere else.\" He raked a hand over the top of his head. \"But she just didn't get it. And it's not like you can keep asking someone to do something that's not in their nature to do. But the more I figure out about myself, the more I realize it's in my nature. It's not just what I want to do, it's what I am.\"\n\nFor a half a second, Taylor's pupils dilated. Then laughter sputtered up out of her throat.\n\n\"You? A Dom?\" She almost choked. \"Give me a break! You nearly had a heart attack when I wanted to blow you. Who are you taking charge of?\"\n\n\"I'm serious, Taylor.\"\n\nThe set of his jaw should have been warning enough, but her own amusement blinded her. \n\n\"Shut the fuck up,\" she said, shaking her head in amused dismissal as she reached down for her bag. \"You're not anybody's Dom.\"\n\nA circle of fingers around her left bicep had a different opinion.\n\nHer eyes made the line. From shoes up to the rare pants, from the angle of a thigh up to the hem of black t-shirt. Arm, shoulder, jaw. Green eyes. \n\nTaylor saw it.\n\nThe whump of her very first heartbeat could not have been more powerful. \n\nIt wasn't unkind, that look. Rather, fierce. Determined. Hungry.\n\nA barrage of images assaulted her at once. Memories of videos watched, fantasies explored. She both did and did not believe it at the same time, past and present evidence conflicting. \n\nThe beautiful Ian Killbourne was staring down at her as if he intended to pull her soul up from the very earth and devour it piece by savory piece, and the only flimsy barrier in his way was permission.\n\nThis is either going to be the best or worst thing that's ever happened, right now.\n\nTaylor met his eyes. In a voice that would have been inaudible anywhere else but the stillness of the mine, she offered it.\n\n\"I fucking dare you.\"\n\nSome sleeping thing crackled to life at those four little words. Rumbled across his features in a distant thunder. Plea and challenge both filled the silent space until there was no room to breathe.\n\nThe gripping hand stole down to her wrist and in two strides they were back at the beam.\n\nIn a dizzying flash of motion, her other wrist joined its twin, pinned to the timber overhead, and Ian was in her space, looming. The pace of her heartbeat exploded out of the gate and she became conscious of the way her raised arms made her breasts jut against the wall of his chest.\n\nOh god. Oh my god.\n\nHis eyes were on her mouth, a predator waiting for the first hint of movement before a strike. She swallowed, wet her lips, and he descended.\n\nThe infamous New Year's kiss was a chaste, familial peck when it tried to shine its light against this. The flare of heat between her legs hit her like a wave from behind, and was about as wet. If he hadn't been holding her upright, she might have collapsed.\n\nThis wasn't a kiss. It was a reckoning. \n\nThey were two starving beasts, fighting over scraps. No. Over the only feast they'd seen in winter after long, lean winter. And one of them was out to stake his claim as alpha.\n\nHis mouth was on hers, consuming, subduing. The pressure from his grip on her wrists had her wanting to expose her throat, to grind on his thigh where it intruded between hers. \n\nAnd then, amid demands from his tongue and teeth, there was the unmistakable throb of hard dick at her hip.\n\nOh fuuuu ...\n\n\"You're right, Taylor.\" He broke from the kiss, leaving her drowning in dangerous eyes. \"I'm not anybody's Dom. Yet.\"\n\nThe ground fell away. He shifted his weight from one leg to the other and the tangle of their legs slipped together enough to make her swallow a groan. His free hand came to rest at her throat, the thumb in that fluttering hollow. Ian Killbourne's lips closed the distance again to graze his next words over hers.\n\n\"Would you like me to show you?\"\n\nYes. Everything.\n\nShe could manage only the tiniest of nods. When several years of repressed fantasies showed up at her doorstep, her tongue spent a minute trying to un-forget how to form words.\n\nHis face slid alongside hers, cheekbones whispering past, their upper bodies crowding closer. \n\n\"Out loud, Taylor.\" His quiet insistence fell hot on her ear. \n\nShe wet her lips with her tongue. Decided.\n\n\"Yes. Ian.\"\n\nThe first word was a response, but the second was pure desperation. Both he lapped up with a growl and another sobriety-banishing kiss.\n\nWhen he drew back this time, he did it fully, releasing her wrists and parting their bodies with a backward step. She could see the rise and fall of his chest and was sure her own was faring no better.\n\nThis is happening.\n\n\"Safeword.\" He was dead serious. Her heart leapt into her throat.\n\nOh god, oh fuck. Happening.\n\nHer eyes flicked from him, to the walls of the shaft, scrambling. She looked down at herself, lifted her hands. The gold bracelet and its charm caught the light on her still-tingling wrist. \n\n\"Pineapple.\"\n\nShe received a single nod to her blurted safeword, and it was her only warning before Ian made the gap between them disappear again. This time his hands found the small of her back. For whatever reason, even more than the kiss, the intimacy budding now felt volatile. On a hair-trigger, a torrent of lust could come rushing down and bury them both; molten, devastating.",
        "\"Rules,\" he said, holding her gaze as a warning preamble to god-knew-what chaos was about to ensue. She blinked up at him, nodding her readiness.\n\n\"You will speak when spoken to.\" \n\nShe gave another nod, eyes wide.\n\n\"You will not ask questions.\"\n\nNod.\n\n\"You will answer me with 'Yes, Sir'.\"\n\nOh fuck, he is not even messing around.\n\nHis eyebrows raised in question at this last one until she caught on. \n\n\"Yes, Sir.\"\n\n\"Just like that, Taylor.\" The use of her real name instead of any nicknames was doing things to her.\n\n\"And if you fail to follow any of these,\" he said, arms tightening around her back, \"there will be consequences.\"\n\nHis right hand slid down to take her left at this, bringing it between them. Before she had a chance to be unsettled at a move that smacked of skipping ahead several steps, he closed her fingers around the metal buckle there.\n\n\"What is this, Taylor?\"\n\nShe could have strummed a jangling cord out of the tension in the air.\n\n\"Um ... your belt?\" And the twitch of a brow made her add: \"Sir?\"\n\n\"That is correct.\" He gathered her close again with his right arm, sandwiching her hand in place. \"And you will earn one stripe each time you break a rule. Is that a reasonable punishment?\"\n\nThe image this conjured made moisture pearl out and spread in a warm line between her legs, almost as if on command. Dorky, everyday Ian from Taco Tuesday and movie nights over the last four years was gone. In his place was the man who urged her on behind closed eyelids in her darkened room, come to life and making her cream just the same.\n\nWas it a reasonable punishment? Probably. The real punishment was the fact that this whole thing stood a large chance of being a revenge fuck: his first opportunity to try out all the things Amy would never let him do. That they'd still end up friends. Or less.\n\nI'll take it. Sweet lord, if this is all I'll ever have, give it to me.\n\n\"Yes, Sir.\"\n\nHer agreement was the magic key, it seemed, and he was backing her toward the beam again. This time, when her shoulders met wood, he kept moving, stepping around the lower end of the timber where it was buried in decades of collected earth. With his hold on her hand, he guided her around as well, stopping her midway and tugging her to lean back. \n\nWhenever the beam had given up its hold in the surrounding walls of the shaft, it had met the ground some thirty degrees shy of vertical. This meant Taylor now half-stood astride, and half-leaned along its weathered length. In a way far removed from the worrisome state of affairs an hour ago, Ian wasted no time on small talk.\n\nThey were kissing again, this time with more leisure. Now, though, as he stood at the side of the beam, his hands wandered. The fingers at her waist rode up to her ribcage, her shoulder. He stroked the side of her face in a way that made her want to assault him with her hips.\n\nHer touch couldn't stay in one place, either. Fine. He was going to let this happen? She could damn well get hers, too. \n\nNow she would know what his chest felt like, his upper arms, the back of his neck. She would know what he tasted like when his breath came loud through kisses.\n\nThere was a tug on the bottom of her t-shirt and then a warm palm sliding over her belly. When the fingers tucked themselves between her hip and the waistband of her jeans, Taylor felt herself catapulted into reality.\n\nIan broke away to look at her when she gasped. His eyes wandered down to take in her parted lips, his hand wedged inches from knowing what her pussy felt like. He pulled it back, standing straight.\n\n\"Take off your left shoe.\"\n\nShe blinked at him, bereft.\n\n\"What?\"\n\n\"That's One,\" he said. \"Left shoe. Take it off.\"\n\nOne wha\u2014? Ohhh. No questions. And also ...\n\n\"Yes, Sir.\" She bent to start unlacing the boot.\n\n\"Better.\"\n\nOne. He was going to use the belt at least once. \n\nA thrill of fear sizzled up her spine.\n\nThe boot was off. She set it aside and looked up at him.\n\n\"Now your pant leg. Just the left one.\"\n\nOne pant leg? It made no sense, but she wasn't sure she was ready to hear him say 'Two'. Her fingers were at her fly before she had time to process the idea that Ian would be seeing her nude from the waist down in a few short moments. \n\n\"Huh. Commando,\" he said as the jeans came down. \"Nice.\" She knew she was red at that one.\n\nYou've seen his dick. It's only fair.\n\nTaylor stood there, awkward with one bare leg and her sock-clad foot in the dirt. She made her best effort to meet his eye without feeling unsure and small, while the sunlit air in the mine caressed her in places it usually didn't.\n\n\"Lean back again. How you were.\"\n\nShe did as he said, wincing on the way to the beam in anticipation of nails and splinters. To her relief, the surface was smooth aside from pits and grain, weather worn over the years so that it felt no more than sturdy and slightly textured at her back.\n\nIan had dropped to kneel at her bootless foot. Her eyes followed him, asking all the questions her mouth wasn't allowed.\n\nIn a series of quick, jerking motions, he shucked the pant leg on the other side down her thigh and past her knee, bunching the fabric along her calf and ankle.\n\nWhy hadn't he told her both legs if that was what he wanted? More questions she had to eat.\n\nBut the second side, once arranged to his liking, remained where it was, boot intact. Instead, he took up the discarded pant leg and threaded it behind the angled square base of the timber. \n\n\"Foot,\" he said simply, holding out his hand. Taylor lifted her socked foot into his grip, completely lost.\n\nWhat is he doing?\n\nAgain, with brisk movements, he threaded her foot back into the leg of her jeans, gathering the fabric low on her calf to match the other side. Then the boot was in his hand and he was wrangling it back into place, as well. This accomplished, he stood, looking satisfied.\n\nIt took her almost a full minute of staring down at herself before what he'd done managed to settle on her. The bare legs that ended in lowered jeans and hiking boots, one planted on either side of the beam, had lost all range of motion due to the connecting web of denim woven underneath it. Her own clothing was restraint and spreader in one.\n\nOhhh ffffuck.\n\nWhen she met his eyes again, he wore a smile that had her glad for the support at her back.\n\nHe didn't spend long gloating, though, and instead stepped around her to kneel at his backpack. After an audible zip and some rustling, he turned around to stand with a bungee cable in hand. Taylor physically bit her own lip to keep from asking.\n\n\"Arms up.\"\n\nHe was at her side again and she closed her mouth. A rational person would be asking whether this was a good idea to be letting a man she'd never played this way with before tie her up in an abandoned gold mine out in the middle of nowhere. Taylor Sharpe, however, was not a rational person. Not right now. Not under the spell of those eyes, that voice. \n\nShe raised her arms. Laid her wrists where she already knew he wanted them.\n\nHe was quick with the cord, wrapping it around the beam, hooking it onto itself. In seconds he had her bound, hand and foot, pussy exposed and, if she wasn't mistaken, beginning to scent the air. His knuckles made a line down the soft skin on the inside of her upper arm as he came in close.\n\n\"You know,\" he said, tipping her by the jaw to face him, \"I don't think my dick's ever been this hard in my life, Taylor.\"\n\nThe release of her groan was lost in another kiss. His hand was back, roaming without obstruction over her belly, up under her shirt. When his fingers hit her bra, he had no qualms. He pushed up past the underwire to palm a handful of breast and knead. A thumb sought and found her nipple, brushing it to hardness, meeting with forefinger to pull in a way that sent a bouquet of small noises into his mouth.\n\nDissatisfied with this, he left her panting to concentrate on rucking her shirt up under her arms. She watched his eyes assess her bra and, with no way to remove it completely while her wrists were bound, he settled for shoving it up and out of the way.\n\nEven restrained, Taylor couldn't help a discreet swell of pride at the groan the first sight of her bared body earned from him. Indecision gathered his brows for the briefest of moments, only to be replaced by hunger.\n\nHis mouth was on her, lapping, nuzzling between her breasts. How had she arrived here? Not more than fifteen minutes ago, they'd been ready to go for each other's throats. And now they were\u2014ohmygod my nipple is in his fucking mouth!\n\nThe suckling stopped all thought. The pulling and pinching of fingers in tandem with the work of his mouth had her hips rolling at empty space.\n\nHow had they arrived here? How was off-limits, unobtainable, Ian Fucking Killbourne standing over her, making her body quiver and gush, when a week ago he'd been expressing concerns that she would try to make a blowjob into a relationship? \n\nWith a last-minute nip of his teeth, he left off his delicious torment and stood up straight, considering. Then he returned to the backpack. Her nipples were wet and perking in the air, and she was more conscious of her nudity then perhaps she'd ever been in her life. \n\nWhen he rose and faced her again, she jerked against the bungee cord for the first time since they'd begun. \n\n\"OK, why do you even have clothespins in your backpack?\" \n\n\"That's Two,\" he said, moving near again. \n\nFuck. But seriously, why? In her head, she growled. Something she'd have to ask afterward. Now, it would only earn her another round with the belt. \n\nAnd yet, another, larger question gnawed with such insistence she had to risk it. She would take a stripe just to know. \n\n\"Ian,\" she said, stopping him in his tracks, \"I know it'll cost me, but ... you seem to really kind of know what you're doing here. I thought Amy never let you do any of this stuff?\"\n\nHe smirked at her, nodding. \"You're right. That's number Three, now. But, I have to say, I'm impressed. You must really want to know if you're willing to pay with your own ass.\" He lowered his hand with the threatening clothespins. \n\n\"All right, Taylor,\" he said, straddling her where she lay along the beam\u2014and, oh god, did his weight on her feel like the most perfect sin\u2014\"I'll let you have this one.\" She shifted on the beam, restless, and he continued.\n\n\"You know how I go home to Hollywood sometimes?\" \n\nShe nodded, and tried not to let the pressure of his erection on her mound drive her to distraction. It didn't help that he continued his answer while working kisses along her throat. \n\n\"Well, a couple of the times,\" he said, voice low, \"some of my old friends invited me to some very interesting clubs. And I saw a whole lot of things going on there.\" Jesus Christ, if he didn't stop, she was going to end up with a hickey. \"Now, I never got involved, I was just there to be curious and gawk at everything. But I'll be damned if I didn't take a lot of mental notes.\" There was no need to see his face to know he wore a devious smile at this. Her heart skittered. \n\nAnd now he has clothespins. \n\n\"So this triggers a question I have to ask now, my brave little subbie,\" he said, levering himself far enough away to capture her eyes.\n\nOK, why does it make me throb when he calls me that? \n\n\"What's that?\" Fuck. \"Sir?\"\n\nHe shifted his hips, teasing fabric and a rigid promise over her bare pussy. \"Good save,\" he chuckled. \"You say I 'seem to know what I'm doing'? Well you seem pretty eager, yourself.\" The sex in his grin was killing her. \"Have you ever played before? Are you secretly a way more exciting person than I ever knew about?\"\n\nShe shook her head, tongue-tied at his grinding.\n\nNnghhh. What a cock tease. Or cunt tease. Whatever. \n\n\"But you're way into it, aren't you?\" He brought a hand up to lace their fingers together above her head. Without thought, she turned her face to kiss the inside of his bicep where it had brushed along her ear.\n\n\"Mmhm,\" she nodded, tasting. \"Yes, Sir.\"\n\n\"And why is that? Hmm? Have you been watching dirty movies on the internet?\" At least he sounded amused, teasing. Taylor shifted under the dark velvet of gaze.\n\n\"Yes I have, Sir.\" The words came out as a breath. If he was getting her this worked up just talking about it ... And not even really talking. Just hinting, for fuck's sake.\n\nHe brought one of the clothespins up, dragged it down in a whisper over her lips and chin. \"And would you like to try a little bit of pain? See how it suits you?\"\n\nCould she come from him telling her about it? Fuck.\n\n\"I think I would,\" she said, a prisoner of pale green eyes more than any physical restraint. \"Sir.\"\n\n\"See?\" he said, grinning wider. \"Adventurous. I like that. And you know what to say if it's too much, right?\"\n\n\"Yes, Sir.\" \n\n\"Good.\"\n\nShe felt him lift his leg and pivot off to the side again, the cup of his palm hefting her breast, plucking at the nipple with his fing\u2014 \n\n\"Gaaahh! Fuck!\"\n\nHoly\u2014! Taylor looked down to see the pink tip pinched in a spring-loaded, angry little wooden mouth.\n\nOh god! Jeeeesus!\n\nNames of fruit were flashing in her head, but she bit her lip. She could take it. She would take it. Especially when the smarting pain seemed to spark a sympathetic throb in her clit. Curiosity ...\n\nTaylor squealed at the second one, even when she knew it was coming. But now her nipples were panging out a rhythm of distress in time with the ripe, pleading twitch between her thighs. With both hands at once, Ian gave the bobbing pincers a flick, making her yip and shiver, even in the hot summer air.\n\nAnd he'd still never explained why the damn things were in his backpack in the first place. But there were bigger problems, now. A palm was travelling south over her belly. \n\nHer breath sped up when the first touch of fingers cupped her mound, squeezing. This, in turn, set her breasts heaving, and then, of course, the clothespins nodding and biting. And then his caress grew more specific.\n\nNow he was parting her lips, separating folds. Her body had long ago assured him no resistance. She wouldn't have been surprised if he told her it was dripping down her legs. When his fingertips wriggled in a teasing little dance over her clit, Taylor gave up trying to watch and put her head back on the beam, rolling her eyes up into her head and biting off a groan. For what reason, she didn't know. It wasn't as though anyone could hear them.\n\n\"God damn,\" he said. \"Soaked.\" She gave up another whine at this.\n\nAnd there he was. Finding her entrance. Testing. For a brief moment, she thought about having a heart attack. But then they moved past testing and into implementation. \n\nA finger was inside her and she gasped. Then nothing was inside her. Then two fingers!\n\n\"Ian!\"\n\nHis chuckle was dark with amusement. \"That's Four.\"\n\nFuck. It was probably too late to add the 'Sir'.\n\n\"Now Taylor,\" he said, lowering himself to kneel at her side, fingers still shifting, working, \"you have one job. Do you know what that is?\"\n\nHer brows pinched together at the slick, moving pressure. \"Mmm ... no, Sir?\"\n\n\"Don't come.\"\n\nThe next thing she saw was the top of his head. And then came his mouth.\n\nTaylor drew in a frantic breath as though someone was about to thrust her underwater. The Ian of her baroque and impossible fantasies began to show her pussy what it was like to be an offering atop a pagan altar. \n\nHe ate. He worshipped. He filled her with fingers both reverential and demanding, daring her to respond, to wet his chin and knuckles with her lust.\n\nHer hips knew only to reach, to push her swollen flesh against the indescribable things he did to her. More, the writhing she could no longer control kept the clothespins nodding. The sharp contrast of their musical ache to the sweet chorus he had building between her thighs was sending her on a dangerous upward spiral.\n\nThe fingers crooked, shifted to a different angle. She clamped down on his hand, almost trying to stop it.\n\nOh, sweet mother of\u2014! No! Don't! \n\nWhen he chuckled she knew it was over. \n\nHis mouth latched onto her clit, suckling, and the fingertips struck home, again and again. The pressure was there, building, gaining momentum. \n\nHold out. Hold out. Hold out. Nnrrrrgggh!\n\nHis free hand came up, precipitating disaster. And the tongue. Oh, god, the tongue!\n\nHe yanked off the right clothespin.\n\nOh FUCK! \n\nShe felt herself gush down his hand, her body a reckless time-bomb of surface tension.\n\nDon't come. Don't come! Don\u2014\n\n\"AaaAAHHH! SHIT!\"\n\nThe left one launched her sky high.\n\n\"Ian! FUCK! Nnnngggg! Fuckfuckfuck!\"\n\nTaylor disintegrated into panting, jerking, while Ian pushed to see how far he could take her.\n\nThey discovered together it was quite a distance. At least he stopped before she was speaking in tongues.\n\nThe retreat of his hand left her pussy clutching at nothing. At phantom starbursts of pleasure. Her nipples were throbbing back to something like normal as he stood, and then taste of her collapse in discipline was in her mouth, along with his fingers.\n\n\"Suck.\"\n\nShe sucked, pleading with green eyes.\n\n\"You had one job, Taylor.\"\n\nHer sated cunt thumped away, unable to care less.\n\n\"What was that job?\" he prompted her, removing the fingers.\n\n\"Not to\"\u2014she swallowed, wetting her throat\u2014\"not to come? Sir.\"\n\n\"That's right.\" The upturned line of his mouth was oh-so-pleased at her failure. \"And that's Five.\"\n\nHe had the bungee off and his fist in her hair before she could pull in another breath. Her arms fell limp alongside the beam as he wrested a triumphant kiss from her lips.\n\n\"Now put your hands on the ground,\" he said, releasing her to the next leg of their journey, \"and take your licks like you agreed.\"\n\nThe way he held her eyes as he said this ... they were bound up in this thing now, each needing what the other offered. It was too much. A perfect, delirious amount of too much. She bent forward, walking her hands down her naked thighs until they passed her ankles and her fingers sank into the soft dirt a full pace away from where her tethered feet were still planted.\n\nSomehow, with her ass in the air, still-damp sex exposed from behind, she felt even more vulnerable. \n\nIan's palm was on her backside, caressing a cheek. There were probably lines on it from the wood. Hell, there were about to be more lines. Five, to be exact. She shuddered, her hair curtaining one side of her face, the sound of her breath punctuating the silence of the mine.\n\nShe heard the gossip of the metal buckle. Then she felt leather. The cool surface smoothed a deceptively sweet line over the place where her cheeks met her thighs. It was an ill-fated romance. \n\n\"Count them off, Taylor.\"\n\nCRACK!\n\nIt was all the warning she got. A stripe of fire became the center of her existence.\n\n\"Ow! Fffuck!\" And then, before she forgot: \"O-one. Sir.\"\n\nHoooo ... this was not going to be as easy as it looked in the videos.\n\n\"Good,\" he said, giving credit. \"And why are you being punished?\" She was going to have to talk right now?\n\n\"Because I came, Sir.\"\n\n\"That's a reason.\"\n\nCRACK!\n\n\"MmmMMGH! Two, Sir!\"\n\n\"And what's another reason?\"\n\nThe blood was singing across her upturned cheeks in two distinct lines. \n\n\"I-I asked questions, Sir?\"\n\n\"Yes you did. Three of them.\"\n\nCRACK! CRACK!\n\nShe barked out something between a growl and a wail at the twin kisses of pain. \n\n\"Three! Four, Sir!\"\n\nMuch like with the clothespins, the sharp rush screaming across her untried flesh somehow had her pussy leaking again. Taylor wanted to stand up straight, to arch her back, but that would surely bring its own problems. She'd settle for his fingers again, pushing in, making her arousal gush out around them. It's possible the thought made her angle her hips to show him more. Maybe that was why he made that frustrated noise under his breath.",
        "\"There's one last reason,\" he said, trying to hold himself together from the sound of it. \"What is it?\"\n\nHer head spun. What was it? She had asked a bunch of questions. And then came all over his goddamn hand. What else had she\u2014ah. Right.\n\n\"I forgot your name. Sir.\"\n\n\"But you won't forget it again, will you?\"\n\nCRACK!\n\n\"Aaghh! Five, Sir! No, I will not, Sir!\"\n\nBy the time the last of it was out of her mouth, she felt him leaning over her, covering her back with his chest, his palm smoothing over the buzzing network of punishment he'd painted on her ass. His tongue came honeyed and beckoning, Mephistopheles at her ear.\n\n\"Now there's a good girl.\" \n\nShe almost came again on the spot. It was like he'd been there that night when she'd lost her shit to those same words, imagined while she worked her toy. \n\n\"Can you think of any reason,\" he went on, \"that my cock shouldn't be in you?\"\n\nOh god.\n\n\"No, Sir.\" Her voice was firm, certain. \"No reason at all.\"\n\nAnd of course, his belt was already off ...\n\nThe silence around them amplified the zip of his fly, the rustle of fabric. She could feel the powdery earth packing up under her nails, could smell her own lust on the air.\n\nOnce a person has felt the first kiss of a cockhead pressing against their body, they can mistake it for nothing else. Taylor knew Ian's cock. By her own bizarre machinations, she'd come to taste it not long ago. To trace out its hills and valleys with her tongue. To hear the noises it let her bring from the man she'd spent several years coveting. Now it was going to know her.\n\nThere was nothing he had to do. She was already obscenely slick. Ready.\n\n\"Thank you, Taylor.\"\n\nShe was full of cock. Full. And her gasp was the first of many.\n\nThe building tease of their play was probably the culprit. Ian made no efforts to be gentle. The relief of that first thrust must have been great, because he jerked his hips back to repeat it, slapping his thighs to her burning skin and hammering his shaft in to the hilt.\n\n\"Ian! Sir!\"\n\nHe made some animal noise behind her just before she felt her hair tangled among fingers again. He brought her further upright by the rough handhold, only to switch gears and take up her wrists, one in each hand, and haul back like a set of reins.\n\nNow, he pounded. The leverage let him bounce her ass off his pelvis, and he did, with a fury.\n\n\"Oh yes! God! Please!\"\n\nTaylor cried out as he packed her full. The blunt punctuation of plump cockhead battering away at her sanity combined with the warm slap of balls, of working thighs, was an uncontrollable rattle of sensation. A freight train barreling like a steel avalanche down an incline of louder and louder screams.\n\nAnd then he started hitting that spot.\n\nOoooooh fuck ... Oooh there it is ... Oh no! Oh shit!\n\n\"Ian! Ian, please!\"\n\n\"Oh, god yeah,\" he growled, increasing his assault. \"Come. Come on my cock.\"\n\n\"Nnnnghhhaaa! Ian! Fuck! FUCK! Do it! Do it! DoitohJesusFUCK!\"\n\nWhatever else came out of her mouth was gibberish. She bucked and shuddered on the impaling girth, and he continued to feed it up into her without mercy until she'd wrung herself dry.\n\n\"Taylor.\" Now he was urgent. \"Taylor, I'm gonna come. Where?\"\n\nShe didn't need clarification, nor did she hesitate. \"In my mouth.\"\n\nShe was vacant, fluttering, as he let go her wrists and circled around in front of her. There was his cock, red and slick in his pumping fist, a look on his face that would be seared into her brain forever, no matter where life dropped them after this. \n\n\"Beg.\" She already had her palms braced on his hips, but those eyes were fixed on hers. \"Beg for it, Taylor. Beg for my cock.\"\n\nHe goddamn well was somebody's Dom, wasn't he?\n\n\"Please, Ian. Sir.\" There was no need to fake sincerity. She wanted it. \"Please let me have your cock.\" \n\nHe worked it, engorged, eager, near her open mouth, withholding. Unsatisfied.\n\n\"Please! Please, I need it, Sir. I need your cock down my throat, I need to have your load in my mouth right now! Sir, Ian, please let me taste ymmph!\"\n\nIt was no more than two or three determined thrusts of his hips before he exploded in a roar.\n\n\"Taylor! Fuck!\"\n\nThe salt, like before, was on the back of her tongue in hot jets, and Taylor swallowed it down, hoping to claim every bit of his climax for herself. \n\nEverything slowed with the last of his strokes, but she made sure to stay sealed in place to capture it all. By the time he moved back, her heartbeat was settling. Her lungs were trying to get back to more normal routines.\n\nIan was leaning against the rough wall of the mine shaft, fastening his fly and working to calm his own heaving chest.\n\n\"Wow.\"\n\nAll things considered, it was a pretty lame summary. He laughed anyway.\n\n\"Yeah. You could say that.\"\n\nShe leaned down to start unlacing her boot, but he knelt and shooed her away, handling the operation himself. When the boot was off, she pulled back her leg and untangled herself from the beam, moving to half-sit, half-lean on it for support. There was time to contemplate reality while she got her jeans on properly\u2014no thanks to her stinging ass\u2014and the boot back in place.\n\nIan was winding the bungee up and collecting the clothespins together to tuck them away in his pack. He was so goddamn organized. So efficient. All business. There was always a plan with Ian. And Taylor had known two weeks ago that she had never been a part of it.\n\nShe couldn't help but laugh. Mostly because heartbreak lived somewhere close to hysteria.\n\n\"Well,\" she said out loud, all filters gone, \"I have to say ... that was some of the best by-proxy revenge fucking I've ever had.\"\n\nHis head whipped around at this and he swiveled up to a stand. The serious brows were back, along with the grim mouth.\n\n\"What?\" She was near giggling. \"You don't want me pointing out the obvious?\"\n\n\"Taylor,\" he said, standing in front of her again so that she had to bend her neck to look up at him, \"I don't know what you think just happened, but ... this wasn't a revenge fuck.\"\n\n\"Oh no?\"\n\nNow he had her face in his hands, and he was nudging upward, urging her to stand. She stood, and the hands moved to lace behind her neck. \n\n\"Honey, I don't know how much more obvious I have to be.\" A dangerous note of hope trilled beneath her ribs. \"The things we did today? Those are things I've wanted to do with you.\"\n\nShe blinked at him, emotions hovering.\n\n\"I've had it pent up for years, Taylor.\" Why were her eyes stinging? \"I just ... never thought you were interested. Well, OK, there was New Year's Eve, but then you never brought it up again and I just assumed we were chalking it up to alcohol. And there was always Amy, so ... I just let it go, I guess.\"\n\nHer brain was still working to catch up. \"But ... when I came to your apartment.\" Her eyes searched his, still disbelieving. \"You said you were worried I was going to try to make the blowjob into a thing. That you thought I was going to get all clingy and weird. Why would you\u2014\"\n\n\"Because it seemed like what you wanted to hear!\" Now his hands were on her shoulders, as if he could shake sense into her. \"And that's what you said, too!\"\n\n\"Because that's what you wanted to\u2014oh for fuck's sakes, Ian!\" She was shoving at his chest, but he was gathering her in his arms, squeezing. \"I was fucking pining for you, you motherfucker! You don't even know! Why do you think I almost shit a brick when Amy sent you that text? In my stupid little head, you were mine already, and how dare she fucking hurt you?\"\n\n\"Taylor, forget Amy.\" His knuckles were under her chin, persuading her to meet his eyes again. This time they were softer, but full of something huge and scary. Something she'd been looking for and not finding for years.\n\n\"Forget fucking everybody,\" he said. \"Wouldn't it be nice to just date your best friend?\"\n\nIf she'd been wearing panties, that smile of his would have melted them off,\n\n\"So I still get to be your best friend?\" She was grinning back now, and he shook his head.\n\n\"Shut the fuck up, Sharpie.\"\n\nKissing, she decided as he tilted her head back, might just be the best part.\n\n* * * *\n\nSix Months Later\n\n\n\n\"I can't believe how long it took you two idiots to decide you wanted to be together.\"\n\nTaylor wadded up a napkin and threw it at Nick, who batted it away with the slice of pizza in his hand. \"I don't think the guy who got drunk and called 911 because he thought his hoodie on a coat rack was a ghost should be calling anyone an idiot. Punk ass.\" \n\nShe leaned back, snuggling into the crook of Ian's arm again, and he gave her hip a squeeze.\n\n\"Whatever,\" Nick said, rescuing a pepperoni before it fell on his lap. \"I'm just saying everyone else saw it but you.\"\n\n\"We totally did,\" called Chelsea from the kitchen.\n\n\"Yeah?\" said Ian. \"Well then why didn't either of you matchmakers say anything?\"\n\n\"Because you would listen to us,\" said Nick. \"Yeah, OK.\" He stood up, taking his paper plate and empty cup to join Chelsea for the beginnings of post-Movie Night cleanup.\n\nWhen Nick rounded the corner, Taylor poked Ian in the ribs. He poked her back. They engaged in a furious faux slap-fight that ended in laughter and a bit of what might not be considered \"work appropriate\" touching.\n\n\"Hey,\" he said, mouth close to her ear as he circled his arms around her, \"are you wearing it?\"\n\nHer face got hot and she glanced toward the kitchen. The other two were still bustling around in there. She shifted on the couch and felt the plug answer back, nudging at her and making her constantly aware of her body. \n\n\"Yes, I am.\" She couldn't help the tone of satisfaction that he hadn't been able to catch her unprepared.\n\n\"Yes, what, Taylor?\" His fingers laced into her hair and goosebumps pebbled her arms. How had she gotten so lucky? She leaned close and said the words her best friend wanted to hear.\n\n\"Yes, Sir.\"\n\n* * * *\n\nThere it is! Was it good for you? Did you groan at the horrible puns the story and chapter titles are? Say 'Hi' in the comments; I'd love to hear from you!\n\n~Eris/D&T"
    ],
    "authorname": "DeathAndTaxes",
    "tags": [
        "bondage",
        "submission",
        "male dominant",
        "punishment",
        "nipple clamps",
        "fsub",
        "dominance",
        "belt",
        "cunnilingus",
        "pain"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/mine-all-mine-ch-04"
}