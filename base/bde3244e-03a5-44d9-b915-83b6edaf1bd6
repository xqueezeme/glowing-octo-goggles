{
    "title": "The New Principal Ch. 18",
    "pages": [
        "The next thing I remember was the sensation of flesh touching my flesh. There were warm bodies on every side of me. I felt an arm draped over my chest, and a leg wrapped around my leg on the other side. Then there was hair. There was hair everywhere, piled heaping over my right shoulder.\n\nI heard the faint sounds of light snoring and more peaceful breathing. \n\nI lay there enjoying the sensations: touch, sound, even the lingering smell of the previous night's activities layered over each women's individual natural scent. I turned my head to bury myself in what was clearly Kimberly's hair. \n\nI felt a growing need, and knew I would have to get up to go to the bathroom, but I was so warm and comfortable, and I didn't want to disturb anyone.\n\nBut the more I thought about it, the worse the urge grew.\n\nFinally, I had to move. I opened my eyes and took in the scene. It was indeed Kimberly who was curled up on my right, her angelic face even more peaceful in sleep. She was smiling very slightly. A sheet was draped halfway over her, leaving one perfect breast exposed.\n\nI slid my hand out from under her and sat up to see the pair on my left. Veronica and Jennifer were entwined together, with Veronica's back to me, her long lithe form holding the much smaller Jennifer gently to the side. The visual contrast was lovely. Jennifer's skin was fairly dark, I had always assumed she had Persian ancestry because of her name, but next to Veronica's rich dark skin, she looked certifiably pale. More than that was the difference in height. Veronica was a very tall woman, I didn't even need to look down to kiss her, and in her crazy heels, she was taller than me. She was wrapped almost all the way around Jennifer. Knowing how strong Jennifer was, it was nice to see her cradled so protectively.\n\nI was able to scoot down the bed without disturbing the women too much. \n\nI stood up, then moved over to pull the sheet up to cover Veronica and Jennifer. As I lifted it up over Veronica's shoulder, I came face to face with Jennifer and paused.\n\nShe was probably the most academically successful at the school, and certainly the most intelligent, but here she was, her tiny body made even more delicate in contrast. It all made her seem so cute, which was not a word she generally earned. Her high aquiline nose twitched a bit as I looked at her, and her eyes fluttered open. She looked at me and smiled, snuggling back into Veronica, whose arms tightened unconsciously around her.\n\nI winked at her and headed to the bathroom.\n\nThinking I should probably take a quick shower while I was in there, I turned on the water and waited for it to heat up. \n\nMy situation wasn't simple, but hopefully there was an end in sight. Staying locked away in the Green House would make me go stir crazy sooner or later, but it was probably still the right choice. Maybe a couple more weeks and things would calm down. I was able to handle almost all of the administrative work from my office at home, but eventually I would need to handle things in person. And of course it didn't look good at all for the principal not to be visible on campus, especially as we headed into the fall semester, and started publicly dealing with the new initiatives. \n\nThe bigger question was if I would be able to restrain myself when I went back to campus. Even if the women currently sleeping off orgasmic exertion on my bed at the moment were willing and happy to take part, it was becoming clear that I was having an effect on other women too. I still didn't know if my trick could even be controlled at all. Was I effecting everyone all the time or only when I focused? I knew I could at least direct the trick when I was in someone's mind, but I had no idea about this passive effect. I needed to spend some of my quarantine time trying to get better control.\n\nBy that time, the bathroom was a vague haze of steam from the shower. I shook myself out of my reverie and stepped in. \n\nWhen I had my hair shampooed up, I heard the bathroom door open.\n\n\"Hey, Ben. Use some company?\"\n\nJennifer didn't wait for an answer, but slipped into the shower behind me. \n\nI felt her arms wrap around me as I rinsed out my hair and got my eyes clean enough to open.\n\n\"Last night was really crazy. Are you still okay with everything?\"\n\nI turned around and we started lathering each other up.\n\n\"Yeah. I am. Kimberly and I have talked about it all before. She's opening up so much and understanding who she is. She loves the little games we've been playing, but she's still her own woman. I can't wait to see what she does with the Dionysian Club. And, I'll be honest, I was a little worried about Veronica. I didn't know her well, but I've become a big fan. She's thoughtful and quiet, but sure a force of nature when she wants to be. She's also a bit of a smartass, and I like that. I can't wait to spend more time with her.\"\n\n\"But what about you?\" I reached over, taking my time to scrub her butt, once again, admiring what constant physical exercise can do to build such a gorgeous taught ass.\n\n\"Me? I'm... mmm.. that's nice... I'm more than okay. I'm great. I don't think I've ever felt that I could really be myself as much as I can with you. With all of us. I can be the teacher, the gym rat, and the insatiable freak all at once. I don't have to hide who I am. I don't think I can explain it. It's like I didn't know how much I was holding back before. It's like I can breathe deep now, within our little group at least.\"\n\nI stopped and looked at her. Her eyes were wet, and it wasn't from the shower.\n\nI brought her into a hug and leaned down to kiss the top of her head. She pulled me close too. \n\nHer hand slid up and she grabbed my penis, squeezing it gently. \n\n\"Ok, ok, now.\" She stepped back and looked up at me. \"Enough sappy self-reflection. I need to wash my hair. Somehow, it's got all sorts of something in it.\" \n\nShe arched her eyebrow and gave me another squeeze.\n\n\"I could help?\"\n\n\"No. You should go back and wake up our Kimmytoy and that delicious goth librarian. I'll be there in a sec. I told you I was going to fuck you, and I think it's only fair they get to watch. \"\n\nMy cock had already started to respond, and now it found full hardness at the idea. \n\nI stepped out of the shower, helped along by a sharp slap on the ass, and dried myself off.\n\nWhen I walked back into the bedroom, I found that the two women didn't need me to wake them up. They had both rolled together, filling in the spot where I had been.\n\nThey were awake, but only partially so. They had found each other and were sleepily caressing each other. The sounds of gentle kisses mingled with groggy coos of pleasure as the two gradually rose up into consciousness and into their own desire. \n\nI stood there to watch for a while, absentmindedly stroking my hardness.\n\nVeronica seemed to be more awake. Her hand was raking through Kimberly's hair, pushing her tighter into the kiss.\n\nKimberly bent her leg up to clutch onto Veronica's hip, and Veronica responded, lifting her leg in-between Kimberly's. This gave Kimberly something to cling to, and she did, tightening her legs as her moans become slightly louder. \n\nI was reminded of the contrast between Veronica and Jennifer. Kimberly was shorter than Veronica, but not by too much, but her skin tone was the polar opposite. Seeing her alabaster white leg lazily clenching at Veronica's deep brown hips made me want to believe in a creative and giving higher power. And again, Kimberly wasn't a large woman, but her curves were broad friendly Rubenesque strokes, her ass was generous but taut. I jokingly called her a Disney princess because of her untamable kinky mass of red hair, her button nose and those preternaturally large eyes that just drew you in. But of course, seeing her full naked form slowly writhing against Veronica's lissome frame was anything but rated G.\n\nThey weren't going at it aggressively. It wasn't even fucking, really. They were just playing and enjoying the lazy warm comfort of a Saturday morning. It was beautiful.\n\nI was so hypnotized by their casual delight that I didn't even notice Jennifer slip in behind me. Just like in the shower, she came up behind me and reached around to hold me tight. \n\n\"God, they are so beautiful. I never get used to seeing Kimberly like that. She still has no idea how hot she is. I can't wait to be there when she finally figures that out. She's going to be a real hellion. But Veronica, she's already incredible. She acts like she doesn't understand why everyone wants her, but just look at her legs. She's like panther, like the negative of a perfect Greek statue. I just want to lick her from toe to pussy all day long.\"\n\nThe kissing stopped briefly. \n\n\"You know we can hear you, right?\"\n\nKimberly giggled into Veronica's shoulder.\n\n\"Of course I do. And that's a standing offer, Veronica. All. Day. Long. Maybe I could get Kimberly to take one leg, and I'd take the other? We wouldn't neglect the rest of your body either. Look at those nipples, Ben. You can't tell me you wouldn't spend all day nibbling on those.\"\n\nKimberly's giggles turned into a hungry growl.\n\n\"But first things first. Last night, I claimed Ben's cock and didn't get any. So scoot over, ladies. Feel free to watch, but I need a nice lazy Saturday morning dicking.\"\n\nWith that, I got a taste of how strong she was. With one stiff push, I was flung onto the bed. Veronica has just enough time to roll on top of Kimberly to avoid me. This was apparently to Kimberly's great delight as she pulled her in and started up the kissing again. \n\nJennifer knelt on the bed next to me. She actually blushed, then leaned over to whisper in my ear.\n\n\"I haven't slept with many guys. I've got my toys, but it's been a long time since I had anything like your... equipment. So, nice and slow, ok?\"\n\nI answered her by pulling her close and gently kissing her on the lips. Her body molded to mine as she relaxed into it.\n\nWe spent a good long time touching and kissing and exploring each other. She was such a tiny woman, it was hard not to want to just ball her up and toss her around the bed. But the thing I remember most is running my hands all over every inch of her musculature. I could feel the taut power in her body, but she was more than just a gym rat. \n\nShe took immense joy in sculpting her body. She never wanted to be a body builder or just someone who had muscles. She wanted to be functional. She was more yoga than dead lift. She was so aware and in touch with herself physically that she knew what her body needed. She responded vocally and quickly to everything she enjoyed. It was easy to learn how to play her. I knew she had lots of little orgasms, but it was only that morning that I realized how much fun that could be.\n\nI didn't try to ramp up the heat between us with the trick, but we naturally got there in our own time. I was nowhere near her pussy when she grabbed me tight and wrapped her legs around me. Her moans went high pitched and she made a sort of sharp chirping noise. \n\n\"Oh, that sounded like a good one, Ms Lashgari!\"\n\n\"Mmm... It was, Kimberly.\" Jennifer nuzzled into my neck. \"He's a very good kisser, and these shoulders... yummy...\"\n\nWith that, she pulled me on top of her, which put us even closer to the other two women. \n\n\"C'mon, Ben, show me what you've got.\"\n\n\"Yes, ma'am\"\n\nI maneuvered my legs in-between hers and spread her open, laying my cock between her legs, but I avoided pushing into her. I slid over her, back and forth, coating myself with her lubrication. \n\nI was watching Jennifer's expression to make sure she was still game, and so I didn't notice that Veronica and Kimberly had split up and taken up positions on either side of us. \n\nKimberly dipped down and kissed Jennifer on the mouth, slow and passionate.\n\nVeronica moved to tease her nipples, going back and forth from gentle caresses, feeling the heft and weight of her breasts, to light pinches, tugging and pulling her nipples lightly.\n\nI could feel Jennifer starting to lose control again. Her legs clamped around my waist, and she seemed to be trying to pull me closer. It must have been another of her mini orgasms. She cried out happily. \n\nI was rubbing my cock over her, trying to get as much friction on her clit as I could, but I wanted to catch her eyes for the ok, before pushing into her. \n\n\"Jennifer?\"\n\nKimberly broke off the kiss and looked down. \n\n\"Ms Lashgari, let me help you out here. Let me go down here and get that big fat cock into your pussy.\"\n\n\"Mmmgg... Ah... Kimberly... that would be lovely... feed that cock into me... ahhh...\"\n\nKimberly's hand wrapped around me and gave me a couple awkward tugs before sliding me down, spitting Jennifer's labia open. She had me aimed true, then she looked up at me. All traces of sleepiness were gone from her face, but she wasn't overcome with hunger either. She was back to her playful self, smiling wide and enjoying the opportunity to give her ex-teacher joy.\n\nI started to move forward. Jennifer was incredibly tight, but she was so wet I was able to slide in easily. I moved as slowly as I could, so torturously slow that it was killing me. I wanted to listen to her to make sure she was enjoying it. I shouldn't have worried though. She was shaking her hips and trying to rock her hips to get more of me. If it weren't for the other women on top of her, I'm sure she would have lifted herself up and jammed up onto me.\n\nVeronica looked down too, to watch us come together for the first time.\n\n\"Holy crap, Jennifer. How can you do that? You're so tiny, how does he even fit?\"\n\nOne of Veronica's hands, the one not tweaking Jennifer's nipples, slid down her superhumanly toned belly, searching for that little magic nub.\n\nWhen Veronica finally got her hand down there, I was just about as deep as I was going to get. \n\n\"Wow. How does that feel, Ms. Lashgari? He's so deep in you. It looks so hot. Are you ready for him to start fucking you?\"\n\n\"Annghhhh... yes... yes... just slowly at first?\"\n\nI pulled out and heard her moans grow much louder.\n\nWhen I pushed back into her, Veronica started a light caress on her clit.\n\n\"OOOooohhh... god... that's so good... Kimberly, come back... ugnn... up here. Let me kiss you.\"\n\nKimberly quickly spun around and dove back down to make out with her.\n\nI started to pick up the pace and look for a good rhythm. Despite my worries, Jennifer seemed overjoyed to speed up. Veronica's ministrations were clearly not hurting either.\n\nShe really did start coming after only a short while. Her hips couldn't keep any kind of regular thrust as I drove back into her, but it wasn't a problem at all. With Veronica and Kimberly holding her down in place, we were both going hard. She also tended to cry out loud each time she came. Kimberly would get thrown off of her lips as she would twist to the side and scream out her ecstasy, and her pussy, already so tight, would clamp down in lightning-fast spasms, causing me to have to freeze in place lest I lose control and lose my load. \n\nHer voice was getting raspy with her screaming, but she found the breath to berate me.\n\n\"Ben... You've got to... Unghh... gotta... harder... I need you to... Ah, fuck it!\"\n\nWith that, she sat up, throwing Kimberly to the side and pulling herself off of me.\n\n\"Get on your back... I'm going to ride that thing.\"\n\nShe grabbed me by the shoulder and flung me down before climbing on top of me, legs splayed across my hips. \n\nThis time it was Veronica who leapt over and grabbed my cock to position it under Jennifer's pussy. \n\nI looked up to Jennifer. There was still a bit of nervousness in her expression, but it was quickly overtaken with determination.\n\nShe slammed down onto my dick and fell over on top of me, screaming into the pillow beside my head. \n\n\"FUCK... Ohgod...\"\n\nKimberly rushed to her side with concern, but she had already lifted herself up again and started to drive back down on me.\n\nShe went a couple of strokes before cumming again and that threw off her rhythm.\n\n\"C'mon... fuck... me... ohgodohgodohgod...\"\n\nShe tried to keep herself upright, but her orgasms were throwing her into spasms she couldn't control. Finally, Kimberly and Veronica teamed up to hold her up, and I took over the thrusting, bouncing my ass off the bed up into her.\n\n\"Yes! Yesyesyes... that's it... keep... Ahgnn... yes... yeahh...\"\n\nHer gravelly voice devolved into high-pitched chirps and moans as she rolled from peak to peak.\n\nI was slamming into her with more and more abandon, following her reactions, trying to keep pace with her as best I could.\n\nBoth Veronica and Kimberly were holding her tight while also rubbing and caressing and teasing. Veronica's hand was back on her clit and Kimberly was grabbing tight onto her breasts and pulling her face to the side to try to kiss any part of her face she could get in contact with.\n\nFinally, I was getting to my limit, so I called out.\n\n\"Jennifer, look at me!\"\n\nHer eyes, wild and barely focusing, glanced down to me, but that was enough.\n\nI flew into her consciousness, which was a delicious whirl of unadulterated lust. I could feel her orgasms triggering like a pulsing beat in her mind. She was still aware and in command of her body between the spasms, and I was relived to see that she wasn't just enjoying this. This was sexual pleasure like she had never felt. Just like when she was working out, she was using her body. She spent so much time maintaining this incredible physical machine and now she was using it for pleasure. And it wasn't just me, it was the women holding her, pushing her, loving her. The three of us were helping her drive to a new carnal frenzy, and she couldn't be happier.\n\nWell, until I gave her a push.\n\nI focused all the lust I felt, my own and the lust in the room, back into her. I saw a new and totally overwhelming wave of lust crest over from the back of her mind. It washed over us and I was immediately pushed out of her mind.\n\nBack in the bedroom, I heard Kimberly gasp loudly and saw Veronica let go of Jennifer as both of her hands darted between her own legs. \n\nI shouted out my own oncoming orgasm, and the women all echoed in their own orgasmic peak. \n\nI felt my first shot release into Jennifer and her eyes locked back on me, her mouth still open, panting and moaning.\n\nBut then she was overcome with a particularly strong spasm and fell over toward Veronica. Kimberly was still leaning on her, and so she tumbled over all of us. \n\nI still felt myself shooting off into the air, but then I felt a mouth clamp down on my cock. I looked down to find it was Kimberly, still moaning through her own unexpected orgasm, who had found herself too close to not take advantage.\n\nFor the second time in only half a day's time, I found myself in a tangle of gorgeous naked women, all of us panting heavily, with the occasional giggle or aftershock moan of lust.\n\nThere wasn't any slipping back into sleep this time though. Kimberly was the first to get up. She silently reached out and grabbed Veronica's hand and they both headed off to the bathroom. \n\nI helped Jennifer sit up and lean back on the headboard.\n\n\"You are incredible, Jennifer Lashgari.\"\n\nI kissed her lightly on the forehead and she cooed something incoherent back to me.\n\n\"You okay?\"\n\nShe finally rasped out, \"I am bliss itself.\" A smile stretched across her face. \"But now I need to get moving. This was a lovely warmup, but I need... a more balanced workout. I would offer to take you to the gym with me, but it's probably still a bad idea to be seen too much. At least for a while. I've seen your hard work, though. You're toning up. We just need to get you onto some cross-training. Running isn't everything, you know.\"\n\n\"Yeah, yeah. I've never like weights.\"\n\n\"Maybe you just need a trainer who... knows how to motivate you?\" She laughed a deep laugh, then stretched her arms above her head, which did lovely things to her breasts. She saw my gaze and laughed again. ",
        "We both scooted off the bed. I motioned to the bathroom, but she declined. \n\n\"I think I'm going to go just change clothes and go workout exactly as I am.\" She paused and smiled, a bit surprised at herself. \"It's all kind of dirty in a way that appeals to me.\"\n\nShe moved around the room, collecting and putting on her clothes. \n\n\"That does sound fun. Wish I could join you, but, yeah, you're probably right. Maybe once all this dies down. Rain check, alright?\"\n\n\"Rain check.\" She went up on her toes and kissed me on the cheek. Then she copped a quick feel of my cock. \"I can't believe I got all that into me.\" With a chuckle and a wistful sigh, she headed out the door. \n\nI went to the bathroom to find both women getting out of the shower, all squeaky clean. It was unbelievable how Kimberly's hair looked wet, no longer gravity deifying, but a matted mass hanging down surprisingly low. Right then she looked like a landed mermaid, and I mean that in the best possible way.\n\nI moved closer, but Veronica swatted me away.\n\n\"We are pure clean girls here, no naughty dirty man touching allowed.\" She sniffed dramatically. \"You smell of sin, oh filthy one. To the shower with you! There might even be a little hot water left, maybe. We untouched vestals must leave this den of iniquity.\"\n\nAnd with a flourish of her bath towel, she ushered Kimberly in front of her and left.\n\nA couple seconds later, Kimberly popped her head back in the bathroom.\n\n\"I'll need to talk to you, maybe tomorrow? I'll call you. We need to plan for what the next few weeks will look like, okay?\"\n\n\"Sure. Talk to you soon.\"\n\nVeronica's faux-princess voice raged back from the other room.\n\n\"Betrayal! Don't speak with that corrupt man.\" Kimberly's eyes popped wide as the sharp sound of a hand impacting her butt echoed through the house. In a flash she was over the shock and she grinned wide at me. \n\n\"Thanks for everything,\" she mouthed. And with that her face disappeared. I heard them shuffling around in the other rooms, trying to find their clothes that were spread all over. I was also certain there was more than a little bit of teasing and the like. \n\nI smiled at the thought and hopped back in the shower for the second time that morning. \n\nBy the time I got cleaned up, dried and back out into the house, everyone was gone. I did notice that my phone was not where I left it. It was sitting in the middle of the dining room table with a yellow post-it note stuck to it. \n\n\"Put a password on this! -VR\"\n\nI picked up the phone and it opened up to my photos. The last photos taken were a series of Veronica standing next to Kimberly. They were both dressed in the clothing they had worn last night, but Kimberly's hair was still a wet mass, only partially dried from the shower. The series of photos showed a brief progression of time. Both standing, smiling into the camera. Both standing, Veronica's hand suddenly down the waistband of Kimberly's skirt. Kimberly's mouth open in delighted shock. Then the final picture with Kimberly doubled over, her hands protecting her skirt, and Veronica licking her fingers with a devious smile.\n\nThese women were absolutely the best.\n\nI should have known that we needed to be more careful.\n\nLater that day I got a call from Veronica.\n\n\"We got another article submitted to the newspaper. We were better prepared this time, so it never got posted, but whoever submitted it really knew our system well. They thought they were posting it to go live, and if I hadn't rebuilt the... well, that doesn't matter. Long and the short is that someone saw all of us this morning leaving the Green House wearing the clothes we were wearing yesterday. No photos at least this time, thankfully. They even made a point of describing Kimberly's wet hair, and drawing all sorts of conclusions about your depravity in corrupting the faculty and staff at Bright Hall.\"\n\n\"Oh, for crying out loud. When everyone told me this was a small town where everybody would find anything out, I didn't believe it. So. What do we do? This is clearly the coming from the same place, some group of holdouts from the old principal... what was his name? Bull-something?\"\n\n\"Billanson, Steven Billanson.\"\n\n\"Right, Billanson.\" I sighed. \"I think it's probably best not to let this one get published. Leaving the last one up might have earned us some sympathy, but that's probably a limited resource. What do you think? Can you do a quick poll of Kimberly and Jennifer? If I'm outnumbered, I'll listen to you all, but I think low profile is the best option now.\"\n\n\"I agree. This one is also basically true, so it's harder to rebut as ludicrous. It's a little better written, too.\"\n\n\"I also think you need to remain in charge of the Journalism Club. I know you wanted to pass it off to someone in the English department, but I think we need to hold this close for the time being. How is Anne doing? Did she see the article?\"\n\nVeronica laughed. \"Anne is doing great, although I think we'll need to keep an eye on her. Word is that she joined the Dionysian Club almost immediately after Kimberly brought her home from your office that day. She did see the article, and I'm pretty sure she believes this one, but she seemed more interested than disgusted. You may have created a monster with that one.\"\n\n\"Well, that's a potential problem for another day. I'm glad she seems to be doing well though. I'll take that as a small victory.\"\n\n\"Anyway, yeah, I think you are right about not letting it be published. The only benefit that would give us would be to make the poster think that we don't know what's going on, and I imagine they already know somethings up because their article didn't post. So, no plus there. I'll ask the girls what they think though.\"\n\n\"Alright then. Thanks for being on top of things. Keep in touch if you need anything.\"\n\n\"Will do. Pity that we all need to be discreet now. Probably won't be able to have a get-together like last night in quite a while.\"\n\n\"Yeah.\" I laughed. \"That was certainly something.\"\n\n\"The best something I've had in a long time. Oh well, we'll be in touch.\"\n\nThings did calm down over the next few weeks. At least they calmed down in some ways. Out of an abundance of caution, I went cold turkey. Each of the girls offered to sneak over and play either alone or in teams, but in the end we all decided that it wouldn't be wise. If we were going to be able to make Bright Hall work, we needed to keep our... my reputation to be a little more stable.\n\nI stayed as low key as I could. I was still teaching my classes, and I did go down to the town hall for a meeting on the plans for the spa. True to his word, Mr. Takashima knew exactly how to steamroll through the bureaucracy. Everything was on time. Once the plans were okayed, Takashima and his men, including his son, were on the job working the site. \n\nA couple of days later they broke through the rock wall to let the spring flow free, and just like he planned, the water found its level by filling two of the big rock pools they had cleaned up in preparation. So, in just a couple of days, we could already see the basic layout of how the spa would look. And he said the water was even better than he had hoped. They needed a little more time to get things cleaned up and safe, then they would start on the outbuildings.\n\nThe town was getting excited, but the students were even more thrilled. When they found out that Takashima was going to be hiring students to staff the spa, there was a rush to apply. He, or rather, his wife, was going to have her pick of the best.\n\nElsewhere on campus, things seemed to be humming along nicely. Even my classes seemed to improve. The students were at least doing the work and joining in the discussions. Maybe they didn't totally trust me, but they didn't seem to be against me. Hopefully it was just a matter of time before things would settle down. \n\nKimberly did go ahead and become the advisor for the Dionysian Club, and that ended up being what brought me back to campus.\n\nOne Thursday, she caught me coming out of my final class for the day. I was going to head home like always, but she suggested we go to the caf\u00e9 to talk.\n\n\"Really? You think that would be okay?\"\n\n\"You can't hide away forever.\"\n\n\"Ok, if you think it won't be a problem... Let's see what the reaction is.\"\n\nIt was about the slowest time of the day for the caf\u00e9, so we were nearly the only ones there. I was happy to see that everything was still running very smoothly. The cafe had gotten the ovens up and running, so they had a nice spread of very tempting breads and muffins. The servers had asked for permission to wear barista uniforms rather than regular school uniforms when they were at work, and the effect was lovely. \n\nKimberly and I got drinks and sat down in a visible place, but far enough away so that we could talk freely so long as we kept our voices down.\n\n\"Ah... It's nice to be a free man, even if for only an afternoon tea.\" I took a sip and looked over the quad. I genuinely missed it.\n\n\"Maybe your exile is nearly over. It's been a few weeks, anyway, and it would be really good to have you back in the office and leading from the front again. We're only a little bit away from the end of summer and the beginning of fall semester. We all agree that you need to be totally back by fall, right?\"\n\n\"Right. Maybe it is a good time to come back and see if we get any more anonymous letters.\"\n\n\"Good. So, now I need to talk to you about some things.\"\n\nI leaned back with my tea in hand, trying to look thoughtful.\n\n\"Shoot.\"\n\n\"Okay, first is the uniform. The advanced students in one of the art classes want to run a competition to redesign the uniforms.\"\n\n\"That sounds like a great idea. We get the final say of course. If most students vote for something unacceptable, we get a veto.\"\n\n\"Who does?\"\n\n\"Ah... Well, me, I suppose. In consultation with faculty and staff?\"\n\nKimberly was taking notes. \"...with faculty and staff.\" She looked up from her pad. \"That's good. I think they'll do a good job, but we do need to be careful.\"\n\n\"We should also give them some design requirements... I'm more at sea there. Do we want to keep skirts? Those neckerchief things? The colors have to stay, right?\"\n\nKimberly went back to scribbling in her notebook. \"Good. We need to make that clear.\"\n\n\"You know the uniform best, and you are the main defender of the uniform that I know. What is most important to keep?\"\n\nShe thought for a moment. \"Blouse, jacket, skirt... the neckerchief could be altered, but there needs to be neckwear of some kind. You're right the colors can't change...\"\n\n\"Ok, you've got that well in hand. Send your design requirements to the teacher of that class and let them have at it.\"\n\nAnother couple lines in Kimberly's notebook and she turned back to me.\n\n\"The other thing I want to ask you about... It's a little more... sensitive.\"\n\nShe glanced around. The barista was lost in her cell phone, and no one was within listening distance anyway. \n\nShe lowered her voice anyway. \"It's about the Dionysian Club.\" You know what the club is, right?\"\n\n\"Ah... I think they said something along the lines of drama and female empowerment?\" I smiled at the set phrase they had started using, but I knew there was much more than that.\n\n\"Well, yes, they do want to do that, but...\"\n\n\"Yes, I understand about the other goals that the Xu sisters have.\"\n\nKimberly relaxed a little bit. \"It's not that I disagree, really. There are so many students who really come here so hung up and uptight. We get so many girls who are convinced their own bodies are horrible dirty sinful things.\"\n\n\"And they are determined to teach the club members that's not the case.\"\n\nShe blew out a long breath of air. \"Yeah. Ok, well, I'll just tell you about their plan. You know everyone is super excited about the spa opening up, right?\"\n\n\"Sure, but that's not for a couple of weeks.\"\n\n\"Well, that's the thing. The Xu sisters want to sneak their whole club in early.\"\n\nI laughed a little bit. \"That's not so bad. It's kind of a classic college thing.\"\n\n\"So you know the main thing they have been working on is 'self-exploration,' right? They want to make this a skinny dipping 'practice session.'\"\n\n\"Ah, I see. That's a little more than the classic college hijinks, true.\" \n\n\"But... Now, am I awful for wanting to help them out? I mean, I remember being here and being so repressed and being terrified of doing anything at all, and these girls are taking control of their bodies and their lives, and it's actually a really cool idea. I would have loved to be in on something like that when I was a student. And it's basically safe, right?\"\n\n\"Hmmm... Well, I think I see your point. I know it's not, well, normal, but one of our main goals is to provide our students a space to explore their world. This is basically along those lines, they are just exploring... themselves.\" I was only being partially facetious. \n\n\"Right! So you think it would be okay?\"\n\nI thought for a moment. \"Our job would be to make sure it's safe. Genuinely safe. When do they plan this little caper?\"\n\n\"This Saturday around midnight.\"\n\n\"Ok. Call Mr. Takashima, and double check to make sure the two open pools are safe to use, no ragged rocks, water is the right temperature and chemistry, all that. Tell him we want to test it out, you don't need to let him know anything in detail, but also make sure his workers will be off for the whole weekend - especially nobody working on Sunday morning. It's fine if the club members think this is a wild adventure, but you need to be prepared. Bring extra towels, a first aid kit, bottled water... maybe plant that on site early on Saturday?\"\n\n\"Right... this is good...\" She went back to taking notes. \"This is a lot though. I might need help. Maybe I can get Jennifer to help out.\"\n\n\"This is probably best left as an all-girls event, but if you need help gathering stuff or setting things up on Saturday, let me know.\"\n\nShe looked up with a bright smile. \"See? It's so good to have you back on campus for real!\"\n\nBy that time, students had started to gather at the caf\u00e9. I didn't sense any antagonism from any direction. I even got a couple of smiles and waves, which I happily returned. \n\nMaybe it really was time to come back and start taking charge again.\n\nWith that in mind, I spent all of the next day on campus. I was trying to think pure thoughts, lest I influence any students who were nearby. \n\nAnd it turned out that there were a lot of students around. Kimberly had moved forward with the her plan to start up the internship program. We had two students in the admin office, and Kimberly had them hard at work doing the paperwork to get our fall enrollees. I heard that Veronica had gotten her wish and was now driving a small team of student interns uncovering and cataloging the 'special archives,' whatever that was. \n\nThe day went well enough and even my classes went better that usual. Maybe they could sense my relief at being back on a regular schedule. \n\nI even felt positive enough that after we shut down the office, I risked a trip to the pool for a few laps. My workouts had been more erratic during my low profile days, which probably also contributed to my less than stellar mood.\n\nWhen I got to the pool though, I saw a small crowd of students loitering around. On a Friday evening, I figured everyone would have run off downtown or to the beach.\n\nOne of the students, a tall lanky girl in a suit that looked almost like a faded dark green burkini, caught my eye.\n\n\"Principal Lee!\" She walked over to me at a brisk purposeful walk that made me immediately think she was a lifeguard. No running in the pool area, but she was going to get where she needed to go.\n\n\"Hello! I'm Lynn, the president of the Swimming Club. I'm so glad you showed up! I wasn't sure that Mr. Grant would get in touch with you.\"\n\nShe was clearly one of those athletes who put all her energy into everything. As she spoke, she gestured all over and her pony tail, probably a light blonde to begin with, but bleached with pool chlorine, bopped as she spoke, flinging her hair everywhere. She even seemed to be hopping with every emphasized word.\n\n\"Lynn, I'm happy to be here, but I have to admit, I just came here for a couple of laps before heading home. What was Mr. Grant supposed to tell me?\"\n\n\"OOOoooo! I can't believe it! I mean, of course I can. I should have known. So, he didn't talk to you at all?\"\n\n\"I hate to admit it, but I'm still relatively new here. I'm not even exactly sure who Mr. Grant is.\"\n\nShe took a deep breath and tried to switch back to her earlier positive enthusiasm.\n\n\"He's the campus nurse. He is supposed to be the advisor for our club, but... well, I know I shouldn't say anything bad about staff. I don't want to get any demerits, but...\"\n\n\"But, what? I'm not going to give you any demerits. I need to know about my staff.\"\n\nShe danced back and forth on her toes for a second.\n\n\"He's... He's just a flake, Principal Lee. I don't want to say anything more. He's a nice enough guy, but I just can't count on him for anything. I mean, just look at our uniforms!\"\n\nI shifted focus and took in her suit, keeping in mind that I absolutely had to keep my libido in check. Look at the suit, not the nubile energetic body under it. The body was lovely. The suit was really was pretty hideous. \n\nIt would have been ludicrous and funny if it weren't for the embarrassed and sad face that was looking back at me.\n\nI reevaluated it. It was much worse than a burkini. At least they looked good to swim in. This thing was looked like it was out of the turn of the century. Last century. It had legs down below the knee like loose tights, and arms to the wrist. It had some kind of droopy frills around the waist that were almost like a skirt, presumably to mask any outline of a sensual hip. The neckline was up at the neck, but the in the fabric was ever tight, that was long ago. The green suit sagged and drooped everywhere, and even though I was trying not to notice it, I could still tell the body under the suit certainly did not sag or droop in any way. \n\nAs I looked her over, or rather, as I looked the suit over, more girls, all wearing the same awful suit, started gathering around. \n\n\"Did you guys get those out of storage from the theater or something?\"\n\nMy joke didn't go over that well. \n\n\"It's the only suit the uniform rules allow. I don't mind the regular uniform. We all kind of like it. But this?\" She gestured to the rumpled green monstrosity. Her expressive face showed her frustration. \"I wouldn't care what it looked like, if it was fast, but swimming in this adds seconds every lap. It's all drag, and the fabric just soaks up the water like a sponge!\"\n\n\"You're competing in those?\"\n\n\"Yes! I mean, not yet, tonight's our first time trial. That's why Mr. Grant was supposed to invite you. We wanted you too see our first meet. I mean it's not a real meet, but we got the timing pads all set up in the pool for official times, and we're going to mark the times as records up on the board and everything.\"\n\n\"Ok, this needs to be fixed. We can't have you swimming in those things. We'll have to make do today, but I promise, we'll get you something functional as soon as we can.\"\n\nLynn and a couple of the girls behind her squealed in delight as only young girls can.\n\n\"But for tonight, I am more than happy to watch your meet. And just think. You'll set times tonight that you'll be able to blow out of the water once you get real suits.\"\n\nShe didn't really seem convinced about that, but she was so happy, even my attempts at humor weren't going to stand in the way of her joy. \n\n\"Thank you so much Principal Lee!\" She actually clapped her hands together as she hopped up and down. Then she checked the big clunky digital watch on her wrist. \"The meet starts in fifteen minutes! Girls! Finish your warmups and get ready!\"",
        "And with that the crowd of girls, clad in those awful suits, scattered to stretch and prepare. \n\nI had cast aside thoughts of my own swim and went to the stands where there was already a decent crowd of students there to cheer on the team. I even saw Anne down on the first row. She was in her school uniform, but she had a big SLR camera around her neck and a reporter's notebook sticking out of her messenger bag. She looked back and saw me too. Her face broke into a huge grin and she waved happily at me.\n\nI waved back, very happy to see that at least she didn't seem to hold anything against me. In fact, based on the smiles, waves, and cheerful hellos I was getting, it felt like maybe things weren't so bad after all with the student body.\n\nThe meet was a bit of a mess technically. It was clear that this was their first time to organize something like this. And as expected, the times weren't really world-beaters. But the cheery mood of the audience carried us through all of the awkwardness. And during a break in the races, a group of the caf\u00e9 workers came in to sell all sorts of wonderful snacks and hot chocolate. \n\nBy the end of the meet, we were all happily cheering the swimmers, no matter what their times were. It was just a delightful atmosphere and put me in such an excellent mood. I didn't know it, but it was exactly what I needed.\n\nAs I was soaking it all in, I found Lynn running, rather, walking with speedy purpose, up to my side. She was soaking wet from her last race, and simply beaming with excitement.\n\n\"Principal Lee! You just have to give away the awards, you just have to! Well, I mean, we don't actually have any awards, but please please please, come down and say a little something?\"\n\nShe seemed conflicted, she obviously wanted to grab my arm and drag me down to the podium, but she knew she shouldn't touch a teacher.\n\nI ended her wavering with a loud laugh.\n\n\"Of course, of course.\" I walked down the stairs of the risers and passed by the table that the caf\u00e9 had set up. Struck with an idea, I grabbed a handful of the expensive chocolate muffins, telling the cashier that I would pay in a few minutes. She smiled and nodded, figuring out my silly plan.\n\n\"I can't tell you how proud I am of this first meet of the Swimming Club, and of all of you who came out to celebrate their achievements. With events like this, and performances like this, I can see the future of Bright Hall Academy is... well, bright indeed. I am so happy to be able to see how you all have stepped up to undertake these challenges. But, make no mistake, I expect nothing less. I fully expect those times up on the board to fall. Maybe some more modern swimsuits will help with that,\" There was a noticeable cheer at this from the swimmers and the crowd. \"But it's going to be hard work, dedication, and team support that really pushes us all forward. And now the awards!\"\n\nThere were three girls lined up next to me. To be honest, I'm not sure exactly how they were chosen as the most outstanding of the evening, but I proceeded to award each one with an absurdly decadent chocolate muffin with all due solemnity. No one was able to keep a straight face though, and by the time I awarded the last muffin to a student with jet black hair down to her butt, we were all giggling through the absurdity of it all. \n\nAnd then, that last girl pulled Lynn over and smashed her award muffin into her face. That was the last straw and any semblance of seriousness was lost. The audience started to leave the stands, laughing, congratulating the swimmers, and buying up the last of the snacks. \n\nI congratulated as many swimmers as I could get to and thanked Lynn, whose face still had smears and chocolate crumbs, but was still glowing with happiness, for her success in running their first meet. \n\nBy the time I made it back to the caf\u00e9 table to pay for the award muffins, just about everyone had left. But after I handed over the money, I turned to find ace reporter Anne at my side.\n\n\"Hi Principal Lee! What a great meet, huh?\"\n\n\"It was great. I hope you got some good pictures.\"\n\n\"I think so.\" Her brows furrowed as she considered things. \"The lighting is pretty difficult here, and they move so fast. But I think I got a couple that are useable. You'll see tomorrow on the site! Do you think you could give me a quote for the story?\"\n\n\"Sure, why not? I would mostly just repeat what I said with the awards. I'm really so genuinely proud of the Swimming Club. They put on a wonderful show. But it was the audience that really made the night. It's so wonderful to see folks come out to support the club. Just wonderful all the way around to see the school as a community, coming together for each other.\"\n\n\"And what was that you said about the uniform suits?\"\n\n\"Oh, god they're awful!\" I laughed. \"Please don't use that. Ah... they are really out of date, and the school should find the funds to support our clubs with modern equipment that still fits with our uniform code. That sounds better, right?\"\n\n\"Yeah, much better.\" She paused a bit and put her notebook in her bag again. \"Ah, there's another thing...\"\n\nUh-oh. I remember thinking of all the ways this conversation could go bad. \n\n\"I... Um... I didn't cause any trouble, did I? Because you just seemed to disappear after that day in the office, and it was, oh my god, it was just the best ever, but I feel awful, because people were saying that you had to practically go into hiding because of that article, and I totally wanted to take down the article, but Ms. Rai said we shouldn't but I was worried that all of this was because of me. I couldn't take it if I did anything to cause you trouble. Ms. Adams told me that it wasn't my fault, but...\"\n\nI tried to break in several times, but the words were just gushing out of her. Finally, I grabbed her gently by the shoulders to jolt her out of her anxiety spiral. \n\n\"You didn't cause any trouble at all. You're fine. You're more than fine, you are wonderful.\"\n\nSuddenly aware of the flesh of my hands touching her neck, I started to feel the beginnings of those sparks. I took my arms away and saw her sway a bit.\n\n\"But, Principal Lee... I joined the Dionysian Club... Because, I think I have a lot to learn... about myself.\" She looked down at her shoes, then continued in a lower voice. \"I enjoyed that day in your office so much... I can't even explain it.\" She cocked her head and looked right at me. \"Are you sure I didn't do anything wrong?\"\n\nThis was probably not the best time for the nuances of the morality of a threesome with your teacher and principal.\n\n\"You did nothing wrong.\"\n\n\"Because, maybe... once I'm... once I know more about what to do... Maybe I'd like to try again?\"\n\nI laughed, trying to hide my nervousness without dismissing the bravery she showed by speaking up.\n\n\"Maybe... but that's something for later. You need to get back and file your story, right?\"\n\nThat seemed to shake her out of a daze. Was my trick affecting her?\n\n\"Oh, right! I said I'd have it posted tonight. I still need quotes from the winners and I need to edit and put the slideshow together and get the official times and... Thank you Principal Lee! For the quotes, and... and everything!\"\n\nThe mousy bookworm had already blossomed so much. She smiled, and waved goodbye, and sprinted, even in the pool area, into the shower room. \n\nI was left alone standing next to the pool in the lovely late summer moonlight.\n\nThis really was the best job ever.\n\nThe next morning, I saw that Anne did get several nice photos of the meet, but the main image was of the three winners, still dripping in their ugly suits, triumphantly holding up their award muffins and smiling jubilantly. Just looking at the photo, I could hear their laughter from the night before, but looking at them, it was painfully clear that the suits had to go. I wrote a quick email to Kimberly to see if she could look into pricing out a set of suits for the club. I doubted that any of the big companies would be willing to sponsor us, but maybe they could give us a discount out of pity.\n\nSince I didn't get my laps in, I decided it was even more important that I put in a few running miles. I saw Jennifer on the trail, too, but she was too far away to notice me. The run was uneventful, which was really the best thing I could have hoped for. \n\nI got out of the shower to find a reply from Kimberly asking me to meet her at the office in the afternoon. I had plenty of work to take care of, so I went in a bit early to clear out my inbox. It felt good to be back in the office on the regular, even if it was on a weekend. \n\nWhen Kimberly came in, I was just about done, so I hopped up and met her in the reception room so we could walk together to her office. \n\nI was a bit surprised to find several boxes in her office, crowding her desk. \n\n\"I'm really sorry for not putting the swimsuits higher on our list of things to take care of. I actually forgot how awful they were. Seeing them in the paper this morning...\" She gave a verbal shudder and shook her head. \"It was really great of you to be there for their first meet. How did you find out about it? They didn't really advertise at all.\"\n\n\"Well, what can you tell me about Mr. Grant, the nurse?\"\n\n\"Oh, god. What did he do? Is everyone okay?\"\n\n\"Yeah, I think so. Is he really that bad?\"\n\n\"He's... not who I would choose to be in his current job.\"\n\n\"Well, anyway, he is supposed to be the Swimming Club advisor, and he was supposed to let me know about the meet, but he didn't. Lynn, the president, seems to be about as angry as she is able to be about him.\"\n\n\"She's wonderful. She shouldn't have to deal with him.\"\n\n\"I just showed up to do some laps. It was just a coincidence. But the meet was really wonderful. Great crowd, great atmosphere... There were some technical troubles, but they handled it all on their own. I'm so proud of all of them. But those suits!\"\n\nKimberly sighed. \"It's a pity we can't do a design contest for them. We really need professional modern suits.\"\n\n\"I would be happy to dig into my discretionary funds for that, as long as it's not too expensive.\"\n\n\"Okay. I'll see what I can do.\"\n\n\"So, what's up with your club's little soiree tonight?\"\n\n\"Oh, Principal Lee, that's why I need you today. I want to make sure that everything is set up well, just like we discussed. You know, everything safe, but so they still think it's kind of dangerous and daring! I've got some towels and water bottles, and I talked to Mr. Takashima. He said they weren't planning to do anything this weekend, and that the north pool would be perfect, but the south pool might be a bit too hot for now. They're going to get the temperature regulation system installed next week.\"\n\n\"Sounds like you've got everything in order. That's no surprise. You are the best organized person I know.\"\n\n\"Well, maybe that's all okay, but I need your advice about the other side of it. Up until now, it was just helping them organize meetings and stuff like that. I don't even go to their meetings. But tonight is a big event, and Cynthia said that they want me to... lead it. I'm not even sure what that means, or what they expect of me.\"\n\n\"You're going to do fine.\"\n\n\"But I'm not a leader... They expect me... I mean... I... like when you and Jennifer... kind of tell me what to do... But...\" \n\nI could almost feel the blush radiating off her. She couldn't even look me in the face, but I could see the panic rising in her.\n\n\"Kimberly.\" I took a gamble and walked over behind her and put my hands on her shoulders, kneading them gently. \"You're going to do fine. Let's walk through this. What is the club all about?\"\n\nShe recited without thinking, \"drama and female empowerment.\"\n\n\"What is it really about?\"\n\nShe lifted her head, closed her eyes, and leaned back into my massage. \"It's about helping the girls figure out who they are. To help them gain self-confidence and take control of their lives and bodies.\"\n\n\"And...\"\n\n\"And?\"\n\n\"And they don't expect you to give them a lecture about self-empowerment on their little skinny-dipping excursion.\"\n\n\"No. They're going to want... I don't know. I don't know what they are expecting.\"\n\n\"So, you set the rules then. How far do you want to let them go? You need to figure that out. It's just like when you order the interns around.\"\n\nShe nodded, and her shoulders started to loosen up.\n\n\"They're going to be looking to you. The Xu sisters see you as a woman who knows how to seek her own desire, and who isn't ashamed of taking pleasure in it when she finds it. They're looking for a model for how to seek their own desires. All you need to do is show them pride and confidence, and answer their questions.\"\n\nShe opened her eyes and turned back to look at me. \"But what will we actually do?\"\n\n\"That's up to you. What do you think you should do? How far do you want to go?\"\n\n\"I need you there. Jennifer can't make it. I need you to come with me. I can't do this alone.\"\n\n\"Yes you can. I can't be there. I can help set up, but it's going to be a spa full of skinny-dipping students, and you're going to be teaching them how to enjoy themselves. My presence would not be a good thing. Also, I'm just coming out of a scandal. You can do this.\"\n\n\"You don't have to be right there in the pool with us, just... maybe... be around? In case I need help.\"\n\n\"What possible help could I give you? You are perfectly equipped to lead this club. I don't have the right parts, Kimberly.\" I tried to laugh to alleviate her anxiety.\n\n\"For emotional support then? Just at the beginning? Please, Principal Lee, just be there at the start. I'll figure the rest out. I just don't think I can do it alone. I need to know someone is there with me.\"\n\nShe looked back at me with the most pitiful look. Those huge eyes were glistening with the premonition of tears, and her eyebrows were wrinkled, loaded with pathos.\n\nI sighed deeply. \"Do you practice that look?\"\n\n\"You'll come?\"\n\n\"Because it seems like you practice it. You know your eyes are like, cartoon big right? It's like puppy dog eyes to the nth degree.\"\n\nShe stayed silent.\n\n\"At the beginning.\"\n\n\"Thank you!\"\n\nShe hopped out of her chair and spun around to hug me tight.\n\n\"Out of sight.\"\n\n\"Thank you so much, Principal Lee!\"\n\nShe squeezed harder.\n\n\"And once I see you are off and running, I'm leaving.\"\n\n\"That's fine! Now come help me set up the towels and stuff.\"\n\nAnd with that she let go of me and picked up one of the boxes. She looked at me and gestured to the other box with her head.\n\nI had the distinct feeling that I'd been played like a violin, but I laughed and picked up the box, and we both headed over to the spa site.\n\nThings really looked great. The whole site was surrounded by chain link fences, but they had plastic draped on them, so we didn't need to worry about anyone pepping in. There was a portable building to one side and a few scattered pieces of construction equipment, but the showstoppers were the two pools.\n\nThey were both bigger than I expected, and already full of steaming water. There was a channel carved into the rocky ground that led over from the rockface they had cracked into. And there was another channel that connected the two pools. The pools themselves looked like completely natural stone formations, but I knew they had been carefully designed, carved from the pits that were already there. The effect was truly lovely.\n\nThe portable was a perfect place to stash the emergency supplies and not a bad place for me to hide, too. There were windows that would allow me to look out on the north pool that they would be using. Kimberly would probably be able to see me, but the students wouldn't know to look over here, so it would be almost impossible for them to see me. \n\nKimberly still seemed nervous, but knowing that I would be there and focusing on planning put her mostly on an even keel. \n\nI genuinely knew she was going to be fine, but if she needed me there for a bit at the start, it was the least I could do.\n\nWe agreed that she would lead the club in as close to midnight as possible. They would keep their clothes on until they got to the pool, just in case they ran into anyone. Also, I had done a sweep of the pool area and didn't find any cameras, but I had to assume there were still some we didn't know about on campus. I would be in the portable building. After everyone got in the pool, I would wait until I felt it was safe, and then I would sneak out and head home. \n\nWe set up the supplies and walked over the area. I dipped my hand in both pools. The water in both pools felt wonderful, but I agreed that the south pool was probably a bit too hot. All the better for our purpose. All the club members would be in the one pool where we could keep an eye on them. \n\nAfter assuring Kimberly again that she would do fine, I went home to grab a nap and dinner before the grand event.\n\nWhen I came back it was already dark. I went into the portable and set up a little nest with a few of the towels. I opened up a package of granola bars that Kimberly had put in the boxes to snack on while I waited. I should get something out of this whole thing, right? Well, aside from the opportunity to ogle the entire Dionysian club.\n\nI brought out my Kindle and opened up a book I had been thinking about adding to the fall reading list. I got deep in the book and time passed quickly.\n\nI heard them before I saw them. There was a bustling noise that is particular to a large group of girls giggling and shushing each other, trying to be quiet and failing utterly.\n\nI popped my head over the windowsill and realized that although it was still dark, the moon had come out and lit up the entire area in a pale white glow. It made the entire area fully visible, although it did cast an odd pallor over everything. \n\nEventually, I saw Kimberly walking over. She was wearing a fairly conservative one-piece bathing suit, and her head was turned behind her. She must have been trying to talk to the girls who were following her, but I couldn't make out what she was saying. \n\nThen the club members came into view. They were all, very dutifully, still wearing their school uniforms, but they were darting around, hanging on each other, laughing and chatting with nervous energy.\n\nKimberly led them to the north pool and had them line up around the edge. She pointed over to the other pool, assumedly in warning.\n\nI was getting frustrated that I could hear her, so I slipped over to the door and slowly opened it just a slight crack.\n\nKimberly's voice became clearer, and I could make out nearly everything she was saying.\n\n\"Ok, so those are the ground rules. Questions?\"\n\nOne girl at the far side of the pool raised her hand, but I couldn't hear what she asked.\n\n\"Yes, Gina. The main thing is that since we all left our phones back in the prop room, there will be no photos, no videos. There are only our memories. We're all sisters here, and the memories we share together are precious and safe.\"\n\nShe looked around for more questions. Seeing none she continued.\n\n\"Okay then, let's get started.\"\n\nI could almost feel her nervous sigh as she took a brief second before reaching up to pull down the shoulders of her bathing suit. Time seemed to slow as she peeled the suit down her body. Her impressive breasts were uncovered and I heard a gasp of admiration from some of the students. Then she bent over at the waist and pulled the suit completely off, stepping out to the side. She casually tossed the suit behind her and stood there for everyone to see.\n\nI knew she must have been nervous, but she never looked more beautiful and confident. It was no wonder the students loved her. \n\n\"So, now everyone, in your own time, go ahead and join me in the pool. Sit on the edge now, legs only in the pool. No clothes allowed.\"",
        "She stepped into the pool and let out a loud, \"Ahhh...\" as she felt the hot water on her legs.\n\n\"If you need help, remember to ask one of your partners. No one has anything to be ashamed about here. We're all sisters. We're all friends.\"\n\nHer voice was smooth and soothing, and as I looked over to the rest of the girls, I saw that the Xu twins had already stripped lightning quick. They split up and went to opposite sides of the pool and started helping other girls out of their uniforms.\n\nI saw Anne over near Cynthia. She had her jacket off, and was playing with her neckerchief, but it seemed she was waiting for help. \n\nIt turned out that \"helping\" seemed to be the goal of this part of the exercise. Girls turned to each other and, using a little more touching than strictly necessary, they slid jackets to the ground, slowly popped blouse buttons, and caressed necks as they discarded each piece of clothing. \n\nSkirts apparently needed particular care. I saw one girl reach up under her neighbor's skirt, presumably to undo the fasteners from the inside. Her partner was flushing furiously, so red that I could see the color even in the moonlight.\n\nGradually, the club members got down to bras and panties. There was a pause, as they all looked to Kimberly for guidance. \n\n\"You all look so lovely. Before the next step, remember what we talked about in the prop room. Your body is yours. It is yours to explore and enjoy and use as you wish. But you always have your sisters to help you. It's important to know how to let someone else help you. You've done so well. Now, ask someone to help you, and be there to help someone else.\"\n\nWith that encouragement, the girls started moving again. There was some fumbling and giggling as the girls struggled with bra fasteners and stepped out of their panties.\n\n\"Now... Someone help Louise please?\"\n\nThe girl named Louise, who I remembered for proving the uniform wasn't resigned for bigger women, was a very full-figured student with industrial strength underwear. She quickly found herself the target of three nude girls and their six roving hands. She nearly swooned as her bra was removed. The hands didn't leave her when it was tossed to the side as the girls touched and explored their friend's massive breasts.\n\n\"And her panties?\"\n\nThere were giggles, followed by a sharp moan as the girls reached down to remove her last piece of clothing.\n\n\"Okay, now. Wasn't that wonderful? Please, everyone sit down.\"\n\nAll the girls oohed and ahhed as they slipped their legs into the water.\n\n\"Now, I notice some of you are already a bit worked up. Some of you will take a bit more to get going. That's totally normal. Remember that our goal tonight isn't reaching an orgasm or anything else specific. We're just here to play and to start the life-long process of exploring your own body.\"\n\nMost of the girls held their legs tight together and had their arms up covering their nipples. However, some were indeed already twisting uncomfortably, and a couple were already trying surreptitiously to scratch their growing itch.\n\n\"With that in mind, I want everyone to put their hands to the side. Let us see your beautiful bodies. Open your legs. You are all so beautiful. Now I want you to look around you. Isn't it so wonderful to be surrounded by so many beautiful friends? Remember, your body does not set the value of you as a person, but there is something to take pleasure in in everyone, and in everyone's body. So turn to the people next to you and tell them what you love about their body.\"\n\nShe had barely finished talking when the girls all burst into conversation at once as if they had been holding it all in this whole time. I could only hear a handful of comments.\n\n\"You have the most amazing skin.\" \n\n\"Your boobs are incredible!\"\n\n\"\"Your neck is so elegant.\"\n\nI love your bush - how do you trim it?\"\n\n\"Your nipples are so big! Do they get hard?\"\n\n\"Your legs are so long and smooth.\" \n\n\"It's so sexy, I can totally see your labia!\"\n\nAfter a few minutes, Kimberly brought them back together.\n\n\"Okay, okay girls. Now bring that focus back to yourself. Think about what they said about you. Believe them. You are beautiful. Think about what they said again. Touch that part of your body. Caress that part. Feel how your body responds. Know that the person sitting next to you thinks you are beautiful. Just touch that part of you for a while.\"\n\nShe let them do just that. I could feel the sexual tension rising as I heard their low moans. I had a quick thought about leaving because clearly the meeting was going well, and Kimberly obviously didn't need me anymore, but convinced myself that the moon was too bright and I would be seen. The last thing I needed was a whole club worth of students seeing me sneak out from their skinny dipping self-discovery session. \n\nThat's what I told myself, anyway. \n\nI peeked back out the window.\n\nI looked over to Kimberly who was now talking to the twins. She whispered something to them and they went to either side of the pool. They stopped at each girl they passed, touching them gently on the shoulder and whispering to them. I even saw Deborah kiss a couple of the girls on their heads.\n\nKimberly herself was clearly affected by the scene in front of her. Luckily, she was very good at keeping her composure, but she had no need to hide the wide smile of satisfaction as she looked out on her charges.\n\n\"Ok, y'all.\" Her voice was deep and smooth. Her southern accent, always a reliable sign of her emotional state, was coming out, making her sound even more sensual. \"Ok, now find a partner. Slide next to them. Tell them what you've discovered. Tell them where you touched that felt good.\"\n\nThe girls paired up, all except Louise, the busty girl who got help taking off her underwear. She had two girls snuggled up close to either side.\n\n\"Now, right now, I want you to show your partner how you feel good. For now, keep your hands to yourself. Just touch yourself, but make sure you are showing your partner. Let her see what you do. Where do you touch yourself? Show her how you get yourself excited.\"\n\nAll of the girls were following her suggestions like she was a hypnotist.\n\n\"Now tell her. Tell her what you are doing.\"\n\nWithout hesitation, a soft quiet murmur broke out, unintelligible to anyone but their target.\n\nThe pairs and small groups leaned even closer together, sharing whispered secrets.\n\n\"If you feel ready, open your legs and show her. Remember, everyone reacts differently. Let her know how you react.\"\n\nA girl on the far end of the pool had been moaning loudly. Her moans now turned into an open-mouthed cry, rising and lowering as she found her rhythm. Everyone turned to her and watched.\n\n\"Julie, help her out. Hold her. Watch her. See what makes her happy. Learn what you can do to help her. Look her in the eyes as she cums.\"\n\nJulie leaned over and put an arm around her partner who was now starting to shudder. Her exclamations stopped suddenly, then she caught her breath, put her head on Julie's shoulders and cried out a sharp staccato echoing shout of orgasmic bliss. \n\nAs Julie took her into her arms, the atmosphere of the entire pool changed. Girls suddenly reached out to hold their partners, and hands blurred between legs. Some girls leaned back and turned on their sides to look in the eyes of their partner and whisper secrets of flesh and lust.\n\nJulie's partner, I never found out her name, gradually came out of her daze with a huge smile. She laughed loudly and I heard her clear across the pool. \n\n\"It's your turn now!\"\n\nBoth girls giggled and fell into a pile.\n\nThe girls clearly didn't need any encouragement, but Kimberly broke in.\n\n\"Ok, now is the time to help your friends. You don't need to go straight for the clitoris. Make sure that she is ready. Remember all those places she told you about. See if you can make her feel as good as she did. Long, slow caresses, be gentle. Teasing is okay, but be kind. Remember, orgasm isn't our goal tonight. We are here to learn, to explore and to support our sisters. If you feel like you are going to cum, though, let her know what you need. You have someone to help right next to you.\"\n\nThe gathering utterly fell apart then, pairs and trios clung together. \n\nLouise's two partners were clearly having a wonderful time with her huge breasts, and she didn't seem to mind at all. She was utterly unable to respond to help her partners, but I was confident their time would come.\n\nAnne had paired with a slim dark-haired girl and they were still sitting on the edge of the pool. Their faces were only maybe an inch apart, tempting each other to see who would move forward first. Each one of them had their hands between the other girl's legs, moving slowly, but with purpose. \n\nI glanced over the several piles of girls to look for Kimberly. It took a little while, but then I discovered why. \n\nThe twins were double teaming her. I couldn't see too clearly, but the image that will be burned in my memory was Kimberly lying on the ground with her hands pulling a twin into each of her breasts. The twins were clearly sucking and nibbling for all they were worth. But they also each had a hand between Kimberly's legs. It looked like one girl was pumping her hand into Kimberly while the other one was rubbing on her clit. I watched, entranced, and in only a couple of minutes, Kimberly started wailing and twisting around on the ground.\n\nOnly then did I realize that she wasn't the only one who was starting to pop off. I looked at the rest of the girls and saw that a few were already in the center of the pool, soaking together and blissfully kissing and fondling their partners. Others were working over some of the girls who hadn't cum yet. \n\nLouise, who apparently had a capacity to match her size, had four girls, all on top of her, hugging, kissing, and drawing out lusty moans from her.\n\nRight then, as I was listening to the crescendos, one after another coming from the little piles of naked students, I realized that I could feel them as well as hear them. \n\nI started to panic, worried that I was unconsciously pushing them into lust, but after focusing for a second, it didn't feel that way. I could feel the massive flowing waves of lust coming from the pool, but the energy was all emanating from the girls themselves, not me. I could even distinguish the lust of different people. I'd never been able to feel that before. \n\nI focused on Anne and saw her lust, deep and thick. As I watched her, I saw her lust pulse out and a keening moan in a familiar voice confirmed that pulse as an orgasm. \n\nThis was new and exciting. I was getting ready to try some more tests when I heard something new. I couldn't place it.\n\nI wasn't an animal cry of lust.\n\nI almost seemed to be coming from beyond the pool.\n\nOh, fuck.\n\nIt was a police siren."
    ],
    "authorname": "shudai",
    "tags": [
        "mf",
        "mfff",
        "skinny dipping",
        "masturbation",
        "mutual masturbation",
        "sexual training",
        "pool",
        "all girl orgy",
        "swimming",
        "voyeurism"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-new-principal-ch-18"
}