{
    "title": "In Love with Lori Ch. 07 Pt. 02.2",
    "pages": [
        "This is the final part of the 'Lori' Saga, it's been fun to write, Lori feels like a fun girl to be around, wherever she's gone, I hope she's having a ball there with her Davey!\n\nThis story is just that; a story, no realism or intent to imply any real-world activity is implied, it's all in fun, because it's just a story. \n\nAll credit for the fact this makes sense at all is due to GrandTeton for his critical eye, his feel for story-flow, and his restraint when curbing my wild, punctuation-scattering sprees. I may in the fullness of time write the Richard/Hugo/Josie/Sara story, but that will be in another genre altogether; it sounds like it might be fun, so we shall see. In the meantime, thank you for sharing my world, please read, enjoy, comment if you want, vote if you feel so inclined.\n\nAll my best,\n\nbb1958\n\n*****\n\nInsights & End-Game:\n\nAnd so the day of the wedding loomed ever closer; all the invitations had gone out, all the RSVP's were back in, dozens of polite variations on 'yes of course I'm coming', with the unseen subtext 'he's marrying an American? Wasn't an English girl good enough? This I gotta see!', and all Sophie's preparations were finally, irrevocably in place. \n\nDavey's Best Man was an old school buddy of his, Jack Cameron, a tall, handsome, quietly witty man, who brought his pregnant Japanese wife, Teruko. I was awestruck at her flawless beauty; she looked like every man's Asian Movie-Girl fantasy, taller and shapelier than most Japanese girls I'd seen, with huge dark eyes, clear, fair, skin and a little snub nose, with fine, classic features. She had long, smoky blonde hair so fine and silky that it stirred and fluttered in the slightest breeze, and the most charming, sweet voice I'd ever heard. \n\nAccording to Davey, Jack had been seriously injured before Davey had ever come home, and Teruko had been with him through it, willing him well and whole again, but that had been several years earlier, and Jack was now fully completely recovered, and back in the pink again. \n\nAll of Davey's school friends, people I'd often heard him mention, but faces I'd only ever seen in photo-albums, were there. Harry Waterfield was possibly the most handsome young man I'd ever seen (barring my Davey). He looked like the hero of every romance I'd ever read in secret, my one guilty pleasure, along with his unfeasibly beautiful Eurasian wife, Sai Fong, also pregnant, and obviously completely familiar with Davey, if the greeting she gave him was anything to go by; oddly enough, she had the same gray-hazel eyes as Harry, and hair the exact same shade of warm, chocolate-brown as his, which I thought was an odd coincidence, but on her they looked spectacular, and just made her even more exotically beautiful. \n\nDavey's fellow medical student, Andy Edgeworth, and his lovely wife, Linda were also there. Of all Davey's old friends, Andy was the one I was most familiar with; even though he was studying medicine all the way up in Edinburgh, and I'd never actually met him, I felt like I knew him best of all Davey's friends; he was Davey's go-to when he needed his confidence boosting, or when he'd had a rough time from one of his mentors, or if one or the other had muffed an exam or test, and they often had long, incomprehensible conversations about medical stuff that made me feel nauseous if I happened to eavesdrop on them. \n\nAndy looked nothing like how I thought an English doctor would look; he was something like Davey, but different, less gorgeous, of course, and from his overheard accent and manner of speech, I had expected tweedy and hearty in a 'country gentleman, field-sports and gun-dog-owning' sort of way, possibly driving around in a classic Morgan or MG A; instead, he looked like all the arctic explorers and mountaineers I'd ever pictured reading adventure stories when I was a girl; tall, craggy, rugged, and burly, with big, gentle hands, and a sense of immense physical strength barely held in check. \n\nNo-one would have seemed to me less likely to be a surgeon; he looked more like he should have been mushing a dog-team across the Great White Waste, or playing defensive tackle for the Chiefs (hey, I'm from Iowa, who else am I gonna shout for...?), but Davey told me he was consistently winning praise from his mentors for his technique and the delicacy of his touch; one day he was going to be a world-renowned surgeon, Davey was convinced of it.\n\nLinda, on the other hand, looked exactly like how I'd always supposed a proper English rose would look; she was tall, slender, graceful, and beautiful without being obvious, not a cutesy beauty queen, rather the kind of beauty that would stay with her for life; you could tell just by looking at her that when she was a little old lady, she'd still be luminously beautiful, because some kinds of beauty remain and resist time when cute and pretty fades. \n\nTo go with her air of refinement she had a bell of shining walnut-brown hair that fell almost to her waist, clear, fair skin, and large, expressive, cornflower-blue doll-eyes (just like Andy's, now I come to think about it...) framed by long, sooty lashes, and a refined, 'received pronunciation' English accent even more 'Home-Counties Boarding-School' than Sophie's.\n\nShe was yet another girl who was well-known to Davey; she'd obviously known him since she was very young, judging by her easy, almost sisterly familiarity in his company, and her deep fondness for him was plain to see. Her lips were naturally coral, framing a sweet, generous mouth, and she had a clear, fresh complexion and softly delicate, rose-pink cheeks, with just a hint of a spray of freckles across her classic cheekbones and the bridge of her pert nose. Her eyebrows were perfect, perfectly symmetrical arches, and she had a long, elegant neck. If you look up 'English Rose' in any dictionary, you'll find a picture of Linda Edgeworth there, I can almost guarantee it.\n\nThese then were Davey's oldest, closest friends; he'd known them since school days, and they were as tight a bunch as I'd ever seen; one would have thought they'd last seen each other that weekend, the way they fell into their banter and ease in each other's company, not years earlier, and the fact they'd made time and come from all over Britain to be there for him on this day spoke volumes about the regard they held him in. I was proud my Davey had such special and enduring friends. \n\nSophie greeted all Davey's friends warmly, but most especially Harry and Andy; apparently she and Uncle Richard had known Harry's father when they were posted to Hong Kong; he had been police commissioner before Hong Kong was handed back to China, a senior member of the Governor's staff, and Andy's family and connections were well known to Sophie's family, being as they were all from Devonshire or Somerset, in the West Country of England. \n\nI remarked in private to Davey how connected and adoring his friends seemed when it came to their wives, and Davey gave me that patented raised eyebrow and quizzical look he keeps in store for when he's going to point-out the obvious to me.\n\n\"Darling Girl, I'm going to share a few things with you, regarding my friends; it's kind of personal, and I really don't want them to know I shared this with you, but I won't keep secrets from you. Swear you'll keep shtum? On Mummy-Bum?\"\n\nI had to grin at him invoking my childhood swear, but I nodded and hooked pinkies with him, knowing he knew I was psychologically incapable of breaking a Mummy-Bum swear...\n\n\"OK, I swear on Mummy-Bum; there, good enough?\"\n\nDavey grinned, and I had to grin back, he looked so boyish and sweet.\n\n\"So what's the scoop, Blondie? What's this deep, dark secret you made me swear Mummy-Bum on? Are you all some kind of secret society of assassins? Star-Lizard people from the Horsehead Nebula? Illuminati? The Jedi Council is for real, and they're it? Talk, Denham, I'm bursting here!\"\n\nDavey pulled me closer and nibbled my lips, something I'm pretty much unable to resist, so I nibbled back, but I still wanted to know what was going on, so I stared soulfully into his eyes then pinched his ass, making him jump.\n\n\"Tell me!\" I demanded, so he did.\n\n\"Darling Girl, you and me, us, we're...we're not alone; what I mean is, you and I, what we are, what we really are, well, Harry and Sai, Andy and Linda, and Jack and Teruko, they're like us too; they're in exactly the same boat as us. Most of our friends know. Jack's been in love with Teruko since forever, and everyone's always known how Sai Fong felt about Harry; I mean, look at him; is it any wonder?\"\n\nHe paused and looked vaguely at me, that pensive look he gets when he's working out what to say next.\n\n\"Sweetheart, I always thought, if I even thought about it at all, that nothing like that was ever going to happen for me; you have to admit, how it was between us, there was fat chance of that ever happening with us. But it did, and now I know how Harry feels, and Jack, and Andy; all I can say is that if they're even one tenth as happy as I am right now, then they must be truly happy indeed and fully committed to the girls they love, just as I am to the girl I love. Just looking at how happy they are makes me realise just how happy I am, and how happy I'm going to be; we made the right choice, baby, just like them, and I have no regrets at all.\"\n\nHe grinned again, and tapped the tip of my nose with his forefinger.\n\n\"So now you know; we're not as unique as maybe you thought, but then, we're not alone, either. I think Sai Fong's already caught-on; don't ask me how, but she's got a mind like a diamond-drill, and we've probably been leaving clues for those to read who can, like Sai, but know this: I trust her completely; I've known her it seems like forever, at least since she was ten years old anyway, likewise Linda, although I don't think she's worked it out yet. Jack gave me a very strange look when I told him who I was marrying. I think he remembers I had a snotty little brat sister thousands of miles away called 'Lori', so he's probably put it together now, and I'd be surprised if Andy doesn't already know if Jack knows; he and Jack have always been very close, and they share, but he won't say anything, for obvious reasons.\"\n\nMy mind was reeling with this sudden influx of information; no wonder Davey had accepted that he and I could make this work; he'd already seen it happen before, and it had worked out perfectly for his best and closest friends! When it happened to him, he was already subconsciously primed to accept it. His reaction to me and my scheming made sense now. His willingness to be with me was so headlong and wholehearted because he knew from his friends' experiences how it could be, even if he didn't register it at the top of his mind at the time. \n\nI don't believe he'd ever sat down and consciously thought out or planned anything that had happened between us; he didn't need to, he already knew, because he was already in a receptive state when I made a play for him. In truth, I believe he was truly unaware at the time that he was ready for me if we should somehow embark on something, but that didn't stop him responding so positively, because I don't honestly think he could have done anything different. \n\n\"'Snotty little brat sister', eh? You'll pay for that, Doctor-Man!\" was all I said though, and it was kind of half-hearted; I was too busy having insights, not something I do on a regular basis; I kind of live on my skin, but everything Davey had said, and the train of thought it had set off in me made true and perfect sense in a way not much else did most of the time. Davey had jumped at me because he was ready to accept me, even if he didn't consciously know why, but now I did. He and I have a lot to thank his friends and their choices for.\n\n*\n\nThe wedding was flawless, thanks to Sophie's meticulous planning, her inspired contingency-planning in case someone like Bella or Maude showed-up and tried to disrupt the proceedings, and her foresight in planning the seating so no jealous ex or wannabe started a commotion; those girls who might be part of a clique with trouble on their minds were salted around in the seating plan a long way from each other in case they decided on a little concerted troublemaking. \n\nAll of Davey's close family and friends were given prominent seating to drive home that this was going to happen, it was a done-deal, get used to it, to anyone who may have been harbouring any last-minute resentments. \n\nNot that it would have made the slightest difference, of course. Davey and I were already legally married, and this whole elaborate show was for form's sake and the benefit of family and friends, but I still didn't want someone who thought they had an ax to grind suddenly kicking-off and ruining my big day. \n\nWalking down the Nave of the chapel (and Davey pointed that out to me; the aisles in a church are on the sides of the congregation, or behind the choir; the central approach to the altar is the Nave) on Richard's arm to where the Dean of the chapel waited for us at the Lectern under the spectacular domed ceiling, at the entrance to the Choir, was the most unbelievable experience of my life; the swelling music of the Wedding March, David and Jack, Richard and Hugo, and Jimmy all waiting for me, dressed in matching dove-gray morning suits with tailcoats, vests, and impeccably knotted gray silk ties, with folded gray silk handkerchiefs in their breast pockets. I'm sure they all looked wonderful in their formal attire, but I only had eyes for my Davey. \n\nUncle Richard had chosen to wear a black morning coat and blue silk tie, as befitted the father of the bride. He kept his hand on mine as I held his arm, steadying me and being what I needed most just then. True to her word, there was Sophie, sitting on the Bride's Side, dabbing at her eyes as she cried for me, just as she'd promised she would, just as Aunt Sybil was doing, while Rosie, my Maid of Honor, and Josie and Sara, my demurely beautiful Bridesmaids held my veil as they followed me. \n\nSybil had surprised me that morning with a long, ornately embroidered veil of sparkling white handmade Nottingham lace, dotted with seed pearls, tiny little satin roses, and the blue glint of tiny blue gems, referencing my blue eyes; I nearly lost it when Sybil told me it had been my mother's veil, she'd entrusted it to her best friend, Sybil, to keep safe for her when she'd moved to Iowa, and Sybil in turn had been delighted to give it to me as a wedding gift from Mom; poor Sybil had to do a lot of hurried repair to my make-up to get me past that, believe me! \n\nMy one break with tradition was my bouquet, a beautiful spray of blue English wildflowers; Cornflowers, Borage, exquisite little Forget-Me-Not's, Harebells, and Wild Basil, accented with subtle little peach and gold-blushed roses. \n\nTo top it all off, I wore Sophie's platinum and diamond tiara that she'd worn on her wedding day, along with the antique blue diamond pendant Davey had bought me in Boston, and a finely-worked silver and gold filigree bracelet Uncle Richard had given me, so I would have the requisite 'something old, something new, something borrowed, and something blue' to bring good luck. \n\n*\n\nThe reception was held back at the house, in a marquee Jimmy had set-up for us as his gift to us, complete with a dance-floor. Of course, Davey had the first dance, but the special dance for me was the daddy-daughter dance I had with Uncle Richard. \n\nI was struggling to hold back the tears as I danced with him; it felt so much like how I'd always imagined my daddy-daughter dance would be like when Daddy danced with me on my wedding day. Richard obviously sensed how I was feeling, what the dance meant to me, and so as he whirled me around the dance-floor, he guided me while I lost myself in memories of my daddy. When I smiled at him to thank him, for one split second his features seemed to smoke and change, and I saw daddy smiling at me, and then I knew; somehow, my daddy had been there and had that special dance with me on my special day. \n\nWhen the traditional time for me to throw my bouquet came, I held back; Sophie and I had a plan, and everyone had to be there, so I waited until she'd chivvied everyone into the marquee, then, when everyone counted down 'three...two...one!', instead of turning my back and tossing it over my shoulder, I walked out to where everyone waited, and handed my bouquet to Rosie. She stared at me in shocked, wide-eyed silence, then her mouth fell open as I stepped aside to reveal Jimmy right behind me. Rosie froze, then, when Jimmy dropped to one knee and opened the ring box Sophie had handed him, two large tears ran down her cheeks as her eyes brimmed over.\n\n\"Rosie, my own true love, I've loved you from the moment I first set eyes on you. Will you wear my ring, marry me, and be my wife?\"\n\nRosie smiled as she bent down to kiss him, then straightened up and took his hand.\n\n\"Jimmy, dearest, it would be an honor to wear your ring. Yes, of course I'll marry you, and yes, I want more than anything to be your wife!\"\n\nI was applauding with the best of them, and glowing with happiness for both of them, until I caught Davey's expression, that 'what did I tell you about meddling?' look pasted on his phiz, but then Sophie was glowing too, and Aunt Sybil, so he just had to bite his tongue and shut his face; I love it when a plan goes right! Still, I had a couple of qualms when we were finally alone together, but by then his usual sunny self was back in evidence, and whatever he thought about my plotting and planning he very wisely kept to himself. \n\nRichard's speech as Father of the Bride, was short, sweet, and very loving; his obvious affection for Davey showed in every sentence, and there was very little of the 'behave yourself or I'll bury your headless carcass under the shed' that Sophie had promised, but there was much love and affection for both of us; I was struggling to hold back the tears as he gave the speech Daddy would have given, his words honoring my daddy with the fatherly care and obvious love for both of us he showed in every sentence. Every bride should have a speech as wonderful, as loving, as Richard's on her wedding day. \n\nJack made us laugh in his description of some of Davey's escapades, and the small emerald pendants he gave Josie and Sara, and the gold locket he gave Rosie, as the gifts the best man is traditionally required to give the bridesmaids, showed care and attention to detail. \n\nRichard and Hugo watched the girls like hawks all through the speeches, no doubt plotting their next moves, and sure enough, after the toasts and speeches and cutting of the cake, I couldn't help but notice a certain lack; Josie and Sara had disappeared, as had Richard and Hugo. I had an inkling where they were, actually less of an inkling and more of a dead certainty I knew, if not exactly where they were, definitely what they were doing, but whenever Davey looked like he was going to ask where his cousins were, I immediately shoved him into a gang of well-wishers and let him talk to all of them at once. \n\nIn this way I kept him occupied until Richard and Hugo reappeared, with Sara on Richard's arm, and Josie on Hugo's, all four of them looking bright-eyed and slightly mussed-up; at one point Davey even caught me signalling to Josie that her lipstick was smeared, and there was definitely some of it on Hugo's neck, which I immediately passed-off as a waved 'hello!' to someone or the other. \n\nAs before, I got that slightly quizzical, slightly puzzled eyebrow he got in full from Mom, but then he saw the slightly dishevelled state of the Bridal party and grinned as two and two finally dropped into place.\n\nOne moment of awkwardness slipped in when Davey's friends were congratulating us; Andy was shaking Davey's hand, and pecking me on the cheek, when I noticed Linda trying hard to be happy for us, but the tears were obviously not far away, and I suddenly knew what it was; she knew I was Davey's sister, and now I was having something she could never have; I was marrying the man I loved, something she could never do. ",
        "My heart broke for her, for this beautiful girl who would never be able to have what I had, because of what fate had done to her; she'd never wear that ring and be Andy's wife, no matter how much they both wanted it. At that moment I understood just how deeply I was being gifted, that Davey and I could do this, and that poor, beautiful girl could never have what I had. It took a while to get over that. I suspect Davey guessed my heart suddenly wasn't in it, if his puzzled looks were anything to go by, but eventually I pulled myself together and threw myself back into my special day. \n\nIt took a long time, though, before the sadness I felt for Linda and her tragedy mellowed enough that I could think about her, and wonder how I could help her, or what, if anything, we could do to make it right for her. (As it happened, she found a way; Davey and I were never more happy than the day we attended her wedding, to her beloved Andy; sometimes Fortune smiles on us when we least expect it, and now Linda, Andy, and their little girl are the happiest family in the world.)\n\nThe food was excellent. Aunt Sophie had excelled herself in the choice of caterer, the cake was everything I'd wanted it to be, made and decorated by a mind-reading queen among cake-makers, with four tiers draped in swathes of perfectly realistic sugar pastillage roses and cornflowers, and gilt-edged swags and realistic drapes of folded sugar-work, beautiful, elegant, formal, and dramatic. The music was all I could have wanted, too, played by a string quartet for the formal dancing, and a local band who gave us dance music to pass away the evening. \n\nI danced with Davey like I'd never danced before, whether a romantic Viennese waltz, my Bridal Dance with Davey, or the stately Minuet Mom had tirelessly drummed into all four of us, Josie, Sara, Davey, and I, when we were young, on the grounds that we might as well learn something elegant, one never knew when it might come in handy, and sure enough, with the boys in their tail-coats and us girls in our elegant, lacy gowns, I thought we looked very olde-worlde and elegant indeed dancing those baroque, beautiful measures the way Mom had taught us. \n\nOf course we also boogied to the latest pop sounds; this was a party, after all. Even Richard, my new daddy, claimed me for a couple of the less energetic dances, while first Sybil, then Sophie steered Davey around the dance floor, talking in his ear all the time, obviously giving him so much of the advice she had available for free. Davey was listening raptly, nodding occasionally at something she said, occasionally darting me a glance and a smile.\n\nThe wedding reception was everything I'd ever wanted or dreamed of, but I still had more to come. I know that traditionally the wedding night is when the couple consummate their marriage and make a baby, but we'd already gone there, I already had my baby boy (Charlie, I told myself, his name is Charlie...) growing inside me, but I still had Wedding Night plans for Davey, and, if the looks he was giving me were anything to go by, he had plans for me.\n\nAt last, the festivities came to an end. We gave our guests farewell, with a parting gift of a slice of wedding cake wrapped in a commemorative parcel, and little sterling silver tokens of good luck, wishbones and hearts, that kind of thing, and thanked everyone at the door as they left; we weren't going on honeymoon, at least not yet; Davey was running as fast as he could to catch-up at the hospital, so it wouldn't have been a good idea to go traipsing off on vacation just then, instead, we'd save that for when Charlie was old enough to travel, then take a family vacation together. \n\nAfter the last guest had left, and Jack and Teruko, Harry and Sai-Fong, and Andrew and Linda had given their 'goodnight's' and retired to their rooms, it was just the Bridal party left, and Sophie and Richard. Davey was all for having a small family party, but I kind of nudged him until he realized Richard and Hugo were actually steaming gently in their anxiety to get Sara and Josie alone again and not hiding it too well, so we waved them off too, with promises we'd see them late morning. Davey and Uncle Richard sent the catering people and serving staff home with instructions to return the following day and clear-up, and a 'thank you' envelope with some cash for each of them, ditto the band and string quartet, and then finally it was just Sophie, Uncle Richard, Davey, and me left amid the debris and clutter of what had been a perfect celebration, as far as I was concerned.\n\n\"Well, Darling Girl, I think that went OK, what do you think?\" smiled Sophie, slipping her arm through mine. I hugged her arm back.\n\n\"Thank you, Aunt Sophie, I'd never have been able to get through all this without you; Davey was right; 'Ladies Who Organize' are a definitely a very valuable asset!\"\n\nRichard was standing next to me, and if felt like the most natural thing in the world to slip my other arm through his and kiss him on the cheek, then Sophie.\n\n\"Thank you Mom, thank you Daddy!\" I whispered, laying my head on his shoulder. Richard patted my arm and kissed the top of my head.\n\n\"It's strange, Darling Girl; now that I've given you away, I find I want you back! Do all fathers of the bride feel like this, I wonder? You, young man, you take care of her or I shall be having some pointed words with you; remember, it's getting a bit crowded under the shed, but I'm sure we can make room for you...\"\n\nDavey grinned as he slipped his arm through his uncle's.\n\n\"Believe me, Sir, I shall endeavour to provide nothing but the very best for my darling wife; I have to; I married her twice, my fate is sealed now!\"\n\n*\n\nDavey tells me that back in olden days of yore, after the wedding feast, the bride would have been sung to her bedchamber and her new husband by her bridesmaids and the men of the bridal party, with an intricate Lover's Knot over the bed-head to ensure a baby. Well, we'd already done that, and I didn't get sung to my bedchamber, and I hoped to God Davey wasn't planning on serenading me once I got there; he can do many, many things superbly, but singing is not one of them (Daddy used to say he had a tin-ear and a God-given talent for singing in the key of 'off'; Mom always said he sounded like a donkey being unnaturally assaulted...) so instead, I was kissed soundly by my new mom and dad, handed to my husband, and after a whispered \"see you in the morning, but not TOO early, Darling Girl!\" and a naughty wink from Sophie, we were finally alone in our new home, officially married in the eyes of the family, wined, dined, and treated like royalty. \n\nOnce we were alone, Davey took my hand and stared at me long enough to make me blush; what was he looking at, was a booger hanging out of my nose, or did I have something stuck in my teeth? I was about to karate-chop him if he didn't tell me what he was staring at, but then he grinned, that sweet, happy, 'little-boy' grin I remembered so well from when we were kids. I couldn't help grinning back, because there was suddenly that familiar light in his eyes.\n\n\"What...?\" I teased, guessing just what was running through his dirty little mind; hopefully, the same thing that was running through mine. Davey reached out and took my hand, raised it to his lips, and kissed my fingertips.\n\n\"Will Milady do me the honor of allowing me to escort her to her bedchamber?\" he asked formally, but that devilish flicker was still there in his eyes, \"I have plans for you, my one, only, and always wife; shall we go?\"\n\nDavey being formal is a real stretch for him; I could see he was almost bursting at the seams to get me naked. Hell, so was I, but it pleased him to put up this mask of formality, so I went along with it.\n\n\"But of course, good my husband; on this night of all nights, I would ask no other to do so!\"\n\nDavey grinned even wider, and suddenly pulled me closer, his hands around my waist as his lips found mine. I kissed him back just as needily, wriggling against him to feel the hardness of his cock pressing into my belly even as his hands slipped lower to catch and knead the cheeks of my ass. I gasped happily as he pulled them apart; I knew what we were going to be doing alright, it was what we did, our thing, and I wanted it as bad as he did.\n\n\"Not here...bedroom...get my dress off...!\" I gasped between frenzied kisses, wriggling even more as he fumbled with the little pearl buttons down the back of my dress, his fingers tripping over themselves in his haste to strip me; when he did, he was in for a surprise; Sophie and Rosie had dressed me to kill, and I was going to slay him!\n\nOnce in the bedroom (and we didn't run there in unseemly haste...well almost...) Davey once more grabbed me and spun me around, kissing me almost roughly as he deliberately unbuttoned my dress and stepped back to allow it to slide to the floor. His eyes lit up when he saw I was wearing a tight, white 'Frederick's of Hollywood' satin basque and tiny little white satin panties, topped-off with white stockings and frilly, sexy little garters.\n\n\"Ohhh yess!\" he grinned, twirling me around to get the full picture. \"I'm going to enjoy unwrapping you, Angel-May, stand by to repel boarders!\"\n\nI pulled him closer by the waistband of his pants, and kissed him soundly.\n\n\"I'll do no such thing, husband-of-mine! Tonight's our wedding night, I expect big 'yee-har!' Miss Barkis is willing, you sexy man!\"\n\nDavey slipped his hands around my waist and slid them down to grab and squeeze my ass, making me gasp and grin when he rolled the cheeks and pulled them apart. His happy grin was getting wider by the second and when I grabbed and squeezed his cock his eyes actually glowed. I smiled and licked my lips, feeling his cock pulse and throb when I did that. So I kissed him lightly, and held him close so I could whisper in his ear.\n\n\"This is our wedding night, baby, so put a baby in me, Davey; no, wait, you already did; tell you what, then; why don't you just fuck the living daylights out of me? I want to see the elephant, baby, make it happen!\" \n\nDavy slid his hands into my panties and ever so lightly scratched my asshole as he ground his thick cock against my increasingly tender slit.\n\n\"As my lady commands; I am yours to do with as you will, oh beauteous one!\" he murmured as he slowly, gently slid his finger into me, making me buck and gasp with pleasure. \n\n\"Is that all, or are you gonna follow-through...stud?\" I whispered, grinding right back at him, watching him gulp and grin.\n\nHe slid off his beautiful dove-gray mohair coat and threw it onto the nearest chair, tugged open his tie, and when he went to unbutton his shirt, I batted his hands away so I could unwrap my wedding present. Davey grinned that 'naughty-boy' grin of his and kissed me while his finger in my ass wriggled and teased and made me even hotter for him. I eventually managed to get his shirt unbuttoned, in spite of all the unfair distraction, tugged it out of his pants, and slid it off him, then unlaced his belt and unbuttoned his pants, kicking them away while I squeezed his package through the fitted trunks he always wore in preference to boxers. He went to tug them down, but I stopped him; this was my present to me; my wedding, my rules!\n\nDavey toed off his shoes and pulled off his socks, then grinned when I dropped to my knees and yanked his shorts down. His cock, thick and harder than ever bobbed up at just the right height, so I smiled as sexily as I knew how, squeezed and gently massaged his balls, and licked him from stem to tip, drawing a soft groan from him.\n\n\"No Lori, please, you'll make...\" but he never got any further, because I slipped my lips over the slick, glossy bulb of his cock and sucked him, all the while staring up at him with wide-eyed innocence radiating off me.\n\n\"Oh God, not the eyes, not the eyes...\" he murmured, so I gave him some more, squeezing his scrotum as I sucked him. I could feel him trembling, he was almost there, so I ran my tongue over the head of his cock, and rasped the tip into the slit in the end.\n\nDavey uttered a muffled \"Guuhhnnngg!\" as the head of his cock swelled and pulsed, while his cock gave a muscular throb, and a thick jet of hot, creamy spunk sprayed into my mouth, then another, and another. I was hard put to swallow fast enough as he filled my mouth, the last few days of abstinence paying off as he came like a cannonade, blasting his spunk into my mouth in long, hot jets until the jets thinned to a trickle which I licked up and polished him clean, and licked my lips to remove any traces of his sperm from my mouth.\n\nDavey cupped my face in his hands and raised me to my feet, to smile happily at me.\n\n\"Thank you, Baby-Girl, I needed that, but now it's your turn...\" \n\nWith that, his hands once more clamped around my ass as he kissed me, uncaring what I'd just done. He hoisted me up and I wrapped my legs around his waist, kissing him wildly, madly, hot and ready for him as he held me there, his hands holding my ass, and the tip of his still-hard cock scraping and butting against my tender pussy.\n\nDavey walked me over to the bed and laid me down, his hands all over me, touching, scurrying, stroking and gently pinching. My stiff, sensitive nipples were poking through the satin of my basque and his hands holding and squeezing my breasts made them throb in an agony of need. Davey knows what gets me hot, where to touch, lick, kiss, caress, and right then he used them all, his lips and fingers driving me to almost fever pitch. I made to slide off my panties, but he grinned and stopped me.\n\n\"No you don't; mine!\" he grinned, kissing me on that patch of bare tummy between the bottom of my basque and the waistband of my panties. I waited with bated breath and yesss! he licked my pussy through my panties, his tongue pressing the satin against me, teasing my throbbing clit through the slick material. \n\n\"Davey, noooo...' I groaned, pushing my mons against his teasing mouth, so near, yet so far away, groaning again as he did it again, paying me back for making him come so quickly. Just when I thought he was going to do it again, and I'd started plotting how to pay him back for torturing me, he pulled my panties to one side, and slowly, deliberately ran the flat of his tongue over my crotch, licking me from my tense asshole to my throbbing clitoris. I bucked and whined at the sensation. Davey eating me out is one of my most favorite things in the world, he's considerate and tuned-in to me, he knows exactly what and how I like it done, and every time he does it to me it's like the first time ever, always fresh and new and hot as hell.\n\nHis hot, wriggling tongue probing between my labia and lashing my clitoris was doing things to me I can't describe, sensations and pleasure like the best of everything in the world surged and flowed through me, making me even hotter, even more in love with him, taking me higher and higher, until, as he sucked my clit he simultaneously slid his thumb into my ass and I came like a rocket, like an express-train, like the fourth of July, screaming his name as fireworks went off in my head and waves of hot pleasure surged and crashed through me.\n\nDavey held me as I quivered and trembled in aftershock, smaller but no less intense waves of pleasure ebbing and flowing inside me. When my heart-rate and breathing had recovered somewhat, and my brain came back down to earth, and I was able to finally think again, there was Davey, his smile and his eyes and his warm breath and his arms around me, and I knew it wasn't a dream, it was my wedding night, and my husband was with me, calming me after giving me so much pleasure. \n\n\"Davey, thank you,\" I murmured, \"That was incredible, but what about you?\"\n\nDavey grinned happily.\n\n\"About that...' as he slid my panties off, \"I still don't think you've seen the elephant yet, so, if you're ready...?\"\n\nI couldn't help smiling; Davey is a horny bastard at the best of times, and he was right; we had unfinished business to take care of, I still needed some of that Davey-Magic, and whaddya know, I had a hot Davey right here, all primed and horny, if the state of his cock was anything to go by... \n\nDavey slid his arms around me as he kissed me, and rolled onto his back, taking me with him, so now I was lying on top of him. His hands restlessly groped and fondled my ass as we kissed like teenagers, the hot bar of his erection between us, pressing into me, reminding me what I wanted. We kissed and ground together, dry-humping, feeling the need grow even as we played. Davey makes me very hot very quickly, I love him endlessly, but I also desperately need all of what he's got so much of. Being alone with him is an agonizing exercise in will-power, because my natural inclination is to yank my panties off and jam myself down on his ever-ready cock. \n\nThis could be a problem if, for instance, we're in a supermarket or on a bus, so when we have the opportunity, we go at it full-speed ahead, as long as it takes and as dirty as we can manage. As it was, this night, we were supposed to go bananas; this was the one night everyone knew exactly what we were doing; it was expected of us, it was probably a legal requirement for all I knew, and that being the case, why disappoint them...?\n\nAs we kissed and ground together, my legs drifted apart, and Davey slid his finger into my ass. As I gasped and giggled, he lifted me up, and I took the hint, grabbing his throbbing cock and slowly, teasingly sliding it into me. Davey's hands remained clamped around my ass, and as I rode him, his finger in my ass kept pace with his thrusts into me, both my holes being filled at once by the man I loved.\n\nI don't know how long I rode him. All I know is that orgasm after orgasm rolled through me. Davey makes me hot and bothered, and it doesn't take much from him to set me off. This night, though, was special; all that had gone into making it so had come to a head, and now here I was, making love on my wedding night to the man I'd loved since we were both young, the boy who'd left me and come back a man, to find me a woman in love with him, the man I'd plotted and schemed for, but never believed I could ever have, and now he'd married me and given me his baby.\n\nAt the thought, orgasm sharp and hot raced through me, hot pleasure burning through my body and lighting up my mind like a summer fireworks display. I sobbed and whined as bolt after bolt of sexual electricity buzzed and crackled through me. Davey held my hands as my fingers laced with his, holding me up as I fluttered like a leaf in a gale in the throes of such a gigantic orgasm.\n\nI slumped down on him, my heart thudding like a trip-hammer while my Davey held me close, his arms around me holding me, anchoring me, reminding me that he was here, with me, where we were supposed to be, together forever.\n\nWhen I opened my eyes, it was to see his beautiful green eyes looking at me, filled with concern and not a little relief.\n\n\"Wow, that was...I don't know what happened there!\" he grinned. \"I thought you'd passed out; you glazed out and I thought you'd passed out! Are you OK, baby?\"\n\nI warmed inside at the love and concern in his voice.\n\n\"I've never been better, baby, honest! I think I just saw the elephant!\"\n\nHe grinned at that, and kissed me as he jiggled my bottom, reminding me we still had one thing to do.\n\n\"However, Darling Boy, I don't think you did, so let's take care of that! I need some wedding night Davey-Magic, and I think you do too!\" \n\nHis cock, still buried deep inside me, throbbed; the penny had just dropped for him. We rolled over together so I was now under him, kissing his face, his lips, his chin, his neck, working him up, heating him up, because I wanted to do this one last thing, our thing. I stopped kissing him, and he looked quizzically at me.",
        "\"Just like Mom, baby; you know what I want!\"\n\nDavey licked his lips and grinned happily, his eyes dancing in the subdued light, making me flutter inside; he looks delicious at the best of times, but when his horny head takes over he's irresistible, and I wanted a large bite!\n\n\"Are you sure about this, Darling Girl?\" he murmured, and I bit my bottom lip and grinned, two things I know make him extra-super horny, the feel of his rock-hard cock throbbing in my pussy telling me all I needed to know about how worked-up he was.\n\nDavey slipped out of me, even that causing me to gasp and bite my lip, and I put my hands behind my knees, holding my legs open and high. Davey shuffled forwards on his knees, and rubbed the head of his slick cock against my asshole. I was already loose from his fingers playing around me, but he still lubed me with my own juices, and when I nodded, slowly pushed forward.\n\nThe sensation of him slowly, inexorably sliding into my ass was all I was waiting for; we'd done this so often that it barely hurt at all, but the pleasure was always there, always new, always different. Davey liked to do it this way so he could kiss me as he sodomized me, and I liked it this way because I could look into his eyes as he fucked my ass and see his pleasure as he pleasured me. My hands slid down from behind my knees to hold my butt-cheeks open, lifting my mid-section until Davey was pile-driving me, jamming his cock into my ass as I humped back at him, feeling the threads of orgasm once more curling and twining inside me.\n\nDavey could obviously feel it too. His expression as he hammered into me said it all, he was obviously trying to hold it back, to make it last, and when he kissed me, hard, that's when it hit me once again, that thunderbolt of orgasm, like lightning spearing through me. I screamed with release, my pussy squirting my juices over his mid-section as I came like never before, wave upon wave of pleasure searing me. My asshole tightened around his pounding cock, and he groaned out load, his cock swelling and jamming in my asshole as once more he blasted his spunk into me, filling me with his essence again and again.\n\nDavey slowly slid out of me, making me whine as a string of mini-orgasms went off me like firecrackers, and he slumped down beside me, almost too tired to move. I was a sweaty mess from all that humping and pumping, and I really needed to get all that lingerie off; it looks good and makes men horny, but sleeping in it? Try it sometime...\n\nDavey helped me unbutton that basque, kissing me every time he popped a button or unhooked an eye, until finally that sexy, but constricting, corset was off and I could breathe again. I slumped back with a sigh of relief, and after a while, noticed Davey, with his head resting on his elbow, grinned happily at me.\n\n\"What, what'd I miss?\" I grinned, and Davey leaned over and kissed my tummy.\n\n\"Hello, Charlie...\" he murmured, and then I realized my baby-bump had finally started to show; well, it was about time, I was well into the second trimester. I looked at Davey and smiled, and saw the sparkle of unshed tears in his eyes.\n\n\"Looks like our son has decided to make his presence felt...\" he whispered, \"Now both my babies are here for real. Love you, Angel-May!\" \n\nWe slept late, as per instructions, and, after an extended bout of kissing, nibbling, licking, and groping, had a long, hot, and very sexy shower, and then Horny Head came a-calling, and Davey fucked me unmercifully in the bed, on the bed, on the floor, and over a chair, and, just to make sure, filled my ass again in the shower. We came down, somewhat shakily, very late indeed, to find Sophie and Uncle Richard had come along early and supervised the clean-up; all the mess and debris was gone, the marquee and catering stuff all taken down and taken away, the rooms put back in order, and the people who'd done it all paid, tipped, and gone; apart from a heap of uneaten food filling both fridges, no evidence remained that a loud and noisy wedding reception had happened just a few hours earlier. I couldn't help but replay in my mind what Davey had once said about Sophie, and 'Ladies Who Organize...' \n\nTo thank them, I made them sit and relax while I made coffee, tea, and platters of sandwiches, canap\u00e9s, pastries, sausages, petite-fours, and dainty little cupcakes, courtesy of all the catered food left over, and we had a family brunch, just the four of us. Sophie had already hosted breakfast for Davey's friends, and so Andy and Linda, Jack and Teruko, and Harry and Sai-Fong had tactfully left us to have a little post-wedding time together. Jimmy and Rosie had taken them to meet Aunt Sybil and have lunch with her before being chauffeured around picturesque Mid-Oxfordshire in Jimmy's limo; they'd had it figured that we'd want a little alone-time with Uncle Richard and Aunt Sophie after all the panic and bustle of the last few days, so had made up a day to keep our guests occupied and interested elsewhere. \n\nRichard and Hugo had kidnapped my girls, but Sophie had a very good idea where they were and what they were doing; with her usual aplomb and savoir-faire, she reminded us that it had been so long since those two had been involved with 'nice' girls she was just overjoyed Josie and Sara had finally made those two hulking articles sit-up and beg; both girls were over eighteen, so whatever they were up to with her boys, it was between them and their parents, but she'd already reserved some Honiton Lace and several bolts of white, watered silk, and put our mind-reader of a dressmaker on-notice; from all appearances, it looked like she was going to be needed...\n\nDavey and I spent a lazy afternoon basically lounging together kissing, nibbling, holding, just being together, planning how our life would be going forward. Davey was still in-training, that part wasn't going to change for a while, so what we mainly talked about was what I was going to do for the next few months, or at least until Charlie chose to make his appearance. I had a pretty definite date, and my scans and checkups were all normal, so no worries there. Davey was fascinated with the news that Hugo and Richard had been captured by Josie and Sara and the thought that we were possibly looking at two more family weddings in the near future, possibly three, depending on when Rosie and Jimmy decided to tie the knot. Davey was also taken with the notion that Josie and Sara, his de-facto baby sisters, would be most likely marrying his first cousins and their babies would be his close family.\n\n\"I wonder if Aunt Sophie is ever going to tell Uncle Richard who he really is?\" he mused, his eyes sad and distant. \"I'd really like to address him as 'Uncle Richard' and know that he knows it's not just a courtesy title; he's my father's older brother, I'd like one day to welcome him as my uncle for real. At the end of the day, he's the only real family I have, present company excepted, of course; I really wish I could acknowledge him as such.\"\n\nHe looked so sad I couldn't help but kiss him gently.\n\n\"You know, baby, and I know, and that's enough for me. I love them both, they feel like Mom and Daddy to me, and that's not just hormones talking; everything about them fills me with that 'Mom and Daddy are here' feeling; it happened the first time I ever met them. When he danced with me last night, for a split-second I swear to God I saw Daddy's face when I looked at him, and you know what? I think Daddy's pleased he and Sophie are in my life now. Mom said before she went that she'd always be there for me, one way or another, and I know it sounds crazy, but I can't shake the feeling that Uncle Richard and Sophie are here in our lives because Mom made it happen that way.\"\n\nDavey grinned that sweet, quizzical smile and kissed my forehead gently.\n\n\"It doesn't sound crazy, Angel-May; it sounds like love to me. I can't believe how lucky we are to have family like them. Sophie once told me to trust in my family, and I do; I can't think of better people to be my family and look after my babies when I'm not around.\"\n\nThe sound of Jimmy's car pulling up outside put an end to any more maudlin conversation, and Davey and I were ready to greet our guests as they came clattering in, chattering and laughing over their day excursion and their lunch with Aunt Sybil. As they came in and took their seats, I was once again struck with just how out and out beautiful his friends were; Sai-Fong and Teruko looked like resting movie stars, their perfect features glowing with impending motherhood, and Linda looked so beautiful and definitively 'English' I held my breath in wonder. Davey's friends, handsome men all, had captured such serenely beautiful women I found it hard to believe they were their sisters; they were so beautiful I felt sure they could have had any man on the planet; that they'd chosen their big brothers told me all I needed to know about what kind of men they were. \n\nWe spent the afternoon re-hashing the wedding and reception, but I could tell Linda's heart wasn't in it; even I could see that that her not having found a way to marry her beloved Andy weighed heavily on her. I wanted to comfort her, to tell her that she'd find a way, they both would, but Davey's warnings about meddling with Jimmy and Rosie came back to me, so I bit my tongue and did my best to include her. \n\nThe day wore on and Linda and Andy insisted on preparing afternoon tea for us, Sai and Teruko needed their rest, and I was the blushing bride, so they jumped to it, and soon we sat down to a marvellous table groaning with all the food they could find in the fridges: sandwiches, canap\u00e9s, cupcakes, rolls and cold cuts. Davey insisted it all had to be eaten before it all spoiled, so we stuffed and stuffed, making it more of a party than a formal afternoon tea party. \n\nOnce we'd polished-off all the food, and drank gallons of tea and coffee, Davey and I excused ourselves, and went and got the gifts we'd sought out for all of them, 'thank-you's from Davey for coming to our wedding, and from me, for being such good and loyal friends of Davey; these were the people he'd lived and studied with, schoolfriends and proxy family, and they and their families had cared for him when he was alone and so far from home, something I will always be grateful for.\n\nFor Sai and Harry, Davey had found a pristine antiquarian copy of 'Ivanhoe', Harry's favorite book when he was a boy, and a beautiful antique gilded-silver mirror and bangle from the vault for the baby; Sai wore a beautiful Jade pendant, an exquisite antique Japanese carving of two rats rolling an egg, and we doubted we could get her anything more beautiful than that. For Jack and Teruko's baby, Davey had found a lovely little Victorian ruby and smoky amethyst gold pendant on a fine gold chain, and for Linda, I'd found a tiny little Art Deco Jaeger LeCoultre watch, a classic look for a classic beauty.\n\nWhen they had to leave, I had a huge lump in my throat; even after such a short acquaintance they felt like family, and letting them go was a real wrench; even Davey was feeling it, if the quiver of his lip and his frequent swallowing was anything to go by; the sad, longing look on his face when they left was heartrending, but the dear man still comforted me.\n\n\"Don't be too sad, baby; we'll be seeing them all again soon; the babies are due in a few weeks, we'll have a knees-up then, don't you worry...\"\n\nThe way he said it told me he was really telling himself, comforting himself, but his arms around me never relaxed, and his lips brushing my ear were still as loving and gentle as ever. \n\n*\n\nLife soon settled back into a normal routine; Davey and his studies/training took up an increasing amount of time, which dismayed me, but, to be honest, he had warned me all those months ago that this was going to happen; he was the most junior surgical trainee, so his professors and mentors loaded him down with as full a calendar as they could manage. This was his 'make or break' time. Either he buckled-down, or he just buckled, period. Davey kept his shoulder to the wheel and kept going; sixteen-hour days became the norm; he'd come home so tired he couldn't even climb the stairs, and I'd just leave him on the couch, still fully-dressed, with a quilt over him and a couple of pillows, so tired, and so deeply asleep I could barely detect life-signs, let alone snoring.\n\nSophie and Uncle Richard were my mainstays during this time. Poor Davey wanted so much to be part of my pregnancy as more and more milestones were reached and passed, and I did occasionally resent the amount of time he put in at the hospital, but Sophie reminded me when I flagged that he'd told me this was coming, he'd given me fair warning, he'd even offered to give it all up to remain in Maine and go into family medicine, and I'd balked at that, instead I'd promised him I'd support him, and times like this were when he needed me most. \n\nI understood and accepted what she said, because I knew Davey was his father's son. He had to be all he could be, because if he didn't, then in his mind he'd be nothing, and that would be the end of him. I would never let that happen; Davey was my world, I wanted him to be sure in his mind that he was doing the right thing, so I sometimes had to bite my tongue and instead of exploding over the life we were leading, I'd tell him I loved him and to keep reaching for the prize, even if I was shrieking with frustration and loneliness inside. \n\nThose were the days I needed Mom most, and that was when Sophie made the most difference. I had Uncle Richard to be my dad, Jimmy to be the man who did my 'honey-do's', Rosie to be my gal-pal, and Richard and Hugo to be my big brothers, even if they were moping around 90% of the time because Josie and Sara had gone back to Des Moines to clue-in their respective parents and wrap-up their affairs, but Aunt Sophie was my lifeline, my reality-check, and the island of calm sanity I so desperately needed. \n\nTo keep me occupied, I started helping Sophie in a new venture; after much nagging from me, and a few gentle nudges from Richard, she'd agreed to put her talent for organization and masses of connections to good use, and had begun organizing Country-House events, engagement parties, christenings, even village fairs and f\u00eate's. \n\nTo her pleased surprise, she was a success; most social events in the county tended to be haphazard affairs, especially weddings, which were usually organized by the bride, her bestie, or her mom, and, unless the mom was the kind of formidable woman that Sophie could be, they were usually verging on shambolic. Sophie, with her bottomless address book, her vast pool of specialist dressmakers, caterers, florists, and decorators, and the names of the best cake-makers in the kingdom at her fingertips, became, almost overnight, the go-to for a properly organized, genteel, and memorable wedding, christening, 18th birthday, or engagement party. I was her backstop, Watson to her Holmes, with Rosie occasionally drafted in as tail-gunner, and Jimmy reprising his role as pack-horse, silent muscle, and token person to complain at.\n\nAll this helped to distract me from the fact Davey was away from my side for so long, so imagine my relief when, three days before my due date he came home at his usual ungodly hour, threw his clothes across the bed, and grabbed me.\n\n\"Guess what, sweetness?\" he grinned, \"A whole three weeks, I've actually got three weeks off, no early mornings, no late nights, cammere!\"\n\nI was so relieved, I was afraid I'd be in the delivery room and he'd be locked in the cardiovascular unit while I went through the delivery alone, but now he was here, and a whole freight-train of worries I hadn't realized I was pulling behind me just uncoupled and disappeared.\n\nBeing nine months pregnant meant we had to tone-down our sexcapades somewhat; obviously, 'Missionary' was out of the question, so Davey could really only fuck me in the doggy position, and while I had no problems suckling him and letting him fill my mouth, my breasts were so distended and sore he was loath to touch them; where once all he had to do was rub my nipples while ramming into me to set me off like a Roman Candle, the pain in my breasts, and the ache in my back, meant our sex-life had cooled right down; the desire was there, don't get me wrong; the sight of Davey naked always makes me horny and ready to rock 'n' roll, but biology and Mother Nature kept getting in the way. \n\nWhat made it worse was the thought that once baby Charlie made his appearance, we'd have to wait six weeks after the delivery before we could make whoopee, and it made me almost want to cry in frustration; here I was, ready to pop any day now, and all I could think of was breaking beds with my blonde hot-boy; I was near to going out of my mind with need, and the thought of another six weeks of enforced abstinence meant I was a crabby, tetchy, bitchy mess, and poor Davey usually got the sharp-end of it. I think Uncle Richard had kind of warned him what was coming, because his look of almost saintly forbearance made me want to trip him up and just beat the shit out of him; humor me, would he? Give me half a chance and a clear shot and I'd have wiped that tolerant look off his phiz, you betcha! \n\nI think he was almost relieved when, bang on time, I woke him at almost four in the morning to tell him my waters had broken, so could he kindly get dressed, grab the hospital bag, and get me the fuck to the hospital, because Charlie was on his way. I called Sophie while Davey went into 'well-controlled Blind-Panic' mode, and when he started having hysterics because he couldn't find the car keys, I had to grab his face, squeeze his cheeks, hard, to shut him the fuck up, and point to the car-keys hanging on the front door, where they'd been kept all week, all ready to go when this happened. \n\nI'd always thought of Davey as 'Mr. Cool', but now that 'slightly-raised-eyebrow-in-the-face-of-oncoming death, Joe-Cool' fa\u00e7ade of his was in shreds as he gibbered and dithered. I got him in the car by simply twisting his arm up his back and frog-marching him to the car, then shoving him into the driver's seat, hoisting my overnight bag into the back seat, and helping myself into the car, because I think he'd forgotten about me in his panic.\n\nWe drove to the hospital mostly on auto-pilot, Davey's knuckles white on the wheel and his face pale and set, but he still remembered to drive carefully through the unlit country roads and lanes. Sophie and Uncle Richard were there at the hospital, and that's when I finally lost it, but Sophie quickly marshalled the midwives and night-staff and got me in a gown, in a chair, and wheeled into the Mother-Baby unit, with Davey gowned-up and pushing me, and Sophie in attendance.\n\nI was in labor for an agonizing nine hours; during that time, I alternated between panicking, wanting Davey to hold me, kiss me, come closer so I could throttle him, stab him, bash his face in for doing this to me, hating his guts and making graphic death-threats, telling him exactly what I thought of him, his family, England, the Queen, mother's chicken soup, everything, really. \n\nPoor Davey took it all with that stoic, tolerant look he'd developed to cope with my third-trimester anger, frustration, and resentment, and I found time to promise myself he was going to pay dearly; he had 32 teeth in his head, he could probably spare a few, because I was going to punch that saintly look off his face... \n\nAs you can probably tell, at that point I was past rational and deep in my world of pain; I'd refused an epidural, something about the thought of it worried me, so I was relying on gas and my hatred of Davey to pull me out of this incredible pain.\n\nOnce the baby crowned, though, it all went so quickly I was amazed; from agonizing contractions to suddenly almost nothing, it was incredible. I didn't click at first, I was so hot, sweaty, tired, and just worn-down it took me a second to see the tears running down Davey's face, but then my baby cried as they suctioned his airway, and my hair literally stood on end as my nipples gave an almighty throb at the sound of his little voice.",
        "\"My baby, where's Charlie...?\" I started, and then Davey was swabbing down my forehead with something cool and damp.\n\n\"They're just wiping him down, one second...oh my God, he's beautiful, our son is so beautiful...\" he murmured, but then the midwife put a tiny little pink...person swaddled in warm blankets in my arms, and all I could do was stare, enthralled, at my beautiful little baby boy, at his tiny little fingers, his soft, downy golden hair, and beautiful, emerald-green eyes, just like his daddy's. Davey cuddled us both, his eyes glistening as he stared down at our son, his gentle, surgeon's fingers stroking our little boy's cheek and tiny, perfect little hands, and a giant surge of love and protectiveness bloomed inside me; I was a mommy now, this was my baby, and his daddy was here with us; we were a true family now, at last. \n\nThey wheeled me away to finish the birthing procedure, Davey wanted to help, and the midwife, who'd thanked him for not poking around and getting in the way, consultant surgeon or not, was okay with it, but I knew what was coming next, and I really didn't want him to see that; hell, I didn't want to see it, but it had to be done, and I didn't want my husband seeing that, I mean, yuck, so I gave him his marching orders, with strict instructions not to let my baby out of his sight in case someone stole him, one heard stories about changelings, and swapped babies, and baby-stealing rings, was it legal to hire armed guards, go get some watchdogs, do they sell bear-traps in England, blah blah blah... \n\nI guess the gas and the exhaustion were still playing their part.\n\nAs they took me away, the last thing I saw was Sophie cradling my little baby boy, and my eyes welled-up at how much she looked like mom; now I knew how mom would have looked holding my newborn baby. \n\n*\n\nThey let me home after three days, and when I stepped back into my home, everyone was there; Uncle Richard and Aunt Sophie, Richard, Hugo, Sara and Josie, Jimmy, Rosie, Aunt Sybil, and Rosie's brother, Adam, who Davey assures me looks exactly like his daddy, Davey's uncle Jerry. Well-wishers from the village came by in a steady stream all day, bringing gifts for the baby and pies, tarts, cakes, and cookies, the whole village welcoming its newest resident.\n\nNot surprisingly, in among all this baby-flurry and kerfuffle, Jimmy and Rosie told us they'd set a date for their wedding; it was just going to be a small family affair, basically everyone who was there was all they were inviting. Sophie was a little put out at first; Rosie was her favorite niece, and she'd been hoping for something a little more grandly romantic, but Rosie only wanted immediate family. Richard then said he had some news he wanted to share.\n\n\"Mother, Father, David and Lori, I wanted you all to be the first to know; as you know, Hugo and I have been...seeing Sara and Josie for almost six months now; yes I know, for us that's got to be some kind of record, but there's been a very good reason for it. Last week, we had to go to the Chicago office, and while we were there, we ducked over to Des Moines, because Hugo and I had something to ask Josie's and Sara's parents.\"\n\nI was grinning happily, and both Sara and Josie were looking happy enough to burst. I guessed what was coming, and I wasn't wrong. Hugo smiled and continued where Richard had left off.\n\n\"Mother, Father, everyone, all our family and friends; Richard and I went to Des Moines to speak with Sara's and Josie's parents, because we wanted to formally seek their permission to marry their daughters. I'm so very happy to announce that both their parents' gave their permission, and so this morning Richard and I took the girls to breakfast, where I asked Josie to marry me. I'm so thrilled to be able to tell you that she accepted; Richard?\"\n\nRichard smiled, Sara's hand clasped in his.\n\n\"Everybody, I am so very, very happy to tell you that, this morning, the lovely Sara also consented to be my wife. I can't think of a better nor more lovely girl to pledge my life to, and Lori, I want to thank you for making it all possible!\"\n\nRichard took Sara's left hand, raising it to his lips and kissing the ring on her finger, as did Hugo with Josie, the elegant, restrained, but obviously very expensive diamond rings clearly in view. Rosie and I were grinning like chimps; we'd seen this coming for ages, and were only waiting for the boys to say something, while Davey looked a mixture of pleased, confused, stunned, but happy for his cousins. Sophie was transfixed; she'd been waiting for this moment for years, she'd planned, schemed, ambushed, threatened, and blackmailed her sons and now, finally, the grandchildren she was longing for were finally approaching over the horizon; I think it would be it would be true to say that right there and then was probably the best day of her life. \n\n*\n\nLiving with a new-born took some getting used to; little Charlie seemed like he was hungry or wet 24/7, and while I was more than happy to shoulder all the care of our baby, Davey wasn't prepared to do that; he wanted in, he wanted to be 'Daddy-present', not 'Daddy-absent, and so he got stuck in when he could, even though he'd be hollow-eyed with exhaustion by the time he got back from the hospital after a night of walking a crying baby so I could get some sleep, then a long day in the OR, followed by more of the same. That was when I really began to appreciate just how much he loved me; not once did he ever complain, give me that long-suffering look he was perfectly entitled to, or blame me for his chronic exhaustion; he just kept on keeping on.\n\nHaving an extended, 6-week 'no-sex' ban was also fraying us both around the edges; seeing my hot husband holding and gazing lovingly at our little miracle made me truly, deeply horny; night after night I lay awake while Davey walked, changed, fed, or just watched baby Charlie, just replaying the wild sex we'd indulged in as a matter of course; it was our thing, our most fun connection (there were other, deeper connections, of course there were, Davey and I were not just a pair of appetite-driven hump-jockeys) and I missed it tremendously, and I know he did. \n\nWe'd tried various ways to let some of the pressure out, but none of them had the same deep-in-the-bone intensity of our lovemaking, and I know Davey still wanted me in the worst way; I hadn't really gained any weight during my pregnancy. Davey had assured me that whole 'eating for two' thing was a fallacy and not good for either me or the baby, and, apart from my new, 'Dolly Parton' chest, I was still slim, no wobbly little 'mommy-tummy' belly-fat or huge 'new-mom' butt, and I could see Davey eyeing me with that famished, ready for the wild-thing look that was his usual expression whenever I stripped-off, but he was adamant; forty days, no sooner; I had to have time for my body to settle down and settle back into itself, for my body-rhythms to re-establish.\n\nThis just made me want to scream with frustration; I just wanted to hump like a baboon; my body was screaming out for a large rogering, and I know Davey was sorely tempted, if the agonized look on his face and the fact I only had to squeeze him lightly for him to explode all over me was anything to go by, until finally I'd had enough. \n\nI was going out of my mind, I had a hot husband with a desperate cock, something had to give, so, that evening, when he came home from the hospital, it was to find Charlie fed, changed, and fast asleep in his crib in my dressing room, with the door open so I could see him, and me floating around in a gauzy little negligee (it was from 'Victoria's Secret', so it was less nightie and more 'tonightie, Studmuffin...') and it made his eyes light up.\n\n\"What are you doing, Angel-May? Charlie...\"\n\n\"...is fast asleep, husband of mine, and we need to talk, naked, so just do it!\" I ordered him. \n\nDavey grinned, slipping off his polo shirt and toeing off his shoes, and then he was down to those lovely, tight trunks he always wore, with that delicious, ever-present bulge that told me everything about what was going on inside him.\n\n\"Not yet sweetheart, we can't...\" he started, but my fingers wrapping around his cock shut him up, except for a long, soft, shuddering groan.\n\n\"Noooo, don't please, we can't, don't...\" he murmured, so I didn't hear him and instead gave him a squeeze that made his eyes bulge, and just to drive the point home, shrugged that filmy, lacy non-garment off so he got the full visual of me and all my booby magnificence; I'm glad to report something inside him obviously went 'spuuung!\" because his cock twisted and throbbed like a caged python; it's nice to know nothing could put my boy off his stride for long; he definitely hadn't lost any of his edge.\n\nMuch as I was enjoying groping and fondling him, I wanted more; I knew we couldn't do...that thing, but there were other things, wonderful things, things we used to go at like gangbusters, and I was in the right mood to get some of them in, as Davey likes to say.\n\nDavey grabbed me and pulled me close, his fat cock rubbing against me while his hands squeezed my ass cheeks and pulled them open, stretching my asshole open and making me hotter and even hornier than I already was; my pussy felt hot and full, and itchy, needing him, and letting him know I was ready for whatever he had in mind. As he kissed me his hands slid around my butt, and his fingers gently stroked and teased my rosebud, so yesss! we were on the same page... \n\n*****\n\nSo now that's the tale of Davey's and now my, extended family. Richard and Hugo married their girls, my sisters in every way that counts, in a double ceremony at Denham Hall. Adam, Rosie's younger brother, was Richard's Best man, and not surprisingly, Jimmy stood as Best Man for his best friend, Hugo, and Rosie and I were Sara and Josie's Matrons of Honor. Among all the family who were there, Bella and Maude didn't show up; Maude because she was living in a small village in the far west of Brittany, obviously believing she was out of sight, out of mind; it wasn't until later I found out that Davey had arranged an allowance from those vast trust funds of his for her, so she could at least have a reasonably genteel life; in his heart, Davey is a gentle soul (unlike me, I can be a vindictive bitch, but you already knew that...) and on sober reflection, he'd decided she wasn't really to blame for any of the unpleasantness, she was just weak and gullible enough that Bella had been able to play on her insecurities and coerce her into getting involved; obviously Bella believed blame shared is blame halved, but she soon discovered that wasn't the case. \n\nAnyway, along with the income he'd arranged for Maude, Davey, with the assistance of Richard and Hugo, and a gentle nudge or two from Uncle Richard, had created a fund each for Vinnie and Jenni, Maude's daughters; the two of them had been invited to the weddings, and had very contritely apologized for all the bullying and malice they'd directed at Davey and Rosie when they were small; perhaps they'd finally realized that all they had was the family, so now was the time to try and get in their good books.\n\nWhatever their reasoning, Davey felt sorry for them, so he and the boys cut them a share of the trust funds; he'd always said his father had left him that money as a legacy, something to pass-on and benefit future generations, but he also took it to mean it was for the good of all, not just for him to squander, so the two girls who'd schemed with their mother to get their hands on the funds discovered all they had ever had to do was be part of the family and the family would look after them. When I'd first seen them, I'd been prepared to believe everything Davey and Rosie had told me about them; now, with that look of spoiled malice no longer permanently marring their features, I was surprised to see just how pretty they actually were; perhaps Richard was wrong; perhaps now someone was going to finally take notice of them now that the spoiled brattiness was gone; they were Denham girls, after all.\n\nBella, however, was a different kettle of fish entirely; Davey and I were inclined to leave her to sweat in whatever hideout she'd carved for herself; revenge was just not something that occurred to us, and we had everything anyway, while she had nothing; us beating-down on her just seemed like the worst kind of bullying, so we were happy to let her be. However, his trustees and the magistrate she'd conned weren't having any of that, so they all, singly and collectively, filed charges on multiple counts of fraud, attempted fraud, and perjury, and Bella was arrested and charged. She's currently on remand, awaiting trial, in a women's prison in the county of Surrey, a comfortably long way away from us. Rosie could care less; as she said at the time, \"Bella's family were jail-sweepings, so she should feel right at home!\"\n\n*\n\nEpilogue:\n\nDavey and I leaned back in the swing chair in the shade of the Rose Arbor, rocking gently as we watched our family; Richard and Hugo had rashly volunteered to get the barbecue going and make lunch, but Sara and Josie, eight months pregnant each but refusing to let it hamper them, had finally stepped in when it became obvious the boys may have been financial geniuses but they were missing something essential when it came to getting a good bed of coals started; luckily Sara and Josie had more than enough Midwestern barbecue savvy to get it going, and instruct the boys in the right way to smoke a brisket, stir up a good dipping sauce, and grill sausage links and franks to perfection. \n\nRichard and Hugo had therefore decided that their God-daughter, my little toddler Sophie, was much more fun, so they were happily rolling around on the lawn while she giggled and romped, and clambered around on them.\n\nDavey looked fondly at his two adopted sisters, now his cousin's wives, and our family for real now, and at Rosie, engrossed in chopping and shredding salad ingredients.\n\nCharlie was off in the distance with Jimmy, dragging him around to show him and his little daughter, Gemma, his secret little dens and hideouts, and where to watch the best frogs when they came up on the lily-pads I'd put in; a pond with frogs and no lily-pads is an offense against nature, so I'd got some, and now my water lilies were the envy of the village.\n\nDavey pointed with his chin at Jimmy off in the distance.\n\n\"Jimmy changing his name to 'Denham' is a huge compliment to us, all of us; as far as I was concerned, and especially Richard and Hugo, he was already family, but adding that 'Denham' tag just so Gemma will grow up a Denham is something we'll never be able to repay him for; it tells me what and how he feels about us, and where he and Rosie, but especially Gemma, fit into this complicated clan we've become. Sophie was thunderstruck when he told her, then of course she broke down in floods of tears, and don't ever tell her I told you, she enjoys being 'Dragon Lady', don't ruin it for her...\"\n\nI snuggled closer to Davey; he always smells so nice, hot water and shaving soap, and his own fresh, clean scent under it all, and let my fingers trail across his lap. Davey cocked an eye at me and grinned.\n\n\"Something on your mind, Angel-May?\" he murmured, like he didn't know!\n\n\"I was thinking,\" I whispered, \"remembering a conversation we had back in Bar Harbor, what, four years ago? About how many children we'd have?\"\n\nDavey nodded absently, keeping one eye on the kids, although since they were with their uncles, they were perfectly safe.\n\n\"What about it, babe?\" \n\nI kissed along his jawline and nibbled his ear, then jammed my tongue in his ear, suddenly getting his full attention as he spluttered and bucked. His arm slipped around me and he squeezed my butt, smiling at me while his eyes danced, so I plunged on.\n\n\"We agreed that one kid would be lonely, two would fight, three kids meant two would gang-up on one, but if we had four, they'd be evenly matched, remember?\"\n\nDavey gave me that 'what are you not saying?' look he keeps around for me, and nodded slowly.\n\n\"OK, we've got two kids; are you saying you want some more? Because I'm game; you know I love making babies with you! Are you really sure...\"\n\nI stopped him with the hottest kiss I could manage in the confined space we had, but I could feel his interest ramping-up, and his hand on my butt was definitely having fun squeezing and groping my ass. He broke our kiss to grin at me.\n\n\"You wanna...?\" but I nixed that; we had guests, for goodness sake; still, it was nice to know he was completely on-board!\n\n\"Later, Davey, we have all night for that! One thing, though...\"\n\nHe looked quizzically at me, that adorable puzzled look he does so well.\n\n\"So tell me, Angel-May, what do you want; speak, and it shall happen, oh Moon of my delight...\"\n\nI tweaked his obvious erection for making fun of me.\n\n\"If we make another baby, there's something I want you to promise...\"\n\nHe nodded, so I plowed on.\n\n\"If it's a boy, I want to name him David, and if it's a girl, her name should be Jane; what do you think?\" \n\nDavey's eyes brightened as he smiled like the sun coming up, and he pulled me closer to kiss me gently.\n\n\"I think Mother and my father would be honoured; thank you for including them, baby-girl.\"\n\n*\n\nCoda:\n\nSophie managed to drop a bombshell one day after dinner, but in a good way, to do with family and connections. It started off innocently enough, following on from a remark I'd made over coffee about not having Mom at my wedding, and Sophie grinned happily.\n\n\"It's good that you said that, Darling Girl, because I have something to tell you. It's about, well, family and such; I hope you're going to like what I have to tell you.\"\n\nI looked at her, obviously puzzled at where this was going. Sophie soon made it clear.\n\n\"Darling Girl, it's always puzzled me why your dear mother and I look so similar; Sybil, Richard, even the boys have all commented on how similar we are, you, me, and your poor mother; from that painting up at Denham Hall, she could easily be you, or me; such a close resemblance must mean something, it couldn't just be a coincidence, so I've been digging through my family papers for some while now, trying to see if there was somehow a connection between us, and now I know there is, and what it is.\" \n\nI was agog; from Sophie's expression, I could tell she knew something special about Mom. I didn't have long to wait.\n\n\"Ok, so try and follow me, Darling Girl, this gets a little complicated. Back in 1917, my grandfather, George Lascelles, was a young officer, an eighteen year-old 2nd Lieutenant with XIV Corps. He was gassed at a place called Passchendaele, in Belgium, and was brought back to England to convalesce. His family placed him in a sanatorium in Bournemouth, on the South Coast, because they thought the sea air would aid his recovery. He was there for many months, because the damage to his lungs was quite extensive. Anyway, while he was there, he fell in love with one of the nurses, a pretty young Cornish girl named Lucy Trevellyan. When his Victorian dragon of a mother found out he wanted to marry a humble nurse she absolutely wouldn't hear of it and promptly yanked him out of there and back to Oxfordshire, and married him off to my grandmother, an altogether more 'suitable' marriage in her eyes. However, by this time, the poor Trevellyan girl was pregnant.\"\n\nShe paused, her gaze distant and pensive, obviously picking what she was going to say next.\n\n\"Anyway, darlings, my great-grandfather was forced to hush it up, my grandfather, that poor girl, everything; it would have been an enormous scandal at the time, but he wouldn't just abandon Lucy and her child, his grandchild, so he had her moved to Barnstaple, in Devon, where she lived under the name of a distant deceased relative of his, and she was passed-off as a war widow to quell any talk of unmarried mothers and all that tosh, with a trust he settled on her for the child, and an allowance which people were led to believe was a family legacy.\"",
        "She paused, smiling, and I began to see where this was going, but I had to hear the end of it.\n\n\"In the meantime, my grandfather was married-off to my grandmother, to satisfy family honour and do away with any 'scandal' and all that bourgeois blah-blah, but from the tone of his letters to various friends, and to his own father, one thing was glaringly obvious; he'd never stopped loving Lucy, nor did he ever stop believing he'd been cheated out of the life he was supposed to have, and forced into a more 'socially acceptable' marriage, all in the name of family honour. But he stuck with it; he never cheated on my grandmother, never 'played away', never once disgraced his marriage vows; he'd taken those vows, and he stuck to them, even though he couldn't see what was so honourable about abandoning the love of his life in favour of an 'acceptable' marriage; family pressure was an irresistible force in those days, and so much pressure was brought to bear on him he had no choice but to do what his family demanded.\"\n\nShe paused and gently brushed my cheek, her eyes soft and distant, before continuing. \n\n\"I don't think my great-grandfather ever told him he'd had a child with Lucy; grandfather was an old-school, honest and honourable man; young Harry Waterfield reminds me so much of him, and if he'd found out he'd abandoned his child to save the family's face it would have destroyed him. You and dear Davey are so lucky, times have changed, the world has moved on and almost no-one remembers why it was once thought to be so important to make the 'right' marriage; you married for love, which is the way it should be.\"\n\nShe paused to wipe her eyes, as did I; what a thing to do to a young man, just to save face. Sophie smiled wistfully and carried on.\n\n\"My grandfather had a son with my grandmother, my father, while Lucy also had a son, my father's half-brother. She named him George. George Cavenham, and he was your grandfather, Darling Girl. Your poor, dear mother was my first cousin, and I never knew it; if I'd had even an inkling, I would have come looking for you, for all of you.\" \n\nShe paused, chewing her lip, and for some reason glanced at Uncle Richard, who nodded, so she took a deep breath and carried on.\n\n\"One thing I need to tell you, darlings; I couldn't have done all this digging and note-taking without involving your uncle, too, so I'm afraid I had to let him in on your little secret; don't be alarmed! He's not angry or anything; sweetheart?\"\n\nUncle Richard cleared his throat and leaned forward to rest his hand on Davey's and squeeze it once, reassuringly.\n\n\"Dear Boy, your father was my dearest friend in the world, and before you wonder about what else I know, let me tell you I know it all; I've known for years about my mother, my real father, what happened, and who dear David actually was; heavens, I couldn't not know, considering some of the things I overheard my supposed father saying to my dear, sweet mother, the things he accused her of, and I ached for her, for how she must have suffered, chained to that man while knowing who she really loved, and why she could never have him.\"\n\nHe paused and smiled gently at me, before once more patting Davey on the knee and continuing. \n\n\"You children have done what she never could, and you'll be happy in a way she could never be, and I'm happier than I know how to say. You, dear David, are the son of my brother, and you, Loretta, you're Sophie's close family, what I see in you reminds me vividly of why I married her; the apple really didn't fall far from the tree in your case, and I don't give a fig about you being half-siblings; you both care deeply for each other, that's all that's important to me, and I'm so very pleased and happy that you're so happy. I believe I'm fortunate indeed to count you my family. I shall enjoy immensely being your uncle, both of you.\"\n\nOf course, by now I was more than a little bright-eyed, and Uncle Richard holding me close and shaking-out his handkerchief and blotting my tears felt like the most natural, fatherly thing in the world. Only one other thing puzzled me; I didn't get how Mom could have randomly married into a family that had such a close connection with hers; it seemed like a real stretch, and I said so, but Sophie grinned as she shook her head.\n\n\"Your great-grandfather never abandoned his first grandson; George went to the best schools the trust could pay for, he was known to, and involved with, all the families in the area one would have thought of as 'society' in those days, because I suspect they were all only too well aware he was really Henry Lascelles' grandson, but they chose not to make an issue of it, and his daughter, your mother, grew up in that world; don't forget, she met dear David at a shooting party; even in the 1970's, as it was in his father's day, and still is today, one didn't just show up at a country-house shooting party and hope to be included; you were invited because they knew you, because you were thought of as one of them.\"\n\nShe grinned mischievously.\n\n\"Back in the 1950's, that dreadful snob-creature, Nancy Mitford, wrote about how people are either 'U' or 'Non-U', meaning 'like Us' or 'not like Us', because she was born with a silver spoon jammed in I don't like to say where, although knowing what that woman was like, they probably had to hammer it in; your mother was very definitely 'U' in their eyes; she went to all the 'right' finishing schools, she knew all the 'right' people, she very definitely had the right pedigree, and she moved in the same circles as dear David; it was almost inevitable they'd meet one day.\"\n\nAnother thought struck me.\n\n\"If you're Mom's first cousin, then you're my cousin too, and Davey's; wow!\"\n\nSophie grinned, looking just like mom.\n\n\"Yes indeed; no need to wonder anymore why we look so much alike! You, Darling Boy, are the son of my first cousin, and my nephew by marriage; whichever way you look at it, Darling Girl, you're in the middle of family, whether by blood or through marriage; I'm so glad I took a stroll through my grandfather's papers!\"\n\nI was dumbfounded; this whole story explained so much, not least that eerie resemblance I had to Sophie, and now, to find out she was my mom's first cousin...once again that thought I'd had so long ago, that Sophie was somehow Mom's way of being with me, came back to me; Mom had said before she passed away that she'd always be with me, one way or another, and now, just when I needed her, Sophie had become, if not Mom, then the closest thing to her it was possible to be; she was Mom's close family, and now she was mine. I'd always felt close to Sophie, she'd taken me under her wing and made me the daughter she'd always wanted, but now I knew we had more, a special closeness; she'd always felt like family, now I knew why. I could see it in Davey's eyes too; she wasn't just his aunt-by-marriage anymore; her close kinship with Mom made her almost Mom, and it was, for him, almost like Mom was back.\n\nDavey was looking midway between pleased as punch, and shell-shocked at all the revelations, but when Sophie pinned him with her eyebrow, and said \"nothing to say, Darling Boy?\" he grinned his 'naughty-boy' grin and literally twinkled at her, something he'd copied from Uncle Richard and was getting quite good at.\n\n\"Bugger-me, Aunt Sophie, this family's more complicated than I thought, and God knows, we've all managed to muddy the waters enough already!\" \n\nA thought seemed to strike him, and he gave his trademark sunny grin.\n\n\"Uncle Richard, if you plan on telling Richard and Hugo who you really are, can I be there when you do? They are my first cousins after all, the closest family I have...\"\n\nUncle Richard positively beamed at him.\n\n\"Well of course you should be; this is a family matter, and it's time we laid those last skeletons to rest. I'll call you when it's time.\"\n\nFinis"
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brother",
        "sister",
        "incest",
        "pregnancy",
        "wedding",
        "anal sex"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/in-love-with-lori-ch-07-pt-02-2"
}