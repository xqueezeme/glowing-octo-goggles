{
    "title": "Mike & Karen Ch. 18",
    "pages": [
        "Disclaimer: All characters are 18 years of age or older while actively engaging in sexual activity. This story is a prequel/sequel (sprequel?) to my other work, Alex &amp; Alexa. As always, many thanks and gratuitous panty shots from Freja and Jeanie to my long-suffering editor and beta-reader for their assistance in polishing up and improving this work. Reviews are welcome; flames will be snickered at and deleted with extreme prejudice. Enjoy!\n\nPlease Note: There are incest themes with a secondary couple in this story. Just a forewarning.\n\nChapter XVIII- To The Manor Reborn, Part II\n\nSt. George Campus, late January, 1987...\n\nMike tapped his pen against the desk while he looked down at the notebook in front of him. He somehow subdued the grin that lurked under his current expression of serious thought. He wouldn't have blamed himself for grinning, mind. This was really fantastic work, and a huge step forward in the field.\n\nCalabi-Yau Manifold study had come a long way, and quickly. If the numbers that he and his crew had assembled were right, this would absolutely rocket the university to the fore of the research internationally. It would probably even hijack the conference in Lucerne later that year.\n\nHis numbers in his own work were solid, and he'd be giving it over for final integration into the larger project. Everyone else had been enthusiastic and diligent as well.. So far, so good, and they still had a day or two to the final assembly of the theorem and a week until submission. The presentation would knock everyone's socks off, even the dean.\n\nHe allowed himself a sigh of satisfaction. This was definitely a win.\n\n***\n\nBlackwell Manor, late January, the present...\n\nTatyana walked back and forth in front of the assembled staff in the grand foyer. They all stood patiently, waiting while she performed her inspections of their uniforms- at least, those who had to wear one. She herself was wearing a charcoal-grey blazer and a matching pencil skirt, with her hair back in her customary low bun.\n\nShe looked at Trilby and Valentina, standing side-by-side, wearing their housekeeping outfits. Their garb was traditional, being black with white trim, and the skirts ending just above the knee and allowing freedom of movement. When she'd asked both girls about their uniforms, they'd merely commented that they 'weren't much fun'.\n\nValentina looked like she was trying to contain her giddiness, putting considerable effort into keeping a ridiculous smile off her face. Trilby was actually standing up straight, instead of the lazy slouch that Tatyana had quickly come to associate with her over the last day or so. The girl nodded to the seneschal but said nothing. Tatyana moved on.\n\nShe stood now in front of her two groundskeepers, who were very different from one another. The senior man, David, was in his mid-fifties, but ruggedly built, and had been hired because he was a three-decade veteran of the landscaping field. Bald on top, but with silvery hair on the sides of his head and a silver beard, he exuded competence, which was just what was called for.\n\nThe younger groundskeeper, Yolatunde, who said it was fine to call him 'Tunde,' was the opposite of his senior partner. He was in his early twenties, his almost coal-black skin indicatng his South African heritage. Lean and strong, he would be a perfect accompaniment to David's vast knowledge, and he took instruction well. Tatyana held no doubt that the grounds would look better than they ever had with these two on the job.\n\nWorking closely with David and Tunde was Marie, an experienced gardener from Brittany in France. She was a slight woman, with long, frizzy light brown hair, who looked like she should be puttering about in a garden. She'd won awards in Europe for her work in various famous gardens and was now looking for a job that was less expansive, but still required exquisite artistry. She would be responsible for the greenhouses and preparing flora for planting around the grounds.\n\nAndrea stood in the middle of the lineup, and she was the tallest member of the staff, a shade taller than David, at around five-nine. She was a well-built woman, with blonde hair done up now in a messy bun behind her head. She was dressed in sturdy coveralls, and a white t-shirt beneath. She had strong shoulders and some definition in her arms, which was good, since she would be charged with maintaining the mechanical and electrical operations of the estate. She grinned at Tatyana, seeming eager to begin.\n\nAri was a slightly built and short man, also in his early twenties. He'd emigrated from Haifa with his mother while he was very young, and he was a whiz with computer systems. Initially, it seemed strange to Tatyana that a private household, even one as large as this, would need a live-in IT specialist, but once she understood that the powerful computers that her employers used were connected to various universities and institutions around the world, it seemed more reasonable to her. And if a private IT specialist seemed somehow extravagant, she knew better than to ask.\n\nTheresa was from the States, a divorcee in her mid-thirties. She was an extraordinary chef, who had run several successful restaurants and catering companies before moving on to her next challenge. She'd escaped an abusive marriage by moving north, and had just begun looking for work when she answered the ad to work at the Blackwell estate. She said in her interview that preparing excellent food for a smaller, more familiar and appreciative crowd was what she was in the mood to do. Unlike the other staff-members, her contract was annual, allowing her freedom of movement as necessary.\n\nLastly, there was Glenda, an experienced chauffeuse, who was in her late thirties. Of all the staff members, she was the most experienced at working for wealthy private citizens, and she stood crisply but easily in her spot, a light smile on her face. She'd been driving the famous, wealthy and powerful for nearly twenty years now. Her professionalism and vast experience had shone through on her r\u00e9sum\u00e9.\n\nShe stopped in front of them and addressed them now. \"We have a few minutes yet before our new employers join us. Aside from Mister Winson, how many of you have met them as yet?\"\n\nValentina smiled and raised her hand slightly. \"I met Mr. and Mrs. DeBourne during my interview, but not their son or her sister.\"\n\nTatyana nodded. \"The same as myself, I have met them only once. I have already talked with each of you, at length, about the expectations for maintaining the place and the atmosphere desired. But as a small test, tell me what you think of when you hear this...\"\n\nIn her hands she held a small remote control, and she clicked a button on it. Half a second later, lilting music played by the string section of an orchestra filled the foyer. Some of the new staff members looked around, while others simply listened. Glenda closed her eyes.\n\nAfter maybe two minutes, Tatyana ended the music with the press of a button and looked at them all. \"When you hear that music, what does it make you think? There is no wrong answer.\"\n\nTrilby shrugged. \"That our shifts are done and it's bedtime? It makes me sleepy.\"\n\n\"I stand corrected, there is apparently a wrong answer,\" the seneschal said dryly while a few of the other staff members snickered. \"Anyone else have an idea that does not make them think of their binkie?\"\n\n\"Quiet, pleasant and efficient work around the estate,\" Glenda said simply, smiling. \"Dusting, simple food prep, quietly pruning plants, that sort of thing.\"\n\n\"Very good,\" Tatyana said, looking at her. \"That is exactly what it is meant to represent. It is the entr'acte from 'La fille du r\u00e9giment', in fact.\"\n\n\"I know,\" Glenda said, nodding. \"You don't drive bigwigs back and forth from the opera for twenty years without playing a lot of Donizetti in the limo.\"\n\nThere was a noise from the top of the grand foyer stairs, and Tatyana whispered for everyone to stand up straight, before turning around and facing the wide central staircase, her hands folded in front of her. She swore that on the very edges of human hearing, she could hear Valentina let out a squeak of excitement.\n\nPlease don't let her pee on the floor... she prayed silently.\n\nIt seemed to take forever, but Mister Winson appeared at the top of the staircase and started to come down. Behind him, two people came from either side and then followed him down. Tatyana could hear several of her people take deep breaths, or almost gasp as the group reached the bottom of the stairs and approached.\n\nThey certainly know how to make an entrance, I will give them that... she thought, trying not to swallow.\n\nTwo men walked just to Mister Winson's left, and two women to his right. The men were both tall, one of them an absolute giant. They both had great manes of golden hair, piercing electric-blue eyes, and infectious smiles. The younger man was built like a gymnast, with strong limbs and a tiny waist, whereas the older man was massive, with chiseled muscles everywhere. The son, Alex, wore jeans and a T-shirt with a rock logo on it. Michael, the father, was wearing a grey three-piece suit that somehow complemented his massive frame, rather than simply stretching around it.\n\nThe women were as stunning as the men were imposing. Karen, the older sister, and legal heiress to the estate, was tall, even taller than Andrea, and her eyes were a shocking golden-amber colour, like a wolf or a hawk. Her patrician face was framed by a bob of shining bronze hair, and she was wearing a black dress that hugged her curves. Alexandra, the younger sister, had sapphire-blue eyes that radiated a wild joy, voluminous golden hair that fell to the small of her back, and a smile that could light up a room. Wearing jeans and a cashmere sweater that did nothing to hide her figure, she radiated the same irreverence as her nephew, Alex, who was apparently named after her.\n\nThe two lines of people stared at each other for some moments in silence before Tatyana finally spoke. \"Would you care to say anything, Mr. and Mrs. DeBourne?\"\n\nKaren flicked a look up at her husband and smiled, flicking her eyes toward the waiting employees. Mike simply nodded and took them all in his captivating gaze as he spoke.\n\n\"Welcome, sons of Adam,\" he boomed. \"Welcome, daughters of Eve!\"\n\n\"Not what I had in mind, husband,\" Karen sighed as Alex and Alex both began laughing. Standing in the middle, Jordan looked at the ceiling, silently praying for endurance, while Tatyana closed her eyes.\n\nWell, Mister Winson had warned her, after all. Valentina and Ari were both snickering, and even David smirked.\n\nKaren stepped forward now, smiling at everyone. \"Welcome, all of you. I hope your time with us is pleasant. Jordan and Miss Orlova have briefed us about you all, and we trust their judgement that they've hired and retained the best people for us.\"\n\nThey all loved listening to her speak, it was elegant and addicting. Valentina hoped she wasn't staring too noticeably.\n\n\"You don't start work until tomorrow, so tonight you will be our guests at one of the best dinner clubs in the province. We will meet you back here in an hour. Once again, welcome to our home.\"\n\nThe men all bowed their heads and the women curtsied as Karen and Alexa turned and left, walking arm in arm down one of the hallways.\n\n\"I hope a couple of you play an instrument or two,\" Alex mentioned as he and his father also headed elsewhere.\n\nThe staff waited patiently until they were all out of sight. Jordan looked at Valentina and smiled gently. \"Breathe, girl.\"\n\nValentina started slightly as she realized what he meant and inhaled strongly, while those around her chuckled. Everyone slackened their stances a little bit, except for Jordan, who always seemed to be at attention.\n\n\"That went better than I hoped,\" he mused.\n\n\"I thought my people did quite well, actually,\" Tatyana suggested.\n\n\"Oh, they were splendid, my dear,\" he corrected. \"I was referring to the DeBournes.\"\n\nAnd there was laughter all around.\n\n***\n\nSt. George Campus, 1987...\n\n\"I cannot believe we did it!\" Ping exclaimed as the group raucously celebrated inside their dedicated study hall. \"We have proven that the weak gravitational force's measurable effect on General Relativity can lead to compactification and infinite density!\"\n\n\"J\u00e1t\u00e9kot megv\u00e1ltoztat\u00f3!\" Gergo said loudly as he clapped Dan on the back several times, making the third-year student cough as he pulled his drink away from his face. He had been the senior student on the project, tasked with its completion, even if Michael DeBourne was the driving force behind the effort. Normally there was no alcohol in the place, but today was an exception. \"Dan, your excellent math on the sticky strings has proven it once and for all, underlying all our work!\"\n\n\"Hey, we all have to do our part,\" Dan said, trying to sound modest. \"Everyone's contributions matter, y'know. Marks is gonna crap himself when he sees what we've pulled off.\"\n\n\"It is true, he will!\" Indur agreed, looking excited. \"This is history-making, my friends! It is a great leap forward, and our names will be remembered for it!\"\n\n\"Killer!\" barked Sam, pretending to play guitar. \"Now we just need to drop it on the dean's desk! It'll blow every other department out of the water, no question!\"\n\n\"Groucho will certainly be intrigued,\" Mike mused, looking over the papers. Ping, Gergo, Indur and Dan had integrated their work, and it came out looking sound. If this math was right, they'd jumped the field forward at least a decade of where the other institutions were. He continued poring over the math while the others celebrated.\n\n\"I'm going to be famous!\" Ping almost squealed. \"My name, to be side-by-side with Shing-Tung Yau! I never dreamed!\"\n\n\"Your numbers were incredible, dude!\" Sam said to Dan as he handed him another bottle. \"Smooth and seamless, they jived so well with Gergo and Ping's equations!\"\n\n\"Well, we all love the field, and this is sorta my thing,\" Dan said, trying to sound retiring but clearly enjoying the attention and accolades. \"It will feel good to see my name in scientific journals, I gotta admit.\"\n\n\"You deserve it, friend,\" Gergo gushed, relieved that the numbers added up with all his hard work. It'd been bridged, and they had all the proof they need. \"This is a moment to be remembered!\"\n\n\"No argument there,\" Mike said as he got up from his stool and strode over to a tall cabinet, opening it and fishing stuff out. \"Get Mr. Success set up on his throne, guys.\"\n\nThe other students all laughed as they found a special stool and made Dan sit on it. The stool had been covered in velvet, now almost worn off, and edged in rhinestones. Only people who had accomplished something impressive sat in the throne. Dan pretended to resist but allowed them to 'drag' him to the stool and sit in it, while Mike continued rummaging. They all knew what happened next.\n\nFinally, Mike came back to the group, and everyone cheered while their towering peer plunked a goofy plastic golden crown on Dan's head and then handed him a plastic sword with a gaudy, jeweled guard and pommel.\n\n\"Hold your sword in the air, Dan,\" Mike commanded.\n\nLaughing, Dan pointed the sword in the air over his head, while everyone else laughed and cheered.\n\n\"And now, in a loud voice, say 'By the power of Numbskull!'\" Mike growled.\n\n\"By the power of Nu- wait, what?\" Dan asked, faltering.\n\n\"I said, shout 'By the power of Numbskull', you numbskull,\" Mike said rather angrily, all other noise and gaiety draining out of the room instantly. \"What... the... Hell, Cummings?!\"\n\n\"Wh-what?\" Dan stammered, going pale while everyone else backed away. \"What... what do you-\"\n\n\"How can your math be so sublimely wrong?\" Mike nearly shouted, his body language indicating every muscle fibre in his body had tensed in fury. \"It looks good on the surface, but every-single-conclusion it arrives at is utterly wrong! The entire theorem is incorrect now!\"\n\n\"No,\" Dan protested, not daring to move, even if he wanted to flee in terror from the giant raging in front of him. \"It's, it's good! There's no-\"\n\n\"I just checked for myself,\" Mike said through gritted teeth as he leaned down to look in his fellow student's eyes. Dan looked like he was ready to faint, and so did Ping. \"This math is so damned wrong that we would need to undo everything from before we collaborated and start virtually at the beginning!\"\n\nDan's mouth moved, but he said nothing. He couldn't.\n\n\"Why, Cummings?\" Mike demanded, his electric blue eyes blazing. \"Were you sabotaging the project?\"\n\n\"No!\" Dan almost yelped in panic. \"I'd never!\"\n\n\"These numbers are sabotage!\" Mike snarled, grabbing the sheaf of papers from the desk and bunching them in Dan's face. \"One minutely wrong number leading to another, cascading into a theorem of complete bullshit and disaster! That took real work, because nobody could be stupid enough to get things that subtly wrong so consistently!\"\n\n\"I didn't sabotage us!\" Dan almost screamed in panic. The other students in the room were looking on in horror, rooted to the spot. They'd never seen Michael DeBourne angry before, and it was terrifying to behold. They genuinely feared for Dan's life. Mike was enraged. \"I swear!\"\n\n\"These numbers are wrong but exquisite, Cummings, and you're not that good,\" Mike growled, determined to figured out what this idiot had done. \"So if you didn't intentionally sabotage us, how the fucking Hell did this happen?\"\n\nPale as a sheet, Dan swallowed and confessed. \"Well...\"\n\n***\n\nThree weeks earlier...\n\nDan Cummings was pulling at his mouth and chin as he walked quickly down the hallway of the McLennan Building, principal home to the Physics Department. He felt the sweat on his face as he considered the pressure he was under. He'd been dicking around for weeks, not taking his assignment as part of the Calabi-Yau project seriously, and now he had mere days left before the he needed to submit his numbers that many others would build on.\n\nBad enough that grades were involved, but this was also a project that helped determine which of the sciences departments got the lion's share of the university's budget for the faculty, as well as the best lab time schedules. He was a third-year, and his participation was mandatory.\n\nHe'd dicked around, and dicked around, and dicked around, and now it was crunch time. His part in the effort was coordinating and bridging numbers between disparate extrapolations, meant to bring the whole together. He had scores of pages of calculations to take into account, and the complexity of them made his head spin. He just wasn't that good at the required math.\n\nHe was so fucked. And now Theoretical was too. If he'd been religious, he would've prayed for some help.\n\nHe quickly turned and slipped inside an empty lab, closing the door behind himself and leaning against it as he tried not to hyperventilate. This was getting worse and worse with every passing moment as the weight of his impending failure loomed over him. He was sweating profusely as he felt the panic rising.\n\nThinking he was about to puke, he began walking around the room in quick laps, thankful no one was using it. Trying to keep his mind focused on finding an answer, he took deep breaths and did brisk walking laps of the space, trying to -\n\nSomeone had left a notebook on a tabletop. It was open.\n\nDespite his desperation, he stopped and gazed down at the tome.\n\nHis eyes widened as he looked at the numbers scrawled on the pages, line after line of perfect equations.\n\nPerfect for him.\n\nHe snatched it up and hurried out of the room.",
        "***\n\n\"Let me get this straight,\" Mike said in a low and dangerous voice as he looked steadily at Dan, who still didn't dare to move, rooted to the spot on his throne-stool. Nobody else had moved either, afraid to interrupt Mike. \"You hadn't done your assigned task for weeks, you were panicking, and you happened to find an abandoned workbook in a lab, jammed full of exactly the calculations you needed, and you absconded with it?\"\n\nStill pale as a sheet but too frightened to lie, Dan nodded.\n\nMike turned his head slightly and looked at his other peers, the intent gleam in those laser-blue eyes indicating what he wanted to know.\n\n\"It was not my notebook, Michael!\" Gergo said hastily.\n\n\"Nor was it mine,\" Indur added, shaking his head.\n\n\"Not mine,\" Sam said.\n\n\"And it is not mine either,\" Ping finished, still baffled by what was happening. What had Cummings done to them?\n\n\"So... whose was it?\" Gergo asked timidly.\n\nMike fixed his deadly gaze back on Dan, who looked like he was going to throw up. \"I... I dunno... there was no name in it.\"\n\n\"Show... me... the... book...\" Mike growled. He looked like he was ready to peel Dan's skin off, slowly.\n\n\"I... don't have the book,\" Dan stammered, trying to explain himself. \"I took it to an office, found a Xerox machine, and copied all the pages quickly before putting the book back in the lab, just in case whoever had left it there came back looking.\"\n\n\"Then show me your photocopied notes,\" Mike instructed.\n\nDan slipped off the stool and hurried over to his backpack, rifling through it and coming back with nearly a hundred pages in his hands. He offered them to Mike, who refrained somehow from angrily snatching them away from the saboteur and started perusing them.\n\nThe scowl never left his face.\n\n\"There is no way you did these numbers,\" Mike said in a barely controlled tone. \"You aren't nearly this good. And even if somehow you were, the numbers are still wrong, and they've been engineered to be wrong, and to fuck up everything on a basic level. Sabotage.\"\n\n\"I swear, I had nothing to do with that!\" Dan protested again.\n\n\"I believe you,\" Mike said, glaring at the student. \"You're a lazy fucking tool, but you're no saboteur. You're bad enough at this that you couldn't even tell these numbers were wrong, could you?\"\n\nDan's mouth moved, but no sound came from it.\n\n\"Why didn't you say anything?\" Mike said in loud exasperation. \"You couldn't've just said 'Hey, guys, I can't be bothered to do my part, would someone please take over?'? Why?\"\n\n\"I... I didn't want everyone thinking I couldn't pull my weight!\"\n\n\"But that's exactly what happened!\" Mike exploded, his fellow student quailing on his stool. \"You just thought that magically the answers to your problems landed in your lap at the last moment?\"\n\nNo answer.\n\nMike thrust out the papers Dan had given him in his hand, pointing them at the other students present while still glowering at the third year student. \"Guys, take these and everyone go to the tables and check your numbers on a minus x plane. I'm pretty sure you're not gonna like what you see when it's viewed in sections instead of as a whole and then extrapolated back...\"\n\nGergo reluctantly took the photocopies from Mike and led the others over to a table, to begin checking their work, already dreading what they'd conclude. That left Dan with Mike, and he felt more terrified than he ever had in his entire life. The titan student stared down at him, his expression bordering on loathing.\n\n\"Congratulations, Cummings,\" Mike said in a quiet but dire voice. \"You have thoroughly fucked us over. The whole department. Not only will all our grades suffer badly, but our submitted group theorem will be a flop, Theoretical will be the butt of jokes for years to come, and we most certainly will be bumped from all but scraps of funding for the foreseeable future, thanks to your dishonesty.\"\n\n\"I... I meant well,\" Dan pleaded. \"You have to believe me!\"\n\n\"I believe you were willing to take shortcuts to make yourself look good at the expense of honest hard work and your fellow students,\" Mike answered tersely, not bothering to hide his disdain.\n\n\"I... I totally would've shared the credit,\" Dan insisted. \"I had every intention of making sure everyone-\"\n\n\"WHAT CREDIT?!\" Mike exploded, finally sick of this idiot and his simpering excuses. How had this fool reached fourth year? \"Credit for nothing is still nothing! Worse, we all look like fools now!\"\n\nAs if to punctuate his remark, cries of dismay were going up from the tables, as the other students realized exactly how screwed up all their numbers and algorithms were. This was an unmitigated disaster. Ping was on the verge of tears from the sound of it.\n\n\"Give me one good reason to not report you to the department head, to the dean, and to the president,\" Mike ordered, wanting to throw the lazy sot out the nearest window. They were only six stories up, so if the moron landed on his thick skull, he might not die. \"By rights you should be expelled for theft, fraud and plagiarism.\"\n\n\"Please,\" Dan said weakly, his voice trembling. \"Please don't...\"\n\n\"Sit... here...\" Mike said to him, holding a finger up and glaring at him. \"Don't you dare move.\"\n\nHe turned and walked over to the table where his peers were gathered around, comparing their notes from many months of work with the photocopies relevant to their assignment, and they were all in the grip of despair. Ping indeed had tears on his cheeks.\n\n\"It is ruined, Mike,\" Indur almost whimpered as he looked up at his friend. \"Ruined. I must almost scrap everything and start again.\"\n\n\"I too am needing to start again,\" Gergo sighed, shaking his head. \"These false numbers, they change everything, and it is subtle but completely wrong. These is so much math to undo.\"\n\n\"What's the point?!\" Sam complained, slapping his hand on the table. \"There's barely a week left! We don't have the time, we have to undo and redo over a month's worth of calculations in that time! We're thoroughly fucked!\"\n\nPing broke down sobbing. Sam was correct, they were out of time, and the damage was too great. These bad numbers were like a cancer that had crept through the entire theorem and corrupted it before anyone knew anything was wrong.\n\nIndur looked at Mike, his eyes pleading for answers. \"What... what do we do?\"\n\nMike let out a sigh, closing his eyes. \"I don't know. I just... I really don't know, guys.\"\n\nHe leaned back against a table, pinching his eyes and sighing again. \"Just... leave everything here and go, there's nothing to be done right this second.\"\n\nThe students got up and began shuffling toward the door, Ping still sniffling.\n\n\"And take that fool with you,\" Mike said as they walked away.\n\nSam slapped Dan roughly on the shoulder and moved him toward the door, closing it behind him. Long moments of silence passed before Mike exhaled, feeling his head spin.\n\nWhat had happened? Why?\n\nHe didn't want to, but he trudged over to the table and began looking at the unmitigated disaster that was their theorem, meant to be the crowning achievement of their undergrad years, and a feather in the university's cap internationally.\n\nNow it was a joke. An elegant, horrifying joke.\n\nHe picked up some photocopied pages and stared at the long series of numbers blankly, his brain almost numb from the magnitude of the shock he felt. He hated feeling numb, and he forced himself to look at the equations, trying to discern what had happened.\n\nIt was all so wrong. Subtle, but wrong. It felt right, but it was wrong.\n\nSublime numbers, absolutely brilliant numbers.\n\nAnd at that moment, he knew where he had to begin finding answers.\n\n***\n\nBlackwell Manor, the following morning, the present...\n\nAlexa was staring at the plate in front of her as they all sat in the small dining room, just off from the kitchen. Normally it was meant for staff, but since the big dining room had not been uncovered and readied yet, the family was taking breakfast in the smaller room. The staff had all eaten earlier and were dutifully out of the way, already about their duties under Tatyana's efficient direction.\n\n\"Wow,\" the blonde girl murmured as she gazed at her food, prepared by Theresa. The breakfast crepes looked wonderful, accompanied by bacon, English muffins and berries. \"I kinda feel bad for having to eat it, because I really wanna be an annoying millennial and take pics of it for my Insta.\"\n\n\"Thank you, hon,\" Theresa said easily as she breezed around the table and refilled Mike and Alex's plates with enormous amounts of food- bacon, sausages, eggs, fried potatoes, grilled tomatoes, and bowls of muesli on the side. \"Eat up, you two, there's plenty more for growing boys!\"\n\n\"Please, no more growing for my husband,\" Karen said as she smirked at their new chef. \"I barely come up to his sternum as it is.\" Her breakfast consisted of tart plum and melon balls, chilled to almost being icy, croissants, berries, and lightly grilled quinoa cakes for protein. Strong coffee and fresh-pressed juice rounded out everyone's meal. \"Although Alli is right, Theresa, this is exquisite. Thank you.\"\n\n\"You're too kind, ma'am,\" the woman said, nodding her head as she passed Karen. \"I'm looking forward to this, a chance to keep busy, but also not the frenetic pace of a restaurant or catering.\"\n\n\"I can't believe you found time to personalize everyone's meal,\" Alex remarked as he gladly dug into another helping of his eggs. Currently they were scrambled, but apparently there were eggs Benedict coming if he finished what he had.\n\n\"Like I said, sir, a welcome change of pace,\" Theresa replied cheerfully, topping off Mike's coffee. \"This is a walk in the park, comparatively speaking, I assure you.\"\n\n\"Okay, but there's no need for the 'sir' part,\" Alex said, adding some Tabasco to his eggs.\n\n\"Yes, we can't have him thinking he's people,\" Mike added, causing Karen to give him a look, while Alexa almost choked on a mouthful of food.\n\n\"Har har, dad,\" Alex said dryly. \"But for reals, Ms. Martin, the 'sir' thing isn't necessary. Just call me Alex.\"\n\n\"That's fine, love, but there's no need to call me Ms. Martin,\" she offered. \"Theresa will do nicely.\"\n\n\"No, I was brought up to address all my adults formally,\" Alex pointed out. \"Mr. Winson is Mr. Winson, you'll be Ms. Martin... everyone addressed by their surname. Uh, except Trilby, who apparently doesn't have a surname.\"\n\n\"We'll find out what it is one day, Alex, worry not,\" Karen said easily. \"Theresa, the chicory root in the coffee is a lovely touch, thank you.\"\n\n\"Thank you, ma'am, it's nice to be appreciated for the small things.\"\n\nThey finished breakfast, enjoying pleasant conversation while Theresa quickly and efficiently cleaned everything away. The only person missing from the little family meal was Jordan, but he was shadowing Tatyana, answering any questions she had, on the very first day of operation.\n\n\"So during breakfast, Trilby and Ms. Prospero were uncovering the portraits and busts in the hall of ancestors,\" Karen mentioned as she walked arm in arm with her younger sister out of the staff dining room. \"Shall we go and say hello to everyone?\"\n\n\"Well, as long as you're with me,\" Alexa replied, giving her sister's arm a squeeze. \"You or Alex.\"\n\n\"Alex is overseeing delivery of new computers and hardware along with young Mr. Jaffe, so he's somewhat occupied at the moment.\"\n\n\"Good Lord, shiny new computer toys? I may never see him again,\" Alexa giggled as they walked through the grand foyer and entered the Hall of Ancestors. She reminded herself to breathe, already tense because the dozens of portraits were uncovered and awaiting them.\n\n\"Thaddeus Blackwell...\" she mused as they walked by the oldest portrait, commissioned in the early eighteenth century. \"Mom told me he was a real ogre.\"\n\n\"Maybe; in addition to being patriarch of the family, he acted as a privateer for King Charles the Second,\" Karen explained. \"He was the one who commissioned the first ship we called the Thunderhawk. He plundered the Spanish Main along with Drake, and he made our already wealthy family very wealthy, Alli. Some of his most exotic artifacts are hiding in the basement, I will have you know.\"\n\n\"Can't wait to see 'em,\" Alexa mused as they walked by some of the portraits and busts. They stopped in front of a marble bust that showed a handsome man, his aquiline features leaving no doubt as to his lineage. \"So this is Harcourt Blackwell. He's the one who left England to live here and start the new branch. Mom said he had to give up the family's titles to do it.\"\n\nHer sister nodded. \"Money mattered to him more than titles. His younger brother became the title holder back in Hampshire, Ashton Blackwell. Apparently he was a real piece of work.\"\n\n\"Oh, my God, Kar,\" Alexa breathed, looking at another bust, this one very old and delicate, actually painted in faded colours, but the flaxen hair and pale blue eyes were still evident. \"Is that really him? James Blackwell?\"\n\n\"The same,\" Karen confirmed. \"Burned at the stake by Mary, Queen of Scots for refusing to renounce the new faith. But not before months of torture. He died singing one of the new Church of England canticles, very loudly, in English, just to drive the queen crazy. Or so we're told.\"\n\n\"I'll never be able to sing it in church again without giggling,\" Alexa quipped, continuing their slow walk, looking at both walls and recalling everything she could about each patriarch represented. \"It's so cool to think you're gonna be the first woman, the first matriarch, represented in this hall.\"\n\n\"The first, maybe, but I doubt the last,\" the older sister mused, smiling as she watched Alexa. She remembered well the feelings of awe and intimidation when she walked down this hall when she was younger. \"You and Alex will no doubt be on this wall some day, the first couple.\"\n\n\"But there were so many strong Blackwell women before us, Kar,\" Alexa said, feeling a pang of injustice. \"Don't they belong up here?\"\n\n\"If the sole qualification to be on these walls was strength of character, then yes, definitely,\" the bronze-haired goddess agreed. \"But both walls would be covered from floor to ceiling in portraits of men and women, and the busts endless. No, this hallway is the domain of the patriarchs who headed the family up to this point, Alli. And they were all very formidable men. They needed to be, to keep our family in line.\"\n\n\"Well, true dat,\" Alexa admitted. \"Still seems unfair, though.\"\n\n\"The Manor is home to scores of other portraits of prominent Blackwells, men and women of great ability, who just happened to not be the head of the family,\" Karen said. \"But maybe you and I can make it a project of ours to find ways to bring them to prominence.\"\n\n\"Like, feature them in the big library and other places that give them a spotlight?\" Alexa asked, liking the idea already.\n\n\"Absolutely. Catherine Jessleton-Blackwell deserves at least as much respect as most of the patriarchs here ever did. But this hall has a purpose, and we must honour it.\"\n\n\"Fiiiiine,\" Alexa sighed. \"I'll learn to respect these old goats. They're in my blood, after all. But mom told me all about your staring contest with them when you were little, so don't try to tell me you never disrespected them, Kar.\"\n\n\"Perish the thought,\" said the older sister. \"When I was nine, I got so angry at Henry Blackwell for staring at me and judging me that I turned away from him, flipped up my little skirt and mooned him.\"\n\n\"Mom never told me that story!\" Alexa laughed.\n\n\"She never knew, and neither did dad,\" Karen admitted, shrugging. \"The only person I ever told was Michael. I tell him everything.\"\n\n\"Believe me, I know,\" Alexa said, smiling and rolling her eyes. \"I'm constantly reminding myself that anything I tell you in confidence means I'm telling King Kong as well. But I don't mind, as long as you're not telling him about anything I get him as a present.\"\n\nShe turned and looked up at Henry Blackwell, who gazed down at the sisters in disdain, his hawkish features etched with a regal arrogance born of impeccable breeding. \"Y'think he remembers what your butt looks like?\"\n\n\"A Blackwell never forgets anything. Why?\"\n\n\"Well, we are both wearing skirts...\" Alexa replied, smirking, her sapphire eyes glinting with mischief.\n\nKaren caught on instantly and smirked back. Both sisters turned to face away from the large portrait of Henry Blackwell, bent over, and pulled up their skirts, exposing their behinds to him. The were both snickering like children as they wiggled their cheeks at him. Neither woman, of course, was wearing underwear.\n\n\"That's the spirit, Kar, give it to 'im!\" Alexa giggled as she pulled her cheeks apart to give her ancestor a really good look at her puckered knot.\n\n\"I haven't done this in forty years,\" Karen almost gasped, enjoying the rebellion. \"Heaven only knows, the old ogre deser-\"\n\nThey both paused and looked down the hallway as somebody came into view and just stopped. The sisters stared at the interloper, while Trilby stared back at them, one eyebrow raised and tapping a feather duster against her thigh slowly.\n\n\"It... it's not what you think...\" Karen offered rather lamely.\n\n\"It couldn't be,\" Trilby replied, wrinkling her nose.\n\nThey stared at one another for some seconds longer before Trilby turned and decided to find another path through the manor to her destination.\n\n\"Yep, I'm earnin' these paycheques fair and square...\" she said to herself as she wandered off.\n\nRed with embarrassment, the sisters slowly stood up and lowered their skirts, straightening them so that there was no sign of impropriety. Without another word, they turned and walked out of the hall of ancestors, going back the way they had come.\n\nKaren swore from that day forward that there was a hint of a snide smirk behind old Henry Blackwell's perpetual expression of disdain.\n\n***\n\nSt. George Campus, January, 1987...\n\nMike opened the door and strode purposefully into the study hall, his expression grim. Other students seemed to sense the aura of danger around him and suddenly made themselves scarce, vacating the room. He took no notice of them, however, making his way directly toward the back of the hall, to a certain table. Four young women were sitting around it. Three of them seemed nervous and dared not look up from their studies.\n\nMike wasn't in the habit of using his sheer size to be intimidating, but today, he simply didn't care. He loomed over his peer, the only student in the entire Science department, and possibly the university, who was his equal. His electric blue eyes bore down on her, but she seemed not to notice.\n\n\"Why, Gordon?\" he asked in a quiet voice, but it was also a strained one, and dire. Mona, Lisa, and Janet all kept their attention fixed squarely on their own books. \"Tell me.\"\n\nKaren Gordon finally looked up, as if just noticing him now, and blinked. \"To what are we referring, sirrah?\"\n\n\"The numbers, Gordon, the fake notebook,\" Mike said rather tightly, irked that he was having to play this game. \"It was yours.\"\n\n\"Please elucidate, good sir.\"\n\n\"The notebook full of sublimely incorrect math that completely undermined and destroyed Theoretical's submission for next year's funding,\" he pressed, somehow controlling himself. This was no place for unbridled fury. \"Only you could possibly have gotten the numbers so subtly wrong as to underwrite a series of complex formulas and construct a beautiful disaster. And that idiot Cummings fell for it.\"\n\nKaren considered for a moment. \"So you are positing that I faked an elaborate notebook full of progressively wrong numbers, that a member of your department then stole my notebook full of progressively wrong numbers, and used it to accidentally unhinge your entire theorem.\"",
        "\"I don't posit it, Gordon, I know it,\" he growled. \"You've been ratted out.\"\n\nThis gave Karen pause for half a second before she turned and glanced around the table at her friends, her eyebrow raised. Each of them faltered and caved in turn.\n\n\"He called in a favour,\" Mona sighed, shaking her head. \"A big one. I owed him, Kar.\"\n\n\"He stared at me with those freaky eyes until I confessed,\" Lisa almost whined, clenching her little hands in distress. \"I couldn't help it!\"\n\nJanet shrugged. \"He threatened to cut me off from sex unless I came clean. A girl has priorities, y'know.\"\n\nKaren was absolutely aghast as she gaped at them all, her voice rife with betrayal. \"Judas! Quisling! Apostate!\" she hissed.\n\n\"I dunno what that last one was, but I'm sure it's not good,\" Janet sighed. \"Sorry, chick, you're on your own...\"\n\n\"This isn't about them, Gordon,\" Mike said, making sure everyone stopped speaking. With the tone of voice he was using, even Karen wouldn't interrupt him. \"Now why did you do it?\"\n\n\"Do what, exactly?\" she said calmly. \"Even if I did compile an entire notebook of wrong equations, what has that got to do with anything? According to you, Cummings absconded with it, essentially stealing it from me. Your accusation is predicated on me knowing that someone in your department would steal it if I happened to leave it lying around.\"\n\n\"Which is exactly what happened.\"\n\n\"What guarantee would I have of that?\" she reasoned. \"The numbers across the board, in the various disciplines represented in this far-reaching theorem of yours, it would-\"\n\n\"It would require a grasp of mathematics that was almost unmatched on this campus, yes,\" he growled, tired of the stalling. Lisa, Janet, and Mona sat still, hoping to not be noticed or stepped on, like ants caught in a duel between titans.\n\n\"But we are agreed that the issue here is theft, yes?\" she asked somewhat tartly.\n\n\"He never should have done it,\" Mike replied. \"Had the temptation not presented itself, he couldn't have taken it.\"\n\n\"I'm still waiting to hear how I could possibly know one of your peers would,\" Karen pointed out.\n\nMike closed his eyes for a moment as he composed himself. \"Gordon, you're like me, you're a chess player. You're always a hundred moves ahead. Remember how I saved the McLuhan lounge last year by royally and untraceably screwing with Groucho's mind? This sabotage would require that level of attention to detail. It had to be you.\"\n\n\"So certain?\"\n\n\"Yes, very certain,\" he growled. \"Once you eliminate the impossible, whatever remains, no matter how improbable, must be the truth.\"\n\n\"Well said, Sherlock,\" she replied, sounding unimpressed.\n\n\"Cummings couldn't even come up with the correct numbers on his own, forget such beautifully flawed numbers that would cascade through a formula and crash it. And then when your friends here copped to it...\"\n\nKaren shot them another look. They all stared at the table.\n\n\"The entire project, ruined,\" Mike said, his voice rife with accusation. \"And the submissions are set for Friday.\"\n\n\"You could ask for an extension, but we both know Marks absolutely hates you,\" she offered.\n\nMike looked down at her for another moment before turning and walking off. Silence reigned until the door closed behind him. Janet, Lisa and Mona all exhaled loudly. Lisa's head thunked against her notebook on the table.\n\n\"Gnnnnn, I think some pee came out,\" she murmured into the table. \"He scares me so much.\"\n\n\"I still don't get why,\" Janet sighed. \"I mean, you told us the original reason, sorta, but I don't understand why, princess.\"\n\nKaren looked at them evenly. \"For years, now, Theoretical has gotten the lion's share of the entire Science department's funding, and an inordinate amount of the available lab time, to the detriment and even exclusion of other disciplines. If Mathematical protests, we simply get told that numbers belong on paper, so what is the big deal from our point of view?\"\n\n\"I don't even like numbers on paper, so I'm with them there,\" Janet grunted. \"But go on.\"\n\n\"It's beyond unfair,\" Karen said. \"We all need funding and lab time. But because the world is currently obsessed with string theory, black holes, other possible dimensions, and those damnable Calabi-Yau Manifolds, Theoretical eats like it's the court of Louis the Fourteenth, and the rest of us are table scrap-pilfering peasants, grubbing for a stale crust of soup-soaked bread.\"\n\nJanet snickered at the imagery, earning her a look from Karen. She cleared her throat and let her friend continue.\n\n\"It has been protested numberless times, both before my arrival, and since I have arrived,\" Karen explained. \"I have personally had several go-arounds with the various department heads, and even the university council itself.\"\n\n\"Jeez, no wonder they all love you,\" Mona said rather sarcastically. Her friend was, like Michael DeBourne, something of an object of terror for the staff right across campus. If she had her mind set on something, it wouldn't go well if she didn't get her way. \"And if you can't convince them, then there's no hope.\"\n\n\"Since they would not be moved from their ludicrous position of favouritism, I found it necessary to take other measures,\" Karen went on. \"If causing Theoretical to remove itself from that top spot was what was required, so be it.\"\n\n\"But, doesn't this really adversely affect the students?\" Lisa asked. \"I mean, their names are gonna be tied to this, possibly forever.\"\n\nKaren shook her head. \"When the professors in charge of Theoretical see what has happened, they'll be furious, of course, but they won't dare submit the project. They'll miss out and another discipline, likely Math, will take top spot, and just maybe we can get some real things done around here. The first and second year students involved, including DeBourne, won't even have a black eye from it.\"\n\n\"I hope you're right,\" Mona sighed.\n\n\"Of course I am,\" Karen said simply. \"And yes, I left a notebook full of flawed numbers out for some lazy student to take and use. But even I couldn't guarantee that they'd fall for it.\"\n\n\"You're not worried about it coming back on you?\" Lisa asked.\n\n\"For what? Somebody stole my notebook, flawed or not. Nobody put a gun to his head, nor did I give it to anyone to use. The issue that would come up is Cummings stealing a notebook. Theft is theft.\"\n\n\"I get it, Kar, I really do,\" Mona now said, standing up from the table, her art books in hand. \"You've explained succinctly, and I gotta admit, I don't blame you if the faculty was being so difficult. Sometimes you have to break the rules and make some noise. And what you did under the circumstances was reasonable, logical, and damned if it wasn't justifiable.\"\n\nShe looked at the closed door Mike had exited through on the far side of the room and sighed. \"But... I don't know if that man being disappointed in me is a price I'd be willing to pay.\"\n\nShe put a hand on Karen's shoulder and walked off, followed by Janet and Lisa, who gave her roomie a tiny kiss on the cheek and then hurried after the others. The door closed and Karen was now alone in the study hall, looking at her books on the table, lost in thought. And it wasn't that she didn't have anything to say...\n\nBut she really didn't know what to say.\n\n***\n\nBlackwell Manor, the present...\n\n\"Well, hello to you both,\" Karen said as Freja and Jeanie wandered into the study, where the mistress of Blackwell Manor was sitting with her mighty husband, her son, and her younger sister. It was one of the smaller rooms that had been opened up and restored quickly and easily, so the family was relaxing in there. \"I have to admit, I didn't expect to see you for another day or so.\"\n\n\"Well, tired as we are, we admitted to ourselves that we just couldn't get enough of how incredible this place is, so we came back for another boo,\" Jeanie replied, hugging Alexa and Alex before giving Karen a respectful kiss on the cheek. She hugged Mike while Freja followed her example. \"We're not intruding, right?\"\n\n\"This place, it is exceptional,\" Freja mentioned as she stood with Alexa. They were holding hands and their foreheads were pressed as they rubbed their noses together lovingly. They'd been best friends and soulmates for over ten years, and even though they were both joyously married to other people, there was still a very deep bond between them. Nobody present, their spouses included, thought anything of it. \"It is so amazing to be standing here, after Miranda had told me so much about it.\"\n\n\"Freja, have you been actively practicing your English?\" Mike asked. \"I think I'm hearing improvements in your diction.\"\n\n\"Thank you!\" Freja gushed, her hazel eyes lighting up.\n\n\"Mike, don't be mean to her like that and get her hopes up,\" Alexa chided, giving him a wry look.\n\n\"You don't think it is?\" he queried from his place on the giant chesterfield.\n\n\"Just ask her to say squirrel,\"\n\nFreja pulled back from Alexa going pale. \"What? No, not that!\"\n\n\"Ask her to say 'squirrel'?\" Karen wondered.\n\n\"No! Please!\" the Danish girl pleaded.\n\n\"Say, it, tos, say 'squirrel'.\" Alexa ordered, smirking evilly.\n\nFreja seemed to be almost in tears as she took a breath, steeling herself. \"S- skvir... skvirvull...\"\n\nMike, Karen and Alex all watched curiously.\n\n\"Skur...\" Freja stammered, her face turning red in frustration. \"Skooer... skoovervull... skvor... AUGH!!!!\"\n\nJeanie fell over onto the loveseat beside Alex, holding her stomach while laughing hysterically. \"BA-HAHAHAHAHAHAH!!!!! SKOOVERVULL!!!\"\n\nFreja favoured her wife with a sour look. \"I love you too, Jeanette.\"\n\n\"See, Skwisgaar, your English is still terrible,\" Alexa said lightly, taking her best friend by the hand and hauling her out of the study. \"C'mon, you can give me a hand with moving a few items around in my boudoir.\"\n\n\"We are havings a talking about this, when we gets home!\" Freja called back loudly, scowling at her wife before disappearing out the door. \"A longs and meaningsful talk about the supporting of a spouse!\"\n\nThere was silence for a few moments in the room as everyone stared at the door. Karen finally spoke. \"My little sister sure loves to troll her best friend, no matter what mood Freja is in.\"\n\nShe looked at her husband. \"Oh well. Fancy some brandy, darling?\"\n\n\"Who am I to turn down day-drinking?\" Mike replied cheerfully, standing up and leading his lovely wife out of the room. Only Alex and Jeanie remained.\n\n\"Hoo, am I gonna get a lecture when I get home,\" she said heavily as she sat back in the loveseat next to him, resting her head on his shoulder.\n\nShe turned her head to look up into his eyes. \"So... wanna fuck?\"\n\n***\n\nThe garage...\n\nAndrea walked around slowly, her eyes wide with wonder. She hardly knew where to look, since everything grabbed her attention. She could imagine the purr and roar of engines, the sound of the machinery under the hoods...\n\nAlmost reverently, she reached out to touch the distinctive red chassis of the Italian monster in front of her, but drew her hand back, not daring to sully it.\n\nMy God, it's even a twenty-fifth anniversary model...\n\nShe turned and stared at a different vehicle, almost forgetting to breathe. It was beautiful. The silver-grey body flowed in elegant, classic lines, and the Winged Victory hood ornament gleamed brightly.\n\nShe'd never seen a Silver Cloud in person before. The music playing in her head, it reminded her of the angel figurine on the hood, dignified and regal.\n\nHer head turned, and her eyes widened yet again.\n\nHoly shit... no... it couldn't be...\n\nShe got as close as she dared, crouching low and looking from every angle, as if she couldn't believe what she was seeing. The goldenrod-yellow panelling that encased the vehicle was pristine in colour. Her breath grew deeper, the music in her heart singing louder.\n\nA chorus began singing loudly all around her and Andrea yelped, almost jumping out of her skin and tumbling backwards.\n\nThe music grew quieter and was replaced by a booming, hearty laugh. She stared at the ceiling in shock, her eyes the size of dinner plates, and her heart thundering in her rib cage.\n\n\"Didn't mean to scare you,\" Mike said as he walked up, looking down at her. \"But you were so entranced by all the shiny stuff I figured that playing Zadok the Priest in the background suited the mood, you know?\"\n\n\"You and your wife're giving us health insurance, right?\" Andrea warbled rather unsteadily, still on her back on the floor of the garage. \"Pretty sure I'm gonna need a pacemaker.\"\n\n\"I'll try to refrain from giving you another infarction,\" he replied as he held his hand down, offering to help her up. She took the proffered hand, barely having time to notice that her own disappeared inside his before he pulled her to her feet. She was up before she realized it, and squeaked in alarm, still wide-eyed.\n\n\"I take it you're something of a gearhead,\" he mused as she retrieved her hand and began dusting herself off and fixing her hair bun. Not that there was any dust to be found in the room.\n\n\"Both my brothers are auto-mechanics, so it kinda comes naturally,\" she replied, taking a breath and looking around again, trying to compose herself. It didn't help that her employer's physical presence was overwhelming. How could anyone so damn big be so sneaky? \"I grew up working on cars with 'em, even if I drifted into other branches, like electrical and home mechanics, just to be different. As for cars, well, call me a really talented amateur enthusiast.\"\n\n\"That's what I said, gearhead,\" he iterated, making her giggle. She couldn't believe she was giggling. That was Val's job in this place. \"My brother, Connor, he's a mechanic up in Kapuskasing, where my family lives. He doesn't get to work with a lot of exotics up there, so when he visits, he practically camps out in this room.\"\n\n\"Can't say as I blame him; I'm considering asking for a room transfer, like, just a tent in the corner over there,\" she admitted, looking at one particular car again. \"Is that... a real Duesenberg?\"\n\n\"That is indeed a Model X, manufactured in 1926,\" Mike confirmed, going over to the huge vehicle and patting it gently. \"Rumour has it only thirteen were built. Ever been under the hood of one?\"\n\nAndrea swallowed loudly. \"N-no. Never. Never even seen one this close before.\"\n\n\"No time like the present, right?\" he said cheerfully as he unlatched the hood on one side and then lifted it, fitting it into its resting spurs. \"C'mere and take a look.\"\n\nAndrea moved in almost timidly, as if approaching the reliquary in some cathedral. She leaned over slightly and looked down into the engine. It reminded Mike vaguely of German soldiers looking into the Ark of the Covenant after they'd opened it.\n\n\"It's got a heavier and longer wheelbase than the other Duse models from the Twenties,\" he said, indicating the outer frame of the enormous vehicle. \"I'm rather partial to this bad boy, because I don't fit in a lot of the other exotics here.\"\n\n\"Yeah, I don't see you fitting into that twenty-fifth anniversary Countach any time soon,\" she agreed, coming closer now. \"Oh, wow, I didn't know that- it has hypoid differentials, and all the valves are on one side. It's a racer. Are the brakes hydraulic?\"\n\n\"You've got a good eye,\" he said, nodding. \"It was first bought by an heiress named Gloria Delacroix, and eventually found its way into the Blackwell collection.\"\n\n\"When was the last time she got driven?\" Andrea asked, squinting at something inside the engine.\n\nMike pondered the question. \"That I can account for, maybe five years ago. Before Kar's father died, certainly, and that's almost three years now.\"\n\n\"There's some tension fatigue, then, and a few things need tightening,\" she pointed out, indicating some parts in need of help.\n\n\"Good eye indeed,\" Mike said again. \"How long would it take you?\"\n\nShe blinked and looked up at him. \"To what? Wait, me? Work on this thing? Me?\"\n\n\"Don't see why not,\" he said reasonably, shrugging. \"It's not like there are surviving experts from the time it was built, and exotic car repairs cost a small fortune. You know what to do, I can already tell, and you'd handle it with the utmost care. You're afraid to even breathe in its direction.\"\n\nAndrea, in fact, looked like a fish trying to breathe out of water. \"I... I...\"\n\n\"Your r\u00e9sum\u00e9 didn't mention any experience with cars, or auto mechanics.\"\n\n\"That's... well, because I'm not licensed or anything,\" she tried to explain. \"I mean, yeah, I'm good and all, but there's no certificate on my wall.\"\n\n\"You've met Trilby, right?\" Mike pointed out. \"We've had people with lots of certificates on their wall screw up our vehicles, even if they weren't exotic. You have tons of practical experience, and you also have a passion. So I'll make a deal with you, Miss Kachelmeier...\"\n\nShe gaped up at him, just listening.\n\n\"Your principal job remains keeping the estate running,\" he began. \"The mechanical and electric aspects that keep my wife comfortable in her home, which means everything to me. But once they're all running like a top, and just require routine checks and maintenance, you may find yourself at a loss for what to do on occasion.\"\n\nShe almost swallowed, hoping he wasn't implying that her job was in jeopardy if she was too efficient.\n\n\"But it would save us a ton of time, and money, if we also had an auto mechanic here on site,\" he said, gesturing around to the vehicles that surrounded them. There were at least ten, ranging from artifacts like the Duesenberg, to stunning recent cars, like a 2018 Bentley Mulsanne.\n\nMy God, Andrea thought, gazing at it. The ride in that car must be heaven.\n\n\"There are these twelve cars, some of which see regular usage, and others that we maintain as part of the Blackwell trust,\" Mike continued. \"It's nowhere close to a full-time job, but...\"\n\nHe looked down at her now, and his electric blue eyes held her rapt. She couldn't have looked away if she tried.\n\n\"I'm offering to make you the vehicle mechanic for the estate, in addition to your other duties,\" he said. \"I'll talk with Kar about modifying your contract and pay, so that it reflects-\"\n\n\"That won't be necessary, sir,\" she almost blurted out, her eyes dancing with excitement. \"My original contract is more than generous enough, pushing me into a tax bracket I've never been in before. If I get to work on these cars, I... well... you have no idea how hard it is to not offer to work for free.\"\n\n\"I think the Blackwells gave up indentured servitude about a hundred and thirty years ago,\" Mike chuckled. \"Finessing your contract aside, do you accept the offer?\"\n\n\"Yes!\" she exclaimed loudly and joyously, throwing herself against him in a ferocious hug. \"Yes, absolutely! I- oh!\"\n\nShe almost leaped backward, pushing away from him, and blushing furiously. \"I'm sorry, sir! I don't know what came over me! I just... lost myself in the excitement I felt.\"\n\n\"No worries, why should Valentina have all the fun?\" Mike laughed.\n\n***\n\nSt. George Campus, 1987...\n\n\"You three seem rather subdued,\" Karen mentioned as she sat down at their customary table in the study hall. While there was a smaller, more private one in their dorm, it was girls-only, and both Janet and Mona had been heard to grumble about the lack of testosterone in the air. And although she was gay, Lisa didn't mind about using the larger co-ed study hall, since a more diverse range of students was available to randomly question about social issues for her courses. Karen didn't care much, since people knew to leave her alone in either location.\n\n\"Eh, maybe a little,\" Janet admitted, while the other two nodded slightly. \"I haven't seen Tripod in three days now. He's refused to come out of his room.\"",
        "\"What, he's sulking?\" Karen asked, giving them a wry look. \"That seems unlike him.\"\n\n\"I can't say as I blame him, Kar,\" Lisa answered. \"This has got to be a big blow for him. And no, before you ask, I'm not blaming you. I mean, not directly, anyway. Okay, yes, maybe directly, but... I mean... yes, this is all your doing, directly, but... well... I mean, we all agree you were justified with what you did, but... I know he...\"\n\n\"Jesus, girl, how do you ever plan to be a social worker?\" Mona interrupted, giving Lisa a wry look. The redhead blushed. \"What mushmouth here meant, Kar, was that we're all kinda concerned for DeBourne on a personal level. I admit, I don't know him that well, but he always helps me without even blinking, and he's always the first to defend a woman from a threat. He's done it for me.\"\n\n\"And he scares me to death, but he's saved me too,\" Lisa admitted sheepishly.\n\n\"And I miss that giant dick like you can't imagine,\" Janet sighed. \"I knocked on his door the other day and got no answer. All I could hear was that depressing Pink Floyd music he listens to on the other side of the door. He's in there, but he ain't coming out.\"\n\nKaren sighed. \"And you all feel like he's collateral damage in my crusade to make the Sciences department behave itself, yes?\"\n\nThey all shrugged but said nothing. She knew their answer.\n\n\"I'm not putting everything on his shoulders, ladies, I promise. But if I might ask for a mild change in perspective... where was he during all this nonsense? Everyone in the department has been aware of the complaints, and my personal efforts to get recognition of the issue. If he is indeed a great force of moral balance, how did we never hear him trumpeting in outrage over the problem?\"\n\nNone of her three said anything.\n\n\"Remember when we all heard Gergo laughing a few months ago about Theoretical being the natural ruler of the disciplines and deserving all the funding by default? Granted, he might have been blustering, and he certainly didn't know we could hear him, but that exact attitude is endemic to Theoretical, from senior professors, to the lowliest first-years.\"\n\nThey all knew she was right. They'd all heard words to that effect, and not just as related by her. Apparently there was an assumed hierarchy, and Theoretical was feeling very entitled about it.\n\n\"D'you think Mike believes that?\" Mona asked, looking at her friend.\n\n\"I am not inclined to believe he would, but the evidence is that he either ignored this state of affairs, or is blissfully ignorant of it as he wanders the aether looking for proof of Calabi-Yau Manifolds,\" Karen answered simply. \"Either way, he wasn't there when the other disciplines needed them, if he feels any sense of justice beyond mere virtue signalling.\"\n\n\"I'm inclined to believe he's a little deeper than that, but I can't refute your statement either,\" Mona sighed. \"He's taking this really hard.\"\n\n\"And I am sorry about that,\" replied the bronze-haired beauty. \"But it's not a grief unfamiliar to the rest of us by any stretch. My field is doing fantastic work this year, and our submission about the applications of quantum cryptography are quite revolutionary. And yet, Theoretical could submit a half-assed supposition done in crayon on construction paper, and they would still get the top spot. I am not terribly concerned about the personal fairness at this point.\"\n\n\"Well, my grandma would be the first one in your corner on this,\" Mona sighed. \"She marched with Dr. King in Alabama, and her life wasn't easy. You make good points, Kar. I guess we all just wish he wasn't involved.\"\n\n\"Maybe we're in this place because he wasn't involved,\" Karen pointed out.\n\nTo that statement, her friends had no answer.\n\n***\n\n\"A cloud of eiderdown\n\nDraws around me\n\nSoftening a sound,\n\nSleepy time, when I lie\n\nWith my love by my side\n\nAnd she's breathing low\n\nAnd the candle dies,\n\nWhen night comes down, you lock the door\n\nThe book falls to the floor...\"\n\nLisa and Karen stood outside the room, listening as the music reached them through the door. It was all they could hear. Lisa looked at her companion, shrugged and mouthed the word 'See?' Karen frowned and stared at the door, not exactly sure what to do.\n\nShe reached up and knocked three times, causing Lisa to squeak and tense up slightly. Karen could identify, she felt an unwelcome chill of dread crawl up her spine as she lowered her hand.\n\nWhat did she have to be nervous about?\n\n\"As darkness falls, the waves roll by\n\nThe seasons change, the wind is warm\n\nNow wakes the owl, now sleeps the swan\n\nBehold a dream, the dream is gone...\"\n\nShe looked at Lisa and tilted her head at the door. Lisa swallowed and then took a deep breath before knocking.\n\n\"Mike? Mike? It's Lisa, you in there?\"\n\nNo response, just the slow, languorous tune from the 'Meddle' album.\n\nKaren could feel her heart thumping in her chest. Why? Why was she so anxious about this?\n\nBecause that man terrified her, and she didn't know why. Nobody, anywhere, terrified Ekaterina Leda Gloriana Gordon. Except him.\n\nLisa hung her head slightly and shook it, her eyes closed. She turned and walked away, while Karen followed a moment later. They walked quietly together, until they were out of the men's dorm.\n\n\"Well, he's alive, anyway,\" Lisa sighed. \"That's a different album than the last one I heard, and he only has this tiny cassette deck that holds one tape at a time. Or maybe it's 8-track, I dunno. I've just seen it, and it's pretty primitive.\"\n\n\"You've been inside his room?\" Karen asked, looking at her roommate, eyebrow raised.\n\n\"Yeah, went and got Remington from there one day back in late fall,\" the redhead replied. \"She asked me to drop by at a certain time to help her, since she was pretty certain her legs wouldn't be able to hold her up when she was done.\"\n\n\"That girl...\" Karen muttered, shaking her head. \"Well, clearly there's nothing terrifying in there.\"\n\n\"Not a bit,\" Lisa said, thinking back. \"Just a giant futon, a giant freaking desk, piles of books, some pictures on the walls, and nerdy plastic models spread around, planes and robots and stuff. Pretty harmless nerd d\u00e9cor, really. I was just afraid to jostle a book pile and die in an avalanche, y'know?\"\n\n\"Not really,\" Karen admitted. \"We've invented this nifty thing called shelves, you might have heard of them.\"\n\n\"Tell that to DeBourne, if we ever see him again...\" Lisa snickered, despite herself.\n\n***\n\nBlackwell Manor, the present...\n\nThey were leaning against one of the walls in the boudoir, bodies pressed close, and holding each other's cheeks while they kissed lovingly. Freja, her back to the wall, moaned into Alexa's mouth, her tongue wetly swirling around with the blonde's.\n\nThey moved slowly against one another, neither wearing a bra, and their breasts squashed together, nipples kissing through the material of their shirts. Freja's fingers flexed gently against Alexa's jaw, the Danish girl's mind swirling with glowing colours. She loved her friend and soulmate so much.\n\nThe kiss ended and they both sighed. Freja smirked and gave Alexa's nose a poke. \"You are mean, making me say that word.\"\n\n\"Could y'be a bit more specific, Fre?\" Alexa teased, winking. \"I mean, there's so many English words that give you PTSD to choose from.\"\n\n\"Kusse,\" Freja whispered, making the blonde giggle. They were much too in love to ever remain mad at one another, especially over something as insignificant as teasing. \"You said you were bringing me up here to help you move things around in here. But all we have done is to make out. Not that I am complaining, of course.\"\n\n\"I know, but what I really wanted was to get your opinion on something while the others weren't around, especially Alex,\" Alexa admitted, taking her friend by the hand and kissing it. \"I dragged you in here kinda quickly, so you probs didn't get a chance to see it...\"\n\nShe led Freja out into the massive bedroom and pointed at the wall directly over the bed. What Freja saw gave her pause- there was a huge, elegantly framed photograph, showing Alex and Alexa at the university Christmas concert. It was displaying the exact moment she had leaped into his arms, and they were almost nose to nose, looking into one another's eyes. It was a perfect moment, captured for eternity.\n\n\"Alex saw the larger picture before anyone else did, and asked the photographer to put it aside,\" Alexa explained, still holding Freja's hand while she gestured at the image. \"He had it cropped and centered on the two of us, and especially our faces. Fre, it's... the most wonderful thing I've ever seen.\"\n\n\"It is for me as well, my love,\" Freja replied in a slightly trembling voice, wiping with a finger at a tear in her eye. \"It is so beautiful. And I have never seen you looking more beautiful. This picture, it shows that you have found your Heaven on Earth.\"\n\nAlexa sniffled now too, moved by her best friend's words. She loved Freja so much. \"You're right, Fre, I have. And I... I'm kinda wondering what to do about it.\"\n\n\"How so?\" Freja asked, sniffling as she pulled her finger away from her eye and looked at her soulmate.\n\n\"How do I... match that?\" Alexa asked, gesturing again at the picture. \"What on earth could I possibly do or get for him that comes even close to that?\"\n\nFreja turned her head and stared at the picture for some time, pondering. Eventually she smiled. \"You cannot.\"\n\n\"Oh,\" Alexa said, sounding slightly disappointed. \"No point in even trying?\"\n\n\"You are misunderstanding me,\" Freja said, turning and looking at her beloved friend, who, for many years, had been the most important person in her life. She began speaking in Danish, so that the words came easily to her. Her English may have been laboured, but Alexa's Danish was flawless. \"My love, you're not meant to match it by finding something else. And he wasn't trying to find something you couldn't match.\"\n\nAlexa just listened quietly. She heard the honesty in Fre's voice, and she trusted this woman as much as she trusted Alex, or her older sister, or even herself. They were that close.\n\n\"You silly bitch, Alex doesn't need any matching gift from you,\" Freja explained, feeling much lighter and even funny now that she'd reverted to her native tongue. \"For whatever fucked-up reason, you are the gift that matches his amazing picture.\"\n\nA certain dawning happened in Alexa's eyes as she considered. Freja kept talking.\n\n\"Y'wanna match his gift? Never stop being the girl in the picture,\" Freja declared. \"Not even for one waking moment. That's what you give back to him. That's the reason you're here, my love.\"\n\nAlexa was lost in thought, only vaguely aware of the gentle pressure of Freja's fingers caressing hers. Alex had outdone himself, and certainly outdone her, with this present. He'd more or less unintentionally kicked her ass. What could she do about it?\n\nBe the girl he had captured in the picture, all day, every day. If that was what Alex needed and wanted, she would never let him down. Ever.\n\nThe girls turned and looked at the picture again, once again holding hands, gazing at the picture.\n\n\"Think I can do it?\" Alexa asked, lapsing into Danish. Danish, French, and Russian came as naturally to her as English did.\n\nFreja smirked. \"You're the only one who can, slut. And I will be very pissed if you don't live up to it, because Alex deserves the very best.\"\n\n\"Got that right,\" Alexa sighed, nodding. \"Kinda reminds me of what my big sissy goes through with Mike. She may never say it out loud, but I think she doesn't mind having her ass handed to her by him once in a while. It makes her universe feel... right.\"\n\n\"I've heard her say that DeBourne men can have that effect on a woman, and I gotta agree with her,\" Freja quipped before they both dissolved into giggles. It took nearly thirty seconds before the pair composed themselves, and then looked up at the giant portrait again, their arms around one another's shoulders. \"Y'said it's a modified version of another pic the photographer took that night?\"\n\nThe blonde nodded. \"Yeah, it's a landscape pic, showing most of the stage. It's centered on Alex and myself, but you and Jeanie are in the pic, rushing out behind me, and Kar and Mike are there too. It's a big family pic, you could say, and it's gonna go up somewhere prominent, to celebrate our family.\"\n\nFreja sighed contentedly, gazing at the picture dreamily. \"I am liking the sound of that,\" she said, lapsing back into the dreaded English. \"Like I am part of this family.\"\n\n\"You are, Fre,\" Alexa said firmly, turning and pulling her friend in close and kissing her lovingly, even as she kept speaking. Freja moaned in pleasure as she returned the kisses. \"You are so very much a part of this family... you an' Jeanie both... Kar an' Mike think so... Alex thinks so... we all love you, and you're family...\"\n\nFreja was crying gently as she crushed her friend to herself, kissing her fiercely.\n\n***\n\nJeanie leaned against the wall, rolling her eyes and chewing on her gum before blowing a bubble. It popped and glued itself to her lips. She licked it off and popped it back dextrously into her mouth with her tongue, but neither of the men in the room took notice. They were too busy gushing like schoolgirls over their new toys.\n\n\"It's gonna be awesome when we get this up and running,\" Alex said as he fixed motherboards into place inside the housing of the new databank that dominated one wall of the room, destined to be Ari's office. The other young man, Ari, was plugging keyboards in to various hardpoints while several high-tech monitors booted up on the long, convex desk in front of him. \"We're so way beyond mere gigs of RAM to play with here.\"\n\n\"I mean, I'm glad your parents hired me and all, but why would they if you're so good at this stuff?\" Ari asked, testing the sensitivity of a trackball mouse sitting on the desk.\n\n\"Because I'm going to school for other things, and they wanted a certified pro looking after this stuff,\" Alex answered, closing the panel. \"They weren't gonna just exploit me on the cheap to run a system that ties into universities around the world, not to mention Blackwell Industries.\"\n\n\"And the security system, it's real secure, right?\" the young Jewish man queried.\n\n\"That's one of the reasons they hired you, is to make sure it's always working at peak,\" Alex said, nodding. \"Once in a while, mom, dad or I will try to sneak into the system, and you get to try and keep us out.\"\n\n\"That actually sounds really fun, even if I don't see any of the stuff on the other side of the wall,\" Ari said, grinning. He was a handsome young man, with tan features, and dark hair he wore in a wavy fringe. His brown eyes glinted with a keen intelligence. \"I take it y'wont make it easy.\"\n\nAlex shook his head. \"Mom and dad both know their way around programming, mainframing, and security. You'll have your work cut out for you, but they're not jerks about it, either. They won't mind if they beat you fair and square, because that's a learning experience. They'd just be pissed if you were slacking.\"\n\n\"You're not gonna keep him cooped up in this sardine can all day and night, are you?\" Jeanie interjected, trying to sound offended on Ari's part.\n\n\"No worries, Mrs. LeTourneau,\" Ari chuckled, shaking his head and a patting a solid suitcase beside his knee. \"They've giving me a frightening laptop to help run things from remotely, and a palmtop as well. I'll be plenty mobile.\"\n\n\"Hm,\" she mused, looking at all the stuff now arranged around the room. \"Still, in your off-time, you've got sweet rigs to play video games on.\"\n\n\"No games on these systems, too many back doors,\" he replied. \"They gave me a different laptop for that.\"\n\n\"Well... what about porn?\" she queried, making a wry face. \"High-def tits on these screens must be awesome.\"\n\nAri smiled at her. \"To be honest, tits aren't exactly my thing, if you know what I mean.\"\n\nJeanie blinked. \"You're gay?\"\n\nHe nodded. \"Yeah, aren't you? I thought you and that other girl Freja were married.\"\n\n\"We are, but we both identify as bi,\" Jeanie said, seemingly slightly distressed at his answer. \"So you're like, gay-gay?\"\n\nHe nodded.\n\n\"Not even bi?\"\n\nAri shook his head.\n\nWithout a word, Jeanie pulled up her T-shirt until it sat on her collarbone, exposing her full, round breasts. Of course, she was not wearing a bra. She stood there, exposing herself to Ari, who looked at her chest with a friendly smile.\n\nAlex, meanwhile, was staring dumbly, as she was used to him doing. Men...\n\n\"Very nice,\" Ari said finally. \"And I like boobs as much as any other gay man can, but I'm not gonna be sprouting wood for them any time soon. Sorry.\"\n\n\"Well, they were bound to fail me sooner or later,\" Jeanie sighed, lowering her shirt back into place. \"Sorry if you feel harassed, I'm not very good with impulse control.\"\n\n\"Not at all,\" he said pleasantly, waving it off. \"Not like I have a boyfriend at the moment who can get jealous of me seeing your wares in any event.\"\n\n\"Well that's good, because he'd go into a frothing rage of jealousy if he saw Alex's dick,\" Jeanie quipped as she turned and walked out of the room, flashing the peace sign as she left. Silence hung in the air for several seconds between the two men before Ari turned his head to look at Alex.\n\n\"I'm still missing a lot about my new employment situation, aren't I?\" he finally asked.\n\n\"It's probably the real reason my parents are paying you so much...\" Alex sighed, shaking his head.\n\n***\n\n1987...\n\n\"Well, look at you,\" Mona said, smirking as she walked up to her friend. \"I thought you quit.\"\n\nJanet started slightly at the sound, but relaxed when she realized it was Mona. She leaned back against the park bench and took another drag on her cigarette before exhaling rather loudly, as if to sigh while blowing out a cloud of acrid grey smoke.\n\n\"I did,\" she replied, gazing off into the distance. \"But every once in a while, when I'm stressed, I bum one off somebody and take a few drags, just to calm my nerves.\"\n\n\"Wouldn't it just be easier to keep a pack handy?\" asked the black girl as she moved up beside Janet and leaned back.\n\n\"Yeah, I don't dare, I'd totally fall off the wagon in a heartbeat, and then Princess would have me assassinated,\" Janet pointed out. \"This keeps it real minimal.\"\n\n\"That's fair,\" Mona almost snickered, knowing the truth of what her friend had said. If Karen caught Janet smoking, there'd be Hell to pay. Doubtless, that was why Janet was here, in a park well away from campus while she committed this mortal sin. Here, she was somewhat less likely to get caught. Mona had only run into her randomly, on her way back from an art exhibit. \"When was the last time you did?\"\n\n\"Honestly? Like, back in late October, I think,\" Janet admitted. She took another small drag and blew out the smoke, ignoring the chilly January wind. \"I think Princess was responsible for that episode too.\"\n\n\"It's okay if she's responsible for most of them,\" Mona assured her. \"To be fair, she's usually also the answer to our problems, mind.\"\n\nShe held her hand out, indicating that Janet should pass over her contraband. Janet raised an eyebrow and handed the cigarette to her friend. \"Since when do you smoke?\"\n\n\"I don't, but I gotta admit, my nerves are a little frayed these days too, and I'm willing to give it a shot,\" Mona sighed before bringing it to her lips and taking a drag. She winced suddenly and began coughing, smoke gouting from her mouth and nose like a spastic dragon. Janet watched in amusement as her friend almost doubled over, her lungs rebelling against this treatment.",
        "\"Jesus!\" Mona gasped, holding her throat and her eyes almost red. \"What the Hell?!\"\n\n\"Yeah, that one's pretty raunchy,\" Janet admitted, nodding. \"I got it from Ping, and he gets them a guy who smuggles them from China, so he said.\"\n\n\"What's in this thing?\" rasped the black girl. \"Panda shit? How is he still alive?\"\n\nShe tossed the remaining cigarette away, and it landed in a puddle of slush. Janet almost objected, but just sighed and gave up instead. Now that Mona was here, maybe talking was better than a cancer stick. It hadn't been making much of a difference, if she was honest with herself.\n\n\"Apparently it's a minor miracle that Cummings dude is alive,\" Janet said, putting on her glove again since she was apparently done smoking. Ping told me DeBourne nearly murdered him on the spot when he realized exactly how fucked they were.\"\n\n\"I'd say I feel bad for him, but I don't have time for lazy people who just dog it and piggyback off the hard work of others,\" Mona sighed. \"No use for 'em.\"\n\n\"And Ping'n the other guys worked damned hard,\" Janet agreed. \"It's really a pity that it's for nothing.\"\n\n\"I believe Kar when she says that they'll hardly be affected academically or professionally,\" Mona mused, staring at the ground. \"She'd know. I just... I think she's right that what she did was necessary, you know?\"\n\nJanet nodded. \"Yeah. If it weren't for the effect it had on DeBourne, I wouldn't be nearly as upset as I am about this.\"\n\n\"Me too,\" Mona admitted. \"I'd be pretty pissed in her shoes, though. I've seen the work that Kar and her crew are submitting, and I may not understand a damn thing in it, but I know brilliance when I see it. And I think she's right, they wouldn't get a fair shake.\"\n\n\"I know what you mean,\" Janet said, considering her sneakers. \"We're talkin' about feeling bad for the guys in Theoretical, who always have it so easy, but what about Kar's people over in Math, right? Year after year getting snubbed, no matter how hard they try. But a bunch of boys get their feelings hurt, and we're all sad for them.\"\n\nThey were silent for some time as they wrestled with their thoughts, but they both knew they were on the same page. The stiff wind bothered neither of them today.\n\n\"I guess it just sucks that Kar is right,\" Mona concluded. \"But then, when is she not?\"\n\n\"When DeBourne is right,\" Janet said, pushing herself upright, finally ready to head back to campus. \"Life'd just be easier if they could be right at the same time.\"\n\n\"I don't think we're ready for a world where those two are in agreement about things,\" Mona said heavily as she adjusted her collar and they began walking back. \"I mean, what force anywhere could stand against that?\"\n\n***\n\n\"Pets,\" Karen mused as they sat at the table, eating a light meal. Everyone else at the table looked at her. \"I'm thinking it's time we had pets again.\"\n\n\"For real, mom?\" Alex asked, his laser blue eyes glinting with hope. \"Y'mean it?\"\n\n\"As long as you're not inclined to try and own anything ridiculous,\" she answered before masticating thoughtfully on a strawberry in cream. \"It's been too long since we've had pets.\"\n\n\"No argument there,\" Alex said. \"Last animal was my rabbit, I think.\"\n\n\"Yes, you called him Biscuit Hammer,\" Karen sighed. \"Try as I might, you wouldn't even consider changing it to the more dignified sounding French, Biscay Marteau.\"\n\n\"Well, I assume that you'll need to pick up on the Blackwell tradition of the Great Danes again,\" Mike mused. \"Two or three from a breeder as puppies, and then we'll find a rescue mutt to balance it out and keep them in line?\"\n\n\"Ever reasonable, husband-mine,\" Karen said, winking at him. \"What about you, Alli? Did mom allow you to own pets?\"\n\nAlexa shrugged as she dusted her peach slices with some cinnamon. \"We moved around Europe so much that pets were a little impractical, to be honest. I had small animals occasionally, but mostly I just adopted everyone else's pets. I'm really good with animals, I had a phase where I wanted to be a vet.\"\n\n\"Ja, you were very good with Kai,\" Freja said, recalling her family's Pomeranian. \"She loved you more than anyone. She was... what did you call it? 'In lesbians' with you.\"\n\n\"That damn dog,\" Alexa giggled. Never a moment's peace when she was around. Whenever I visited, she was instantly on me, licking and licking and licking.\"\n\n\"Oh, she was just being affectionate,\" reasoned Karen.\n\n\"Affectionate nothing,\" Alexa grunted. \"I was in bed with Fre one day, naked and going at it, and neither of us noticed Kai get up onto the bed before she tried to stick her tongue up my butt.\"\n\nFreja snickered. \"The whole neighbourhood, they heard you shriek. It sounded like you were being sexually assaulted.\"\n\n\"There was nothing consensual about it, I assure you,\" Alexa sighed.\n\n\"That's not a Pomeranian, that's a Pomerapian,\" Alex quipped, making Jeanie almost spit out her coffee as she began laughing while Karen just shook her head. \"Why am I not surprised that you owned a lesbian dog, Fre?\"\n\n\"It was only your wife that she was in the lesbians for,\" the Danish girl explained, still smirking. \"She mostly liked men. She most certainly would have been liking you, though, Alex.\"\n\n\"No Pomeranians, got it,\" Mike concluded. \"What about it, Alli? You're settled now, so you can have a pet if you want one.\"\n\nAlexa considered. \"I've always wanted a really elegant cat. Mom said that Kar owned a Persian when she was younger.\"\n\n\"Yep, her name was Bianca, and she was the most insufferable Blackwell you've ever met,\" Mike confirmed, earning him a look from his wife, but she did nothing to refute the claim. Probably because she couldn't. \"I scared her to death, no idea why.\"\n\n\"Probably not used to people larger than bears,\" Karen sniffed before sipping her coffee.\n\n\"Your cat's name was Bianca Blackwell?\" Jeanie asked, making a wry face.\n\n\"Yndling, maybe it is time for us to think about pets,\" Freja suggested. \"An animal or two that suits us, and our personalities.\"\n\n\"Sorry to rain on your parade, Freja, but it's not legal to own bonobos in Canada,\" Karen mentioned. Freja scowled and stuck her tongue out while Jeanie and Alexa both repressed a giggle. Mike could hear Theresa snickering in the kitchen before composing herself. \"Besides, your condo no doubt has some absurd rule about what pets are allowed.\"\n\n\"Probs,\" Jeanie sighed. \"Well, not an immediate concern in any event. What're you guys doing for the rest of the weekend?\"\n\n\"As much as we might want to relax, there is still plenty to do, especially when you consider we all have to go back to the campus come Monday,\" Mike answered. So supervising for now, and making sure that Tatyana is prepped for Monday is the big thing.\"\n\n\"Doesn't our new bed arrive in less than thirty minutes?\" Karen queried, looking at her smartwatch. She was wearing a sleeveless dress that was a gorgeous midnight blue colour, and complemented her bronze hair and bewitching golden-amber eyes.\n\n\"Do they just bring such things in through the front doors, as we did?\" Freja asked. \"We were not bringing such big things as a bed that would fit Mike.\"\n\nKaren smiled and shook her head. \"No, darling. When this place was built, there were access tunnels at the edge of the property that allowed carts and other vehicles to bring coal into the basement to stoke the furnaces before we went electric in the Fifties. Since then, they have been converted into proper vehicle tunnels. A delivery truck can back down all the way, drop off its cargo at the freight elevator, and then simply leave. A most handy arrangement, really.\"\n\n\"Still can't believe I live in a home with a freight elevator,\" Alexa mused.\n\n\"The stairs are good enough for you, missy,\" Karen chided, smirking at her sister. \"That elevator is meant to get things to the different floors with a minimum of intrusion into our lives. The Blackwells would never suffer for common labour to come tromping through and interrupt the decorum.\"\n\n\"Yeah, what would Bianca think?\" Jeanie pointed out helpfully.\n\nEveryone was laughing while Karen rolled her eyes when Tatyana stepped into the room. \"Please excuse the interruption, but your visitor has arrived.\"\n\n\"Leave this all for me, miss, I'll have it out of the way in a jiff,\" Theresa said as everyone at the table got up. \"Go see to your visitor.\"\n\nThe small group exited the dining room and made their way to the grand foyer, where they found Jordan waiting with someone who was familiar to both Alex and Alexa. The young woman was looking around in wide-eyed wonder at her surroundings.\n\n\"Tanny, it's so good to see you again!\" Alexa exclaimed as she skipped forward, delighted. \"Welcome to my house!\"\n\n\"Alexandra?\" the Indian girl asked, still agog. \"This is your home?\"\n\n\"Yep,\" Alexa said as she took the girl's hands in hers and squeezed them gently. Alex walked up at that moment as well, smiling and nodding his head. \"Just moved in myself this weekend. Whaddya think?\"\n\n\"I... do not have the words,\" Tanuja breathed, looking around again. \"This entranceway, it is bigger than my whole house back in Chandigarh.\"\n\n\"It takes some getting used to, yeah,\" Alexa agreed. \"I want you to meet my sissy and my brother-in-law, er... father-in-law... whatever the Hell he is.\"\n\n\"Keep in mind I'm also technically your mother-in-law if you marry my little boy, Alli,\" Karen mentioned as she stepped up, followed by Mike. Taunja, of course, knew them both on sight, and she bowed her head humbly. The two most respected and influential professors on campus? \"Hello, Tanuja. I am Karen DeBourne, Alli's big sister.\"\n\n\"I know you, of course, although I have never met you,\" the student said quietly. Alexa had let go of her hands by now, and she didn't seem to know what to do with them. So they stayed folded in front of her. \"Thank you, for welcoming me.\"\n\nShe looked up at Mike, nodding. \"And you, sir. Is it true you speak Punjabi?\"\n\nMike shrugged. \"Thora jiha.\"\n\n\"I'm always learning something new about you, you big lug,\" Karen sighed, giving him a smirk before turning her attention back to the guest. \"Tanuja, we wanted to being you here, not only to thank you for your bravery in standing up for my son and my little sister, but also hoping we could express our gratitude in another way.\"\n\nTanuja tilted her head curiously. What could the beautiful professor mean?\n\n\"Alex and Alli have told us that your placement might be in jeopardy, yes?\" Karen asked.\n\nThe girl blushed. \"I... I am worried about my finances and my ability to perhaps stay. My scholarship, such as it is, might not be enough.\"\n\n\"That is what we wished to speak to you about, my dear,\" Karen continued. \"We are, my husband and I, most grateful for what you did for Alex and Alli. And we wish to find a way to express our appreciation.\"\n\nTanuja listened, while Alexa seemed excited, almost ready to bust.\n\n\"We cannot legally employ you, Tanuja, at least, not without complicating matters for you concerning your scholarship, your lodgings, and possibly your status here as a foreign student,\" the bronze-haired goddess said. \"But, what we were thinking we might be able to do is have you work here at the Manor a certain number of hours a week in an internship.\"\n\nTanuja's eyes widened. \"I am sorry? What do you mean, professor?\"\n\n\"What we mean is that we have already talked with many of the members of your faculty, and they are willing to consider yours hours worked here as equivalency for your business management courses,\" Mike said, taking over. \"You would learn from our staff, many of whom are veterans of their fields from all over. You take in everything they have to teach you, you maintain a certain grade point average, and we will not only make sure that your berth at the university dorm is secure, but also give you an honorarium for excelling. Do you understand what we would like to do?\"\n\nTanuja seemed stunned. \"But... why would you do this for me?\"\n\n\"Because you showed great bravery and compassion, Tanuja,\" Karen said warmly, smiling at the girl. \"You took on a problem that had nothing to do with you and made it your moral fight. And we cannot express our admiration enough for that. We can do this, though, and we are hoping you accept.\"\n\nThe girl seemed to not know what to say. Alex grinned. \"You'll have a lot of practical stuff to learn while you're here, but you might be able to shave an entire semester or even a year off your undergrad time if you really work at it, Tanuja.\"\n\nHe took her hand and squeezed it while Alex pressed her fingers to her lips, trying to not cry. \"You helped us. Let us help you. Deal?\"\n\nTanuja closed her eyes, but then when she opened them, she was smiling brightly. \"I accept.\"\n\nMike and Alex both laughed jovially, but all sounds were drowned out by Alexa's cry of delight as she swept Tanuja into a bear hug.\n\n***\n\nSt. George Campus, 1987...\n\nKaren was lying on her back in bed, with Lisa snuggled on top of her. They'd finished making love, and the redhead was usually dozing by now after several intense, brain-melting orgasms, but Karen could tell she was awake. She smiled and stroked her lover's hair.\n\n\"I know you're awake, your heartbeat's wrong,\" she said gently. \"What's eating you, if it's not me?\"\n\n\"Har-har,\" Lisa sighed, giving up pretending and looking turning her head to look up Karen's neck to her lovely face. She was the tallest of the four friends by at least a few inches, whereas Lisa was the shortest. \"That obvious, hm?\"\n\n\"I assume this is about the sciences fiasco,\" Karen mused. \"You already would have blurted to me by now if it was about anything else.\"\n\n\"Just because you're so smart doesn't mean you have to act like it,\" Lisa muttered. She wasn't being terse, she just gave up trying to ever hide anything from Karen. It was worse than having a Jewish grandmother. Lisa could attest to that. \"Yeah, I'm still antsy about the whole thing.\"\n\n\"And DeBourne specifically,\" added her roomie, smiling. \"I already told you, darling, he won't suffer from this in any appreciable way, except for what his enormous drive compels him to feel. None of the students will.\"\n\n\"But your numbers scam destroyed everything,\" Lisa said, trying to not sound distressed. \"If they submit it, they'll-\"\n\n\"They won't submit it,\" Karen said quietly but firmly. \"They wouldn't dare, because then they would be a laughingstock.\"\n\n\"And none of their academic careers or anything after will suffer?\" Lisa asked.\n\nKaren shook her head.\n\n\"Wouldn't that be true about Mathematical, then?\" the smaller girl reasoned in an almost meek voice. \"Couldn't there just be next year, with another crusade?\"\n\nKaren smiled. It didn't bother her when people disputed her contentions. How else could she justify them if she didn't allow them to be questioned? \"I promise you, my love, I thought of that. But enough is enough. Would you tell Dudley Laws to wait a little longer?\"\n\nLisa almost winced. \"Ow, Kar. That's definitely one of your quirks, you can't see a belt without wanting to hit below it.\"\n\nKaren giggled. It was a mean thing to say. Dudley Laws was a famous black rights activist in the city, not at all afraid to take on the matter of police brutality and racial inequality. His motto had become 'No justice, no peace', meaning he and his activists would never stop disrupting things just because it might make genteel white people uncomfortable to hear about it. He didn't hate white people, he was just tired of their complacent shit. Lisa was a big fan.\n\nSo was Karen, for that matter.\n\n\"Look, we all agree that you're not wrong in what you did,\" Lisa pressed on, trying to organize her thoughts once Karen had used her own ethics on her. \"But how can you make this omelette without breaking eggs, Kar?\"\n\n\"Sometimes you just have to trust the actors, my love,\" Karen said gently, caressing Lisa's cheek. \"Getting to the greater good isn't always pretty.\"\n\n\"And the road to Hell is paved with good intentions,\" Lisa sighed. \"Sorry I'm being so whiney about this.\"\n\n\"It's understandable, especially since you all like DeBourne,\" reasoned her lover. \"The mighty Achilles doth still sit in dudgeon?\"\n\nLisa sighed and shrugged. \"Everyone hears music, and we assume that he has some junk food in there, but... not even Janet can make him open the door, and the university says they can't just barge in if he's not unwell.\"\n\n\"Sometimes a good sulk is all you need, even if it lasts a week,\" Karen mused. \"Anyone in my discipline can tell you that after all these years. Sometimes, your best is just for naught, for reasons beyond your control.\"\n\nLisa lowered her head and pressed it between Karen's magnificent breasts and sighed in despair. \"Gnnn, every time this comes up, what you did makes more and more sense,\" she said in a muffled voice. \"It's like you save up little truth bombs to detonate on people well into a discussion, just to make sure their wall of reason never gets built. S'not fair.\"\n\n\"This whole situation hasn't been for years,\" Karen said soothingly. \"Hopefully now, things will change. You know I didn't want to do this, right?\"\n\nLisa nodded slightly, making Karen's breasts jiggle. She still hadn't come up for air.\n\n\"I might have been interesting on a level playing field, DeBourne's thesis against mine,\" Karen thought out loud. \"But the playing field wasn't level. So I did something about it by taking out the reigning champ before the match. Now my field will get the scrutiny it deserves.\"\n\n\"Well, maybe,\" Lisa said, her face finally appearing. \"I just hope DeBourne finally leaves his cave.\"\n\n\"I wonder if he'll show up for the faculty's big decision about the grants since he won't be in contention...\" Karen wondered, a tinge of regret pricking at her.\n\n***\n\nAlexa grunted as she braced herself against the ledge one, leg pulled up and resting on it. Behind her, Alex was standing and holding her hips as he pumped his cock back and forth inside her, never ceasing to be amazed by how tight and wicked her vaginal contractions were. Even in this position, she worked her muscles around him, in time with his thrusts, maximizing the pleasure for both of them.\n\nThey were in a long, steamy room made of reinforced glass panes and steel ribs. This greenhouse was given over to exotic plants that required warmth, and the temperature was kept above thirty Celsius. Hot and humid, the couple were surrounded by lush vegetation and blooms. In addition to d\u00e9cor for the Manor, these plants were often donated to public venues or conservatories for their collections. Powered by solar panels and concealed by a film of steam and condensation on the windows, the couple made love eagerly. Even Alex had never done it in this particular greenhouse before.\n\n\"Gnnnn, Alex...\" the blonde goddess panted, her fingers flexing against the stout wooden planter she was leaning against. Her skirt was hiked up over her hips, allowing Alex access to fuck her from behind, and her shirt was pulled up over her breasts, allowing them both to fondle her at will. Right now, the glorious tits wobbled and swung as her body responded to Alex thumping against her, an almost pendulous motion. \"Oh, right there! Oh God, I love you!\"\n\n\"I love you too,\" he grunted as he began a harder, faster thrusting motion. They didn't have long, because they were supposed to be moving things, but Alex knew his aunt, his beloved wife, was walking around not wearing panties, and it took little convincing to get her to play hooky from their chores and go find a place to fuck.\n\n\"We're gonna leave here... all sweaty...\" she rasped, squirming her ass back against him in circles, trapping him inside her. \"People're gonna know...\"\n\n\"I can just tell 'em that I was showing you the greenhouses,\" Alex managed to say. \"I mean, yeah, mom and dad won't believe that's all it was, but they won't care, either.\"",
        "\"Yes, but everyone- uhn!- everyone else might clue in.\"\n\n\"They've gotta know sooner or later,\" Alex panted, pulling her back tighter against himself with each thrust of his hips. It wouldn't be long for either of them now. \"If they don't already.\"\n\n\"God, Alex!\" Alexa keened, straining, and feeling his cock swell inside her. \"Give it to me!\"\n\nAlex thrust as deep inside her as he could, grunting and releasing a gush of his sperm as his hips jackhammered against her ass. Alexa moaned, shuddering and cumming, her pussy gripping him fiendishly. They writhed against each other, lost in bliss until she sagged back against him.\n\n\"Another room down,\" she breathed finally, wiping the sweat from her forehead. \"How many thousand to go?\"\n\n\"Even I lose track of how many rooms this place has,\" he chuckled, reaching up and cupping her large breasts, massaging them and making her purr. \"Pretty sure even mom's forgotten, and that only dad knows.\"\n\nAlexa massaged her clit, her gooey pussylips, and his cock while she floated back down to earth from her orgasm. \"Kinda funny, when you consider that she's-\"\n\nThe doors at the other end of the greenhouse opened, and at least two people came in, talking. Still mostly naked, Alexa threw herself into the storage space beneath the plant beds she'd been bracing herself against. She was almost gone before Alex had even realized she was moving. She was fast when she panicked. It reminded him of the hotel bedroom in Gatineau last summer, when his mother had almost caught them.\n\nHe clambered in after her, remembering to grab the clothes they had shed and curling up next to her. As quietly as he could, he shut the sliding door and they waited, still having no idea who had entered. He reached over and clasped her hand, and even in the dark, he swore he could see her blue eyes looking at him.\n\n\"The greenhouses, they are divided into many sections,\" they heard Marie Jezequel, the new botanist and gardener for the estate, explain to someone. To Alexa's continentally-trained ear, she clearly had a Breton accent. \"In this one, they are keeping the plants that require the greatest heat and humidity, many of them tropical.\"\n\n\"I was about to say, it is a tad warm in here,\" they heard David the senior landscaper reply. \"I somehow doubt many of these items will be making it into the gardens outside.\"\n\n\"If they do, it will only be for specific events, so we will need to make sure they are primed to survive, yes?\" she reasoned.\n\n\"The heat reminds me of back home,\" Tunde said. \"Although it is really only this humid around the Cape.\" He had grown up in South Africa, just after Apartheid has ended, and his parents had sent him to Canada to get away from the turmoil.\n\n\"They apparently grow fruits and vegetables from all over in some of these greenhouses,\" Marie mentioned, her voice getting closer. \"It is never a bad thing to have your own produce to eat.\"\n\n\"I noticed one of the greenhouses had quite a bit of reflective Mylar in its windows,\" Dave said, his voice implying something. \"Are we responsible for that greenhouse as well?\"\n\n\"Only if you can be trusted with it,\" she answered plainly. \"They have over five hundred healthy, licensed plants, the produce of which are donated free of charge to compassion clinics.\"\n\n\"Well, I'm not a user, so I'm okay with helping out,\" Dave grunted.\n\n\"And I may be an occasional user, but I too can be trusted,\" Tunde added.\n\n\"Excellent, because I will no doubt need help; too much exposure to the strong smell can give me a headache,\" Marie announced. \"Questions about this room, messieurs?\"\n\nThere was a pause before Dave spoke. \"Looks like someone's handprint on the moisture of the window. Two of 'em, in fact. Someone's been in here recently.\"\n\n\"And?\"\n\n\"Well, why did they have their hands on the window like that?\"\n\nAlex felt Alexa squeeze his hand as they waited quietly.\n\n\"The owners can no doubt do as they wish, and avail themselves of these facilities in any manner they so choose,\" she said firmly. \"It is our job to make sure that things work and look ship-shape, no matter what they might do.\"\n\n\"Gonna be weird having to peek into a room to make sure I'm not interrupting anything,\" Dave mused.\n\n\"You will get used to it,\" she replied. \"What would you do in any event?\"\n\n\"If I see Mrs. DeBourne naked and then Mr. DeBourne sees me seeing her naked?\" Tunde asked. \"Pray to my ancestors and run.\"\n\n\"Say a prayer for me too, because I'll be running right beside you,\" Dave chuckled.\n\n\"Not if I pray for them to trip you,\" Tunde pointed out. \"I must only outrun you, after all.\"\n\n\"Mais arr\u00eate,\" Marie said, an amused sigh in her voice. \"We must work closely, since it is my job to grow the plants that you two must display to perfection. I am glad you both know bonsai, because I will need your patience. Let us go, I want to show you the roses now, they are the crown jewel of these collections.\"\n\nAlex and Alexa waited until they heard the greenhouse door close, and then waited almost another full minute. He quietly slid the door of the storage space they were in open and peered around carefully. Convinced it was safe, he clambered out and then helped Alexa through the aperture and to her feet.\n\n\"Here I was worried about getting splinters in my ass hiding in there, but the space was lined with padding. Lucky me, hm?\" she sighed.\n\nAlex smiled. \"Knowing mom, she probably had it put in there in case she ever had to hide to avoid getting caught misbehaving with some boy or girl when she was younger. True, dad wouldn't fit in there, but it could be a precaution from decades ago.\"\n\nThe blonde goddess considered and nodded. \"That makes sense, when you consider how good my big sissy is at math and playing the odds...\"\n\n***\n\nSt. George Campus, 1987...\n\nThe lecture hall was full of people, members of the Sciences faculty, and their students. Everyone was in attendance to hear the decision of Dean Marks and the advisory board about the distribution of funds, and precious lab time. Theoretical had had it easy in recent years, being handed the lion's share of funds and lab time while coasting on its reputation as the cool kid of the sciences. They dealt most often with the direct applications of quantum mechanics, and in fact it was often them who made the proposals about how such things worked.\n\nIt often seemed like it was just the jobs of the other disciplines to check and make sure they weren't full of shit.\n\nNot this year, Karen thought as she sat in her chair next to several other students from Mathematical, the branch that in times past had always seemed to sit on the edge of everyone's consciousness, their only purpose being to crunch numbers. Who needed lab time for that? No, this year will be different.\n\nShe looked around and noticed that off in one corner, several members of Theoretical was sitting together, and seemed extremely subdued, even glum. She couldn't blame them, and maybe even felt a little bad for them. But she indeed remembered hearing Gergo shoot his mouth off one night in a lounge, when he thought nobody else could hear him, announcing to several other members of his discipline that Theoretical was the natural, leading scientific field, and should be giving the most funding by default, the other departments didn't matter. They'd all laughed.\n\nExcept DeBourne, who hadn't been there. It was hard to imagine him putting up with that sort of braggadocio nonsense. She espied him now, standing near the back of the room and leaning against the wall, his arms folded in front of himself.\n\nHe seemed... dull-eyed.\n\nI did what I had to do, she thought to herself, realizing that she regretted none of it, except its necessity. Our project this year is great and deserves every bit as much consideration. But the bias had to be removed.\n\nMaybe there would be a way to make it up to him after?\n\nOnce everyone was settled in, Dean Marks began to address everyone. \"It was a good semester, and all the departments did great work. Several projects are being shared with other institutions, such as Stanford, Caltech, Oxford, and MIT.\"\n\nKaren nodded, knowing for a fact that her work was good enough to be shared with and admired by any of those institutions.\n\n\"That being said, it is with no small awe that I can announce that this year's winner, who gets first cut of funds and lab time, will be Theoretical, with their incredible treatise on Compactification in Calabi-Yau Manifolds in Four Dimensions.\"\n\nThose listening on were stunned, and Karen not least. She blinked in astonishment before looking over at the students and professors from Theoretical, sitting in a little group. They all seemed shocked and were whispering to one another. Clearly, they had no idea this was going to happen.\n\nShe flicked her head to looked at DeBourne, who was still at the back of the room. He'd hung his head and seemed to sigh heavily, his eyes closed.\n\nKaren looked back at the front of the room, where Dean Marks and several members of the committee were sitting, talking amongst themselves. She was tempted to storm down and loudly berate them for this enormous abuse of trust and position but was also not about to make a scene. It was possible nobody would remember the bias scandal, but everyone would certainly remember her railing on about it.\n\nCalmly, she turned to the other members of her discipline, all of whom seemed overwhelmed and even heartbroken, and told them she was going to go down and discuss matters with the dean. She got up and calmly walked over to the tables where the committee members were seated and nodded to them. Because it was Karen Gordon who had come up, they all stopped talking and acknowledged her.\n\n\"I hate to say it, Miss Gordon, because it was a tough decision,\" Dean Marks said, tapping his finger on the pile of various submissions. \"It was Math or Theoretical this year, and they beat you out by a micrometer.\"\n\n\"I'll admit to small surprise,\" to said evenly, taking in everyone's gaze with her own. \"I was under the impression that they had missed the submission deadline.\"\n\n\"Nope,\" Marks said, tapping one particular submission held together with clipping rings. \"It came in pretty much at the buzzer.\"\n\n\"Is it that good?\" she asked pointedly.\n\n\"I hate to say it, since I hate giving DeBourne credit for anything, but it's stunning,\" Marks muttered, making several of the other committee members chuckle. The dean's loathing for the titan student was almost legendary. \"It's nothing short of revolutionary.\"\n\n\"May I see it?\" she asked.\n\nMarks handed her the submission. It had to be almost three hundred pages. She began leafing through it, her expression betraying nothing, but her mind was whirling. She flipped through one page after another, looking for the flaws and being forced to come to a very unwelcome conclusion.\n\nThe math had been corrected and was absolutely flawless. These theorems were indeed groundbreaking.\n\n\"It is impressive,\" she mused, nodding. \"And it can be applied to fields virtually immediately.\"\n\n\"I think that was the deciding factor, Miss Gordon,\" said another committee member, a woman whom Karen considered to be fair and unbiased. \"Your work on quantum cryptography is no less elegant, and no less of a revolution, but it is meant for computers that are, if we are lucky, two decades away, more likely three. It's visionary, but oddly enough, theoretical, because we don't have computers to apply it to yet.\"\n\n\"We may have given the grand prize, so to speak, to Theoretical,\" Marks added, looking at her. \"But I will tell you now, Miss Gordon, that your work is nothing short of stunning, and we live in constant terror of losing you to Oxford or MIT.\"\n\n\"I am not going anywhere, sir,\" she assured them. \"This is a world-class university, with world-class scientific facilities, and I will do my damnedest to make sure it gets the recognition it deserves. Witness, if you will, the submission from Mathematical.\"\n\nThey all laughed and agreed with her, singing her praises. She was only half-listening as she turned to look over at Theoretical- the students and professors were all still there, seated and talking amongst themselves in a tight group, seemingly excited. But one person was absent. She looked around the room.\n\nMichael DeBourne was nowhere to be seen.\n\n***\n\nMike shuffled toward the exits from the building, feeling incredibly weary. Now that business was over, he could-\n\n\"DeBourne...\"\n\nHe came to a halt and sighed, just standing still. He felt her coming up behind and then she was in front of him, looking up into his face. Her golden-amber eyes never ceased to unnerve him, with the raw intellect they displayed. They were enchanting and terrifying to him.\n\nKaren felt like she was gazing up at a colossus, like the giant bronze statue Talos from Greek mythology. DeBourne simply stared down at her, his laser-blue eyes boring through her, stripping away defenses and artifice, and leaving her exposed. It terrified and thrilled her in ways it would take years to admit to. She stood her ground now, determined to get her answers.\n\n\"How?\" she asked.\n\n\"How what?\" he asked in return. He knew exactly what she was asking, but he was tired and grumpy enough that he was going to make her say it. She'd survive.\n\n\"You managed to correct that entire theorem, from back to front, and then front to back, weeding out the bad math and replacing it with working equations,\" she stated. \"In that length of time? How?\"\n\nHe shrugged tiredly. \"I don't rightly know, Gordon. But I did, because I had to.\"\n\nKaren started to have a clear picture of what had happened. When he had retreated to his room, he wasn't sulking- he had holed himself up with the completely mangled and aborted theory and rebuilt it from the ground up. Everyone had been worried sick, but he was playing endless tracks of Seventies rock in order to mask any sound of the intense work he was doing.\n\n\"But... your whole team, even with your professors, couldn't have done that in the length of time you had left,\" she almost protested. \"Even so, how did you do it? I'm better at the math than you are.\"\n\n\"No, you're faster at the math than I am, which is terrifying to think about, because I am damned fast,\" he said firmly, his expression bordering on weary irritation. \"You pushed me to my absolute limit, Gordon. I haven't slept for days, and nothing except desperation saw me through. To think that you almost whimsically deconstructed all that math from a theory you hadn't even fully seen, that's jaw-dropping. It took everything I had to correct that paper and submit it at the wire. Marks was less than pleased.\"\n\nKaren closed her eyes for a moment, thinking about what he was saying. When she opened them, her expression was neutral, but her voice conveyed endless depths of meaning.\n\n\"I am saying this because I am hoping it will help me continue to grow in the future,\" she began, still looking up at him. \"But you genuinely outdid me this time, DeBourne. You were the superior mind in this round. And I do not begrudge you that, because it will help keep me striving. I want complacency to be your department's flaw, not mine.\"\n\nMike sighed and shook his head. \"Maybe this time I got you, Gordon, but I'm not your superior. I sat at my desk and worked for days straight, giving myself the headache from Hell, and staring at equations until my eyes were bleeding. I have never been pushed so hard in my life. I shouldn't be surprised that you were its impetus.\"\n\nExhausted as he felt, he smiled at her wearily. \"But for the record, I now, more than ever, understand the desperation that drove you to do what you did, Gordon. And I think you were right. I almost feel bad for winning.\"\n\n\"Well, there's no need to lie,\" she muttered, trying to scowl and finding she couldn't quite. \"I just... we'd been overlooked because of bias too many times, and enough was enough. Extreme measures were required.\"\n\n\"I can identify,\" he said, nodding. \"And I am sorry that I was not hearing that plight, Gordon. If I had, I would have found a way to help quash the phenomenon. I'd just as soon see our disciplines not competing at all, but working together. It would be more efficient. And it'd be nice to have you as an ally instead of a competitor.\"\n\n\"And I am genuinely sorry as well, DeBourne,\" she said honestly. \"Maybe, just maybe, if you and I approach the Dean and his flunkies, we can make then rethink the current arrangement and begin finding more progressive interdisciplinary ways to do this.\"\n\n\"That would make me happy,\" he agreed. \"I'd love to find ways to work that quantum cryptography of yours into my projects. That submission of yours was nothing short of amazing. I was stunned by how sublime the numbers were.\"\n\n\"You read it?\" she asked, feeling her cheeks get warm.\n\n\"Of course,\" he replied. \"Best thing I've read in ages, and that's including the M.Y.T.H. Inc. series by Robert Asprin.\"\n\n\"I don't know what that is, but thanks,\" Karen murmured, trying not to blush and play with her hair. \"Still, I have quite a few valuable lessons coming out of this. First, never trust Janet, Mona, and Red with secrets meant to be kept from you, they're useless. And secondly, it's nice to know I have a true peer on campus. It makes me feel like I'm part of an elite club, and not just an outsider.\"\n\nShe looked up at him now, almost grimacing. \"You look like death, man. You need to sleep for a week. I'll make sure I tell my three 'confidantes' that you're well, and that you just need to hibernate for a bit. They've been worried.\"\n\n\"And you?\"\n\nShe gave him an unimpressed look. \"I am not the worrying type to begin with, and you are seemingly indestructible, so there was nothing to worry about. Shall I let you go, O victor?\"\n\n\"One question first, Gordon,\" he said as he straightened up. Gods, he was tall!\n\n\"Ask away, Atlas.\"\n\n\"How many original versions of that thesis of yours are there?\" he queried.\n\n\"Two,\" she answered. \"One we gave to the committee, and the other I kept for myself.\"\n\n\"Could you possibly snatch back the one you gave the committee and replace it with a copy?\" he asked. \"Because I would really like to have an original, especially if you would sign it for me.\"\n\nThis time, Karen didn't even try to keep from blushing.\n\n***\n\nBlackwell Manor, the present...\n\n\"How are you liking your time here so far, Miss Prospero?\" asked Karen as she walked along the hallway next to one of their new employees. \"I hope it's been pleasant for you?\"\n\n\"Oh, yes, ma'am,\" the younger woman said, nodding. They were both carrying small boxes containing d\u00e9cor for the vestibules on the staff level, and they would be arranged in the next day or so. Work around the property continued apace, with the most effort put into everyone's sleeping quarters and rooms related to their duties, for obvious reasons. \"So much different than anywhere else I've worked before now.\"\n\n\"Well, you worked for the Duncolms before us, so one would hope that was the case,\" replied the mistress of the manor. \"Believe me, you are not the first person to stop working for them for harassment reasons, and I doubt you will be the last. But I am sorry it happened to you, Miss Prospero.\"\n\n\"No worries, ma'am. I'm here now, and this is great. My co-workers are great, my job is fantastic, and I get amazing vibes from my employers, so what's not to appreciate?\" Valentina almost gushed. Karen already enjoyed her simple enthusiasm.\n\n\"Do you have any questions you would like to ask?\" queried Karen. \"About what you have seen or observed so far? It's okay to ask.\"\n\nValentina stopped for a moment and pursed her lips as she struggled to figure out how to ask something. \"You sure?\"",
        "Karen smiled and nodded. \"Go ahead, although I'll bet I already know.\"\n\nValentina went for it. \"I was in the large suite in the west wing earlier today, just to tidy up and get a feel for the place, and I noticed that the giant picture over the bed, it's... it's of your son, Alex, and your younger sister, Alexandra.\"\n\nKaren just nodded.\n\n\"And then I realized that the room belongs to the two of them, and that she was his aunt, and he's her nephew. Am I... am I right about this?\"\n\nKaren smiled beautifully, an expression that just about made Valentina melt on the spot. \"Yes, my dear. My younger sister and my son are desperately in love and have been since literally the moment they met early last summer. Michael and I are beginning legal proceedings to have the laws about avunculate marriage changed so that they can legally be a married couple.\"\n\nShe noticed that Miss Prospero was listening intently. \"Do you think you'll be okay with that?\" Karen asked. \"I hope it won't make things difficu-\"\n\n\"Oh, not at all,\" Valentina blurted out, interrupting Karen but then blushing. \"Er, sorry, ma'am. I promise you, it's not a concern for me. I've seen them now, and they're the most wonderfully natural couple together. It's a weird concept, since I've never really seen it before, but... well, even I had a crush on my cousin when I was younger, so-\"\n\n\"I get the picture, Miss Prospero,\" Karen assured her, smirking. \"The other staff will be informed in due course, but I figured that since Michael and I already have a rapport with you on some level, we would tell you ourselves.\"\n\n\"I appreciate it, ma'am,\" Valentina said cheerfully, resuming walking alongside Karen. \"And I promise I'll make their room so very pretty every day!\"\n\n\"That will no doubt just delight my son,\" Karen mused, rolling her eyes and smiling.\n\nThey both paused as a sudden shriek from a room somewhere nearby on the floor echoed into the hallway.\n\n\"Huh,\" Valentina said unconcernedly as she continued her walk. \"I guess Trilby found the bidet function in our bathroom.\"\n\nKaren almost snickered as she thought of Janet in years gone by.\n\n***\n\nElsewhere in the Manor...\n\nAlex typed away quickly on his laptop, concentrating. Across the office, monitoring all his screens, Ari was working diligently, countering each and every threat he discovered. His fingers flew nimbly over the keyboards he was using, doing his best to stop these attacks on the security network dead in their tracks.\n\nSome minutes later, Alex nodded in satisfaction and then closed his laptop. Ari leaned back in his chair and exhaled loudly. He rubbed his hands on his face and looked over at Alex. \"How'd we do?\"\n\nAlex smiled and considered. \"You stopped everything I threw at you, so you did real well. I know my dad is gonna give you a scare or two in the near future, but we're not trying to make you fail, we just wanna make sure you know what you're in for, and to get your input on what to do next.\"\n\nAri nodded. \"This security system is pretty cutting-edge stuff. Quantum cryptology is where it's at.\"\n\nThis brought a grin to Alex's face. \"No argument here. My mom wrote a brilliant theorem in her Soph year about the subject. It's no lie to say credit for the foundation of the technology goes partly to her.\"\n\n\"Your mom?\" Ari asked, looking amazed. \"Your mom, my employer?\"\n\n\"Yep,\" Alex confirmed. \"Mathematical Physics is her prime field, and now she's the head of the discipline down at U of T. Same as my dad heads up Theoretical.\"\n\n\"That's crazy!\"\n\n\"You'll get used to that around here,\" Alex quipped.\n\n\"Y'mean like you and your aunt?\" Ari posited.\n\n\"Y'figured that out, eh?\" Alex mused. \"Yeah, it's true. What tipped you off?\"\n\n\"Well, there's the giant portrait of the two of you over your bed, for one,\" Ari began. \"I was in there briefly earlier today to make sure the comm systems you guys have snaked through this palace were attached to the security network, and I happened to look up. It's kinda hard to miss.\"\n\n\"True,\" chuckled Alex. \"We were as surprised as anybody, but I didn't have a chance, believe me. So we're working to get the laws changed.\"\n\n\"Good on you,\" Ari agreed. \"I come from a really conservative Orthodox family, and just about everyone disowned me when I announced I was gay. The only two people who didn't were my mom and my grandmother.\"\n\n\"Hey man, I'm sorry,\" Alex said with empathy. \"Guarantee nobody here'll judge that.\"\n\n\"I know, and thanks,\" Ari said easily, closing down his screens but leaving the system on. It was hooked up to the laptop he carried, so he'd always be able to monitor the situation. \"Your friend, Jeanie?\"\n\n\"Yeah?\"\n\nAri thought about what he wanted to say. \"She's not gonna stop showing me her tits, is she? Like, even if I got a restraining order, it just one of those things I need to get used to, isn't it?\"\n\nAlex laughed. \"It's not just you, Ari. Even my parents can't stop her, and that's saying something. What I can promise you is that she is completely harmless, and once you get to know her, you're gonna love her. Even if she's not showing them to you, you're still gonna end up seeing them. I think Jordan hired people who could adapt to the fun but crazy this place will impose upon us all.\"\n\n\"Okay,\" Ari said readily. \"If she's not hitting on me, then it's cool. If she's just randomly topless like in some kind of racy sitcom, I'll enjoy myself.\"\n\n\"I think you understand this place already,\" Alex said, shaking Ari's hand.\n\n***\n\nSt. George Campus, 1987...\n\n\"He WHAT?!\" all three girls exclaimed loudly as they stared at Karen in shock.\n\n\"Don't interrobang at me,\" Karen replied, folding her arms and giving them all a look. \"I'll admit it, he beat me fair and square. What stinks is that he was so gracious about it.\"\n\n\"He undid all your sabotage and fixed everything in less than a week?\" Mona asked incredulously. \"I saw that stuff, it was hundreds of pages. That's insane.\"\n\n\"Yeah, but he's pretty relentless,\" Janet pointed out. \"When it comes to resolve and sheer force of will, he's a match for our Princess here.\"\n\n\"He is, without question, the best argument I know of for superdeterminism,\" Karen sighed, leaning back against the wall now and closing her eyes. \"It must be torture, in a sense, to be that driven.\"\n\n\"Oh, and you're not?\" Lisa quipped, raising an eyebrow.\n\n\"It's different with me,\" Karen mused. They were all in the dorm room she shared with Lisa, the three girls lounging around, while they waited to hear from her about what had happened. To say what she reported proved a surprise was an understatement. \"I had every advantage life could give a person, and I rose to that challenge. I'll be honest, I exceeded all expectations. But he came from virtually nothing, and nowhere. The only advantage he had was his loving and very supportive family.\"\n\nThey all just listened, keen to hear their friend's honest impression of the one person who could be considered her rival, in intellect, in force of personality, and in lofty ambition and destiny.\n\n\"Granted, my parents love me, but even if his had not, I cannot begin to imagine him slowing down and not always hurtling forward in his quest to know everything there is. Not just because he wants to, but... he needs to. And that's what I mean by torture. He couldn't stop if he tried, because his own nature won't let him. And that's how he beat me today.\"\n\n\"You don't sound too upset about it,\" Mona observed, ever the practical one, even more than Karen. By dint of nature, Karen was prone to doing eccentric things.\n\n\"There's a sense in which it's somewhat refreshing to have my cute little behind handed to me,\" Karen admitted. \"I can never be complacent, obviously. He's probably right, I could very well have done what he did, managing to put that theorem back together on my own if someone had sabotaged it, but also, I am more likely to have stormed the Bastille and made the university change their biased policies. It's where I was headed, originally, and how Lisa and I are very similar. DeBourne just... altered reality to suit him. And that's what impresses me.\"\n\n\"Soooooo,\" Janet said in a quiet voice as she stood and slowly made her way toward the door. \"He may be exhausted, but he's no longer distracted?\"\n\nThe other three women looked at her, clearly unimpressed. \"Are you serious, you harlot?\" Karen asked.\n\n\"It's not like I need all of him, just one very prominent piece of him,\" Janet said, shrugging and still inching toward the door. \"Hell, I don't even need him to be awake if he can keep it up while he's sleeping. Where's the harm?\"\n\nNo response, they all just looked at her, eyes narrowing.\n\nJanet reached for the door.\n\n\"Get her!\" Karen hissed. Lisa and Mona sprang to their feet and lunged after their friend. She squealed in panic as three pairs of arms reached out to grab her.\n\n***\n\nBlackwell Manor, later that night...\n\nDuties and job walk-throughs had ended for the day, and Valentina sighed happily as she walked up to her bed and began undressing. Moments later, Trilby came out of the bathroom, and made for her bed on the other side of the room. Neither minded having a roommate, since their assigned living space was more than big enough for its purposes. Each girl had their bed, their dresser and vanity, and a workspace that included a desk and computer. Valentina had a feeling that Trilby's wouldn't see that much use.\n\n\"So, whaddya think so far?\" the hippie girl asked as she pulled her shoes off. They were part of the uniform and they might have looked uncomfortable, but to her surprise, they weren't at all. Maybe she shouldn't have been surprised, given her employers now.\n\nValentina almost spun giddily to face her roomie and co-worker, her face shining with delight as she clutched a pillow to her chest. \"I love it! We've been here a day, and it's already the best job I've ever had! What about you?\"\n\n\"Yeah, it wasn't bad, I've had worse jobs by a long shot,\" mused Trilby. \"I think we're gonna run into weird stuff on occasion.\"\n\nValentina tilted her head. \"What do you mean by weird?\"\n\nTrilby shrugged. \"Nothing bad, don't get me wrong, but I think these people are gonna prove eccentric. I found Mrs. DeBourne and Ms. Blackwell giggling and mooning one of the portraits in that ancestor hall of theirs. They saw me see them, and they both lowered their skirts and kinda wandered off, blushing.\"\n\n\"Well, y'can't blame 'em, can you?\" Valentina reasoned. \"Those men ran their family for centuries, and I'll bet they were all ogres. Now it's women in charge, and they've gotta do things their own way.\"\n\nTrilby smirked. \"I've seen Mr. and Mrs. DeBourne together, I don't think she's exactly 'in charge', if you know what I mean.\"\n\n\"Well, maybe not in their married life,\" conceded Valentina. \"But... Tril, is there something I can tell you?\"\n\n\"I dunno,\" said the other girl, pausing in unzipping her uniform and turning to look at her roomie. Valentina couldn't see her eyes behind the Lennon glasses. \"Are you gonna keep calling me Tril?\"\n\n\"Well, probably,\" her roomie admitted. \"But what I'm gonna tell you in kind of important.\"\n\nTrilby wrinkled her nose. \"There aren't dead bodies heaped up in the basement, are there?\"\n\n\"No, I doubt that,\" Valentina said, trying to get the imagery out of her head. \"Just... well, you're open-minded, right?\"\n\nTrilby raised an eyebrow. Valentina could definitely see that over the glasses.\n\n\"Well,\" she continued, turning and putting the pillow back while she composed her thoughts. \"Y'know the younger two, right?\"\n\nTrilby nodded. \"Yeah, they look like they oughta be brother and sister, but they're actually aunt and nephew. Trippy.\"\n\n\"More than you think,\" Valentina said, getting to the crux of the issue. \"Mrs. DeBourne explained to me today that her son and her younger sister, they fell desperately in love when they met for the first time last summer, like, silver screen romance stuff. And now they're working to get the laws changed so that they can be legally married.\"\n\nTrilby considered this for some seconds before she nodded. \"Wow, far out. But cool, love is love, right?\"\n\n\"Oh, I'm so glad you're okay with that,\" Valentina exhaled, heaving a sigh of relief. \"That's been on my tits all night. Er, sorry!\"\n\nTrilby chuckled and shook her head. \"Bet it was a welcome change from tripping over your tongue every time our employers were in sight, wasn't it?\"\n\n\"Hey now,\" Valentina said, pouting as she unzipped the back of her dress and pulled it off, now in her bra and panties. \"It's just a crush.\"\n\n\"One you're gonna have until the day you stop working for these people,\" Trilby teased, not at all minding the banter. Normally she wasn't much for the sort of gushing people like Valentina did, but this girl might be an exception. \"But y'know what, I get it. They're pretty amazing. And this is gonna be a good job for me, too. With what they're paying us, I can bank away a lot of money and get ready to open my own store one day.\"\n\n\"I'll bet you they'd invest,\" Valentina said, winking as she removed her bra, freeing her perky breasts. Trilby pretended not to notice, at least for now. \"They seem like the supportive types.\"\n\n\"Hadn't thought of that, but maybe you're right,\" Trilby said, slipping off her own dress and then her bra. Her breasts were less round that her roomie's, rather more pointed, but no guy or girl had ever complained before.\n\nWell, except for that one boy, who had called her 'banana titties' back on the commune, but he'd paid the price.\n\nShe watched as Valentina peeled off her panties, revealing a smooth, shaved pussy. She hadn't expected that. \"Okay, now I have a question.\"\n\n\"Oh?\"\n\n\"Well, just after we met, one of the first things you told me, for reasons which elude me, was that you're a virgin, right?\"\n\nValentina nodded, seemingly forgetting that she was completely naked in front of Trilby.\n\n\"Well, if you're a virgin, why do you shave? Not like anyone's drilling it yet.\"\n\nValentina blushed slightly but shrugged. \"I like how it feels. It's pretty amazing with satin or silk panties. And it just feels great when I... well, y'know.\"\n\n\"When you do yourself, I get it,\" Tribly finished for her as she pushed her own panties down and stepped out of them. Unlike her baby-smooth roomie, she was proud of her dark thatch.\n\n\"Now y'see, that's why we can't have cuter outfits,\" Valentina said, gesturing toward Trilby.\n\n\"What, because I've got fur on my garage?\" Trilby almost demanded, unable to decide if she should be offended. \"News flash, y'can't see it through our panties.\"\n\n\"Actually, I was referring to your armpits, Tril,\" Valentina said, almost clucking her tongue.\n\nThis time, it was the hippie girl who blushed.\n\n***\n\nElsewhere on the floor...\n\n\"Mister Winson, you are set for the evening?\" Tatyana asked as she stood in the doorway of the room he'd chosen to occupy.\n\n\"I do believe so, thank you, Miss Orlova,\" Jordan said as he fiddled with his cufflinks. \"Since leaving that wretched retirement home and despite my age, I am feeling most hale and hearty, I assure you.\"\n\n\"I do not doubt it, sir, but as long as you will be inhabiting a room on this floor, I feel obligated to check and make sure everything is to your satisfaction thus far.\"\n\nHe took a moment to look around his accommodations. \"Well, this room is rather smaller than my last one, but it is my understanding that it has been given away already.\"\n\n\"I cannot imagine to whom,\" she said, smirking. \"And within mere weeks, you will be the envy of absolutely everyone in the neighbourhood, living in the prettiest house to ever grace these lands.\"\n\n\"I look forward to it, I've never owned a house before,\" he mused as he undid his tie and pulled it off. \"I almost bought a flat in London with my pay after the war, but instead I came here to the Colonies, where life seemed simpler.\"\n\n\"You are a veteran, of course,\" Tatyana said. \"You have the bearing.\"\n\nHe nodded. \"I grew up during the fight against the Nazis, but I served in Korea. There were some hairy moments, to be sure. Earned quite a bit of hazard pay, I might add.\"\n\nShe nodded. \"My family, they escaped from Russia when I was young. We had been targeted as threats, and my grandmother, she was murdered by the NKVD.\"\n\nJordan nodded slowly as he looked at her. \"Brutal times, my dear, and my sympathies. Your current employers, however, I believe you will enjoy their company and patronage. I did for some fifty years, before Mistress Karen apparently rescued and adopted me.\"\n\n\"And a very regal beagle you are,\" she laughed. \"I have much to learn about this family and their history, so that I can do my job to the best of my ability.\"\n\n\"You seem to be doing well, so far,\" Jordan mentioned. \"The staff are getting along, they seem perfectly capable, and one has even had a promotion already.\"\n\n\"Yes, Andrea would not stop telling me about it,\" Tatyana sighed, rolling her eyes for effect. \"Now she is their auto mechanic.\"\n\n\"I promise you, they will not step on your toes more than once or twice a year,\" Jordan said in an easy tone. \"Once you have the staff fully trained and functioning perfectly, your job will mostly be simply helping them understand and overcome whatever strange circumstances are sent this household's way.\"\n\n\"You make it sound like they are some strange cartoon family that my little cousins would watch on television,\" Tatyana mused.\n\n\"They're not the Munsters, if that is what you're worried about,\" he replied, hanging his tie up. \"But for instance... their legal challenge about allowing young Master Alex and Mistress Alexandra to marry, it is going to be very hard on them and stress them out, as it would most anyone. If that is the case, what is the job of this staff?\"\n\nTatyana smiled. \"To see to it that everything is running extra-smoothly, and that they face as few complications elsewhere as possible.\"\n\n\"And when very important guests of no small stature arrive, as has oft happened here, over the last century?\"\n\nNow she smirked. \"Make sure our darling Trilby is nowhere to be seen?\"\n\nJordan chuckled. \"Also, where Master Alex, Mistress Alexandra, and their two friends, Jeanette and Freja are to be found, it is best to keep an abundance of cleaning supplies. Those four are not known for their restraint around one another.\"\n\n\"Bozhe, pomogi nam vsem...\" the new seneschal sighed, shaking her head.\n\n***\n\nThe following day, Sunday...\n\nPerhaps it was understandable that everyone took a pass on attending church that day, since there was still much to do. The staff had been up and doing their thing since dawn, most of them just making sure that they remembered where everything was, or what they were supposed to do.\n\nAri sat in his new office, humming to himself as he fiddled with the settings that connected his laptop to the security system. He found it quite fascinating that one of the people he now worked for had been a theorist for quantum cryptography back in the Eighties, literally helping to pioneer the technology he was using to defend the systems from attack.\n\nHe smiled. He normally thought of the Eighties as being a zillion years ago, but neither Mike or Karen DeBourne looked like they could have been adults in that period; they looked decidedly younger. He had a feeling he was going to learn a lot during his time here.\n\nIn a long, concrete hallway beneath the Manor, Andrea was walking along, humming to herself and going through her checklist- she knew from Tatyana that the systems were always steadily being upgraded, taking advantage of new technologies. Apparently the computer systems were not only hooked up to Blackwell Industries, but also to several prominent universities around the world.\n\nThe electrical and power rooms were down here, along with the big plumbing and other mechanical features. She didn't mind if she'd be spending quite a bit of time down here, especially now that she knew she'd also be able to work on those cars up above.",
        "There had clearly been efforts made over the decades to keep things comfortable, because she'd worked beneath other old buildings where the subterranean sections were hot, sweaty, and reeked of old oil and mould. These hallways, though strictly functional, were dry and illuminated, the endless electrical cables neatly and efficiently organized and bundled to run along the walls.\n\nShe was wearing her pleasantly form-fitting coveralls (she loved how her butt looked in them), and a loose, white cropped tank top underneath. Her heavy leather utility belt sat on her hips, holding her favourite personal tools, while the red metal box she carried took care of the rest. She had her sandy blonde hair back in a ponytail, kept away from her face by a red polka dot kerchief her father had given her.\n\nThere were basements beneath the basement, and she was currently on the middle level, where most of the electrical fixings could be found. The basement farther below held even heavier mechanical machinery, like the plumbing, boilers, and furnaces. She would be inspecting those today as well.\n\nAnd if meant she got to work on that Duesenberg upstairs, she would make sure they were purring like kittens and shinier than Valentina's lip gloss.\n\nShe stopped in front of an absurdly old but stout wooden door, helpfully wearing a brass stamp that announced 'Electrical WW1-3'. Electrical West Wing, Floors One through Three. No mistaking that.\n\n\"Alrighty,\" she said to herself as she pulled her favourite wrench out of its belt slot and twirled it in her hand absently like a six-shooter. \"Let's see what we can see...\"\n\nHigh overhead, in one of the greenhouses, Marie was busily making notes about the various plants now in front of her, and discussing with David and Tunde what was to be done with them. While the estate had many designated garden areas already, the three of them had been given great leeway with exactly how they would look when they were in bloom. The DeBournes had already approved Marie's request to try a colourful tulip garden in one area, while another was going to have a Baroque French feel to it. The two men listened intently, and were looking forward to the challenge.\n\nTunde was also excited to the work in the Chinese formal garden in the rear of the property, first built back in the early Twenties, when interest in all things Asian had swept over North America like tsunami. He and David both had extensive carpentry skills to enhance their landscaping capabilities. The garden sat under a layer of snow now, pretty in its hibernation. But come spring, it would be turned into a riot of colours. Patience wasn't his strong suit, but apparently it was a virtue.\n\nTheresa was humming as she made her way around the staff kitchen, preparing the afternoon meal. To her delight, none of her employers, nor the staff members, were fussy eaters, and there were only two vegetarians, Yolatunde and Trilby. Even though this was only the staff kitchen, it was the one she would be working from most often, since the other kitchen was one level down, near the elevator, and meant for much larger events. This one was more than spacious enough to feed almost twenty people three times a day.\n\nThe kitchen was a rectangle, centered around a large island with a lovely polished stone top. One end was chilled, to even allow her to make cold-stone ice cream! There were several refrigerators and freezers to keep her supplies in, and she was not far from the greenhouse that herbs and vegetables were grown in. She was in no danger of running low on staples at any time of year.\n\nShe smiled as the entr'acte from 'La fille du r\u00e9giment' began playing over the sound system whose concealed speakers were threaded through the estate.\n\nIn the garage, Glenda was wiping and polishing down the Bentley after it had just been driven. It had been a quick run into town, but she was thrilled to get a feel for the lovely beast. The Bentley and the Maybach-Pullman limo were the cars she was most likely to be chauffeuring people around in. On some occasions, she'd been informed, she would take her employers to the opera in the Silver Cloud, a type of car she'd never been privileged to drive before.\n\nWhat she loved about this particular gig was that her employers were not pretentious and were perfectly happy with her shuttling the other employers on errands. She was not likely to take the DeBournes to work often, since professors showing up in a limousine was not always the best image to convey.\n\nDid she mind that she might be shuttling the other staff around more often than the people who had actually hired her? It was certainly unusual, but she was fine with it.\n\nAnd that son of theirs was certainly likely to keep things interesting.\n\nMeanwhile, in the main library, Trilby and Valentina were walking around in a daze, literally needing to remind one another to do their assigned job of dusting, since the room had just been pulled out of hibernation. Valentina was barely making contact with any surfaces, dusting distractedly as she stared up, looking at the two upper floors of the long space, and the vaulted, frescoed ceiling.\n\n\"I don't think I've seen this many books in one place outside of the Ref,\" she murmured before shaking her head, going back to her starting point and beginning to dust again. \"Wonder how old some of these are?\"\n\n\"I'm not sure I knew this many books even existed,\" Trilby replied, her normally detached air replaced with bewilderment. \"Think they have a Kerouac or Vonnegut section? I mean, it's the only library I know with a naked lady in it, so anything's possible.\"\n\n\"Oh, wait, I know this one...\" Valentina said, wiffling her duster in the direction of the figurehead Trilby had been referencing. \"Uh... yes, it's the girl-prow-thingummy from the front end of one of the warships the family owned way way back. It was called Thunderhawk or something. It's an heirloom.\"\n\n\"Nice guys, keeping naked women as heirlooms,\" Trilby said shrugging. \"And this is just the main library?\"\n\n\"There's two or three others, and they're more subject-specific, I think,\" answered Valentina as she delicately dusted what looked like an impossibly old and delicate Chinese vase. \"Like, one's devoted to business and business technology, and the other is a musical archive. Even Tatyana wasn't sure just yet.\"\n\n\"We'll find out soon enough,\" her co-worker mused, pulling a small notebook out of her apron and making a note on how something needed to be cleaned and dusted in future. The place was so vast that notes were pretty much a must. Just saying stuff 'needed to be clean' obviously wouldn't cut it. She paused and looked across the wide room at Valentina, a quizzical expression hiding behind her glasses. \"So it really feels better?\"\n\nValentina blinked. \"Hm?\"\n\n\"Y'know,\" Trilby pressed, hoping to make herself understood, without success. \"To have your gazoo shaved, and then wear snug things over it?\"\n\n\"I think so,\" Valentina said, shrugging. \"I'm willing to bet that Mrs. DeBourne and Ms. Blackwell both shave, since you said you caught them mooning portraits and they had no panties on.\"\n\n\"Well, I wasn't exactly looking, but I guess that makes sense,\" Trilby allowed. \"What're we supposed to call her, anyway?\"\n\n\"Ma'am, I think.\"\n\n\"No,\" Trilby said, trying not to sigh. \"What I meant was, what are we supposed to refer to her as? I've heard three different surnames now.\"\n\n\"Oh,\" Valentina said, giggling. \"I think, legally, her surname is Gordon-DeBourne. When she's doing something with her family business, she goes by Gordon. But she thinks of herself as a DeBourne, and that's how she's happiest.\"\n\n\"How d'you know all this already?\"\n\n\"I asked her,\" Valentina replied, shrugging. \"She's pretty open, more so than her husband, anyway.\"\n\n\"Maybe he's really open too, but he's so damn tall that we can't hear him,\" Trilby sighed. \"Still, you're right, they're very nice people. And they keep things interesting.\"\n\n\"Hope you like pets, because I heard them talking about getting some,\" Valentina mentioned, resuming dusting.\n\n***\n\nUpstairs, the large suite in the west wing...\n\nKaren stared at the terrarium, her eyebrow raised. She said nothing, she just stared.\n\n\"Wow, Kar, if your expression were any more rye, you'd be sweating caraway seeds,\" Alexa quipped, amused by her older sister's state. \"Y'never seen hermies before?\"\n\n\"Where did they come from?\" said older sister finally asked while her son stood proudly next to his latest acquisition. \"You didn't find them living in the vents, did you?\"\n\n\"Nope, got 'em from a pet store this morning,\" Alex replied, petting the large terrarium that sat on a sturdy surface. Inside sat two tiny hermit crabs, surrounded by what could only be described as a crustacean paradise- wire and net climbing surfaces, rocks to sun themselves on, little shallow pools, a specified place to eat. There were also painted shells for them to move into, once they had outgrown their current homes. Alex had eagerly bought the painted shells, once he'd been assured they were not toxic to the animals. \"Glenda drove me into Don Mills, to that pet shop we saw. They didn't have an axolotl, so I bought these two.\"\n\n\"God save me for asking, but what are their names?\" she queried, dreading the answer. After all, he'd named his rabbit 'Biscuit Hammer'.\n\nAlex grinned and pointed at each of the tiny pagurids in turn. \"That's Blurglecruncheon, and that's Grundlecruncheon.\"\n\nKaren simply looked at her supposed son. \"Blurglecruncheon and Grundlecruncheon.\"\n\n\"Yep.\"\n\n\"Blurgle and Grundle.\"\n\n\"The Brothers Cruncheon,\" Alex announced, clearly pleased with himself.\n\n\"How d'you even know they're boys?\" Alexa asked.\n\nAlex shrugged. \"Who gives a crap? They're hermit crabs.\"\n\nKaren, by now, had lifted her wrist and done something on her smartwatch. There was a beep and then a familiar, authoritative deep voice. \"Hello?\"\n\n\"Honey,\" she said, trying to not give Alex a sour look. \"Your son is doing weird things again.\"\n\n\"MY son?\" Mike boomed, almost blasting her smartwatch apart on her wrist and making Alexa squeak and jump slightly. \"Get your toned little ass over here and let me explain something to you, young lady!\"\n\n\"Whoops, looks like I'm in for a spanking,\" Karen said through her teeth, trying and failing to not look pleased. \"Excuse me...\"\n\nShe wiggled out of the room quickly.\n\nAlexa sighed and pinched her eyes. \"Only you could make getting spanked preferable to something as simple as naming a pet, Alex. You're not allowed to drive my big sissy crazy, that's my job now. I tagged you out.\"\n\n\"That's fair,\" he conceded. \"It's kinda like grenade fishing in a barrel for me at this point. Have you thought about your pet yet?\"\n\n\"Well, I've been leaning toward a cat, but it kinda depends on what Kar and Mike get, doesn't it?\" Alexa mused.\n\n\"Getting a cat first, or a kitten when they get the puppies makes sense,\" her nephew reasoned. \"That way, the cat's in charge, generally. Mom'll probs get a rescue cat as well as the Danes, just so you know.\"\n\n\"Maybe I'll get the Persian, then,\" Alexa said, sauntering over to Alex and giving him a saucy smile. \"Think the boys'll be offended if we get naked and do naughty, wicked things to one another in their presence?\"\n\n\"They're hermit crabs, who gives a crap?\" Alex iterated as she began removing his shirt.\n\n***\n\nSt. George Campus, 1987...\n\nThe dorm room door opened slowly and a head poked in. \"H'lo?\"\n\n\"Your knock is getting very weak,\" Mike sighed from the darkness.\n\n\"Yeah, sorry about that,\" Janet whispered, sneaking and closing the door behind herself. The room was once again pitch black. \"I'm kinda on the lam.\"\n\nMike blinked in the darkness. \"What?\"\n\n\"They had me all trussed up like a Christmas goose so I couldn't get out, but Red fell asleep while she was on watch, and I slipped outta the nylons and made my way here,\" Janet explained as she crept over to where he lay. \"Just wanted to see if you were still in working order, y'know?\"\n\n\"Well my brain sure isn't,\" Mike mumbled, feeling her crawl up beside him and reach under his blanket, fumbling around for his cock. \"But I'm gonna go out on a limb and say that's not you came here for anyway.\"\n\n\"You may be right there, sport,\" she purred as she stroked his massive tool, holding it upright in her hand. \"Been over a week now since you ripped me apart with this thing, so I figured I might relieve you of any clogs in the pipes.\"\n\nMike shifted slightly as he felt her wet mouth move over the head of his member, her tongue swirling around it before she began to slowly bob up and down. She never made it more than two thirds of the way down, but she did better than almost any other campus girl who'd gone down on him. Despite his bone-deep weariness, he relaxed and allowed her to suck him to hardness. Maybe this was part of what he needed anyway.\n\n\"Oh yeah, come to mommy...\" she breathed as she stroked up and down his now erect tool. He could almost feel her gazing at it lustily in the darkness. She pulled aside the cover and clambered over him, facing down his legs, reverse cowgirl. She kept stroking as she guided his cockhead to her pussy, sliding it along the slippery lips in a tease. \"I'm still on my birth control, stud, so don't worry about busting in me. You obviously need a release too.\"\n\nMike lay still and let Janet do the work. She was good for it.\n\n\"Ohhhh, yeaaaaahhhhh, that's what I'm talking about,\" she sighed as she sank down onto him, his powerful cock pushing through and deep inside her, stretching her walls and sending immediate shivers through her. \"Mmmmm, missed you, big boy...\"\n\nMike assumed she was talking to his dick, but whatever. It did indeed feel good to be inside her. She'd make him cum, and then hopefully he could get some deep, quality sleep. She was squirming up and down now, moaning quietly and whispering to herself. Her nimble fingers stroked at his sticky shaft while she rubbed her clit. He felt her pussy squeezing and contracting around him already, meaning she was going to cum soon, probably the first of several times.\n\nHe smiled as he thought of her getting tighter and a compactification joke began to form.\n\n***\n\nElsewhere on campus, not long after...\n\n\"Well how was I supposed to know my slipknot would slip?\" Lisa protested, tied down to the wooden chair that Janet had been restrained in some minutes before.\n\n\"You had one job, Heyman,\" Mona said, sitting in a chair nearby, kicking a foot idly back and forth and looking unimpressed. \"You had to keep the slut from escaping and sexually harassing DeBourne in his sleep. She was even tied down.\"\n\n\"Exactly,\" Lisa insisted, wiggling as she tried to get herself out of the silky bonds that kept her wrists and ankles fastened to the chair. Worse, she was also buck naked, and blushing furiously. Her legs were parted, around the chair, and her arms behind her back, meaning Mona could see her goodies. The black girl didn't seem to care, though. \"How was I supposed to know that if I took a nap she'd manage to escape?\"\n\n\"She wasn't escaping to go and do homework or research, girl,\" Mona replied. \"She escaped to go ride the biggest dick on campus. Of course she escaped.\"\n\n\"It wasn't my faullllllt!\" Lisa whined. \"I got tired!\"\n\n\"I offered to take first watch, but you insisted,\" pointed out her friend, still not buying Lisa's sob story. \"And now you can answer for it.\"\n\n\"Well, it looks like Dozing Dora is still with us,\" Karen mused, entering the room from the hallway. \"Good job staying awake for more than ten minutes, M.\"\n\n\"You know it, girl,\" Mona said, high-fiving Karen as she walked by, but still giving Lisa a pointed look. \"So, what's the verdict on punishment?\"\n\n\"Well,\" Karen said thoughtfully as she removed her coat and hung it in their small closet. \"How long had we agreed to let DeBourne sleep for, uninterrupted?\"\n\n\"Minimum three hours,\" Mona answered.\n\n\"So then,\" Karen continued, walking up to Lisa, tied in a chair in the middle of the room and walking around her slowly, tracing a single fingernail over her sensitive flesh and making the redhead shudder. \"Maybe three hours of penance is what is in order.\"\n\n\"W-what?\" Lisa stammered, somehow going pale. \"Wait, no! Class! I have class! I can't miss it!\"\n\n\"No you don't,\" Karen corrected. \"Don't lie, I know your schedule even better than you do.\"\n\n\"Mmm, girl, now fibbing to the court?\" Mona said, kissing her teeth. \"That's gonna get added on to your sentence.\"\n\n\"W-what're you gonna do, Kar?\" Lisa asked, watching Karen nervously as she walked around her slowly. She squirmed in her chair, terrified that she was about to start getting wet.\n\n\"Mona?\" Karen asked, looking over at their friend, who just watched passively, her chin on her hand, foot kicking back and forth slowly. \"Did you make a decision?\"\n\n\"You have a lot of hats, Princess,\" Mona said, standing and walking over to Karen's dresser. \"Pretty sure some of 'em cost more than my car did, but I digress. Out of seven potential candidates...\"\n\nShe held up a long, elegant royal-blue plume, one that Lisa recognized as being from a hat Karen owned and that she personally adored. \"This one's nice and silky soft at first, but there's a definite stiffness to it with a little pressure. Tested it on my forearm and got a tingle or six. I choose this one.\"\n\n\"Oh, sweet baby Jesus, no,\" Lisa said, swallowing as she realized what was about to happen. \"Not that, Kar.\"\n\n\"I had my ass handed to me by some god of knowledge after trying to pull a fast one on him,\" Karen replied, taking the long, elegant feather from Mona and then standing in front of Lisa, gazing down at her while rolling the feather between her fingers. \"To atone, I wanted to make sure he had uninterrupted sleep. Your job, you may recall, was to keep that trollop Remington from disturbing him. You instead chose to make love to Aergia, and Remington is no doubt now bruising her brainstem on DeBourne while he tries to sleep.\"\n\nShe looked down her lovely, patrician nose at her roomie. \"Lisa Ruthelyn Heyman, for the crimes of sloth, indolence, negligence and abetting harlotry, you are sentenced to be edged for the next three hours by this very soft and sensual plume.\"\n\nLisa looked over at Mona in desperation. \"Mona! Y'can't let this happen! It's... it's oppression! The Aryan female is using sex to try and prove her superiority! J-Jewish people are the closest to black people! We're sisters!\"\n\nMona raised an eyebrow. \"You lifted that line from watching Fritz The Cat with me the other night, paleface. You are so on your own here, sister.\"\n\n\"You're just gonna walk away?\" Lisa rasped as Karen floated the royal-blue feather across the back of her neck.\n\n\"Hell no,\" Mona said, shaking her head. \"I'm gonna watch, even if lesbian stuff isn't a turn-on. Maybe I can animate what I see, do some Frank Frazetta-type of art, make a buck or two. I brought a sketchbook.\"\n\nLisa bit her lower lip, looking imploringly at the heavens while Karen continued to trace the feather around her body, taking her time and going very slowly. As she had feared, Lisa started to get very wet, very quickly.\n\n\"How's that atheist thing working out for you now?\" Karen asked saucily as she grazed the tip of the feather over Lisa's hardening nipple.\n\n***\n\nBlackwell Manor, the present...\n\nIt had been a full day so far, and the pair were now ensconced in their bed, having escaped from all the activities and chores, instructing that they were not to be disturbed. Mike had his huge arm around his wife while she snuggled into his side. He had a large collection of papers on his lap, all bound together by three rings. He watched while his wife quietly hummed a tune and flipped through the pages casually.",
        "She smiled. \"You look through these old things now, and you realize exactly how far we've come in our understanding, don't you?\"\n\nMike nodded. \"I think the theory actually turned out better than it would have the first time around, since I had to correct all the flawed math you laced through it. The funny thing is, your flawed math was still better in some ways than the stuff my peers were grinding out, so your sabotage led me to create a more detailed and accurate theorem, in a sense.\"\n\n\"Well, didn't you know that was actually my plan all along?\" she cooed, looking up at him and tracing a fingernail over his chest.\n\nKaren giggled as he responded by squeezing her breast. He then turned the giant stack over with his massive hand and began examining the other part- their two theses, competing so very long ago, were now bound together by rings, upside down to each other, so that there was no front or back, just the deep insights of their wonderous minds, together forever.\n\nHe looked at the cover of Karen's thesis, on quantum cryptography, and brushed his fingers over her elegant signature. Long ago, she'd agreed to give him this original copy, and had signed it for him as he requested. He in turn had done the same for her, and it was one of the most cherished documents or manuscripts. Some nights, when he was away somewhere, she'd just hug it to herself and think about what it had come to mean to her.\n\nI found him. I found my equal, my peer, and the man I'm meant to live in awe of and to never stop loving.\n\nNormally, the theses occupied a space in the main library, a place of honour built just for them, but occasionally they would pull it out and sit together, laughing about things that they knew now to be wrong, some thirty-odd years later. But back then, they were ground-breaking ideas, and principally the brainchildren of two very special second-year students.\n\n\"I love your submission,\" he mused, still hugging her close. \"It was so elegant, and insightful. Easily two decades ahead of its time.\"\n\n\"And what I loved about yours was that it was terrifying,\" she sighed her hand on top of his as he caressed her signature. \"Your compactification numbers burst Calabi-Yau right open, proved that the weak gravitational force affected the quantum vacuum fluctuations around black holes, and we could now accurately measure their Hawking Radiation. The entire community was freaked out until Lucerne. I remember being so secretly proud of you.\"\n\n\"And for you to be proud of me, that actually means something,\" he said in his deep but gentle voice, his hand stroking her cheek as she looked up into his eyes. \"That means more to me than just about anything.\"\n\n\"Just about anything, hm?\" she purred as she reached down and placed her hand on his cock, stroking it slowly, lovingly, as only she knew how. She would have him erect in no time, and he wanted it no other way. \"So what might something of these other 'anythings' be, husband-mine?\"\n\n\"Well, rest assured, they all have to deal with you,\" said, reaching down to fondle her breast again while she stroked him. He watched as she leaned down and took his cockhead into her mouth, her wicked tongue snaking around it. His hand wandered its way down her back until it arrived at her tight, shapely behind, and he caressed it before sliding a finger down between her cheeks and deep inside her pussy, making her moan.\n\nKaren pushed her way slowly down his hardening tool, laving him with her tongue while her hand stroked the skin beneath her wet lips. She moaned and hummed around him, vibrating her mouth gently the way she knew he loved. Her ass squirmed gently as he fingered her, and she squeezed herself around him. She got wetter with each passing second, a deep yearning for him that had never faded in all their time together, it only grew stronger.\n\n\"I need you in me,\" she said in a quiet, husky voice. \"I want to feel you inside me, Michael...\"\n\nHe pulled his finger from inside her and she sat up before clambering into his lap, facing him. He was sitting back against the massive headboard, made of mahogany and carved in elegant designs. Karen had fallen for it the moment she laid eyes on it. The giant bed beneath them made almost no sound as she got into position.\n\nHer arms were around his shoulders as she wiggled around, finding her place. Her pussylips came to rest just above the fat, throbbing head of his cock. His hands were holding her gently by her waist. As she looked deep into his eyes, she sank down, taking his huge manhood deep inside her. She sighed in pleasure as he split her walls apart and then bottomed out in her.\n\nKaren rested her forehead against her husband's, content to just hold him deep inside her for a while. It was a closeness she craved every moment of every day. Right here, face-to-face and mingled with one another, was the purest joy and bliss she could hope for.\n\n\"Do I please you?\" she asked as she began to slowly move up and down on him.\n\n\"In every way imaginable,\" he replied, nodding as he took her large, perfect breasts in his powerful hands and fondled them, the way she loved most, and only he knew how. No one had ever made her feel the way this man did, and she'd had many lovers over the years. There was simply no comparison.\n\nHer thighs and her behind flexed as she went up and down, squeezing his cock inside her rhythmically. It was a perfectly timed, executed, and flawless dance between them that promised them the limitless delight and pleasure only the other could bring. She craned her head back and moaned as he squeezed her breasts, his massive hands almost enveloping them despite their size.\n\nSoon enough, they would be climaxing together, and he would be cumming deep in her. Would tonight be the night he gave her a new life to carry inside her? Would tonight be the night she was blessed with another boy, or even a girl?\n\nShe hadn't been born in this venerable manor, although her father had. Her younger sister, Alexandra, had been born in this very room, back when it belonged to their father and mother. She shuddered, not only because his cock lanced deep inside her with every motion, nor because of the way he skillfully fondled her sensitive breasts, but at the notion that she would draw out of him, using all her sexual prowess, the essence of their child, another family member to love and cherish to the end of their days.\n\nShe couldn't wait to be pregnant for him.\n\n***\n\nAuthor's Notes: Read the chapter epilogue after the Author's Notes!!!!\n\nWhat happened in the flashbacks is actually a pretty big evolution in their understanding of one another, for obvious reasons. If you're a complacent white person, you're probably pissed at Karen for rocking the boat. Just keep in mind that Mike agrees with her and why she did what she did. He feels like he failed her for not noticing the bias happening right underneath his nose.\n\nKaren, meanwhile, also came to the realization that nothing on earth, anywhere in her existence, was worth the hurt of knowing that extraordinary man was disappointed in her. All the Ph.Ds, Nobel Prizes, and international acclaim mean nothing to her in comparison.\n\nLike I said, there's a spinoff coming that involves the Blackwell Manor staff, because there are many stories to tell, and telling them here in Mike &amp; Karen would slow the storyline to a crawl. I started mostly with Trilby and Valentina, because they're quirky and funny, but with Tatyana helming the ship, things shouldn't get too out of hand...\n\nJordan is going to be an interim character, who features as much in the staff spinoff as in the main arc, not because he's an employee, but because of his connection to the place for the best part of half a century. He's got a rather wicked sense of humour when the right people catch him, and I am sure he will grow on you. Keep an eye out for it.\n\nYes, Tanuja is back, and she will be a semi-regular fixture at the Manor because of her internship. I'm still feeling her out, so I'm hoping the interplay will be interesting.\n\nFreja and Jeanie, of course, will be regular guests at the Manor. Speaking of everyone's favourite dippy duo, look for the next chapter of their story, Freja &amp; Jeanie 3, to come out on the same day as Mike &amp; Karen 19, since the two stories are intertwined. Coming at ya in June!\n\nI think that's about it for now. I'd best get this proofed and edited, and then I can submit. Hope you're enjoying your time away from everyone else.\n\nKeep your stick on the ice!\n\n- Management\n\nChapter Epilogue:\n\nFreja stared at the licence play she now held in her hand. It was Jeanie's new vanity plate that she'd just arrived home with. She looked at Freja expectantly.\n\n\"Soooooo, whaddya think?\" the brunette asked, bouncing up and down on the balls of her feet slightly so that her breasts jiggled.\n\n\"How did you get this already?\" the Danish girl asked, almost frowning. \"Do vanity plates not take some time to register in this country?\"\n\n\"Oh, probs, but I might've slipped 'em some extra cash to make sure I left with it today,\" Jeanie explained, shrugging. \"Problem is, I dunno how to put it on my car, so I was kinda hopin' you could, babe.\"\n\nFreja gave her a wry look before glancing down at the shiny white plate she held in her hand. A graceful blue trillium, the provincial flower of Ontario, held the eye, and the letters of Jeanie's new vanity plate shouted out to her.\n\nSKOOVRVUL.\n\n\"Well?\" Jeanie asked hopefully, her smile having a tinge of worry to it.\n\n\"I love it, yndling,\" Freja said finally, smiling back at her wife. \"It is important and fun for you, and that means it makes me happy. Your happiness is my happiness, provided, of course, it does not involve me getting hit in the tits with paintballs.\"\n\nJeanie squealed and threw herself against Freja, kissing her in delight. \"I'm so glad you like it Fre!\" she gushed, grinding her body into her wife's, while Freja moved the license plate aside quickly so that neither of them got lacerated by the shiny new edges. She returned the kiss readily the two of them standing in the living room of their condo.\n\n\"Mmmmm,\" Jeanie sighed, pulling back from the kiss finally and smiling at her wife. \"Soooooo, y'gonna put it on for me?\"\n\n\"Of course I will, my love,\" Freja said gently, nodding.\n\n\"Sweet, but first...\" Jeanie mused, giving her wife a naughty smile. \"Lemme wash it, and then we're gonna rub our cunts all over it to give it a personal varnish, 'kay?\"\n\n\"God, I am loving how you think...\" Freja murmured as she pulled Jeanie in for another kiss.\n\n~fin~"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "weird names",
        "drama",
        "group sex",
        "humour",
        "incest",
        "lesbian",
        "romance"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/mike-and-karen-ch-18"
}