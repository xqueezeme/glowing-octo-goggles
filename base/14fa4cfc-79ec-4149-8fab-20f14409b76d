{
    "title": "There and Back Again Ch. 079-080",
    "pages": [
        "Chapter Seventy-Nine: *Can You Feel Me Now? \n\nWe'd barely made it through the door when Alistair kicked it shut behind us. He set me carefully on the bed, then took the platter of food from my hands and put it on a table. Climbing up bedside me, he curled himself around me and pulled me into his embrace. I relaxed, enjoying the comfort and closeness, enjoying the warmth of his body pressed against mine. Even after the bath, I didn't really feel warm. It felt like the cold in the dungeon had settled in to my bones, and I was having a hard time getting warm again. \n\nWhen he felt me shiver, Alistair rolled us to lay me across his chest and pull up the blankets on the bed. It felt a bit ridiculous being clothed in bed, but it was warmer, so I wasn't about to object. His heartbeat thumped slowly in my ear, and I closed my eyes to listen to the soothing sound. His hands came up to stroke my back, and I practically purred. \n\n\"So what was it this time?\" he asked, dragging me from my reverie. \n\n\"Hmm? What was what?\" I lifted my head so I could look him in the eye. \n\n\"What drove you back to Earth?\" he clarified. \n\nI blushed, and he gave me an intrigued look. \"Nothing. It just occurred to me that it had been a while since I'd gone back, and I was worried it would happen while we were in the Deep Roads.\" \n\nHe sighed, and I echoed him. When nothing more seemed forthcoming, I laid my head back down on his chest. We cuddled together like that for a few minutes, and I felt my eyes starting to drift closed. Suddenly they flew wide open as he reversed our positions, rolling me over and landing on top of me. He grabbed my wrists, gently pinning them above my head. I squeaked in surprise, and he silenced me with a sudden, passionate kiss. I relaxed into it as he swept his tongue through my mouth to engage with mine. \n\nHe pulled away, panting, his eyes almost black with desire. I wiggled my hips, rubbing myself against the bulge I could feel through his trousers, and he hissed. \n\n\"So...Avernus says that your leaving is voluntary, right? That you only go when you want to?\" \n\nI nodded, confused by the subject matter. \"Yes, bu-\" \n\nHe cut me off with a finger to my lips. \"We are going to test that theory.\" \n\n\"Wha-?\" I mumbled around his finger. \n\n\"Here's what's going to happen. I'm going to give you the motivation to stay. So from now on, if you go back, if you disappear, you will be...punished.\" \n\n\"Punished?\" I might have been creeped out, if the mischievous glint in his eyes hadn't made it obvious that this was a game. At least, sort of a game. I hope. \n\nHe nodded, and I felt one of his hands slide down my side, brushing against my breast before continuing down my hip to my thigh. I gasped as he gathered the material of my dress and slid his hand underneath, all without letting go of my wrists. \n\n\"Punished how?\" \n\n\"I think it will be more fun to show you, actually.\" \n\n\"I haven't agreed to this, you know.\" \n\n\"Doesn't matter. It's a promise I'm making to you, right here and now. Leave me again, and you will be punished.\" He leaned in and whispered huskily in my ear. \"Don't worry. All you have to do is hold still. You can do that, can't you?\" \n\nI groaned as he parroted back my own words from Denerim, but couldn't deny that a thrill of arousal travelled down my spine in response. My hips twitched, underneath him, and he grinned. \n\nHis hand crept up my thigh, stroking my bare hip softly. \"Do you know what you did to me, sitting in my lap all through dinner with no smalls? Are you trying to kill me?\" \n\nI smirked and wriggled against him again, and he stilled my hips with his as he pulled my dress up slowly. He briefly let go of my wrists to pull the dress over my head and toss it carelessly to the floor, then kissed me as he captured my wrists again. \n\n\"Stay,\" he whispered, and let go again to push himself up, kneeling between my thighs. I watched avidly as he pulled off his tunic, my eyes roaming over his impressive chest; I moaned out loud when he unlaced his trousers and his erection popped out, enormous and straining and beautiful. I spread my legs a little bit and wriggled, anticipating him taking me hard and fast and desperate. \n\nInstead, he settled back down, his belly in the V of my thighs, and used his hands to tilt my head before slowly buzzing kisses along my jaw, stopping to lick my ear before continuing down my neck. He nuzzled my collarbone, then continued further south to find my pebbled nipple with his lips, while one hand teased the other. I almost came when he gently closed his teeth around the little bud, and I writhed beneath him. \n\nHe backed off and began planting little kisses all over my breasts, alternating sides, nibbling lightly on the sensitive skin, and then sucking until I knew he'd left marks. I'm going to be covered in bruises tomorrow...I moaned in disappointment when he stopped, but gasped as I felt his tongue tease at my little belly button. He then kissed his way down over my hairless mound, settling in between my thighs. \n\nI was already soaked, I knew, and I quivered in anticipation of his touch, but it didn't come. I lifted my head to look down, seeing him staring intently at me, his cheeks flushed, and his breath ghosting over my lips. When I almost couldn't take it anymore, he finally, slowly approached and I moaned as the tip of his tongue tickled down along my slit. I bucked, needing more, but he reached around under my thighs to pin my hips with his big hands. \n\nHe tsk'ed at me. \"Moving already? For shame.\" \n\nI blushed and flopped my head back onto the pillow. I felt his tongue again, but this time he licked firmly from my opening, all the way up over my sensitive pearl, and I cried out. He returned to tease against my opening, waiting until I whispered his name, begging, before he pressed the thick muscle inside me. I continued chanting his name, encouraging him on, as he began an in-and-out action that was driving me wild. I wanted to writhe, the pleasure of something filling me too much, but his hands holding my hips did not let go, and instead I just fluttered uselessly against the restraint. \n\nWhen I couldn't hold out any longer, my hand, of its own accord, came to rest on the back of his head, encouraging him on, stroking through his beautiful blond hair. That must have been his cue, for he slid his tongue up and over my pearl before finally sucking the little nub into his mouth. I cried out, so close to orgasm, but he was careful not to increase the pressure, to hold me there, while his hands relentlessly kept me from bucking towards the source of my torment. \n\nJust before I thought I would go over the edge, he stopped. He rolled to one side, climbing back up to lay alongside me, leaving me panting and whimpering in thwarted pleasure. He recaptured my wrists, again holding them crossed above my head. He idly played with one nipple, deliciously pinching and rolling it between his fingers. It was exquisite torture, and I felt a tear roll down my cheek. \n\nLeaning in to kiss away my tear, he whispered, \"Next time you leave me here,\" he flicked my nipple and licked the shell of my ear for emphasis, \"when you get back, I'm going to do this, get you worked up just like this, and then...\" He paused, and I could practically hear the smirk on his face. \"Leave you. Desperate and needy and so close you can almost taste it. Do you understand?\" \n\nHe flicked my nipple again, and I moaned and shivered. \"Yes,\" I whispered, not able to even voice my desperate plea. \n\n\"And you agree this is a fair punishment?\" He stroked my breast lightly. \n\nI'd have said anything he wanted to hear to be allowed to come. I wasn't even listening to what I'd agreed to. \"Yes.\" \n\n\"And you promise not to leave me again?\" \n\n\"Yes, yes, anything. Alistair, please!\" I shuddered in discomfort. \n\n\"Say it, Sierra. Say you'll never leave me again. I want to hear it.\" \n\n\"I'll never leave you again. I swear! Please, Alistair!\" \n\nHe left me there a few more moments, still pinching and rolling my nipple, keeping me desperately aroused, but not enough to orgasm. His gaze roving over my face, finally he nodded and his hand left my breast. Before I could even protest, he slid two fingers into my very wet crevasse and began rubbing firmly on either side of my stiff pearl. I came undone in seconds, so overwrought from his earlier ministrations; I keened, sobbing, legs twitching spastically as the sensation took over. \n\nI noticed with the remainder of the tiny rational part my brain that Alistair was moving, and before I'd even started to wind down, he had rolled on top of me and sheathed himself while I still convulsed. He began sliding inside me, drawing out my orgasm, groaning as he was caught in a contraction. \n\nIt occurred to me, in my lust-filled haze, that I could feel the taint in Alistair's veins, like I had felt it in the dungeon. It was like darkspawn, but different, tickling at the edge of my consciousness, stronger the closer I was to the source. As close as I was to Alistair, it was intense, and I could feel him as he thrust into me, then feel it lessening as he pulled out. It felt like not only was he entering my body, he was thrusting into my mind. It was overwhelming, and I cried out, wrapping my arms around his neck, hooking my heels behind his thighs, encouraging him on. \n\nHe roared as he finally came deep inside me, and I shuddered through his irregular thrusting and twitching as his orgasm took him. My muscles clenched around the invader and I clung to his neck with abandon, panting into his shoulder as he collapsed down onto me. We stayed like that while we calmed down and our heart rates slowed; he knew I liked him to stay put for the afterglow. \n\n\"I can feel you.\" \n\nHe snorted. \"That's not exactly a surprise, love, after what we just did.\" \n\nI giggled and clenched my muscles, triggering a groan and a twitch. \"Not that! I mean, yes, that too, but I was talking about the taint. I can sense you. I could in the dungeon, too, though I had assumed it would be Solona.\" \n\nI could hear his smile. \"And what does it feel like?\" There was longing in his tone. \n\n\"It's sort of like the feeling when someone is staring at you when you can't see them. It tickles at the back of my mind.\" \n\n\"I mean, what do I feel like? Does it feel different than Solona?\" \n\nI considered, extending out my senses to judge the two different sources of taint, one near and one farther away. \"It does. I never noticed.\" \n\nSolona felt like sadness, like the moment after the break-up in a romance novel, the moment after the main character dies in a television series. Penetrating sadness was all I could feel. \n\nAlistair felt like... \"Sunshine.\" \n\n\"What?\" He finally rolled off me, pulling me in to cuddle against his chest as we lay facing each other. \n\n\"You feel like sunshine. Warm and happy and optimistic, shining like the sun on my face.\" I basked in the sensation. \n\nHe laughed, blushing scarlet. \"I'm...flattered, I think?\" \n\nI wrinkled my brow in confusion. \"Why flattered? It's just how you feel.\" \n\n\"Yes, but the way you feel a Warden is the way you see them. Your impressions of them flavour the sensation of their taint - it reflects your impression of them, not who they really are. So you see Solona as being sad, and that's how she feels to you. And apparently, you see me as sunshine.\" He shook his head. \"I'm not feeling very manly with that description, you know.\" \n\nI giggled, curling in closer. \"If you could feel what I feel, with that scorching hot sunshine inside me when we're making love, you wouldn't be worried about that. That was...intense.\" \n\n\"I wish I could feel you. I wonder what you'd feel like? Duncan's never mentioned it, but I overheard some of the others talking about how overpowering it is when two Wardens...\" he blushed more, and I grinned, \"get together. I wish we could share that. I'm glad the darkspawn can't either, of course, but I just wish the Architect had left you alone.\" \n\nI was momentarily sad about that; it seemed like it might be the only redeeming feature of the taint. But I couldn't be too upset for long; I was with the man I loved, he had come for me against all odds, and I could now feel my own personal sunshine any time I needed it. And I know exactly how to cheer him up. \n\nI pushed on his chest, and he rolled onto his back in surprise. I knelt beside him, pushing the blankets down further to expose him entirely. A sheen of sweat covered his muscular chest, his hair was a mess, and he had a beatific smile on his handsome face as he gave me a similar once-over. Looking down further, he was still semi-erect, laying against his thigh. \n\nI leaned over, giving Alistair quite the view, and lifted his cock with my hand before licking it from root to tip, tasting our mixed secretions. He immediately started to harden, and I smiled. I repeated it, before looking up to lock gazes with Alistair for one brief moment. \n\n\"Can you feel me now?\" \n\nI engulfed the head with my mouth, and his chuckle turned into a ragged moan as I suckled gently while using my hand to caress his shaft. When he was fully hard and thrusting slightly with his hips, I released him and swung my leg over his hips, sheathing him inside me in one swift move. I rode him to mutual completion as he alternated stroking my tender nipples and my overwrought clit. \n\nWe slept snuggled together, smiles on both of our faces. \n\nWhen I woke, Alistair was looking down at me, expression guarded. Or guilty. Or something. \n\n\"What's that look for?\" \n\nHe flushed and looked away, only to end up staring at my breasts. \"I'm sorry,\" he whispered. \n\nLooking down myself, I realized I was covered in hickeys. There were several on each breast, and more up my chest; I assumed my neck was probably covered as well. I reached down and poked one of the darker bruises; it didn't hurt. \n\nI looked back to Alistair, using my fingers to tilt his chin back up, waiting until he looked me in the eye. \"Oh, honey, it's fine. They're not bruises, not really. They're hickeys. They don't hurt, honestly.\" I appraised them critically. \"I sort of like them, actually. A reminder. But I'm afraid I'm going to have to take a potion or something, or Aedan will probably lose it when he sees me.\" I sighed. \"Too bad, really.\" \n\nAlistair still looked apprehensive; I leaned in to kiss him soundly. \"I wouldn't mind if you kept the marks somewhere that won't show, next time, but don't worry about them. Seriously.\" \n\nWhen he looked ready to object, I kissed him again, and then again, until we had both forgotten what we were even talking about. \n\nWhen we finally emerged, later in the morning, the guard came around to question us about Jarvia. When I explained that I'd been kidnapped, their questions became less judgemental and more sympathetic, and giving them the papers we'd recovered from Jarvia's office didn't hurt either. They were quick to assure us that there would be no political ramifications for the Wardens from the untimely demise of the entire Carta, or from conscripting Faren. They were happy enough to deal with the Carta member paralysed in an equipment trunk on the Proving Grounds as well, and thanked Solona profusely for not allowing something untoward to happen to the Proving. \n\nFaren had a bunch of questions after his discussion with Leli and Solona the night before. I wasn't convinced he believed me, but at least the level of hostility had toned down significantly. I suppose he'll believe it when I disappear next...which I won't, if Alistair has anything to say about it. He was pleased to hear that his sister was pregnant with a boy (even if he remained skeptical), which would make her an Aeducan, though less pleased when he remembered that we were supposedly supporting Harrowmont. \n\n\"Not really, though. Honestly, Faren. I will do anything in my power to make sure Rica and her son are okay. We're looking for Sereda, and if we find her, we'll ask her to recognise Rica's son as an Aeducan. She'll need an heir, after all, and she sounds...reasonable, from what I can gather. Worst case scenario, you can bring her and the kid to the surface with the Wardens.\" \n\nHe didn't seem entirely placated, but he wasn't threatening me or glowering at me, so I called it a victory. \n\n\"Shouldn't you know if we will be able to find the Princess, if you know so much?\" \n\n\"I don't know everything. In my world, my options to interact with this one were very limited. There was a script. Several things have gone off script since I've been here, and the changes I brought about have knocked a few others off. It's sort of complicated. But essentially, in the game, they never let a Warden go looking for Sereda. The assumption was that she died, and that was all they wrote. But without me, the Wardens wouldn't have gotten Gorim to open up, so wouldn't have known about the possibility that she lived. \n\n\"It's all a bit...confusing.\" I shrugged uncomfortably. I hate talking about Earth and the game. My life is here now, I wish I could forget about the rest... \n\n\"Faren...\" I debated continuing my sentence, eventually deciding I had to say something. \"I'm sorry. About Leske.\" \n\nHe looked away, his jaw clenched. \"Not your fault. If it hadn't been for you I'd probably have killed him instead of setting him loose in that dungeon. Stupid bastard; I don't know what he was thinking.\" \n\n\"He was thinking he wanted to make amends. To give you a second chance. Don't demean his choice by calling him stupid, Faren. In the end, he loved you and Rica, and that's valuable.\" \n\nFaren closed his eyes, and I wondered if he was fighting back tears. \"And I won't forget.\" \n\nI hesitantly set my hand on his shoulder, pulling it back when he flinched. \"If there's anything we can do...even if you just want to talk...\" \n\n\"Thanks, but no thanks. I appreciate the thought, though.\" He turned and walked away, and I watched him until he climbed the stairs leading to the room he'd been assigned. \n\nAlistair and I spent the rest of the day cuddling, and chatting with Leli and Zev, who were trying to draw out the details of what had me so freaked out the night before. I told them about the threat to remove a finger as proof of life, and Leli hugged me sympathetically. I didn't want to admit that a lot of it was killing my first person. Regardless of how necessary it was, I felt sick over the loss of life, but I didn't want to say that in front of my chosen family, all of whom had killed people in the past, some of them to defend me. \n\nI knew Alistair could tell what I was trying to avoid saying, though, when he squeezed my hand and saved me by changing the subject. \n\nI asked Leli and Zev to show me how to fight unarmed; they were surprised until I explained my little tussle with Tooth. We cleared some of the tables out of the middle of the room, and Faren surprised me by joining in my training. I actually found unarmed combat easier than armed, and they were able to expand my repertoire of moves, so I didn't have just the one throw in my arsenal. I wasn't exactly going to qualify for the MMA league, but at least I had a few things to practice for self-defense.  \n\nAfter lunch, and replacing the tables under Mistress Leta's baleful gaze, Alistair dragged me back to our room for a 'nap', in which no sleep was had. We kissed and talked and made love, then talked and made love some more, until we emerged for supper starving and rumpled. Zev muttered bitterly under his breath, and I assumed he was missing Aedan. Leliana gave me a wicked smile and a wink. Faren and Solona just ignored the obvious signs of the nooky we'd been having. \n\nWe spent the evening playing cards, or at least, everyone else did. Not only did I not know the games, I was useless as a poker player, so I watched. To no one's surprise, Zev and Faren split the pot pretty evenly. Everyone was grumbling as we got ready to head to bed when the main doors to the estate opened, and in walked Duncan, Aedan, and all of our other companions. ",
        "They were covered in grime, but otherwise uninjured; I resisted throwing myself into Aedan's arms, since I didn't want to need another bath. We took turns telling each other about our experiences; telling Aedan about my rescue from the Carta had him giving Zevran a heated kiss and threatening everyone else with a grimy hug. Then Duncan told their story. \n\n\"She's not in Aeducan Thaig, though she's been through there, I suspect. We rescued Lord Dace from a darkspawn attack - I thought it was supposed to be deepstalkers, Sierra?\" I shrugged; Maker only knew what liberties BioWare had taken with the details of the deep roads missions. I just hope they were accurate with location of the Anvil. \"He is willing to support our candidate, whoever that should be. I was non-committal. Sadly one of his men was tainted, but he managed to survive the Joining. This is our newest Grey Warden, who prefers to be called Bel.\" \n\nI hadn't even noticed the extra dwarf in the party, so focused was I on my brother and my honorary father. Bel pulled off his helmet; he was dwarven, obviously, but strangely enough, entirely bald. He had no facial hair whatsoever, and I was startled to notice he even lacked eyebrows. And there was no sign of stubble, either. I tried to hide my strange look, but a dwarf without a beard still weirded me out a little, Sandal not included. \n\n\"At any rate, Lord Dace mentioned weapons and armour missing from chests that require an Aeducan signet to open, so it seems Lady Aeducan is armed and made it at least that far.\" \n\nWe exchanged smiles. I really hoped that we'd be able to find Sereda; if not, I was going to have to recommend crowning Bhelen, and I really didn't want to. \n\nAs I thought about it, I noticed that Faren, behind me, was standing rather stiffly, his face a distant, expressionless mask that wasn't like him. Following his line of sight, I saw the other dwarves, Gorim and Bel, giving him the evil eye. Oghren was apparently drunk, if the snoring from the floor was any indication, so he apparently had no opinion on the subject. \n\nStepping over to Faren, I put my hand on his shoulder and smiled warmly. He returned my smile, but it didn't reach his eyes. Sighing, I dragged him over to the two dwarves. I made the introductions, though they all seemed to have some idea who each other was, or obviously at least what caste they were. I'd thought there might be issues with Gorim and other dwarves, or between Oghren and virtually everyone; I hadn't considered how Faren would be received. I made a big deal about Faren killing the guard, and helping me stay sane in the dungeon, as well as killing Jarvia, and then basically forced the men to shake hands, which in Ferelden meant grasping forearms. All three dwarves scowled at me, but I just gave them my most vapid, pretty smiles, and they all blushed and dropped it. \n\nFaren finally walked away, stiffly, and I grabbed Bel and Gorim each by the forearm, turning them to face me. \n\n\"Faren is going to be a Grey Warden.\" They nodded, so I continued, \"He is your brother now, Bel, whether you like it or not, and a damn hero. So I do not want to ever hear him being called 'Duster' or 'Brand', are we clear? Or you will have to deal with me. Yes?\" \n\nBoth avoided my eyes but bobbed their heads in what I chose to accept as a nod. Seeing that the returning party had already cleared out, heading, I assumed for the bathing chambers, Gorim and Bel grabbed Oghren under the arms and dragged him towards the hallway where the baths were. I wasn't looking forward to a repeat performance of scrubbed, pink, nearly naked dwarf, but he desperately needed a bath. Between alcohol, urine, and darkspawn blood, there was no choice. \n\nI approached Alistair and he put his arms around me as I burrowed happily into his chest. \"In the morning, when we leave our room, you're going first.\" \n\n\"Wha...why?\" \n\n\"Never mind. Did Duncan say when we'd be leaving?\" \n\n\"As soon as everyone who's going is awake. I suspect he'll give us about twelve hours of rest before setting out.\" \n\n\"Good.\" I went up on tiptoes and reached up to pull Alistair down for a kiss. \"Take me to bed, then, serrah.\" \n\n\"Your desire is my command,\" he replied, making me shiver despite the mischief in his eyes. \n\nBefore I could do anything to stop him, he'd picked me up and jogged down the hallway to our room. I could hear Leliana and Solona laugh behind me as our door slammed shut. \n\nHe made love to me that night like a man possessed; he was insatiable. And I understood - we were about to head into the Deep Roads, and Maker only knew when we'd have the chance to be together again like that. And the Deep Roads themselves were stressful enough a concept, never mind adding in that I could disappear when we were down there. Not if I have any say...I'm not risking Alistair's 'punishment', if I can help it... \n\nIn the morning, people filtered out of their rooms one-by-one, and we all met in the main hall. Eventually we were all there, and Duncan had those of us going to the Deep Roads begin packing. We needed food for the entire group for at least a month, by everyone's best guess, which was not the easiest thing to manage. All of the warriors ended up carrying multiple packs, and the rest of us had our own, lighter though not inconsiderable packs as well. Once we were all ready, we bade those staying behind - Leli, Solona, and Morrigan - goodbye, and headed into the Deep. \n\nChapter Eighty: *Road to Hell \n\nFourteen of us waited inside the massive dwarven gates which led to the Deep Roads: Aedan, Alistair, Duncan, Jowan, Anders, Gorim, Bel, Oghren, Faren, Sten, Shale, Zevran, Prince, and, of course, me. For a moment I was a little bit concerned about being trapped with eleven men and only Shale for female company, but quickly realized it was silly. Neither Alistair nor my brother, honorary father, or brother-in-law would allow anything untoward to happen to me; the darkspawn were the threat, not my companions. For all their issues, with the exception of Bel who I didn't know at all, they were all honourable men. \n\nWhich was a good thing, because the gates, manned by a dwarf on massive winches on either side, were opening. It's too late to change my mind. \n\nA blast of uncomfortably warm, dry air assaulted us the moment the seal was opened, and that answered the question of why we didn't have tents and many extra clothes in our packs. The smell of sulfur was strong, but there was also an odour of dusty, unpleasant decay that I could have lived without ever experiencing. Even the naturally stoic Sten wrinkled his nose, which was strangely sort of...cute. You know you've been in Thedas too long when the Qunari is 'cute'. \n\nThe Deep Roads, I had been told, were mostly lit by lava pools and falls, which probably explained the sulfur smell and the warmth, but there were torches lining the corridor in front of me as far as the eye could see, and we each carried a handful of torches 'just in case'. We knew we'd have to cut through several crosscuts and darkspawn tunnels to get to Bownammar, and some of those may not be well lit. We also carried a couple of the enchanted lanterns we'd stolen from Soldier's Peak. Jowan and I each carried one, specifically; we were the least effective fighters of the group. \n\nI couldn't sense any darkspawn, though the tickling feeling of the other Wardens around me was grating at my nerves. Some of the guys carried their weapons in hand, but I figured that wouldn't last long. No matter that we knew we were in for several unexpected fights, fatigue would eventually win out. I left my own daggers securely in their sheaths, slung about my waist on a leather belt. \n\nGorim and Duncan led the way, and after one, last deep breath, I followed them in the middle of the pack of us. Gorim had painstakingly planned our route through the labyrinth of roads, crosscuts and tunnels on Sereda's maps, and we would be going from one Legion supply depot to the next as we made our way. I shuddered slightly as I passed from Orzammar, with its wide-open ceiling and warm light into the dim and oppressive tunnel. \n\nI felt a hand on my shoulder and another grasping mine in sympathy, and I smiled at Aedan and Alistair in turn. Duncan had assigned them as my protection detail, not that he could have stopped either of them from doing it, and they were both taking it seriously, flanking me wherever we went. I didn't mind; I needed the reassurance. \n\nFortunately, once we were past the dwarven door leading out of Orzammar, the ceiling rose a bit again; Sten had to duck through the doorway, but in the Deep Roads proper, he had several feet of clearance. It made the ambiance merely oppressive, instead of completely, stiflingly, panic-worthy. The heat was tolerable, for the moment, but I was sure I'd be wishing for less warm clothing as time went on. And the smell didn't improve the further we walked. I had to admit, however, that the Deep Roads were an impressive feat of construction. Only ten feet across at their narrowest, they sometimes as wide as twenty; the ceiling rose far above us at every crossroads. Bridges spanned rivers of lava, and channels encouraged the lava to run parallel to the Roads for a while, keeping the lighting just bright enough to make torches unnecessary. \n\nThe few days we'd had with little activity, compounded by captivity for me and Faren, meant we didn't get all that far the first day. We encountered a few deepstalkers - roughly the size and annoyance of dragonlings, irritatingly - and after Sten and Shale stomped them all into paste, we continued on. We had full bags - I knew eventually we'd be smoking and eating deepstalker, and I'd had a serious discussion with my stomach and my Warden appetite regarding that, but we didn't need to resort to that yet, and we didn't have anywhere to store the meat if we tried. So we continued on until I had to stop. Faren collapsed onto the ground the moment Duncan called a halt, so it wasn't just me. He'd done far better than we had any right to expect. \n\nWithout tents, we pretty much went to sleep wherever we could manage, after eating some bread and jerky. I slept cuddled to Alistair's broad back, and I noticed Aedan and Zev doing the same. Bel woke us once with darkspawn nightmares, but otherwise the night passed uneventfully. I dreamt, and they were strange, surreal things, but at least I didn't scream. With seven Wardens, we only had to take watch every second night, and to my eternal gratitude, I didn't have one the first night. Alistair did, but he stayed at my side and held me while he watched. I couldn't claim to have been truly comfortable, sleeping in armour on hard stone, curled up against cold dragonbone plate, but it was as close as I was likely to get for some time. \n\nWhen we woke - in the morning, according to the dwarves, though I certainly couldn't have proved it - we set out again, and I felt better able to keep up with the pace. I worried a bit about Faren, with months of captivity and not yet having Grey Warden stamina, but he seemed to be coping better as well. \n\nHe was talking to Duncan at breakfast, asking about the Joining, and getting the usual, vague, lack of information that was the company line. I grimaced and stuck my tongue out at Duncan, who choked on his dry bread; Faren slapped his back a few times to help him clear his windpipe. I walked away as I heard Duncan explain that we'd actually need to find some darkspawn before we could perform the ceremony. \n\nEither Duncan or Aedan must have made rules and explained them to the men, about doing their private business in private, and keeping their pants on around me, because I was thrilled not to get an eyeful of male potty functions before we broke camp. I claimed a little area behind some rubble for my own ablutions, and Alistair kept everyone away until I was ready. Peeing just wherever was a bit, well, odd, and somehow sad given the former majesty of the Deep Roads, but there weren't exactly port-o-potties, so I shrugged and did what I had to do. \n\nWe got going with little fuss. As we walked, I spent a little bit of time trying to get to know Bel, with limited success. He'd barely speak, kept his helmet on most of the time, and I don't even think he looked at me directly. I finally mumbled my excuses and dropped back, disheartened. I wasn't even clear if he knew about my unusual situation, and I'd certainly had no chance to explain it. \n\nOghren invited himself to take Bel's place as my walking companion for a while. I guessed that I was going to be annoyed by Oghren, as I'd never really liked drunk people much, but I also felt sorry for him; he was about to discover the hard way that his wife wasn't at all who he thought she was. And I'd been avoiding him since we entered the Deep Roads because I didn't want to be the one to tell him. \n\n\"Don't mind him,\" he said, gesturing towards Bel's back and speaking much too loudly. \"He's got a st-st-stutter, and he doesn't like to talk. Nothing personal, Toots.\" \n\nI stopped feeling sorry for the red-haired dwarf quite suddenly. \"Oghren! That was plain mean, and if you ever call me toots again, I'll slap you so hard your head ends up facing the wrong way.\" \n\nHe belched, and a waft of stale, ale-smelling breath passed by. At least he smells better than he did, thanks to Mistress Leta... \"Oh, don't go getting your smalls in a twist, Toots. I know you women can't resist me, but I'm a married man, you know.\" \n\nI couldn't help it; annoyed as I was, I had to laugh. At least I know who'll be the comic relief for this trip. Aedan, behind us, smacked Oghren on the back of the head, followed by some colourful dwarven cursing, and I laughed even harder. \n\nTo my relief, I discovered that Aedan had filled Oghren in about my situation. It made sense - he would have been entirely confused about the commotion surrounding my disappearance, and they'd had no choice but to explain to both Oghren and Bel. That didn't mean either of them accepted the story, by any means, but at least I was saved having to explain it. \n\n\"So Pretty Boy here tells me you know where Branka's at.\" I strangled a laugh at Oghren's new nickname for Aedan, and my brother shot me a dirty look. I wonder what he'll end up calling everyone else? \"I'm curious how that happened, I have to admit.\" \n\n\"It's in the game, Oghren.\" We'd decided to be honest and tell at least our permanent companions it was a game. I don't want a repeat of that accidental reveal, that's for sure. \"You know what Branka was after: the Anvil of the Void. And you know as well as I do that she's become obsessed. She went through Caridin's Cross, then to Ortan Thaig. She found some records or something that told her that the Anvil is in Bownammar. So she's there, now, trying to navigate Caridin's traps.\" \n\n\"My Branka's the smartest dwarf in Orzammar. She'd be able to solve any nug-humping puzzles set up by some long-dead Paragon in no time.\" \n\nI sighed. \"Caridin isn't dead. He's a golem.\" I looked down at the ruddy-faced dwarf. \"She doesn't have the manpower, Oghren.\" And she's not your Branka anymore. I refrained from voicing that observation aloud. \"She lost a lot of people getting to Bownammar. And many in the house weren't warriors.\" \n\nI hesitated, and Oghren gave me a piercing look. I knew from the game that he wasn't half as oblivious as he acted, but I was suddenly acutely aware of that under his sharp gaze. \n\n\"By the stone, spit it out! What is it, woman?\" \n\nI wondered what I'd done to make him dislike me. Was the bath that bad? \"I'm sorry to be the one to tell you this. The traps...they're lethal, Oghren. If you don't do them just right. She...\" I winced, \"ran out of people to use as fodder. She let them all die. All of them that weren't taken by the 'spawn. And all that's left of those is Hespith. And Laryn, technically, I suppose...\" I shuddered. \n\n\"Just sodding say whatever you're dancing around, would you?\" \n\nI stopped, and Oghren's shouting drew everyone else's attention as well. I lost my temper. \"Do you know what a brood mother is, Oghren?\" \n\n\"Pretty boy filled me in when we were in Aeducan Thaig.\" \n\n\"Right. Well, Branka...she allowed some of the women in her house - Laryn for sure, and Hespith, but there might have been others - to be taken and turned. She knew about brood mothers. She locked them in and used them to breed unlimited darkspawn to send through the traps, hoping eventually to make it through. Laryn's already turned; Hespith is halfway there, and mad to boot.\" \n\n\"Ancestors' sodding ass, you're the one who's mad. My Branka would never...\" \n\n\"Yes she would. If you think about it hard enough, you'll realise. She's out of her mind, obsessed, and won't allow anything to stop her. I think you know she's capable of it.\" \n\n\"You're a sodding liar, you are. Just because you're his whore,\" he gestured to Alistair, \"doesn't mean I'm going to listen to a sodding thing you say.\" \n\nAlistair and Duncan, who'd been at the front of the group, turned to race in our direction; Aedan, who'd been walking with us, pulled his dagger and had it angled up under Oghren's chin before I could even blink. \n\n\"You have one chance to rethink your last statement, dwarf, or it'll be the last statement you ever make.\" \n\nI held my hand up to stop the others, then put it gently on Aedan's arm, sliding my fingers up to grip the knife and pull it back from where it had just barely pierced Oghren's flesh. \"Aedan. Stop. It's okay. He's upset, and understandably so. Let it go.\" \n\n\"Let it go? He called you a whore.\" \n\n\"And how many that we've met have said - or thought - worse? It's not worth it. It's okay.\" \n\n\"Don't do me any favours, whore. I can take this nug-humping-\" \n\n\"Oghren. Shut. Up!\" I was exasperated. \n\nAedan growled, \"You want me to just let this little cretin-\" \n\n\"Aedan.\" My tone had gone hard and unrelenting. I tried to soften it. \"You don't know him like I do. Please.\" I tugged at his hand, still holding the blade. \"Please.\" \n\nHe searched my face for a moment, for what I couldn't say, but finally nodded and withdrew his hand, sticky with Oghren's blood. \"I'm watching you, dwarf. One word, a single one, and we will pick up where I left off.\" \n\nOghren slapped his hand to his neck, glaring daggers at me, Aedan, and anyone else whose eye he caught. I motioned for Anders to heal him, but the dwarf stomped off, muttering under his breath, before he had the chance. With an apologetic glance my way, Gorim went after him. Aedan wiped his hands on a rag, as Alistair walked up and wrapped his arms around my shaking frame, pressing a kiss to my forehead. \n\n\"You okay?\" \n\n\"I'm fine. I don't blame him. I just told him his wife's a monster. How would you feel?\" \n\n\"I still want to kick his ass,\" Aedan grumbled. \n\nI laughed. \"Oh, me too. But I'll just leave him alone for a while. Once we get to Bownammar, he'll understand.\" \n\nAlistair kissed me, softly, then leaned down to whisper in my ear. \"Every time I look away from you for five seconds you get into trouble.\" \n\nI chuckled, then threaded my gauntleted fingers through his, and gestured to the group to get moving. \n\nShale lumbered up beside me as we got underway. \"Does It wish me to squish the drunken dwarf? Because I could. Easily.\" \n\n\"Thanks, Shale, but I'll be fine.\" \n\n\"As It wishes, then.\" And she rumbled away to walk beside Sten, silently. It's really weird how well those two get along. \n\nWe encountered our first group of darkspawn after ducking into a side tunnel that led away from the main road we'd been following. Gorim's map showed a cave-in between us and the intersection we wanted, and the Legion had dug out a short-cut to avoid the unstable area. We lit our torches and unsheathed the arcane lamps as we entered the dark aperture. ",
        "Apparently the darkspawn had found it and started digging; there was a large, irregular cavern where there should only have been a narrow tunnel, and it was full of darkspawn. Fortunately, they had started fires, so visibility wasn't a problem; unfortunately, I couldn't see what they were burning, but I had to guess it was a corpse, based on the sickening smell of the haze permeating the air in the tunnel. \n\nWe sensed the darkspawn long before entering the larger room, and organised accordingly. Shale ripped a chunk of rock out of the side wall of the tunnel, prepared to throw; the sword-and-shield warriors closed ranks and held up their shields to provide maximum cover, and everyone else readied weapons. We advanced as a group, the mages at the rear, and immediately drew fire from a couple of archers at the back of the room. I couldn't sense any magic that didn't belong to Jowan or Anders, and I told the rest of the group there was no Emissary. \n\nOnce the initial volley of arrows had struck and Shale had launched her projectile into a group of hurlocks, the shield wall advanced, and Duncan, Aedan, Zevran, Faren, Sten and I slipped around the edges to enter the fight. I skirted the edge of the cavern, keeping out of the way of stray arrows or magic, as the others flanked the first wave of hurlocks to attack the shielded warriors. My goal was the archers. Not seeing me coming meant I was the best option to cross the room efficiently and take out their long-range capabilities. \n\nAnd it worked; I paid slight attention to the melee, almost laughing once as an arrow pierced the back of a hurlock's neck by mistake, but the group was faring well. I scrambled over some rubble to walk up behind a genlock, reach around before he knew I was there, and slit his throat from ear to ear. It wasn't easy; no matter how sharp weapons are, it actually takes more pressure than I'd have expected to get deep enough to sever the artery, but I had experience and it worked the first time. The corpse dropped at my feet, thick black blood pooling underneath, and I edged further along to the next one. \n\nBy the time I'd taken out the four archers, the group had massacred the rest of the darkspawn. Zevran and Aedan began looting the bodies - laughing at me when I called it that - while everyone else wiped darkspawn blood off their weapons. Alistair came up to me and kissed me fiercely, but said nothing. Smart boy. \n\nI had to admit I didn't enjoy the long, slightly winding, narrow tunnel we had to creep through, but I fared better than Shale or Sten. The Legion had made the tunnel large, by dwarven proportions, which meant it was between five and six feet tall, depending; I fit fine, and Zev had no issues, but all the other humans had to duck at times, and Shale scraped the walls and ceiling as she walked, sometimes striking sparks. Sten crouched as well, a string of curses like \"Vashedan\", which periodically made me giggle, earning myself a disapproving glare from the giant. \n\nI was grateful enough when we reached a main branch of the Deep Roads to admit that I was claustrophobic. Just a little bit. We extinguished our torches, packing them away, and took a minute while Gorim and Duncan debated markings on the map. Once they picked a direction, we headed off again. \n\nWe stopped at a small Legion of the Dead way station that Gorim had identified. It was nice: there were sinks, of a sort, with runes like those in the estate in Orzammar, small alcoves for privacy with a few sleeping cots, and even a stone door that could be closed and barred. We still set a watch rotation, but we felt protected for the first time in two days. We took turns cleaning up, and decided as a group to sleep without armour, for once. Exhausted after a long day of fighting, the Grey Wardens, Faren, and I met at the back of the cavern. Faren had collected his darkspawn blood from one of the hurlocks we'd fought, and Duncan had Anders prepare the Joining potion. \n\nFaren grimaced, upon glimpsing the chalice, but didn't look surprised. I shook my head ruefully when Duncan glanced at me. It's not like the use for the blood is rocket science. What else would you be doing with a potion vial full of blood? Duncan explained that the blood was the source of the Grey Wardens' strength, and then, to my dismay, asked Bel, who'd not spoken the entire day, to recite the words. \n\nThe stutter was highly unfortunate, I reflected listening to Bel try to get through the words \"Join us, brother,\" and without discussing it, everyone else began reciting with him. I was surprised to see that once his voice was no longer the loudest, his stutter improved dramatically. Clearly, anxiety makes it worse. \n\nI contemplated that as Faren drank the potion; I was the only one not nervous. I knew any Brosca would survive. Alistair caught the dwarf as he fell back, his eyes rolled up into his head, and laid him gently down on the nearest cot. He was breathing, and everyone took a deep breath of relief. \n\nJowan offered to pull a cot nearby and stay close, in case he needed anything when he awoke, and the rest of us scattered to our own alcoves to get some rest. \n\nThere weren't enough cots for everyone, and seeing as Alistair and I wouldn't have been able to share one anyway, we opted for the floor. We made a little nest of blankets to sleep on; the air was warm, heated by the lava as it was, so we didn't need to keep any blankets out for cover. We had chosen an alcove as far away from the rest as possible, and as Alistair sprawled out beside me in just his thin linen sleeping pants, I was glad all over again. \n\nI happily gave in to his passionate kiss; I didn't think we'd have any opportunity to be together in the Deep Roads, but as long as we were quiet, we could get away with it easily. Alistair's mouth on my neck was insistent as the kissing grew more heated, and I tangled my fingers in his somewhat shaggy sandy-blond hair, trying to stifle a moan of desire. His hands roamed my torso, stopping to torment my breasts periodically, before skipping away, making me squirm. Impatient, I pulled up the thin shift I wore for sleeping and struggled to tug it off, dropping it beside us absently. \n\nI lay, sandwiched between Alistair and the wall of the alcove, and bit my knuckle as he proceeded to shower my breasts with attention. The bruising had mostly disappeared with the healing potion I'd taken before we left, but certain spots still made my skin sing with remembered pleasure and pain when he licked and kissed them. I hissed and dragged his mouth to one aching, diamond-hard nipple by the hair, and he chuckled under his breath even as he engulfed the little pebble with his lips. He switched sides, teasing me, and I writhed silently beneath him. \n\nAt my urging, he finally rid himself of his trousers, and gasped as I took his hard length in my hand. It felt good, knowing the arousal was for me; powerful, somehow, and I stroked the shaft a few times in appreciation before Alistair pushed my hands away. \n\nHe slid between my thighs and sheathed himself inside me like we'd done it hundreds of times before; he was perfect, his width stretching me deliciously, avoiding bumping my cervix, and I groaned and humped my hips uselessly at him when he just held still deep inside me. When he finally started to move, the relief was palpable; my arousal climbed rapidly, and I covered my mouth to stifle any noise when I came, the pleasure and relief of being with him and knowing all was right in the world almost overwhelming my embarrassed need to remain quiet. Alistair captured my lips with his own to muffle his own grunt of completion, and then we both collapsed, boneless, in our nest. \n\nWe kissed and caressed, sweetly, not sexually, and prolonged our post-coital bliss a while longer, but eventually the certainty that someone was going to come around looking - and that someone, more likely than not, being Oghren, knowing my luck - spurred me to sit up and retrieve my shift. Alistair wriggled into his trousers, and then spooned behind me, shielding me from our companions as we fell deeply asleep. \n\nAedan woke me for my watch with a gentle hand on my arm; I crawled, reluctantly, out of the cocoon of Alistair's protection and trudged over to sit near the stone door, exchanging nods with Shale and Sten. With nothing else to do, I marvelled at the amazing stone architecture of the Deep Roads. Even this insignificant chamber had lava channels near the front, for light and heat, but far enough away that the back alcoves were in deep shadow. If it had a window or a skylight it would have been more comfortable than anywhere we'd stayed to date, except the Pearl and Redcliffe's castle. \n\nSadly, according to Gorim, the further away from Orzammar we travelled, the more rudimentary the Legion's supply depots were. Near the front they'd have a barracks of sorts, but this was likely to be the last relative safety we would encounter. \n\nI had never learned how to keep track of time without a clock of some variety, and I'd left my phone with Leli, so after a while I was grateful when Bel approached for his watch. \n\n\"'Morning,\" I greeted him, my voice hoarse with disuse. \n\nHe nodded, but remained silent. At least he's not wearing his helmet. \n\n\"Look, I hope you can just ignore Oghren. He's an ass, at times, but it isn't personal. Don't let him get you down.\" \n\nHe nodded again. \n\n\"Are you that embarrassed by the stutter? I promise you, I won't make fun of you. I had a friend in school with a stutter; lucky for her, we had a teacher with some training in speech. She managed to learn how not to stutter. But I'd never tease someone over something they have so little control over.\" \n\n\"It's w-worse when I-I'm nervous,\" he responded. His voice was deep and pleasant, if you ignored the hesitancy and the stutter. \n\n\"Why are you nervous? We seem to be quite safe here.\" I shifted around, double-checking the cavern and the door for security issues I'd overlooked. \n\n\"That's n-not why.\" He appeared to be blushing, though it could have been a trick of the light. \n\n\"Is it me? I promised I wouldn't tease. I'm no bully.\" \n\n\"N-n-no. I do- I do- I d-don't me-meet many wo-wo-women!\" \n\n\"Oh! I'm sorry, Bel. If it's any consolation, I don't bite.\" \n\nHe chuckled at that, and I smiled. \n\n\"Y-you said your fr-friend learned to st-st-stop?\" \n\n\"Oh! I should have thought of that. Bel, I know how. I was there when she learned. It takes a while, but it's manageable. Would you like me to try to teach you? It would be good experience for getting used to talking to other girls, too.\" I winked at him, and though he blushed scarlet, he smiled and nodded. \n\n\"Alright. The first part...well, it would be easier if Leliana were here, but here goes. Do you know how to sing?\" \n\nI spent probably an hour teaching Bel rudimentary scales. His deep baritone was quite lovely when he hummed along to the lesson; he had at least a passable ear. And I'd managed to get him to sing, just once, the words to go along with the notes: do, re, me, fa, so, la, ti, do. To his shock, and my delight, he didn't stutter. Which was the point: it's virtually impossible to stutter while singing. \n\nI left the lesson there; if my experience was anything to go by, I'd have to get him singing entire songs before I could talk him into trying to sing his sentences instead of speaking them. My friend had been totally embarrassed at first, and it took a long time to gain confidence. I hoped that dwarves didn't have any sort of stigma against singing in public, and that I could recruit Leli to help once we got back to Orzammar, but I thought I had a chance at getting him stutter-free before the blight was over. \n\nI went back to bed, snuggling in to a drowsy Alistair with a brief kiss on the forehead, and fell asleep listening to soft, deep humming."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-79-80"
}