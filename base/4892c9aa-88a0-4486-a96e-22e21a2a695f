{
    "title": "Mausefalle",
    "pages": [
        "Special thanks to blackrandi for the invitation to participate in \"The Magical Mystery Tour.\" It was a great opportunity to try something different. I typically don't write graphic sex and that remains true here. I normally thank everyone up front, but those acknowledgements are at the end of this story, as they are a bit more extensive than usual.\n\n<p align=\"center\">MAUSEFALLE\n\nMousetrap</p>\n\nPrologue: With Josef Stalin's death on 5 March 1953, an epic struggle for the control and future of the Soviet Union commenced. Four major players emerged very quickly: Stalin's presumed successor, Central Party Secretary Georgy Malenkov; the hardline Stalinist, Foreign Minister Vyacheslav Molotov; The ruthless head of the MVD Internal Affairs and MGB State Security, Lavrentiy Beria, and the respected, but displaced, Party Secretary Nikita Khrushchev. These were hard men shaped by the Revolution and the Great Patriotic War, each with a different vision of the future. They quietly fought for Chairmanship of the Party and near absolute power. On the heels of 25 million war dead, and more killed in purges, the Soviet Union was a place of uncertainty and terror. Fear of a military coup, or even another civil war, this time between the Army and the State Security Forces ran through the country. \n\nIn such dangerous times, even a mouse may tip the balance.\n\n<p align=\"center\">Die Maus im Labyrinth\n\nThe Mouse in the Maze</p>\n\nAnkara: 23 April 1953 \n\n\"There were no heroes at Stalingrad. Only survivors and the dead.\"\n\nThe chill silence of a graveyard settled instantaneously over the room, the fine white tablecloths suddenly resembling nothing so much as burial shrouds, covering unnamed corpses in the stark cruel cold of winter.\n\nThe Russian was nearly perfect, but the accent was very German; the voice, even and firm, never wavered. The interpreter stood motionless, completely unsure what to do. I saw the Embassy Political Attach\u00e9 freeze with his mouth open, like some kind of bizarre fish. He'd proposed the toast as an honor to me, one of the few female Heroes of the Soviet Union, and he was completely unprepared for the German's response. He was absolutely stricken, terrified to make eye contact with me. Useless, like all political officers. I'd even seen that exact stunned expression before.\n\nStalingrad: 28 December 1942 \n\nI staggered past the masses of soldiers in their dull yellow-brown uniforms, mostly sitting on the cold concrete of the factory floor with their squads, listening intently, or at least pretending to listen intently to the \"Zampolit,\" the Political Officer responsible for the morale and revolutionary purity of the soldiers of the unit. At first, none of them noticed me, especially Zampolit Pavov, who was so entranced with the sound of his own voice, at his own pointless yammering, that even when soldiers began to turn away from him to watch me, he didn't notice.\n\nIt wasn't until I stepped into the cleared area around him that he really noticed me. I must have looked like hell. My shredded and burned uniform, the flash burns on my face, the singed hair half-gone, and the ball of gory rags I was holding against my stomach seemed to render him speechless.\n\nHe fought to recover from his shock with his usual tactic, mockery. \"Tovarishch Kornilov, returned to seek shelter so soon? If you've even managed to kill two of Hitler's soldiers, bring back two tags, I'll personally put you in for a medal.\"\n\nI began to laugh. The pain and emotion of the eternity I'd spent in this hell finally breaking through. The laugh was disturbing, even to me, and I felt like it was never going to stop. I took eternities to get it under control, then I reached into my coat pocket and began dropping German identity tags in front of him. Fifty-three tags clinked like leaden bells as they hit the ground. I had one more, still on its chain around my neck and I lifted it up. \"Then you can put me in for twenty-six medals, Tovarishch. There were more, many more, but some of them were bad soldiers; they weren't wearing their tags. Maybe you want me to go kill another to make it twenty-seven medals?\" I unslung and dropped Papasha, \"Papa,\" on the ground in front of him; there were three bullet holes in the receiver of the submachine gun and the barrel sleeve was half crushed. The drum magazine fell loose and rolled a few inches in a wobbling drunkard's path, like a child's toy, before falling over. \"I will need a new weapon, though.\" The laughter came back dark and vicious, twisting around me in spinning madness. I unwrapped the blood-soaked rags from my right arm and held up my mangled hand. \"And if I could get a new hand, it would make it much, much simpler.\" \n\nThe look on his face was utter shock. He half turned to look into the shadows behind him. A figure stood up and stepped forward. \"Commissar...\"\n\nThe stern man stepped past him as if he didn't exist. I felt my knees give as the shock and exhaustion finally overcame my willpower; and so, Commissar Nikita Sergeyevich Khrushchev caught the slight form of the collapsing, badly wounded, half-starved, half-scorched scout directly in front of the official photographer sent to capture the political speech. That picture would appear in poster after poster, right next to the picture of that gaunt peasant girl being awarded the discreet gold star of a Hero of the Soviet Union by Stalin himself.\n\nAnkara: 23 April 1953 \n\nI couldn't afford to let this devolve into arguments and tension. I stood and raised my glass in my left hand and spoke across the silence. \"Very well. To the survivors and to our Hallowed Dead.\"\n\nAcross the room, the tall German in his perfectly tailored tuxedo raised his glass in a precise toast and gave a single, respectful nod. \"The Hallowed Dead.\"\n\nI could feel the room relax as glasses came up and the rest of the room intoned the same toast. I looked out over the crowd. The Ambassador gave me a look of appreciation. Our hosts, the Turkish government, hadn't missed the gesture, and that might help him in his mission of forging an agreement between our two nations. With the death of Stalin, and our retraction of territorial claims, there might be a chance of forming some tentative bonds to counter the massive American influence in Turkey, but that could hinge on the least of issues.\n\nIssues, perhaps, like an angry Hero of the Soviet Union calling out a German businessman over a battle fought ten years ago. I'm sure the Ambassador wondered if the whole incident was calculated to cause problems, maybe even engineered by the Americans for that very purpose.\n\nA few rounds of meaningless toasts later, I sat to eat my meal, some indescribable Turkish dishes that no doubt cost enough to feed a small town. They weren't really to my liking, but I'd learned long ago to eat what I was given without complaint. Better to eat anything than starve. Hunger is a monster that lurks in everyone. As bad as it had been at Stalingrad, I'd heard Leningrad had descended into far, far worse. Rumors of murder and cannibalism were echoed in the haunted eyes of the people when I'd visited shortly after the end of the Great Patriotic War.\n\nI watched, aloof, as the meal ended and music began. Despite the lectures and indoctrination, I could tell the younger girls of the Embassy staff were eagerly anticipating the music and the dancing. Unlike me, most were wearing lipstick and even other types of make-up. It was surprising that the Embassy let this kind of thing go on; everyone knew it was far too easy for bourgeoisie niceties to sway the mental purity of the young and easily influenced.\n\nA few minutes after, some type of dessert, made of who-knew-what, one of the servers brought over a small tray, and set it in front of me. A small black bottle with a gold leaf label trimmed in cherry blossoms sat next to a liqueur glass and a small note card. I looked at the fanciful figures on the label, amazed at the sentimentality. \"From the German, Madame. I am supposed to carry your answer back to him.\"\n\nI smoothed the note with the back of my scarred right hand and looked it over.\n\nMajor Kornilov, \n\n I have been given to understand that you fought at Stalingrad. I would like to extend my apologies for any affront my words may have caused you. Please accept this offer from my personal reserve. I respectfully extend a request that you grace me with a dance so that I may be certain you are not offended.\n\nWith Deepest Apologies, \n\nKurt von Fuchs\n\nGracious enough, I supposed, but there was a slight issue. I looked up at the server. \"I'm afraid you will have to inform Herrn Fuchs that I accept his apology, but that I've never learned to dance.\"\n\nThe server poured a measure of the Kirschwasser into the liqueur glass before departing with his message. There was a golden brown tint to it, probably from years of aging in charred barrels, something I'd been given to understand was quite rare for the cherry brandy. It was smooth, slightly smoky, with a hint of cherries, and just a touch sweet. It was decadent enough that I glanced at the Political Attach\u00e9, who was too deep in conversation with one of the embassy secretaries to spare the time to watch me.\n\nJust as I finished savoring the drink, the tall lean blonde figure of a man loomed over me.\n\n\"Major Kornilov?\"\n\n\"Yes. Herr Fuchs, I presume?\" I stood to face him.\n\n\"Of course.\"\n\nHe reached out in greeting, and seemed utterly unsurprised when I extended my left hand. I, on the other hand, was taken completely off guard when he gave a very formal deep bow and kissed my hand instead of shaking it as I'd expected.\n\nAs he seemingly reluctantly let my hand go, I responded as dryly as I could. \"That's a rather sentimental and outdated gesture in our world Herr Fuchs.\" I knew my admonishment hadn't quite come off as stern enough, but at least the Embassy staff at my table registered it. The male members of the staff seemed indignant; the female staff seemed to be rather more interested than judgmental.\n\n\"Perhaps so. Proper manners seem to be another casualty of the late conflict.\" He gave a sad half smile. \"I'm afraid I came over to ask you to reconsider your refusal of a dance.\"\n\n\"And I'm afraid, I've never had the time to learn to dance, so...\"\n\n\"That is unfortunate, and we will have to rectify that immediately.\" He nodded towards my medals \"Surely no Hero of the Soviet Union would fear something as simple as a dance.\" Before I could reply, he pulled me smoothly away from my table and began leading me to the dance floor.\n\nI glanced around, my uniform was very much at odds with the crinoline, lace and silk that dominated the floor. \"I seem to be a bit out of place, Herr Fuchs.\"\n\n\"Pardon me.\" He carefully positioned my left hand on his right shoulder, placed his left hand at my waist gently and took my maimed and twisted right hand carefully in his left without batting an eye. \"This is the closed position for the waltz.\" He pulled me a little closer than I'd expected and smiled. \"You do not need the fancy silk gowns; your gold star speaks volumes of your worth. You outshine them all.\"\n\nHe began to lead me around the floor, talking me through simple steps. I caught the Ambassador watching intently, concerned, perhaps, that I would disembowel my dance partner with a dessert spoon. I was well aware of my reputation, well aware of the impact my arrival had on the Embassy staff. I could practically smell their fear.\n\nWhen I'd arrived at the airport, I'd been greeted by the Ambassador himself and regretfully informed that I would have to attend the Turkish government's National Sovereignty Day dinner. An unavoidable complication it seemed; the Turkish government might take it as an affront if any Embassy personnel refused to attend. My lack of a suitable dress was of no concern; my dress grey uniform with its red piping and all my medals on display would even be preferable from the Ambassador's point of view. He simply told the Turkish government that a Hero of the Soviet Union was being sent to honor their day of Independence from the Colonialist powers.\n\nIt didn't matter that I told him I had highest priority orders, or that I probably had less than two days to finish this.\n\nIn any case, not going wouldn't help, since nearly the entire Embassy staff, less the guards, would be at the dinner. At least I could further my investigation by observing the staff. My quarry, whoever it was, would almost certainly be at the celebration.\n\nWhoever he was. I was almost convinced my quarry was a man. Not because I didn't think women could be brutal; I knew all too well how dangerous a woman could be. Many would point to me as an example of that. The ones that didn't point to me just didn't know about me. I hadn't known myself, once upon a time.\n\nStalingrad, 24 August 1942\n\n1077<sup>th</sup> Anti-Aircraft Regiment - North of the Tractor Factory \n\n\"Fire, dammit. Fire!\" The slow hammer of the 37mm anti-aircraft gun began, as it slammed flak round after flak round into one of the steel beasts leading the wave of infantrymen. I could see the shots crash into the monster over and over, scattering screaming fragments up into the sky from the armored hull, brilliant star-bound meteors. Other guns were sweeping the ranks of grey clad infantry with much greater effect, tearing horrible vivid crimson swaths through them. The Starshina, Lyudmila Drago, glared at me red-faced and furious. \"Private Kornilov! You miserable little 'mushe!' Get your pathetic ass moving and bring more ammo. Now, Goddammit, Now!\"\n\nShocked from my stupor, I pushed my too-large cap back from my eyes where it always fell, then I started to sprint and got three steps before the exhaustion caught the breath from my lungs and left me gasping. I staggered and began to lurch much more slowly. I'd been dragging boxes of ammunition for two days; there just wasn't anything left anymore. Behind me, I could hear Starshina Drago bellowing angrily, fearlessly, \"Where's the motherfucking Infantry!?\"\n\nI reached the ammo point and found myself staring at Private Tania Alexeev. She'd been pretty once, now she was ghost-white pale, red-eyed, and almost lost in darkness and fear. It was like looking into a mirror. She half-heartedly shoved the sole remaining box towards me. As soon as I grabbed the rope handle I knew we were doomed.\n\n\"Is there anything it in?\"\n\n\"Half a case, Maybe a little less.\" Her lower lip quivered and I could see more tears starting from the corners of her eyes. She was a hundred years old now, but she'd been eighteen only two days ago. Just like me. Just like most of us. \"It's all I have, it's all we can do.\" She pointed helplessly back at the empty space behind her.\n\nI strained to drag the case back to my gun, tearing another track though the dirt. Sweat was running into my eyes, burning and mixing with my tears as it ran down my face. The smoke from the guns was suffocating, clawing at my lungs. At first I thought it was just the ringing in my ears, but the sound of our guns was slowing, stopping, as they fell silent through lack of ammo, or disappeared in columns of smoke and fire. The distinctive voices of the German guns were growing louder, closer. I looked back over my shoulder at my gun, at Starshina Drago. She was, as usual, yelling something at me, pointing at me in her righteous fury, and snarling something I couldn't hear. My last name was the same as the name of a White Russian counterrevolutionary general and I was never allowed to forget that. The Starshina had taken a special interest in making my life as miserable as possible. I was more in terror of her than of the approaching Germans. I struggled to move faster. \n\nI reached the base of the revetment and I could hear the ruddy-faced Starshina clearer. \"You worthless little bitch, put your back into it and get that ammo up here!\" \n\nI paused, trying to catch enough breath to drag the case up that six-foot slope. Then the world twisted as the gun position became a pyre of flame and I felt myself lifted into the air.\n\nAnkara: 23 April 1953 \n\nHerr Fuchs escorted me back to my table, quite formal and correct, carefully seating me before bowing slightly and moving off. The Ambassador's secretary, Ekaterina, if I remembered correctly, watched him move off with more than a little interest.\n\n\"The German is quite...\" She cut herself off abruptly, suddenly realizing who she was talking to. \"Major Kornilov, I apologize...\"\n\nI shook my head and waved her apology away with my left hand. \"He was quite proper. He was also quite right. It was best for everyone to make it clear that there was no animosity. And, as it appears apologies require dances, I would rather not have one from you.\"\n\nEmotions flickered across her face as she tried to figure out if that was supposed to be humorous. I let her try to figure it out without help, pouring another drink of the Kirschwasser. It was likely to be a long couple of days for many at the Embassy; the overly-pretty blonde girl could have a short head start on it.\n\nThe stress was already setting in, I could see them whispering, wondering what a senior Militsiya operativnik, police detective, was doing at the Embassy, particularly one with a reputation for ruthlessness, and near-absolute, sometimes lethal, intolerance for corruption. Only the Ambassador, the Rezident, and the Political Officer seemed unconcerned. Whether that was through valid confidence or through ignorance remained to be seen, though. Ignorance seemed rather more likely, as I doubted very much that any of them were fully aware of just what I was willing to do. \n\nThe Rezident moved first, of course. The elderly senior intelligence operative at the Embassy smiled as he approached the table. \"Major, I am Anatoly Petrov, First Cultural Attach\u00e9. As it is your first visit, perhaps you'd like to take a walk around the grounds here. I'd be happy to show you the fountains.\"\n\nThis man was certainly dangerous. He'd be no fool; the Ministry for State Security would be very cautious in selecting their man for this assignment. There was far too much to lose, with far too little room for mistakes in Ankara. I hesitated to even think of how many operations he was juggling, how many agents he was running. He was, of course, using the Cultural Attach\u00e9 position as a cover. The thought of that made me smile, wondering how many concerts and museum openings he had to endure.\n\nI finished my drink and stood. \"I think that would be a very good idea.\" I paused. \"Perhaps, as the Cultural Attach\u00e9, you'll be able to explain just what it was we ate tonight.\" I said it a touch sardonically, letting him know I was aware of exactly what he was.\n\nHe gave a wry smile. \"That's not quite how it works, Major. I'm here to bring our culture to the Turks, not the other way around.\"\n\nHe took my arm and we walked slowly out the double doors to seemingly endless terraced gardens, with their winding paths and fountain after fountain after fountain.\n\n\"So, Major, allow me to be direct. I haven't received any communiqu\u00e9s regarding your mission. I've received nothing, no information at all as to why an operativnik of your reputation would be dispatched here. Particularly with a credentialing letter signed by Nikita Khrushchev himself.\" ",
        "Uncle Nikita had taken a special interest in that gaunt peasant girl after the war. He'd taken the time to read my reports from Stalingrad and confirm them with other unit reports. He sensed something in me and sponsored me into the Militsiya, the police force. It paid him back in spades. It turned out that I had the talent and ruthlessness necessary for hunting criminal organizations and destroying them. Drug runners, white slavers and smugglers learned very quickly that to be hunted by me was to be hunted to extinction. \n\nI gave a half-shrug. \"That's not surprising. I am here in pursuit of a criminal matter.\"\n\n\"And what would that be?\"\n\nI sucked in a slight breath; I knew he wasn't going to like this at all. \"A possible kidnapping. Oksana Beria, wife of Vadim Beria.\"\n\n\"Beria? As in...\"\n\n\"Yes. He was the nephew of Lavrentiy Beria. First Deputy Premier Beria.\" I pretended to admire the elaborate tracery on one of the fountains.\n\n\"Was?\" From the grim, hollow tone in his voice, it was clear he understood how bad this was.\n\n\"Was. Vadim was killed when the wife disappeared. Burned alive in his house.\" I glanced over to see his reaction. There was, unsurprisingly for a man like that, none at all.\n\n\"You said disappeared. You have doubts that she was actually kidnapped?\"\n\nI shrugged again. \"There are some questions. There is also a question of a dossier, a collection of letters and papers of some kind.\"\n\n\"So you are investigating the murder of the First Deputy Premier's nephew.\"\n\n\"Not so much, I believe the actual murder is being dealt with, at a higher level.\"\n\nEven the no-doubt hardened Rezident let that pass quietly. The First Deputy's reputed fondness for cruelty and torture was well known to anyone who had the sense to listen. \"I see. And this dossier?\"\n\nI reached out and touched one of the flowers next to a small blue fountain. \"I don't know for certain. It has become apparent that Vadim was involved in some kind of scheme regarding women and even young girls. Trading them for money and favors.\"\n\n\"Perhaps the dossier outlines the criminal network?\"\n\n\"Perhaps. I can't be certain what is in it. There is a link. One trail leads here.\" I decided not to explain that further.\n\n\"To Ankara.\" He mused thoughtfully, studying a rather ornately tiled fountain covered in complicated colorful floral motifs.\n\n\"To our Embassy in Ankara.\"\n\nThat brought him up abruptly, he stopped walking and stared at me. His face was impassive, but I could tell his mind was screaming through possibilities. \"Who?\"\n\n\"I don't know, yet. If, in a day or two, I still don't know, I am to call Secretary Khrushchev and he will send men to take the Embassy apart down to the foundation. It would cause problems with Minister Malenkov, so he'd like to avoid that.\"\n\n\"I don't need these complications. The political situation at home since Stalin's death is... uncertain. Beria, Molotov, Malenkov...\" He glanced at me for a second, trying to guess what I really was. \"... and your... patron, Khrushchev. They are all jockeying to come out on top. Malenkov is a puppet and he and Molotov are supporting Beria for now for some reason, but I doubt that will last.\"\n\n\"I'd think you would be used to the complications and confusion with your job.\"\n\n\"I've never gotten used to it. I commanded a tank division during the war and I was asked to join the Ministry for State Security as a troubleshooter afterwards. I always avoided the damn Commissars and their bullshit.\" There was more than a trace of irritation in his voice.\n\n\"I always had problems with them myself.\"\n\n\"They were like lice, more of them every day.\" He sighed, shaking his head slowly. \"People are going to die over this mess in Moscow. Maybe a lot of people. It's made the situation here very dangerous; it is worse than ever. The Americans and British are like wolves with the scent of blood in the air.\"\n\n\"That's why I am telling you. Of everyone here, you are by far the least likely to be involved. You selling women for profit makes no sense.\"\n\nHe considered me under lowered brows. \"And you need an ally.\"\n\n\"And I need an ally. And I have learned to take allies wherever I can find them.\"\n\nStalingrad, 12 September 1942\n\n\"Private Kornilov!\"\n\nI stood up from my place on the floor among the unassigned soldiers and rushed to the table, stopping at attention. \"Yes Comm... Zampolit Pavov.\" \n\nHe looked over a sheet of paper that might, or might not, have had anything to do with me. \"While the 1077<sup>th</sup> performed in an exemplary manner, I see nothing to indicate that you had anything to do with that.\" He looked up at me expectantly.\n\n\"We all did our part, Zampolit. I carried ammunition until the last gun was destroyed, as I was directed by my Starshina.\"\n\n\"You broke and ran?\" He said that as a question, but I could see in his eyes what he suspected.\n\nI knew exactly what to say. \"We fell back to regroup as our position was overrun.\" I stopped for a second. \"We ran out of bullets, we did not throw down our rifles.\"\n\nIn fact, we'd had no rifles. The Starshina, hadn't thought me or Tania worthy of rifles. I'd run as fast as I could when I saw the dull grey hull of the first German tank crest the ridge, stopping only long enough to pull a crying Tania to her feet and drag her along with me. \n\nWe'd made it nearly a half mile to a copse of battered trees before we saw the safety of the new Russian lines just that distance further away. Supposed safety, anyway, it turned out not to be safe at all. Just as we breathed a sigh of relief on seeing the lines, we saw another group of stragglers reach them. We watched in horror as they were forced to their knees and a Zampolit shot each of them in the back of the head. Even though I couldn't hear the words he was saying over and over, I knew what they were. \"For cowardice in the face of the enemy. Death.\"\n\nTania sank to the ground, not really seeing anything, crying in terror. I looked around hopelessly, hyperventilating. Going back meant the Germans, going forward meant execution. I half-fell to my knees on the ground next to Tania.\n\nA moment later a hand grabbed my arm. \"Shhh. Come, little girls. Come with Timur.\"\n\nI looked up into a round, smiling, Asian face. His uniform was Russian, mostly, although it was almost covered in bits and scraps of cloth, leaves, and even sticks. \n\nHe led us down to a hollow in the ground where a dozen similar men sat completely unconcerned with the encroaching battle. He led us through them, directly to a weathered old man with a few scraggly chin whiskers and began talking in a language I'd never heard.\n\nThe old man looked at us. \"I am Scout Sniper Platoon Commander Seriov. Did you run?\"\n\nI nodded stiffly. \"We were never given rifles and the big guns were all destroyed, we had nothing to fight with.\"\n\nHe studied the dirt and smoke residue on our faces. I'm sure he saw the tear tracks as well. \"You were with the women that fought on the ridge?\"\n\nI nodded again.\n\nHe said something and one of the men stood up, picked up two well-worn Mosin-Nagant rifles from a pile, fired them into the ground until they were empty and thrust one at each of us, along with an empty bandolier.\n\n\"Timur will guide you to the lines. As long as you have rifles that have been fired, but no ammunition, and you tell them you fell back to find more bullets, they will not shoot you.\"\n\nSo it was; when we reached the lines, I headed straight for the Zampolit who'd executed the stragglers, holding my empty rifle over my head. \"Zampolit! We need more ammunition! More Germans are coming!\" \n\nZampolit Pavov suspected, of course; he suspected everyone of everything, but with so many witnesses to our arrival and to my immediate demand for bullets, he'd been able to do nothing. \n\nInstead of being shot or given ammunition, we'd been sent to wait with new replacement soldiers in a holding area for re-assignment. Tania, much prettier than I, had quickly been asked to act as an aide to the Regimental Commander. She knew what it really meant, but she'd grabbed the opportunity with both hands, grateful to have anything, do anything other than be sent back out to the battlefield. \n\nNow, Pavov was clearly going to offer me the same opportunity; after weeks of mockery, of hints and veiled threats, weeks of commenting on my White Russian name, he was finally going to force me. \"We have no requests for Air Defense personnel, so I can send you to a forward unit in the city, or...\" He paused looking up at me meaningfully. \"I can assign you as a Commissar... Political Officer's aide.\" I'd learned he'd taken the change from Commissar to \"Zampolit\" Deputy Political Officer hard; the massive loss of authority when the independent commissars had been subordinated to combat commanders as political officers had angered him to no end, and it appeared I could be a convenient outlet for that anger.\n\nI stared at him, trying to figure out what to do, what to say. His claim to have no need for replacement air defense personnel was almost certainly a lie. I was aware that I was no beauty, short, scrawny, with almost no figure, plain, with typical Georgian dark hair and eyes. I realized he was enjoying this, enjoying his power over me. If he enjoyed this so much, I knew what it would be like when we were alone, when he could be truly cruel.\n\nI made my decision. \"Then I will need my rifle back. Zampolit Pavov.\" It was a better and cleaner choice to die at the hands of the Germans.\n\nHe stood suddenly, leaning across the table toward me, face darkening, nostrils flaring in anger, but before he could say a word, a familiar voice cut in. \n\n\"Pavov! I have need of your volunteer.\" Seriov strode forward through the roomful of unassigned soldiers and put a hand on my shoulder. \n\n\"You have to...\"\n\n\"Nothing. I have to do nothing. Scout Sniper Platoon has the highest priority, isn't that what Colonel General said? I need one; you have one who just volunteered. Simple, no?\" Seriov beamed cheerfully, taking a bite out of a piece of black bread in his other hand.\n\nEven so, Zampolit Pavov might have argued, but at least seven of Seriov's men were casually walking around the outer edges of the room, all smiling, half of them munching on black bread. All of them had the new PPSH-41 submachine guns casually draped across their arms, just coincidentally pointing in Pavov's direction.\n\n\"Take her. But keep her out of here. She doesn't come back here. Worthless whore of a White. I'll be amazed if she kills even one German.\"\n\n\"Not your problem, Pavov. Germans take more killing than scared recruits.\" Seriov let his smiling mask slip for just a second, eyes hardening and smile fading. \"But you wouldn't know that, would you?\"\n\nZampolit Pavov sat frozen, glaring hate and anger as we walked out.\n\nI hesitated at the door. \"I don't have a gun.\"\n\n\"Guns I have. I have lots of them, all kinds. I need somebody brave.\"\n\nI coughed in disbelief. \"Brave? Me?\"\n\n\"You stood up to that piece of shit. Germans are much less trouble. You're allowed to shoot them.\" He paused. \"I really do need you, and I need you to be brave. I need someone small and brave. Someone who can fit in the ratholes and sewers. I need a scout who can go where we can't.\"\n\n<p align=\"center\">Die Maus und die Falle\n\nThe Mouse and the Trap</p>\n\nAnkara: 23 April 1953 \n\nI was still going where others couldn't go, places like Ankara. It was bit of irony, all things considered. I let the Rezident walk me back to my table, then I relaxed the rest of the evening, watching the members of the staff. Mostly, I was watching them watch me.\n\nI'd expected to ride back with the Ambassador, but instead, the Military Attach\u00e9, Colonel Ivanov, came over.\n\n\"May I offer you a lift back to the Embassy, Major?\"\n\n\"If it doesn't offend the Ambassador.\" Offending the Ambassador was really only a concern to me if it interfered in what I was trying to do, but I had to at least pretend.\n\n\"I checked with him. His wife would like to have at least a few minutes of his time this week.\"\n\nWe made our way to one of the waiting Embassy ZiS limousines, with its driver.\n\nThe Colonel sat across from me in the back, watching as I studied the dash of the limousine. His curiosity won out. \"Are you interested in driving?\"\n\nI turned back to face him. \"Just being cautious. Operativnik are banned from driving, and I have the worst driver in the world. I always wonder if I am going to survive to get where I'm going.\"\n\n\"That bad?\"\n\nI shrugged. \"He's a Yakuts, from Siberia. I'm pretty sure he'd never driven a car before he was assigned to me. I suspect he just threatened to kill the license official rather than take a test.\"\n\n\"I had one of those during the war. Great soldier, terrible driver. He actually managed to run over himself one time. I'm still not sure how he did that.\" The Colonel smiled at the memory.\n\n\"It sounds like it might be the same man.\"\n\n\"It might be.\" He leaned back in his seat. \"So, Militsiya Major, what exactly are you here for?\"\n\nI ignored the weak attempt at overawing me with his rank and gave him the same details I'd given the Rezident.\n\nI could see he didn't like it any better. \"And the dossier? What do you think is in it?\"\n\n\"I don't know, but it's important. We know men died to protect it.\"\n\nHe listened and sighed. \"Just criminal bullshit, but the political situation makes this a nightmare. My driver once told me that when elephants fight, mice are crushed. These are dangerous times for all of us. I've come up under Zhukov. Beria, as the Chairman, would be a disaster for me. Molotov is supporting Beria, because Beria released his wife from arrest after Stalin died, but there's something else going on too. Molotov and Beria hate each other... something just doesn't make sense. But what can I do?\"\n\nI nodded. \"That's why I am telling you. Of everyone here, you are by far the least likely to be involved. You'd have no reason to be involved in any of this, and a real officer would never risk his honor by selling women.\"\n\nAs we pulled up in front of the Embassy, he nodded sagely. \"That makes sense. If you need any help, let me know.\"\n\n*****\n\nI had to have a couple of one-sided discussions with Embassy support personnel, and I'd just managed to get up to my temporary office and sit down when the Ambassador came in. He was desperately trying to suppress his anger.\n\n\"Major. Perhaps you'd like to explain just what is going on.\"\n\nI considered asking him what he meant by that, but it wasn't really in my nature. \"Nobody leaves the Embassy grounds for the next two days, on the authority of Secretary Khrushchev. I gave the guards their orders when I got here. People can come in, but nobody leaves.\"\n\n\"I think Minister Malenkov will have a different opinion.\"\n\n\"If so, you won't know it for a couple days. I ordered the communications center to stand down as well. So unless you plan to overrule Secretary Khrushchev, the lockdown stands. It's for your own good, really. If we can resolve this quickly, things go back to normal.\"\n\n\"I have duties to perform, people to visit...\"\n\n\"I've ordered your secretary to clear your calendar until this is over.\"\n\nHe was furious, but he really was Ambassador material; he managed to keep his temper. His secretary, Ekaterina, had very quickly done as I told her, and I was certain she would continue to do as I'd told her. She was not terribly intelligent, and she was weak in that peculiar way very pretty girls sometimes are; used to being protected and coddled in exchanges for smiles, and in her case, much more personal services for the Ambassador. She'd folded up as soon as I had put pressure on her.\n\nIt was, of all things, the lipstick. I'd merely had to mention that her lipstick was quite pretty, and she'd fallen apart.\n\n\"I'm so sorry, please don't arrest me... Please!\" She started shaking violently, her voice quavering. \"He likes this color of lipstick... and I couldn't keep sneaking it from his wife's room... so...\"\n\nShe continued on to explain the whole pathetic thing. A driver bought the lipstick on the market for her, she carried a few tubes back to Russia every time she visited, never more than three, and she sold them for ten times their value. Making just enough money to make sure her mother and sister didn't starve to death.\n\nI was rather less appalled by her \"criminal activity\" than the fact that the Ambassador hadn't even offered to ensure her family was taken care of in exchange for the intimate services she was rendering him. Then I realized she seemed to be under the impression that those \"personal services\" were actually part of her job.\n\nI managed, in the course of giving her a stern lecture for her \"criminal behavior\" and extracting a firm promise not to smuggle any more cosmetics, to disabuse her of her delusion regarding her duties to the Ambassador. I might have mentioned how angry his well-connected wife might be were she to discover Ekaterina's services to her husband, and how that might have severe ramifications for the Ambassador. When I'd left her there, I'd noticed a sly look under her tears, and knew that at some point in the near future the price of her services was going to go up dramatically as far as the Ambassador was concerned.\n\nWhen the Ambassador frowned and shook his head, saying, \"Minister Malenkov will hear of this eventually and I doubt he will be as tolerant as I am.\" I just shrugged.\n\nHe paused, no doubt considering the possibility that the political struggle for power in the Party might have a positive outcome for me. \"You do, of course have my full support; let me know if you need assistance.\"\n\nThe Ambassador tried not to storm out of my office, and I smiled to myself, knowing that he'd soon be paying far more for his afternoon treats.\n\nAs for his promise of support, I'd learned long ago that you can always find yourself alone.\n\nStalingrad. 6 November 1942\n\nSeriov's Scout Sniper Platoon, my platoon, was gone. I'd been out for a two-day reconnaissance when it happened; I was alone, since none of the others could fit through the sewers I was using to get around. And now they were gone; Seriov, Timur, all of them. The weapons, the equipment, everything but my bedroll and pack. A single piece of paper was hidden in the hollow wall where we'd kept the situation reports when we couldn't get them turned in.\n\nThe note was from Seriov. The platoon had been moved to support another Division with no notice, and despite Seriov's arguments, I was left behind. Somehow or other I had been left off the platoon's roster. Seriov suspected Zampolit Pavov's hand in that and he would get it corrected with the new Division as soon as possible, but for now, I was to fall in on the new Scout Platoon when it arrived, and to continue to pass reports to the Division. \n\nThe new Scout Platoon never arrived, of course. I continued to scout my sector and report back to the Division. I dropped off reports, picked up ammunition and spoke to fewer and fewer people. \n\nI'd learned to be a solitary creature, more solitary and more feral than even Seriov's men. He'd started me as a spotter for Timur, then slowly, as I proved myself and kept coming back alive day after day, I started going out on my own. I learned my way through the sewers, the collapsed basements and the rubble. I could range farther than the men in the platoon, fit places they couldn't go. ",
        "We were supposed to report on German positions, but slowly, it just seemed easier to eliminate them. I learned to use the sniper rifle a bit, but it wasn't my favorite. When Timur brought me a brand new PPSH-41 submachine gun, I'd flushed like a school girl. Everything about it was perfect: the feel of the wood, the ventilated barrel sleeve, the two perfect drum magazines. His nickname was \"Papashar,\" Daddy or Papa, and he was a dream come true. Papa didn't care whether the day was hot or cold, didn't care if he was dirty. He took care of me, I took care of him. The first time I had to use him was when a team of four German infantry stumbled almost on top of Timur and me. Papa chewed them down in less than two seconds, before Timur could even bring his weapon to bear.\n\nThe longer I existed in the burned-out, dead graveyard of a city, the more I used other things. Timur showed me how to punch a hole in the case of the big square anti-tank mines, and put in a grenade fuse to attach to tripwires or pullwires. Because I could fit through almost any opening or pipe, I could sneak up to positions, place a mine and set it off from a distance or leave it for them to trigger when they tried to move. There were places I could squeeze into that were too small for the big square mines, and for them I used anti-tank grenades.\n\nAfter a while, Seriov depended on me for some of the more difficult areas, either to spot for the artillery or to remove the hard points, myself. \n\nI ranged out farther and farther, spending more nights in bolt holes and hidden in rubble under the nose of the enemy, often leaving a blasted machine gun position or a room with only a couple of freshly dead enemies in it. I was out on one of those forays when Seriov received his orders.\n\nAfter a few weeks alone, when I realized there'd be no new Scout platoon, I abandoned the platoon area and just lived in my boltholes and hides, mostly in the basements of the destroyed houses and factories.\n\nSurviving the enemy and the cold meant spending more and more time in the dark underground, curled up in mouse nests of blankets and clothing stolen from the enemy; nests that I stashed in dark corners all around the sector. I occasionally took supplies from less-than-attentive Russian units; it was a good reminder for them to be cautious.\n\nI needed the blankets and jackets; winter had arrived. The temperatures had dropped, and the cold had come, stalking the unwary and killing the weak. At first, I cringed from the cold, but I began to understand it all; the ice, the snow and the frost. I began to revel in the cold, letting it harden me, letting it freeze my soul. I imagined myself a daughter of the ice and wind with icicle fangs and bitter claws. I was more a hunter of people than a warm-blooded person myself. The enemy suffered for it, as did a squad of our own men, Russians who misunderstood the entertainment possibilities of a lone female they found curled up in the corner of a basement. I dragged their bodies out into the deepening snow and left them in the open.\n\nI stalked the enemy relentlessly; maybe, sometimes, my attacks had less to do with military reasons than to simply kill the weak, the unwary, the vulnerable. The clever ones seemed to sense me and act cautiously. Depending on whim, more than any logic, I would sometimes leave them be. Sometimes I just waited for my ruthless allies, the winter cold and sound-muffling snow to wear them down and cover my approach. \n\nBy mid-December I only returned to the Division for ammunition, and only at night, leaving my situation reports when I did. I'd probably said less than a dozen words aloud over that last month. The last time I'd stared at the supply clerk for several seconds trying to figure why he seemed so strange, then realized it was because he was alive. I'd gotten so used to the frozen blank stares of the dead that the living no longer seemed normal. \n\nI realized then that even when I was around people, I was alone.\n\n<p align=\"center\">Ein Spiel von Fuchs und Maus\n\nA Game of Fox and Mouse</p>\n\nAnkara: 24 April 1953 \n\nI walked down to the Political Attach\u00e9's office and went in without knocking. It was a very nice office, with stately bookcases and a small fireplace. He looked up with confidence, a significant change from his stunned expression at the dinner. \"Major, what can I do for you?\"\n\n\"I have a bit of a problem to resolve.\"\n\n\"So I gather. From the Ambassador's comments to me this morning, he feels you are being a bit heavy-handed about it.\"\n\nI made a helpless gesture. \"I am trying to do this as carefully as possible. There are times when being delicate results in far more harm than a direct approach. If Uncle Nikita has to get involved, everyone here will suffer a great deal, along with families and friends. That just doesn't need to happen.\"\n\nHe nodded in agreement. \"I had to explain that many times during the war; you shoot the first deserter so you don't have to shoot the rest of the men.\" Just from the casual way he said it, I knew he'd been a Zampolit. \"I'll try to convince the Ambassador that this is for the best.\"\n\n\"I'd appreciate that. Maybe he'll understand it better from you.\"\n\nHe leaned back. \"I'll always try to help further the cause. He said this was about a kidnapping?\"\n\n\"Possible kidnapping.\" I went on to explain the problem to him.\n\n\"That's very touchy. Beria's nephew, dead...\" He mused. \"Very, very bad, he won't take that well at all. If there were any way to put this off until things at the top sort themselves out, it'd be better for everyone, but I don't see that you can.\"\n\n\"Not that I can see, So it will be like pulling a tooth. Better to get the pain over all at once. If his nephew was involved in some kind of scheme to sell women it will look bad, but it would look worse if it came out later.\"\n\n\"It would look like a cover-up, like a corruption of the worst sort. Selling Russian girls to these damn Turks. The thought turns my stomach.\" He stared at the fireplace for a second.\n\n\"Maybe we'll find out, maybe the dossier will give us the finances and contacts.\"\n\n\"Is that what you think is in the dossier?\"\n\nI shrugged. \"What else is there? That's why I came to you. All of this makes your job more complicated, if not impossible, and makes the Revolution look bad. You'd have no reason to be involved in something like this.\"\n\n\"I'll bring it up at dinner. You are going, aren't you?\" He raised one eyebrow.\n\n\"It'd be a bad example if I stepped out to a restaurant and left everyone here. Wouldn't it?\"\n\n\"Of course.\"\n\n*****\n\nThe Political Attach\u00e9 was true to his word, interceding on my behalf with the senior staff in the dining room of the Embassy. \"It's a simple matter really. Give the Major time to work and we can get back to the mission we really need to be working on. Obstruct her and the entire Embassy could be locked down for weeks until the Secretary is satisfied.\"\n\nThe Ambassador gave him a sour look. \"This distraction is the last thing we need. Things are tense enough right now.\"\n\nI broke in. \"It's unavoidable. The Secretary is concerned that this could cause a mistaken perception of the leadership and feels that it needs to be handled quickly and as quietly as possible. He's given me two full days and almost half of that is gone.\"\n\nThe Rezident gave a slight smile. \"It is what it is. I don't think opposing Secretary Khrushchev is wise right now, so it is probably best to cooperate.\"\n\nThe Colonel said nothing, sipping his drink and silently reflecting on something.\n\nI stood. \"All due apologies, but I need to get a bit of sleep if I am going to deal with this. My journey here was rather exhausting, and I haven't rested at all. I will be up in a few hours. Thank you.\"\n\nAs I made my way out of the dining room I reflected that all I could do now was wait: set the trap, use the bait, even if I was the bait. It could be very effective; I'd seen it done before and it had nearly killed me.\n\nStalingrad. 24 December 1942\n\nTruck Factory Basement \n\n\"Maus.\" The voice carried through the darkness. It seemed to come from all around. \"I know you're there Maus. I can hear your heartbeat, I can hear you breathe.\"\n\nI held as still as possible in the bitter, ever-present cold. I'd sensed a presence and stopped moving, trying to convince myself it was my imagination. I'd known it wasn't. No matter how hard I wanted to believe. I knew he was out there, and that he could sense me. I'd known he was out there for days, hunting me. I stayed silent, breathing in the frosty air slowly, instinctively trying to catch a scent like an animal; like the mouse he named me.\n\n\"So many men, Maus. You've killed so many. You had to know that sooner or later we would figure it out, that someone like me would come for you. I will get you, sooner or later. I've been waiting for days for you to come back through here.\" He spoke in schoolboy Russian, but he spoke clearly.\n\nI tried to slide to my left, tried to seek the cover of the large metal structure that I'd just eased around. I'd learned to keep my back to a wall, keep escape routes to my left and right. The slight brush of my boot brought a low chuckle. \n\n\"Try to go out that way and you'll come up in front the machine gun nest you haven't been able to get to, the one that isn't near any walls or sewers. The sun is coming up out there, Maus. There's nowhere to hide in the light.\" He chuckled grimly. \"Whatever your name really is, we call you Die Maus. Some of the survivors of your attacks reported hearing scratching like a Maus, just before the bombs went off.\"\n\nThe dimmest of light just hinting at filtering in, more something I could feel than see. He was right; I knew the machine gun nest he was talking about. I'd been trying to reach it for days, trying to kill more of them.\n\nI felt in my bag. I had one last anti-tank grenade and less than half a drum of ammunition in Papa, maybe thirty rounds, just a couple seconds of firing, if I was lucky. Still, I lived here; this was my world, my ground, not his. I'd been here forever, for all of recorded time. I was part of it, part of the stone, the darkness, the biting winter, part of all this. I knew every inch, every pipe, and every slab of broken concrete.\n\nThere was an escape route; an air vent not too far to the other side, just past one of my sleeping nests, but I would have to cross the gap I knew he had to be watching. I waited for a moment, coiling my legs under me silently. Pausing between heartbeats, waiting for the absolute silence between beats to move. \n\nI dove, rolling open and loose, and letting Papa snarl a half second burst, then another on the next roll. By the time the slower, lighter sound of his MP-40 responded, I was already behind the cover of the next slab of fallen concrete.\n\nHis burst lasted longer than it should have, and I let myself laugh silently at his obvious frustration. \n\nHe caught himself. \"Very nice Maus, very nice. You are very, very quick.\" He gave a short bark of a laugh. \"But I'm still here Maus.\"\n\nI slipped up the side of the tilted slab between us, keeping Papa poised, held up away from the stone, away from anything that the metal and wood of the PPSH might touch, might ring against. The slab didn't go all the way to the ceiling here. There was a gap. Just a few inches. Just enough to fire a burst through, from above, from where he wouldn't expect it to come. \n\nI paused several times, letting the cold numb me, steel me like armor, then slid up to the gap. \n\nThe darkness was near complete, but I'd survived in here for so long I could see the spectrum of black, the shades of darkness. The merest thought of light that filtered through tiny cracks in the building foundation were enough for me to find my target lying flat behind a chunk of up-heaved foundation. I brought Papa up and fired a burst.\n\nAs soon as the strobe of muzzle flash lit the area below me, my heart stopped, and I dove headlong down the slab. It hadn't been a soldier, just a greatcoat laid out where he knew I would look. Which meant it was a trap, and I'd fallen for it. He'd nearly worked his way around the massive slab, and his rounds already were ringing off the concrete next to me as I dropped, but my feet hit the floor and I threw myself sideways toward the path to the vent. Papa jolted in my hand as rounds stuck him; another round slapped at the heel of my boot, I stumbled and threw myself forward over another block of broken, fallen ceiling, rolling forward, then to my left. Another six-foot dash and I'd be through the vent and home free. \n\nThe air from the opening didn't feel right and that brought me up short. I caught the scent of something. I stopped cold and reached forward toward the vent. My fingertips touched a thin line, a hair-thin metal wire coming from the opening. \n\nIt had to be a tripwire. The bastard had put a bomb in the vent, probably one of those damned S-mines; \"bouncing\" fragmentation mines that were so lethal. I could steal it, use it against them later; I'd done that a lot. It was easy, so long as you moved \"soft, kitten, soft\" as Timur so often said. There was no time now, I had to kill him or die.\n\nI could feel Papa was jammed, maybe ruined from the impacts of the German bullets. I only had one choice, a desperate one as likely to kill me as anything. I pulled the last anti-tank grenade out of my bag, then primed it and threw it, rolling against the wall behind me, trying to curl into a ball while remembering to keep my mouth open. I prayed overpressure alone wouldn't kill me.\n\nA voiced uttered a harsh, ugly word all too near, and I looked up just as the grenade detonated, the fraction of a second of sudden explosive brilliance highlighting the lanky blonde soldier diving towards me, face twisted in rage, a knife gleaming in one hand. \n\nThat was the last thing I saw before the shockwave hit and everything went black. \n\n<p align=\"center\">Die Falle der Maus\n\nThe Mouse's Trap</p>\n\nAnkara: 24 April 1953\n\nI leaned back against the wall of my room, just to the side of the door. I hadn't bothered to go to sleep. I knew that whoever my quarry was would have to act quickly, get the dossier out of the Embassy in the confusion following my death.\n\n\"I've been waiting for you,\" I whispered. He turned and froze, the barrel of my Tokerov pistol mere inches from his head. \"Don't. Just don't, Zampolit. I can't begin to tell you how many men I've killed, real men, real soldiers, not pathetic shits like you.\"\n\nI wasn't too terribly surprised it had turned out to be the Political Attach\u00e9. The revolver in his right hand had been aimed at the dummy in my bed; it was a Nagant, made unwieldy by the lengthy suppressor screwed onto the end, and he'd never be able to bring it around in time. He decided to stall for time. \"I think you misunderstand...\"\n\n\"You look in on all visitors to the Embassy while bringing a silenced weapon? Place it on the floor slowly. I'd rather have your help, but if not, I'm willing to tear this building down brick by brick.\" I was bluffing a bit, but he didn't pick up on that.\n\n\"If I call for help...\"\n\n\"You're in my room, with a silenced revolver. I doubt that would help your case.\"\n\n\"I don't know anything about the kidnapping. I never even met Vadim personally.\"\n\nI had him back away from the revolver and picked it up with my right hand, fumbling the awkward thing into my belt. \"I know that. Where is the dossier?\"\n\nHis eyes widened. \"I don't know what...\"\n\nI cut him off. \"How stupid do you think I am? You don't know Vadim, you aren't involved in the disappearance of his wife. You came to kill me, so you could get in touch with Beria to force the guards to open the Embassy. The only reason to do that is to get the dossier out so it won't be found.\"\n\nHe looked desperate. \"I can get you anything you want, just not that.\"\n\n\"That's all I want.\"\n\n\"Beria will kill me.\" I could hear the fear in his voice.\n\n\"Beria might kill you later. I'm here right now, and I will kill you, I promise you that.\"\n\nHe considered it. \"My office.\"\n\n\"Not terribly creative.\"\n\n\"It's the only place I control completely, the only place I can keep the Rezident out of.\"\n\nAs we walked through the empty halls to his office, I shook my head remembering my bolt-holes all over Stalingrad. Certainly his office had to seem like a terrible place to hide anything. The only person we saw was Ekaterina, sitting at her desk in the Ambassador's outer office. When she saw the gun in my hand, she suddenly found something very interesting among the papers on her desk and made a point of not looking back up. Her lipstick seemed to be a very different shade today.\n\nOnce we were in his office, I had him sit in the guest chair that faced his desk. \"Where is it?\"\n\n\"Wait, we can work something out. Lavrentiy is a reasonable man, I'm certain he could find a use for you. Let's talk this through before things go too far.\"\n\nI noticed his familiar use of Beria's first name, and it confirmed what I'd been told. \"Things have gone too far already. Where is the damn dossier?\"\n\nHe tried to look me in the eyes, but like so many before him, he couldn't do it. \"I just think...\"\n\n\"You're not thinking at all and my patience is running out.\"\n\n\"He will find out you took it.\"\n\n\"According to my source, he only contacts you every three or four months so that nobody will figure out that you are holding the dossier for him, so it will be quite a while.\" He missed the obvious implication of that statement. I leveled my gun at his head. \"Where is it? I'm not asking again.\"\n\nHe studied me for a second, finally understanding how uncertain his chances were in all of this. \"The second row of the bookshelf. There is a slipcase labeled 'Compiled Speeches of the Second Agricultural Conference on Collectivism.'\"\n\nAmateur. Still, nobody would voluntarily read that, maybe he'd chosen a better place than I thought, at least against casual discovery. I carefully pulled the volume down and carried it over to the desk, keeping the gun on him. My right hand hurt from the weight of the book, but better a little pain than the chance he might rush me. It only took a few seconds to confirm it was what I was looking for.\n\nI walked over to the other side of the desk. \"Just one more question and I will get out of here.\"\n\nHe glared at me sullenly. \"What is it?\"\n\n\"Did you 'sample' the women Lavretiy Beria had you kidnap for him when you were his bodyguard? Vadim thought you did.\"\n\nHis eyes widened in panic, but he couldn't even get out of the chair before I fired into his temple. The shot echoed through the Embassy.\n\nI dropped my Tokerav into his lap and pulled the Nagant out of my waistband. The door was closed, but not soundproofed. I had a little time before they figured out where the shot had come from; just how much depended on how willing Ekaterina was to volunteer what she'd seen.\n\nWhatever time I had, it would be enough. I picked up the dossier and headed over to his fireplace.\n\n###\n\nI looked up from tossing the last page of the dossier into the fireplace as the door opened. The Rezident stood in the doorway, holding a piece of paper up, a glint of amusement in his eyes. A message returned from his headquarters no doubt; he had his own communications room, his own radios. \"The Police report on the missing wife. Major Natalya Kornilov. Natalya Oksana Kornilov. Married name Beria, as in 'Oksana Beria.'\"",
        "Colonel Ivanov stood behind him, grimly eyeing the dead Political Attach\u00e9.\n\nTossing the last page of the dossier into the fire, I picked the Nagant back up from the floor next to me. \"A sham marriage. Uncle Nikita arranged it. He thought I needed more protection from the criminal organizations he'd sent me after, and the link to Beria would make anyone think twice. He also figured that if I was married to Vadim, Lavrentiy Beria would leave me alone. In return, with Vadim married to me, Stalin would ignore rumors of his fondness for men. Vadim liked big rough men, usually several at a time.\"\n\n\"And you agreed to this?\"\n\n\"It gave some protection to me and Roza for almost five years. He wanted nothing from us, other than to act as masks. We were content to live in our own part of the house, while I pursued my job.\"\n\n\"Roza?\"\n\n\"My daughter. She's ten.\" A hint of my rage slipped into my voice.\n\n\"Not Vadim's daughter then?\" The Rezident and the Colonel moved into the room, watching me carefully.\n\n\"Hardly, I don't think he could have done it with a woman if he tried. My Roza is the reason Vadim is dead. I found out he promised her to his uncle. Everybody knows about Lavrentiy Beria. Fucking murderous rapist bastard.\" I could see the Ambassador peering in around the edge of the door, with a wide-eyed Ekaterina peeking past him.\n\nThe Rezident looked down at his feet. \"One hears things.\"\n\n\"That he kidnaps women off the street, rapes them, and if they fight, he kills them? Because that is what he does.\" My voice started to raise slightly and my lip curled. \"After Stalin's death, he's gotten bolder, now he's taking random women right off the street in daylight, sometimes away from their husbands' sides. Vadim decided he would give Roza to him, so the monster could flaunt it at Uncle Nikita. He always treated her like a granddaughter and Beria knew that.\"\n\n\"And?\" He spoke softly.\n\n\"And Vadim miscalculated. He always thought the stories about me at Stalingrad were trumped up for propaganda.\" I laughed softly, remembering the shock on Vadim's face when he realized why I insisted on keeping my driver, even though he had to be the worst driver in the Oblast. Vadim's big rough friends were used to bullying and beating much softer people than Timur and me. Zampolit Pavov could have told him about that; unfortunately for him, Pavov had run into Timur in East Prussia near the end of the war. Unhappily for Pavov, there hadn't been any witnesses. Equally unhappy for Vadim, he'd had no witnesses available, either. \"He found out that the stories had been softened, so that I'd seem less brutal.\"\n\n\"You killed him.\" The Rezident was simply stating a fact, there was no accusing tone.\n\n\"The fire killed him, but I'm sure he was very glad when it finally did.\"\n\n\"What about your daughter?\" He sounded genuinely curious.\n\n\"She is safe, where nobody will ever reach her.\" I thought back to taking her to the train before leaving for Ankara. I remembered putting the chain with its priceless little token around her neck, leaving her with Tania. Tania had, in fact, proved to be a wonderful aid to the Regimental Commander, so much so that he married her. Now, as the wife of the Ambassador to Italy, nobody would ever even think to ask why she'd had a ten-year-old niece traveling with her.\n\n\"So why are you here, what it this about?\" He eyed the fireplace.\n\n\"One last favor for Uncle Nikita. A dossier of letters and orders used to blackmail Molotov and Malenkov into supporting Beria's play for power.\" I caught the Colonel's eye and knew that Molotov would know of the dossier's demise quite soon. There was no doubt about the Ambassador contacting Malenkov. \"The Zampolit...\" I spit on his corpse. \"... used to be one of Beria's bodyguards. Beria gave him the dossier to keep here, where nobody would find it.\"\n\n\"How did you know where it was?\"\n\n\"I questioned Vadim for a very long time. He was very forthcoming towards the end. As I said, he was looking forward to the fire. I am absolutely certain he just didn't know who the man here was. I had to use myself as bait and draw him out.\"\n\n\"Now what? You were married to Beria's nephew, so Khrushchev's supporters will still want your head if he succeeds in unseating Beria. Molotov and Malenkov will never believe you didn't read the dossier. And if, Saints forbid, Beria succeeds, he will...\" The Rezident shrugged helplessly.\n\n\"I'm dead. I died in the fire, along with my daughter. There will be bodies found in the basement eventually. I put the bodies of two flu victims down there. There are advantages to being an operativnik. Uncle Nikita will ensure they keep digging until the bodies turn up. I'm sending him one last message, then I disappear from here and nobody will ever look for me.\"\n\n\"Leaving me with a dead Political Attach\u00e9.\" The Rezident really was an intelligent man, I could see he'd already figured out that no good would come of trying to stop me from leaving. In fact, it'd be best for everyone at the Embassy if I'd never been known to be here at all.\n\n\"You wouldn't be a very good 'Cultural Attach\u00e9' if you couldn't handle a single body, would you? Do whatever you want, I'd claim it as a suicide myself; politics is so stressful these days. Delay reporting it for as long as you can, I think it would best for everyone if Beria was the last to find out his dossier was gone.\" I glanced at my handiwork. \"Don't worry; they'll send another. Political Officers multiply like lice.\"\n\nHe smiled slightly and didn't block my path as I headed out the door.\n\nWest Germany. Somewhere in the Schwarzwald: 3 May 1953\n\nI slipped out of the hired car and began to walk up the lane towards the large stone manor-house. On either side, for as far as I could see, were cherry trees in full blossom, the pink-white petals carpeting the ground and filling the trees. I'd dreamt of it for so very long, but my imagination had fallen so very short of the breathtaking spectacle. I walked on, taking in the unbelievable beauty. I watched the front door of the manor-house open and a figure peered out, then turned and shouted into the house excitedly.\n\nA moment later the door opened fully, and they started down the steps, hand in hand. She tugged at him to go faster and he smiled down at her fondly.\n\nWhen they reached me, Kurt and our daughter pulled me into an embrace.\n\nStill wearing the German ID tag around her neck, my tall blonde daughter made a mock angry face, her laughing blue eyes putting the lie to her stern voice. \"Mother. Father and I have been waiting forever for you to get here.\"\n\n<p align=\"center\">Aus die Maus\n\nGame Over</p>\n\nStalingrad. 24 December 1942\n\nTruck Factory Basement \n\nI lay completely still, feeling something I couldn't ever remember feeling before. I could barely remember the word for it. \n\nWarm. \n\nI was warm. Only my face felt any cold at all, and even that was not so bad. My feet were warm, and I couldn't even think of when that had ever been a logical idea. I didn't just feel cold; I'd been made of cold, a thing of dark and ice and frost. I remembered what happened and wondered, if maybe, just maybe, this was death. I almost laughed; I'd hidden from death for so long, feared it, fought it, and struggled endlessly against it; here, it was warm and wonderful. \n\nThe darkness was so complete, so total that even I, a part of it, couldn't see. The only sensations were warmth and a comforting pressure across my ribs, holding me back against...\n\nI screamed inside, but the noise stayed there. Noise was death and I wasn't dead, not at all. I tried to fight free, and the comforting pressure turned to a steel band, pinning me.\n\n\"Mausi. Shhhhh. Shhhhh. Mausi, I won't hurt you in any way. I promise.\" He let his arm relax just a bit, but left it here to make sure I knew not to try to bolt away. \n\nI stayed silent and held very still, waiting for my chance. My white winter over suit, my quilted jacket and quilted pants were gone, my thick felt valenki boots and socks were off, but he'd left my winter underclothes on\u2014the long wool shirt and pants\u2014and he'd left me my fur lined cap. That had to mean something. He must have had plenty of time to do anything he wanted, but he'd left those on me, then covered us with something. Blankets, thick wool blankets, probably from my sleeping nest, my quilted jacket on top of that. My hand had pushed out of our coverings and found the cold again. I pulled it back, involuntarily. A small dark part of me screamed in horror at my retreat from the familiar hardening cold, but another part reveled in the warmth. \n\n\"Our fight is over, Mausi. Our war is over. We died here in Stalingrad.\" His voice was sad and bemused. He took his hand away, and a moment later reached it out of our covers and flicked a tiny flame into existence. \n\nI felt myself sink back against him. There was no point in fighting, there was nowhere to go. We were in a space not much bigger than the two of us. If he'd have let me go, I'd probably have knocked myself out on the stone not even three feet overhead. A massive chunk of the stone slab had fallen, sealing us in a corner, trapping us together forever. He flicked the lighter shut.\n\n\"I don't want to do that too much. I don't know if we have any air coming in or not, but it probably won't be enough.\" He put the lighter away and put his arm back around me. Somehow that helped push back the sick terror of entombment. \n\nI pulled a breath in. \"How do you speak Russian?\" Even to me, my voice was soft and ghostly. I could feel a shock pass through him, as if he didn't realize I might be able to speak.\n\n\"My family had a nurse for the children. She was from Kaliningrad and she taught all of us children to speak Russian.\"\n\n\"A servant? A nurse?\" I tried to picture it. I'd grown up with dirt floors and barely any food. We may have had a White Russian family name, but we'd never been a wealthy family.\n\n\"My family is a Junker family, landed nobles of a sort; we had an estate. We had a... place to make liquor. We grew cherries and turned them into a liquor called Kirschwasser. In the Schwarzwald, the Black Forest. Our nurse was one of the orchard workers' wives.\" He seemed to settle in a bit more. \n\nWe just lay there for a few minutes. \"Why didn't you kill me?\"\n\nHe laughed. I couldn't remember ever hearing anyone laugh out loud like that. \"I tried, Mausi. I tried everything. I tried shooting you, blowing you up, stabbing you. It's just not meant to be.\"\n\nI tried not to smile, but with his mock frustration, the humor in his voice was contagious. \"It's been tried a lot.\"\n\n\"My machinegun jammed...\"\n\nI stifled a giggle, then tried to figure out was wrong with me. It had to be all the excessive warmth making my thoughts fuzzy and soft. \"It's the stick magazines on your MP-40s, they aren't right for this. They catch on rubble and cause feed jams. The drum magazines we use are better.\"\n\n\"Yes. I didn't exactly have time to fix that. Somebody...\" I knew he was smiling ruefully just from the tone in his voice. \"... threw a grenade and I kicked it away.\" That explained why the explosion hadn't killed us both. He paused. \"How did you avoid the mine?\"\n\n\"The air from the vent felt wrong, and I smelled the wire; they smell different when they are new.\"\n\nHe shifted. \"My God, How long have you been down here?\"\n\nI tried to think of a time when I hadn't been. Everything from before just seemed so unreal. \"Forever. Maybe.\"\n\nHe fumbled behind him for second, then pressed something into my hand. It was a knife handle, with the blade broken off neatly at the guard. \"Last thing I tried. The blade caught in the cooling vents of your damn gun. Snapped off.\" He laughed again. \"Then I used the lighter when I realized you were unconscious...\" His voice trailed off abruptly.\n\n\"And you found out I'm a girl.\"\n\n\"You looked so harmless and innocent. I couldn't do it. When I took your coat off you, I found your collection of tags, so I know you're not really harmless, but I... I just couldn't. I'm just tired of it, tired of the fighting, tired of this horrible 'Rattenkrieg.' Besides, there's no point now. We'll both be dead soon enough. I didn't know whether you would ever wake up, and you seemed so cold, like you were made of ice. I thought, maybe, at least you could be warm for a little while.\"\n\nI pulled the blankets a little higher up. \"I don't remember the last time I was actually warm like this.\" \n\n\"It's Christmas Eve, anyway. I couldn't kill you on Christmas Eve.\" He reached up and tucked a corner of the top blanket a little tighter around us. \"My father was in the Great War, and on Christmas one year, I think it was 1914, his unit decided to have a truce with the British. They shared food, played games and gave gifts to each other. He still has a lighter that a British soldier gave him. Of course, the next year the British launched massive attacks just to keep it from happening again. Not a very sentimental people, the British.\"\n\n\"We didn't have Christmas for a long time. Since the Revolution I think, but a few years ago, it was allowed again, although they don't say Christmas. My mother was so happy.\" For some reason, sharing that made me feel better, as if life wasn't quite over.\n\nWe just lay there for hours. Sometimes silently, sometimes, hesitantly, we talked, off and on. We talked about growing up, we talked about our families. Neither of us believed in any of the causes that had brought on the war. I'd just wanted to teach children, he'd just wanted to grow his cherries and make his brandy, as his father and grandfather had.\n\nWe talked about the pointlessness of it all. He'd been fighting for almost three years already, and his exhaustion was obvious.\n\n\"This fight is almost over, anyway. We've lost here.\" He mused. \"6<sup>th</sup> Army is doomed; we all know it. Fucking Luftwaffe failed us. The food and ammo are almost gone. The only ones getting out of here are the wounded, not even most of them.\" \n\nI nodded, then realized he couldn't see. \"More and more of our people are arriving every day, more and more tanks and guns.\"\n\n\"Then why are you out here alone?\"\n\nI wasn't sure I could explain that, I told him about the Scout Platoon disappearing while I was out, about Zampolit Pavov and his hatred of me. \"Maybe I just belong here. Sometimes it feels that way.\"\n\nWe wound down a bit and I was shocked to realize that not only was his arm still around me, I was holding it there.\n\nHe fumbled behind him again. He held something up that had a thin line of yellow light. A watch that was somehow glowing. \"It's midnight. Merry Christmas, Mausi.\" \n\n\"No it isn't, Christmas is weeks away.\" I stopped. \"I think.\" I wasn't even sure what day it was anyway.\n\n\"It's December 25<sup>th</sup>... oh, that's right, you do the Eastern Tradition, seventh of January, right?\" I felt a little of the cheer go out of him and I hated it. Somehow his good humor made our shared fate tolerable.\n\n\"No. Today is Christmas.\" I pulled my jacket down and searched the pockets until I found my last chunk of black bread. \"We can have Christmas dinner.\" I tore it in two and pushed a piece into his hand. \n\n\"Wait.\" He gave me a very slight squeeze that left me somehow breathless in a way that had nothing to do with air, then rummaged through something behind him. \"I forgot, I have... Bergk\u00e4se cheese... Schwarzwurst, blood sausage... and if that grenade didn't break it...\" He gave a short victorious bark of a laugh. \"Kirschwasser!\"\n\nHe had a small folding knife he used to cut the sausage and cheese into slices. With no light I couldn't be sure but, I suspected he gave me a little more food than he kept. We both ate hungrily.\n\nHe pulled himself up into a half sitting position and I just seemed to naturally fold against him. For a moment he lit the tiny flame again and handed me a bottle, it had a gold label with a stylized fox, bowing respectfully. \"The fox is our namesake. This is Kirschwasser. It's pretty strong, and it's usually pretty harsh, but this is some of my family reserve. It's almost twenty years old, and it's been stored in wooden barrels.\"\n\nI took a slow sip. It had a wonderful flavor, and I could feel heat spread through me from it in a delightful warming sensation. \"That is delicious. It is nowhere near as strong as vodka.\" \n\nI pushed it back into his hand and he took a sip as well. \"It tastes like home.\"\n\n\"Your home must be amazing.\"\n\n\"Sometimes. Especially in the spring, I think. As April turns to May, the cherry trees bloom and the whole world turns pink and white.\"\n\n\"I'd love to see that.\" I meant it.\n\nThere was a long silence while we passed the drink back and forth. \"I wish you could, Mausi. I wish we'd met some other place and time.\"\n\n\"A nobleman meet a peasant girl? Just where would you meet a peasant girl?\"\n\nHe gave me a slight squeeze. \"In the spring there are dances. Everybody goes, even peasant girls. I'd ask you to dance.\"\n\n\"I don't know how to dance, and my feet are too big.\"\n\nHe laughed. \"I took off your boots, remember? Your feet are not too big, but they were very cold.\"\n\nI pressed the soles of my feet down on the tops of his, enjoying the warmth. \"I still don't know how to dance. I never learned.\"\n\n\"I would teach you. The waltz first, I think. It is easy to learn and very graceful.\"\n\nI nestled back against him a little, trying to picture it. \"Under the cherry trees?\"\n\n\"Under the cherry trees. You would outshine all the other girls, like a star. I would almost certainly try to steal a kiss, and you would probably slap me.\"\n\nI laughed. It sounded so light and easy, so unlike what I was; what, at least, I thought I was. \"Maybe I wouldn't slap you.\" I twisted around until I was on top of him, facing him nose to nose. \"You wouldn't know for certain until you tried.\"\n\nHe tasted of Kirschwasser, cheese, sausage and black bread, the same as I did. I began to fumble with his shirt, looking for more warmth, the warmth of a kind that went far beyond temperature. We found that warmth together.\n\nHours later, we lay pressed together, warm skin to warm skin. There were rumblings of artillery coming through the rock, muffled but clear, the sound of a battle. The air was growing much thicker around us, I could feel it and I could tell it wouldn't be long. We'd suffocate before we froze or starved, and for that, I was glad. We'd simply fall asleep together and never wake up. \n\n\"I wonder what they will think.\"\n\n\"Who?\" He shifted.\n\n\"Someday, somebody will clear all the rubble to build something new. I wonder what they will think when they find us.\" \n\n\"They'll find a man and a woman together. They won't know who we are.\"\n\nI tried to focus; I was getting so very sleepy. \"What if they did? What if they found a Russian and a German holding each other in the ruins, maybe it would mean something to somebody.\"\n\n\"Maybe. I think I'd like that.\" \n\nI shifted and began pulling our uniforms together. \"If we are in uniform, they can't ignore it.\"",
        "I hated to lose the warmth, but this felt important to me, and to him. It was a symbol of something, for somebody, someday. We pulled our clothes on and hung our weapons from our shoulders to show that we were together of our own will. He hung his ID tag around my neck insisting that they could not ignore that. We lay back down, listening to the distant sounds of battle. \n\nJust as I felt the last sleep begin to take hold, the sky tore open and rock and rubble tumbled and flowed like a deluge of water.\n\nAn artillery round, whether Russian or German, I'd never know, must have hit just right, thrown that slab away. In the sudden dust filled twilight I could see his boots sticking out and I began to scrabble at the rock, as quickly as I could. My right hand wasn't working right, and I knew not to look at it. I could see the smears of dark blood on the rock as I uncovered him, expecting the worst. \n\nIt wasn't as bad as I feared; he was alive, but a section of steel bar had pierced his right arm and pinned it to his chest through the lung. He was gasping wide-eyed, trying to pull free.\n\nI started to try to free him and he caught my left hand with his. \"Natalya, run. Now, run to your lines!\"\n\nGerman voices were approaching, a squad of infantry assaulting forward. \n\n\"They'll pull me out, but you...\"\n\nHe didn't have to finish, I knew what would happen to me. I still would have stayed with him, but my Kurt pushed me away. \"Mausi. Run for me. Please.\" \n\n West Germany. Somewhere in the Schwarzwald: 3 May 1953\n\nLate in the evening, our daughter suddenly announced she was tired and needed to go to bed, although the look she gave me made it very clear that she wasn't tired at all.\n\nKurt pulled a bottle of Kirschwasser out of a cabinet and poured two small glasses. He sat next to me on the settee and smiled. \"Ten years. It feels as if it just happened.\"\n\nI took the bottle from the table and looked at it. \"I knew, once I saw the label. I knew you were waiting.\"\n\n\"I was hoping that you were alive and that somehow, someday, you would see it.\"\n\nI smiled at him. \"My friend Tania saw it and brought me the label last year. The Kirschwasser was in a store in Rome. She's the only one I ever told what happened, aside from Roza. Tania is the only one that ever asked why my daughter would be so tall and blonde and have such blue eyes.\"\n\n\"She looked for it?\"\n\n\"Tania found it on accident, but once she did, she knew you were alive and she looked until she found out everything she could about you. She found out that you were evacuated before the last airfield was overrun.\" I paused, taking a slight breath. \"She found out that you were alone. She's terribly romantic and sentimental, and she wanted to pay me back for helping her when she needed it a long time ago.\"\n\n\"I only talked to her for a little while, when she brought Roza to me and explained your plan, but I could see how important this was to her.\"\n\n\"We have a lot of time to make up, but we have the rest of our lives to do it.\" I knew it would work, I'd known it from the first time I'd seen the label.\n\nIt was beautiful, gold leaf with the stylized figures of a fox and a mouse dancing together beneath the blossoming branches of a cherry tree.\n\nEpilogue\n\nThe struggle for control of the Soviet Union continued. Initially, Beria had the support of Molotov and Malenkov, but in a stunning development, on 26 June 1953, Beria was denounced by Khrushchev in a meeting of the Presidium and arrested by Deputy Defense Minister Marshal Georgy Zhukov himself, with no opposition from Molotov or Malenkov. Marshal Zhukov's participation was a clear warning to the State Security forces and it was heeded. Beria was on his own. \n\n During his trial in December of that year, he insisted that many of the treasonous and terrorist acts he was accused of were ordered by Molotov and Malenkov, but no evidence of those orders was ever found.\n\nAlso, during the trial, he was accused of multiple counts of kidnapping, rape, and murder of young women, charges that were similar to charges levied in other show trials.\n\nWestern Historians tended to discount those charges as typical spurious charges used to dehumanize the defendant. Beria was often praised for attempting Western style reforms of the Soviet system. In the mid-1990s, workers on the grounds of the Tunisian Embassy in Moscow, formerly the residence of Lavrentiy Beria, turned up the remains of several young women and teenage girls.\n\nOn 23 December 1953, Lavrentiy Beria died with no dignity, on his knees, pleading for his life. A rag had to be stuffed in his mouth to stop his begging.\n\nMilitsiya Major Natalya Oksana Kornilov was posthumously awarded the Order of Lenin for her bravery in fighting the criminal organizations that eventually killed her and her daughter. The ceremony was overseen by Nikita Khrushchev himself. This added another honor to her previous awards: Hero of the Soviet Union, Orders of Glory first and Second Class, Medal for Courage, Order of the Red Banner, Order of the Patriotic War (1<sup>st</sup> class), Defense of Stalingrad. \n\nWhile the brave police detective and Hero of Stalingrad was quickly forgotten by most, she would always be remembered in one manor-house, in a remote part of the Black Forest.\n\nStalingrad \n\nStalingrad is believed to be the largest single battle in all of human history, lasting nearly 200 days with a combined casualty count of over 2 million military and civilians. It demonstrated an unbelievable level of sheer tenacity and will for both the Red Army and the Wehrmacht under absolutely brutal conditions. \n\nOver 75,000 women took part in the battle as combatants or military direct support personnel: scouts, snipers, anti-aircraft gunners, and machine gunners as well as tank commanders and drivers. Three Soviet Regiments were entirely female.\n\nThe Armory\n\nNagant M1895 - Very hardy revolver, one of few revolvers that can actually be used with a silencer. Soviet Union.\n\nPPSh-41 Submachine gun aka \"Papashar\" aka \"Daddy.\" 800-1000 RPM. Soviet Union.\n\nM1939 - 37mm anti-aircraft gun. Soviet Union.\n\nMosin-Nagant -- Main battle rifle and sniper rifle. Soviet Union.\n\nMP-40 Submachine gun. 500-550 RPM. Wehrmacht.\n\nRPG-40 anti-tank grenade. Not a rocket propelled grenade despite the nomenclature. Soviet Union.\n\nTokerov TT-33 -- Automatic pistol. The replacement for the Nagant and the service sidearm for the Militsya. Soviet Union.\n\nTM-35 Anti-tank mine (square, 4 KG of explosive just under 12 pounds total weight) Soviet Union.\n\nPost Production Notes:\n\nThe historical portion of this is as accurate as I could make it: the 1077<sup>th</sup> fought hard but was overrun in the end; the 6<sup>th</sup> Army was encircled and destroyed, only about 6,000 men out of 90,000 captured making it back from brutal imprisonment in Russia. The conditions of combat in Stalingrad were unspeakable by any standard.\n\nThe daughter, Roza, is named after Roza Shanina, a Russian Sniper who died Prussia in 1945. A former kindergarten teacher, Roza volunteered for service after the death of her brother; she had 59 confirmed kills.\n\nThe nickname \"Maus\" is a respectful nod to Nancy Wake, New Zealand-born French Resistance fighter and SOE agent. The Gestapo's code name for her was \"The White Mouse.\"\n\nThe cheap Kirschwasser brands widely available in the U.S. are, frankly, awful. The flavor profile is lighter fluid and cherry lifesavers. Aged in wooden barrels for a few years and allowed to breath, it is a completely different drink.\n\nSpecial Thanks:\n\nSpecial thanks to blackrandi for top-of-the-mark line and content editing on this story; to sbrooks103x for amazing line editing and beta reading, and to BeBop3 for beta reading. Stev2244's assistance was absolutely priceless on language, culture and some critical plot points. There are others who contributed ideas and discussion: Thank you to all of you. Any errors are entirely mine - probably added after their assistance. \n\nAs always, I need to mention my wife. I've wanted to do a piece with Stalingrad as a backdrop for a while and, happily, The Missus was able to come up with a magnificent plot to work with. Any failures of execution are obviously mine.  "
    ],
    "authorname": "Todd172",
    "tags": [
        "romance",
        "magical mystery tour",
        "war",
        "drama",
        "russia",
        "ankara",
        "stalingrad",
        "violent"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/mausefalle"
}