{
    "title": "Bigger Down There Ch. 07",
    "pages": [
        "After the session we had indulged in a weekend or two before, the notion of a wet room seemed to take on a momentum all of its own. We seemed to be drifting towards more piss play, and each time we did it, Helen would start to push me a little further as to where her mind was.\n\n\"Wouldn't it be lovely to just be able to stand and wee whenever we felt like it, without having to worry about carpets or being restricted to the bath,\" Helen would say, usually when we were well into a session. \"We'd have so much more room, and wouldn't have to be so restrained \u2013 that bath is pretty small when it comes to our playtime.\"\n\nI must admit, it was becoming more appealing, and Helen also had this idea of having several shower heads at both head height and at torso height. The bathroom wasn't huge, but we had actually started to sketch out some designs as to where to locate the showers, with the hardest bit trying to decide whether they should be opposite each other, or side by side. In the end, we had the thought of doing away with the torso height ones, and having four heads, sort of in a square arrangement so that we could use them however the mood would take us at the time. \n\nThere was no getting away from the fact that a wet room had enormous potential for us, but there was the small matter of how to pay for it. Neither of us had independent means \u2013 we had enough to live relatively comfortably but there wasn't much money left at the end of the month, and I wasn't really earning as technically, I was still a student. \n\nIn the end, Helen approached a friend at work whose husband was a kitchen / bathroom fitter and plumber, and she borrowed some money on the mortgage, so within about four months of the idea first coming up, the conversion was in progress. \n\nIt was actually turning me on just thinking about the possibilities that this was going to create. For some inexplicable reason, it had taken my mind back to that very first glimpse of Helen's spectacular cunt when I had seen her on the toilet after rushing in late one evening while I had been in the shower. I don't think, even after seeing her on that original occasion, and the rush that it gave me (I recall jilling myself off repeatedly to the vision that I had seen) that I had ever expected that it would lead to the sexually charged and fulfilling relationship that we now had. Moreover, it had become so much more. I loved Helen with a passion that I would have never thought possible, and we were living a rather deviant lifestyle that deep down, I think I was always destined for.\n\nDespite all that, I wanted more. Ever since Helen had mentioned that she was greatly inspired by the idea of tit milk, I was trying desperately hard to think of a way that I could make this happen for her. It would be massively erotic seeing her do it, but as yet I did not have a single clue as to how to set about it.\n\nIn the interim, there were plenty more things to indulge in. I was getting more and more interested in Helen's ass, and this was featuring to a much greater extent in our sexual pleasure. Recalling that night when Helen had come clean on her deepest fetishes, I was also getting ever more vocal both by way of build-up to, and indulgence in our sessions. \n\nI would wait until we were washing up, or watching television and start to say things like, \"I think we'll give your ass a workout tonight.\" \n\n\"What are you going to do to me,\" Helen would ask. \n\n\"Well your back hole is really quite tight. We've got to get you loosened up so that you can be fisted properly.\"\n\n\"Why?\"\n\n\"Because you love it, you dirty bitch. You want to have your lesbian ass filled with my arm, don't you my gorgeous mummy fuck slut.\"\n\n\"If I was your Mummy, would you still want to fist my holes darling?\"\n\n\"Fuck yes. You want to be fucked by your girls don't you . . . Mum?\"\n\nI could sometimes see the wheels going round in Helen's brain. After a few minutes of seeming to mull it over, Helen looked at me in a very strange way.\n\n\"I know I shouldn't, but I crave it. I want you and Sam to do everything to me. I want Sam to do what you do. I would let her do anything to me.\"\n\n\"Anything,\" I asked.\n\n\"Anything, especially if you were doing it together. And I don't mind if you want to call me Mum as well. In fact I'd quite like it.\"\n\n\"Thanks Mum, I'm so turned on, obsessed even, by your big Mummy cunt.\"\n\n\"When's Sam home next,\" I wanted to know. \n\n\"In a couple of weeks when the term ends. Why?\"\n\n\"Because I'm going to ask her if she'd like to fist your cunt while I do your ass.\"\n\nHelen was getting visibly wet. \n\n\"And I'm going to ask her if she would like to pee on you, perhaps while she's reaming out your cunt with her hand.\"\n\nThis was definitely having the desired effect.\n\nMy own mind was getting into overdrive, but Helen was practically squirming. \n\nI crawled over to where Helen was slouched on the sofa. I lifted one of her legs over the arm of the sofa, and moved her other leg so that her knee was fully bent with her foot on the seat cushion. \n\nI started with a good tongue lashing before slipping my hand fully into her gargantuan hole. It went in with ease and once it was fully in, I began licking between my wrist and her meaty lips, periodically slavering at her clit with my tongue. \n\n\"It's Sam's hand you want up here isn't it,\" I goaded. Helen simply nodded. \n\n\"With your other daughters hand here,\" I whispered, using the fingers of my free hand to tease her butt. \n\n\"Shit, you are going to make me come before I'm ready,\" she gasped.\n\n\"Tell me what you want.\"\n\n\"You two, my girls, in my holes. Please, just do me. Bring me off; I'm so close.\"\n\nI pulled my hand out. \"No, I think you need to wait a bit. It's too early for you to cum.\"\n\n\"Oh fuck. I need to fucking cum.\"\n\n\"Not yet. Later!\" I promised\n\n\"How can you do this to your Mum? I'm going to make you pay.\"\n\nShe stood up, and lifted me, at the same time almost pushing me back into the armchair that I had been sat in earlier, and positioned my legs over each arm.\n\nHelen started by gently slapping my cunt which had the effect of bringing my clit to full attention. \n\n\"You're going to get it hard now. You're going to take my hand whether it goes in easily or not, you naughty girl.\"\n\nHelen was as good as her word, and started with all four fingers. She pistoned them in and out for a good five or ten minutes, periodically brushing my fully extended clit and intermittently tweaking my nipples. \n\n\"I want to taste Sam's juice next time she comes home,\" I managed to get out. \n\n\"Oh yeah, she has a lot, doesn't she.\" \n\n\"She gets even wetter when she's watching us. I want to slurp some of that up. I might even share some of it with you if you're up for it.\"\n\n\"You wouldn't let me cum, and now you start teasing me like this, Helen groaned. \n\nI sensed that her full hand was about to enter me. I felt that delicious second of pain / pleasure as the widest part of her hand pushed past the elastic collar of my, and started to enjoy the immensely pleasurable thrill of my nicely full cunt being fisted. \n\nSuddenly, Helen slowed right down, presumably to get me back for denying her orgasm. I wasn't about to let her get away so easily, and took her wrist and fought a light hearted battle as she tried to resist my efforts to pull her into me. \n\nI knew what would do it. \"Am I getting looser for you?\" I asked.\n\n\"You should be,\" she replied, \"the amount of fisting we've been doing on you.\" You'll be ready to take some more soon, ready to step up a gear. Perhaps we need to see how many of Sam's fingers you can take alongside mine.\"\n\nI came in a rush, and although it wasn't a colossal orgasm by some of our standards, it was on my personal Richter scale. I got Helen to leave her hand in me for a little bit longer, and when she eventually pulled it out, there was a very satisfying amount of girl jizz in me.\n\nI promised Helen that I would make it up to her when we went to bed, and I was as good as my word. I used my fingers in both her holes and used plenty of very graphic references to Louisa's shockingly huge hole. I held back several times as she was getting close to the brink, and when I thought that she wouldn't be able to go much longer without cumming, I really went for it, and it was a biggie!\n\nWe were already upstairs, and I was in the mood to talk, so I got Helen to stay on the bed, but with her back against the headboard, and I sat cross legged in front of her so that I could feast my eyes on her delightful gape. \n\n\"Do you think Sam has a girlfriend?\" I enquired.\n\n\"I'm not sure,\" Helen replied. She's never mentioned one, and I'm very confident that she wouldn't have a boyfriend \u2013 I think she's one of us, in fact I more than certain that she's one of us.\" \"But I can't imagine that she spends all her evenings on her own. \n\n\"If she did have one, do you think she'd tell us?\" I asked.\n\n\"There's no reason why she shouldn't. I mean, we'd want to meet her would we?\" We'd be gentle with her!\"\n\n\"I love how wet she gets. I mean her cream just leaks out of her so much\" I said, continuing my earlier theme. I not really sure why I said it, or even what kind of response I was expecting.\"\n\n\"I know,\" Helen replied. She's always been like that, and I know how much it turns you on. Hell, it turns me on as well, and you're right \u2013 I have noticed that the more we do with each other, the more she creams up. We need to think up something that will really get her juices flowing.\"\n\n\"I want to taste it,\" I ventured. \"I mean, really lap it up, get it all over my face.\"\n\n\"Oh fuck, you slutty bitch, you're getting me going again now.\" Helen moaned. \"How about if I position her over your face next time she's here, and I'll lick it off you, or maybe even get Sam to lick it off you.\"\n\n\"Oh shit, I'm going to have to cum again. I can't go to sleep like this.\"\n\n\"Here, said Helen, I'll give you something to get you off.\"\n\nShe got to her feet, and went and stood at the end of the bed. Helen beckoned me to come closer, and I shuffled up the bed towards its end. I had resumed my cross legged stance, and as a result, my cunt was well splayed open. Helen reached in and scooped some of my jizz out with two or three of her fingers, and started wiping it over her oozing fuck slot.\n\nAs she moved, I suddenly comprehended what she was about to do. She positioned herself directly over the bed knob nearest me and started to lower herself very slowly onto it, adjusting herself several times to get herself perfectly poised. \n\n\"Oh my fucking God,\" I managed to get out. I became transfixed as Helen lowered onto, worked that massive knob into her capacious mummy sized cunt. \n\nBecause she was standing, and because of the size of the knob, it had the effect of completely exposing her clitoris which was jutting out from the top of her gash much more than usual, almost like a micro penis.\n\nThe temptation to lean forward and take it into my mouth was too much, although it was easier said than done because Helen was slowly moving up and down over the giant and bulbous protrusion. Her silky juice was trickling out of her cunt quite copiously and there were rivulets spilling over the phallic bed knob.\n\n\"Do you want your girly cunt to be stretched out enough to do this,\" Helen grunted. \"Tell me you do, tell me how much you want to be permanently stretched.\"\n\n\"I want to be able to take all that and more. Both of your hands as a minimum. I want the biggest cunt you have set eyes on. I want to be able to shock people with the size of my hole, I want to be able to take anything.\"\n\nWatching Helen fuck her bedpost was gorgeously slutty and depraved, and I was close to cumming when a new and even more wanton image emerged in my mind. I eased myself up and grabbed one of the little jars of lube from the draw. \n\nI went behind Helen, and started to wipe the slippery lube in and around her back hole. \n\n\"You want me to sink this big fucking knob in my arse?\" Helen questioned.\n\n\"If you think you can take it . . . .\" I was almost goading her! \n\n\"You're so fucking naughty Andrea,\" Helen said. \"What are we going to do with you?\"\n\n\"You can do anything you like with me, you know that,\" I teased.\n\nI watched, absolutely hypnotised as Helen lifted herself off the bedpost with a very satisfying slurp from her beautiful cunt, and began to line her ass up over the tip of the bed post. The post itself was a real mess from all the cunt juice that had gotten over it, but this in turn meant that it was already nice and slippery.\n\nOnce it was a little way into her very accommodating ass, I returned to the bed and was greeted by the massively erotic sight of Helen's ass stretched round the post, and her empty but gaping vagina on full view.\n\nI inserted three of my fingers into her spectacularly aroused, and well used womanly hole, and used my thumb to put some pressure on her clit. \n\nWith a torrent of explicit language, Helen came quickly and wildly. Her whitish messy sap was everywhere, and as soon as she was off the knob, I began to tongue up the residue, sharing some of it with her, mouth to mouth.\n\nI can remember going to sleep that night spooned with Helen, with one of my hands between her sloppy lips, and the other over one of her firm breasts.\n\nMost nights I wore the dildo pants, but I hadn't worn them since the bathroom had been finished. There were two things I liked about the dildo pants. The first was the pleasing sensation of my cunt being full overnight (and especially waking up like that), and second, the ritual of having them removed in the morning. I rarely got up to pee during the night when I was wearing them, but that meant that I was a bit more full in the morning. Up until now, Helen had usually helped me get the pants off in the bath, although once or twice we had done it with me standing over the toilet, but that could be quite messy.\n\nNow that the bathroom was finished, it needed christening. I chose the Monday night knowing that Helen would be on a late in the morning, and as it was a Tuesday, I would have no lectures in the morning either. I drank more water than usual, and feigned tiredness to avoid a heavy sex session as I knew that would make me want to wee.\n\nHowever, on the run up to 7 o'clock in the morning, I was bursting to go. Helen is a relatively early riser anyway, so I gave her a gentle shake and told her I needed her help to get my pants off. \n\nFor the first time, instead of having to stand at the end of the bath, I stood in the middle of our new bathroom with my feet about shoulder width apart. I suggested to Helen that it might be easier if she knelt down to pull the pants off.\n\nAs soon as the dildo was being slid out of my cunt, I knew it was never going to get fully out before I lost control. I was desperate, and the piss cascaded from my girl hole and all over Helen who was at about head height to my pee slot.\n\nIt went everywhere as the bulbous head of the dildo acted like a diffuser, and it sprayed over her hair, face, tits, and she just remained there and let it flow over for what seemed like at least a minute, but in reality was probably less. The super, and sexually arousing thing for me was that she used both hands to catch some of it and direct it over her naked body, and then decided to pay me back.\n\n\"Dirty girl, pissing all over Mummy like that. Lie down and take your punishment.\" \n\nI did as I was told, and Helen squatted and started to drench me. After a few seconds, she switched to a kneeling position, and because of where she was, her wee jetted straight onto my mound. When it hit my clit, it was like an electric shock, and once she had finished we sat on the tiled floor and wanked each other to a quick, but enormously lustful orgasm.\n\nThe post orgasm shower was the best ever. We had all four shower heads turned on, and derived immense please soaping and washing each other down. The luxury of all that space instead of being cramped under the shower above the bath was sheer decadence. Running my soaped-up hands over Helen's curves and letting them probe her holes in the pretence of keeping her clean was an aphrodisiac in itself, and I could imagine some very long showers coming in the future.\n\nSadly, I had to start preparing for Uni, and I knew that Helen had some chores to do before heading off to work, so eventually we had to abandon the shower and get on with our day.\n\nFor some reason, I spent the next week or ten days preoccupied about Sam getting home. I can't tell you what it was exactly, but I had this premonition that she was going to be very receptive to a greater level of involvement in our relationship. For me, and I suspect for Helen as well, it was the gratuitous nature of her of collusion that made us so wanton. I knew for sure that I didn't want any barriers, and I couldn't think of anything more exhilarating than fucking with my best friend, and my lover who just happened to be her Mum. I was on edge all week, and I let Helen be even more physical than usual with me in the intervening evenings.\n\nEvents contrived to make it difficult for Helen to pick her up from the Station when she got in, but I let Sam know that I would be there and that we would grab a drink and wait to be collected.\n\nHer arrival exceeded expectations! Sam looked incredible in a pair of sprayed on jeans and a tight fitting tee with no bra underneath. We flung our arms around each other and she gave me very passionate kiss. In fact she gave me lots of kisses, and I reciprocated wantonly. I felt her tits mashing against mine, almost nipple to nipple, and in mid hug, one of her hands crept between my bum cheeks, causing my hungry snatch to start juicing up. There was no pretence from either of us of this being a friendly, long lost friend hug. It was a full-on snog, and Sam was eagerly pressing her crotch to mine in full view of any onlookers.\n\nI needed to calm down. I reluctantly pulled away a little and hand in hand, we made our way to the nearby Henry's. I didn't know about Sam, but I needed a drink after that welcome. \n\nMy problem was, I couldn't keep my hands off her. Her lithe body was as sexy as hell and the way she was sitting, coupled with the frequent touches was causing my clit to do somersaults. \n\nWe were having a very intimate, and therefore whispered conversation. Sam wanted to know how much I was 'doing it' with her Mum, how my stretching was going, how often I was letting Helen fist me, and my panties were becoming drenched. It was a good thing that Helen arrived when she did because at least that allowed a diversion in the conversation, allowing me to reduce my blood pressure.\n\nTo cut a long story short, we ended back at the house at almost 8:00 in the evening with a Chinese takeaway. Helen and I had got changed into the customary hip length tee shirts, and Sam followed suit. We ate in the lounge and the whole time we were eating, Sam was deliberately putting her panty covered crotch on display. By the time we had finished, I couldn't take much more. \n\nI did something I had never done before, and got up and crossed to where Sam was sitting. I lifted her legs up from the ankles, and placed her legs over the armrests. Her panties were already virtually transparent from her wetness and I started to stroke her squished up cunt and clit through her panties. I used a gentle, teasing stroke, almost a caress. The more I stroked, the wetter she became, and her grool was seeping through the fine cotton material. I sank to my knees, and stretching the crotch of her sopping panties across her juiced up flaps, lazily worked my tongue around her pantie covered lips, occasionally probing into her girly slit. \n\nI hungrily sucked up the soaking gusset of Sam's panties and was savouring the trickle of sexy liquid that was emerging from her cunt. Without warning, what had been a steady drip suddenly became much more of a flow, and Sam was all of a sudden writhing about and pushing her cunt forcefully against my face. I glanced upwards in an attempt to find out what it was that had increased the flow and could see Helen standing behind the seat, but using her hands to massage Sam's tits and nipples through her tee shirt.",
        "The amount of cream that Sam was producing was too much for the crotch of her panties to contain, and it began to leech out from the sides of the gusset. I was in heaven, and my face was covered in her mess which was wickedly erotic. Sam started gasping and with a grunt, came. \n\nIt was the hardest I've ever seen the juice pump out of her, and I was on the receiving end of most of it. \"Fucking hell, you dirty fucker Andrea; Look what you've made me do,\" Sam shouted. \n\n\"You fucking love it Sam,\" I replied.\" \"I know I do . . . .\"\n\n\"I fucking love it,\" I heard from Helen. \"Who would have thought my lovely daughter could produce so much girl spunk.\" \n\n\"I would,\" I said. I've been watching how wet Sam gets for a long time and it's been turning me on like crazy, but please, one of you has got to get me off.\"\n\nSam pulled herself up out of her armchair, and pulled me to a lying position on the floor. \"I know what to do to get you off,\" I heard Sam muttering.\n\n\"Come here Mum, get over her face.\" Helen pulled her pants off and I could see that she was massively aroused. She squatted over my face, practically force feeding me her cunt box. She was very wet and very open, and she pushed herself around my lips and nose, which by now was pretty much immersed in her gaping slot.\n\nI was conscious of my pants being pulled to one side and as soon as I felts Sam's fingers against my sloppy lips, I knew instinctively what she was going to do, and she didn't waste much time. I could feel all four of her fingers enter me in a single movement. \n\nI was enormously proud of the fact that I could easily take her four fingers straight in me with no preparation, but I wanted more, so I egged her on.\n\n\"Is that the best you can do,\" I teased. \"You can do better than that, surely?\" \n\n\"What do you want me to do Andrea?\" \n\n\"You know what I want,\" I returned.\n\n\"Say it.\"\n\n\"Sam was going to make me say it!!!\"\n\n\"Put your hand in me and fuck me with it.\"\n\n\"How much do you want it?\"\n\n\"Pleease. Please just fuck me with you hand, as hard as you like. I'm begging you for it.\"\n\nI felt her thumb go in with the rest of her hand. The bit I really like, the bit I love, is when the widest part of the hand that's about to fuck you, stretches you open and you feel the elastic of your opening closing around the wrist. It's immensely sexy and carnal all at the same time, and then you experience that amazing feeling of fullness.\n\nFrustratingly though, Sam pushed her hand in, and then held it still.\n\n\"Fist me, please fist me. Do it to me,\" I was almost screaming.\n\nSam started her graceful fisting slowly as I tried to move myself around her wrist. If I had been in any other position, I probably could have achieved it, but with Helen crouched over my face while she was feeding me her slippery and yawning hole and piss flaps over my face, and Sam already inside me, I was actually quite constrained. \n\nI was desperate to cum. Helen was smothering my mouth with her meaty spread and I was trying hard to gather up her lips into my mouth, so that I could work my tongue between them, and her juices were combining with Sam's which was generating the most exquisite aroma and taste. \n\nI couldn't hold out any longer, and I could feel an explosive orgasm working its way through me. My heart was throbbing, the adrenaline was surging through me with the eroticism of what was happening to me, and I was almost blacking out. I was so high it was like I was on drugs, and I was giddy with pleasure as the cum rushed through me. I soaked Sam's arm and the rug as the nectar came out in little spurts from between my fanny flaps, and I had to plead with Sam to stop.\n\nMy orgasm washed me out, and I needed a few minutes to recover. \n\n\"You haven't cum yet Mum,\" Sam stated. \n\n\"No, I haven't, but I 'm sure you are going to see to it that I do,\" Helen responded.\n\n\"What shall we do with her Andrea,\" Sam asked.\n\n\"We could do both of her holes at the same time,\" I suggested.\n\n\"Both?\" Sam questioned, looking curious.\n\nI colluded with Sam for a few moments, and we lead Helen upstairs. \"On the bed,\" I instructed. I had a distant memory of finding some spreader bars many months ago when looking through Helen's drawers, and it took me less than a minute to locate them. \n\n\"How would you like a really massive cum?\" I asked Helen, \n\n\"I need a big massive cum,\" was her response.\n\nWith Sam's help, we managed to get the first spreader bar attached to Helen's ankles, and fixed her wrists to the second one. Then, using a pair of hold up stockings, we attached both bars together so that Helen was virtually trussed, but with her cunt and ass completely exposed and very accessible.\n\nI wanted to watch Sam fuck Helen with her hand first, and despite the position she was in, I managed to do some work on Helen's nipples while Sam played with her Mum's big loose cunt. It look very little time to worm her hand in, and once it was in, I moved myself so I could get at Helen's ass. \n\nAlthough there was a little trickle of sap working its way towards her ass, it wasn't going to be enough to lubricate my hand, so I had to go back to one of the drawers to pick out some lube. I squirted some into my hand, put the bottle down and wiped the slippery substance liberally over my hand and a good way up my wrist. \n\nI played around the semi tight ring of Helen's ass, intermittently probing in a little further with a finger or two so that I could prepare her for my hand. There were all kinds of grunts and groans coming from Helen as we worked on her. \n\nKnowing how much the vocal element of our sex stimulated Helen, I began to introduce some verbal undertones. \"How's your Mum's cunt doing Sam, how does it feel?\"\n\n\"M'mm, quite loose, my hand is sliding in and out quite without much effort.\" She was always big, but it looks like you have stretched her out further,\" Sam continued.\n\n\"I know what you mean. Her ass is going the same way. My fist doesn't seem to be doing much at all,\" I taunted.\n\n\"If her front hole is that loose, you may need to use something else. See what you can do with your other hand.\"\n\n\"Really? Shall I try it?\" Sam enquired.\n\n\"Go for it, your Mum can take both of mine, and you've got smaller hands than me.\"\n\nSam positioned the four fingers of her other hand at the distended entry to her Mum's expansive, well used and mature twat. She didn't need much encouragement. \n\n\"Fuck, she's so big now,\" Sam exclaimed. \"You pair must be at it all the time.\"\n\n\"We are, I replied. All the time, and it's still not enough.\"\n\n\"Are you trying to wreck her?\" asked quietly.\n\n\"What do you think Mum,\" I asked. It was unintentional really, and I was worried that I might have gone a step too far in front of Sam, but having used the 'Mum' word, I was curious as to what Sam's reaction would be. \n\nHelen's movement, even in her restricted state started to become more energised.\n\n\"Oh shit! You call her Mum? That's so wicked. Massively sexy, but wicked in a good way!\"\n\n\"Yes, you're my girls,\" Helen pronounced, \"and you need to make me cum.\"\n\nTo my mind, Helen had never looked so thoroughly slutty. With both Sam's hands, albeit relatively slim hands, in her drilled out cunt, and my one hand deep in her ass she looked deliciously raunchy.\n\n\"You filthy girls,\" I heard from Helen. \"Doing this to me like this.\"\n\nThe sounds emanating from Helen's holes was enough to push me over the edge again, and I could feel my own gash frothing up with a mid-range orgasm. I increased the impetus of my fist in and out of her butt and encouraged Sam to do the same. \n\n\"You love it,\" I breathed, with unadulterated lust in my voice. \n\n\"You know I fucking do. Oh shit, here it comes.\" \n\nHelen's cum was something to behold, and I was worried for a second or two that she might be about to pass out. There were little surges of cummy cream jetting out of her cunty cleft. Some of it hit Sam on the cheek and although I shouldn't have been shocked, it was a powerful statement of her own horniness when she scooped it up with a finger and slurped it up. She definitely took after her Mum.\n\nExtracting ourselves from Helen's holes took a minute or so as we needed to be careful not to cause any pain, and we untied the stockings and disconnected her from the spreader bars. \n\nHelen slowly straightened herself out and put her arms out to pull Sam and me into a hug. It was a beautiful and intimate moment, and I could have quite happily remained in that position for longer. We left Helen lying prostate as we cleaned up a bit, and without anything being spoken, we both got into the same bed. \n\nI will remember that night's sleep for a very long time. The three of us, all together limb to limb, and skin to skin, and I knew for sure that there would never be any barriers between us. \n\nThe trouble was, the following morning I was just as horny as I had been the evening before, and I was becoming infatuated with Sam's girl slop. The taste and syrupy nature of it was an aphrodisiac in itself, but just the fact that she could produce so much was a huge turn-on of major proportions. I lay semi-comatose in our bed, dreaming up more increasingly shameless ways to get it from her gooey slit into my mouth whilst pleasuring myself. I needed to involve Helen to make the experience complete, and the nucleus of a scenario was forming in my mind. \n\nWe had a shower together in the wet room during which there seemed to be an unspoken competition around who could jet their pee the furthest and I loved it when splashes from both Helen and Sam hit my thighs. I rather naughtily leaned against the wall of the shower and projected mine quite a long way during which Helen managed to cup some of the flow into her hands and spill it over her abdomen.\n\nDisappointingly, there were some housekeeping to attend to, and this Saturday we did the shopping together. It's not the easiest thing to do, to have fun whilst supermarket shopping, but we managed it especially in the fruit and veg section. Heaven knows what any onlookers must have thought of us. We got back, had a light lunch, and following that, I asked who was up for some pleasure.\n\nHelen said that she couldn't believe that I had to ask, and Sam's response was to part her legs and stroke herself through her panty crotch and asked raunchily, \"what do you think.\"\n\nHelen wanted to know if I already had something in mind, so I came right out with it and issued a few instructions.\n\n\"Sam, I want those panties off, and you can decide if you want to leave your tee-shirt on.\" \n\nI lay on the floor and explained further. \"Sam, stand over my head with your legs apart, and Helen, you stand behind her.\"\n\nI had to get up so that I could grab a towel which I had forgotten about, and when I arrived back with both a towel and a tea towel from the kitchen, Sam and Helen were still in position. I lay back down where I could gaze into Sam's glistening slit and asked Helen to play with Sam's tits. \n\nIt probably took about four or five minutes for the girl sperm to start dripping from Sam's mesmerising fuck hole. I had relied on being very aroused, and I was already wet enough to start working my own fingers into my Milf like cunt. I say Milf like, as I really felt as if my repeatedly stretched out snatch was starting to look like the well-used cunt of a middle aged woman, which was what I desired so much. It certainly didn't look like that of a young woman.\n\nBy the time I had got my whole hand in myself, Sam was frothing up massively and at one point, completely spontaneously, Helen placed one of her hands beneath Sam's oozing opening, and offered her slime coated fingers up to Sam's mouth. She slurped it up and I was conscious of a few more little spurts of goo splashing onto my face.\n\nWe must have kept it up for well over ten minutes, by which time my face was covered (as it wasn't all hitting my mouth), but I was also able to swirl my tongue around to taste the faceful I had.\n\nI was more sodden than usual myself now as I pounded my bunched up hand into my loose and messy cleft. I wanted to speak, but I couldn't. I was so ensconced in the moment it was almost other worldly. Sam was struggling to remain standing and as a result dropped into a squatting posture and Helen followed her to keep up the tit play. I could feel Sam using her fingers to swish through the feminine slime that was like a second skin on my face, and that was enough to push me off the edge of the cliff.\n\nMy wide open cunt was throbbing and spasming and I was finding it hard to breathe. I never wanted it to end, but I had to stop. I was totally, totally sated. I couldn't actually move, and I lay on the floor, saturated, and with my legs uncontrollably splayed. \n\nAs I recuperated from my thunderbolt like orgasm, I was mindful that Helen hadn't been on the receiving end of any pleasure, but she assured us that watching us had given her some delectation of her own, and not to worry, her turn would come later, and that she had some ideas of her own to pursue, but that she had one rule. No clothes for any of us for the rest of the day. \n\nThat was fine by me as it meant I could feast my eyes on Sam's lithe, almost boyish body, and Helen's sexy as hell Mumsy body and chiefly her remarkably lippy, and impressively hefty cunt. I doubted that we were going to get through the afternoon without indulging in some further debauchery, but no doubt that's what Helen was aiming for. "
    ],
    "authorname": "Andrea_E",
    "tags": [
        "incest",
        "fisting",
        "stretching",
        "lesbian",
        "big cunt",
        "watersports"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/bigger-down-there-ch-07"
}