{
    "title": "Two Hundred Dollars Ch. 06",
    "pages": [
        "172 Dollars\n\nTo Bailey's surprise, Kent didn't return Tuesday evening. She hadn't realized until he didn't show up how much she looked forward to a quick spanking to take her mind off her homework.\n\nThinking about that, she realized that it usually had the effect, coupled with the orgasm, of releasing a bit of school related tension, cutting into her mind in a low-level, primal sort of way. The immediacy of the pain and the raw sexuality made all of her academic problems seem less significant and easier to deal with.\n\nWithout Kent around, her homework took a stressful prominence in her mind and the tension wouldn't go away. By 10pm, she felt serious levels of frustration building up inside her. Hoping that he had somehow entered the apartment and silently slipped into his bedroom, Bailey tiptoed into the hallway and went to his door.\n\nNot only had he failed to lock the door, he'd left it ajar, allowing her to quietly step through the doorway into the dark space beyond.\n\nDisappointed, she turned the light on to an empty room and turned to contemplate the white board.\n\nOne hundred seventy two to go, she thought.\n\nBailey impulsively put a tick mark in the box, assuming he'd see it when he came back.\n\n\"Find me,\" she wrote underneath.\n\nBiting her lip in anticipation, another reckless impulse seized her and she unbuttoned her jeans. She quickly slipped them off, pulling her panties down at the same time. She only stepped out of her pants long enough to get the panties off her ankles, then pulled the jeans back up.\n\nHolding the dark blue underwear in her fingertips, she looked around his room.\n\nShe really wanted to hang them on the outside door handle, where she could guarantee Kent would not just see them but touch them. But they still had a roommate, and landlords who might come downstairs and she didn't harbour that much exhibitionism. Where could she put it, inside his room, that he would definitely come across it?\n\nAfter briefly considering laying them on his keyboard, she settled on the inside of the door handle. He'd have to close the door, wouldn't he? She pictured Kent coming home, closing the door and finding her underwear there. He would hold them up to his eyes before turning to see the tick mark on the white board and the little note. Then he'd come to her bedroom...\n\nBailey felt her hips shift, thinking about this, felt the muscles in her rear tightening up.\n\nShe tiptoed back to her room and changed into her nightgown, not bothering with a replacement set of panties. She had no need of them tonight.\n\n=============================\n\nBailey woke up disappointed at around half past seven in the morning. Why hadn't Kent come by?\n\nStill wearing her nightie, still without panties underneath, she walked over to his bedroom and looked through the wide open door. Kent lay on his bed over top of the sheets, still wearing his clothes. He had obviously discarded his backpack, shoes and jacket on a direct line from the bedroom door to the bed and then passed out.\n\nShe quietly checked the inside door handle and recovered her panties before contemplating the white board. Without any qualms, she wiped the \"find me\" from the board, but froze with the brush hovering over the tick mark.\n\nI can't take that back, she decided, though she couldn't be sure when Kent would act on it. She'd more or less resolved, on a previous occasion, that once she promised a spanking, she could not revoke it. Kent didn't see it that way, as he had often offered both her and Laura a way out, but Bailey had never allowed herself that escape.\n\nA small chill came up her bare legs, raising goosebumps along her entire body, as she realized Kent once again had an entitlement to spank her at any time.\n\nJust not any time soon, obviously, she eyed his exhausted form in dismay. That group project he'd complained about must have used up his entire night. She couldn't think of any other reason he'd have stayed out so late.\n\nQuietly, while still facing him, she pulled her panties back on, knowing that the motion of lifting her leg pushed the high hem of her nightshirt high enough to reveal herself to him. Kent only had to open his eyes to see the neat little triangle of pubic hair he'd only caught glimpses of before.\n\nShe closed the door behind her and slipped back to her bedroom, still chilled by the experience and by the awareness that her cheeks were liable for a spanking at any moment.\n\nWhen she locked the door of her own room again, she fetched her notebook, reading through the different things she'd already tried and fantasizing about how she might pay off two dollars tonight.\n\nPants down? Bare? Double spanking?\n\nShe started counted her spankings from the beginning of her list. They started easily enough, ten at a time.\n\nTen, twenty, thirty, forty... forty five.\n\nThat took her up the first time she'd pulled her pants down for him.\n\nThen Laura had shown up. She hadn't realized how much it might turn her on to watch him spank someone else, while imagining herself in place.\n\nBailey laid down on her stomach, wedging her pillow in between her legs, and continued to count.\n\nSixty nine, she counted when she reached the first time she'd truly bared her ass to him, the time with the towel. The number made her smirk and she thrust her hips down.\n\nOne hundred two, that took her to the night when she'd bent herself over the laundry machine for him.\n\nThe memory of Kent forcing her to walk across the hallway made her body spasm.\n\nOne hundred twenty two, marked the night when he'd spanked her over her jeans and followed it up with a bare-ass inspection.\n\nOh, God. Just feeling him stare at me...\n\nCounting the ten \"gifts\" (and at this moment, she wanted to count every single slap her ass had taken) the total came up to one hundred forty eight times that Kent's hands had punished her cheeks.\n\nBailey moaned, imagining all those strikes to her flesh, all the shock and pain and the way it reddened her and made her too sore to sit properly.\n\nAn uncontrollable shiver ran through her cold, practically naked body -- for the nightgown had long since ridden up to her shoulders.\n\nAnd how many more to go?\n\nEven if she stripped naked for him and paid every dollar with just three spankings, he would still take hundreds of shots at her-\n\nBailey buried her face in her pillow and hoped its insulation proved enough to cover her orgasmic shriek as her body pulsated out of control.\n\n=============================\n\nKent woke up that morning at nine o'clock to an empty apartment. Grumbling to no one, he rushed through the shower, grabbed a couple of granola bars and moved quickly to try to catch his second class, seeing as he'd missed the first one.\n\nAs he reached back into his room to grab his backpack off the floor, his eyes finally caught the whiteboard.\n\nHe stared at the tick mark in the box, just under the \"$172\".\n\nWhen did Bailey do that?\n\nKent tried to remember the night before, but the whole walk home rested pretty fuzzily in his memory. He knew he'd taken off his shoes and jacket only because he'd found them on the floor.\n\nHad she made her mark this morning? An image of Bailey, fruitlessly trying to shake him awake, popped into his mind. He decided that couldn't have happened.\n\nShe must have made the mark last night, waiting for me to come home. But she's not home now.\n\nHe peered at the white board more closely. She'd written something underneath, \"Find me\" and then erased it.\n\nA tide of guilt swept through him, that Bailey might have waited all night for him and he'd never noticed. On the other hand, the stupid project had a thirty percent course weight and he couldn't fuck that up either.\n\nHe sighed, scribbled a quick note on the white board in hopes that she would read it, and bolted for class.\n\n=============================\n\nBailey came home late Wednesday evening, stalling at school as long as she could in the hopes that she would find Kent waiting at home. Instead, his room lay empty. She dropped her backpack in the hallway and stepped inside, wondering if he'd even seen the mark she'd made.\n\nShe saw his barely legible scrawl and wilted in dismay.\n\n\"Prj work,\" he'd written. \"All nighter. Due Thu morn. Thu aft?\"\n\nBailey leaned her left elbow against the door frame next to the white board and laid her head on her forearm, taking a deep breath to collect herself.\n\nIt's alright. It's just another day. Just one more day.\n\nAnother deep breath entered and left her lungs, giving her the strength to hold back tears.\n\nResolutely, she stripped off her jeans and took off her panties again, the white thong ones he'd chosen the one time she gave him a choice, and hung them on the corner of the white board.\n\nKent could have sent her a text message but, in a way, she approved of his choice of medium. I make the mark, then the spankings, you fix the numbers. This message from him belonged on the board and, following in that vein, her underwear belonged there too, a reply as clear as day saying, simply, \"I'm waiting for you.\"\n\nShe added two tick marks to the tally and left the room.\n\n=============================\n\nThursday burned as slowly as any candle ever had. Bailey didn't have the heart to skip classes just to get to Kent. He'd only said \"afternoon\", and that encompassed six hours. What if he didn't come home until late in the afternoon?\n\nShe attended every class she had, ending finally at 2:30 in the afternoon.\n\nIs Kent at home already? Is he in good shape?\n\nOut of breath and not thinking clearly, she left the lecture hall and got outside as quickly as she could. The fresh, autumn air opened her lungs a little, leaving her some room to breathe and relax. Kent, she knew, would come home when he came home. He would definitely see to her payment as soon as he had the time and energy. She could not rush him anymore than she could make the sun rise a minute sooner than celestial mechanics said it would.\n\nBailey walked home with patience in her mind, continuously reminding her rebellious heart to cease its impertinent racing, her skin to knock off the cold sweat and her hairs to stop standing on end.\n\nIn this conflicted but zen-like state, she patiently entered their basement apartment through the side door, noting its unlocked state with anticipation before locking the door behind her. Calmly she walked down the hallway and looked through his open door.\n\nKent lay there, asleep on the bed, on his side with his head to her right, a calm expression on his face.\n\nBailey's heart pounded in her chest, urging her to rush into the room.\n\nBut he's sleeping. He's probably exhausted from two late nights. Does he want me waking him? Will it be any good for either of us if he's too tired?\n\nStanding frozen in the hallway, she stared at his body, laid out on his bed. He'd taken care, this time, to neatly place his shoes and backpack near the door, to hang up his jacket on the back of his chair. Kent clearly hadn't come in like a zombie this afternoon, but had still fallen asleep in a pair of sweatpants and a t-shirt.\n\nOr maybe this morning. Who knows how long he's slept?\n\nEven with the door open, though, and the noise she must have made coming in, he hadn't woken up. That admitted to a deep sleep.\n\nWhat does he want me to do? What do I want to do?\n\nIn the late afternoon light coming in from the high window, she could see his chest peacefully rising and falling. His left leg extended to the far corner of the bed, while he'd pulled up his right almost to his chest. Kent's right arm lay extended above his head, the hand curled up in a fist, which she found curious considering how relaxed the rest of his pose looked.\n\nBailey peered more closely at that fist. A little bit of white fabric stuck out of it.\n\nShe inhaled sharply and stuck her head into the room far enough to check the corner of the white board where she'd stuck her panties.\n\nGone! a voice inside her head cheered. They're in his hand!\n\nTaking this for an invitation, she tiptoed to her room, quickly unlocked the door to discard her backpack, shoes and all of her outdoor clothing. She returned to his room quietly in stocking feet. With the least noise possible, she closed his door and slowly, patiently clicked the lock.\n\nBailey waited to see if he the noise had woken him up, but his breathing hadn't changed in the slightest. If he faked sleeping, he did it well.\n\nShe undid the buckle on her jeans, unzipped them and started pushing them down. Warily watching his body, she took a breath and pushed her panties down at the same time, slipping them both off and hanging them over the back of his chair. If he opened his eyes now, he'd have more than enough light to see her, but he slept on.\n\nShaking with anticipation, Bailey tried to control her breathing. She slid her arms inside her shirt, undid the front clasp on her bra and slid out of it as well.\n\nPart of her wanted to drop the shirt, too, but she just couldn't get past that bit of security. In the event that she developed a sudden anxiety, her shirt could drape far enough to hide most of what needed hiding.\n\nFour spankings is better than five, but not so good as three.\n\nShe'd considered the three tick marks on the board, and realized the issue was twelve versus nine, but still decided to stick with the shirt.\n\nI'll get naked someday. Just not today.\n\nShe tiptoed closer to the bed, watching carefully for any reaction, but the boy remained completely out of it. Standing there right next to his bed, naked except for the shirt, Bailey considered her options. Kent's right knee, lifted so high, blocked her a bit. His right arm, stretched above his head, left her a bit more room. She considered the possibility of shifting his leg so she could back into him properly.\n\nKent might stir at that, his hand coming down to her cheeks. She could lift her hips to meet him.\n\nNo. We've done that.\n\nShe liked it that way, though, lying on her stomach with her hips up.\n\nBailey paused again thoughtfully, fully aware that if he woke up right now, he'd find her pussy at right about his eye level.\n\nAn impulse seized her, overriding all of the caution she'd used thus far, and she slid onto his bed facing him. Her right leg pushed at his, forcing his sleepy body to react, lifting the leg enough that she got hers underneath, lacing their legs together with her bare left leg over top, her cheek exposed.\n\nKent grumbled sleepily, tried to open his eyes but failed. His arm moved as she nuzzled underneath and his right hand came down around her back, pressing the panties he had clasped there against her shirt. Seemingly unaware of what had happened, he embraced her, gently pulling her inward so her head rested on his chest, just under his chin.\n\nBailey shivered, waiting for him to fully wake up, placing her left hand around his back since her right had nothing to do but lay there between their bodies.\n\nBut he didn't wake up, didn't even caress her.\n\nHe hasn't even tried to touch my ass. He must be so tired.\n\nSo she lay there, patiently, her legs interlocked with his, his sweatpants covered thigh jammed up against her crotch, and rubbed his back in gentle circles.\n\nI think I'm leaking, she realized.\n\nSometimes she came away from these encounters with a little wet spot on her panties. Without anything covering her vagina, though, any moistness seeping out of her would leave a spot on his clothes. The thought that he might notice the spot later thrilled her, and she pushed down harder with her hips, lifting her left leg higher to spread her legs and, consequently, her lips.\n\nBailey lost count of the minutes passing by, exulting in her nakedness, feeling the anticipation building inside her, slowly grinding herself against his leg as she traced shapes up and down the muscles of his back.\n\nEventually, groggily, Kent began to wake up. Surprisingly, the first sign of consciousness came from below. Her useless right hand, trapped between their bodies, felt his erection through his sweatpants. Bailey shifted herself slightly, feeling his hardness against her knuckles, and wondered how big he was underneath all that. She'd only felt him through his jeans before, which could obviously have misled her. Even now, the back of her hand only touched part of his erection.\n\nShe dismissed those thoughts as he woke up properly.\n\n\"Hey,\" he whispered over the top of her head.\n\nShe nuzzled into his throat, replying, \"Hey. You ready?\"\n\nKent's hand slid down over her shirt, pausing briefly when he noticed the absence of a bra strap, and worked its way down over the hem and onto her bare left cheek. He squeezed with considerable force and she buried her moan between his chest and the mattress.\n\nHe lifted his head and twisted to look down at her body, allowing her to turn her head up along the mattress and put her mouth next to his ear.\n\n\"I'm ready,\" she whispered.\n\nHis hand continued to grope her and Bailey wondered if he had regained enough awareness to realize what she meant him to do. But, just as she developed this worry, his hand lifted off her flesh and came down like the wrath of God on the stretched out muscles of her left cheek.\n\nBailey squeaked in his ear as her body shook and her genitals humped up against his thigh.\n\nI must be leaking on him now.\n\n\"One,\" she whispered hoarsely in his ear, even as his fingertips probed deeply into her flesh.\n\nIt occurred to Bailey, as Kent ceased his groping and lifted his hand in the air again, that he had no way to strike anywhere but this one spot on her left cheek. She'd given him no real option otherwise.\n\nHe cracked down on her again.\n\n\"Two,\" she chirped, thrusting hard against his thigh.\n\nUnless she moved, all twelve spankings would thump against the same piece of flesh.\n\n\"Three,\" she bit down on his ear lobe as their bodies pressed together.\n\nHer right hand, trapped between her own right thigh and his erection, felt him hardening.\n\nHow big is he?\n\nBailey, shivered, enduring his groping not as an intrusion, but as an unbearable delay between spankings.\n\nThe fourth spanking cracked off her ass, and she humped his leg, feeling her orgasm coming. Kent, she hoped, hadn't woken up enough to realize what he'd done to her.\n\n\"Four.\"\n\nWhen the fifth spanking struck, Bailey began to worry. Not for her flesh, which would undoubtedly remember this concentrated bombardment for days to come, but for her orgasm.\n\nIt's too soon.\n\n\"Five,\" she muttered, trying to hold herself in check by biting on Kent's neck.\n\nThe biting didn't work.\n\nThe sixth slap on her sore cheek overcame all of her willpower and she moaned into the mattress, humping away at Kent's thigh without regard for how obvious it all had to be. She managed to gasp out a muffled, \"Six\" while the pulsations shook her body, her vaginal muscles twitching away at emptiness as every other muscle in her body clenched Kent as tightly as she could.\n\nKent kept spanking though, even as her orgasm ebbed.\n\n\"Seven,\" she muttered, wondering how she could possibly endure the rest.\n\nWith all the groping and squeezing in between, how long will he take?\n\nBailey considered, as she came to her senses, that she could make some comment, some scold, to let him know to knock it off. But she withheld. Some instinct inside her said that, no, she ought to allow him to touch her this way. His money had paid for the spankings and this... touching... this examination... belonged with that.\n\nSo she held on tight, her body against his, as the eighth strike thundered through her body.",
        "\"Eight,\" she gasped out.\n\nThe back of her hand pushed against his hardened penis, squeezed now between their bodies. She told herself that her wrist had begun to feel uncomfortable, so she twisted it around.\n\nNow it's curved to fit around his erection instead of against it.\n\nShe panted, wondering exactly how big the thing was that it's head could reach to the palm of her hand.\n\nThe ninth slap echoed through the room and she counted it out, thrusting against him.\n\nIt was that moment, as she heard Kent inhale in her ear, that she realized what she'd done by turning her hand around.\n\nHe groaned and struck her again. Bailey barely had time to count out, \"Ten\" before the next struck. She felt his erection twitching in her hand.\n\nHe's coming. He's coming in my hand right now.\n\nA thrill went through her, even as she counted out, \"Eleven!\"\n\nThe last spanking hit her left cheek harder than any of the previous ones, the power and desperation of his orgasm flowing directly into the muscles of his arm even as he expelled semen into his pants.\n\n\"Twelve!\" she squeaked out, using the force of his blow as an excuse to squeeze his spasming penis as hard as she could through his shorts.\n\nShe felt a wet spot on her wrist, leaking through shorts and sweatpants.\n\nThat means he shot a huge load, doesn't it? To get through all that?\n\nKent squeezed her abused cheek hard, riding out the last twitches of his orgasm, and the two of the them lay there, panting in each others' ears.\n\nGradually their breathing slowed down and their embrace relaxed. Bailey tucked her head back down under his chin and his striking hand moved up onto her hip, letting the air in the room cool her reddened flesh.\n\nWhat do I look like now? she wondered, knowing those bare flesh spankings had been harder, more numerous, and more concentrated than anything she'd taken from him before.\n\nMoreover, what should she do? She felt his semen wetting her hand and she didn't know how she should react to that. From the beginning, Bailey knew Kent got turned on by spanking her, else he wouldn't have taken the deal. So she assumed he jerked off after she left. Did it make a difference, him having an orgasm before she departed? She decided it shouldn't, but maybe it did anyway. She'd had an orgasm, after all.\n\nAt least he's unlikely to notice the wet spot I left on his pants, she smirked to herself silently.\n\nShe took a long, slow breath to calm herself and felt Kent doing the same.\n\nPushing gently away from him, she spoke, \"I'll let you finish your nap. You've had a long week.\"\n\nKent murmured general agreement with this and they untangled their legs carefully. Stealing a quick glance below, Bailey got a look at the considerable wet spot over his crotch before he hid it by turning his body downward. The fingerprint-sized spot her juices had left on his thigh paled in comparison, but she perversely hoped he at least noticed it later.\n\nHeedless of how much of her he could see, she pulled on her jeans and panties while facing him. It didn't bother her right then to display herself that way. It almost felt like they'd gone so far past that this afternoon, it didn't matter.\n\nIt'll matter later, she assured herself, once this haze on your brain dissipates.\n\nThe bra she took in her hand, not bothering to put it back on. She didn't need it for wandering around their apartment anyway. Her panties, the ones he'd slept with clenched in his hand, she retrieved from the floor where their exertions had discarded them.\n\nWith her clothing collected, Bailey gave Kent a polite nod and left the room. Minutes later, secure in her own bedroom, she heard Kent head into the washroom and start up the shower. This made her smirk once more. "
    ],
    "authorname": "xtorch",
    "tags": [
        "masturbation",
        "orgasm",
        "spank",
        "spanking",
        "payment",
        "debt",
        "naked",
        "semen"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/two-hundred-dollars-ch-06"
}