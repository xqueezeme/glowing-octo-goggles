{
    "title": "Bam, Lucy, & Bob Too",
    "pages": [
        "Thankfully the worst was over. It was my moving day and friends Paul, with van and Lucy had helped carry my boxed existence into the new flat. Paul had departed and Lucy was arranging the flat with me, eager and happy to help. Being a mid thirties bachelor, I appreciated the feminine touch to the new pad.\n\nLet me tell you about Lucy. A gorgeous, blond, buxom, 20-year-old slip of a girl; lovely innocent looks and a figure worthy of any centrefold. She's in a steady relationship, though unhappy at work. I took the time and energy to actually speak to her and not her breasts. We shared a lot of common interests in fitness and sport and we had developed a good friendship.\n\nSo there she was, bending over in lovely tight jeans, picking up boxes, showing off a G-string and a rose tattoo on the small of her back. Luckily it was November and I was keeping relatively cool - but definitely not collected. Don't get me wrong, I do fancy the pants off her but realism soon takes hold and I restrict my sexual actions to fantasies with Madame Palm & her five daughters! \n\nWell I wasn't to know it, but my steady grasp on life was soon to be tested. Oh my, it happened so innocently. No dramatic slow mo or build up of the Jaws theme tune. Lucy just accidentally dropped a box and spilled out of its slinky red silk cover was my Bam.\n\nBam is a big black cock and balls, 12 inches long by 2.75 inches wide - a wonderful specimen of a dildo. And there it was lying on the carpet. My stomach lurched and my balls disappeared fast inside my body. This would take some explaining!\n\n\"Lucy...\" I started to utter, \"it's not...\" Oh my god. She picked it up and held it erect - using both hands - dangerously close to her mouth. It looked massive against her lips. Her face had gone a deep red and her eyes were wide open with...something: bewilderment, shock, disgust, surprise? I just couldn't tell.\n\n\"Bob,\" she breathed, \"what the hell is this for?\" Yes, the answer is obvious but I was dumbfounded. Lucy looked up from the cock and met my eyes. \"It's so massive. Do you use it? I mean how is a girl supposed to take it?\" she asked, with a definite pained look in her eyes.\n\n\"Well...Lucy.\" I stammered and tried to avoid direct eye contact. It was my turn to go red. \"It's actually for me. You see I have a fantasy about.... Arrgh, okay, I like sticking things up my bottom. That is just one of a few toys and that is my ultimate one.\" My forehead felt branded, as if the word \"Pervert\" blazed across it - somewhat different from the normal \"Desperate and Single. Fancy a shag?\" \n\nI looked up and Lucy was still holding the cock with both hands. She quietly replied, \"So you get turned on by this thing?\"\n\n\"Yes\", and she was still holding it! \n\n\"But I didn't think you were gay?\"\n\n\"I'm not. I have this fantasy come fetish about girls with toys and me. Yes that is a penis: but it's just an object. I'm used to my cock but I couldn't really get on with another man's.\" God I was sounding like a geek. The time for embarrassment was over, I had been caught fair and square and I was sure the truth and nothing but the truth would get me out of the very big hole I felt myself in.\n\n\"The idea of a girl using a toy on me turns me on. I would love to role reverse, play submissive and for her to take me from behind using a strap-on. We could spoon and I could feel her boobs on my back.\" And so I had told the first person, who happened not to be a girlfriend but a colleague, my deepest desires. I wish I'd felt absolved after my confession but my forehead still felt hot.\n\nLucy just stood there, her head cocked slightly to one side, peering closely at Bam. He's very realistic with a big fleshy head and thickly veined sides.\n\n\"You've actually got this into your bottom?\"\n\n\"Yes, nearly all of it.\" Oh my, I still vividly remember it passing through the first, second then third sphincter of my arse. Perfect bliss.\n\n\"Didn't it hurt?\"\n\n\"No. I took it gently with smaller toys, to get me ready. My bum did ache the next day though, but I felt happy about it.\" Oops, was that just too much information? I was starting to feel very hot.\n\n\"Wow!\" \n\nWow? I wasn't expecting that. Lucy looked at me again. That lovely innocent face, framed beautifully by shoulder length blond hair, a face that I've admired for nearly a year, was smiling devilishly. She had said wow. \n\n\"I like playing with my bottom too.\" She confessed, voice low, her face turning a dark red, \"though I could never imagine getting something this big up me!\"\n\nMy balls had now descended rapidly back into their sack and were feeling very heavy. Was this really happening?\n\n\"Ian doesn't like bum holes. I tried to finger his butt once but he said it was dirty and thought the idea disgusting. So I just do it to myself in the shower. I took a cucumber in once; it was about a third of the size of this. I felt so naughty playing with it.\" \n\nHer nipples were now deliciously erect and I was feeling quite faint. What on earth could I say to that?\n\n\"Strewth Lucy. Thank you for being so understanding and honest. I take it that you're not going to disown me?\" Shit, I was back in geek mode.\n\n\"No Bob. In fact my fantasy would be to see you get this thing up your bum.\" She stepped closer and held out Bam. She was just about within my personal space: you know the space normally reserved for girl/boy friends when holding hands.\n\nThis was crunch time. I have always been rubbish at jumping at sexual opportunities that came my way. Like in the past, with one of my exes, when I hadn't been switched on enough to try out golden showers after we had an interesting conversation on the subject, or to follow up on her recurring lesbian dream of her licking chocolate of another girl's pussy.\n\nMy brain was working overtime. But Lucy had a boyfriend. Would this be cheating? Could I expose my arse in such a way? Do I have a spotty bottom and what about my love handles? Arrgh.\n\nLucy continued getting closer, looking intently at me. \"I still can't believe you got this in you! How did it feel?\" Damn that Bam looked so obscenely delicious against her. I mean it would reach from her pussy to under her boobs. In my head I had this image of her in the shower, soaping those lovely boobs and slipping a four-inch cucumber into her bum. \n\n\"It felt wonderful, but it was hard getting it in as it's quite bendy.\"\n\n\"I could hold it straight for you.\"\n\n\"Lucy that would get you very close.\" I gulped.\n\n\"Well, as you want to play submissive, I could blindfold you, bend you over and take you from behind. I could do it topless too. I mean you will be blindfolded.\"\n\n\"That would be amazing.\" \n\nHang on, I thought. Don't we really need to think this through? But then again, she wanted to do it. Was it time to finally wake up and smell the roses?\n\n\"But I would to need to be warmed up first. As I said, I use smaller dildos.\"\n\n\"What sizes are they?\"\n\n\"Well there's a five by one inch, eight by two inch and nine by two and a half inch.\" I was starting to feel a bit perverted again.\n\n\"Cool. Could I have a go on them? They sound just the right sizes for me.\" Lucy was now resting Bam's head against her lips. Her face was still red, but not with embarrassment, her nipples seemed to be escaping from under her t-shirt. Her eyes were wide open and I was sure I could smell her sex. \n\nI just love the scent and taste of a wet, hot pussy. During one barren sex-free time, I had such vivid dreams of going down on a girl that I would wake up with that scintillating taste. It was like my tongue had a memory but as I regained consciousness the taste would just evaporate away, leaving me horny as hell and ultimately frustrated.\n\n\"Off course, you wouldn't be allowed to watch me do it,\" purred Lucy, \"but I could give you a running commentary.\"\n\nThat was it. My cock felt more alive than it had in ages. This was really going to happen. \n\n\"I could do with a cuppa tea first.\" I squeaked!\n\n\"You and your tea\" laughed Lucy. \"I hope you're not getting cold feet?\" \n\n\"No. Here, have a look in these boxes, you'll find the other dildos.\" I too laughed as I fully exposed my toy collection for Lucy's inspection. All these rubber cocks for sticking up my bum! I can't imagine what my parents would think. \n\nI had no worries with Lucy - she pillaged the boxes with a gay abandon. Out they all came, arranged in formation, like kinky Russian dolls, from smallest to largest. Four cocks standing erect on my carpet. As she bent over I glanced down her top. What a succulent cleavage, full of body and looking so delicious. Very soon now, I thought, they'll be free, naked and caressing my back. I didn't need the tea anymore.\n\nShe looked up from under her blonde fringe and caught me. Our eyes met and they became locked. She quickly glanced down to her boobs and as our eyes met again her tongue was seductively licking around her lips. \"Bob, I feel like Goldilocks!\" Lucy giggled whilst sitting down. She picked up Bam and kissed his head, \"This cock is too big!\" Next she picked up and kissed the 9\" one, \"This cock could be too big too!\" Finally she picked up the 8\" one and took its head into her mouth, \"Ahhh, this cock is just right!\"\n\n\"And Papa bear's saying that someone's been playing with his cocks!\" I laughed.\n\nMy cock was now straining to get out of my jeans and I had to quickly correct a pants malfunction to free it some space. It was time!\n\n\"I best close the curtains,\" I exclaimed, thinking fast, as I was now living in a ground floor flat and I definitely didn't want a new neighbour looking in. It would be quite an introduction! As I closed them, my memory flashed back to the times, as a teenager during school holidays, I could only watch porn videos on the living room TV. I had to close the curtains then, to wank away in private. It really signified that something naughty was going to happen. But this time something very naughty was to take place for real. \n\n\"Right Lucy, we best take it turns in getting ready. Do you want to use the shower first?\"\n\n\"The shower?\" \n\n\"Yes, you know, to wash out your bottom. You can remove the showerhead and use the hose. There are some towels in that bag.\"\n\n\"Oh!\" blushed Lucy. \"Okay, be back in a mo,\" and off she skipped. Whilst she was away I found the lubricant and placed some towel-covered pillows on the floor, ready to kneel on for the ensuing buggery. I clenched my ass cheeks in anticipation. \n\nLucy, wearing just a white t-shirt (no bra) and a g-string bounced back into the room. For the first time I witnessed parts of her I had only fantasised about: a peachy rounded bottom, perfect for holding with both hands and begging to be feverishly nibbled by my mouth. Pressed visible against the cotton I caught sight of her erect nipples and aureoles. It was my turn to lick my lips.\n\nI quickly pressed for the bathroom. Once inside I, at last, took of my jeans and pants and pulled my cock to help it gracefully grow to full size. The temptation to carry on pulling was immense. It seemed that one part of me at least was still acting like a teenager. God it felt good to be this turned on again. \"Okay\" I said to myself, \"time to get really clean.\" Bam reaches parts that other dildos can't get to. \n\nAfter about 5 minutes, I returned to the living room, dressed in underpants and t-shirt too. I confess my entrance was definitely not as a sexy as Lucy's. But she did look me up and down and complemented me on how trim I was looking. \n\n\"Not bad for an oldie.\" She quipped. \"So Bob, why have you got the margarine out? Haven't you got any KY?\"\n\n\"Lucy, that's not a pot of marge.\" I laughed, \"Look closely, it's called Boy Butter. A personal lubricant, excellent for spreading!\"\n\n\"Ooh.\" Lucy opened the pot and gently lubed a fingertip. \"Feels good.\" \n\nI pulled up a pillow and sat quite close to her. An infinitesimal distance was all thar prevented our lips from touching. \n\n\"Lucy, I seriously think it's time for my blindfold.\" \n\n\"Okay Bob, give me that towel.\" She rolled it up, placed it around my eyes and lent forward to tie it at the back of my head. Whilst doing so, I felt her breasts brush against my face. Could you bloody believe it, I had only been blind for a second and I were already chomping at the bit to rip my blindfold off. I took a deep breath to relax and to allow my other senses to sharpen up.\n\nI certainly heard Lucy take her t-shirt and g-string off though. She was naked! \n\n\"So Bob, I hope you're totally blindfolded!\" exclaimed Lucy. \"Because I'm now going to finger my butt. Oh and you're not allowed to play with yourself. Don't forget - I'm in charge.\"\n\n\"Yes Ma'am.\" I listened intently as Lucy scooped some fingers into the butter and then rolled onto her side. A hushed moan accompanied the first finger. Followed quickly by the unmistakable squelching noise as she moved her finger in and out.\n\n\"I feel so tight,\" Lucy moaned. \"I've not done this for a while and it feels so good. Ooh that's two fingers in. Now I'm stretching my butt and I can't wait to get one of those cocks in me!\"\n\nI couldn't wait too and so being a good slave, I quickly groped around for the 5\" smallest one, stuck it head first into the pot to lube up and eagerly offered it to her. \n\n\"Naughty, Bob, but thank you.\" As we passed the toy our hands met and she gently squeezed one of my fingers. \"It's cold but here goes.\"\n\n\"Lucy, you could try rolling the head around your hole with gentle inward motion to help get it in.\" I offered advice, when I so wanted to offer a hand. \n\n\"It's okay, thanks. I've popped the head in! Arr. I can feel it sliding all the way up. Shit its really making my pussy ache. I have to rub my clit too. MMmmm!\"\n\nNow I could really smell her pussy. The scent of sex was heavy in the air. That sweet wet musk; I even opened my mouth to try to catch the taste on my tongue. Pre-cum was oozing out of my cock, adding to the synergy of smells.\n\n\"Ooh Bob, It's hard doing both. Can you take over with the cock? I demand you showcase your arse fucking skills. I'm desperate to come!\" In all the time, I had known Lucy I had never heard her swear, neither in anger or comedy, but sexually, even her vocabulary was unconstrained. I could hear the sound of her fevered assault on her pussy, accompanied by the delectable popping noises of the cock going in and out of her arsehole. As I inched forward, Lucy reclined onto her back and guided my hand to the dildo. It was definitely hot now.\n\nOnce I took control, I sensed that Lucy was now fingering herself and rubbing her clit. The sounds and smells were so erotic and I couldn't believe this was really happening. I had never touched a girl's arsehole before, let alone fucked one with a dildo. But I couldn't see or really even touch. I had to concentrate, so I avidly set about pushing the cock all the way in and then all the way out. Followed by a quick pushing of the head just inside and out of the arsehole. \n\n\"Arr. Keep going like that,\" groaned Lucy and I knew she was approaching a climax. I decided I would let go of the cock as she came - that way it would get pushed out as her muscles contracted. I love doing this when I come, and the small ones can sometimes really shoot out.\n\nI love watching a girl come. I marvel at the intensity of it and I remember the times when her hand has nearly squeezed mine to death. I've watched boobs swell and nipples retract, red rashes appear on the chest. The satisfied gleam in the eye, the offer of fingers to lick clean.\n\n\"Fuck,\" was all she said as she came. I let go and sat back, trying to put together in my mind what was going on. She was buckling up at the tummy as her body crunched up. Her breaths were deep and slow. Her fingers had stopped and were now pressing down on her pussy. I'm sure one hand was also cupping her breast. \n\n\"Lucy? Are you alright?\" \n\n\"Yes thanks.\" Lucy took a deep breath, \"Can you lube up the second one. I'm ready for something bigger.\"\n\nI didn't need asking twice, so I set about smearing the butter smoothly over the 8\" cock. Apart from being bigger and twice as thick, this one had a solid ball base, perfect for squatting on.\n\n\"Lucy, with this one, kneel on the pillow and then you can rock back onto it. I'll hold the base and you can aim it in! You will need to get it in at the right angle, but trust me, you'll really feel something special.\" \n\n\"What do you mean?\" Lucy asked excitedly.\n\n\"Okay, remember when you finger your arsehole. You can feel two openings or sphincters. One's external and the others just about a centimetre inside and these sphincters give you pleasure when opened. Well, there is a third sphincter or \"sigmoid\" about 5 or 6 inches deep inside your rectum. Normally you don't have any bodily control of when this opens or closes, but you can with a big dildo. You need to take it slowly but once the dildo has popped through the sigmoid it feels fantastic and a little forbidden, which just makes it even better.\"\n\nI closed my eyes and remembered the first time I played with some anal balls. The first one managed to get all the way through sigmoid and at first it didn't want to come back! I panicked a wee bit at first, but I eventually managed to relax and gently pull it back out - to much pleasure.\n\n\"So are you still up for it?\" I enquired.\n\n\"Sure,\" said Lucy as she swivelled around and knelt over the pillow. \"I want to feel it!\" She held the cock's head and started to descend slowly onto it. Arrgh, again I was missing this. The classic \"reverse cowgirl position\" porn film camera shot. A perfect frame of rounded buttocks and a pert little bumhole slowly engulfing a cock, deep down to its balls. And this happened right in front of my blindfolded eyes. Lucy took her time; pausing here and there. She was finding it hard to get the head in. I told her to pretend to do a poo and push down. She did and in it plopped.\n\n\"Shit shit! My butt feels so stretched.\" \n\n\"Lucy, just rest, relax and allow yourself to enjoy the pain as it will turn to pleasure. But if it's too much then lift off and try again. You can get as much pleasure from immediately not having something up there too.\"\n\n\"Ooh, its passing. God my butt feels so filled up. I'm going deeper! It's helps if I rub my pussy too.\" \n\n\"Don't worry I'll catch you on the way down!\" I laughed.\n\nI didn't need to. Lucy is very fit with lovely toned legs, so she steered her descent masterfully. I could tell she was nearly all the way down as her bottom was brushing my hand. Her cheeks were so close and so available, yet so unavailable, to smooch.\n\nI decided to join in the fun and rammed the lubed small cock straight up my butt. Luckily I aimed it well. It felt good plus the fact that it had just been in Lucy's bottom turned me on even more. My cock twitched as I positioned the dildo's head against my prostate gland. \n\n\"Oh yes,\" Lucy cried. \"That's hit the spot. Hmmm. It feels so immense. Hold it there Bob, I'm going to rock up and down and savour that cock all the way up my butt.\" She was there - ball's deep. I was dead jealous and eager to experience Bam. \n\nLucy rocked her bum all the way up, away from the cock and back down. Was she gaping I wondered? A satisfied sigh precluded another assault on the cock. \"I can feel it from within my pussy,\" she exclaimed, \"guess what I've also got three fingers in? I bet you would love to see this.\"\n\n\"You bet!\" I replied feeling a bit exhausted. My cock was crying out to be touched, just one stroke and it would fire. I had to satisfy myself another way.. \"Lucy, watch me take on the 9\" dildo. I promise you a good view to come to!\"\n\nLucy swivelled around on her cock, much to her delight, and got me to lean forward as she placed the cock under my butt. I reached down to hold it and again our fingers touched. Her fingers were hot and wet from her pussy; I was getting closer to her. She sensed my curiosity and rubbed her juices over one of my fingers. \"Go on Bob, taste me! I can tell you're eager.\" She cooed, \"I'm going to taste myself too. Mmm!\"",
        "There's only so much a man can take and I admit to sucking my finger like my life depended on it. It was nectar to my tongue. I doubled the pleasure by sitting down on the 2.5\" thick cock beneath me. Not an easy task, as it's wider than a beer can. But its great practise for Bam, who's wider than the base of a pint glass. Perfect for them sphincters!\n\n\"Good going Bob,\" said Lucy, \"now lift your bum up. I want to see it go in again!\" I honoured her wishes and took great delight in just popping the head in and out of my arsehole. After about 5 goes I sunk suddenly to the base. \n\n\"Bob, I'm now twisting my nipple.\" Lucy sighed deeply as she climaxed again. I, too, felt like coming, my cock was twitching around madly.\n\nI heard Lucy climb off her cock. I wished I could see her. I bet her skin was glazed in a light film of sweat, hair tussled, sated sparkle in the eyes, red-hot damp pussy and inflamed arse. \n\n\"Bob \" she said and I knew straight away what she was going to say next... \"Get on your hands and knees and get ready for you know what? Its time to feed Bam!\"\n\nI eagerly obliged and got into the prone position, dildo still in arse with my cock pointing down. I felt very exposed: this was really the first time that Lucy was looking at my naked body. Yet my cock was not going to be the centre of attention. I was going to submit myself totally to her. \n\n\"Ooh let me take that out.\" \n\nLucy quickly pulled the dildo out and I sensed her looking closely at my bum hole.\n\n\"I best lube you up a bit more.\" I wasn't expecting this. The touch of her buttered fingers was electric; she took her time churning them around my arse. I felt perhaps two or three slender fingers. \n\n\"Right Bob, head down and bottom up.\" I could feel her breath on my skin. \n\nThe next thing I felt was Bam's head against my arsehole. I puckered up and got ready to push out. \"Phew! I need both hands to hold this. I'm going to push! Tell me if it hurts too much.\"\n\n\"Okay,\" I cried as I felt my arsehole being stretched to its limit. I have to confess, it is the classic combination of pleasure and pain. At first the pain is really uncomfortable and you would like nothing more than to remove the invader. But this soon passes, to be replaced with an immense feeling of fullness and wonder as you savour how stretched you are. \n\nLucy stopped pushing and started circling, with her finger around the rim of my engorged anus. \"Wow Bob. That looks so tight. I want to do it again!\"\n\nNormally when I'm on my own, I try to use a mirror to witness the event, but I can never get the right view. However, Lucy was right there and as she pulled out Bam, I had to ask.. \"Am I gaping well? I feel so exposed.\"\n\n\"Yes...you're sure it's not hurting? I can see a long way in. I might be able to fit my whole hand in!\" Fuck me, fisting was something I found curious but could, would or should we be doing it? \n\n\"Lucy!\" I pleaded. \"Please Bam me again?\"\n\n\"Okay. Stay still - this time I'm going to get it all the way in!\"\n\nI felt my arsehole being stretched again. But this time, like an unstoppable juggernaut, Lucy kept on slowly pushing. I felt the head touch my sigmoid, the sphincter tried to resist the onslaught but Bam pushed on regardless. I experienced the unique feeling of something deep inside me giving way with an acute sigh of pleasure. Heavenly. \n\nIt felt fantastic having Lucy in control. Normally I just sit on Bam and then go up and down a few times, concerned that I may injure myself but this time I could concentrate wholly on the pleasure. I suddenly became aware of Bam's balls nudging against my bottom.\n\n\"Shit Bob!\" Lucy's voice was wavering. \"It's all the way in. I can't believe it. It must go in as deep as your belly button!\"\n\n\"Yes. It certainly feels that deep,\" I gasped. \"Lucy can you please fuck me with Bam!\" My bum had never felt so full.\n\nShe did. I rested my head in my hands and for the first time I truly abandoned myself to the arse fucking of a lifetime. Lucy was fantastic, teasing me here and there. One time she left just an inch inside before pushing all the way back. Another time Bam was pulled all the way out, exposing my ravished sphincters to the cool breath of fresh air. She also twisted it slightly around, so that I could experience the veins on Bam's cock. This felt wonderful against my prostate. Bam was soon back, balls deep into my bum. Lucy then got me to lean slightly back into seating position. \n\n\"Bob, take over now. I really need to fiddle my clit again. But don't worry I'll be right behind you!\"\n\nAs I leaned back to squat comfortably on Bam, Lucy snuggled onto my back. Contact had been made. It was glorious to feel her bosom press against me, nipples squashed into my skin. Her fine hair swished against my sensitive lower neck as she avidly set about playing with herself. I countered her weight, allowing her to nestle more on me as she moaned and groaned.\n\nI had never appreciated the touch of a woman more than then. I knew that my fantasy was becoming completely true. I was experiencing the most sensual, outrageous occasion of my life. I didn't mind being blindfolded too much; it was the lack of touch and taste that I really missed. I felt deeply happy that as a man, I could be submissive yet still give pleasure to a woman. \n\nI found that my cock was in my hand and I was wanking away feverishly. Bam seemed to be throbbing away in my arse and Lucy was rocking seductively against me. This time I felt her climax; she even bit into my shoulder to help contain the pleasure.\n\nIt was all I needed to finally come. My balls contracted, arse clamped hard around Bam, and my swollen cock started to spasm violently as I ejaculated. I could feel the spasms all through my body. It seemed like I came for ages. I continued pulling my cock right through the sensitive stage until I couldn't muster the energy to pull anymore. I flopped forward, slipping of Bam as I went, and lay spent on the carpet. \n\nLucy followed me down. We both lay in the spoon position for a century. I could feel the hot spunk on my stomach and Lucy's hot sticky body on my back. \n\nI felt so out of it. My mind had burnt out due to all the stimuli.\n\nSilently I wondered if we had made a stain on the blooming new carpet. "
    ],
    "authorname": "Bob Briton",
    "tags": [
        "felt arsehole",
        "laughed lucy",
        "arsehole stretched",
        "lucy time",
        "butt feels",
        "bum felt",
        "heard lucy",
        "eyes lucy",
        "close curtains",
        "arse fucking"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/bam-lucy-and-bob-too"
}