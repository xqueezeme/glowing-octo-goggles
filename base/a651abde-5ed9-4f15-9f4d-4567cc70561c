{
    "title": "The Long Betrothal Ch. 05",
    "pages": [
        "Dear Readers-- Quoting you: \"Write more, write more, write Edon's story...\" Sure, to YOU they're casual comments! To me, it's a TRILOGY!! (See End Note for more info.) Again, thank you so much for the hearts, stars, and comments. I'm incredibly grateful to know that my characters come to life in your minds and hearts, too. --Love-- Stefanie\n\n--o--\n\nIt wasn't the shaking which woke him, it was the pain of his teeth rattling around in his swollen head.\n\n\"My lord! My lord! My lord Maxen!\"\n\nHe groaned and flailed out with a blind, violent backhand, trying to kill whichever idiot was interrupting his alcoholic slumber. Just one good hit and he could go back to sleep. He missed.\n\nThe voice changed and the shaking intensified. \"Maxen!\"\n\nHe didn't respond, hoping Edon would give up.\n\nNot a chance. \n\n\"You! Girl! Give me that bowl of water.\"\n\nMaxen groaned again, opening his eyes and rolling heavily onto one elbow, ignoring the handful of servants cowering around the door. \"I surrender. What could possibly make you think I'd want to rise from the dead before noon?\"\n\nAnticipating his reaction, Edon stepped back and folded his arms across his chest.\n\n\"Our man in the basement is bleeding and unconscious. Milot, Geralt, and your wife have fled.\"\n\nIn a quarter of an hour twenty men were mustered and mounted for the search. \n\nEight men followed the main trail, which led north to the nearest settlements, six followed the lightly-traveled trail leading south-east into Powys. Maxen, Edon, and the four remaining men took the ill-defined path westward, which wound higher into the mountains before descending toward the heart of Gwynedd. To any thinking man, it was the least likely route to take, being steep, rocky, cold, and generally difficult to traverse, plus providing few of the desiderata to maintain human life.\n\nMost of his men raised a brow at Maxen's choice, but Edon concurred. Kerin and Geralt were clever, and all three runaways were at home in these harsh environs. Kerin would chose the most difficult terrain, hoping to discourage pursuit and confuse trackers.\n\nThey rode in silence, stopping periodically for one of their most experienced hunters to examine the ground, and dismounting occasionally to lead their mounts up the steepest parts of the trail. At mid-morning they were rewarded with two clear, nearly overlapping footprints, one significantly smaller than the other.\n\n\"Geralt and Lady Kerin.\" Edon commented.\n\nMaxen nodded and they continued their pursuit.\n\nAfter a while, Maxen reined in and fell back. Edon slowed also, until fifty feet separated them from the rider ahead. He glanced across at his liege.\n\nMaxen's jaw was tight, his eyes burning brightly. He spoke quietly, a mild breeze whisking his words away from the other four men.\n\n\"Three men were present when-- \" he stopped. \n\nIt was the first time Edon had seen Maxen at a loss for words. He would have made sport of it in other circumstances, but today he answered the unasked question without jest or hesitation. \"Yes, my lord- Cadell, Iago, and Eduard.\"\n\n\"What were they told?\"\n\nEdon heaved a deep, quiet sigh of regret for his brother-in-arms. \"I was forced to kill Eduard before he left the keep. I instructed Cadell and Iago to tell others the truth-- Eduard spoke ill of the Queen and I ran him through. In addition to my earlier instructions, I believe that helped convince them to keep their silence about what took place.\"\n\nMaxen didn't question Edon's judgment in killing Eduard-- the man was a notorious lecher, and if Edon believed his death was necessary to protect Kerin's honor, then it was necessary. Maxen frowned at his horse's mane. If he'd been as concerned with his wife's welfare yesterday as he ought to have been, Edon would have been spared the decision, and Eduard would still be alive.\n\nThey rode in single-file for the next ten minutes, paying close attention to the rock-strewn path, where a sharp drop on one side lay waiting to turn a simple slip into tragedy.\n\nWhen they were past the worst of it, Maxen cleared his throat. \"I owe you an apology and many thanks, Edon Glyn. I hope my stupidity has not led to the loss of your friendship as well as the loss of my wife.\"\n\nEdon was slow to answer. \"I am also at fault, my lord. For several days now, I have suspected Lady Kerin still harbors tender feelings for you. I had no proof and much doubt, but I should have shared my thoughts.\"\n\nAfter his initial rush of anger, Maxen considered more carefully. Would he have believed Edon's suspicions? Probably not, he concluded. Aloud, he answered, \"My sin is by far the greater, Edon, and I must beg your forgiveness.\"\n\nEdon replied quickly. \"You needn't request it, my lord. I cannot imagine a sin so great that I would sacrifice my brother.\"\n\nMaxen was silent again, and Edon didn't need to look over to know how his answer was received. His own chest was tight with emotion. He didn't allow himself to think how Maxen would react if Kerin was hurt, or worse, if she was never found.\n\nAfter a while, Maxen shook his head. \"I understand nothing of this, except that I've somehow misjudged her.\"\n\n\"I too, my lord. But we will find them, and once we are back at the keep, the queen will take you into her confidence.\"\n\nMaxen wished he could be as sure.\n\nAround noontime, the increasingly dangerous terrain forced them to abandon their horses, which actually allowed Maxen's party to travel faster. Welshmen were tough and hardy, and even a lowlander could scramble these peaks for days without food or water. Maxen's men had plenty of both, but most of it proved a useless burden. An hour after leaving their horses, the tracker turned back from his position to hush the men with hand signals, beckoning Maxen forward. In low tones, he said he'd heard what he believed to be the echo of a feminine voice from the next convoluted fold of the rocky earth. \n\nThe tracker went to the back of the party while Maxen and Edon cautiously led the way. Their furtive tread mattered naught. As soon as Maxen rounded the bend, he lowered his sword, gesturing a simple command to Edon before he venturing forward.\n\nHis quarry were perched on the hillside to his left, twenty paces off the path. Kerin was seated on the ground, her knees drawn to her chest. Milot and Geralt were between Maxen and his wife, their swords drawn and their backs to Kerin. A bit of color on the slope behind Kerin caught Maxen's eye. The fabric matched the men's tunics, and was currently serving to pad what appeared to be the top of a makeshift crutch. He scanned Kerin from head to toe. Excess bulk beneath her skirt might indicate a binding, he decided.\n\nMaxen's men spread out in a half-circle around their prey. Following his lead, they lowered their swords. \n\n\"My lady, are you wounded?\"\n\nShe ignored the question. \"I'll come with you if you release my men unharmed.\"\n\nMilot turned his head to mutter something at her, but a hiss from Geralt brought his attention to the front where it belonged. Geralt's expression said he didn't like Kerin's offer, either, but Maxen suspected he'd obey his lady's command. He also suspected Geralt would then devise a plan to whisk her out from under his nose. Maxen repeated his question. \"Are you wounded, m'lady?\"\n\n\"I'll answer your question, my lord, when you answer mine. Will you let my men go unharmed?\"\n\nMaxen sighed, his glance flitting quickly over Milot to land on Geralt. \"Sir Geralt, will you treat with me a moment?\"\n\nGeralt waited for Kerin's answer. She stared at Maxen and murmured a few words he couldn't hear. Without taking his eyes off Maxen, Geralt turned his head slightly to answer her question.\n\nAfter another long stare, Kerin nodded.\n\nMaxen sheathed his sword first and Geralt followed. By unspoken agreement, they met at a flat rock some distance from the others. They sat comfortably shoulder-to-shoulder, unlike every other battlefield negotiation in which either man had taken part.\n\nGeralt spoke first. \"Her ankle is wrenched but not broken, my lord, merely swollen and bruised from a false step. It will heal in less than a fortnight.\"\n\nMaxen sighed again. \"Thank you.\"\n\nHe paused, rehearsing phrases in his head, but gave up almost immediately and told the truth without diluting it. \"I love her, Geralt.\"\n\nGeralt's head came around in a hurry.\n\nMaxen went on. \"I've made a thousand mistakes since her surrender, but I love her. I wish only for time to show her how much.\"\n\nGeralt looked away. \"My lady Kerin...\"\n\nThe silence of a hundred unsaid answers sat between them.\n\nMaxen interceded. \"I know she's hiding something, and I know she fears whatever it is, but I will protect her with my life, no matter what secret she harbors.\"\n\nIt was Geralt's turn to sigh. \"I can order Milot, but I cannot command Lady Kerin. He and I will relinquish our weapons, but I fear she will not go with you peacefully.\"\n\nMaxen smiled. \"I would have her no other way.\"\n\nHe wasn't smiling an hour later. \n\nKerin had switched quickly from cursing Geralt for his surrender to cursing Milot for his compliance to cursing Maxen for everything from her injury to his very existence. He'd given up carrying her the normal way when she wouldn't act like a normal noblewoman. She'd been relieved of her eating dagger, but she punched him twice in the jaw before he gave up cradling her and swung her over his shoulder, where she was reduced to hissing and beating on his back, with virtually no effect. After a while, she figured out that pinching did have an effect. He winced every so often, but he bore up under the persistent, irritating assault, providing much amusement for their combined troops. From the first, Geralt ignored the bindings on his wrists and exchanged banter with the men guarding him, while Milot was sullen and uncommunicative, responding only to Edon's comments.\n\nSince the last portion of the trail was relatively safe, Maxen opted to continue their descent after darkness fell rather than making camp on the mountainside. Once inside the gates of the keep, Maxen gave orders for riders to depart at first light to call back the other two search parties, and he took his wife to bed.\n\nShe hissed and spat and swatted at him until the midwife arrived to look at her ankle. With her joint unbound, she became suspiciously silent, and Maxen glanced up from her swollen joint to find her face pale and misted with a fine sheen of perspiration.  \n\nHe murmured an order to one of her ladies, who was back in a flash with a small, squat tureen and two pieces of straw. Kerin's eyes were closed, her lips pressed tightly together as the midwife prodded her bruised flesh, so she didn't see Sallie running Maxen's errand or crawling under the edge of the bed. Kerin opened her eyes to find the tiny gray kitten in her lap. Maxen put a bowl of thickened milk next to her uninjured leg and dropped the straws in her lap.\n\n\"I don't know when last she ate,\" he said, and went back to watching the midwife work.\n\nWhile her sprained ankle was washed, packed with a poultice, and re-wrapped, Kerin patiently fed the squirmy Sir Furball, wincing once or twice, but much more relaxed than she'd been at the beginning of the procedure. A maid fetched food and drink, two boys carried up hot water for washing, and everyone departed, leaving Kerin and Maxen alone. She ignored him until the kitten's bulging belly lulled it to sleep.\n\nHe exchanged the bowl of milk at her side for a tray of cheese, bread, and meat, propping his shoulder against one of the bed posts to watch her.\n\nEventually Kerin looked up, her face carefully expressionless. \"I will flee again.\"\n\nMaxen replied just as calmly. \"And I will find you again.\"\n\nShe swallowed a bit of food, shrugging as though she didn't care. \"You'll tire of it eventually, my lord.\"\n\nMaxen tossed the hunk of bread he was eating onto the table behind him and dropped to a squatting position beside the bed, where he stayed until she met his eye. Leaning his forearms on the mattress near her feet, he held her motionless without a single touch. \"I will never tire of you, Kerin.\"\n\nHe let the silence hang for a time before taking up his speech. \n\n\"I've been a fool, ten times over, and you are correct to despise me, but I won't give up. I know there is something which pains you-- other than what has passed between us-- something you fear, but I love you. I have loved you since first we met, and I will love you until I die, whether or not you ever forgive me, whether or not you return my affection. I won't touch you before it pleases you, but I will sleep with you at night. I will never bind you again, but I will keep you safe. And I will never tire of you.\"\n\nKerin's eyes were wide. She'd stopped chewing in the middle of Maxen's speech-- when he said he loved her-- so she had a big lump of food in her mouth that she was sure would choke her if she tried to swallow it. She swallowed around it and slowly returned to chewing. Between the platter and her hip, the kitten slept, unaware of the cornucopia resting nearby or her mistress' heart beating frantically above.\n\nWith a small quirk at the corner of his mouth, Maxen at last rose. He turned his back for her benefit when he bathed. She lowered her eyes, but she couldn't help sneaking peeks from under her lashes. His legs were like tree trunks, she thought, though she'd never secretly yearned to run the tips of her fingers up a tree trunk. Kerin pressed her lips together, holding back an unladylike snicker.\n\nTo assure Kerin that he meant what he'd said about not molesting her, Maxen wore loose drawers when he climbed into bed beside her. She didn't resist when he helped her remove her surcoat, but he changed his mind about fetching a maid to help her bathe when he saw her eyes drifting shut before he'd finished. He smiled as he lowered her to the bed beside him and curled his body to fit the contours of hers. Draping his arm across her chest with a satisfied sigh, he slept without dreaming.\n\n--o--\n\nAt a public proceeding in the outer bailey two days later, Maxen sentenced Kerin's men to twelve lashes each for their part in the escape. \n\nKerin's sentence for bashing Maxen's man over the head with a stick of kindling was deferred until the soldier in question could be present. Welsh law was less about punishment than restitution, and the injured soldier would have a say in Kerin's case. Maxen expected to award and then to pay his own man a large fine for Kerin's crime, and he was not at all bothered by the thought.\n\nThe lashing sentence was more for the benefit of his people than to punish Geralt or Milot. The lesson would serve to reinforce the concept that Maxen would fiercely defend what belonged to him, be it lands, fields, or men. Twelve lashes each would pain them, but not wound them severely. More than that would appear extreme-- at least to Kerin-- and Maxen's own troops would interpret less than ten lashes as weakness on his part. \n\nKerin stepped forward from the crowd and raised her voice to be heard. \"My lord, I will take the punishment for my men.\"\n\nMaxen froze. \n\nA struggle erupted as Milot and Geralt began to shout in unison, objecting to Kerin's offer.\n\n\"SILENCE!\" Maxen roared.\n\nThe men continued to thrash against their bonds until steel was applied to skin, threateningly close to heart and throat.\n\nKerin ignored the outbursts. \"As their liege, I must take responsibility for their actions, my lord Maxen.\"\n\nMaxen's eyes burned. She had the right to do this. Everyone within hearing knew she had the right to accept punishment for her men.\n\nAt his elbow, Edon shifted restlessly. Maxen raised his hand to forestall the intervention he anticipated. No one could change what he had to do, nor make the decision in his stead.\n\nKerin stood waiting for his judgment, silent and serene, every inch the queen Geralt had called her. Maxen wondered how he could ever have thought otherwise. With a hard, deliberate blink, he tore his mind back to the present situation. Like it or not, the issue was one of law, not love, and he had no choice but to allow it.\n\nHis face like granite, not moving his eyes from Kerin's face, he half-turned his head and nodded once at Edon.\n\nEdon walked slowly forward to take Kerin's elbow, supporting her as she half-hobbled toward the posts.\n\nMilot began to holler, \"Nay, I-- \" \n\nGeralt silenced him with an angry warning. \"You will undo all she has done to save us.\"\n\nMaxen heard but gave no sign, his eyes on Kerin's slim back as Edon secured her hands overhead, not stretching her to maximize the effect of each stroke, as he would any other prisoner.\n\nHe flicked an eye at Kerin's men. \"Remove them.\"\n\nMilot's anguished eyes were all for his lady, but Geralt saved his final glance in the courtyard for Maxen, who read only sorrow there, not the condemnation he expected to see.\n\nThe bailey was silent as Edon rent her dress. Normally it would have been stripped from her and left hanging at her waist, if not removed completely, but Edon took care to bare only Kerin's back. \n\nMaxen's fingertips were white on the arms of his chair, his teeth clenched tightly. No matter what care was taken, the whip would probably tear the rest of it away. Edon wouldn't whip her as he would one of the men, but the tail of the long-handled ox-whip would still wrap around slightly, leaving marks on the sides of Kerin's breasts and ribcage.\n\nIt was actually Drew's turn to wield the whip that day. He stood ten feet behind Kerin, white-faced and glaring murderously at the sky as Edon approached. Without a word, Edon took the whip from Drew's hand, feeling the tension drop from the other man's body like a weight as the leather left his fingers.\n\nAllowing Maxen time to intercede, Edon cracked the whip once, testing its weight and warning Kerin what was coming. Her pale body shuddered at the sound, but she didn't cry out.\n\nWith his jaw set and his left side facing Kerin, Edon swung right handed across his body, laying the first stripe perfectly across Kerin's white shoulders.\n\nKerin cried out then-- she couldn't help it-- and Maxen was on his feet before he could stop himself, Edon's hissed warning ignored as he strode past. \n\nHe cut the ties from Kerin's wrists and motioned her women forward, disregarding the question on her tear-drenched face. \"Take her to our chamber and tend to her wound.\"\n\nIf he appeared weak to his men, so be it; he'd hurt Kerin enough. He wouldn't do this to her.\n\nHis eyes ran around the circle of crofters and soldiers as he stood with his back to the whipping post. \"As it is my lady's right to accept punishment for her men, so it is my right to take the lash for her.\"\n\nWith a single piercing look for Edon, Maxen stripped his tunic off and turned to place his palms high upon the post. No doubt he'd be hugging it by the end, he thought grimly as he bent his head, but he'd be damned if they'd have to tie him.\n\nFor twenty-nine strokes, other than the whistle and crack of the whip, the only sounds in the bailey were the weeping of women and Maxen's broken, labored breathing, interspersed with an occasional soft grunt. In the unrelieved silence, those closest heard the difference in the last ten strokes, as his back bled freely and the whip landed on wet flesh instead of dry. \n\nToward the end, his most trusted men took up positions to either side to catch him if he fell, but Maxen was right; they didn't have to tie him. He kept his feet until the very end. He was unconscious by the time they got him into bed, mercifully.\n\nEdon was startled to find Kerin dressed and waiting with her maids, wine, bandages, herbs, and salves at the ready.\n\nShe met Edon's eyes without rancor as he directed the men in stripping Maxen's bloody leggings away and getting him laid out on the bed. She was pale and moving carefully, he noted, but her expression didn't betray the burning pain she must be feeling from the stripe he'd laid across her back. Edon had been whipped before, and he was surprised a gentlewoman like Lady Kerin wasn't still crying, or drugged and on her way to sleep.",
        "She went straight to Maxen's side and began to clean his wounds with the wine.\n\nIn a tone that said she expected his obedience, Kerin told Edon, \"Pray have my men released. Sir Glyn.\"\n\nIt was the first time she'd spoken thus to him. When he didn't move immediately, she spared him a glance, and her voice softened. \"I'd like Geralt here to help with my Lord Maxen. I'll need assistance overnight, and would be more comfortable were it one of my own men.\"\n\nEdon realized she didn't know which of Maxen's teulu had been witness to the spectacle her husband put on only five days past. He was already moving to do as she bid him when Kerin added, \"I give my word that they will neither leave nor make mischief.\"\n\nIn the basement below, Edon took care to announce himself before opening each man's cell. \"Lady Kerin has requested your assistance in caring for her husband the king, who chose to take the lashes on her behalf.\"\n\nHe no longer underestimated the loyalty of Kerin's men, nor the strength of the woman who inspired it.\n\n--o--\n\nKerin dozed a couple of times in her chair at the side of Maxen's bed, but she didn't sleep. After midnight, she dismissed her maids and men. Geralt took a pallet on the floor outside the door, with two of Maxen's own men standing guard, one each inside and outside the chamber. Edon believed Kerin's assertion about her men and, moreover, believed her loyal to Maxen, but faith wasn't included in his list of duties. He put Milot in a chamber below, meant to be a nursery, he supposed, though it was empty and cold that night. The younger man collapsed gratefully on the narrow bed, and was asleep before Edon closed the door, leaving the room unlocked and unguarded.\n\nHe looked in on Kerin again, who gave him a sad smile and went back to watching her husband's immobile form. The following day, Maxen slept on, but to Kerin he felt feverish. He spoke several times and opened his eyes once, but didn't seem to know her. She would have panicked, but for Edon and Geralt telling her it was normal, that Maxen would be fine the following day, and eager to be out of bed.\n\nKerin frowned dubiously. Maxen's recovery would surely last no less than a week, no matter when he woke. His back was nearly free of flesh, a red, raw mass which looked alarmingly like uncooked beef. \n\nAt sundown, she dismissed them all again, and went back to bathing his limbs with cool cloths and reapplying poultices of yarrow and sage to his wounds. She soon abandoned her chair for the small space at his side, and stretched out next to him to bathe his face.\n\nWhen he opened his eyes, she was there, delicate and perfect-- and snoring again, that small purr so different from the coarse rumbles of a man.\n\nMaxen knew right away where he was and what had happened, and knew that moving would be hell. For a few minutes, he stayed absolutely still, studying Kerin's face in repose as the complaints of his bladder became harder and harder to ignore. He steeled himself and began the slow, agonizing process of rising.\n\nAs difficult as every move was, he would nonetheless have made the effort to leave Kerin sleeping if she hadn't woken by herself-- he'd been trying to get her into his bed for so long, he didn't want her to leave it so soon. But she woke easily-- for the first time ever-- and sat bolt upright before he'd made it to his knees, shouting at him to stop.\n\n\"Just tell me what you need! I'll get it for you!\"\n\nMaxen grinned, moving one hand to the massive oak corner-post as the door flew open and Edon hurried in, followed by a parade of Kerin's ladies, who'd been banished and anxious because of it.\n\n\"Edon, tell him to get back in bed!\" In her fright, Kerin forgot to be formal.\n\nThe men exchanged a look, and Edon took his place at Maxen's right hand, letting his friend use him for support without touching him in return. \"My lady, after having been abed for nigh two days, your husband has needs you cannot address.\"\n\nKerin's mouth rounded and she motioned for her women to clear the room. With a worried look from Edon to Maxen, she followed them out.\n\nTen minutes later, Maxen was seated on the edge of Kerin's chair, drinking his third glass of water and listening to Edon update him on what had happened while he slept, when Kerin peeked around the door.\n\nShe startled both men when she threw it wide and rushed inside, her caution gone and her ladies flowing in behind her. \"Why are you not abed?\"\n\nShe directed maids in changing the sheets, sent a man to bring warm water and wine to bathe her husband's limbs and wounds, ordered women to the kitchen for food and ale, and opened the curtains, all while continuing to berate both Maxen and Edon for keeping him up so long. \n\nFor the remainder of the day, Maxen stayed in bed, allowing Kerin to feed him and fuss over his wounds, fighting the sheer happiness he felt at this small proof of her concern. He tried to take it in stride: Kerin was naturally caring and gentle with the infirm, and her attitude might not have anything to do with him. Eventually, he decided to relax and let himself enjoy her presence while he was nurtured like a babe, lest she withdraw her attention altogether when he healed.\n\n==0==\n\nHe rose early the next morning, though, to Kerin's vocal displeasure. He'd tried again to sneak out of bed without rousing her, but as soon as he began to work himself into a sitting position, she sprang out of bed, alert and already castigating him.\n\nMaxen frowned, befuddled. The woman could sleep through fire, flood, and the invasion of a dozen armies, but she'd woken at his slightest twitch the past few days. As Maxen's recovery continued, so did Kerin's habit of waking easily. Maxen at first blamed it on her being unused to sleeping with another person in the bed, but her actions during daylight hours convinced him otherwise. To his men's amusement, Kerin fussed over Maxen long after he lost the need to be tended. By the third day, his wounds were closed and, as any other trained warrior would do, Maxen disregarded the lingering stings and occasional skin-shrieking pull as he moved. Maxen found it equally fascinating and touching to watch Kerin struggle with her worries as he went about his business. \n\nHoping his private predictions would finally prove correct, Edon had begun the process of smoothing over Milot and Geralt's relationship with Maxen's men when they first emerged from the cellar. When the men saw Maxen's own acceptance of Kerin's retainers, though, was when they truly began to welcome the newcomers. Easy-going and experienced, Geralt was among brothers within a week, but Milot was harder to place. He was no longer sullen, but his reserve seemed to echo a basic uneasiness which only vanished in Edon's presence. To Maxen's amusement, the younger man took to following his second like an eager pup, asking endless questions and imitating his style of fighting when they trained. Faced with the fact of his seeming immaturity, Maxen and his men decided that perhaps Milot was a little bit slow, but a good man at heart, with the strong legs and lungs of a soldier in the making. One at a time, Maxen's teulu pulled Milot aside for a pointer here and there, after which he adopted and mastered their moves with impressive alacrity. \n\n--o--\n\nKerin kept her own counsel as she tried to navigate the unknown land in which she found herself abiding. At table, she behaved as she always had-- polite, welcoming, and familiar. In their chamber at night, her manner with Maxen was less easy. She didn't know what to think of his precipitous transformation from angry dictator to patient and caring spouse, and she simply couldn't accept his declaration of love. After years of loneliness and quiet, enduring heartache, topped by weeks of stress and turmoil, Kerin couldn't allow herself to think that her dream was truly possible. \n\nMaxen, however, refused to accept the distance his wife tried to maintain between them. He spoke to her about his day and asked about hers. He changed clothing and bathed in her presence without hesitation. He didn't stare, but he wouldn't leave the room when she bathed, either. And at night, he wouldn't let her sleep apart from him. He draped an arm across her waist or tangled their feet together, snoring reassuringly in her ear. At first, she didn't fight him because she was afraid she'd hurt his back if she struggled, but as he healed, she grew accustomed to his touch. By the end of the second week, she'd stopped tensing up and had even begun to curl into the heat of his body when he spooned her. His embrace didn't feel constraining: it felt safe, even if it was intended to prevent her escape. By then, of course, she'd changed her mind about escaping. \n\nThe lashing Maxen had taken in her stead had changed everything for her.\n\nEventually, she began to believe in the strength of his commitment, even if she wouldn't let herself believe in his love. He kissed her chastely before bedtime each night, and she wondered if he'd ever really changed his mind about giving her children. In the meantime, his physical proximity began to wear on her in a whole new way. Instead of recoiling, she had to stop herself from rubbing up against him like Sir Furball asking for attention. Even when Maxen wasn't sporting one of his frequent erections, the press of his cock against her bottom was an unavoidable reminder of the intimate things they'd done together.\n\nKerin's first marital bedding had been traumatic, but she'd since realized that circumstances at least partially explained his actions. Through the tear-streaked panes of memory, she saw the shock on Maxen's face when he took her so harshly. He'd truly not known she was virginal. \n\nIn any case, every other time he'd touched her had been heaven, and her body had not forgotten any of it. So she lay quietly going crazy in her husband's arms at night, her nipples knotted into aching peaks and the intimate folds of her pussy crying out for his fingers and lips. She was often so aroused that even rolling over was a kind of erotic torture, the fabric of her gown brushing across her nipples and the friction of her thighs against each other causing a surge of tingling warmth. Every sensation was too much and far, far too little.\n\nAs Maxen's back healed more completely and Kerin relaxed in his presence, they began to talk more often. In the soothing darkness of their chamber, they spoke softly, sleepiness and sightlessness adding another layer of ease to their conversations. Very carefully, they did not discuss their personal histories or their future together, but they talked about almost everything else. In the dark, they rediscovered all the things they'd had in common when they walked the moors so long ago, and Kerin desperately tried not to remember the way his lips and tongue felt laving the sensitive folds which ached so badly for his attention.\n\n--o--\n\nEvery second Friday was traditionally judgment day at Tywyll Keep, when serfs, servants, and freemen alike presented disputes for their liege to settle. Most were handled by the land steward Maxen had appointed, but a good sovereign always settled the more contentious disputes himself, including any case involving beloved elders or a sensitive subject. It was a chance for people to interact with him and feel their own worth in the larger system of farm, field, and keep.\n\nMaxen was daydreaming through a long-winded description of the boundary between one vassal's beans and another vassal's peas when he saw Kerin enter the Hall. As was usual when he caught an unexpected glimpse of her during the day, Maxen's blood began to thud more loudly in his veins, his attention narrowing until she was all he saw. Today, he was glad to see, she'd worn a new dress, made from one of the bolts of fabric he'd given her to replace the worn items virtually everyone in the household had been wearing when he arrived.\n\nThe deep green surcoat complemented her fair skin, and the pale gold dress she wore underneath sported the newer style of sleeves, draping to within a foot of the floor and lined with deep red. He'd once heard her complain that she was loathe to use fabric for such frivolity, but Maxen planned to shower her with every bit of comfort and beauty he could afford. Kerin's acceptance of his gift meant he could begin the pleasant task of spoiling his wife.\n\nHe kept half an ear on the final sentences of the great vegetable debate while he watched his wife from the corner of his eye. Instead of crossing the Hall to the kitchen or stairs, she said a few words to the person at the head of the line, who stepped aside to let her have his place. \n\nMaxen lost his train of thought. What was she up to now?\n\n\"My Lord?\" He came back to reality with Edon at his elbow, suppressing a grin.\n\n\"Ah, yes... well...\" He jerked his mind back to the current issue.\n\n\"If Arthen would agree to sacrifice his half-strip of peas to Cledog,\" Maxen held up a palm to soothe Arthen's budding sneer, \"I will sacrifice the last strip of the manor's west field for Arthen's use. Since Arthen and Cledog have been productive, peaceful men and have worked diligently for the common good, I believe the increase to be a fair solution to this dispute.\"\n\nWhile Arthen and Cledog celebrated their new wealth with a joyous embrace, Maxen smiled slyly at Edon. \"You doubted my royal wisdom, did you not?\"\n\nEdon bowed deeply as the two serfs were escorted from the Hall, \"Never, my lord.\"\n\nWhen Maxen's man at the head of the line gestured for Kerin to come forward, the crowd lining the walls of the Great Hall stilled. By the time she reached him, the space was as silent as a tomb. She curtsied deeply, \"My lord Maxen.\"\n\n\"My lady.\" He was afraid to ask her business with the court. \"How may-- \"\n\nKerin sank gracefully to the floor. Sitting on her heels, she bent and pressed her forehead to Maxen's leather-clad toes, alarming him. If he hadn't been wary of hurting her, he'd have leapt from the chair. Instead he froze, able only to rasp her name. \"Kerin-- \"\n\nShe lifted her forehead an inch and raised her voice so everyone in the hall would be sure to hear what she said. \"I beg my lord's forgiveness. I was foolish not to follow your lead and trust in your wisdom from the hour of your arrival.\" Giving Maxen no chance to answer, Kerin's personal plea ran straight into the formal Oath of Fealty everyone swore to their liege. Everyone except the lord's wife. \"Before these witnesses I promise my faith forever to you, Maxen ap Dyfed, without deceit or reservation, no matter what the cost to my body or belongings. This vow I do honorably promise to fulfill until death takes me or my Lord releases me from obligation.\"\n\nMaxen was silent and still for a moment, unspeakably moved by her gift of the public apology. He bent forward and hauled Kerin to her feet, lifting her easily into his arms. A roar of approval from the crowd followed them halfway up the stairs as he carried his bride to their chamber.\n\nIn the Great Hall, Edon took Maxen's seat. Sighing deeply in resignation, he gestured to the head of the line, where an old man held a goat on a leash of string. \"Next case, please.\"\n\n--o--\n\nMaxen had his wife nude within a minute of slamming their chamber door, but he didn't join with her immediately, as his cock pleaded for him to do. Instead, he placed her gently on the bed and lowered himself to lay beside her, clothed only in his leggins, though he'd removed everything else. Their first encounter as a married couple made him leery of letting his fervor show, lest the depth of his need frighten her.\n\nKerin didn't seem to share his caution; she rolled to face him and moved forward until most of her body was pressed against his side. Maxen meant to tell her how much her gesture meant to him, but their legs entangled as they lay side by side on the feather mattress, kissing, and Kerin wouldn't stay still. She rocked and wiggled against his thigh, her hip repeatedly brushing the bulge where his cock fought the constraints of his clothing, and those luscious breasts nudging his ribcage, until Maxen could no longer recall how to form words.\n\nWhen Kerin's lips parted beneath his, and her tongue crept out to parry the strokes of his own, Maxen groaned and gave in-- to Kerin or to himself, he didn't know-- their will seemed to call for the same results.\n\nHe rolled to his side and pulled her close, sliding his arm down to pillow her head while he tasted at his leisure. Deeper than his desire to plunge inside her was his desire to wipe out those other memories, supplanting them with ones that echoed his true feelings. Kerin could still hurt him, but Maxen was done shielding his soul. Dying for love of this particular woman would be better than dying alone, locked in the cage of bitterness he'd carried for the past half-decade. If he broke, he'd break in Kerin's arms.\n\nShe craned her neck, pushing with her toes to climb higher on the mattress, and Maxen moved to meet her ardor. No longer shy with her kisses, Kerin savored the taste of her husband's lips, like liquor and honey. In her mind, she smiled at the fancy, though it did indeed feel like a hive of bees had taken up residence in her abdomen, their combined buzz morphing quickly into the pleasurable tingle that took over her lower half whenever Maxen touched her.\n\nThe warmth of his hand covered half her back, pressing her torso more firmly against him. Kerin curled her hips forward, seeking another kind of heat.\n\nHe licked and sampled and nibbled at her lips until her body was taut with yearning, before he rolled Kerin to her back and let himself touch her elsewhere.\n\nBeneath his hands she quivered as he cupped and stroked, her breasts, her ribs, her waist, the smooth curves of her hips and thighs. With teeth and tongue he tugged at her nipples until they were red and near to bursting, then lapped them softly with the broad burr of his tongue as Kerin arched and whimpered.\n\nWhen he rose to kneel between her legs, the cool air made Kerin whimper, a tiny prelude of the aching moan she made when he pulled her knees from the bedding and parted them over his own. Up and back he lifted as he moved forward, until only her toes touched the mattress, and her upper thighs lay languishing widely over the muscles of his.\n\nWith her body spread for his perusal in the afternoon light, Kerin felt more naked than ever before. She trembled, her fingers unconsciously clenching the bedclothes, as her chest rose and fell with ever more effort.\n\nMaxen flicked a glance at her face to gauge Kerin's response and was caught by the rising desire he saw in her eyes. He watched the fires burning as he stroked slowly from her knees inward, again and again, until he couldn't stand to be apart from her. Once more he stroked the satiny path of her pale white limbs, his eyes following his palms as they climbed the delicate flesh, stopping only when his thumbs touched the pair of small hollows at the very top of her thighs\n\nMaxen's fingertips curved into the crease at Kerin's hips, and he held the position momentarily, his nostrils flaring as the scent of her arousal rose to beckon him forward. The glint of moisture at the juncture of her thighs beckoned even sweeter than the fragrance, and unconsciously Maxen licked his lips.\n\nKerin gasped, but her husband's attention was centered elsewhere now.\n\nMaxen moved his thumbs in waves, slightly pressing, his hands inching microscopically higher each time, until the tugging strokes began and ended in the light brown curls of her nether lips. Every achingly slow stroke opened her pussy to the room's cool air, each release of pressure causing another kind of ache.\n\nWith her thighs draped over his and her bottom pinned between Maxen's knees, Kerin could only arch and moan, the back of her head pressing into the pillow as her fingers nearly pierced the bedclothes under her body.",
        "Finally, he stopped at the zenith of one stroke, holding her pussy open.\n\nKerin opened her eyes. A wave of heat swept from her face downward, turning her cheeks and chest a brilliant pink as she saw Maxen hovering above, just looking at her. The intimate flesh he'd exposed swelled and colored more deeply as blood pulsed painfully through the tissues.\n\n\"Maxen.\" Her whisper drew his eyes to her face and she begged. She couldn't help it. \"Maxen, please. Please...\"\n\nHe'd meant to lick her until her limbs would no longer function, until his face was coated cheek-to-chin with the liquid evidence of her desire, but Kerin's quim had blossomed into pleasure beneath his tongue once before. Now she needed to know more than the purely sexual gifts he could give. She needed the truth of his penetration to wipe out the pain he'd caused before. She didn't know the words, but her whispered plea was enough. The desperation in her voice drew his body to hers.\n\nKerin's thighs cradled his hips as he rose between them, stripping his leggins away.\n\nThe muscles of Maxen's arms and chest moved sensually beneath his skin as he supported his weight above her. Kerin's fingers twitched, and this time she felt free to touch him.\n\nA small hiss slipped from between her husband's teeth as her palms swept their heat across his chest, exploring. Her fingers brushed his nipples, traced the top of his pectorals, and circled down to curve around the wide wings of his broad back. Tiny sparks darted through nerve endings already lit with fire, and Maxen felt his self-control slipping. \n\nHe moved before instinct stole his will, looking away from her loving gaze to watch the head of his cock as it touched her weeping slit.\n\nKerin squeaked, her fingers denting his firm, bronzed flesh as they clenched in anticipation and arousal.\n\nRocking his body, Maxen used his cock to pet the velvety lips of her pussy, letting it rest in the swollen cleft and press her lips aside with every long, shallow stroke.\n\nKerin's sight dimmed and her breathing became erratic as she lowered her lids to savor the cacophony of erotic messages from nerves teased into a tender awakening. Four, five, six times he caressed her that way, until Kerin was sure she'd scream in frustration. Finally, he shifted again, and the great, round head of his penis fell to press against her small opening.\n\nKerin's eyelids flew up, exposing her to Maxen's dark and piercing stare. \n\nHis nostrils flared as he held himself in that position, the growing tension between her legs reflected in his eyes.\n\nKnowing he waited only for her approval, Kerin consciously relaxed her hands, smoothing them upward over the curves of his shoulders, until her fingers threaded themselves into the subtle waves at the nape of his neck. \n\nShe dipped her chin slightly, holding his eyes.\n\nMaxen let his body sink lower, watching for any sign of alarm. With a sudden release, the head of his cock slipped into her wetness, and they both made sounds that could have been mistaken for pain. His eyes sought reassurance. Kerin's lips pouted softly, sipping in short gasps while her cunt stretched to accommodate his girth, but her brow was unwrinkled. Miraculously, she seemed untroubled by memories of his earlier savagery.\n\nHis mind eased slightly, but tension still bunched his muscles as Maxen pushed slowly inward.\n\nKerin bit her lip, her fingers spasming in his hair, but the restless movements of her lower body told him it wasn't pain which bothered her then, and his way was eased by the evidence of her arousal. He thought to pull out and press again, but the compulsion to complete their bond was stronger than habit. She needed-- they needed-- to come together, to be finally whole.\n\nMaxen didn't question his interpretation, but forged ahead until his hips met hers. He let his weight fall inexorably into the embrace of her thighs, forcing him even deeper. As his cock bottomed out against the deepest part of her, they moaned in unison. With that sound, Kerin's eyes closed and her arms encircled his neck. \n\nMaxen went to his elbows and sunk into her kiss, letting her become accustomed to his invasion as he reminded her of his devotion with kisses and murmurs.\n\nHer chest still heaved beneath him when he lifted his head, but Kerin's calves had climbed higher on his back, and her hips scribed urgent circles under him.\n\nMaxen tried a small withdrawal and pushed back in. Kerin stopped breathing, her eyes wide. He did it again and she released the breath, panting. Again and again, he retreated and surged, until the grip of her body eased into a tightness which tolerated the pistoning shaft of his cock. His thrusts became longer, smoother, encompassing his entire length, her pussy eagerly awaiting each plunge.\n\nHer gasps turned to a broken stream of whimpered words and low moans.\n\n\"Yes, caradoc.\" Maxen urged her pleasure higher. \"Yes, my love.\"\n\nKerin arched and writhed beneath his ministrations, her hips rising to meet every move as the spring in her belly wound tighter and tighter, until it burst in heavenly waves, curling her toes.\n\nMaxen gritted his teeth, slowing the movements of his hips to push her pleasure higher, and managing somehow not to come while her pussy rhythmically clenched his cock. Maybe he could have saved the revelation for later, but he wanted her to know that one orgasm wasn't the limit of the pleasure she could expect from future couplings. So he grimaced and hung on until her body went limp below him, then set to building her up again.\n\nThe second time she came, Kerin bit his shoulder to stop herself from screaming her husband's name. The tiny pain of her teeth shocked him into an explosion he wasn't expecting quite that soon, and it was a more intense release of body and soul than he could have imagined.\n\nHe bent his head and groaned long and loud into the waves of hair spread across her pillow. Each spasm of his cock spilling its liquid gift inside her body was another burst of ecstasy flushing part of his old life away.\n\nMaxen sank into Kerin's embrace as they rested in the shattered aftermath of a joining more potent for its many delays, more rewarding for the difficult road they'd taken to the contentment encircling them now. \n\nFinally, still feeling soporific and dull-witted, he rolled to his side to sort out their tangled blankets. When he'd settled her into his embrace again, he repeated what he'd told her before. \"I love you, Lady Kerin, and I will never tire of loving you.\" \n\n\"Caradoc,\" she murmured against his throat, tears of emotion filling her eyes.\n\n--o--\n\nThe following morning, Kerin and Maxen took breakfast in their chamber. Loitering, Maxen watched Kerin become ever more anxious, until she could no longer keep her seat.\n\n\"Kerin, tell me what vexes you,\" her husband commanded.\n\nKerin halted her fevered pacing before Maxen, her head lowered. \"Geralt and Milot have requested my permission to pledge their fealty to you.\" She hesitated, twisting the fabric of her gown. \"I will not deny them, or you, this right, but I wish first... I wish to tell you what I have done in service to my family.\"\n\nMaxen thought it slightly odd, but typically Kerin, that she called her men family.\n\nWith a deep breath, Kerin began, praying her confession wouldn't put an end to the fragile promise of a lovely, lasting marriage. There was a chance it would also end her life, but that sounded like the lesser of two evil outcomes after the nights she'd spent in her husband's arms.\n\nShe drew her shoulders back, meeting Maxen's steady look with a multitude of emotions swirling behind hazel eyes, normally so serene.\n\n\"I'm sure you've heard the story my people tell about the death of--\" she swallowed tightly. \"my younger brother.\" \n\n\"When you came to take me home five years ago, Selyf was in the buttery, hiding from the baron whose bastard son he'd slain while defending himself. My father the King was only rarely lucid in his final illness, and I could not trust him with the welfare of our people. I had a sleeping draught made ready to give him as soon as I heard the Baron's men were sighted. As the daughter of the 'absent' king, I'd be the one to treat with them.\n\n\"You... I'd sent messengers to break our pact, but they...\" She dropped that thread of the story and began anew. \"You were an honorable man. Had I confessed our plight, you would have been forced to help, endangering yourself and your own people, or you would have sided with the law. I could not risk either. I acted... I have never forgiven myself for treating you the way I did.\"\n\nMaxen wanted to reach out for her, but sensed there was more to come and pressed his palms to his thighs to hold himself in place.\n\n\"My father died the following year, having forgotten my former betrothal, and never having learned of Selyf's death.\"\n\nKerin's gaze locked on her husband's, as though she faced both judge and executioner in the privacy of the chamber. With another of those deep, gathering breaths, she went on. \"I paid a crofter for his son.\"\n\nShe swallowed and closed her eyes momentarily, the bald statement lying heavily in her throat.\n\n\"They had nine children, and the boy was but another mouth. I gave them everything I had-- including wagons and oxen to take them away from here forever. I fed him a caustic so he couldn't speak and drugged the boy before I sent for him so he...\" Kerin bit her lips, her shoulders shaking. With her vision centered on the memory of her past sins, she was having trouble looking at him. \"... so he would not be as scared. I did what the stories say I did. I beat him, and when he would not answer my questions, I borrowed Geralt's sword and... and...\"\n\nMaxen caught her hand and tried to pull her down to him, but Kerin shook him off, straightening her spine, every inch a queen.\n\n\"I'd already stained his back with berry juice, so the baron's men had seen evidence of the boy's identity. I cut his head off and gave it to them, saying, 'A princeling for a bastard, pray beg the baron for forgiveness on my behalf.' \"\n\nShe was quivering, and a sheer layer welled over her lower lashes, but no tears stained her lovely cheeks. \"His name was Burke. He was twelve.\"\n\nMaxen's chest ached for her. \"And your brother?\"\n\nKerin's mouth twisted, and she finally met his eyes again. \"Have you not guessed?\"\n\nMaxen shook his head slowly, side to side, for a long minute, until his dark eyes sharpened. \"Milot?\"\n\nKerin nodded.\n\nMaxen nearly choked. \"I thought...\" he cleared his throat. \"I nearly killed him myself. I thought he'd bedded you.\"\n\nKerin's eyes widened and she flushed. \"But I... I--\"\n\n\"I did not know then that you were a maid.\"\n\nShe colored more deeply still and looked away from her husband's penetrating gaze, trying to collect her thoughts. \"Everything I have done was for Selyf. I could not marry you then because I was needed here. When you decided again to take me as your wife, I protested because half of Selyf--\" She paused to correct herself. \"half of Milot's back still bears the mark he's had since birth. After he kneels to you, one of your men will surely see it on the practice field or in the barracks. Eventually the baron will learn of my deception.\"\n\nHer eyes were silvery pools of pain and worry as she studied his reaction. \"Milot is no longer my little brother. He is a man and has the right to do as he pleases without my interference, but Geralt should not suffer for my sins, and you needn't be complicit. We can still leave, if-- \"\n\nThis time, Maxen tugged harder when he caught her hand, and Kerin landed in his lap. He wrapped his arms around her ribcage and held her tightly to him, pressing his face to the side of her neck. \"You will go nowhere without me, my lady, the barons of Marchia Walla be damned.\"\n\nKerin turned toward him, nearly weeping in relief as she threw her arms about his neck. His voice vibrated through the skin of his throat and her cheek, where they pressed warmly together. \"My men are loyal to one another as well as to me, Kerin. If Selyf-- Milot-- pledges fealty, they would die rather than see him taken by any Marcher Lord, court, or kingdom. Milot will be safe among my teulu; I give you my word.\"\n\nWith that, Kerin gave in at last, and the tears she'd been suppressing for so long ran freely down her cheeks. She cried like she'd never cried before, while Maxen held her close, rocking her quietly to and fro as she sobbed out the years of loneliness and worry, all the sorrow she'd felt rejecting him, everything. She was limp when her outburst ended, and Maxen took her back to bed. He held her while she fell asleep, then went happily to find her men and hear their pledge, knowing his life had just begun. \n\n--o--\n\nThat Saturday, Penrhyn Tywyll celebrated. Mistress Nevyn in the kitchen ordered a hog and a goat slaughtered for the hearth, Maxen broke out another barrel of mead and a cask of wine from the stores he'd brought from Rhos, and two vassals produced honeycombs for all the children to share. All the torches were lit and every harp and pipe brought out. All Welshmen sing, and for hours the Great Hall rang with the music of the crwth, in which all sing different parts instead of hewing to the same stale melody as the Saxons and Normans did.\n\nIt was nearly dawn when Kerin and Maxen finally made it to their chamber, and Kerin was so tired she couldn't even find her feet and remove her shoes.\n\nThey woke when the bailey below their window came alive, but they didn't leave the comfort of their bed. They made love and slept again. When they woke the second time, Maxen bellowed for breakfast, ignoring the two soldiers slumped at the head of the stairs, though he muttered enthusiastically about the painful practice they'd suffer later for having slept while standing guard duty.\n\nOver breakfast, they laughed about the festivities the night before, especially Edon dancing with the tiny old laundress-- repeatedly. Kerin sighed, gazing from the Maxen to the bed and back to Maxen. She stretched, smiling widely. \"Now I feel well and truly married-- I've pledged my troth, been feted and bedded by my strong, handsome king!\"\n\nMaxen's small frown surprised her and Kerin quieted immediately. \"My lord?\"\n\nHe studied her intently. Several times during the previous night's celebration, he'd noticed that Kerin seemed uncomfortable. He suspected the reason and was afraid to bring it up, but even more afraid to let it linger unsaid. \"If you desire it, I will kill the men who witnessed the barbaric way I behaved toward you earlier, my lady.\"\n\nShe scooped Sir Furball from the bed and walked to the window, hoping the kitten could pacify an unquiet mind. \"How many?\"\n\n\"Three, but one died after a wound festered,\" Maxen lied easily, protecting her from the knowledge of Edon's deed, also done with Kerin's welfare in mind. \"I spoke to them and explained my actions were an indication of my boorishness, ill temper, and an excess of ale, and were not to be seen as a reflection of your chastity or character. They believed me, and neither wish to remember the night,\" He cleared his throat. \"But I will end them if you so desire.\"\n\nKerin shook her head without meeting his eyes and murmured her refusal. She didn't know which two men had been there and preferred to leave it thus. \n\nShe went on scratching the purring ball of fluff she held and was silent for a minute, but glanced at Maxen from beneath her lashes several times. \"My lord-- \"\n\nHe rose and strode across the room to be with her, which seemed to make his bride more nervous. \"M'lady?\"\n\nShe went silent again, looking from his chin to the kitten and biting her lower lip while she gathered her courage.\n\n\"My lord Maxen, when you so generously gifted me this--\" She dipped her chin and shrugged, drawing his attention to the kitten on her chest. Her mouth softened. \"--this gray imp... after... after my bath, you-- that is-- \" Kerin blushed a brilliant pink.\n\nMaxen's eyes darkened as he began to sense which direction her thoughts had taken. He shifted his weight, leaning toward his wife. \"Yes, my lady?\" His words were a soft growl a foot from her ear. \n\nKerin felt faint. She opened her mouth, but no sound emerged to save her.\n\nFrom where he stood looking down at her, Maxen saw the rapid rise and fall of her lovely breasts. He was sure, then, what she wanted to say, and plucked the kitten from her grasp, dropping it unceremoniously on the feather bed behind him.\n\nWith his fingers at the back of her neck and his thumbs on her jawline near her ears, Maxen tilted Kerin's face to his. Her lashes fluttered, but she lifted her eyes. Her skin was flushed and her lips parted. He wanted to taste her, but he wanted to hear her say it, too, so he restrained himself. \"Did you like it, Kerin?\"\n\nHer eyes widened and she gasped.\n\nHe tasted then, sampling her wide, lush lower lip with licks and gentle nibbles before his mouth moved to her ear.\n\n\"You felt the bloom of pleasure while I plundered your pussy with my tongue, did you not?\" He kissed the soft white skin behind her ear, feeling her pulse thrumming beneath his lips.\n\n\"Did you not, Kerin?\" He repeated.\n\nShe could barely breathe; how could he expect her to speak? \"I... yes, my lord.\"\n\nShe clung to his tunic, depending on the solid body beneath to support her, since her shaking legs were not to be trusted.\n\nHe cupped her breasts and kissed his way back to her face. \"D'you want that again, m'lady? D'you want to feel my lips parting the soft, wet skin of your pretty little quim? My fingers exploring the hot, tight flesh which waits only for my cock to fill it?\"\n\nShe panted against his lips and whispered, \"Caradoc, yes.\" \n\nKerin turned her face to kiss him before he was ready to surrender, and Maxen was lost.\n\n--o-- The End --o--\n\nYes, I know it's a little mean to leave you here, but this really is where the story ends. I'll probably add an epilogue later to make it up to you. \n\nIn the meantime... since so many of you asked for more, I've decided to post the first book in the Texas Trio series on Literotica. I think you'll enjoy Catherine's story as much as Kerin's. Watch for the first few chapters in Erotic Couplings in two weeks-- yes, it's already written, but I want to make a few small changes, so I'm still posting once per fortnight. I'm an instant-gratification girl, too, but I work full-time, third shift, and I'm a divorced parent with three children, one of whom has autism. I write when I can!\n\nAs far as Kerin & Maxen's future ... after your last set of encouraging and complimentary pleas, I thought, \"Well, what ABOUT Edon's story?\" In two days, I had a fairly complete outline, which in two weeks has become a decent rough-out, with a couple of short scenes already written, plus the bones of an idea for the third story. Keep an eye on my bio for updates.\n\nThank you again for the hearts, stars, and comments-- even though I now have homework! Love-- Stefanie"
    ],
    "authorname": "SteffiOlsen",
    "tags": [
        "medieval",
        "castle",
        "knight",
        "first time",
        "virgin",
        "romance",
        "captive bride",
        "mystery",
        "secret",
        "escape"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-long-betrothal-ch-05"
}