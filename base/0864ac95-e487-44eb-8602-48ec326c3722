{
    "title": "Power Ch. 02",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 5 - Killing Power\n\nFBI Special Agent Martin Nash went with me and Cindy as the afternoon of Tuesday, February 21st began showing signs of age. We were driving in the Black Beauty, and Martin Nash was really looking over the car from the shotgun seat. Cindy showed him a few of the things in the car, like the radar and portions of the GPS tracking system that most everyday cars don't have access to. But she may have conveeeniently forgotten to mention the weapons systems.\n\nOur first stop was the home of the late Honey Parker. Her husband Eric Parker talked to us. After the initial condolences, I began.\n\n\"Sir, your wife worked with a human resources consulting firm?\" I asked. \"May I ask what she specifically did for the company?\"\n\n\"Yes.\" said Eric Parker. \"The company would advise their clients on efficiency and regulatory compliance, but also would handle some of the data technology, automation, pay, things like that. She was a liaison between the clients and the data group.\"\n\n\"And you are a lawyer, sir?\"\n\n\"Yes, I am.\" said Eric. \"I was in my own practice up to about three years ago, then I sold that out and became a lawyer for BigPharmaCorp, mostly handling lawsuits against them.\"\n\n\"I see.\" I said. \"Do you know of anyone at your wife's company, her client companies, or BigPharmaCorp that might have reason to want to harm your wife?\"\n\n\"Not that I know of.\"\n\n\"Let me be a little bit more incisive on that.\" I said. \"You didn't report your wife's disappearance for well over 48 hours after she was last seen, at a dinner with some of her I.T. group. Why did you wait for so long?\"\n\n\"Uh...\" said Eric Parker. \"Er, this is kind of hard to talk about. My wife and I had what you would call an 'open' relationship. She was... 'dating', for lack of a better term... one of the younger men in the data group, a guy named Mike. I thought she had gone home with him for the night; it would not have been the first time. So I didn't think much of it until she didn't come back the next morning. I couldn't get a hold of her, nor Mike, but I still waited another day before really getting worried.\"\n\nI peered at Eric Parker as Cindy asked \"Did Mike disappear also?\"\n\n\"Yes. He did.\" said Eric. \"When I was told of the bodies that had been found, I thought the man that was found was Mike. But it wasn't, it was some college student. I have no idea who he was, though.\"\n\n\"Let me ask you this, Mr. Parker.\" I said, letting my voice get just a bit hard. \"Were you contacted by someone regarding your wife's disappearance? Like on the night she disappeared?\"\n\n\"Uhh...\" Eric said, then halted.\n\n\"Mr. Parker,\" I said, \"we really need to know. We're trying to prevent any future deaths. We need your help, Mr. Parker. Did someone contact you?\"\n\nEric conceded. \"Yes.\" he said. \"I was contacted by a man. His voice sounded weird... whispery... and almost like he was laughing at me through the phone.\"\n\n\"What did he want?\" I asked. \"What was his ransom price? And Mr. Parker, I know it wasn't just money, or you would've told the FBI that, and they could've helped arrange to get the money. But you said nothing, so the man wanted something else. What was it?\"\n\nEric was contemplating hard. He finally said \"I don't know if I can tell you without incriminating myself. So I can't answer the question, and if you press, I'll formally take the Fifth.\"\n\n\"I understand.\" I said. \"So why don't I tell you what the blackmailer wanted, and you can withhold a denial if it's true. I think he either wanted some legal papers you had, or he wanted you to obtain some legal information, either about a past client of yours, or about BigPharmaCorp. Or maybe about some shady legal work you did in the past for someone, something dirty you helped hide. Now Mr. Parker, I am not interested in going after you; I'm trying to find your wife's killer. So do you deny that I am right?\"\n\nEric Parker just stared at me and said nothing, maintaining a stony silence. \"Thank you, Mr. Parker, and again I am sorry for your loss. I want you to get a lawyer, then contact me through the SBI. Here's my card, just call that number. I will arrange to get you immunity so that you can tell us more, if you'd be willing to do that... for Honey's sake.\"\n\n\"I'll consider it.\" said Eric.\n\n* * * * * * * * * * * * * * * *\n\nGrant Leslie's parents were in their early fifties, and like Honey Parker's husband, lived in the western suburbs of the City. \n\nAfter introductions and formalities, I began: \"Grant was a college student when he disappeared?\"\n\n\"Yes.\" said Mr. Leslie.\n\n\"He had no official major, but do you know what he was interested in studying?\" I asked.\n\n\"Not sure.\" said Mr. Leslie. \"I was surprised he went to college at all. I figured he'd have to find a job or start a business of his own after he got out of the Army.\"\n\n\"Do you know of anyone who might have wanted to harm your son?\" Cindy asked.\n\n\"Uhhh, not really.\" said Mr. Leslie.\n\n\"Dear, let's tell the FBI the full truth.\" said Mrs. Leslie, a very attractive woman whose shapely body was just beginning to put on weight. She reminded me of Della Harlow. She said \"Grant was very sexually active. We were always scared to death that some girl was going to knock on our door and tell us that Grant had impregnated her. Grant seduced at least ten of the wives in our neighborhood, and while they tried not to talk in front of me, things came back to me about what he was doing.\"\n\nI nodded as Mrs. Leslie continued: \"Grant was caught in bed with Mrs. Christian, one of the teachers at his high school, by her husband. Mr. Christian attacked Grant, and Grant beat the man up, and pretty badly. It was self-defense, but the Police arrested Grant, anyway. Mrs. Christian made a plea deal to avoid being prosecuted, and as part of it she admitted under oath that Grant was defending himself.\"\n\n\"Still,\" said Mrs. Leslie, \"Grant was 'encouraged' to join the Army and the charges would be dropped. They don't sentence people to join the Army anymore; the Army won't accept them. But Grant went to the Recruiting Office and joined up, anyway.\"\n\n\"And he was dishonorably discharged?\" I asked.\n\n\"Yes sir.\" said Mrs. Leslie, as her husband looked on with a face of deep disapproval... at what, I was not sure. \"Grant was again caught having sex, this time with an Officer's wife. A young little Second Lieutenant. That cuckolded Lieutenant attacked Grant and Grant had to defend himself, and then the wife said Grant was raping her! The Army CID found out that she was a filthy tramp that would spread her legs for anyone, so they leaned hard on her and she admitted the sex was consentual.\"\n\n\"Still,\" continued Mrs. Leslie, \"the Army charged Grant with assaulting an Officer. He was offered a Dishonorable discharge in exchange for no jail time, and his military lawyer told him to take it or end up in Leavenworth. If you ask me, the whole damn thing was rigged, destroying an Enlisted man to protect their worthless Officers regardless of the truth.\"\n\n\"What about right before he disappeared?\" I asked. \"Anyone want to harm him at that time?\"\n\n\"I'm sure there are a number of other husbands who didn't like Grant seducing their wives.\" said Mrs. Leslie. \"But I don't know any specifics or any names. And Grant never said anything about being in trouble.\" Mr. Leslie nodded in agreement.\n\n\"You were a journalist at one time, Mrs. Leslie?\" I asked.\n\n\"Yes, I was. I was with KSB.\" said Mrs. Leslie. \"I left there some years ago.\"\n\n\"You resigned?\" asked Cindy, peering at the woman.\n\n\"No.\" Mrs. Leslie conceded. \"I was part of a massive layoff they have every so many years. They treat people like toilet tissue, then throw us in the toilet and flush whenever they damn well please.\"\n\n\"Do you know of anyone who might bear a grudge against you, for past reporting, Mrs. Leslie?\" asked Martin Nash.\n\n\"No sir.\" said Mrs. Leslie. \"Not that I know of. I was never a hard news reporter or someone who found out things one shouldn't know.\"\n\n\"Mr. Leslie,\" I said, \"you were with the Court system?\"\n\n\"Yes sir.\" said Mr. Leslie. \"I was a Custodian of Records. I would bring evidence from the Evidence Rooms to the Court when it was needed for the trials, and I also transferred paperwork for legal proceedings. Stuff like that.\"\n\n\"I understand.\" I said. \"So you didn't call the FBI for three days after Grant was last seen alive. Is there a reason for that?\"\n\n\"Simple.\" said Mr. Leslie. \"We didn't know. We would go for days without talking to Grant at all. It was one of his friends at school that called and asked if he was at home with us, and when no one could find him, we contacted the Police.\"\n\n\"I see.\" I said. \"\"So... I'm going to ask you a question, and for the sake of your son and to find his killer, I need your cooperation. Did anyone contact you and try to blackmail you, particularly right before or after your son disappeared?\"\n\n\"No.\" said Mr. Leslie.\n\n\"I wouldn't say 'blackmailed'.\" said Mrs. Leslie. \"But right before what we now know is the time Grant disappeared, a man contacted me by phone. He said his name was George. He had a very strange voice, kind of quiet but that's not a good explanation, it was just... weird. Anyway, he said he had a potential story on abuse of sanitarium patients, of drug tests being done on them.\"\n\n\"I asked if he had any proof, and that I would meet him in a public place if he did.\" said Mrs. Leslie. \"He said he didn't have the proof, but had leads that would point me in the right direction, and as a reporter I could do some digging and break the story. He said it would get me a new job, and make KSB sorry for firing me.\"\n\n\"So what happened?\" I asked when Mrs. Leslie stopped right there.\n\n\"Er, nothing.\" said Mrs. Leslie. \"I offered to put George in contact with a reporter I knew from a competing network, and that seemed to make him angry. He just said I'd regret it and he hung up. I never heard from him again.\"\n\n* * * * * * * * * * * * * * * *\n\nI did not play the Game. After getting Jack Muscone's permission, I called and asked Jonathan and Jennifer Hart to come to the FBI offices for interviews. They came down... with their lawyer. He was Nathan Masterson, of Gresham & Mason, P.C., whom we'd encountered in the 'Delivery In The Rear' case.\n\n\"Gresham & Mason.\" Cindy whispered to me. \"Speaks volumes about these two. Now I understand why you wanted them brought down here.\"\n\n\"Oh, I thought this might be a big one, even without Mr. Masterson and his law firm.\" I said. \"Let's go in and have a few instructive minutes of conversation with the Harts, shall we?\"\n\nWe went in, along with Martin Nash and Jack Muscone. Masterson started right in.\n\n\"Ah, Commander Donald Troy of the Town & County Police Department.\" said Masterson, with no small amount of sardonic disrespect in his voice. \"Playing SBI or FBI soldier today?\"\n\n\"All of the above.\" I said severely. \"Which means you should be listening first, advising your clients second, and acting like a dumbass later on.\" Masterson frowned, but said no more.\n\nI introduced the others to the Harts. After those preliminary introductions and condolences, I said \"I will get right to the point, Mr. & Mrs. Hart. Do you know of anyone who wanted to harm your daughter Shauna?\"\n\n\"No.\" said Mr. Hart. He seemed rather calm and collected. Mrs. Hart, who had a very full head of hair (and styled to make the most of it), looked somber and still grief-stricken.\n\n\"Mrs. Hart?\" I asked. \"Were you close to your daughter? Did she say anything that might suggest she was in danger?\"\n\n\"No, I'm sorry, but there's nothing to tell.\" said Mrs. Hart.\n\n\"You once did pharmaceutical research?\" I asked Mrs. Hart.\n\n\"What does this have to do with the disappearance and death of her daughter?\" asked the lawyer Masterson.\n\n\"You'll see shortly.\" I said. \"And this is not a Courtroom, Masterson, I don't have to establish that kind of relevance. Mrs. Hart?\"\n\n\"I was an M.D... I still am. I oversaw research studies.\" said Mrs. Hart. \"One of my husband's companies was doing one of the studies I oversaw. That's how we met.\"\n\n\"And Mr. Hart, you sold that company to BigPharmaCorp?\" I asked.\n\n\"Again, where is this leading?\" asked the lawyer Masterson. \"You are wasting my clients' time, Commander Troy!\"\n\n\"I don't think it's a waste of time to find their daughter's killer and put him on Death Row at Jacksonville.\" I replied.\n\n\"It's okay, Nathan.\" said Jonathan. He looked at me and said \"Yes, I did sell that company to BigPharmaCorp, but kept the patent licenses. So I'm getting royalties now.\"\n\n\"So again, is there anyone who might bear any kind of grudge, either from those studies, or BigPharmaCorp getting sued over a drug, or anything at all that you can think of?\" I asked. And I could see the disquiet on Jonathan Hart's face. I peered hard at him, as did Cindy.\n\n\"I'm sure there could be.\" said Mr. Hart.\n\n\"Let me be more specific, Mr. and Mrs. Hart.\" I said. \"Did anyone contact you before or just after your daughter's disappearance, and attempt to extort blackmail from you?\"\n\n\"Uh, I need a minute to talk with my attorney.\" said Jonathan. To his wife he said \"Dear, if you need a potty break, now is the time.\"\n\n\"I'll stay right here.\" she said firmly.\n\n* * * * * * * * * * * * * * * *\n\nThe rest of us got up and went to the waiting room. I got a Coca-Cola from the vending machine. There are few things as good as an ice-cold Coca-Cola when one is tired and thirsty.\n\n\"Wow, G&R, and then Hart wanted to talk to the lawyer.\" said Muscone. \"Any idea why?\"\n\n\"I'll bet the Iron Crowbar could tell us the story, and the legal beagle will have to fill in the blanks.\" Cindy teased. I smiled.\n\nJack said \"Four hundred years ago... well, I better stop saying that around here, with all that's going on.\"\n\nJust then, Les Craig entered the room. \"What's going on? Why are the Harts here?\"\n\n\"They're talking to their lawyer.\" I said. \"We are questioning them about the death of their daughter.\"\n\n\"I want to sit in on that.\" said Les Craig. \"Nash can wait out here.\"\n\n\"No.\" I said. \"You can sit in, but Nash is going to be in there. This is a murder case, and my jurisdiction, and I want Special Agent Nash in there with us.\"\n\n\"If it's your jurisdiction,\" Craig said sarcastically, \"then why does Nash need to be in there?\" I turned on Craig, my gray eyes blazing.\n\n\"Because I said so.\" I thundered. I then turned around and walked down the corridor.\n\n* * * * * * * * * * * * * * * *\n\nJack Muscone did not go back in; he went to the DepDirector's office. Les Craig went in, and I did not introduce him, wanting to see the Harts's reactions. Yep, they knew who he was, I swiftly observed.\n\n\"My clients believe they are in a situation that might be misinterpreted by law enforcement.\" said Nathan Masterson. \"They also are aware the the FBI likes to throw the 'lying to Federal Agents' charge in people's faces as a means to extort confessions. So my client is going to make a statement. If you want further information or questions answered, we will have to negotiate an immunity agreement.\"\n\n\"I'm not promising anything yet.\" I said. \"But let's hear your statement.\"\n\nMr. Hart began: \"I started my Pharma Research venture company when my now-wife and another doctor, a Dr. Paul Sexton, came to me. They had researched some old drug patents which had expired, and were looking on ways to improve them with new processes and formulas. My team did find some promising leads, and we got patents on the new drugs we created as well as a couple of process patents.\"\n\n\"The old, original drugs were attempts to reduce the effects of mental illnesses.\" said Mr. Hart. \"Our new drugs were tested under rigorous FDA conditions, with the safety of our patients always at the forefront of our plans and thinking. We did not think the results were all that promising, and we informed BigPharmaCorp of that when they offered to buy us out. They did not seem to be worried, but bought the company, the drug rights, and leased the patents that we held.\"\n\n\"Any questions?\" asked the wily lawyer Nathan Masterson.\n\n\"No.\" I said, which I think shocked almost everyone in the room. When no one else had questions, I said \"Thank you for your time and for coming here, Mr. and Mrs. Hart, especially in this, your time of grief. I look forward to bringing your daughter's killer to Justice.\"\n\n* * * * * * * * * * * * * * * *\n\n\"We don't have to ask.\" I said. \"Isn't it obvious?\"\n\n\"Not to us.\" said the DepDirector as we sat in the conference room after the Harts and their lawyer had left. Also in the room were Jack Muscone, Les Craig, and Cindy Ross. Outside, the sun was setting on this very busy Tuesday, February 21st. \n\n\"I asked them if they had been contacted by a blackmailer. Like Eric Parker, they clammed up.\" I said. \"If I asked any further, the Harts would've done the same.\"\n\n\"So a blackmailer is extorting money from them by kidnapping their daughter or wife?\" said Jack Muscone. \"Why not just admit that? Why not pay the money? Or contact the FBI in the first place? We handle these things all the time.\"\n\n\"This blackmailer...\" I said. \"... is different. Very different. This guy is blackmailing over something else. It is not money that he is seeking. It appears to be some form of vengeance. And I might add that as far as we know, none of his victims have ever been returned alive.\"\n\n\"That's true.\" said the DepDirector. \"So let me ask this: Jonathan Hart has a connection to BigPharmaCorp, as do some of our Superior Bloodlines suspects. Do you think there is a connection there?\"\n\n\"I... I dunno, sir.\" I said. \"I think Hart told it straight tonight: his company was supporting some research startups, nothing was panning out, and they sold out to BigPharmaCorp when they had the chance. I do think BigPharmaCorp may have developed other things out of their acquisitions, but Hart may or may not have a clue about that. Your people will have to research that, and him.\"\n\n\"And his wife.\" said Cindy. \"She's hip-deep in whatever kimshee he's in.\"\n\n\"How do you know that?\" asked Les Craig, as if speaking to a misguided child.\n\n\"Observation, deduction, and knowledge.\" said Cindy witheringly. \"I was watching her facial expressions and her eyes, Agent Craig, while you were obviously looking at... other parts of her.\" I chuckled as Craig's eyes flashed fire. Muscone and the DepDirector remained stone-faced silent.\n\n\"All right, guys.\" said the DepDirector. \"I'm going to tell Clark Webster and Lindy Linares to keep working on any missing persons that might be the work of this Black Velvet wacko, but beyond that I'm handing the ball back to you, Inspector Troy of the SBI. Feel free to work with Lindy as much as you need to, but that will be the extent of our part in it.\"\n\nHe continued: \"I'm going to re-focus the rest of us on Superior Bloodlines and the very real and grave threat of these nerve agent mothballs. So, unless there's something else, I'll let you guys get on the road to get back home.\" He stood up, indicating the meeting was over.\n\n\"Thank you for all your help, Mr. Director.\" I said, shaking his hand. He shook Cindy's hand, also.\n\n\"Jack, will you walk them out?\" said the DepDirector.",
        "\"Sure.\" said Muscone. We walked out, not shaking hands with Les Craig, and made our way down the corridor to the elevator, and down to the parking garage of the Federal Building.\n\n\"Wow,\" I said as we got to the Black Beauty, \"I'm surprised that he didn't ask for our FBI Consultant IDs back. Or are you going to do that?\"\n\n\"No, I'm not.\" said Jack. \"But guys, don't be surprised if you don't hear much from any of us, at least for a while. My boss is one of the most powerful men in the FBI, and in all of Washington. But he lost huge ally when your wife retired, Don, though I don't blame her for doing so. And these 'mothballs' have really rattled Washington; they are scared shitless of the terrorist possibilities. My boss is under tremendous pressure right now, and Les Craig is not making it one bit easier for him.\"\n\n\"Okay, then.\" I said. \"But if you're in Town, stop by and I'll buy you a double cheeseburger, no matter what they say.\"\n\n\"Stop that. You're making me hungry. Keep your eyes peeled and have a safe trip home.\" Muscone said. He shook hands with each of us, then made his way back to the building as we got in the Black Beauty and pulled out.\n\nPart 6 - Power of Black, Power of Beauty\n\n\"Get some gas at that station up ahead.\" I said as Cindy pulled the Black Beauty onto the street. She dutifully pulled into the station. While she put gas in the car, I gave the vehicle a thorough check for bugs and tracking devices. And I found one, up under the left rear tire well.\n\n\"Good God,\" Cindy said, \"they're tracking us now?\"\n\n\"Looks like someone is.\" I said. That was the only bug I found. When we got back in the car, I secured it in one of those static bags like those used for computer parts.\n\n\"Cindy, put your cellphone and any transmitter you have in the shielded glove compartment.\" I said. Dr. Eckhart had shielded the glove compartment so that cellphones or police radios inside it could not receive nor transmit, but more importantly could not be detected. I put the tracker I'd just found inside there, as well.\n\n\"Okay,\" I said. \"would you like to take a little side trip tonight?\"\n\n\"Sure.\" Cindy said. \"Where to?\"\n\n* * * * * * * * * * * * * * * *\n\n\"Wow, that is amazing.\" I said. \"I didn't know we had that.\"\n\n\"I told you Daddy upgraded.\" Cindy said in a teasing voice. She was showing me the digital map on the dashboard of the Black Beauty. It was black with gray lines for the roads, since it was night. A green dot showed our location. Dark blue dots showed vehicles that had police radios in them, while lighter blue dots were State Patrol vehicles with radios in them. Cameras (including drones) were in red, and the City had some cameras in surprising locations watching over the Citizens... without the Citizens's knowledge.\n\n\"My father says we can't be traced by this.\" said Cindy. \"It sucks in the information but doesn't transmit.\"\n\n\"How does it know where we are?\" I asked.\n\n\"Triangulation off cellphone towers, radio broadcast towers, and stuff like that. He wouldn't tell me everything.\" said Cindy. \"Anyway, once the computer figures out where we are, it can figure out where the police radios are without us having to broadcast anything.\"\n\nWe were driving west along State Highway 2. We'd left the City suburbs, and we were now nearing the sanitarium. I'd told Cindy I wanted to go up there and check the place out with my infrared and night-vision binoculars, to see if there was anything there.\n\nThe road went along the southern edge of the sanitarium property. When we got there, Cindy went up a dirt road along the western side. I was scanning with the IR binoculars, and seeing nothing. Night vision likewise showed nothing of interest.\n\n\"Don, we've got police vehicles moving this way.\" Cindy said. \"From the east and west. Five miles out.\"\n\n\"Okay, let's get back to the main road.\" I said. When we got to the intersection, I got the FBI tracker out of the glove compartment, then got out of the car and threw it over the fence, onto the sanitarium grounds.\n\n\"It's lighting up on the map like a Christmas tree.\" Cindy said as I got back in the car. \n\n\"Good.\" I said. \"Okay, turn right and go west.\" As we drove, the police vehicles were drawing nearer... and there were now twelve dots on the map, coming from every possible direction.\n\n\"There's a dirt road that angles off just ahead.\" I said. \"Take it, go in about 100 feet, and shut the car down. I just hope they don't have infrared in their cars. We can't hide the heat from the engine.\"\n\nCindy did so, taking the two-lane dirt strip of a road into the woods until we were out of sight of State Highway 2. We sat and watched the dashboard map, as the blue dots converged upon the sanitarium.\n\n\"Any drones?\" I asked.\n\n\"Not yet.\" said Cindy. \"All local Police, too. They're passing us now.\" I heard two vehicles driving down the road, corresponding to two blue dots on the main road that passed by us. We were now on the outside of their intended net.\n\n\"Any follow-up vehicles?\" I asked.\n\n\"None so far.\" Cindy said.\n\n\"Okay, let's get back on the road and head west towards State 141. We'll take that road south back to the Nextdoor County Highway and get back home.\"\n\nAs we pulled out, we saw the cluster of blue dots on the map. \"Does this police radio have a passive-only listening mode?\"\n\n\"Yes.\" said Cindy. She told me where to set it. I did, then set it to the standard Police frequency. Most of the Police were out of their cars, though, searching the sanitarium grounds. Their walkie-talkie radio signals were getting weak as we drove away, but I did hear someone call in that they'd found a tracking device.\n\n\"Just local police.\" Cindy said. \"I'm surprised there's no one else.\"\n\n\"Oh, this County does not have twelve patrol cars.\" I said. \"So there's someone else, piggybacking off their police radios.\"\n\n\"Are they looking for us?\" Cindy asked.\n\n\"I'm not sure.\" I said. \"Obviously the sanitarium is being monitored. We were spotted driving up to it, and police cars started coming. Those guys were probably just hoping to catch the Black Velvet killer. Then I threw the tracker device onto the property, and the screen just lit up with more cars. Those guys might've been looking for that tracking signal... but who knows for sure...\"\n\nAs we drove by the Millwakee Campgrounds, I used my infrared to see if there was anything, but saw no heat signatures. There were no radio transmissions on any frequency, either.\n\n\"I'd like to check out that place further,\" I said, \"but it's too dangerous. Let's go home. Drive as fast as you want, since we've got this map that shows where the Police with speed radars are.\" Cindy grinned... and gunned it.\n\n* * * * * * * * * * * * * * * *\n\nIt was quiet when I got home to the Mountain Nest. No dogs were there to greet me. The deduction was simple: the kids were already in bed.\n\n\"Hello, Darling.\" I heard my wife say. I did a double take as I saw her. She was wearing a peach teddy and her 'CFM' off-white high heel slides, knowing it turned me on to see her in them.\n\n\"Why don't you go up and get into the hot tub.\" she said, handing me a drink. \"I'll be up in a minute.\n\nI went upstairs. The water in the hot tub was hotter than warm but not too hot. I undressed, took a very quick shower, then eased into the water. As I settled in, Laura came into the bathroom. I could feel my eyes relaxing as I looked at the gorgeous beauty.\n\n\"Mmm, you are beautiful.\" I said, feeling my little iron crowbar becoming as hard as the real one. I also deduced that my wife was as horny as I was, that she wanted sex as much if not more than I did.\n\n\"You're as sweet as you are handsome, my love.\" she said, her eyes glowing. The peach teddy came off, and my cock throbbed at the sight of her thick black pubic bush. It was trimmed up top a bit, but a line of black hair went along the sides of her labes, just like she knew I liked.\n\n\"So,\" she said, sitting down on a chair beside the vanity and gently rubbing her fingers through her pubic bush, \"tell me about your day.\"\n\n\"It's about to get better, that's for sure.\" I said. Nevertheless, I recounted the events of the day, including the visit to the sanitarium.\n\n\"All that excitement has you worked up.\" Laura said. She was right... the excitement of the chase had run its course through me, leaving me with... desires. And seeing my wife with her legs spread as she played with herself also left me with... desires. \n\nAfter a few moments, Laura got up and joined me in the hot tub, sitting between my legs. She slid her now-bare feet along my sides, then up and down my chest. As I began kissing and tonguing her toes and feet, I felt her hands sliding between my legs and finding my cock and balls. I groaned as she began massaging them in her hands...\n\n* * * * * * * * * * * * * * * *\n\n*CHOCK!* *CHOCK!* *CHOCK!* *CHOCK!*\n\nI was lying on my wife, over here, slamming my throbbing hard cock straight down into her. She was gasping and groaning as I power-fucked her. My thighs were slamming against hers, which kept my cock from penetrating too deeply and causing her pain, but she was also deep enough to handle it, and I knew she enjoyed this kind of raw, physical fucking.\n\n\"Oh yes, fuck me!\" she gasped several times. Her hands were on my sides, her left hand clutching right where my gunshot wound scar was. \n\nI was beginning to tire from holding up my weight as well as the hard, physical fucking, so I let my weight drop onto Laura. Sliding my hands under her, I clutched her magnificent asscheeks in my hands and began pistoning my hips and ass, driving deep into her with shorter but still powerful thrusts. I was kissing her neck and jaw and ear as I pumped her, and whispering to her that I was going to come inside her, that I was going to fill her up with my semen. I felt her cunt clutch my iron-hard rod as we furiously fucked each other, then the familiar gray mist swirled as the violent ecstasy of release overwhelmed me, and my cock and balls fired stream after stream of molten man-lava into Laura's clutching depths...\n\n* * * * * * * * * * * * * * * *\n\n\"Mmmm,\" Laura whispered as I held her in our post-coital bliss, \"keep that up, and I'm going to send you on more exciting missions.\"\n\n\"I'm getting plenty enough of them, as it is.\" I said. \"And it's going to get more... 'exciting' before things calm down...\"\n\nI had no way of knowing just how exciting things were going to get... positively electric, in fact...\n\nPart 7 - Localized Power\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" blared the redheaded MILF from in front of the Federal Building at 7:00am, Wednesday, February 22d. President George Washington's actual birthday, though that's not remembered anymore.\n\n\"Channel Two News has learned that the FBI is handing over their part of the Black Velvet serial killer case to SBI Reserve Inspector Donald Troy, who is also the Town & County Police Commander. The FBI says that several persons on their missing persons lists have been identified as victims of the Black Velvet killer, and therefore the case is increasingly falling into State and local jurisdictions. Commander Troy is coordinating the State and local investigations.\"\n\nBettina went on: \"In other news, the FBI is downplaying reports brought to you by Channel Two News of possible nerve agents having been brought into our County by possibly terrorist criminals. The FBI says these reports are unsubstantiated, and that there is no danger to the Public. This contradicts reports from multiple sources that the State Crime Lab tested for and found evidence of deadly poisons. The State Crime Lab has refused to comment, instead constantly referring us back to the FBI. Regional SDOJ Director Harold Bennett also declined comment.\"\n\nBettina continued: \"And Channel Two News has also learned that international superstar singer Jasmine Nix will be releasing a new album in the next couple of months, entitled 'Power of Police'. In a statement, her publicist said the album will be an anthem of the crushing power of Police against People of Color. Superstar rappers T-Square and Big Ice will also be featured on this collaborative album, and fans eagerly await its release...\"\n\n\"Interesting.\" I said as I watched amongst a room full of MCD and Vice Detectives, as well as the Chief and Deputy Chief. The room might have been full because a certain Police Commander brought in four boxes of doughnuts, which were already gone. I had taken the precaution of taking the doughnuts I wanted out first before submitting the rest of them to the ravenous appetites of local Police Detectives.\n\n\"Which part?\" asked Cindy.\n\n\"The album coming out.\" I said. \"We'll talk about it later.\"\n\n\"From what I'm hearing,\" said Theo Washington, \"it's going to nothing but hatred of Police, and might even start a process of organized demonstrations by Blacks against Police.\"\n\n\"I think a more accurate term would be 'riots'.\" said Vice Detective Roy McGhillie.\n\n\"Tell you what, guys.' I said, raising my voice to make sure it was heard. \"Let's worry about all that when the time comes. Speculation now is not good for Police business, nor our morale.\"\n\n\"Sir,\" said Joanne Warner, to change the conversation, \"is there anything about the Black Velvet Killer you can tell us?\"\n\n\"Let' hold off on talk about that, too.\" said Chief Moynahan. \"Commander, I do have some new information for you after you have fortified yourself with this incredibly weak coffee.\"\n\n\"We're not in the Navy, Chief.\" I said. \"It's civilian strength.\"\n\n\"Yes, which is why I have my own coffeemaker in my office now.\" replied the Chief. I nodded to Cindy, who got the hint. She followed me as I followed the Chief and Deputy Chief Harlow to his conference room.\"\n\n* * * * * * * * * * * * * * * *\n\n\"This email came in about 3:30 this morning.\" said the Chief. \"It was flagged by the servers as possibly malicious, so the I.T. team ended up getting it first.\"\n\n\"They reported it to me, as they should, and they've made sure it has no malware in it.\" said Della Harlow. \"But it's addressed to your inbox, Don. I told them that if any more of these came in, to let you know immediately.\"\n\n\"Four hours ago.\" I said. \"Yes, Della, if you would 'encourage' the I.T. people to communicate with a sense of urgency... no telling how bad it is.\" Della nodded.\n\nThey played the video file. It showed a pretty, large breasted woman in her thirties lying naked on a metal bed, on the metal cross-wire mattress.\"\n\n\"That's Honey Parker, I think.\" I said, pausing the video.\n\n\"I think you're right.\" said Cindy. She brought up Honey Parker's DMV photo, and we all agreed it was Mrs. Parker, one of the victims of the Black Velvet killer.\n\nThe video had a voiceover, a raspy, whispery voice that said \"Tell me, Commander Troy... what does it feel like to have all that power? The power of a god, the power over the lives of others...\" \n\nThen the video showed a horrifying scene as someone offscreen apparently threw a switch, sending electricity through the metal of the bed. Honey Parker screamed in agony as she was being electrocuted. The power was turned on and off several times.\n\n\"Geez.\" Cindy said, cringing. \"This guy is a nutjob, absolutely psycho.\"\n\n\"Yes, he is.\" said the Chief. \"Because the FBI has washed their dainty hands of this case, I'm not going to disseminate this to anyone but you, SBI Inspector Troy.\"\n\n\"We're obligated to send it to the County Police where her body was found.\" I said. \"But I'll have the Mouseketeers go over it first.\"\n\n\"They're already working on it.\" said Della.\n\n\"So the I.T. guys called them, but not me?\" I asked, my voice connoting my lack of happiness with that.\n\n\"No, Commander.\" said the Chief. \"I directed them to it when they came in for the coffee klatch. Brought them their own box of doughnuts so they didn't miss out on yourrrrrs. I let you drink that weak coffee in MCD because there is absolutely nothing you could do for that fifteen minutes...\"\n\nThat generated a discussion of timeliness of informing certain Police Commanders of potentially important information coming in... and another conversation on the efficacy of Navy coffee vs. what the rest of us consume...\n\n* * * * * * * * * * * * * * * *\n\nThe 'Crowbar Angels' meeting began at 8:00am. We watched Priya's reports, which were duplicates of Bettina's an hour earlier, with the exception that Priya made no mention of the nerve agent situation. Priya also spent more time fawning on Jasmine Nix and the impact the new anti-Police album would have on the Black community.\n\n\"Okay, Captain Croyle,\" I said to Teresa. \"I have a sneaking suspicion that the release of that album is going to be a spark to begin some trouble. So whatever training you're doing, make sure it is heavy on riot control.\"\n\n\"Yes sir.\" Teresa said. \"Do you think there will be spontaneous demonstrations? Or something orchestrated.\"\n\n\"It is my belief,\" I said, \"that the demonstrations the Media shows us on television are never, ever spontaneous. They are ginned up. Someone starts them up, then they do get a life of their own and a mob mentality. But its always started up by people with purpose and intent, and most of the demonstrators don't even realize they are being used by those instigators.\" Teresa and Cindy both nodded.\n\n\"Anything new in Vice, Captain Ross?\" I asked Cindy.\n\n\"No sir.\" she replied. \"Coldiron and Purvis are ready to make the prostitution raids. They're coordinating with Teresa.\"\n\nTeresa said \"I've told Lt. Irwin in Precinct 1 to prepare some people for possible raids, but didn't give him the details yet. And nobody in Precinct 2 is being told yet, because we don't want the Tenderloin District to get the word and for all the prostitutes to take a night off and not show up.\"\n\nI nodded. \"I understand, but we really need for Precinct 2 to be involved. What's your recommendation for getting some people ready, without telling them what it's about?\"\n\n\"I'm not sure, sir.\" said Teresa. \"What is your recommendation?\"\n\n\"Glad you asked.\" I said. \"Tell Precinct Captain Thompson and Lt. Carswell that they are going to have a mock raid exercise at the Fire Department range on Friday night, which will be observed by the Police Commander with a critical eye. That team will practice heavily, then on Friday we'll redirect their actual target. But don't tell them until tomorrow morning.\" Teresa nodded and made notes.\n\n* * * * * * * * * * * * * * * *\n\nAfter the Angels meeting, Cindy went to the sofa and the Mouseketeers were admitted and bidden to sit in the hot chairs. They sat as they always did: Kreuger to my left, Mary to his left in the middle, and Myron to her left, my right as I looked upon them. Mary's hair color today was bright, almost white pink.\n\n\"Okay,\" I said, \"I know it's a very short amount of time, but what do you have on that video?\"\n\n\"The woman on that metal prison bed is Honey Parker.\" said Mary. \"And it's definitely a standard issue State Prison bed from about 20 years ago. Now the beds in our State's prisons are solid metal instead of wire mesh.\"\n\nMary continued: \"The electricity was being fed through battery cables with the lockjaw clamps. That's a lot of juice to be pouring through those cables and clamps. We can't really see the electricity source, but believe it's sucking power from the grid somewhere. I'm working with the electric company in that area of the State to see what spikes they had in the last few months, and where they were located.\"\n\n\"That's a good try, even if it doesn't pan out.\" I said. \"Anything on the voice, or the source of the email?\"\n\n\"The voice looks like it's being filtered as it's being recorded.\" said Myron. \"I won't get into the weeds on that, but just enough of an electronic alteration to prevent an easy voice pattern match. Why the bozo didn't just go full electronic, I don't know.\"",
        "\"Okay.\" I said. \"David, did you get anything from the FBI?\"\n\n\"I got a massive set of emails from Special Agent Linares.\" said Krueger. \"You've got a copy in your inbox, as well, Commander. Lindy said that this was all the information she had on the Black Velvet case, and she also said she was being pulled from it and would have no more for us going forward.\"\n\n\"Are they having problems over there, sir?\" asked Mary.\n\n\"Yes.\" I replied, looking right at her. \"Yes they are. They have some issues to sort out. But enough about that... David, did Lindy's information talk about George Aurus?\"\n\n\"Yes sir.\" said Krueger. \"Pretty good dossier on him. We're going to expand on it if we can.\"\n\n\"Good.\" I said. \"I want you, all three of you, to get very, very familiar with George Aurus. Be able to answer any questions Captain Ross or I have about him. Do a good workup, and send Captain Ross and myself copies of it.\"\n\n\"Is he the guy, sir?\" asked Cindy.\n\n\"He is definitely a person of interest.\" I said.\n\n* * * * * * * * * * * * * * * *\n\nAn hour later, the Mouseketeers were back. \"Whaddya got?\" I asked as they sat down, with Cindy on the sofa behind them.\n\n\"I'll rehash the background, sir.\" said Mary. \"George Aurus is physically stunted in his growth. Records stating him to be four feet tall may be exaggerated and embellished. He was probably a student at Millwakee, the Camp for troubled teens, but we don't have good records on that. We do know that he traveled with the Gypsies that Dr. Eckhart was a part of; Captain Ross discreetly asked for us, and Dr. Eckhart said he vaguely remembered Aurus. Dr. Eckhart himself left the Gypsies right about the time Aurus might've been among them as a child.\"\n\nMary went on: \"We have confirmed that Aurus was with a national Circus from IRS records obtained by the FBI. We also have IRS records of Aurus being paid as an assistant to Dr. Yarborough. Then Yarborough died, and Aurus essentially fell off the grid.\" \n\n\"However, we have found some things the FBI didn't find.\" said David Krueger. \"Aurus managed to get himself hired by KCTY in the City, under the assumed name of 'George Powers'. He was a background researcher for stories for the reporters. I was tipped onto this by one of my political friends who had once been in a similar position for Fox Midtown.\"\n\n\"Apparently George was shopping around,\" continued Krueger, \"trying to find reporters to report on abuse of sanitarium patients, testing of drugs on sanitarium patients, and such stuff. Several young 'cub' reporters tried to follow up on these stories. They were either warned off, outright told to stop pursuing, reassigned to other duties... and a couple of them 'came over all dead', as you like to say, Commander. One was a car accident, the other ruled a suicide, though her gunshot wound was to the back of her head.\"\n\n\"So Aurus couldn't get reporters to follow up on his stories.\" I said.\n\n\"That is apparently the case, sir.\" said Krueger. \"And as your own reports to us said, he may have resorted to kidnapping and blackmail, or extortion, to either get people to follow up on these stories, or to confess their involvement in them. And along the way, the people he kidnaps are tortured, the women raped, and then all the victims killed off. I've also independently confirmed the FBI's research on their missing persons now being considered part of these crimes.\"\n\n\"Is that his motive, Commander?\" asked Cindy. \"Trying to get people to expose criminal activity?\"\n\n\"That is looking likely.\" I said. \"And more specifically... abuse of sanitarium patients. But somewhere along the way, he popped a screw loose in his head, and now he's killing people. And from his little gifts to us, as well as one of his aliases, I'm observing that he is obsessed with the concept of 'power'.\"\n\n\"Sounds like Les Craig.\" Cindy quipped acidly. I may have given her a stern glance in reply.\n\n* * * * * * * * * * * * * * * *\n\nAfter the Mouseketeers left, Cindy and I discussed the case further as I looked at maps on my computer screen.\n\n\"Okay,\" I said, \"most of the bodies found were west of the City, in the woods in the general vicinity of that sanitarium. Not very close to Millwakee, though. No bodies found on sanitarium grounds, but in the woods, in places accessible by mostly dirt roads.\"\n\n\"But you think that sanitarium is connected to Aurus, that he's using it as a base of operations?\" Cindy asked.\n\n\"I was thinking that.\" I said. \"I know there's a basement space, but I'll be damned if I know how it's accessed... if it is accessed at all. I was hoping to see some infrared, some heat signatures when we went by there... but nothing.\"\n\n\"If it's underground, you might not get anything, especially with binoculars.\" Cindy said. \"That would likely take a satellite, a military-grade satellite.\"\n\n\"And guess what... the whole area is off limits to all satellites; none allowed to fly directly over. Guess why?\"\n\n\"The Federal installation?\" Cindy guessed. Correctly.\n\n\"Yep.\" I said. \n\n\"That road we took to the side of the side of the sanitarium...\" Cindy said. \"Does it go all the way around the property?\"\n\nI checked. \"Yeah, sort of. The road ends at an east-west road that goes along the backside. That road extends several miles west, to State 141, and east, back towards the City, connecting to roads near the airport. That road is in bad condition, mostly dirt, and a two-tire dirt strip in some places.\"\n\n\"When would be the best time to go around the place again?\" Cindy asked. \"Preferrably in daylight.\"\n\n\"Probably at morning shift change.\" I replied. \"You want to go back up there?\"\n\n\"I think we need to.\" said Cindy. \"Call it a vibe, but also thinking logically: where else can someone take people, torture them, kill them, use electricity in torturing them, dispose of the bodies without being seen? It's gotta be in the area. If not that sanitarium itself, then there has to be a place nearby. I think we need to scout out the place further.\"\n\n\"Good points.\" I said. \"We'll see if we can sneak out, but it may be Sunday morning before we can get back up there...\"\n\nPart 8 - Power of the Press\n\n12:30pm, Wednesday, February 22d. Chief Sean Moynahan of the TCPD and Lt. Molly Ross Evans of the Nextdoor County Police Force entered the dining room of the Lakeside Inn & Suites. This was considered to be one of the nicer places to have lunch (and dinner) in Nextdoor County, and the Hotel people had realized that making it not-too-expensive brought in a lot more business.\n\n\"Hello, ma'am, sir.\" said Becca Larrington, who was the sister of the late Ned's girlfriend Goth Girl Kathy, daughter of Nora Larrington, and whose cherry had been popped by the Iron Crowbar's iron-hard penile crowbar. \"Would you like to sit on the deck outside, or near the windows for the view?\"\n\n\"If you don't mind,\" said Molly, \"we'd like to sit in the dark corner over there.\" She indicated the tables to her left, as far as possible away from the outside windows, and where they could and would be easily overlooked.\n\n\"Certainly.\" said Becca. She led the way to the table. Molly and the Chief sat where they could survey the entire restaurant room, and see people that had come in.\n\n\"Well, Chief,\" said Molly, \"I appreciate you inviting me to lunch. We haven't had a good talk in I don't know how long.\"\n\n\"Yes, too true.\" said the Chief. \"I'm glad you could join me for lunch. Soooo, how are things with yooooo?\"\n\n\"Good.\" said Molly. \"The boys are growing like weeds, starting to get into trouble. The job is going very well; we busted some trucks coming through from the City with drugs, then we busted a distributor who'd been supplying the area.\"\n\n\"Heh heh heh heh.\" said Moynahan. \"Ms. Croyle told me once that you being here in this county made her job a lot easier. I believe Coldiron thinks the same thing.\"\n\n\"How is he doing? And Frank?\" asked Molly. \"I haven't talked to either of them in ages.\"\n\n\"Coldiron is doing fine.\" said Moynahan. \"That little mothball situation the Iron Crowbar found shook Coldiron up a little bit, but otherwise he's been busting heads, and I'm hearing that people are afraid to bring drugs into his juris-dic-tion.\" Molly grinned at that.\n\n\"As to Frank Soltis,\" said Moynahan, \"that's why I asked you to lunch, to talk about that. Frank is a good cop, and a very honest cop. But the Midtown Police job is a very big one, and I'm hearing some grapevine talk that Frank is struggling to root out the corruption there. His own people are the problem; he doesn't know who he can and cannot trust. Internal Affairs there is gutted; they were very efficiently and successfully penetrated by the perpetrators of corr-UP-tion there.\"\n\nMolly nodded, feeling much more sober. \"And Frank is an awfully young guy to have taken that position. Even Don wouldn't take the Town & County Police Chief job; said he wasn't ready for it.\"\n\n\"Ohhhh, the Iron Crowbar could've taken that job, and he would've done a wonderful job with it.\" said Moynahan. \"But I understand his real reason for remaining at the Commander position: he has subordinates to do the Police work, he can solve crimes from where he is, and he can go all over the State solving crimes as well as running the State Legislaturrrrrre.\"\n\nMolly burst out laughing in her unique way. \"Yes sir, that's true. He's an amazing man.\"\n\n\"Yes, he is.\" said Moynahan. \"I've spoken with him about the Midtown situation. He is going to give Frank as much help as he can, but only after he gets this Black Velvet killer.\"\n\nJust then, he saw Molly go for her cellphone. She had it unlocked and was snapping pictures almost instantly. He turned and saw what had her attention: a lovely woman with dark red hair and a tall, slender man with light brown hair had come into the room and were at the front podium. Moynahan and Molly both raised their menus up to block their faces, and the couple was escorted to the room with windows that overlooked the lake.\n\n\"I'm sending this to my sister and my boys' father.\" said Molly.\n\n\"Yes, please doooo.\" said the Chief. Both of them had recognized the couple: they were KXTC Reporter Bettina Wurtzburg and FBI Special Agent in Charge Les Craig...\n\n* * * * * * * * * * * * * * * *\n\nCindy and I were sitting in my office, silently contemplating the photos each of us had received on our personal cellphones.\n\n\"Should I send this to Jack Muscone?\" Cindy finally asked, breaking the long silence. \"Or to Tanya, and let her tell him?\"\n\n\"Mmmm, maybe not.\" I said. \"At least not yet. We don't know what's going on between Les Craig and Bettina. Maybe he's just getting a great piece of ass.\"\n\n\"Like he did with Sandra Speer.\" said Cindy. \"What, is he going after every woman you've fucked, getting sloppy seconds?\" I could not resist chuckling at that.\n\n\"Time will tell.\" I replied. \"But if you're thinking what I'm thinking... that Bettina's constant reporting of the nerve agent mothballs just might be connected to their lunch date... then that's something we need to think about.\"\n\n\"So why not tell Jack?\" Cindy asked.\n\n\"We could, and the fireworks might be fun.\" I said. \"But I have a very bad feeling about what's going on with all of that... with Jack's team, and the Deputy Director, and just the whole frickin' thing. We tell Jack what we know, and he tells his boss or confronts Craig, then it might actually work to Craig's advantage. No... I think we need to do some background checking, first. We need to establish for ourselves what Craig's role is in all this, if he's working with Superior Bloodlines, what power he has behind him in Washington, and all that.\"\n\n\"How are you going to do that? asked Cindy. I made a point to look at her funny.\n\n\"All this time you've worked with me, and you're asking silly questions like that?\" I asked back.\n\n\"Never mind, never mind.\" Cindy said. \"I think I'll go check and see what my Detectives are doing...\"\n\n\"Tell you what.\" I said. \"Let's go have a late lunch ourselves...\"\n\n* * * * * * * * * * * * * * * *\n\nLunch was at Laura's favorite Soup & Sandwich place. The main rush of patrons was over, and we sat at a table overlooking the lake through the window. Along with me and Cindy were my wife Laura and my mother Phyllis.\n\n\"Yes,\" said Laura, \"I can definitely check up on Les Craig in general, but unless he's been incredibly stupid with his finances, I doubt I'll be able to find very much.\"\n\n\"That's okay.\" I said. \"If you find an anomaly, any anomaly, it'll give me a starting point for looking further.\"\n\n\"Unless we get stripped of our FBI Consultant positions, and they close off our computer accounts.\" Cindy said.\n\n\"Hasn't happened so far.\" I said. \"But did you ever have the feeling that a door was left unlocked just to get you to walk into it and be trapped? So I'm going to not use that route, if at all possible.\"\n\n\"So what are you going to do, son?\" asked my mother.\n\n\"I was going to ask for your help, Mom.\" I replied.\n\n\"Are you asking me to talk with Jack Muscone through Tanya?\" Phyllis asked.\n\n\"No, Mom.\" I said. \"I'm going to leave the FBI alone on this one. I was going to ask you to talk to your friend Elsie Gringer, who happens to be Bettina Wurtzburg's aunt. Maybe you can, in your most gossipy of ways, find out what's going on between her and Les Craig. If they're just having sex, then no harm, no foul. If there's information being shared, maybe you can get something for me.\"\n\n\"Possibly, son.\" said my mother. \"But Elsie is no slouch. She'll probably see right through me.\"\n\n\"You fooled the greatest criminal mind of our time for months pretending to be the Widow Athena Jones.\" I said. \"I have every confidence you can handle Elsie... as you frequently do.\"\n\n\"Why, son!\" exclaimed my mother. \"Suggesting I have ulterior motives for talking with Elsie!\" At that point Cindy started laughing and could not stop.\n\n\"Also,\" I said, unperturbed, \"If there is any way for you to do it, I need to know what is motivating Bettina to continue reporting on those mothballs we found. There is something going on with that, and lives may be at stake if I can't begin to understand it.\"\n\n\"I'll do what I can, son.\" said my mother. Cindy's ice blue eyes sparkled at that, and I knew the Widow Athena Jones (and especially Team Athena Jones) was still going strong, in spirit if not actual fact...\n\n* * * * * * * * * * * * * * * *\n\n\"I've been thinking about it,\" I said as Cindy and I sat in my office at 5:30pm, Wednesday, February 22d. \"The Chief said we can go tomorrow morning to check out the sanitarium again, but we're going to need a couple of extra people. Any suggestions?\"\n\n\"Teresa.\" Cindy said immediately.\n\n\"I don't think Chief Moynahan would appreciate it if his entire leadership was wiped out in one fell swoop.\" I replied. \"Seriously, Teresa needs to be here and in charge while we're gone.\"\n\n\"How about Roy McGhillie? Or Hugh Hewitt?\" Cindy asked. \"Though... what are the jurisdictional issues?\"\n\n\"Oh, I forgot to tell you.\" I said. \"When I became SBI Reserve Inspector, I stopped counting against the number of SBI Reservists from one jurisdiction. So I can commission a replacement for me on a temporary basis, until the SBI Director and Governor approve a permanent selection.\"\n\n\"That's cool.\" said Cindy. \"I could call Nextdoor County PD and see if they'd loan us Detective German.\"\n\n\"He'd be a good SBI Reserve choice, but I dunno about tomorrow's mission.\" I said. \"We don't know his full measure yet.\"\n\n\"Why don't we take Hewitt for this one mission, give him an SBI Reserve badge 'without portfolio', i.e. no formal paperwork.\" suggested Cindy.\n\n\"We can do that, though I'll make a temporary appointment for him.\" I said. \"Otherwise he'd be impersonating a State Agent. Can't have that.\"\n\n\"Why not?\" asked Cindy. \"Ferrell, Ikea, and Sharples impersonated State Agents for a long time.\" I laughed out loud at the joke.\n\n\"Okay,\" I said, \"what about Norm Chow? You trust him enough to bring him on a mission like this? To have our backs?\"\n\n\"Yes.\" Cindy said. \"I asked Lindy to check up on him, too. She said the FBI had flagged him as one of the few trustworthy SBI Agents that they, the FBI, could work with. They've designated Ruble and Orosco that way, also.\"\n\n\"All right.\" I said. \"You go tell Hewitt that we have a mission for him tomorrow, and he should bring armor. I'll get in touch with Chow.\"\n\nPart 9 - Power of Darkness\n\nThursday, February 23d. The sun was just beginning to dawn over the eastern horizon as the Black Beauty turned off the main highway onto State 141. There were no police vehicles on the dash map. SBI Agent Chow had been impressed with the electronics in the Black Beauty, though of course we did not tell him everything that was in this rolling arsenal.\n\nWe stopped at Millwakee. I got out and picked the lock and opened the gate, and we rolled into the compound. There were no heat signatures, no new signs of recent habitation. Small wax seals I'd placed on the doors of many of the buildings had not been disturbed.\n\n\"No one has been here at all.\" I said as we got back in the car and headed out after locking the gate behind us. \"Okay, on to the sanitarium.\"\n\n\"I'm taking Highway 141 further north, then taking the side road to the east.\" said Cindy as we drove. \"If they're watching the main road, maybe we'll sneak up behind them.\"\n\n\"Still no police cars, no radio transmissions of any kind.\" I said as Cindy turned onto a road that was barely more than two dirt strips for tire tracks. The Black Beauty's tires and suspension easily handled the terrain.\n\n\"This road goes right along the back fence of the sanitarium, which is to your right.\" Cindy said. \"We're coming up to it now.\" She stopped the car and I used binoculars to see if there was anything to see.\n\n\"No perimeter cameras. Okay, forward ho!\" I said, using Cavalry terminology that would please Chief Moynahan.\n\nAs we drove along, the fence was very close to us on the right. Cindy said \"It really drops off to the left here. Pretty tight gap.\"\n\nAs we got just past the halfway point of the property, I said \"Stop the car.\" Cindy stopped, and I pointed to the left. \"That is some strange looking foliage.\"\n\n\"It's camouflage netting, sir.\" said Agent Chow in his dispassionate voice. \"I think it's set up to keep anyone up here from seeing that dirt road below.\"\n\nWe got out and looked. Sure enough, a barely visible, well-camouflaged road was coming from the north, perpendicular to the road we were on. \"Looks like it is going right beneath us.\" I said. \"And... right under the sanitarium.\"\n\n\"Don, I've got it on the map.\" Cindy said. \"We'll have to go back, but the trail circles around from the road we're on.\"\n\n\"Let's do it.\" I said. Cindy drove forward the length of the sanitarium as we looked, seeing nothing of excitement. When the dropoff subsided a bit, she turned the car around. With the sun at our backs, I could more easily see inside the sanitarium fence.\n\n\"Yep, a few buildings on the back side here.\" I said. \"They look like maintenance sheds, but why so many?\"\n\nWe drove on, and Cindy found the turnoff to the road. We descended as we drove along it in a wide semicircle, first northerly, then easterly. As we began to turn towards the south, we could see what looked like a built up earthen wall that the other road went over.\n\n\"Stop here.\" I said. \"Turn around, let's go stern-in.\" Cindy did so, and backed up along the trail until we were about 150 feet from the wall. We got out, looking to see if there were any hidden cameras.\n\n\"No cameras.\" I said, using the binoculars to detect heat as Cindy checked for electronic signatures in the car.\n\n\"No, but there are some wires across the road up there. Clear fishing wire.\" said Chow. \"You can see the sunlight reflecting off them.\" I looked forward, and saw what Chow had seen.",
        "\"Good catch, Norm.\" I said.\n\n\"Not the first time I've seen booby traps like that, sir.\" said Chow.\n\n\"Yeah, me either.\" said Hugh. \"I'll go check them out.\" He went forward, not tripping the wires, going off the trail and seeing what the wires led to. Meanwhile, I was studying the trail itself.\n\n\"Yep, vehicles have come along here.\" I said. I took a photo of tire tracks with my iPhone. \"I'll send this in later, but these look like tire treads typical of heavy-duty vans.\"\n\nHugh came back. \"They're attached to little fireworks poppers. Kind of like what we used on training exercises. They make a loud noise, flash a bright light. Just warning devices.\"\n\n\"And if they're tripped, whoever comes in later can see they're tripped and know someone was here.\"\n\n\"Cindy,\" I said, \"anything on the map?\"\n\n\"No sir,\" Cindy said, checking the dash map. \"Not for five miles.\"\n\n\"Do me a favor.\" I said. \"Stay here and keep monitoring. Just blow the car horn if anything comes up.\"\n\n\"Wilco.\" Cindy said.\n\nWe made our way up the road, Hugh marking the taut fishing lines by draping thin pink plastic strips on them. When we got to the wall, we could then see that it was camouflaged, and the camouflage netting above us partially filtered the light from above. I pulled the camouflage back, and could see that there was a large round concrete tunnel, with a huge grate door over it, securing it.\n\n\"Wow.\" said Chow, his dispassionate voice belying the excitement he felt. \"Looks like we found the entrance to the Batcave.\"\n\n\"Reminds me of the storm drain under County Jail.\" I said to Hugh, who nodded. The padlock securing the grate was efficiently picked. I peered inside with my binoculars, but there were no heat signatures.\n\n\"Let's go suit up.\" I said. \"Norm, want to come in with me? Hugh, if you'll stay here at the entrance, you can shout at us if someone comes up the road or if Cindy blows the car horn.\"\n\n* * * * * * * * * * * * * * * *\n\nHugh already had his armor on and was carrying an M-4. The rest of us put our armor on, and Agent Chow procured an M4 while I put my police gunbelt on, the Beretta M96 in its holster attached to the belt. I got night vision goggles and gave Norm the other set.\n\n\"The night vision stuff is only for 'just in case'.\" I said. I got out what looked like a miner's helmet. It had a six-inch concave mirror-ish reflector, and a very bright LED light. I put the helmet on. I gave Chow the other one, but he did not turn the light on.\n\nI led the way into the tunnel, my heart beating with excitement, and also a bit of fear of not knowing what awaited us. Chow followed me. The very bright blue-white light lit up the sides of the concrete tube with an eerie gray color. There were spots of water on the floor and wet sides at places.\n\n\"Yep, vehicle drove into here.\" I whispered, pointing at the faint tire impressions. \"This tube is just large enough for a van to drive through.\"\n\nWe continued down the tunnel, Chow leading the way with his M-4 rifle. I was counting the paces and estimated we'd gone about 150 feet when we saw two metal ladders going upwards.\n\n\"I'll check where these go to.\" I whispered. \"Hold here.\" With that, I scurried up the ladder. My back reminded me that it was not 100%, but I ignored the pain and climbed up to a manhole cover. Pushing it to the side I looked up, seeing that I was inside an empty shed. I climbed up and out, then looked out of a crack between the old wood panels. I could see the sanitarium in the far distance as I looked south (the direction we'd come down the tunnel). I realized I was in one of the sheds in the very back of the property.\n\nDescending back down, I saw Chow looking around just ahead. \"This is an intersection.\" he said. \"Goes left and right, and there are other ladders to the surface.\"\n\n\"That's what the sheds are for.\" I said. \"They're hiding the manholes that lead to this tunnel. Someone could go into the shed, and no one would know they were descending below ground.\" Chow nodded.\n\nWe went forward. The tunnel ended, opening up into a wider space. I took off my light and pointed it straight up so that the entire room was illuminated, however dimly.\n\n\"Oh my God.\" I said.\n\nThe stench was pretty bad. Looking around the room, there were eight metal frame beds in a semi-circle, the heads of the bed against the wall of the circular room. Next to two of the beds were devices that controlled electricity to the beds, and I could see the jumper cables attached to the beds. Two of the other beds had mattresses. The mattresses were deeply stained with large splotches of blood. The floor beneath the other beds also had large circular spots, which were the blackish-red of dried blood, and there were some droppings of feces on the floor under the metal mesh of a couple of the beds.\n\nAnd against the wall on the right side were two bolts of cloth... black velvet cloth.\n\n\"Mr. Chow,\" I said, \"I believe we have a crime scene.\"\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "hot wife",
        "big cock",
        "mystery",
        "police drama",
        "crime drama",
        "iron crowbar",
        "hot tub"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/power-ch-02-2"
}