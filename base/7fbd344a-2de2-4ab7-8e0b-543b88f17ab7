{
    "title": "Mira Ch. 05",
    "pages": [
        "I know this has been a long time in coming guys&hellip; Sorry. I got caught up in editing Leader of the Pack. Now that it's done I can get back to the fun part of writing! :D And for all my efforts, the revised, cleaned up, fixed version of Leader of the Pack is available for purchase at excessica.com . Thanks to everyone who encouraged me to publish it! Keep an eye out, Mira should be coming more quickly now. \n\nChapter 5\n\nIt's time, Rillan thought, standing outside the heavy door that was closed on Elizabeth's room so long ago. He rarely ventured into that space. Walking down the hall ghostly memories assaulted him, reaching into his mind from the hanging cobwebs. As he reached the main room he could almost see her sitting at the corner table, sewing. She was always sewing. And the room always smelled of cooking stew.\n\n\"Rillan,\" Elizabeth looked up from the pile of material in her lap that would eventually be a dress. The one she was wearing hung loosely from her frame. She didn't seem to notice that she had lost so much weight. \"I was starting to get worried. It's been days.\" She laid the dress carefully on the table and virtually ran across the room into his arms.\n\n\"Easy, easy,\" he teased, holding her gently. \"I'm in pretty bad shape this time.\" Though, even in my worst shape, you're too withered to cause me any real pain. Rillan buried the thought in the back of his mind. It was easy enough to do, considering she never acknowledged the darker side of their existence. Why should he?\n\nEmerald green eyes stared up at him with concern. Elizabeth pushed him away from herself and looked him over. \"What's wrong?\"\n\n\"Same thing that's always wrong,\" he sighed. He hated what he did to Elizabeth when he returned more than he hated assassinating the poor fools he was sent to kill. At least this time he wasn't so far gone that he attacked her without warning. \"I'm weak. I need to feed.\"\n\n\"Is that all?\" Elizabeth smiled. Her lips were still rose petal pink, though her face was gaunt and pale. \"I have stew cooking. It will be ready soon. Sit down. I'll get some bread and cheese for now.\" Rillan allowed her to guide him to the bed and sat down. She stroked her hand over his forehead, brushing his hair back from his face. Kissing him gently on the cheek she stepped back from him and disappeared to the hall toward the pantry.\n\nRillan breathed heavily. He could feel the blood lust building. Body aching with the need, he knew he wouldn't be able to play house as long as Elizabeth wanted. He felt obligated to participate in the farce for some time before taking from her. \n\nElizabeth reappeared from the hallway with bread and cheese in hand as well as a bottle of wine. Humming happily to herself, she took the food to the table, produced a couple plates and some cups. In short order she managed to set a pleasant table. It was all he could do to not fall upon her as she worked.\n\n\"Come over here and have something to eat,\" she called.\n\nRillan forced himself to his feet and went to the table. With the air of a faithful wife preparing a meal for her loving and devoted husband, Elizabeth served the bread and cheese, poured Rillan some wine, and went to the hearth to check on the stew. More than a little concerned, Rillan realized that she looked much more skeletal than the last time he was in her rooms. Has she eaten anything, he wondered. He had noticed that she only ate when he was in her rooms. That alone spurred him to visit her much more often than he used to. \n\nElizabeth pulled the stew pot from the wrought iron hook over the fire. \"I think it may be cooked well enough.\" She smiled up at him and Rillan noticed another tooth was missing.\n\nShe'll not survive another feeding, he realized. She's too fragile. His stomach turned. Rillan briefly considered leaving and seeing if he could find a worthy blood donor in one of the nearby cities. I pledged to never do that. If he did and was caught then the druids would end their relationship with him. I'd never be able to live feeding off of people that way. I'm monster enough like this.\n\n\"How was business in the city, my love?\" Innocence and love stared at him from the emerald glow in her eyes. Those eyes were the only part of her that wasn't showing the wear of the past decade.\n\nRillan had even grown used to her strange questions. \"I accomplished everything I was sent to do,\" he replied without pausing.\n\n\"I'm so proud of you. How many women have husbands as successful as mine?\" Elizabeth virtually glowed with pride. \n\nRillan leaned across the table, took her hand in his, brought it to his lips, and placed a soft kiss on her palm. As his lips touched her skin, his senses fired. He could hear her pulse and smell the blood flowing through the veins in her wrist. Feeling his body begin to shift, he closed his eyes and tried to calm the beast within, but he knew that he was losing this battle.\n\n\"Elizabeth, take off your clothes and get into bed.\" His voice was tinged with the guttural demon tone that instilled fear in so many would be conquerors.\n\n\"But you haven't touched your stew,\" Elizabeth responded playfully, as if she didn't see or hear the change in him. \"Isn't it a bit early for such games?\"\n\nRillan wasn't able to cope with her teasing this time. \"Just do as you're told,\" he growled. It took all the will power he had to keep from raising his eyes to hers. The last time she looked directly into the black sockets, she fainted and didn't recover for over a week.\n\nNearly in tears at his tone, Elizabeth stood quickly and went to the bed. \"I'm sorry,\" she whispered. \"I didn't mean&mdash;\"\n\n\"Don't,\" he snapped, stopping the apology. The last thing I need is for her to start apologizing again. \"Do as you're told.\" Guild washed through him as he got up and put out the lights around the room, refusing to even glance in her direction. I'll make it up to her in the morning, he told himself. Swishing material sounds told him that Mira was following his order.\n\nRillan turned toward the bed. He could see her in the darkness feeling her way onto the bed. Removing his own clothing, he watched her crawl to the middle of the bed and lay down on her back. \n\nElizabeth stared blindly into the darkness. \"Rillan?\" Fear and uncertainty were growing in the pit of her stomach. I've done this before. Somewhere in the back of Mira's mind a vision of fangs and empty black eye sockets sent a shockwave of terror through her body.\n\nStanding next to the bed in the darkness, Rillan could hear the sobbing begin. He knew the progression by heart. In a few moments the crying would stop, the room would fall deadly quiet, and Elizabeth would black out. Each second was palpable as he waited for her breathing to even out. Watching her through the pitch black, abject terror on her face, he considered ending it for her. In her state of mind, Elizabeth would never ask for death. Her denial was too complete. There were only these brief instances, just before he fed on her, when lucidity overcame her fantasy and she remembered what he was. \n\nFinally, her trembling stilled, her heartbeat slowed, her breathing became shallow, and the last of the tears ran down her cheeks. Blank void was all that could be seen in her eyes. Rillan crawled up the bed next to her. Gently he ran his fingers over her face, closing her eyes.\n\nTaking her in his arms, she felt even smaller than she appeared. Rillan cradled Elizabeth close to his chest and bent over her, biting her neck where her pulse seemed strongest. Warm blood flowed into his mouth, with each heartbeat. Careful to not take any more than necessary, Rillan only barely sated his hunger. Setting Elizabeth on her pillow, he lay down next to her and gathered her into his arms. Rillan knew that when Elizabeth woke, she wouldn't remember any of this. She would sigh happily and cuddle against him as if they were lovers and nothing was amiss. Then she would make him breakfast and force him to eat it. \n\nA crack of thunder caught his attention and he looked to the open shaft in the ceiling. Elizabeth's room was the only room, other than his, in the caverns that had a shaft to the surface. He couldn't remember if the door on the shaft in his room was shut. Briefly he considered getting up and going to make sure. A ledge above the shaft in Mira's room prevented the rain from streaming into her room. The shaft in his room couldn't claim such a luxury, and he knew that the rain barrel wasn't under the shaft. Rillan started to pull away from Elizabeth to go deal with the problem, but a small whimper stopped him.\n\nRillan sighed, accepting that the carpet in his room may be soaked through by the time he got there. Some things are more important, he thought. Eventually, the sound of thunder, rain, and Elizabeth's heartbeat lulled him into a fitful sleep. \n\nBlood running in rivulets down the shaft in his room and pooling on the floor plagued his dreams. Cold dead brown eyes stared at him as his latest victim relived his slaughter while Rillan slept. He found himself walking away from the blood filled room and ghostly body. As he opened the door to his rooms, he walked out of the caverns into the clearing at the main entrance. Sunlight blazed down on him, searing his exposed skin. Ignoring the pain he walked to the stone altar at the center of the fenced clearing to find a pile of parchment papers. So many papers covered the altar that they overflowed the edges and fell to the ground. He knew these papers well. Lifting one of the scraps of parchment, he read the name on it, then another. Some of the names were that of the men he had assassinated since coming to work for the druids. Other papers held the names of the women who had died in his service. Some of the names were unfamiliar to him, but he instinctively knew that the names belonged to dead people. Maybe they were the names of the faceless bystanders who were killed during his missions. Perhaps they were family or friends of the others he had killed. Either way, the papers were too numerous to count. A breeze from the mouth of the cave blew the papers off the altar. They flew into the sky and disappeared into the trees at the edge of the clearing. One paper remained on the altar. Rillan's hands trembled, as he lifted the paper and read the name scrawled on it. Elizabeth.\n\nWhen Rillan's eyes opened he already knew she was dead. Her body was still warm, but there was no heartbeat. A tear formed in the corner of his eye. He lay there holding her for so long sunlight began to threaten at the mouth of the shaft. At last, he got out of the bed, refusing to look at the body he left behind. For days Rillan refused to enter her rooms. He didn't want to face the task of taking her to the altar in the clearing. He didn't want a replacement. In the end, he turned off all feeling he had left, walked into the bedroom, wrapped the body in a blanket from the bed and carried her out of the caverns.\n\nElizabeth's small frame seemed to weigh tons as he brought her into the fresh air and moonlight. \"It's not right. The first time moonlight graces your skin in nearly a decade and you're not able to feel it,\" he whispered as he laid her gently on the cold stone. He stood over her for a short time, unable to remember the words to the prayer that his people said over the dead. It had been too long since he had heard it. Death is too constant around me. If I were to begin reciting the words I would never again be able to say anything else, he thought despondently before turning back to the darkness and solace of the caverns.\n\nReturning to her rooms, Rillan stood beneath the shaft, reached up and closed the heavy wood and wrought iron door. The hinges creaking echoed down the halls and thudded with finality as he forced the latch into place. \n\nReaching up through the cobwebs Rillan took hold of the latch. Gripping it tightly he pulled. Nothing happened. Years of disuse rusted it in place. Grim determination pushed Rillan on. Taking hold of the handle with both hands, Rillan's eyes darkened to black and his skin paled. One solid yank from the monster forced the rust immobilizing the latch to crumble, raining down on him in orange metal flakes. The sound of scraping metal screeched down the hallway, echoing out the main door and through the caverns. Latch finally open the heavy door groaned on its hinges as Rillan swung the door wide. More than a century of accumulated dead leaves and rotting vegetation dumped onto Rillan from the neglected doorway to the outside.\n\nBrushing himself off, he peered up the shaft into the night sky. Elizabeth's skylight wasn't as deep as his. The moon seemed a bit closer as seen through this shaft and it didn't take quite as long for the night air to filter down into the room. Fresh night breeze washed away the still stale air in the bedroom.\n\nElizabeth's room was exactly the same as the day he carried dead body out, with the exception of layers upon layers of dust and hanging cobwebs. \"I really have my work cut out for me,\" he grumbled to himself. He walked to the table in the corner where Elizabeth had left the dress she was sewing that night. Picking it up sent a cloud of dust billowing across the room. Rillan choked on the air, but continued his task with determination.\n\nChills ran down Mira's back as a screeching metallic noise woke her. Sitting bolt upright in bed, her mind raced. She wasn't sure where she was or how she had gotten there. Slowly her eyes adjusted to the dim light dancing around the room from the fireplace. As the details of her room came into focus Mira, remembered with eerie clarity the last thing she did before falling asleep. Or perhaps I should say passing out, she thought.\n\n\"Rillan,\" she called into the darkness. There was no answer. \"I wonder how long I was out this time.\" She could smell stew simmering in the kettle in the fireplace and there was a full pitcher of water and a cup on the stand next to her bed. \n\nMira sat up and swung her legs over the side of the bed. Picking up her dressing gown from the foot of the bed she pulled it onto her naked body and slid off the edge of the bed. The frigid stone floor sent chills through her and she quickly found her slippers. Memories of the first time she woke up after his feeding rushed into her mind. It surprised her to find that she didn't feel too badly at all this time. She began moving about the room lighting candles. She ladled some stew into a bowl and placed it on the table before going to get some bread, cheese, and a bottle of wine from the storeroom. \n\nMira couldn't decide if she was disappointed or relieved that she didn't wake up in his bed. Her body tingled with the memory of what had happened just before she fell asleep. A smile crept across her lips with the thought. \n\nAfter she ate, Mira warmed herself a bath and then went about trying to get back into her routine. However, she found that her mind continually drifted back to that night in Rillan's bed. She considered going to him again, but embarrassment held her back. Eventually, she wandered down to the study with all the books; half hoping she would run into him. But the halls were silent. \n\nWhen she returned to the room she took her silver whistle and sat down on her bed. After an hour of unsuccessfully trying to distract herself from the insistent tingle between her legs, Mira set the whistle aside. Nervously she scanned the shadows for any hint of movement that might reveal Rillan watching her. \n\nWhen she was relatively satisfied that she was alone, Mira laid down on her bed. Hesitantly, she pulled her skirt up her body. She briefly considered how embarrassing it would be if Rillan caught her, as she slid her hand into her underwear. A soft moan escaped her lips when Mira's fingers slipped across her mound and into her wet heat. Slowly she began stroking her clit, running her fingers in long satisfying caresses. Closing her eyes, she pictured Rillan sitting between her spread legs, his fingers exploring her pussy. Mira bit her lip and tried to hold back the whimper, as her body began to shake.\n\nMira lay there after the waves of pleasure calmed. It would have been a lot more intense if Rillan had done it, she thought, with some disappointment. \n\nCleaning Elizabeth's rooms took Rillan far more time than he first expected. Every night that week he returned to his own rooms and turned his bath water black with dust. \n\nHe stood in the middle of the main room examining his handy work. There wasn't a trace of dust, the rusted latch on the shaft cover had been replaced, he brought in new blankets, took all of the things that had been Elizabeth's to a storage room down the hall, he filled the store room with fresh food, and brought in wood for the fireplace. \n\nRillan left the shaft open to allow fresh air to circulate through the chambers, and he left. Striding down the hall, pleased with himself, Rillan decided that he had earned some sword practice. It had been a while since Rillan swung his sword. Over the past month he was either not in the mood or busy with something else. \n\nRillan lit the candles in his practice room, shed his clothing down to his breeches, and selected a well used sword from a rack on the wall. Swinging it back and forth, loosening the muscles in his arms, and rolling his head along his shoulders, Rillan approached the armored dummy. Shortly the sound of clashing metal on metal rang out down the hallway.\n\nBook in hand, Mira walked down the hall toward the study. She wasn't sure what she wanted to read next. There was that book of stories about dead leaders or that book about the creation of the sun. Mira was suddenly snapped out of her thoughts by the sound of metal striking metal. A smile crept across her face. Without thinking she passed up the door to the study and continued to the end of the hall and the large wooden double doors.\n\nMira could see the light emanating from cracks around the door. She pushed the door open, and light spilled out into the hallway. Standing in the doorway, Mira watched Rillan sparring with the armor clad dummy. \n\nRillan only barely registered that the door swung open, but he rarely missed a change in his environment. That type of observation had long since become second nature to him. Continuing to batter the dummy he waited to see if she would approach, a smile on his face. \n\nMira was contemplating what excuse she was going to use for seeking him out and interrupting him while he was practicing. Just as she was turning to disappear back down the hallway he called out to her.\n\n\"You came all this way, Mira, presumably looking for me. Is there a reason you've changed your mind about whatever it was?\"\n\n\"Shouldn't you be at least a little out of breath after all of that,\" Mira asked nervously, trying to change the subject.\n\nHis warm smile virtually pulled her into the room. \"I don't tend to get out of breath.\"\n\nMira walked up to him, her mind grasping for a good excuse. Why didn't I think of this before? I'm going to look like a complete fool. \"Uh, I was just wondering if the rugs in my rooms would be replaced,\" she sputtered, in what she believed to be a sudden stroke of genius.\n\nRillan stared into her eyes. He knew she was hiding something, but he couldn't figure out what she could possibly be trying to keep from him.\"\n\n\"Actually, I intended to talk to you about that.\" Rillan leaned his sword against the dummy and picked up his shirt from the arm of the chair where he had left it. \"Come with me.\" He started walking toward the door pulling the white shirt over his head as he went. \n\nMira felt her heart begin to race. She hated that he was putting on a shirt. \"Where are we going?\" Rillan didn't answer her. He just looked back at over his shoulder in the darkness. Mira couldn't see the excited glint in his eye, but it was obvious that he was pleased with whatever he was doing. They approached a door that Mira only vaguely remembered being there.",
        "Rillan stopped outside the door with his hand on the latch. \"I asked you how badly you wanted to see outside and you never answered me.\"\n\nConfusion surged through her. She looked at the door he was standing in front of. The implication was pretty clear that behind the door there was something to do with outside. He didn't sound as if he was angry or annoyed with her. \"I know. I don't really know how to answer that.\"\n\n\"I have a gift for you.\"\n\nMira's heart pounded relentlessly against her ribcage. \"I don't understand.\"\n\nRillan smiled in the darkness, as he lifted the latch and pushed the door open. He held it aside for Mira to go in. \n\nCautiously she stepped past him and walked down the short hall to the bedroom at the end. The open shaft immediately drew her attention. Fresh air pouring into the room drew her closer. Standing beneath the open shaft she stared up into a starry night sky.\n\n\"If you move the bed to the right spot you should be able to see the sky as you're falling asleep.\"\n\nMira turned to look at him, tears in her eyes, afraid to say anything.\n\n\"You don't have to move into this room. There is no music room, or any of the other rooms that your current quarters have. Originally I never expected companions to remain in their rooms all the time. That situation developed over the years. This room is more like mine: the bedroom, a bathing room, and a small storage room. In the beginning the rooms that you're currently living in were meant to be a separate area to go to for entertainment. The room that is your bedroom used to be a library.\" When Mira still didn't respond Rillan became concerned and added, \"Like I said, you don't have to move into this room. I just thought you might like it better.\"\n\n\"I do,\" Mira finally said, a catch in her voice. She walked haltingly toward him and without hesitation wrapped her arms around his neck, buried her face against his shoulder and began crying into his shirt.\n\n\"I hope those are good tears,\" Rillan said with concern, stroking her hair gently.\n\n\"Very good tears,\" she sobbed. \n\nRillan loved the feel of her warmth against his cold body. He held her while she tried to get control of herself. When Mira finally looked up, Rillan cupped the side of her face with his hand and wiped a tear away from her cheek with is thumb. She's even beautiful through tears.\n\n At first Rillan didn't understand the intensity in her deep brown eyes. Nothing ever shocked him as much as the kiss that Mira placed on his lips. Momentarily stunned, Rillan stood there motionless, letting her kiss him. When it eventually sunk in what was happening, Rillan swept Mira up into his arms and carried her to the bed. The kissing grew more passionate as he pulled her skirt up to her waist and worked his hand beneath all the material. \n\nMira let out an appreciative hiss as his fingers delved between her legs. Driven on by the Mira's obvious desire for him to make love to her, Rillan took hold of her skirt and ripping the waist band, pulled it from her body, leaving her completely naked from the waist down. Watching her flushed expression for any sign of reluctance Rillan untied his breeches and pushed them down his thighs, as he moved forward between her legs. \n\nDark blue eyes gazed wantonly into brown, and Rillan pushed his cock into her without pause. Mira grabbed the white material of his shirt in her fists, struggling to pull it over his head and off his body. She threw the shirt to the floor beside the bed and ran her hands over his chest. Hands on the bed to either side of her, Rillan braced himself over Mira as he thrust into her over and over again. He listened with pleasure to the whimpers and moans wrung from her lips. He was amazed. One thought blazed through his mind. She started this.\n\nMira trembled. Her small hands squeezed his shoulders, and her face contorted into a mixture of pain and pleasure as she came. Seeing her give in to the torrent of passion was more than he could take. Rillan's body tensed, his hands clenched the blankets, and he growled his release. His arms nearly collapsed under him. With some effort, he fell to the bed next to Mira. Waves of sensation pulsed through his body. Mira rolled to her side, laid her head on his shoulder, and sighed her satisfaction, as they lay together, recovering.\n\n\"I don't believe I've felt anything like that since I died,\" he said under his breath, too softly for Mira to hear. He stroked her hair and kissed the top of her head. \"If I had known that this would be my 'thank you' I would have cleaned this room up for you long ago,\" he teased.\n\n\"I didn't realize how much I wanted something like this,\" she said.\n\nRillan smiled wondering if she meant the sex or the view of the sky. \"I'll do my best to make you happy while you're here,\" he said seriously.\n\n\"You truly make no sense.\" Mira propped herself up on his chest so that she could look down into his eyes.\n\n\"Maybe someday I'll explain why. For now take me as I am.\" Rillan considered how happily he brought her to this room. I guess it's time to let Elizabeth go. Perhaps she had something to do with bringing you to me, he mused, staring into her sparkling brown eyes.\n\nMira leaned down and kissed him again, as her response. Slowly they removed the rest of their clothing, worked their way beneath the blankets, and spent the rest of the night together."
    ],
    "authorname": "secretme",
    "tags": [
        "vampire",
        "druid",
        "horror novella",
        "vampire novella"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/mira-ch-05"
}