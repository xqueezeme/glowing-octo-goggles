{
    "title": "Only You Ch. 06",
    "pages": [
        "Author's Note: Ahh, finally! The sixth chapter. One more to go! Enjoy, kids.\n\nSienna H.\n\n********\n\nThe water was just right as Tegan stepped into the large marble shower. She turned the glass knob and the hot water sprayed from the dual showerheads. \n\nAfter pinning up her shoulder-length hair, she stepped gingerly into the heated mist. She had barely shut the glass door when Derek slid in right behind her. \n\nShe couldn't help the broad smile that danced across her lips. \"I was wondering what was taking you so long.\" Tegan leaned her weight into his frame as his strong arms wrapped around her waist. She jumped slightly when his erect cock brushed against the small of her back. \n\nDerek let out a small groan. He reached for the bottle of the rose and mint scented body wash she always used and squeezed a dollop into his hand. Derek lathered the scented mass in his hands before sweeping the suds over her body. \n\nHis nimble fingers slid over her taut nipples, making her whimper softly. Tegan's hand went to grasp his wet curls as his hand slipped between her wet thighs to stroke her smooth mound. \n\n\"Beautiful,\" he whispered, his breath coming out heavy and hot against her damp skin. Tegan's heart thumped loudly as he dropped to his knees and turned her to face him. She grabbed hold of the metal bar in the shower as he lifted her leg and placed it over his shoulder. \n\nDerek leaned in, breathing in the scent of her arousal like the sweetest of perfumes. His nose nuzzled her clit and her hips jumped. His tongue darted out to lap at her pussy, the petal-soft folds slick with her juices and the hot water. \n\nTegan let out a harsh breath when he took the sensitive nub between his teeth and sucked lightly. His large hands cupped her cheeks to steady her as his tongue danced slow circles around her clit. \n\nWith both hands braced against the wall, her hips began to dance, moving in tandem with the rhythm his tongue made. Derek pushed back his soaking curls and watched her as she responded to the pleasure he was giving her. She was simply stunning, even more so by the water. \n\nHe pushed a thick finger into her damp heat and she gave a small cry. Her body began to tremble violently as her pussy clenched his finger tightly. Her hips moved faster, her large hazelnut colored breasts quivering from the orgasm now ripping through her body. \n\nOver and over she whispered his name, the softest of arias that brought an impish smile to his face. Placing her leg gently on the marble floor of the shower, he rose to his full height. \n\nDerek gathered her to him once more, grinding his hardness into her soft tummy. \"Do you want me to fuck you, luv?\" he growled out. His lips sought the tender flesh of her glorious neck, sucking the wet skin into his mouth, adding a little more pressure every so often. \n\nTegan felt the room start to spin, the heat of the shower not even comparing to the fire now roaring through her body. She needed him, and now. Her head tilted in a slight nod as she breathlessly called out. \"Yes, please fuck me,\"\n\nDerek angled his cock so that it brushed lightly against her still throbbing pussy. Tegan moaned from the contact and tried to grind against him harder, but his strong hands stilled her moving hips. \n\n\"I didn't hear that,\" he whispered, his tone more dangerous. His cock rubbed harder against her pussy and Tegan let out an anguished groan. \n\n\"Please,\" she moaned. She lifted her hips, desperate for the slightest nudge of his cock against her clit. \n\nDerek held her hips still but continued to rock his cock into her warmth, the sensations driving him crazy. He wasn't sure why he was so keen on making her beg for it, but it was turning him on to see her so worked up. \n\nHis lips crushed hard against hers, sucking in her taste and making his body roar with lust. He winced slightly when her blunt teeth nipped him harder than necessary. He supposed she was just paying him back. \n\nHe couldn't hold on any longer, He needed to feel her soft pussy wrapping around his cock as if they were made for one another. \n\nWith no gentle easing, he plunged hard into her, making her cry out, her teeth sinking into his shoulder. Derek let out a low growl, more out of lust than pain as his hips thrust hard into hers. \n\nDerek lifted her off her feet and rested her against the marble ledge in the shower. With one leg lifted, he rolled his pelvis, sliding quite nicely into her pussy. Tegan's eyes rolled back as her head whipped from side to side. Her breath was coming in short, harsh pants. She simply couldn't get enough of him, she wanted more. \n\n\"Harder,\" she moaned. \n\nDerek stopped rolling his hips and moved at a gradually slowing pace until he was barely moving at all. Tegan gave a frustrated snort, her whiskey colored eyes not even bothering to mask her irritation. \n\nHe couldn't help the chuckle that tumbled forth at the look on her face. She was positively cute when she was pissed. \n\n\"Don't tease,\" she said a hint of a whine in her voice. She normally hated to pout but he was being a bit unreasonable. \n\nDerek thrust hard and slow into her and she let out the sexiest noise he'd ever heard. It was part whimper, part moan, part growl, and all woman. He felt his cock twitch inside her. \"That was a new one,\" he said. \"Let's see if I can make it happen again, shall we?\" He slid out of her pussy, waiting a beat before repeating his actions. \n\nOnce again, she made the sound, her legs wrapping around his waist, her fingers scratching the skin on his back. He had never been so turned on. \n\n\"Baby girl, you are so sexy right now,\" he whispered, his pelvis rolling, making his cock dance inside her. \"Fast or slow, honey. How do you want it?\"\n\nTegan shivered under the intense gaze of his blue eyes. \"Fast. And hard.\"\n\nHe complied, thrusting into her with so much force, Tegan had to hold onto his shoulders to steady herself. She egged him on, whispering the naughtiest things she could think of, making his heart race. \n\n\"You feel so fucking good,\" she moaned. \n\n\"Yeah?\" How good?\" His grip on her hips tightened, rocking her curves into him with each powerful thrust. He hit her secret spot and her toes curled in pleasure. \n\n\"Ohh, fuck. Like heaven.\" She bent her head, her lips right at his ear. \"The night after we met, I went home and worked my pussy raw thinking about you.\"\n\n\"Jesus,\" he groaned. His hips began to move faster, pushing harder into her. Her nails were digging into the skin of his back and he was sure there were going to be bruises later on, but he didn't care. \"How many times did you come, baby?\"\n\n\"Mmm, I lost count at f-f-four,\" she shuddered as she started to orgasm, her legs beginning to quake. Derek took that as his cue and picked up the pace, pounding her pussy harder. Tegan could barely speak, her entire being on overload. \n\n\"I bet the real thing feels ever better,\" he gasped out. He could barely speak; his cock was screaming for release just as Tegan began crying out from her second climax. \n\n\"Oh it does,\" she moaned, her voice climbing higher until she couldn't get out more than a raspy scream.\n\nDerek groaned as he came, his cock pumping his seed inside her as she still trembled in his arms. He was breathing heavily, trying to make his body return to normal when he realized the water in the shower was no longer on and realizing it must have been on a timer of some sort. \n\nTegan's legs were still shaking when he moved her from the ledge and held her tight to him. She noticed that his body was trembling a little and she clung to him tighter. She breathed in his scent, and smiled. She could get used to this.\n\n********\n\nForty-five minutes later they were dressed and with the rest of the Trifecta en route to Simon's house. His lips held a devilish smile, as if he had a secret he wasn't planning to share with the rest of the class. That shower was one of the hottest experiences he had, hands down. \n\nJust thinking about her soft, wet body, so pliant in his hands had his cock begging for round two. He might have to suggest to Tegan that they move their play to the Jacuzzi tub. That could definitely be interesting. \n\nThe sex did take his mind momentarily off the business at hand, but now he was back to fretting over the deal. On the one hand, it seemed like a no-brainer of an opportunity. Simon was a decent chap who had really interesting ideas for the company. \n\nOn the other, Derek felt like he'd be selling out to some giant corporation who'd probably turn their baby into some soulless money-making venture and he'd be damned before he let that happen. \n\nDerek glanced around the limo at his two best friends. Matt and Tegan were busy talking about some movie that had just come out and Jake was busy texting on his phone. He felt as if his friends had already made up their minds about what they wanted to do. He wasn't sure if he wanted to be the one to hold everyone back. \n\n\"Derek? Oi, wake up you!\" Derek glanced up to see Matt and Tegan staring at him. \n\n\"Sorry, what?\" He shook out his black curls, removing his random thoughts from his mind. \n\nMatt grinned, his handsome face lighting up. \"I was just telling DJ Girl that we've got to check out that new Judd Apatow movie when it comes out.\"\n\n\"Sure,\" Derek nodded. \"Definitely.\"\n\nTegan's light eyes searched his face. \"Are you alright, babe? You seem kind of out of it.\"\n\n\"I'm fine,\" he said while flashing her a large grin. \"Just thinking about some things.\"\n\n\"No worries about this deal, tonight mate.\" Matt chucked him under the chin. \"Just have some fun with it. We'll know when everything is right. Besides, you might want to enjoy this hot girl you've got on your arm tonight.\"\n\n\"Oh you,\" Tegan slapped his arm playfully. \n\n\"You look gorgeous DJ Girl.\"\n\n\"Thanks Matt. You don't clean up so bad yourself. Actually you all look pretty hot.\" \n\nWhen they stepped onto the elevator, Tegan remarked that Matt and Derek looked like members of a cheesy emo band. It was far from it, though. \n\nMatt's brown hair was styled in an awesome mini-mohawk and he wore dark denim jeans and a black t-shirt that highlighted his full tattoo sleeves. On his feet he wore a pair of sneakers with ridiculously bright colors of orange, purple, bright blue, and an almost highlighter green. Jake was more conservatively dressed in a casual navy blue button up, faded blue jeans and checkered Vans slip-ons. \n\nBut it was Derek who once again set her pulse racing. Even dressed down, he was so smoking she had to keep her fingers in check, even as they itched to undo his pants and show him how incredibly hot he made her. He was clad in dark jeans, and a black t-shirt with the words \"They're Coming to Get You, Barbara\" written in bold neon colors on the front. \n\nShe felt incredibly proud to be sporting such fine ass men on her arm. For the first time in a long time, she felt absolutely beautiful. She was wearing slim black jeans that gave her figure a more slender look, a tight simple white tank top, bright yellow round toe flats, and a fitted light yellow and black argyle-style summer cardigan. Tegan hoped the outfit looked a little more indie scene chick than Mom-at-the-country-club-brunch chic. \n\nMatt smiled at her once more. \"Derek, I think I might have to borrow her for a while.\"\n\nDerek put a possessive arm around her shoulder and shot Matt a faux gruff look. \"Get your own, mate. This one's mine.\" \n\nThe limo came to a sudden stop. Jake peered anxiously out the window. \"Looks like we're here,\" he said. There was a huge smile on his face that made Derek a little uneasy. He was way too happy about all of this. \n\nThey clambered from the limo, Gianni tipping his imaginary cap to Tegan who chuckled softly as Derek rolled his eyes. The guy was way too smooth for his taste. \"I hope you all have a wonderful evening,\" he said easily in his crisp English. \n\nDerek nodded as they walked up the slate stone way leading up to Simon Slade's impossibly classy bachelor pad. \n\nIt was how a house in L.A. should look, all glass panels and trendy grey tones. Tegan thought it was an accurate depiction of Simon Slade: hip, transparent, and austere with just a hint of shady. Before they could even knock, the door flew open and they were face-to-face with Simon. \n\n\"Ahh, the Trifecta!\" he glowed. \"Welcome to my home. The party's already started.\" Tegan noticed he was dressed down from his sleek business suits in a pair soft denim jeans and a crisp stone colored button down that matched his slate eyes perfectly. He really was a handsome man, she thought as they stepped inside his expansive home. \n\n\"Nice digs,\" she remarked. The house had an open floor plan, the rooms melding together in a modern look. The first level was decorated in various shades of grey, blue, and green. Tegan thought it looked like something straight out of Architectural Digest. \n\nSimon smiled at her. \"Thank you, Ms. James. As you can see, there are a lot of people who've turned out to get to know you guys better. Meet and greet for a few, then we'll step into my office to talk a little business.\" He pointed to a large counter in the kitchen that was laden with food. \"Help yourselves to whatever. If you need anything the staff will be happy to get it for you.\" \n\nAt those words, a young man wearing all black appeared holding a tray with various alcoholic beverages on it. Tegan picked up a bottle of beer and another server slid in to open the beer and pour it into a glass. \n\n\"Wow,\" Derek said. \"Efficient, aren't they?\"\n\nSimon nodded. \"I'll be back to check up on you guys in 30.\" He made a shooing motion with his hands. \"Go. Mingle. Get drunk, whatever.\" And with that, he turned on his heels to welcome other arriving guests. \n\nJake's broad smile was still there as he turned to his friends. \"Well, let's say we get this party started?\" He made a beeline for the buffet-style food setup.\n\nMatt shook his head. \"That guy is an idiot.\" His eyes searched the room. \"Do you have any idea who half these people are?\"\n\n\"Nope,\" Derek said, shaking his head. The first floor was pretty crowded with people eating off tiny plates or drinking. He could see outside to what he assumed was the backyard and there were more people out there. \"Man, he's really wining and dining us, isn't he?\"\n\n\"Oh this wasn't all for you,\" a breathy voice said behind them. Derek turned to see Jade Stone, the ever-present smile plastered on her face. She was looking hot tonight, practically sizzling in a white A-line skirt and white halter top. \n\nHe noticed that she was always wearing white; it complimented her sun-kissed skin rather well. Her hair was glossy as usual, casually brushed around her tan shoulders. \n\n\"Oh really?\" Derek asked. \n\nJade nodded; he noticed that her round blue eyes always seemed to get bigger whenever she talked to him. \"Simon was already having a party tonight for some of his friends and he invited you four along. He really likes you, you know?\" \n\nDerek heard the softness in her tone when she uttered the last part and he couldn't help but wonder if Simon wasn't the only one who really liked him. He mentally shook those thoughts from his head. Why was he even thinking about another woman when he had Tegan? Old habits die hard, he thought. \n\n\"Well, we kind of like him too\" Matt said. He offered his arm to Jade, who took it. \"Care to share a drink with me, Ms. Stone?\"\n\nJade laughed flirtatiously. \"Of course, Mr. Cornwall. Are you trying to seduce me?\"\n\n\"Give me time,\" he winked as they walked away. \n\n\"He is so ridiculous,\" Tegan said, draining her beer. \n\nDerek shrugged. \"Pretty much. So, we have a whole half hour to do as we please. What do you want to do?\"\n\n\"Go down on you in the bathroom\" she replied bluntly.\n\nHis blue eyes widened, the incredulous shock on his face making him sputter. \"W-w-what?\" \n\nShe burst out laughing. \"I'm totally joking. Even I'm not that skeezy.\"\n\nDerek's lips formed into a pout. \"Damn, I was kind of hoping you were.\"\n\n********\n\nFor the next thirty minutes, Derek wandered aimlessly around the party, talking briefly with the other guests about mindless things that didn't really hold his interest. Unlike the other party last night at the Rooftop, this one was more about Simon than about appealing to the Trifecta's interest. There were several people that represented the companies Slade Enterprises had taken over, Simon's co-workers, and other various people with ties to the businessman. \n\nTo Derek, it was almost as if Simon had gathered people there who he'd knew make him look more appealing which was a pretty ingenious move. The reps from the companies had nothing but glowing reports. \n\nThey talked about how Simon the Shark was a dogged but very fair man who understood his work and treated people with respect. One man in particular talked about his initial skepticism about Slade Enterprises and how he was reassured constantly that his company was in good hands. \n\nIt was a lot of information to take in, and Derek was trying to absorb it all. He was casually leaning against a wall, sipping on soda when someone tapped him on the shoulder. It was Jade, still all smiles. \n\n\"Enjoying yourself?\" she asked brightly. \n\n\"Somewhat. How about you? Aren't you supposed to be working tonight?\"\n\nJade gave a casual shrug. \"Supposedly.\" She leaned into him, and Derek stepped back a little. It was all a bit too intimate. \"So, Derek how long have you and Tegan been seeing each other?\"\n\nAhh, here it goes he thought. \"Um, for quite some time now.\"\n\nHer blue eyes studied his for a moment and it made him a little uncomfortable. There was something in her gaze, something that indicated she had a secret and she wasn't sharing. That made him a little uneasy. \n\nIn an instant it was gone, replaced by her usual look of unmasked lust. \"Well, I just came over to let you know Simon's ready for you guys now.\" With that, she flounced away, her white skirt swishing behind her. \n\nDerek's eyes followed, watching her walk away with a look of curiosity. There was something a bit peculiar about that girl he just couldn't put his finger on. \n\n\"What did she want?\" \n\n\"Whoa!\" he exclaimed, jumping nearly a foot out of his skin. He turned to see Tegan right behind him. \"Jesus, you've got to start wearing a bell or something!\"\n\nTegan giggled. \"Calm down, you bitchass. It's not even that serious.\" She noticed the guilty look flash on his face. \"Mmm-hmm.\"\n\n\"What?\"\n\n\"You were watching her ass, weren't you?\"\n\n\"What? No! I haven't any clue what you're talking about.\"\n\nA small smile spread on her pretty face. \"Baby, I was joking with you.\" She punched him lightly on the arm. \"Calm down, okay? Nervous Derek isn't all that attractive.\"\n\nHe returned the smile as his heartbeat slowed back to normal. He had been watching her walk away, but not for the reasons Tegan thought. \"I'm sorry Tegan J. Your question just caught me off guard.\" \n\n\"No shit.\"\n\n\"I gotta go see Simon now to talk business.\" Tegan wrapped her arms around his trim waist, drawing him closer. \"Do you want me to go with you?\"\n\n\"That's okay, babe.\" He kissed the top of her head, inhaling the scent of her spicy shampoo. \n\n\"It's kind of a Trifecta thing. But I'll let you know how it goes.\"\n\n\"Okay.\" Tegan kissed him softly on the lips before moving away. \"Good luck, kid.\"\n\n********\n\nDerek walked down a carpeted hallway in search of Simon's office. He was about to give up and start opening doors randomly when he heard deep laughter booming from a slightly open door at the end of the hallway. \n\nWhen he pushed the door open he found Simon, Matt, and Jake already seated in Simon's impressive office. It was a fairly large room that resembled his Slade Enterprises office, with the color scheme, and the two flat screen televisions. In lieu of a desk there was a round solid oak table in the middle of the room with several comfy black leather chairs around it. ",
        "Simon looked up from talking with Matt to smile at him. \"D. Rye! You finally made it.\" He patted the chair next to him. \"Come and sit. We've got a lot to go over.\" \n\nDerek sat down, his hands pressed flat on the table surface. \"So what's up Simon?\"\n\n\"Like I said before boys, I really want your company. I believe that NerdsUnite! is a fantastic concept and brand. You deserve to be rewarded for the hard work that was put into making the company a success. I believe that with Slade Enterprises all that can be accomplished.\" \n\nHis smile grew broader. He handed out a single sheet of paper to the three of them. \"This is how much we are prepared to offer each of you for your share.\" \n\nDerek picked up the paper and his heart nearly stopped when he read the sum. Fifteen million dollars. FIFTEEN?!? He didn't even know their little company was worth that amount. \"There must be some mistake,\" he whispered. \n\n\"No mistake,\" Simon said, shaking his head. \"Believe me when I say you gentlemen will be generously compensated for your efforts. Now this is the base offer and we're prepared to negotiate the terms of the contract whenever you guys are ready.\" \n\nDerek nodded and was about to open his mouth when Matt surprisingly spoke up. \"I do believe that your intentions are honorable, Mr. Slade. And I also believe that your ideas to bring NerdsUnite! into the mainstream are very ingenious. But I still don't understand one thing: why us? Why our company? There are hundreds of websites that offer what we do. And yeah, we're pretty fucking cool, but what made you decide that we were what you wanted?\"\n\nSimon's grey eyes were thoughtful for a moment. \"Matt, I saw something in your company that makes it a step above the rest. I saw the hard work, the effort, and most of all the camaraderie between three friends who really respected each other. And honestly, you guys looked like you were having a really fucking awesome time.\"\n\nMatt grinned. \"We do have an awesome time. And that's why I still love doing my job. Do you know how hard it is for people to find a job they truly love? I wake up in the morning and I'm fucking ecstatic to turn on my computer and blog or make a video or read a new profile. \n\nIt's a great feeling to do what I do, Mr. Slade, I'm sure you can agree with me on that. I can't speak for Derek or Jake, but I don't think there's enough money in all of Los Angeles to make me give up that feeling.\"\n\nHe smiled at Derek who was gaping at him, a look of pure astonishment on his handsome face. Matt was usually the quiet one out of the three, the peacemaker. He had never heard him speak so passionately, so forcefully; it was amazing. \n\n\"Matthew,\" Derek said. \"You're so badass right now. It's kind of hot.\" \n\n\"Thanks baby,\" Matt replied as he let out a hearty chuckle. He turned his focus to Simon, who had been listening quietly as he spoke. \"I hope you don't take offense to this, Mr. Slade. \n\nI really do admire your company and I have to admit that you're pretty fucking cool yourself. But I don't think you should expect my approval.\"\n\nSimon nodded. \"That's perfectly understandable. It's just a little surprising, considering the phone call I received prior to me contacting you about my interest.\"\n\n\"Phone call?\" Derek asked. \"What phone call?\"\n\n\"I was informed by someone very close to you that the Trifecta was interested in selling their company on the high end market. I took a look at the site, liked what I saw and made the call to Matt.\"\n\nDerek looked at Matt who raised his eyebrow in question. They both had the same 'what the hell' look on their face. Jake, who had been relatively silent throughout the proceedings spoke up. \n\n\"Simon, who the bloody hell told you that we were ready to sell our company? Not that we don't appreciate the offer, mind you but this is the first time selling it even crossed our minds.\"\n\n\"Well,\" Simon started. \"They're actually here tonight.\"\n\nAt that moment, another door in the office swung open and someone stepped out. It took a minute for everything to sink in, but when Derek saw who was standing before him, a look of genuine horror crossed his face. \n\n\"Lottie? What the...\"\n\nLottie Winchester smiled tightly at him. \"Hello Gorge.\" She stood before him, thin hands on her slight hips. She had been a model in her teen days, but her slight indulgence with the cocaine cost her a choice contract. \n\nDespite the \"hard times\" struggling with a drug addiction, she was still able to maintain her attractive features. Her hair was long and layered, the strawberry blonde locks reaching down her back. She had big green eyes that she used to her advantage, making them wide and round when she wanted to look innocent, and small and sly when being seductive. \n\nBeauty came effortlessly for Lottie Winchester. She was the daughter of sexpot royalty: Irish model Siobhan Parsley and Collin 'Wild' Winchester, ex-lead singer of The Bones.\n\nIndeed she was attractive, with her rounded breasts that were the perfect handful and her slim frame. But Derek knew beneath all that lay a viciously insecure girl with the personality of a houseplant. On top of that, he knew she could be a first class twat when necessary. \n\nAll of a sudden, the room became too small and Derek struggled to find his breath. She was in the same place as Tegan! Shit, this was going to be bad. What the fuck was she doing here?\n\n\"What the fuck? What are you doing here?\" His tone was quite snappish but he didn't care. She had a lot of damn explaining to do. \n\nLottie smiled coolly at him. \"Can't a girl visit her boy when he's away on business?\"\n\nFour pairs of eyes stared at Derek, waiting for his reaction to her question. And then it hit him: she knew everything; about Tegan, the whole lot. She stared at him, her eyes practically daring him to challenge her statement. He wasn't going to give her the satisfaction of letting her get to him. \n\n\"Can we talk in private?\"\n\nShe laughed, a shrill sound that rang in his bones. Oh yeah, she's definitely peeved. \"Of course we can, Gorge. Anything for my fella.\" Lottie turned and walked back through the door she came out. \n\nDerek rose from his chair, his hands shaking slightly as he followed her. The room turned out to be a small sitting room and he realized she must have been in there the entire time, listening to their conversation. That thought made him boil with anger and as soon as the door was shut he grabbed her arm. \"Are you fucking taking the piss or what?\" he hissed. \n\nLottie wrenched out of his grasp. \"I have no idea what you're talking about, Gorge.\"\n\nHe pressed his fingers to his temples. \"Stop fucking calling me that! What are you playing at Lottie? Why are you here, and what the fuck do you have to do with Si...\" Derek cut his sentence short as realization sank in. \"It was you,\" he said incredulously. \"You were the one that told Simon we wanted to sell NerdsUnite!.\"\n\nHer cold smile chilled him. He had never seen her look so positively...sinister. It was very unbecoming to her delicate features. \"Beauty and brains,\" she hissed nastily. \"It's no wonder the American cow adores you.\"\n\n\"What?\" he sputtered. \"How do you know about...\"\n\n\"I know all about your fat whore!\" she said shrilly. \n\n\"Is that why you did this? To get back at me?\"\n\nHer response was to smile evilly once more. Derek balled his hands into tight fists. His father taught him from a very young age never to strike a woman, but she was thisclose to making him renege on that promise. \n\n\"You once told me I was your world,\" she said. \"I thought we were going to be together forever.\"\n\n\"Please! We were barely together when I left London. You thought the parties and the other stupid people were more important than me. Face it Lottie, we were over even before I hit the States. I called you to finalize it and you fucking fell asleep on me. Yeah, you definitely gave a shite.\"\n\n\"What else was I supposed to do!\" her voice was getting increasingly louder. \"You broke up with me! Over the fucking phone! I'm not some moon-faced little schoolgirl that you can just bin whenever you feel like it!\"\n\n\"You could have called me back and talked. You could have acted like an adult instead of taking out your frustration on people who had nothing to do with the situation.\" The fury churned inside of him and he once again had to will himself not to strike her. \"And how did you plan all this?\n\n\"I had Simon's number. You know Jade, right? She's an old modeling friend. We did a couple of shoots back in the day and still kept in touch. \n\nWhen I found out a month ago that she worked for Simon Slade, I looked up his company. I had been planning on surprising you with the information when you got back, that someone like him was interested in you. But apparently Simon jumped the gun with the news.\"\n\nDerek shook his head, his raven curls whipping about his face. Something just wasn't making sense. \"So you're telling me that you looked up Simon ages ago when I was back in London?\"\n\nLottie nodded, her green eyes showing nothing but truth. She had no reason to lie. \"As a surprise for you. I knew how hard you worked on that site and wanted to show you that someone was interested.\"\n\n\"I..I don't understand this, Lottie. Why would you let me be ambushed by him?\"\n\n\"Like I said, I didn't know he was going to contact you so soon. I told him to wait until you were back overseas. But you know, it worked out better than I planned. Jade told me all about your little cow and then I knew I had to see for myself. You wanker, you took her to see your brother.\" She hissed the last part, the words filled with so much venom he almost flinched. \n\n\"How do you know about that?\"\n\nShe laughed once more, the sharp sound slicing through the air thick with tension. \"You are really thick. Of course there were paparazzi around. I saw the pictures of the two of you together. \n\nThey were all over the bloody mags back home. Do you know how embarrassed I was, all our friends seeing you cavorting with that bloody blimp?\"\n\n\"Watch your tongue!\" he barked. \"Don't talk about her like that.\"\n\n\"Defending your whore?\" She scoffed. \"How chivalrous of you. Does she know about me?\"\n\nDerek stared at her, his blue eyes cold and hard. \"You wouldn't dare.\"\n\n\"Wouldn't I? You don't fucking know me.\" She started for the door when he grabbed her suddenly. His fingers dug into the soft flesh of her thin upper arms and she cried out from the pain. \n\n\"Listen here, you fucking cunt. You breathe one word to her, one fucking word and I swear to God I will...\"\n\n\"You'll what? You can't do anything to me.\" Her green eyes flashed fire. Lifting her arms up, she pushed him away from her. \"Pathetic. Weak little boy living in his brother's shadow. The charmer, the heartbreaker. How does it feel to be played?\"\n\n\"I should be asking you the same thing,\" he spat. \"Tegan's more of a woman than you'll ever be.\"\n\nLottie snorted. \"I'll say. It won't last. You'll tire of her just like you always do. Then you'll crush her poor heart and you'll come running right back to me.\"\n\nHe laughed bitterly. \"You'd like that, wouldn't you? God, now who's pathetic? Can't you see it's over? I don't want you.\"\n\n\"So what, you're saying you actually love this girl?\" Derek was silent and her green eyes widened. \"Oh my god, you love her!\" Her laugh once more pierced through him. \"Oh this is much better than I hoped. Fuck ruining your company, it's going to be much sweeter to meddle with this!\"\n\nHe stepped forward, his eyes blazing hotly with a trembling fury that would have frightened a lesser woman. But Lottie Winchester wasn't easily shaken. Derek was about to open his mouth when another door opened and Tegan stepped inside. \n\n\"Derek?\"\n\nHe turned when he heard her call his name; the anger dissipated and was quickly replaced by fear, the emotion washing over him like a cold dousing of water. \"Tegan, what are you doing in here?\"\n\nTegan surveyed the scene, the pained look on Derek's face and the pinched smile of the rather attractive woman now staring boldly at her. She got the distinct feeling she'd walked into something bad. \"Um, I just came looking for you to see how everything went. Jade told me I would find you here. What's going on? Who is this?\"\n\n\"Yes, Derek\" Lottie said evenly. \"Why don't you tell her who I am?\"\n\nHis heart was bounding a brass band beat in his chest. \"She's...\"\n\nLottie cut him off abruptly. \"My name is Lottie Winchester. Tegan, is it? Well Tegan what Derek here can't say is that I'm his girlfriend. From London. The one who he abandoned by phone when he started fucking you.\" She turned to Derek, the sweetly evil grin making his stomach churn. \"Am I forgetting anything, Gorge?\"\n\nA rush of air, the sound of the ocean roaring in her ears. That's all she could hear at that moment. Tegan stood stock still, her eyes staring but not really seeing. \n\nThe room was silent, and Derek swore he hear the moment her heart snapped in two. \"Tegan, I can explain...\"\n\nHe expected anger, for her to launch herself at him, a punch to the face, something, anything. But she simply stood still, her light eyes boring into his blues. There weren't tears; there was a look of extreme disappointment and finally the wave of shame washed over him. \n\n\"Is it true?\" she asked, her voice choking with emotion. \n\nLottie laughed shrilly. \"Of course it is.\"\n\nTegan's eyes turned on her, and Lottie cut her laughter short. \"I don't believe I was talking to you.\" Her voice was low, the whisper coming out a dangerous hiss. She turned her gaze back to Derek, who was watching her with such sadness. \n\n\"Is this true?\"\n\nHe couldn't take it any longer. \"I...can explain. It's not as black and white as it looks.\"\n\nHer body shook, the sob she'd been trying to hold back escaped in a strangled cry. It was a loud, sharp sound that disappeared quickly but pierced through Derek's heart. \"Tegan,\" he started. His arms reached out to her, but she edged away.\n\n\"No,\" she gulped. \"Don't touch me. I can't stand to look at you.\" She began to laugh, her body shaking with mirthless sound. \"So fucking stupid,\" she gasped out. \"I let you...I was a virgin.\" The laughter continued, the pained sound making him wince. \n\nOnly Lottie seemed to be enjoying herself. \"Oh my, a virgin?\" She winked her green eyes dramatically at Derek. \"Well done, Gorge. Although honey, next time you might want to really find out about a guy before you open your wobbly thighs.\"\n\n\"SHUT UP!\" Tegan screamed. Derek jumped at the sound. He had never heard her raise her voice that way. Lottie look genuinely ruffled as Tegan stalked over to her. \"Get out,\" she snarled. \n\n\"I will do no such thing\" Lottie said with more bravery than she felt. Tegan's honey brown eyes flashed dangerously and before she even realized what was going on, she felt the sharp sting of Tegan's hand as it connected with her pale cheek. Her face spun to the side, so powerful the slap. Lottie's hand instantly cupped her cheek and she glared at Tegan, who didn't appear to be backing down any time soon. \n\n\"I said get the fuck out. Or I will throw you the fuck out. Your choice.\"\n\nLottie opened her mouth as if to say something but changed her mind when she saw Tegan's hand rise once more. Shooting Tegan a withering look, she sauntered out the same door Tegan had entered minutes before.\n\nTegan turned back to Derek, her eyes looking everywhere but his. \"I asked you,\" she said slowly. \"I asked you if there was anything else you needed to tell me...\"\n\n\"Tegan,\" he began. The dark look she shot him silenced his sentence. \n\n\"I asked you. All you had to do was be honest. It was so easy. I made it easy for you. You think I give a shit about Lottie or Carrie? You could have slept with the goddamn Queen of England and it wouldn't have mattered only if you fucking TOLD me when I fucking asked you about it!\" her hands clenched at her hair and she let out a short cry of frustration. \"Goddammit, Derek!\" she fumed. \n\n\"Baby, I'm sorry. I know I should have given you the complete truth. But things were over between Lottie and I.\"\n\n\"When, Derek? When were they over? Was this before or after I let you have your way with me?\" She grit her teeth in anger. \"So fucking stupid.\"\n\nDerek could see the anger she was trying in vain to keep in check. He had never seen her look so troubled, and knowing that he was the source of her anguish made him sick. \"Tegan, you have to believe me. Lottie and I...I knew we were over before I left London. And that's the honest truth. \n\nAfter the night of my birthday party, I knew I wanted you. Just you. And then you gave me the most beautiful gift that people can share. And that made me feel amazing, you have no idea.\" His hand rubbed the back of his neck as his blue eyes stared at her, silently pleading. \"Can't you see, baby? All of these things: asking you to L.A., meeting my brother, I...\"\n\n\"What?\" she practically barked. \n\n\"I love you.\" The words tumbled from his lips and he felt a giant weight lift from his shoulders. It was the first time he had said those three words to a girl and actually meant it. \n\nTegan began to laugh once more, and he became very aware of the painful awkwardness of the situation. \"You are some piece of work. Tell me something, how many times have you said something like that to get what you wanted out of a girl?\"\n\n\"Honestly? A lot. But I really mean it this time. I really fucking love you.\"\n\n\"And I call bullshit. You don't love me. You love what I do to you. You're a selfish boy stuck in a jackass' body.\" \n\nHer arms involuntarily wrapped around her body and Derek suddenly had the urge to comfort her. But he knew she'd quicker punch him than kiss him. \"You know, a part of me knew things were going too well. There was bound to be some bad. Par for the motherfucking course that is my life.\"\n\n\"Tegan, please.\" He was practically ready to drop to his knees. \n\n\"I don't...\"\n\n\"What is it, baby? Tell me.\"\n\nShe sniffed and rubbed her nose, willing herself not to cry. \"I think we might need to spend some time apart. You've got a lot on your plate right now and I've got to suss some things out.\"\n\nDerek shook his head hard. \"No, I have everything figured out. My company stays and I want you. There's nothing I need to work on.\"\n\nA small, sad smile played on her lips. \"Sort out your life, Derek. Decide what you want. When you know what that is, you know where to find me.\" \n\nShe turned to leave, when he reached out and pulled her close to him. His hands wrapped around her soft curves as he buried his face in the dark downy strands of her hair, the scent of her shampoo bringing hot tears to his eyes. \n\n\"Please Tegan,\" he moaned. \"Please don't do this. I'm sorry about not telling you about Lottie. I truly am.\" He could feel the effect of his words as she started to tremble; he could feel her tears pressing wetly on his shirt and still he held her tighter. He had to make her see sense. She had to know.\n\n\"I know you're sorry,\" she said softly. \"But it's not enough, Derek. You've clearly got some business to take care of before we can be together. I want us together. But I don't want to share you with your past.\" \n\nLeaning up on her tiptoes, she pressed a soft kiss to his lips. Derek cupped her face in his hands, drawing her firmly to him. His tongue sought entrance into her mouth, stroking her tongue into submission and exploring the dark corners he knew like his own. \n\nTegan pushed him away, her fingertips resting on her mouth as if trying to mimic the weight of his soft lips on hers. \"Call me,\" she whispered. \n\n\"Don't wait too long.\" She gave his hand one final squeeze before turning to leave the room quickly. \n\nDerek waited a beat before walking over to the lone window that faced the front of Simon's house. He watched as she practically ran to the limo where Gianni leaned casually. ",
        "When he saw Tegan, he opened the door for her before jogging around to the driver's side. They drove away quickly, the black limo barely visible in the Los Angeles night. \n\nHe could feel the anger beginning to rise once more. She was right, there were things he needed to take care of. It was time to stop procrastinating. Derek clenched his fists tightly. \n\nHe was going to show her just how much he loved her. "
    ],
    "authorname": "nerd4music",
    "tags": [
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/only-you-ch-06"
}