{
    "title": "The Adventures of Ranger Ramona Ch. 02",
    "pages": [
        "CHAPTER ONE\n\nThe first fallen leaves were swirling in the road as Ramona and Grant drove to Ten Pines Camp.\n\n\"Thanks for coming with me,\" Ramona said, sipping coffee in the passenger seat, \"I'm sure you can find better ways to spend your day off.\"\n\n\"No, I'm excited about it,\" he said.\n\nRamona had promised Molly Baker, the Ten Pines head councilor, that she would help with cleaning up the damage the forest fire had inflicted on the camp. She was happy to help, but she had another motivation as well. She thought that she had detected a little spark of interest from her, and she wanted to know if it was real, or if she had imagined it.\n\nIsabel was gone for the winter, Aaron was mad at her, maybe for good, and Grant-well, she wasn't sure where she stood with him, so she was pleased he had accepted her invitation to go out to the camp with her.\n\nShe found Molly attractive, with her curly red hair and sprinkling of freckles. Unfortunately, as soon as the camp repairs were completed, she'd be leaving for the winter, so if anything was going to happen between them, it would have to happen soon.\n\nGrant drove past the camp road, turned around and found it on the second pass. When they arrived at the campgrounds, they were surprised to see that at least twenty other people were already there, working in teams of twos and threes, raking up the singed brush or cleaning up the debris of the burnt outbuildings. About a third were wearing t-shirts bearing the camp logo, but most were volunteers from the community.\n\nAs she stepped from the car, Ramona heard someone call her name.\n\nA young man approached her, flashing a big, toothy grin. He looked vaguely familiar.\n\n\"You don't remember me, do you?\" he asked her.\n\nRamona shook her head. \"Sorry, no,\" she said.\n\n\"That's okay, you only saw me in the dark.\" He patted himself on the chest. \"I'm Mike. From the state park? I'm the one who helped you the night you rescued the little girl.\"\n\nRamona stopped herself from telling him that she hadn't really rescued the girl; she'd been safely sleeping in the back of a car, but she realized that he felt a lot of pride in his role that night.\n\n\"Sure,\" she said with a smile, \"I remember you, you were a great help.\"\n\nHe bobbed his head up and down, still sporting that big grin. \"Yeah, well, I talked to Molly and I think I'm going to work here next year.\"\n\n\"That's great, Mike.\"\n\n\"Yeah. But I wanted to ask you. I'm thinking about what to do after I graduated, and I was wondering, is there, like some special school you go to if you want to be a ranger?\"\n\n\"No, you can go to community college and get an associates degree in forestry or law enforcement. I got both.\"\n\n\"Cool. Well, I'm gonna think about it. Thanks.\"\n\n\"Looks like you made quite an impression,\" Grant said as Mike walked away.\n\n\"I guess so,\" Ramona said. Good thing the kid didn't hear Lt. Bebb reaming me out that night, she thought.\n\nThey found Molly instructing the crew that was piling debris in a dumpster. Her eyes seemed to light up when she saw Ramona, and she rushed to her, putting her hands on her shoulders and kissing her cheek. Ramona thought her lips lingered just a little too long to be mere friendliness.\n\nRamona introduced Molly to Grant, and the two of them shook hands.\n\n\"How can we help?\" Grant asked.\n\n\"You good and strong?\" Molly asked.\n\nGrant nodded. \"I lift boxes all day.\"\n\n\"Good. We could use another strong man to help haul those bigger pieces of lumber from the outhouse that collapsed.\"\n\n\"I'm on it,\" he said. Molly pointed out to him the other members of the outhouse crew, and he went to joint them.\n\n\"Is he your boyfriend?\" Molly asked Ramona. She was still smiling, but Ramona could see frown lines on her forehead.\n\n\"No, just a really good friend,\" she responded. The tension drained from Molly's face.\n\n\"Come on,\" she said, \"You can give me a hand in the laundry. I have washed all the bedding, and I mean, about twenty loads of sheets and blankets and pillowcases. Now we have to fold them and store them away.\"\n\n\"What about the mattresses and pillows?\" Ramona asked as they walked to the laundry.\n\n\"Insurance will pay for new.\"\n\nThe laundry was in a yellow clapboard building, set off a short distance from the ring of cabins that comprised the main part of the camp. When they entered, Ramona saw a long table in the middle of the room, piled high with tangled linens. More were piled in a cart at the far end.\n\nMolly picked up a pillowcase and held it to her face. \"Still smells a little smoky,\" she said, dropping it back on the pile.\n\n\"Everything still smells a little smoky to me,\" Ramona replied.\n\n\"Well, my god, you were right in it!\"\n\nRamona blushed. She picked up a pillowcase and folded it. Molly put her hand on her shoulder.\n\n\"You really don't see it, do you?\" she asked. \"Ramona, you're a heroine, an inspiration.\"\n\n\"I just try to do the best I can,\" Ramona said, shaking her head. Molly leaned closer and pulled gently on Ramona's shoulder until they were facing each other.\n\n\"Well, I'd say that your best is pretty good,\" she said. The two of them looked into each others eyes, only inches apart. Ramona was still unsure that she was reading Molly's intentions correctly, so she hesitated, and after a few seconds, Molly turned away.\n\n\"Well, we best get to work,\" she said. She stepped around the table and the two of them began folding the pillowcases, making small talk as they worked.\n\nMolly told Ramona the history of Ten Pines camp; that her grandfather had founded it with a GI loan after serving in the Pacific in World War Two, her father had managed it for more than forty years, and she had taken it over when he had finally retired a few years ago.\n\n\"I grew up here,\" she said, \"At least in the summers. It's not really like a job, it's like bringing guests into my home.\"\n\n\"What do you do the rest of the year?\"\n\n\"I have an apartment and business down in Savannah.\"\n\n\"What sort of business?\"\n\n\"You'll probably laugh...a new age spiritual book store. Plus, we sell candles, incense, tarot cards, stuff like that. I do tarot readings, I should do yours sometime. I mean, I don't know what sort of belief system you have...\"\n\n\"I'm kind of a pagan, I guess.\"\n\n\"Of course you are,\" Molly said, grinning, \"A worshipper of nature.\"\n\n\"So, what happens to the bookstore while you are up here?\"\n\nMolly hesitated. \"It's sort of complicated...\"\n\n\"What isn't?\"\n\n\"I have a partner, Well, an ex-partner partner.\"\n\n\"Yeah, that sounds complicated.\"\n\n\"My girlfriend at the time and I started the store. And, well, we kind of fell apart as a couple, but remained friends and business partners.\"\n\nRamona could not help but smile when she heard Molly say \"girlfriend.\" Her instincts had been right.\n\n\"I saw that,\" Molly said.\n\n\"Saw what?\"\n\n\"That's little grin when I mentioned having a girlfriend. I have very good gaydar.\"\n\nRamona chuckled. \"A lot of people assume that I am a lesbian because I'm a ranger.\"\n\nMolly leaned across the table. \"And are you?\"\n\nRamona shook her head. \"I don't like to define myself,\" she said, \"But if I had to, I would call myself a polyamorous bisexual.\"\n\n\"Now, that really sounds complicated.\"\n\n\"Oh, yeah,\" Ramona agreed.\n\nThey folded the last of the pillowcases and started on the top sheets, working together across the table. As they worked, their hands would touch. On the third sheet, Molly ran her fingers across Ramona's palm.\n\nShe leaned her elbows on the table and said, \"You know, I have had the biggest crush on you since you first came into the camp\"\n\n\"I kind of had the feeling you did.\"\n\nThey gazed at each other for a long moment, then Ramona bent down and their lips met in a brief kiss. They pulled back, looked into each others eyes for a few seconds, then picked up and folded the next sheet.\n\nWhen they finished the top sheets, Molly wrapped her arms around the tangle of fitted sheets in the cart and dumped them on the table.\n\n\"I hate trying to fold these things,\" Ramona said.\n\n\"Me too. Would we be terribly irresponsible if we just stuffed them all in garbage bags for the winter?\"\n\n\"Do you think that the kids next summer will be upset that their sheets are a little wrinkled?\"\n\n\"They wouldn't care if they didn't have sheets at all.\"\n\nThey crammed the fitted sheets into trash bags and put them on the floor of the storage closet.\n\n\"Just the blankets left,\" Molly said. \"Best if you come around to this side of the table.\"\n\nShe pulled a blanket from the tangle on the table. Ramona grabbed one end and, holding it by the corners, they spread it between them. They stepped toward each other and brought the corners together. Ramona placed her hands over Molly's and once again, they kissed. Ramona let go of the blanket, then Molly did as well, and it fell to the floor at their feet. They turned, with Molly's back to the table. As Ramona moved closer, she nearly tripped over the blanket and stooped to pick it up. She tossed it aside, and as she rose to her feet, ran her hands up the sides of Molly's legs and rested them on her hips. She kissed the hollow place under her throat, then the soft bottom of her chin, and then her lips.\n\nMolly slipped her tongue into Ramona's mouth and raised her left leg, wrapping it around Ramona's. She grasped Ramona's ass with both hands, and pulled her tightly against her, pressing her right thigh firmly into the crotch of her jeans.\n\nRamona rocked on Molly's leg as they continued to kiss. Molly lifted herself on to the edge of the table. Ramona pressed her own leg tightly between Molly's. Molly laid back in the pile of blankets and pulled Ramona tighter still. They began to writhe against each other, but were interrupted by a voice from outside the laundry.\n\n\"Molly! Hey Molly! We need some guidance.\"\n\nMolly sat up and ran her fingers through her disheveled hair. Ramona took a step back, held Molly's hands and helped her to her feet. They kissed quickly and went to the door.\n\nOne of the camp counselors stood just outside, with a handful of new volunteers. One of them was Hank McLellan. Hank gave Ramona a wave when he saw her.\n\n\"We got more helpers,\" the counselor said, \"but we are not sure what to have them do. We are pretty nearly done.\"\n\n\"That's alright,\" Molly said, \"They are welcome to stay for the bonfire.\"\n\nShe turned to Ramona. \"I'm going to have to supervise this,\" she said, \"Can you grab a helper and finish the blankets?\"\n\n\"Sure,\" Ramona said. \"Mister McLellan, can you give me a hand in the laundry?\"\n\nHank nodded and stepped forward. Molly squeezed Ramona's shoulder. \"Thanks,\" she said, \"We'll talk later.\"\n\nRamona led Hank into the laundry and showed him how to fold the blankets.\n\nOnce they had gotten into the rhythm of the job, Hank said, \"You know, Ranger Greentree, that fire did a disruption on the local wildlife.\"\n\n\"I imagine it did.\"\n\n\"Stirred up their patterns, their feeding and the like. So maybe it's a good time to keep your eyes and ears open. I'm telling you, them wolves are out there.\"\n\n\"I know they are.\"\n\nHank stood, holding up his end of a blanket and looking dumbfounded.\n\n\"You know?\"\n\n\"I heard them.\"\n\n\"Jeezum crow, Ranger Greentree, did you tell Piney? Did you report it to Fish and Wildlife?\"\n\n\"Nope, and I'm not going to.\"\n\nHank sputtered. \"Why the hell not? You're the only one who believed me.\"\n\n\"I didn't believe you, Mister McLellan. I am relying on the evidence of my own senses. Now, let me ask you something.\"\n\n\"Okay.\"\n\n\"What will happen if I report it? And if they believe me, which they probably won't?\"\n\nShe didn't add that she'd been half drunk when she heard the wolves howling.\n\n\"Well, I guess they'd...well, heck, I don't know.\"\n\n\"I'll tell you. Federal endangered species regulations would kick in. State game management regulations would come into effect, too. Conservationists and environmentalists from all over would start calling for more protections for them.\"\n\n\"That all sounds good to me.\"\n\n\"You think it's going to sound good to the logging companies? You think it's going to sound good to the developer that wants to build that resort up at Micmac Lake?\"\n\n\"I suppose not.\"\n\n\"What about the farmers who keep cattle and sheep and goats? Or that new one raising alpacas out on the Greenville Road?\"\n\n\"I think I see where you're going with this.\"\n\n\"What do you think is going to happen to those wolves the first time a farmer loses a sheep or a calf?\"\n\nHank frowned and muttered something under his breath, but then he looked at Ramona and grinned. \"But I was right.\"\n\n\"Yeah, you were.\" She held out her hand for a fist bump, but he stared at her with a puzzled expression, so she dropped it and they finished folding the blankets.\n\nWhen they emerged from the laundry, they saw that all the combustible debris had been piled into a rough pyramid and set ablaze. The flames were just beginning to climb up the sides of the stack.\n\n\"Looks like they are putting on a spread,\" Hank said, smiling. A long table had been set up and covered with bowls of chips and pretzels, stacks of hot dogs and buns and bags of marshmallows. Several of the helpers were already holding long forks or sharpened sticks near the fire, toasting marshmallows or roasting dogs.\n\nBottles of Shipyard Ale floated in ice water in a big metal washtub at the end of the table. Hank fished out two, twisted off the caps and handed one to Ramona.\n\n\"What should we toast to, Ranger Greentree?'\n\nRamona thought for a second, then tapped her bottle against his, \"To canis lupus,\" she said.\n\nHank's brow knotted, then a look of understanding crossed his face. He looked around furtively, they, quietly went, \"Awwooo.\" Ramona laughed, they clinked glass again, and took a drink.\n\nThey sat down on a wooden bench near the fire. A moment later, Grant joined them, sitting next to Ramona and draping his arm over her shoulder.\n\n\"So, what were you and Molly up to?\" he asked.\n\nRamona repressed a snicker. \"Folding the bedding.\"\n\n\"That sounds like fun.\"\n\n\"The job, or just the word 'bedding'?\"\n\nGrant made a snorting sound. \"Hey, I'm going to get a hot dog. You want one?\"\n\n\"Sure, but I think you just want to watch me eat it.\"\n\nHank stood up. \"Alright,\" he said, \"I'm going to mosey and leave you youngsters to your flirting.\"\n\n\"Is that what we are doing?\" Grant asked as Hank walked away, \"Flirting?\"\n\n\"It's what I was doing, I'm not sure about you.\"\n\n\"I'm not good at it.\"\n\nRamona wrapped her arm around him. \"Believe me, I know.\"\n\n\"Hey,\" he said, straightening his back, \"I'm good at lots of other things.\"\n\n\"Getting a girl a hot dog not being one of them.\"\n\n\"Oh!\" Grant jumped up and went to the table. He skewered two hot dogs on a long metal fork and held them near the fire. When they were well roasted, he took them back to the table and slipped them into buns.\n\n\"What do you want on yours?\" he called to Ramona.\n\n\"Mustard and relish.\"\n\n\"You want ketchup?\"\n\n\"Hell, no,\" she scoffed, \"What are you, from New York?\"\n\nHe frowned. \"I'm from Portland.\"\n\n\"Close enough,\" she muttered.\n\nGrant sat back down beside her and gave her the hot dog. She wrapped her lips around the end, looked him in the eye and winked.\n\n\"That does look...um, nice,\" he said, blushing.\n\nRamona bit off an inch, chewed and swallowed it, then said, \"That's what happens if you're not careful.\"\n\n\"I'll be careful.\"\n\nMolly joined them on the bench.\n\n\"I really want to thank you guys for coming out to help today,\" she told them.\n\n\"Our pleasure,\" Grant said.\n\n\"Listen, Ramona,\" Molly said, taking her hand, \"I just hope, well, I realized, maybe it was a little insensitive having a bonfire. You know, you almost got burned up and all that.\"\n\nRamona laughed. \"It's alright, no worries.\"\n\nThey hugged, and Molly said, \"Okay, well, I'll be hanging around for a few more days if you want to stop by and say hi.\"\n\nRamona smiled. Say hi. \"Thanks, I probably will.\"\n\nMolly stood and shook Grant's hand. \"Nice meeting you,\" she said, \"Thanks again.\"\n\nGrant looked at Ramona with one eyebrow cocked.\n\n\"What?\" she asked.\n\n\"Nothing,\" he replied, shrugging and shaking his head.\n\nShe knew what he was thinking. Fine, she mused, let his imagination run wild.\n\nThey watched Molly make her way around the fire, thanking each helper. People were beginning to drift away.\n\n\"Maybe we ought to go, too,\" Ramona suggested, \"It seems like there ought to be some time for just the camp people.\"\n\n\"Yeah, you're right,\" Grant said. He stood, held out his hand and helped Ramona to her feet.\n\nIt was dark outside the circle of firelight. Grant took out his cell phone and turned on the flashlight. He took Ramona by the arm as they walked to his car.\n\n\"I guess I'm not much of an outdoorsman,\" he said, \"lighting the path with my phone. You've probably got one of those great big cop flashlights, don't you?\"\n\n\"Heavy duty Maglite, baby.\"\n\n\"I thought so.\"\n\n\"Handy tool. You can knock out a bear with that thing.\"\n\nThey reached the car and Grant opened Ramona's door for her. \"You may not be an outdoorsman,\" she said, \"But you are a gentleman.\" When he came around and got in the drivers seat, she leaned over and kissed him on the cheek.\n\nAs they drove down the dark country roads, Ramona looked at Grant's face in the glow of the dashboard lights. She felt a great deal of affection for him. He was sweet, considerate and fun to be around. Why did he have to complicate things by being in love with her?\n\n\"I'm really glad you came with me today, Grant,\" she said, \"I hope you had a good time.\"\n\nHe smiled and said, \"I don't think I had as good a time as you did.\"\n\n\"What do you mean?\" she asked, feeling a rising defensiveness.\n\n\"I mean, I could sense that there is something going on with you and Molly. And you know what? I'm fine with that. I mean, I suppose it doesn't matter if I am or not, but I am.\"\n\nRamona looked out the side window for a minute, then said, \"It does matter.\"\n\n\"Yeah?\"\n\n\"Of course it does. I think you're great and I never want to hurt you. I liked the way things were between us before...\"\n\n\"Before I told you I love you.\"\n\n\"Yes.\"\n\n\"Well, I can't take it back. I don't want to take it back.\"\n\n\"I wouldn't expect you to.\"\n\n\"So what are we? Friends? Something more than friends? I hate when people say friends with benefits.\"\n\n\"Fuck buddies?\"\n\nGrant laughed. \"That gets right to the point.\"\n\nRamona reached across the console, ran her hand up Grant's leg and squeezed his crotch. \"So, you want to be my fuck buddy?\"\n\nThe car veered momentarily, then Grant grinned and said, \"It would, literally, be my pleasure.\"\n\n\"Well, not just yours,\" Ramona said. She slipped her shoulder belt over her head, shifted in her seat to face Grant, and tugged his belt loose. He put his foot on the brake.\n\n\"Should I pull over?\" he asked.\n\n\"It's up to you,\" she replied as she pulled down his zipper and reached inside.\n\nGrant slowed the car, but kept driving. Ramona leaned down further.\n\n\"You could put your seat back a bit,\" she told him.\n\nHe pulled the lever and pushed his seat back several inches. Ramona lowered her head into his lap. She yanked on his cock and it popped free.\n\n\"Have you ever had anyone give you road head?\" she asked.\n\n\"Is that what you call it? No, I haven't.\"\n\n\"Well, pay attention to your driving. Pull over if you have to.\"\n\nShe kissed the underside of his shaft, up and down, then pursed her lips around the head and gently sucked, while running the tip of her tongue back and forth along his slit.\n\nGrant moaned approvingly, and Ramona took more of his cock into her mouth. She bobbed up and down on it, and after a few minutes, realized that she was sucking in sync with the rhythm of the car's tires on the pavement. It created an almost hypnotic effect, and she became lost in it, thinking of nothing but the sound of the tires and the feeling of the cock filling her mouth.",
        "Grant began flexing his hips, thrusting his cock between her lips. She pulled back, took a breath, then sank her head down as far as she could, feeling the tip of his cock pushing against the back of her throat. She tried to swallow, struggled, then tried again.\n\nHe let out a long moan as she took in his whole cock. She held it in her throat as long as she could, then lifted her head and gasped for air.\n\n\"Oh, my god, Ramona,\" he groaned, \"Can you please do that again?\"\n\nRamona's eyes were watering. She wiped them, then lowered her head and swallowed him again. With her nose buried in his public hair, she managed a series of swallows, keeping it up until she saw red spots dancing in front of her eyes. When she absolutely could not wait any longer to draw her next breath, she pulled her head up, and a massive load of cum came with it.\n\nShe swallowed what was in her mouth, then sat up, panting loudly and rapidly.\n\nGrant pulled over to the side of the road. He was nearly as winded as she was.\n\n\"I've got cum all over my face,\" Ramona said when she could speak again. \"Have you got any tissues? I didn't bring a purse.\"\n\n\"Napkins,\" he wheezed, \"In the glove box.\"\n\nShe found the napkins and pulled down the passenger side visor. She flipped open the mirror and it lit up.\n\n\"Jeezum,\" she said, \"I look like a glazed doughnut. Been saving that up, huh?\"\n\nGrant chuckled self consciously while Ramona wiped her face. \"You know,\" she said, \"You could jack off.\"\n\n\"Naw...\"\n\n\"Really, you don't masturbate?\"\n\nHe drove back on to the road before he answered.\n\n\"Yeah, but not lately.\" Barely above a mumble, he added, \"Because if I did, I would think about you, and I was trying not to.\"\n\nRamona stifled a laugh. \"Honey, I'm not sure if that's a really poor compliment or a really good insult.\"\n\nAfter a moment's hesitation, he said, \"What about you? Do you ever...do that...and think about me?\"\n\n\"Sure I do. But I'm not sure you would like all the fantasies involved...\"\n\n\"Hmm...I don't know, maybe we could try some and find out.\"\n\nRamona laughed hard. \"Okay,\" she said, \"I'll call Aaron and set it up.\"\n\n\"On second thought...\"\n\n\"Or Isabel...\"\n\n\"That's even scarier.\"\n\n\"Honey, you don't know the half of it.\"\n\nRamona felt good about laughing and joking with Grant. She was staring to believe that it might be possible for them to have a friendly relationship that included sex.\n\nAs Grant pulled into the long driveway to Ramona's cabin, she asked him, \"Do you want to stay over?\"\n\n\"No,\" he said, \"I've got to work in the morning.\"\n\n\"Oh, that's too bad. I've got the day off.\"\n\nHe rolled to a stop. She kissed him and stepped out of the car.\n\n\"Hey,\" Grant asked her, \"You're going to go see her tomorrow, aren't you?\"\n\n\"Molly?\"\n\n\"Yes.\"\n\n\"Yes, I am,\" Ramona said, \"Does that bother you.\"\n\n\"No,\" he said, \"Actually, I might think about that the next time I, well, you know...\"\n\nRamona laughed and said goodnight. I might do that right now, she thought.\n\nThe next morning dawned unseasonably warm. Ramona had planned to sleep in, but the heat was too uncomfortable. She had not planned to call Molly in advance, but to just show up at the camp. She wondered how early in the day would be too early. Around noon seemed right to her.\n\nThat inspired her to bring some sort of food with her. Martha had brought some apples from the small orchard in her yard to the station and handed them out. And there were the blueberries she'd bought from the farm stand on the Rangely Road. She had all the ingredients to make an apple-blueberry crisp. She baked the crisp, ate a small bowl of it while it was still hot, then spent an hour cleaning up around the cabin. When it was time to get ready to visit Molly, she showered, then put on her denim shorts and a tank top. She was glad for the hot weather, it allowed her to dress sexy for her. At the last minute, she kicked off her shoes and got out the high laced sandals that she had bought for Isabel's party. Isabel called them whore shoes, she remembered as she laced them up her calves.\n\nShe sealed two bowls of the crisp in plastic wrap and set off for Ten Pines Camp, stopping on the way to get a couple of iced coffees at Dunkin Donuts.\n\nShe did not see Molly when she drove into the camp, so she started toward the main cabin. But then, in her peripheral vision, she caught sight of her. She was sitting in the grass by the pond, waving with both arms over her head. She appeared to be completely naked.\n\nRamona turned the truck around and drove over to the pond. Juggling the bowls and the coffees, she climbed out of the cab.\n\n\"Is that your pick up?\" Molly asked.\n\n\"It sure is,\" Ramona said.\n\n\"Oh honey, you may be poly bi, but the lesbo is strong in you.\"\n\nWalking toward her, Ramona saw that she was not entirely naked, she was wearing a skimpy pair of panties. She sat on a large beach towel. A small pile of clothes were on the grass nearby. Molly saw Ramona glance at it and said, \"Oh, don't worry, I'm prepared if someone shows up.\"\n\n\"Prepared to get dressed or prepared to greet them in the nude?\"\n\n\"Depends on how I feel about them.\"\n\n\"I guess that tells me something about how you feel about me. Do you like iced coffee?\"\n\n\"I adore it,\" she said. Ramona handed her one of the cups and sat down in the grass next to her.\n\n\"I made this crisp this morning, it's good hot or cool.\"\n\n\"Cool sounds good today.\"\n\nRamona gave Molly one of the bowls and dug a pair of spoons from her purse.\n\nMolly tasted the crisp. \"Mmm, this is really good,\" she said.\n\nRamona watched her as she ate. She did not use her spoon in the regular manner. With each bite, she turned it upside down as she put it in her mouth, and licked its hollow clean. Ramona found the mannerism cute and endearing. It made her want to kiss her.\n\nThey finished eating and set the bowls aside.\n\n\"I figured this might be my last chance to get some Maine sun before I hit the road,\" Molly said, turning on to her stomach and stretching out on the towel with her arms folded under her head. \"You are welcome to join me.\"\n\n\"You can get plenty of sun all winter in Georgia, can't you?\" Ramona asked as she scooted closer.\n\n\"It's not the same,\" Molly said. \"Maine sun is special because there is less of it.\"\n\nRamona looked down at Molly's body. There did not seem to be an ounce of fat on her. What there was, was freckles. They peppered her shoulders, her arms, even the small of her back. On a whim, Ramona fished an ice cube from her coffee and began tracing lines on Molly's shoulders, from freckle to freckle.\n\nMolly gave a little shiver. \"What are you doing?\" she asked.\n\n\"Playing connect the dots,\" Ramona said. She began moving the ice in circles around Molly's back, and down to the waist. It was melting quickly but it lasted long enough for Ramona to briefly draw lines of wetness on the exposed parts of her ass. When there was only a tiny sliver left, she left it to melt in the hollow center of her back.\n\nMolly giggled as the ice melted. Ramona placed her fingers in the wet spot, then slid them down, over the curve of Molly's ass and into her panties. Her moistened fingers glided down across her cheeks and into the space between her legs.\n\nMolly spread her thighs wider as Ramona's fingers found her opening. Ramona laid down beside her, leaning her head on one elbow.\n\n\"Seems like you're already wet down there,\" she said as her middle finger slid inside her.\n\nMolly sighed and raised her head. Ramona kissed her and her lips parted. Their tongues touched and circled each other. Molly ran hers across Ramona's lips and then pressed it deep into her mouth. Ramona sucked on it as it darted in and out.\n\nMolly tilted her hips and Ramona's fingers found her clit. She thrust her head up and gave out a moan that was almost a full throated howl. Another she-wolf, Ramona thought.\n\nRamona planted kisses on the side of Molly's neck, ran her tongue along the edge of her ear, buried her face in her marigold hair. All the while, her fingers strummed Molly's clitoris, causing her hips to quiver in increasingly vigorous spasms.\n\nSuddenly, Molly's body stiffened. Her thighs clamped around Ramona's wrist and her hips rose into the air. She shook convulsively. Ramona continued fingering her as she collapsed on to her side. They spooned together and Ramona slipped her free arm under Molly's body and hugged her close, burying her face in her hair.\n\nMolly shivered and thrust her legs straight out, then went completely limp. She exhaled loudly and brushed her hair back from her face.\n\nThey laid still for a few minutes. The only sounds were their slowing breathes and the buzzing of dragonflies over the pond. Then Molly sat up, as fresh as if nothing had happened, and took a long slurp of her iced coffee.\n\nRamona rose and sat cross legged next to her.\n\n\"Your top is soaked through with sweat,\" Molly said. She reached over and tweaked Ramona's nipple. \"You're not wearing a bra.\"\n\n\"It's too hot,\" Ramona said.\n\n\"Do you wear one under your uniform?\"\n\n\"Yes, it's regulation.\"\n\n\"Really?\"\n\n\"Yep.\"\n\n\"That's bullshit.\"\n\nRamona shrugged.\n\n\"Hey, we ought to cool off in the pond,\" Molly exclaimed. She stood up and yanked down her panties, kicking them into the grass. Ramona rose to her knees and pulled her tank top off over her head. Molly reached down and fondled her breasts.\n\n\"These are nice,\" she said.\n\n\"Thanks.\"\n\n\"And those sandals. Wow, very sexy.\"\n\nRamona slipped her shorts down past her hips, sat down and pulled them off.\n\n\"No underpants either,\" Molly smirked. She knelt in front of Ramona and unlaced one sandal while Ramona did the other. When they were off, she stood and reached out her hand. Ramona took it, and held it as they walked toward the pond. About halfway there, Molly took off at a run. She sprinted into the water until it was up past her knees, then dived forward and swam to the middle of the pond.\n\nRamona followed at a more leisurely pace. She waded until the water was halfway up her thighs, then dog paddled to where Molly waited for her. They embraced and Ramona's feet found the bottom. The water lapped just beneath her chin. Molly was a few inches shorter, she treaded water briefly, then lifted her legs and wrapped them around Ramona's waist. Ramona held her close by grasping her ass in both hands, and they stood, kissing, in the cool water. After a while, Molly leaned back, spread her arms and unwrapped her legs. She gave a little kick and gently floated away.\n\nRamona assumed the floating position as well. Her hand found Molly's and they floated side by side in the little pond, looking up into the azure sky.\n\n\"When are you leaving?\" Ramona asked.\n\n\"Probably tomorrow. I took care of the last thing I wanted to get done before I go.\"\n\n\"What was that?\"\n\n\"You.\"\n\n\"You're done with me then?\"\n\n\"Not quite.\"\n\nRamona laughed, rolled in the water and splashed Molly. She turned and swam to the edge of the pond, got out and sat down on the bank. Molly swam languorously toward her. When the water grew shallow, she stood. Naked, her long red hair rippling in the breeze, she reminded Ramona of Botticelli's Venus.\n\nMolly walked to the edge of the pond. She looked down and flicked her fingers across her tuft of pubic hair, sending droplets of water spraying.\n\n\"Your hair is so pretty,\" Ramona said.\n\n\"Yep, natural redhead,\" Molly replied. \"The carpet matches the drapes.\"\n\nShe got down on her knees and crawled through the grass toward Ramona. When she got near enough, they kissed. Molly kept moving forward, gently pushing Ramona down on her back. She kissed her throat, then each of her nipples in turn. Moving from one to the other, she licked them, sucked them, nipped them with her teeth.\n\nRamona pulled Molly's red hair to one side, and caressed her shoulders. Molly moved down across her abdomen, leaving a trail of kisses on the way. She put her hands on the insides of Ramona's knees, and spread them apart.\n\nRising on her elbows looked down at Molly and the two of them gazed into each others eyes as Molly pressed her face between Ramona's legs.\n\nRamona drew a deep breath at the touch of Molly's tongue against her clit. Molly let out a muffled giggle and, still holding eye contact, began to vigorously lap at Ramona's vagina. After each few laps, she'd suck on the clit, or swirl the tip of her tongue around it. Ramona fell back into the grass relaxing, feeling the warmth of the sun on her naked skin and the ministrations of Molly's busy tongue on her pussy. In a few minutes, she came, in a mellow, slow rolling orgasm.\n\nMolly crawled next to Ramona and flopped down on her back. They lay side by side, looking up at the sky.\n\n\"Those clouds are moving pretty fast,\" Molly said.\n\n\"The weather is going to change, you can feel it in the air.\"\n\nMolly sighed. \"My philosophy is to enjoy what you have now, don't worry about the future.\"\n\nMary laughed. \"That's easy to say when you are getting out of here before the snow comes.\"\n\n\"That's true. And it reminds me, I am supposed to have supper with my mom, since it's my last night here. I'm going to have to put some clothes on.\"\n\nRamona sat up. The breeze was cool on her skin. In the distance, she saw a dark V shape passing above the trees; Canada geese heading south. Winter was coming.\n\nCHAPTER TWO\n\nRamona woke up in the dark and realized that her phone was ringing. She could see the screen glowing, across the room on the kitchenette table.\n\n\"Why the fuck did I leave it way over there?\" she muttered as she climbed out of her bunk. Even with socks on, she could feel the cold seeping through the floorboards.\n\nShe picked up the phone, looked at the screen and answered it. \"Hey, Martha.\"\n\n\"Good morning,\" Martha said, sounding inappropriately chipper. \"I thought I better give you a wake up call. You got power?\"\n\nRamona glanced at her alarm clock. It was dark.\n\n\"Nope, looks like I don't.\"\n\n\"Well, glad I called. It's a quarter of six.\"\n\n\"Thanks, I'll get ready and be in as soon as I can.\"\n\n\"Alright dear, but be careful, plows ain't been out much yet.\"\n\nRamona disconnected and looked out the window. In the dim light she could see about four inches of snow on her truck. A steady wind was blowing long white streamers off its roof and hood.\n\nShe washed up quickly, brushed her teeth and got dressed. Before she left the cabin, she checked the weather app on her phone. The nearest reporting station said that the snow fall had been between eight and ten inches throughout the area. It was twenty degrees, with wind chills hovering around zero.\n\n\"Another day in paradise,\" she mumbled as she zipped up her parka.\n\nThe cold air stung her face as soon as she stepped outside. As she brushed the snow from the truck's windshield she took consolation in the thought that at least the day would not be as boring as most had been since the end of hunting season.\n\nWith the heater blasting on full, she headed up the driveway. The four wheel drive had no trouble in the snow. As she passed Lucinda's house, she saw the soft glow of a candle in the kitchen window. She steered into the dooryard, trudged through the snow to the front door and knocked softly.\n\nLucinda came to the door, wrapped in a heavy plaid blanket and carrying a candlestick.\n\n\"Is everything okay?\" Ramona asked. \"Can I get anything for you?\"\n\nLucinda smiled. \"No, dear, I'll be fine. I've just started the wood stove and I've got the kettle on. I suspect I'll sleep a bit more, then curl by the stove and read once the sun comes up.\"\n\n\"Alright, call me if you need anything.\"\n\n\"Thank you, dear. Please let me know if you hear any news about when the lights are going to come back on.\"\n\n\"I will.\"\n\n\"Be careful out there, dear,\" Lucinda called after her as she returned to her truck.\n\nThe snowplow was coming down the road just as she approached the top of the driveway. She waited for it to pass, then headed into town on the clear pavement behind it. A few flakes were still falling, but as she looked to the sky in the east, she could see in the first light that the clouds had dissipated.\n\nHer heart sank a little when she drove past Saw Whet Variety and saw that the Dunkin Donuts it housed was dark. Jesus, no coffee, she thought, now that's a crisis. But when she reached the ranger station she detected the smell of freshly brewed coffee mingling with the wood smoke emanating from the chimney.\n\nThank christ for Martha, she thought, breathing in the comforting smells and listening to the hum of the emergency generator.\n\n\"Wow, you got here quick,\" Martha said when Ramona stepped inside. \"Let me pour you a coffee.\"\n\nRamona checked her inbox. It was empty.\n\n\"Any word on the power?\" she asked as Martha handed her the coffee.\n\nMartha sat behind her desk and Ramona took the chair in front of it.\n\n\"Central Maine Power says it won't get crews into the area until mid morning. Looks like the main break is over around Blackshaw Hill. If it's high up the slope, it will be a pisser to get repaired.\"\n\nRamona sighed. \"When I was a kid, I loved snow days.\"\n\nThe door opened and Lt. Bebb stepped through. Piney was a few steps behind him. They were arguing about a call in the previous nights Bruins game.\n\n\"For christ sake, Piney, shut the door,\" Martha shouted as Piney kicked the snow from his boots on the porch, \"Were you born in a barn?\"\n\n\"He probably was,\" Ramona muttered with a smirk.\n\nPiney shut the door and went straight to the coffee pot, while Bebb stood and warmed himself at the wood stove.\n\n\"Double check your winter gear before you go out, Greentree,\" he said over his shoulder. \"Make sure you got your snow shoes, a tow rope, all that.\"\n\n\"Got it, chief.\"\n\n\"Oh, and get a chainsaw from the shed, make sure it's gassed up.\"\n\n\"A chainsaw?\"\n\n\"In case you see any branches down in the road or anything like that. If we wait for the county road crews, they won't get to the back roads for weeks. Anything small enough you can clear it yourself, do it.\"\n\n\"Okay,\" Ramona said. She finished her coffee and stood up.\n\n\"And be sure to make a couple of passes around the pond. It may be as cold as a well diggers ass, but that ice is still thin. You see anyone ice fishing, chase them off. Tell 'em to come back after New Years.\"\n\nRamona didn't think it was likely that anyone would go ice fishing with the wind chill at zero and eight inches of blowing snow covering the pond, but she decided she'd start her patrol out that way, just to be able to tell the chief that she had. The whole world seemed silent, save for the howling wind and the crunch of her tires on the snow as she drove slowly out toward Merganser Pond.\n\nThe sun rose over the mountains, and the trees along the sides of the road glistened as if they were made of crystal. Ramona slowed to a crawl and marveled at the dance of light in the branches.\n\nA deer and her fawn stepped out of the woods and scuffled through the unbroken snow covering the road. She watched them enter the trees on the other side and saw several more deer waiting for them.\n\nShe remembered a practice Piney had told her about. The road was straight and flat for at least a hundred yards ahead of her. She would have a good view of any oncoming traffic.\n\nShe veered to the left side of the road, until her jeep was within inches of the snow covered brush lining the shoulder. She opened the door and inched forward while holding it in place. As she rolled along, the door knocked most of the snow from the vegetation as it passed.\n\nSnowflakes pattered against her face, and clung to her hair and eyebrows, even to her lashes, but she held the door open for at least fifty yards, then pulled it shut and steered back to the right side of the road.\n\nAfter only a few minutes, the first deer, a stately buck, stepped warily from the trees. He stared at her jeep for a few seconds, then approached the cleared brush and began to nibble. Another buck, a yearling by the looks of him, followed, and then the rest of the little herd. Ramona took her foot off the brake and drove on as quietly as she could.",
        "The vacation community that lined Merganser Pond looked like something from a fairy tale. The houses and trees could have been built of snow. As Ramona made her way around the pond, the only signs of life she saw were a trio of crows on the power line and a set of fox tracks along the edge of the road.\n\nShe stopped in front of Isabel's house. Damn, I miss her, she thought. They had made plans for a long weekend together in Montreal, but that was still more than a month away. For a moment, she considered getting out of the jeep and walking up the long driveway. She wasn't sure why, it just seemed like it would be nice to be in her place, if only for a moment or two. But it was so damn cold, and she'd probably feel like a fool standing outside the house shivering in the snow.\n\nShe drove to the boat launch and looked out over the pond. As she had expected, the snow was undisturbed on the ice. If the wind blew more of it clear though, someone might chance it, so she made a mental note to check again later in the day.\n\nMartha had said that the power company thought their lines were down around Blackshaw Hill. If that was the case, she reasoned, there is probably more storm damage around that area than elsewhere. She had noted in the past that the hill's slope often seemed particularly windy. Piney would be proud of her for knowing where it is windiest, she thought.\n\nThere were a few dead branches in the road on the south slope, and she was able to pick them up and toss them to the shoulder. In other places, heavily laden tree limbs sagged low over the road, but had not broken. She saw no major damage.\n\nAs she rounded the bend to the western slope, there was more evidence of the storm. A few trees were down near the road but not intruding on it. There were a some tire tracks in the snow, so evidently traffic had been getting through.\n\nShe neared the power lines and saw yellow lights flashing up ahead. A CMP truck was parked just off the road. A line worker hopped out and waved to her as she pulled up.\n\n\"Mornin' ranger,\" he said when she had put down her window. \"Glad you stopped by, I was going to call in to your station, but got busy and haven't had time.\"\n\n\"What's up?\"\n\n\"Something I wanted you to see.\"\n\nRamona got out of the jeep. \"How's it going up here?\" she asked.\n\n\"We ought to have her up and running in another hour or two.\"\n\nThe power lines ran along the center of a cleared strip of land, about fifty yards wide, that went up and over the crest of the hill.\n\n\"Over this way,\" the lineman said, motioning for Ramona to follow him. They trudged along the western side of the power corridor for about a hundred paces. A pair of ravens burst from the snow drift ahead of them and flew off, cawing loudly.\n\n\"Wasn't for the birds, we'd not have seen it,\" the lineman said.\n\nRamona walked over to where the ravens had taken flight. She saw a bobcat, its hind legs gripped in a steel spring trap. She tapped it with her foot, and when it did not move, squatted down beside it. It was dead, half frozen. The snow beneath it was stained with blood.\n\n\"It's dead, right?\" the lineman asked.\n\n\"Sure is.\"\n\n\"I hate to see something like that, is that legal?\"\n\nRamona stood and looked down at the dead cat. \"It's legal. Season runs till the end of the year.\"\n\n\"Goddamn shame. Beautiful animal like that. Sorry to have bothered you.\"\n\n\"That's alright. Thanks for looking out. And thanks for all your hard work getting the lights back on.\"\n\nShe walked down to her jeep and got in, turning the heat to full. She wasn't fond of trapping, but people were going to do it, legally or otherwise. With that thought, she made a mental note to check the tree line along the wires after the holidays. If whoever had set the trap continued to do so out of season, there was something she could do about that.\n\nBefore she had gone very far, her radio squawked. \"Hey, Ramona,\" Martha said, \"We got a call from up on Porcupine Ridge. Snowmobiler went off the road. Says he called 911 and they told him, 'so walk home'. Think you can lend him a hand?\"\n\n\"Sure,\" she said, although she generally avoided the ridge, even in good weather. She hadn't spoken to Aaron Haines since the night he stormed out of the Alibi Saloon, and she didn't want to run into him.\n\n\"Great. He's about a half mile in on the eastern end.\"\n\nRamona drove to the bottom of the ridge road, switched to four wheel drive and started to climb. She did not need to look for the snowmobiler, his tracks were still visible and led her straight to him.\n\nHe was standing on the side of the road, waving to her. Next to him, Ramona saw the break in the snowbank he had gone through. She put the jeep in park, got out and looked down the slope. The snowmobile was half buried in snow about thirty feet down. It had come to a stop just a few yards short of a large stand of birch trees.\n\n\"Jeezum,\" she said, \"You had a close call.\"\n\nThe man rubbed his mittens together. \"Yeah, guess I did. Goin' a smidge too fast, maybe.\"\n\n\"Maybe, huh?\"\n\nHe stomped snow from his boots and chuckled. \"Yeah. Guess so. Anyway, thanks for coming by.\"\n\n\"We're here to help,\" she said. She got back in the jeep and turned it around, slowly edging the rear end toward the drop off. When she got in place, she opened the back and got out her tow rope. She tied one end to the trailer hitch, then held the coil out toward the man. He looked at it for a minute without taking it.\n\n\"Well,\" Ramona said, \"You don't expect me to climb down there, do you?\"\n\nHe looked at the snowmobile. \"It's wicked steep,\" he muttered.\n\n\"You climbed up, didn't you?\"\n\n\"Yes, Ma'am.\"\n\n\"Down is easier.\"\n\nHe sighed, took the rope and carefully stepped over the bank. He slipped after about ten steps down the slope, but slid right to the back of his snowmobile. He tied the rope to it, gave it a tug to make sure it was secure, and started to climb back up. He fell to his knees on his second step and proceeded to crawl on all fours.\n\nRamona shook her head. \"Use the rope, bub,\" she called.\n\nHe looked up at her for a minute, then understood her instruction and pulled himself to his feet and gripping the rope hand over hand, made his way up the slope. When he was close enough, Ramona grabbed his arm and helped him over the snowbank.\n\nShe got back into the jeep and drove slowly forward. The engine revved at the strain of its tow load, but rolled steadily until the snowmobile reached the top and burrowed into the bank. Ramona opened the door and looked behind her. The vehicle's owner was tugging at one of the skids, trying to pull it free.\n\n\"Stand back,\" Ramona shouted. When he stepped clear, she dropped the jeep into low gear and punched the gas. Her tires spun in the snow for a moment, then she lurched forward and the snowmobile broke through, slamming down on the road with a loud thump.\n\n\"Jeezum, that was rough!\" the man shouted at Ramona as she got out of the jeep.\n\n\"If you want, I can put her back down,\" she said, untying the rope.\n\n\"No, no,\" he said, \"I just hope it didn't take no damage.\"\n\n\"Well, if there's damage,\" Ramona replied, \"I'd say it's because you drove off the side of a bluff, not because I hauled her up.\"\n\nHe shrugged. \"I guess so. Well, thanks.\"\n\nRamona nodded, tipped her hat and got back in the jeep. That dubber is going to get back on and speed away just as fast as he was going when he went over, she thought as she drove off.\n\nAs she neared Aaron's homestead, she could not help feeling a desire to stop and talk to him. He'd had three months to get used to the idea that she didn't want an exclusive relationship with him, or anyone else. Maybe he had second thoughts about not wanting to see her. And she really did wish she could be with him again. She still thought about him frequently. Admit it, she thought, he's still your favorite fantasy when you masturbate.\n\nShe slowed to a crawl when she neared the bottom of his driveway. She could hear the sound of an engine and put down her window. Chainsaw. Looking up the drive, she saw that a large pine had fallen across it. Aaron was behind the downed tree, trimming off branches. She stopped and watched him for a minute. If he knew she was there, he gave no indication of it. She thought about getting out and helping him, but hesitated. He was fully fitted in his winter gear, but the sight of him at work reminded her of how he looked on the day of the forest fire. He was working on a log then, wearing only a pair of cutoffs and his work boots. His skin was glistening with sweat. That had been the last time they'd been together.\n\n\"Yeah,\" she muttered to herself, \"And he fucked the shit of you.\" She sighed, put the jeep in park and got out.\n\nShe took the chainsaw from the back of the jeep and trudged up the driveway. The snow came nearly to her knees. She was halfway to the fallen tree when the sound of his chainsaw stopped. For a second, she thought he must have someone helping him, but realized that she was hearing the buzz of his electric generator.\n\nHe silently watched her approach.\n\n\"Thought I'd stop and give you a hand,\" she said.\n\n\"Thanks. I want to clear these branches, then take off the top. After that, I think I can drag it clear with my truck.\"\n\n\"Sounds like a plan.\"\n\nRamona started her saw, and the two of them began working, he on the uphill side of the tree, she on the downhill, and quickly cut off all the protruding branches. Aaron then cut through the truck, parallel to the edge of his driveway, while Ramona gathered the sawn off branches and piled them to the side.\n\nAaron stood back and studied the tree truck. After a moment he said, \"Alright, I'll bring down the Expedition.\" Ramona was starting to feel the cold. She danced from foot to foot as she watched him climb into his SUV and back it down to the tree.\n\nShe watched him take a heavy length of chain from the back of the SUV, wrap it around the trunk and hook it to his vehicle. He probably would have dropped that dubber's snowmobile back down the ravine for complaining, she thought, grinning.\n\nAaron got back in the SUV and drove forward until the chains drew taut. The tree trunk moved a few inches, but then his wheels began to spin and shoot plumes of snow into the air. He backed up a few feet and tried again, but with no more success.\n\nRamona trotted down the hill to her jeep. She started it, put it into four wheel drive, and drove up to the tree. She touched her bumper to the trunk, then backed away. She nudged it again, and repeated the maneuver. With the snow packed down under her tires, she held her arm out the window and gestured for Aaron to pull forward. When she heard his engine rev, she stepped on the gas.\n\nThe trunk moved a few inches before she lost traction, but that was enough. Aaron managed to keep it moving. Ramona shifted into reverse, in case it broke free and rolled back, but he succeeded in towing it clear of the driveway.\n\nI should just wave and go, she thought, but Aaron shut off the Expedition and waved his arm, gesturing for her to come forward.\n\nShe pulled up next to him and rolled down her window.\n\n\"Thanks, Ramona,\" he said, \"I've got a pot of venison stew simmering on the stove. Why not come in, have a bowl and warm up?\"\n\n\"I don't know if that's a good idea, Aaron.\"\n\n\"Come on, Ramona. I just want to thank you for your help. I'm not going to try anything, if that's what you are worried about.\"\n\n\"I'm not worried. I've got bear spray in my pocket.\"\n\n\"You'd use it, wouldn't you?\"\n\n\"If I had to. I don't think I will, though.\"\n\n\"So, come on in.\" He turned toward the house and Ramona followed him.\n\nIt was warm in Aaron's house and the stew smelled delicious. Ramona took off her hat and parka and sat down at the kitchen table. Aaron poured them each a cup of coffee, then dished out two steaming bowls of stew.\n\nShe thanked him and dug in. The stew tasted as good as it smelled. She had eaten half of the bowl before Aaron spoke again.\n\n\"It's nice to see you, Ramona,\" he said, \"I've missed you.\"\n\n\"You can call me anytime, Aaron.\"\n\n\"I wasn't sure about that.\"\n\n\"I told you, it was your choice to make.\"\n\n\"You still seeing the delivery guy?\"\n\n\"Why do you say 'delivery guy' like it's an insult?\"\n\n\"Sorry.\"\n\n\"Yes, we still see each other. But, like I said, I'm not interested in a serious relationship.\"\n\n\"And what about your, um, girlfriend?\"\n\n\"I'd never think of Isabel as my girlfriend,\" she said, laughing. \"Anyway, she's in Montreal for the winter.\"\n\nAaron snorted. \"Who goes to Canada for the winter?\"\n\n\"Canadians?\"\n\n\"I'm coming off kind of confrontational, aren't I?\" Aaron asked, setting down his spoon.\n\nRamona ate the last of her stew. \"A little bit, yeah.\"\n\n\"I don't mean to. I'd really like the two of us to get back to a better place.\"\n\n\"You mean back to fucking?\"\n\nAaron blushed. \"I sure wouldn't mind that.\"\n\nRamona sighed. \"I wouldn't mind either. But you have to accept me for who I am.\"\n\n\"Fair enough.\" Ramona noticed his eyes shifted toward his bed. She wondered if he was even conscious that he had done so.\n\n\"Thanks for the stew,\" she said, \"It was delicious. I need to get back on patrol.\"\n\nThey stood and Aaron walked her to the door. She pulled on her parka and picked up her hat.\n\n\"So, I guess I'll give you a call,\" Aaron said. He lifted his arms as if to hug her, then dropped them again and stuck his hands in his pants pockets.\n\n\"Yeah, okay,\" she said with a nod, \"Call me, we'll talk some more.\"\n\nShe noticed that he grimaced when she said it, but she did not tell him that she had. Talking wasn't what he was interested in.\n\nShe walked out and got back in her jeep. As she crept down the slippery driveway and back onto the road, she felt an odd mix of relief and disappointment. When he had lifted his arms to her, she thought she might fall into them, and let him carry her to his bed. But when she saw that grimace, she wanted to knee him in the balls.\n\nShe sighed and spoke aloud to herself. \"The hottest guy in the valley wants to fuck me, but the hottest guy in the valley is an asshole.\"\n\nShe drove by Merganser Pond on her way back to Saw Whet, and it was still free of ice fishermen. She cruised the back roads for a while and passed a line of coyotes trotting single file down the Greenville Road. Near the Mount McGregor trail head, a young couple were on their roof, shoveling off the heavy load of snow. She stopped and called to them, asking if they needed help, but they smiled and waved and said they were alright.\n\nIt was nearly dark when she got back to town. As she turned on to Main Street, the lights came on. Suddenly the cold and forlorn landscape seemed warm and welcoming. She checked in at the station, then drove home.\n\nCHAPTER THREE\n\nRamona filled her gas tank and bought a bag of pretzels and a large soda at the Citgo station in Coburn Gore, then crossed the border. When the Canadian customs officers saw the Forest Service decal on her windshield, they passed her through with a smile and a wave.\n\nThe sky was the bright crystal blue that only comes on cold winter days. Ramona put on her sunglasses to counter the glare of the sun on the snowy fields. Another three hours or so of driving, and she'd make Montreal. Then...well, who knew? When Isabel was involved, she never knew what to expect.\n\nWinter duty had been long, dreary and dull. Even the holidays offered little relief from the tedium. January did not appear to be offering much, either.\n\nPiney had graciously agreed to cover both Christmas Eve and Christmas so that she could visit her family. After all, he reasoned, there probably wouldn't be any calls, and he could just stay home unless something came in. Ramona was grateful for his generosity, but Christmas was gray and rainy, and spending part of it with her mother and her family, and the rest with her father and his new girlfriend, was far from festive. Ramona thought that she'd have rather asked Piney if she could celebrate with his family back in Saw Whet.\n\nThe highway across southern Quebec was straight and flat, through a landscape of bare trees and snowy fields. She stopped in Sherbrooke to stretch her legs and get a sandwich. Hearing others in the store speaking French brought a smile to her face. In another hour and a half she would be in Montreal, les ville des saints, Isabel had called it, the city of saints. Somehow, she was not expecting much saintly behavior on her long weekend.\n\nAs she approached the outskirts of the city, she began to feel anxious. She was not accustomed to heavy urban traffic and she had no knowledge of the city. But she had entered Isabel's address in her GPS before she left Sherbrooke and it guided her through the busy streets until she was in front of a large brick building that looked like it had once been a factory.\n\nShe found a parking space a half block away, took her bags from behind her seat and walked to the entrance, half expecting to encounter a uniformed doorman. But there was no one there, and she entered into a small, glass enclosed foyer. The wall to her left was lined with mailboxes, each with a white call button. She found 701 and pressed it.\n\nShe heard Isabel's voice emerge from the tiny speaker a few seconds later.\n\n\"Ramona!\"\n\n\"Yes, it's me.\"\n\n\"I know, cherie. There is a camera.\"\n\nReflexively, Ramona looked around for the camera, but could not see it.\n\n\"Are you going to let me in?\" she asked.\n\n\"Into my home and my heart and my pants,\" Isabel said, as the door buzzed.\n\nRamona entered the wood paneled lobby. A huge fern stood in one corner. There was an open elevator on the far wall. She stepped in and pushed seven.\n\nIsabel was leaning in her doorway when the elevator opened. She was wearing a lacy white crop top and a pair of burgundy sweat pants hung low on her hips. She waited in silence while Ramona stepped off the elevator, crossed the hall to her and set down her bags.\n\nThey gazed at each other for a moment, then Ramona put her hands on Isabel's hips. Isabel draped her arms over Ramona's shoulders and their lips met in a long, tender kiss.\n\n\"Your neighbors may be watching us,\" Ramona whispered.\n\n\"Oh, they have seen much more than this,\" Isabel said, smiling. She led Ramona into her apartment, closing the door behind them.\n\nRamona looked around the front hallway and living room of the apartment while Isabel hung up her coat. She had expected something similar to the Cape Cod style of her Maine summer house, and was surprised when she saw how modern Isabel's apartment was. The furniture was all contemporary and the room was bright and sunny with light streaming in from tall windows that ran the length of two sides of the living room and opened to a magnificent view of the city skyline.\n\n\"This is beautiful,\" Ramona said, \"What a lovely apartment.\"\n\n\"Thank you, my dear, I think it reflects my taste much more than the house in Maine. Although, of course, I have many sides, non?\"\n\nRamona walked around the room, taking in the modern art on the walls and the vases of fresh flowers on the tables. She looked into a dining alcove and a small modern kitchen beyond it.\n\n\"Come, mon cherie,\" Isabel said, dropping on to a plush leather sofa. Ramona sat down beside her and leaned her head against her shoulder.\n\n\"How was your drive, dear girl? Weather was fine, I assume?\"\n\n\"Oh yeah, it was good. Kind of a boring drive, though.\"\n\n\"Oui. But we will have an exciting time now that you are here.\" Isabel kissed Ramona on her temple. Ramona turned her head and Isabel kissed her lips, her tongue slipping into her mouth. They sat and tenderly kissed for a while, then Ramona leaned back.\n\n\"I really have to pee,\" she said.\n\n\"It is right over there, Isabel said, pointing to a hallway across the room. \"It is on the left. Go to the right and you will be in my boudoir...a bit soon, I suppose.\"",
        "When Ramona returned from the bathroom there were two glasses of white wine and a platter of cheese and crackers on the coffee table. They spent the afternoon nibbling and sipping, occasionally kissing.\n\n\"So, tell me,\" Isabel asked, \"Are you still playing with your two boy toys?\"\n\n\"I still see Grant now and then. As for Aaron...I did have lunch with him a few weeks ago. It was obvious that he wanted to hook up again, but it just didn't feel right.\"\n\n\"Ramona, if he doesn't make you feel good about yourself, it does not matter how good a fuck he is.\"\n\nRamona sighed and nodded. \"He really was an incredibly good fuck.\"\n\n\"Oui, I imagine so. He is built like a Greek god.\"\n\n\"He has the arrogance of one, as well.\"\n\nIsabel laughed. \"And is that it, cherie? A little bit of Monsieur Grant is all?\"\n\n\"Well, no, there was this woman, Molly...\"\n\nIsabel's eyes grew wide and she insisted that Ramona tell her every detail of her encounter by the pond.\n\n\"Perhaps this Molly would care to attend one of my parties next summer,\" she said when Ramona finished.\n\n\"Perhaps,\" Ramona said, \"But what about you? I am sure you've kept busy.\"\n\n\"But of course. I am, as you know, very sociable.\"\n\n\"Anyone new?\"\n\n\"Non, but there is a new fellow at the club that I am very interested in. I am determined to fellate him at the earliest opportunity. You will likely meet him tomorrow.\"\n\n\"The club?\"\n\nIsabel looked at her watch. \"We will talk about that over dinner. Now, go, change into something nicer, we are going out to dinner. I am going to teach you about something you can not possibly learn in Maine.\"\n\n\"What's that?\"\n\n\"Chinese food.\"\n\n****\n\nRamona had thought that \"Chinatowns\" were just a fiction in the movies, so she gaped in amazement as they drove under a large ornately curving archway and on to a busy street lined with shops and restaurants, all displaying signs in Chinese script. It was only suppertime, but the January night fell early and the area was aglow with neon.\n\nIsabel crawled slowly down the street, looking for a parking space, and muttering in French. At last, she found a spot and pulled over.\n\n\"Merde,\" she said, \"We will have to walk four blocks.\"\n\n\"I think I can handle it,\" Ramona said.\n\n\"You are younger and you are not wearing heels.\"\n\nRamona furrowed her brow, \"If you don't mind me asking, how old are you?\"\n\n\"I do mind, and if you ask again, I shall give you a good slap.\"\n\n\"Must be pretty old,\" Ramona muttered as she got out of the car.\n\n\"I heard that,\" Isabel said, laughing. She held out her hand and Ramona took it. They passed a dozen storefronts as they hurried down the crowded sidewalk. Ramona tried to look into them, but all the windows were obscured with condensation. When Isabel turned and opened the door to their destination, Ramona wondered how she distinguished it from the rest.\n\n\"This is my favorite,\" Isabel said as they stepped inside, \"Beijing Imperial. The best dim sum in the city, perhaps in Canada. Don't worry, I will order for us. I don't want you to embarrass me and order chop suey.\"\n\nRamona rolled her eyes as a young Chinese woman led them to their table. Isabel chatted with her in French, and the woman smiled and left, returning a few minutes later with a pot of floral scented tea.\n\n\"That smells amazing,\" Ramona said as Isabel filled their cups.\n\n\"It is chrysanthemum tea.\"\n\nThe tea tasted as good as it smelled.\n\n\"So, what are we having?\" Ramona asked.\n\n\"I have asked for the chef's tasting menu, so it will be a surprise.\"\n\n\"Isn't that kind of risky?\"\n\n\"Only for the timid,\" Isabel said with a dismissive wave, as their waiter set the first dish down on the table.\n\n\"I know what those are,\" Ramona said with a smile, \"Dumplings.\"\n\nIsabel picked up her chopsticks. \"Do you know how to use these?\" she asked.\n\n\"Not a clue.\"\n\nIsabel waved to the waiter and said something to him. He hustled off and returned with a set of silverware.\n\n\"You must learn before I bring you again,\" Isabel said, \"Or I will have to put you across my lap and embarrass you in front of the whole restaurant.\"\n\n\"You're all talk,\" Ramona said.\n\n\"I let you get away with too much, because I cherish you so,\" Isabel said, picking up a dumpling and biting into it.\n\nThe next plate came. \"Cha siu bao,\" Isabel said, \"Steamed pork buns. You can use your fingers.\"\n\nRamona picked one up and bit into it. \"Okay,\" she said, still chewing, \"This might be my new favorite thing.\"\n\nThe dishes kept coming. Saut\u00e9ed Shishito peppers. Tofu skin rolls. Fried squid. Sticky rice with Chinese sausage. Finally, sesame balls for dessert.\n\n\"So, tell me about this club we are going to tomorrow,\" Ramona said, as they finished their second pot of tea.\n\nIsabel smiled. \"It is called Le Club Libertin, that means...\"\n\n\"The Libertine Club,\" Ramona said, \"I can figure out that much.\" Her eyes narrowed, \"So, this is like...a sex club?\"\n\nIsabel waved her hand. \"Non, non, nothing so vulgar as that, it's more like...\"\n\n\"A club where people have sex?\"\n\n\"Well, of course, but that is not all they do. It is like a cocktail party.\"\n\n\"A cocktail party with blowjobs.\"\n\n\"I certainly hope so!\" Isabel exclaimed. \"I told you my plans for this new man, Daniel.\"\n\n\"I am more concerned about what plans you might have for me.\"\n\n\"I have no ulterior designs, cherie. You will do as you please.\"\n\nWhen they left the restaurant, they discovered that it had become bitterly cold while they ate. Isabel grabbed Ramona's hand and stuffed it, along with her own, into her coat pocket and they bustled back to the car.\n\nWhen they arrived at Isabel's building, they ducked inside, shivering. The elevator door was open and they entered it. As soon as the door closed, Isabel pulled Ramona against her and they kissed until the bell dinged for the seventh floor.\n\nWhile Isabel unlocked the door to her apartment, Ramona snuggled her face into her hair and kissed the back of her neck. When the door opened they tumbled across the room and onto the couch together, still wearing their coats and boots. After several minutes of deep kissing, Ramona sat up, brushed her hair from her face and pulled off her coat. For the first time, she saw the lights of the city skyline through the living room windows.\n\n\"What a view,\" she said, \"The lights in the windows look like stars.\"\n\nIsabella squirmed out from beneath her. She picked up Ramona's coat from the floor, took off her own and hung them in the closet.\n\n\"I am so happy to see you, mon cherie,\" she said, \"But if your wet boots have dripped on my couch, I shall punish you most severely.\"\n\nRamona chortled. She had grown used to Isabel's idle threats. Nonetheless, she kicked off her boots, got up and put them on the floor mat near the front door. The wine bottle and glasses from the afternoon were still on the table. Isabel filled the glasses as Ramona returned to the couch. The two of them laid back against the soft cushions, sipping their wine while gazing at the bright city lights.\n\n\"The city has its beauty just as do your beloved woods, nest ce pas?\" Isabel asked.\n\n\"It does,\" Ramona replied. She lifted Isabel's hand to her lips and kissed it.\n\n\"I will show you more tomorrow. But tonight, I think it is time that I show you my boudoir.\"\n\nShe stood, pulling Ramona up behind her, and led her down the hall to her bedroom.\n\nThe room was aglow with bright moonlight.\n\nRamona walked to the window and looked out. The view from this room was away from the center of the city and she could see moonlight sparkling off the river in the distance. Superimposed on that sight, she saw Isabel's reflection, and watched as she pulled her blouse over her head, and lowered her slacks and stepped out of them.\n\n\"You must look at my new jewelry,\" Isabel said. Ramona turned and saw a flash of light from Isabel's breast. She crossed the room and looked closer. There were gold hoops through Isabel's nipples, each mounted with a diamond.\n\nRamona cupped a breast in each hand. \"They are beautiful,\" she said, then lowered her head and kissed each nipple. Isabel held her head while she flicked at the rings with her tongue, then kissed her all around her breasts. She dropped to one knee, her hands on Isabel's hips, and kissed her belly and the soft blonde tangle of her pubic hair.\n\nIsabel stroked Ramona's head and said, \"It is so good to see you again, mon cherie, but what I truly want is to see your naked body in my bed.\"\n\nRamona stood, smiled, and pulled her sweater over her head. She turned her back and let Isabel unfasten her bra. After shaking it to the floor, she unsnapped the waist of her slacks.\n\n\"I hope you remembered my house rules,\" Isabel muttered.\n\n\"I remembered,\" Ramona said as she slid the slacks down her legs, \"No underpants.\"\n\nIsabel playfully gave her ass a light slap. \"Good girl,\" she said.\n\nRamona flopped on the bed and scooted to the center. Isabel knelt on the edge, lifted Ramona's right foot and massaged it.\n\n\"Oh yeah, that feels good,\" Ramona murmured, \"You can do that all night.\"\n\n\"Are you certain? I had other things in mind.\"\n\n\"Well, not all night then.\"\n\nIsabel sat by Ramona's side and massaged her other foot. Ramona closed her eyes. It had been a long day and she was tired. She felt like she was melting into the mattress.\n\nHer eyes opened wide when she felt Isabel's wet tongue circling her navel, and saw her rising up on her knees. Isabel straddled Ramona's shoulders and then tilted her hips.\n\nRamona reached up with both hands and squeezed Isabel's ass, then raised her head and ran her tongue along the length of her pussy, from front to rear and back again. She felt Isabel's hands pressing on her thighs, and spread them wide.\n\nWhen Isabel's tongue touched her clit, Ramona purred, and wrapped her arms around Isabel's hips, pulling her tight against her face and thrusting her tongue inside her.\n\n\"Oh, good girl,\" Isabel murmured. She slid two fingers into Ramona's vagina and began working them in and out. She cupped her lips around her clitoris, teasing it with the tip of her tongue.\n\nRamona responded by burying her face between Isabel's legs and licking furiously at her pussy, pushing her tongue into it as deeply as she could, then sucking hard on her clit. She could taste Isabel's wetness on her tongue and feel it on her face.\n\nIsabel came first, squeezing her thighs tightly around Ramona's head. Ramona had to push her away to get air, and came herself, with a series of loud gasping breaths. Isabel did not pause, but slowed her pace, running her tongue languorously up and down Ramona's labia.\n\n\"I missed this pretty pussy,\" she murmured before returning her attention to Ramona's clit. In a few minutes, Ramona came again.\n\nAfter a moment's rest, Isabel left the bed. Ramona rolled on to her side, feeling exhausted. She closed her eyes and was nearly dozing when Isabel returned.\n\n\"Mon dieu,\" Isabel exclaimed, \"You think you are going to sleep now? Non, cherie, I am not finished with you.\"\n\nRamona twisted to look up at her. Isabel was holding a cylindrical object with a large ball on the end.\n\n\"What's that?\" she asked.\n\n\"It is my magic wand,\" Isabel said with a grin. She spooned behind Ramona and turned on the wand. It began to hum and Ramona felt a soft tingle as Isabel ran it down her arm.\n\n\"Open yourself for me,\" Isabel whispered.\n\nRamona spread her legs. Isabel slowly moved the wand across her belly, giving her goosebumps. She played with it, up and down Ramona's thighs, then across her breasts. Ramona gasped when it grazed her nipples.\n\n\"You see,\" Isabel said, \"It is magic.\" Ramona's anticipation built as the wand moved in circles down her abdomen, and when it touched her between her thighs, she felt an explosion of sensation. She groaned and arched her back. Her breathing was loud and ragged, but she could hear Isabel's cackling laugh.\n\nIsabel rolled the ball, rocked the ball, tilted it and twisted it. Each motion caused another intense wave of erotic energy to course through Ramona's body. She came in waves of ecstasy, again and again, until, finally, she had to grip Isabel's arm and push the vibrator away.\n\n\"No more,\" she panted, \"I can't take anymore.\"\n\nIsabel turned off the wand and set it aside. She pulled the covers up over them and snuggled against Ramona.\n\n\"You really wore me out,\" Ramona said in a drowsy voice.\"\n\n\"Oh, cherie,\" Isabel chuckled, \"It's only Friday.\"\n\n****\n\nRamona and Isabel slept late on Saturday morning. Upon awakening, they cuddled and kissed and idly let their hands play over each other's bodies. After a while Isabel stood up,\n\nstretched, and said, \"I have much planned for us. We must get up and not lay about all day.\"\n\nShe went into the bathroom and started the shower. \"Come, ma belle,\" she called, \"Join me.\"\n\nRamona got out of bed and went to the shower, squeezing in behind Isabel. Kissing and giggling, they soaped each other's bodies. When Ramona's fingers drifted up the inside of Isabel's thigh, Isabel slapped her hand away.\n\n\"Non, naughty girl, that's for later.\"\n\nAfter showering, they got dressed in warm casual clothes.\n\n\"I need coffee,\" Ramona said.\n\n\"Mon dieu, you Americans and your coffee,\" Isabel said in an exasperated tone. \"You can have coffee when we get to the caf\u00e9 if you like.\"\n\nThey took the elevator down to the lobby and stepped out into a clear brisk morning.\n\n\"It is just around the corner,\" Isabel said. She held Ramona's hand as they crossed the street, turned the corner and entered Le Caf\u00e9 D\u00e9licieux. They took a seat near the frosty window and Isabel ordered eggs Benedict and mimosas for them both.\n\n\"I was going to get coffee,\" Ramona said with a laugh.\n\n\"Am I not stimulation enough for you?\"\n\nRamona reached across the table and squeezed the older woman's hand. \"Trust me,\" she said. \"You are plenty stimulating.\"\n\n\"Tres bien.\"\n\nThey made small talk as they enjoyed their brunch. Isabel chatted about goings-on in her Montreal social circle.\n\n\"Natalie and Martin have gone to Cancun,\" she said with the look of disapproval.\n\n\"What's wrong with going to Cancun?\"\n\n\"It is dreadfully hot for one thing,\" Isabel said, \"And all they want to do is go down there and fuck whomever they come across.\"\n\nRamona laughed. \"Meanwhile, what are you doing in Montreal?\"\n\n\"Why, I am fucking anyone I come across.\" She ran her foot up the inside of Ramona's leg under the table. \"And look who I have come across.\"\n\nShe asked Ramona about Maine. Of course, there was not much to talk about besides the weather and her routine duties.\n\n\"And the holidays,\" Isabel asked, \"Did you visit family?\"\n\n\"Yes, I spent Christmas Eve and Christmas morning with my mother and then had supper with my father and his girlfriend.\"\n\n\"It does not seem like you enjoyed yourself. Do you not get along with your family?\"\n\n\"I wouldn't say that, but we're just very different. We don't really relate.\"\n\n\"Oui,\"Isabel said, \"I understand.\"\n\n\"You've never told me anything about your family.\"\n\n\"There is not much to tell,\" Isabel said, but she looked off into the distance as if there was more on her mind. After a moment, she shook her head, smiled and said, \"Now, finish your mimosa and we will go about our business.\"\n\nFrom the cafe, they went to the parking garage next to Isabel's building and got in her car. After starting it, Isabel sat behind the wheel for a moment, seeming lost in thought.\n\n\"Is everything okay?\" Ramona asked.\n\n\"Oui.\" She touched the side of Ramona's face and said, \"I would show something to you.\"\n\nRamona marveled at the hustle and bustle of the city. The people she saw on the street were far more diverse than she had imagined. She saw faces of all shades. As they entered a part of town where the streets were narrower and the houses smaller, the darker hues became more common.\n\nIsabel turned on to a street of plain two story houses, fronted by snow covered patches of lawn. She parked at the curb and tapped her fingernail on the window, pointing to one house, indistinguishable from the others, except for a tangle of rose bushes on either side of the low front porch.\n\n\"There,\" she said, \"Deux trente neuf.\"\n\n\"What's that?\" Ramona asked.\n\n\"Home,\" Isabel said, sighing deeply. \"Maman and P\u00e8re's house. Where I grew up.\"\n\nRamona looked at the house. It was small but well kept. It could have as easily been in Bangor or Waterville as in Montreal. It was ordinary.\n\nShe had never given much thought to Isabel's background; where she came from or what her childhood had been like. If she had, she likely would have imagined an old money family, perhaps one that was no longer as grand as it had once been, but still clinging to the remnants of that grandeur. The one thing she had never imagined Isabel to be was ordinary. The thought filled Ramona's heart with tenderness. She reached over and laid her hand on top of Isabel's.\n\n\"Are they still with us?\" she asked, \"Your parents?\"\n\n\"Non, both gone,\" Isabel said, slowly shaking her head, \"And Marianne, as well.\"\n\nRamona squeezed her hand. \"Who was Marianne?\"\n\n\"Ma grande soeur.\" She sniffled. \"My older sister. Dead of breast cancer, but thirty five years old.\"\n\n\"I'm sorry, honey. Do you have other family?\"\n\nIsabel made a soft growling noise. \"Mon fr\u00e8re Edmond. He lives in Calgary. He is an engineer with one of those horrid oil companies.\" She looked at Ramona and rolled her eyes. \"He does not approve of little sister.\"\n\n\"That's his loss,\" Ramona said.\n\n\"Non. Not his alone.\"\n\nRamona began to speak, but stopped, sensing that Isabel wanted to say more. Isabel half turned in her seat and took Ramona's hand between hers.\n\n\"Cherie,\" she said, \"I love my life. I enjoy every day. I relish each morsel of food, each kiss, every sunset, every glance at a flower. But Ramona...\"\n\nShe stared down at their joined hands for a moment. \"Ramona, do not think that to live our lives as we do, as I have, as you are...to live them as we please...Ramona, ma ch\u00e8re fille, never think that it does not come at a price.\"\n\nThey sat in silence for a moment, then Isabel faced forward again, and looked once more over at the little house.\n\n\"When was the last time you were here?\" Ramona asked her.\n\n\"Oh, I come every spring, before I go to Maine,\" Isabel said as she pulled away from the curb. \"I come to look at Maman's roses.\"\n\nTheir next stop was a red brick building with blackened windows. Over the door, a purple neon sign read \"Dentelle et Cuir.\" Ramona followed Isabel inside. Her eyes opened wide as she looked around the store's interior.\n\nOn her left there were aisles of lingerie, evening dresses and sleepwear. To her right, a stranger, more interesting stock of merchandise filled the racks. Isabel laughed when she saw Ramona gazing at the goods on that side of the store.\n\n\"Do you see anything you like?\" she asked, as Ramona walked slowly down the rows of spiked collars and fur-lined cuffs, whips and paddles and riding crops, strange objects for which she could not imagine a purpose. She took a red and black leather flogger down from a hook and ran its tails across the palm of her hand.\n\n\"Shall we buy that?\" Isabel asked.\n\nRamona looked at the price tag. \"This costs two hundred dollars,\" she whispered.\n\nIsabel took the flogger from her and examined it. \"But it is fine craftsmanship,\" Isabella said, \"If you want it, we will get it.\"\n\n\"I wouldn't know what to do with it. And even if I did, how often would I have the opportunity?\"\n\n\"If you meet the right person, you might have a great deal of opportunity.\"\n\nRamona shook her head and put the flogger back on its hook. Isabel shrugged. \"Very well, you can always borrow one of mine.\"\n\nShe led Ramona to the clothing section. She gazed down at the merchandise, then pulled a dress from the rack. It was pink and shiny. Ramona ran her fingers over it.",
        "\"What is this, rubber?\"\n\n\"Latex,\" Isabel said, \"You would look fabulous in it.\"\n\n\"But what am I going to do? Wear it to go to the Alibi?\"\n\nIsabel laughed. \"I would love to see that.\"\n\n\"It doesn't look very comfortable. What the hell kind of party are we going to, anyway?\"\n\n\"It is not really a party,\" Isabel said, \"It's just Saturday night at Le Club Libertin.\"\n\n\"Do you go to this club every Saturday?\"\n\n\"Non, non, non, just now and then. And do not forget, I spend my summers in the Maine wilderness cavorting with forest nymphs.\"\n\n\"But I bet when we get there, everyone is going to know your name.\"\n\n\"Well of course they are.\" Isabel replied. She hung up the latex dress and flipped through the rack.\n\nA young woman approached them and spoke to Isabel in French. She was short and round, dressed in a leather jumpsuit. She had magenta hair and a tattoo of a raven, wings outstretched, across the base of her throat. Isabel introduced her to Ramona.\n\n\"This is Camille, she will know exactly what we should do.\"\n\n\"I like your tattoo,\" Ramona said to her. \"I really love ravens.\"\n\n\"Ramona was raised in the wilderness,\" Isabel said, \"I am teaching her about civilization.\"\n\nCamille looked at Ramona with an uncertain smile, then turned back to the rack. She and Isabel flipped through a few dresses, muttering to each other, and occasionally giggling. Ramona wished she had paid more attention in her high school French class.\n\n\"Ah! Oui!\" Isabel exclaimed. She held up a long black dress, adorned with sequins. It had a plunging neckline and a slit up the left side.\n\nRamona took it from her, and Camille showed her to the fitting room. She changed into the dress, half expecting Isabel to burst into the room at any moment.\n\nLooking in the mirror, she smoothed the dress down over her hips and adjusted the neckline. After taking a deep breath, she stepped out of the fitting room.\n\nIsabel and Camille were leaning on opposite sides of the nearest rack, chatting. They looked over at her. Camille said something that caused Isabel to throw her head back and laugh loudly.\n\n\"What was that?\" Ramona asked, feeling slightly embarrassed.\n\n\"She said, 'je la baiserais maintenant'...I would fuck her right now.\"\n\nRamona looked at Camille, winked and said, \"Merci beaucoup.\"\n\n\"Turn around, let us get a good look,\" Isabel said.\n\nRamona spun around for inspection.\n\n\"Mon Dieu,\" Isabel said, \"You will be the hit of the party.\"\n\n\"I thought you said it wasn't a party.\"\n\nIsabel ignored her and spoke to Camille, who nodded vigorously and darted off. Ramona imagined that she might come back with a set of cuffs or one of those spiky collars, but she returned carrying a shoe box. There was a bench next to the fitting room. Ramona sat down and opened the box. She took out a pair of black strappy platform heels and put them on.\n\n\"These are beautiful,\" she said, \"But I don't know if I can walk in them.\"\n\n\"Don't be silly.\" Isabel scoffed, \"You can climb mountains, I am sure you can walk in three inch heels. Now, go get changed, we have more to do still before tonight.\"\n\nRamona changed and handed the dress to Camille.\n\n\"Come, we have one more task here,\" Isabel said, leading Ramona to the back of the store.\n\nThey entered an alcove filled with a wide variety of sex toys of all shapes and sizes. Isabel picked up a black butt plug whose base was as big around as a salad plate.\n\n\"Non, this is much too big for your delicate bottom.\" she said, laughing and putting it back. \"Here is what we have come for.\"\n\nShe picked up a box and showed it to Ramona. \"This is the same model that I have,\" she said.\n\nRamona took the box and saw that it was a Hitachi vibrating wand. She smiled and said, \"This is something I think I could handle.\"\n\n\"Very well, it is a gift to you for being my wonderful guest this weekend.\"\n\n\"Thank you. But you give me so much. The dress, the shoes...\"\n\nIsabel laughed. \"Oh, ma belle, seeing you in those things is a gift to me.\" She kissed Ramona and added, \"And to everyone at the club tonight.\"\n\nThey took the wand to the cashiers counter and put it with the dress and shoes. Camille rang up their purchases.\n\n\"How much is all this?\" Ramona asked.\n\nIsabel waved her hand at her. \"It is Canadian money, you wouldn't understand.\" Camille said something to her, and she laughed. \"Ask her yourself.\"\n\nCamille smiled at Ramona, and said, with a heavy accent, \"Your new purchase? Would you desire a demonstration in its use?\"\n\nRamona smiled at her, and said, \"Merci, but my mistress gave me a thorough lesson last night.\" She took Isabel's arm and kissed her cheek. Isabel gathered up their packages and they left the store, arm in arm and giggling.\n\n****\n\nThey parked in a small but well lit municipal lot and walked down the street, past a jewelry store and a barbershop. By the time Isabel stopped before a sturdy wooden door, Ramona had managed to figure out how to walk in her heels without wobbling. There was no sign on or near the door, not even an address, just a code key box on the wall. Isabel tapped in a code, there was a low buzzing sound and the door clicked open. They stepped into a small vestibule and then an elevator.\n\nThere were no numbered buttons on the control panel, just an up and a down. Ramona had the feeling they had risen more than a single floor when the door opened. They stepped into an elegantly furnished lobby. The walls were dark wooden panel, the lighting glowed from ornate sconces on the walls.\n\nA tall thin man in an evening jacket stood behind a mahogany reception desk.\n\n\"Bonjour, Madame Saucier,\" he said with a wide smile.\n\n\"Bonjour, Richard,\" Isabel replied.She held out her hand. He kissed it, then looked toward Ramona.\n\n\"Richard. this is my dear friend Ramona, from the states.\"\n\n\"Very pleased to make your acquaintance,\" he said, taking Ramona's hand and kissing it as well.\n\nRamona felt as if she had walked on to the set of some old Hollywood movie when they entered the club. The room was large, with a high ceiling, and contained a number of separate areas of grouped furniture. Like the lobby, everything seemed to be made of mahogany or crystal, or upholstered in leather. On her right, there was a large curving staircase, leading up to an open second floor. She could dimly see a row of doors along the upper wall. Each had a small light next to it. For some reason, a couple of them were glowing red.\n\nBeneath the balustrade was a long bar. Isabel held Ramona's hand as they walked toward it.\n\nThere were forty to fifty people in the room, evenly divided between men and women. Most of the men appeared to be in their forties or older, while the ages of the women varied more widely.\n\n\"There are quite a few eyes on you,\" Isabel said.\n\n\"And on you, too.\"\n\n\"Well, of course.\"\n\nThe barman greeted Isabel by name and without asking, poured her a glass of champagne.\n\n\"And for your friend?\" he asked.\n\n\"I'll have the same,\" Ramona said.\n\nDirectly across the room a fire was crackling in a large stone fireplace. When Ramona's glass was full, Isabel took her hand once more and led her across the room to stand in front of it.\n\n\"Are you cold?\" Ramona asked.\n\n\"Non,\" Isabel replied, \"I was just parading you across the room to show you off.\"\n\n\"That feels a little weird.\"\n\nIsabel patted her on the cheek. \"Ma belle, I tell you again and again, show them your magnificence.\"\n\nA couple approached them. The man was strikingly handsome, with chiseled features, pale blue eyes and salt and pepper hair. His companion was a curvy blonde woman, more than a few years younger than him. Isabel gave them both air kisses, and introduced them to Ramona as Hugo and Julia.\n\n\"Ah, you are the American friend Isabel told us about,\" Hugo said. He took her hand and squeezed it, but did not kiss it.\n\n\"The game warden?\" Julia asked.\n\n\"Forest ranger,\" Ramona said.\n\n\"What is the difference?\" she asked, but as Ramona explained the difference, Julia's attention seemed to wander. Hugo, however, was very interested. As he asked her more questions about her job, Julia engaged in conversation with Isabel. From the little Ramona picked up, it was mostly about sizing up the gentlemen in the room.\n\nAfter a few minutes, Julia tugged at Hugo's sleeve, and they moved on to speak to another couple sitting in an alcove nearby.\n\n\"Hugo seemed quite taken with you,\" Isabel said, lacing her arm through Ramona's.\n\n\"He's wicked handsome.\"\n\n\"He is, and a charming man. But you should know, he has particular tastes.\"\n\nBefore Ramona could ask her to explain, Isabel was busy greeting more friends. Ramona did not bother trying to remember everyone's name. It was unlikely she'd ever need to know them.\n\nArm in arm, they made their way around the room. Small groups stood gathered in conversation or sat together in one of the groupings of overstuffed furniture.\n\nIsabel stopped and put her mouth near Ramona's ear. \"You see him, near the window? The man talking to the woman in red? That is Daniel.\"\n\n\"He's the guy you want to suck off?\"\n\nIsabel lightly slapped Ramona's hand. \"Darling, we are genteel here. But yes, I have wanted to suck his cock for some time now.\"\n\n\"So, go for it.\"\n\n\"I shall,\" Isabel said. \"Will you be alright on your own for a bit?\"\n\n\"I'm a big girl, I can take care of myself.\"\n\nIsabel went over to Daniel. Ramona finished her champagne and decided to get a refill. As she crossed to the bar, she was very conscious of the way the slit in her skirt opened with every step. She had always been a jeans and t-shirt kind of girl, it gave her a thrill to be dressed in something so sexy.\n\nShe asked the barman for another glass of champagne, and while he poured it, she heard a woman's loud laughter from nearby. She looked and saw a couple standing close together at the end of the bar, talking and laughing. After the barman handed her the glass, she looked again and noticed that the man's fly was open and the woman was stroking his cock while they casually chatted.\n\nThere were a few high stools in front of the bar, and Ramona considered just sitting and watching, but had second thoughts when she remembered that she was not wearing any underwear. She settled for leaning back against the bar while she sipped her champagne.\n\nAn elderly man approached her, walking slowly with a cane.\n\n\"Excusez-moi,\" he said, \"But you are Isabel's guest?\"\n\n\"Yes, I am. My name is Ramona.\"\n\n\"Charles,\" he replied, bowing his head. \"I must say, I knew Isabel when she was your age, and you are as lovely now as she was then. And I am certain that when you reach her current age, you will still be as lovely as she is now.\"\n\n\"Thank you, that is a great compliment.\"\n\nHe chuckled. \"I wonder, though, if you are as free spirited.\"\n\nRamona hesitated for a moment before saying anything, and he laughed again. \"Oh, pardon, ma fille, I was not making an advance to you. Those days are behind me now, I regret to say.\"\n\n\"I think maybe I do as well,\" Ramona said, smiling at him.\n\n\"Might an old man steal one kiss from a pretty girl, though?\"\n\n\"Certainly,\" Ramona replied. He leaned forward and lightly brushed his lips against her cheek. On an impulse, Ramona put her hands on the sides of his face, and kissed him on the lips, holding it a minute and gliding her tongue across them.\n\nCharles stepped back and smiled. \"You are Isabel's girl, that is certain. Merci, mademoiselle.\"\n\nCharles walked away and Ramona looked around the room, but did not see Isabel. A crowd had gathered around one of the big leather couches and she figured that if something noteworthy was going on, Isabel was probably a part of it. She approached the couch and she saw someone's head lying on the back of it. Moving closer, she recognized Daniel. A few steps more and she could see what was happening. His pants were open, and Isabel knelt between his knees. She was, as she had planned, fellating him.\n\nThere were about a dozen people standing in a semicircle, watching. One of them was Hugo. When Ramona made eye contact with him, he smiled, took a step back and came around the couch to stand beside her.\n\nHe leaned his head close to hers. \"She is quite talented,\" he said.\n\n\"Are you speaking from observation or experience?\"\n\n\"A bit of both,\" he said. He put his hand on the small of Ramona's back. When she did not object, he moved it to her hip.\n\nIsabel was clearly enjoying performing for an audience. She played with Daniel's cock, swirling her tongue around the head, kissing up and down the shaft, stroking it while she sucked on his balls.\n\nAs they watched, Hugo slowly shifted his position until he was behind Ramona, both his hands now on her hips.\n\nRamona was becoming very aroused watching Isabel and feeling a handsome man's hands on her body. She leaned slightly forward, pushing her ass against Hugo. She could feel the hardness in his pants press against her.\n\nHe picked up on her signal, and his hands moved, the right rising to cup her breast, the left, sliding down until it found the slit in her skirt. She spread her legs slightly, and he reached inside. She did not realize how wet she was until his fingers glided easily between her labia.\n\nShe continued to watch Isabel, but her thoughts were on the man whose hands were exciting her, fondling her breasts and gently pinching her nipples, stroking her vagina and tapping her clit. When she glanced up, she saw that a few in the ring of onlookers had shifted their attention to her, and she was struck with an unfamiliar mix of emotions. Part of her mind told her that she should be embarrassed, if not ashamed. Looking at the members of Le Club Libertin, she knew that she was not one of them, that when they looked at her, they saw a pet, a plaything. But when she cast her eyes back down, and saw Isabel taking the full length of Daniel's cock in her mouth, she understood that, while he was the one being pleasured, the power in the situation was hers.\n\nShe felt Hugo's warm breath on her shoulder and then his lips on the side of her throat, and he whispered into her ear, \"Ramona...I want to bugger you.\"\n\nShe was not sure what she had heard, and looked back over her shoulder at him. He must have recognized her lack of understanding, saying, \"I want to sodomize you...to put myself inside your exquisite bottom.\"\n\nHe has particular tastes, Isabel had said. The way he expressed himself sounded silly, but looking into his piercing eyes, it was incredibly sexy as well.\n\nRamona nodded and whispered, \"Yes.\"\n\nHugo took her arm and led her to the curving staircase and up to the balcony. The first two doors they passed showed red lights. Hugo stopped at the third door and opened it.\n\nHe ushered Ramona into a small bedchamber. It was dominated by a queen sized four poster bed, and lit with a golden glow from a glass shaded lamp on the left side nightstand. A matching stand on the right held a number of bottles of lotions and lubricants, and a bowl filled with condoms. There was a loveseat on one side of the room, and a small bathroom on the other.\n\nHugo shut the door and flipped a switch. Turning on the red light, Ramona assumed. He took off his jacket and draped it over the arm of the loveseat, then stepped close to her, put his hands on her hips and lowered his lips to hers. As they kissed, he began to inch her dress up. When it reached the top of her thighs, she leaned back and raised her arms.\n\nHe pulled the dress over her head and set it by his jacket. Taking Ramona's hand, he sat on the edge of the bed and pulled her on to his lap. He stroked her arm while they kissed, then he gently took her by the shoulder, and turned her face down across his knees, her upper body resting on the bed, her legs dangling.\n\nShe tensed, apprehensive that she was about to feel a hard slap on her ass, but instead, he caressed it tenderly, rubbing and kneading it, occasionally letting his fingers drift down between her thighs. She relaxed, laying her head down on her crossed arms while he massaged her thighs and the small of her back.\n\nHe was good with his hands; at times firm, but never rough, while at other times, his touch was so light that Ramona was not sure if he was making contact at all or if there was merely a tingle of energy passing between his fingers and her skin. She drifted into an almost trance like state, and did not know how long he caressed her before she felt his weight shift and realized he was reaching across her to the nightstand.\n\nA moment later, she felt a cool sensation between her cheeks. She caught a whiff of a floral scent and realized that he had applied lotion to his hand, and let it dribble down on to her.\n\nHe ran his fingertip across her anus several times, then flirted with it, circling, lightly tapping. With his other hand, he massaged her shoulders and her upper back, silently urging her to relax.\n\n\"Breathe deeply,\" he said in a soft voice, \"Don't hold your breath.\"\n\nRamona did not realize that she had been holding her breath until he mentioned it. She inhaled deeply, and as she let it out, felt the tip of his finger press against her hole. He did not try to insert it, not yet, but merely applied pressure. On her next breath, he pressed more firmly, and she felt the tip enter her anus. Another breath and she felt its pressure on her sphincter.\n\nShe expected to feel it push deeper into her next, but instead, he pulled back, and slowly moved it in and out a few times, only as far as he had already gone.\n\nWhen he did apply more pressure against her sphincter, Ramona felt herself tense.\n\n\"Relax,\" Hugo whispered, \"Breathe.\" He kneaded her shoulder and she felt some of the tension drain from her muscles.\n\nThere was a brief stab of pain, and his finger was past the tight ring of muscle. She inhaled sharply, remembered his admonition and let it out slowly.\n\n\"Very good,\" he said, stroking her head. He wiggled his finger a bit, not withdrawing it until he felt her relax again. Then he began to slowly move it. There was a little more pain the first time he pulled back, but it slipped forward again easily. As he slipped it in and out with a steady rhythm, Ramona felt her discomfort fade and a more pleasurable sensation spread through her. She wanted to touch her clitoris, but his legs were in her way.\n\nHe pulled his finger out and Ramona felt more lotion dribble on to her hole. He entered her again, and the pressure was greater, and she realized that he was inserting two fingers. As he pressed them in, she arched her back and raised her legs in the air.\n\n\"Put your feet down, girl,\" Hugo said, his voice firmer than it had been previously. Ramona lowered her feet and took another deep breath. She closed her eyes and winced as Hugo's fingers stretched her open.\n\n\"You can take it,\" he said. \"Spread your legs.\"\n\nShe obeyed, and was rewarded by his thumb sliding into her vagina. When it rubbed against her clitoris, she shivered and moaned loudly. When his fingers and thumb started moving together, she could not help raising her hips in sync with them.\n\nHer breathing became faster and sharper and she was nearing orgasm when Hugo slowed his motions, withdrew his thumb, and a moment later, his fingers. Ramona felt a moment of disappointment, but it was quickly replaced with anticipation when he leaned close to her ear and said, \"You are ready.\"\n\nHe took hold of her shoulders and guided her from his lap on to the mattress. She knelt on her knees and elbows as he stood up. She looked over her shoulder at him and watched as he took a condom from the bowl and unfastened his slacks.\n\nFor a second, she felt apprehensive that he would pull out a cock that was much too big for her to take, but when he took it out, she saw that it was, at most, a little above average. It was already fully swollen. He put on the condom, and then squirted lotion into his hand and stroked it. Patting Ramona on the hip, he said, \"Move more to the center, my dear.\" She did so and he knelt on the bed behind her. There was something about being naked before him while he remained fully clothed that excited her.",
        "He squirted more lotion on her hole and then, after adjusting his placement behind her, pressed the head of his cock again it. With gentle pressure, he pushed down on her upper back until her head and shoulders were resting on the bed.\n\nWhether he was trying to build up her anticipation, savoring the moment or giving her an opportunity to either prepare herself or call the whole thing off, he waited for several seconds, with his cockhead nestled against her anus. She took one more deep breath and as she let it out, he pressed forward.\n\nRamona almost pulled away as she felt her ass stretched open. But she squeezed her eyes shut, clenched the bedspread and held her position. When his cock bottomed out, Hugo rubbed her back and said, \"Very good, girl.\"\n\nHe withdrew all but the head, then drove forward again. Ramona felt herself begin to relax as she became accustomed to the pressure inside her. Hugo continued his slow, steady thrusts and her discomfort faded, leaving only a pleasurable feeling of fullness.\n\nHe grasped her hips and pulled her toward him with each forward thrust and she quickly began to move herself. He varied the lengths of his movements, alternating short, faster jabs with long, slow slides. Ramona's previous experiences with anal sex had all been fast, frenzied affairs, it was her impression that most men came quickly once they got their cocks inside a hot, tight ass. But Hugo took his time, seeming to savor each stroke.\n\n\"Oh god,\" Ramona groaned, \"Fuck me. Fuck my ass.\"\n\nHugo chuckled, said, \"Indeed,\" and bent down to grip her arms. As he moved her to a prone position, his cock popped out of her ass, and she whimpered in disappointment.\n\n\"Don't worry, my dear,\" he said, \"We are not done.\" He pressed her legs apart with his knees, then slid his cock back inside her, driving it all the way in with no hesitation or delay.\n\nRamona let out another loud moan. Hugo lowered himself down over her back. At first, his weight felt suffocating, but he propped himself up on one elbow. His other arm slid under her belly and his fingers found her clitoris.\n\nHugo had been nearly silent so far, but now, as their fucking became more urgent, his breathing grew louder and was interspersed with soft grunts and moans.\n\nRamona was awash in a whirl of sensations; the pounding pressure of his cock in her ass, the electric charge of his fingers on her clit, his enveloping weight on her back, the sounds of his passion in her ears. She came, and her orgasm was long and intense.\n\n\"Yes, my girl, yes,\" Hugo panted. Her hips spasmed and he cried out loudly, \"That is it, yes!\" He grunted loudly and slammed his loins against her ass in a frenzy. He gasped so loudly that it frightened Ramona, and then he collapsed limply on top of her. After a moment of catching his breath, he rolled on to his side, pulling Ramona with him into a spoon position.\n\nRamona realized that, without conscious intent, she had begun strumming her fingertips across her clit. She quickly brought herself to another orgasm, while Hugo held her tight. When it had subsided, she twisted around to look at him.\n\n\"Did I meet your expectations?\" she asked.\n\n\"You exceeded them, dear girl.\"\n\nRamona hummed in satisfaction, and kissed him.\n\n\"I hope you will be visiting Montreal more often. Perhaps Madame Isabel would allow me to take you away from her for a weekend.\"\n\nI don't think I could take a whole weekend of that, Ramona thought, but she smiled and kissed him again.\n\nHe sat up on the edge of the bed. \"I suppose I should return you to her now,\" he said.\n\nRamona stretched and then stood. Her legs felt wobbly and there was a persistent but not unpleasant ache in her ass, but she felt euphoric, as if she were drunk. She went into the bathroom to clean up.\n\nWhen she came out, Hugo was fully dressed and looking impeccable. Did he even break a sweat, she wondered. He took Ramona's hand and kissed it, then helped her into her dress.\n\n\"Thank you so much,\" he said, with a light bow. Ramona was not sure if the proper etiquette was to say 'you're welcome' or 'no, thank you', and before she could decide, he opened the door and escorted her from the room. He took her arm and walked her down the stairs. As they descended, Ramona noticed that many of the guests looked up at them. They all knew Hugo, she realized, and almost certainly knew his predilections. They all know that I just got fucked in the ass, she thought, and that notion gave her a thrill.\n\nHugo escorted Ramona to the bar and ordered champagne for them both.\n\n\"A toast,\" he said, touching his glass to hers, \"To a charming lady and her lovely bottom.\"\n\nRamona felt a hand pat her ass, and knew who it was before she looked.\n\nIsabel kissed her on the cheek and said, \"A little sore back there, mon Cherie?\"\n\nHugo said something in French and Isabel laughed. He kissed Ramona's hand. \"I must find out what has become of Julia,\" he said, \"Bonjour, ladies.\"\n\nIsabel perched on one of the bar stools.\n\n\"Come, ma belle, sit with me,\" she said.\n\n\"I'd rather not right now.\"\n\n\"Well, come to me, anyway.\"\n\nRamona stepped in front of her and Isabel draped her arms over her shoulders. They shared a deep kiss.\n\n\"How do you even get involved in a club like this?\" Ramona asked, \"How do you even know it exists?\"\n\n\"That is a long story for another time, cherie,\" Isabel said.\n\n\"So, am I a member of the club, now?\"\n\n\"Oh, dear one, the dues are much higher than a mere fuck in your butt. You could not afford to become a member. Be glad you have me.\"\n\n\"I always am. So, did you enjoy yourself with Daniel?\"\n\n\"Oui, but I am not feeling satisfied. I pleasured him, but he did not return the favor.\"\n\n\"Jerk.\"\n\n\"Oui. Alas, if there were only someone...\" She cocked her eyebrow.\n\n\"Ah, I think I know who that someone is.\"\n\nIsabel spread her legs and slid her dress up to her hips. Ramona dropped to her knees in front of her. Isabel gripped her hair in both hands and pulled her face between her thighs.\n\nAs she ate Isabel's pussy, Ramona was aware of people around her, chatting, getting drinks from the bar, occasionally speaking to Isabel.\n\nWhen she heard a familiar voice, Ramona looked up. Charles stood next to Isabel, his arm over her shoulders. They both looked down at her and smiled. Charles said something to Isabel that caused her to nod her head vigorously in response. A moment late she said \"Excusez moi, Charles,\" squeezed her thighs tightly around Ramona's head, and shivered to a climax.\n\nRamona stood and kissed first Isabel, then Charles. He said something that made Isabel laugh, then turned away.\n\n\"What did he say?\" Ramona asked.\n\n\"He said, Ah, the taste of two fine ladies.\"\n\n\"He seems like a very sweet man.\"\n\n\"He is one of my dearest friends.\" She looked away with a wistful expression for a minute, then said, \"Come, ma belle, we will go home to bed and fall asleep between kisses.\"\n\n****\n\nRamona woke up alone in Isabel's bed. She debated whether she wanted to get up or sleep some more. She closed her eyes and thought about the previous night, about Hugo and the Club Libertin. She wondered what it would be like to live in a big city like Montreal, to have a social life as carefree and exciting as Isabel's. But she knew that it was not really for her. She needed the woods; she would never truly be at peace anywhere else. Yes, she was enjoying the stimulation, erotic and otherwise, that she was getting on her visit to the city, but in her heart she would always be a country girl, always be, as Isabel had called her, a wild she wolf.\n\nShe heard footsteps approaching and opened her eyes to watch Isabel come into the room. She stood at the foot of the bed, her long blue silk robe open, her hands on her hips.\n\n\"Well the sleepyhead has awakened at last,\"she said, \"Mon Dieu, a little bit of buttfucking and you are depleted.\"\n\nRamona stretched and purred.\n\n\"I believe I know how to awaken you,\" Isabel said, yanking the blankets off Ramona, exposing her naked body. She knelt on the bed, pushed Ramona's legs apart and rubbed her thumb around her clitoris.\n\nRamona felt herself getting wet, and when Isabel pressed two fingers to her vagina, they slid in easily.\n\n\"This is better than an alarm clock,\" Ramona giggled.\n\nWhile she probed Ramona with her fingers, Isabel wrapped her lips around her clit and sucked it. Ramona closed her eyes and had a vision of herself at the club, kneeling before Isabel, giving her head while strangers came and went, some watching, some paying no attention. She imagined Hugo behind her, fucking her ass while she ate out Isabel. In only a few minutes, she loudly climaxed.\n\nIsabel stood up. \"Good,\" she said, \"Our tea is growing cold.\" She turned and strutted out of the room.\n\nRamona got up and opened her suitcase. She took out an extra large t-shirt emblazoned with the Forest Service logo and slipped it over her head. She went to the bathroom, then joined Isabel in the dining alcove.\n\n\"I had them deliver bagels and lox,\" Isabel said as she poured Ramona a cup of tea. \"There is cream cheese and sliced tomato and caviar as well. I hope you don't mind store bought salmon, I know you prefer to wrestle them out of the river yourself.\"\n\nThey sat at the table for the rest of the morning, sipping and snacking and talking about the previous night at the club. Later, they moved to the living room couch. Isabel pulled out a stack of gardening catalogues and they spent a long time making plans for her gardens in Maine. She had developed an interest in hydrangeas.\n\nRamona showed her a picture she had taken of the house on Merganser Pond on a sunny day after a snowfall.\n\n\"Mon dieu,\" Isabel exclaimed, \"I have never seen it in the snow. It is so beautiful.\"\n\n\"You should come down for a weekend.\"\n\n\"Non, it would be so much work. The water is not on, or the heat.\"\n\n\"You can stay with me.\"\n\n\"Don't you sleep on a cot in a barrack?\"\n\nRamona laughed. She realized that Isabel had never been to her cabin. She told her all about it, and about her landlady, Lucinda.\n\n\"She was a folk singer in New York?\"\n\n\"Yes. She said she sang with some woman named Joan Valdez.\"\n\n\"Do you mean to say Joan Baez?\"\n\n\"I think that was it.\"\n\n\"Mon dieu. Your whole generation needs public flogging.\"\n\nThey had coq au vin for dinner at a small French restaurant by the river. The food was delicious, but as she ate, Ramona found herself touched with a vague hint of melancholy. After they finished the meal, they sat, sipping pinot noir, and watched a huge freighter slowly pass the windows of the restaurant.\n\n\"When will you be leaving tomorrow?\" Isabel asked, \"I hope we will have more time together.\"\n\n\"I think I should get an early start. They're saying it will snow later in the day.\"\n\nIsabel allowed only a flash of disappointment to cross her face. She reached across the table, and took Ramona's hand.\n\n\"I hope you have had a wonderful time,\" she said, \"I have so much enjoyed having you here.\"\n\n\"I did.\" Ramona looked into her glass. \"You are so dear to me, Isabel.\"\n\n\"And you to I, mon cherie. But you seem sad. We will see each other in a few months.\n\n\"It's not that, although of course I will miss you. But something isn't right, and as I think about going home, it is becoming clearer in my mind.\"\n\n\"What is it what is bothering you, dear Ramona?\"\n\nRamona sat back for a minute, finding the words. \"Since I was a girl,\" she said, \"I had a goal. I knew what I wanted to be in life. And now, I am still young and I've achieved it.\"\n\nShe was silent for a moment, then added, \"Now I feel sort of lost.\"\n\n\"Is ranging not all you thought it would be?\"\n\n\"Well, Saw Whet is not exactly my ideal post. My dream has always been to work at Baxter State Park.\"\n\n\"Then your dream is yet to be achieved.\"\n\n\"I know that, and yet, I still feel blue.\"\n\n\"Something else is missing. Or perhaps it is just the long darkness of winter.\"\n\n\"I've lived in Maine all my life. Winter has never bothered me.\"\n\n\"Well you know my solution would be a new lover.\"\n\n\"You have more options here that I have in Saw Whet.\"\n\nIsabell laughed. \"I can send Hugo down to visit if your tender rear end is up to the challenge.\"\n\n\"I don't think more sex is really the answer.\"\n\n\"Well, perhaps you could take up knitting or learn to play the ukulele.\"\n\nRamona smiled and shook her head. \"I think it's just not wanting this wonderful weekend to be over.\"\n\n\"In which case, more sex probably is the answer.\"\n\n'Maybe you're right.\"\n\n\"If the weather is going to be bad tomorrow, you should stay another day.\"\n\n\"No, I can't. I'll need to leave first thing in the morning.\"\n\n\"Non, mon cherie,\" Isabel said, running her foot up Ramona's leg, \"Not the first thing...\"\n\nCHAPTER FOUR\n\nAs winter dragged on, there was very little for the rangers to do. Fire was not a threat, and, while the area still attracted a fair number of tourists, mostly snowmobilers and cross country skiers, they were, by and large, a more well behaved group than the summertime visitors.\n\nAfter several big snowfalls in December, January was sunny, dry and frigid. Ramona left home before sunrise every morning, and returned after it had set. She was grateful for the dazzling display of stars on those long dark nights.\n\nOn a particularly cold morning late in the month, Ramona was patrolling the Blackshaw Hill area. Passing under the power lines, she remembered the trapped bobcat the line workers had found in December. Trapping season was over, and any traps that were still set were illegal. She parked along the shoulder, zipped her parka up to her chin and got out of the jeep.\n\nHer cheeks burned from the bitter cold. She pulled her hood over her head for protection from the wind and walked up the slope, scanning under the tree line as she went. When she got close to where the trap had been, she spotted a red plastic ribbon tied to a low tree branch.\n\nMarked his spot, she thought, and sure enough, she found the trap, half covered in snow, beneath the ribbon. She squatted and examined it closely. There was a chain attached to it, which disappeared under the snow. The other end was hooked around the trunk of a small birch tree.\n\nHer first thought was to unfastened the chain and confiscate the trap, but she hesitated. Wouldn't the owner just replace it and keep on illegally trapping? Or, realizing he'd been found out, just move to another location?\n\nShe walked further up the slope. After fifty yards she considered turning back, getting out of the biting cold and warming up in the jeep. But she kept going, and a little further on, she saw another red ribbon. As she got close to it, she heard a faint mewling sound.\n\nShe felt sick in the pit of her stomach. A patch of tall grass poked out of the snow a few yards ahead of her. The grass was waving, but not with the wind. She approached it and saw a patch of orange fur.\n\nThere was a fox in the grass, both of its front legs caught in the trap. It was surrounded by spatters of blood and tufts of fur. It has been trying to gnaw off its own legs.\n\nThe fox startled at Ramona's approach. It tried to rear back, but could barely lift its head. She knelt in the snow next to it and examined it more closely. The nearest veterinarian who would treat wild animals was a couple of hours away. It wouldn't live that long.\n\n\"You poor baby,\" she muttered. She took her utility knife from her pocket and opened it. She gripped the animal's head in her gloved hand. \"You won't hurt any more, baby,\" she said, and with one clean slash, cut the fox's throat.\n\nShe dug her phone out of her pocket and took several pictures of the fox and the trap, thinking they would be evidence if the trapper was ever caught. Looking up and down the tree line, she thought she ought to check for more traps, but it occurred to her that she might have already ruined any possibility of catching the culprit. Unless it snowed very soon, her footprints would be visible, and there was no snow forecast for at least the next four or five days.\n\nUnsure how to proceed, she called Piney on her phone. She did not use the radio, because she didn't want to discuss the issue with Lt. Bebb. She was afraid he'd tell her not to worry about it.\n\nPiney answered and she explained the situation.\n\n\"You done the right thing putting the critter out of its misery,\" he told her.\n\n\"Should I check for more traps?\"\n\nPiney thought it over for a minute. \"No,\" he said at last, \"They are there, alright, I'd bet on that. So I don't see no reason for you to freeze your...to freeze checking to see right now.\"\n\n\"We can't just let this go, Piney.\"\n\n\"And we won't. What you're going to do now is get the fox out of the trap and take it with you. But don't take the trap.\"\n\n\"I don't get it.\"\n\n\"When our man comes back and sees your tracks he's gonna know someone was there. If his traps are gone, he's going to figure it was one of us. But if the traps are still there and his catch isn't, he might just think someone stole it. Might even pitch a fit about it and give himself away.\"\n\n\"Seems like a long shot,\" Ramona said.\n\n\"Didn't say it was all we'd do,\" he replied, \"Now go get warmed up.\"\n\nRamona pried the jaws of the trap apart and gently lifted out the fox. Cradling it in her arms like an infant, she carried it back to the jeep and laid it behind the back seat.\n\n\"I'm sorry,\" she whispered as she closed the hatch.\n\nPiney was waiting for her at the station the next morning. He had a trailer hitched to the back of his jeep. There were two identical snowmobiles on it.\n\n\"I assume you can drive one of these,\" Piney said.\n\n\"Of course, I can.\"\n\nPiney smiled. \"Maine girl.\"\n\n\"Damn right,\" Ramona said as she climbed into the jeep.\n\nThey got coffee and doughnuts and headed toward Blackshaw Hill. Before they reached the power lines, however, Piney turned off onto a narrow dirt lane.\n\n\"Where we going?\" Ramona asked.\n\n\"This cuts under the power lines about two miles up from where you found the traps. I figured if we ride down the hill, instead of going in by the trap you found, we will be able to see if he's got more traps all along the line, but it will look like it was just a couple of kids out for a ride.\"\n\n\"Okay.\"\n\n\"Now, check in that canvas bag on the back seat.\"\n\nRamona looked over the seat and saw the bag. She reached back and grabbed it, then opened it in her lap.\n\n\"Game cams,\" she said with a smile.\n\n\"They don't call us the Tree Police for nothin',\" Piney said.\n\nWhile they unloaded the snowmobiles, Piney explained his plan.\n\n\"I'll ride along the left side of the lines, you ride on the right. The traps will likely all be on your side, and you've got sharper eyes.\"\n\n\"Why would they all be on my side?\"\n\n\"It's the side out of the wind, they're less likely to get buried by drifting snow.\"\n\n\"Makes sense.\"\n\n\"Now, look for the ribbons, but don't go near them. Just try to keep track of where they are. Remember, we are just two kids out having fun. Loop around, go back and forth. We will rendezvous at the road, then, coming back up, we will switch sides and you can point out the traps and I'll mount the cameras.\"\n\n\"Why don't we just do it on the first pass?\"\n\n\"Because we want to know how many traps there are first.\"\n\nThey mounted the snowmobiles and started the engines. The wind had leveled the snow along the roadside, so the passage on to the power corridor was smooth. The corridor itself was not. Although it was cleared to allow access to the lines, it was bumpy terrain. There were no large trees, but there were many saplings and a great deal of low brush. Ramona thought that Piney's instructions to ride back and forth were pointless, the terrain offered no other option. But, it made sense to disguise their purpose, so the first time she reached a large enough clearing, she spun the snowmobile around in circles a couple of times."
    ],
    "authorname": "MelissaBaby",
    "tags": [
        "adventure",
        "lesbian",
        "bisexual",
        "group sex",
        "anal",
        "spanking",
        "sequel",
        "outdoors",
        "maine"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-adventures-of-ranger-ramona-ch-02"
}