{
    "title": "Lilith's Emporium Pt. 04: Night w/Nessira Ch. 04",
    "pages": [
        "It was an old abandoned warehouse outside the city. Nessira stood outside staring at it rolling her eyes as to the cliche nature of this whole arrangement. She could sense multiple people in there and even smell the magic on them. She knew her charm wouldn't work here as whoever this guy was had placed a spell on his so-called guards so she couldn't harm them, at least in the way she usually would but she wasn't sure if it was them or the building.\n\nShe pondered for a moment before she decided to head on inside. She wasn't too worried as she did have an invitation and also a backup plan should things go bad but she had left her heart at home knowing t would only get in the way. When she removed it, it didn't destroy her feelings for Patrick, it only made the pain more manageable and let her get on with what she needed to do. Having a heart in her line of work wasn't good for business. If she started to care for every customer she had none of them would be able to feed.\n\nShe opened the front door and saw a long corridor that was barely lit. She laughed out loud a little when she saw armed guards along the walls wearing riot gear. They were obviously under this Warlock's control but she couldn't help but see the humor in this whole situation. She walked passed them barely giving them any attention at all as she saw a red door at the end of the hallway. She knew Patrick must be in there with his captor whoever he was. Nessira wasn't sure what to expect but she knew she would make this man pay for what he has done.\n\nThe doors opened on their own as she approached them and stepped inside. She was a bit surprised to see the room set up like a large living room with a fireplace lit on the wall. There was an empty chair in front of her with another facing the fireplace. She could see someone sitting in it but his back was facing her.\n\n\"Please sit, we have much to discuss.\"\n\n\"Yeah, I just came for my belongings.\"\n\n\"Please, I insist, there is no reason we can't be civil about this.\" He said turning around to face her.\n\nNessira laughed again seeing this man with a goatee sitting this in a robe smoking a pipe smiling at her. It took her a minute to compose herself before she said. \"I'm sorry, should I call you Mr. Strange, or is it Doctor?\"\n\n\"I have always found your sense of humor charming.\"\n\n\"You say that like I am supposed to know who the hell you are.\" Nessira said finally taking a seat across from him crossing her legs and getting comfortable. \"Can you at least tell me your name?\"\n\n\"You can call me Joshua.\"\n\n\"Okay Joshua, the guards are a bit much aren't they?\"\n\n\"Oh them, they are just there to make sure none of your friends show up.\"\n\n\"I don't have any friends.\"\n\n\"What about Victoria, or Rick, or even Lilith herself, I have them all under an enchantment that makes it impossible for you to harm them.\"\n\n\"Can we get to the point, I don't have all day, who the hell are you?\"\n\n\"Oh, I didn't think you would remember me, but no matter, as I said we have much to discuss.\"\n\n\"Well let's get on with it, I came here for Patrick and to end you if you have harmed him.\"\n\n\"I'm sure you have, you see I have waited for this moment for a very long time, the last time we met I was just a young lad.\"\n\n\"I see, sorry I don't sleep with underage men.\"\n\n\"Lovely, but no I am not a jealous man who wants revenge for being turned down, this is far more personal.\"\n\n\"Interesting, not very but you have my curiosity at least.\"\n\n\"You see, I am much older than I look, much like you, only age has taken more of a toll on me than you.\"\n\n\"Moisturizer helps.\"\n\n\"Yes, any way you see there is a day I'm sure you remember quite well, I don't because I wasn't there, I had left to go to another village.\"\n\n\"Village?\"\n\n\"Yes, and when I returned home I found it ablaze along with the rest of the town and my family dead!\"\n\nNessira sat there and listened starting to wonder who this man was and what exactly he was speaking of. She knew it had to have been that day when Sebastian died but it wasn't possible, it couldn't be possible.\n\n\"So many lives lost and then who should I see in the center of all this death and violence but you in the arms of your so-called mother crying over a broken heart, the Red Witch of Raven Hill losing her lover and in return destroying all the people who cared about her.\"\n\n\"I think we are done here,\" Nessira said standing up from her chair.\n\n\"I don't think so, you see you and I have some unfinished business.\" He said standing up out of his chair and walking over to the corner where there was something covered by a sheet that she was pretty sure wasn't there before. \"You see you took something from me, and I just want to return the favor.\" He said pulling off the sheet to reveal Patrick tied up with tape over his mouth. She could see his cheek was swollen from where the tooth was pulled along with a few other bruises on him.\n\n\"I am going to slaughter you!\" Nessira said as she went to lunge towards him but realized she could only move about three feet in any direction. \"What, what is this?\"\n\n\"You silly girl, beneath that rug is a succubus trap, similar to a demon trap with a few adjustments I made myself, you see after you left town I searched your house or what was left of it and found this.\" He said pulling out an old magic book she had long ago. \"And with this, I learned so much, like how to keep myself alive long enough to exact my revenge. Now don't worry, I sought out other magical creatures and have spent the last 2 centuries learning everything I needed to know.\"\n\n\"I am going to kill you.\"\n\n\"I'm sure you will, and I welcome it, but not before I take from you like you took from me.\"\n\n--\n\nThe guards stood in the hallway ready for whatever would come their way or so they thought. They had a spell on them that protected them from Succubi and Incubi as long as they were in the building however there was something stalking them that no spell had been invented yet to protect them from.\n\nThe lights began to flicker a little as one of the guards said: \"what going on?\"\n\n\"It's an old building, what do you expect, don't worry her friends can't hurt us.\"\n\n\"Ahh.\" A scream was heard down the other end as they turned and saw a gun on the floor and one of their comrades on the floor.\n\n\"Go check it out.\"\n\n\"I thought you said they couldn't...\"\n\n\"I know what I said, now go!\"\n\nOne of the guards headed down with his gun drawn looking around. He could see a gun on the floor and the guard there apparently dead with his pants open and his cock out fully erect and dripping with cum. He glanced up to see the vent cover to the air duct system was hanging open. He stepped closer and pointed his weapon up inside firing a few shots but hitting nothing but metal.\n\n\"I don't see anything.\" He said before he noticed a few red flashes out of the corner of his eye and looked back down the hall seeing everyone else was laying on the floor apparently unconscious or worse. \"Guys, what the fuck?\" He said as he looked all around starting to panic noticing they were all in the same position as the first guy, dead but with their cocks out. \n\nHe started wondering if he should run to the other end and try to warn his boss or run out the front door. He turned a few times with his gun drawn looking all around until he spun around and saw what looked like a woman standing in the middle of the hallway. The lights were out except for a few so it was hard to see who it was but he trained his gun on her and stepped towards her slowly.\n\n\"Identify yourself?\" He said stepping closer and closer. \n\nHe noticed she had what looked like 2 horns on the top of her head and bright red hair. She wasn't very tall without the horns but she looked strange. Her skin was a grey color and she was wearing a black leathery looking dress and her eye's had a yellow glow to them. She didn't move and just stared at him with her hands behind her back like she was more curious about him than afraid.\n\n\"Don't move, show me your hands.\" He said as he watched a long tail curl out from behind her. \"I mean it, I'll give you to the count of three.\" She began to growl a little almost like she understood his threat which made him a bit nervous. \"One,\" he said as she began to crouch down as if ready to strike. \"Two.\" Before he could get to three she lunged at him as he opened fire.\n\nHe stood there for a moment as she was gone and he seemed unharmed until he turned around and saw her standing a few feet behind him. He noticed her tale was extended towards him and as he followed it he saw it was wrapped around his erect cock which she had been able to pull out of his pants faster than he could have noticed.\n\n\"Holy shit!\" He said realizing she had him in a bad position and that his gun had been knocked out of his hand as well.\n\nHe saw what looked like red veins in her skin began to glow at the base of her spin before the light began to travel down her tail towards his cock. He didn't know what to do or what she was doing and could only watch as the light got closer to his member. When it reached the part of her tail that was coiled around his cock he felt strange and his cock began to glow as well.\n\n\"What the... fuck!\" He said as she stepped closer to him.\n\n\"Don't worry, I had to rush with them but you will have time to enjoy this.\" She said with a grin before she kneeled down in front of him with her mouth open.\n\nSeconds later his cock suddenly erupted what felt like gallons of cum towards the predator in front of him as she tried to catch as much as she could in her mouth. She finally moved closer and wrapped her lips around the tip of his cock. It was a strange feeling but very pleasurable as his member didn't stop. His knees buckled and he fell to the ground as every last drop of him spewed out until there was nothing left but a dried up corpse with a smile on his face.\n\nShadow had her fill before she let go of him and headed back down the hall to her master. She sniffed around the door and peeked inside checking out the situation unfolding. Realizing that going through the door would be foolish she climbed back up through the vents and decided to enter that way.\n\n--\n\n\"He has nothing to do with this, he doesn't even remember me, I wiped his memory.\"\n\n\"Oh yes a clever little charm that was easy to undo, I have also been filling him in on what else you've been doing, like how you murdered Jenny and took her body, how the first time you met him your intention was to kill him until you changed your mind even though you're not even sure why, I also told him about what you did to our village all those years ago.\"\n\nNessira looked over at Patrick who could barely keep his head up. She could see how tired and hurt he was and she just wanted to run to him but she was still stuck in the stupid trap.\n\n\"But here's the best part, I told him who he was as well.\"\n\n\"What are you talking about?\"\n\n\"Oh, you don't know? Did you ever wonder what it was you saw in him, why he was able to satisfy you?\"\n\n\"It doesn't matter!\"\n\n\"Actually it does, why would Nessira the Red want to spare the life of some random meal? That's not like you, you have only ever loved one man, ever!\"\n\n\"What is your point!\"\n\n\"Sebastian, you remember him don't you?\"\n\n\"Don't say that name to me!\"\n\n\"Why not? Don't you see it?\" He said grabbing Patrick's hair and pulling his head back so she could see his face. \"This pitiful excuse of a man before you is the reincarnation of your lover from long ago.\"\n\n\"...You're lying!\"\n\n\"Am I, why do you think you removed your own heart? Because you have felt this feeling before and it scared you, you are afraid of love because you were hurt before, so that is the gift I am going to give you Nessira, I am going to kill him while you can't feel it!\"\n\n\"No!\"\n\n\"What was that?\"\n\n\"Don't do it, it's me you want, just please don't hurt him!\"\n\n\"Interesting, I have never seen you beg before, this is a rare moment, but unfortunately for you what I want is for you to suffer, to pay for your actions and feel the loss that you inflicted upon me all those years ago.\"\n\nHe stopped when he suddenly heard a strange noise above him. It sounded like something scurrying around in the vents above. \n\n\"Damn rats!\" He said before he pulled out a blade and held it to Patrick's throat. \"Now is there any last words you would like to say to him before I end his life?\"\n\n\"Please!\"\n\n\"Don't talk to me, talk to him!\"\n\nWhat he didn't notice was a long dark tail moving its way down from the vet above and wrapping around his neck. Nessira saw it and tried to not get excited as he was seconds away from slitting Patrick's throat.\n\n\"Well, any last words?\" He asked again.\n\n\"I do, Now!\" Nessira said as there was suddenly something tightened around his throat pulling him up towards the ceiling.\n\nShadow had him but Nessira was still trapped and Patrick could barely move. She was wondering what to do with her captive but before she could act she felt a sharp pain as his jammed the knife into her tale causing her to let go.\n\n\"What horrible creature is this!\" He said standing back up after catching his breath.\n\nShe was in pain but jumped down and knocked Joshua back before he landed on the floor and she ran to her master examining her situation. She lifted up the rug and saw a strange symbol painted on the floor below it.\n\nNessira looked at Shadows tail and ripped off a small piece of her sleeve and wrapped it around her wound while Shadow looked on a little confused. \"Dammit, we need to break this trap,\" Nessira said but that would be difficult as it was a concrete floor.\n\nShadow looked around and ran out of the room only to return seconds later with a small metal hammer before jumping and with a strength, Nessira wasn't expecting she slammed it on the ground breaking the concrete and the symbol freeing Nessira.\n\n\"Wow, good girl!\" She said as she was finally free.\n\n\"I may not have planned on your little pet but it doesn't matter.\" He said standing by the doorway before he chucked the blade across the room.\n\nHe must have put some sort of spell on the blade as neither Nessira or Shadow were quick enough to stop it before she watched it fly into the center of Patrick's chest. She stopped for a second unable to believe what she was seeing as Patrick let out a bloody cough. She could see the pain in his face as she ran to him not sure what to do and starting to panic a little.\n\n\"Oh god, oh fuck no, no no no!\" She said afraid to pull the blade out and cause more damage. \"Oh shit, stay with me, Patrick!\"\n\nShadow watched Nessira as she untied Patrick from the chair and laid him gently on the floor trying to comfort him before she turned and picked up the Warlocks scent and ran to catch him. Nessira watched Shadow as her back legs changed a little and she crouched down on all fours to run after him. Nessira didn't know she could do that and was concerned for her but more concerned for Patrick.\n\n--\n\nJoshua was up on the roof about to cast a spell to open a portal to get him far away from here. He had gotten what he wanted and knew eventually Nessira would come after him but he was not too concerned about it as Succubi and Incubi were easy to best given his skill and time to prep. What he hadn't planned on was the creature she had brought along with her. He could not sense her and wasn't even sure what she was.\n\nHe took out a small book and began to say the words needed to open his exit when suddenly he felt something wrap around his arm and pull the book from his hand. Confused he turned and saw Shadow standing there with a bloodthirsty look in her eyes.\n\n\"You are an interesting creature, I could not sense you coming. You seem to be some sort of forest nymph but much more than that, there is a darkness inside you isn't there? You haven't even tapped your full potential and I doubt you ever will living with that red headed whore!\"\n\nShadow watched him and listened to what he was saying. She did understand what he was saying but she didn't see him as anything more than a meal and someone that she wanted revenge against for stabbing her tail and Nessira wanted dead as well which she was more than happy to oblige.\n\n\"Do you even understand what I am saying or are you just a stupid mindless animal.\"\n\nShadow looked past him and then back into his eyes smiling before she turned around and began to run returning to her master.\n\n\"Where are you going, we have much more to...\" he stopped when he suddenly heard something behind him and a large shadow blocking out the light from the roof across the way realizing he was no longer under any protection outside the building. \"What is this?\" He said as he slowly turned around and saw a large creature with wings and red eyes glaring down at him.\n\n--\n\n\"Patrick stay with me, please you can't,\" Nessira said still trying to comfort Patrick while thinking of a way to save him.\n\nNessira wasn't sure why she was feeling this way without her heart. She was sad, panicked, worried, all the things she had removed the heart from herself to prevent but it wasn't working. She knew then that Patrick was special and now he was dying in her arms.\n\nSuddenly the door flew open and she saw Victoria standing there before she looked over and ran to Nessira's side. She looked over the man on the floor with a blade sticking out of his chest not sure who he was or what had happened.\n\n\"Oh my god, what happened, who is he?\"\n\n\"Please, we have to help him, you've done it before, like you saved Rick!\"\n\nVictoria examined him sensing something strange. \"That... that was different, this knife has some sort of dark magic on it, whatever happens, it will destroy his heart the moment I try to remove it.\"\n\n\"Please, we have to do something!\" Nessira pleaded with tears in her eye's.\n\nVictoria was shocked to see Nessira like this. She had always seen her as a horrible person who didn't care about the lives of others but now she was here crying and begging her to help her save a man's life. It was a lot for Victoria to take in but she tried to think of something.\n\n\"Nessira I wish I could but there is nothing I can do, I can't repair the damage.\"\n\n\"What about a replacement?\" Nessira said getting an idea.\n\n\"What do you mean?\"\n\n\"What if I had a heart to replace his?\"\n\n\"That might work, but I'm not sure.\"\n\n\"Help me, we have to get him back to Lilith's.\"\n\nVictoria helped her pick him up and bring him outside so they could teleport there. This building had a magic suppression spell on it so their powers were limited. Nessira saw Shadow come running up next to her.\n\n\"Did you get him?\" Nessira asked.\n\nBefore Shadow could say anything Victoria said: \"Rick has him, we will deal with him later but first let's save your friend here.\" \n\nOnce they were outside Victoria cast a spell that brought them back to Lilith's. They were in the showroom and they gently placed Patrick down on the floor before Nessira ran upstairs. Victoria stayed with Patrick trying to keep him conscious not sure exactly what Nessira was doing until she ran back in with a heart in her hand.\n\n\"Whose heart is that?\" Victoria asked.\n\n\"It doesn't matter just save him.\"\n\n\"Fine.\" Victoria said as she took the heart and grabbed the handle of the knife before she began to chant an ancient language Nessira had not heard in a long time.\n\nNessira watched her remove the knife and place the heart on the wound as it flowed inside him. She was mad that Lilith had taken her power away and given it to Victoria because she could have saved him herself but at the same time, she was grateful that she was doing this for her after everything she had done to her and to Rick.\n\n\"There, I've done all I can do, it's up to him now.\" Victoria said\n\n\"What do you mean?\"\n\n\"His body still has to accept the heart, its like surgery, he could still reject it.\"",
        "\"It will accept it, it belongs to him anyway.\"\n\nVictoria dropped the knife on the floor as she watched his wound disappear. She looked at Nessira who was holding his hand and appeared to be watching him to make sure he was alright. Victoria was still confused by how Nessira was acting today and started to see her differently.\n\n\"Thank you,\" Nessira said taking her hand and holding it for a moment.\n\n\"Yeah, okay so this has been an odd fucking day, but you are welcome. By the way who is he?\"\n\n\"He's... it's a long story, but first, where is Joshua?\"\n\n--\n\nJoshua opened his eyes and looked around. He was in a dark room unsure where he was and tied to a chair. He could hear someone breathing and saw a large demonic form standing in the darkness in front of him with two red eyes staring down at him.\n\n\"Rick I presume, pleasure to meet you. Why haven't you just killed me yet?\"\n\n\"It is not my place to do so, but don't try me.\"\n\n\"Why are you helping her anyway? Didn't she make the love of your life stab you in the heart, then try to make you choose her over Victoria? You think that's even the worst of what she has done?\"\n\n\"I know she has probably done unspeakable things to many people, and maybe she even deserves what you have done to her, but I made a promise to look after her and I am a man of my word!\" He said in a low demonic voice glaring down at him.\n\n\"What, to Lilith? She's the worst of you all, hundreds of people died and all she did was comfort her sweet little Nessira while the bodies burned.\"\n\n\"You're right!\" Nessira said as she walked out of the darkness. \"I have done terrible things, I am a monster, I know what I am and I don't deny it, and Rick's right, maybe I do deserve this, maybe I deserve everything you have done, but Patrick didn't, and neither did Sebastian.\"\n\n\"I didn't kill Sebastian, and those people didn't deserve the wrath of a woman scorned that you brought upon them.\"\n\n\"You're right, and I'm sorry.\"\n\n\"Is that supposed to make everything all better? Is that supposed to bring my family back to me?\"\n\n\"No, we can't bring your family back, but I can send you to them.\"\n\n\"Oh, if you think I would ever lay with you, you are wrong, as talented and beautiful as you are I refuse to go out that way.\"\n\n\"Oh no, you will not die by my hands, but by hers,\" Nessira said as Shadow emerged from the darkness naked and walking towards him.\n\n\"Wait, what... what is she going to do to me?\"\n\n\"That depends, she can be very gentle but if you try to harm her, things can get a little bloody, besides she is still mad about you stabbing her.\"\n\nHe felt her tail on his lap caressing his thigh. He couldn't help but get a little turned on but he was still nervous because he didn't know what this creature was or what it could do to him.\n\n\"You think I am the only one who wants revenge, there are others like me, and one day you will get what's coming to you Nessira the Red!\"\n\n\"Oh I'm sure they will try, and when they do I will be waiting for them.\"\n\n\"With what, the rest of these freaks?\"\n\nNessira looked at Shadow then to Rick, then to Victoria standing in the darkness watching before she looked back at him and said: \"You mean my family?\"\n\nAll of them were shocked to hear what Nessira had said. Shadow even looked over at her hearing what she had just said and felt a warm feeling come over her. She had looked to Nessira almost like a mother but never thought she would ever see her as anything but a pet. Nessira smiled and ran her fingers through Shadows hair a little.\n\n\"They are all I have, especially her,\" She said still stroking Shadow's hair.\n\n\"You will pay for this.\"\n\n\"I know, Now you two have fun.\" She said as they left him alone with this creature in the dark.\n\nJoshua could not see anything and could only hear Shadow breathing as he felt her slice open his pants. He wasn't sure what pleasure or hell awaited him but he knew when it was over he would see his family again.\n\n---\n\nPatrick awoke laying in a comfortable bed in a familiar room. The walls were covered with red curtains and he realized where he was. He looked down and saw a scar on his chest from where he was stabbed along with some other injuries. He was still very sore but had bandages on him like he had been cleaned up.\n\n\"How do you feel?\" A woman's voice he recognized said from the side of the bed.\n\n\"Like I was beaten up and stabbed in the chest.\"\n\n\"I am so sorry about all of this.\"\n\n\"Why did you make me forget about you?\"\n\n\"Because...\"\n\n\"Okay, because why?\"\n\n\"Look, I was in love once.\"\n\n\"I know, I saw those memories.\"\n\n\"But when he died I swore I would never love again, then you screwed that up.\"\n\n\"Wait, are you saying?\"\n\n\"I don't know what I am saying, I don't know what I am feeling, I am a monster, I have killed so many people, I tried to make a woman kill the man she loved just to free me, I have sold countless artifacts to unsuspecting people not caring about to consequences, but you...\"\n\n\"But me what?\"\n\n\"You bring out the best in me, you make me feel like the woman I used to be, and I don't like it.\"\n\n\"Okay, so you don't want me around?\"\n\n\"I don't know what I want.\"\n\n\"Well, maybe I can help with that. I mean I was almost killed because of you, I met you and started to fall for you and then you wiped my memory and threw me away. Some crazy guy starts telling me all these horrible things you've done not only to me and Jenny, but to others.\"\n\n\"Listen, about Jenny...\"\n\n\"I mean you took over my ex-girlfriends body and then seduced me, what kind of person does that?\"\n\n\"A monster.\"\n\n\"Exactly, a horrible creature that doesn't deserve my forgiveness.\"\n\n\"I know.\"\n\n\"But the worst part is for some fucking reason that I can't even comprehend or explain, I forgive you.\"\n\n\"What?\"\n\n\"I forgive you.\" He said sitting up and trying to stand. \"I don't know why or how, but I don't want to leave, I don't want to forget, I want to be here, with you.\"\n\n\"That's crazy.\"\n\n\"It's insane, I have every reason to hate you but I can't, I don't even want to.\"\n\nNessira could not believe what she was hearing. When she was close to him she could feel her heart inside of him and the emotions she tried so long to avoid but this was the answer she needed maybe. All this time she wasn't sure how she could be what she was and still be with him but now that her heart was beating in his chest she could be everything he needed her to be and still be what she always was.\n\n\"I, I think I...\" she said\n\nBefore she could finish her sentence Patrick had pressed his lips to hers pulling her close. She tasted just as sweet as he remembered and didn't want to stop. He knew what she was and what she had done but he didn't care. He wanted her and she wanted him and there were a lot of things they both needed to work out but none of that matter now.\n\n\"Ouch, shit.\" He said pulling away.\n\n\"You dummy, you're still in rough shape, here lay down and relax.\" She said gently pushing him back down onto the bed\n\n\"Ugh, I feel like the pitiful man Joshua described.\"\n\n\"You are 100 times the man he is.\"\n\n\"Is it true, what he said about me, being your reincarnated lover?\"\n\n\"I honestly don't know, but it really doesn't matter to me anyway.\" She said lying down on top of him kissing him again.\n\n\"I just hope you aren't expecting me to be him.\"\n\n\"I expect nothing from you except just you.\"\n\n\"I can do that, what do you even see in me anyway?\"\n\n\"Let's not go there, just give me a good fucking.\" She said kissing him again.\n\nShe tried to be as gentle as possible but eventually, it got to the point that he didn't care about the pain. He rolled over on top of her pulling off her dress as she reached for his belt pulling his pants open. Her hands slid along his cock as it stiffened. Fortunately, that part of his anatomy was unharmed and he jammed it inside her without hesitation.\n\nNessira let out a moan as she had missed this feeling. Nobody has been able to pleasure her as well as him and she was glad to have him inside her again. He pressed his lips against her skin tasting every inch of her from her neck to her breasts. He didn't remember anything from his past life but she felt like home to him as he sucked her nipples and traced his tongue all over her.\n\nNessira wrapped her arms around him before rolling over on top of him. She moved her hips tightening herself around his cock as he filled her. Her moans grew louder as she felt no need to restrain herself anymore. Her wings sprouted from her back along with her tale. Patrick was not shocked at all to see her transformation, in fact, it turned him on even more. He saw her fangs and two small horns that had sprouted from her head. Her eyes had turned red as well and she began to trace her long lanced tongue across his chest before shoving it back into his mouth.\n\nPatrick felt something strange as her tail wrapped around his cock squeezing it as she continued to fuck him. The sensation was strange but also very pleasant as it was soft and warm. The tip tickled his balls a little which sent waves through him making him moan out. He couldn't feel the pain of his injuries anymore as all he could feel was the pleasure. He slid his hands up her sides before grabbing and squeezing her breasts. He felt her nipples perk up in his palms as she grabbed his wrists and pressed his hands harder against her.\n\nNessira let out a shriek as he felt her pussy tighten around his cock as her juices began to flow soaking his member. Nessira was confused as she had never orgasmed before the man she was fucking and he was still going which just made her pleasure last longer. She soon felt his cock swell and watched as he bit his bottom lip as if ready to pop and she braced for it. He let out a yell and thrust his hips up as he felt his seed explode from within filling her like never before. She savored every moment of this feeling before she collapsed against him covered with sweat.\n\nShe laid there for a moment until she felt his hands stroking her hair. She wrapped her wings around them both sliding up and laying her head on his shoulder as he wrapped his arms around her. They laid there for a while just enjoying each other's embrace.\n\n--\n\n\"What is half this shit anyway?\" Rick said as he walked around the shop looking at all the statues, powders and other strange stuff. \"Anything in here you wanna try?\"\n\n\"Why, is our sex life boring you?\" Victoria said from behind the counter.\n\n\"You're joking, right? At least nobodies died recently.\"\n\n\"You know every time someone dies we get their life force?\"\n\n\"I know, I just try not to think about it, I know, an Incubus with a conscience, that's just crazy right?\"\n\n\"That's one of the reasons I love you.\"\n\nSuddenly the door opened and a woman came walking in with blonde hair. At first, Victoria didn't recognize her as she had never seen her in human form but soon realized who it was.\n\n\"Lilith?\" She asked as Rick turned around.\n\n\"Hello, my child.\" She said stroking Victoria's face before turning to Rick and smiling. \"How is she?\"\n\n\"She is... I don't really know how to answer that, she's upstairs with Patrick right now after replacing his heart.\" Victoria said.\n\n\"Really, there is hope for her yet.\"\n\n\"I saw a side of Nessira I had never seen before, she was crying and begging me to help her save him, even thanked me when I did.\"\n\n\"Nessira is someone I love like a daughter, she was once such a sweet girl but dark things happened to her, she lost the love of her life once and I was there to see what it did to her.\"\n\n\"Is that what this Joshua guy was talking about?\"\n\n\"I'm afraid so, but I know that girl is still in there, that's why I wanted you to look after her, and now her heart is in Patrick.\"\n\n\"Wait, that was her heart?\"\n\n\"She removed it to spare herself the pain of love, and it ended up saving her loves life.\"\n\n\"Wow, I did not see that coming.\"\n\n\"She is full of surprises,\" Lilith said placing a kiss on Victoria's lips and then doing the same to Rick. \"I may come to visit soon.\" She said before she vanished and Rick and Victoria stood there a little confused but very turned on as they stared at each other.\n\n\"Lock the door!\" Victoria said.\n\n\"Done,\" Rick said before running back over to her pressing his lips to hers before they fell to the floor in each other's arms.\n\n--\n\n\"No fucking way?\" Patrick said as he and Nessira were still laying in bed together.\n\n\"I am dead serious, why do you think she breaks up with guys so often, it's so she doesn't fuck them to death,\" Nessira said back in her human form.\n\n\"So can all succubi sing or just her?\"\n\n\"No that's just her, you don't want to hear me sing, but yeah she's a succubus hiding in plain sight.\"\n\n\"Wow, so I thought it was a one and done thing when it came to sex with a succubus?\"\n\n\"We can learn to control it and just take what we need, I just never did, but if I invade their dreams I can usually spare their lives.\"\n\n\"Thank god for those condoms then, so who else?\"\n\n\"Well, you know that club in the city that has the whole supernatural theme going?\"\n\n\"Yeah, I can't remember the name of it.\"\n\n\"Well don't go in there, well not without me anyway.\"\n\n\"Is that a date then?\"\n\n\"Maybe.\" She said before she was silent for a while.\n\n\"So what happens now?\"\n\n\"I don't know, as I said before, I am a monster, I have done some horrible things and I still have to do those things from time to time.\"\n\n\"I see.\"\n\n\"I know its hard to wrap your head around all this but I would like you to stick around, if you want?\"\n\n\"Well, I have your heart in my chest so it would be rude if I didn't.\"\n\n\"But can you accept all of this?\"\n\n\"I think I can try at least, I don't want to lose you, even knowing what you are, maybe just don't tell me all the details.\"\n\n\"Deal, I will be there whenever you need me, or want me, with you I feel different, that's why I gave you my heart, because it belongs to you.\"\n\n\"Are you getting all sappy on me? I kinda prefer the slutty deadly woman who lures men to their death.\"\n\n\"Oh really?\" She said tracing her fingers along his chest. \"I can definitely be her.\"\n\n\"Okay then, but sweet you isn't bad either I guess, so I think we can find a balance.\"\n\n\"Just not during business hours, it's easier for me to sell stuff when my heart isn't around making me feel guilty.\"\n\n\"I will do my best, I don't live too far away.\" \n\n\"Well if you ever miss me I have a certain DVD you can borrow.\"\n\n\"I prefer the real thing.\" He said rolling over and kissing her again.\n\n\"Ooh, wait, I should go check on our guest!\" She said jumping out of bed and sliding her dress back on while Patrick stared. \"What?\"\n\n\"Nothing I just prefer you naked, and watching you get dressed without snapping your fingers, it's just kind of strange.\" \n\n\"Well you can help me take it off again later if you want, or I can just snap my fingers.\" She said leaning down and kissing him. \"wait here.\"\n\n\"Why?\"\n\n\"Because I don't want my heart near me if he's still alive.\" She said heading downstairs to see what Shadow had done with Joshua.\n\nWhen she got downstairs she could hear some moans of passion and saw some clothing on the counter. She glanced over and realized that Victoria and Rick were on the floor behind it the register having their way with each other. She smiled before she turned towards the room to the back of the store.\n\nThe door opened shining a little light in the room as she stepped inside. She saw Joshua's feet in the light and then two yellow eyes look over at her from the darkness. Nessira turned on the light and saw him with no pants on and his cock in the air dripping with cum and other juices before she saw Shadow with blood around her mouth and a big chunk of flesh missing from Joshua's neck.\n\n\"Wow, did you get everything you wanted from him?\"\n\nShadow stood up wiping the blood from her mouth and smiled at her before she walked over and wrapped her arms around her hugging her tightly. Nessira was a little surprised by this but hugged her back as she was happy to have this little creature in her life. She ran her fingers through her hair as she began to realize she cared for her as more than just a pet.\n\n\"Thank you,\" Nessira said thankful for everything Shadow had done to help her rescue Patrick.\n\n\"Your welcome.\" She whispered back.\n\n\"Wait, What?\" Nessira said looking down at her. \"You can talk?\"\n\n\"Yes.\"\n\n\"Wow, that's,... that's amazing.\" She said before she hugged her again holding her for a moment.\n\nNessira just stood there holding her tightly in her arms for a while. Eventually, Shadow let go of her and walked over to her bed in the corner stretching before she got comfortable and went to sleep. Nessira stood there watching her sleep for a while just shocked by what she was and how grateful she was to have her.\n\n--\n\nLater that night while Shadow slept she began to have strange vision. She saw a world of darkness and fire. She heard screams of pain and passion. There was also a voice speaking to her that disturbed her a little. It started speaking to her by name and she started to sweat soaking through the sheets on her bed.\n\n\"Shadow, such a pitiful title for what you could be, you have so much potential my little Daemonium Silvam, and I will help you reach it.\" The voice said loud dark and frightening as she looked around not sure where she was. \"Soon you will help me spread the darkness... SOON!\"\n\nShadow jolted awake breathing heavily and covered with sweat. She looked around the room almost panicking a little about what she had just seen and heard. She wanted to see Nessira but she knew she was asleep upstairs with Patrick and she didn't want to ruin their reunion so she calmed herself down and curled back up getting comfortable even though she wouldn't fall asleep again that night."
    ],
    "authorname": "maestro84",
    "tags": [
        "forest nymph",
        "succubus",
        "passion",
        "magic",
        "supernatural",
        "forced orgasm",
        "incubus",
        "lilith"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/liliths-emporium-night-w-nessira-ch-04"
}