{
    "title": "Wired",
    "pages": [
        "*Author's note: Union is a fictitious town not too far south of Tulsa, Oklahoma; a town where football is king. All of the characters in this story speak with a soft, southern accent except for the boys, Bo and Chad, who are full-on southern. :-)\n\n*****\n\n\"Son, Union Electric is right proud to have you on our team,\" his new boss said as the room burst into applause.\n\n\"Anyone from this town knows football is king around here, and that means everyone in this town knows who Dalton Burke is. Am I right?\" he called out to the audience.\n\nThere was another round of applause and some very loud hootin' and hollerin' for the young man who'd led Union to a state championship in A-level football the year before.\n\n\"Now Dalton isn't just a great athlete. He's also now a certified electrician, and we are happy as hell to have him on board!\"\n\nAfter some more applause, the company owner, Bart Clemons, said, \"Come on up and say a few words, son!\"\n\nDalton's mother, Samatha Burke, was in the front row and already hooping and hollering as her son stood up and accepted the microphone.\n\nThe owner slapped him on the shoulder and nodded, Dalton's cue that he had the floor.\n\nDalton looked at the fifty or so people in the room and felt like he was standing in front of thousands. His mouth suddenly went dry while his palms began to sweat. He ran his hand through his trademark long, unkempt hair then tried to speak.\n\nThere was a croaking sound that caused a few laughs before he found his voice.\n\n\"Hey, there,\" he finally said in his soft, southern drawl. \"I uh, I'd like to thank all a y'all for comin' out.\"\n\n\"We didn't have no choice!\" an electrician four years older than Dalton who'd been his mentor for the last three years said.\n\nIt took a few seconds for the laughter to die down so Dalton could try again.\n\nHe looked at the man who'd played linebacker four years before him and said, \"I knew there was a reason you weren't already down at Mickey's hoistin' a few.\"\n\nThe crowd roared and there were a few 'oohs' at the young buck's boldly calling out the more experienced hand.\n\n\"Anyway, I just wanted to start by thankin' my momma. If it wasn't for her, I wouldn't be where I am today.\"\n\nThe same former player called out, \"You wouldn't be anywhere if it wasn't for your momma!\"\n\nSamantha, who worked at Mickeys, turned around and said, \"Good luck gettin' a beer delivered to your table tonight!\" causing another roar of laughter.\n\nUnion was a small of town of about 2,700 people, and most of them had lived there all their lives. Everybody really did pretty much know everyone else, but that didn't keep the good citizens of Union from doing the kinds of things people everywhere did\u2014both good and bad. It just meant that everyone knew what they were doing and with whom.\n\nUnion could have easily been the focus of the song Harper Valley, PTA sung by Jeannie C. Riley back in 1968. All one needed to do was change the names and there was someone to fit the profile whether it was the guy (or gal) who drank too much or the secretary who was sleeping with her married boss or some other equally scandalous going-on.\n\nSadly, Samatha and Dalton knew the town drunk all too well because he was her ex-husband and Dalton's father, Raymond Burke. He owned the only name car dealership in town, and was still holding onto it in spite of his out-of-control drinking, but neither Samatha or his son wanted anything to do with him. And he'd screwed his secretary, to boot. And that was just the only affair Samatha knew about for sure, as every now and then a secret managed to stay secret even in Union.\n\nDalton, however, was her pride and joy. He'd always been a calm, kind, easy-going, pleasant child, and he'd done quite well in school; well enough to go to college, but college cost money and money was something his family didn't have. It had had money before Dalton's father blew everything all to hell by choosing whiskey and affairs over his family. They weren't destitute or even poor, but without the athletic scholarship that never came, the University of Oklahoma was a little more than a dream on a cruise ship that had long since sailed. \n\nDalton was a natural athlete and had lettered in three sports every year since he started high school. He'd been scouted by OU as well as Oklahoma State, but being the best at the A-level didn't mean he could play at the college level. \n\nHe was a good-looking kid, too, and by far the best-looking boy in town. Then again, he lived in a small town, so it wasn't like he could move to New York or LA and find work as a male model. But because of his looks, his athletic ability, and the way he treated other folks, Dalton was also his class's homecoming king and voted both 'cutest boy' and 'most likely to succeed'.\n\nAt 16, the earliest age allowed, Dalton had followed up on his love of all things 'gadget' and secured an apprenticeship with Union Electric. By the time he finished high school, he was on the verge of earning his apprentice-level certification working after school and on weekends and still playing sports and earning mostly A's and B's. \n\nNow, just five months later, and having recently turned 19, he'd worked non-stop to complete the requirement in terms of hours needed and passed the state examination the week before. The results had just come out that morning, so the company put together a little celebration for a town hero that evening.\n\nDalton thanked the owner for giving him a shot three years earlier then thanked his fellow former player who'd been razzing him for being such a good mentor.\n\n\"That means the beer's on you tonight, Dalton!\" the man called out.\n\n\"Not until he turns 21!\" Samatha called back, causing another round of loud laughter.\n\nDalton stood there sheepishly letting his mother answer for him, not because he needed her to, but because in small town Oklahoma, and all over the South, men of all ages revered their mothers whom they called 'momma'\u2014and their coaches.\n\nDalton then thanked his high school coaches, as well, before saying, \"I reckon that's enough,\" then handed the mic back to his boss.\n\nThere was one last round of cheers and jeers before the boss let everyone go after thanking them for coming out to support 'one of Union's finest'.\n\nWithin minutes, the crowd was down to a small handful of people, and Dalton was getting ready to excuse himself when someone tapped him on the arm and nodded toward the door.\n\nJust one look at his father who'd stumbled in made his blood boil. Raymond Burke of Burke Motors, had just walked in late and started looking around hollering, \"Who the hell changed the time on this thing?\" as people passed him by either shaking their heads or avoiding even looking at him.\n\n\"Momma? Come on. It's time to get out of here,\" Dalton told his mother who was talking with her son's new boss.\n\nBart was recently single, and there weren't a lot of men of a certain age in Union, so it was only natural she'd want to at least thank him for all he'd done for her son. It didn't hurt that his momma had worn her nicest dress, and that she was still a pretty good looking woman at 42.\n\n\"You want me to say something?\" Bart asked Samantha when he saw her turn and look.\n\n\"No, I got this,\" she said with a sigh.\n\nShe strode over to her ex-husband and there was a short-but-fierce exchange of words followed by his disgusted hand waving just before he walked out\u2014or more aptly\u2014stumbled out. \n\nShe walked back over to where she was and proudly announced, \"Problem solved.\"\n\nDalton had always admired his momma. He'd admired his father, too, until his drinking and behavior had gotten so out of hand that Dalton no longer even respected him. Yes, he was still his father and he'd always love him, but he most definitely did not look up to him and hadn't for at least the last couple of years.\n\nA local real estate agent was waiting patiently for Dalton to finish his official business, and once he'd said his goodbyes, the man sidled up to the newest electrician in town and said, \"First, congratulations, Dalton.\"\n\nDalton shook his hand, thanked him, then said, \"You got a place lined up already?\"\n\n\"I do,\" the man told him. \"It's that little duplex out on the east end of town. The one they just fixed up.\"\n\n\"Seriously?\" Dalton said. \"How much?\"\n\n\"Six hundred a month; and that includes utilities.\"\n\nDalton would be earning between $25,000 and $35,000 a year depending on how much overtime he could get, a tidy sum in Union, and $600 a month was something he could easily handle. Not having to pay for electricity and water was icing on the cake.\n\n\"When can I move in?\"\n\n\"I'll need a first, last, and a security deposit from you. As soon as you can swing that, you're all set.\"\n\n\"I won't get a full check for two weeks, but my momma can loan me the money.\"\n\n\"Just don't wait too long. I rented out the other unit a few days ago, and I've got someone else interested in yours. But I promised you I'd help you find a place, and the star quarterback is someone I'm happy to do that for.\"\n\n\"Well, thank you, sir. And I'm no star. I'm just another workin' stiff.\"\n\n\"Uh-uh. Not in Union. As long as you live here, you'll always be the man who brought home the state championship in 2017.\"\n\nDalton thanked him, shook his hand again, then waited for his mother.\n\nThat evening Dalton asked her about a loan, and she said, \"You know I wish you'd live at home for another year or two, right?\"\n\n\"I know, Momma. And I love you dearly, but I need to be on my own.\"\n\n\"You're only 19, baby. What's the hurry?\" she asked, even though she knew the answer.\n\nHer son had always been self-sufficient. He hated relying on anyone, so she knew it was killing him to ask her for the help. The only 'charity' he'd ever accepted was a used truck from his father on his 16th birthday. His dad had had someone drive a brand new Ford F-150 home to surprise him, but when Dalton refused to accept it, it was no surprise to his father. He'd finally agreed to accept a five-year vehicle with 75,000 miles on it, and Dalton cared for it like it was his baby.\n\nHis mother also knew her son would pay her back in full\u2014with interest\u2014so money wasn't the issue. She just couldn't stand the thought of her baby leaving home, even if it was only to move four miles away across town. The fact that he could stop by for dinner every night of the week helped, but Samatha loved taking care of her son.\n\nThe only positive thing for her was she'd be able to have...someone... come over without having to worry about her son finding him there the next morning. Of course, he'd hear about it within days of the first person who did find out, but that was life in Union, and she could handle the heat. Besides, if she didn't strike while the iron was hot, another lonely woman in Union would. Maybe several of them, as Bart Clemons was considered quite the catch.\n\nHer son didn't say anything because he knew she knew the answer.\n\n\"Okay. I'll write you a check. But can you at least wait until the end of the month?\"\n\n\"Momma, they're fixin' to rent the place out this week if I don't take it.\"\n\n\"Okay. Fine,\" his mother said knowing it was a losing cause.\n\nDalton moved closer and put his arms around her and said, \"I'll still see you nearly every day. You know that, right?\"\n\n\"Nearly?\" she said, her eyes wide with disbelief.\n\nDalton laughed, hugged his mother and said, \"I love you, momma.\"\n\n\"I love you, too, baby,\" she told him.\n\nWhen she let him go, she kept her hands on his arms for a few seconds then said, \"It could be worse, I suppose.\"\n\n\"How's that?\" her son asked.\n\n\"Well, you could be joinin' the Army like Anna Springer's son, Joey. That poor woman hasn't stopped cryin' since he left home in July.\"\n\n\"No, I'm not cut out for the Army,\" he told her. \"Or college.\"\n\n\"Maybe, maybe not. But you are a very smart young man, and you're goin' to be a fine electrician. Union Electric is lucky to have you.\"\n\n\"And once I've got 8,000 hours under my belt, I'll get my Journeyman's license, and that'll mean a lot more money.\"\n\nThe difference in pay was almost double, and in a small town like Union, that really was a lot more money. He'd be able to afford a decent house, a nice truck, and maybe even support a wife and have a kid or two. But for now, he was an apprentice making $13.50 an hour and $17 for overtime. Still, that wasn't bad at all considering how most kids his age were lucky to even find a job, and those who did mostly made minimum wage.\n\n\"I am just so proud of you,\" his momma said before hugging him again.\n\n\"I hope you always will be, Momma,\" he said.\n\n\"Just don't be like someone we both know, and you'll be fine,\" she told him. \n\nThere was no need to name names. It was painful enough just dealing with him.\n\n\"What'd Dad say tonight?\" Dalton asked now that his mom had brought him up.\n\n\"He wanted to stop by and congratulate you. But I could smell the booze from five feet away so I told him to get the hell out, and if he ever sobered up to come see you then.\"\n\n\"It's just so sad,\" Dalton told her. \n\n\"Yes. Yes, it is, but no one made him pick up a bottle or keep picking it up, and it's for dead sure no one made him screw....\"\n\n\"I know, Momma,\" Dalton said understandingly.\n\n\"So how much does my baby need?\" she asked as she grabbed her checkbook.\n\nDalton dropped off the check during lunch the following day, and the agent had him sign some papers then handed him the keys.\n\n\"You, sir, are all set!\" the man told him.\n\n\"Wow. Just like that, huh?\" Dalton said as he pocketed the keys.\n\n\"I know your mom's good for the money and the check will clear, so...yes...just like that.\"\n\nThey shook hands one more time and...just like that...Dalton had his first place.\n\nThat evening he moved most of what few things he owned over to his new home then sat there looking at the walls wondering what to do next. The place was furnished, and while nothing was 'high-end', everything was more than adequate for a first home. In fact, it was nicer in some ways than the home his mother had after nearly 25 years of marriage.\n\nHe made a list of things he wanted, and the list started with a brand new flatscreen TV. The place already had a satellite dish in place, so all he needed was something to watch it on. He made a sub-note to be sure he got the football package so he could watch his favorite teams anytime he wanted. Other than sports, Dalton wasn't much for television, but every now and then he'd watch an action movie like Taken with Liam Neeson or something with Vin Diesel in it. \n\nThe full-size bed was more than adequate, and as he laid down around midnight to go sleep there for the first time, he wondered why it was so utterly quiet in the connected unit.\n\nThe next morning he went outside and didn't see another vehicle in the driveway nor could he see anyone through the front window that didn't even have curtains hung in it yet. He didn't have time to think about it let alone worry so he hopped in his pickup truck and headed to work. But because whoever'd rented the other side still wasn't there, that morning he put out the word there'd be a party at his place the following evening which just happened to be a Friday which was perfect for having a few drinks. \n\n\"Free beer is all you gotta say, Dalton my boy,\" his mentor, Jeff Mercer, said. \"We'll all be there with bells on.\"\n\nDalton laughed then said, \"Well, seein' as how you hit like Tinkerbell, why would that be any big surprise?\"\n\nThe room filled with other electricians boomed with laughter.\n\n\"Oh, I got your number, New Guy,\" his mentor said.\n\nJeff had missed a tackle in the final game of his senior year, and as a result, Union High School hadn't gone to the playoffs that year for the first time in a decade. He was still living that down and probably always would.\n\nDalton used the last of the money he had to fill his gas tank, buy some groceries, then stock the house with enough beer and chips for all the guys from work. He had $12.76 to last him until he got paid, and he'd owe his mom, too, but that should be plenty to get by on.\n\nPeople started rolling in around 7 pm, and by 10 o'clock most of them were pretty well lit. One of the guys had brought a boom box, and the music was cranked up loud as the suds flowed and conversation got louder by the hour.\n\nIt was somewhere around midnight when one of the guys answered a loud knock at the front door that Dalton hadn't heard because he was out back on the small concrete patio shootin' the breeze with a couple of the older electricians who were dispensing advice based on years of experience.\n\n\"Dalton!\" he hollered out. \"It's for you!\"\n\nDalton meandered through the gaggle of guys and their wives or girlfriends inside the 1,200 square-foot unit to the front door where a woman he'd never seen before was standing. \n\nThere was a boy of about ten standing next to her, and Dalton said, \"May I help you?\"\n\nThe front porch light was on, but it was otherwise dark outside. Dalton could tell she was cute, but he had no idea how attractive this woman was during this first meeting. That and the fact that her face was all screwed up in anger didn't help, either.\n\n\"Are you the owner of this side?\" she loudly demanded to know over the music.\n\n\"I'm...I'm renting it, so I'm not....\"\n\n\"Then that makes you responsible,\" she said as she poked him in the chest hard enough to move his 5' 11\" body that weighed a solid 185 pounds back. \n\n\"When I came down here to rent my side a few days ago, no one was in this side. I went back to Tulsa to get my things, and when we pulled in tonight, there's a damn frat party going on\u2014at midnight!\"\n\nDalton saw the U-Haul truck in the driveway and understood why no one had been home next door.\n\nBefore he could apologize the woman got in his face and said, \"Listen up, cowboy. My son I and need to go to bed. I'm startin' a new job tomorrow, and I need to get some sleep. So you could please turn down the music so we could do that?\"\n\nA small crowd had gathered around and several other men were watching with great amusement as she read their young colleague the riot act.\n\n\"I'm really sorry, ma'am. I didn't know anyone was there,\" he said, still talking loudly so she could hear him.\n\n\"Well now you do!\" she said as she jabbed him one more time. \"Oh, and this damn sure better not be a regular thing. You understand me?\"\n\nDalton rarely drank, and although he was nursing his second beer in three hours, he was pretty much stone-cold sober, but he knew there was beer on his breath, and that probably wasn't helping.\n\n\"I'll turn it down right now, ma'am,\" he said. \"And I really am sorry.\"\n\nShe'd already turned her back and told her son to go inside.\n\nThe only other thing Dalton heard was, \"Goddamn rednecks!\" before she disappeared.\n\nWhen he turned around, four or five guys all went, \"Ooooh! That was brutal!\"\n\nDalton pushed his way back through and found the boom box and turned it off. The silence caused all of the loud talking to stop within seconds and all eyes to turn toward him.\n\n\"Sorry, fellas. The party's over,\" he announced.\n\n\"What? What kind of bullshit is that?\" one of the guys said. \"It ain't even midnight yet!\"\n\nThe guy who said that was too drunk to know what time it was, and Dalton no longer cared. His whole life he'd had it drilled into him that people respected their neighbors, and had he known they'd be home, he'd have never even had the party.\n\n\"That kind of bullshit is what's called respect,\" he said firmly and rather loudly considering the room was dead quiet. \"My neighbors are home and the lady next door needs to get to sleep so finish your beer and head on out.\"\n\nThere was a lot of loud grousing and griping, but everyone drained their bottle or can and left. \n\nNext door, the woman, who'd been shaking with anger, was finally starting to calm down. She'd heard every word Dalton said to his friends through the thin walls, and although she was still mad as hell, she almost felt bad for biting his head off. Based on his actual reaction rather than the one she'd anticipated, it was very possible she'd completely misread the situation and overreacted in the extreme.",
        "She'd lived in an apartment for years, and in most places, that meant dealing with tough guys and assholes, and she'd expected the 'owner' to laugh at her and force her call the police. That, in turn, would potentially ruin any chance of ever being friends with whoever lived there, but she'd been so tired that when she pulled in and saw the party, she'd lost it. When she'd initially walked inside her unit and couldn't even hear herself think, she'd stormed back outside, banged on the other door, and asked for the owner.\n\n\"Too late now,\" she said to herself as she finally laid down after a very long, exhausting day. \n\nThe last thing she thought of before falling asleep was that if her neighbor really wasn't a total jerk she'd try and patch things up with him the next time she saw him. If he was, well, she didn't know what she'd do, and for now, she was too tired to think about it.\n\nUnlike his nearly all of friends, Dalton Burke didn't sleep in. He was up by 5:30 am every morning, and normally either went for a run or worked out. He'd have to bring his weight bench over along with his dumbbells for that, but he could definitely go for a run. \n\nAlso unlike his friends, many of whom were already so far out of shape less than a year after their last football game they couldn't run a mile, Dalton worked hard to keep his body in good condition. He loved the way a workout made him feel, and it set a positive tone for the rest of his day. \n\nSo while his co-workers were still in bed nursing hangovers, Dalton was getting ready to 'hit the bricks' and log another 4-5 miles.\n\nAnother place where he was very different from his friends was that the early morning was his favorite time of the day. Almost no one else was up, and when he was out running it made him feel like he 'owned' the town. Sunday mornings were the best, but Saturdays were a close second, and he reveled in the cooler Fall air as he headed toward town where he'd follow the main street for another mile then head back on a parallel road to his new place.\n\nThe sun had just started peeking up about a mile before he got back, and he poured it on the last quarter of a mile. The endorphin rush was something he never got tired of, and when it hit him, he felt like a million bucks. He sprinted the last fifty yards then slowed down just as he got to the short driveway of the duplex.\n\nHe was on top of the world until he turned into the driveway and saw someone sitting on the steps outside the other unit. With nowhere to go but straight ahead, Dalton braced for a second round of fire as he walked up.\n\n\"Mornin', ma'am,\" he said very humbly as he got close.\n\nThe sun was right in her eyes so she was squinting and then raised her hand to cover them before speaking.\n\n\"Oh, hey there. I thought I heard you leave.\"\n\n\"I uh, I hope I didn't wake you up,\" he said, raising his hands to the 'I surrender' position.\n\n\"No. It's just that I'm a really light sleeper, and pretty much any noise wakes me up.\"\n\n\"Oh, speaking of noise, I'm real sorry about last night. We were celebratin', and I honestly didn't think anyone was next door. I felt awful when I saw you and your boy standin' there.\"\n\n\"No, I'm the one who should apologize. I totally overreacted,\" she told him.\n\n\"No, not really,\" Dalton said. \"You've got a right to your peace and quiet, and I promise you that won't ever happen again.\"\n\nShe stood up, faced him, and smiled, then stuck out her hand and said, \"Could we maybe start over?\"\n\n\"I'd like that,\" Dalton said as they shook hands.\n\n\"I'm Brooke Mitchell, and my son's name is Bo.\"\n\n\"It's a pleasure to meet you, ma'am. I'm Dalton Burke.\"\n\n\"I know who you are,\" she said in a much quieter, kinder tone of voice.\n\n\"Ma'am?\" he said, a confused look on his face.\n\n\"I lived in Union for several years. In fact, Bo and I were at the championship game last year. He loves Union football. All he could say after he saw you was, 'Momma. Do you know who that was?' And before I could answer, he told me your name, how many touchdown passes you threw, and even your shoe size. Okay, maybe not your shoe size.\"\n\nDalton laughed then kind of cocked his head, took a good look at her then said, \"No offense, but I'd never forget a pretty face like yours, and I don't believe we've ever met.\"\n\nShe smiled and when she did, he saw she was indeed a very pretty woman. Even with her hair in a ponytail and no makeup, she looked very nice.\n\n\"Thank you for saying that, Dalton. You just made my day,\" she told him.\n\nThen he took a closer look and smiled.\n\n\"Wait a second. I do know you! Yeah. I remember now. You were the new girl who was a cheerleader back in...um...what year was that?\"\n\n\"That was me,\" she said with a smile. \"You uh, you probably know my ex-husband, Craig Mitchell. We dated our last two years in high school. He was a big-time....\"\n\n\"Running back. Class of 2006,\" Dalton said with a smile. \"Man that guy could run!\"\n\n\"Yes. Yes, he could,\" Brooke agreed. \"But he could also drink.\"\n\nShe'd been smiling but the smile was long gone.\n\n\"And when he drank he could really...hit, too, and not the football kind of hitting.\"\n\n\"Whoa! Are you sayin' he hit you?\" Dalton asked, the disbelief in his voice strong.\n\nBrooke didn't answer him directly. Instead she told him why she was back.\n\n\"Craig has family up in Tulsa. They moved here within a few weeks of the time when my folks and I moved here. His parents moved down here just so he could be a star. Up in Tulsa he'd have been good, but not all-state. Anyway, after graduation, his daddy got an offer to go back to his company in Tulsa, and Craig asked me to marry him. I was 18 and naive....\"\n\nShe paused then said, \"I was also pregnant...so I went with them. He had a heck of a time finding work there, and that made the drinkin' worse. Bo came along and things were better for a year a two then they went back to the way they were. That was tough, but it was tolerable. Then he hurt his back real bad and got hooked on pain pills. Things went from bad to worse, and I took Bo and moved out. We separated for a year, and he quit drinkin' and takin' pills, so I agreed to give him another chance\u2014mostly for Bo. To make a long story short, he hit me for the last time a few months ago, and I moved out, and Union was the first place I thought of. I had a lot of pleasant memories here.\"\n\n\"I am so sorry,\" Dalton said.\n\n\"Me, too. I couldn't afford to move back right away, so I moved back in with my folks, who, believe it or not, also moved to Tulsa, but that just didn't work for anything more than the short-term. Anyway, once we had enough money to get out of Tulsa, I drove down about week ago and looked at places, and this was the nicest thing I could afford. I signed the lease then we went back and got the U-Haul and well, we kinda met last night after my first few minutes back in Union. Again, I'm really sorry for being such a crazy bitch.\"\n\n\"No, ma'am. That was all on me. One-hundred percent. And like I said, that won't ever happen again.\"\n\n\"Well, I don't expect you to never have friends over, Dalton,\" she told him.\n\n\"They can come over, they're just gonna have to respect your privacy. Plain and simple.\"\n\n\"I heard you were a good guy. Now I know it's true,\" she told him with a warm smile.\n\nHe thanked her then Brooke said, \"I need to take a shower so I can get to work by 8 o'clock. Being late on your first day is never a good thing.\"\n\n\"If you don't mind me askin', what kinda job starts on a Saturday?\" he asked politely.\n\n\"One I really, really need?\" she told him with a smile.\n\n\"Sorry, I didn't mean to be nosey,\" he said.\n\n\"It's okay. Maybe we can talk one of these times or something,\" Brooke said.\n\n\"Yes, ma'am. I'd like that,\" he replied.\n\n\"And would you please not call me ma'am? I just turned 30, and I feel bad enough about that.\"\n\n\"Seriously? You don't look 30,\" Dalton told her truthfully.\n\n\"Ah! That's twice you've made my day, and it hasn't even gotten started!\" she said. \"But I really do need to run.\"\n\nShe looked at him then said, \"Well, not...run. Not like you do. But run as in...hurry.\"\n\nDalton laughed and said, \"No, I gotcha, ma'...Brooke.\"\n\n\"Okay, well, I'll uh, I'll see you around, QB,\" she told him using the common abbreviation for quarterback.\n\n\"Nice meetin' you,\" he told her.\n\n\"Yeah. Same here,\" Brooke said before going back inside.\n\nDalton also went inside, and the first thing he noticed was the sound of water running next door. He smiled when he thought about his very attractive, recently-single neighbor in the shower. Then again, she was 30 and had a kid half his age, and he was all of 19\u2014and barely that. \n\nEven so, Dalton was well aware she was a hottie, even though he'd never say that to her\u2014or to anyone else for that matter. He might mention his new neighbor was a very attractive, older woman, but his momma didn't like the word 'hottie' so it was something he almost never said out loud.\n\nDalton took a shower a few minutes later, and somewhere around 7:40, he heard Brooke saying, \"Come on, baby. Momma can't be late on her first day.\"\n\nA minute later their front door opened, and Dalton took a peek as the two of them headed out. The U-Haul had towed a small, white car that looked like an older, beat-up, Ford Fiesta, and he saw Brooke open the door for her son then go around to the driver's side. \n\nWhen she finally turned around to get in, Dalton whistled very quietly.\n\n\"Dang!\" he said when he saw her in a very nice looking blue dress with a white cardigan sweater. \n\nThe sun was high enough by then that he could see her quite well, and from what he saw she was even better looking than he'd assumed. Her long, very-dark hair was worn down and fell around her shoulders, framing her very pretty face which had what looked like a small amount of makeup on it giving it a very smooth look. \n\nDalton hadn't dated anyone since his longtime girlfriend, Amanda, who'd also been a cheerleader, had left for college. She'd tried telling him a long-distance relationship could work out, but he'd insisted on letting her have her freedom knowing their worlds were rapidly diverging and heading down very different paths. \n\nIn four years she'd be a registered nurse with a bachelor of science degree, and he'd still be an electrician with a high school diploma. He didn't know whether or not she'd end up staying in Union, but his sense was this town was too small for her, and he felt pretty sure she'd end up in Tulsa or Oklahoma City or maybe even leave the state for greener pastures.\n\nHe, on the other hand, had no intention of ever leaving Union or his momma. Like most southern boys, there was no shame in being a 'momma's boy'. In other places that term meant weakness and clinginess. But not in Oklahoma. So while he wasn't anything like what one typically associated with that term, he loved his mother too much to ever leave the only town he'd ever known; a town that also loved and revered him.\n\nSo he and Amanda had parted company the last week of July\u2014the last time he'd had sex\u2014and Dalton hadn't even been on a date with a girl since. \n\nFor now, at least, that was okay. Work was his top priority, and he knew that at some point, another pretty girl would come along. Whenever that happened, be it sooner or later, it would be just fine. Until then, he had plenty to keep him busy, and it didn't take a whole lot to make him happy. \n\nFor now, just having an attractive woman living next door was enough to make him very happy.\n\nAround 10 am, Dalton went outside to take a look at the wiring on the satellite dish just to make sure everything was ready to go. As he walked around the building he noticed the gutter on Brooke's side needed repair and wondered who'd done the work on the place he'd been told 'had just been fixed up'. He checked her dish, too, while he was there, and everything looked fine, so he went around back and saw another problem.\n\nOne of the posts supporting the cheap pergola in back was wobbly. Really wobbly. It was a simple fix, and he couldn't believe anyone who knew anything about home repair could have missed that. It wasn't just unsightly, it was a safety issue, and with a young boy living there, any hard bump could bring the whole thing down on top of him or his mother.\n\nDalton ran back to his mother's house to get some tools, and the way she hugged him made him feel like she thought he'd been gone for a month of Sundays. She insisted he come in and have lunch, and since he was there to borrow both tools and supplies, he was happy to do it. The fact that his momma made the best grilled cheese sandwich in Union didn't hurt, either.\n\nSamantha, of course, wanted to know what was wrong with his new place. He let her know it was just little stuff, and mostly with his neighbors' side, then happened to mention Bo.\n\n\"Oh, so there's a family next door?\" she asked.\n\n\"Um, yes. Well, it's a mom and her son,\" he explained. \n\nHe quickly added, \"Which, of course, is a family.\"\n\n\"Oh, okay. There's a lot of that goin' on these days, huh?\" his mother said referring to them, as well.\n\n\"I suppose that's true. She's a right pretty woman, and she's real nice, so it's kinda hard to understand. But I guess her ex is a drunk, too, and evidently, he believes in 'the layin' on of hands.\"\n\n\"Bastard,\" his mother hissed. Just the thought of a man who'd hit a woman sent her through the roof.\n\nShe looked at her son then said, \"You know, I have to give your daddy a little credit. For all the things he's done wrong, he's never once laid a hand on me.\"\n\nDalton already knew that, but he also knew it was his mother's way of trying to say something positive about his father no matter how lame it might sound.\n\nAfter lunch, Dalton grabbed the things he needed, gave his momma hug, then thanked her for the meal.\n\n\"Will you be back for supper, honey?\" she asked, referring to the evening meal by its more traditional name.\n\n\"I'm not sure, Momma. If not, I'll definitely come over tomorrow for Sunday dinner.\"\n\n\"I hope that'll be a given every week,\" she said with a smile.\n\n\"I'm pretty sure it will be,\" her son told her. \"Nobody makes a pot roast or fried chicken like my momma.\"\n\n\"Okay, I suppose I could have dinner by myself one night this week,\" she told him.\n\nSamatha was wondering what that nice man who ran Union Electric might be doing for dinner, and decided to call and find out\u2014just in case.\n\nShe walked her son out to his truck and just as he got ready to leave she said, \"Oh. Did you hear they're fixin' to build a Walmart in Union?\"\n\n\"Seriously?\" Dalton replied.\n\n\"As a heart attack,\" she told him. \"The mayor's secretary let me know after your celebration last night. Actually, it was at the bar, but it's a done deal. And with Union Electric being the only real game in town, something tells me you might be spending a lot of your time on that building gettin' it wired.\"\n\n\"Dang, Momma. That's good news for everyone,\" he said.\n\n\"Well, unless you're a small business that gets run outta town,\" she said.\n\n\"Yeah. That'd be tough to take.\"\n\n\"Well, nothin' stays the same. We either adapt....\"\n\n\"Or die,\" her son said, finishing the saying he'd heard more times than he could count.\n\nDalton didn't follow politics, but he'd heard the debate about Walmarts several times. The good side was lots of products at cheap prices. The bad side was that little stores couldn't compete, and many times a business closed its doors and the employees who lost their jobs ended up working at Walmart. \n\nDid those new jobs include benefits? Could a man or woman make a living there?\n\nThen there was the environmental debate. Did these stores just come in and ruin some large part of the local area as some folks said or were they 'environmentally conscientious' as the big store claimed? \n\nHe knew he should care, but like so many other things, Dalton was well aware he was just one man against the backdrop of the entire country. So from who became president to the governor of his state to things like a big company coming in and building a store, no one was asking him for his opinion. Therefore, he chose to take things as they came and deal with them rather than spend his time trying to influence events well beyond his control. Activism was fine; it just wasn't fine for him.\n\nThey'd built a Home Depot in Union a few years earlier and there were drugstores in town with corporate names, and life had gone on so how the hell did he know whether or not a Walmart was a good thing? Dalton's last thought on this issue was that life would keep right on goin' on no matter what he thought or did.\n\nAs he drove back to his new place, Dalton was loving the weather. Fall was his favorite time of year. The brutal heat was gone for six months and the winters tended to be fairly mild although January cold be downright cold. \n\nWhen he got home the temperature was about 72 degrees, and to Dalton, that was as about as ideal as it got. He set his tools down outside then went in and stripped off his tee-shirt and tossed it on the bed. He gave his long, messy-looking hair a shake and thought about maybe getting it trimmed a little one of these days. \n\nHis hair had been his 'trademark' for several years, and based on the numerous compliments he'd gotten on it from cute girls (and many women) ever since, he was pretty sure it was working for him. The truth was he'd been blessed with good looks and the longer hair made him look like a sexy lead singer in a rock band. Or so he'd been told more than a few times.\n\nHe took a look at his still rock-hard body and patted the flat stomach that showed off his obliques along with his abs then headed back outside in a pair of jeans and cowboy boots to get to work.\n\nHe went around back and tackled the more serious problem first. He jammed a 4x4 he had in the back of his truck in between the patio and the pergola to serve as a temporary support before drilling some new holes in the concrete then moving the existing support rod to the new location and securing it. He gave it a good shake, and when he saw that it was rock steady, he removed the brace and headed back around to the side. \n\nDalton grabbed the ladder and propped it up, then went to work fixing the gutter. It was a simple job, and in less than five minutes, it was done. He put the ladder away then went to pick up the rest of the tools just as a little Fiesta pulled into the driveway.\n\nThe passenger door flung open, and the boy who's face he'd only seen the one time jumped out and said, \"Hey!\"\n\nThe boy waved wildly and had a big old smile on his face.\n\nDalton waved back and said, \"Hey, yourself. You must be Bo.\"\n\n\"Yes, sir!\" he said loudly as his mom got out.\n\n\"Come on over and say hello,\" Dalton told him.\n\nThe boy glanced at his mother who said, \"Go ahead,\" and the boy quickly walked over to meet the QB he'd idolized.\n\n\"I'm Dalton,\" the shirtless young man said as he stuck out his hand.\n\n\"Yes, sir. I know who are you,\" he said as he pumped his hand. \"Me and Momma watched you in the championship game last year.\"\n\nBrooke walked up and said, \"Momma and I,\" correcting her son's grammar.\n\n\"Sorry, Momma,\" he said, unable to stop smiling or take his eyes off of his hero.\n\n\"Well, that was then and this is now,\" Dalton told him. \"Do you play?\"\n\n\"My momma's thinkin' about lettin' me,\" he said as he looked over at his mother.\n\nDalton looked at her, and once he got a look at her close up, he was 100% sure she was indeed a 'hottie'.\n\n\"He's only 10, so there's still time,\" she said as she roughed up the hair on top of his head.\n\n\"I'm almost 11 and I'm already missin' Pee Wee this year,\" the boy said, the disappointment obvious in his voice.\n\n\"I never played Pee Wee at all,\" Dalton told him.\n\n\"Really?\" Bo said as though that couldn't possibly be true.\n\n\"Nope. My daddy wouldn't let me play until I was 12. He was too afraid I'd get hurt.\"",
        "\"See!\" his mother said. \"Looks like I'm not the only monster in Union.\"\n\n\"You ain't no monster, Momma,\" he said to her.\n\n\"It's, 'You're not a monster, Momma',\" she told him. \"I've been tryin' so hard to get him to talk correctly.\"\n\n\"Either way, your son is right, you know. You're about as far from a monster as I've ever seen,\" he told her.\n\nBrooke smiled then said, \"Three times in one day.\"\n\n\"Ma'am?\" he said out of habit before remembering their deal. \"Sorry, about that\u2014Brooke.\"\n\nShe laughed then said, \"That's the third nice thing you've said to me today.\"\n\n\"Well, they're all true,\" Dalton assured her with a smile.\n\n\"So what have you got goin' on here?\" she asked as she nodded toward the tools.\n\n\"Oh, just a little maintenance,\" he told her. \"I was worried that pergola might fall down back there.\"\n\n\"On my side?\" she asked.\n\n\"Um, yeah. It was really bad.\"\n\n\"And you fixed it?\" she asked.\n\n\"Yes, ma.... Yes, I did.\"\n\n\"Oh, my goodness, Dalton. You did not have to do that!\" she told him although he could see she was grateful.\n\n\"I took care of that gutter on the side of the house for you, too,\" he said as modestly as he could. He had no expectation of anything to include being thanked, and had she been just two minutes later getting home, she'd had have never known.\n\n\"Well, that is just so nice of you!\" Brooke said.\n\n\"It was the least I could do,\" Dalton told her. \"I'd never forgive myself if you or Bo here got hurt when I coulda fixed it so easily.\"\n\nShe smiled at him, and Dalton saw her trying not to look at his body before she said, \"Listen. I've got some sweet tea in the house if you'd like a glass.\"\n\nBo perked up and said, \"My momma makes the best sweet tea ever! Come on!\"\n\n\"Are you sure?\" he asked her as Bo grabbed his arm and pulled.\n\nBrooke laughed and said, \"Yes. I'm sure. It's the least I can do.\"\n\n\"Well, you certainly don't need to repay me, but I'd love a glass of sweet tea.\"\n\n\"Then come on in,\" she told him.\n\n\"I uh, I should go grab my tee-shirt real quick,\" he told her.\n\n\"Oh. Okay. Sure. Bo and I'll go in and get it ready,\" she said. \n\nBrooke wasn't staring, but she definitely noticed the amazing body attached to the extremely handsome face\u2014and that hair!\n\n\"Be right there,\" he told her.\n\nIt took less than a minute, and when Dalton tapped on the screen door, Bo flew from the kitchen to the front door and said, \"Come on in!\"\n\nDalton put a hand on his shoulder as they walked, and Bo was beaming with happiness.\n\n\"I can't wait to tell Granny I know Dalton Burke!\" Bo said.\n\n\"That and a dollar might get you a cup of coffee,\" Dalton said. \"But you're too young to drink coffee, so make that a diet Coke.\"\n\nBrooke laughed then said, \"He has a serious case of hero worship for you. And for your running back friend.\"\n\n\"Do you and Tim Rivers hang out together?\" Bo asked, inquiring about Union's star running back from the championship team who'd set a single-game record his senior year by rushing for 204 yards in a 28-0 rout of a much weaker team.\n\n\"No, not really. I see him around every now and then, but we don't really hang out,\" Dalton told him. He wasn't about to tell the boy his other local hero was best know for putting a 12-pack away pretty much every day of the week.\n\n\"My daddy said he was almost as good as he was in high school,\" Bo informed the former quarterback.\n\n\"His daddy is his other hero,\" Brooke said. \n\nBo wasn't looking and didn't see the expression on his mother's face that spelled disdain in capital letters.\n\n\"I'm gonna spend Christmas vacation and next summer with my daddy!\" Bo proudly told Dalton.\n\n\"Um, we'll see about that,\" his mother said as nicely as she could. She was about to discuss custody arrangements with him or their guest.\n\nShe handed Dalton a red, plastic cup filled with ice and sweetened tea, the only tea considered worth drinking by true southerners, and thanked him again for helping out.\n\n\"Have a seat,\" she said as she pointed to the small sofa. Brooke sat in a chair across from him and Bo clearly hoped to sit next to him.\n\nDalton patted the seat and said, \"Come on, buddy.\"\n\nThe boy hopped up beside him and said, \"Momma won't let me drink sweet tea yet, either.\"\n\n\"Oh, I see,\" Dalton told him. \"That's probably a good thing.\"\n\n\"Why's that?\" Bo asked.\n\n\"Well, it...it might stunt your growth.\"\n\nBrooke tried her best not to laugh as she was taking a sip, but between the comment and Bo's reaction, she couldn't help it, and ended up spewing.\n\n\"I'll get it, Momma!\" Bo said as he jumped up and grabbed a paper towel from the kitchen.\n\nHe couldn't see where the spewed tea landed so he handed it to her.\n\n\"Thank you, baby,\" she told him.\n\n\"Momma!\" he said as he looked over at Dalton.\n\n\"Oh, right. I promised to stop calling you that, didn't I?\" she said with a smile.\n\n\"Not in front of Dalton, especially,\" the boy said.\n\n\"Sorry...honey,\" she told him as he took the damp paper towel and threw it away.\n\n\"So what keeps the star quarterback busy these days?\" Brooke asked, that beautiful smile on her face.\n\n\"Well, I got into an electrical apprenticeship when I was 16, and I just got my apprentice certification this week, so I'm the newest full-time electrician with Union Electric.\"\n\n\"Seriously? Dalton, that is downright impressive!\" Brooke told him.\n\n\"Well, thank you,\" he said. His modestly was again on full display, a trait she'd never seen her ex-husband.\n\n\"I so regret not going to college or gettin' a real skill like that,\" Brooke told him after taking another sip.\n\n\"May I ask where you're workin'?\" he inquired as gently as he could.\n\n\"You know where the furniture store is on 3rd Street?\" Brooke asked.\n\n\"Sure. I know the owner, Mr. Owens, and his wife, pretty well. Their boy, Eric, played defensive end a couple of years before I started high school.\"\n\n\"Right. I think I knew that but maybe forgot. Anyway, I'm working there as the bookkeeper. I don't have a lot of experience, but my daddy knew Mr. Owens and gave him a call when we decided to move back here, and he was kind enough to take a chance on me.\"\n\n\"Oh, okay. Now I understand why you're all dressed up so pretty on a Saturday,\" he told her with a smile of his own.\n\n\"I do believe that's number four,\" she said, smiling back at him.\n\n\"My momma's beautiful,\" Bo said, wanting to join the conversation.\n\n\"She sure is,\" Dalton said to him while looking at his beautiful mother.\n\n\"Ha! I'm a 30-year old, divorced, single mom. That's not what I call beautiful,\" Brooke said.\n\nDalton looked down at Bo then said to Brooke, \"It's two against one, Brooke. I'm afraid you lose that argument.\"\n\nShe smiled sweetly then said, \"Dalton Burke. You are quite the charmer.\"\n\n\"Yeah, you lose, Momma!\" Bo said.\n\nDalton offered him a 'high five' and the boy slapped it hard.\n\n\"Dang! You're a strong little son of a gun,\" Dalton said as he shook his hand pretending it really hurt.\n\n\"I'm gonna lift weights when Momma let's me start playin' football. Then I'm gonna get big ol' muscles like you got, Dalton,\" he told the older boy.\n\n\"Yeah, I don't get to the gym too much these days, but I do run a lot. I've lost a good five pounds because of it.\"\n\nBrooke smiled and said, \"Well, you still look really good.\"\n\nOnce she said it she realized how it sounded and said, \"What I meant was, you're still in plenty good shape for someone who doesn't go to the gym as often as he used to.\"\n\nDalton wasn't sure what was going on, but the way she spoke and especially the way she looked at him told him something was indeed going on. Then again, he might well be imagining something where something didn't exist. He took a sip of tea and dismissed the thought.\n\n\"So who keeps a eye on this guy while you're at work, Brooke?\" he asked before mussing up the boy's hair the way his mom had outside.\n\n\"Oh, I have a friend who agreed to watch him today. He'll be in school most of the time, and she said she'll be happy to keep him whenever I have to work a Saturday. That should be twice a month for half a day, and he also stays at her house until I can come pick him up after school.\"\n\n\"Oh, okay,\" Dalton said, wanting to ask her for a name but aware she'd tell him if she wanted him to know.\n\nSeveral seconds passed in silence before Dalton said, \"I should probably go back over to my side. I'm sure you've got plenty of things to do.\"\n\n\"Oh. Well, if you need to run, by all means,\" Brooke told him.\n\n\"No, I don't have anything I need to do, I just thought you might need to take care of some things yourself, and that I might be keepin' you from it.\"\n\n\"I do, actually. I need to unpack, put stuff away, and...oh. Oh, my goodness. I've got to turn that U-Haul in before midnight or I'm gonna get hit with another day's charges,\" she said as she set her tea down and stood up. \"What time is it anyway?\"\n\n\"Do you need me to follow you over and bring you back?\" Dalton asked.\n\n\"No, I can't ask you to do that. You've already done plenty for me. Thank you, though.\"\n\nDalton stood up, scratched his head, then said, \"Um...do you have anyone to help you out?\"\n\n\"Oh, I can call my friend, Casey. She'll meet me there and bring me back,\" Brooke told him.\n\n\"Okay. But I'm right here and you won't be bothering me at all.\"\n\nShe saw the hopeful look in Bo's eyes then said, \"Are you sure?\"\n\n\"Very sure,\" Dalton told her. \"I don't even have a TV to watch yet, so anytime I can do anything to get out my...jail cell....\"\n\nBrooke laughed and smiled at him.\n\n\"I like a man with a sense of humor,\" she said sweetly. \"Okay, if you're sure it's no bother.\"\n\n\"Nope. No bother at all,\" he told her.\n\n\"Can I ride with Dalton?\" Bo asked as soon as he knew the 'QB' was going with them.\n\n\"I think you should ride with me, ba...honey,\" his mom said.\n\nDalton saw the look of disappointment and said, \"It's not my call, but Bo's more than welcome to ride with me.\"\n\nBefore she could even think about it, Bo was begging his mother.\n\n\"Momma, can I? Please?\"\n\nShe looked at Dalton who said, \"It really is fine with me.\"\n\n\"Okay. I guess that's fine,\" she said as Bo hollered out, \"Yes!\" and offering a high-five to Dalton.\n\n\"I believe, 'thank you, Momma,' would be the better reply,\" he said very kindly to Bo who immediately turned to his mother and thanked her.\n\n\"You're welcome, son,\" she said, impressed with this older boy's manners.\n\n\"But you gotta wear your seat belt, okay?\" Dalton told him as he mussed up his hair again.\n\nBrooke changed out of the dress and put on a pair of jeans and a white tee-shirt before they left. She looked just as nice in them as she had in the dress, and Dalton made it a point not to try not to stare as she walked out in front of them when they left the house. He let Bo climb up into his truck while he went over and opened the driver's door for Brooke.\n\n\"You are quite the young gentleman,\" she told him. He offered her a hand, and that too, resulted in another 'thank you' and a warm smile. \n\nBrooke's former husband had long since stopped doing\u2014or saying\u2014anything nice to her with the exception of the first few weeks she'd agreed to try and reconcile with him. That hadn't lasted long at all, so it was a true pleasure to be treated like a lady, something she valued very much but rarely experienced.\n\nThe U-Haul place was across town, so Dalton followed behind the 16-foot rental. When she pulled in, Dalton said, \"Let's go help your momma.\"\n\nThey walked up just in time to open her door again, and she thanked them both. The attendant was still there, and in just a few minutes, Brooke was all set and ready to go home. \n\nWhen she came back out, Dalton said to Bo, \"Now remember what I showed you.\"\n\nHe ran over to the truck, waited, then bowed when his mother walked up. He reached up and opened the door, and helped her in.\n\nDalton was already seated, and when Brooke slid into the middle of the bench seat, she was sitting right next to him.\n\n\"Well, hello there!\" she said with a laugh.\n\nDalton looked around her and said, \"Nice job, big guy.\"\n\nBo was all smiles as his mother said, \"I believe you are a very positive influence on my son.\"\n\nDalton fired up the truck then pretended to tip the hat he wasn't wearing as he said very seriously, \"All in a day's work, ma'am.\"\n\nBrooke watched him as he realized he'd called her ma'am again, and laughed when he shook his head and said, \"Gosh dog it!\"\n\nShe laughed a happy laugh and said, \"It's okay. Really.\"\n\nDalton looked over at Bo and said, \"Your momma doesn't like it when I call her 'ma'am'.\"\n\n\"Why not?\" he asked.\n\n\"Because it makes me feel old,\" she explained.\n\n\"Well, you are old!\" her son said.\n\nHis mother gasped and pretended to be deeply offended. She placed one hand over her forehead and said, \"Why Michael Bo Mitchell! How dare you call your young, beautiful mother...old!\"\n\nBrooke flipped her long, dark hair the way a woman did when she was shrugging off a hurtful comment, and Bo started laughing.\n\n\"Oh, now you're laughin' at me, too?\" she said.\n\n\"Yes!\" he told her.\n\n\"I don't know what I'm gonna do with this boy!\" she said before reaching over and digging into both of his sides.\n\n\"Momma! Stop! I can't stand it!\" Bo said as she tickled him.\n\n\"That'll teach you!\" she said as her son shrieked with laughter.\n\nDalton was laughing, too, and when Brooke saw him she said, \"I'm sorry. We just haven't laughed a lot lately.\"\n\nShe put a hand on Bo's leg then said, \"That felt so good!\"\n\n\"You okay, Buddy?\" Dalton asked Bo as the laughter died down.\n\n\"Yes, sir,\" he said with a smile.\n\n\"Okay. Well, better you than me, right? I can't stand to be tickled, either!\"\n\n\"Oh, your turn is coming, my friend,\" Brooke told him. \"Yessiree. The next time you call me ma...that... hurtful, hideous name.\"\n\nShe held out her hands and moved her fingers indicating tickling, and Bo started laughing again while Dalton recoiled in feigned fear.\n\n\"Help! Help!\" he called out.\n\nBo was cracking up again and reached out for his mom's hands to 'save' his new best friend.\n\n\"Oh, so that's how it's gonna be, huh? The men folk ganging up on the poor, defenseless girl who's all by herself. Okay. Fine,\" Brooke said causing Bo to laugh even harder.\n\n\"We ain't gangin' up on you, Momma. Are we, Dalton?\"\n\nBrooke didn't correct her sons's grammar, and Dalton said, \"Uh...no. Of course not.\"\n\nBrooke understood Dalton meant they were ganging up on her, and that made her laugh again.\n\nAs they drove back no one said anything, but Dalton could tell Brooke was happy. And judging by the way she had her arm around her son and the way he was leaning against his mother, it was clear Bo was happy, too.\n\nDalton was trying to imagine what they'd been through together having lived some of that himself. He'd been older, but it was still very hard to watch, and he couldn't imagine how hard it had to be this little boy who was so cheerful and still so good to his mother.\n\nWhen they got to their joint front porch, Brooke hesitated then asked, \"Dalton? Do you have any plans for dinner?\"\n\n\"No, not really. My momma'd love it if I went back over for supper, but I had lunch there so...no...I don't have any plans.\"\n\n\"Well, you'd be welcome to sit with us. We don't have much yet, but I've got some macaroni and cheese and a big bag of salad greens.\"\n\nHe smiled at her then said, \"You're a real glutton for punishment, aren't you?\"\n\nBrooke laughed and Bo began pleading again.\n\n\"Our TV works!\" the boy said.\n\n\"Yes, it does,\" his mother added.\n\n\"Do you get the football channel?\" Dalton asked.\n\n\"No, but we do get ESPN,\" she told him.\n\n\"Well, I reckon that's close enough,\" he said.\n\n\"YES!\" Bo called out offering yet another high five.\n\n\"Just let me go take a shower first, okay? I don't need to go stinkin' up your new house.\"\n\n\"Okay,\" Brooke said sweetly. \"You know where we live so just come on in when you're ready.\"\n\nDalton knocked anyway when he came back over, and Bo was there to let him inside.\n\n\"Come on, Dalton! They got a football game on ESPN!\"\n\n\"Okay, okay. Who's playin', big guy?\"\n\n\"It's the Super Bowl between the Seahawks and the Patriots!\" Bo told him excitedly.\n\n\"Oh, gee. The Sea Squawks and the New Fangled Patriots.\"\n\n\"It's the best come-from-behind win ever, though!\"\n\n\"Yeah, okay. I'll grant you that,\" Dalton said as he looked over at Brooke.\n\n\"Hey, Dalton. Can I get you a beer or anything?\" she asked.\n\n\"Oh, um...no thank you. After last night I probably shouldn't get anywhere near alcohol.\"\n\n\"Why? You weren't drunk. Believe me, I can tell,\" she said.\n\n\"Just the same, I don't want to...you know,\" he said as he nodded at Bo.\n\n\"Hmmm. Now why does that not surprise me?\" she asked with another pretty smile.\n\n\"But you can have one,\" he told her.\n\n\"No, thanks. I don't drink alone. I just thought you might like one.\"\n\n\"All the same, somethin' smells mighty good,\" he told her.\n\n\"My momma's making macaroni and cheese,\" Bo told him. \"And I'm starvin'!\"\n\n\"Keep my spot warm, okay?\" Dalton told his new best buddy as he went to the kitchen.\n\nHe saw the cast iron pot and knew where the smell was coming from.\n\n\"It's not much, but it's all I've got 'til I can get to the grocery store. We've got a loaf of bread and some butter, too, so Bo won't go to bed hungry.\"\n\n\"I'd offer to go get somethin' else, but I don't exactly have a lot in my fridge, either.\"\n\n\"That's okay. I'm more interested in the company than the food,\" she told him.\n\nDalton couldn't decide whether she was just being nice or possibly flirting with him. It seemed a whole lot like flirting, but flirting didn't make any sense. It was more likely she was just feeling good being away from her ex and being nice to a guy who'd helped her out a little. \n\nJust as she turned away from him, Dalton found himself looking where he shouldn't be looking and thought, \"Day-yum. She is...fine!\"\n\n\"Are you staring at my butt, Dalton Burke?\" she asked, her back still to him.\n\nHe quickly looked away and said, \"Uh, no. Of course not.\"\n\n\"You know lyin' is a sin, right?\" she teased as she looked over his shoulder.\n\n\"Okay, well maybe a little,\" he admitted rather sheepishly.\n\n\"I'm not sayin' I want you stare, but if you didn't at least look, I'd feel pretty bad.\"\n\n\"Well, in that case, you've got nothin' to feel bad about,\" he assured her.\n\n\"Okay. Good to know,\" she said with another smile.\n\n\"Dalton! The Patriots are fixin' to convert on 4th down and start their comeback,\" Bo called out to him.\n\n\"I believe I'm needed,\" he told Brooke.\n\nAs he went to walk away, she turned and reached out a hand and touched him on the lower arm.\n\n\"Dalton? Thank you for being so kind to my boy.\"\n\n\"Oh, sure. He's kinda easy to be kind to. He's a real good kid.\"\n\n\"Yes. Yes, he is. He's such a good boy, and he's been through so much. He's been my rock through it all.\"\n\n\"I can see that,\" Dalton told her just as Bo hollered.\n\n\"Yeah, baby! That's what I'm talkin' about!\" they heard the boy call out.\n\n\"I believe they just converted on 4th down,\" Dalton said to Brooke.\n\nShe laughed then said, \"Go on. He loves having you around.\"\n\nThe three of them sat on the couch watching the replay of the Super Bowl with Bo in between them, and Dalton was amazed at how well Brooke knew football and the way she reacted to plays she liked or disliked.\n\n\"Dang, girl, you love you some football, don't you?\" he said when New England took the lead near the end of the game.\n\n\"Yes, I do!\" she said. \"And I love me some Tom Brady, too! That boy is one handsome piece of man!\"\n\n\"Well, I'll have to trust you on that,\" Dalton told her.\n\n\"Oh, you can take that to the bank!\" Brooke told him with a happy smile and a laugh.\n\n\"My momma's gonna marry Tom Brady someday,\" Bo informed Dalton.\n\n\"Oh, okay. Does his super-model wife know about that?\" he asked the boy while looking at Brooke.",
        "\"Hey, a girl can dream, right?\" she said playfully. \"I mean, don't you have some beautiful woman you dream about?\"\n\nDalton smiled at her then said, \"I didn't until...today.\"\n\nBrooke looked to make sure he was teasing them gave him a playful shove.\n\n\"Listen to you!\" she said just as the announcer yelled, \"Touchdown! Touchdown Patriots!\"\n\n\"And that's a wrap, folks!\" Brooke said when the game ended.\n\n\"And you know what that means, right?\" she said to Bo.\n\n\"Ah, Momma! Do I have to go to bed? Can't I have just ten more minutes? Please?\"\n\n\"Sorry. The game's over and it's bed time. Tell Dalton goodnight, and hit the hay. I'll be right there to tuck you in.\"\n\n\"Momma!\" he said in that complaining voice.\n\n\"Oh. So...we don't do that anymore, either?\" she asked.\n\n\"Not when Dalton's here,\" he said. \"I'm almost 11 years old.\"\n\n\"Ah. Right. Okay. Well, go brush your teeth and turn out the light then.\"\n\nBo smiled and said, \"Thanks, Momma.\"\n\n\"Are you too big to give me a hug and a kiss, too?\" she asked, her hands on her hips.\n\nHe looked at Dalton who said, \"I still hug and kiss my momma every time I see her.\"\n\nThat's all the boy needed. He put his arms around his mother then let her kiss him on the cheek.\n\n\"I love you, Bo-Bo,\" she said before realizing that would embarrass him, too. \n\nBefore he could complain she said, \"Um...Bo.\"\n\nHe turned to Dalton and said, \"Night, Dalton.\"\n\nHe mussed the boy's hair up and told him goodnight.\n\n\"It is so cool having you live next door!\" Bo told him. \n\n\"Yeah, I like havin' you for a neighbor, too, big man.\"\n\nDalton could tell Bo wanted to hug him, but was a little too embarrassed to it, so he grabbed the boy and pulled him in tight.\n\n\"Let me tell you a little secret, okay?\" \n\n\"Sure,\" Bo replied.\n\n\"Mothers were put on earth to take care of us....\"\n\nHe looked at Brooke, smiled, then finished his sentence.\n\n\"And to embarrass us. The trick is to stop letting it bother you, because, trust me, that ain't never gonna stop.\"\n\nHe saw Brooke give him a disapproving look, and it took him a second to get it.\n\n\"I mean, that isn't ever going to stop.\"\n\nBrooke smiled and Dalton told Bo to listen to his mom and go brush his teeth.\n\n\"I will!\" he promised before hugging his mom again.\n\nAs he left the room Dalton said, \"I should be goin', too. I've overstayed my welcome.\"\n\n\"Hold on. I want to talk to you, okay?\" she said with a very happy smile. \"I just want to not tuck in my son.\"\n\n\"Oh, right,\" Dalton said, understanding the psychology.\n\nShe came back a few minutes later then said, \"I uh, I wanted to really thank you for today. For everything. For me and for my son.\"\n\nDalton only smiled so Brooke said, \"You made me feel like someone really cares about me, and it's been a long time since I felt that way. But even more importantly, you made my son feel that way. So thank you, Dalton.\"\n\nHe'd never been so confused before about whether or not a girl was flirting with him. It only got worse when she moved closer and kissed him on the cheek.\n\nDalton took that as strong evidence she was flirting, and as she pulled away, he put his hands on her shoulders, and leaned down and kissed her.\n\nWhen he did, her eyes opened wide in shock, and she pushed him away immediately.\n\n\"Dalton? What the hell are you doing? What are you even thinking?\"\n\n\"I'm sorry. I...I thought...when you kissed me I assumed....\"\n\n\"I was being friendly, Dalton! For heaven's sake, you're...you're a boy!\"\n\nShe stood there staring at him then said, \"You need to go home. Now!\"\n\nNow thoroughly embarrassed and deeply hurt by being called a 'boy', even though it was true in some sense where Brooke was concerned, all he could do was apologize again.\n\n\"I'll let myself out,\" he said quietly as Brooke stood there still just staring at him.\n\nHe did let himself out and stepped a few feet to his left then turned and walked inside his place.\n\n\"Talk about crashin' and burnin',\" he said very quietly to himself.\n\nThe silence from both sides was deafening as he sat down on the sofa and stared at the wall.\n\n\"So much for patchin' things up with the neighbors,\" he told himself as he wondered how he might be able to avoid ever having to look at her again. He knew that was impossible, but he was pretty sure they wouldn't be speaking again\u2014at least not on friendly terms.\n\nIt was well after midnight when he finally laid down. Even then he couldn't sleep. He kept asking himself how he could have done anything so foolish and yes...childish. \n\nHe beat himself up for another hour or so before exhaustion forced sleep to come and give him a few hours of relief from his self-inflicted wounds.\n\nBrooke lay in bed also beating herself up. Again, she knew she'd overreacted. All she needed to say was that she didn't think of Dalton like that. She could have gotten the same message across without sounding like some kind of psycho...bitch...yet again. And after the way he so graciously handled the first incident, she wouldn't blame him if he never forgave her for the second.\n\nNo one was more surprised to see her son early that Sunday morning than Samantha Burke. She'd not only had Bart Clemons over for dinner, she'd had him for dessert. He'd offered to leave after the deed was done, but Samantha assured him Dalton wouldn't stop by until at least 10 am and maybe not until later in the afternoon.\n\nSo when she heard the front door open at 7 am, she sat bolt upright in bed.\n\n\"Bart? Dalton's home!\" she said as she shook the man who was ten years her senior.\n\n\"What? What do you mean?\" he said as he nearly jumped out of bed.\n\nHe started pulling on clothes as Samatha grabbed a robe and went out to stall her son. She knew he wouldn't walk into the bedroom, but she knew he'd seen Bart's car outside.\n\nShe tied the robe off, smoothed her hair, put on her best smile, and walked out of the bedroom.\n\nDalton was in the kitchen pouring cereal into a bowl, his back turned to her.\n\n\"Well, hello there, Mr. Early Bird!\" she said cheerfully.\n\n\"Hey, Momma,\" he said as he poured some milk on top.\n\n\"I don't have any skim,\" she said, knowing that's all he drank.\n\n\"Two percent is fine,\" he said quietly.\n\n\"Honey. I...I need to tell you something.\"\n\n\"I know who's here, Momma, and it's fine by me,\" he told her without turning around.\n\n\"I...I just didn't want you to see him...you know....\"\n\nDalton picked up his bowl and turned around.\n\n\"I know where he slept last night, too, and it really is fine.\"\n\n\"So...you're not mad at me?\" she asked hopefully. \"Or...disappointed in me?\"\n\nHe set the bowl down and walked over to give her a hug.\n\n\"You're my mother. And although I do not want to talk about it, I know my momma has the same needs as every other woman. And I know you didn't expect me home this early.\"\n\nHe pulled away then said, \"You got nothin' to feel bad about, Momma.\"\n\n\"You are so grown up,\" she told him as she put a hand on his face.\n\n\"I know someone who'd disagree with you,\" he said as he sat down before shoving a first huge spoonful into his mouth.\n\n\"Is something wrong, honey?\" she asked.\n\nBoth of them heard the rather loud, 'ahem' as Bart walked into the kitchen.\n\n\"Mornin', sir,\" Dalton said as he moved the cereal to the side of his mouth.\n\n\"Um...good morning, Dalton,\" he said with some reservation. \"I uh, I was just seeing if I could fix a wiring problem at the back of the house, and....\"\n\n\"He knows,\" Samantha said.\n\n\"Oh,\" was all Bart said in response.\n\n\"I uh...I should probably be goin',\" Bart said.\n\n\"No. Don't leave,\" Dalton said. \"Have a cup of coffee.\"\n\nHe remembered who he was talking to and said, \"If you'd like\u2014sir.\"\n\n\"Well, that's right kind of you, son,\" he said. \"You sure you don't mind?\"\n\n\"My momma obviously likes you, and as long as you're treatin' her all right, then I don't mind at all.\"\n\nSamantha went to make a pot while Bart said, \"You can bet your bottom dollar I'll treat your mother very well.\"\n\n\"Then it's all good, right?\" Dalton said, trying to force a smile.\n\nOnce the coffee was going, Samantha sat down next to Bart who was sitting across from Dalton.\n\n\"So what brings you home so early, sweetie?\" his mom asked.\n\n\"Oh. Well, I guess I'm tryin' to avoid my new neighbor.\"\n\n\"Is she still upset about the noise?\"\n\n\"No, ma'am. She forgave me for that.\"\n\n\"Then what is it? I know you well enough to know you wouldn't say or do anything to upset anyone, so I can't imagine why she'd be upset with you.\"\n\n\"I really should be gettin' home,\" Bart said, sensing he was the reason they couldn't talk.\n\n\"It's okay, Mr. Clemons,\" Dalton told him. \n\n\"If you need to talk, I'll be happy to leave,\" he said immediately.\n\n\"It's just a little embarrassing. That's all,\" Dalton said before taking another oversized bite.\n\n\"Well, I won't keep botherin' you to tell me,\" his mom said. \"But if I can help, just let me know, okay?\"\n\nDalton swallowed the food then said, \"I uh...I kinda kissed her.\"\n\nSamantha's eyes got very big as she turned to Bart who just shrugged his shoulders.\n\n\"You what?\" she asked.\n\n\"I kissed her,\" he repeated.\n\nDalton explained how the day went from meeting her outside to returning the U-Haul to dinner, the football game, and...the kiss on the cheek.\n\n\"So now I'm gonna have to try and avoid her for the rest of my life,\" he said before taking another massive spoonful.\n\n\"Maybe you just surprised her, honey. Yes, she's a grown woman with a child, but I'm sure she's not...angry.\"\n\n\"Oh, she's angry, Momma. Trust me. The way she looked at me when she told me to go home said it all. Oh, and telling me I'm just a boy was an added bonus.\"\n\n\"So if you see overtime requests from me every day, Mr. Clemons, you'll know why.\"\n\n\"I'll sign off on every one of them 'til this blows over,\" the older man told him.\n\n\"Just tell her you're sorry, baby,\" Samantha suggested.\n\n\"That ain't gonna cut it, Momma. I really blew it this time.\"\n\nSamantha looked at Bart who said, \"Sorry. I got nothin'.\"\n\n\"This, too, shall pass,\" his mother said with a firm nod. \"Nothin' lasts forever, right?\"\n\n\"You didn't see how she looked at me,\" Dalton told her.\n\n\"Is there anything I can do to help? Other than the overtime?\" Bart inquired.\n\n\"You don't have a spare TV lying around, do you?\" Dalton said with a kind of wry smile.\n\n\"As a matter of fact, I do,\" Bart told him. \"It's pretty near brand new, too. I'll bring it over later this afternoon.\"\n\n\"Oh, no, sir. I was just kiddin' around. I'll go pick one up as soon as my first check comes in.\"\n\n\"Well, you could pay me back for it,\" Bart told him.\n\n\"I'm already in hock to my momma for the security deposit.\"\n\n\"So pay me $5 a payday for as long as it takes. It's just sittin' around collecting dust. My wife was the only person who ever watched it, and well, I'm a single man now.\"\n\nHe smiled at Samantha who gave him a very quick, coy look before turning away.\n\n\"Well, if you'll let me pay it off that slow...sure. That'd be great.\"\n\n\"All right! I'll swing by around 3 o'clock if that works for you.\"\n\n\"What time is supper today, Momma?\"\n\n\"Five o'clock. Same as every Sunday,\" she told him. \"And if it's okay, would you mind if....\"\n\n\"Not at all. Bart's welcome here anytime, as far as I'm concerned.\"\n\n\"Well, thank you, Dalton, and that kind of attitude tells me you're no boy.\"\n\n\"Can you talk to my neighbor?\" he asked rhetorically.\n\nBrooke wasn't home when Bart dropped by, and so far, Dalton had avoided her all day. They got the TV up and running in minutes, and Dalton now had a 60\" flatscreen on the wall in his living room. He thanked the older man sincerely, and Bart told him something he'd been wanting to say.\n\n\"I really like your momma, son. I mean, I really like her.\"\n\n\"Well, it seems like she really likes you, too, sir,\" Dalton told him.\n\n\"And if we're gonna be seein' each other socially, maybe you could call me Bart?\"\n\n\"Oh, wow. I'm not too sure about that,\" Dalton said.\n\n\"Maybe just around the house whenever we're there together?\" \n\n\"It'll take some gettin' used to, but I can agree to try,\" Dalton told him.\n\nBart smiled, stuck out his hand, and said, \"That's all I can ask for.\"\n\nBrooke spent her Sunday with the only real friend she had in Union. Casey Connor graduated with Brooke, and was the only person she'd stayed in touch with over the years. She was also a single mom with a son who was a two years younger than Bo who looked up the older boy.\n\nWhen she left the house around 8 am, she knew Dalton was gone because she'd heard him leave, and when he did, she got up and decided to spend the day out of the house herself.\n\nShe and Casey talked and caught up on years gone by while the boys played what else...football...outside.\n\n\"So has anyone moved into the other unit?\" Casey asked when Brooke mentioned her new place.\n\n\"Oh. Um...yes. A younger guy who just got his electrician's license is renting it out.\"\n\n\"Is he cute?\" Casey asked immediately.\n\n\"He's definitely cute,\" Brooke said. \"Maybe even gorgeous.\"\n\n\"Ooh! Tell me about him. What does he look like? What does he enjoy doing. Oh, and how young is 'younger'?\"\n\nBrooke wanted to laugh but couldn't, and Casey sensed something was going on and finally coaxed it out of her friend.\n\n\"So let me get this straight,\" Casey said after listening to Brooke tell her every little detail of her interactions with her handsome young neighbor.\n\n\"He's hot like a rock star, his body is hard as an actual rock, he fixes things for you without asking, your son idolizes him, and he has a steady job. How am I doin' so far?\"\n\n\"Pretty good,\" Brooke replied.\n\n\"Let's see. He respects his mother, you had to tell him to stop calling you ma'am, he's thoughtful and conscientious, and he apologized for the noise from a party he only allowed because he didn't you'd be home.\"\n\n\"Um...yes,\" Brooke said.\n\n\"And you, my dear friend, have chewed him out twice in one weekend?\"\n\n\"I know. I know. I'm...horrible. But he just surprised so bad I...I just reacted, you know?\"\n\n\"So it wasn't that you didn't enjoy the kiss, it was more that because he's 19 you felt you had to lose your cool and tell him to go home, huh?\" Casey teased.\n\n\"He has to hate me now. Or at a minimum he's gotta think I'm psychotic or schizophrenic or...somethin'.\"\n\nWhen Casey didn't say anything, when she sat there staring at her friend, Brooke finally said, \"What? Why are you lookin' at me like that?\"\n\n\"Because it's none of my business. That's why.\"\n\n\"No, go ahead. Speak your piece. Tell me what you're thinking,\" Brooke said earnestly.\n\n\"You sure you want to hear it?\"\n\n\"Yes. I'm sure,\" Brooke told her. \"Or at least I think I am.\"\n\n\"Okay. Here goes,\" Casey said.\n\n\"If everything else was the same, but this...Dalton guy...was 30 or even 25, you'd have kissed him back, right?\"\n\n\"No. I...I don't...well, maybe. I'm not really sure,\" Brooke replied.\n\n\"No, you're sure. You just don't want to admit it.\"\n\n\"Okay, let's say you're right. The truth is, he is 19.\"\n\n\"So?\" Casey said.\n\n\"So? How can you say 'so'? He's only been out of high school for a few months!\"\n\n\"Didn't you say he spent three years in an apprentice program starting at 16?\"\n\n\"Well, yes.\"\n\n\"How many other guys do you, of any age, who've done anything like that? I'll answer for you. None. So he's got focus and 'stick-to-it-ness'. That's not in doubt. He's single but doesn't sit around drinking beer all day, either. How many guys do you know like that who aren't the church-goin' type?\"\n\n\"Well, maybe a few,\" Brooke said defensively.\n\n\"Okay, and how many of them are 'rock-star' handsome?\"\n\nBrooke sat there for a few seconds before saying, \"Okay. None of them. So?\"\n\n\"Ha! Now look who's sayin' 'so'?\" Casey teased.\n\n\"Be serious!\" Brooke said.\n\n\"I am, but you're not listening.\"\n\n\"I'm listening,\" Brooke told her.\n\n\"But you don't want to hear what I'm sayin'.\"\n\n\"Fine. Go ahead and finish sayin' it.\"\n\n\"Thank you,\" Casey said in an overly magnanimous way.\n\n\"First, set the age thing aside. Now ask yourself, 'Am I attracted to this guy'? You already know the answer is 'yes'. So ask yourself if he has character. You know the answer to that, too. Does he have a good, solid, dependable job? Yes. And I'd call his line of work a career more than just a job. He respects women, he likes your boy, your boy loves him, and he's the kind of guy who takes care of stuff without bein' asked, and he don't drink. If my ex had had half those qualities, we'd still be married. And I'm pretty sure you would be, too.\"\n\n\"I can't argue with any of that except for the 'set his age aside' part.\"\n\n\"And I can't help you with that. Just remember you can date someone\u2014anyone\u2014without committing to anything more than that. You do know that, right?\"\n\n\"Sure, but I have a son. A son who already thinks the sun rises and sets with Dalton Burke.\"\n\n\"I can't help you with that, either. I know it's dangerous to bring a guy around because our boys could get attached to 'em. But you can't not date or see someone just because Bo might get hurt. And from what I can tell, this Dalton seems mature enough to handle it if you did get a little more serious then called things off.\"\n\n\"Casey? Are you listenin'?\" Brooke asked.\n\n\"About?\"\n\nBrooke sighed loudly then said, \"His age! He's 19 years old!\"\n\n\"Chronologically, yes. But does he have an older soul?\"\n\n\"An older soul? What in the world does that mean?\"\n\n\"Does he act 19 or...29? Does he behave like a kid right out of high school or a grown man with ambition and goals? Is he a player or a guy who's family oriented? That's what I mean by an 'older soul',\" Casey explained.\n\nBrooke couldn't keep objecting because she was out of objections. She could either let this age difference be a 'show stopper' or set it aside and give him a chance. Then again, what chance did she have after her second 'volcanic eruption' even if she could see Dalton for the 'older soul' inside him?\n\n\"It's a moot point,\" she finally said.\n\n\"Why's that?\" Casey asked.\n\n\"Because I went off on him twice in two days.\"\n\n\"Both of those were misunderstandings. Look. I know you. I know you don't 'go off' on people. You don't blow up or lose your cool. But who wouldn't if they came home after midnight and there's a party going in essentially in your house? And okay, you came on a little too strong when he...misread things. Just tell him you overreacted and you're sorry.\"\n\n\"Easy for you to say,\" Brooke told her.\n\nBrooke stayed for lunch and dinner then went grocery shopping before going home and prayed the pickup truck wouldn't be in the driveway when she pulled in. She quietly thanked the Good Lord for minor miracles when he wasn't, and she and Bo got everything inside with no sign of her neighbor.\n\nDalton didn't go home until nearly 10 o'clock, and when he did, he killed the headlights before he turned into the driveway, then unlocked and opened his door as quietly as he could when he went inside. He turned the TV on but set it on mute to avoid any chance of giving Brooke a reason to come bite his head off a third time. \n\nAround midnight he went and laid down but still couldn't stop thinking about what had happened. The fact that it bothered him so much forced him to admit there something more going on than just feeling bad for what he'd done. That he did feel bad was what made him understand why he felt bad. He had feelings for her, and no matter how hard he tried to convince himself he didn't, he knew he did.\n\nBrooke was not only aware he'd come home, she'd sat there in the dark waiting for him. She'd been working up her nerve since she got home, and even more so since putting Bo in bed, to stop Dalton and apologize the moment she saw him.\n\nBut when he'd turned his lights out, it was obvious he didn't even want to talk to her let alone listen to her pathetic apology; her second apology since they'd met. So she sat there and did nothing as she watched him walk up the sidewalk then heard his key in the door.",
        "She, too, laid down around midnight, and as she lay there she decided to leave well enough alone. If she ever found an appropriate time to talk to him she would. If not, well, he'd probably prefer that anyway.\n\nBrooke was very relieved when Dalton left the house at 7 am. She didn't need to leave until 7:30 in order to drop Bo off at school and be to work by 8. She was so busy all day she forgot all about the drama at home until it was time to go pick Bo up from Casey's house.\n\nHer friend had agreed to let him walk over there with her son each day after school. Bo was in 6th grade while Casey's boy, Chad, was in 4th. They went to the same school and got out at the same time, and Casey's house was just two blocks from the school. Neither of them had a problem with their boys being home alone for a couple of hours each workday until they got back from work, and it saved them money they couldn't afford to spend on childcare. While anything could happen anywhere in the world, Union was one of the safest places either of them knew of, so the odds of something going wrong, especially with them together, were very, very low.\n\nBrooke pulled in just before 5:30 after leaving work at 5 then picking up her son at 5:15. She breathed a sigh of relief when his truck wasn't there, but Bo didn't.\n\n\"Momma? When can Dalton come over again?\" he asked when he didn't see his truck.\n\n\"Oh, well, I don't know, ba...honey. He uh, he works a lot, you know. Being an electrician and all.\"\n\n\"I wanna be an electrician when I grow up,\" Bo told her as they walked inside.\n\n\"I thought you wanted to be a pro football player?\" his mom said.\n\n\"Well, yeah, but after I retire I want to be an electrician so I'll have more money.\"\n\nBrooke managed not to laugh and told him that sounded like a fine goal, and Bo didn't bring up their neighbor again the rest of the night.\n\nTuesday and Wednesday were repeats of Monday, and Brooke was relieved each morning and evening that she didn't have to deal with 'the situation'.\n\nOn Thursday, Bart called Dalton and Jeff and told them they'd be working at the elementary school for the next two days wiring a new 'portable' the school had just received from the county.\n\nThey had to finish up another project, but as soon as it was done, they were to head straight to the school and get started.\n\nAs it turned out, school had just been dismissed as they were arriving. \n\n\"Just our luck,\" Jeff Mercer said as they drove along the street in front of the school as one bus after the other pulled out.\n\n\"Yeah, it's a little cra....\"\n\nDalton stopped talking when he saw someone he recognized. He saw Bo walking with a smaller boy, and rolled down the window to say 'hey' to him when four older, bigger boys ran up and started taunting them.\n\n\"Pull over, man,\" Dalton said.\n\n\"What? I can't pull over. There's traffic behind me and....\"\n\n\"Pull over right now!\" Dalton said.\n\nJeff shook his head but did as his partner asked, and Dalton flew out of the company truck before it stopped. He didn't even close the door before making a beeline to what had become a circle around Bo and his friend.\n\n\"His daddy's a drunk. That's why he lives all alone with his...mommy!\" one of the larger boys said.\n\nDalton heard that just as he vaulted a chain-link fence. He stepped right into the middle of the circle and put his hand on Bo's shoulder and asked if he was okay.\n\n\"Dalton!\" the boy said, a huge smile appearing on his face.\n\nDalton looked at each of the four larger boys then said, \"I see you boys know my friend, Bo.\"\n\nOne of them said, \"That's Dalton Burke.\"\n\nAnother said, \"He's the best QB Union's had in...forever.\"\n\nHe looked right at the boy who made the comment about Bo's father and said, \"My dad's the town drunk. But guess what? I'm not responsible for him or anything he does. And Bo's not responsible for his father, a man you boys don't even know. So before you go makin' comments, I suggest you think very carefully about it.\"\n\nHe looked each one of them in the eye then said, \"Am I clear?\"\n\nThe boy who made the comment said, \"Yes, sir.\"\n\nThe others then followed suit.\n\n\"Just remember. If you give my friend here a hard time, you're givin' me a hard time. Is there anyone here who wants to give me a hard time?\"\n\nHe looked around again and all the boys said, \"No, sir.\"\n\n\"Okay. Good. Then I think we understand each other.\"\n\nThey went to leave, but Dalton said, \"Boys?\"\n\nThey all stopped and looked at him.\n\n\"I believe you owe my friend here an apology.\"\n\nHe bored a hole into the boy's head who made the comment and he immediately said, \"Sorry, man.\"\n\n\"His name is 'Bo,\" Dalton told him. \"Now you say it.\"\n\n\"Sorry...Bo,\" the older boy said.\n\n\"It's okay,\" Bo told him. \n\nHe'd already forgotten what the other boy even said because his hero was standing there, now with his arm around him, calling him his friend in front of these bigger kids.\n\n\"All right. You boys make sure I never have to come talk to you again, you understand?\"\n\nDalton got one more round of 'yes, sirs' before he let them walk away.\n\n\"You okay, Bo?\" he asked as he kind of shook the boy's shoulders.\n\n\"I'm good,\" the boy told him, a smile glued to his face.\n\n\"How about you, young man?\" he asked as he bent down to talk to the smaller boy.\n\n\"I'm good, too, sir,\" he said. \"Are you really Dalton Burke?\"\n\n\"I believe I am,\" he told him. \"And who are you?\"\n\n\"I'm Chad. My momma's friend's with Bo's momma.\"\n\n\"Oh, okay,\" Dalton said. \"Well, it's a pleasure to meet you.\"\n\n\"You, too, sir,\" Chad said as they shook hands.\n\nDalton knelt down and asked Bo, \"So how's your momma doin'?\"\n\n\"She's good,\" he replied. \"How come you don't never come over no more?\"\n\n\"Oh, well, it's...it's only been a few days, big guy,\" Dalton said hoping that would satisfy the boy.\n\n\"There's gonna be another Super Bowl game on Friday night on ESPN.\"\n\n\"Oh? Who's playing'?\" Dalton asked.\n\n\"The Steelers and the Packers. From back in the day,\" Bo told him.\n\n\"Wow. Two good teams.\"\n\n\"Can you come over and watch it with us?\" Bo asked.\n\n\"Um, well. I don't know, buddy. I been workin' a lot of overtime this week.\"\n\n\"Oh, okay,\" the boy said as the smile faded from his face.\n\nDalton knew it was a look of disappointment, something Bo had undoubtedly had more than his share of in his young life.\n\n\"Hey, we'll see, okay?\" Dalton said with a smile as he mussed the boy's hair up.\n\n\"Really?\" Bo said, the smile back on his face.\n\n\"High five?\" Dalton asked.\n\nHe let both boys slap his hand then asked, \"Where y'all headed?\"\n\n\"Over to Chad's house. His momma lives just down the street.\"\n\n\"Okay, and you boys walk alone every day?\"\n\n\"Yes, sir. It ain't far,\" Chad told him.\n\n\"It isn't far,\" Dalton ended up telling him.\n\n\"Oh, right. Sorry. Sometimes I forget,\" Chad said.\n\n\"Nah, it's okay,\" Dalton told him with a smile. \"You boys go straight on home, okay?\"\n\n\"We will!\" Bo and Chad both said in unison.\n\n\"What and who the hell was that?\" Jeff asked once Dalton got back in. He'd had to pull the truck up onto the curb to let traffic go by and sat there watching the drama unfold.\n\n\"That's my neighbor's son,\" Dalton said as he pulled the door shut.\n\n\"Oh, okay. The psycho woman from the party,\" Jeff said with a smile.\n\nDalton looked over and said, \"Jeff, you might be my mentor, but if you ever say anything like that about her again, I'm gonna kick your ass from here to Sunday.\"\n\nJeff stared back for a few seconds then laughed.\n\n\"Well, well. Someone's got a thing for his hot, older neighbor.\"\n\nHe laughed loudly as he pulled back into traffic, but Dalton just sat there stewing in his thoughts. Making matters worse was that Jeff knew exactly what was eating at him without having to ask a single question.\n\nIt was a little after 8 o'clock that evening when Dalton finally got home. This time he didn't shut his headlights off. He wasn't going to try and hide from Brooke anymore. He had no intention of seeking her out, but he wasn't going to play this game any longer, either.\n\nThe lights were on on her side, but she'd hung some curtains so Dalton couldn't see much as he came up the sidewalk. He went inside and turned on the TV, but this time he left the volume on at a very low level.\n\nHe took a quick shower then threw something into the microwave and waited for it to cook as he popped the top on a diet Coke and took a long drink.\n\nBo told his mother what happened as soon as she picked him up, and when Casey arrived a few minutes later, Chad repeated the story to her.\n\nShe looked at Brooke and said very smugly, \"Yeah, but he's only...a boy.\"\n\nThen she poured salt in the would by saying, \"A 19-year old boy, at that.\"\n\n\"Okay, I'll talk to him,\" she said with a shake of head.\n\n\"If he doesn't forgive you, can you let him know where I live?\" Casey said with a smile.\n\n\"Who's gotta forgive you, Momma?\" Bo asked hearing only the last of their conversation.\n\n\"Oh. No one, ba...buddy,\" she said with a weak smile. \"Momma's just gotta eat a little crow tonight.\"\n\nBrooke put Bo to bed around nine and he was out hard in less than ten minutes. She took a deep breath then walked outside and looked at the other door.\n\n\"Put your big-girl panties on, Brooke,\" she told herself as she knocked.\n\nDalton got up, opened the door, and when he saw Brooke, his heart involuntarily raced.\n\n\"Hey,\" he said quietly.\n\n\"Hey,\" she replied. \"Can I...can I come in? I won't stay long. I just wanted to talk.\"\n\n\"Um, yeah. Sure,\" he said as he stepped aside. \"Can I get you anything?\"\n\n\"Not unless you've got some humble pie. If so, I'll take a slice,\" Brooke said.\n\n\"Why would you be eatin' humble pie?\" Dalton asked sincerely.\n\n\"Because I showed you my a...my backside a second time by completely overreacting\u2014again.\"\n\n\"Oh. That,\" Dalton said.\n\n\"Yes, that. I...feel terrible, Dalton. I can't expect you to forgive me a second time, but it's been eatin' me alive since it happened, so all I can do is ask.\"\n\n\"You didn't do anything wrong,\" he told her quietly. \"I completely misread the situation, and I felt like I was lucky you didn't give me the back of your hand.\"\n\n\"What? No. I...wouldn't have...why would I have done that?\" Brooke asked.\n\n\"Well, because you were disgusted by my behavior, I reckon,\" Dalton told her.\n\n\"No, I...I wasn't...disgusted, Dalton. I was just really surprised, you know?\"\n\n\"Regardless, I'm the one who owes you an apology\u2014again,\" he told her.\n\nBrooke smile then looked down before saying, \"Thank you for what you did today.\"\n\nShe looked up and said, \"For my boy.\"\n\n\"Oh. He told you?\"\n\n\"That is all he's talked about it. Chad, too. You were already Bo's hero, now you're like some kind of god or somethin'.\"\n\n\"Well, maybe some kinda...hillbilly deity...maybe?\" he asked trying to lighten the mood.\n\nBrooke laughed a little then laughed harder because she really needed to so she could let go of the guilt she'd been carrying around.\n\n\"That was very kind of you,\" she told him.\n\n\"I'm just glad I was there. I don't think they'd have hurt him\u2014physically\u2014but words like that hurt just as much sometimes,\" he told her.\n\n\"What...what did they say?\" she asked.\n\n\"Bo didn't tell you that part?\"\n\n\"No. Dalton, tell me. What did they say?\"\n\nHe told her what he'd heard and when the words sank in, Brooke's eyes welled up with tears.\n\n\"Hey, they were just bein' boys,\" he told her hoping it would help.\n\n\"No, I know that,\" she said as she looked around for something to dry her eyes with.\n\nDalton peeled off a paper towel and handed it to her.\n\n\"Thank you,\" she said. \"It's just that those words are true. I know it's not my fault, but that doesn't help me not feel bad for my son. His daddy is a drunk\u2014and a pill head. And I'd never say it in front of Bo, but he really is bum, too. The man couldn't hold a job if his life depended on it, but Bo thinks he hung the moon.\"\n\n\"We all have our faults, right?\" Dalton offered.\n\n\"Yes. Yes, we do,\" Brooke said as she tried to smile. \"Like overreacting and treating a very kind, decent person, who's done nothing but be nice, terribly.\n\nShe mustered up a brave smile then said, \"Can you forgive me one more time?\"\n\nDalton crossed his arms and pretended to be mulling it over before saying, \"Well, I suppose I could try.\"\n\nBrooke smiled happily then said, \"Jez do not let der be a turd,\" in some kind of accent he didn't recognize.\n\n\"It's from the movie Gotcha. You know, with Linda Fiorentino who plays the sexy Czech woman, Sasha Banicek, who falls in love with the um...19-year old Jonathan.\"\n\nDalton just looked at her with a blank stare.\n\n\"You've never watched Gotcha?\" she asked as though everyone had or should have.\n\n\"No. Sorry. Never even heard of it,\" he told her.\n\nShe tried doing the Slavic accent again and said, \"Then you must bee coming to my place and watch movie wiz me. I am having it on DVD.\"\n\n\"Hmmm. A 19-old guy falls in love with an older woman, huh?\" Dalton asked.\n\nBrooke remembered what Casey said and couldn't help but smile.\n\n\"It's...just a movie,\" she said very sweetly. \"But it's one of my favorites, and yes, Jonathan, or Anthony Edwards in real life, did fall in love with her.\"\n\n\"I see. And she fell for him, too, you said?\"\n\n\"She did,\" Brooke said very quietly as they looked into one another's eyes.\n\n\"Well, in that case, I guess it might be worth watchin',\" he said with a smile. \"But Bo wants to watch another Super Bowl rerun with me, so....\"\n\n\"I wouldn't mind if you did both with us,\" she told him.\n\n\"Or y'all could come over here,\" he told her.\n\nOnly then did she notice the new television running in the background.\n\n\"Oh, wow. That's nice,\" she said.\n\n\"And I've got ESPN and the football package,\" he proudly announced.\n\n\"Well, how could I resist then?\" Brooke said sweetly.\n\n\"So...tomorrow? Friday night?\" Dalton asked.\n\n\"Yes. Friday night,\" she replied. \"What time?\"\n\n\"I could bring home a bucket of KFC,\" he told her as he remembered the last twelve bucks he still had. \"Or maybe a family meal.\" A bucket was more than $12 but he could bring home enough to feed everyone some chicken and coleslaw.\n\n\"Maybe I'll bake a loaf of bread to bring over,\" she told him with a warm smile.\n\n\"That sounds right nice,\" he told her.\n\n\"Okay. Well, I'll see you then, and thank you for not making me eat the whole slice of humble pie.\"\n\nDalton laughed then said, \"Come on. I'll walk you home.\"\n\nBrooke laughed again, and felt like everything was behind her.\n\nThey stopped at her door and Dalton said, \"I guess I'll see you tomorrow then.\"\n\n\"Okay,\" she told him. He went to walk away, but Brooke reached for his arm and stopped him.\n\n\"Dalton?\" she said very quietly.\n\nHe turned around and raised his eyebrows indicating he was listening.\n\n\"I...I wouldn't mind if...if you kissed me again,\" she said, her heart thumping like crazy in her chest. \"For real this time.\"\n\n\"Is this some kind of setup?\" he asked after kind of cocking his head to one side.\n\nHaving lost her nerve, Brooke said, \"I'm sorry. I don't know what I was thinking. I'm just gonna go inside and...shoot mys....\"\n\nDalton reached over and gently lifted her chin up, stopping her before she could finish then leaned down to kiss her.\n\nHe stopped then said, \"If you yell at me again....\"\n\nBrooke's eyes locked with his as he spoke.\n\n\"I won't,\" she whispered. \"I promise.\"\n\nAs their lips met, she put her arms around his neck and kissed him back.\n\n\"See? No yelling,\" she told him when he pulled away.\n\n\"That was really nice,\" Dalton told her.\n\n\"Yes, it was,\" she agreed.\n\n\"Well, I uh, I guess I'll see you tomorrow then,\" he said.\n\n\"Yes, you will. Oh. Dalton?\"\n\n\"Uh-huh?\"\n\n\"You...you didn't misread anything. When you kissed me the other time.\"\n\n\"It sure seemed like I did,\" he said.\n\n\"I...I just didn't want...I couldn't admit...how much I liked you, so I...I lashed out, and I'm really so....\"\n\n\"No more apologizin', okay?\" he told her in a way she found both very masculine and very charming.\n\n\"Okay,\" she agreed. \"Well...g'night.\"\n\nDalton again pretended to tip a hat and said, \"Evenin', ma'am.\"\n\nBrooke not only didn't get upset she laughed and said, \"I'm so glad we talked.\"\n\n\"Yeah. Me, too,\" he told her before going back inside.\n\nThat night Brooke couldn't remember the last time she'd felt that happy. It didn't matter whether it would be an occasional movie or possibly something more. She was just so relieved to have smoothed things out with Dalton, and were she to have to say it out loud, she knew she'd have to admit she'd really enjoyed the kiss. Maybe even both of them. \n\nBo was chattering about Dalton almost from the moment he woke up, and his mom finally told him they'd be going next door to watch the Super Bowl that evening.\n\nBo started jumping around and hollering, \"Yes!\" before his mom could tell him to keep it down because Dalton could hear.\n\n\"Sorry, Momma! I'm just so happy!\"\n\n\"Yeah. Me, too, baby,\" she said without drawing a rebuke. In fact, she even got a hug from her very-happy son.\n\nDalton left early again so she didn't see him go, but Brooke smiled when she saw a note under the wiper blade of her car.\n\nShe opened it up and read, \"If I misread last night, I'm probably in big trouble again, but I just wanted you to know I checked out the trailer to Gotcha on line last night, and you can be my Sasha Banicek anytime. Just don't start smokin', okay?\" referring to 'Sasha' who did.\n\nHe signed it 'Jonathan' then crossed it out and wrote his own name followed by a smiley face.\n\n\"Why are you smilin', Momma?\" Bo asked as he watched her smile so broadly he couldn't help but notice.\n\nShe laughed out loud then said in her terrible Czech accent, \"I think leetle boy'z momma eez very much liking older boy.\"\n\n\"Momma? You have done gone crazy!\" Bo told her as he got in the car, shaking his head at her silliness.\n\n\"You may be right, baby,\" she said quietly enough that he couldn't hear as she realized she might well be falling for her own 19-year old 'boy' who wasn't named Jonathan.\n\nWhen Brooke picked up Bo late that evening, Casey was already home.\n\n\"My, my, my! Someone can't stop talkin' about how he and his momma are gonna watch football with their neighbor tonight. Did someone apologize?\"\n\nBrooke had been so excited all day she could barely concentrate at work, and she was dying to tell someone.\n\nShe leaned closer and quietly said, \"More like we...kissed and made up.\"\n\n\"Get outta here!\" Casey said. \"You kissed? Who kissed who?\"\n\nBrooke knew it was 'whom' but didn't care.\n\n\"He kissed me!\" she admitted then explained how it happened.\n\n\"You are so gonna be gettin' it tonight,\" Casey said with what was clearly envy.\n\n\"Oh, stop! That is not gonna happen. It's just dinner and a movie. And a Super Bowl.\"\n\n\"A movie, huh? Would it maybe be a...romantic movie?\" Casey asked, hoping to hear it would be.\n\n\"Well, kind of,\" she said.\n\n\"Stop that! Just tell me already!\" Casey demanded.\n\n\"You ever seen Gotcha with Ant...\"\n\n\"Anthony Edwards and Linda Fiorentino? Only like five times!\" Casey told her.\n\nShe looked at Brooke then said, \"If your hair was short, I swear you could pass for her back in the day.\"\n\nBrooke laughed and said, \"Eez wary nice kompliment, no?\"\n\nCasey laughed and told her, \"Okay. Your Sasha Banicek accent is terrible, but yes, it was meant as a compliment.\"\n\nBrooke let Bo know it was time to go, and Casey said, \"Please, I'm beggin' you, girl. Give me the details on Monday. All of them, okay?\"\n\n\"A spy is never telling secrets,\" Brooke said causing them both to laugh.\n\n\"My momma's done lost her mind,\" Bo told Casey as they said goodbye.\n\n\"She may have lost her mind, but I think someone's stolen her heart,\" Casey told him while looking at his mother.\n\nBrooke gave her a 'don't be ridiculous look' but knew Casey might be right. She also knew she hadn't been with a man in so long it was scary, and were Dalton to offer his incredible, hard body....",
        "\"Why are you dressed so purdy, Momma?\" Bo asked when she changed clothes.\n\n\"Do you like it?\" she asked.\n\n\"Well, yeah. I mean, you always look beautiful. You just look extra beautiful tonight,\" he told her.\n\nShe hugged him and said, \"I love you so much.\"\n\n\"I love you, too,\" he said. \"Now can we please go over to Dalton's?\"\n\nShe let Bo knock on the door as she held a loaf of bread she'd baked in the bread-making machine she rarely used as soon as she got home, sending that heavenly smell wafting through the house.\n\nDalton opened the door and when he did, both he and Brooke stood there staring at the other.\n\nBo looked at them both then said, \"Can I go inside?\"\n\n\"Oh. Yeah. Sure thing, buddy,\" Dalton told him without taking his eyes off of Bo's mother. \n\n\"Wow. You look great,\" he told her.\n\n\"Right back atcha, cowboy,\" she told him truthfully and admiringly.\n\nShe'd never seen him in anything but jeans, work clothes, or gym gear. He'd put on a pair of khaki pants with a dark-blue, button down shirt, and combed his long, gorgeous hair that Brooke couldn't stop looking at.\n\n\"What? Does I look dumb like this?\" he asked. \"I can change it if you....\"\n\nShe finally moved, and when she did, she quickly kissed him and said, \"Don't you dare.\"\n\nBrooke knew the movie Gotcha by heart, and she clearly remembered the pretty girl 'Jonathan' shot with the paintball and what she was wearing. While that style of clothing was long out of style, what she was wearing was similar to the girl in the movie and most definitely wasn't out of style.\n\nHoping he'd like it, Brooke had chosen a soft pink sweater and a matching short skirt to wear with it. She hadn't worn her pink heels in years, and decided this was as good a time as any to break them out again. Judging by the way Dalton kept looking up every time she turned his way, it was evidently working quite well.\n\nDinner was greasy but delicious. Both Brooke and Dalton picked the skin off their chicken while Bo asked for theirs after eating his. \n\nEven though they knew who'd win, they still yelled and cheered during the game. None of them had a favorite team so anytime something exciting happened, it was a cause to celebrate.\n\nBrooke offered to go home when the game was over, but Dalton quietly asked her to stay.\n\n\"I guess I could do that,\" she told him as their fingers touched sending bolts of 'lightning' through their bodies. \n\nBo hung tough until just after 11 when he tipped over on the couch where he'd been watching Nikelodeon by himself as the grownups sat and talked, the tension building between them the entire time.\n\n\"Can you help me carry him next door?\" Brooke asked once she noticed was Bo was out.\n\n\"Or we could put in my other bedroom,\" Dalton suggested.\n\n\"Well, we'll just have to carry him over later,\" she reminded him.\n\n\"Later is better,\" he said with a smile after moving very close to her.\n\n\"Okay,\" she replied as her entire body tingled.\n\nDalton easily lifted the boy and carried him to the little bedroom he hadn't been in but once just to check it out after moving in. He gently laid Bo down after Brooke pulled the covers back. She pulled them up over her son then she and Dalton stepped out.\n\nBrooke left the door cracked and once they were in the small hallway she said, \"So...now what?\"\n\nDalton stepped up to her, put his hands on her shoulders, smiled, then said, \"I do not want to get in trouble tonight.\"\n\nBrooke smiled back and put her arms around his waist.\n\n\"Then you should probably kiss me right now.\"\n\n\"Do you promise you won't yell at me?\" he teased.\n\n\"Dalton! Stop it!\" she protested with a phony pout.\n\nHe put his hand on her face and said, \"You are so beautiful.\"\n\nBrooke knew she was a pretty girl, but she'd never thought of herself as 'beautiful' except during her senior year when she was cheerleading. She'd been told she was many times, but she knew men often said that to any reasonably attractive girl they were interested in. But Dalton made her feel beautiful, and even though the word didn't really apply, what was true was that he was a 'beautiful' man. She was now certain that if he kissed her, she would give herself to him without another word.\n\nAnd two seconds later he did kiss her.\n\n\"Mmmm. Is your bedroom available?\" she asked, her eyes hungry with need.\n\n\"It is, but this can't be about sex, Brooke,\" Dalton told her in a way that caused her a moment of confusion.\n\n\"You don't want to make love to me?\" she asked, wondering what she might have said or done.\n\n\"Oh, I do. I really, really do,\" he told her.\n\n\"Then what are you saying?\"\n\n\"I'm saying you're the most amazing woman I've ever known, Brooke. I'm saying I don't want to sleep with you then just be friends. I'm saying I want there to be an 'us'.\"\n\nHer eyes were flying back and forth while his were motionless.\n\n'O...okay,\" she said barely above a whisper.\n\nDalton surprised her when he reached down and gently picked her up. She smiled and put her arms around his neck as he carried her to his bedroom.\n\n\"I guess it's a good thing I learned to make my bed,\" he told her as her laid on it.\n\n\"It's just gonna get messy real fast,\" she said with a happy smile.\n\n\"Somethin' tells me you'll help me make it before you leave, though,\" he said as he undressed himself.\n\nBrooke lay there spellbound with anticipation. Her ex had been well built when she married him, but she'd never seen a man who looked like this before. Every cell in her body was on fire with anticipation as he slowly and deliciously removed one article of clothing at a time.\n\n\"Oh, my Lord,\" Brooke said when he stood before her completely naked.\n\nShe could tell he was still only mildly aroused, and yet he already was so wonderfully big Brooke felt like she would cum with the slightest touch from either him or herself.\n\nHe stepped toward the bed then said, \"You're not just beautiful, Brooke. You're also very pretty, and it seems a shame to take off the clothes that make you even prettier.\"\n\n\"Dalton?\" she said, her voice filled with passion.\n\n\"Yes?\"\n\n\"If you don't take my clothes off right now, I'm gonna....\"\n\n\"Say no more,\" he replied with a smile as he bent down and unzipped her skirt and slid it off over her long, shapely legs.\n\n\"Keep going...please,\" she begged.\n\nHer pink panties came off next revealing a very nicely-trimmed surprise that was already very, very wet.\n\nDalton slid his arms under her legs and went straight for the prize. Brooke was on the ragged edge of desire and by the time his tongue made its first long, slow journey from the bottom to the top of her love button, her body absolutely exploded.\n\nShe bit her lip to keep from screaming as her body writhed in ecstasy as Dalton stayed buried in her love vault as she shook and squirmed with pleasure. \n\nThe passion went back and forth as Brooke 'repaid' the favor by taking him deep into her mouth until he couldn't stand it another second. He pulled her on top of him and she kissed him softly as she reached for him.\n\n\"Right there, baby,\" she said as she felt him in just the right place before he entered her for the first time.\n\nNeither of them knew how long they spent making love with less than a two-minute pause before they 'lathered, rinsed, and repeated' two more times.\n\nBrooke lay curled up his arms somewhere around 1:30 in the morning and said again, \"So now what?\"\n\nDalton stroked her soft hair and said, \"Now we spend the rest of our lives getting to know each other.\"\n\nBrooke laughed at his words until she looked at him and realized he was serious.\n\n\"You're...you're not joking, are you?\" she asked.\n\n\"No. Not at all,\" he told her.\n\n\"But...but Dalton. Don't you want to...you know, play the field?\"\n\nHe smiled at her and told her, \"Brooke? I may only be 10, but I've played the field. Literally and figuratively. I don't need any more playing time to know when it's time to stop playing and get serious.\"\n\n\"So...what are you saying?\" she asked very quietly.\n\n\"I'm saying I'm the kind of person who takes life as it comes. I don't rush things nor do I turn away from them. Life presents us with many different opportunities, and they come at various times. Sometimes we're expectin' them. Sometimes we're not. But we can't force life to unfold the way we want it to. Life has a mind of its own, and it offers itself to us on its terms. I had no idea if love would come sooner or later, but here it is, laying in my bed, looking so beautiful it makes my heart hurt. I didn't go lookin' for it, but life sent my way, and I'm for dead sure not turnin' my back on it.\"\n\n\"So...what are you saying?\" she asked again very quietly, as heart continued beating fast.\n\n\"I'm ready to say it, but I'm not sure you're ready to hear it yet. So I'll keep that in here....\"\n\nHe put her hand over his heart then continued speaking.\n\n\"Until you are ready to hear me say it.\"\n\n\"When I first met you\u2014when I lost it....\"\n\n\"The first time, right?\" Dalton interjected with a smile.\n\n\"Yes, the first time,\" she said smiling back at him.\n\n\"I thought you were this completely irresponsible, teenaged party boy.\"\n\n\"And how about now?\"\n\n\"And now? Now I know I was totally wrong on every count. You're hard working, you're dedicated, you're kind, you're generous, you're talented....\"\n\n\"I am pretty good at lovemaking, aren't I?\"\n\n\"Dalton! I'm trying to tell you how I feel!\"\n\nHe reached over and 'felt' her in several places then said, \"I already know how you feel. And lemme tell you, you feel really good.\"\n\n\"Are you finished?\" she said as though she was annoyed.\n\n\"That depends on what you say next, but I am listening,\" he told her.\n\nShe laid her head on his chest then continued\u2014again.\n\n\"You also have a wonderful sense of humor, and that's really important to me.\"\n\nHe didn't interrupt so she kept going.\n\n\"And I've never been more physically attracted to anyone in my life. My God, you're like a 19-year old Tom Brady only with better hair.\"\n\n\"But without the millions of dollars,\" he added.\n\n\"I don't care about that one bit,\" Brooke told him. \"I've never wanted to be rich. All I've ever wanted was to loved, and ever since I became a mother, for my son to be loved.\"\n\nShe raised up and looked at him then said, \"And I can tell how you feel about Bo, and every time you're with him it melts my heart.\"\n\n\"But?\" Dalton said.\n\nShe looked right at him for several seconds then said, \"When I started talkin', I was gonna end all this with a 'but'. And the 'but' was gonna be that you are just 19. But as I rattled off everything I like about you, I realized nothing else matters. Least of all how old you are because you really do have an older soul.\"\n\n\"Is that it?\" he asked.\n\n\"I guess,\" she said. \"For now, anyway.\"\n\n\"It sounds to me like you're pretty close to sayin' it, too.\"\n\nShe rested her head on his chest again then said, \"Yeah, I...I think maybe I am.\"\n\n\"I won't push you to,\" he told her.\n\n\"But you could...push into me again,\" she said as she raised back up and smiled.\n\nDalton was ready to go just seconds later, and push he did, bringing Brooke to a fourth and then a fifth orgasm that night.\n\nHe helped her carry Bo over to her side around 3 am, and once he was asleep in his own bed, she walked Dalton back over to his door.\n\nHe kissed her goodnight, but as he turned to walk inside, she took his arm the way she had once before then said, \"Dalton?\"\n\nHe turned back around and faced her as she smiled at him.\n\n\"I do, you know,\" she told him.\n\n\"I know. And I do, too,\" he said before kissing her again.\n\nThe following week, Dalton told his mother that he and Brooke had 'spent quite a bit of time together' and that he had feelings for her. He knew she'd need time to adjust to that, so he didn't use the 'L' word. In fact, he hadn't used it with Brooke, either, although both of them already knew they loved each other.\n\nSamantha insisted he bring Brooke and her boy over for Sunday supper a week after that, and Dalton suggested Bart join them. Any concerns Samantha may have had about her son's choice of women were dispelled after she got to know Brooke and the polite little boy she immediately adored. \n\nYes, Brooke was older than her son, but based on the way he talked, acted, and lived his life, the difference was insignificant at best.\n\nWhen Bo turned 11 two months later, Dalton surprised him by giving him the game ball he'd been awarded when he won the state championship. The boy went nuts running around the house with ball, but Brooke was very concerned.\n\n\"Dalton, that's too much,\" Brooke said privately knowing it would break Bo's heart if she asked him to give it back. \"That's yours. You earned it, and it should stay with you.\"\n\n\"It will,\" he told her with a smile.\n\nShe gave him a puzzled look so he smiled at her then said, \"I've waited long enough, Brooke.\"\n\n\"For?\" she asked, sensing something important was about to happen.\n\n\"To tell you I love you,\" he said sincerely. \n\nHe put his arms around her then said, \"Because I do. I love you with all my heart.\"\n\nTears immediately welled up her eyes before she said, \"I love you, too. I love you so much.\"\n\n\"And that ball will stay with me because....\"\n\nHe reached for something in his back pocket and produced a small box which caused Brooke's hands to tremble.\n\n\"Dalton? What...what are you...what are doin'?\" she asked as tears began to fall.\n\n\"Bo? Can you come in here for a minute, buddy?\" he called out.\n\nThe young boy came running in clutching the football he planned to never let go of and said, \"Sir?\"\n\n\"I want to ask you and your momma somethin',\" Dalton told him.\n\n\"Why's my momma cryin'?\" he asked.\n\n\"Well, I hope it's because she's happy.\"\n\n\"Yes,\" she said as her hands came up to cover her mouth.\n\nDalton got on one knee between them both and after opening the box said, \"Brooke? I love you more than anything on earth. And Bo? You're a close second.\"\n\nThe young boy was beaming with happiness as he realized what was going.\n\n\"So if you're okay with it, I'm gonna ask your momma to marry me. Is that all right?\"\n\n\"Yes, sir!\" he said loudly and happily.\n\n\"Thank you, son,\" he told him as he looked up at his beautiful, older girlfriend.\n\n\"So...Brooke Mitchell? Will you marry me?\"\n\nHer head was nodding, but she couldn't speak. She was crying so hard she had an embarrassing mess on her hands\u2014literally.\n\n\"Grab your momma a paper towel, will you?\" Dalton asked.\n\nBo ran over and got one and handed it to his mother who wiped up the mess the best she could.\n\n\"Now, can you hold this for me?\" Dalton asked as he handed Bo the box.\n\nHe nodded and smiled as Dalton removed the ring and placed it on his mother's finger.\n\nDalton stood up, kissed his fianc\u00e9, then held her until she was able to stop crying.\n\n\"You all right?\" he asked when she finally looked at him.\n\n\"Yes. I'm all right,\" she said. \"I'm...I'm...so in love with you.\"\n\n\"Well, I am kind of irresistible, ain't I?\" he said.\n\n\"Yes, you are, but if you're gonna by my husband, then you need to stop sayin' 'ain't' around my...our...boy.\"\n\n\"I think I can do that,\" he told her as he pulled Bo in, too, and held them both close.\n\nBrooke's eyes were a mess of red and black, but her smile was happier than Dalton had ever seen before as she kissed him and told again how much she loved him.\n\nTheir engagement called for a special visit to Dalton's momma's place where Samantha shrieked with happiness when Brooke showed her the ring.\n\n\"Welcome to the family, baby!\" she told her daughter-in-law to be.\n\n\"Thank you, Samantha,\" Brooke replied as they hugged.\n\n\"Oh, no. You call me 'Momma' from now on, you hear?\" the older woman insisted.\n\n\"Yes, ma'am,\" Brooke told her with a smile. \"I'd be honored to...Momma.\"\n\nThey hugged again and Samantha cried causing Brooke to cry which caused Bo to ask, \"Dalton? Why do women folk cry all the time?\"\n\n\"I don't know, buddy. I guess it's just the way the Good Lord made 'em,\" Dalton offered.\n\n\"Oh, okay,\" the boy said, satisfied with the answer.\n\nBrooke married her younger man on Christmas Eve as a way of adding a special significance to the love they vowed to share for as long as they both shall live with the hope that they would always remember how important they were to each other. \n\nBrooke's parents had driven to Union to meet Dalton and came back down for the wedding where Casey happily served as her friend's Maid of Honor while Raymond Burke, who'd sobered up for a month in order to attend, served as his son's best man. To his credit, he never took another drink, but there was no hope of repairing the marriage his drinking had destroyed. That even was more true for Brooke's ex-husband who was so far gone he was living on the streets in Tulsa.\n\nThe newly married couple spent a long weekend in Las Vegas for their honeymoon, and when they came back on New Year's Day, Dalton went to work at the new Walmart building that was ready to be wired the day after. \n\nHe spent many long days there as well as Saturdays, and all of the overtime came in very handy when Brooke told her handsome new husband she was pregnant in February. \n\nThey were able to convince the bank which owned the previously-foreclosed property to let them buy and turn their duplex into a single-family home, and after removing the load-bearing wall that had once separated them with a long, heavy beam, their living space merged and doubled just as their lives and their happiness had.\n\nOn Thanksgiving Day, Brooke Burke gave birth to a baby girl they name Samantha after the woman she'd learned to love like her own mother. She took six months off work then reluctantly went back as they still needed every dollar they could get their hands on.\n\nSamantha's life took another turn for the better when Bart Clemons proposed to her that Christmas Eve, one year after her son said 'I do', and she said 'yes' immediately just before asking Bart, \"What in the blazes took you so long?\"\n\nFour years later Dalton earned his journeyman's certification, and with the extra money they had, Brooke was able to quit work for good. Even with his increase in pay, they still struggled financially as they raised two children, but Brooke had meant it when she said she never cared about money. Having enough to get by on really was enough as long as she had the handsome younger man she loved so much and her two children with her each and every day.\n\nBy time time Bo graduated from high school, he too, had been a star football player for Union High School. And like his adoptive father, Bo Burke became an electrician, learning the ropes from the man he'd called 'daddy' since the day he married his momma.\n\nBy then Bart was ready to retire, and he asked his stepson if he'd be interested in buying the business from him. Yes, it was a family thing, but Dalton had long since proven himself as the best electrician at Union Electric and more than capable of taking over, and there was no one Bart trusted more.\n\nFrom that time on, money wasn't an issue, and Dalton spoiled his still-beautiful wife with everything he'd never been able to give her. She let him do it only because it was so important to him, but each time he bought or brought her something new she thanked him then reminded him all that really mattered was that he loved her.\n\nAnd he would then remind her that he did and that he always would."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/wired-3"
}