{
    "title": "Sizzling Embrace Ch. 03",
    "pages": [
        "Comments, critiques and tips are welcome. \n\nCaution - This story contains some violence, non-consent and exhibition & voyeur. I thought it would be better to warn you in advance, out of deference to those with tender constitutions. Enjoy!\n\nTyler Tyron Wesley vs. Tanesha Ashton \n\nDedicated to Chocolatesista\n\nMeeting the Boss!\n\n***\n\nWhen Tanesha eventually came to, she gasped at the number of men in the hall. Apart from the usual seven men she was used to seeing around, there were four really scary looking men with holsters strapped to their backs. The biggest of the new men sat at the table with Skull, deep in conversation. He was almost as tall as Skull and bigger. He was bald and looked to be around his late forties. Though his face was turned away from Tanesha, she could tell from his side view that he had a mean looking face. That must be the Ghost Mickey had been talking about, she thought. She'd obviously not been able to escape as she'd hoped before he arrived, Tanesha groaned, causing different pairs of eyes to turn her way.\n\n\"F. M. L.\" She muttered under her breath. She had to get away from these murderers, Tanesha thought frantically, trying to turn. And that was when she noticed that she had actually been tied to a pillar. Both wrists had been tied behind her around the pillar, and her legs had been pulled apart and tied to the pillar as well. \"Fuck my life.\" She said out loud this time, drawing laughter from the men.\n\n\"Finally, she's up.\" The man Tanesha suspected was Ghost, bellowed, getting to his feet and starting towards her. \"So you tried to escape huh?\" He said, coming to a stop in front of her.\n\n\"And what if I did?\" Tanesha snapped, causing the men to chuckle with shock and amusement.\n\n\"Oh she's fiery, this one.\" Ghost said, turning to look at Ty. \"You're going to get your hands full with this one, my man.\"\n\n\"Tell me about it, Ghost.\" Ty responded, getting to his feet. \"I just want to lock her up and not deal with her at all.\" He chuckled, crossing his arms across his broad chest.\n\n\"Not until she's punished real good.\" Ghost muttered. \"Know what we do to worms who try to escape?\" He asked a furious looking Tanesha.\n\n\"You expect me to guess?\" Her sneer would have made a prison bully proud. \"I'm sorry but I don't speak psycho.\" There were gasps all around as Ghost's eyes widened in surprise and Skull's flashed with a warning. \n\n\"Shark, bring me a duct tape.\" Ty growled. That was the only way he knew how to shut the crazy girl up before she caused her own murder with her loud mouth. \"Hurry up. I can't even stand to hear her speak.\" He managed to sound disgusted.\n\n\"And you call yourselves tough.\" Tanesha gave a short humourless laugh. \"Is it that you can't stand to hear me talk or you don't know how to hold your own against a woman, you spineless bastards?\"\n\n\"Shut the fuck up!\" Skull growled, jaw clenching. \"Shark?\" He bellowed.\n\n\"No, no, Skull.\" Ghost said quietly. \"I want to hear what she has to say. Maybe afterwards, we can all show her just how spineless we are.\" Ghost's eyes slowly raked Tanesha from her heaving breasts to her toes and then back to her face. He licked his lips suggestively and then brought his face close to Tanesha's. \"Go on...speak, little girl.\" He instructed and promptly took a step back when Tanesha actually spat in his face. \"Fuck.\" He growled, wiping his face with his hand. He looked pissed.\n\nTanesha watched with pounding heart as Ghost slowly turned his full angry gaze on her. The man actually looked like a super villain from a movie, she couldn't help but think. That made her even angrier. \"You evil, evil man. When the law catches up with you, your little reign of terror will end. So enjoy it whilst it lasts.\" She breathed.\n\n\"Oh I will and I am.\" Ghost rasped. \"And I think you mean if and not when.\" He gave a short chilling laughter.\n\n\"You think you're good at whatever madness you're running here huh? You think you're the only one that can mess with people's lives? Well, you're not.\"\n\nGhost looked incredulous. \"Are you threatening me?\"\n\n\"No. I'm promising you. Your day of reckoning is coming.\" Tanesha managed to look as threatening as she could in her current state of immobility.\n\n\"So dramatic.\" Ghost laughed.\n\n\"Oh yeah?\" Tanesha sneered. \"You can suck my dramatic dick, you reprehensible...\"\n\n\"Okay, that's it.\" Bellowed an exasperated Ty as he snatched a duct tape from a not too shocked Shark and stormed towards Tanesha whilst tearing some of the tape. And then he was not so gently, taping her mouth shut. \n\nTanesha was however surprised at the look in Skull's eyes. It was a clear warning to her not to do anything stupid. But why would Skull warn her as if he cared what happened to her, Tanesha wondered. Was she reading too much into something that wasn't really there? Well, at least she'd been able to tell Ghost her piece and that was okay with her. She knew her friend, Caroline would have been proud of her if she were to be there that very moment, Tanesha would have smiled if she could. Caroline's own choice of words would make a sailor blush and she'd taught her well.\n\n\"There.\" Tanesha watched the relief and satisfaction on Skull's face. \"Now, you can say whatever your stupid brain tells you to...behind that tape.\" Laughter met Skull's mocking words.\n\n\"What do you plan on doing to her, Skull?\" Ghost rasped, staring at Tanesha. \"You're running the show so you have to decide which punishment will be suitable.\" He turned to face Ty. \"And it has to be good. I want her to feel pain.\" He turned to look at Tanesha. \"My men here haven't been with women in a while. They would love a good fun. Maybe we will give her some lashes first, and then...\"\n\nTy had to push both hands into his pocket to stop himself from throwing a punch. He looked at the eager faces of the trolls standing around and allowed a grin that didn't reach his eyes to widen his mouth. \n\n\"Lashing is definitely out of the question, Ghost. Until I send the first batch of pictures the day after tomorrow, I don't want any blemish on her. As for your men having fun, I have an even better plan. Come on, let's finish talking business. Then we can get to the fun part.\"\n\n\"Great.\" Ghost said moving outside onto the porch with Ty. \n\nTanesha watched them go and shivered with dread. For some reason she couldn't fathom, she didn't want Skull to leave her alone with the thugs. She saw Mickey sitting quietly in a corner of the room, watching TV. He would turn once in a while to look at her and from those brief looks, Tanesha could tell just how upset he was with her. Well, he could sulk all he wanted, Tanesha thought. She'd been looking out for herself. After all he wasn't the one being held against his will. \n\nOne of the thugs who came with Ghost came closer to Tanesha and began to run his fingers through her hair. She felt her skin crawl but didn't even flinch. At that point, she didn't really care what anybody wanted to do with her because there was nothing she could do about it. \n\n\"Damn, your hair is long.\" The thug breathed. \"I thought it was artificial. I wanted to come rip it out.\" He suddenly gripped her hair painfully. \"And you have such a smooth skin.\" He murmured, bringing out his tongue to lick Tanesha's cheek. \"I can't wait to fuck you, bitch.\"\n\n\"I think you'll have to wait your turn, Jack.\" Mickey said quietly from right beside them, startling Tanesha. She'd tuned herself off to the extent that she hadn't seen Mickey move from his chair.\n\n\"Hey, Little Mickey wants a piece too huh?\" The thug who Tanesha now knew as Jack said, letting go of her hair. \"No worries, I'll let you go first.\" He chuckled. \"That will be best anyway because by the time I'm done with that pussy, she'll be too big for you.\" Raucous laughter erupted from the others at his words.\n\nTanesha watched him go join his friends in front of the TV and turned grateful eyes onto Mickey. But he only turned and went back to his seat. Even though Tanesha was saddened by the fact that Mickey felt she'd betrayed him, she knew that if an opportunity presented itself again, she would be out of the door in a blink. She was human after all. And it was only natural that she would want to escape. For now, she couldn't do much. She didn't know what Skull had in store for her but was ready for whatever they were going to throw at her. They could cut her, rape her, beat her up...torture her however they wanted, she would take it like the tough girl she was. Tanesha knew how criminals like the men about to torture her, loved to hear their victims beg. She would never give them the satisfaction of hearing her beg Tanesha vowed to herself. \n\nBut by the time Skull was through with her later, Tanesha didn't remember any such vow.\n\n***\n\nOutside, Ty had a lengthy chat with Ghost. He filed away every piece of information that Ghost released. By giving Ghost some constructive pointers, Ty earned Ghost's trust and respect even more. The man was so impressed with Ty's strategic thinking he didn't hesitate to give him detailed information about his current operations. Ty couldn't believe just how wicked the man was. And at that point, he knew he had to be very careful not to give himself up. Ghost was a ruthless monster.\n\n\"Enough of this talk.\" Ghost slapped Ty on the back. \"We have to leave.\" He gestured towards the chopper they'd flown to the Island in. \"What do you say the boys have some fun with the little lady huh?\"\n\n\"About that.\" Skull started, choosing his words carefully. \"See how she is? All high and mighty and stuck-up?\"\n\n\"Yes?\" Ghost listened attentively.\n\n\"I know her type. She can't really be bothered if we hurt her. Hell, she'll be expecting that.\" Ty chuckled. \"What will hurt her to no end is actually fucking her and making her enjoy it.\"\n\n\"Really?\" Ghost looked incredulous. \n\n\"Trust me on this Ghost. I've dealt with women like her so I know what I'm talking about.\" Ty smirked. \"Put yourself in her shoes for a second. Now imagine actually enjoying being fucked by a 'thug'.\" Ty gave the word quotations with his fingers. \"Don't be surprised if she attempts suicide afterwards. In fact I should probably start making her sleep in my room instead, to keep an eye on her.\"\n\n\"She'll be devastated if her body actually betrays her.\" Ghost said slowly. \"I like this.\" He burst into laughter. \"You're a smart man, Skull. So who's going to...\"\n\n\"I'll do it.\" Skull said dryly. He actually managed to sound bored. \"She hates my guts. And I'll enjoy nothing more than hearing her scream with pleasure against her will.\"\n\n\"Damn, you're good.\" Ghost grinned. \"But you have to do it in front of everyone. Humiliate her even more. At least the guys will get to enjoy the show now that they're not going to partake in what they hoped would be a gang bang. They'll be disappointed but...\"\n\n\"Ghost...\"\n\n\"Come on. The sooner we get this show on the road, the sooner we can get outta here.\" Ghost entered the room, leaving a confused Ty behind.\n\n\"Oh fuck!\" Ty swore. He knew he was cornered. There was no way he was going to get out of this one without raising questions and endangering their lives. Shit! He also knew Tanesha was going to hate him even more than she already did if he actually went through with it. But there was nothing he could do about it. Unless... Ty pulled his secure phone from his pocket. \n\n***\n\n\"Okay people.\" Tanesha raised her head when she heard Ghost's voice. \"Change of plans.\" He grinned at Tanesha evilly. \n\n\"Do we ballot now?\" One of the thugs who came with Ghost snarled.\n\n\"No guys.\" Ghost chuckled. \"There's not going to be a gang bang today.\" He raised his hand for silence when the men started grumbling. \"You can have your daisy chain fun with her on our next visit. Today, there's going to be something even better. Skull has decided to give us a good show.\" He turned to watch as Ty entered the room and closed the door firmly behind him. The faces of the men brightened again with interest. \"So relax and enjoy.\"\n\nTanesha watched as Skull approached her, looking so fierce and taut. His posture was pure predatory, making him look like a predator stalking towards its prey. She had to give it to the man...he was sexy as fuck, Tanesha thought as a shiver ran down her spine and goose bumps broke out across her skin. She swallowed hard. Only God knew what Skull was about to do to her. It definitely couldn't be good. Tanesha was almost hyperventilating, wondering what Skull was going to do to her. \n\nWhen Skull got to her, he stood still and stared into her eyes. She couldn't read what was in his eyes but somehow she felt calmed by it. Well, at least she was till Skull leaned down and began to nuzzle her neck. Tanesha's eyes widened, staring at the criminals over Skull's shoulder. They stared back at her. Some smirking, others looking like they were actually in a movie theatre. Then it dawned on Tanesha... Skull was going to fuck her. Oh God! Was that the show he'd promised those animals? Where was a miracle when she needed one, she thought frantically. He was obviously going to fuck her in front of all the brutes gathered. Tanesha whimpered as her heart pounded with dread. No. No. No. Anyone but Skull. Not after how disgracefully she'd acted around him two days earlier. Hell, he was the reason she'd tried to escape. The thought of having his hands on her again was frightening, taking into consideration how they'd both reacted. She couldn't allow that. Tanesha began to struggle against her bonds. She would have begged if her mouth wasn't taped. \n\nTy wasn't surprised at Tanesha's reaction. He'd seen the exact moment it had dawned on her what his intentions were. Who would want to be touched intimately in front of people? And by none other than someone they detested. At least she would be alive to hate him, Ty thought as he grazed the sensitive curve of her neck with his lips. When he felt a shudder pass through her, he latched onto that sensitive spot at the base of her neck and sucked hard, feeling Tanesha's breath begin to quicken. When he moved up to her ear and licked the outer shell and then sucked her earlobe into his mouth, he was rewarded with a little moan. Ty was getting hard...and fast. \n\nFeeling that wet hot tongue on her skin felt so good an intense shiver passed through Tanesha. She was reminded of just how badly she'd craved Skull's touch since that humiliating night and wished she could just block everything out. Since that night, all she had to do was close her eyes and she could still feel the pull of his mouth on her nipple, could still remember how she'd come totally undone. The memory of the jolting pleasure his touch had brought her still haunted her. Tanesha stifled a groan when just remembering caused moisture to pool in her most intimate parts. She closed her eyes, shutting out all the eyes filled with lust that were staring at her. She'd never been ruled by her hormones till Skull and that pissed her off. She needed to control herself, she scolded herself even as Skull moved to give her other ear the same attention. But Skull's mouth felt too good for Tanesha to ignore. \n\nFor a moment she forgot about the people in the room, losing herself in the maddeningly slow touches by Skull. Was it just her or was Skull stalling, Tanesha wondered. She felt Skull move away from her and opened her eyes to find his heated gaze on her unbound breasts, whose hardened nipples stood out visibly through her thin tank top. She saw the stark hunger in his eyes and shivered. Why hadn't she simply taken some seconds to put on a bra, Tanesha admonished herself. Now all these murderers where looking at her aroused nipples and smirking at her slutty appearance. She couldn't possibly be aroused at a time like this could she? She needed to be angry and scared, not aroused. What was wrong with her, Tanesha screamed silently.\n\nTy felt his cock throb and his mouth water as he gazed at those taut peaks just begging for his mouth. What the fuck was taking them so long, he groaned. He was getting harder by the minute and looking at those hard peaks wasn't helping matters. As if in a trance, he reached out and grabbed a nipple through the top, between a thumb and forefinger.\n\n\"Damn, I'm hungry for another taste.\" He murmured so only Tanesha could hear. \"But this time, I don't want a fabric against my tongue.\" He husked as he squeezed the turgid flesh.\n\nTanesha couldn't suppress the moan that rumbled in her throat. She felt herself get instantly drenched and wished Skull could take off the tape so that she could beg him to stop. Anything would be preferable to what Skull was doing to her. Tears pooled in beautiful eyes that reflected so much turmoil. Why did her body react this way to a man she didn't know and was very sure she hated, Tanesha asked herself for the umpteenth time. It was one thing being taken against your will. And it was another thing, actually enjoying being taken against your will. And to think all the men could see her arousal... Confusion and yearning clashed in her tear-filled eyes as Ty pinched both hard pinpoints of her nipples between his fingers, rolling them slowly with erotic patience.\n\nTanesha moaned deep in her throat and squirmed as pleasure battered her senses with the double assault. Need spiked in her belly, right from the aching points of her tight nipples, through her body, shooting straight down between her legs. Her body was so tightly strung, she knew she'd probably climax if Skull so much as touched her between her legs. He'd aroused her so thoroughly she didn't have any control over her body. Her mind raced. She needed her anger damnit. Then without warning, Skull reached up and tore her tank top from top to her stomach, exposing her beautiful breasts to the eyes of everyone. Tanesha prayed for a tornado or any equally terrible natural disaster to suddenly occur. Surely death would be better than the humiliating experience she was having.\n\n\"Fuck, those are damn gorgeous.\" One of the thugs gasped whilst others groaned lustfully, gasped or swore. \n\nTanesha tried to move away but there was nowhere to go. The look in Skull's eyes as he stared at her exposed breasts would have been the highest compliment ever, under normal circumstances. Tanesha watched as his tongue came out to lick his lips hungrily. That was so erotic she moaned. And when she saw Skull's head move down towards her chest...towards a taut nipple, she struggled against her bonds. But a muffled scream rumbled deep in her chest when the wet heat of Skull's mouth closed around a taut nipple. She couldn't breathe. She wasn't prepared for the onslaught of such bliss...for how good it felt. It was too much to accept. She couldn't do it. Tanesha fought against succumbing to the exquisite pleasure and lost. She moaned uncontrollably as the back of her head thumped against the pillar, her eyes shut in ecstasy. The feeling of Skull's mouth pulling on that highly sensitive flesh, and his fingers twisting the other nipple was indescribable. The ache between her thighs zoomed to a different level, an electric bolt of rapturous thrill racing deliciously through her even as she called herself all kinds of stupid.\n\n\"See how she's loving it.\" Tanesha heard someone...Ghost say hoarsely. \n\n\"She's obviously dying to have a dick fill her hungry hole this very moment.\" Another person chipped in, making the others laugh.\n\nAnd that was all it took for the tears to slide out from under Tanesha's tightly squeezed eyes. Those tears were not flowing because she'd been virtually called a slut. It was because she couldn't control her body's response to Skull's attentions no matter how much she tried. And that was disturbing and damn mortifying. Her eyes popped open when she felt Skull's hand at the juncture of her thighs. If she could close her thighs together to prevent him touching her there and feeling just how wet he'd made her, she would have. But thanks to her legs being tied apart, she couldn't.",
        "Ty's cock jerked in impatience when he felt just how wet Tanesha was. And he groaned deep in his throat when he realized she wasn't wearing panties. He could feel the outline of her sex with his fingers. Fuck! He raised his head and stared down into Tanesha's dilated eyes...hers pleading, his filled with lust and regret. \"Just as I thought.\" Ty breathed huskily. \"I love how wet you are for me. You're so ready for my cock.\" He murmured, feeling his hard cock pressing uncomfortably against the zipper of his jeans.\n\nIf it was possible, Tanesha got even more wet. Skull's words should have been a turnoff. But surprisingly, they rather achieved the opposite effect. That smooth, sexy, rich voice with its explicit words, and the blazing look of desire in those eyes caused her stomach to clench and her clit to throb relentlessly. And those magic fingers rubbing against her swollen clit felt indescribably amazing. Tanesha allowed her eyes to shut, blocking out those beautiful arresting blue eyes that made her want to just let go and give herself over to the pleasure offered. \n\nTy almost groaned in protest when Tanesha's eyes closed. He loved looking into those eyes...seeing how aroused she was and knowing that he'd caused it. Fuck, he wanted her so bad. He could see the tears on her cheeks but consoled himself with the fact that at least she wasn't in pain. Ty stepped back from her and pulled out a pocket knife from his back pocket. With his eyes fixed on Tanesha's closed eyes, Ty reached between her legs and pulled the thin fabric of the leggings away from the juncture of her thighs. But just as he was about to slit it with the knife, his cell phone rang. With a groan of both frustration and relief, Ty put the knife back into his pocket and pulled out his phone. \n\n\"Took you long enough.\" He hissed into the phone to his fellow seal on the other end.\n\n\"Sorry. We had to set it up.\" Lieutenant Jackson answered on the other end. \"Now let's play.\"\n\n\"Really?\" Ty bellowed as he turned to face Ghost. \"Ghost, you have to hear this. A moment.\" Ty barked into the phone, suddenly looking all businesslike. \"I'm not done with you, bitch.\" He snarled at Tanesha. \"Untie her and put her in my room. Mickey, get her something to eat. She's going to need her strength for what's coming.\" With that, he headed to another room with Ghost. He saw both disappointment and anxiety on the faces of the mean and almost smirked. If they wanted to watch two people getting it on, they could get online and watch porn. Fools!\n\n***\n\nTanesha shook her head when Mickey placed a plate of food in front of her. The last thing she felt like was food. \n\n\"Come on, you need to eat.\" He said softly, staring down at Tanesha. He'd never seen her look so defeated since she was brought in. It was as if the fire in her had died.\n\nTanesha sat quietly on the couch in Ty's room, staring at her feet. Mickey had made her take a bath, saying she had sand in her hair. He wasn't talking much but she hadn't said a word either since Mickey ripped the duct tape from her mouth. What was there to say? She couldn't even think. And she was okay with that because she knew that if she allowed herself to think about what had taken place in the hall, she would lose her shit. She heard Mickey sigh and pick up the plate. When he left, she just stared at the door. She knew it hadn't been locked since she hadn't heard a key turn. But she didn't dare attempt to run again so soon could she? Not after what had just happened and with all those murderers wandering around. She was not stupid. \n\nAfter about three hours, the door opened and Mickey entered, followed by Skull. Neither said a word to her. Mickey took a seat beside her on the couch whilst Skull entered an adjoining room which Tanesha suspected was the bathroom. Her suspicions were confirmed when she heard the sound of the shower. After a moment, he came back into the room, wearing only jeans.\n\n\"You can leave now.\" Tanesha heard Skull say to Mickey and automatically began to panic. \n\nShe looked up and watched as Skull closed and locked the door after Mickey, her eyes widening when she saw the large tattoo of a skull on Skull's back. Her heart was pounding so hard she could feel herself vibrating. When she felt her eyes welling up, she got to her feet, fists clenched by her sides.\n\nTy turned around after locking the door and saw Tanesha on her feet, her eyes filled with anger and fear. The next thing he knew she was right in front of him, hitting and screaming at him with tears running down her cheeks. The sight of it wrenched at his gut. \n\n\"You son of a bitch!\" She yelled. \"What do you want from me?\" She screamed. \"I had a life. Now you've taken everything from me. Why don't you just kill me and get it over and done with?\" \n\nShe kept screaming and throwing punches and Ty allowed her. After a while the fight just went out of her and she simply broke down. Tanesha uncontrollably bawled her eye out, not even protesting when Skull gathered her into his arms and just held her. She didn't have the strength to fight the comfort he offered so she simply accepted it and let it all out.\n\nTy held the inconsolable beauty till her sobs turned into hiccups. And he still held her, tenderly wiping away her tears with his thumbs. He felt such anger within at what Tanesha had been made to go through even though it was at his own hands. His anger was so intense, even the soft feel of the sexy body plastered against him couldn't rouse any lust in him. He'd held Tanesha before, and had almost gone insane with hunger. But this time was different. He just wanted to hold her, reassure her with his strength since he couldn't do it with words. The silence that ensued was a comfortable one. Till it was broken by Tanesha.\n\n\"What are you going to do to me?\" She asked in a quiet voice, her head still resting on Skull's chest. She didn't know why but she always felt so safe in his arms.\n\n\"Nothing.\" Ty said in a hoarse voice.\n\nThey were both quiet again for a while, Tanesha's mind obviously spinning. She swallowed audibly. \"So, am I to pretend to the others that you've...punished me?\" She asked shakily.\n\n\"I did punish you.\" Ty said softly. \"Touching you out there in front of everyone was punishment. \"Can you please not attempt to run again?\" He asked urgently.\n\n\"I can't promise any such thing.\" Tanesha gasped, raising her head to look up at Ty. \"You guys...\"\n\n\"You will not have it so easy the next time, trust me.\" Ty rasped, feeling frustrated. She was so stubborn. \"You might have gotten lucky with Heat and Polks but the two who have been left behind are ruthless and will hurt you if you try to escape.\"\n\n\"Two?\" She whispered.\n\nTy nodded. \"Ghost took Polks and Heat away and replaced them with two of the guys he came with. Thanks to you, he plans on punishing them for allowing a slip of a woman to best them.\" \n\n\"Oh...\" Tanesha unconsciously laid her head back on Ty's chest, making him smile and tighten his hold on her.\n\nMuch as she couldn't be bothered with the fact that Polks and Heat were going to face punishment, she didn't like the idea of being around any of the new thugs either. They looked real mean.\n\n\"So am I going to have your word that you're not going to attempt an escape again?\" Ty asked, breathing in the lovely, strawberry scented, still wet hair of Tanesha's. Her shampoo was obviously strawberry flavoured. Trust Mickey to get something like that.\n\nTanesha groaned as she rubbed her forehead against Ty. Ty didn't think she even realized what she was doing. Damn, she was so fucking adorable. \"Just let me go.\" She whimpered. \"Then I wouldn't have to try to escape.\"\n\nTy gave a deep sigh. \"Why do I even bother?\" He muttered. \"Mickey says you didn't eat your food. You have to eat.\"\n\n\"So that I can gain strength for what is coming right?\" She sneered as she abruptly stepped out of Ty's embrace.\"\n\n\"I told you I wasn't going to do anything to you. And I meant it.\" He said quietly, staring at her with brilliant blue eye.\n\n\"I'm not hungry. Just tired.\" Tanesha sighed.\n\n\"Sleep on my bed.\" Ty offered, gesturing towards the bed.\n\nTanesha stiffened. \"And you...\"\n\n\"I'll take the couch.\"\n\n\"Can't I just go back to my room? I won't go anywhere. Just lock the door behind me.\"\n\n\"And how much good did that do?\" Ty folded his arms across his broad chest. \"I just asked you to promise not to run and you couldn't.\n\n\"Alright, alright I promise.\" Tanesha gushed. \"I won't try to escape again. Please I promise you.\"\n\nTy tilted his head and gave a slight frown. \"Is the thought of sleeping in the same room with me that...repulsive?\" He asked, amused.\n\n\"It's not that.\" Tanesha said quietly.\n\n\"Is it that someone doesn't trust...\" Ty began but paused when he saw the fire that suddenly flashed in Tanesha's eyes.\n\n\"I trust myself okay? It's just that with you, I don't know what comes over...\" She trailed off when she realized just what she was saying. A gasp tore out of her, followed by an embarrassing groaned as she covered her face in her palms. When Tanesha looked at Ty again and saw his full-on smile, which had transformed his face into something breathtakingly handsome, Tanesha wanted to kiss him and punch him at the same time. \n\nTy's eyes shone with mirth. He'd honestly been about to sarcastically ask her whether she didn't trust him. But she'd assumed something else and totally given herself away. Her honesty was refreshing. \"Go to bed, Tanesha.\" He said softly. \"Tomorrow is another day.\"\n\nWith a sigh, Tanesha got on the bed, surprised at its softness. She pulled the covers over herself and fidgeted till she was comfortable. She felt so tired and drained she knew sleep was going to come quickly. And even as she began to drift off, she couldn't help but think about a sexy blue eyed hunk, who was gradually succeeding in bringing down her defenses. That wasn't good. She needed to be wary of Skull, Tanesha thought just before she drifted off into a deep sleep. \n\n***\n\nTy came awake and sat up on the couch. His eyes landed on the bed, where the muffled sounds that had woken him were coming from. Tanesha was crying. He said nothing. He simply sat quietly, listening to her cry softly till she went back to sleep. They had a little less than three weeks to end the mission. Ty prayed they would be able to get all the parties involved in the silly plot sooner so that he could get Tanesha out of there. Till then, he had to be strong for her whilst ensuring that his actions did not raise any suspicions. Ty lay back on the couch, knowing that he wasn't going to sleep again till morning. He was too upset and unsettled by what he'd just witnessed to go back to sleep.\n\n***\n\nTanesha stretched languidly the next morning, her eyes still closed. She didn't remember having that good a sleep in a long while. When she eventually opened her eyes, she quickly sat up in alarm at her new surroundings. Then it all came back to her. She groaned and flopped back onto the bed. If only it were a mere bad dream, she thought miserably. She heard the door open and sat up again.\n\n\"Finally.\" Mickey said, entering the room. He came to sit at the edge of the bed with concern in his eyes. \"Are you okay? Did he...\"\n\nTanesha stared at Mickey. She didn't know whether to lie and say Skull had raped her, as everyone expected, or tell the truth. But looking at the concern in Mickey's eyes, she couldn't bring herself to lie to the boy...again.\n\n\"I'm fine, Mickey.\" She sighed. \"He didn't do anything to me.\"\n\n\"Thank God.\" Mickey breathed. \"I heard you screaming right after I left so I thought...\"\n\n\"I'm fine.\" She repeated.\n\n\"Good. Which would you want to do first? Bath or eat?\" He grinned.\n\n\"What do you think? Bath.\" Tanesha flashed a smile, grateful that after what she'd done to Mickey the day before, he was even talking to her. It made her however wonder... \"How come you're still here?\" She looked very curious.\n\n\"What do you mean I'm still...\" Mickey gave a slight nod of understanding when he got the reason behind her question. \"Skull told you. Well, let's just say I got lucky this time.\"\n\n\"I'm sorry, Mickey.\" She said quietly. \"It's just that...\"\n\n\"I understand. Don't worry about it.\" He said softly. \"Next time I'll make you go braless though.\" His smirk turned into laughter when Tanesha threw a pillow at him. \"Skull said you should bath here so...\"\n\n\"I'd rather go...\"\n\n\"Hey.\" Mickey turned to face Tanesha. \"Just accept the man's generosity. After all, he has a bigger and nicer bathroom. Come on.\" He said, turning to go into the bathroom. \"I brought your stuff in here earlier whilst you slept.\"\n\n\"Mickey, Skull said Ghost left two of those brutes behind.\" Tanesha began shakily, looking around the big bathroom. \n\n\"He also said I should keep you in here.\" Mickey responded firmly. \"You're not to leave this room under any circumstances.\" \n\n\"Story of my life.\" Tanesha muttered, making Mickey laugh.\n\n\"Look at it this way. You can at least enjoy the view of the Island through the windows. Better isn't it?\" He chuckled. \"I'll be in the room.\" He said, turning to leave the bathroom.\n\nTanesha couldn't keep the surprise off her face. \"Really? You're going to leave me here alone?\"\n\n\"Skull said you promised not to try to escape so we can allow you some privacy.\" Mickey said. \"Unless of course you need me to stand beside...\"\n\n\"No. No. I'm fine thanks.\" She beamed.\n\n\"I thought so.\" Mickey chuckled. \"And Tanesha?\"\n\n\"U-huh?\"\n\n\"Don't disappoint the man.\" He said quietly. \"If he's trusting you enough to actually leave you alone...in a bathroom that actually has a window...you have to prove that your word means something.\"\n\n\"He's one of the bad guys, you know...\" Tanesha snapped.\n\n\"If you still believe that, then you're even more stupid than I thought you were yesterday.\" With that, Mickey left the bathroom and a stunned Tanesha.\n\nTanesha stared at the closed bathroom door, wondering just when Mickey had decided that Skull wasn't so bad. 'Cause she clearly remembered the guys going on and on about Skull being wicked and badass and all that crap. Maybe he was just playing smart...pretending to be good in order to get into her pants. \"Yeah right.\" She snorted aloud. Skull didn't have to pretend to be good in order to get her, did he? He'd already proven beyond reasonable doubt that he could fuck her if he wanted to...and he didn't even have to force her. Oh God! Tanesha lightly slammed her forehead against the tiles, remembering just how her body wantonly responded to the man. Just thinking about Skull and that sexy body of his was enough to stir a sweet ache inside her and she hated herself for it. \n\nThere was still no sign of Skull after Tanesha finished her breakfast. So she took the opportunity to look outside and admire the lovely scenery as Mickey had suggested. It felt great breathing in fresh air from the comfort of her 'prison' for once. Fortunately or unfortunately, she didn't see anyone walking outside to be tempted to shout for help. After a while of looking out and listening to the wind blow through the trees, she left the window and took a good look at the room...Skull's room. It was big but bare. It had just the bed, a table with two chairs, a couch and a small fridge. It was almost as if its occupant was just passing through. The wardrobe was actually empty, save for her clothes which had been folded neatly in one corner. And the only item that even showed someone actually occupied the room was a backpack that sat in a corner of the room. That was probably how criminals like Skull lived. Always ready to run. With a quick look at the door, Tanesha went to crouch beside the bag. After staring at it for a while, she opened it. Maybe she could get a knife or anything that could be used as a weapon for her next attempt. \n\nTanesha opened the bag and quickly looked through. But it only had three pairs of jeans, two cargo pants, six pairs of socks, t-shirts and boxer briefs. Nothing more. She looked in every corner of the bag but couldn't find anything. Great, she thought angrily as she zipped it back. As if they would be stupid enough to leave any weapons within her reach, she fumed. \n\nWhen Mickey brought her lunch, she was surprised it was lunch time already. She ate her spaghetti and fried fish. It was okay. It wasn't like she was in a five-star hotel after all. After the meal, she went right back to the window, hoping to see someone but of course luck wasn't on her side. With a sigh, she went to lie on the bed she'd nicely made in the morning. At least she could enjoy the cozy bed whilst its owner was away doing whatever evil deed he was up to. In no time at all, Tanesha was fast asleep.\n\n***\n\nTy looked down at the angelic face of Tanesha and couldn't suppress his smile. Looking at how innocent and peaceful that face looked, one wouldn't think she was the same girl who had actually had the guts to spit and rain insults on the head of ZONKAI the day before. He shook his head in amusement and left to go take a shower.\n\nHe'd had to go away from the camp to have a good talk with his team. He had to tell them what he'd gathered from Ghost to enable them sort out other issues that were apparently breeding. Ty was in good spirits because he'd been told that more of the conspirators in the Jamaican government had been identified. From the look of things, they just might get lucky and end the mission before the scheduled time. He couldn't wait to get Tanesha safely back to her parents. She'd been through more than others went through in a lifetime.\n\nWhen Ty came back from the bathroom, he pulled on a t-shirt with a small chuckle and switched on the light, flooding the room with brightness. His intention was to wake Tanesha up since the bowl of food on the table was an indication that she hadn't taken supper yet. By the time Ty turned back to the bed, a squinting Tanesha was sitting up in bed.\n\n\"Hey.\" He said softly. \"You have to eat your supper.\" He said reaching for her hand with the intention of helping her off the bed.\n\nBut pointedly ignoring Skull's offered hand, Tanesha got off the bed and headed for the bathroom. When she came back to the room, she stood with her arms folded beneath her breasts and looked at Skull. As usual, he was in jeans and a t-shirt and damn did he look good. He was so hard, tight and so virile it was impossible to look at him and not admire him.\n\n\"Are you okay?\" Ty asked.\n\nTanesha shrugged and turned her eyes to the food on the table. \"I'm not hungry.\" She said. \"I had a heavy lunch.\"\n\n\"Would you like something to drink then?\" Ty asked, gesturing towards the fridge. But Tanesha only shook her head. \"We're awfully quiet today aren't we?\" Ty murmured as he turned towards the fridge.\n\nHe took out a bottle of water and drank it, not noticing how captivated Tanesha seemed at just that simple action of him drinking. He threw the empty bottle into a small bin beside the fridge and went to open the door. He went outside for a short while and returned with Mickey.\n\n\"Are you sure you don't want dinner?\" Mickey asked a still standing Tanesha.\n\n\"No Mickey. I'm fine, thanks.\" She said quietly.\n\n\"Okay, see you in the morning.\" He said, picking up the bowl and leaving the room.\n\nTy locked the door behind Mickey and went to sit on the couch.\n\n\"You can have your bed.\" Tanesha said a little harshly than she'd intended.\n\n\"It's yours.\" He said simply, looking into the TIME Magazine he'd pulled out from under one of the cushions. He relaxed into the couch and gave the magazine his full concentration till he noticed that Tanesha still stood in the same spot. \"Are you going to stand there all night?\" He asked dryly without turning to look at her.\n\nTanesha realized she was actually missing her old room, surprisingly. There, she didn't have another person in there with her and could therefore relax. In her current situation, however, she had to lie on the bed, wide awake as she wasn't feeling sleepy, with no other person than Skull as a roommate. How was she supposed to feel free...pun intended. Tanesha walked to the bed and sat on it, staring at a particular spot on the wall. This was going to be a long night she thought.",
        "\"Everything alright?\" Ty asked.\n\n\"Will you stop asking me that kind of question already?\" Tanesha snapped. \"How can everything be alright when I'm being kept here against my will?\"\n\n\"By here, do you mean this room or this house?\" Ty managed to ask innocently.\n\n\"Urgh. Please tell me you're not that dense.\" She groaned, making Ty laugh.\n\n\"Look at it this way.\" Ty placed the magazine beside him and leaned forward. \"You're on an Island, relaxing and meditating. Sometimes it helps to just let everything go once in a while you know.\"\n\n\"Who in their right minds can see what's happening to me as meditating.\" Tanesha screeched, her brows snapping together to form a scowl, which questioned his sanity. \"If you don't have anything sensible to say, just shut up please.\"\n\n\"Okay.\" Ty replied and stood up to go and switch off the light, and then went to pick a pillow from the bed. Then without another word, he dropped the pillow on the arm of the couch and stretched out. Within a short time, he was fast asleep.\n\nTanesha sat in the darkness, the only light coming from the moon outside, and stared at Skull. He was so tall, his legs couldn't fit into the couch. He should be on the bed and not the couch she thought. She knew he was actually trying to treat her better but she couldn't bring herself to act nice around him. Tanesha stretched out on the bed and just lay there, listening to the wind howl outside.\n\nAfter about two hours of just laying down doing nothing, she got out of bed and went to the fridge to drink some water. On her way back to the bed, she noticed that Skull was partially lying on the magazine he'd been reading earlier, and decided to go pull it out to read. There was a bedside lamp so she could use it to read, she thought. Tanesha squealed when Skull's hand shot up to grip her wrist.\n\n\"What are you doing?\" Came the raspy whisper.\n\n\"Nothing...\"\n\n\"It doesn't look like nothing.\" Skull growled. \n\n\"I only wanted to take the magazine to read.\" Her voice shook.\n\nWith a twist of his hand, Ty flipped Tanesha onto his chest. Then he coiled a leg around hers so she couldn't move off him. \n\n\"Don't ever sneak up on me, do you hear me?\" He rasped, looking up into Tanesha's frightened eyes.\n\n\"I wasn't...\"\n\n\"Do you hear me?\" He growled, tightening his hold painfully on her wrist.\n\n\"Yes.\" She gasped, very close to busting into tears.\n\n\"Good. Now get your arse into bed and stay there.\" Ty instructed gruffly, releasing her wrist and uncoiling his leg from around hers. \"And whilst we're on the subject of sneaking, I don't know what you thought you'd find in my bag. Why don't you just ask me next time?\" With that, he threw an arm over his eyes, dismissing a pretty shaken Tanesha.\n\nTanesha scrambled away with her whole body trembling in fear and shame. She hadn't been that scared of Skull since that very first time she'd seen him. The Skull she'd just encountered seemed totally different and very dangerous. And that bard about going through his stuff had been so embarrassing. Tanesha coiled herself into a ball on the bed, willing her pounding heart to calm down. She knew she was close to losing it...tried very hard to stop herself. But it was no use. She rocked herself as the tears came in torrents and disappeared into her hair. The tears actually surprised her because she thought she was more together than that. Tears surely weren't going to help her current situation. But for some reason she couldn't understand, Skull treating her that way hurt more than she thought possible. Somehow, she wouldn't have minded at all if anyone else but Skull had treated her that way. Tanesha felt a myriad of emotions comprising fear, self-pity and pain...with self-pity taking a commanding lead. \n\nTy heard the sniffles coming from the bed and swore. Just what he needed, he thought exasperatedly as he got off the couch and headed in the direction of the bed. At least she wasn't sobbing as she had the night before, Ty thought gratefully as he stretched out on the bed and drew Tanesha to him.\n\n\"Just le...leave me a...alone.\" She stuttered shakily. \n\n\"Shh...\" Ty drew Tanesha's head to his chest and held her close. He could feel her body trembling against him. \"It's in your own interest not to sneak up on me. I could hurt you before I notice it's you.\" He explained. \"I just don't want to hurt you by mistake, that's all.\"\n\n\"But you'd rather hurt me intentionally?\" She asked in a small voice, making Ty wince.\n\n\"Sometimes it's necessary to hurt people for the greater good.\" He said softly. \"You have to sleep. I have to take some pictures of you tomorrow and I need you to look your best.\" Ty felt Tanesha stiffen against him and attempt to pull away but he tightened his hold on her, preventing her from moving away. It felt so damn good having her in his arms. He ran his fingers soothingly through her hair till she relaxed again. \"Sleep.\" He whispered.\n\nAnd Tanesha did just that. She hadn't slept well in weeks...not since her abduction. But even when she was safe in her own bed at home, she never slept as deeply as she slept that night. Cocooned in Skull's solid warmth, she felt protected and contended. It was the best sleep ever.\n\n*** \n\nTanesha woke up the next morning, curled around Skull who remained fast asleep. Even after she realized just who she was cuddled up against, Tanesha shocked herself by staying put. She didn't want to move at all. She rather took the opportunity to really look at Skull, relaxed in sleep. And Tanesha finally realized she could no longer deny the obvious... Skull was a handsome devil and she found him as sexy as fuck. Even with the skull tattooed on his forehead, he was so good-looking it was annoying. His strong jaw, chiseled kissable mouth, the overnight growth roughening his cheeks and chin, and his muscled virile body with its hard, six packed torso would surely make any woman drool. Tanesha's eyes finally landed on those sexy lips, wishing she could kiss them again. She remembered how good they'd felt against hers and swallowed audibly. \n\n\"Keep looking at me like that, and I won't be responsible for what happens.\" Ty drawled, making Tanesha gasp guiltily. She tried to move away but again, Ty prevented her. \"Tell me what you were thinking.\" He murmured against her hair.\n\n\"Nothing.\" She gasped.\n\n\"Liar.\" He countered softly, releasing her from his hold.\n\nTanesha jumped out of bed and rushed into the bathroom, only coming back out after taking a really long shower. She thought standing under the water would help cool her aroused body. But of course it didn't help. When she came back into the room, Skull was entering the room with a bowl of what she assumed was her breakfast. He placed it on the table and headed towards the bathroom.\n\n\"Eat.\" With that he entered the bathroom to take a shower too.\n\nBy the time Skull came out of the bathroom, his hot body sexily clad in just a towel, Tanesha had finished eating the little that she could. Without sparing her a glance, Ty went to his backpack and pulled on boxer briefs and a pair of cargo pants. When he turned around to take the towel back to the bathroom and his eyes landed on Tanesha, he froze. Tanesha was looking at him as though he was a glass of yummy ice cream sundae. The stark hunger Ty saw in those eyes was so powerful it felt like he'd been hit with an electric bolt. Lust twisted his gut, causing him to draw in a sharp breath. And when he saw Tanesha's pretty pink tongue peek out to sexily smooth over her bottom lip, Ty just knew he couldn't go one more minute without tasting those lips. He moved towards Tanesha before he even knew what he was doing. \n\n\"Skull.\" Tanesha breathed, watching with a dazed expression as Ty stalked towards her with the look in his eyes almost feral...simply entrancing. \"What...\"\n\nTy crushed their lips together, effectively cutting off whatever Tanesha had been about to ask. She automatically started to struggle, her hands shooting up to Ty's chest with the intention of pushing him away. But apart from the fact that she didn't stand a chance against that masculine strength, that kiss was meant to devoured, possess and demand total submission and that was precisely what it accomplished. At Tanesha's surprised gasp, Ty plunged his tongue into her slightly opened mouth and then purposefully licked at the roof of her mouth. Tanesha couldn't suppress the delicious thrill that shot through her at that tiny mind-blowing caress. With a small cry, she melted against Ty and gave in to his searing kiss, her knees weakening in seconds at the burst of sensations that slammed into her.\n\nAt the back of Tanesha's mind, she knew that what she was allowing to happen wasn't right but her lust-saturated body had a mind of its own. She couldn't think past the fuzzy hunger surrounding her brain at that moment as she opened wider to Ty and accepted the hungry plunge of his hot tongue. She clung to Ty's bare, steely shoulders, intoxicated by his passion and dizzy with need. Tanesha could feel Ty's erection pressing insistently against her stomach and shivered, moaning lustfully into his mouth. \n\nTy swallowed the hungry sounds even as he kept plundering her mouth. He couldn't get enough of that luscious mouth. He could feel his control slipping but was too far gone to even care. In that moment, there was only Tanesha, her sexy mouth and how it was blowing his mind...nothing else mattered. At a point, they had to come up for a much needed air, both panting for breath. But when Ty saw the sheer longing in Tanesha's eyes, he groaned and swooped right back down, sliding his mouth more slowly over Tanesha's this time and sucking erotically on her tongue till a cry of desperate need tore out of her. Ty released those sweet, swollen lips and hugged Tanesha tightly to him, feeling an intense shudder pass through him when Tanesha whimpered and wrapped her arms around his neck.\n\n\"What are you doing to me?\" Ty muttered, stepping back a little to look down into Tanesha's passion-filled eyes. \"Seriously. You've gotta stop looking at me like that.\" Ty growled as he allowed his hands to fall to Tanesha's hips, holding her against him. He had to restrain himself from snatching her into his arms, darting into bed and fucking the living daylights out of her. And much as he knew he had to put a distance between them, he didn't want a repeat of what happened the last time when he'd let her go abruptly. \"Are you okay?\" He asked nuzzling his face against Tanesha's hair. At her nod, he released her almost reluctantly, and then with an explosive curse, went to pull out a t-shirt from his backpack and left the room.\n\nTy leaned against the closed door and pinched the bridge of his nose in frustration. Damn, he'd never gotten so hard just from a woman's glance. What the fuck was the girl doing to him. Yes, he'd fucked a lot of girl but never had he been under a woman's spell as he felt he was under Tanesha's. He wanted her with a fierceness he could never remember feeling for any woman before this one. She could disarm him with a simple glance, for fuck's sake. The girl made him want to forget what was important and just lose himself in her. Fuck! Being in the same room with her and not touching that sexy alluring body, or not tasting her sweet lips all the time as he would have wished, was driving him insane. He wanted to ride her till she begged for mercy... to shove his cock so far inside her till she screamed her release. Shit! \n\nLieutenant Tyler Tyron Wesley didn't know the exact day his mission was going to end, but he knew one thing for a fact... Tanesha Ashton had managed to slide right past his defenses. And he hadn't even known it. Ty stood there, shirtless, his massive chest rising and falling with harsh, tightly controlled breaths. Lust whirled in his lower belly, demanding relief... demanding her...\n\n\"Everything okay, boss?\" He heard Donk ask and raised his head.\n\n\"Sure.\" Ty rasped. \"Get the camera ready. We need to take the first batch of pictures today.\" Maybe the pictures would help alleviate the fears of Tanesha's family, he thought grimly. \"Call me when you're done setting up.\" With that, Ty pulled on his t-shirt and headed outside into the cool breeze. He needed to clear his head.\n\nBack in the room, a still dazed Tanesha sat on the couch, her fingers against her swollen lips. Her mind was reeling. All she could do was feel...with her body. And God, she wanted Skull. The man made her want so badly that she couldn't even think coherently. What was it about Skull that not only made her go all mushy inside, but also made her totally forget about the danger she was in, Tanesha asked herself. Of all the men she could desire, why him? Despite her head telling her that her needs were wrong, her body ached. As if in a trance, Tanesha stood and picked up the towel from where Skull had dropped it. Then she went to hang it in the bathroom and came back to sit quietly in the couch. And that was where Mickey found her when he came to take her to the living room for the photo-shoot. \n\n***\n\n\"Give us a smile, bitch.\" Thug number one, whose name Tanesha still didn't know, bellowed.\n\n\"If you want a smile, don't call her a bitch.\" Ty growled, giving the signal for Jess to start snapping away.\n\nTanesha sat quietly through the photo shoot and allowed her mind to wander. The idiots were obviously now ready to send the ransom note, she thought annoyed and yet surprised. Why it had taken so long, she couldn't tell. But hopefully, her parents would try and raise whatever amount the guys wanted so she could go back home before she succumbed to the demands of her treacherous body. She was still shaken by what had transpired between her and Skull that morning. What worried her more was that she knew emphatically that what she felt for Skull was more than mere lust.\n\n\"F. M. L.\" She muttered and gave a short bitter laugh.\n\n\"What's funny?\" Mickey asked, coming to stand beside Tanesha. \n\n\"Nothing. Are we done here?\" Tanesha asked.\n\n\"Yep. Shall we?\"\n\nTanesha stood up to follow Mickey back to the room, noticing that Skull was nowhere to be found though he'd been around when the shoot started. What a boring life, she thought as she entered Skull's room with Mickey. Before she could go towards the couch, Mickey steered her towards the table, where her lunch and a bottle of fruit juice was waiting. Her eyes widened in surprise.\n\n\"Nice touch.\" She said mockingly as she sat down. When she uncovered the plate and found mashed potatoes and juicy looking steak with sauce and steamed vegetables on the side, she whistled. \"What did I do?\" Tanesha gasped.\n\n\"You tell me.\" Mickey chuckled, sitting down in the second chair. \"What have you been doing? Giving the big guy some huh?\"\n\n\"No.\" Tanesha laughed. \"Get your mind out of the gutter. Why, did he organize this?\"\n\n\"Yep.\" Mickey raised an eyebrow. \"Said something about giving you a treat for 'good behaviour'.\" Mickey said with a smirk, giving the phrase quotations with his fingers. \"And in his books, you've obviously behaved well so I ask again...are you blowing him or what?\"\n\nTanesha chocked on her food and started coughing. She accepted the bottle of water Mickey offered and gulped down half. \"Are you trying to kill me, you idiot?\" She gushed. \"I'm not doing anything to that man's penis so leave me alone.\"\n\n\"Penis. How cute.\" Mickey laughed.\n\n\"Mickey...\" Tanesha groaned. \"Shut up before I pour this juice over your head. Listen, I can't eat all this steak. Take one please.\"\n\nWithout hesitation, Mickey reached out and picked up a steak. \"Your wish is my command my queen.\" He drawled as he bit into the steak, drawing a chuckle from Tanesha. \"Hmm... it's good.\"\n\n\"U-huh. It is.\" Tanesha said around a mouthful. The food was so good she finished in a short time, drinking half of her pineapple juice with a smile. \"That was good food.\" She moaned.\n\n\"Ever heard the saying, good food, good alcohol, good sex?\" Mickey asked, getting to his feet.\n\n\"Nope.\" Tanesha laughed. \"But I'm definitely sticking to just one. The other two, I don't care for.\"\n\n\"Sure about that?\" Mickey drawled. \"The juice can pass for the alcohol. As for the good sex... don't think you're fooling me, Tanesha.\"\n\n\"What?\" She gasped, \"but I'm not...\"\n\n\"You're attracted to him. Admit it.\" Mickey taunted.\n\n\"I won't admit any such thing.\" She couldn't meet Mickey's eye. \"I'm not attracted to that beast.\"\n\n\"Yeah right. You should see yourself whenever he's around.\" Mickey picked up the plate. \"The sexual tension is so thick it can be cut with a knife. You two should fuck already if you haven't.\" With that parting shot, Mickey left the room.\n\n\"Oh my God.\" Tanesha muttered. Was it that obvious? Did everyone know just how much she wanted Skull? \"Fuck my life.\" She groaned, laying her head on the table. That wasn't good. She had to make an effort to mask how she felt about Skull. \"Oh fuck.\" She swore.\n\nAfter a while she stood up to go and lie on the bed, but froze when she got to it. The magazine that Skull had terrorized her over the night before was lying on the bed...obviously left there for her. Tanesha couldn't stop the smile that spread across her face as she sat on the bed and picked up the magazine. She felt like a kid on Christmas. For a law student, not getting anything to read all that while was killing her. And to get none other than TIME Magazine was a great treat. She read from cover to cover and started all over again.\n\nWhen Ty entered the room that evening, it was to find Tanesha lying in bed, totally engrossed in the magazine. She looked up and gave him a brilliant smile that caused his knees to go weak. Fuck! That was the first ever real smile he'd gotten from Tanesha and Ty knew he was in deep shit. Not lingering in the room for even a second, he went right through to the bathroom and closed the door. Hell, just the sight of the girl was driving him to the brink of control. \n\nBy the time Ty came out of the bathroom, Tanesha was standing in front of the bed with her arms folded beneath her breasts and a apprehensive look on her face.\n\n\"It was on the bed when I came in.\" She began in a defensive tone. \"I didn't...\"\n\n\"I left it there for you. Relax.\" Ty said as he headed for his backpack. He pulled out a pair of black boxer briefs and as usual, pulled it on beneath the towel he had around his waist. He didn't plan on wearing anything else as the weather was rather warm. He'd been told that on the Island, such warm weather was called the 'warmth before the storm'. They were to expect a storm in the coming days. Well, till that storm hit, he planned on sleeping in as little clothing as he could. When Ty turned around, Tanesha was still standing there, looking agitated. \"What?\" He asked with a raised brow.\n\n\"If you left it there yourself, then why are you angry?\" She asked looking up at him, and then quickly looking down again. All that sexy male body was making her confused, Tanesha thought shuddering. \n\n\"What makes you think I'm angry?\" Ty drawled, walking past her to the bathroom to hang his towel. When he came back, he flopped into the couch and then stretched out. \"Oh shit, I forgot the pillow. Could you be a darling and give me one pillow please?\" He asked.\n\nTanesha went to the bed, picked up a pillow and went to give it to Skull, keeping her eyes off him the whole time. When she felt Skull's hand close around her wrist, she gasped.\n\n\"Thanks.\" Ty said. \"But you didn't answer my question. What makes you think...\"\n\n\"Well, you frowned when you saw me.\" She snapped, cutting him off.\n\nTy raised an eyebrow in surprise. \"I see. Would you rather I'd laughed when I saw you?\" Ty couldn't keep the amusement out of his voice.\n\n\"No but... you didn't have to frown.\" She said reproachfully.\n\n\"I'll try and remember that next time.\" Ty answered smoothly. \"Now tell me about what you read.\" Ty said pulling Tanesha to sit beside him on the couch, making her gasp.",
        "\"But I thought you'd already read it.\" She tried to stand.\n\n\"Not everything.\" Ty said, removing one leg to enable him push Tanesha further onto the couch. Then he placed his leg back down...this time across her thigh, locking her in place. \"Tell me.\"\n\nTanesha turned and watched as Skull pushed the pillow beneath his head. Then mumbling something under her breath, that Ty didn't catch, she leaned down and pulled the pillow from under his head and placed it over his boxer clad groin. \n\n\"Better.\" She muttered. \"Now, which story do you want to know?\"\n\nTy erupted into irrepressible laughter. He laughed so hard, Tanesha found herself getting irritated. \"Oh God, you're funny.\" Ty said between laughter.\n\n\"Yeah, I'm Chris Rock.\" Tanesha grumbled, pushing Ty's leg off her and getting to her feet. \n\n\"Hey come back...\" Ty tried to but just couldn't stop laughing. \"Come on, I...\" But he trailed off when he saw Tanesha pick up another pillow and the magazine. She turned on the bedside lamp and went to switch off the main light. Then she went back him.\n\nShe placed the magazine on the pillow she'd left on top of Ty and went to stand beside his head. Without a word, she reached down to lift his head and then pushed the second pillow between his head and the arm of the couch. Then going to sit back down beside Ty, Tanesha leaned comfortably on the pillow lying on Ty, and opened the magazine. With the moonlight streaming in through the window and the light from the bedside lamp, she could read perfectly. She rolled her eyes when Ty flashed her a million-watt smile and brought his leg back onto her thighs. \n\n\"Alright, which ones did you not read?\" Tanesha asked, trying very hard to suppress her own smile as she flipped through the magazine.\n\nAnd they ended up spending hours discussing the contents of the magazine. Ty allowed Tanesha to do most of the talking, enjoying watching her talk and really appreciating her intelligence. He had a feeling if he talked much, she would be able to read him so he just listened more and interjected where necessary. At a point, Ty absentmindedly began to soothingly comb his fingers through Tanesha's hair whilst she talked and it wasn't awkward at all. And when after a while Tanesha adjusted herself so that she was stretched out on top of Ty, with her legs between Ty's and her head lying snugly on the pillow covering his groin and stomach, none of them even batted an eye.\n\n\"Tell me about yourself.\" Tanesha said softly, out of the blue. She felt the fingers in her hair stop moving briefly, before starting to move again.\n\n\"There's not much to tell.\" Ty rasped. \"Why don't you tell me about yourself?\"\n\nTanesha snorted. \"You already know all about me.\"\n\n\"No I don't.\" Ty laughed. \"I wouldn't ask if I did.\"\n\n\"Somehow you don't come across as someone who would take a job and not know about your charge.\" Tanesha said. \"You're too smart not to.\"\n\n\"Oh, so now I'm smart? What happened to the brainless, spineless idiot? Or was it bastard?\" Ty asked dryly.\n\nTanesha went quiet for a while. \"You're not brainless.\" She said quietly.\n\n\"One out of three. Not bad.\" Ty chuckled.\n\n\"You're not an idiot.\" She whispered.\n\n\"Great score. I guess I have to stick with spineless.\" He said.\n\n\"You kidnap a woman. Threaten her with rape and torture and touch her against her will in a room full of criminals. Only a spineless fool will do that.\"\n\n\"So now I'm a fool in addition to being spineless. Sweet!\"\n\n\"You know what I mean.\" Tanesha grumbled. \"You touched me in front of them, Skull.\" She said, not even realizing that by that statement, she'd unconsciously implied that Ty wasn't part of the gang. \"That was cruel and horrible.\" She said with so much pain and emotion, Ty froze. \"And do you know what was horrible about the whole scene? I...\" She trailed off.\n\n\"You what?\" Ty husked.\n\n\"I was turned on. God help me, I was so aroused.\" She whispered. \"Not because they were watching. Because of you. I wanted you. And they could all see that. It was mortifying.\" Her voice caught in her throat.\n\nTy felt like an ass. \"I know.\" He breathed. He didn't know what to say. He never thought Tanesha would admit something like that to him. Of course it wasn't necessary to let her know that it was either give her pleasure or hurt her. And he'd chosen to give her pleasure. Ty said what came to his mind. \"I'm sorry. I'm so, so sorry.\"\n\nTanesha didn't acknowledge or accept his apology. She remained quiet till Ty heard her even breathing, indicating that she was asleep. He pulled her up till both the pillow and her head were on his chest, and then wrapped his arms around her, still reeling from her last words. Tanesha was feisty and headstrong but also vulnerable, both in view of the danger she was in and the demands of her body, which she was clearly trying without success to control. He was going to keep her safe even if it killed him, Ty vowed to himself. He owed her that much. He however couldn't ignore the chemistry between them. They both obviously wanted to fuck each other's brains out. He liked her... A lot. And he knew that soon, he wouldn't be able to contain his feral hunger for Tanesha. Anytime he looked at her, all he could think of was stripping her and cramming her full of himself till her body exploded into a thousand rapturous pieces. He'd tried very hard to ignore the strong urge but he knew that with the intensity of their lust and attraction for each other, it was only a matter of time before he was balls deep inside her pussy, deep-dicking the shit out of her. Ty groaned, feeling his cock jerk at the thought of being inside Tanesha. He wanted to lick her all over...taste her everywhere, along her wet folds where he could coax her throbbing clit out of its hood and suck on it till he was awarded with her cream.\n\n\"Fuck!\" Ty swore, moving his hand down between them to adjust his full-blown erection. He wanted her so damn bad he could barely think. How the fuck was he going to get any sleep with that throbbing hardness between his legs, he asked himself with a groan. \n\nAnd just as he thought, it took a really long time for him to be able to calm himself down enough to give in to slumber...his last thought just before he drifted off being... Why fight it?"
    ],
    "authorname": "adjoaq",
    "tags": [
        "ghost",
        "voyeur",
        "attraction",
        "punishment",
        "tanesha"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/sizzling-embrace-ch-03"
}