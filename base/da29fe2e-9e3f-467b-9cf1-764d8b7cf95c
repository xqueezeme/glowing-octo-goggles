{
    "title": "My Rival / My Rival Ch. 02",
    "pages": [
        "McKayla\n\nTwice now I've crossed paths with my rival, and both times things ended similarly. I thought I was just drunk the first time, but the second time was even better, despite the lack of alcohol. It was just me and her, hashing out our differences after years of subconscious tension.\n\nThough I quite liked the idea of her having some kind of lesbian affinity towards me, for some reason, I liked the idea of her hate-fucking me even more. I mean, she was so sexy when she spanked me over her lap. And when she fingered me in the ass and denied me from finishing, I never found anyone more desirable than her.\n\nIt doesn't even matter that I persuaded her to do those things to me. When I've asked people to do things they didn't want to do, they just gave the bare minimum effort. Emily, on the other hand, went above and beyond.\n\nSure, I forced myself over her lap and demanded she spank me, but I didn't tell her to pull my hair and rub my poor little cheeks, teasing me between smacks. Yes, I told her to deny me the first time, but I had never seen someone so desperate to come back to me, bringing me to the edge of an orgasm once again. And of course, I basically begged her for the anal fingering, but she was the one who decided to grope my tits with her other hand and play with my rock-hard nipples.\n\nI asked her to do a lot of things, but I didn't force her to do anything. I only encouraged her to do what she already wanted to do. That's what made it so hot to me. That's why I can't get over that night.\n\nEmily plays an angelic and shy girl, but I see the fire inside of her. It takes some encouragement, and maybe a tiny bit of confrontation, but when she stands up for herself, I can see that animal inside of her coming out. And when that animal takes over, I am her lucky prey.\n\nI spent the next several days unable to get that previous night off my mind. The way she dominated me, the way she spanked me, the way she denied me... I had never experienced anything more arousing.\n\nThe idea of sex with anyone else just wasn't the same. Masturbating wasn't the same either, even if I was thinking about her while I touched myself. I tried to replicate the feeling, denying myself at the end just when I was about to finish, but it was nothing compared to the humiliating pleasure of being denied by my sweet little princess... I mean... my rival.\n\nObviously, I could never look at her the same again. But strangely enough, I couldn't look at myself the same either. I felt sexier than ever, knowing what Emily had done to me. I was prideful, knowing that I was the one lucky girl who got to experience that side of her. I don't know how many people she has had sex with, but I know for sure no one has ever experienced what I have.\n\nUnable to get over how I felt, I went to the store to buy some lingerie. It may sound silly, but I liked the idea of wearing something sexy while I fantasized about her denying me again.\n\nI know I told her I couldn't wait until she decided to finish me, but I didn't really think things would go any further. It was just a fun night of spontaneous sex, but understanding I couldn't replicate anything near that amazing, I knew I would end up running right back to her.\n\nI bought a lacey black bra and panty set, hoping that masturbating in it that night would make me feel as desirable as I did when I was with Emily. But understanding it was a tough task to match, I decided to do a little more shopping, hoping to find something that would intensify the pleasure.\n\nI stumbled into the adult toy store, where I hoped to find something to remind me of her. Though I originally had some type of vibrator in mind, I soon turned my attention onto a dildo.\n\nI know Emily doesn't have a dick; that's not why it reminded me of her. However, when I looked at it, it made me think of her... strap-on fucking me... for some reason.\n\nI bought it and took it home, not even thinking twice about my decision. I was chasing the sensation that resulted from an odd kink, so I felt it was understandable for me to think outside the box. However, the fact that I bought lingerie and a strap-on while thinking about the little blonde princess wasn't something I ever planned on disclosing to anyone.\n\nLater, as I sat around at my apartment, playing on my phone, I realized that I was just wasting time until it felt appropriate to use my new toy. For some reason, nighttime was the universally accepted time for sex, but I was kidding myself, thinking I could wait that long.\n\nFirst, I decided to try on my new outfit, just to see how I looked in it. As I had hoped, I felt extremely sexy as I checked myself out in the mirror. I even giggled after performing a little twirl.\n\nDamn, I wish Emily could see me in this, I thought to myself, checking out my ass. She wouldn't be able to keep her hands off me.\n\nFeeling myself, I took a couple of pictures in the mirror. I had to restrain myself from sending them to her, despite my eagerness to see her reaction.\n\nWhile imagining Emily putting her hands all over my body, I decided to break out the new toy. I squirmed around in bed, rubbing the tip of it up and down my body before I let it gently graze my clit.\n\nEven if Emily wore the strap-on for me, she wouldn't just stick it inside me, I fantasized while biting my lip. She would work me and make me beg for it to teach me a lesson.\n\nI could have teased myself like that all night but I had an urge to put on a performance for her. Hoping it would be something that would please her, I laid the dildo on one of my pillows and straddled it, wishing it were her I was on top of.\n\nOf course, it wasn't the same sensation as being fucked, but that's not what I needed in that moment. It was all of Emily's other traits that I yearned for. The things she did without even realizing it whenever she let her guard down.\n\nAs I grinded against the pillow, I turned my body a little and gave my ass a little smack. Obviously, she had never strap-on fucked me before, but I could only imagine how rough she would be with me if I got to grind up and down her body.\n\nI did everything I wanted her to do; everything she would want to do, as I continued humping the pillow on my hands and knees. I spanked my own ass, I twisted my nipples, and I pulled my own hair. I even played with the rim of my asshole like she did, right before she finger-fucked me.\n\nObviously, I felt a bit silly doing all that to myself, pretending it was her. Luckily, I lived alone, so there was no one else in my apartment to judge me. It was my little secret, unless I decided to tell Emily.\n\nThough it was nothing compared to the real thing, just imagining Emily doing all these things to me quickly brought me to the edge of an orgasm. In my attempts to replicate the sensation she brought me, I pulled myself away from the dildo in the nick of time, denying myself from cumming.\n\nIn theory, being denied should leave you with a feeling of disappointment, but this was different. I wasn't disappointed because I didn't get to finish. I was disappointed because she wasn't the one who denied me. Just like I couldn't replicate the pleasure she brought me by doing all those naughty things to my body, I also couldn't replicate the feeling she gave by denying me.\n\nMaybe it wasn't the same because of the magnitude of the orgasm, I wondered, sitting in my bed several minutes later. Maybe it was so good when she did it because I was going to cum really hard.\n\nIn that moment, I realized if she were to ever actually finish me, it would be yet another thing unmatched by anything I had ever achieved before. More importantly, it would be one more thing I would be searching to replicate, just to be disappointed by my own efforts.\n\nIt was a dangerous game I was playing, having fun by getting so involved with my blonde rival. Unfortunately at this point, I knew it was a game I had already lost.\n\n******\n\nIt wasn't long before we ran into each other again. The coed flag football team my friends forced me to play on was facing her team again. Despite how much I hated football, I actually looked forward to competing with her once again.\n\nEverything felt so different as I laid my eyes on the cute little blonde standing across the field. I no longer enjoyed how unconfident she looked, now that I had seen her at her best.\n\nMuch like the first game, we got off to a big lead. How big that lead was exactly, I wasn't sure because I don't know how many points a touchdown is worth.\n\nI'm a little more athletic than Emily is, so I was able to score a few times. However, the real reason we were winning was because my teammates were much better than hers.\n\nOn one particular play, I caught the ball before successfully getting away from her. Unfortunately, as she was chasing me, she tripped over her own foot, causing her to fall to the ground.\n\nWhen I walked back after scoring the touchdown, my teammates were laughing and pointing at Emily while she was still on the ground. I didn't like the way she laughed at her during the first game, but it absolutely infuriated me this time. \"Stop making fun of her!\" I groaned, furrowing my eyebrows at Brian and Tom.\n\nGiggling like little schoolgirls, they continued talking shit, saying, \"She is so bad!\"\n\nI quickly rolled my eyes at them and defended her. \"She's doing her best, so just stop laughing at her.\"\n\n\"Well, her best just isn't good enough,\" Brian responded, making me disappointed in myself for ever dating him. \"Maybe she just shouldn't play football if she's that bad.\"\n\n\"She probably doesn't even want to play,\" I argued, putting my hands on my hips. \"Her team probably begged her to play because they needed another girl, just like you guys begged me.\"\n\nThough I wasn't able to make them respect Emily the way I did, I at least got them to shut their mouths momentarily. But as we started playing again, I decided defending the clumsy little blonde wasn't enough.\n\nStanding there on defense, I noticed how dejected she looked. Her head was down, as if she didn't even want to try anymore. Maybe she'll have more fun if she actually gets the ball, I wondered to myself as I slowly inched away from her.\n\nWhen the next play started, I pretended as if I got caught up watching the other players. As I drifted away from Emily, her teammate suddenly realized how open she was. Not once had they even thought about throwing her the ball, but with how wide open I left her, the quarterback was left with no choice.\n\nAs the ball traveled in the air, I pretended to realize just how open she was. I jogged towards her direction, but I wasn't worried about getting her; I just wanted to get a better view to see if she was actually going to catch it.\n\nJust like everything else with the cute blonde, she looked adorable as she clumsily caught it after juggling it a few times. She was so shocked she even caught it, that it took her a second to remember she needed to run.\n\nAs I jogged towards her to get her flag, I noticed the disparaging look on her face had disappeared. Though she looked far from confident, I could finally see the excitement in her eyes; the same excitement I saw when we were... intimate.\n\nEverything started moving in slow motion as we approached each other. Suddenly, as I saw the look in her eyes, I started to think about the way our relationship had evolved over the past few weeks.\n\nAfter replaying all the moments we shared in my head, I suddenly \"tripped\" while trying to grab her flag. Emily didn't realize what happened, but everyone on her team was screaming for her to keep running. She frantically churned her legs until her team was cheering and celebrating after she scored a touchdown.\n\nI had to fight off a smile as I got up from the ground and brushed myself off. My teammates rushed over to me and asked, \"What happened?\"\n\nShrugging my shoulders, I simply answered, \"She just got past me.\"\n\nAfter the game was over, Emily looked completely different than she did the previous time we played. She was so upbeat, smiling and chatting with her friends as if they had won the game.\n\nFor some reason, it brought a smile to my face, seeing her so cheerful. When I got a second to get away from my teammates, I walked over to give her a high-five and say, \"Good job.\"\n\nEmily's face lit up, showing off those cute, little dimples. \"Thanks!\" she exclaimed, looking proud of herself. \"Did you let me score on purpose?\"\n\n\"Of course not,\" I responded, shaking my head. \"You just got past me and scored.\"\n\n\"I didn't even see what happened,\" she continued, looking a bit confused. \"I was running and then all the sudden, I didn't see you anymore!\"\n\nMaking sure she took full credit for her accomplishment, I explained, \"When I was running towards you, I thought you might try to juke me, but you just kept running straight and my legs got tangled up because I wasn't expecting it. Next thing I know, I'm on my ass, and you're scoring a touchdown. It was an awesome play by you!\"\n\nOnce again, her face lit right up, knowing she had been acknowledged for doing something positive. Emily then complimented me back, because she's so freaking nice and cute. Even though I didn't really care about my performance in the game, her compliments left me feeling giddy.\n\nBefore I ran back to my team, I told her, \"I'll see you later.\" I almost cringed, saying it as if I expected to see her again after what we had been through. However, she immediately comforted me by smiling and saying it right back.\n\nWhen I got back to my friends, they were pretty much ready to leave. One girl noticed me talking to Emily and asked, \"Are you guys friends now?\"\n\nI don't know why, but I chuckled and answered, \"I don't know what we are.\"\n\nMy friend looked at me, a little confused. \"Maybe she earned your respect when she scored on you?\"\n\nAlmost daydreaming about the cute little blonde, I replied, \"Yeah, I respect her now that she scored with me... I mean, scored on me...\"\n\n*****************\n\nTo my surprise, the kind gesture I did meant more to Emily than I originally thought. She was in such a good mood, she direct messaged me on social media, telling me how much fun she had, and how much she appreciated me talking to her after the game.\n\nI messaged her back immediately, once again complimenting her for doing such a good job. We continued to chat, talking about how much we didn't like football, and how our teams just needed us to play.\n\nBefore I knew it, we were just talking like girlfriends. Not girlfriends who were dating each other, but two girls who just happened to be friends, and could have a good time chatting with each other.\n\nThough I had already seen a side of Emily no one else had, she surprised me once again by showing more of her cute personality. She was so chatty and bubbly; I found her more adorable than even I imagined.\n\nI had such a good time messaging her; I invited her to my apartment without even thinking about it. \"I had so much fun today! You should come over.\"\n\nBefore I could even think about how awkward that might have been, she calmed my nerves by responding, \"Okay!\"\n\nWith heavy anticipation, I waited a few minutes for her to come over. Tired of just watching the clock, I decided to tidy up my living room, hoping it might impress her for some reason.\n\nI felt my heart jump when I heard the knock at the door. Shocked by how cute she looked, I let out a little gasp as she entered my apartment.\n\nThere I was, the girl who always needed to dress slutty and wear lots of makeup, standing in the presence of the naturally beautiful blonde. Even when she was just in a T-shirt and shorts, with no makeup at all, she was truly breathtaking.\n\nI kept my composure, trying to stop myself from checking her out. But as we began chatting again, her bubbly nature started to capture my heart.\n\n\"Are you sure you didn't just let me score?\" she kept asking with a cute little grin. I'm sure Emily was smart enough to figure it out, but it was amazing to see her still riding the high of that moment she seemed to find so special.\n\n\"I didn't let you score,\" I assured with a friendly smile. \"You just kicked my ass on that play.\"\n\n\"Well, if I kicked your butt on that play, then why are you smiling so hard right now?\"\n\n\"I don't know...\" I responded, getting a little red. \"I guess I've just never seen you so bubbly like this. You're just so... cute when you're happy...\"\n\nThe grin disappeared from Emily's face, and she suddenly looked as if she were holding back tears. However, I knew she wasn't sad after a compliment like that. A precious little angel like her was just touched from hearing a compliment, even from a peasant like me.\n\n\"You really think I'm cute?\" she asked, twiddling her fingers.\n\nIt normally annoyed me when people sought out compliments, but with her, it was different. She deserved all the praises in the world because it gave her confidence. And when she was confident, she was an even more amazing person than anyone knew.\n\n\"Of course, you're cute,\" I assured. I then turned the dial up without even realizing it. Not thinking about the words that were coming out of my mouth or how Emily would perceive them, I continued with, \"You're not just cute, you're fucking hot; especially when you dominate me.\"\n\nThe angelic blonde did a double-take, shocked by my provocative compliment. With the big smile back on her face, she asked, \"When... I dominate you?\"\n\n\"Yeah... Well, you're always hot. But even more so when you dominated me on the football field... and of course... the time you dominated me in bed...\"\n\nI don't know why I felt the need to admit all that to her face, but I'm glad I did. I could immediately sense how aroused she was from my revelation. As she started biting her lower lip while staring into my soul, I noticed that look in her eyes again; that look I found irresistible.\n\nChanging her tone, she sounded even sexier as she asked, \"You liked it when I dominated you in bed?\"\n\n\"Of course, I did... I can't stop thinking about it...\"\n\nI could sense her breathing harder as she inched her way closer. \"I'm glad you liked it... I was worried I didn't do a good job since you had to keep telling me what to do.\"\n\nFeeling myself getting wet, I responded, \"I didn't tell you what to do. I was just making suggestions. You were the one making my fantasies come true.\"\n\nAfter blushing for a moment, there was a sudden look of nervousness on her face. It wasn't the same nervousness I normally saw out of her. This was a cute nervousness, like she was daring to be brave. Looking down at the ground, she admitted, \"You know, I never imagined doing any of that stuff, but when you suggested it, I actually liked the idea of doing those kinky things to you.\"\n\n\"So, you liked my suggestions?\" I asked, gravitating towards my hot little blonde. \"Well, maybe I have another suggestion for you.\"\n\n\"What is it?\" she asked, letting out a little moan.\n\n\"After getting dominated by you today in football, I have a strong urge to get on my knees and eat your pussy,\" I said, licking my lips. \"But I don't want to just do it on my own. I want you to tell me to do it... No, I want you to demand I do it.\"\n\nEmily ran her fingers through her own hair as the nervousness slowly disappeared from her face. Now that she had my assurance, the shy girl was ready to take on the role of being my strong and dominant woman, just like I desired. \"Get on your knees and eat me out,\" she said, still sounding polite.\n\nI put my finger in my mouth and explained, \"A naughty girl like me needs to be talked down to a bit. Maybe you can try to use vocabulary that I would understand. Maybe you should just tell me to eat your pussy.\"\n\nAfter taking a deep breath, she put on her brave face and used a stern voice to say, \"McKayla, I demand you eat my pussy right now.\"",
        "Never had I been so moved to do something. I was so quick to follow orders and be the submissive girl I wanted to be for her. \"Yes, Ma'am,\" I responded as I got down to my knees and pulled her shorts and panties down.\n\nAs she held on to my shoulders for support while I removed her bottoms, she made another suggestion. \"I want to see your breasts while you eat my pussy.\"\n\nI almost gasped at her sudden forwardness. \"So, you want to see my tits?\" I asked, looking up at her from the ground.\n\nShe licked her lips and nodded her head. \"Yes, I want to see your tits.\"\n\n\"Yes, Ma'am,\" I responded once again with an obedient smile. I then happily removed my shirt and bra, presenting my boobs to the woman I so desperately wanted to please.\n\nStanding on my knees, I held her by the hips as I ran my tongue up and down her inner thighs, teasing her a little just before taking her little bean into my mouth. She panted heavily, looking down at me like the little whore that I was for her.\n\nAs I looked up and made eye contact, she whispered, \"You have such pretty brown eyes,\" with a trembling voice.\n\nI felt honored, being complimented by such a precious woman as I licked up and down the folds of her juicy pussy. \"Thank you,\" I responded, never removing my tongue from her clit.\n\nAs Emily moaned and closed her eyes, she began running her gentle little fingers through my long, dark hair. \"You're so fucking good at this,\" her voice trembled, before opening your eyes again so she could look at me with approval.\n\n\"I can do this all night if it pleases you,\" I offered with a wink.\n\n\"Your knees must be so sore from the ground,\" she said with a cute little smile. \"Maybe we should go to your room and continue on the bed?\"\n\n\"Yes, Ma'am,\" I quickly answered, before she took my hand and helped me up to my feet. I then led her to my room and opened the door, but as it swung open, we both noticed my new toy sitting on my bed.\n\nOh no! I screamed in my head. I was so preoccupied with cleaning the living room that I didn't even think of the possibility of us going into my room. Now she's going to think I'm some kind of fucking weirdo!\n\nQuickly, I tried to put it away, but it was blatantly obvious that Emily already saw it. The innocent and angelic woman stood there with her mouth wide open, not knowing what to say.\n\n\"I didn't mean for you to see that...\" I muttered, embarrassed in front of her for the first time.\n\n\"Wait,\" she said, stopping me in my tracks before I could put it away. \"Why... does it have all those.. straps?\"\n\n\"Oh... erm... It's actually... umm... a strap-on...\"\n\n\"Oh.... I hope this isn't too personal... but why do you have a strap-on... in your bed?\"\n\n\"I uh... was going to... pleasure myself with it...\"\n\n\"I understand that... but why a strap-on... and not just a regular toy?\"\n\nFor some reason, I couldn't think of a good excuse. As embarrassing as it was to admit it to her, I decided to let my guard down and just tell her the truth. \"I uh... I got it the other day because... I was fantasizing about you... using it... on me...\"\n\nI don't remember ever being that nervous about admitting anything in my life. Much to my luck, my nerves were calmed and I felt rewarded as a cute little smile girl on her face. She slowly aoproached me amd grabbed it out of my hand. \"You want me... to wear this... and use it on you?\"\n\nStill nervous, I stumbled over my words as I tried to keep my cool. \"Yeah, umm... That would be... I would like that... a lot... I mean, if you're willing to try something like that...\"\n\nI could tell she was a little timid, but she dared to be the adventurous woman I knew she could be. Knowing how much I loved her smaller boobs, Emily left me drooling by removing her shirt and bra.\n\nShe awkwardly strapped herself up, causing my heart to almost explode out of my chest. \"You're going to fuck me so hard, aren't you?\" I asked, sucking my own thumb.\n\n\"I sure am,\" Emily answered, growing more confident by the second. \"Now get on the bed so I can fuck you, doggy style.\"\n\n\"Yes, Ma'am,\" I quickly responded. When a girl like her gives you an order, you follow those orders. I did just that, jumping into position without a thought.\n\nThe sweet blonde hadn't even penetrated me yet, but I was already moaning at her dominant and demanding behavior. Though she had never done this before, she worked my body better than I could have ever hoped for. She grabbed me by my tiny hips before inserting the tip slowly inside of me. Though I was tight, my pussy was dripping wet, allowing her to work inside and spread me open.\n\n\"Oh, fuck!\" I yelled as I felt her rocking in and out of me. The animal must have come out of her, because she began pounding me like there was no tomorrow.\n\nMuch to my surprise, she started talking dirty to me, asking, \"Is this how you imagined me fucking you?\"\n\n\"I never imagined it would feel this good!\" I admitted through my heavy breathing. \"But I also fantasized about you pulling my hair and spanking me.\"\n\nBy now, any guy would have already blown their load, but Emily was just getting started. As I had hoped, she grabbed a firm hold of my long hair and gave me a little tug. Then with her other hand, she spanked my poor little ass while I bounced off that dildo.\n\nHer spanks were so loud, bouncing off my firm cheeks. The smacking sound echoed through the walls, followed by my loud yelps of pleasure.\n\nAs the frequency and volume of my moans increased, I suddenly felt myself on the edge of a earth-shattering orgasm. \"You're going to deny me from cumming so fucking hard, aren't you?\" I asked, desperately.\n\n\"Do you think I should?\" she teased.\n\n\"You're in charge! It's up to you! I'm just your little sex slave.\"\n\nEmily probably didn't want to, but knowing how much I loved being denied by her, she quickly pulled herself out of me, leaving my body seething as it balanced on the edge of the cliff. I let out the whiniest moan as humility overtook my naughty mind. I was well aware that it would have been the best orgasm of my life, but nothing brought me the pleasure of being put in my place by my sweet princess.\n\nThe cute blonde could almost see the sensation leaving my body as I rested my head against the mattress. With my ass still up in the air, she must have felt sorry for me, because she grabbed me by the hips and restarted the process.\n\n\"Oh my God!\" I moaned, looking back.\n\nThere was almost an evil grin on the innocent woman's face. \"You're my naughty girl,\" she said in the sexiest voice I've ever heard. Grabbing a hold of my hair, she pulled me back up to my hands and gave me a harsh smack on my behind. \"I'm not done spanking and fucking my naughty girl.\"\n\nEven though it built up quickly, the incoming orgasm was just as heavy as the one she previously denied me of. As she pounded my poor little pussy again, I turned back and whined, \"I feel another orgasm coming!\"\n\n\"What happens if I don't deny you this time?\" she asked with a cute voice.\n\nAt this point, I was almost scared of what the answer might be. \"This one's really big! I've been denied so many times, it might be too explosive for me to handle!\"\n\n\"For your own safety, you want me to slow down a little? Well, I have news for you, Baby; I don't think that's going to happen.\"\n\nI looked back urgently, showing the fear in my eyes. \"No! It's going to be too big! Just deny me again and we can start all over!\"\n\n\"Shut up!\" the sweet girl demanded, smacking me hard on my ass. She then rocked her body, matching the rhythm of mine as she pounded the toy in and out of me. Building up an incredible pace while continuing to spank my poor little tush, it became abundantly clear that I wasn't going to be able to escape.\n\nI shut my eyes and gripped the bed sheets as I embraced for the strong impact. I would have needed a nuclear bunker to protect myself from the waves of this Earth-shattering explosion.\n\nFeeling the walls crumbling inside me, I let out the longest and loudest moan of my life. I was in a constant haze as I felt the waves of pleasure drowning every inch of me, inside and out.\n\nLosing track of any concept of time. I was left floating in a breeze of endless satisfaction. It no longer mattered who I was or where I've been. In that moment, every part of me succumbed to the mercy of Emily's salvation.\n\nWhen I finally woke up from Cloud-Nine, I was a little surprised to see her staring at me with such intrigue. She still had the toy inside me, but she was holding me by the hips, waiting for me to recover.\n\n\"Are you okay?\" she asked, noticing that I had resurfaced.\n\n\"Oh.... I'm great...\"\n\n\"How was it?\"\n\nMy cheeks were red with embarrassment. After the display I showed, she already knew how undeniably amazing my orgasm was. \"I uh... I didn't think I could handle all of that.\"\n\n\"You did great, Baby,\" she replied with a little chuckle. \"But for a second there, I thought you might tear up the bed.\"\n\n\"Huh?\" I looked down at the mattress and realized I had pulled all the sheets off. I didn't even realize how hard I was grabbing everything, holding on for dear life. After chuckling at my own expense, I looked back at her and expressed, \"I'm surprised you actually let me cum.\"\n\nEven though she was still penetrating me, we weren't right in the middle of sex. She wasn't as confident with the dirty talk when we weren't getting hot and heavy. However, much to my surprise, she did her best, explaining, \"Well, I denied you the first time because you were a bad girl... but this time, I wanted to reward you because you deserve it.\"\n\n\"You think I deserve it?\" I don't know why, but the thought of having her approval meant the world to me.\n\n\"Yeah... You're amazing.\"\n\nEmily probably didn't even mean anything by that little compliment, but it was enough to force a little moan out of me. When she heard the brief moment of vulnerability escape my mouth, her instincts took over again and that look came back in her eyes.\n\n\"Yeah, that's right; You're amazing,\" she said, as she slowly started thrusting me again. \"That's why I like making you cum.\"\n\nShe could see by the look on my face, I wasn't ready to go again just yet. However, for her, and only for her, I had no other choice but to be ready.\n\nShocking me once again, Emily rocked my world by fucking me until she had me screaming again. I wasn't the type that could go multiple rounds with so little rest, but with her, there was no stopping us. Every time felt like the first time, and I was on my hands and knees, begging for more.\n\nAm I really going to cum again? I frantically wondered to myself as she began spanking me and pulling my hair, just like I liked.\n\nAs I opened my eyes for a split second, I caught a glimpse in my vanity across the room. I focused in on the reflection of Emily on her knees, fucking me like I was her little whore.\n\nThe image was sexy enough, but there was one thing that really got me off. It was that look on her face I couldn't get enough of. As she held me by the hips and tore my pussy up, I saw her looking down on me like her vulnerable little victim.\n\nI watched a little grimace come over her face while she gave me a hard smack on the ass. It was the straw that broke the camel's back, forcing me to have a second explosive climax in such a short period of time.\n\nThis time, there was no letting me rest. She continued on, fucking me as my moans echoed throughout the apartment complex.\n\nThere was an overload of pleasure, much more than I could normally handle. However, wanting to please my blonde angel, I held strong and took everything she had.\n\nWhen she finally gave me an opportunity to rest, I collapsed down to the bed, flat on my face. I struggled to regain my breath, panting heavily from what the sweet and innocent woman had done to me.\n\nOnce again, Emily was encouraging, telling me, \"You did a great job, Baby!\"\n\nWhen I could finally speak again, I looked back at her and showed my gratitude. \"I can't believe you were able to make me cum so hard, twice in a row! I usually can't go more than once, but I guess you're just that special.\"\n\nPerhaps I should have just kept my mouth shut, because I saw a twinkle in her eyes as soon as she received the compliment. \"Is that so?\" she asked as she grabbed me by the hips and pulled me back to my hands and knees. \"Well, two orgasms sound great, but I think you deserve a little more than that.\"\n\nI looked at her frantically, showing the fear in my widened eyes. \"I don't know if I can handle any more!\"\n\n\"I bet you can,\" she quickly refuted, shutting me down from ever arguing with her again. As she held my hips tightly, I realized there was no escaping the endless pleasure she was about to give me.\n\nWith the hottest little giggle, she looked down at me like her vulnerable prey and said, \"Buckle up, Buttercup. You're in for a long night.\"\n\n*******************\n\nEmily\n\nIt had been a week and a half since I last hung out with McKayla, and I still couldn't get over what a crazy night we had. I never thought I would get intimate with another woman, but the things I did with her were downright kinky!\n\nAs if spanking and fingering her butt weren't enough, I never imagined a world where I would do her with a strap-on! But even though I never thought I would be into those things... I loved it for some reason...\n\nFor me, it wasn't about the kinky stuff. It wasn't even about getting intimate with a super sexy woman like McKayla. For some reason, I just felt... so good when I was with her.\n\nThe way she made me feel good didn't have to do with pleasure. She did make me feel good in that sense too; she's so good at eating me out! However, when I was with her... I just felt so good about myself... like everything about me, even my flaws, were... accepted.\n\nI've always been insecure, especially when I compare myself to girls like her, but I just feel so sexy when we're together. And even if this relationship is meaningless to her, and this is just some type of fetish that got her off for the moment, I feel confident around her for some reason, like I never had anything to worry about in the first place.\n\nI loved the way I felt when I was with her, but since I hadn't seen her in a few days, I started to feel insecure again. After that crazy night we shared, I began to worry that I had overstepped my boundaries. Yes, she's the one that suggested I do all those things to her, but after a while, I just couldn't stop myself, and I may have pushed her too far.\n\nShe's so hot, the way she allows me to be in charge, and let me think that I have her at my mercy so I can do whatever I want to her. Unfortunately, my insecurities started to tell me that I abused the power she gave me, doing her for too long when she probably wanted to stop.\n\nWhen we were done that night, I left McKayla completely exhausted, unable to stay awake. She looked so peaceful... and beautiful... so I snuck out, allowing her to get the rest she truly deserved.\n\nI fought the urge, every day, to message her. After letting things get out of hand during that crazy night, I felt a little too awkward to message her. Secretly, I just decided to let her message me first, hoping that would make me feel better.\n\nI'm sure everything is fine, I thought to myself at the beginning. I mean, she wanted me to do all that stuff, right?\n\nUnfortunately, the more I thought about it, the more I realized how many things I added that she never asked for.\n\nAs the days went by, I accepted that I had indeed done something wrong. If I hadn't overstepped what she asked, she would have talked to me by now, I decided.\n\nEven though we were never a potential couple, I had ruined the fun relationship I had with her. And though she probably never saw me as anything more than just a little bit of fun, knowing I had messed up the chance of having any type of relationship with her brought me down lower than I ever was in the first place.\n\nThough I was used to being discarded because I wasn't as much fun as people thought I would be, this time was different. Unlike when Brian left me for her, and when Tom seemed to lose all interest in me, this one hurt even more because... I was really happy... It was more than just liking her; I liked myself when I was with her.\n\n******\n\nAs fate would have it, I saw her at the bar again a few nights later. Though I had already accepted the fact I ran her off, it was nice just seeing her, looking happy with her friends again.\n\n\"Emily,\" one of my girlfriends said, grabbing my attention for the moment. \"Is everything okay?\"\n\nAfter shaking my head just to snap myself out of the daze, I refocused on my blonde friend and assured, \"Yeah, I'm fine.\"\n\n\"Have you noticed that Tom has been hanging out with McKayla a lot lately?\" she asked, nudging my shoulder. \"You two used to hang out a lot. Is everything okay between you guys?\"\n\nNot even realizing she was talking about Tom, I simply answered, \"I don't know what's going on between us.\"\n\n\"You and Tom used to hang out all the time. I always thought you guys were so cute together.\"\n\nMy eyes popped wide open as I refocused on my friend. \"Oh, Tom! Yeah, we used to hang out a lot.\"\n\nThe blonde looked at me, confused. \"Yeah, Tom... Who did you think I was talking about?\"\n\n\"Sorry... I've just been a little spaced out lately. I'm not sure what's going on.\"\n\nShe chuckled before passing her untouched drink to me. \"Emily, you go to the bar with us so often, but you almost never drink. Why don't you just let loose and have a few tonight?\"\n\nEven though I didn't really want to, I appreciated my friend's effort so much that I couldn't say no. Being the lightweight I was, literally and figuratively, I immediately felt buzzed after the one drink she gave me.\n\nWanting to pay my friend back, I told her I would go to the bar and grab us both another drink. Unfortunately, the one drink in my system caused me to stumble as I tried to leave the table. Unaware of my surroundings, I recklessly stumbled right into Tom, who was carrying a new drink of his own.\n\nAs my eyes met his, and I realized the damage I had done, knocking his brand new drink into his nice shirt, I became frantic with embarrassment. \"Oh my gosh!\" I exclaimed, quickly grabbing a napkin like it would actually do anything for his ruined shirt. \"I'm so sorry! I didn't see you there!\"\n\n\"Oh, fuck!\" he yelled, noticeably frustrated by the mess I made. \"I won't be able to get this fucking stain out!\"\n\n\"I'm so so so sorry!\" I pleaded, looking down like a child who was in trouble. \"I can get you a new shirt... and another drink...\"\n\nTaking a step back, Tom rolled his eyes and responded, \"Just stop trying to fix it. You've done enough.\"\n\nMy blonde friend, still sitting right there, was nice enough to defend me. \"Oh, calm down, Tom. It's just a cheap shirt. Don't act like you have an expensive taste all of a sudden. Besides, don't you have a thing for Emily? You can forgive her.\"\n\nTom let out a little chuckle before responding, \"I used to, but not anymore.\"\n\nThough I had already suspected he was over me, since he pretty much stopped talking to me, hearing him actually say it brought my heart to a halt. Even more so than his words, the abruptness of his demeanor was jarring.\n\nNormally, I would have just accepted it, and dealt with it poorly on my own. However, I suddenly had the courage to at least ask why he answered the way he did. \"Umm... Tom?\" I started, attempting to make eye contact with him without losing my composure. \"I already figured you didn't like me anymore, but can you tell me why you changed your mind so quickly?\"\n\n\"Are we really doing this here?\" he asked, rolling his eyes after scanning how many people were watching us. \"Well, if you must know, you're cute and all but you're just too boring for me.\"",
        "\"Boring?\" I responded with a trembling voice. I always knew I was, but to be called out by someone I had actually liked at one point was hurtful.\n\n\"Yeah, you're a sweet girl and all, but you're just not exciting to be around. When I realized how boring you were, I quickly moved on to pursue girls who matched my style. We were never really together, so it's not like I did anything wrong.\"\n\nAs soon as he mentioned girls who matched his style, I knew he was talking about McKayla. She was everything I was not. She was a type of girl any guy would like, and they would never describe her as boring.\n\n\"Okay...\" I finally responded, conceding that I just wasn't interesting enough for him. But as I picked my head up, I noticed a familiar face standing next to him, and she didn't look happy.\n\nMy mind went into a frenzy, as all my attention became focused on McKayla. We hadn't spoken in weeks, so I knew our little relationship was over. Much like Tom, I assumed she had found me too boring and decided she was done with me now that she had what little fun she could. But with the angry look on her face, I could only assume I had interfered with her potential new relationship with Tom.\n\n\"How dare you?\" she said, stopping the room with a stern voice. It was the first time I had heard her sound so upset, and I could only imagine how much she was about to embarrass me, now that I had overstepped my boundaries once again.\n\nAs everyone looked on, she once again continued, \"How dare you?\" I put my head down in shame, just waiting for her to let me have it, when she asked, \"How dare you give me the best night of my entire life... and not even call me.\"\n\nMy eyes went big and my heart stopped. I immediately locked eyes with her as the entire crowd went silent. \"Wha... What?\" I asked with my trembling voice.\n\nThe sexy brunette shook her head and rolled her eyes. \"I know it may have just been some one-night-stand type of deal in your eyes, but you gave me the best fucking night of my entire life! I mean, no guy has ever left me satisfied like that. You expect me to just live down an amazing night like that and not to talk to you again? That's unfair!\"\n\nThe entire room was shocked to discover a boring girl like me could share an intimate night with her. I stared at her, confused, not knowing how to respond. \"McKayla... What are you...\"\n\n\"I should have known!\" she said, cutting me off. \"I should have known you were too good to be true. You could have at least said goodbye before leaving me exhausted from all that mind blowing pleasure.\"\n\nEven though so many people were watching, and I didn't want them to know about my sexual history, there was only one person's opinion I really cared about. I tried to argue my case, telling McKayla, \"I didn't want to wake you...\"\n\nShe rolled her eyes once again before letting out a loud sigh. \"Thank you for all the orgasms. I guess that's all I am to you.\" The beautiful brunette then walked off, making her way to the restroom while leaving me surrounded by all the intrigued attendees.\n\nRealizing that there may be more to me than he originally thought, Tom put his arm around me and asked. \"So, what happened between you two? Maybe I can grab you a drink and you can tell me about it?\"\n\nThough I used to be interested in him, I no longer cared about what he thought. All I cared about in that moment was rushing to McKayla and finding out what caused her dramatic tirade.\n\nAs I frantically left the crowd, who suddenly found me way more interesting than they ever expected, I made my way to the restroom to chase after the beautiful brunette. Much to my surprise, after I pushed through the door, I found her standing there, no longer carrying an angry expression.\n\n\"McKayla!\" I gasped.\n\n\"I figured you would follow me in here,\" she responded with a cute little smile.\n\n\"McKayla... You're not mad at me?\"\n\nShe playfully rolled her eyes this time before saying, \"Of course, I'm not mad at you.\"\n\nStill confused and lost in my own thoughts, I looked at her and asked, \"Then... why did you do all of that?\"\n\nWith a serious tone, she walked to me slowly and explained, \"I just got really upset when he called you boring... I'm sorry for announcing your personal life in front of everyone, but I couldn't just sit there and not let them know how fun and exciting you really are.\"\n\nI was left there stunned, staring at her as she opened up to me. McKayla normally talked with a playful voice, like she was always playing a character, but when she was serious like this, she sounded like a different person.\n\nIt reminded me of the chat we had after the football game. She was so nice to me and kept assuring I did a good job. It made me feel so good inside; I wanted to spend more time with her.\n\nThe beautiful woman I once considered my rival let out another deep sigh before giving me a sincere look. \"Now that I think about it, I probably made things worse by saying that in front of everyone. I'm really sorry for telling everyone your business, but it really was greatest night of my life. I understand if you're mad at me, but if they can't appreciate how much fun you are, then they don't deserve someone as special as you.\"\n\nAs McKayla continued to look at me after pouring out her heart, something in by brain finally snapped. Without thinking it through, the adrenaline took over my body, forcing me to grab her and take her lips with mine. I could feel her shock through the kiss, but I stayed in charge, holding her sexy little body tightly as I pressed her against the wall.\n\nShe let out a deep moan before surrendering herself to the moment and kissing me back. Though we had only kissed a few times in the past, I felt a title wave of chemistry between us as our bodies and our tongues intertwined.\n\nIn that moment, my heart allowed me to be the woman she yearned for me to be. The animal inside took over my instincts, causing me to dominate her tight body. I used one hand to grab both of her wrists and hold them over her head. With my other hand, I ripped her little shorts and panties to the floor, leaving her exposed for me to take advantage of.\n\nAs I began rubbing her noticeably wet pussy, she looked at me frantically. \"Emily! We're in public!\"\n\n\"Don't worry,\" I whispered into her ear, confidently. \"It won't take me long to fuck you.\"\n\nMy confidence caused her to moan desperately as I took her lips with mine again. She kissed me harder than anyone had ever kissed me while my fingers took over her clit, rubbing in a fast, circular motion.\n\nThere was no escaping me. I had her trapped against the wall and she couldn't get her wrists out of my grasp. Even though she wasn't fighting it, there was nothing she could do but stay there and take the pleasure I was giving her.\n\nSeeing me like this must have been a huge turn on for the sexy brunette, because I felt her body shivering much quicker than our previous sessions. Not wanting to let up, I continued kissing her through her squirming and moaning. Before I knew it, she let out a surprisingly large orgasm as she struggled to stay quiet. Despite her moaning, I didn't let up, as I continued rubbing her out while she gushed with juices.\n\nAs much as McKayla loved it, I could sense she was still frantic, being in a public location. I let her enjoy the orgasm for a while, rubbing and kissing her until she was out of breath, but as soon as she was finished, I pulled her shorts and panties back up for her and left her with a kiss.\n\n\"Emily!\" she exclaimed, panting heavily and looking around like she didn't know what just happened to her. \"What has gotten into you? That was so fucking hot!\"\n\nI glared at her and warned, \"I'm not done with you, Baby...\" before walking to the door, leaving her in a puddle of her own juices. Just before exiting the restroom, I looked back and stared into her desperate eyes, before demanding, \"My place in thirty minutes... and don't forget the strap-on.\"\n\nPushing through the door, I made a beeline towards the exit. As I walked through the bar, full of determination, I noticed all eyes were on me. Because of everything that I just transpired, I was suddenly the talk of the town.\n\nUnfortunately for everyone else, I no longer cared about their opinions in that moment. There was only one person's opinion I cared about; the woman I left in the restroom with her jaw wide-open, wearing soaking wet panties.\n\n*******\n\nAs I sat around waiting for McKayla to show up, I began replaying the incidents from the bar in my head. Who was that? I wondered as I thought about the way I acted. Never had I acted so confidently, and never had I been so spontaneous.\n\nThe closer I was to seeing McKayla, the further I was from the last time I saw her. As time went by, I became worried I wouldn't be able to live up to the expectations I set when I was so confident in the restroom.\n\nWhat if I disappoint her? I sure talked a big game, but now I have to back it up. Even though I did a good job in the restroom, that was purely adrenaline! I still need her to tell me what to do!\n\nI paced back and forth in my living room, counting down the seconds until I would see her again. My nerves were back, bouncing around with heavy anticipation.\n\nMuch to my surprise, there was a knock at the door, making me wonder if she decided to show up earlier than expected. It was indeed my beautiful brunette rival, standing there and looking just as hot as she did when I left her in the restroom.\n\nI invited her in and took her tote bag, which I assumed she was using to hide our special toy. Despite the brave face she always carried, and the confident aura that surrounded her, I could sense she was a little nervous after what I displayed the last two times we were together. After all the physical history we shared, I could somehow hear her heart calling out for me.\n\nAdrenaline built within me again, but I didn't let it take control of me; it only enhanced what I already wanted to do to her. Now that I was finally with McKayla again, the confidence I had lost was rushing back.\n\nI wrapped my arms around her and gave her a soft kiss. Sensing her heart racing, I pressed myself against her and whispered, \"Don't worry, I'm going to take care of you.\"\n\nI took her to my bedroom where we stood at the foot of my bed, taking turns undressing each other, one article at a time. As we unhooked each other's bras, I was surprised to find her just as excited to see my breasts as I was to see hers.\n\nAs much as I loved her boobs, the only time I really got to enjoy them was when I fondled them while fingering her butt. With my confidence at an all-time high, and her chest exposed right in front of me, I decided it was time to finally get a taste of those nipples that were always so hard for me.\n\nI graced them one at a time with my warm and salivating tongue, causing her eyes to roll back while moaning towards the sky. She held on to me tightly, putting her arms around my shoulders and smothering me against her large breasts.\n\nMuch to my pleasure, when I pushed her arms away, she stuck her chest out for me, allowing me to motorboat her breasts. I sounded like a pig, chowing down on a feast as both her tits smacked me in the face. Although she was the one having her breasts licked and sucked, I was the one moaning louder from the naughty exchange.\n\nGrowing more daring by the moment, I decided I wasn't finished tasting McKayla for the night. I lifted the brunette, causing her to gasp at my strength and determination, before gently placing her on my bed and positioning myself between her thighs. Just like she had done to me so many times, I wanted to send her into a frenzy by using my tongue to play with her clitoris.\n\nI don't know what it was about the beautiful brunette, but she had a sweet aroma that gave my little nostrils a pleasant sensation. It wasn't just a smell of her vanilla perfume; it was her natural scent I couldn't get enough of, as I constantly tasted her clit.\n\nIt was the first time in my life I had ever performed oral sex for another woman. I didn't know what I was doing, but my body was in autopilot, performing the things I figured she would like, and more importantly, the things she deserved.\n\nI took her little clit into my mouth, suckling on it lightly before giving it gentle kisses. Seeing the way she flinched from my light teasing, I turned up the pressure by using my tongue to continuously stroke her clit.\n\nMcKayla was moaning and squirming so hard while I ate her out. Remembering the way I controlled her at the bar, I grabbed each of her wrists and held them down by her sides while I continued taming her with my tongue.\n\nAs much as I wanted to finish her with my mouth, I could see in her eyes how badly she wanted me to strap-on fuck her again. I pulled myself away, leaving her panting as grabbed her tote bag. I then pulled our little toy out and strapped myself up, never taking my eyes off my beautiful prey.\n\nHeavy with anticipation, McKayla flipped over to her hands and knees and looked back, waiting for me to penetrate her from behind. I grabbed her by her little hips, but instead of inserting the toy, I forced her onto her back once again.\n\nWith a loud gasp, she looked up at me and asked, \"What are you doing to me?\"\n\nGently crawling over her, I positioned myself between her legs and whispered, \"You're not the bad girl you used to be.\" Then, as I slowly entered her, I whispered seductively, \"After what you did for me today, I want to look into your beautiful eyes while we have sex.\"\n\nShe let out a deep moan while fighting the urge to let her eyes roll back. She faced me as long as she could while I thrusted myself in and out of her. Eventually, neither of us could handle just staring at each other any longer. We simultaneously met each other's tongues with our own, making out while I thrusted her harder.\n\nAlthough I was the insecure one, she had insecurities too. For some reason, she viewed herself as some kind of slut, undeserving of actual love and care.\n\nIn that moment, our spirits clashed and our souls intertwined. I made it clear that it was more than just sex, as I kissed and pushed deep inside her. I was cooing her insecurities by showing her the love she deserved for so long.\n\nDespite my insecurities in the bedroom, I could feel through her actions I was hitting every note just right. She kissed me back so passionately I could feel her yearning for my lips. Her hands rummaged uncontrollably up and down my body, grabbing the back of my head and squeezing my ass to help me go even deeper. But no matter how hard she moaned and squirmed underneath me, her lips never left mine, and her tongue never left my mouth.\n\nAs I let my passion rain down on her vulnerable body, I suddenly felt her going stiff. I knew an orgasm was nearing, so I repositioned my hips so I could drive even harder inside her. She wrapped her arms and legs around me, squeezing me tightly as she held on for dear life. I never took my lips away from her as I pounded her until she succumbed to the overflowing pleasure.\n\nAll at once, the passion came to an explosive ending. Her eyes rolled back again as she let out a warning in her panting voice. \"I'm cumming!\"\n\nI held her body tightly against my own, escorting her to the finish line. Not wanting to push her as hard as the last time, I gradually slowed my rhythm, allowing her to begin her recovery process.\n\nEven though it wasn't the wild, non-stop kinky action that we had the previous session, this orgasm seemed to be just as powerful. In that moment, I knew it wasn't just about the physical attention; it was her successfully receiving the emotional outcry I was pouring down on her.\n\nAfter unstrapping myself, I noticed her staring at me with a desperate look in her eyes. Even though she was just being dramatic at the bar, I knew there was some truth to her dissatisfaction when I left her the other night.\n\n\"Do you mind if I cuddle with you a little?\" I asked as I joined her in bed, spooning her from behind.\n\nShe let out a little moan as she looked back and whispered, \"Thank you!\"\n\nIt reminded me of the cringeworthy way I thanked her after our first night together. Remembering what it was like to be in the other set of shoes, I felt joy in my heart knowing I was able to provide her with what she provided me, even if it was for just one night."
    ],
    "authorname": "AimEnigmaClick",
    "tags": [
        "blonde",
        "brunette",
        "strap-on",
        "denial",
        "edging",
        "oral sex",
        "spanking",
        "kissing"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/my-rival-my-rival-ch-02"
}