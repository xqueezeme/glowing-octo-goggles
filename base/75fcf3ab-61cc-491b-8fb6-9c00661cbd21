{
    "title": "Cheryl's Big Tits Ch. 01",
    "pages": [
        "My name is Brett. I was a shy kid growing up, basically from birth right through high school. I was terrified of approaching girls. But I started to gain some confidence in junior and senior year when I went through a growth spurt and started working out, and all of a sudden I wasn't a thin, scrawny kid anymore. I started getting noticed by girls and told that I was cute.\n\nI am white, 5'11\", brown hair and blue eyes, with a fairly athletic build and an outgoing personality. I started making more friends, and those friends tended to be girls. I was the \"nice guy\". And as the saying goes, nice guys finish last. Girls loved being friends with me but I was always afraid to make a move due to lack of confidence and experience. That all started to change after high school when I had my first real relationship with a red headed girl named Molly. She had a pretty smile and nice tits with awesome nipples. She also helped my confidence by telling me I was well endowed. My cock is 9 inches long, and i was unaware that this was above average. But Molly held it in her hands and literally said \"Oh my God. You have one...big...dick.\" We had been dating over a year when I decided to go away to college. We had our problems but decided to try and make a long distance relationship work. Little did I know how hard that was going to be once I got on campus.\n\nI came from a small town so when I arrived at college and saw all the beautiful girls it was like walking out of the desert and seeing an oasis. Girls of all shapes and sizes, races and types. And they were gorgeous. I love a pretty face and a girl next door type of cuteness. I'm not into the skinny, rail thin, supermodel type. I like girls with some curves and an hourglass figure. A girl with some nice hips and ass always got my attention.\n\nHowever, my real weakness has always been for a nice set of tits. I'm a definite boob guy. They didn't necessarily need to be big, but that definitely was a bonus. And by the time I started watching porn and some of the big tit models, including classic porn with Christy Canyon getting tittyfucked, I fantasized constantly about being able to fuck a girl's tits until I came all over her. I was able to fuck Molly's tits, but just barely. She had to shrug her shoulders in to get her C cup breasts to wrap around my cock, but she made it work and was the first girl to make me cum that way.\n\nI made friends quickly in college. Some girls were interested in being more than just friends but they all knew I had a girlfriend back home. But during freshman orientation I met Cheryl, and instantly I had a connection with her. We got along great, and I loved her personality and sense of humor. We saw most things the same and came from similar family backgrounds so we could relate well to one another. Cheryl was white but she's Italian so her skin had a slight olive complexion to it. She had a beautiful smile and pretty green eyes and long sandy blonde hair down to the small of her back. She was shorter than most of the other girls at just over 5 feet tall, which gave her a girlish quality and you might not guess that she was 18.\n\nAlthough Cheryl was not tall, she was very voluptuous but not heavy by any means. She had a nicely toned body, with muscular legs from cheerleading in high school. She had this tiny little waist that flared out into really nice hips and an ass that looked great in a pair of tight jeans. The kind of hips that made you just want to grab them with both hands and bang her really hard. She told me that she always got plenty of attention from guys because of her ass. But what really got your attention were her great tits. They were 34D or DD depending on the bra, and those massive jugs on that little frame made them seem even more enormous. Although I had a girlfriend and Cheryl and I were just friends, I found her breasts to be very distracting and often masturbated thinking about her and what those tits must look like.\n\nCheryl always gave me plenty of material to fantasize about, too, because she often wore tight tops with plunging necklines that showed plenty of cleavage, which also made it very difficult for me to maintain eye contact with her without staring down at her ample chest. And since I am almost a foot taller than her I would always have a perfect view down her shirts, which would often result in me walking around semi-hard the whole time we were together. I suspected that she caught me looking more than once but she hadn't confronted me on it. But it wasn't just me. Whenever we would go I would catch guys checking her out as we passed by.\n\nCheryl's breasts were not only big but I could tell they were firm and perky for their size because many times I would go to her dorm room at night to hang out and she'd be wearing a T shirt with no bra and her boobs didn't seem to sag at all. That was always a turn on too, especially if it was a thin shirt and she walked in front of the desk light. Oh how I wanted to get my mouth and my cock on those amazing tits. Every time I would leave her room I would get a hug. Since I was so much taller her head only came up to my chest and I would usually squeeze her extra tight because I liked the feel of her tits against my stomach and I could feel that they were super firm and that just make me go home and jack off thinking about fucking her and blowing my load all over her.\n\nI sometimes masturbated two or three times a night thinking about that amazing rack. So yeah, by the end of the first semester we were spending at least part of almost every day together and I had a major crush on her. It also didn't help that I hadn't been home to see my girlfriend in months, so I was constantly walking around with a semi-hard on dying for sexual release.\n\nAll that being said, she was single and I had a girlfriend, so we were just friends..\n\nUntil one fateful night.\n\nWe had one class together that semester and we had an exam coming up. We planned to meet after classes, pick up dinner from the campus center and take it back to her room to eat and study. Her roommate Kim, who was also smoking hot, was gone for a few days so we would have the room to ourselves. Cheryl had recently gotten into theatre, and opening night was coming soon and they were rehearsing in full costume. Between being a full-time student and working two jobs to put herself through college and doing theatre, Cheryl was really stressing out. I offered to pick us up dinner so she could just head straight to the dorm. I also told her that I already knew the material for the exam pretty well and I would help her study so she'd be ready for the exam. She was so grateful and hugged me kissed me on the cheek and ran off to class. I remember watching her ass as she walked away in those tight jeans. So hot. I hated to see her go, but loved to watch her leave!\n\nI got our dinners and managed to get into her dorm and waited outside her locked dorm room. After about 15 minutes the door down the hallway opened and Cheryl came through the door. As always her good looks stopped me in my tracks and I just watched her walk down the hallway towards me in her low cut top and tight jeans that hugged her hips. Knowing she was late, she was walking fast, and her boobs were bouncing with each step underneath her shirt and I was helpless to keep myself from staring. Watching them bounce like that just made me think about what they would look like if I had her on her back fucking her hard and I knew I made a mental note to remember that image for a future jerk off session. My eyes just zeroed in on her tits as she approached me.\n\n\"Hi Brett. Sorry I'm late.\" Her cute, bubbly voice snapped me out of my boob-induced trance and I looked up and made eye contact.\n\n\"Hi. That's OK no problem. I haven't been waiting long.\" I was sweating, partly because she makes me so horny and partially because I was hoping she hadn't caught me staring at her chest. I lowered the \"to go\" boxes I was holding to waist level, hoping that she wouldn't see the erection that I was sporting.\n\nShe unlocked the door and we went inside. She put her bags down and took her shoes off while I got dinner out. She went to her drawers and pulled out a t shirt and shorts and turned to me.\n\n\"Do you mind if I change real quick before we eat? It's been a long day and I just want to get comfortable.\"\n\n\"Sure, I don't mind. Go ahead I'll....I'll turn around.\"\n\n\"OK thanks.\"\n\nThis was a new thing she had been doing with me recently. Changing while I was in the room. A new form of sexual torture but like a moth to a flame I couldn't resist it. I often wondered if she knew what effect it had on me? The first couple of times I didn't look but recently I had been peeking. And this time was no exception.\n\nI turned around pretended to look at my textbook while I listened to her rustling around in her closet behind me. After 10 or 15 seconds I quietly looked over my shoulder at her. She had her back to me so I couldn't see anything, but I watched her pull her tight tank top off revealing her toned back and a white bra that she wore underneath. It had three clasps in the back, which I'm sure was necessary if that bra was to have any chance of supporting those huge tits. I watched intently as she unhooked each clasp, one, two, and three, then grabbed the front of her bra and shrugged her shoulders forward as the bra straps fell from her shoulders. God I wish I could see those tits but her back was to me, and all I could see was the rounded sides of her breasts protruding out from the side of her frame.\n\nShe put on a white loose fitting shirt over her head that hung below her waist. Then she pulled her jeans down, shifting her weight back and forth a little to get her jeans past those nice hips, then leaning forward as she pulled them off. Her long t-shirt unfortunately covered much of her ass as she pulled her jeans down but I did get to see the bottom of her ass as she leaned over to step out of them. She was wearing a matching white thong and I could just barely see the fabric protruding from her lower ass cheeks. She put on the pair of orange shorts she had picked out and as she pulled them up over her ample ass I saw the back of her shorts get stuck on her lower ass cheeks and she had to pull the waistband out a little to navigate them over her ass. This partial strip tease had made my cock as hard as a rock and I wanted to keep staring but at this point I turned back towards the wall, knowing that the show was over and not wanting to get caught.\n\nAfter a few more seconds she said \"OK you can look.\"\n\nI turned around, holding my textbook at waist level so as to conceal my raging boner. There she was with that cute smile, her blonde hair hanging down, and I was captivated as usual. Wearing that t-shirt and orange shorts, she reminded me of a Hooters girl as she walked towards me and sat on her bed and chatted for a bit. Then she got up and walked over to her bag to get her notebook I watched her muscular legs toned from cheerleading and her cute little feet move and her bubble ass jiggle with each step as she made small talk with me. I loved her bubbly personality. She was the perfect mixture of cute and sexy.\n\nWe ate dinner and started studying. Cheryl was really smart but I quickly realized that she did not know the material for the test tomorrow very well at all. I walked her though everything we needed to know. She had lots of questions and I helped her understand everything and even quizzed her on some things, making jokes whenever I could so she wouldn't feel so stressed. I got her laughing and the more relaxed she got, the better she learned the material. I had also picked up a package of M&M's (her favorite) and I would feed her one every time she got a question right. I made a point to give her the green ones, since those were her favorite for some reason.\n\nAfter about two hours, she was confident that she was ready for the exam and was feeling more relaxed. She suggested that we lay down and watch a movie, a plan I gladly accepted. Cuddling on her bed watching movies was another thing we had been doing recently. Nothing sexual or anything, but I loved just lying next to her. I would get to smell her hair and her body lotion.\n\nSometimes I would brush up against her a little as we lay there and any contact with her skin would make my cock pulse. Sometimes I would lay on my back and she would rest her head on my shoulder. Other times we would kind of spoon, which was really nice. But in either of these positions I always had to be careful because I usually had a hard on when I was around her. Ask any guy with a 9 inch cock and they will tell you that when you get hard in public, it's really tough to hide it. It can really be embarrassing at times. And I didn't want to freak her out when we were laying together. So I tried to strategically place a pillow or the blankets in such a way to try and hide it.\n\nThis time she was lying on her side with her head on my shoulder. As we watched the movie she was making small talk and telling me about her day. I was engaged in the conversation but my eyes kept drifting down to her breasts since the shirt she was wearing was really low cut and I was getting an eyeful. She was kind of lying on her side so it squeezed her breasts together, enhancing the deep valley of cleavage even more than was normally visible. I could feel my cock getting hard again and the pants I was wearing did not do much to hide my erection. The mini \"strip tease\" she had done before coupled with the fact that I hadn't had the chance to jerk off in over a day was making it very difficult to keep the monster in my pants under control.\n\nI tried resting my right hand over my crotch to hide it. But the tent I was pitching was pretty obvious and I could feel my pulse and breathing getting heavier which she must have noticed because her head was on my chest. From my vantage point, I couldn't see her face. I didn't know if she was watching the movie over our feet or looking at my bulging erection, or both. Damn her tits were making my mouth water and the tent in my pants even higher.\n\nAt one point she got up to microwave some popcorn and changed the subject to talking about theatre rehearsal. The part she was playing in the play was that of a child. It was not surprising that she got this role because height-wise she was smaller than most other girls on campus.\n\n\"I don't mind playing the role. It's kind of fun and I have some really funny lines. I just have my hair back in a pony tail and I bounce around stage acting like a kid. I can do that. Shit, I do that in my spare time anyway,\" she giggled.\n\n\"The only part I don't like is that to make me look like a kid, they make me tape up my boobs so the audience can't see that I'm large chested.\"\n\nI obviously perked up at any discussion that involved her breasts, so now she had my undivided attention.\n\n\"They literally had my friend Megan take me in the back and I had to strip down to a tank top and she wrapped tape around and around my chest, and then put my costume over it. The tape was wrapped so tight that I could barely breathe, and my tits were so uncomfortable,\" she said as she casually rubbed the front of her boobs over her shirt, slightly lifting them as she did and then allowing them to fall back down.\n\n\"Ugh. They feel so much better now that I got that wrap off of me. But they are still sore.\"\n\nI continued watching mesmerized as she rubbed her big rack over her shirt. I could see her nipples getting erect underneath. She must have noticed me staring although she didn't say anything. Looking at the impression of her hard nipples through her shirt had my jaw hitting the floor and literally made me wipe the saliva coming from my mouth. I knew she probably caught me staring that time but I just couldn't bring myself to look away from her chest. I was so embarrassed.\n\nShe paused then continued. \"I'm just frustrated. And it doesn't help that the director keeps hitting on me. He's known to be sleeping with several of the cast members and he keeps asking to see me in his office and he says inappropriate things to me and wants me to stay after rehearsal is over. I don't like it.\" She sat down next to me on the bed and rested her head on my shoulder. She had done this many times before and I liked it when she got that close to me.\n\n\"I'm sorry that I'm complaining and venting. You probably don't want to listen to me going on about this. You're just so easy to talk to.\"\n\n\"That's OK,\" I said. \"I'm always here for you if you need to talk. That director guy sounds like such an ass. And I'm sorry about your....your boobs....being sore. That can't feel very good.\" Then, not knowing what else to say, I blurted out. \"I wish I could help you with that.\"\n\nThis made her sit up and laugh and before long we were both laughing. I think it was that nervous sexual energy in a room where two people are attracted to each other but nothing physical is happening. She kept talking as I watched. Every now and then she would lean forward and I would get a glimpse of her massive cleavage down her shirt. I was fixated on her big tits as they moved and swayed underneath the thin fabric of her shirt, the only physical barrier between me and those magnificent breasts. All the while she was just talking away, apparently not aware of the effect she was having on me. She leaned forward and extended the bowl of popcorn to me. Distracted and without thinking I extended my left hand out and grabbed a handful of popcorn. As I put the popcorn in my mouth she suddenly stopped speaking and the room was silent other than the movie playing in the background.\n\n\"Wow! You must really like this popcorn!\" she said.\n\n\"Huh?\" I looked up at her and noticed she was no longer making eye contact with me but instead was staring at my crotch.\n\nTo my horror I realized that in reaching out for the popcorn I had unintentionally moved the hand that was covering up my erection and now the bulging tent in my pants was in full view. I panicked and I dropped the popcorn in my hand onto the floor and move my hand back over in front of my pants, trying to conceal my erection.\n\n\"Oh my God you have a huge boner.\" Cheryl said and started laughing at me.\n\n\"No I don't... I...um...sorry,\" I stammered, not knowing what to say as I froze like a deer in headlights. What would she do? She and I were just friends and she knew I had a girlfriend back home. Would she kick me out of her room? Would I not be able to spend time with her anymore?\n\nThe tension finally broke when I heard her start giggling.\n\n\"It's OK Brett. Guys get erections. It's no big deal.\"\n\n\"They do? Uhhh I mean...yes, we do.\". I stammered again. At this she smiled at me and the obvious predicament that I was in.\n\nWith a cute smirk on her face she became a little more serious. \"It's been along time since you've been home, isn't it? You're obviously a little backed up, aren't you?\"\n\nThat was the understatement of the year, I thought to myself. My hormones are raging and I could not wait to get this load out of me as my balls were aching. I knew that just from this interaction alone I would soon be back in my room vigorously jerking off thinking about her.\n\nShe look down at her shirt that had slightly draped open showing some cleavage and adjusted it to partially cover-up. \"Sorry I guess it's partially my fault. Being away from your girlfriend you must be feeling sexually deprived and I didn't help matters much by changing in front of you I guess.\"\n\n\"No it's OK you did not do anything wrong. This is your room and you can do whatever you want.\"\n\n\"Yes but if that hard-on gets any bigger you're going to tear open the front of those pants and you might poke somebody's eye out with that thing on your way to your room tonight\".\n\nAs I started to realize that she was not angry my feelings of embarrassment began to change back to thoughts of lust. I was still a little embarrassed but I just thought it was really hot that she was talking about my cock while staring at its outline.",
        "I wasn't sure what I was supposed to do. My hands subconsciously moved down to try to conceal my erection.\n\n\"You don't need to try to hide it now silly. I've already seen it.\"\n\n\"You're not mad? You don't think this is weird?\"\n\n\"No it's kind of flattering actually,\" she said, staring intently at the bulge in my pants and the big tent that I was pitching. I just laid there and let her stare at it. Not moving. I saw her face get a little flush and, after what seemed like an eternity, she licked her lips and then make eye contact with me again.\n\nShe finally spoke. \"You've been so nice to me. You brought me dinner. You helped me study for the exam. You're always complimenting me and whenever I need something you're always there.\"\n\n\"I'm so glad we met. You do nice things for me too.\"\n\nShe motioned toward my cock. \"Yeah I can see what I do for you\" and she flashed me that cute smile. \"How can you even walk with that thing like that?\"\n\n\"Trust me it's not easy sometimes.\"\n\n\"Well I can't let you leave like that. If you walk out of here now someone's going to see you and call campus security or something.\"\n\nWhat? Did I hear her correctly? Was she implying that she was going to help me out? My pulse began to race and my face got even more flushed than it already was. I was lying on her bed with a huge hard on, looking at her from across the room not sure what to do, and still wondering if I should cover up.\n\nShe put the bowl of popcorn down and walked towards me the side of the bed. I lay there unsure of what to do.\n\n\"I think you better sit up.\" She said with a smile.\n\nI sat up immediately and swung my legs over the side of the bed and put my feet on the floor so that I was facing her, my angry cock now pointing up and toward her like a compass, as if it were saying \"that's the direction I want to go!\"\n\n\"Do you want to see my boobs?\"\n\nI just looked at her dumbfounded. Of course I wanted to see her boobs!!! I had masturbated so many times thinking about them and what they must look and feel like. But I was taken aback by how matter-of-factly she said it. As if we were discussing the news or the weather. I wasn't prepared for it. I could barely form a cohesive thought, especially due to the fact that most of the blood was rushing from my brain to the throbbing organ between my legs.\n\n\"I...I...well I...you...I mean...I wasn't asking you to..\".\n\nShe seemed amused by my obvious discomfort and tilted her head and gave me that cute smile again. \"Come on Brett. I catch you staring at my tits all the time.\"\n\nOh shit, I thought. \"No, I never...\"\n\n\"Yes you have! All the time! I knew you were doing it. I just didn't say anything because I didn't want to embarrass you.\"\n\nI again stared at her like a deer in headlights, not sure if I was in trouble or not.\n\n\"It's not like it's something I'm not used to. Since I was about nine years old I've had the biggest boobs in my class. Boys stare at my chest more than they stare at my face. Even full-grown adults stare at them. I'm pretty sure my high school chemistry teacher Mr. Fredericks gave me an A just because of my tits. I'm constantly wanting to say to these guys \"hey, hello, I'm up here!!\"\n\nI just loved it when she talked about her tits.\n\n\"See, you're doing it again right now.\"\n\n\" No..., I was just... I mean. OK yes I was,\" again embarrassed. I guess it was stupid of me to think that she had never noticed. I am literally drooling over her tits all the time.\n\n\"So, do you want to see them or not?\" she asked, putting her fingers at the top button of her shirt.\n\n\"Yes\" I blurted out.\n\n\"Yes what?\"\n\n\"Yes please!\".\n\n\"Yes please what?\"\n\nI paused for a moment and then spit it out. \"Yes please I want to see your boobs.\"\n\nShe reached up with her right hand and brushed a strand of blonde hair away from her eye and behind her ear, then her hand returned to her top button.\n\n\"OK then.\" she said, taking a deep breath that made her bosom rise and fall. She had a nervous smile on her face and her cheeks were flushed red.\n\nShe slowly undid the button at the top of her shirt then move down to the second button and undo that one, then the third button. I started to shift uncomfortably from my seated position as my cock felt like it was going to bust through the front of my pants. More and more of her upper chest became visible and she continued unbuttoning her shirt. She just stared right at me the whole time as she calmly undid each button until I started to see the skin between her breasts and the inner slopes of each breast. Finally, she got to the last button and the two halves of the shirt separated, give me a clear view of a strip of her skin from her neck down her flat stomach and belly button. The two halves of her shirt still covered her large breasts, however even though she wasn't wearing a bra they protruded out pushing the fabric of the shirt a few inches in front of her.\n\nWithout saying a word, she casually put her fingers in the gap between the two halves of her shirt and slowly separated them. And she pulled back more and more of her skin became visible. The fabric of the shirt clung momentarily to front of her breasts because they were just so massive. But she continued pulling the shirt until finally the material slid past the front of her breasts and her shirt fell from her shoulders and landed on the floor behind her with a barely audible thump.\n\nI sat there awe-struck. They were the most beautiful breasts that I had ever seen. Better than any I had ever seen in person or in the many porno videos I had watched. They were big, full breasts, nicely rounded and perfectly shaped. Her nipples were hard and pointed straight at me, making my mouth water. Her areolas were large but proportional to the size of her breasts. Because she was 18 years old and athletic, her breasts pointed straight out with no sag at all despite their large size.\n\nShe quickly realized that I was not going to say anything, partly because my jaw had basically hit the floor due to the sight of those magnificent tits. She walked towards me and leaned forward with that cute smile, her long sandy blonde hair hanging down She held the sides of my head and placed her lips on mine. At first she just held her lips there, not moving, feeling our lips touching for the first time as we kissed. She then broke the kiss and pulled just an inch away and whispered \"thank you\" and pressed her lips against mine again, kissing more earnestly this time and opening her mouth to allow out tongues to commingle as we kissed.\n\nAs we kissed she again whispered \"Is this OK?\"I mouthed the word yes into her mouth. She again whispered \"do you want me to put my shirt back on?\"\n\n\"Oh my God no!\" I said. We both knew that this was wrong but our thoughts of self control were now out the window.\n\nAt this point I held the sides of her head and kissed her back, running my fingers through her long hair. I knew I had a girlfriend and she knew, too. But the kiss was something that we knew we both wanted.\n\n\"You can touch them if you want.\"\n\n\"OK\", I nodded, my heart pounding and my breathing rapid.\n\nI reached out towards her, the two objects of my many erotic fantasies just a short distance from my fingertips. For a second I hesitated, but Cheryl met my hands halfway and took them and placed them on her breasts. I could not believe that I was actually touching them as they had been the objects of so many fantasies. Molly's breasts were more than a handful but these or several levels above that. I loved how soft her skin was in contrast to the hardness of her nipples, which pointed straight at me and seem to harden as my fingertips brushed across the sensitive tips. I loved the weight of them as I cupped them in my hands and gently squeezed and massaged them, loving the warmth of them. They seemed almost hot to the touch, especially underneath her breasts as I lifted them up and pressed them together, marveling at beautiful cleavage this created. She started breathing heavy and her breasts rose and fell and her skin develop goosebumps as she allowed me to explore and play with her tits.\n\n\"Can I suck them?\"\n\n\"Yes.\"\n\nI lean forward and took her left nipple in my mouth, still amazed that I was being allowed to do this. Her nipple seemed to get harder in my mouth as I sucked on it and she moaned, letting me know that she was enjoying what I was doing.\n\n\"Does Molly have boobs like these?\" she said, almost gasping.\n\n\"No not like these,\" I said, my mouth full of nipple.\n\nI switched to the right breast and took the nipple in my mouth. Swirling my tongue around and around the areola before sucking it. Then I pressed her tits together so I could easily go back and forth between each nipple. Her tits were big enough for her nipples to touch each other and I was able to lick and suck them simultaneously. See seemed to like that a lot so I kept doing it for a while.\n\nI must have played with her breasts for 20 minutes. She allowed me to indulge in my fantasy come true, shivering and moaning occasionally but mostly remaining silent other than breathing heavy. I paid equal attention to each breast, licking and nibbling all over the entire surface of them. She played with my hair as I lost myself in her, holding the back of my head as I sucked her tits. I found that she had many sensitive areas on them besides the nipples. And she liked when I pulled on her nipples.\n\n\"Yes, pull on my nipples. Bite them,\" she moaned. I complied with her request, causing her to moan louder and I noticed her hips rocking a little.\n\nEmboldened, I slid my fingertips up the front of her thighs, which made her shiver. My hands went to the waistband of her shorts and I looped my fingers inside and started to pull them down. She suddenly stopped her moaning as if awaking from a trance and put her hands on my hands and held them, stopping me from pulling her shorts down any further.\n\n\"We can't do that. You sir have a girlfriend,\" she said with a little smirk, looking into my eyes for the first time in a while. My heart sank. Of course I knew she was right, but I so wanted to lick her pussy and maybe even get to slide my cock inside her.\n\nShe sat down on the bed and held my hand. My cock was so hot and hard and throbbing and she was still topless, so it was hard to have a deep conversation with her.\n\n\"I'm sorry. You're right. But the truth is, Molly and I haven't been getting along too well since I left for college. I think the distance is getting to us both. And honestly, I have not been able to stop thinking of you since I met you.\"\n\nShe smiled at me. \"I feel the same way. We are so good together. And when I don't get to see you I really miss you.\"\n\nShe continued \"I must admit, whenever you talk about you and Molly I get really jealous. I think we should be together.\"\n\nI put my hand on her shoulder and ran my fingers down her back, stroking her back up and down. I noticed her back arch and goosebumps on her skin as her nipples started to get hard again.\n\n\"I think I'm ready to break up with her,\" I said, looking at her. Her face had a sad expression but also behind it one of excitement, with the two conflicting emotions she was feeling at that moment. Feeling sad for what I was going through, but also happy at the prospect that we might be together.\n\nAfter a brief silence she hugged me. \"Well, if you do break up with her, I'll be here and you you'll be able to finish what you started,\" her eyes looking down at her waist where my hands had just been and then looking back up at me with that cute smile. I nodded and smiled back, disappointed but completely understanding. I wasn't going to press the issue further. I didn't want to make her feel uncomfortable.\n\nShe again looked downward, straight at the tent in the front of my pants. \"Wow it looks like you are packing something huge in there,\" she said with a little giggle.\n\nI laughed \"Well you had something to do with that.\"\n\nI leaned back on the bed, allowing her to get a good look at the bulge.\n\nShe stared for a few seconds more. \"Well, we can't have sex. But I don't see why I can't give you a little preview of what you'll get if you DO break up with her.\"\n\nI perked up at this. \"Really?\"\n\n\"Like I said, I can't let you walk home like that. You'll hurt someone.\"\n\nWhile I was still sitting on the bed she knelt down on the floor and got in front of me. She leaned forward, her face inches from the tent my cock had created, put her fingers in the waistband of both my sweat pants and boxers underneath and began to pull them down. I lifted my hips off the mattress to allow her to pull them down past my ass. As she continued pulling them my cock angled downward into one of the legs of my boxers. The more she pulled the greater the downward angle and it started to get really painful. She was soon able to see my lower abdomen and the top of my cock. She continued pulling the waistband down my thighs, exposing more of the shaft of my cock to her view but still not reaching the end, the ridge of the mushroom head very visible under the fabric.\n\n\"Geez, where does it end?!\" she said with an astonished look on her face.\n\nFinally the head passed the waistband and finally relieved of restraint my cock swung upward violently like a catapult, grazing Cheryl's chin and hitting my stomach with a audible \"thwop.\"\n\n\"Holy shit you're huge!\" she said, her eyes in a trance. She held the base of my cock as she examined every detail. \"This is the biggest dick I've ever seen. Even your balls are huge.\"\n\nMy balls were very swollen, full of cum from staring at her tits and sucking on them.\n\nShe continued holding my cock, a look of lust on her face now. My cock was hard and throbbing. And her little hand holding my cock made it look even bigger. She could not get her little fingers all the way around it. I watched her starting to stroke it. I liked the contrast in the reddish color of my pulsating, veiny cock and the smooth pale olive skin of her hand. Her hand was soft but she gripped it with just the right amount of pressure. Her right tit was swaying back and forth to the rhythm of the handjob she was giving me.\n\n\"Is this better than jerking off?\"\n\n\"Mmmmm. It feels so much better when you stroke it than when I do it,\" I said, beginning to thrust my hips up to meet her strokes.\n\nShe then lowered her face below her stroking hand and I felt her tongue on my balls. I gasped, a little surprised because this was something that Molly never did for me. She swirled her tongue around and around each of my balls, making them jump and my hips thrust. She then licked in between them from the bottom to the top where my sack meets my cock, and then slowly licked up the base of the shaft up towards the head, stopping periodically to place small kisses and nibbles on the sides of the shaft as she ascended. As she got to the top she licked circles around the flared ridge of the head of my cock, getting the head completely wet with her saliva, and flicked her tongue along the sensitive spot right underneath the head. Her tongue was driving me wild.\n\nShe paused and looked at my dick, now shiny from her saliva and still on her knees sat back on her heels. \"Hmmm. My last boyfriend was nice but he didn't have a cock like THIS!\" She kept stroking it as she licked her lips. \"I don't even know if I can fit this in my mouth.\"\n\n\"Please try,\" I begged. \"Please put it in your mouth! Please!\" I begged, a drop of precum appearing at the tip of my cock.\n\nStill kneeling, she made herself as tall as she could, which was not much given her small frame, and angled my throbbing cock towards her mouth. She licked her lips for a moment then put out her tongue and did small circles around the head of my cock with her tongue, lapping up the precum that had leaked from the tip. She then opened her lips and took the head of my cock in her mouth. I almost came right there. The warmth and wetness of her mouth felt so good.\n\n\"Oh yeah.\" I groaned, as she started slowly bobbing her head up and down on my dick. At first she just worked the head in and out of her mouth, but then as she adjusted to my length and girth she started going farther down my shaft, enveloping my cock in the warmth of her mouth. I couldn't believe it. Cheryl was actually sucking my cock! I had fantasized about this for so long and it was finally happening.\n\nI didn't want to miss a minute of this. I gathered up her long blonde hair and held it together like a ponytail so I could watch her mouth making love to my hard prick. I loved the way my dick stretched her little mouth as she took it deep in her mouth again and again. She then used her right hand to stroke the base of my shaft as her mouth continued to work the top. Damn the combination of those two motions felt so good that I felt the cum start to bubble up within my balls and I was wondering how long I was going to be able to hold out.\n\nShe then took my cock out of her mouth with an audible pop, then started licking up and down my hard shaft like a lollipop, stopping occasionally to flick her tongue around the sensitive glans underneath the head. My hips thrust up at her, pushing my cock back into her mouth. I grabbed the back of her head, pushing deeper into her hot mouth. For a moment I thought I had gone too far and she would be mad, but she kept sucking, now doing a corkscrew motion with her mouth on my cock. I had never felt anything like it. She then pulled out and licked the shaft again from the base all the way up to the top. She finally spoke.\n\n\"Does Molly suck your cock like I do?\"\n\nI couldn't deny it. \"Oh my God. No she is nowhere near as good as you,\" just wanting her to keep sucking.\n\nShe smiled and then put the head back in her mouth and sucked it some more. I think my encouragement had gotten her fired up because this time her head was bobbing faster than before and her right hand was jerking my cock at the same time. I mixture of saliva and precum was dripping down the shaft as she continued to suck. I felt the cum once again start to bubble up the shaft of my cock as I was getting close. She must have sensed this because she again slowed down and took my cock out of her mouth and just held the base. She looked at me with a devilish smile, with full knowledge that she was teasing me.\n\n\"You're killing me you know.\" I said, as I thrust my very red, angry looking cock towards her lips. I wanted her to put it back in her mouth and finish me off so bad.\n\n\"Am I?\" she smiled with a giggle, knowing the effect that she was having on me.\n\nShe licked from the tip down the shaft and took one of my balls in her mouth, rolling her tongue around it and sucking the sensitive skin. Then she did the same to the other testicle and licked between my balls, covering the whole sack with her saliva. She then lifted up my ball sack and licked and sucked the sensitive skin underneath my balls. No one had ever done that to me before. It felt so good. I moaned as she did this and I spread my legs and lifted my ass off the bed a little. She continued to lick lower, now tonguing the sensitive skin between my balls and my asshole. It felt for a moment that she was going to go lower and give me a rimjob, but she stopped there, and sat back up on her knees.\n\n\"There are a lot of things that I could do to you if you were single,\" she said with a wink.\n\nI took the hint and decided not to push it, instead sitting up and putting my lips on hers and kissing her again, out tongues twirling inside her mouth. He big, beautiful tits pointed straight at me from her chest and I reached out to again hold them in my hands. They were definitely way more than a handful and I loved how hard her big nipples had gotten. As I did this my cock brushed against her tits and I moaned as I loved the feel of her firm, warm skin against my cock. She picked up on this and broke the kiss with another devilish smile.",
        "\"I know what you want,\" she said, and scooted forward and wrapped her big tits around my throbbing dick and started jacking off my cock with her tits as she knelt in front of me.\n\n\"Oh my god that feels good,\" I moaned as she started tittyfucking my hard cock. Her tits were so big and yet so firm, and they wrapped completely around my cock so I could not even see it anymore. It was so erotic watching her boobs sliding up and down, making my dick feel so good and even harder than before if that was possible.\n\nTittyfucking is a huge fetish of mine so I was in my glory. But I wanted to thrust between those mammoth titties myself.\n\n\"Lay down on the bed,,\" I said, more sternly than before. She got off her knees and got on the bed. I rolled her onto her back and got on top of her, straddling her chest, with my cock between those huge globes. As I got into position she knew what I wanted and squeezed her big tits around my cock from below me. Once again my cock disappeared inside her cleavage and I started thrusting. The warmth and the firmness of her tits were intoxicating as I started to thrust harder, the head of my penis reappearing only momentarily at the top of each thrust as slid again and again within the tunnel of tit flesh that she had created by squeezing them together. I was in heaven as I started fucking her tits harder and with longer strokes, the tip of my cock head occasionally touching her chin. I was losing my mind with how good this felt.\n\n\"Get it wet again,\" I said, as I lowered my cock into her mouth and fucked her face a few times before pulling my cock, now coated with her saliva, out of her mouth and back between her tits and started tittyfucking her again. I was fucking her tits really hard now and the bed was rocking back and forth. My ass cheeks clinching with each thrust.\n\n\"Mmmmmm yeah, good boy\" she said. \"Fuck my tits. Are Molly's tits this big?\"\n\n\"No, they're not,\" I moaned, not stopping my thrusting.\n\n\"Does this feel better than fucking Molly's tits?\"\n\n\"Yes it does!\" I shouted, losing all control now listening to her dirty talk as she held her tits together, allowing me to tittyfuck her very hard. I loved looking down at her little hands trying to squeeze those big tits around my cock and trying to hold them there despite the relentless assault of my cock and the hard thrusting I was doing. Her hard nipples were pointing straight up at me I continued thrusting. Every now and then her tongue would come out and catch the tip of my cock on the up thrust, but it didn't stay there long as I was fucking her tits so fast and hard.\n\nMomentarily regaining my composure, I managed to ask her while thrusting \"Can I cum this way?\"\n\n\"Yes,\" she said.\n\nI didn't want cum to get in her hair so I gathered up her long hair and moved it up around her head so it didn't fall on her shoulders. Then I resumed my thrusting. I knew I wasn't going to last long and it was going to be a big load. My balls felt so full.\n\nAfter about 20 seconds more of tittyfucking Cheryl's big tits I couldn't hold it anymore.\n\n\"I'm gonna cum!\" I shouted and moaned louder, not caring anymore if anyone out in the hallway heard us.\n\n\"Yes! Shoot it all over me!\"\n\nI gave one last hard thrust as rope after rope of thick cum shot out of my cock and onto Cheryl. The first shot hit her in the chin and made her flinch. The second and third shots sprayed across her face and she laughed a little bit as I coated her pretty face. Spurt after spurt of cum erupted from my cock and landed on her cheeks, mouth, nose and forehead. I just kept cumming as I kept thrusting and my cock kept firing shots all over her. She closed her eyes just in time as the cum pooled in one of her eye sockets. Finally, the last few shots landed on her neck and upper chest. Completely spent, I stopped thrusting and looking down at Cheryl, my cum all over her face and neck.\n\n\"Oh my god, Brett that was A LOT. I'm completely drenched!\"\n\n\"Sorry I couldn't help it.\"\n\n\"I can't open my eyes. Get a towel.\"\n\nI got off her, my legs still weak from my orgasm and cum still dripping out of my cock and onto her tits. I got her towel and wiped off her face, starring with her eyes. She took the towel from me and finished wiping herself off.\n\n\"Wow, that was a lot,\" she repeated. \"You certainly needed that.\"\n\n\"Ohhh you have no idea. Thank you so much.\" She smiled at me and licked her lips and blew me a kiss.\n\nI broke up with my girlfriend Molly the next day. It was hard to do but there was no going back now that I had a taste of Cheryl. And I had no idea at the time what crazy adventures were coming up.\n\nPart 2 coming soon."
    ],
    "authorname": "brett9",
    "tags": [
        "big tits",
        "tittyfuck",
        "college",
        "cheating",
        "blowjob",
        "teen",
        "titfuck"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/cheryls-big-tits-ch-01"
}