{
    "title": "My Only Talent Ch. 23",
    "pages": [
        "My Only Talent Ch. 23\n\nHey There Lonely Boy!\n\nNote: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. The delay in posting this chapter and perhaps the next few may be ascribed to some unexpected turbulence and travel in the author's recent schedule.\n\n\n\nI got back to the dorm just in time to pack up all my stuff before it closed down for the holiday: having Erminia send a limo was proving very convenient. After our 'training session' with her ended this evening, the driver was instructed to take Millie and me anywhere we wanted, including summoning another limo if required to take her east to Houston and me north to Prosperous. Unless we finished very early, that well might be needed, as the last flights either one of us could catch to make it home tonight were around 9 PM. Millie had a lot more stuff packed to take home than I did, and it took us a while to get everything into the cavernous trunk of the limo. Kevin had left the dorm early this morning, to spend the holiday break in Vegas with his dad, stepmom, and Lou Baby.\n\nNora was also long gone, having taken at her father's direction the \"oh dark thirty\" Jet Blue flight from AUS to JFK to then catch a British Airways flight to London. She told me she was puzzled by his plan because she didn't think she could make the connection unless the London bound flight was quite late, but her father assured her that he had things handled. We were going to touch base via email or text message later so we could meet up in London when I knew my exact schedule for my trip with Barry Fermy. Suzanne was off to spend her holiday in Washington DC, where her dad had taken a gig as a visiting professor in international studies at Georgetown, presumably until the next presidential election cycle allowed him access to some other opportunities. Lara was off to Beaver Creek, Colorado, where her family had a summer house to escape the crushing Dallas heat of July and August, but this year they were going to do a white Christmas there, with Lillian Gish, her dad's new significant other. \n\nI was going to spend one night and day with my folks in Prosperous, before heading to London to meet Barry Fermy and his team and Abelard Peters for a whirlwind tour of current and potential construction sites, and their corporate offices. I would take an afternoon flight from DFW which put me in London early the next morning GMT time. I was supposed to sleep on the flight and then immediately get on London time when I got there, to reset my circadian rhythms and minimize jet lag. I was going to studiously ignore Barry's other suggestion: fast for eighteen hours before boarding the fight, to facilitate allowing my appetite to reset my circadian rhythms even more easily. If I did that, I was sure that my overactive Suzie receiver equipped and therefore inordinately sugar hungry brain would shut down in a coma long before the flight arrived. Barry even gave me business development homework on the flight \u2013 get three business cards from passengers near my seat and do a 'six degrees of separation\" analysis on each of them to find out who they could connect me with. Barry was quite the slave driver, but according to the annual report I perused, he also made $3M in bonuses last year. I would get back home on Christmas Eve, spend the a few days with my family, and then head back to London on New Year's Day for the more mysterious second business trip, this one to meet with some prospective clients of Abelard's firm, although I still didn't know where. \n\nThe Christmas decorations on Congress Avenue were ablaze with light and tossing about in the winter wind as we left Millie's sorority house and headed south toward Sapiento's newly completed high walled three house complex just south of the river, and the Austex locals were surely ready to enjoy a few days without the student population pressure. I could see the east side of Lara's high rise off to my left, and if I closed my eyes I could also picture Lara. Colorado seemed very cold and very far away. My phone beeped with a text from Nora. Her dad had 'surprised' her with a Christmas planned away from London, so she didn't catch that flight to London, but rather found her whole family waiting for her plane at JFK. After a few family rituals, they grabbed a charter for Bermuda and a big rent house, hopefully with Christmas weather a little warmer than they wound have found at home on Eaton Square. I guess I wouldn't be held warmly in the bosom of her family for the next week or so, then. Was I relieved or sad about that? Were they avoiding me? It certainly meant I had less promising social prospects while in the UK before Christmas. If Peggy wasn't around, I was going to be the lonely little drummer boy, focused on business development and nothing else. Maybe I would be good for me.\n\nThe driver pulled into Erminia and Sapiento's place and I found it decorated in full Christmas holiday splendor, complete with tall evergreen trees and short waxy holly bushes in big ornate planters. The guards were still dressed in understated grey suits though, not elf costumes. They disappeared as she ushered Millie and me into the 'salon' that housed our sexual therapy sessions. Erminia was in a smiling good mood, and if my plan for this evening worked, she would be smiling even wider still. Millie was also feeling foot loose and fancy free, having finished all her classes. I certainly had 'loose' plans for both of them, and I decided I had better fully slake my sexual thirst tonight in case my London trip turned into a long dry spell.\n\nAs I turned to look avidly at her, Ermie suddenly seemed a little shy and apprehensive, perhaps anticipating that this might be a breakthrough session for her. My idea was to keep her totally off balance and focused only on pleasing Mille and me, so she would respond involuntarily and autonomically to her own pleasure, without thinking or associative guilt. She was perfectly made up and in a basic black dress that probably cost more than a semester at ESU.\n\n\"Strip and get on your knees, slave! Tonight you must demonstrate total focus on pleasuring your Mistress and Master! One moment of distraction from that task and you will be punished very severely.\" This brought a quick gasp: Erminia lacked Millie's affinity for pain, and truly dreaded such punishment. The prospect of it did excite and focus her, however. She quickly shed her clothes and dropped in front of me. \n\nI took off my pants and underwear and offered my dick to her. She sucked it in with complete concentration, ably demonstrating the skills she had learned this semester. She lacked Lara's fervent devotion or Suzanne's insouciant flair, but she was still in the top 1% of the female population, at least by my best estimate. I did feel a duty to gather more data, though. I was soon hard as hell, and she began to tease and titillate me. I took of my shirt while she toiled away. \n\n\"Finish me off quickly slave, and then keep me hard for your Mistress!\" She complied, beautifully, and as Millie looked on, I was soon pumping 24 hours' worth of stored up hot stuff into the mouth that had been pictured and written about in so many glossy European magazine gossip columns. It felt great. She cleaned me out, and worked her well-studied Suzanne style low excursion suck magic, and I remained hard as a rock. I kissed Mille, and slowly removed her clothes as Ermie watched, still kneeling on the floor. \n\nTuning in to her Suzie signals, I slowly brought Millie to higher and higher levels of excitement, reveling in the pungent perfume she began to pump into the room. Soon I noticed that Ermie's distinctive aroma was joining and mingling with it. Stage One, check! I picked Mille up and put her on one of the red leather chaise lounges that were part of the salon's d\u00e9cor, turning her on her side in front of me and holding her top leg up high, indicating to Erminia her target. \n\n'Slave, get your Mistress ready for me!\" Erminia had a recent and very complete working knowledge of what it took to get Millie wet, and her talented tongue soon had Millie's Suzie signals playing beautifully: Millie was hot to trot. Ermie seemed to be concentrating completely on Millie, but her own signals began to swoop and soar, too. I must have been a great conductor. I also knew what it took to please Millie: sometimes she liked it rough! I grabbed Millie's arms and put her in a full Nelson hold as I lay behind her on the chaise, locking her arms up above her shoulders and instantly gaining complete control and submission. Her Suzie pinged like an alarm going off. I turned her and stretched her, and her Suzie told me that it hurt so good. She was ready.\n\n\"Slave, use your well trained tongue to lubricate my cock, then slip it into your Mistress!\" Both girls' Suzie signals sounded loud and clear: they both liked this little scenario, and I knew I would. More importantly, Erminia was rabid with excitement but I detected not even a hint of guilt. She licked me very thoroughly, and then used one hand to spread Millie's inner lips while the other lined up my cock up and slipped it in. I heard an instant signal peak from Millie, and then Erminia held her face about three inches away from our joining and watched slack jawed while I moved in and out of Millie, trying to expand my penetration with each stroke. Her Suzie swelled in time to my motions.\n\n\"Suck my balls, and then suck her clit until she comes!\" Erminia did not need to be asked twice. She serially sucked each of my eggs into her mouth, engulfing it fully and then pulsing it with negative pressure alternated with tongue jabs. She stopped just short of too hard, meaning it was the perfect stimulus and I got even harder. I was almost sad when she turned her attention to Millie's swollen clit, but I heard Millie's signal soar and knew it was going to be a joy to listen to. Ermie locked on her target, beginning with gentle flicks in time to my strokes and quickly escalating to almost the same strong technique she had applied to my scrotum. Suddenly Millie gasped and her pussy gripped my cock just as her breathing halted and she shook, still locked in my wresting hold. She had told me that being restrained made her come harder, and this one was a doozy. It triggered a second one a few moments later, and then Erminia gasped as Millie squirted on her face. I looked over Millie's left shoulder to see Erminia chasing down the wetness like she was eating a juicy peach, and perhaps she was, as Millie came again from the tongue work. Damn these two were so beautiful. \n\nI pulled Millie up a little, away from Erminia's face, and they both gasped and tried to catch their breath like panting dogs. I was about to try to be the big dog, and soon I hoped to panting too. I released Millie from my hold and pushed the two women onto each other, head to tail. \"Eat each other's pussies until I decide which one to fuck!\"\n\nI was totally just moving forward with what turned me on, but I may have found a wonderfully technique, for like Suzanne, they responded like never before. They dove into each other and each did their best to get the other one off first. It was one of the hottest things I had ever seen, and they were both quickly successful, too. \n\nI grabbed Erminia by the hips and pulled them up so I could fuck her doggy style. Millie must have been totally in synch with me, because she instantly turned and slipped her head between Ermie's legs, suddenly enjoying a perfect close up view of her pussy and what was about to happen to it. \n\n\"Slave! Concentrate completely on gripping me and pleasing me with your pussy. If you even think about anything else you will be punished!\"\n\nErmie groaned way deep down in her throat. I positioned my cock just at the entrance to her now dripping pussy, realizing that I was about to fuck her for the first time. I was hearing her Suzie notes like never before either, and they sounded great, with still no hint of guilt or hesitation. Once again on autopilot, I paused and began to spank her, in time to the rhythm that I planned to penetrate her in. She tolerated it, concentrating on my pleasure and not hers, just as she should. But it had unexpected benefits, as Millie was driven crazy by the sight and sounds of Ermie clenching with the sound of each solid spank reverberating through her ass and thighs. Millie was envious \u2013 she wanted to be the one getting spanked and queued up to be fucked. All in good time, my dear, all in good time.\n\nFinally I entered Ermie almost full depth with my first stroke. She was hot and wet and her Suzie sang in exultation. She wanted more: she wanted all I could give her. I did my best. So did Millie and I felt her tongue moving all over us like a hummingbird dosed with Dexedrine. I was in John Henry land again, stroking away like a machine as Erminia was racked with her first orgasm. She froze almost in rictus, and then drew in a huge breath.\n\n\"Concentrate on gripping my cock slave!\" She bore down on me with all her might, and suddenly came again, her Suzie singing sweet jazz with a desperate downbeat. She was now guilt free, and she was an animal, a beautiful animal! I grabbed the front of her thighs and got even further into her, just letting my pure animal lust out without any thought to her pleasure. It turned out to be the gentlemanly thing to do. She came again, now three times total in rapid succession, and I felt her juices dripping down my thighs and onto Millie's face. Millie didn't miss a drop. Erminia's breath came in sobs.\n\nI turned her over again so that she was lying in the middle of the wide chaise with Millie and me on either side of her, and slipped her left leg up and over mine so I could stay inside her. She sobbed and cried as Mille tried to kiss her tears away. I kissed the side of her face and her neck. Millie was crying almost as hard as she was. \n\n\"I suppose I should yet punish you, slave, for losing your concentration on me and having so many orgasms, while I haven't had one yet!\"\n\nMillie looked alarmed, but then she saw the wide grin on my face.\n\n\"But I can't fault your performance, as it was very pleasurable for me.\"\n\nErmie smiled and giggled. \n\n\"But I am going to fuck you now again, and I want you to grip me with that slave pussy for all you are worth until I come in you.\" Her eyes got big. So did Millie's. \"And after I shoot some in you, I am going to finish up in your mouth and you are then going to suck me dry, do you understand?\"\n\nShe got a bemused expression on her face remarkably like Lara's when she was being dominated and liked it. \"Yes, Master. I will do my best to please you!\"\n\nMillie's eyes sparkled. \"And you, Mistress Millicent, will rim my ass as I come, and then clean Erminia out for me!\"\n\nErminia's expression was a priceless mixture of shock and excitement. But her Suzie was not shocked, at all. It was singing in the shower, reverberatingly ready for some action. I slipped out of her and repositioned myself on top, missionary style. I spread her legs wide and high with my knees and entered her slow and deep, watching her face all the way. She smiled up at me with wide eyes and flared nostrils. Now that was the picture they should have run on the cover of Bella or The Tattler!\n\nI accelerated my pace as quickly as possible, doing nothing but trying to get myself off as quickly as I could. She smiled like a predatory cat, and a very beautiful one at that. Millie did a little improvisational routine of her own, clamping her mouth onto one of Ermie's nipples and sucking it, and using one hand to caress my ass. With that kind of help, it didn't take me long.\n\n\"Grip me, now!\"\n\nErminia bore down on me for all she was worth, and I felt my flood waters flow. After two deep squirts, I pulled out and shoved myself into her mouth, and she sucked me down like she was born to do so. She nursed my cock hungrily, and I was suddenly spent and ecstatically empty. I lay back and watched Millie watching her, then sliding down to clean out that freshly fucked pussy. Erminia's eyes stayed locked to mine as Millie slowly kissed her way over her breasts and abdomen as she worked her way down. As Millie's head disappeared below her waist, Ermie's eyes got wider than saucers. She mumbled something in Italian, and then shook her head from side to side, having one more massive orgasm as Millie finished her task. Millie always was very thorough. \n\nWe lay there and cuddled for a while, and then we all got in the shower and washed each other. I developed a fascination with Ermie's newly liberated and washed ass, which was convenient since she was preoccupied with eating Millie's pussy again. When she had had enough, we hugged each other again and began to dry off.\n\n\"Erminia, your training is now complete. You know what you like and you like what you know, don't you? You know what Sapiento likes, and you can give it to him easily. Now you must go and teach him what you like, so he can give it to you. Be completely honest about what you want, that's the key, and concentrate on pleasing each other.\"\n\nShe smiled beatifically. \"Without the guilt, I think I will like almost everything, although I am going to ask him to kiss my ass in the shower like you did a few minutes ago. How can we ever thank you?\"\n\n\"You already have. Watching you come alive and come again like that was one of the most beautiful things I have ever seen. It makes me proud to be a man!\" Not to mention that Brujo had fixed me up with that research report that could earn me a lot of commission plan credit with Barry Fermy. \n\n\"I am going to be with Sapiento now! You two are always welcome here, and anything that you ask of us will be done, anything, do you understand me? You can stay as long as you like here, and then the drivers will take you home.\" She slipped her dress back on and headed upstairs, the guards opening the door for her at the top of the stairs as she approached. When it closed, I closed the door to the salon again, and grabbed Millie.\n\nThis would be my last 'shot' at her, so to speak, so I wanted to make it count. The red chaise lounge had a few hidden features, including some silk restraints that were attached to it underneath the corners. It also had the ability to fold in some interesting ways: in this case, I could move the middle and either end up or down, so that Millie's lovely young body could be positioned in any way I desired. I put her on her back, with her legs up and held apart by the restraints, with her middle elevated and her head down, just dropping over the edge of the chaise cushion. She responded to being restrained as she usually did: her nipples got hard, her chest got red and flushed, and her breathing accelerated. A hint of her lovely fragrance found my nostrils, and life was good. Her Suzie sang a song of need: she needed to be treated roughly and painfully, and then finally brought off to her release. But I would gently tease her first.\n\nI took my time looking her over. Had it only been a few weeks ago when I spotted this one, after being introduced to her via, of all people, my wild and crazy roommate, Kevin K. Kretzman? She had helped me rescue Lara's purloined image from the AGs, and deftly settled an old score of her own along with it, proving a trustworthy ally and very effective leader. In the process, I learned that she was wicked smart and highly interesting, and my only talent told me she was also smoking hot inside that polished but reserved exterior. She faced her inner desires forthrightly and honestly, and explored them fearlessly. She bonded with Lara and Suzanne in a way I still couldn't fully understand, and that told me a lot, too. She was also a tremendously talented lover, and I loved her, but I wasn't in love with her, and she told me that before I even admitted it to myself. She also told me I was in love with both Lara and Suzanne before I was willing to accept it. And I cleverly introduced her to Jay Kincaid, who she was probably going to end up with in the long run. How dumb was that, Robbie?",
        "Her Suzie signal growled and grew impatient as I watched her. I felt tenderness and growing lust simultaneously. I began to gently touch her shoulders, hinting at what I wanted to do to her breasts, but restraining myself from doing it yet. I thought about what I knew about her, and how best to please her one final time.\n\n\"Millie, you know how much I care about you, and how wonderful I think you are. But this is our last time together, and I am afraid I am just going to use you like an animal to get myself off. No mercy for you slut! I own you tonight.\"\n\nHer Suzie soared. I knew I was doing the right thing for her. Millie needed to be owned sometimes, she needed to be taken. I was detecting a trend here: just do what I wanted to get myself off, and that seemed to get my girls off best too. What a happy coincidence! I felt in control, on top. Then she gave me the ultimate version of her hot but haughty look, and it made a direct connection from her eyes to my dick. I wasn't really in control, nature was, and the programming was hard wired. Oiler, during one of our late night philosophy sessions at UDP, which I did sober compared to everyone else's being equipped with substantial alcoholic inhibition reduction, told me that some of his biomedical engineering buddies theorized that the brain was one big FPGA, or Field Programmable Gate Array. After he had explained to me what that was, he said that the latest and most advanced ones, instead of being fully volatile and therefore completely re-programmable, had a lot of stuff built in that couldn't be changed in the field. Some section of my hard wired routines must have contained something like 'when you see a look like that from a female, go into a complete lust crazed rut' and that program soon overcame all others. \n\nLuckily I had teased her for quite a while before that, and maybe that look said her patience for foreplay was exhausted, but at any rate I felt almost like a spectator from then on, watching a crazy monkey take a female. I squeezed her teats so hard they turned red, but that made her nipples get totally hard and her Suzie squealed with delight. I pushed my cock into the pink valley between them and then used my hands to crush them against my cock, and then fucked them like some spastic Bonobo playing with fruit. But Millie amazed me again: she pushed down hard with her neck and managed to get her lips and tongue in contact with my cock, then looked up at me hot and haughty and locked her eyes onto mine. Holy Toledo! She was my racial memory ultimate female, and I lost all semblance of reserve or judgment. I even forget to use my Suzie receiver to listen for a non verbal safe word should I go too far. But somehow with Millie, I knew I couldn't go too far. If anything, I was worried that her last memories of me would be too tame.\n\nI grabbed two handfuls of her hair and savagely fucked her mouth like she was a blowup doll I had just bought at the XXX toy store. She loved it. I pushed myself down her throat and forced her to fight for breath so hard she almost passed out. She loved it even more. I popped out of her mouth and slammed into her pussy with no warning, just as deep and hard as I could. She groaned and pushed her hips up against the restraints, wanting more. I twisted until all my weight seemed to rest on her mons pubis; she gaped and then smiled, as if to say \"is that all there is?\"\n\nI put my arms up over her head on the top of the chaise lounge, and did lunging abdominal crunches into her like a machine. She came three more times in rapid succession, and each one sent a Suzie blast that reverberated through my brain like fireworks going off beside my head and inside a garbage can. My monkey went strictly with the basics - I just fucked her like an animal. Racial memory must still be in effect, because all I could think of was planting my seed just as far up inside her as I could. Was it territorial? Was I marking her before she went off with Jay's 'tribe'? Whatever it was, it was going to take a while, it seemed. I felt like John Henry on psychiatric hospital meds \u2013 dull and insensate - not feeling much at all. I made eye contact with Millie, and her hot and haughty look had changed to worried and surprised. Nice Robbie was now animal Robbie. What big teeth you have, grandma! \n\nShe came again and big smile broke out on her face. Being fucked like an animal was just fine with her. She put both hands on my ass cheeks and began caressing them. She put her lips to my ear and said \"You do own me right now Robbie, but you have to seal the deal by coming way up inside me!\" and then bit my neck. I have never liked vampire stuff, but I liked that. Something was beginning to stir, and suddenly my whole brain was concentrating on nothing but the sensations from my dick. It seemed to swell at the end, like when a dog got locked into a bitch even when they turned their backs on each other. \n\n\"Right there Robbie, right there. Let loose in me!\" I could never refuse a lady. Sweet little Millie could take also everything I could manage, just as effortlessly as big Peggy did. When my wits returned, I kissed her and told her how wonderful she was. We took an exhausted shower together, washing only. There was nothing else to do or say. I was going to have to talk to Jay Kincaid though, about not letting his inhibitions hold him back when it came to Millie, and to Millie's coming.\n\nThe limo driver had already called for a second vehicle, for me, and since my stuff was much easier to move than Millie's. We had one almost chaste little kiss, and then two reciprocal hand waves through the windows. It was late enough for her driver to take the ramp onto Interstate 35 to reach Houston with little traffic delay, and he speed south and the took the overpass to go east to Ben White Blvd, which became Highway 71, and that would take them to Millie's home in River Oaks in just over two hours. My driver followed, confusing me at first, but then we went past the airport and turned north onto the 130 toll road and we were soon wending our way north at 85 mph+, seeing less than six other cars in the next 20 minutes. Georgetown flashed by as we merged into Interstate 35, and I felt almost wistful a few minutes later about not stopping in Salado to shop. \n\nI was considering a nap when my phone buzzed an alarmed reminder from my last 'to do' list item for today - to contact Saskia with my 'cover story' about my digestion to hopefully make her turn loose of the puzzle of my energy consumption and thus my potential usefulness as a physiological experiment and anatomical curiosity. It was almost midnight, and I had no idea where she was, but I decided to call her anyway. She answered on the first ring, and I heard a background of road noise.\n\n\"Hello, Roberts. I assume you are so anxious to start your training so you are calling for some pre-semester workout suggestions?\"\n\n\"No beautiful, but I am anxious to see you again.\" Did the road noise change, or was that her taking in a big breath? \"I am calling to tell you that Asa Weltschmerz confirmed most of your test results, but he thought of one more simple but unlikely thing and that turned out to explain my anomaly.\"\n\nShe drew in a breath, then \"Your digestion!\"\n\n\"Bingo! It seems I am missing some of the normal digestive enzymes and their absence causes some foods to pass through me largely undigested, thus leaving lots of calories 'on the table' to put it politely. He sent me to see some weirdo called \"Doctor Dee\" and I have several supplements to take and some special yogurt to eat that is supposed to fix me up in two weeks or so. So I will be ready for the hottest personal trainer in Texas when classes start again and you may sculpt me as you will.\"\n\nI thought I heard the smile in her voice that she was trying to suppress, but then her tone turned desperate. \"If I ever decide to come back at all! Arturia Colorado makes me want to pull the covers up over my head and stay home. She makes me ashamed to say the word science. But she has me over a barrel by holding out on making me co-author of at least 4 papers that I have done most of the work on. If I leave my post doc with no pubs everyone will think I am a loser! So I am a loser, stuck working for that evil bitch until those paper get published.\" \n\n\"It sounds like you are driving somewhere?\" I offered, trying to change the subject.\n\n\"Yes. I just passed through Fort Stockton on the way to my parent's house in El Paso for my annual Christmas visit and unmarried daughter period of penance. I am the only one of four daughters still unwed, and my mother takes that as a personal challenge.\"\n\n\"Do I detect the odor of Mom's arranged blind dates calling for you over Christmas?\" \n\n\"Yes, and she is really terrible at it. Not only are they usually personally repulsive, but by any objective criteria they would be terrible husbands and fathers, and likely sire defective grandchildren, if they could produce any at all. I am not sure what she is thinking.\"\n\n\"Well, each time you are forced to endure an evening with one of these guys, just imagine that I am waiting to ravish you when you get home to your bedroom.\"\n\nShe was silent for a long time. Did I offend her?\n\nSaskia could not speak right now. She had been fantasizing about Robbie taking her at night for about a week now. But she could never, ever tell him what she really wanted, and he would never figure it all out on his own. Even if he knew, he might not be willing. She finally made herself banter back at him. \"I already have nightmares about blind dates anyway. No need to make it worse.\" She forced a giggle. \n\nAn image suddenly popped into Robbie's head unbidden. Was this another one of his hunches? \"Actually, beautiful, if you went on a blind date with me, I would wait until we got back to your place, and then I would blindfold you! He hung up.\n\nSaskia almost drove off the side of Interstate 10 at 80 mph. What the hell made him say that? Oh God, that just made it even worse! She forced her concentration onto the road, and on reaching her family's home in Coronado Hills.\n\nI must have fallen asleep after talking to Saskia, and I had a very colorful dream. Millie was on \"Meet the Press\" being questioned by that grey headed guy that looked gay but supposedly wasn't. I had trouble telling him apart from the other grey haired news guy that tried not to act gay but supposedly was. Not that it made any actual difference to me. In my dream, Millie was on the show and on the spot. \n\n\"Is it true that you had college orgies with dozens of men and women at the same time?\"\n\n\"No, of course not.\"\n\n\"But you have been with more than one person at a time?\"\n\nMillie smiled. \"That would hardly qualify as an orgy, David, but that question has been asked and answered. How about you? I hear some wild rumors about you.\"\n\n\"I'm not the subject of this program. Is it true your husband likes to watch you having sex with other men?\"\n\n\"No. Aren't you projecting a little here, David?\" \n\n\"What the hell do you mean by that?\" He was shouting now and hardly in control of the conversation. Point to Millie.\n\n\"Calm down, David. You should 'open up' and reveal more of your fantasies to your audience. It makes you seem so much more 'approachable' eh, David?\"\n\n\"You stupid cunt!\" He lunged for her throat in the dream as I was awakened by the rapid motion of the car. \n\nThe driver had almost missed the right exit from 35 to the Tollway, making a dash all the way across the freeway from the far left lane, where he had been traveling well above the speed limit at this now early morning hour. He had to slow a bit to negotiate the narrow overhead ramp, and then he accelerated again on the toll way, where the few cars around us were also traveling at 85 mph or more. We were now less than 30 minutes from my house. Soon the porch lights of Alley's house were burning brightly off to our left as we passed by Preston Road and continued on into the long single lane driveway of my folk's new place.\n\nEldee and the other dogs were the only ones awake when I let myself in. She took one look at me and snorted. I get it, old girl. No Nora, no Lara, and no Suzanne. I was disappointed in myself too. She plopped down in her spot near the base of the stairs, grudgingly acknowledging that I was still family and just barely worthy of guarding: otherwise she would have shown me her rump and gone up to Grandma's room. I dragged my stuff up to my old room, discovering that my mom had already claimed a corner of it for storage of some of her sewing stuff. I thought of that Thomas Wolfe book from Rhetoric and Composition, and then crazy Sarah, the hot but obsessed brunette that had kept the dogs so worked up. Sleep beckoned.\n\nBut the short nap in the limo had messed up my sleep cycle, and I was now wired, as everyone else slept throughout the house in complete silence. I pulled out my laptop and started through the big document from Sapiento, which was now to be my textbook until classes started again. You never can tell what would prove useful, and I might not have time on the trip to look stuff up. The thing was chock full of factoids, but I used my 'teach the class' routine to try to put it all in context. Sapiento and Brujo had multiple perspectives: some companies were potential takeover targets which they wanted to be available cheap, some were direct competitors that they wanted to die off, and some were suppliers or customers that they wanted to prosper. The consultants had not only analyzed them individually, but in combination and competition with each other. \n\nThe report was dry and boring on the surface, but when you realized the stakes and the number of people's lives that would be affected by the potential scenarios that were being described it did get a lot more interesting. I reminded myself to take the perspective of being their potential insurer: which ones would I be glad to ensure, and which would keep me up at night worrying about them, and which risks should I be certain never to undertake. It drew me in, especially when it got to the detailed discussion of Abelard Peter's Tier Group, and what their prospects were: high risk and high return. Brujo was penciling them in to become a big supplier to Sapiento's companies. One conclusion that I could already draw \u2013 the consultants were saying that the energy business was changing in a big and irreversible way over the next few years. The US shale boom was driving prices down in the near US markets, and threatening the traditional cartel suppliers, most of whose economies were 'one trick ponies' that could only sell oil. China and Japan had little choice but to important oil, Europe could import oil, gas, or LNG, and the Americas had all sorts of options. Renewable energy sources like photovoltaic panels had driven down demand for electricity used in homes and offices, and shaved peak demand some, but had not changed industrial energy needs or base load demand much. Some big bets were about to be made, and cashing in would require some huge construction projects for oil pipelines and tanker terminals, LNG tankers and terminals, and new refineries that could take several feed stocks and be rapidly re-configured for multiple outputs. Tier group was going to have lots of bids and lots of projects, and huge billings. The key was to pick the customers who could finish the projects and operate them long enough to pay the bill. The losers would either run out of money or run out of political power before they could pay. \n\nBefore I knew it, the morning sun was flooding into the eastern window, and I heard Grandma going down the stairs, which meant that some of the world's greatest breakfast stuff was in the offing. I took a quick shower and went down to the kitchen in a pair of jeans and a grey Longhorn tee shirt. The smells hit me halfway down the stairs: bacon and buttermilk pecan pancakes for breakfast as expected, but now also the unique smells of the preparation of our traditional holiday tamales. Masa, chopped walnuts, pecans, currants, raisins, Bing cherries, cinnamon, Ancho chile peppers, chocolate, and Mexican vanilla put me under their spell. She usually made about ten different varieties and put them out on a schedule of a few new ones each day as Christmas approached. We had a ritual: I would offer to help, and she would refuse but assure me I could have some when they were ready. Eldee looked on from her little matt under the half desk in the kitchen that housed a landline telephone, cookbooks, and boxes of recipe cards. No one else had ventured out of their room yet.\n\n\"Good morning, Robbie. I was hoping you would bring Nora, or Lara, or....\" She let it hang, waiting for me to respond. Eldee growled. \n\n\"I tried, Grandma. Nora is in the Bahamas with her whole 'famdamily', and I won't even get to see her in London when I am there before Christmas, so I will have to hope that I can catch up with her on my after Christmas trip. Lara and her dad are in Colorado for Christmas, and Suzanne is visiting her father and mother in DC. Millie is going home to Houston, where Jay Kincaid and his family are going to visit them for Christmas. It turns out their grandfathers are old oil field arch rivals, so that should make for an interesting visit. I am hoping to see my bird watching girlfriend, Peggy, who has now moved to London to take a job there, but our schedules may not line up.\"\n\nShe laughed, like she used to do when six year old Robbie would tell her his troubles. \"You poor, poor, pitiful little mistreated boy! How do you ever manage to survive? Try to console yourself with some pancakes and bacon.\" It worked. \n\nMy dad was the next one down, and after a quick breakfast, he took me aside to his study for a long discussion about Nora, my meeting her family, and what to say and not to say, and what questions to ask. I told him about Asa Weltschmerz, the energy balance issue, the x-ray images, and his theory of my only talent. \n\n\"I suppose I knew this day would come.\" He said. \"An army surgeon got very curious about my father's anatomy when he suffered a head wound in World War 2. He advised me not to join up because when they looked at my X-rays, they would either classify me as 4F or send me to some research lab somewhere. That's why I freaked out when you got your head hit on the tennis court. Today's diagnostic imaging stuff is so much better that it is going to get tougher and tougher to stay undercover, so to speak.\" It suddenly hit me. Nine year old Robbie's comic book dreams had been realized: I was a mutant freak! I wasn't too sure yet about the superhero part. \n\nMom came down then and guilt tripped me into accompanying her on a shopping trip. Perfect. Dallas area malls and shopping centers on December 19 were sure to be crowded, with a distinct lack of parking spaces. But if it could keep me distracted and awake until my flight left DFW this afternoon, I could sleep all the way over and then wake up synchronized to London time. \n\n* * * * *\n\nCarmencita looked up at him, smiled wonderfully across the BBQ joints' rustic table service, but then said \"Bullshit!\" \n\nDwight had anticipated this reaction to his cover identify. He would have been very disappointed in her if she had bought the story. He must now start the dance that the agency requires someone with his clearance and level of access to dance when a relationship 'gets serious'. But before he could speak, she let loose again.\n\n\"I spent all my summers growing up on my grandparent's farm, and USDA you are not, my mysterious friend. That laptop, your training, your vocabulary, and that instant shoulder dislocation move last week all say you are not USDA. If you think you love me, why don't you call me back when you think want to tell me the real deal?\" \n\n\"Carmencita, I cannot tell you more right now. I have to get permission from my bosses first, and to do that I have to tell them who you are and why you are important to me. I will do that tonight via secure email, and move things forward as quickly as I can. They are going to ask me a big question: do I want to marry this woman? I am going to tell them yes.\"",
        "Complete silence. She took a deep breath in, but then didn't let it out. \n\n\"And they are going to say it is not one of these modern 50/50 if it doesn't work out it's no big deal kind of marriages. This is a situation where a marriage that doesn't work is also to the end of my career. Then they are going to do a background check on you: a very, very thorough one. Then they will tell me I can talk to you \u2013 with them listening. Do you understand?\"\n\nHe heard not a word from her, and saw no movement, not even the blink of an eye nor the dilation of a pupil.\n\n* * * * *\n\nMom sent me off to shop by myself when she wanted to buy something for me, and gave me a list of what I should get for Dad and Grandma. I carried a lot of bags to the car under strict warning not to look inside them. She did give me two nice shirts early so I could take them with me this afternoon and wear them in the UK. When we got back to the house there was a package that had been delivered by courier that contained my passport \u2013 I had forgotten about it. Did an American need a passport to enter the UK? It seemed like they let anybody in these days. I flipped through it and saw some extra pages added at the back. What were those? Worry about it later: I just had time to throw some stuff in my carry on and mom took me to DFW. The tickets were waiting at the Admiral's club near gate D23, and the flight was on time, in a big and recently refurbished 747 that still had that new airplane smell. My boarding pass said seat 4B, and that sure sounded like first class to me. I made my way forward and up a level to find that my seat wasn't just a seat, it was a lay all the way back sleeping couch with pillow and blanket, plus it had a shroud around it almost like an Elizabethan collar. There was an individual power outlet, plus in flight Wi-Fi. There were about a dozen other similar seats in my section, so I began to plot my business development targets, as other people also made their way to their seats.\n\nOne obvious choice was the guy in 4A just to my left. In his mid-forties, he was wearing a dark grey pinstripe suit, dark blue shirt with white collar and cuffs, a woven black cotton tie, and some of those trendy Italian eyeglasses that have that magnetic catch where they can break apart in the middle. I was not sure how to read that outfit \u2013 gambler, gangster, or overpaid accountant? After we introduced ourselves, I decided he must be an accountant for a gangster. We then exchanged business cards, his said \"Consulting Accountancy\". That makes one business development target down and two to go, Barry. Given the nice seats and captive audience, I might try for a few extra.\n\nElizabeth Ashcroft Knowles tried to remain calm and collected, her normal mien, but she was hungry, harried, exhausted and sleep deprived. She had received this assignment with no advance notice, just after coming off another one that had lasted almost 6 days, during which she had slept only twice. She was directed to Heathrow and a typical HQ travel desk penny wise and pound foolish dirt cheap Air Canada flight in a bulkhead seat next to a woman with a screaming infant. That flight went to Frankfurt, then Toronto, and then finally took off late for DFW, arriving only 3 hours before she had to turn around and board a flight back to London to engage her target. Her only salvation might be that she was seated in first near her prey on the direct flight back to London, where there would be food and drink, and hopefully the mission parameters would not require that she stay awake for the entire flight. Placing first in Informatics at King's College hardly prepared her for the kind of travel the agency required of her, nor the paramilitary and other tradecraft training she had taken in for six very intense months after her graduation. She had certainly never imagined what her supervisor had described as her first 'critical mission' would start with being chatted up by some eighteen year old spoiled brat yank uni git on an airplane flight from Dallas. \n\nMy mid-cabin 'seatmate' in 4C soon arrived and settled in. She was in her mid-twenties, short, plain, thick black glasses, thick black hair, and underdressed in a loose navy blue suit with white blouse, and at first glance completely uninteresting. The outfit said store clerk, but if she added a red tie, a blue cap, and some makeup she might have been taken for one of the cabin attendants. It was almost as if she deliberately tried to blend in, disappear, and be unremarkable. Then she turned and looked at me and I got a load of her eyes. They weren't just sparkling or active or interesting \u2013 they were beautiful little laser light shows \u2013 so bright blue that they almost cast a shadow. They danced and scanned and focused briefly and precisely on everything and everyone, including me. My first impression of her as unremarkable was completely shattered. She made those bright eyed girls that delighted me so at the UDP pre-rush gig look like dullards. I was captivated. Was she to be the next validation of my theory that really bright girls are the best lovers? Then a clear and coherent medium strength Suzie signal waxed up out of the noise, from her, for me. It had an interesting overtone of surprise, or even embarrassment. Was that good, or bad? \n\nI accosted the guy in 3A as he went by, an older gentleman who looked like one of those professors that are 'emeritus enough' to only teach one class every other semester. Sure enough, after the exchange his card said he was a math professor from the University of Connecticut, and an ASA, whatever that was. I just needed to bag one more card, and I figured bright eyes in 4C would be available for a while. I focused on the woman in 5B just behind me. She looked like one of my mom's friends, in her late forties, and very well dressed and made up, like she was just about to have her picture taken. Her card said she was a Mary Kay cosmetics 'consultant', which piqued my interest. My dad, ever the student of selling and sales forces, had studied their methods, and said that there were hundreds of thousands of them out there, and not only did the top 20% percent of them sell 80% of the volume, like most such organizations, but that most of them struggled and sold very little, and only about 100 of them each year made really big dough. Just like realtors. If her jewelry was any indication, she was one of the ones that did very well.\n\nThey made the announcements for takeoff and people settled in. There were two cabin attendants for our little section, so the service was very attentive. They started off by serving us hot nuts, which made me think of Peggy \u2013 hot, salty, tasty, and effective at whetting my appetite for more. Some almost fresh orange juice quieted my already growling stomach for a moment, but the look I got from bright eyes told me she had noticed the sounds of my struggling digestive system. She declined her nuts and offered them to me, and I ate them, for the protein of course. I thanked her. I decided that I might be willing to offer my nuts to her, later. By the time we were in the air, they were serving wine and veggies with ranch dip. 4C and I were the only ones to decline the wine, and she noticed. \n\n\"Teetotaler, are we?\" She had a surprisingly thick British lowbrow accent, so much so that I thought she must have been deliberately exaggerating it. It was thick yet fast, in stark contrast to Nora's educated style. It sounded far worse than the junior college player's production of Pygmalion that I had endured three times in one week late last summer with my mother in support of one of her students. \n\n\"Are you from Hoxton?\" I said. Her flashing eyes told me she got the reference to the play, and she was startled that I had made it. Her Suzie signal moved up a notch and I smiled openly at her and continued. \"I do abstain from booze, tobacco, and dope. It all just puts me to sleep, anyway.\"\n\nShe smiled in response. \"Dallas, eh?\" She suddenly sounded a lot more like Nora Upman, or a newsreader on BBC America. \n\n\"Originally, yes, but now attending school in Austin. I gave her my card, and took hers. It read 'Elizabeth Ashcroft Knowles, Systems Analyst, Department for Environment, Food & Rural Affairs.' I smiled \"What happened to the Ministry of Agriculture?\" \n\nShe smiled a tired smile, apparently having had to handle this one before. \"It was DEFRA-tized.\"\n\nI couldn't resist, and gave her a friendly, good natured leer. \"I do hope your specialty is rural affairs. Do I qualify as a country boy?\"\n\nShe smiled a moment, and then put on a sterner face. \"Trade, actually, using information systems to encourage our farmers and growers to buy and sell properly in the world markets. What brings you to London?\"\n\n\"Mostly business and perhaps I'll have a chance to meet a friend here if our schedules mesh. Is London your home?\"\n\n\"No. I'm a Gloucestershire girl from Cheltanham, bred and borne, and I visit there often, but my office is in Cornwall. I do travel a lot, both around the country and internationally.\" \n\n\"I am scheduled almost every minute on this trip until Christmas eve when I fly back, but perhaps on another trip, or if you come to Texas....\"\n\nShe showed a faint smile, but then said only \"Perhaps.\" The cabin attendant took our veggie with dip dishes and refilled everyone else's wine glass generously. This was a far cry from the peanuts on the more familiar Southwest Flight 213, and my stomach liked this one a lot better. The next course was salad. Not quite as tasty as Strelsa served up last Sunday night, and I was sure the after dinner show would not be nearly as good. \n\nThis young yank was much more interesting than she had any right to expect, and he was treating her the way she had seen men treat beautiful women: attentive, interested in what she said, smiling at her, making eye contact. She was surprised at her own attraction to him. He was young and obviously fit, but no movie star in the looks department himself. She had been disappointed so many times before that she thought she had purged any tendency to take a shine to any male that approached her. But his interest in her felt good, surprisingly good, and seemed genuine, too. But her job was to get more data on why he was here and what he was up to. She wasn't read in on why he had been flagged for investigation in the first place, but most likely metadata had connected him to some interesting parties or unidentifiable phone numbers. Perhaps she would get an update of his recent data to guide her in following up. He certainly had a healthy appetite to go with his growling stomach, and was devouring everything the cabin attendant could bring him. She wondered wistfully about what other appetites he might have, and whether she would ever have occasion to give him her real name. As they brought the main course his arousal was obvious, and she felt flattered and flustered at the same time. Why did that feel so damn good?\n\nOn one of her early assignments, posing as an accountancy temp in a company that HQ wanted to investigate, one of the male supervisors had lectured her about the fact that she was expected to spend some time on her knees at his desk at night to keep her weekly hire renewed, remarking with a laugh that a girl as plain as she had best learn how to please a man with her mouth and not with her looks. She had managed to put him off until the end of the week, and arranged things so that when the local constabulary burst in to make the arrests for the restricted technology sales the company was making to certain organizations in the middle east, they found him sitting on the front his desk with his trousers and underpants around his ankles, and a stash of kiddie porn on his office computer. He told them the porn wasn't his, but they said the password certainly was. He insisted that he had been waiting for one of the adult female temps that he was shagging to return from the loo, but the temp worker he named didn't show up on any of the payroll sheets. The supervisor's name was noe prominently featured on the kidshield.eu site these days, though. \n\nRemembering Strelsa and Suzanne's little Sunday show on the couch had stimulated me, and I had to turn my body to avoid making it too obvious to Bright Eyes when they brought my steak. I arranged the tray for maximum concealment and began to work on the food. Steak, potatoes, and green beans almandine was doing the job for me, and with a little dessert, I could make it all the way to London without needing one of Bob the Knob's sugar and electrolyte jelly envelopes to revive me. I guess I should carry some of those with me just in case. I felt sure I would be able get some toast for breakfast on this flight. Dessert for the evening proved to be a chocolate sundae, with some more of those roasted nuts on top, and I got goofily philosophical about the circle of life and all that jazz. I was probably just a little high from having normal blood sugar levels for a change. Feeling all warm and fuzzy and sleepy reminded me of reading Nora's Suzie signal black box sexual event data recorder in the back of Alley's Suburban, and suddenly I wanted to do a little Suzie sonar snooping of my own on Bright Eyes. I steeled myself to stay awake long enough to listen in on her. But she was casually leafing through the in flight magazine, watching me out of the corner of an eye, as if she wouldn't go to sleep until I did. The cabin attendant conspired against me too, bringing another little pillow and a blanket, and turning down the overhead lights. \n\nThe next thing I knew they were turning up the cabin lights and offering coffee and breakfast, with about 90 minutes to go until we landed. I felt wonderful, and if my time zone arithmetic was right, I had managed to get at least six or seven hours of sleep under my belt. Amazingly, Little Miss Cheltanham in 4C was still asleep. I tuned for her Suzie signal but she woke up and smiled at me before I could read a thing. \n\n\"Good morning, Bright Eyes.\"\n\n\"I beg your pardon? What did you call me?\"\n\nI smiled and kept my own council for a while, digging into breakfast like I hadn't eaten in a week. The attendant noticed and brought me seconds, including more toast. Bright Eyes was also very industrious about putting away a good breakfast, although I noticed, like me, she did not drink any coffee. She did feel conversational, though, and took me through what almost sounded like a script \u2013 on my studies, my major at the university, my family, my schedule for this trip and where I was going in the UK. She got three or four facts from me for every one she gave up, too, her wonderful eyes flashing and zapping at me. I was sad to see us approaching the airport, but automatically gathered up my stuff and prepared to deplane. \n\n\"May I call you at the number on your card when I return after Christmas?\"\n\n\"Yes, and I'll get the message even if I don't pick up immediately. And if your schedule fails to 'mesh' with your friend on this trip, perhaps we can talk some more?\" She flashed me a wonderful smile, her eyes sparkling with an even greater intensity than I had seen before, and then looked nervously at her phone and immediately wove her way through the aisles like a roller derby jammer, and was almost certainly the first to emerge from the plane. \n\nThe accountant in 4A spoke up. \"Working pretty hard for a low return there, aren't you sport?\" I looked him a question with my eyes. \"I mean, she is young and fit, but she is not much to look at, is she?\"\n\nI was amazed. \"Did you see her eyes?\"\n\n\"Yeah, no big deal: blue, but sort of a dull and unremarkable. I am sure she was very flattered that you took such an interest. Your good deed for the day, perhaps?\" I just stared at the back of his head as he preceded me out and down to the door. There are none so blind as those who will not see. \n\nI turned my phone on and found a text from Barry Fermy. It had a fake traveler's name for a sign to be held by a limo driver outside that would take me to the hotel, and he said to relax and synchronize my clock until 7 PM when the same driver would pick me up again and take me to dinner with the group. I knew just who I wanted to relax with! Peggy responded to my text almost immediately. She said she had arranged to play 'nooky hooky' from her museum job for the rest of the day, and was on her way to the hotel, and she was bringing 'urges'. Hallelujah!\n\nElizabeth Ashcroft Knowles had to get moving and fast. The text waiting on her phone had the lad's hotel information and some recent phone hits that HQ's Bayesian inference bots made some interesting connections with. She had to get to the hotel first and liaise with the surveillance team. When she first started working for HQ, she was amazed that so much of her job involved watching and listening to people being bored in their hotel rooms. She usually hated watching men or women pleasure themselves to release, but she might not mind seeing Robbie do that. She was curious as to how he got onto her radar in the first place, and she put in a request for the 'complete file' which would probably be denied on compartmentalization grounds, but she might get more data of some kind. He was much more interesting than one would expect from a university freshman, especially an engineer. He was staying at Horseguards, a kind of pricey spot, but in a great location. She would check how the room was being paid for. Its major drawback was the number of insufferable MI6 twits and would be droogies that seemed hell bent on conspicuously abusing their expense accounts there. Officially speaking, MI6 was in charge of counter intelligence, which was sort of a 'moronoxy', as everything they did seemed to her to be counter to any concept of intelligence. Some of her more lowly ranked classmates had gone to work for MI6, and were now smugly condescending towards her, believing that she must not have interviewed well, and that she actually worked for DEFRA now. \n\nI followed the driver with the proper sign to a limo that was some sort of big black sedan that had never seen the streets of the United States, but it worked well enough. The driver was a not the expected movie clich\u00e9 turbaned Sikh, but a taciturn Brit about my grandmother's age. We went almost all the way around the airport once and then merged into the M4 from the left, which made me nervous, as we were clearly driving on the wrong side of the road. I had heard many horror stories of London traffic, and this was essentially the late morning rush hour, but it did not take that long to reach the hotel. It overlooked the Thames, looking like something out of a Disney movie portraying the late 1800's, and I expected Mary Poppins to sing and fly her umbrella by at any moment. I had done my homework on appropriate tipping, and suffered through a bellman's rehearsed speech about the room and the hotel's services, before giving him a tip that would have bought at least two nice meals back in Austin. \n\nI hung up my clothes and put my stuff in the bathroom, and had a quick shower and a shave. \n\nElizabeth was setup in a transit van outside by the time young Mr. Roberts got to the hotel. She was stuffed into the little truck with three older male techies that placed the bugs, setup the taps on the hotel systems, maintained them, and recorded the 'take'. One often heard calls for the government to do things the \"Chinese way\" and that would have certainly made their job easier. In the PRC, certain members of the staff of almost any hotel that catered to foreigners were actually employees of the Ministry of State Security, or People's Armed Police, or PLA, or sometimes all three. The newer hotels had dedicated equipment cabinets for permanently installed surveillance gear that could be monitored remotely. Remember to smile when you shave or use the loo, world traveler. ",
        "A response came back to her request for his full file. HQ and even MI6 were still part of the 'special relationship' with US intelligence agencies, although it was bloody well a lot less special these days. Theoretically they all shared their signals intelligence data and metadata, since the correlation of seemingly unrelated items often yielded surprising conclusions and insights. Practically speaking, some things were redacted, lest they reveal ongoing operations and/or agents or turned assets inside foreign organizations, including each other's. One could often tell a lot by what was redacted and could also read between the lines when obvious data was not included. Although she had not gotten everything, she could tell that Robbie's smart phone had been connected with some folks that were on a criminal watch list, just short of full fledged shoot on sight terrorist types. It was also connected to several other folks who were redacted because they were important insiders on the American side of the pond, although she could not tell exactly who or even what agency they might be with. Plus, there was some kind of watch on his passport, but she couldn't tell who ordered that our why. One of the other passengers that Roberts had spoken to on their flight from Dallas had done some money laundering for the Russian mob, was that the connection? How had young Robbie hooked up with such characters? \n\nHer techie co-workers were much more enthusiastic about watching their surveillance targets have sex, if just to relieve the boredom. Watching some fat Russian crypto clerk with an old and cheap hooker was better than staring at a blank screen, she supposed. But when highly unusual behavior or a truly attractive woman were observed, there was often much punching of arms and hooting, and the best stories made it around the water cooler, or at least to the next few stakeouts. Recordings seldom were copied, due to the concomitant prison sentence. Some of the stories became apocryphal semi-legends, like the French government official who took on five male hustlers in a room of mirrors one night, or the Member of Lords who spent a night in Whitehall night serving Liberace's member as a highly flexible candelabrum. She heard the snorting and muttering before she looked up in to the monitor to see a spectacularly attractive young woman leaving the elevator on Robbie's floor. If there were any justice, this woman would have a room temperature IQ and the moral compass of a jackal, because she had the looks of a goddess. \n\nElizabeth had observed lots of 'sex workers' in her young surveillance career, and could usually stereotype them quickly and bin them into high end call girls, mid range escorts, or low end street hookers, and usually peg how long they had been in the business and when they were due to step down from one class to another or succumb altogether to drug addiction or an STD. This girl was almost too attractive to be a high end call girl: she might have been a model with a dope problem that had just started a 'second career'. She was classically beautiful, fresh and healthy looking, tall and big, with huge natural breasts and a very ample ass right out of a Titian painting and she veritably glowed with vitality. A call girl like that brought a premium price. She was a very, very expensive gift, which meant this young Yank might be hooked up with some very, very bad actors. The tart made her way regally to Robbie's door, head held high and ass swaying, carrying what looked like an overnight bag, and knocked. Elizabeth hated her. The facial recognition suite's first pass yielded no match to local call girls and escorts. Maybe she was new talent brought in from Poland or Hungary? \n\nThen a passport and visa match popped up: she was an American girl, one Peggy Duchenne, several years older than our Robbie Roberts, and recent honors graduate of ESU in Texas, who had just taken a job as the most junior curator of one of London's finest art museums. Elizabeth knew how just competitive the search for that pearl of an entry level job was: one of her mates from King's college had been reduced to teaching art history part time in a backwater prep school because she could not find such a job in her field. Now Elizabeth hated the big beautiful woman even more.\n\nAs I dried off, Betty Boop knocked on my door. I just love a good erotic cartoon. \"Robbie? Are you there? Could you help me? Help me out with something? More precisely can you help me out of something? I have urges you know. Urges! Perhaps I could help something out of you?\" I let her in post haste. \"Oh Robbie, I missed you something awful, and it has only been a few days!\"\n\n\"I thought about you on the flight over, Peggy. They served toasted nuts as an appetizer, and I thought 'they are warm, tasty, and salty, and they make me want more', just like you do!\"\n\nShe then affected a 'Gone with the Wind' southern American accent. \"Why you silver tongue devil. You turn a girl's head with that sweet talk, but that's just so you can have your way with her, isn't it!\"\n\n\"That's absolutely true. Guilty on all counts. Why don't you lie down on the bed and tell me about your new job, while I renew a few happy memories.\"\n\n\"You are going to take advantage of me, aren't you?\"\n\n\"Yes I am.\"\n\nShe smiled seductively. \"Well as long as we are completely clear on that point.\" Peggy spread herself across the very substantial bed, and put her arms up on the big headboard, as if they were restrained there. She certainly was a very substantial young lady. Two of the techies in the van groaned involuntarily. Robbie shucked off his clothes in an instant, and lay down next to her on the bed. Elizabeth was riveted by the sight of Robbie's bare buttocks moving as he adjusted his position on the bed. He kissed the girl for what seemed like forever: first her lips, then her neck and shoulders. Then he began to slowly remove her blouse, kissing each little area tenderly as it was revealed. \n\nAnother groan was heard from the techie types on her left. \"That is one tidy package he is unwrapping, eh?\" A breathy snort from off to her right was the only answer.\n\nSoon the bra came off, and rather than dive in, he kissed around the edges. The girl put one hand up behind Robbie's head, as if to direct it, but he moved before she could actually touch it to change its position, seemingly doing what she wanted as if there were strings connecting her fingers to his head. Her nipples were spectacularly erect and the size of very small peaches, and looked almost as ruddy and fuzzy. Just before her hand touched his head, his tongue flicked out and just barely touched one. She gasped then groaned. So did two out of the three techies in the van. \n\n\"Oh, yes, Robbie!\" She arched her back and her voice changed tone. \"Well, about my job. I have a nice office at what I thought was a very good salary, but the cost of living in London is amazingly higher than I thought. I am getting to do what I love every day, but I am also the lowest of the low in the pecking order, so I do the entire gamut of menial tasks and work the longest hours, all over the museum, and seldom in my office. But that also means I am learning the art biz from the ground up. Just looking at some of the items in the collection makes me smile every day. When something new comes in, I am the first one to see it, research it, and to learn about it. She shook her head approvingly. \"Oh yeah, um, yum!\"\n\nShe looked down at the top of his head and smiled. \"Do you remember the Greco-Roman poetry manuscript that was donated to ESU?\"\n\nAlthough his mouth was apparently quite full, he said something that sounded like \"Uh-huh. Never forget that!\"\n\nShe smiled even more widely. \"Well, besides the interesting applied research I did on you, I finished all my physical examination of the manuscript and wrote a paper on it. It is being published and will look very good on my resume, and I am going to present it in Paris at a conference this spring! Plus that ESU classics professor wants me to write another paper with him after we do more carbon dating and try to tie the content to known historical events.\" She drew in a slow breath. \"Bite them a little harder Robbie.\"\n\nApparently he did. She moaned \"Yesssss!\"\n\nElizabeth realized she hadn't ever had a conversation this interesting with any man she had dated, much less a nice looking one with such a tightly muscled ass who was actively adoring her breasts so thoroughly. That big cheeky American bitch!\n\nBy now he had removed everything but her panties, and was apparently planning to make her come with his mouth before taking them off. He was remarkably efficient at it, and her breath was soon breaking in sobs, accompanied by grunts inside the van. She spread her legs out and held them wide apart so he could put his hands under her knees. She shook and then let out a little scream, and her nipples pulsed as if they were little arterial balloons connected to her beating heart. She reached down and put her legs together briefly and pulled off her panties, and he then glued his mouth to her pussy when she opened them again, making some very appreciating and sloppy guzzling sounds in the process. She shook a little and then slid her hips down a little bit, pushing her pussy strongly into his face. He pushed against her in return, and Elizabeth could visualize his tongue sliding inside her as far as he could manage. She didn't have to visualize the girl's orgasm: she bucked and shook and gurgled in its throes. \n\n\"Oh, Robbie, that's so good! I needed that.\" She looked up at him adoringly. \"Abelard's wife, of all people, is teaching me about the social mores around the museum. She is about 30 years younger than he, which makes her about 20 years older than me; she is very connected to the social scene. She is also one of the major forces in the museum's development and fund raising efforts.\"\n\nHe moved up, presenting what Elizabeth thought an impressive erection to the girl's lips, and she gave it a very warm reception indeed. Elizabeth hoped her three co-workers did not notice that she had opened her mouth involuntarily and licked her lips. The American girl worked on him enthusiastically, and then he withdrew from her and pushed her back down on the bed. He positioned himself above her, poised for penetration. \"Do go on, Peggy. What was Mrs. Peter's advice for you?\" \n\nShe drew in a breath just before he slammed into her. She used her ample legs to push back against him as he did. \"Oh, fuck, Robbie!\"\n\n\"Your wish is my command dear!\" She giggled. Elizabeth now totally despised this evil creature!\n\n\"Well she assumed that I...Oh!\" She grabbed the headboard for stability and pushed against his thrusts with all her might, ensuring maximum penetration, and bouncing the bed violently. \"She assumed that ... I wanted to make a career of the museum, but that I also wanted to be, shall we say, 'very sexually active'.\"\n\nHe smiled down at her. \"You are certainly doing that, Peggy. You are literally rocking my world!\"\n\nShe smiled back and kept up her rhythm. \"She told me I could fuck around with artists and models and students all I wanted, but to stay clear of other museum staff, donors, and people in government. If I had a relationship with any of those types, it should be carried out as if it was being videotaped constantly.\"\n\n\"I am certainly glad to be a student!\" \n\nShe smiled widely again. \"We are certainly making quite a videotape here this morning, aren't we?\"\n\n\"Too fucking right!\" said the tech on Elizabeth's right hand side. Suddenly Robbie accelerated his rhythm and then paused briefly as the girl shook with an obvious orgasm, raking her nails on his back and buttocks. He started in on her again, and she came again in a few more minutes. Elizabeth's eyes were glued to his butt as he pumped in and out. Then he jumped up and turned the big girl over on the bed, and pulled her hips up with his hands. \n\n\"Robbie?\" the girl said, coming through very clearly on the monitor is the van \"You have always been honest with me. Will you tell me the truth now?\"\n\n\"Always Peggy, you know that!\"\n\n\"Are you going to kiss my ass?\" She sounded like she was pouting. \"I don't mean just a few little kisses on the cheeks, but rather I mean will you really get in there and go for it?\"\n\nHe laughed. \"Do you remember the first time we were together?\"\n\n\"Yes!\"\n\n\"Do you remember the last time?\"\n\n\"Yes!\"\n\n\"Do you remember all the times in between?\"\n\n\"Yes.\"\n\n\"And what did I do then?\"\n\n\"You kissed it like I always dreamed someone would!\"\n\n\"So trust me baby. I adore every lovely square millimeter of your marvelous ass. Do you remember what I did after I kissed it?\"\n\n\"Oh, Yes!\"\n\nHe kneeled down on the bed behind her and began to gently kiss her buttocks. She shamelessly lowered her shoulders down to the bed, spread her legs a bit, and pushed her ass up higher towards him. \n\nOne of her techs groaned again. \"Luvvly-jubbly, that is!\"\n\nHe stopped kissing her butt and cupped his hand hear it. \"You are a very naughty girl, aren't you? Shamelessly asking a gentlemen like me to kiss your ass!\" He spanked her, pretty smartly.\n\nElizabeth suddenly heard her own pulse pounding in her ears. She could not breathe. She actually felt herself actively getting wet. She spoke without even thinking about it. One of the techs did too, and they said it in unison: \"Smack it!\" No one looked about in the van. No one wanted to admit what had just happened.\n\nOn the monitor, Robbie was not the least bit inhibited. He continued to smartly spank that wondrous ass and it got red and the girl's breathing got very loud and very ragged. Robbie spoke slowly and seductively to her. \"Oh, Peggy! I just can't resist your bounteous butt when it's all red and warm. He used his hands now, not to spank, but to gently caress and separate her buttocks, tenderly kissing them.\n\nElizabeth wasn't sure she would respond positively to having her butt described as \"bounteous', but in any case, kissing it as enthusiastically as Robbie was would certainly go a long way toward making it better. He smacked, and sucked, and licked, and muttered to Peggy about how pretty it was. Then he clearly spread her cheeks and plunged his tongue into her ass \u2013 there was no mistaking that angle of approach. Peggy moaned, sounding almost inhuman. Elizabeth realized she had just bitten her own tongue. \n\nAfter a few more moments of fervent ass kissing, Robbie moved up and knelt behind the now frantic girl on the bed. \"I hope you are ready for me, Peggy, because I am certainly ready for you.\" He moved up next to her and entered her pussy doggy style. \"Don't be alarmed sweetheart, that's just a quick stroke to pick up a bit of your lovely lube. You know what my real target is!\" He pulled back, and pulled himself up a little taller while still on his knees behind her, and then poised with his cock just touching her anus.\n\n\"Bloody hell!\" exclaimed two of the techies, while Elizabeth hadn't the breath to speak, and then Robbie slowly moved into the girl. He tucked his chin under her neck and whispered to her. He picked up his pace and his depth. Only a few of his words came through the speakers: \"hot ass\", \"wonderful\", \"squeeze me\" and a few undecipherable phrases. The girl's words were few and far between, but loud and clear: \"fuck\", \"ass\", and \"yes, yes!\" The girl moved her hips back to get more and Elizabeth was astounded as they moved in almost perfect unison to give it to her. They came together, amazingly, to a chorus of grunts and groans inside the van. She was not sure she had not contributed. Through her accelerated breathing and hormonal storm, she found herself wondering intellectually: just how long had these two been together, anyway? \n\nHe finally rolled off of her and gathered her in his arms, kissing her face and laughing. \"How about some room service, Peggy my dear?\"\n\n\"Isn't that what I just had?\" She laughed at her own joke. \"Actually, Robbie, I want you to take me to tea!\"\n\nIt certainly was already early afternoon. Time sure flies when you are having Peggy. Robbie had endured a few high teas as both his grandmothers had tried to instill some 'high-falutin' manners in him. He supposed a five star hotel in London would serve one at least as classy as the Adolphus or The Rosewood Crescent back home. \"OK, but if all they serve are those little finger sandwiches, they had better have a whole passel of them, ma'am. Somebody has made me very hungry.\" He smiled. \"But I cannot tolerate clotted cream!\"\n\nHe luckily had his grandmother's recommended outfit for winter tea packed with him: navy blue blazer and dark grey slacks, and his mother had supplied a muted pink Nordie's dress shirt from their shopping trip yesterday. He would be the ever casual American and dispense with a tie. It was grey and cold outside, do the tea would certainly be held inside at this time of year. Peggy added a dark grey and very demure jacket looking thing over her low cut light grey dress, but he could still be pretty confident that few of the women and none of the men would be looking at him. They rode down in the elevator and Robbie kept his hand on the small or her back possessively. She beamed at him like she had at the cabrito restaurant in Austin when he made it plain to her that he wanted everyone to know she was with him, and she had done likewise. They were seated quickly, despite the lack of reservations, and as Robbie perused the menu, he was able to eliminate all of the champagne choices. He did not notice the forty-something gentleman that was seated near them a few minutes later, nor that his briefcase sitting the chair beside him was oriented so that the little hole in it was pointing at their table. \n\nThe waiter took note of his growling stomach, and inferred a special selection was required, and put together a combination of smoked salmon on toast squares, cinnamon scones, and the inevitable finger sandwiches, along with some orange juice and some very nice hot tea. There were a lot of those little sandwiches, and he could only identify the contents of about half of them, but they were quite filling by the time he approached the two dozen mark. They waiter barely gave Robbie a sideways glance as he brought Robbie a third plate of sandwiches, earning himself a nice tip, and Peggy had a little salmon, but then marveled at each of the delicate little pastries she tried. Robbie thought they were much nicer than Bob the Knob's electrolyte laced jelly envelopes would have been, and they finally silenced his stomach. His brain was now main lining the glucose. The scones were not as good as his grandma's, but then they didn't have access to the pecan crop that she did, either. If the football games he had attended with Lara's dad's company entourage were any indication, dinner tonight would be very late in the evening, and after a lot of cocktails were put away, so he was glad to fill his hollow leg now.\n\nPeggy was very much at ease here and carefully scanned the salon for interesting people. \"Mostly tourists today, it looks like.\"\n\n\"Are you scanning for museum donors?\"\n\nShe cleared her throat. \"Well, yes, but also just for interesting people in general. While you are off at dinner, I have to attend a donor reception at the museum. The more junior you are, the more important it becomes for you to schmooze potential donors. Abelard's wife told me it is an unwritten rule that you have to recruit and bring new donors to the museum to move up the management hierarchy.\"\n\n\"Sounds just like ESU!\"\n\n\"Do you know where you are going tomorrow, Robbie?\"\n\n\"Well, sort of. A pickup outside the hotel at 6 AM, followed by a tour of some construction sites, supposedly including one in the North Sea, and then Abelard's company headquarters in someplace called Watford. I don't know how long all that will take.\"",
        "\"Watford is in Herts not that far from here, about an hour by car, but the North Sea certainly is a different proposition! So there is no telling what time you might get back to London?\"\n\n\"Not that I know of, and I think there is another dinner planned tomorrow night. I'll let you know the schedule as soon as I do.\"\n\n\"Well, it's really not a problem. I am going to get a few hours of sleep in my flat tonight, and then go into the museum early to work on the new intakes and my inventory update. I'll either be there or with you. I want my masters to know that I am dedicated to my profession, but a girl needs some relaxation, and I don't want to miss a minute of your being here that I don't have to. Just let me know?\"\n\nThey finished up their tea and made their way back to Robbie's room. When they closed the door, Peggy put a finger to her lips to stop what Robbie was about to say, and spoke as Betty Boop again. \"You have helped me discover some things about myself, Robbie. My urges.\" She smiled seductively and knelt down before him. \n\n\"When you take me to high tea, and act like you are proud to be seen with me, and all those people see me with you, it makes me feel, it makes me feel....\"\n\n\"Good?\" he asked. \n\n\"Bad!\" She said. \"Like the bad girl I really am!\" \n\nThey spent the next two hours completely entangled, and the surveillance team almost got neurotransmitter fatigue watching them. Elizabeth, in part to distract herself, had begun to run some correlations on what they had overheard at tea. The most likely \"Abelard\", in fact the only one she could find any connection to with that first name, was a certain Mr. Peters who was on the board of the museum where the girl worked, and also the Chairman of Tier Group, a giant multinational construction firm based in the UK. Quite a coincidence: she dispatched some HQ bots to crawl on those connections for a while. \n\nPeggy showered and changed into another outfit. It was cut like a 'basic black dress' but designed for a woman with Peggy's very ample figure, and it was a deep dark purple, not black. It had a conservative and relatively high neckline, but was cut to emphasize her breasts, and Robbie found himself, despite his recent wonderful familiarity with them, with a desperate desire to see that high neckline drop a little lower. She departed for her reception in a London cab, just as the same old Brit driver showed up again on Whitehall Court and I got in and said hello with no response. We made a quick circle around the hotel and then drove along the north side of the river for a while, passing a cluster of tall buildings on the left, and then approached what looked like a sizeable bend in the river. After going around a landscaped circle (the wrong way on the wrong side!) he pulled up at a Four Seasons hotel that looked remarkably like some of the apartment buildings near the river in Austin. The driver spoke, for the first time, and said \"Westbury Circus, Quadrato restaurant.\" (I had, at that instant, hoped it would therefore prove to be 33% better than Trio at the Four Seasons in Austin, which I had been to with Lara and her father. It was not.) He added that he would pick me up again at ten, at this same entrance. I went in, found the place, and was shown to small private dining room. Barry Fermy waved at me through the open door. \n\n* * * * *\n\nIt was a sunny early afternoon in central Texas, and there was a very uncomfortable silence in the car as Carmencita drove Dwight to the airport in San Marcos, where he said he would be picked up. By one of those lavish USDA jets, huh? She had almost told him take the shuttle to San Antonio, but he said the pilot preferred San Marcos for a quick landing and pickup. For all she knew, he might be full of crap and would be taking a cab to the bus station just after she left the FBO. She had met and picked up several patients who arrived in air ambulances here before, and she knew there were only two places a private plane could be coming to. One was big and fancy, with lots of pretty private jets and small prop planes, and the other one was big and plain, with lots of big military looking planes and people hanging around. \n\nDwight had heard back from his bosses almost instantly, but they responded only with instructions for his pickup at a local FBO, and some recognition and read back codes to exchange with the pilot before he got on the plane, alone. When they arrived at the FBO, he saw the aircraft \u2013 one of the little four-seaters that even he had to duck his head in. But he was still surprised they even sent a jet for just him \u2013 usually he was booked two stop commercial in a middle seat going to BWI while the bigwigs went to DCA. \n\nCarmencita had to admit it was a private jet, with no discernible markings other than a tail number, but it was very small, and it looked brand new. Dwight tried to kiss her but she turned her head. \"I will be in touch as soon as I can\" he said stoically, and then he went up the little fold down air stair, which immediately folded up. The door closed and the jet rolled briskly onto the runway and took off like a little rocket, there apparently being not too much traffic to be ground controlled at San Marcos. But it did seem to her that as the aircraft climbed and turned off the runway heading it turned west, not east. What really was the deal with this guy?"
    ],
    "authorname": "conanthe",
    "tags": [
        "oral",
        "sorority",
        "anal",
        "four seasons",
        "spanking",
        "london",
        "anilingus",
        "bdsm",
        "group sex",
        "texas"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-23"
}