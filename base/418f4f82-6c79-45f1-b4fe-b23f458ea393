{
    "title": "Christmas in Zonei Pt. 09",
    "pages": [
        "\u00a9 Copyright jvaughn, 2014, 2015. All rights reserved. Copyright violators will be prosecuted to the fullest extent of the law. \n\nAuthor's Note: As usual, I've underestimated how long it will take me to write something and how long it will end up. I'd thought this would be nine parts total, but there will be at least one, probably two more submissions after this one. \n\nI hope you're enjoying my story. I'd love to hear your thoughts on it, and please don't forget to vote. \n\n-Jay \n\n***** \n\nChapter Fifteen \n\nKim stifled a groan as he stretched his aching limbs and rubbed circulation back into his hands and feet. His jailors had finally released him from electronic paralysis. \n\nHe had never been so terrified in his life as when he'd woken up unable to move and hooked to a machine. If it hadn't been for his mindlink with Raeden, he might have gone insane. Now, however, although he was still worried about their future, he was too physically uncomfortable and emotionally exhausted to be terrified. \n\nGary offered a hand to help him off the table. He refused at first, but when he stumbled and almost fell as his wobbly legs tried to support him, he grabbed Gary's arm. \n\nGary and Boris were happy that they could go home soon; Kim had caught that much of their thoughts without really trying. Apparently Kim and Raeden were being transferred somewhere else so they were finally getting off duty. Kim had tried to discover more information from Gary's mind, but he didn't seem to have any details. He only knew that they were leaving soon and that Raeden would be transported in an unconscious state to avoid any mishaps. \n\nSince Kim had been into Gary's mind a few times, he found it really easy to pick up his thoughts. Now he was surprised to catch a random thought from Boris. \n\nWow\u2014he's tiny! How could I possibly have been afraid of him? \n\nKim's temper flared as it always did when people commented on his small stature. Because I can kill you with my mind! Kim thought, and then he was horrified with himself. Could I really kill someone? Would it be possible to take control and stop a person's heart or something? Kim shuddered. I'm as much of a monster as Raeden's lizard man. \n\nFortunately, Kim didn't have time to ruminate on his new abilities. He was too busy trying to keep his feet under him. His legs felt like ten thousand needles were poking into them and his head was swimming dangerously. \n\nAs he leaned on Gary, he picked up on the other man's admiration for his small form and his desire to see Kim again in a non-work situation. His main focus, however, seemed to be on taking care of Kim's needs so he could go home. If he had been too lustful, Kim would not have been able to hold onto him for support as he shuffled slowly to the bathroom, and he needed the support. \n\nLuckily, the bathroom was close. When they opened the door to the hallway a rush of warm air greeted them. The bathroom was just steps away and the corridor was empty. \n\nKim was much relieved to see that his clothes were piled neatly on a chair in the single-person, windowless bathroom. He was further relieved when his escorts allowed him to go into the bathroom on his own, taking up a station just outside the door. \n\nHe took his time using the facilities, washing his face and hands, and then swiping at his chest and pits with a paper towel. By the time he was done putting on his clothing with trembling fingers, he was a little steadier on his feet. He still felt light-headed, but he thought that was probably from lack of food. His stomach was so empty it ached. \n\nHe stared at himself in the mirror. In spite of the enforced sleep, he looked exhausted. Shadows darkened the skin under his eyes, made more noticeable by the pallor of his face. His eyes were dull and heavy-lidded. Tendrils of dark hair had escaped his messy braid and swirled in disarray around his face. He was just about to undo his braid, finger comb his hair, and rebraid as best he could when a pounding on the door caused him to jump. \n\n\"What the fuck's taking you so long?\" Boris yelled. \n\nKim sighed and tucked an errant strand of hair behind his ear. The braid would have to wait. If that meant he could be with Raeden sooner, though, he didn't care. \n\nBoris and Gary escorted him down a long, white corridor, finally stopping to knock on a closed door. It was opened by a tall, red-haired woman who smiled broadly at him and bid him enter. \n\n\"Thank you, gentlemen. Please let me know as soon as everything is ready,\" she said to Gary and Boris, before closing the door in their faces. \n\nKim found himself in a small non-descript waiting room. The red-haired woman was the only other person there. She turned to face him, looking him up and down as if cataloging his physical details. \n\nHe did the same to her. She had wide, intelligent eyes, a prominent nose, and full lips. Her eyes were kind and her smile seemed genuine; nevertheless he guarded his mind carefully, getting the wind ready in case she attempted an assault. \n\n\"Hello, Kim. My name is Michelle. Dr. Michelle Granger.\" She put out a hand and Kim shook it. Her hands were warm and her grasp was firm. \"I am the mod specialist who worked with Raeden and Lyzel.\" \n\nKim remembered the name and that Raeden liked her\u2014had been asking for her. He relaxed fractionally. \"Where's Raeden? When can I see him?\" \n\nShe smiled again and nodded slightly, as if mentally checking a box. \"He is being prepared for transport. We'll be leaving shortly for CorpSci headquarters. As soon as we're there, I'll wake him up and you can reunite.\" \n\nThank God for that! Kim's desire to see Raeden overshadowed even his raging hunger. \n\nHe wondered if things were going to be better for them in the Corporate Science headquarters than they had been at CorpSec. They couldn't get much worse, he thought. Then a vision jumped into his head of himself in a giant rat cage, complete with exercise wheel, an evil-looking scientists peering at him through the bars while he readied a giant syringe. Oh hell! I can't think like that. He resisted the urge to try to read Dr. Granger's mind. Not only was it probably considered very rude\u2014a violation\u2014but he had no way of knowing whether or not she had any telepathic talent or training. The last thing he wanted to do was give himself away. \n\n\"How are you feeling?\" she asked. \"I've heard they haven't been treating you very well while you've been here. \n\nKim suppressed a snort. \"I'm okay. A little shaky. I'll be better once I see Raeden.\" \n\n\"Have a seat while we wait,\" she said, indicating one of the comfortable-looking chairs. \n\nAs he sat down, Kim noticed a protein bar and a sports drink on a small table next to the chair and immediately his mouth began to water. \n\n\"Go ahead and eat.\" Michelle nodded at the food. \"We'll find you a real meal when we get there, after Raeden's awake, but maybe this will tide you over until then.\" \n\nKim could not get the packaging off the protein bar fast enough. He devoured it with such speed it was embarrassing. \n\n***** \n\nRaeden felt like he was swimming in mush. He fought his way toward the surface, heaviness pressing down upon him, making it impossible to open his eyes. \n\nHe slowly became aware of his arms and legs. Instinctively he stretched them and sharp pain shot through his limbs. He heard himself groan as he automatically started to morf. Whatever was wrong with him physically would heal much faster if he were in his lizard form. \n\nRaeden? \n\nKim was calling him and he was close. Then Raeden smelled his warm scent and his libido kicked in. Mate! \n\nThere was another human there too, Raeden's senses told him. Female. Dr. Granger, he identified by scent. He relaxed a fraction. His lizard form was familiar with Dr. Granger. She had never done anything to cause him harm. \n\nHe opened his eyes and sat up slowly. He recognized his surroundings: he was in one of the SciLab's examining rooms. Kim was standing in front of him, just feet away, staring at him in awe. Dr. Granger was standing back, but she was beaming at him. \n\n\"Hello, Raeden. It's great to see you,\" she said. \"It looks like you got your abilities back.\" \n\nRaeden took a quick inventory and realized he wasn't injured, just incredibly stiff, a tad achy, and ravenously hungry. He immediately morfed back into his natural form, lest he start hunting for the bugs and rodents he could smell nearby. \n\nKim's eyes widened as he watched Raeden's transformation. Raeden established their mindlink and didn't sense any disgust or revulsion on Kim's part, only wonder and admiration. And ... love? \n\nOnce he was fully back to himself, which only took a few seconds, Raeden smiled at his mate. Kim! It was so wonderful to be near him again. It seemed like he'd been stuck on that cold table forever. \n\nKim's face broke into a grin, his eyes dancing with joy. Raeden's heart skipped a beat. This was the first time he'd ever seen Kim smile and the young man was stunning. The worry fell away from him and pure happiness shone from his lovely eyes. His skin seemed to glow and the smile made his cheekbones even more prominent. \n\nRaeden opened his arms wide. \"Kim,\" he said aloud. \n\nKim stepped into the circle of his arms, burying his face in Raeden's chest and wrapping his small arms around his neck. \n\n\"Oh god, Raeden! I've been so worried about you.\" \n\nRaeden took a deep breath, scenting his mate, assuring himself that the smaller man was not injured or in distress. The lingering scent of antiseptic hung over both of them, but underneath he could smell Kim, warm and slightly herbal and definitely in need of a shower. The scent was intoxicating. \n\nHe pulled Kim up onto his lap and the younger man immediately molded against his body. Raeden felt he could not get close enough to Kim. He wrapped one arm tightly around Kim's torso while he ran his other hand soothingly up and down his back, soaking in the closeness of his mate. \n\nAre you alright, Little One? They didn't hurt you did they? \n\nThey tried to read my mind, Raeden! They brought in a woman who had abilities. \n\nA thought-seeker! Raeden's alarm spiked. He wrapped his fingers in Kim's messy braid and pulled his head back gently so he could look into his mate's exotic eyes. What did they find out? Dread had a vice-grip on his heart, but Kim didn't look or feel overly distressed. \n\nThey know about our mindlink, Raeden. I'm sorry. I got distracted and she found that memory. But I don't think she discovered anything else. I was so hungry and uncomfortable that it was easy to let those thoughts and feelings cloud my mind. \n\nWell, they would have found out about our mindlink sooner or later anyway, Raeden assured him. I'm very impressed that you were able to avoid further invasion into your thoughts. You have an extraordinary ability, Kim. \n\nKim sighed in contentment and his warm breath ghosted over Raeden's cheek. Raeden zeroed in on Kim's plump lips. Desire slammed into him and he crushed his mouth over Kim's, forcing his tongue inside and drinking in Kim's flavor. Kim's tongue dueled with his and small, muffled whimpers began to pour from the other man's mouth, flipping all of Raeden's switches. \n\nSo good. So good, Kim moaned over their mindlink. \n\nRaeden was lost, overwhelmed by the devastating sweetness of his new mate. He could have kept going, wanted to keep going, never wanted the kiss to end, but he heard a rustling across the room and the spell was broken. \n\nDr. Granger is here, Kim said, pulling out of the kiss, breathless. \n\nYes, I know. Raeden inhaled deeply, mentally shaking himself, trying to focus on the real world again. He glanced across the room. Michelle had taken a seat on a stool and was typing into a portable keyboard, undoubtedly taking notes about their interactions. \n\nRaeden slid off the table, pulling Kim onto his hip, supporting the slight man easily with one arm. Kim seemed content to wrap his legs around Raeden's torso, his arm around Raeden's shoulder. \n\n\"Did you know you have rodents in the building?\" he asked. \n\nMichelle looked startled for a moment and then she let out a small laugh. \"There are rats and mice in the lab on the next level down.\" She continued to smile as she looked him up and down. \"I see you've regained all of your abilities.\" She glanced meaningfully at Raeden's crotch. \n\nRaeden looked down and realized that he was still completely naked. His cock was fully hard, standing stiff and proud away from his body, the head swollen to a deep red. Kim noticed at the same moment and Raeden felt a shiver of unease run through him. \n\nIt's okay, Little One, he soothed. I won't hurt you. I will never hurt you. \n\n\"Do you have any clothes for me?\" Raeden asked the doctor. \n\nMichelle nodded toward a closed door. \"There are some sweats, a T-shirt, and flip-flops in the bathroom for you. It's all I could come up with on short notice. I hope they fit.\" \n\n\"Oh, thank god!\" Raeden said as he headed for the indicated door. He paused in the doorway and looked at Kim, still in his arms. \"Will you come in with me?\" \n\nKim's unease had lessened, but he still seemed hesitant. \"If...if you don't mind,\" he said. \n\nRaeden grinned. \"I never mind having you with me, Little One\u2014especially when I'm naked.\" \n\n\"No hanky-panky in there you two!\" Dr. Granger called after them as Raeden closed the door. \n\n***** \n\nMichelle smiled to herself as she typed notes into her device. Raeden had most certainly rebonded\u2014and with a male! They are so hot together! \n\nFocus, Michelle, she chastised herself. \n\nIt was incredible. She wanted to know all the details of their relationship: how they met, how they got to know each other, what had happened to make Raeden morf. Maybe there was hope for other mods who had lost their mates. It was rare to lose a single from a warrior pair, but when it happened the biggest tragedy was the one who was left behind. \n\nShe had worked closely with Raeden and Lyzel. They had been one of her favorite warrior pairs. Lyzel had been beautiful, inside and out, bubbling with life, happy, inquisitive, and spontaneous. Raeden had grounded her without clipping her wings. He was more somber. He saw the bad in life as well as the good. He was a big picture person. Contemplative and sometimes moody, he was also capable of letting go and enjoying life immensely. He was deeply loving and caring and attentive to his mate's every need. They had complemented each other perfectly. \n\nIt would be interesting to observe Raeden and Kim together. Kim was as lovely as Lyzel had been and tiny as well, but there the similarities seemed to end. So far she had observed that he was quiet, serious, and very reserved. Raeden seemed to bring out his joy in life, which was an odd twist because that's what Lyzel used to do for Raeden. \n\nSo the new mate does not necessarily have to be like the lost mate. \n\nShe had created a list of questions for them and she couldn't wait to find out the answers, to start putting the together the puzzle of Raeden's miracle. She knew they needed rest and time alone together after their ordeal. And it was Christmas Eve. She herself wanted to get back to her family. She had a flight scheduled for early evening to G-Zone where she would rejoin her husband and children. They were spending the holidays with her in-laws. \n\nShe would take a few hours now to interview Raeden and Kim so that she'd have information to go over and ponder during her vacation. She would come back after New Years with a research plan for determining how a mod could rebond. She went over her questions, refining some and adding a few more. \n\nPresently Raeden and Kim emerged from the bathroom, Kim walking on his own now, but close to Raeden's side, holding his hand. Their faces were flushed and their lips kiss-swollen. She refrained from looking at their crotches. She didn't want confirmation on whether they did or did not have sex in the bathroom. \n\nShe stood. \"I've ordered lunch for us. It's being delivered,\" she said, leading the way out of the small exam room and down a long hall. Christmas lights twinkled around every doorway, and all available wall space displayed a wreath or a star or some other Christmas bauble. Their receptionist, Randy, had gone overboard on the decorations this year. \n\nShe glanced behind her to see Kim goggling, his wide eyes jumping from one decoration to the next. \n\nHer office had an amazing forty-second-story view of the surrounding city and the hills beyond. The furniture was Corporate-issue, sleek, modern, and utilitarian. She would have preferred something more old-world, in real mahogany or cherry, but that hadn't been an option in the corporate catalog and she'd decided against spending her own money on office furniture. \n\nShe had picked out the fabric that covered the couch and chairs, however: a rich, aubergine jacquard. She had eschewed the corporate lighting in favor of her own eclectic lamps, which featured African animals carved into the wooden bases. There were colorful, jungle-theme prints on the walls, and an abundance of greenery\u2014ferns, palms, peace lilies, and prayer plants\u2014brought the room to life. \n\nHer office had not been immune to Randy's decorating whims. Christmas lights encircled the large window, garlands snaked across her credenza, and a very large snowman cutout had taken up residence in the corner of the room, leering maniacally at them with his coal-piece eyes and raisin mouth. \n\nShe led the way to the sitting area in front of the massive windows. Turning to offer her guests seats, she was startled by the look on Kim's face. His eyes were as big as saucers, staring out the window. His mouth parted slightly. He moved forward slowly as if completely unaware of his surroundings. \n\nRaeden, watching him with amusement, led him to the window. \"You've never seen the city?\" he asked. \n\n\"No. Not like this,\" Kim replied, his eyes sweeping the view, face still full of astonishment. \"It's amazing. I didn't realize it was so big. And you can see the area outside the city. I've seen glimpses of the hills, but I didn't realize...\" He leaned forward, putting his face near the glass and looking from one side to the other. \"The land goes on forever!\" \n\nRaeden chuckled. \"Did you expect it to just stop?\" \n\n\"Well, no but ... I just didn't imagine it would look like this.\" \n\n\"You've never even seen pictures?\" Michelle asked. \n\n\"Well, yes, of course. On the infonet. But they don't do justice to the real thing at all.\" Kim's voice was exuberant and when he turned to look up at Raeden his eyes shone with excitement. \n\nRaeden laughed and hugged him from behind affectionately. \"Shall we sit?\" he asked. \"There is a good view from the couch as well.\" \n\n\"Oh, yes, of course,\" Kim said, suddenly seeming embarrassed by his display of naivety. \n\nRaeden led Kim to the seats and sat down, his massive bulk taking up most of the couch. He pulled Kim into his lap. The smaller man squirmed for a few seconds, as if he wasn't used to sitting on Raeden's lap, then he settled, leaning his head against Raeden's shoulder and wrapping an arm around behind his back. Michelle, ever observant, caught his small sigh of happiness. \n\nThe two of them were quiet as she went to the small refrigerator and pulled out bottles of water for all. Seeing their intent expressions, she guessed that they were carrying on an animated conversation over their mindlink. \n\nJust as she finished passing out the water, her intel vibrated. Answering it with a flick of her finger, she was informed that her pizza had arrived. ",
        "\"I'll deliver it to your office if you let me have a slice,\" the receptionist bargained. \n\nMichelle laughed. \"Randy, you eat more than people twice your size. How you manage to stay so skinny is one of life's big mysteries. But, yes, you've got yourself a deal. Only one piece though. Raeden is ravenous.\" \n\nShe turned to Kim. \"I hope you like pizza. I got two of them. One is half cheese, half vegetable. The other is a meat combo that I know Raeden likes. I also got a Caesar salad.\" \n\n\"I've never had pizza,\" Kim said shyly, \"but I'm sure it will be fine. I've always wanted to try it.\" \n\nBoth Michelle and Raeden goggled at Kim. \n\n\"How did you make it to twenty-years old without ever having tried pizza?\" Raeden asked. \n\nKim shrugged, looking embarrassed. \"Zonei,\" he said by way of explanation. \n\nMichelle knew that citizens in the lower zones lived in extreme poverty but to have never tasted pizza? For some reason that thought was unsettling to her. Such disparity. \n\n\"What else would you like to drink?\" she asked. \"I've got coffee, tea, soda, juice, beer and wine. I could mix a cocktail too, if you're so inclined.\" \n\n\"Ooo! Beer, please,\" Raeden said. \n\nKim shot him a sharp look and they seemed to have a silent argument. Kim finally said, \"I'll try a beer too\u2014something else I've never had.\" \n\nMichelle raised an eyebrow but said nothing. It was definitely going to be interesting to get to know Kim. She had never really spoken with anyone from the middle zones. \n\n\"Lager or ale?\" she asked, checking out her beer selection. \n\n\"Ale, please,\" Raeden answered. \n\nKim looked befuddled for a moment, glanced at Raeden, and then said, \"Lager, please.\" \n\nMichelle smiled as she fetched the beers, deciding uncharacteristically to have one herself. After all, it was Christmas Eve. \n\nIt turned out Kim didn't like beer, neither the lager nor Raeden's ale which he also tried a sip of. He loved the pizza and the salad, though, and both the men ate ravenously, until there were only two pieces left. She slid them into a sealable, plastic baggie for them to save for later and didn't miss that Kim eyed the baggie curiously. They don't have baggies in the lower zones? she wondered. \n\nAs soon as they finished eating, she prepared to interview them. She was just about to start when her intel buzzed. \n\n\"Yes, Randy?\" \n\n\"Doctor Granger!\" Randy's voice was high-pitched with excitement. \"There are CorpSec security guys on their way to your office! I couldn't stop them! They\u2014\" \n\nWhat now? That Captain Hernandez is a piece of work. Who knows what scheme he's concocted to get them back? She had already informed her boss of the entire situation and was fairly confident that they had a good bargaining position. \n\n\"It's okay, Randy,\" she interrupted. \"I'll deal with them.\" \n\nChapter Sixteen \n\nSpecialist Casey McNeil raised his eyebrows as he saw the name emblazoned on the building where their wayward pickup was hiding: \"Corporate Science Headquarters.\" He had been astonished to discover that this morning's pickup, who lived in Zonei and only had clearance through Zonee, was somehow in Zonesee. Now he stared in awe at the gleaming silver monolith that was the home of the Corporation's science department. \n\nThis morning's job had seemed routine at first. Easy. The subject was a short, slight Japanese American who, until he had illicitly used Representative Kenner's computer for his own means, had never put a toe out of line. Poor schmuck, he had thought. He was probably just trying to discover the secret to solving the latest video game. \n\nPicking up those who were deemed a threat to the Corporation and delivering them to CorpSec Detention Center was his job. It was a horrible job and one he was increasingly loath to do, but he didn't have any other options. It's not like he could quit and find another job. The world didn't work like that anymore. And even though living in Zonegee wasn't luxurious, it was worlds better than whatever lower zone he'd be tossed into once he was no longer useful to the Corporation. \n\n\"Holy shit! How the fuck did the little fucker get in there?\" his partner, Brad, asked. \n\nCasey shook his head. \"No idea. I guess maybe he's not as much of a non-threat as he seemed at first.\" \n\n\"They're all guilty,\" Brad said. \n\nCasey disagreed. It seemed that more and more often they were picking up average citizens who he couldn't imagine being a real threat to the Corporation. Maybe Brad just needed to convince himself of their guilt in order to sleep at night. Heaven knows, Casey hadn't had a good night's sleep since he'd started this job almost two years earlier. \n\n\"Let's just get this over with,\" he said. Although he and Brad were low-level CorpSec employees, they had clearance to go anywhere except Zoneay or Zonebee to perform their job. It was rare to have a pickup in Zonesee and this was the first time he had ever fetched someone from a zone for which the pickup didn't have clearance. He wondered how the hell Mr. Takemoto had gotten in and who could possibly be hiding him in CorpSci headquarters. \n\nCorpSci seemed to have a deep-seated fear and mistrust of CorpSec\u2014well deserved in Casey's opinion\u2014and they were detained right off when they attempted to cruise through CorpSci's security. They were obviously heavily armed, but their uniforms and badges, usually an immediate pass in, were not enough for the stern matron who manned the security scanners. She made them cool their heels for nearly twenty minutes while she checked and rechecked their references and then conferred with one of her superiors. \n\nEventually she had to let them in, though. It was the law. They had every right to pick up citizens who were a threat to the Corporation. \n\nOnce in, they got the runaround from the man who sat behind the information desk. He insisted that there wasn't anyone by the name of Kim Takemoto in their building. He was not in the official registry of visitors for the day. The man did a quick scan and declared that, in fact, he had never visited CorpSci Headquarters. He assured them that they were mistaken. \n\nBy this time Brad was losing his temper and things might have gotten ugly if Casey hadn't just hauled him to the elevator. \"If he was smuggled in, then he wouldn't be on the visitor's list. We can just find him through his intel.\" \n\nThey got off the elevator a floor below where the subject was located, but quickly discovered their mistake and took the stairs up one more level. There a very cute and obviously gay receptionist attempted to detain them. Casey wouldn't have minded flirting more with the young man\u2014maybe even getting his number\u2014but Brad was out of patience and went charging down the hall. \n\nCasey followed reluctantly. \n\nThey paused outside the door to the office where the GPS locator said he was hiding, pulling out their guns and double-checking that they were set to stun. Then Brad pushed the door open and they quickly trooped in. \n\nThere were three people in the room and he located their quarry immediately. He was standing behind the biggest man Casey had ever seen. The third person in the room was a tall imposing redheaded woman who was standing in front of the other two. The expression on her face was like a thundercloud about to let loose with the storm of the century. \n\n\"Kim Takemoto,\" Brad began. \"You are under arrest for crimes against the\u2014\" He broke off what he was saying and his mouth dropped open in amazement. \n\nThe huge man was changing. Before their very eyes he grew bigger. The color of his skin started to darken and the shape of his face changed dramatically. Oddly, he whipped off his sweats just as a huge tail emerged behind him. Suddenly they were no longer looking at a man, they were looking at a monster. \n\nThe small Japanese man quickly scrambled onto the monster's back and peered at them over his shoulder with wide dark eyes. \n\n\"Holy shit!\" Casey said, not even aware that he was speaking. His heart started thundering in his ears as he automatically raised his weapon. He had heard of mods but had never seen one. He was obviously looking at one now. He couldn't believe his eyes. \n\n\"Don't you dare!\" the flame-haired woman cried, stepping between them and the monster. \"Captain Herandez and I had an agreement. He can't send his goons in here to sweep them away. It doesn't work like that.\" \n\n\"Ca\u2014Captain Hernandez?\" Casey stammered. The captain was his boss's boss's boss. Adrenalin was racing through his system. His body was ready to fight. It made it difficult to focus on a conversation. \n\nBrad seemed to recover himself first. Using his intel, he projected a holographic image of the official arrest warrant. \"An arrest warrant has been issued against one Kim Takemoto.\" He glared at the smaller man who was still on the monster's back. His eyes were huge in his finely boned face. \"Mr. Takemoto, we have been granted the authority to use all necessary force to bring you in for questioning. Will you come with us willingly or do we have to do this the hard way?\" \n\nThe red-haired woman snorted. \"You may have the authority, but you certainly don't have the means to bring down a warrior pair. If you try, you will dead in two seconds flat and there won't be anything I can do to save you.\" \n\nMeanwhile the monster let out a low growl that raised the hair on Casey's neck. This was definitely far beyond any experience he'd had thus far in his career. \n\nHe caught Brad's slight movement out of the corner of this eye and realized his partner was about to fire his weapon. \n\n\"Hold, Brad!\" he said, but he was too late. His partner fired a shot over the red-haired woman's shoulder. The monster moved so fast that he wasn't even visible. A great roar reverberated through the room. \n\n\"Raeden, calm down. I can fix this,\" the woman said calmly. Why she was not cowering in fear, Casey couldn't imagine. She wasn't even armed and she had her back to the creature. \n\nIt appeared that the stun had missed him, or if it had hit him, it'd had no effect. \n\nBrad raised his weapon again. This time Casey responded more quickly. He dropped his own weapon and practically tackled his partner. \n\n\"Brad, stop!\" he cried as he grabbed the other man's arms. He held onto them and looked his partner in the face. \"We have no idea what we're dealing with here. Let's get more information before we do anything rash.\" \n\nBrad was clearly angry. He's never been thwarted during an arrest before, Casey realized. They had had pickups resist\u2014many of them resisted\u2014but they were always easy to subdue. This time it was clearly not the case. \"Brad, the stun didn't work on him. It makes no sense to try again.\" \n\n\"I'll set it to kill,\" Brad growled. \n\nCasey kept a tight hold on his partner's arms. All the while they were talking, a low ominous rumble reverberated throughout the room. Casey had his back to the monster as he talked his partner down and that made him extremely nervous. \n\n\"Brad, if you accidentally kill the woman, it would be the end of your career\u2014probably even the end of your life as you now know it. She's obviously very high up in CorpSci. I mean, just look at this office! Besides, we don't know what we're dealing with. Even set to kill, your gun might not have any effect on the creature. Let's just talk for a minute and see if we can get this resolved without violence.\" \n\nBrad glared at him. Casey met Brad's eye, taking deep steady breaths, willing his partner to calm the fuck down. \n\nJust then there was a loud thump. Both of them jumped and Casey whirled to face the danger, regretting that his weapon was now on the floor. \n\nThe monster was pacing back and forth behind the woman, clearly agitated. He was difficult to see\u2014it seemed he blended into the background somehow, but Kim was visible on his back. The creature's massive tail swished to and fro with lightning speed. The couch sat at a cock-eyed angle and the lamp on the table next to the couch rocked dangerously before it settled. Brad realized that the thump they had just heard was likely the creature's tail hitting the couch. He noticed that his hands ended in long sharp talons. \n\nHe could turn us into minced meat in two seconds flat, Casey realized. That's likely what the woman was talking about. \n\nCasey addressed the woman, as she clearly seemed to the one in charge. \"We have a warrant for Mr. Takemoto's arrest. It is legal and binding. We may not have the means to remove Kim right now, but with a phone call I'm sure we can get enough firepower to subdue your ... mod. You might as well send Mr. Takemoto with us now to avoid further violence.\" \n\nThe monster let out another hair-raising growl. \n\n\"What is it that Mr. Takemoto is accused of?\" the woman asked. She seemed calm, but it was the kind of calm that happens before a storm. \n\n\"He illegally used a computer with a higher security clearance than he is allowed. We don't know what information he pulled off of it because he managed to erase his tracks. CorpSec wants him for questioning.\" \n\nThe monster had stopped pacing, and now the woman turned and addressed the man on his back. \"Is this true, Kim?\" \n\nThe Japanese man answered in a small voice. \"Yes. I couldn't find any information on mods and I needed to find out more about Raeden. Opportunity came my way\u2014the representative's feed to CorpSec went down so my actions were untraceable\u2014so I did a quick search.\" \n\n\"Is that all?\" the woman asked, rolling her eyes. \"The fact that CorpSec even attempts to keep information on mods secret is a testament to their lack of intelligence. Everyone has heard of mods. Most people already believe in their existence. Quite a few people have actually seen mods. As more and more mods are created and integrated into society, there is no way they can continue to keep this secret. It's ludicrous.\" \n\nShe turned back to Casey and Brad. \"So your orders don't come directly from Captain Hernandez? This is just a routine pickup for you?\" \n\nWell, this is anything but routine. Casey didn't voice that thought. \"This was on our roster of jobs for today,\" he replied. \"I don't think Captain Hernandez is personally involved, but I couldn't say for sure.\" \n\n\"And what needs to be done to get the arrest warrant cancelled? You won't be able to remove Kim from Raeden's side and I don't think you want to take the mod with you.\" \n\n\"Uh, no,\" Casey said, eyeing the creature. He was easier to see now that he was standing still. He was standing too still. His eerie golden eyes bore into Casey with an intensity that sent a shiver down his spine. He looked like a predator ready to pounce on his next meal. \n\n\"Um, I'm not really sure how to get an arrest warrant cancelled. I'd have to call my boss.\" His boss was an idiot who saw everything in black and white. If they brought their pickup in it was a success. If they didn't it was a failure, regardless of the circumstances. They were screwed. \n\n\"Why don't I call Captain Hernandez instead?\" she suggested. \n\nCasey really didn't want anyone that high up involved in this fiasco, but she seemed to know the captain. Maybe things would work better that way. \"Whatever you think is best,\" he said with a sigh. He hoped this wasn't going to mean a demotion, or worse, for him. \n\nShe stepped over to the window to have a quiet conversation on her intel. Casey could not quite catch what she was saying. Meanwhile, the monster stood motionless, staring at them with his inhuman eyes. It was most unnerving. \n\nThe woman finished her conversation and came back over, smiling. \"It's all taken care of. The order should be cancelled shortly.\" \n\nHe and Brad waited, shuffling restlessly. He picked up his weapon from the floor, set the safety, and holstered it. Brad holstered his as well. \n\nThe call came a few moments later, both of their intels chiming at the same time. He pressed the button to answer and his boss's voice came out loud and clear. \"Etherington! McNeil! Get your butts back to headquarters pronto.\" \n\n\"Yes, sir!\" they both said. Casey exchanged a look with his partner. His boss was obviously pissed. \n\nAnother chime sounded and Casey glanced at his intel. A message flashed across the screen informing him that the arrest warrant had been cancelled. \n\n\"Sorry to have disturbed you,\" Casey said to the trio as he and Brad trooped out. \n\nThe attractive receptionist was hovering down the hall and watched them as they passed. Brad was too worried about what his boss was going to do to him to give the boy more than a passing glance. \n\nOnce back at CorpSec headquarters, however, he had a pleasant surprise waiting for him. The red-haired she-devil had sent his boss a message commending him for his calm handling of a potentially disastrous situation and recommending him for promotion. His boss was apparently even considering it. \n\n***** \n\n\"Well, I think that just about wraps things up for now,\" Michelle said, setting aside her tablet. She stood up, stepped over to her desk, and picked up a large manila envelope. Raeden and Kim stood as well. Raeden rolled his tight shoulders. \n\n\"Kim?\" Michelle smiled at him sweetly. \"Can you run this up front to Randy, please?\" Raeden noted that the envelope was sealed and had, \"Randy\" scrawled across the front. \"And tell him he can go home now.\" \n\nRaeden narrowed his eyes at her. What is she up to? \n\nAs soon as Kim was out the door, she pressed a button on her intel. When her receptionist answered she said, \"Randy? Kim is on his way up there with your Christmas present. Can you keep him occupied for a few minutes before you let him come back here please?\" \n\nAfter Randy answered in the affirmative, Michelle wished him Merry Christmas before turning her attention to Raeden. \n\n\"You're not going to fool him, you know. He'll know that you wanted to talk to me alone.\" \n\n\"Why? Because he can read minds?\" she asked, watching him sharply for his response. \n\nRaeden couldn't help the startled look that raced across his face. \"No, because he's smart,\" he answered dryly. \n\n\"Yes, I'm sure he is,\" she replied. \"His father has an IQ of 152. And the first time he was tested, he was practically off the scale in telepathic abilities. He seems to have lost them though, for some inexplicable reason. The last few times he's been tested his score has been close to zero.\" \n\nRaeden stared at Michelle in shock. \"Kim's father is still alive?\""
    ],
    "authorname": "roughboy18",
    "tags": [
        "shifter",
        "paranormal",
        "dystopia"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/christmas-in-zonei-pt-09"
}