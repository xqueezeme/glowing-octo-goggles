{
    "title": "Taylor Loves Oral",
    "pages": [
        "{This is a multi-part story. I am finding it harder to post chapters one at a time and get them in a timely, consistent fashion so I'm posting them all at once. It's a whole story. You might want to \"rest\" between chapters. This is a fantasy world, no one uses the bathroom, no one gets a disease, no one gets hurt in any way they don't enjoy. It's also fiction. However, many of the elements are fully true and actually happened. You might consider this one of those docudramas, \"based on fact. \"}\n\n*\n\nHi, I'm Taylor and I love to suck cock. That's how I'd have to introduce myself to the group if there was a, \"Cocksucker's Anonymous.\" It's most certainly an addiction, but I don't actually consider it to be a problem. Unless, of course, the problem is not being able to get it when I want. I love the taste of it, the smell, the sounds, the way I can make guys react. I love the submissive nature of being on my knees, having to please someone who is there only for HIS pleasure. There's also the element of embarrassment, the fact that I love and need it so much that I pretty much want....well crave, to blow just about anyone to satisfy that need. This is coupled with the humiliation of having to do what it takes to get it. There's also a bit more to it, as we'll find out.\n\nI'm 19 years old. I have long light brown hair. I'm short, I say 5 foot, three inches, but doctors keep telling me I'm shorter!! I have a curvy body. By curvy I do NOT mean \"BBW\" or something. I have a thin waist, I have rounded hips and ass, and I have big tits for my frame. It's like an hourglass but without the fat! I work hard at staying in shape. I'd compare myself to an Ariel Winter when she's at her best, busty, curvy, shapely. Guys seem to love my body anyways, as well as some women, apparently. \n\nI'll have to spare you some of the potential reasons for how I got to have the particular oral fetish that I have, per Literotica rules on mentioning anyone having sex before the age of 18. So, I'll start at 18, yes, I already knew what I wanted by then. I'm sure I was pretty well known my senior year in high school (when I was 18). I think I even got the nickname, \"bleacher girl\" for my exploits during games. I didn't have a boyfriend. I really don't want one or see the need for it. I'm definitely not a \"one man woman.\" That's not to say some guys don't get repeat performances. I have guys I service regularly and some of my male friends are well aware of my desires and are willing participants.\n\nI'll begin with the summer before college, the time it turned from \"dating blowjobs,\" to something else. Luckily, I got a summer job as a waitress in a famous chicken wing joint. I definitely met the requirements: at the time I was 18 years old, tight body, nice big, pert tits. Being a waitress in a place like that gives girls opportunity for all sorts of things. Still, at that point, I'd never given anyone a blowjob that I didn't already know or date, first. I'd already discovered that I wasn't like my girlfriends. I wasn't looking for \"Mr. Right,\" or angling for a picket fence/three perfect children, life. At that time I was just discovering my desires and it was becoming clearer to me with each passing day.\n\nSure, I'd gotten laid and I liked it. Getting fucked is a good thing. However, I had tied that in my mind to a relationship, to being committed to....whoever. I don't have that problem in my mind with blowjobs. I need no connection whatsoever to get off on those. \n\nSuddenly, I was flooded with offers daily. \"Hey hon, what time do you get off work?\" \"I'd love to see those things out in the open.\" \"Can I get your number?\" \"Me and the guys are having a bachelor party, any chance we can get something special?\" I would smile and ignore the obvious references, yet would still manage to get good tips because I wasn't afraid to show off my goods. My top was especially tight and revealing, compared to some of the other girls. Still, I would get a jolt of excitement with each offer. I wasn't a prude by any means, I just didn't realize how easy and quick it would be to let it happen.\n\nI discovered that two weeks into the job. One customer in particular was really persistent. He reminded me of a low rent Zac Ephron. He was cute, he was funny. He was also totally full of himself. He was a cocky jock, an athlete at the school I was headed to in the fall. He came in a half dozen times, always picking my section. He was consistent in his banter. He loved my top, he loved my shorts, he loved my smile etc etc. With each passing day his comments became more sexual. It eventually turned into, \"God you have a great ass, you don't mind me saying that, do you?\" \"Man, those titties are fucking spectacular!\" I think he just loved seeing my reactions, especially since his milder ones hadn't been successful.\n\nAt this point it had been a couple months since I'd had any cock. I was looking for it, but I was still under the dated assumption I needed a relationship to get it. The opportunity was right under my nose. One night \"Zac\" came in and was drinking with his friends. They were quite handsy and their comments were lewd. Honestly, I don't mind that stuff at all, and in fact I often get a kick out of it. Sometimes it makes me wet, which is why I don't discourage it, and often want it. Zac was particularly forward. He was the leader of his group, I could tell. He introduced me to his friends, called me his \"future wife,\" in front of them, to which they all laughed. I was particularly horny at this point and the constant attention was giving me ideas and thoughts. Zac cornered me by the bathrooms and said, \"let's cut to the chase, Taylor. I think you are hotter than the sun. I think you like me, too. Let me have your number. I promise , you won't be disappointed.\"\n\nHe had his thumb tucked inside his belt line. It was obvious he was referring to his cock, and by the bulge that was evident I was pretty sure I wouldn't be. \n\n\"Listen, I'm not into dating,\" I said honestly, to get his reaction. \"I've had relationships, they are just not for me.\" He looked defeated. \"So that's what you want? You want a girlfriend?\" I asked\n\n\"Well yes, no....\" he said hesitantly. I think he was searching for the answer I wanted.\n\n\"I mean, if that's what you want, you aren't going to get it from me,\" I said firmly. \"If you want something else....,\" I hinted.\n\nHis eyes lit up. \"Hell yeah I want...that,\" he said. He pushed me up against the wall and kissed me deeply, his hands found my ass and he groped and kneaded my cheeks at the same time.\n\n\"Whoa, whoa,\" I said, sputtering. \"Slow down.\"\n\n\"I thought you said you wanted....something else,\" he said in confusion.\n\n\"I do. I just want...this,\" I said, gently grabbing his crotch through his jeans. He just stood there and bucked against my hand as I caressed his bulge through his pants. \"Listen, we're not going to fuck. Not here, not now. I'm not going to be your girlfriend or your future wife,\" I joked. \"But I AM interested in this,\" I said, giving his cock a squeeze. \"If you are okay with me just pleasing this, then we might be getting somewhere.\"\n\n\"What? You want to suck me?\" he panted with obvious lust rising.\n\n\"Yes. I want to suck your cock.\"\n\n\"Hell yeah, where? When?\"\n\n\"I have a break in 15 minutes. Meet me in the back. Do NOT tell or bring any of your friends or you'll miss something special,\" I warned.\n\n\"Ok, I can get away from them,\" he said conspiratorially. \"See you then!\"\n\nI went back and finished my orders with a familiar flush in my cheeks...and elsewhere. It was going to happen! Finally. He was waiting like an excited puppy when I came through the back door. I motioned for him to follow and he did without a word. We were in a dark corner in the alley behind the bar. I'd brought my coat. I folded it up and laid it on the ground. I guided him up against the wall and I knelt in front of him. I wanted to enjoy this. I wanted it to last. I wanted to feel all those feelings again but I knew it needed to be quick. Still, there was an excitement in that as well.\n\nHe groaned when I unzipped him and took out his dick. \"Damn!\" I thought, when I took it in my hand. It was the most impressive one I'd seen, and it was growing...quickly. I licked the tip while I held his balls in my hand. He was nearly fully erect by then. I slid my tongue up his imposing shaft. I could taste the sweat, the manly musk on him. It's like a natural pheromone for me. I get turned on something fierce by the taste and smell of it.\n\n\"God,\" he panted, \"what made you want to do this?\" he asked, eyes closed and focused as I took his head in my mouth.\n\n\"Shhh,\" I said. \"We don't have much time. I just want to suck your cock, let's leave it at that.\"\n\n\"Mmm, I'm ok with that,\" he laughed nervously as I went to work on his beautiful dick. \"Can I ....at least see some of what you've got up there,\" he groaned, motioning at my top. Like I've said, I get off on the embarrassment. I pulled the tube top down, exposing my tits to him.\n\n\"Dayummmm,\" he moaned as they were revealed to him. He ogled them for awhile while I fellated him before he tilted his head back, leaned against the wall and focused on the pleasure. I was in a zone. This is what I missed. This is what I wanted, and needed. I was blowing a guy whose name I still didn't even know (turned out to be Jason), in an alley, on a work break, with my titties out. I was practically gushing. \n\nI suckled the head lovingly and circled my tongue around it, eventually vacuuming it with loud, \"pops\" each time I'd pull off of it. It was driving him mad. We were both in a fever and unfortunately for both of us, he eventually couldn't stand it. He held the back of my head, though gently, as he blasted off into the back of my throat. I kept up the pace of sucking and licking while he filled my mouth with that sweetness. Yes, I love the taste. I know most women think it's gross. I think it's the tastiest thing in the world. I'd rather have that taste on my lips than bacon. He pumped me full, all the while telling me how great I was, how wonderful it felt. I smiled and did one last \"pop\" off of his glorious cock. I looked up and licked my lips to get the last of the cum while he watched in amazement.\n\n\"Thanks!\" I giggled. \"Gotta go!\" I adjusted my top and walked back into the bar to finish my shift. I didn't see him again that night, he'd left his friends, once he got what he wanted. I did get a kick out of having his taste on me while I waited on his friends, wondering what they'd think if they knew his friend had just blown a load in my mouth.\n\nWell, once that night happened it opened a door for me and I stepped right through. I sucked his cock every time he showed up, which was often, now that he was motivated. Usually he wouldn't even order. He'd come in, sit in my section. I'd bring him a water, 15 minutes later I'd be out back in the alley, or in his car, my tits out, sucking his cock. He found out that I had an affinity for it. He took full advantage. He DID try and fuck me, he pestered me about it every time, however, he wasn't stupid. He let me \"do my thing\" on his cock every time. He became comfortable with it. I did allow him more and more access to me, however. He often had his hands full of my tits, or his fingers in my pussy before he gave me my reward.\n\nAs I knew it would happen, and I suppose as part of the whole fantasy, I knew it would get out. Guys talk, it's what they do. I knew he would. I could tell by the way his friends looked at me when they'd come in, sometimes with him, sometimes without. One night they all came in together. I'd rocked Jason's world already, he was back with the group. They were laughing and carrying on and I had the suspicion a lot of it was about me. He pulled me aside.\n\n\"Say, you say you love the cock sucking thing, right?\"\n\n\"More than anything,\" I cooed with absolute truth.\n\n\"And you say you aren't into getting \"involved\" in any way?\" he asked with air quotes.\n\n\"Absolutely not. Why?\" I asked, even though I had an idea.\n\n\"Because some of my friends here are....shall we say, between girlfriends and they'd certainly enjoy some...release...so to speak.\"\n\n\"They would, would they?\" I asked, playfully punching him in the arm. I think he fully expected a full faced slap. Seeing no opposition, he continued.\n\n\"So you wouldn't be embarrassed, to say, take some of them out back and give them the same treatment you gave me?\" He asked, laying it out there.\n\n\"I didn't say it wouldn't be embarrassing, in fact, it would be totally so.\"\n\nHe started to change his tone, fearing he'd lost me. I stopped him.\n\n\"Yes, it'll be embarrassing, but that's actually part of the fantasy. That's part of what drives me to do it,\" I admitted.\n\nSeeing hope again he said, \"wait, you said, \"it'll be embarrassing,\" meaning you are going to do it?\"\n\nWanting to tickle another part of the fantasy I said, \"you tell ME. I wouldn't be able to do it, or choose, unless YOU tell me who, and how.\" I fell into my submissive mode, it was all a part of it, it was the part that was missing.\n\n\"Wow, cool,\" he grinned lewdly, \"I pick Dave.\"\n\n\"Ok, tell me how you want me to do it?\" I asked obediently.\n\n\"Take him out back like you did with me the first time. Get those titties out and wait for him in the same place, against the wall, I'll send him out. Be waiting for him like that.\"\n\n\"I...don't have a break yet,\" I suddenly realized.\n\n\"Look, do you want to do this or not,\" he snarled, though I guessed it was just a bluff, a dominant show for me. It worked.\n\n\"Ok ok,\" I said. \"I'll be back there, tell him to hurry, I don't have much time.\"\n\n\"Well, that part will be up to you,\" he sniffed.\n\nSo there I was on my knees, in the dark, my tits hanging out when Dave showed up for his blowjob. He was inexperienced, I could tell. He barely said a word, he only moaned and grunted as I gave him probably the first blowjob he'd ever had. His cock was short and stubby, not that I'm complaining. I love a good, hard, big cock for sure, but when sucking it may actually be easier to blow a shorter one. I was able to give him more of my burgeoning deep throat skills. He was appreciative, he blew probably months worth of frustration into my mouth which I lapped up happily. Embarrassed, he shuffled off quickly. Jason smugly asked me if I was enjoying myself when I showed up again. I licked my lips seductively and nodded. I fully expected more but I don't think Jason understood the depths of my need, they took off soon after.\n\nHowever, in the next few weeks I got to know several of his friends that way in addition to Jason. My breaks weren't long enough. I was only able to service one of them at a time, still, two breaks a night I was getting two cocks to suck on a regular basis. They'd often draw numbers to see who was going to be the lucky ones that night. Naturally, I was bombarded with offers to hook up, \"later\" but I always rebuffed them. I was enjoying how it was going so far.\n\nQuite naturally, it was bound to crash. I blame some jealous bitches, waitresses there who saw the kind of attention I was getting. They were envious of me, especially when it came to Jason. Apparently, he was a big shot football star or something. I only cared that his cock was yummy. One night, nearing fall, my boss pulled me aside. I'd just serviced Tommy....or was it John? Whatever, whoever it was their cum was still in my throat when Randy, the night manager called me into his office.\n\n\"It has come to my attention....\"\n\nI've learned that nothing good ever follows, \"it has come to my attention.\"\n\n\"...That you are doing some uh....extracurricular activities on the side.\"\n\n\"What?\" I said shyly, feigning innocence.\n\n\"Oh stop,\" he said abruptly. \"We've got surveillance tapes of you going out back and...well, doing things.\"\n\nHe was in front of his computer. He showed me one of the tapes. Luckily, the camera only went so far. All one could see is me and the guy, heading towards the corner, but the camera didn't go all the way to the corner. All we could see is darkness, then one, or both of us walking back to the bar.\n\n\"See!?\" I bluffed. \"I'm just a smoker, I know it's a bad habit, but I usually just bum a cigarette from one of the guys and we just talk some shit, they are friends of mine.\"\n\nHe got defensive, I think once he broached the subject he felt it was too far along to go back.\n\n\"That's bullshit, look at this one,\" he demanded. It showed one guy walking out of the shadows, adjusting his fly and, a minute later, me walking out, while wiping my lips with my sleeve.\n\n\"I think you are doing more than smoking, Taylor,\" he scolded. \"Look, we put up with a lot here, for the customers. People are doing drugs in the restrooms, the bouncers are letting underage girls in, what we DON'T need is the police showing up because one of our waitresses is prostituting herself out back.\"\n\n\"Prostituting? You think I'm a whore?\" I asked incredulously. He had no idea I was doing it for free, that that's where the kink was.\n\n\"What other reason are you back there? Listen, even though the tape doesn't show it, I've heard some rumors that you are blowing guys back there.\"\n\n\"What???\" I said shyly, trying to cover it up with acting.\n\n\"Look, there's only one reason a woman would do that, for money. God knows they hate sucking cock,\" he said, trying to make a joke of it.\n\nI was busted. I could've kept denying it, but there was little point, really. I was going to quit in less than two weeks anyway because of the start of the semester.\n\n\"Well maybe you hang around the wrong women?\" I joked, trying to lighten the mood. \"Some of us actually like it,\" I admitted, causing an arched eyebrow response.\n\n\"Whatever. You're fired,\" he said coldly. \"Take off that uniform,\" he demanded.\n\nIt's just a tube top and tight short shorts. \"You've got to be kidding.\"\n\n\"I know all of you bring clothes to change into because many of you won't be caught dead wearing that outfit out in public.\"\n\nHe was right. But still....then I realized his angle, I saw how he was looking at me.\n\n\"You're wrong about me,\" I said proudly. \"I love to suck cock, I absolutely fucking love it.\"\n\n\"Bullshit,\" he repeated. \"No woman does. \"It's gross,\" \"the texture is nasty,\" \"I'm not going to swallow, tell me when you are cumming.\" I've heard it all,\" he said with exasperation.\n\n\"Well, I'll admit that most women *I* know think that too. It's just not me.\"\n\n\"You're saying....\"\n\n\"That yes, I sucked every one of those guys out back. That's what I was doing back there, sucking their cocks. I didn't get a dollar for it. I just...crave it.\"\n\n\"Bullshit,\" he said again, though less convinced this time. \"Give me the uniform.\"\n\nI knew he meant, \"go change\" but I had an inkling where this was going. So slowly, I peeled my top off right in front of him. We don't wear bras so my tits were on display. Then, seductively, I pulled the shorts down to my ankles and kicked them off. I was left with a very sheer thong and my sexy pumps.\n\n\"Taylor!\" He breathed heavily. \"I didn't mean here!\"\n\nI knew he was lying because he had all sorts of time to tell me to stop while I was stripping, yet he didn't. \n\n\"I still don't believe you,\" he said, this time questioning everything he knew about life. I pushed him back to his chair and sat him down. I knelt in front of him. He was in his 30's, had a dad bod and hair pretty much everywhere. I knew he was married, he complained about how frigid she was all the time. I knew that's where he got his information about women. I unzipped him and took out his cock. It was short, but thick, which made it hard to get my mouth around the head so I focused on licking his shaft and even his balls, which drove him mad.\n\n\"Taylor, Taylor, stop....we shouldn't...\" he kept protesting, while at the same time guiding my head over and over down on his cock. So that's how I blew my gross boss and swallowed his load, right under his desk, in prime time where we could be caught. ",
        "Lapping up the remains of his cum I stood up and smirked at him, like, \"Oh yeah, women don't love this?\"\n\nHis eyes were glassy. \"You're still ....fired,\" he managed to spit out.\n\n\"Yep, don't care,\" I giggled. I sneaked out his back door which led to the hallway where our lockers were. I dressed and left with a smile. I loved thinking about how embarrassing it all was to have to do that...for THAT guy. Like I've said, though, it drives me. I realized that sucking off beautiful athlete types was a blast, but that there was much more out there I needed to experience, like with this one. I did worry, though, that my main supply of cock would be dried up, though I still kept Jason's number, I couldn't imagine going through life without sucking that cock again. I needn't have worried. College gave me everything I needed, even some that I didn't know I wanted yet.\n\n Chapter 2\n\n*\n\nWeeks went by without any action. Jason had started his season and apparently was on \"lock down.\" He was one of those athletes that believed that cumming during training would sap his energy. I think it's probably the opposite. I was craving the next thing, though. My main focus became my college psychology professor. He was in his 40's, I'd guess, based on the sexy salt and pepper stubble on his chin. He was tall, curly haired. He reminded me of a cross between a younger Ted Danson and Kevin Kline. I was surprising myself at how hot his age and experience was making me. He wore that professorial sweater vest, which was adorably sexy on him. He had a wedding ring. I spent most class days lost in ogling him and daydreaming. I was doing terrible in the class, even though I was usually a good student and actually loved psychology. He instructed me to come to his office after class one day. I actually got a twinge, \"down there,\" when he said it. It was more like a command. It stirred something in me.\n\n\"Taylor. You seem to be somewhere else in my class instead of focusing on the material.\" He had no idea. \"What can I do to make it more interesting for you?\" I had many ideas for that, though none I think he shared at the moment.\n\n\"I just find myself...I dunno....just daydreaming,\" I said, not sure of how this should go.\n\n\"I can see that. Are you getting enough sleep?\"\n\n\"Plenty,\" I laughed. I can pretty much sleep anywhere, anytime, and in any position.\n\nHis eyes to seem to devour me, they were beautiful, a deep, dark, piercing brown. There was knowledge behind them. I felt exposed, like he could see my very thoughts.\n\n\"I...I just don't know how to say this,\" I said with great hesitation.\n\n\"Try me. I'm a counselor, outside of here. Believe me, I think I'll understand.\"\n\n\"It's kind of embarrassing.\"\n\n\"I'm sure whatever you tell me will be a normal, human thing,\" he said reassuringly.\n\n\"It's....embarrassing because it's about sex...\"\n\n\"You don't think I've heard those kinds of things? I interned in a prison, for god sakes, believe me, I've heard it all.\"\n\n\"Well, it's perverted, though not for me....\" I started, haltingly.\n\n\"So, it's something that you love, something that you enjoy, that other people would find...dirty?\"\n\n\"Exactly,\" I said. He was astute, he obviously knew a lot, and a lot more about what I was telling him than I knew.\n\n\"Did you pay attention on my lectures about fetishes?\" He asked. \"You seemed to do better on tests with that material.\"\n\n\"Yes, I think it's a fetish,\" I admitted. His eyes were calculated, probing, it was as if he knew already. I don't know why it was so hard for me to admit, with him so interested, so focused on getting it out of me.\n\nHe then shocked me. \"Would it surprise you to know that I've had other students with...let's say, similar issues?\"\n\n\"I'd be surprised,\" I admitted.\n\n\"Ok, let me lay it out then, we seem to be dancing all around it. I've had students who want to please me. My demeanor, my presence as their teacher, their mentor, in a way. It excites some women. In therapy I'd call it Transference, when a patient falls for her therapist because of their close connection in treatment. I think it happens when I teach, as well.\"\n\n\"And these students....they try to please you?\" I asked, with a hope I hadn't recognized.\n\nHe knew he was walking a fine line, a dangerous one for admitting it, but he risked it, for the reward. \"They did more than try to please,\" he grinned knowingly.\n\n\"Really?\" I asked with surprise. I knew that fraternization of professors and students was a serious thing.\n\n\"Yes, some of the women have been VERY appreciative and have showed their gratification in a number of ways.\"\n\n\"You are married?\" I asked, pointing at his ring.\n\n\"Yes. My wife is also a professor here. She uh....has had many of the same opportunities as I have. Seems that guys can be just as appreciative,\" he grinned.\n\nHe'd laid it bare. He'd given up a part of his safety. I had to reply in kind, especially after those weeks of frustration watching him, wanting him, and not knowing how to approach him.\n\n\"Ok, since you've been honest with me here it is...I can't focus in your class because I'm attracted to you, obviously. But you already knew that. What you don't know is what I fantasize about. You see, my fetish is almost entirely oral.\" \n\nI scanned his face to gauge his reaction. He just had a smug, lovable smile on his face. \n\n\"So, all those days in class, when I'm teaching, you're thinking of....\" \n\n\"Sucking your cock,\" I blurted out, interrupting him. \"I think about sucking your cock, sir.\" I blushed.\n\n\"See? Normal stuff,\" he shrugged.\n\n\"Maybe that part. But, there's more.\" I proceeded to lay out my entire fantasy, including the last couple months and my experiences at the bar. I told him how much it thrilled me to be used that way, how much I loved the humiliation of wanting it, having to do it certain ways, and how submissive it made me feel. He just nodded at certain points. At no time did his expression change to shock, or disgust.\n\nWhen I was done we both leaned back in our chairs and exhaled. A few minutes passed while we just checked each other out. The air was thick, like an electrical storm. \n\nFinally, he smiled. \"So back to my original questioning. So what is it I can do to keep your focus on my class?\"\n\n\"Just this,\" I said as I dropped to my knees. He didn't say a word, he just turned off the lights of his office, put the \"not in\" card in the window and locked the door. He went back and sat in front of me.\n\n\"I believe I understand the fetish, my dear. So, this is how it's going to go,\" he said with command. First, you are going to take everything off and hand it to me, like a good girl.\"\n\nI blushed and felt my pussy suddenly gush at his control. I stripped obediently and handed him each item of clothing. When I took my panties off, he took them, slid them under his nose, taking in their scent, before putting them in his pocket. \n\n\"These are mine now,\" he grinned coolly. \"And from now on, I want you to never wear them in my class. I want you to sit in front, and wear skirts, short ones, preferably.\"\n\n\"Yes, sir.\" I said, my head down subserviently.\n\n\"Now, show me what you mean about your oral fetish. Show me what you've learned.\"\n\nFor the next fifteen minutes, totally nude, I made love to his cock with my mouth. I wanted it to last forever. This was it, it tapped those things deep in my brain. The embarrassment, the fact he was old enough to be my dad, that he knew my fantasies at the deepest level. I was driven even deeper into my lustful fog due to his total command, the absolute mesmerizing control he had over me. That, and the fact that, next to Jason's, he had the nicest cock I've ever sucked. He kept up a verbal commentary throughout.\n\n\"Yes, that's it Taylor. Show me who you are, show me what a cock sucking slut you want to be. Believe me, I can give you everything you've ever wanted. I know what you want, what you need and I've got all the contacts and opportunities to make it happen.\"\n\nI gave him my best. I wanted him to crave it so much he'd give it to me again and again. He was already ahead of me.\n\n\"Yes, that's it baby, suck that cock. Suck that cock like you are going to do whenever, and wherever I want it. You'll do that, won't you?\"\n\n\"Yesss,\" I hissed, only temporarily taking my mouth off his head.\n\n\"I'm going to MAKE you do it,\" he grunted, his excitement level rising to a fever pitch.\n\n\"Yes you are,\" I panted. \"Make me suck your cock, your friends cocks....whoever you want me to.\"\n\n\"Yes, yes...that's it, that's what I'm going to do. You are going to be my personal little cock sucking slut!\" He moaned before shooting his cum into my willing mouth. I devoured it like I was breaking a fast, which I kind of was. He watched me leisurely lick the cum off his cock, his balls, then off my hands and my lips.\n\n\"Yummy,\" I grinned with a smile.\n\n\"Now get up and get the fuck out of here,\" he barked, slapping my ass hard before smiling. \"This is all something you are going to get used to.\"\n\n\"Yes, sir. I'm yours to command,\" I admitted quickly, with surprising acceptance.\n\nFor one last indignity he made me stand in front of him still totally nude, my chin dripping some of his cum while he took a few pictures with his phone for, \"possible advertising.\" He also gave me an assignment to bring to class the next time. He wanted me to list what it was I wanted, exactly, and the types of scenarios I'd be willing to do. I protested that a lot of the excitement would be me not knowing what I was going to do, that he should be the one to decide.\n\nHe just smiled and said, \"I know, dear. I have plenty of ideas already. I just want to know the truest, deepest, darkest depths of your psyche so we can both really get off on this. And when I ask what your limits are, don't say, \"I don't have any.\" We ALL have them. I couldn't, or wouldn't, for example, make you suck off a homeless guy for disease and other reasons. I couldn't or wouldn't make you suck off every guy in a crowded bar. So there are limits, even if you don't know what they all are now. Just think about it, think about what you want, what you don't and we'll see what we can both do about it.\"\n\nI spent the next day contemplating it all. I composed my thoughts the best I could. Just writing it all down made my pussy nearly boil over. In class, I sat in the front, as instructed. I had on an over-the-knee skirt, no panties. He gave me a sly quick smile before concentrating on the lecture. He had an amazing ability to focus on the material at hand, unlike me who was sitting in a cauldron of my own lust. Midway through, during an open discussion, he gave me a note while people's attention was elsewhere. It said, \"open your legs more.\"\n\nI think my face reddened immediately. I did as he said, though. He spent a lot of time facing me, while proceeding with his teaching. I do like exhibition, it's another hot button issue for me. I knew I was going to enjoy this element, along with my main fetish. The combination was going to be combustible. He was standing in front of me, my legs were open. I could feel the cool air directly on my pussy. I could feel how wet I was. I could see him sneaking a glance or two. It was intoxicating. It was making me so horny. I had my piece of paper ready, the list of my thoughts. At the end of class I handed it to him. He told me he'd look it over. I had left my phone number. He said he'd, \"be in touch.\"\n\n Chapter 3\n\n*\n\nHere's what I'd written, and what he was going to have to take in and absorb.\n\n\"John, I made a list of my thoughts which I hope will help you guide me, lead me to where we both want to go.\n\n1- You know my fetish for sucking cock. I've sucked a lot, but it has been dozens. I want you to make that triple digits. I want to look back in the not too distant future and know I've sucked over 100 different cocks. It doesn't have to be all at once, or as you put it, with me sucking entire groups of men at a bar or something. I actually prefer the solo blowjob, or, one at a time. I will do a blow bang, if you command it, however. I know it's something I'm going to have to do, from time to time. Keep me busy.\n\n2- I can't stress this enough, the type of man doesn't really matter. Yes, I agree there are still limits. The homeless guy thing, for example. But, as a very large part of the fantasy, I need to be made to suck guys of all types. It should be all ages, all sizes, looks unimportant. There's delicious embarrassment to being on my knees blowing, say, a fat guy, or an older man. It just makes me feel like such a dirty slut doing it for men who normally wouldn't even approach a young woman like me.\n\n3- Your control is important to me. The fact that it's you, making me do it gives me the thrill to fulfill my fantasy. I need you to make me do it, the situations are totally up to you. I know that's kind of a cop out, but seriously, that's what drives me. Test me, try me, force me to show you the depths of my fantasy.\n\n4- Related to the above, make it embarrassing, make it humiliating. That sort of thing drives me mad. I gave you an example, the one where I sucked off Randy, my boss at the bar, or how Jason sent his friend out back for me to suck, just because of how embarrassing it was for me. I know that it has to get out that I'm just a cock sucking slut. It needs to happen, it's inevitable. I need to face that and deal with it.\n\n5- you know how guys who get it are going to want it again...and again? Make it happen, don't let me get off without the possibility of it being a regular thing. If they ask for it again, and in the heat of lust I say yes, make me do it.\n\n6- Feel free to exhibit me, show me off in any way you decide. I love it when men get to see me, kind of like it's advertising for what they might get. And, don't let me be a tease. Make me please if it excites them. My body is yours....my mind is yours. Use them.\"\n\nI got his call soon after. \"My my Taylor, you've been busy.\"\n\n\"Not the right kind of busy, though,\" I giggled.\n\n\"No, maybe not yet. I like your ideas, I have similar ones. It's just good to know we're on the same page. If you hadn't already figured out, you are a submissive. You need to be led, controlled, told what to do. It frees your inner slut. I am a natural dominant. I love putting little sluts like you in situations where their natural slut comes out. I think this will work well for both of us.\"\n\nI got juicy just hearing him say those words. \"I'm so wet right now,\" I said with frustration.\n\n\"Have you ever sucked off a delivery guy, like the pizza guy or anything?\"\n\n\"No,\" I said with an embarrassed peep, realizing what might happen.\n\n\"Well, I think you should expect that. In fact, I'll make it a rule. If you get ANY kind of delivery, Amazon, pizza, that sort of thing, you need to end up offering a blowjob as a tip. I actually think the pizza guy thing is a little cliche and dated. I'd love to make it more interesting. But that's the new rule, ANY delivery, you must at least offer, got it?\"\n\n\"Yes, sir,\" I said, lost in my own arousal.\n\n\"Do me a favor. What's your apartment look like. Do you have windows? Take a picture of the layout for me.\"\n\nI did as he said and sent him the pictures. I knew his mind was working on an idea. He asked if I was going to be home and I said that I was in for the rest of the day. I wanted to be available, I knew that's what he was asking.\n\nHe just said, \"Ok, I'm going to keep you updated. But, you need to be available at a moment's notice. I have an idea, but you need to respond immediately when I call or text.\"\n\n\"Yes, sir!\" I said excitedly.\n\nI kept the phone in my hand for the next few hours, except for when I showered, where it was still close enough to grab, \"just in case.\" I got the dreaded yet anticipated call in the late afternoon.\n\n\"Slut. That's your name now. You don't deserve any other name. I have a task for you.\"\n\nI loved the change in his tone. It made me absolutely creamy.\n\n\"There will be a man showing up at your apartment in the next hour. You will treat him accordingly. Do you have Skype or the ability to record it for me?\"\n\nI was very tech savvy. \"Yes, sir. I want you to be able to see your slut whenever you want.\"\n\n\"Good, so here's the deal. I have a mechanic, I've known him for awhile. I'd consider him a friend. He's divorced. I think he's a good candidate for us. I owe him a favor, for all the work he's put in for me. I told him all about you. I showed him the nudes I took of you and he sounds very interested in \"helping\" us. So, I told him where you live and that you'll be ready for him.\"\n\n\"Oh god, sir. Does he know our...limits?\"\n\n\"Such as they are, yes.\"\n\n\"You are sure your wife is ok with all this, does she even know?\"\n\n\"She is totally on board. She'll be watching right along with me. She loves the idea of me having such another slut plaything.\"\n\n\"Don't worry, she knows your fantasies. But we're wasting time. Here's what I need you to do, before Joe gets there. I want you to turn on your phone, your camera, whatever, focus it on your living room window area. Then, you are to strip naked. You won't be needing clothes for this. Then, kneel on the carpet, put your hands behind your head and wait.\"\n\nI took a deep breath to try and absorb it all. My head was filled, both with fear and excitement.\n\n\"Can you do all that for me?\"\n\n\"Yes, sir,\" I sighed. It was all happening. What am I supposed to say when he shows up and I'm...like that?\"\n\n\"He already knows what's what. Unlock the door. When he knocks you tell him to come in. When he sees you, you offer your mouth to him. I told him to treat you accordingly, to talk to you as nothing more than a slut who is going to get him off.\"\n\n\"Oh...god....\" I panted.\n\n\"Let's see how you handle your first task,\" he said, before abruptly hanging up.\n\nI had no idea how long it was going to be before he showed up, but I knew what John wanted. I got out my digital camera, I'm into photography, it's much better for filming...things like this. I pointed it at the window and turned it on. I decided to strip in front of the camera, sensing it would thrill John and Sophie, his wife, watching me strip for them. I deposited all the clothes in a pile, then knelt in front of the window and waited. I have neighbors and there is generally some foot traffic back and forth in front of my window. However, kneeling like I was, I was pretty much below anyone's view. Still, it could prove embarrassing, as you'll see. I waited, my fingers intertwined behind my head, my chest heaving. I could feel the blood rush to my neck, my face, while I awaited this indignity.\n\nI heard footsteps. Then I saw him. He was a thick, heavy guy with red hair and a beard. If there was a stereotypical look for a lumberjack this would be it. His belly hung out way over his belt, like he was going to audition to be Santa Claus. My front door is to the side of the picture window. I saw him at the door. He looked over. Since he was tall, he could see in, and down to where I was kneeling. His face formed a lewd grin. He took a moment to enjoy the view. Bashfully, I averted his gaze. Then, he tapped on the door, as if he even needed to, at this point. I choked out a, \"come in,\" the best I could. He entered. He loomed large over me, my head was still down. I could feel him taking me all in.\n\n\"So, this is all real, eh?\" He smirked. \"I didn't think John would prank me or anything, but I still had to wonder, what the fuck, you know?\"\n\nI didn't know how to respond. I only nodded.\n\n\"Tell me what I'm here for, slut,\" he said, as if he suddenly remembered John's instructions.\n\n\"You are here to get your cock sucked, sir,\" I said hopefully. I added the \"sir\" for John. I thought he'd enjoy that.\n\n\"Damned straight, I am,\" he grunted. \"Don't know why a girl like you, needs setups like this to get what she wants, especially with a body like that but I'm not going to look a gift horse in the mouth. John said you were good at this but just needed more practice, so here you go,\" he laughed cruelly as he took out his cock for me. ",
        "I started to grab him when my phone buzzed. I knew it was John. I hesitated before I grabbed it. The text said, \"keep your hands behind your head the whole time. If I text, let HIM see it, not you.\"\n\nI handed him the phone and he smiled wickedly. I put my mouth on him, just like that, my hands useless to help. I was going to get him off with just my mouth. Joe urged me on.\n\n\"Yeah, that's a good slut. Suck that cock. You ARE pretty good at that, but I know, with practice, you'll become a lot better,\" he laughed.\n\nI blew him like that, on my knees, while I could feel my wetness leaking down my inner thighs.\n\nHe was bucking and grinding now, he was close. He kept berating me. \"Suck me like the slut you are! Suck that cock, bitch. If you want practice, I'll be here all the time, suck that cock. Oh god, oh godddddd, I'm cumming.....ugggghhhh.\"\n\nHe blew a massive load in me and I did my best to swallow as much as I could, failing miserably as much of it escaped out of the sides of my mouth, down my chin, dripping onto my chest. He stepped back clumsily and let out a deep sigh. \n\n\"Fuck,\" he panted. I heard my phone buzz. He looked at it and grinned. He took out his own phone and took pictures of me like that, still on my knees, hands behind my head, totally dripping his cum. Then, he grinned evilly and said, \"I think your neighbors enjoyed the show.\" He pointed towards the window. I couldn't see anyone but I heard voices and some laughter. I knew then that even though most of me was hidden, the top of my head was probably visible, and with him standing, and my head bobbing, it was totally evident what I was doing, what I'd done. \"By the way, my name is Joe,\" he laughed. He handed the phone to me and thanked me and left.\n\nJohn had texted, \"you'll really get off watching it back, you had some admirers.\"\n\nHe was right, when I watched \"the show\" I saw two of my neighbors, two college dudes who live upstairs, walk by and stop when they realized what was happening. They had watched the end of it, with Joe blowing his load in me. One of them even sneaked closer and pointed his phone at us. They'd seen enough to know I'd sucked off a guy in front of the window.\n\nThe next morning I hurried to get ready for class, still in a fever by what had happened, and excited to see John and his reactions. I purposely wore a shorter skirt. I wanted him to be able to see how excited I was. On the way out the door I saw a note on taped on the outside of my door. It was from my neighbors, the voyeurs that had seen my performance. It said, \"We saw what you did. Come talk to us.\"\n\nIt struck the nerve I knew was coming. Humiliation, debasement, the embarrassment of other people knowing who I was, what I did. I rushed to class and showed John the note. He just nodded and started his lecture. I kept my legs open for him, my pussy was on fire, I wondered if he could see the wetness. When class was over I stayed behind. He had the note in his hand. He had a wry smile.\n\n\"How do you feel about blackmail? We never really discussed it, though it would be a common thing, for people in your situation.\"\n\n\"Jeez, it's frightening, terrifying, really.\"\n\n\"But still thrilling, isn't it?\" He asked knowingly.\n\n\"Embarrassingly so,\" I admitted.\n\n\"I could tell, I think I could even see your wetness.\"\n\nI blushed. \"What should I do?\"\n\n\"I think you should go talk to them,\" he smiled. \"This is all part of what you need, the humiliation, it's the cost of needing that element in your fantasies.\"\n\n\"Ok sir?\"\n\n\"I have an idea. Do you know their comings and goings, so to speak?\"\n\n\"Yes, they have a later class than me. They usually come home an hour after me. I usually hear them, they are the loud types. They are usually laughing, bouncing off the walls, play fighting, that sort of thing.\"\n\n\"What kind of guys are they?\"\n\n\"Oh, they are nice, really. They've helped me move furniture, have collected my mail when I was away, that sort of thing. They both are kind of nerdy, though in a cute way. I think the note was particularly forward for them, they aren't usually the \"take charge\" types.\"\n\n\"Good to know. I have an idea.\"\n\nHe told me his thoughts while I stood there in front of him, sans panties, while I could feel how wet I was. He smacked my ass and sent me on my way.\n\nI paced my apartment for the hour before I expected them home. I couldn't believe I was doing this, yet I knew it was what I wanted, what I'd asked for. It was just all happening so fast, as I supposed it should. My heart flipped when I saw their car pull up. I let out a sharp exhale and got ready. I stripped down again. John really enjoyed my nudity, I didn't want to disappoint him. When I saw Todd and Rod approach (he hates to be called \"Rod,\" his name is Roderick, but the rhyme is just too quick and easy) I swallowed uncomfortably and stepped up to the window. I could see them coming up the walk. Per John's instructions I pressed and mashed my naked tits obscenely against the glass and stayed there, as they approached. Sure enough, they stopped, gawked and laughed as they elbowed each other. Seconds later they were knocking on the door. I had the safety latch on, I had a deal to make first. I opened it, the chain only allowed a few inches of space for the door. Still, Todd could see I was naked, obviously he knew it from my display at the glass. Rod was behind him, frantically trying to see me as well. \n\n\"Taylor...what the hell?\" Todd asked, his face twisted in excited confusion.\n\n\"You boys said you wanted to....talk,\" I said sweetly.\n\n\"Well, fuck, yeah...about what you did yesterday...what you were doing...\"\n\n\"You mean when I was sucking that guy off who I'd just met, in front of the window?\" I was just echoing the words John wanted from me.\n\n\"Uh, yeah. I mean, it was cool and all, but....what the hell, that doesn't seem like you, Taylor.\"\n\n\"It is me,\" I admitted. \"That's actually the real me. So, what do you want to talk about?\"\n\n\"Well, we were wondering...\" Todd stammered before Rod cut him off.\n\n\"We have it on our phone. I got in there at the last minute and got a good video of you taking that guy's load. It just shows the top of your head, and that guy's waist, him bucking and all that, but you can tell it's you by your hair...and by the background of your apartment.\"\n\nIt wasn't much. But that wasn't even the point. They wanted to blackmail me and John wanted it to be successful, that's all I needed to know.\n\n\"I know, I heard you guys,\" I said, feigning embarrassment, though I didn't have to try hard for that. \"What do you want?\" They just stood there, open mouthed and gawking. I knew I had to help.\n\n\"You want some of that, too, don't you?\"\n\nThey both nodded furiously.\n\n\"Here's what's going to happen, read this,\" I said, as I handed Todd my phone. John's text was there for them.\n\n\"Gentlemen, this slut is willing to repay you for your silence on her lewd show previously. As such, she will suck you off, both of you. However, you are to erase the video you have beforehand, and, you have to agree to some conditions.\"\n\nTodd showed me my phone. I said, \"go ahead, answer him.\"\n\n\"Ok?\" he wrote. \"What conditions?\"\n\n\"One, you erase the video. Two, she'll be naked for the entire time and will suck you as she did the other guy, hands behind her head, submissively. Three, you will capture her sucking both of you on her phone. Four, for the time being her name is \"slut,\" you needn't call her anything else. And lastly, you will consider this to be a one time thing, unless I decide otherwise. Do we have a deal?\"\n\nTodd couldn't type, \"yes!\" fast enough.\n\nI grimaced with shame yet overwhelming lust as I opened the door for them. They bounded in like hyenas. Todd handed Rod the phone. \"I got shotgun!\" he said with a smile.\n\n\"Where do you want me?\" I asked demurely.\n\n\"In front of the window, slut...\" he said hesitatingly, as if to not offend me.\n\n\"I nodded and whimpered. I dropped to my knees. \n\n\"God damn, Todd, look at that body! Look at those tits. I gotta feel those.\"\n\n\"No!\" yelled Todd, \"don't fuck this up for us!\"\n\n\"Hey man, the guy didn't say anything about not touching her!\"\n\nHe positioned the phone against a book so that it was standing and recording on its own. He got behind me and started feeling up my tits while I went to work on Todd's cock. Rod got his hands and fingers on, and in, my pussy. I was soaking. I noticed that my phone didn't buzz. That meant John was fine with Rod's groping. Todd didn't last long and gave me a nice load of youthful cum. They quickly switched places. Then it was Todd getting handfuls of me. I could smell their fingers, the cum, everything, our scents were everywhere. Finally, Rod's cum joined his roommates in my throat. They stepped back in wonder as I gurgled on their cum at first, but swallowed and licked it all up.\n\n\"God, that was great Tay....slut,\" Rod grinned.\n\n\"Thank you sirs for your cum,\" I burped. I was lost in the beautiful hum of slutty submission.\n\nAfter they left I sent John the recording. He loved it. \"How did that make you feel?\"\n\n\"SO embarrassed, so vulnerable. Now, they know who I am, what I am. I'm going to see them again and again. How am I going to face them? Yet, I know that's part of it, part of experiencing the whole fantasy. I KNOW I have to do it, and then have to deal with the consequences.\"\n\n\"Yes, you are going to face them, with them knowing you are a brazen slut, that you've swallowed their cum. I'll bet they are going to help you out around your place a lot more often,\" he joked.\n\n\"Are you going to....am I going to have to....?\"\n\n\"Suck them again? I'm not sure. I'll think about it but I want you to be in the dark. I think that'll be part of the experience, that you'll never know who, or when.\"\n\n\"Fuck, so dirty, sir,\" I moaned. \"What do I tell them if they ask for it again?\"\n\n\"You tell them you have to ask me first. I did love the exhibition you did for them first, especially the tits mashed against the glass, thing. I may at least let them see you more,\" he mused.\n\nI could feel myself almost melting into a squishy mess with him speaking to, and about me, like that. He let me rest over the weekend. The next time I went to his class he pulled me aside beforehand. He handed me something. I knew what it was before I even looked, it was a butt plug. He told me to go put it in. I went to the bathroom to insert it. I'd worn another ridiculously short skirt so I could flash him, it barely went down past my naked ass. I'd used butt plugs before but this one filled me nicely. I walked back to class, having to feel its fullness inside me. I sat in front and crossed and uncrossed my legs for him as he spoke. I had to \"dance\" between cheek to cheek because otherwise the butt plug would be forced deeper inside me. He had a remote or something in his hand. I thought it was a laser pointer. Then, he pointed out something on the chalkboard. Suddenly, I felt an electrical buzz in my ass, it shocked me. I let out a little \"yip\" before I stifled it.\n\n\"Fuck, the thing's on remote, and he's doing it right in front of the class!\" I realized.\n\nHe kept me jumping. Each time he'd point to something he'd push the button, unbeknownst to the rest of the class. I'd feel the jolt in my ass and I'd squirm uncomfortably. Sometimes he'd fake me out by pointing but not pushing the button. That way I never knew when the real shock would come. I was in the middle of shifting from one butt cheek to the other and he surprised me again by shocking me. The butt plug was in direct contact with the chair at the time, I was right in the middle of the weight shift. There was an audible buzz. I nearly fainted. The guys on either side of me were looking at me weirdly. I feigned like it was my phone, which luckily, was also on the seat. I saw John smirk at me. He was loving it.\n\nOnce class was over and everyone was gone John took me into one of the small side rooms, used for labs. He had me sit on the counter. He made me sit there with the butt plug in contact with the counter while he shocked me, over and over, just to watch my reaction. He had me squirming all over the surface as I found out that the earlier shocks were on the \"mild\" setting. Now, I was getting the full treatment. I was begging, pleading for him to stop. He'd stop, ask me if that's what I really wanted. I'd admit that I wanted him to continue and he'd do it again, over and over. I could feel my wetness like I was sitting in a puddle. Then, he stopped. He pulled my legs apart roughly and with his fingers he probed my wetness. When he'd worked me up sufficiently he inserted two fingers in me. They were long and thick, much like his cock. I was bucking furiously against his thrusts. He worked me up to the edge, over and over. Finally, when I was about to see stars, I felt the shock in my ass again, it drove me over the edge and I came, over and over again on his beautiful hand. He stepped back and admired his \"work.\"\n\n\"Damn, is there ever a time you aren't totally gorgeous?\" he asked rhetorically.\n\n\"Oh my god, John...er...sir. That was amazing!\" I reached for his cock.\n\n\"Not here, not this time,\" he said reluctantly. \"I can't get caught with my pants down,\" he laughed.\n\n\"But sir!\" I pouted. I wanted his cock. I wanted to please him.\n\n\"Believe me, this gives me pleasure, working you out like this. Don't worry, you'll be on your knees soon enough,\" he promised.\n\nHe sent me home, butt plug still in place. He gave me the remote and told me to push the number whenever he'd text one. I was at a stop light and I got a \"1\" text. I had to push the button. He'd set it so it would pulse for 30 seconds. A little bit down the road he texted, \"3.\" I could barely hang onto the steering wheel. People were passing me on the left and looking at me as they passed. I'm sure it looked like I was hanging onto a root on the top of a cliff, I was clinging onto the wheel so hard. Thirty seconds was such a long time. As I got into my parking lot I got the dreaded, \"5\" text, the highest level. I nearly screamed as the shock pulsed through me, over and over. I had my fingers in my wet pussy and got myself off just as the last pulled ripped through me. I barely was able to stagger inside and close the door behind me. I wondered what was next.\n\nSure enough, when I got home and had barely changed and started dinner when Todd and Rod came home, loudly. I could see them coming up the walk. They were looking directly in to my window. They were hoping for another show. I just had on a peasant top and shorts. They hadn't seen me yet. I thought of texting John, but I knew what he'd want. I took off my top and I walked into the living room, right in front of the window. I was facing towards the TV like I was clicking the remote channels. I knew they could see me, topless. I actually wished I'd taken off my shorts too, I had on panties now which I knew they'd like. The thought even crossed my mind that I should be totally nude, after all they'd already seen everything. They had stopped. I imagined they were elbowing each other again. Finally, I went back to the kitchen to check the stove and I heard them loudly tromping up the steps, no doubt disappointed that they didn't see, or get, more.\n\nI was in uncharted territory. With my new arrangement with John, I didn't know how much I was supposed to do, or not do, without his consent. He was happy when I told him that I'd at least let them look.\n\n\"Should I have done more?\" I asked, fearful of the answer.\n\n\"No, that was great. I want you to do more of that. Try to be nude, or at least topless whenever you are in your living room. It doesn't have to always be just for them.\"\n\n\"Ok sir,\" I said breathlessly. Just hearing his voice made me wet. \"Do you have any...um...opportunities lined up for me?\" I asked hopefully.\n\nHe just let out a low chuckle. \"We'll just have to see. Remember our rules,\" he said cryptically before hanging up.\n\nIt was after 8pm. It was already dark out. I saw a light in the parking lot but I paid no mind to it. Suddenly, there was a knock on the door. I looked out, it was an Amazon driver. I opened the door a crack. I still had on my peasant top, no bra, and the tight shorts that highlighted my figure nicely. \n\n\"Yes?\"\n\n\"Amazon, delivery for Taylor?\" he said.\n\nThat's when it hit me. This was for John. He'd ordered something and had it sent to me. He was testing me, or rewarding me, not sure which. I let him in. He was a young, light skinned black guy with an afro, kind of retro 60's. It was a cool look on him. I could see him ogling me, not so subtly. I was in a panic. I knew what John wanted, if he'd warned me I'd have dressed differently. Then, I realized this is kind of what he wanted. He wanted to see how I reacted spontaneously. I made small talk as Dray (from his name tag) stood there nervously. I couldn't tell if it was because he was in a hurry or if he just felt the same sexually charged energy as I did. I signed for the package and he started to leave. I cursed myself for having been dressed at all, after all, John had suggested I walk around nude. This must've been what he'd meant it for. The door was just about to close when I thought of something.\n\n\"Wait! Wait!\" I blurted out, which caused him to stop and turn around.\n\n\"I don't really remember ordering anything. It may be a mistake,\" I pleaded, trying to buy time to come up with the courage and the inspiration for what I was supposed to do.\n\n\"You are Taylor _____, right?\"\n\n\"Well yeah, but don't they ever get the names wrong?\" I asked hopefully.\n\n\"I don't know, not often. We're pretty good at this delivery stuff,\" he joked. \n\nI was about to lose him again before I said. \"Well, at least let me open it and see if it's supposed to be mine.\"\n\nHe shrugged and watched as I ripped open the box. \"That fucker,\" I said to myself. My face reddened. It was a large dildo! John had done this on purpose.\n\nI saw the raised eyebrows and the smirk on Dray's face. \"Well, is it yours?\"\n\nOvercome with shame I nodded. \"I uh...yeah...I guess I forgot about this one,\" I said, faltering. I was so shaken I'd given up the thought of keeping him there. I was stunned and helpless. Luckily, Dray wasn't as hesitant.\n\n\"Well, if you ever need someone to show you how that works you just look me up,\" he laughed. I know he was being hopeful, but was expecting nothing. This was going to happen.\n\nI put down the box. \"Listen, you've been so nice about all of this...can I...?\" I said as I stepped closer to him. \n\nHe didn't even hesitate, he grabbed me and took me in his arms and kissed me deeply. I let him. His hands worked his way up and down my chest, down my hips, around to my ass and back again. He worked his fingers down to my pussy and nearly lifted me up with them inside of me. It made me want a cock in there, and soon. I just wanted John to decide so I pulled away, playfully.\n\n\"Can I...suck you, as a tip?\"\n\nHe didn't say a word, in seconds his pants were at his ankles. \n\n\"Thank you!\" I mouthed silently as I dropped to my knees. Black cock, I'd always fantasized about it, but never had it. He was going to be my first, hopefully not my last.\n\n\"Oh, I forgot something,\" I grinned, still red faced. \"Can you record this, point of view style?\" I handed him my phone.\n\n\"Wow, you ARE kinky. We don't get many of those.\"\n\n\"But you've had some?\"\n\n\"None like you, I can guarantee that! Most of them are lonely cougars who have seen too many winters,\" he joked.\n\nI waited until the camera was ready before I went to work on his cock. It was average size, but wonderfully shaped. I especially loved the head, it was so smooth and full. I suckled it lovingly. I made love to his cock while he looked down at me, filming me the whole time. I got him bucking into my face softly. As added encouragement I snaked a finger up his ass. I either get an instant, \"NO!\" or a groan. Dray just groaned. I smiled, at least the best I could with my mouth full of cock. I finger fucked him while he fucked my face slowly at first, before increasing the pace. I let him fuck me like that, not to the point of gagging, but taking him very deeply with each thrust. Finally, with my finger up his ass he came in my mouth and I fought to keep as much of it in me as I could. He withdrew with a gasp.",
        "\"Fuck, girl, that was fucking awesome!\" he said appreciatively.\n\nI licked my fingers clean. That blew his mind, that I was licking up the taste of his cum and his ass. I usually only do that on special occasions. I decided that I needed more special occasions!\n\nJohn was beside himself at viewing the video. He loved every second of it. He loved how embarrassed I was at seeing the dildo, how the guy took charge, and especially how I finger fucked him to get him off.\n\n\"You really have showed me something,\" he admitted. \"When this started, I wasn't sure if this was just a youthful fantasy and if you'd continue once you started. You've shown me a lot.\"\n\n\"I have, sir. But I'm still nowhere NEAR where I want you to get me. Challenge me, sir. We don't know my limits. Push them, find out what I can take.\"\n\n\"On that note, you've got a date tomorrow,\" he chuckled.\n\n\"I do? With who...or whom?\"\n\n\"With my wife,\" he said to my shock. He told me what to wear, where to be but none of the particulars. \n\nI knew another chapter of my fantasy life was about to be opened.\n\n Chapter 4\n\n*\n\nI stood in front of the mirror partly amused, mostly horrified by what I saw. I was wearing the outfit John had picked out for me for my \"date\" with his wife Sophie. It was not much more than a costume I'd mentioned for a Halloween party I'd been invited to. It consisted of a extremely short, plaid skirt and a black stretch knit tank top that was cropped, just under my tits. My hair was in a ponytail as instructed, \"so it doesn't get in the way,\" and I was wearing sexy red wedge style shoes. It was a cross between \"sexy schoolgirl and Slutty Dorothy.\" The outfit was completed with matching patterned knee socks. It was NOT meant for public viewing, at least not in anything but an adult setting. I practiced raising my arms and bending at the waist and in different positions. It was no use, any movement of my arms raised my top to expose a lot of underboob, and any bend exposed my ass cheeks. I was terrified of going out in public like that, Halloween was still weeks away. Still, John's text buzzed me into duty. I quickly shuffled out and nearly ran to my car. \n\nI had instructions to meet her at the park. It was nearing dusk, thankfully. I got out of the car and walked to the appointed spot. She was sitting on a bench. She looked like a classic, elegant beauty. I thought of a younger version of Diane Lane. Her hair was still golden, with perhaps a touch of gray. I guessed she was in the same age range as John, mid 40's. She was wearing a suit coat and an over the knee skirt that reminded me of the way Jackie Onassis dressed. I walked up to her, thoroughly embarrassed.\n\nShe lifted her eyes over her glasses and said, \"my my, so this is my husband's new pet. I'm Sophie.\" She tapped the bench beside her for me to sit. I sat quickly and quietly, like a puppy in training. She gave me a knowing grin as she traced her finger up my ribs, which caused me to flinch since I was so ticklish there. She paid no attention, her finger made its way all the way up to the side of my tits. She hooked her finger under the material and lifted it slightly, exposing the bottom of my boob. I felt the cool air on my skin and felt my nipple tighten in response.\n\n\"Oh my, you have such nice...assets, dear,\" she sighed appreciatively. She let go of the material just as a pair of male joggers ran by. They still looked, though. I had my legs crossed but even so they could see plenty of thigh, along with my exposed tummy and my tits, threatening to burst out of the stretchy material.\n\n\"Oh look, you have admirers already,\" she said with a slight grin. She was less demonstrative than her husband. Still, I could feel that she had the same intensity, lying underneath. \"Are you....excited, down there?\" She asked, barely above a growl.\n\n\"Very, Sophie, Ma'am....\"\n\nShe smiled mischievously. \"Ma'am, I like that.\"\n\nI tried to avoid her intense gaze. She didn't allow it. She took my chin with her finger and made me look directly at her. \n\n\"Say it again, to my face.\"\n\n\"Yes, ma'am, I'll call you nothing but ma'am from now on.\" I was blushing. I'd never been so turned on by a woman and yet I had no idea what I was doing there or what was going to happen.\n\n\"How that man of mine gets such fine young pussy I'll never know. Though, he IS an expert at licking, have you had that yet?\"\n\nSadly, I nodded, \"no.\"\n\n\"Its earth shattering,\" she said, chuckling softly. \"Tell me about yourself, and why you think you are here.\"\n\n\"I know your husband told you about my....fetish,\" I said sheepishly.\n\n\"He did, but I want to hear it from YOU,\" she said sternly.\n\n\"I know, I'm sorry ma'am, I wasn't questioning you,\" I said quickly. I found the control instantly attractive. I'd had no idea she was a dominant as well. \"I came to your husband with my fetish for oral.\"\n\n\"Don't talk all psychological with me, dear, I'm a Law professor,\" she laughed. \"Use real words, words people normally do.\"\n\n\"I told him how much I loved sucking cocks.\"\n\n\"Right, not just cock, but COCKS,\" she said with emphasis.\n\n\"Yes. My fetish is to orally please....um....suck the cocks of as many guys as I can, in all different ways, all different types of guys.\"\n\nI could see her eyeing me with rapt attention. \"I see. How many have you sucked so far, including since you met my John?\"\n\n\"Um, I'm not sure, let's see. I sucked two of my neighbors...\"\n\n\"Oh yes, that was fascinating to watch,\" she cut in with glee. \"And that body of yours....wow. LOVED watching that one.\"\n\n\"Ok, so those two, the black guy from Amazon...\"\n\nShe stopped me right there and made me show her the video of it on my phone. I nearly died in a pool of embarrassment as she casually watched me fellate a delivery driver, all while joggers and dog walkers passed us by. All of them shot looks our way, she didn't mute the sound, well it was that, and the way I was dressed.\n\n\"Good god, girl. You DO love sucking cock. Is that your first black one?\" She asked. There was more than a hint of arousal apparent.\n\n\"Yes,\" I admitted, an extra surge of adrenaline shot through me when I said it.\n\n\"But not your last?\"\n\n\"God no, at least I hope not,\" I admitted, much to my shame. She was studying me the whole time. In that way, she was like her husband. I could almost feel her absorbing my thoughts.\n\n\"So go on, how many cocks, let's make it easy, like in the last three months?\"\n\n\"So, those three, John of course. Oh, oh, Sir, I mean,\" I said, quickly catching myself, in hopes to not offend her. \"Oh, the guy John sent to my apartment,\" I had suddenly remembered. \"Um, there were the ones at the bar I worked...let's see, Jason, his friend Dave and....one, two, three, four, yes four of his other friends. Oh, and Randy, my creepy boss. That's what, 11?\"\n\n\"Twelve, dear. My my, can't even keep track of how many cocks she's sucking,\" she scolded. \"You really really dig it, don't you?\" She was breathing heavily, my recollections had stirred something in her.\n\n\"More than I can ever express,\" I sighed softly.\n\n\"Well, I want you to keep track of it from now on. Keep a log if you must. I want you to write down who, at least the times you actually KNOW their names first,\" she chuckled. Write about their cocks, what you liked and didn't like, what their cum tasted like, things like that, can you do that? Then, anytime John...I mean, I, want to know I want you to tell me, deal?\"\n\n\"Yes, ma'am.\" She seemed great at the humiliation thing. I was humming, \"down there.\"\n\n\"So why do you think you are here?\"\n\n\"I don't really know. I think you and...sir, wanted us to meet, so everything was out in the open?\"\n\nShe smiled. \"That is a fact. But, why do you think you are here, dressed....sort of, as you are?\"\n\n\"I have a feeling you are going to test me too, in your own way?\" I said, going with my gut.\n\n\"Is that so?\" she smiled. \"Is that what you think? Yes, you are going to be tested, but mostly for the voyeuristic pleasure, then after....we'll \"discuss\" things,\" she said coolly.\n\nJust then a young man came running by with a sleeveless T shirt and running shorts. He stopped. \"Professor Thompson? Hi, Brady, from your Economic Law class?\"\n\n\"Oh, hi Brady,\" she dripped sweetly. She could see Brady's eyes were darting back and forth between her and me.\n\n\"Brady is a special student, chess club, honor society, all while still being manly, right Brady?\"\n\nHe smiled proudly. \"Yes ma'am. I felt her leg give me a nudge at hearing him address her that way.\n\n\"Brady has an adorable way of telling me he'd steal me away if I wasn't married, isn't that right?\"\n\nI could tell that embarrassed him, and I know embarrassment.\n\n\"Yes ma'am.\"\n\n\"Has that happened yet?\" She asked firmly.\n\n\"Sadly, no,\" he said. I could tell he was shrinking from her, from her power. That wasn't her intention, as it turned out.\n\n\"And what did I tell you the last time you turned in your paper and got the only perfect score?\"\n\n\"That you'd find a way to reward me?\" he said hopefully. I think he was hoping for something else than she gave him.\n\n\"Here's your reward,\" she proudly beamed, pointing at me.\n\n\"What?\" he asked in shock. \n\nMy shock wasn't as severe, I expected something like this.\n\n\"This lovely young woman is going to reward you for your good work, just like I promised, aren't you dear?\"\n\n\"Yes ma'am,\" I sighed.\n\n\"Tell him what his reward is,\" she grinned cruelly.\n\n\"I'm going to suck you off,\" I said, already knowing the answer.\n\nShe motioned for us to follow her down a short trail. With Brady trailing behind, she took my skirt and pulled it all the way up over my ass and tucked it into my waistband, leaving my ass completely bare for him. \n\n\"Do that thing where you put your hands up and behind your head, sweetie,\" she purred.\n\nI did. It had the natural effect of lifting the material up over my tits, all the way up to the nipples. She made me walk like that, with him drooling and ogling behind. We reached a small clearing. There was barely any daylight left, still, my goods were fully visible.\n\n\"Now do your thing, dear. And remember, this is a reward for him. Do it for me, it's my reward to him, do NOT disappoint him!\" she warned.\n\nI dropped to my knees on the grass, his cock was out in a flash. To add to the embarrassment she stood right beside us. She had a front row seat. I started to work my magic on his cock. It was impressive, I could see a hint of lust and jealousy in her eyes. She watched intently as I expertly licked, sucked and tongued his staff and head. He was groaning. She was urging him on.\n\n\"Yeah, that's it, enjoy that hot slut's mouth. This is all for you, baby, imagine it's me down there, doing it to you. Cum in her mouth like I know you want to in mine.\" I saw her hand rubbing herself through the dress.\n\nHe couldn't stand the thought of that and he blasted off, far before I expected him to. I hung on for dear life as he emptied himself out into me. Truthfully, I lost most of it, it fell to the ground but still I kept my mouth on him until he finally was spent.\n\n\"Thank you Brady, dear,\" she grinned. \"Keep up the good work, you never know when there will be another reward.\"\n\nShe sent him on his way. I was still on my knees sputtering and choking on the amount I'd had to take.\n\n\"So, you actually like doing this?\" she said, meaning it as a joke.\n\n\"No,\" I coughed. \"I fucking LOVE it.\"\n\nSuddenly she leaned in and kissed me on the lips, her tongue swirled with mine, she was sharing the cum with me. I obliged and returned her kisses with passion. She licked my face and my chin clean.\n\n\"Now get up!\" she said suddenly, remembering something.\n\nJust for \"fun\" she had me walk in front of her in the same fashion as before, my naked ass swaying in the night air, my tits nearly on display.\n\n\"Good god, girl, that ass. If I was a man I tear that shit UP,\" she growled. She made me blush with that thought. \n\nWe sat back on the bench. I didn't know what to expect. It was then a man, probably in his 40's came walking by. He tipped his cap like a gentleman. Sophie let him pass but then halted him.\n\n\"Sir, could you do us a favor?\"\n\nI immediately felt the blood rush to my face.. and elsewhere.\n\n\"What's that, miss? Mr. Jones at your service.\"\n\nHe looked like he would be a butler. Very proper, very proud. He even had an English accent, his hat was even a derby. It didn't seem like park wear, to be honest.\n\n\"Settle a dispute for us, would you?\"\n\n\"If I can.\"\n\n\"My daughter here says her outfit is sexier than my business attire but I think hers is trashy, while mine is very stylish, a classy kind of sexy. Am I right?\"\n\nI almost laughed when she called me her daughter.\n\n\"Well, let's see. Stand up, both of you, let me get good looks at you.\"\n\nI liked his attitude, he was going to get something for himself as well. We both stood, and twirled for him. No doubt my twirl made my skirt ride up enough so that he could see my ass cheeks.\n\n\"So which is it?\" Sophie asked, though totally calm and assured.\n\n\"Well, truthfully, her outfit is....how shall I say this....trashy, as you said.\"\n\n\"A HA,\" Sophie snorted.\n\n\"But, in many circles, and perhaps sadly, with most men, I think they'd choose her outfit. It also depends on what they expect from a woman. If you are looking for \"that\" kind of fun, hers is the way to go. On the other hand, your outfit is most definitely sexy. Sometimes the amount hidden is more important that what's showing. So if you were to want, say, a long term relationship and still with underlying burning desire, one should choose you.\"\n\n\"So you chose both?\" Sophie pointed out.\n\nThe man smiled. \"I wasn't born yesterday, ma'am.\" He started to turn but she stopped him again.\n\n\"So if you just wanted \"that\" kind of fun, you'd choose her for it?\"\n\nHe looked me up and down, there was a longing in his eyes. He sighed. \"Yes, I'd have to say I would.\"\n\n\"Slut, would you show Mr. Jones our clearing?\"\n\nI knew what she meant. She didn't even have to tuck the skirt back in my waistband, I did it. I also put my hands behind my head and led Mr. Jones to the clearing. His blowjob took much longer, one, because he was older, but two, because he was enjoying it so much he wanted it to last. I didn't help speed things along because I was lost in the glory of having another cock to suck. Finally, when he couldn't take it, I urged his load from him. His I was able to fully swallow. I looked up at him licking my lips.\n\n\"Thank you, sir,\" I panted.\n\n\"It was indeed my pleasure,\" he grinned before zipping himself off and walking away, leaving me breathing heavily from it all.\n\n\"Are you making mental notes for later?\" Sophie asked, appearing in the clearing.\n\n\"I am, ma'am.\"\n\n\"So tell me, did they taste differently?\" Her face was showing more than intellectual curiosity.\n\n\"Oh yes, Brady's cum was thick, kind of acidic while Mr. Jones cum was thinner but had a nuttier taste, is the best way I can describe it.\"\n\n\"And you prefer one over the other?\" she probed.\n\n\"Oh no, I enjoy all cum,\" I admitted. \"It's like liking steak AND hamburger. It's just...different.\"\n\n\"I see.\"\n\nShe made me get up and do the exposed slut walk back to the bench. To my shock two more young guys were there waiting. It was dark now, there was no more foot traffic.\n\n\"Slut, this is Derek and Mark, from my Criminal Law class.\"\n\n\"Hi slut,\" they both said in unison, laughing when they said it.\n\n\"Blow that one,\" Sophie said gruffly, pointing at Mark. I didn't protest, I fell to my knees and sucked him in front of the two of them. They were mesmerized by my technique, I could see both Sophie and Derek both rubbing their crotches as I brought Mark off. He came in spurts, which I let spray all over my face, shot after shot, it hit my forehead and cascaded down over my eyes, nose and chin.\n\n\"Holy shit,\" Derek moaned, watching it all. Embarrassingly, Sophie made small talk to them while I knelt there, dripping his cum. She didn't let me clean it off so it dripped town my chin, my chest, my stomach, and onto my skirt. Finally, Mark left.\n\n\"It's time for our \"discussion,\" dear,\" Sophie smiled sweetly. She sat on the bench and raised her skirt over her legs, then up her thighs. \"That naughty little minx,\" I thought, \"she doesn't have panties on either.\" First, she leaned in and kissed me again, there was more cum this time and she made sure my face was clean. I was beginning to think she had an oral fetish herself. Then, she guided my head between her legs. Derek just sat next to her, stunned by the whole scene. \n\nI'd never licked a woman, but I did what all the guys who'd got me off that way did. I started slowly, circling around the clit, up and down the lips, penetrating her slightly with my tongue. Then I'd start over, slowly, agonizingly getting closer and closer to her clit before finally concentrating on it by making circles and flicks over it. She was holding my head and moaning by this time. Surprisingly, she let Derek open her blouse and play with her tits at the same time. She wasn't wearing a bra either, she obviously had dressed for this. I could see him expertly squeezing her nipples at different times. It was like we were working together. Finally, an orgasm crashed over her as my tongue danced on her clit while Derek was pulling her nipples out roughly. Somehow he knew she liked that. She came in pulses, almost like a guy, I had to ride her down slowly, licking her lips, occasionally only grazing her clit, which just made her jump again. Finally, she picked my head up.\n\n\"Fuck, you are even amazing at that!\" she gushed. \"Derek, is that fair? A body like that? Plus, a cock sucking artist, and now THIS?\"\n\n\"I still say you are sexier,\" he said, before looking at me, \"um, no offense.\" \n\n\"None taken,\" I grinned, my face shining with her wetness. \"Do you want me to....reward him too?\" I asked her, motioning towards Derek.\n\nShe just grinned through her lustful fog. \"No, I have other plans for him.\"\n\nShe did let him feel me up first, which only made me even wetter. She told him to go to her car and wait. We sat there for a second in silence before she spoke.\n\n\"You realize all that was a setup, right?\" she said, still adjusting her top. \"Brady, Mr. Jones, these two? Those young guys are guys from my class who....I reward on occasion. Mr Jones the history professor, is a friend of ours who we just thought needed a good blowjob. Did you...enjoy yourself?\"\n\n\"I did,\" I gushed. \"I figured it was happening too easily, like it was pre-planned.\"\n\n\"Well jeez, I guess I'll have to do better next time,\" she said, a bit taken aback.\n\n\"No, no, I don't mean it that way. It was sublimely humiliating, first hearing you talk about me....like \"that\" in front of them, then parading me down the path like you did, then making me do Mr Jones a guy old enough to be...\"\n\n\"Your father, yes, I know, he's OUR age,\" she sniffed, but added a grin.\n\n\"Yes, and then lastly because it was three cocks you made me suck. Three, that's the most I've ever sucked in one night.\"\n\n\"Yes, John tipped me off about that.\"\n\n\"Thank you, ma'am, thank you SO much.\"\n\nShe was still fiddling with her top which was askew from Derek earlier. I tried to help but she said she had to go, that she was in for a long night with Derek.\n\n\"Young guys, they can get it up SO often,\" she sighed. \"I just worry that I need something special, that he'll just lose interest in an older woman like me, and there's still so much I'd like to do with him.\"\n\n\"Wait, let me...do something,\" I urged.\n\n\"What?\"\n\nSlowly, but without resistance I took off her coat, then unbuttoned her blouse. I removed it. She was sitting there on the bench topless. She had a questioning look on her face but I continued. I pulled her dress down and off, leaving her completely bare. She was about to say something snippy. ",
        "\"Trust me, he'll love this...and will probably give it to you even harder,\" I said knowingly.\n\nA sly grin crossed her face. She knew I was right.\n\n\"Now march, young lady,\" I commanded before adding, \"I mean ma'am.\"\n\n\"Wait,\" she said with a timidity that she hadn't shown before, \"I'm supposed to be controlling YOU.\"\n\n\"I know, ma'am, I'm doing this FOR you.\"\n\nI walked behind her the whole way back to her car. She was naked, save her heels. She had her hands clasped behind her back. It made her tits stick out magnificently. It was a long way back. It was risky, people were probably still out there, still she did it, per my suggestion. We got to her car, Derek was waiting, leaning against the hood. He saw her and just whistled. He met us up the path and lustfully picked her up over his shoulder and carried her back to the car. I could see her glorious ass bouncing the whole way. He opened the back door and dumped her, naked, in the back seat. \n\n\"I'm going to fuck you RAW,\" I heard him growl. I saw her face lift up to the window as he drove her away. I could see her mouth the words, \"thank you,\" as they disappeared into the distance. That left me alone, dripping cum from three guys, the smell of her pussy on my face, and my own desires burning. I needed cock and a good fucking, like I knew Sophie would be getting. I needed John to give me the okay. Lost in my fog I stumbled back up the path and sat on \"our\" bench again. I buried my fingers in my overheated pussy and brought myself off again and again, all the while thinking of her soft, pink tongue on me while I sucked on a large, proud, erect cock. I came extra hard knowing I was now the pet of TWO wonderful people. I didn't even care that I was out in the open, or if there were night walkers. I didn't or couldn't even stifle my groans when I came. I was going to need cock, and soon.\n\n Chapter 5\n\n*\n\nJohn called me the next day, early.\n\n\"Oh my god, Taylor, my slut, I have to thank you!\"\n\n\"For what?\" I said groggily.\n\n\"For the thing with Sophie. Fuck, that was awesome. I heard all about it. Do you want to hear about it?\"\n\n\"Of course, sir. Anything that excites you excites me too.\"\n\n\"Good, because I wanted to tell you anyway,\" he joked. \"So last night I was waiting for my lovely wife to return from her \"dates.\" Yes, I knew she had plans with Derek, after, in case you were wondering.\"\n\n\"You two DO have an interesting relationship.\"\n\n\"We do, and we both enjoy it. She's my submissive, if you didn't already guess. She does what I tell her, she loves submitting to me. She did everything I told her to do with you last night. Then, we always discuss things afterwards.\"\n\n\"You mean she's not a dominant?\"\n\n\"Hell no, she's as submissive as you are, if not more. She just followed my \"script.\" I don't think there's a dominant bone in her body.\"\n\n\"Wow, then she's an excellent actress,\" I said with wonder. \"She totally had me convinced.\"\n\n\"Yes, she can be, when she wants to be.\"\n\n\"So then what happens after your discussions?\"\n\n\"Then, I usually either punish her or fuck the hell out of her, or both. Last night I kept falling asleep waiting for her, which is difficult to do because of the excitement of it. I'm always hard, I'm horny, I'm nervous, I'm jealous. There's so many emotions wrapped up together. Anyway, it was close to 5am when I heard her car pull up. I just watched through the blinds as Derek got out, went to the back seat, and picked my wife up and carried her up the walk, to the porch and deposited her at the front door. She was totally naked, mind you. She didn't have a stitch of clothing on her, not even her shoes. I watched him smirk over her beautiful body, then proudly preen his way back to her car and take off. The cocky fucker is driving her car around after fucking her!\"\n\n\"Wow, sir. Were you mad?\"\n\n\"Hell no! At least not after I opened the door to see she was ok. She had been drinking. She's a lightweight, doesn't handle alcohol very well. She looked up at me, her eyes foggy, and slurred, \"hi honey, I'm home.\"\n\n\"She was a mess. She had hickeys all over her, including her tits. Her nipples were bright red, he'd really worked them over. She had dried and or drying cum all over her body, especially her face and chest. I made some coffee and made her tell me the whole story while she sat there in her sexual mess, I didn't let her clean up until she finished. That's when I heard what you did for her, making her walk naked to him like that. That's something I would do, that's why I want to thank you.\"\n\n\"It was nothing sir, after all she, and you, did for me. I just thought he'd really get into it and give it to her a little extra hard.\"\n\n\"That's exactly my thinking, and what I'd have wanted. And he did, by god he DID give it to her extra hard. She said he fucked her like a madman, and when he rested, he did it again, and again. She said he came four times in, or on her overnight.\"\n\n\"And you like having your wife have a lover that treats her like that?\" I asked.\n\n\"I love it. We both do. She usually has more tender lovers, a lot of them actually. I think she's kind of notorious in her classes. She picks a few of them out each semester and lets them work off their stresses on her. But she finds Derek's roughness to be....extra sexy. That's what I mean about her submissiveness, the guy she usually picks fall under her spell. Being younger they see HER as the one in control, the experienced MILF, thing. What she needs is the dominance, the one in control. Derek still is under her spell, too, but at least the sex is more of her liking.\"\n\n\"Well I think that's awesome, sir. I honestly wish I had a husband like that. Well, I mean I'd love to have one like that, somewhere in the future.\"\n\n\"But for now you have me.\"\n\n\"Yes, sir. I can't wait for whatever you come up with next, you are diabolical. Oh...wait, you said you usually punish or fuck her when she comes home like that, did you?\"\n\n\"Oh yeah,\" I heard him growl. \"Both. She loves punishment as much as she loves fucking, I think. I had her bend over the table the second she finished the story. I got out one of our long wooden cooking spoons and I worked that ass OUT with it. She was screaming and yelling but didn't put her hands back to try and fend it off. That's how I know she loves it, and how much she can take. I'd guess she's got some wonderful red and purple bruises forming on that wonderful ass as she sits in on her class today.\"\n\n\"I love that thought, sir. The thought of being thoroughly reddened, then having to sit somewhere in a public place like that, wondering if everyone else can see how uncomfortable you are sitting there, and maybe even figuring out why.\"\n\n\"Oh, so you love punishment too?\" He asked wickedly.\n\n\"Very much,\" I squeaked. \"I've never....had anything but spankings, though, and with very inexperienced people.\"\n\n\"Well, good to know,\" he chuckled. \"I just wanted to know how appreciative I am of last night. I also wanted to bring our own special relationship into focus.\"\n\n\"Uh oh,\" I thought. I suddenly had the fear that this was the, \"it has been great but it's over,\" speech. \"What is it, sir? Is everything all right?\"\n\n\"It's great,\" he said comfortingly. \"I just want to let you know what I want, and expect from you and hear your thoughts on the matter. I'm married. I have a beautiful, sexy, wicked wife. We do a LOT of things together, and apart, as you know. I teach 5 days a week and I do \"mentor\" other students, such as yourself on occasion, though rarely more than one at a time. And with you, it's going to take all my focus,\" he laughed.\n\n\"That being said, I'm telling you there are many times when I'm either not going to be available, or have limited chances to do things with and for you.\"\n\n\"Are you trying to tell me we're through?\" I cried softly.\n\n\"TAYLOR! SLUT!\" he barked, before laughing. \"No, what I'm saying is, you are going to have to do a LOT of this stuff on your own.\"\n\n\"What do you mean?\"\n\n\"I know your fantasies. You've given me the list of things you like. I can suggest things, even direct things some times, but there are a lot of times when you could make things happen on your own, based on our discussions, then share them with me. I'm telling you that you shouldn't just wait around for either me to tell you what to do!\"\n\n\"Oh, you mean like if I had an opportunity with someone I could just do it, then tell you after?\"\n\n\"Exactly. It'll certainly be more fun if we have some ideas for it, like, certain places, particular outfits, a specific activity, but YES, take advantage of every opportunity.\"\n\n\"Oh wow, I agree sir. I've been thinking about things a lot, like with the neighbors, I see them all the time. I think, \"am I supposed to flirt? Am I not? Should I let them see me again? Am I supposed to keep that proverbial door open?\" That sort of thing.\"\n\n\"That's exactly what I mean. I have a lot of things in mind for you, I am NOT going to pass up the opportunity to mentor such a fine slut. But, I want you to enjoy being a slut, even beyond \"our\" things. Is that ok?\"\n\n\"Oh god, I was so afraid you were backing out. I've loved this so much. I'm glad to hear you want to continue to use me.\" I didn't even flinch at saying the word \"use,\" it just seemed so natural now. \"And, I've thought SO much about getting laid lately. Each guy I've sucked up until last night I've wondered, would John want me to let him fuck me?\" I've let them finger me and it's gotten my pussy so ready for it.\"\n\n\"I love that you thought of me,\" he admitted. \"I love that you waited, even though it's been difficult. Why don't we do this? Why don't you just go through your daily life, and, any opportunity that comes up, even if it seems unlikely, or remote, or just unusual and let me know. I'm sure I can come up with a way to make it extra humiliating or fun for you.\"\n\n\"Oh god, sir. That's exactly what I want!\"\n\n\"Good to know your pussy is now open for business, too. And, don't worry, I'm going to be having that myself.\"\n\nI basically wet myself when he said that. \"My pussy and mouth are yours to use...and my ass, too...but I've only done that a couple times,\" I admitted sheepishly.\n\n\"Good to know,\" he said. \"Oh, one last thing before I go. You've opened up something in Sophie. The humiliation, shame, thing. After I whipped her ass with the spoon and fucked her over the kitchen table I started to go to the mailbox and get our newspaper. Yes, us older people still like to read the paper, on occasion. I saw her on her knees, she was still whimpering from the beating and the fucking. I thought of you making her do her naked walk. I said, \"I should make YOU go out there, like that, naked and red-assed, and get our paper for being such a fucking slut!\"\n\n\"She just looked up at me and said pleadingly, \"you wouldn't...would you?\"\n\nJust the way she said it made me know what to do. I grabbed her by the elbow and dragged her to the door like that, naked, her ass totally red and on fire. I pushed her out the door. She didn't even look back. I yelled out for her not to rush. She did it. When she came back I made her kneel at the entryway and crawl the last few feet in, with the paper in her mouth.\"\n\n\"Holy shit, sir, that totally made me wet!\"\n\n\"It made her wet, too. I could tell when I got her off with my tongue right there in a chair by the front door.\"\n\n\"What about your neighbors? Aren't you afraid of what they'd think?\"\n\n\"Well, one, it wasn't even 6am yet, but two, I have a feeling our neighbors already know what kind of relationship we have and I suspect more than one have seen her being dropped off like last night, in various states of undress, by a number of different guys. I'm not worried, though, on both sides of me the houses are owned by just men, and directly across the street is a couple in their 30's who've made some vague inferences about swinging and swapping. I've had a thought in mind for awhile now to just let some of them, \"sample her charms.\" I think it's inevitable.\n\n\"That's so awesome that you are cool with that.\"\n\n\"Now, we need to get you some cock,\" he joked, even though we both knew he was serious.\n\nHe was right, though. There were plenty of opportunities to indulge my fetish. I'd just unconsciously needed his approval. Having it, things happened very quickly. One thing I had to deal with right away was the Todd and Rod thing. I'd been avoiding them since their blowjobs, other than teasing them a couple times in the window. Part of my humiliation fetish is to have to face it. I couldn't keep avoiding them. John's assent made me let it happen. After our talk I knew what I had to do. After class, and after getting myself worked up by flashing John my pussy as often as I could, I raced home with an idea. I waited for the hour to pass. As I knew, on Tuesdays, Rod has some extra coursework to do, Todd would be alone. Sure enough, he came walking up the sidewalk, glancing in my window as he often did. I could see him from above, I'd climbed the stairs already. I hid around the corner of his apartment. I saw him enter. I quickly stripped and left my clothes in a pile by his door. Then I knocked. His face told the whole story, his mouth opened wide like the logo for the movie, Scream. I stood there naked and smiling.\n\nI just pushed my way in, dropped to my knees and blew him like that, door open and everything, just the screen to shield us. When I finished, I was licking him up and wiping off and I said, \"when Rod gets home send him downstairs.\" Then I walked back down to my apartment, holding my clothes. An hour later, Rod pumped my mouth full, too, in the entryway with the door open, just like his roommate had. I had told them both to, \"not be strangers.\" I'd committed myself for so much more. I texted John and told him all about it.\n\n\"Wow, that must have been embarrassing, and even more so by leaving it open to do it again...and again. How do you feel about that?\"\n\n\"Slutty, so slutty,\" I purred. \"But it's what I needed. I NEED to be reminded that I'm just a cock sucking slut. I've been hiding behind the \"occasional\" thing too long. I need guys to get my mouth repeatedly, once they know who I am.\"\n\n\"On that note...I uh...don't know how to ask you this...\"\n\n\"What, sir? You can ask me anything.\"\n\n\"I know, it's just...something came up. Sophie and I were talking about you, naturally, as we often do. She is, how shall I say, totally enthralled by what you do. She's had another part of her open up which I might have underestimated.\"\n\n\"What's that, sir? The cock sucking thing? I think I saw that in her right away. She seems to love the whole idea of oral.\"\n\n\"Right, wow, you are very astute.\"\n\n\"Well, it's probably because I recognized that part of her, in me,\" I giggled. \"So why is that a problem?\" I wondered. \"Surely you don't mind her sucking cocks, if you are fine with all that fucking she's doing.\"\n\n\"Yes, I'm totally fine with it. We both are, we just kind of need your...expertise on this. You see, she has her lovers, many of them, as you know. But, they are all students, young, healthy, sexy. She's interested in some of the darker sides, like you are.\"\n\n\"Like what?\" I said with interest. The whole idea of her on her knees sucking cocks was getting me worked up.\n\n\"She was impressed, to say the least, the way you took to sucking those cocks the other night. First, the young guy, then Mr. Jones, who was extremely appreciative, by the way,\" he laughed. \"Then, the third guy who you just sucked in front of the other two. She's mesmerized by the thought that it doesn't matter to you, that it's a cock, and you are supposed to suck it. She feels like maybe she's been getting off a little easy, sucking ones she has picked out, guys with natural sexiness.\"\n\n\"Ah, she's interested in trying others....ones that, say, aren't so pretty?\"\n\n\"Exactly!\"\n\n\"But why do you need me? I mean, I'm totally flattered, but cant you just MAKE her suck someone...like that, and see if she likes it?\"\n\n\"That's just it, she knows she'll love it, she was convinced when she saw you. She's just nervous about...you know...how to do it. You seem to have a natural flair for it, sucking strangers cocks, that is.\"\n\n\"Yes, there's something extra special about sucking a stranger, that it's so dirty, so dark. It's not easy, it's humiliating, all those reasons that make it so hot. So what do you need from me?\"\n\n\"I'd like you to show her how to act, how to get that. She's willing to do whatever you tell her to, per my instruction.\"\n\n\"But again, why not just make her suck Mr Jones, or one of the neighbors you have threatened her with?\"\n\n\"Because it needs to be raw, dirty, like the things you've done. I have some ideas on the subject. I'll still be in control, it's just something I think I should share with you. I want it to be special, especially the first time, like you with Joe (the mechanic). She's also totally fixated on the fact that you sucked three cocks in one night. Even when she's sucked her lovers she's never sucked me off in the same night. She wants that experience. I just think it'll be FAR more humiliating having to take \"lessons\" from you, someone in the same position as her. She seems to dig that part of the fantasy as much as you. I certainly control her, I'm the one sending her to you, with some specific ideas. You two are still very much under my direction. Be an actress, just like she was.\"\n\n\"Ohhh, I like that, I'd suck at controlling someone. So what should I do?\"\n\n\"I'm going to send her to you. My task for you is, by the end of tonight I want her to have sucked off someone she's never met before, as you've said, looks aren't important. I've got a few names, I have to make some calls.\"\n\nA few days later it was planned. She showed up at my apartment after 9pm, I could tell she'd been drinking. We kissed. It was a passionate one, our tongues danced together like we were old lovers. She had on one of her work outfits.\n\n\"I'm here...I'm all yours,\" she slurred. \"Just for tonight,\" she giggled.\n\n\"Bullshit,\" I bluffed, using my best acting skills from my high school drama club. \"You and I both know you're submissive, probably more so than I am.\"\n\n\"Hush Mishy...\" she said, messing up her words. \"I'm just here for instruction....\"\n\n\"You are here for me to control. I'm doing you a favor, I'm helping you fulfill a fantasy, don't question me. If you don't agree with that, you can leave,\" I bluffed. I knew she wasn't leaving. I could see the effect my demeanor had on her, she looked flushed.\n\n\"Ok ok....I'll do what you say, sheeshhhh.\"\n\n\"And call me ma'am,\" I said, swatting her backside with force. That was payback for the other night when she made me call her that.\n\n\"Ok, yeshhh ma'am.\" \n\nHer whole attitude had changed. I recognized the look. It was the look of submission, her head was down.\n\n\"First, this won't do.\" I sniffed, grasping her suit coat. I took it off her. \"And this blouse, what are you, Amish?\" I removed it as well. She had on a very chic, styish bra. I liked it. I let her keep it. I pulled her work dress off. Again, she had matching panties, very classy, very sexy. She was standing in her underwear and heels.\n\n\"Much better. Now, tell me why you think you are here?\" I teased, mouthing the same words she'd used on me, days earlier.\n\n\"I'm here to learn how to suck cock.\"\n\n\"Yes, but whose cock?\"\n\n\"Whoever you have me suck, ma'am?\" she asked questioningly.\n\n\"Yes, that's right. But, more specifically, who are you wanting to learn to suck?\"\n\n\"Strangers,\" she whispered with shame. \"I want you to show me how to convince strangers to let me blow them.\"\n\nI stood her in front of my window. It was dark outside, only the parking lot light shed any light outside. My lights were on, standing, she'd be clearly visible. I made her stand there uncomfortably while I purposely stalled and scanned her. The exhibition thing was a huge part of the excitement in my psyche, I wanted to share that with her. I thought she'd get off on it as well.",
        "\"Why do you want to suck strangers cocks?\" I pressed.\n\n\"Because it's just so....raw....so dirty. I saw you do it and I ....\"\n\n\"It got you wet?\"\n\n\"Soaking, ma'am,\" she cooed.\n\n\"Are you wet right now?\"\n\n\"Yessss.\"\n\n\"Show me.\"\n\n\"Here? In front of the window?\"\n\n\"Yes, slide your panties aside and show me how wet you are, get your fingers in there, show me the wetness.\"\n\nShe glanced behind her but she did as she was told, her fingers were glistening in the light when she removed them.\n\n\"Good, you need to be wet for this, it helps, trust me,\" I grinned.\n\nI made her kneel on the floor, just like I had that first time. I let her keep her underwear on, it was just so sexy on her.\n\n\"What...am I going to have to do?\" she asked with a fearful peep.\n\n\"You are going to suck a guy's cock who you've never met, right there, just like I had to.\"\n\n\"I can't...here? I....don't know...\"\n\n\"Yes you do. You know what you are. You are like me. We NEED to suck cock.\"\n\n\"What do I...say? What do I do? Who is coming?\"\n\n\"You won't know, that's the beauty of it. Total stranger, his cock is going to be in your mouth in...probably 5 minutes.\"\n\n\"Oh god, oh god, who is it? What do I say?\"\n\n\"You won't have to say much, honestly. Trust me, the first one is the hardest. But, it's way easier than you think, guys don't need a lot of persuasion.\"\n\nI saw a car pull up, he was here. I whispered some things in her ear then I unlocked the door and hid in the closet. She was on her knees, her fingers interlaced behind her head. I wanted her like that, so she could experience what I had to.\n\nThere was a knock on the door. \"Come in,\" she managed to choke out.\n\nHe came in, even I didn't know him, John had made the arrangements after our discussion. There was no recognition of him in her face. I saw the familiar redness of her neck and face. I knew she felt hot, bothered.\n\n\"What the fuck, I thought you were supposed to be some young girl.\" He scowled. He'd obviously been told by Joe of our earlier encounter, still, it was all for show. It was actually one of the mechanic's coworkers. John had set it up with him after our discussion. I liked the added humiliation of the insult, however. I wondered if it would drive her as crazy as it would me.\n\n\"Oh god, I'm sorry,\" she stammered, while still maintaining her posture.\n\nHe shrugged. What the fuck, what do I care? What are you here for?\" He asked pointedly. He bent over and lifted her face and made her look at him.\n\n\"I'm here to ....suck your cock.\" It was barely audible.\n\n\"I heard the other slut was naked,\" he grunted.\n\n\"I'm sorry, I ...I....\"\n\n\"That's ok. I like that underwear on you, for now. Suck my cock, bitch.\" he said, opening his fly.\n\nHe was grossly overweight. He wasn't very tall, he was like a lifelike Humpty Dumpty. His hair was a greasy black, like he used the motor oil on it or something. He had a toothpick in the side of his mouth. This was most certainly someone she'd never have sucked on ANY occasion. He made her crawl on her knees to him to tease her. Then, his hard cock bounced around and he even slapped her face with it as she tried to get it in her mouth. It was difficult, since she couldn't use her hands. Finally he let her take it in her mouth. Her whole expression changed. It went from fear and shame, to total lust. She was slurping and sliding her mouth all over him. Secretly, I'd placed my phone on the table to record it all. I knew I'd get off totally watching it over and over. He was using her mouth good. She actually let him gag her a few times, taking him deeply in the back of her throat. He'd let her recover for a second before jamming it back in.\n\n\"I have GOT to see those titties,\" he growled. He went around behind her and removed her bra. \"Sensational,\" he moaned appreciatively. He went back to the front and let her slobber on him some more. Finally her work was too much for him, he held her head on the sides and grunted and groaned his way into a massive orgasm. I was kind of jealous, the craving for the taste never leaves me.\n\nHe filled that normally classy but now slutty, perfect mouth of hers. Like a trooper she took all that she could but still it left her sputtering. He just watched her there, on the floor, choking on his cum as he pulled up his pants and zipped himself up.\n\nHe stood her up. \"I want those panties as a souvenir,\" he demanded as he pulled her into him in a great bear hug, his hands all over her ass. He pulled her panties down without a fight. She stepped out of them. He get his thick fingers up her pussy and had her dancing on her feet before he broke away.\n\n\"So if you or the other bitch need to be fed, anytime, just call me,\" he grinned before walking out.\n\nI stepped out and held her, she was sobbing softly. My hands caressed her slender hips and lovingly stroked her ample, but firm ass.\n\n\"Are you ok?\" I asked.\n\n\"More than,\" she grinned in her buzzed state. \"That was....something,\" she admitted.\n\n\"Was it what you imagined?\"\n\n\"No, one can't imagine something like that. But it was what I needed. I think you and I ...get one another now.\"\n\n\"The best part?\" I asked.\n\n\"I just sucked off some guy. I don't even know who he was. I don't even know his name. Plus, he was so...disgusting. I may never know his name and that makes me so....\"\n\n\"Embarrassed and horny?\"\n\n\"Yessss,\" she purred. \"And, he's driving around now somewhere with my wet panties in his pocket, and I'm SURE they were soaking. He has my lipstick on his cock. He's probably going to drink with his buddies while he tells them what some drunk slut did for him.\"\n\n\"And that makes you feel humiliated, doesn't it?\"\n\n\"SO much so,\" she said softly.\n\nI didn't expect much from her, beyond this. It's a lot to take, even I had to experience it over a period of time. She DID have all that other experience though, I think that drove her. I texted John and sent him the video while she rested, still on her knees. She was panting heavily still. \n\n\"Ask her if she's had enough,\" John wrote.\n\n\"So did you get what you needed?\" I asked.\n\n\"I'm so horny right now I could fuck a fire hydrant,\" she hissed. \"No, I didn't get what I needed. I sucked a stranger's cock, for god sakes and now I'm here, naked, still tasting and dripping his cum and I fucking want MORE dammit!\"\n\n\"Are you saying you'd like to do something else?\"\n\n\"Yes,\" she whispered. \"Make me do it again, ma'am.\"\n\nI hadn't really accounted for this. I texted John again, he made another call. He had a backup plan as a contingency, mostly for if the first one fell through, now it was just going to be in addition. I thought, \"she's going to like this.\"\n\n\"We can't go out like this,\" I said, pointing to her nakedness. I made her put on one of my short skirts, well over the knee and one of my cropped tie shirts, one that goes over the shoulder and ties in front. It shows a lot of cleavage and leaves the belly bare. She looked perfect, like a 40 year old trying to look 20. It was John's idea, he wanted that \"trying too hard,\" look.\n\nWe drove silently, she stopped pestering me with questions when she saw I wouldn't answer. We pulled up to a auto shop. It looked like it was closed. I knew better.\n\n\"What? Are you sure this is ok?\" she asked, suddenly scared. It was dark and I guessed she usually wouldn't be caught dead in such a \"blue collar\" place. That's why we chose it, she wouldn't even recognize her own husband's mechanic.\n\n\"Yes, c'mon,\" I said, pulling her along. I knocked on the door. It opened. The large man inside grinned widely.\n\n\"Can I help you?\" he asked, already knowing the answer. It was Joe, of course.\n\n\"Yes this slut is here to suck you off,\" I said, pushing her into his arms.\n\n\"And you? Are you coming too?\" He asked with a wicked grin.\n\nI shook my head no. It actually pained me. I'd sucked him before, I was actually jealous that she was going to suck a cock that SHOULD belong to me. But, this was for John.\n\n\"Oh, and she likes it kind of rough,\" I added John's last suggestion before the door closed. I went back to the car and waited.\n\nTwenty minutes later she came staggering out. She was tripping on her heels and she still hadn't sobered up yet. The skirt was askew, part of it was over her ass, showing her beautiful backside. The top was untied and open. Her tits were out. It looked like they were glazed. I knew why.\n\nShe stumbled back into the car. I could smell \"him\" all over her. Her lipstick was nearly gone, other than the lewd smudges that were on her chin and upper lip.\n\n\"God,\" she said softly.\n\n\"Did you like that one too?\"\n\n\"Fuck...too much. What's wrong with me?\"\n\nI laughed. \"You're asking ME that? You know I'm just like that!\"\n\n\"I know, but how do you do it? The embarrassment, the shame? How do you handle all that? I mean, I just sucked off two guys who I don't know, plus, they've got my pussy juice all over their fingers, they'll smell me as long as they want. How do you do it?\"\n\nI shrugged. \"I don't know, I just do it, and let the rest happen.\"\n\nShe said, \"I suppose it's easier, in some way, not knowing them, not having to face the humiliation of seeing them again, seeing their faces, them knowing what they made me do for them.\"\n\nI nodded. I told her about Todd and Rod, about how I avoided them, but then finally gave in, even promising more consistent blowjobs.\n\n\"Wow, that's what I mean, how can you face them, especially now, now that they are going to expect you to do that to them again?\"\n\nI joked, \" I don't really face them, I'm on my knees, after all.\"\n\n\"I don't know if I could do that,\" she said, trying to make sense of it. I knew that she could. I had to help her.\n\n\"You actually will have to,\" I said menacingly. I was about to drop the bombshell that John wanted me to.\n\n\"What? Why?\"\n\n\"Because those two you just sucked off are actually John's mechanics. You might very well see him again. In fact, John said he's working out a new \"payment\" plan for all the work on his car. I'd guess that means you...and maybe me.\"\n\nI could see her face turn white, then a familiar shade of scarlet.\n\n\"Oh fuck,\" she hissed. \"Do you know what he did to me?\"\n\nI shook my head.\n\n\"Once the door closed he basically ripped the top open. He said, \"get those titties out.\" He tied the tie behind me, letting my tits hang out freely. Then, because of your suggestion he took my nipples in his fingers and squeezed them so hard I thought I'd pass out. I'm surprised you didn't hear me scream. That irritated him so he shoved me over his desk, yanked my skirt up over my bare ass and wailed away on it probably a dozen times. I must've been blubbering when he just shoved me to the floor and stuck his dick in my mouth. \n\nThen, to \"motivate me\" as he put it, he took two of those damned binder clips on my nipples, you know the ones that hold packs of paper together, it bit like a bitch! He told me that he'd only let me take them off after his cum was in my stomach. I worked his cock like I was in a fever, I could feel the stinging, burning pain driving me on. After he nearly blew my head off with his cum he held my hands over my head so that I couldn't remove the clips until I was crying and begging for him to take them off. He made me promise to please him \"whenever\" if he did. Then, I screamed bloody murder when he took them off and the pain shot through me.\"\n\n\"Wow,\" was all I could say at first. I was actually jealous. I wondered if I should pay him a visit sometime, too. I had an inkling that John would make that happen, though. \"And was that too much?\"\n\nShe still had tears in her eyes. \"No, dammit,\" she said softly. \"That IS what I like, John knows it too. I think I get off harder the harder and rougher he punishes me. Like that last time with the spoon when he beat my ass with it. I kind of wished he hadn't stopped....\"\n\n\"That's why I told him you like it rough. We thought maybe both of you would get...you know....what you want.\"\n\n\"Thank you...\" she cooed as she laid her head on my shoulder. \"What do you want me to do now?\" she asked submissively.\n\n\"I think you've had enough for one night.\"\n\n\"But you got to suck off THREE strangers,\" she pouted.\n\nI texted John and told him what she was saying.\n\nHe texted back with a shrug emoji. \"Give that cock sucker what she needs then, keep me posted!\" He gave me a wicked idea and asked if I could somehow incorporate it.\n\n\"Are you fucking sure?\" I said. \"This is heavy stuff.\"\n\n\"No I'm not sure. I want YOU to make it sure. MAKE me do it,\" she pleaded.\n\n\"With a body like that it wouldn't be any trouble getting guys, that's for sure.\"\n\n\"That's what John and I say about you, too, that'll it'll be so easy setting things up!\"\n\n\"Are you ABSOLUTELY sure about this?\" I asked.\n\nShe guided my hand to her pussy, it was leaking out onto the seat. \"Make me suck strangers, ma'am,\" she pleaded in tiny voice. \"Maybe let them use my pussy too,\" she said, looking away from me.\n\nI knew where I had to go. It was actually going to be easy, at least easier than the first two. I returned to my apartment. I think she was disappointed when she saw where we were. I saw the lights of the apartments on. I smiled. Now I had to implement John's spontaneously wicked idea. I made a makeshift sign. I put it around her neck. I didn't let her see it. She got out, her clothes were a mess. I said, \"you might as well not even bother with these,\" as I took them off of her. Now naked, and just in heels I led her towards my apartment, to her surprise and shock and marched her upstairs. With the flowing top I tied her hands behind her back, probably not enough so she couldn't get free, but enough so it would be an effort. I knocked on the door and I ran, leaving her standing there like that, with the sign around her neck.\n\nI fell into a fitful sleep on the couch for a couple hours waking and falling back to sleep. Then, there was a soft tap on my door. I opened it. She was still naked. Her hands were still bound. She reeked of cum. I made her kneel in the doorway so that anyone could see her like that. Then I made her tell me the story. I sat on the couch, out of view while she told me what happened. I played with myself as she did.\n\n\"First, thank you, ma'am,\" she said softly. \"I'm a well fucked and full slut because of you.\"\n\n\"Oh?\"\n\n\"Your friends were VERY appreciative,\" she grinned with a hint of sarcasm at having put her in that spot. \"Especially after they saw the sign. \"I'm a bit tired today guys, so I left you present! Enjoy her!\" That was dirty. I think because of their prior experience with you it made it easy to just get down to business and I was on my knees right away and I was alternating on their cocks. You guys all seem to love the \"doing it in the doorway\" thing, like it's a present for the neighborhood or something, But I did it. I sucked their cocks like that, my hands were still tied behind me. They hadn't even asked me a question, or wondered who I was, their dicks were in my mouth within ...twenty seconds. Then, one of them realized I was there to please them...in ANY way, he broke off and got behind me and felt me up. His fingers and hands were everywhere, and I mean EVERYWHERE, he's no doubt still got the scent of my pussy AND my ass on his fingers. It just drove me on, being violated like that. I blew his friend with extra fervor.\n\nThe guy behind me....Rod? He was impatient, He made me stand up, then he bent me over the ottoman and stuck his dick in me. I was so wet it went in completely, one thrust. For a few minutes his other friend, Todd? He watched and stroked himself before I bade him over and I began to blow him again while his friend drilled me. He had to hold my head for me because my hands were still behind me, thanks to you! They developed a rhythm and I felt myself getting pushed back into and onto one cock, then returning and getting my throat full of the other. Back and forth they rocked me. I felt like I was just a fuck doll. Finally, Rod started to blow, which sent Todd over the edge too and I had to swallow another wonderful load of cum.\"\n\n\"Wow. That sounds....wicked.\"\n\n\"It was, it was so embarrassing to be \"presented\" that way to them, with no choice in the matter. You really DO know your humiliation, dear, I mean, ma'am,\" she said with a soft smile.\n\n\"I do know it, because I also crave it. We're sisters in this, I guess. So that was it? They filled you and sent you back here?\" I giggled.\n\n\"No, that was just the first half hour. For the last hour and a half they had me on my knees in front of them on the couch, sucking them back to hardness. Once they were hard again they made me go back and forth on their cocks, like I was edging them. I'd get one ready and he'd suddenly pull off and make me go to his friend. It was like they were teasing me, withholding their delicious cum from me, I was frantic to swallow them. Finally, Todd couldn't take it and gave me my reward, SO yummy, I can see why you love it so.\"\n\n\"So then they sent you back?\"\n\nShe giggled, \"SO impatient, you are. No, I still had Rod to deal with. He carried me into his bedroom, laid me on the bed and retied my hands above me to the headboard. Then, he made me spread my legs as wide as I could. They were open, I mean WIDE. Then he asked me what I wanted. I told him to fuck me, to fuck me good.\"\n\nHe just teased me again. He wouldn't relent. He had me beg.\n\n\"Please, please fuck me, sir!\" I pleaded.\n\n\"Why should I?\"\n\n\"Because I'm a slut and I need it!\" \n\n\"You're a slut all right. You'd do anything to get my cock in you, wouldn't you?\"\n\n\"Yes, yes! Anything, please just give me that nice big dick!\" My legs were still spread obscenely.\"\n\n\"And you'll be back, won't you, for more from both of us?\"\n\n\"Oh god, yes. If you let me! Please fuck me!\"\n\n\"You'd even let me videotape it, wouldn't you?\"\n\n\"So that's what he wanted. I screamed, \"yes, yes, tape yourself fucking a slut, hard.\" I knew he and Todd would replay this and whack off until they get dizzy. He took picture after picture of me, legs spread lewdly like that. He got some of my face, still caked with the cum from earlier. He got some of the redness and bruising of my nipples from the earlier torture, he even turned me over and took some of my ass, probably of the hand prints from Joe. Then he fucked me, he kept my hands tied above me and made me keep my legs open for him. I could see Todd in the doorway, watching, stroking his limp cock, probably seeing if it would stir again. Finally, he blew another load in me, like I've said before, young guys are amazing at their recovery ability. THAT's when they let me leave. They tied my hands behind me again, just for you.\"\n\nI made her crawl to me. We were both so worked up. It was time for her to return the favor. I guided her head between my legs. She lapped me up like a starving kitten. I'd never had a woman do that to me before. It was magical. It was like she knew every fold, every pleasure nerve. She inserted her fingers in me and made me dance to the oral ballet she was performing. She'd edge me, get me close, then she'd slow down. Over and over her tongue teased my slit and clit and I had never been so worked up. She had me growling and begging for release. When I came I saw stars, it was so powerful. She got me off over and over. My cream was all over her face. I wanted to return the favor but she just shyly grinned and said. \"I think I may have another cock to please when I get home.\"\n\nI texted John again when it was over. He had a couple more wonderful thoughts. I drove her home, leaving her nude the whole way. She fell asleep on my shoulder. At lights I would look over. If there was a guy in the car next to me I'd get his attention. Then I'd move so that he could see that she was naked. A couple guys got good looks of her tits that way. Finally, as we approached their house we were at a light. A car pulled up next to us and it was and older man, probably 60s or 70s. He looked over at us but his car was lower than my SUV. All he could see was her head. I woke her up and whispered to her. She groggily grinned and leaned towards the window. She lifted up, took her tits in her hands and held them up for him. He got quite a show for the couple minutes the light took. Luckily for him, it was a long light. When the light turned, he just mouthed the words, \"thank you,\" to her as he drove away. I reminded her that that was the same thing she did when I saw her drive away with Derek.",
        "\"You are so wicked. You and John, SO much alike,\" she said sleepily.\n\n\"You DO realize that this was all John's idea. All of it, the people, the situations, even the sign around your neck. I'm just acting, like you were the other night. You and I, we're alike. We like to be TOLD what to do. John owns us. You are so submissive, and willing, aren't you? You are just like me.\"\n\n\"I am. Thank you for showing me that. I guess I've always known, but since our experience with you, it just highlighted who I am.\"\n\n\"You'd even suck off that old guy if I caught up to him and stopped him, wouldn't you?\" I grinned. This was my idea, I was just testing her, in my own way.\n\n\"Oh god, you aren't going to make me....um....uh....yes ma'am, I would, for you, for John, for me. It's who I am, like you.\"\n\nI just smiled, she'd had enough of the stranger thing, for now. \"Do you remember when you said you'd read my \"rules\" that I'd given John?\"\n\n\"Yes, it's a lot of the impetus for what happened tonight....and what's going to happen.\"\n\n\"Right. But remember the one about repeat performances?\"\n\nShe looked at me blankly.\n\n\"The one where I said if, in the heat of lust, the guy or guys ask for it again and I say yes, I'm made to have to do it again...and again?\"\n\n\"Ohhhh,\" she moaned, suddenly realizing what it might mean for her.\n\n\"It seems to me that you promised Joe, AND Todd and Rod, repeat performances. Though I think John has already made note of it and will act accordingly.\"\n\n\"Ohhh,\" she groaned in horror, knowing I was right.\n\n\"We'll cross that bridge when we get to it,\" I grinned, \"for now, we're home.\"\n\nI stopped at the head of the driveway. I had one more evil thought I thought John might enjoy, a throwback to her naked walk to the mailbox from previously. I made her get out of the car. She was naked, covered in cum and love bruises. I told her to walk down the long driveway and when she got to the door she was to kneel and beg John to take her in, after being such a slut.\n\n\"But ma'am, it's just after midnight, many of our neighbors are night owls!\" she protested. \"The other day it was still early, I doubt anyone was up!\"\n\n\"Exactly. John has told me he wants the neighbors to know you, Sophie. They need to know the real you, and begin to take advantage of that knowledge. He said they probably have already seen you many times getting dropped off, looking freshly fucked. Remember that other rule, about when you tease you need to be made to please?\"\n\n\"But Taylor, ma'am,\" she pleaded. there wasn't much force behind it. I just smiled knowingly. I have been in her shoes and wanted to be again, but this part was just for her.\n\n\"That's what is next for you baby,\" I said. \"John told me that the neighbors need to start taking advantage of that incredibly hot body.\"\n\n\"Oh fuck,\" she hissed lustily. \n\nI kept the headlights blazing on her nakedness as she walked the length of the entire driveway in the nude. I watched that glorious, full ass sway in the light. I could see lights on in the adjacent neighbors houses. I secretly hoped some or all were watching this slut get home from being used so well, to give them \"ideas.\"\n\nI watched her kneel on her porch. John wouldn't let her in for a full five minutes. The porch light was on, anyone watching could see her kneeling there, nude. Finally, he let her in. I knew she wasn't done with her night. I, on the other hand, needed some cock, BADLY. I wasn't done. In my own head I didn't want her to outdo me.\n\nChapter 6\n\n*\n\nI was in a quandary. I was in such a state I could barely contain it, even though I'd had such wonderful release from Sophie's tonguing earlier. Having to watch all those things she'd done had only sent me to a higher level of lust. I realized that's probably why John included me, it was just another one of his delicious forms of torture. I was still at the end of his driveway, having just watched her do her \"slut march\" to him. My lights were off, my head was spinning. I needed cock, badly. My thoughts raced, I thought of going back to the auto shop to see if Joe was still there, then I realized he was probably spent, as would the other mechanic, and both Rod and Todd. They were probably useless, at least for the night. I knew I'd be on my knees for some, if not all of them, in the near future, however. \"Should I just go to a bar?\" I asked myself, it just seemed so...\"normal.\" I need it in a completely different way.\n\nSuddenly, I was snapped back to reality by a call from John. \"Are you still close?\"\n\n\"Yes, why?\"\n\n\"It seems you wore my poor slut wife out,\" he said with chagrin.\n\n\"What? Why? What happened? She told me she knew she still had your cock to please.\"\n\n\"She fell asleep on the couch the moment I went to make coffee for her. She was going to tell me any details I missed.\"\n\n\"Oh god, I'm sorry, sir!\"\n\n\"Don't be, you just did what I told you to, but that being said, I'm still here with a raging hard on, and nowhere to put it,\" he joked.\n\n\"Do you want me to...?\"\n\n\"Yes,\" he said, before I could even finish.\n\n\"I'm...uh, still in your driveway. I was just sitting here thinking about how I was going to....um, you know, get something.\"\n\n\"Yes, I knew you would want to. I was about to call you anyway with some suggestions.\"\n\n\"Oh god, sir, thanks for thinking of me, I'm so worked up right now.\"\n\n\"So you are outside? Oh, I see you there.\"\n\n\"I'll pull up,\" I said, starting the car.\n\n\"No, no, stop. Shut it off!\" He demanded. I did so immediately.\n\n\"Why?\" I asked.\n\n\"Can I suck you, sir?\" I pouted. I needed him so badly.\n\nHe moved in and let me work on his beautiful dick, not using my hands. He occasionally stopped, made me look up at him and fill him in on details of the night he may have missed. I could hear Sophie snoring softly, right behind me. I got him worked up, which wasn't hard, knowing how hot he was already.\n\nHe stopped me. Gruffly, he shoved me to the floor, \"Get on your hands and knees.\"\n\nI was facing away from him, my ass up, inviting him. \"I'm going to enjoy this,\" he growled. I felt him positioning himself behind me, Carefully, slowly, agonizingly so, he worked his way into me.\n\n\"God, you are tighter than OJ's glove!\" he joked. Guys have mentioned how the love how tight I feel. He pushed my face into the carpet and took what was his, finally. I backed up into him, driving him crazy. I wanted him to cum so hard for me. The man was an expert, his cock danced inside of me like it belonged there permanently. Finally, when he'd rode his conquest enough he gripped my ass tightly and began to spasm in me. He was buried as deeply inside me as he could be as he shot it in me. I looked up to see Sophie's one one slightly open, a slight grin on her exhausted face. She'd watched him take me as his own. When he was finished he left me there on the floor panting. He picked up his wife and carried her into the bedroom before returning. I was still there, dripping his cum. He lifted me onto the couch and went down on me.\n\n\"Sir! Your cum is in there!\"\n\nHe just looked up at me and said, \"I'm sure I've swallowed cum before, baby, with all those men in my wife. Just enjoy.\"\n\nSophie was right, the man was an artist, I wasn't sure who was better, him or his wife, but I went along with the ride, nonetheless. It left me in a shuddering heap on his couch. We sat together in silence for awhile, with him stroking my hair, my head was in his lap, resting on his flaccid cock, still slick with my juices. I told him everything about the night, every detail, how it looked, how I felt, everything.\n\n\"I can tell by your description that you are jealous of the...um...amount she got, aren't you?\"\n\n\"Of course, I've never had to be denied cock like that, it just felt...unnatural.\"\n\n\"And you are still craving the taste, aren't you, even though you at least got your pussy filled, then pleasured?\"\n\n\"Yes, they are two very different things for me, getting off, getting release, and sucking cock. That still hasn't been satisfied.\"\n\n\"Then what to do?\" he mused. \"I can't exactly send you home to your neighbors, I'm sure Sophie quite wore them out,\" he chuckled. \"And, the mechanics are no doubt gone, they only stayed after hours for their \"fun.\" No doubt they are worn out, too.\"\n\n\"I know, sir. I thought of all of them. Can you....get it up again?\"\n\nHe smiled. \"I can and will, but I have a wife in there that I'd like to do a little bit more with,\" he grinned.\n\n\"Should I just go to a bar then?\" I asked.\n\n\"No, sad to say I need you to experience some denial. I have plans for you, SOON, you'll have to trust me. I want you so horny and willing that you'll do whatever you need to to get it.\" I know you need to be embarrassed and shamed, I know that. On any other night I'd just kneel you there like that and call pizza places one by one until they are all closed.\"\n\nI nearly fainted at that thought as the blood rushed to my pussy.\n\n\"Oh god, sir. I can't wait. Sir...I wanted to tell you something...\"\n\n\"What is it?\"\n\n\"I wanted to tell you that I thought about what I said about preferring just one cock at a time. After watching Sophie I realized that I needed that as well. One cock now just seems so....amateurish. If she can take multiples on her first time I need to be willing and able to as well.\"\n\n\"Interesting. But like I said, I have an idea I'm setting up.\"\n\n\"That's wonderful, sir. I just wanted you to know that, and that....um....?\"\n\n\"Yes, spit it out, slut,\" he joked. \"Not literally.\"\n\n\"Remember when you said, \"I wouldn't make you suck off, like a bar full of guys or anything.\"\n\n\"I do remember that, yes.\"\n\n\"I...don't think that's a hard limit...sir...not anymore.\"\n\n\"Good to know,\" he grinned.\n\n Chapter 7\n\n*\n\nI was fully into the lifestyle now. I was committed. It was all I thought about, all I wanted to do. I did just enough to satisfy the trust fund from my late parents. I was required to keep up passing grades and the money would still come in. I did just enough to get by. Naturally, John passed me, just for being his slut, though he gave me a \"C,\" which was still more than I deserved. I was done with his class, so I had no more opportunities to flash him and keep us both excited. More than a week had passed since my night with him and Sophie. I think we were all recharging our batteries. Still John kept texting about something \"brewing\" which he kept me on edge about. Todd and Rod had both gone home on semester break. I thought how disappointed they'd have been if they'd known how much they'd have had if they stayed, now that I'd promised them repeats, per my own rule about promising things. \"Oh well,\" I thought, \"they'll be back!\" Still, I had that familiar twang of craving for it's taste. I knew it had to be soon. I was immediately perked up by a phone call. It was from Sophie.\n\n\"Taylor! So glad I caught you!\" she said. She was breathing loudly.\n\n\"Why? What's up?\"\n\n\"I have a little...issue here.\"\n\n\"What is it? Are you ok?\"\n\n\"I'm fine, for the moment. I Just need your...um....expertise.\"\n\n\"What? What for?\"\n\nShe giggled, \"shhhh, just listen. My neighbor, the one right next door on the left, he just stopped me. He said I was looking great and he was eyeing me in a way I hadn't seen him do before. I kept waved and kept walking but he said something as I passed.\"\n\n\"What did he say?\"\n\n\"He said, \"I think the two of us should...talk.\" He said it like that, with the hesitation. When I asked why he said, \"I like taking walks, too.\"\n\n\"What did you say?\" \n\n\"I didn't respond, I just walked inside.\"\n\n\"What did John say?\"\n\nShe giggled again, \"he's the one who told me to call you.\"\n\n\"Ah, did he say anything else?\"\n\n\"Yes, he told me to do whatever you tell me,\" she said in hushed tones. I could tell she was excited. This was a new boundary for her to cross.\n\n\"Ok, where are you, it sounds like you are outside?\"\n\n\"Yes, I'm standing by the garage. John wanted me to check if he was still outside.\"\n\n\"Is he?\"\n\n\"Yes, putting away his gardening equipment right now. I keep seeing him look this way, through the bushes, like he is looking for me to come back to respond to his obvious innuendo.\"\n\n\"Ok, what are you wearing, one of your work suits?\"\n\n\"Yesss,\" she dripped in anticipation. I realized she'd do anything I told her, like she would with John. It was a responsibility I wouldn't take lightly, having been exactly where she is. \"I'm actually wearing the suit you took off me, that first night.\"\n\n\"Well, that's a coincidence,\" I laughed. I remembered it, classy, yet still very sexy on her. \"Ok, take off your coat and remove your blouse and bra, if you are wearing one, you little slut,\" I giggled. Remove your panties as well. Do you have your heels on?\"\n\n\"Yesss,\" she whispered.\n\n\"Good. So take those things off and tell me when it's done.\"\n\n\"Here?\" she squeaked.\n\n\"In the garage if you are shy,\" I joked.\n\nOnly a few short seconds later, it seemed, she replied.\n\n\"I did it,\" she panted. \"I stayed outside. I thought you'd like that.\"\n\n\"So you are topless and standing outside?\"\n\n\"Yesss.\"\n\n\"Can anyone see you there, I mean, if they were looking?\"\n\n\"The house across the street looks directly down the driveway, so yes, it's certainly possible.\"\n\n\"Ooooh, nice. Now put the jacket back on over your bare tits.\"\n\n\"I'm done.\"\n\n\"Now put on the skirt. I know it has a slit on the side, open it up a little, do that to the suit coat as well, only button the bottom, just to keep it from completely opening up.\"\n\n\"Now what?\"\n\n\"Now you go over to him and \"negotiate.\" Let's see what he wants. I have a feeling he'd like to blackmail you with what he's seen, but he's probably not that type to understand or be willing to carry it through. We'll help him.\" I gave her some suggestions then I sent her on her way. I knew how sexy that walk must've been. She's such a beautiful, classy looking woman anyway, but dressed like that, her cleavage would be bounteous and her tits would be bouncing around under her coat with no restrictions. She'd have showed a lot of leg as well, and, she always wore heels. She's just SO sexy. I made sure she had reapplied plenty of her usual red lipstick as well.\n\nJohn texted right away, excitedly. \"What did you tell her?\" \n\nI relayed everything we said. Then we waited. A half hour went by, I heard nothing. John didn't even respond to my texts. An hour later he texted.\n\n\"Everything is fine, she returned to me...quite full, and I needed some relief myself.\"\n\nShe called seconds later. \"Oh god, that was...so embarrassing. I walked up to him and he had the biggest smirk on his face like, \"yeah lady, I knew who and what you are.\" He still made me work for it. I said, \"what did you want to talk about?\" \n\nHe said, \"look, I really like you guys and I hate to be a dick.\"\n\n\"About what?\" I asked, fully knowing.\n\n\"I've seen you....at night, coming home at all hours, and most recently, with less and less on. Listen, I don't know what kind of relationship you two have but, John doesn't seem like a fool to me. Surely he MUST know something is going on when guys drop his wife off at all hours wearing little, or sometimes nothing. So, I'll assume you two have some sort of agreement.\"\n\n\"So where does that put you?\"\n\n\"I like you....or, better said, I lust after you, I mean look at you, look at how you are dressed. I've wanted you for a long time and I just...you know... want in on some of the action others seem to be getting. We have mutual friends, including some of your teacher friends....wouldn't want that getting out.\"\n\n\"You were totally right, he wanted to blackmail me, MAKE me do it, he just couldn't make himself say it. I thought of the things you told me to say.\"\n\n\"So, if I ...give you some action...you'll look the other way at my \"night deposits?\"\n\n\"Hell yeah I would,\" he said excitedly.\n\n\"Well then we have a deal,\" I said. \n\n\"First thing he did was grab my coat and demand I open it and \"show me those titties.\"\n\nI did. He played with them for a few minutes before I dropped to my knees right there, in his yard. His place is blocked by a long line of shrubs, I wasn't worried we'd be seen, plus I loved the idea of doing it like that, in the dirt. Well, needless to say, I've got a belly full of his sperm, as well as John's, and they both have my lipstick smudge all over their cocks,\" she chuckled.\n\n\"How do you feel about it now, knowing you'll run into him again?\" \n\n\"Embarrassed, as I should be, but I'm not worried about running into him again unexpectedly.\"\n\n\"Really? Why not?\"\n\n\"Because he told me he expected our agreement to last as long as I insist on coming home at all hours and states of undress. I'm to please him again, \"accordingly.\"\n\n\"Oh wow, that's....awesome.\"\n\n\"I knowwww,\" she purred. \"His cock was so nice...and TASTY, jeez why didn't I notice that I loved the taste of cum before?\"\n\n\"God, you just sucked your neighbor.\"\n\n\"Yes, and John is already pressing me to ask you how to let the guy on the other side in on the deal!\"\n\nI laughed, \"we'll get to everything, I'm sure.\"\n\n\"Oh, by the way, John told me to tell you to keep Friday night free, we're holding a costume party at our house.\"\n\n\"Halloween was months ago,\" I laughed.\n\n\"Right, but this is one of those \"rich people parties,\" one where everyone wears a mask and it's adult in theme.\"\n\nI was on edge the whole week. This was the idea that John kept hinting about. On Friday I got an overnight package, it was my costume, such as it was. I was kind of bummed that I'd missed the delivery guy. It looked like it was supposed to be kind of a harem girl thing, with most of it missing. It was a body veil, a sheer, see through that had straps to go over the shoulders. There was also a face veil, which again, covered nothing, really. All that was left was some beautiful purple, satin panties, it was a thong. The note on the package said, \"Just add some heels and meet us at our house at 7, sharp! And wear pigtails, guys love sluts with pigtails!\"\n\nI knew this also meant they wanted me to drive over that way as well, tits basically showing. I did what I always do, the slutty thing. I stopped at lights and let men ogle me, they could see my tits clearly. I got a lot of attention, I wondered if I'd have to stop and take care of any \"overzealous\" oglers, sadly, no one rose to the challenge.\n\nWhen I arrived, I got a call from John, he saw me pull into the driveway. He told me to stop at the end, to save parking for the guests. Then he gave me the first shock of the evening, though it really shouldn't have come as a shock at this point.\n\n\"That was a very dirty thing you did to Sophie, making her walk the driveway naked like that. Even I hadn't made her do anything so risky, making her do it when neighbors are most certainly up.\"\n\n\"I thought you'd really like that, sir,\" I said, hoping I hadn't disappointed him.\n\n\"I LOVED it,\" he laughed, \"but, I think you deserve the same treatment, if neighbors got to see my wife, it's only fair they get to see you, too. Are you wearing your harem outfit?\"\n\n\"Such as it is, basically a body veil and purple thong panties and heels.\"\n\n\"Good, which is all a slut needs to wear. Now get out! Stand next to the car!\" \n\nI did so, still holding the phone. He had me place my fingers behind my head in the standard submissive pose. I could still hear his instructions. \n\n\"Now walk...SLOWLY.\"\n\nI started and walked a few feet. He stopped me. \"No, no, too fast, go back, start over. I had to go back to the car and do it again, three times he made me start again from the beginning. It wasn't even dusk yet. I wondered how many eyes were burning into me at the moment, especially now that some were motivated to keep a watch due to Sophie's recent behavior.\n\n\"Stop!\" he said. \"Put your hands behind your back, stick out those big tits!\" then, crawl the last way and wait at the door like you made Sophie do.\"",
        "I did as I was told. The crept slowly and carefully on the cold concrete, still, I got some scuffs on my knees. He had me wait on his porch like that, hands behind my head. I was panting heavily, I felt like the whole world was watching. He must've made me wait ten minutes or longer. Finally, he relented and let me in. Another shock awaited me. Both John and Sophie were fully clothed, elegantly so. It was obvious that I was going to be the only exposed one. John had one of those \"old timey\" suits, complete with vest. Sophie had on a beautiful dress coat and a flowing dress. They both had those, \"Eyes Wide shut\" type masks, like the ones from swinger parties, which, this probably was going to be, I figured.\n\nJohn stood me in the center of the room and took a bunch of pictures of me from all angles. He said he wanted some \"before\" and \"after\" pictures. Sophie stood quietly while he outline the rules of the night for me.\n\n\"We are going to have guests. They will be dressed similarly, all with masks. I think that should be particularly embarrassing for you, that they can remain anonymous if they choose, but you will be completely identifiable.\"\n\nHe was right, I was starting to get wet already at that thought.\n\n\"There will be talking on your part, unless you are directly asked a question you must answer. You are to address all the men as \"sir,\" and all the women as \"ma'am.\"\n\n\"Touching is allowed, there's no limit to what they can touch. If anyone asks for anything specific, like a certain pose or for you to give them easier access, your answer is always yes.\"\n\n\"Oh god, sir,\" I said, nearly leaking already. \"Yes, sir.\"\n\n\"They can ask you anything, and you need to be truthful with your answers. If they ask you to DO something beyond the touching, you can either do it, or if it's outside of our usual arrangements, you can ask me first.\"\n\n\"Yes, sir.\"\n\nThey instructed me that I was going to be the server as well as greeter. They gave me a tray for the drinks. It wasn't long before the first guests arrived. I met them at the door, red faced and welcomed them in. It was a couple, older, I presumed, I could see their hands. I could see them both ogling my tits, basically naked through the material.\n\n\"Nice, John. I thought you were putting us on about her beauty!\" said the man appreciatively. \n\nHe swatted my ass playfully as they passed. I saw John with a wry smile. For the next hour I alternated from bringing drinks, to greeting people at the door. I got plenty of attention from the men, and occasionally the women, too. Hands roamed over the thin material, most often my hips and ass, but I got quite a few gropes of my tits as well. In particular, one man loved squeezing my nipples every time I passed. He'd just grab them through the material and gave them a tug, keeping them hard and sending electrical jolts directly to my pussy.\n\nOne man took out his phone and recorded me serving him. I looked at John for guidance, he said nothing. That let others know it was ok so many others did the same. It was particularly embarrassing when I knew they were filming my face, for everyone to know. Once the alcohol had been flowing I was getting felt up, pinched, groped constantly. John just stood there watching and smiling. The first guy with the phone told me to turn around and bend over, he wanted a nice picture of my ass. I did so. Everyone else with their camera out came over and made me stand there for all of them, I had my hands on the floor. I still had the thong on and the veil, but it covered almost none of my shapely behind. They were commenting on how much they loved it as the snapped away. The rest of the party goers were clamoring for drinks, though obviously they knew why they weren't getting any. It gave John an idea.\n\n\"Ladies and gentlemen, I have a game for us to play,\" he announced. \"This is obviously a special kind of slut. I have a contest. Guess how many different cocks she's sucked since she's met me?\" He leaned over and whispered to me, \"You DO know how many, right?\"\n\n\"Yes, sir. Sophie has me write them down in a journal.\"\n\n\"Oh man, that's right! Do you have it?\" he asked excitedly. \n\n\"I think it's in my book bag in the car.\"\n\nHe made me get it. I heard the people at the party shouting numbers in the meantime, with John writing them down.\n\nWhen I got back I handed him the journal. He announced, \"here's what's going to happen. Whoever picked the number, or closest to, without going over, gets to give this slut an old fashioned, over the knee, spanking.\"\n\nI stood there, in the center of the room, turning a dark shade of scarlet.\n\n\"But, as an added treat before I announce the winner, I have her \"slut journal\" documenting the cocks she's sucked. I am going to have her read some of them, for our amusement.\"\n\nI'm sure my face was white, while everything else was a toasty red.\n\n\"Tell us about....say....number two,\" he said. He handed me my journal. I had to read it out loud to the group who was a rapt attention.\n\n\"This is my second cock....\" I read word for word, \"that I've sucked, John being the first. It was a guy John sent to my apartment where I met him, naked and kneeling, my hands behind my head. I had to offer him a blowjob.\" There were some oohs and ahhs throughout the room. It was only after that he told me his name, Joe, and that he was a mechanic friend of John's. His cock was thick, not too long and his cum was tasty, almost like a hint of peanut butter,\" I managed to choke out, trailing off at the end.\n\nThe crowd was laughing. They were enjoying the humiliation show.\n\n\"What about....number five?\"\n\n\"Fuck,\" I thought, am I going to have to read them all?\" I thought. \"Number five....hmmm.. here it is. \"I was sitting around my apartment and an Amazon driver showed up which was weird because I didn't remember ordering anything. It only took a minute to realize it was another of John's ideas. I ended up having to blow him to \"thank\" him for the delivery. He was black. It was my first black cock...though hopefully not my last!\" I wrote in huge red letters. John made me show them the lettering to add to the embarrassment. I was in the middle of a thick swirling cloud of excitement, the comments were lewd and direct. Everyone was getting into it. John made me finish.\n\n\"His cock was beautiful, not extremely long but perfectly shaped. He tasted a bit like chocolate, ironically.\"\n\nThe crowd was at a fever pitch. They wanted more but John shushed them.\n\n\"Gather around, let's see what numbers everyone picked. He read them off, as if to check their accuracy, I knew it was just to tease and torment me further. \"So tell us, slut, how many different cocks have you have sucked since we met, which has been what, not even four months now.\"\n\n\"Ok, different guys, right? Cuz I've had a couple more than once.\"\n\nHe grinned lustily. \"Yes, different ones, different guys.\"\n\n\"Um, 11,\" I grimaced, glancing at Sophie who'd read my journal, for accuracy. She nodded, remembering all the ones before I met John that didn't count.\n\nI heard groans throughout the room and one celebratory whoop, from a female. She was the only one who guessed right. The crowd moved away. She came up to me and took me by the hand and led me to the couch. I was dripping and flushed.\n\n\"I'm not into women, sweetie,\" she whispered in my ear. \"But I saw how my husband has ogled you the whole night, I won't mind punishing you for that,\" she said ominously.\n\nShe sat down and tapped her lap for me to lie across. I was whimpering softly. Everyone gathered around. She pulled up the veil over my ass and ran her hands up my legs to my ass and circled them around the cheeks. It was as if she was warming them up for what was to come. \n\nSuddenly, one man blurted out, \"wouldn't it be better without the panties? Not that they are covering much.\"\n\nThe crowd agreed and to my shock and chagrin she peeled them down in front of everyone, I saw a male hand reach down and grab it, it was the last I'd see of those. Suddenly, she started spanking me, the first one was sharp, unexpected. I yipped and jumped. This just caused everyone to laugh at the silly slut. Over and over she swatted me, alternating cheeks. Then, she'd rest, while I felt the blood rushing to my skin, only to resume again until I felt my ass burning, and my pussy boiling. Out of the corner of my eye I could see multiple people recording it. Everything that night was recorded, in fact. The room was thick with arousal. John finally stepped in, I swear she'd have kept going on her own.\n\n\"Ok, that's enough of that,\" he laughed. \"We all still need drinks.\" \n\nWith my ass burning, and that and my pussy now up for public viewing I had to resume my hostess duties. Surprisingly, it kind of calmed down for a bit, the alcohol no doubt was making people feel good. I still got groped, plenty, including getting my pussy grabbed, squeezed, and pinched, but the overall tone was lighter.\n\nA few couples and singles started leaving. My job was to stand at the door, open it for them, and thank them for enjoying the party, \"and me.\" It got extra handsy on those occasions, once, I was pinned against the wall while one guy got his fingers up the veil and onto...and into my pussy while his wife watched. He then rubbed them under her nose, and to my shock she smiled and licked her lips. There were still about a dozen people left, mostly men, but still two couples.\n\nJohn went to the center of the room and said loudly, \"this is what most of us are waiting for and why I'm sure many of you stayed,\" he grinned, eyeing the interest in the remaining crowd. \"Tell us, slut. How many cocks have you sucked in one setting?\"\n\n\"Um, three,\" remembering the night in the park.\n\n\"So tonight, we're going to help her break that, aren't we, fellas?\" He asked, causing a thunderous reply. \"She won't be needing any of this,\" he said as he removed the body veil, then the face veil, leaving me completely naked, save my heels. \n\n\"Look at this perfect slut,\" he growled proudly. \"And I LOVE the pigtails, it was a request from quite a few here. There's nothing like a young slut in pigtails sucking cock, is there guys?\" Again there was a riotous response. \n\nJohn had the men move the sectionals together, forming a long, bench like formation. John made them draw numbers. The guys sat in a long row, \"VERY long,\" I thought. I wasn't even sure how many. He nudged me to my knees and made me crawl to the first one. He had his cock out and was slapping it with his hand. He had the most evil grin, seeing me approach, my ass swaying for him. \n\nThe group again whooped it up when I took his dick in my mouth. Sophie appeared, with my journal. \"I don't want you to forget any of this,\" she giggled. \"Describe it to me.\"\n\nI had to say, \"First cock of the night. It's nice and hard and thick like I like. His pre-cum is delicious,\" before going back to business. My pigtails were bobbing now as I went to work on his cock. I could see the guys next to us, in line, grinning behind their silly masks while I fellate their...friend? It was overwhelming when he came in my mouth and they saw that I was going to keep my head on it the whole time. The mixture of the humiliation of being watched taking his cum, and the lust I was feeling was the most intense I've ever felt. Quickly, the guy got up and the next guy slid over. Sophie recorded my comments each time, to the delight of the group who verbally abused me the whole time, telling me what a stupid slut I was, that I was just a cocksucker for their amusement. I was. It drove me crazy. I'd done three...or was it four? When suddenly I noticed there were more men there. There were two new guys, without masks. I saw John talking to them, they were pointing at me...and Sophie.\n\nLadies and gentlemen, it seems we have a bit of an \"issue,\" John said to the group. \"These men here are my neighbors, and they have a problem with what's going on at our PRIVATE party.\" I wondered if one the guy Sophie had blown previously.\n\nMy mouth was still on the next guy. I didn't want to stop. I was lost, insatiable at that point.\n\nI saw Sophie approach them, still in full \"costume\" and mask.\n\n\"I'm sure we can work this out, gentlemen,\" she urged. I saw them huddling together, discussing it.\n\nJohn stepped back with a smile. He motioned for me to continue. Greedily I went back to sloppily sucking on the next guy. When he finished, John told me to rest for a minute. He had me stay on my knees though. \n\nThen, in a tone I hadn't heard him use he called to his wife. \"Sophie, come here,\" he growled. I saw her head bow, naturally as she approached him. He had her stand in the middle of the living room, all eyes were on her. She stood there silently as he removed her coat, revealing a very sheer, see through camisole. Her chest was heaving, her nipples were hard like little pebbles. Then, he casually, slowly pulled her dress down off her hips and made her step out of it. She had on black lacy panties.\n\n\"They are crotchless,\" growled John, \"Show them.\" He made her spread the opening for the remaining crowd. There were appreciable groans. \"No, I mean SHOW them,\" he barked. She understood, she slid her fingers over her pussy lips and lifted them, showing how shiny that made them. Her face was almost purple she was so embarrassed. This was breaking new ground for her.\n\n\"I want to show everyone how I punish you, on occasion. He disappeared, but reappeared quickly holding some cord or thin rope. I saw him put fluffy handcuffs on her and loop the cord around the chain and he looped the end of it through an eye bolt in the ceiling. He raised her arms up and tied it off, leaving her vulnerable. She was almost naked, the top was see through, and her panties didn't cover much.\n\nHe left her there and instructed me to continue. I blew number five quickly, he was obviously younger, his cum was sweet, almost fruity. While this was going on the remaining guys got up, one or two at a time and began feeling up Sophie, would couldn't resist their advances. When I got to the corner of the sectional for number six, I saw what was happening to her. Guys hands were all over her tits, especially the guy behind her who was grinding against her ass, both her tits fully in his hands, her nipples between his fingers. Her eyes were closed. She was lost, I recognized that look. I saw other fingers probing her wetness, they had her swinging back and forth on the rope. When number six filled me, John stopped me. He untied Sophie and led her to my spot on the floor. The new guys sat on the couch in front of her. They were grinning from ear to ear. Sophie's face was down, defeated, like this was the last bastion of her dignity falling right in front of us. John tied me to the ceiling to replace her, and to give the other few guys \"something to do.\" Immediately I was violated by their hands and fingers. Humiliatingly, they pointed out how wet I was.\n\n\"They other bitch is naked,\" complained one of them. John agreed. He let them basically rip the garments from her while she whimpered softly.\n\n\"Now tell them what you are going to do,\" ordered John.\n\n\"I'm going to suck your cocks, sir,\" she said softly, in a daze.\n\nHe whispered something to her only she could hear.\n\n\"Tell them WHY you are going to suck their cocks like this, like the naked whore you are?\"\n\n\"Because I've been an awful tease,\" she said with an embarrassed peep. \"Because I've been parading around the neighborhood, getting dropped off at all hours, barely dressed...\"\n\n\"Or NOT dressed,\" growled one of the men.\n\n\"Yes, naked, too. That's why I have to suck you, because I've been a teasing slut for too long.\"\n\nThen John made her beg them to let her suck them. To see this refined, classic beauty reduced to this, begging to suck her neighbor's cocks was mesmerizing. She started sucking the one guy. The other guy took the liberty of playing with her. He was sticking his fingers in her pussy, then her ass. I saw her backing up into his hand with each thrust, like she was fucking herself on him. The two were just laughing, high-fiving each other, all the while berating her.\n\n\"Yeah, we knew you were slut,\" said the one whose cock was in her mouth, I saw you that one night you got dropped off, it looked like you weren't even conscious, and some young guy carried your naked whore ass to the porch and left you,\" he cackled.\n\n\"Yes, and I've seen you crawling...CRAWLING, naked, for god's sake, up your driveway. I knew you weren't the proper, over educated kind.\"\n\n\"I'm sorry for teasing,\" she said between slurps. \"It won't happen again.\"\n\nI saw John whisper to her again. I was quite occupied at the time, I had two different guys penetrating my holes.\n\n\"I mean, I won't be allowed to tease anymore, if either of you...catch me....being slutty again you are free to use my mouth again,\" she added, looking at John for approval. He was grinning.\n\nI knew that meant it would be impossible for her to avoid. No doubt they'd be camping out in their chairs, watching the driveway at all hours, just for this chance again. That's what John wanted.\n\nThe first guy started blowing into her mouth while grunting, \"Get used to that taste bitch, I know you won't be able to control your slutty self for long.\"\n\nShe went to the next guy and gave him the same treatment while I was being finger fucked like crazy, two in my ass and two or three in my pussy. The guy in my pussy had his thumb on my clit and I was frantically grinding on him.\n\n\"If you two would prefer....something else to blowjobs from this fine slut I have an idea,\" he smiled cruelly. He saw the look of lustful panic in my eyes. He whispered something to them to which they readily agreed. John came behind me and said softly, \"if it's too much or you can't take it, you have every right to stop it, I'll be right here.\"\n\n\"I'll take anything for you, sir,\" I said honestly.\n\nHe left for a minute, the guys took that time to drop their pants, their cocks were sticking out proudly. Sophie was working her second cock and that little mynx was purposely taking her time, almost making love to it. I knew she was in a fever, she was me, she felt the same as I did. John came back and rubbed something on my pussy and ass. It was shockingly cold at first, but then suddenly warm. It was a lubricant, and it made me all tingly. He nodded and the first guy came up, lifted one of my knees and rubbed his cock head on my opening. He slid in easily and I groaned, which made everyone laugh. He fucked me slowly, methodically for a few minutes, \"helping\" by swinging me back and forth onto his cock. \n\n\"Don't worry, It'll hold,\" grinned John. \"It's directly into a beam,\" he said, referring to the eye bolt.\n\nWith that encouragement, the guy inside me lifted my other leg and wrapped my legs around his waist, making it easier for him to penetrate me and swing me onto his cock. Then came the biggest shock of the night, the other guy came behind me and, using the lubrication, worked his head into my tight ass, slowly He just had the head in and I was moaning and cursing already. John asked if I wanted to stop.\n\n\"NO!\" I begged. \"Let them give it to me like this,\" I panted, between breaths. \"Let them double fuck your slut,\" I sighed. \n\nRecently, due to John's encouragement, I'd been using a good sized dildo in there. It was like practice for this. Once he was fully inside me they both worked to find a rhythm. It worked best when the guy in my pussy control the swinging, pulling me onto his cock while the guy behind waited for the return of the swing. I was on the fucking see saw. They were both taking me deeply with each pass, it nearly took my breath away. Still, I was in a place I knew I belonged. This was it. This was everything I ever wanted. John had known it and had introduced me to it. I never wanted to do or be anything else.",
        "I saw Sophie lapping up the cum of her 2nd lover. She was cleaning him lovingly. She tongue bathed his entire cock, his balls, and even made him spread his legs so she could get deeper...probably to his ass. Then, she turned and put herself in the submissive pose we both love, naked, hands behind the head. She watched me being defiled. I could see a hint of jealousy in her eyes, and a wry smile.\n\nFinally, it was just too much for me, for them, for those still watching. They erupted, almost simultaneously. It was a glorious feeling, being filled from both ends like that. John left me hanging and dripping while the guys who were spent said their goodbyes. That left just John, Sophie, me, and one older gentleman, still wearing his mask.\n\n\"Would you like a piece of this slut?\" John asked, pointing at me.\n\n\"I'd rather...have something else,\" he said, in proper queen's English. It was Mr. Jones, their teaching friend!\n\n\"What would you prefer?\" asked a perplexed John.\n\n\"If it would be allowable, I'd much like your wife's mouth on me, sir,\" he said with a smile.\n\nI knew that shocked John. It was something he hadn't expected. I saw the fear and embarrassment on Sophie's face. She didn't expect it either. I guess for her it was one thing to suck strangers, or even neighbors she didn't really know, to sucking him, a guy she sees at school every day, a friend.\n\n\"Sophie?\" John asked, gauging his wife's reaction.\n\nShe was already naked, in front of him on the floor, dripping the cum of two other men. In five seconds she had his flaccid cock out and was licking it. I swear she was purring. John took the time to take some more pictures of me, even closeups of my pussy lips, now an angry red, and the cum that was cascading down my legs. They were the \"after\" pictures. He let me down. I collapsed on the floor. Mr. Jones needed another favor, though.\n\n\"Miss, if you would, could you record this for me? To have this beautiful creature on film, like this, doing ...this, would mean a lot to me.\"\n\nJohn nodded. I filmed it all, her nakedness, her sucking his cock to what can only be described as a mind blowing orgasm. Then, I taped her cleaning him off, like she had before. Then, she licked her lips clean and said, \"thank you sir!\" submissively.\n\nShe got up to go to the bathroom, Mr. Jones bid his farewells and left, a happy man.\n\n\"Wow, sir. That was....something.\"\n\n\"It really was. I just wonder...\"\n\n\"What?\"\n\n\"Well, I know YOU have learned to deal with the shame, the embarrassment of doing it with people you see on a regular basis. But Sophie...she's only had to do that with the one neighbor, who we haven't really seen since. That reminds me, he never did show up.\"\n\n\"You planned on them coming, sir?\"\n\n\"Of course,\" he smiled. \"I invited them first,\" he laughed.\n\n\"So the guy she blew before wasn't one of the two?\"\n\n\"Nope, he said he was coming, too,\" John said, sounding disappointed.\n\n\"I'm sure there will be plenty of opportunities now,\" I joked, remembering her \"promises\" to them.\n\nSophie came back and we all kissed each other and held each other closely. It was time for me to go. I had no clothes, the panties and the veil were gone.\n\n\"Just come and pick out something in my closet,\" Sophie said wearily.\n\nI looked at John, I knew what he'd expect a slut to do.\n\n\"No, if a slut loses her clothes, oh well, am I right?\" I asked John. He nodded with a smile. So, completely naked, in heels I walked back out to my car. I wasn't worried, I think the two neighbors were probably sleeping already, completely satiated. However, when I started my car I saw another car pull in next door. The guy was home! I debated what to do, then I realized what I MUST do, for Sophie...and for John. I backed my car up just down the street and I called him.\n\n\"Yes? Did you forget something? Oh wait, you don't have anything left to forget,\" he chuckled.\n\n\"Something interesting just happened,\" I said. \"Our missing neighbor is home.\"\n\n\"Oh, is he?\" John asked conspiratorially. \"Don't leave, stay out of sight, you need to see this. I heard Sophie making a call. \n\n\"Yes, you DEFINITELY missed out. It's ok that you couldn't make it, we have parties all the time. Can I meet you? Uh....I guess, I can meet you outside. See our car at the end of the driveway, I'll be there in a minute.\"\n\nI sat, hunched down. I saw him approach from around his hedges. He took a seat on John's car, which I thought might give him a sharp pang of embarrassment. Then I saw her, totally naked, The porch lights were on. She'd made herself up again, this time her lipstick was bright red, unlike earlier. I saw her walk towards him, slowly, probably at John's urging. She got to at the car. He took her in his arms and basically molested her, he tried to kiss her but she kept him away. I knew it was because she wanted her lipstick on his cock, not his face. She dropped to her knees, he slid off the edge so he was standing. There, on the concrete, illuminated by the driveway lights, the porch lights, even the street light she blew him. It was almost as if she was bathed in light like they were in a play, under the spotlight. I saw her finish him off, wipe her mouth clean and then walk back to the house. She was swishing her hips back and forth extra seductively. I sighed and drove away. \n\nThis is my new life. I'm John's toy. I have no doubt he'll get me to the \"100 cock\" without much trouble. Sophie has become me. Her thing with the neighbors continues. She \"lets\" them catch her coming home, purposely often being naked after driving like that, thanks to my inspiration. They are regulars now, the three of them. They've threatened to add \"friends and friends of friends.\" I may have to help her with that. She's always happy, though embarrassed, to accommodate them. The gruff one, the gardener type also gets her pussy on occasion, and it's always in the driveway, bent over John's car, after he catches her naked. More embarrassing for her is her weekly \"appointment\" in Mr. Jones office at the university.\n\nThey have a couple parties again and they remain quite popular, in fact, they seem to be growing each time. Todd lives above me by himself now. I often give him a blowjob in the morning, before class. He says it \"relaxes him, makes him think better.\" Whatever, I just like his cum with my coffee. Rod moved back in with his parents but he has my number if he wants me to meet him somewhere and blow him in his car. I tell John everything I do and he often suggests things to wear, places to do it, for example. \n\nHe once had me repeat with his mechanic, Joe, in the school library. I blew him in a closet by the bathrooms, because I know they have cameras everywhere. Still, I see how the librarian looks at me every time she sees me, she knows. John told me he has instituted a \"reward\" system for his best students to, \"keep them motivated.\" He thinks I'll be quite popular in a certain supply room. Delivery guys are just starting to find out about me, too. If I keep things up I might need new carpet because I'll probably wear out that spot by the front door. Sophie and I are secretly planning to share some of our cocks, on occasion. I'm dying to taste her neighbors and we've both shared Joe's cock and she returns to please Todd and Rod now and then, upholding her promises to them. I'm where I need to be. I'm where I want to be. I'm Taylor, I love to suck cocks.\n\nTHE END\n\n \n"
    ],
    "authorname": "LaceAndHumiliation",
    "tags": [
        "bondage",
        "discipline",
        "dominance",
        "exhibition",
        "humiliation",
        "lesbian",
        "submission",
        "threesome",
        "oral",
        "ffm"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/taylor-loves-oral"
}