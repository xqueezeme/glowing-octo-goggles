{
    "title": "Pete's Pub",
    "pages": [
        "This story is LONG \u2013 I know that already. I thought about splitting it up into two sections, but it really wasn't written that way, and I couldn't find a very good place for the split. So I submitted it as one story. If you don't like long stories, please don't read it. \n\nThis story has some sex, but not very much. Rather, it is heavy in romance, even though I submitted in the \"Mature\" section. If you're looking for a lot of sex, this probably isn't your story. \n\nOne more important disclaimer \u2013 I am NOT a lawyer, and the law info in the story comes solely from my imagination. Please be kind if you are a lawyer, and don't make fun of the things I don't know! \n\nAs always, my stories are complete works of fiction, and all persons are of legal age. Your votes and comments are important to me, so after you read it, please share with me! \n\n***** \n\nShe glanced at the clock on her desk that read 7:02 p.m. \"Shit,\" she said to herself, \"I'm never going to catch the 7:15 if I don't hurry.\" She quickly shut down her computer, stashed the two case files that were open on her desk, and checked to make sure everything else was in place before she locked the desk for the night. \n\nSarah hurried to the coat rack in the corner of the room and grabbed her overcoat as she headed out the door, pulling it shut and making sure it was locked. Truthfully, she wouldn't have needed the coat this evening, since the late April weather was playing its usual tricks \u2013 too cold to be without a coat in the mornings, and too warm to wear it in the late afternoons and evenings, when most people finished work for the day. \n\nHer heels clacked loudly on the tile floors of the law office as she made her way down the hallway to the bank of elevators. Being here this late, she wouldn't have to wait long for one of the elevator cars to get to the 15<sup>th</sup> floor where the law firm she was located. It was one of the few perks of staying late, trying to keep up with a tough day's load that had been dumped on her earlier this morning. \n\nIt was Sarah's third year working for the law firm of Banks, Howell and Howell. She had been hired straight out of law school, graduating second in her class. While most people would be elated at that ranking, Sarah was crushed. All her life she had driven herself to be the best, so when the final rankings came out, disappointment was the least of her emotions. She felt as if she had let down all of the people who had helped her overcome adversity to become the first person in her family to graduate from college, let alone a prestigious law school as Williams. \n\nOnce her position with BH&amp;H was secure, Sarah promised herself that she would make up for that #2 ranking by never being placed in a position where someone might work harder than she did. She was going to prove to the partners that they made the best choice when they hired her. While Sarah may have been disappointed in her final class ranking, the partners were pleased \u2013 they believed she had the proper credentials to fill one of their vacancies, and they were happy when she signed to join them. \n\nThe elevator car finally arrived, and Sarah stepped inside and pushed the button for the ground floor. She dug in her purse and pulled out her cell phone \u2013 7:08 now. Normally it was a 10-minute walk from the front of the building to the train station. Even without the 3-inch heels, she didn't see how she could make it on time. But there was always the possibility that the train was running late. If she didn't catch the 7:15, she'd either have to wait an hour for the next one, or take a cab home. Neither of those two options was ideal, so as she exited the elevator on the ground floor, she prayed that tonight was a late train night. \n\nIt was cooler than she expected once she got outside, and she wished she had put her coat on before she left her office. As time was not on her side now, she pressed on, the rhythmic clack of the heels mimicking the ticking of an alarm clock, teasing her about the race against the train. She turned the corner, and two blocks ahead, she saw the train sitting in the station. She didn't know how long it had been there, but she knew that it usually only stopped for about five minutes before leaving. \n\nShe willed herself to pick up the pace. The alarm-clock-ticking of her heels gained speed. She had covered the first of the two blocks quickly, giving herself a chance to beat the odds and make the train. Unfortunately, just as she began block two, she heard the twin tell-tale blasts of the train's horn, the signal that it was pulling out of the station. She slowed her pace as she watched it cross the street in front of her, high on the elevated tracks that allowed the train to operate in the downtown corridor. \n\n\"Damn it, now what am I going to do?\" Sarah cursed out loud, though no one was around to hear her. She looked around to get her bearings on exactly where she was at. Even though she had taken the train for the past three years, she wasn't familiar with the surroundings on the walk between the train station and her office building. She always had her head down, trying to solve some problem that work had presented her. For the first time, she was going to have an opportunity to survey the scene to find a way to kill an hour before the next train arrived. \n\nShe looked up ahead to the station, and noticed a neon beer sign lit up on a building just prior to the station itself. The sign said, \"Pete's Pub.\" Not really being much of a pub person, she realized she had two choices \u2013 wait in the coolness of the outdoor train station for an hour, or wait inside Pete's Pub and hope to not be bothered for an hour. The warmth of the pub won out, and since she had to walk by it to get to the station anyway, it wasn't going to be out of her way. \n\nThe closer she got to the pub, the more interesting it became. Sarah could tell that it was a newer building, but it had been constructed to look like an old time pub from the turn of the century. It wasn't glamorous or showy. Instead, it had a quietly comfortable look, as if persons with any problem could come in, and for the time they were inside, they could forget about their real life situation and have a good time. \n\nShe opened the door and stepped inside. The pub was nearly empty \u2013 in fact there were only five other people present. There was a professional-looking couple sitting at a round table for two near the front door; a single gentleman slumped over a table on the other side, and an older man sitting about midway at a 12-stool bar. Other than those people, it was just Sarah and the bartender, a medium sized man with thinning gray hair and a little bit of a paunch above his belt. He was wearing an apron, and seemed to be happily washing and drying glass beer mugs. \n\nThere were large flat screen TV's playing on opposite side walls of the pub. Both were playing sports talk shows of some kind. Being a Wednesday in the spring, there were no games to watch other than NBA games, and the March Madness tournament was already over. The TV's were being watched by no one, but in a pub, apparently it was an unwritten rule that TV's had to be showing sports, so she knew they would be left on while she waited for her train. \n\nSarah moved to the stool at the right end of the bar. She lifted her purse up on the bar top, where it promptly fell over and spilled some of its contents. She started picking the mess up as the bartender came walking her way, still drying a beer mug. He approached with a smile, and there was something about him that put Sarah at ease. \n\n\"Good evening, and welcome to Pete's Pub. I don't believe I've seen you in here before. What can I get you this fine evening?\" \n\nShe really wasn't much of a social drinker, and certainly never during the week. She couldn't take a chance of an accidental hangover affecting her ability to function at work the next morning. \"Would you happen to have any iced tea?\" \n\n\"Why, I happen to have the finest brewed tea in the entire downtown area!\" he replied. \"Of course, I haven't really tried all of the other iced tea in all of the other places, but I know they'd have a hard time beating mine. Would you like sweetened, or un-sweetened?\" \n\n\"Un-sweetened, please,\" she answered. The bartender nodded as he headed to the other end of the bar. While she waited, Sarah looked around the pub once more. She noticed the man of the couple at the front was talking to the woman very earnestly now, and had reached his hands across the table to hold hers. The man slumped over the other table hadn't moved at all, and the man down the bar was also in pretty much the same position as before. \n\nThe bartender brought the tea to Sarah. He put it on the bar and with a smile and said, \"There you go, ma'am. Try it; if you don't think it's the best, I'll bring you another one just like it for free!\" With that, he smiled and winked at her. \n\nSarah surprised herself by smiling back. \"Thank you \u2013 I'll try it immediately,...\" \n\n\"Pete \u2013 Pete Cole, at your service.\" And with that, he stepped back and dipped into a bow \u2013 complete with hand gestures - as if Sarah was royalty. She laughed at his gesture \u2013 again, surprising herself. \n\nPete looked at her and said, \"Now, let me show you a little bartender magic.\" He put his hands over his eyes and said, \"I can tell by looking at you that your first name is Sarah.\" \n\nShe knew there was some kind of trick, but she couldn't figure it out, so she humored him and said, \"Okay, how did you do that?\" \n\n\"A bartender doesn't question the bar magic, he only knows to pay heed to its magical knowledge. Let's see...Sarah Sullivan...and you are a junior associate at Banks, Howell and Howell.\" \n\nFor the first time since stepping inside, Sarah was suddenly worried. How did this man know so much about her? What was he going to tell about her next \u2013 her phone number - her bra size - her salary? \n\nPete could see the look of concern on her face, so he laughed and said, \"Would you like to know the secret of the magic of the bar?\" \n\nShe replied, \"Yes, please!\" \n\nPete reached down on the bar next to her tea, and picked up a business card with her information on it. It had obviously spilled out when her purse had fallen over. He winked again as he handed it to her. \n\nShe breathed a sigh of relief, and then felt a little silly as she took the card from his hand. \"Well, Pete, you had me going for sure! Now I'm going to have to ignore all of the stalker alarms that were going off in my head!\" \n\nHe put his hand on hers, and with a smile, said, \"Kind of a mean trick, wasn't it? Because I was such a naughty boy, the tea is on the house!\" With that, he smiled, and then turned and walked to the other end of the bar, where he resumed his mug-drying duty. \n\nSarah watched him as he worked. She couldn't help but notice that he seemed to smile all the time, even now as he was drying the beer mugs. She wasn't good at guessing people's ages, but she figured him to be somewhere between 45 and 50. He was tall \u2013 probably over six feet in his shoes \u2013 maybe a couple of inches more. He obviously had a good sense of humor, as he displayed with the mind reading trick. \n\nBut what she particularly noticed about Pete was that after talking with him for five minutes or less, her mind was completely at ease, having forgotten the headaches of the day's work at the law firm, and having been upset that she had missed the 7:15 and had to wait another hour for the next train to arrive. Staring at Pete, none of that seemed to matter right now. He seemed truly happy, and its effect was rubbing off on her. \n\nHer thoughts were interrupted by the opening of the front door. A smartly dressed lady came in, surveyed the inside of the pub for a few seconds, and then walked over to the table with the slumbering man. Pete saw her come in and immediately left his position behind the bar to walk over and greet her. \n\n\"Hello, Ann,\" he said. \"Here he is, waiting for his caretaker to come and get him home. I didn't realize he had so much to drink, so I apologize that you had to come down and pick him up.\" \n\nThe woman looked at Pete and replied, \"That's okay, Pete \u2013 it's not your fault. I'm just glad you look after him and call me to come and get him. Can you help me get him to the car?\" \n\nThe woman named Ann walked over to what was apparently her husband, and started shaking him to try and get him to wake up. \"Donald, it's time to go home \u2013 wake up!\" \n\nDonald began to open his eyes and stare as if he didn't remember where he was. By this time, the other man sitting at the bar had come over to offer assistance, and with Pete on one side of Donald and the bar man on the other side, they managed to get him out the door and into Ann's waiting car. They helped Donald get in and fastened his seat belt for him. With a wave and another \"thank you,\" Ann pulled away, taking Donald home to apparently sleep this one off. \n\nThe bar customer went back to his seat, and Pete went behind the bar and headed in Sarah's direction. \"Are you doing okay with your tea?\" he asked. \n\nSarah nodded. \"What's the story with Donald? Does he do that often?\" \n\nPete laughed and replied, \"No, Donald doesn't usually fall asleep here. It only happens once or twice a year, at most. You see, he works at the building across the street from where you work. He and some of his buddies usually come in after work at about 5:15, and they spend an hour together, sipping on a beer and talking about their days. For some reason, Donald came in by himself tonight, and without his buddies monitoring how much he had been drinking, he got a little too much. He's a very nice drunk \u2013 a sleeper, as you saw. His wife Ann and I have worked it out that if he doesn't make it on the 7:15, I can call her and she'll come to get him.\" \n\nSince Pete was up for talking, Sarah decided to find out more about the other customers. \"What's the story of the guy sitting at the bar?\" \n\nPete looked over at him and said, \"His name is Brian, and he's an extremely good friend of mine. We've known each other for years, and it makes him comfortable to be here. To tell you the truth, if it wasn't for him, you wouldn't be in here tonight, and neither would I.\" \n\n\"Why is that?\" \n\nPete looked at Brian again. \"Without going into the entire story, Brian was the investor that allowed me to build this bar. So far he's never asked for any of that money back, even though we worked out a payment plan and everything. He tells me that just being able to come and sit here is payment enough for him. He's a great guy, and I owe him a lot. One day I'll make sure he gets the money I owe him, but for now, we're both happy with the status quo.\" \n\nSarah loved that story. It made her realize that just as Pete had helped her forget the trials of her day, he must have that effect on others as well. \n\n\"So what about the couple at the table behind us?\" \n\nAs she asked that question, the couple stood up to leave. The man tried to put his arm around the woman's shoulders, but his advances were met with a raised arm, signifying her resistance. \n\nAs they walked out the door, Pete shrugged and said, \"I don't know who they are. They have never been in here before tonight. But observing them as I have been doing the last 45 minutes or so, if I had to guess, I'd say that he's been caught in an affair, and was trying to get his wife to forgive him.\" \n\nTo hear Pete say that shocked Sarah. \"How can you tell that, just from watching them?\" \n\n\"Well, my new friend Sarah, it's what we bartenders do. We get a chance to see lots of people, and sometimes not at their finest. And if it is indeed an affair that is affecting them, I know something about that from my own personal experience, except instead of the husband cheating on the wife, in my case it was the other way around.\" \n\n\"Oh, Pete \u2013 I'm so sorry to hear that.\" Sarah felt pain for Pete, who at least on the surface seemed like such a nice and genuine man. \"Nobody should ever be treated like that.\" \n\nPete smiled \u2013 of course \u2013 as he looked at Sarah and said, \"Well, it's a long story, but in the end, I was able to build this pub. Someday if you'd like to hear it, come back in and I'll share with you. But enough about me \u2013 what caused you to come in off the street this lovely evening?\" \n\nShe shook her head as she said, \"Same thing as Donald \u2013 I missed the 7:15, so I came in here to stay warm until the next train comes along.\" \n\nPete looked at her and replied, \"Well then you'd better hurry up and finish your tea. It's already 8:05, and you don't want to miss this one!\" \n\nSarah couldn't believe the time had flown by so quickly! She drank the last swallow of tea, and then put her coat on and gathered up her purse, making sure it didn't fall over this time. She turned to Pete and said, \"I've had a really great time in your pub, Pete. I am sure you will see me again! Thanks for the tea!\" \n\nAs she started to turn towards the door, Pete grabbed her right hand, and in a quick gesture, brought it up to his face and kissed it. He smiled as he returned it, causing Sarah to blush. \n\n\"The pleasure has been all mine, Sarah Sullivan. I hope to see you soon!\" \n\nSarah headed toward the door. She knew the train ride was going to be interesting, as she sorted through the emotions that were now racing through her brain. As she climbed the steps to the platform, she was still amazed at how carefree she felt after her trying day. She was struggling to remember the piles of work that faced her when her day started, knowing that it was going to take her well into the evening before she got it all done. She remembered the frustration as she saw the train pulling out of the station without her being on it. \n\nAnd then she remembered stepping into to the pub, and it's warm, relaxed ambiance. She also remembered Pete, who seemed to smile all the time, and who made it seem like she had known him all her life. He was funny, and kind...and that wink, she realized for the first time, seemed to be the bow on the complete package. She was also amazed at how fast the 45 minutes she was in there had flown by. To her, that was a sure sign of the wonderful time, just sipping on her iced tea and watching Pete and the other things that had entertained her. \n\nWhat was it that had caused her to forget her worries and experience a thoroughly enjoyable 45 minutes? Was it the pub itself? It was a unique building \u2013 modern construction, yet built to resemble the old bars and pubs of a different era. Was it watching Donald sleep, and the other couple seemingly struggle with something in their relationship? \n\nShe realized what it was, but she was afraid to admit it. After all, he was at least 20 years older than she, maybe even more. And yet she was sure that it was Pete that had put her at ease, with his smile, his wink, and the fact that he just exuded kindness without even trying. He didn't once look at her as a potential conquest like other men usually did. Instead, he treated her like she was his best friend from the moment she sat down on that end bar stool. It was refreshing, and it was just what Sarah had needed after a long day at work. \n\n****** \n\nLife had not been easy for Sarah Sullivan. It seemed that everywhere she looked, there were obstacles to overcome. However, others may have wilted at the challenges they faced, but not Sarah. She had viewed each as an opportunity for success. If she didn't let difficult problems knock her off of her stride, she knew she would eventually be able to overcome anything that stood in the way of her dreams. \n\nAnd what were those dreams? Since her abusive alcoholic father had finally left her and her mom by themselves when Sarah was seven, it had been about the will to survive and succeed. Her mom really had no marketable skills since she had given up her own dreams of having a professional career to support her husband while he went through college. So she scratched to find enough jobs in order to provide for herself and her young daughter. ",
        "Things had been better then. Her father William was eager to prove to the world that he could succeed, and once out of school, he set out to tame it. It was a time of hope, of possibilities, after the struggles of making it through college while they lived only on his wife's waitressing job as she often worked 50 or 60 hours per week to keep food on the table. They had married young, William and Kate, and became parents not long after. With the help of family and friends, they stood together on the threshold of better days. \n\nOnly it never happened. William had the unfortunate bad luck to graduate with a degree in a time of national recession. Nobody was hiring in his field, and the few that were getting jobs had far more experience than he did. He ended up in a string of unsuccessful service-type jobs, not using the skills he had learned in college. His attitude became surly, which did not lend itself well to working for others. He started to get fired on a regular basis \u2013 in fact, the longest run of employment he had at one location was only six months. \n\nIt was also about this time when he began to abuse alcohol. He had enjoyed the party life in high school and college up until he got married. To his credit, after that point, he gave it up \u2013 well, mostly gave it up. He still would indulge on a weekend or so every month, hanging out with friends and watching games on TV. But with the bad luck in the job market and the frustrations with his employment record that followed, compounded by the challenges of supporting a young family, providing for their needs just became too much. \n\nKate did all that she could. She tried to help out with odd jobs here and there while still maintaining her new role as mother to Sarah. She tried to cheer William up, but most of the time there was little reason for cheer. She was basically trapped in her own little world of worry and fear \u2013 the fear of not knowing when there would be any reason to hope for a better life. \n\nThe first night William did not come home from work right away should have been the warning sign for Kate, but she preferred to believe things would get better. That first night, William stumbled in drunk after 9:00 p.m. and demanded to know why supper wasn't on the table. As Kate tried to explain that it had been when he was supposed to be home at his normal 6:00, he flew into a rage and hit her for the first time. Fortunately, Sarah had already been put into bed. It was something a 4-year-old child should never have to see. \n\nUnfortunately, there were other opportunities for Sarah to witness the abuse, and to see her dad screaming terrible insults at her mom while she cowered in the corner, helpless to help her mom out. William never took his anger out physically on his daughter, but she bore a large part of the emotional pain he was dishing out on his wife. As Sarah distanced herself from her father, she and her mother became close, finding love in each other's arms as they huddled against the tirades that were becoming all too regular. \n\nFinally it boiled over. It started out as a typical outburst from William, coming home drunk again. Needing less and less reasons to get upset, he burst into the kitchen where Kate was setting the table for supper. His anger did not cool, and eventually he knocked over the table, breaking a couple of glasses in the process. He picked up one of the shards of broken glass and moved over to where Kate had shrunk back into the corner of the room. He held it up to her neck, as if waiting for her to make a move to try and escape, but Kate stood still, and eventually William dropped the glass, turned and walked out of the house. That was the last time Kate would see him. \n\nSarah had seen this final attack, and after her dad left, she ran over and into her mother's arms. Together they cleaned up as best as they could. Kate called a friend and asked if she and Sarah could come and spend a couple of days with her while they sorted out their lives. They quickly packed their suitcases full of the few clothes they had and waited until her friend came to pick them up. From that point on, Kate and Sarah's new life had begun \u2013 without the fear of the abusive William, but with the knowledge that things would never be easy again. \n\nThey eventually ended up staying with Kate's parents for a couple of years, before putting together enough money to afford a deposit on a little two bedroom apartment close to both Kate's restaurant where she worked and Sarah's school. Kate was fortunate to get a day shift at the restaurant, working 7:00 a.m. to 5 p.m. 4 days per week. On those days, she would take Sarah with her and see that she got away to school from the restaurant by 7:45. After school she would walk back to the restaurant and sit at a little table in the kitchen doing homework until Kate got off work. \n\nKate also picked up a couple of part time jobs to work on the days she wasn't at the restaurant. She did very little for herself, preferring to make sure Sarah had the things she needed for school. It was about this time that Sarah realized how much hard work Kate was putting in for her, and Sarah vowed to do whatever it took so be successful on her own. She figured out her mom was in this position because she had sacrificed her own dreams for those of her husband, and was now paying a heavy price when his dreams crashed to the ground. \n\nSarah was always a good student in school, but by middle school, she made up her mind that being good wasn't good enough. She would stop with nothing more than the best. While other girls were enjoying the social aspects of teen living, Sarah was glued to a textbook, not wanting to miss even a single question on a test. Her hard work and dedication paid off. By the time she was set to graduate high school, she had earned a full academic scholarship from the state university nearby. With awards and grants from other sources, she was going to be able to be a four-year student free of charge \u2013 tuition, room and board and books all covered. \n\nIt wasn't that she couldn't attract the attention of boys. She had been blessed with some of her mom's natural beauty features, even though in a similar fashion, her mom never really brought those features out. Sarah had grown to 5'10\" in height, and had a slim build with long auburn hair that when let down, flowed to mid-back level. But her hair was nearly always up, as a way of hiding her femininity from the young men who would try to pursue her as a potential love interest. She had no time for that. They would just get in the way of achieving her goals. \n\nIt was as a senior in high school that Sarah had set her sights on being a lawyer. Of course to her, the perfect scenario would be to work in the area of women's rights and concerns. But true to her nature, she wanted to attack the world of corporate law first. She applied for and was easily accepted into the prestigious Williams School of Law. It was there that she was handed the first disappointment of her academic career \u2013 finishing second in her graduating class, a mere percentage point behind the young man that had been her academic rival throughout her time at Williams. Despite her less than number one ranking, she had secured one of three available junior associate positions at the prestigious law firm of Banks, Howell and Howell. Known for their work in both foreign and domestic trade fields, Sarah had been hired to work on the domestic side of the firm, dealing primarily with contract and trade negotiation agreements. She would rarely see the inside of a courtroom, that job reserved for the senior associates and partners. But she hoped the experience she was gaining would be invaluable later on as she considered the options that would await her. \n\nIn all of her success, she prided herself that she had overcome the problems that life had handed her. She and her mother had an incredibly close bond, although even that bond had been somewhat strained lately, given the amount of time Sarah spent working. Sarah tried to assuage the guilt of spending so much time on her career by helping her mom out financially from time to time \u2013 not because her mom requested it, and not because Sarah felt obligated to send it. Sarah just remembered the times growing up that they did without the things other families had because of their financial limitations, and since she could help her mom out now, she did so because she deserved to have an easier life. \n\nBut the most pressing reason for Sarah's desire to succeed was aimed at the absence of her father in her life. Even before he left, it was like he wasn't there. When he wasn't out drinking, he pretty much kept to himself, never acting the role of father that Sarah so desperately wanted and needed. Sarah turned that absence \u2013 combined with the abuse when he was there \u2013 into a hatred that eventually clouded her opinion of most of the males she encountered. It wasn't her intention to be that way. But anytime she experienced what she felt to be gender discrimination \u2013 which wasn't all that uncommon throughout her rise to where she was today \u2013 served to deepen the disdain she had for the male species, to the point that even at B H&amp;H, she inwardly held contempt over her male colleagues and supervisors. \n\nAt this point in her life, there was simply no place for men. She had no interest in a social life, and she felt her male colleagues were nothing more than obstacles to overcome on her way to the top. Her mom had told her many times that not all men were out to prevent her from achieving success, and even her own father at one time had been gentle and loving. But Sarah didn't want to hear those words, so her unrelenting drive to succeed continued to be fed by the disdain of the men with whom she grudgingly interacted. \n\n****** \n\nThose thoughts were far from her mind as she took her seat on the 8:15. One of the benefits of waiting so late to go home was that the train was far less busy than three hours earlier. Sarah scanned the car quickly, seeing just 10-12 people on a car that normally would hold upwards of 50. \n\nAs the train pulled away from the station, she turned her head and took one last look at the pub where she had spent the past hour. If someone had been sitting across from her, they might have noticed a small smile escape Sarah's lips as she recalled the cozy atmosphere of the pub and the welcoming demeanor of its' owner and bartender. She smiled even more when she reminded herself of Pete's mind reading abilities when she had first sat down. She was all ready to lump him into the detested man category, but Pete's smile and his welcoming manner prevented her from doing that. Perhaps that smile and manner was a learned skill, so that patrons of the pub left feeling the way she did now. Perhaps away from the pub, Pete was no different than any other man who stood in the way of her success. \n\nBut she couldn't make herself believe that. He had given her no reason to believe otherwise, and for the moment, she was willing to accept that he seemed to be a gentleman whose purpose was to provide his customers with a warm and inviting establishment designed to lighten their mood from the clutter and chaos that often accompanied their real life adventures. Perhaps that's why, according to Pete, it was always the busiest in the late afternoon and early evening, when workers from around the area congregated in the pub after their dull and grueling jobs were completed for the day. Perhaps they were seeking what Sarah found \u2013 a respite from life's burdens. \n\nAnd yet as she traveled now to her apartment, she also realized that normally on the train in the evening, she was reviewing the previous days' work, and already preparing for the next day, making a schedule in her mind as to what needed done when. She felt it was one of the most important parts of her day, since it was the link between what had been done and what needed to be done tomorrow. Never one to let even one free moment go to waste, the 20-minute train ride to the station close to her apartment allowed her to set her priorities for the next day, so that when she got to work early the next morning, she could get started right away on the important business of the day. \n\nShe tried to squelch her pub experience and focus on her normal daily review, but it wasn't working. The more she tried, the more she failed, and the more agitated she became with herself. She began thinking that the pub trip was a bad idea, if it stood in the way of her preparations for her next day at work. Just a few minutes before, she was thinking how much fun it had been to get to know Pete a little bit. Now she was trying to put him into the category of \"men who stand in my way.\" The only problem is that it wasn't working very well. \n\nSo as the train stopped at her station and she de-boarded, she was caught up in an inner turmoil the likes she had never experienced. She only hoped she would resolve it soon, because she really didn't feel like she had time to address it. \n\n****** \n\nThe following morning at work, Sarah was still caught up in the turmoil of the previous evening when she was summoned to the office of one of the senior partners. This wasn't a new experience for her, but each time it happened, it still made her a little nervous. She gathered up a legal pad and headed into Robert Ward's office a little before 9:00 a.m. \n\nRobert Ward was a diminutive man, probably only about 5'6\" in height, and though he had added a little weight to his mid-section in his last few years, he wasn't out of shape by any means. Probably approaching 65, he could easily retire on the pension and benefits he had accrued throughout the years, and yet he kept coming in each day, doing the job he so dearly loved. Of all of the senior partners, Sarah could identify with Robert the most. He had overcome the lifelong taunts about his physical stature to rise to the top of one of the city's most respected law firms. He was the man Sarah most respected at BH&amp;H. The respect was mutual, as Robert saw great potential from this particular junior associate. It was because of that potential that he had called Sarah to his office this morning. \n\n\"Good morning, Sarah. Thank you for coming. I want you to listen carefully, because I have a special assignment for you. This is bigger than anything you've worked on before, but I wouldn't have called you here if I didn't think you could handle it.\" \n\nSarah flashed a nervous smile. \"Thank you, Mr. Ward. I promise whatever it is you want me to do, I can handle it.\" \n\nRobert sat down in the chair behind his desk, and motioned Sarah to sit as well. \"I believe you can, Sarah. The firm has been retained by a major international company to complete a series of agreements between them and another company, located in Hong Kong. This will be the first time these two companies have ever worked together. It is our job to negotiate the agreement between the two companies, and then draft the corresponding agreement for both companies to sign. It will not be easy, as each of these companies is used to doing things their own way. \n\n\"This will require a lot of communication with the representatives from both of these companies. You and your team will be working lots of non-traditional hours in order to visit with the reps in Hong Kong. You know that this firm prides itself in insisting that our associates try to balance their work and home life by working fewer hours than other firms, but I'm afraid for the next couple of weeks, that will be out the window. \n\n\"I don't think I have to tell you how important this is to the firm, Sarah. We've been trying to get some of this company's business for a long time, and now we are in the door. If you do the job of which I'm sure you are capable, the rewards for the firm and for you personally will be tremendous. \n\n\"I've hand-picked a team of two of our other top junior associates \u2013 Stacy Richardson and Gerald Mann - and two aides for you. While I have not met with them yet, they will understand that you will be the lead on this project. How well you lead them, and how well you create the agreement these companies seek, will be up to you. If you agree to take this assignment, I expect you to start working with your team this afternoon. I've also arranged to have your current work load assigned to other associates. This will be your sole focus.\" \n\nSarah pondered what Robert was telling her. She had been working extremely hard for three years to get to the point where she could be trusted with such an important project. This was her time to shine. If she thought she had been driven to success before, she was prepared to show them a new level! \n\n\"Mr. Ward, you picked the right person. I'm prepared to do this, and I won't let you or the firm down. Thank you for your faith in me!\" \n\nRobert Ward smiled. \"Excellent! I'll spend the rest of the morning talking with your team members. Let's plan on all meeting together at 1:00 this afternoon to get started. I want to meet with your team every morning at 8:00 to go over the previous days' work and to see what plans are for the new day.\" \n\nSarah left the office on cloud nine. This was her chance to show the entire firm that she was ready for this type of responsibility! It was as if her whole life had been had been focused on this exact moment. She went back to her office and did some work on her current caseload in preparation for it to be handed to someone else. At noon, she picked through the salad she had delivered. She wasn't really feeling hunger at this point, as the anticipation of meeting her team and getting started on the project was overriding the physical needs of her body. \n\nAt 1:00 they were back in Robert Ward's office. Sarah looked at her team and was pleased to see Stacey and Gerald, two associates with whom she had worked in the past. Robert's choices underlined the importance of this project. After a couple of opening remarks, he repeated some of the same things to the team that he had discussed with Sarah earlier. \n\nAfter that meeting, Sarah continued with her staff in a conference room. She made assignments to be completed before 8:00 the next morning, then dismissed her staff so they could get busy. The rest of the day was spent learning as much as possible about both companies \u2013 their primary manufacturing interests, previous mergers and cooperative agreements, as well as a list of positives and negatives that could arise in an agreement between the two companies. She also studied the financial standing of each company, and where logically one company could benefit the other, and vice versa. \n\nIn typical Sarah fashion, she threw everything she had into the project. She worked so hard, in fact, that she did not realize how late it had gotten the first time she looked at the clock on her office wall. When she saw that it was 10:00 that evening, she realized she had not left her chair in over eight hours. She chastised herself for not taking care of her personal needs. If she was going to be successful with this project, she could not allow her health to deteriorate. \n\nShe realized she was hungry and thirsty, but knew it was going to be difficult to find anything downtown that was open this late. Then she remembered Pete's. Hadn't he said they had food available there? She knew it would be open for a few hours still, so it seemed like a logical place to go and see if she could get something to eat. \n\nAt the same time, she remembered what happened last night after spending just 45 minutes there waiting on her train. It was an enjoyable time, but she let the fun invade her routine. Here she was, now in charge of a very large and important project at BH&amp;H, and she couldn't let a few good times with Pete and the others interfere with her ability to work well at the law firm. \n",
        "So it was with a little hesitancy that she grabbed her coat and headed to the elevator to make a quick run to the pub. As she rode down from the 15<sup>th</sup> floor, she kept reminding herself that she was just going to something to drink and see if Pete had anything to eat at this late hour. She told herself that she was not there to be friendly with Pete or enjoy the atmosphere or wonder about the others who might be in the pub that night. \n\nShe repeated those thoughts to herself as she made the short three-block walk to the pub. Feeling confident she had left her emotions elsewhere, Sarah pushed the door open and walked in. Immediately the warmth of the pub surrounded her, and as she saw Pete standing behind the bar, her plan of coming just for food and drink evaporated. \n\nPete recognized her as soon as she stepped in the door. Instantly he smiled and waved at her, pleased to see Sarah there for a second night in a row. As if a moth drawn to a flame, Sarah automatically headed toward the same stool at the end of the bar, where Pete came around to greet her with another majestic bow and a kiss on the back of her hand. She felt a flush rise through her face as she broke out with a smile, yet deep in the back of her mind, she began to chastise herself for allowing these emotions to move her out of her usual business-like demeanor. \n\nPete smiled at her and said, \"What a wonderful treat to see you back, my friend Sarah. Can I interest you in another mug of the city's finest ice tea?\" \n\nSarah nodded her head, and added, \"I was hoping that perhaps you might be able to find me some food to eat as well. I'm afraid I was so busy at work that I skipped dinner time completely. Any chance you could help a hungry girl out?\" \n\nPete frowned a bit, and said, \"The grill closes at 9:00, my dear. But I bet if you're not too picky, I could hustle back there and round something up.\" \n\n\"At this point, I'd eat almost anything. I would be indebted to your kindness if you could help a poor girl out.\" \n\nAs Sarah listened to the words she said, she realized that she didn't normally talk like that, but instead had fallen into the pattern Pete used as he talked to her. Part of her thought it charming to match Pete's vocabulary style; but part of it knew when she did things like that, she was losing control over who she really was. \n\nAs Pete headed into the back of the bar, he stopped as he walked by Brian \u2013 the investor friend of Pete's who was on the same stool last night. Brian nodded, then turned to look at Sarah with a smile and waved. \n\nSarah waved back. It was a comfort to see Brian there. Pete had said Brian was a very special friend. Her guess was that Pete asked Brian to cover the bar if any customers came in while he was in the back looking for food. \n\nShe looked at the rest of the crowd. There was a basketball game playing on both TV's, and she figured the extra people that were there that late were probably there to watch it in the ambience of the pub. She also noticed a blonde girl with an apron on, talking to one of the groups who were seated around a table while they were watching. The girl was very pretty, and looked to be about the same age as Sarah. She didn't remember seeing her in the pub last night. \n\nPete returned and headed to the end of the bar. \"I think the best I can do for you is a sandwich, but we have lots of things that could be put on it. Would you like come back and tell me what you'd like?\" \n\nSarah nodded and followed him back to the kitchen. It wasn't large, but obviously had all of the necessary equipment to serve a nice variety of pub food. She looked in the large refrigerator and saw the ingredients to make a nice sub sandwich with ham and turkey. Pete proceeded to make the sandwich on a hoagie bun, and offered to toast it underneath a salamander, which she accepted. When it came out, he carried it back to the bar for her. \n\nWith the first bite, she knew she was being spoiled by Pete. She didn't remember a sandwich ever tasting better. Maybe it was because she was so hungry. Maybe it was because Pete had made it for her, chattering away while he assembled it. Maybe it was just that once again, she was being lured into an unfamiliar feeling by the ambience of the pub and the warmth of its owner. \n\nAs she ate, she watched Pete. Just like last night, he always seemed to have a smile on his face. How could a person be so terminally happy, she thought to herself? He would chat with Brian, and the two of them would laugh together at whatever was said. The girl with apron came over and asked for a couple more beers, which Pete filled quickly and efficiently. Obviously she was a server, working for Pete, and yet they laughed together as well. Pete had the ability to improve the mood of those around him \u2013 a perfect talent for a pub owner and bartender. \n\nHe came walking back to her end of the bar just as she was finishing the last bite of her sandwich. \"How was it? I hope it was enjoyable for you, especially since you practically had to come back and make it yourself!\" \n\nSarah laughed (surprising herself once again) and said, \"I think it was fantastic \u2013 maybe because we worked as a team! Of course, I'm not sure me telling you what to put on it, and then watching you make it, is much of a team!\" \n\nPete laughed and said, \"If the sandwich was as good as you say it was, I think we can take team credit for it. And to tell you the truth, being on a team with you would be quite lovely, no matter what our tasks are!\" \n\nSarah felt herself blushing. Pete was an extremely charming man, and even though she knew she shouldn't, she was enjoying every second she spent with him. He took the paper plate upon which her sandwich was served and tossed it in the trash, and then grabbed her mug and walked over to the tea dispenser to refill it. She started to protest, thinking that she couldn't stay much longer since she needed to get back to the office, but she knew it wouldn't do any good, because if Pete insisted on refilling her tea, he wouldn't listen to her arguments about it. \n\nAs he set the mug of tea down in front of her, Pete asked, \"So tell me, Sarah \u2013 why are you here so much later than last night? You can't blame this on missing your train.\" \n\nShe answered, \"No, that's not it. Today I was selected to lead a team to negotiate a cooperative agreement between two manufacturers that have not worked together before. We're under a very tight deadline, so I have a feeling over the next two weeks I'm going to be spending many more hours there than not. Today I was working on it so diligently that I never looked at the time, which is why I came here seeking food.\" \n\nPete shook his head. \"My dear, you must be careful not to let yourself get into a mode where you don't have any time for life away from the office. I'm sure this project is important, but you need to remember that there is also life outside of the offices of Banks, Howell and Howell.\" \n\nSarah looked at Pete and said, \"Maybe for you, but I've been preparing my entire life for an opportunity like this \u2013 a chance to show that I can handle whatever is put before me. My life right now is in the offices of Banks, Howell and Howell. If I am successful on this project, it means that I'll be considered for even bigger and better things. Do you know what it's like to work against adversity your entire life, and then see how all of those years of planning are beginning to pay off?\" \n\nPete grabbed Sarah's hands and looked her straight in the eyes and said, \"Yes, I do \u2013 in fact, I've done that twice now. I think there is something about me that you need to know.\" He paused, looking Sarah straight into her eyes, before he continued. \"I, too, was a junior associate at Banks, Howell and Howell. I also put my career in front of everything else, for far too long. I know I told you yesterday of my wife's affair, but I cannot give her all the blame for her indiscretion. Because of my ungodly work ethic at the law firm, she finally went looking for intimacy somewhere else, and it cost me my marriage. It nearly cost me my family as well. When I looked at what I'd become, I had to stop. \n\n\"So call it a mid-life crisis if you will, but I quit the law firm and made the arrangements to build this place. I may be in debt for the rest of my life, but at least I'm in charge of myself now, and I make it my mission in life to make other people as happy as I am.\" \n\nHe let Sarah's hands go as he continued. \"Listen, your schedule may be fine for you, especially since you're still young and can handle the physical requirements of the kind of hours it sounds like you will be working. Those kind of hours cost me who I was, and when it was too late to save what I had outside of the office, I felt I had to do what I did in order to rescue the rest of my life. I only tell you this because I'd hate for you to get caught up in the same mess I was in. Just be careful \u2013 you're too nice of a person to let them get you down.\" \n\nWith that, Pete headed out into the pub main area to visit with some of the customers who were wrapping up the game on TV. Leaving Sarah alone gave her a little time to ponder the story Pete had told her. It had been depressing to hear how his outside life was so negatively affected by his hours at the law firm. Nobody should ever have to lose that much just because they were trying to be the best employee they could be. \n\nAt the same time, she didn't have the outside life to worry about. Other than her mother, there was no one to go and visit; no friends to hang out with; no desire to step out and see what the outside world had to offer. Her life was spent with two things \u2013 work, and everything else that helped to make work successful. The only time she left her apartment was to go to work, or to shop for necessities \u2013 something she hated with a passion. \n\nShe continued to compare her current life with Pete's life before he quit the law firm. He hadn't been happy \u2013 especially losing his family like he did. He felt like if he didn't change, he would never be happy, so he took a big leap of faith and quit the job he knew to do something brand new and exciting, though filled with challenges the likes he'd never faced before. And yet the end result was that he was now happy \u2013 in fact, Sarah couldn't name anybody she knew that seemed to be happier than Pete. \n\nSo then the huge question loomed in her own life \u2013 was she happy? She was glad for her success, and was certainly driven to achieve even more with her total focus on her job. But was that happiness? Success is great, but at what price? She glanced at Pete again \u2013 smiling and talking as always \u2013 and realized that maybe she needed to find some of the happiness that engulfed him. \n\nShe debated with herself. Could she allow a little happiness in and still drive herself to achieve the levels of success she sought? Would it be worth lowering her sights a little bit to mix in some social time? Or was pure happiness only attained when she had reached all of her goals? She had been driven for so long to reach not only where she was today, but hopefully even loftier positions. Yet where did it stop? At what point will her achievement ever be good enough? \n\nShe was pondering these questions as Pete came back over. \"So, Sarah, are you on your way home? It's not that I want to chase you off, but there's a train that leaves in about 15 minutes, so if that was your plan, you might want to get ready.\" \n\nSarah smiled at his concern. \"No, I think I'm headed back to the office for the night. I really want to get a jump on this project. It's my first real chance to show that I can be counted on for the work that is important to the senior partners.\"  \n\nPete's eyes widened. \"You mean you're going to pull an all-nighter? Is this project that important? Wait a minute...I bet I know more about this than you think I do. I bet that this project was assigned to you by Robert Ward. Am I right?\" \n\nIt shouldn't have surprised Sarah by now to know that Pete knew a lot of things, especially since she had just found out he had worked for the same firm she toiled at now. So she just shook her head at Pete and said, \"Yeah, it's Mr. Ward. What can you tell me about him?\" \n\nPete smiled and said, \"I imagine if you've worked there for three years, there's not too much you don't know about him. But if he's picked you to lead this project, that's very high praise coming from a very intelligent man. Of all the senior partners, I respected Robert the most. He knows you can handle this, but he also knows you will spend the hours necessary to do an extra good job. If he has a fault, it's that he likes to squeeze hours out of the junior associates.\" \n\nSarah blushed at the compliment. It was nice to know that Pete felt Robert thought highly of her. In a way, it was a small validation of the hard work and energy she had put into her career to this point. \n\nPete then got serious again. \"Listen, Sarah. I'd hate to see you get physically run down from the hours you have ahead of you. When you add the couple of hours you will lose every time you go home \u2013 even if just for fresh clothes \u2013 it really begins to add up. I like you and I want to see you do well, so I want you to consider this: I have an extra room in my apartment here with a bed, dresser and closet. I would let you use that room if you feel comfortable, and give you a key to the separate door to the apartment so you could come and go as you like. That way, if you have a couple of hours and need a rest, you won't waste it on the train ride home and back.\" \n\nSarah thought about his offer. The practical side in her said it made sense to be just a 10 minute walk away from a bed where she could catch some sleep. If she could come and go as she pleased, it wouldn't lock her into a pre-determined time schedule. She thought about Pete. In the two days she had known him, he came across as one of the friendliest men she'd ever met, but she realized that in all honesty, she didn't know him that well. And as driven as she was by her father's abuse and subsequent absence in her life, she didn't know if she could allow herself to accept that kind of help from ANY man, let alone one as nice as Pete appeared to be. \n\nSo she looked at him and said, \"Pete, that's the nicest offer I've had in a long time. Let me think about it, because it is unexpected. I'm sure I'll be back here sometime soon, and I can let you know then. But thank you for being so kind to me!\"  \n\nShe leaned in and gave him a kiss on the cheek, and it was his turn to blush. After that, she grabbed her coat and turned to leave, but not before leaving $10 on the counter to pay for her sandwich. Pete tried to give it back to her, but she refused. Smiling, she told him goodbye and headed back to her office. As she walked, she couldn't believe that she had just kissed Pete on the cheek! What was she thinking? It had been a spur-of-the-moment action, certainly not one she was thinking about at the time. And yet it seemed the right thing to do. After all, he had offered up a room in his apartment to her, even though he had only known her for a couple of days. \n\nAs she walked back to the office, she realized one of the reasons she felt compelled to kiss him. Because he had worked for BH&amp;H, he knew what her job was like, including knowing the senior associates at the top of the firm. He sympathized with her about the long hours she was certainly going to have over the next two weeks or more. Most importantly, he cared enough about her to warn her to take care of herself, especially in regards to lack of sleep. \n\nSuddenly that thought hit her between the eyes \u2013 he cared for her. Surely others had cared for her as well as she advanced through her education and into her career, but Pete was different. He took the time to get to know her; he had been funny and charming; he had made her a sandwich an hour after the kitchen had closed; and he offered a bedroom in his apartment for her to use as she toiled on this special project. Pete didn't have to do any of those things, and yet he had done them anyway. \n\nShe got to the main building entrance and used her fingerprint to gain access. As she stepped in the elevator car for the ride to the 15<sup>th</sup> floor, she continued with her speculation. Would Pete have done those things for others? He was always funny and charming, so that answer was yes. Would he get to know others as well as he had with her? That was a yes as well, because it seemed that Pete never met a stranger. Would he have made a sandwich for them after hours? Probably, especially if they were in her situation with no food options in sight. Would he have offered his extra bedroom in his apartment? \n\nShe smiled as the elevator doors opened. The answer was obvious \u2013 Pete cared for her, perhaps more so than others. So the kiss on the cheek had been appropriate \u2013 it seemed like the perfect gesture to return her thanks for his caring. As she sat down at her desk and cracked open the trade journals in front of her, she felt a renewed energy, and with a smile and a deep breath, she got to work. \n\n****** \n\nThe renewed energy didn't last long. Sarah made it through the night and actually accomplished a good amount of research. But by morning, she was dragging. Her last year at Williams had been the last time that she had pulled an all-nighter, and she realized that she wasn't in shape to do it now. Perhaps that was something 30-year-old junior associates shouldn't do, but she knew there would be more coming up while they worked on this project. \n\nShe survived through the noon hour on extra cups of coffee and the sugar rush of doughnuts in the break room. The team meeting at 1:00 wasn't the most productive meeting ever, but she heard enough from the other members to assure her they had made excellent progress the first day. She refined their assignments, giving each one of them a particular focus area on which to concentrate, and sent them off on their way. \n\nBy 7:00, she realized she was not capable of rational thought any more. She needed sleep, and she wasn't going to get it at the office. She looked at the time and realized that she would be in another race against the 7:15 train, but she decided it wasn't worth the effort it would take to get to the station. What she needed, she thought to herself, was time with the person she knew cared for her. So she packed up her work in her desk drawer and headed for the elevators, her first stop on the way to Pete's. \n\nShe slowly made her way to the pub, and pushed the door open at about 7:25. Pete looked up from behind the bar and immediately knew what had happened. He came out to help her to her customary stool at the end of the bar and sat her down. He quickly retrieved a glass mug and filled it with iced tea. She took a big gulp, and the cold beverage helped her become a little more alert. \n\nPete patted her on the back and said, \"So you completed the all-nighter, eh? I hate to tell you this, but it looks like it completed you!\" \n\nSarah groaned at Pete's lame attempt at a joke. She looked up at him with bloodshot eyes and said, \"I don't get it \u2013 I used to do this all the time at Williams. But it sure knocked me out today. I just need some sleep.\" She laid her head on the counter, looking for even just a few seconds' respite. \n\nPete had heard enough. \"Okay, Sarah Sullivan. You have no choice now. You need sleep, and you can't wait until you get to your apartment. Pick something off of the menu for the cook to make for you, and then I'm taking you upstairs to that spare bedroom.\" \n\nSarah heard herself saying \"But Pete, I haven't decided I'm going to do that yet.\" \n\nPete would have nothing of it. \"I've decided for you. Until you get enough rest to get your senses back, I'm taking over, and I will not take 'no' for an answer!\" ",
        "Sarah was too tired to fight. She choose a simple hamburger from the menu, and dozed on the bar stool until Pete brought it out. He shook her to wake her up, and led her by the hand through the back of the bar to a door that opened to a flight of stairs leading up. With the hamburger in one hand and her hand in the other, Pete slowly led her up the stairs. At the top was another door, and this one opened into his apartment. \n\nThere was a small table for two just inside the door. Pete put the hamburger down and guided Sarah to the chair. He went to the back as she slowly chewed, each bite reviving her a little more. She looked around at his apartment. It wasn't large by any means, but she could see how he could live very comfortably here. She noticed a window in the living area that was letting in bright light. Since it was night outside, this confused her a bit, so she got up and walked over to it, and saw that it looked down upon the pub. She could see Brian sitting in his usual stool and several customers at the various tables. \n\nPete came back out into the living area. \"Do you like it? I had it put in on purpose \u2013 not because I wanted to spy or anything, but it's nice to be able to keep an eye on the pub while I'm up here. One time when we had some suspicious activity going on, I allowed the police to come up here and do a stake out. They didn't see what they wanted to, but it was nice to know they could use it if they needed. Would you like to see the rest of the apartment?\" \n\nAcross from the table was a small kitchenette, with a very small gas range, refrigerator and microwave. The sink was on the back wall with a cabinet over it. Next he led her down the hallway where there was a door on either side and a door at the end. The door on the left was the second bedroom where she would be sleeping. She peeked in and saw that it was small but adequate, with a closet and dresser as he said. The door on the right side was his bedroom \u2013 somewhat larger, with an en suite bathroom included. At the end of the hall was the main bathroom, the one that she would be using. It contained a tub/shower combination and a small vanity next to the toilet. \n\nPete turned and said, \"That's the tour. There's not much to look at, but since I spend most of my waking time in the pub, there's more than enough room up here for me. And you'll find that there's plenty of room for you as well. You really need to sleep tonight, but I hope you'll stay on at least for the two weeks. You'll see that you'll have much more energy at work if you come and get even a few regular hours of sleep.\" \n\nSarah was too tired to argue tonight. She finished the burger and handed him the plate. He led her back to her bedroom and pulled the blankets back for her. She sat on the side of the bed and removed her shoes. Pete said, \"I'll be downstairs if you need anything. Right now you need your privacy. Have a good night's sleep, my friend Sarah.\" He leaned down to kiss her on the cheek before heading out, closing her bedroom door behind him. \n\nSarah took off her skirt and blouse and climbed in the bed in just her bra and panties. She smiled as she relived his kiss on her cheek. It was that memory she took with her as she dropped into a deep sleep. \n\n****** \n\nSarah awoke to a light tapping sound. She sat up, not sure where she was for a moment. There was a window on the wall next to the bed she was in, and it was letting in the first light of a new morning. The tapping continued and a deep voice called out her name. It was hearing the voice that brought her back to reality. She was in the spare bedroom in Pete's apartment, and he was knocking on the door to wake her up. \n\nShe cleared her throat and answered, \"What is it, Pete?\" \n\nThrough the door, he called out, \"It's 6:00 a.m. and I figured you would want to be to the office early. I have cooked some breakfast for you \u2013 get dressed and come on out.\" \n\nSarah smiled. Pete was intent on taking care of her. \"Okay, Pete \u2013 thanks. I'll be out shortly.\" \n\nShe discovered a lamp on the table beside the bed and turned it on. She found her skirt and blouse and slipped them on, realizing that if she went to work this way, it would be the third day in a row for this outfit. She decided to forgo her shoes for now. Walking gingerly across the cool wood floor, she opened the door and looked out into the kitchenette of the apartment, where Pete stood at the tiny stove, frying pan in hand containing what looked to be a ham and cheese omelet. \n\nHe deftly scooped the omelet out of the pan with a spatula, guiding it to a plate he had sitting on the counter. Opening a drawer next to the stove, he grabbed a fork and placed in on the plate next to the omelet, and then handed it to Sarah. \n\nAs she cut into her first bite, Pete spoke again. \"I have salt and pepper next to you. There's salsa and hot sauce in the refrigerator as well. Can I get something for you?\" \n\nShe looked up at Pete and said, \"Haven't you done enough? This omelet smells magnificent! I don't need anything to cover up the flavor.\" \n\nPete smiled as he turned back toward the kitchenette, where he began to wash the cookware and utensils used to make Sarah's omelet. He quickly dried them and put them away, returning the kitchenette to the spotless condition she had first seen it in last night. Next, he came over to the little table and sat in the empty chair next to Sarah. \n\nShe could tell he wanted to say something by the way he was fidgeting, but she didn't want to pry, so she tried to ignore his movements. As soon as she finished the last bite of her omelet, he couldn't keep quiet anymore. \n\n\"So did you sleep well last night?\" \n\nShe put her fork down as she said, \"Yes, all night, like a baby. Thank you for your gracious hospitality, for the stay last night and the breakfast today.\" \n\nHe kept on with his questions. \"Did you hear me come in last night?\" \n\nShe shook her head. \"I didn't hear you, and I didn't hear any sounds from the pub. All was quiet.\" \n\nThis was what Pete wanted to hear. \"Then listen, Sarah, because I have a plan. As well as you slept last night, you should count this apartment as your second home while you work on this big project. It just makes sense! If you'll let me, we'll go over to your apartment in my car so you can pick up some clothes and personal items, like shampoo or anything else you might need during your stay. What do you say?\" \n\nSarah paused, not sure what to say, and then realized the questions she had in her mind needed to come out. \"Why are you doing this, Pete? I am so appreciative of your hospitality. I admit I haven't slept like that in years \u2013 it was as if you knew what I needed, and then you made it happen. The breakfast was amazing, your kindness is second to none, and it's obvious that you are always a very happy person. So why me \u2013 why is all of this directed at me? We hardly know each other!\" \n\nThe concern on Pete's face shone through as he answered, \"Because, my friend, I saw your kind come and go often during my nearly 20 years at BH&amp;H, and a lot of those washed out, because in their drive to climb their way to the top, they forgot to be a person outside of the firm. Even though I've only known you for a couple of days, I can tell that you could be one of those persons, and I don't want it to happen to you.\" \n\n\"I appreciate that, Pete \u2013 I really do. But that still doesn't really answer the 'why.' \n\nPete sat down in the empty chair next to Sarah and put his hand on top of hers. \"When you came into the pub for the first time the other night, I could see that you were tired, frustrated and basically lost because you weren't in control of your situation. When that train pulled away without you, you were being held captive in an unfamiliar place until the next one arrived. And yet even with that coldness inside, I was able to get you to warm up and smile, and when that Sarah came out, it was like the difference between night and day! I understand the driven Sarah is who you've been for a long time, but in the process, you've neglected your happy side. \n\n\"I don't want you waking up in 15 more years and finding out your spouse has cheated on you because of a lack of affection, and your kids are wary of you because you never had time to see them as kids. I lost a lot, Sarah, and I can't blame being a lawyer on all of it. But I know once I quit and followed my dream to build this place, I haven't felt like that lost and lonely lawyer since. It's been a complete transformation, and it saved my life! \n\n\"So the least I can do for you is make your load a little less heavy. While you're struggling to conquer the world, I'll help you down here in this little corner. Believe me, I won't hardly notice you in this spare room because when you're awake, I'll mostly be in the pub. But if it makes your journey a little easier, it's my honor to help you.\" \n\nBy the time he was finished with his answer, Sarah was nearly in tears. Other than her mother, she couldn't remember a time when someone had reached out to her in such a caring way. Any hesitation she had about staying in his extra bedroom quickly vanished. His heartfelt offer to help her avoid what he had seen bring down other young lawyers proved to her that he was genuine in his kindness and happiness. \n\nShe grabbed Pete's hand that was on top of hers and said, \"Okay, Pete \u2013 you've made a convincing argument to the jury, and they've come back in your favor. Let's go get some of my things.\" \n\nThey both stood up together, and as Pete turned to grab his keys and jacket, Sarah intercepted him and wrapped her arms around him in a big hug. An obviously surprised Pete dropped his jacket and hugged back. They stood there together, locked in a warm embrace, until Sarah broke it and stepped back. Raising her hand and cupping his face, she looked at Pete and whispered, \"Thank you for being my friend. It's nice to know someone is on your side for a change.\" As she turned to go get her own coat, she kissed him on the cheek, and then walked to her bedroom. \n\nPete stood there in a bit of a stunned state. He tried to convince himself that it was just a gesture of thanks when she put her hand on his face and kissed him. But as he watched her come out of her room with a smile on her face, he couldn't help but smile back. If he had to admit it, he enjoyed the hug. Other than some of his favorite customers while in the pub, it had been a long time since he had made such close contact with a woman. He was trying to let this pass as just one friend to another, but as they walked down the stairs to his car, he also realized that Sarah was a nice looking woman, although at least 20 years younger than him. \n\nFor the first time in a long time, Pete realized he wasn't in control of his thoughts. One of the things he had learned as a lawyer was that those who were most successful could concentrate on only the work that was in front of them. Driving out distractions from one's mind was critical if you were going to devote all of your faculties to the case at hand. It was knowledge that was critical to successful survival. \n\nSo why could he not follow that advice in this situation? This was just a customer he was willing to help because he had been through the same experiences she was facing, and he just wanted to make her life a little easier. If the situation was that simple, there should be no concern in Pete's mind right now. A verbal contract had been reached; both parties accepted the terms; now it was time for the contracted scenario to begin, and that should be the end of it. \n\nBut Pete wasn't getting away from it that easily. Helping out a young friend was one thing. Experiencing conflicting emotions following a hug and kiss was something completely different. He may have never offered his room to Sarah if he was suddenly going to have questions about their relationship. Perhaps he was reading something into the situation that simply wasn't there. It was just a hug and a kiss, after all \u2013 an exchange between two friends, one who had the resources to help, and one who needed the help. \n\nThat's what it was, Pete thought to himself as he drove across town to Sarah's apartment. They had established this agreement that was mutually acceptable to both parties. When he thought of it like that, it sounded like a professional partnership, and everyone knows you never mix business with pleasure. And except for the tugging feeling way down deep in the hidden recesses of his heart, he felt completely comfortable with this new partnership. \n\n****** \n\nThe first week of the special project took its toll on Sarah, both intellectually and physically. She continued with the long hours at the office \u2013 many spent on the phone with representatives of both companies \u2013 as well as long work sessions with her team members. They met with Robert Ward each morning at 8:00, and for the most part, those meetings were affirmations of the quality of work the team was producing. Mr. Ward's guidance was invaluable to Sarah. She felt that with each positive review meeting, he was becoming more assured that Sarah was the right person to lead the team he had created. \n\nSarah had brought five of her professional outfits to Pete's apartment, as well as some casual clothes for the time she wasn't at work. During that first week, she had used the apartment nearly every day at some point. She wasn't keeping regular hours, so a couple of times she went there for an afternoon nap. Pete was doing things like leaving food for her in the refrigerator in the little kitchenette, and leaving encouraging notes laying around the apartment for her to see and read. She was amazed at how he could get her to smile even when he wasn't around! \n\nIf she had been worried that the two of them would be in each other's way in the tiny apartment, she soon found out that nothing could be further from the truth. Their schedules were not similar at all. On the nights she didn't work straight through, Sarah would leave the office sometime after 10:00 p.m. She would walk through the pub to get to the apartment stairs, and usually Pete had a sandwich and tea waiting for her. Pete usually didn't get upstairs until after 2:00 a.m., and Sarah was always sleeping by that time. She'd get up and head to the office before he awoke late morning to start his day in the pub. \n\nBy Sunday, Sarah could tell she needed a break, and she figured her team probably did as well. So she had them come and work until 2:00 that afternoon, and then told them to forget about the project until 8:00 the next morning. She really wanted to stay and do some more work without them, but then she remembered what Pete had said about having a life outside of the law firm. So after the team had left, she packed up her things and headed to the pub. \n\nShe was surprised to see a good Sunday afternoon crowd there, until she realized there was a car race on the screens to which people seemed drawn. Her usual spot at the end of the bar was open, so she headed straight there. Pete was nowhere to be found, but the blond girl that had been working earlier in the week was there, as well as a couple of other servers attending to the race crowd. \n\nThe girl came over to Sarah and looked at her with a puzzling expression at first, but quickly softened up into a smile. \"You were in here the other night, weren't you? I saw you then but didn't get a chance to come over and meet you. My name's Nora \u2013 welcome back!\" \n\nShe reached out to shake Sarah's hand. \"Hi, Nora \u2013 I'm Sarah. I just discovered this place earlier this week, but I feel as if I've been coming here all my life!\" \n\nNora smiled. \"Good \u2013 that's what we love to hear! I'll be sure to tell Dad you said that.\" \n\nIt was Sarah's turn to express a quizzical look. \"Dad? Is Pete your father?\" \n\nNora laughed and replied, \"Yes, I'm afraid he is! Could you not tell that the other night? People tell me we look exactly alike, especially now that his hair is a lighter shade with all of the gray in it!\" \n\nSarah looked more closely, and realized she could see the resemblance as well. Pete hadn't said anything specific about his kids, only that he nearly lost his family when he lost his wife in part to the hours he was putting in at BH&amp;H. Meeting Nora for the first time created a desire within Sarah to know more about Pete and his family. But she felt like she'd rather hear it from Pete himself, so she decided not to press Nora about it. \n\nNora said, \"Can I get you something this afternoon?\" \n\nSarah replied, \"An unsweetened ice tea, please.\" \n\n\"Very good \u2013 I'll be right back.\" Nora turned to get the tea, while Sarah watched her. She was very pretty, Sarah thought to herself. She thought Nora might be a little younger than her, although guessing people's ages wasn't something Sarah had ever taken the time to do. Nora was shorter than Sarah by a couple of inches, but then Sarah was used to always being one of the tallest girls in any situation, so Nora's height wasn't a surprise to her at all. \n\nNora delivered the tea, and Sarah thanked her and got off the stool. Her plan was to go up to the apartment to change into some comfortable clothes, and then relax for the rest of the evening. She turned back to Nora and said, \"I'm going to take this tea upstairs to enjoy it. I'll bring the mug down later.\" \n\nShe could tell Nora was surprised to hear she was going up to the apartment, and realized maybe Pete had not told her about their arrangement. Suddenly finding herself in a bit of an awkward predicament, she quickly tried to explain it to Nora. \"I'm sorry, I thought you knew that your dad is letting me use the spare bedroom in the apartment while I'm working on a big project at work. So far it's been great because are schedules are so opposite of each other that we never see each other in the apartment. It's allowed me to keep working on my project with an energy I would not have otherwise if I had to ride the train home.\" \n\nNora gave Sarah a half-smile at best, and Sarah could tell she wasn't alright with this news. But she tried to be as nice as she could when she said, \"Well, Dad's always been a nice guy, so I shouldn't be surprised he came up with this idea. He's up there now, so you'll get a chance to see him until he comes down to relieve me at 6:00.\" \n\nSarah smiled, and as she turned to the back hall, she said, \"Thanks, Nora \u2013 it was great to finally meet you!\" She tried to sound as nice as she possibly could. \n\nNora returned the smile \u2013 again, probably half of what it was before, and said, \"It's nice to meet you too, Sarah. I guess we'll be seeing lots more of you around here.\" \n\nAs Sarah walked down the hallway to the stairs, she felt confusion, among other emotions in which she wasn't familiar. She could understand why Nora might be surprised at finding out she was staying in the spare bedroom in her dad's apartment, but her confusion stemmed from the sudden change in attitude she felt once the news was delivered. Until then, she felt Nora was just as warm and caring as her dad. But their last words together held none of those sentiments. \n\nSarah arrived at the top of the stairs and slowly opened the door. Pete was sitting on the couch, and he smiled when he saw Sarah come in. But his smile quickly faded when he saw the look on Sarah's face. He got up and came over to her as soon as the apartment door was closed. \n\n\"Hello, Sarah \u2013 is something wrong?\" \n\nSarah looked at him, and though she really didn't want to explain, she felt he deserved to know. \"Yeah, I officially met Nora today, and while she was very friendly at first, her attitude changed when she found out I was staying in your spare bedroom for a couple of weeks. I don't think she knew that before I told her.\" \n\nNow Pete was frowning as he came over to hug Sarah. \"I'm sorry, Sarah, that was my fault. I didn't tell her because I didn't think she needed to know. Obviously that was a mistake. I'll talk to her later and tell her what's going on. It was unfair of her to react that way, but I'm not surprised. Ever since her mother and I got a divorce, both her and her brother Daniel like to try and find reasons to be disappointed in me.\" ",
        "Sarah relaxed in the warmth of Pete's hug. She realized Pete was opening up a little about his family, and she wanted to know more. \"This is the first time you've mentioned your kids \u2013 what else can you tell me about them?\" \n\nPete looked at Sarah and said, \"Tell you what \u2013 it's a beautiful day outside. If you have time, why don't we walk to the park for some sunshine and fresh air, and we'll have a lovely chat on the way.\" \n\n\"That sounds wonderful \u2013 let me go change into some walking clothes first.\" Sarah headed to her bedroom. She put on a pair of denim shorts and a lightweight, short-sleeved top. She panicked for a second when she couldn't find any comfortable casual shoes in the closet and she was afraid she hadn't brought any. Finally she found a pair of sandals tucked away in a bag she had yet to unpack. She slipped them on, and then examined herself in the mirror. Making one last adjustment, she released her hair from the bun she normally wore at work. She smiled \u2013 she felt it was the perfect spring outfit for a perfect walk with a perfect gentleman. \n\nWhen she came out of her bedroom, Pete saw her and his eyes got big. He smiled and said, \"Goodness, Sarah \u2013 spring looks great on you!\" Sarah blushed \u2013 she never dressed casually as a means of catching someone's eye, and yet as Pete stood there admiring her, she couldn't help but wonder if she had subconsciously chosen this outfit for just that reason. Whatever it was, she knew she was enjoying being the center of attention, even if that attention was coming from just one other person. \n\nThey went downstairs together, walking through the pub to get to the street. Pete stopped and said something to Nora, who frowned at him, and then looked over at Sarah and frowned again. Pete made one more comment, and then walked over to rejoin Sarah as they stepped out into the beautiful April afternoon together. \n\nThey walked silently for a while. Pete directed her to a nearby park. She felt sad that she'd worked downtown for over three years and never knew this park to be so close. She was slowly realizing some of the things she had sacrificed in her fanatical drive to be the best she could be as far as her career was concerned. And while she felt she was finally reaping the benefits of that drive with her leadership work on this current project, she also knew something else was awakening \u2013 something she didn't know existed before. \n\nIt was Sarah who broke the silence. \"Tell me about your family, Pete.\" \n\nHe thought for a minute, and then said, \"Well, you've met my daughter Nora. She's 26. She is a pre-school teacher, and she comes and helps me in the pub a couple of evenings a week as well as Sunday afternoon, so I can have a day off, although I usually just spend it in my apartment. She's not married, but she does have a steady friend. My son Daniel is 24. He is also a teacher \u2013 both kids took after their mother, actually in more ways than one, although that is probably not a fair statement. Do you want to hear the whole story?\" \n\nSarah replied, \"Only if you want to share it. You don't have to, if it's still painful.\" \n\n\"There will always be pain, but I'm beyond the point where I can't talk about it. My wife \u2013 well, ex-wife now, is also a teacher \u2013 2<sup>nd</sup> grade in an elementary school in the suburb. Her name is Regina, but I always called her Gina. We met our freshman year at college, and we wanted to wait until we graduated to get married, but we were too much in love with each other, and we got married as 20 year olds right after our sophomore year. We lived in the married apartments they had on campus, which cut the living bills in half, though it was still tough. But we never doubted getting married so young, and somehow we made it through. \n\n\"Gina got a teaching job right away, and started teaching in the fall. I had been accepted to Williams, and acquired a whole bunch of student loans. She basically supported me during my three years in law school. With the end of law school looming on the horizon, we decided to start our family. It was perfect \u2013 I had my law degree, Gina could stay home and take care of the kids, we had one girl and one boy \u2013 it was the perfect little family. \n\n\"But somewhere I forgot about that family, as I succumbed to the same drive for success you have now. I was rarely home, so even though we were married, I know Gina felt abandoned. I kept telling her that soon, I would be to a point where I could back away from the hours I worked and be the father and husband my family needed. That \"soon\" never came. We had all the money we needed, but I fell into the same trap in which so many people fall \u2013 no matter how much you have, you always seem to want more.\" \n\nBy this time Sarah and Pete had reached the park, and they sat down together on a bench as Pete continued his story. \"Gina was constantly complaining about my time away from the family, and rightfully so. I kept saying to myself that as soon as this current project was finished, I'd have more time. Unfortunately, when one project ends, often there are two waiting for your attention. I wasn't keeping the promises I was making to my family. \n\n\"The kids rebelled first. On the rare times I was home to spend time with them, they complained loudly about me missing this concert or that ball game or any other number of activities I didn't see. I tried to mollify them with materials things \u2013 clothes, cars as soon as they turned 16, that kind of stuff. But they saw through me. They enjoyed the things I was buying for them, but they would have rather had a father who was there for them as they were growing up. \n\n\"I was also gone so much that I didn't notice that something was wrong with our marriage. The reality was that something WAS wrong, but that started soon after I signed on at BH&amp;H. Gina put up with being a single parent for a long time, and I guess when she wasn't getting the affection we had when we were newlyweds in college, she sought it elsewhere. \n\n\"Looking back now, I see the clues I missed at the time. Our sex life had slowed, but I just thought that was the natural progression as couples get older. But the last few months it got really slow, and when we did get together, there didn't seem to be any passion left in it. She also began to have more meetings, including some overnight conferences she went to, claiming she had been named the reading captain for the staff and was required to bring back information from the conferences and share with her colleagues. \n\n\"What really was happening was that she was having an affair with a teacher from another school in her district. He claimed to be in a sexless marriage, and the two of them were fulfilling each other's needs for passion and companionship. I caught them in my home \u2013 in my own bed \u2013 on a day they were supposed to be in class. They had each taken a sick day, and I just happened to take half a day off from the law firm when I caught them.\" \n\nPete put his head down, and Sarah could see tears starting to form in the corner of his eyes. She scooted close to him and took his hand in hers as he continued. \"Of course I blew a gasket and started yelling at her right away. Her lover jumped up and grabbed his clothes and ran out of the house. At first Gina started apologizing and pleaded with me to give her another chance, but my strong Irish blood had little sympathy for a cheater, so I moved out that night and went to stay at Brian's house \u2013 the same Brian who is in the pub nearly every day. \n\n\"Between my anger and my sorrow, I dropped into a deep depression for a few months. Brian was the one who kept me sane, and made sure I didn't do something to hurt myself, or worse. Gina and I went to counseling to try and repair the damage, but I just couldn't get the image of her in bed with her lover out of my mind, and eventually I quit trying and filed for divorce. That was seven years ago. Signing those papers was the lowest day of my life. I still love Gina \u2013 I always will, and if I hadn't been so stubborn as I stuck by my foolish pride, we might still be married today. \n\n\"Except that I might not have the pub, and even if I did, look at the hours I spend there each week \u2013 probably more than at the law office. Gina would not be good with that. So maybe it was meant to be. I'm not a huge believer in fate, but maybe in my case I was destined to have these events happen to me.\" \n\nSarah scooted even closer and gave Pete a hug. They sat there in silence once again, until Sarah asked her next question \u2013 \"So in that time, have you seen other women?\" \n\nImmediately she felt bad for asking \u2013 it really wasn't her business, but for some reason she wanted to know more about this man who had been able to bring happiness in her life in more ways than she thought possible. She also felt it might do good for Pete to share \u2013 she didn't know if he had someone who could be a confidant, but she hoped he felt comfortable enough with her that she could serve in that capacity. \n\nPete sighed and said, \"No, not officially. Every once in a while a woman will come into the pub and we'll hit it off. I've been on a few dates, for lack of a better word. But nothing is ever serious, and to tell you the truth, I'm not sure I'm marrying material. It would have to be someone extremely understanding to know how much I love this pub and will probably always spend too many hours here.\" \n\nSarah chuckled and said, \"That's certainly true. When I came in this afternoon and didn't see you, I almost thought I was in the wrong place! So how did the pub come to be?\" \n\n\"It was Brian's idea. I was still staying at his place a few days after I had left Gina. He could tell I was miserable, but he also knew that my stubbornness would not relent and let me forgive her. So he started asking me questions about my future, making me think hard about what I was doing and whether I wanted to continue doing it for the rest of my life. After the fallout of the affair and my realization that I'd been a pretty bad father and husband, remaining a lawyer did not seem attractive to me at all. \n\n\"So with that realization up in the air, he asked me what I would do if I wasn't a lawyer. The idea of the pub was born from that conversation. We talked about the void of eating and drinking establishments in the downtown area, and how we both felt a high-class pub that served food would be a huge hit, especially to the thousands of people who work within a 10-block radius of where the pub is now. \n\n\"It started as an outlandish dream, but the more we talked, the more we thought we might be onto something. We did multiple tours of downtown, seeing where our competition would be and what kind of places those were. We did employee studies of the buildings within the vicinity of the location we had our eyes on for the pub. We even did random on-the-street interviews, not letting the people know what we were considering. We asked them what was missing in the downtown area, and nearly every one of them answered with some type of bar or pub or restaurant. \n\n\"Those interviews were the final shot of convincing we needed. We started right away. Brian's business background was invaluable throughout the process of acquiring the land for the pub, obtaining permits, hiring general contractors, and in general overseeing its construction. \n\n\"From start to finish, it took two years. I quit at BH&amp;H about six months before we opened. I focused on the interior of the bar \u2013 creating the grill menu, working with interior designers on color schemes and furniture purchases. There were some days I thought we would never get it open! So when it finally did, it was a huge relief. Now all we needed to do was wait to see if customers would come. \n\n\"The wait wasn't very long. We found that if one person from a company or firm in the area liked us, they would spread the message to their colleagues through the company email system. It was our best form of advertisement during the day. Soon managers were having business meeting here. Contracts were signed between two companies over drinks and wings. Receipts exceeded even our wildest dreams for the first five years.\" \n\nSarah could hear the pride in his voice. It's no wonder why Pete was happy all the time. With his family gone for the most part, the pub had taken their place. He poured his heart and soul into it, and it was rewarding him handsomely. In a way, the pub was a testament to the heart Pete liked to share \u2013 open, warm and welcoming, a place where people could go and forget about the cares of the day. Sarah understood perfectly why she felt so relaxed and comfortable at the pub \u2013 it was because she was relaxed and comfortable about its owner. \n\nPete looked over at Sarah and said, \"I've been dominating the conversation here, my friend. What about you \u2013 tell me your story.\" \n\nSarah started with the beginning, telling Pete about her father's abuse, and how she and her mother made it pretty much on their own. She told of her drive to be the best \u2013 something with which Pete could identify. She shared the fact that she had eschewed a social life simply because she knew the margin for error in her drive to make it to the top was very slim. She told him of his disdain for males in general, which looking back on it now was a mistake, because she realized many males had been there to help her. \n\n\"Pete, this week has made me realize I've been missing out on some pretty important things \u2013 particularly the fact that I've had no life outside of my drive to the top of the legal world. I've experienced so much, but it's all been tied to my career. So my experiences this week are all brand new and exciting, the more I think about it.\" \n\nPete smiled and asked, \"So what has brought about this change?\" \n\nShe pointed at him and said, \"It's you! You're the reason for the change. That first night I walked into the pub, angry, cold and lonely, you immediately started warming me up with your charm and happy attitude. When I left that night to catch the train, I was confused and conflicted \u2013 I had always worked to avoid anything that would interfere with my job and the preparations prior to it. On the train home, usually I'm setting my agenda for the next day. That night, I was thinking of the warmth and atmosphere of the pub, and how in just 45 minutes I was swept up in its charms. \n\n\"I remember coming in the next night, and already thinking I was home \u2013 I was in the place I cared about the most. Once I had stepped inside and the doors closed in behind me, I felt safe and relaxed, and I knew at least some of the people there \u2013 including you, you old charmer \u2013 really cared about me and wanted me to be happy. \n\n\"But now, sitting here listening to you tell your story...well, I realized as charming as the pub is, the warmth and caring is because of you! Any personality reflected in the pub comes from its owner. I was so busy being driven by success that I didn't realize I had a side in me that enjoys being around warm and happy people.\" \n\nShe leaned over and touched Pete's cheek with her left hand, guiding his face to her so she could give him a kiss on the cheek. Pete blushed and looked down at the ground, trying to hide the smile that was on his face. As he looked down, he glanced at his watch and saw that he needed to be back at the pub in 30 minutes to relieve Nora. \n\nHe stood up from the bench, and then reached down to help Sarah up as well. \"I've got to get back, Sarah, but this has been one great afternoon, and I hope you'll be so kind as to promise me another fine walk in the future!\" \n\nSarah giggled at his word usage as she replied, \"Why, Pete, sir \u2013 are you asking me out on a date? If you are, I'm pretty sure I would say yes.\" \n\nThey started walking back to the pub. Sarah thought back over the past week and all of the new and exciting things that were happening in her life. Before her first stop in the pub, she could have never imagined walking in the park on a beautiful spring day with a man old enough to be her father. After all, men were the enemy! It had been a man who had abused and neglected her and her mom, and it had been men that had driven her all her life to prove to herself and the world that she was as good \u2013 if not better \u2013 than they were. \n\nBut certainly she wasn't feeling any enemy-like thoughts as they walked back to the pub. Instead, she was feeling nothing but happiness, with a side of something else thrown in. That something else confused her, because even though she wasn't sure where it was coming from or to what it was attached, she felt she needed it \u2013 almost a craving. Certainly it wasn't a feeling she had felt previously in her taskmaster-type life. \n\nWhatever it was, it was pushing her to be closer to Pete. So as they continued their walk back to the pub, she slipped her right arm into his left, and the walked in connected fashion the rest of the way. \n\n****** \n\nWhen they arrived back at the pub, they came in the main front door, and it was clear that Nora was not in a good mood. Pete looked at Sarah and said, \"I'd better get over there and relieve her, before she tells off a customer.\" Sarah squeezed his arm, and then headed up to the apartment. Curious as to why Nora was upset, she walked over to the window that looked down into the pub, and saw her in a pretty heated argument with her father. Eventually she took off her apron and threw it down on the bar before grabbing her purse from behind the counter and heading out. Whatever the problem was, it was clear to Sarah that it was not resolved. \n\nShe headed downstairs to the pub and went over to Pete, who uncharacteristically wasn't smiling like he normally did. Instead of approach him, she decided she'd take her normal spot on the end barstool and wait for Pete to come to her. She had never seen him in this kind of a mood before, and not knowing what to expect from it, she knew patience was her biggest ally in dealing with whatever it was that was causing Pete problems. \n\nShe looked down the bar and saw some customers she didn't recognize. She also noticed Brian was in his normal spot. They looked at each other and smiled, although her smile wasn't as open and informal as it normally was. Brian sensed the concern in her face, so he picked up his beer and moved down to the empty stool next to Sara. Now she was really confused \u2013 not only was Pete not his usual lighthearted self, but for the first time since she'd been coming to the pub, Brian was moving to be next to her. \n\nHe sat down and they greeted each other. Brian looked at Sarah and said, \"You know, Pete's been in a particularly great mood the past week. Normally he's a happy guy anyway, but for some reason, he's been much more jovial and good natured, and the customers have noticed it. I have as well. Do you know why he's had this great week?\" \n\nSarah shook her head no, and Brian spoke again. \"It's because of you! You have really reached his heart, and he's been walking on air ever since. I think it's great \u2013 it's been a while since Pete has shown anything like how he's been lately.\" \n\nSarah blushed before she mildly protested. \"What do I have to do with this? I was just a woman who needed a place to stay one night as I waited for my train, and he went out of his way to make me feel welcome. I figured he was nice to everybody like he was to me.\" \n\nBrian nodded. \"It's true; he is nice to all of his customers. But you've put a twinkle in his eye, if you will. I think there's a depth of his being nice to you that no one else has experienced before. I suppose it's easy for you to look past it since you haven't known Pete for nearly as long as I have. But I'm not the only one who sees it \u2013 in fact, I suspect that's what Nora and Pete were arguing about.\" \n\n\"Why could they possibly be arguing about how Pete is treating me? What's wrong with a guy who is just being nice to someone with whom he has shared similar experiences?\" ",
        "Brian turned completely towards Sarah and said, \"Normally, there'd be nothing wrong, and in your instance, there shouldn't be anything wrong with that either. But I think you need to know about Pete's relationship with his kids \u2013 it's not always been good. \n\n\"When they got old enough to realize Pete was buying the nice things to placate the fact that he was basically an absentee father, they started feeling resentment. How many evenings and weekends do you think Gina and Nora and Daniel were home by themselves while Pete was slaving away at the law office? More often than not, he was working when he should have been a husband and father. \n\n\"Both kids will say that Gina's affair was wrong, but in the end, they could see that their father's neglect of their mother \u2013 and of them as well \u2013 caused the family unit to crumble and divide. With that division, the kids went with the familiar \u2013 they went with their mom, to the point that they basically refused to talk to Pete, because when they did, they always ended up in a yelling match about how bad a father he was. \n\n\"It went that way for a couple of years, until gradually Nora started coming around a little. She liked the pub and saw that her father had put a lot into making it successful. When he asked her if she'd like to work a couple of shifts throughout the week, she was happy. Those two shifts actually helped their relationship, and things were going great until what we saw tonight. \n\n\"With Brian, it's a different story. Nora had her mother to be with and to learn from, but Brian didn't really have a father as he grew up, and his resentment became much stronger than Nora's. Before long, they couldn't be in the same room with each other before the yelling and shouting started. Even now, Pete considers it the most painful part of the family split. Gina's cheating was tough, but knowing Brian doesn't like him really grinds on Pete.\" \n\nSarah took advantage of a little pause in Brian's story to ask, \"So what were Nora and Pete arguing about?\" \n\n\"Well, I can't say for certain,\" Peter replied. \"But I'd say they were arguing about you.\" \n\n\"Me? Why would I be part of an argument between the two?\" \n\nBrian chuckled. \"I imagine for several reasons, but the most important being that Nora also sees the relationship part of you and her father, and she doesn't like it. Perhaps she sees you as a threat to their thawing relationship. Or perhaps it is because you are practically the same age as her and Brian. They may view this as their father finding a way to be with someone when he couldn't seem to be with them as they were growing up.\" \n\nSarah sighed. The thoughts were swirling around in her head like a spring tornado. In the first place, she didn't really consider her friendship with Pete to be anything but that \u2013 just a friendship, although she had to admit she had never really been in a relationship before, so maybe she didn't know to realize she was now in one. She certainly liked Pete, but she felt that was mostly because he has shown her so much support and caring, to the point where he had opened up his apartment to her. \n\nShe thought about the last several days with Pete \u2013 how comfortable he had made her feel, how wonderful it was that he knew about her life to the point where he would offer his extra room in his apartment to her so she could do better at the law firm, especially while working on this big project. She thought about their walk this afternoon, and how natural it had seemed to link her arm into his as they walked back to the pub. \n\nThe thought never occurred to her that their age difference would be a factor, because she didn't think they were in a relationship in the first place. Then she tried to look at the situation from Nora's point of view, but that didn't help much, since Sarah didn't have a father at home at all, let alone one who wasn't there for his daughter. \n\nShe looked back at Brian again, and he could see she was either troubled or confused. So he put his hand on her shoulder and said, \"Listen, first of all, don't let Nora's attitude bother you. It's more than likely she is upset with her father. Second \u2013 you and Pete need to sit down together and discuss this. I think both of you are surprised something is growing out of this friendship \u2013 something neither of you were looking for nor expected.\" \n\nHe got up to go back to his own barstool, but before he walked away, he added one more thought: \"Listen, Sarah \u2013 Pete is a great guy \u2013 my best friend, and you are having an effect on him. I know there's an age difference, but you could look all your life and not find a nicer man. Keep that in mind as the next few days and weeks play out.\" \n\nHe turned and walked back to his stool. His last comment to Sarah just piled on top of the other thoughts she was already considering. Brian's talk of a relationship scared her the most. She hadn't been looking for a relationship \u2013 quite the contrary, she had spent her life avoid them at all costs so nothing could slow her down. \n\nAs she tried to analyze it, Sarah could see how easily Pete could fill a couple of different \"man\" figures in her life \u2013 figures she didn't have. He could be a father figure to her \u2013 something he admittedly didn't do well before, but seemed to be capable of since he knew the mistakes he made along the way. She could also see him in a \"significant other\" role \u2013 someone whom she enjoyed being around, and who readily offered her a place to stay while she worked on the project at the office. \n\nSarah glanced over at Pete. Had he seen Brian talking to her? Her guess was no, he would have been too busy with customers to pay attention to Brian as he moved over to talk to her. The argument with Nora was long enough ago that he appeared to have moved on, and seemed to be his usual jovial self as he visited with patrons. \n\nShe decided tonight wasn't the night to talk about Nora and Daniel, and it wasn't the night to talk about the things Brian was saying. She had her last big push on the project this week as the Friday deadline approached, and she knew that without enough rest, she wouldn't be able to finish the agreement with the same usual standards she applied to everything she did. \n\nShe walked over to Pete and gave him a playful punch on his arm. \"Pete, I'm going upstairs to get a good night's sleep. Since this is the last week to finish the agreement, I'm not sure how much you'll see of me around here. I'll probably just pop in to change clothes once in a while. After the project wraps, let's sit down together and talk about some things.\" \n\nPete looked surprised at her last sentence. \"What things, Sarah? Is everything okay?\" \n\nShe smiled and nodded her head. \"Things are fine \u2013 it would just do us both good to sit down together without this time pressure which I'm facing. I'm not sure when you'll see me again \u2013 I'll probably just pop in and out until the agreement is complete.\" \n\nShe kissed Pete on the cheek, and then turned to head to the back staircase. As she walked, she dared not look at Pete, because she wasn't sure what her reaction would be if she turned one more time and looked at him. Instead, she dutifully climbed the stairs and went straight to her bedroom in the apartment. It had been a long day, but certainly an interesting one as well, and she didn't have any problems falling sleep, in spite of her mind being locked fully in a state of confusion. \n\n****** \n\nSarah was up early and at the office by 6 a.m. the next morning. It was the final week of work on the big project, and with a Friday deadline looming, she knew there would be very little time for any interruptions from the outside. That included this whole new \"relationship\" dynamic with Pete \u2013 something she still wasn't sure was a relationship at all. She forced herself to remove thoughts of Pete; her conversation with Brian; and the image of Pete and his daughter Nora arguing, apparently about her. \n\nShe assembled her team at 7:30, prior to meeting with Robert Ward at 8:00. They discussed final writing assignments and details that might have otherwise been overlooked. She also let them know that she expected them to devote complete attention and time to do whatever it took to get the project wrapped. She asked each of them to recruit a couple of volunteers to proofread \u2013 even grammatical mistakes would not be acceptable. She was driving them to finish with a product of which they could all be proud. \n\nThe meeting with Robert Ward was similar to the one she had with her team just prior. He was pleased with the effort of Sarah and the team so far, and encouraged her to finish strong. He told her that his contact with the two companies seemed to indicate that they were looking forward to getting an agreement signed as well. His information gave Sarah the extra lift she was looking for as they headed down to the wire. \n\nThe next 24 hours were spent at her desk, pouring over data once more before beginning to write her portion of the agreement. She had outlines already created on how she felt it needed to flow, so her main purpose that day was to plug the data into the outlines as the final product began to take shape. She left her office only to visit with other team members or for personal restroom breaks. She had even arranged to have food delivered to team members so they could work continuously. The only thing that mattered was the completion of this agreement \u2013 they could sleep Friday after it was completed and delivered. \n\nAt about 8 the next morning, she headed to the apartment at the pub for a couple hours' rest and a change of clothes. Knowing Pete would still be asleep and not ready to confront him, she snuck in quietly and went straight into her room. She laid out the clothes she chose to wear back to the office, and then set an alarm on her phone which would allow her a couple hours of sleep. She was sleeping as soon as her head hit the pillow. \n\nWhen her alarm sounded, she disciplined herself to get up, even though she was still extremely tired. She knew she should take a shower, but didn't really like she could justify the time. She knew she wouldn't be working around too many people today, so she dressed without one and opened the door to her bedroom. She was surprised to see Pete sitting at the little kitchen table. It looked like he was getting ready to head down and open the pub. \n\n\"Good morning, Sarah \u2013 I didn't know you were here. How's the project going?\" \n\nSarah smiled at Pete \u2013 even though she didn't have time to stay and visit with him, he still had the ability to make her smile with his kindness. \"I came in about 8:00 to change and grab a couple of hours of sleep. The project is going great, but as you can imagine, you won't see a lot of me until after we turn it in on Friday.\" \n\nPete returned her smile, and said, \"I understand, but remember, don't go overboard with all these work hours. If nothing else comes from our time together, the most important thing I can give you is an image of how my work schedule ruined my family life.\" \n\n\"You've told me that many times before, Pete, and I have listened each time. When this project gets done, I'll sit down with you and you can tell it to me again. But right now I have to get back to work. Thanks again for the bed \u2013 it's been a lifesaver!\" \n\nSarah bent down and gave Pete a kiss on the cheek. Feeling invigorated even after chatting with him for just a couple of minutes, she headed back to the law office. She knew should have been tired, but for some reason she felt a new energy as she made her way down the concrete sidewalk. It was crazy what Pete could do for her. Relationship or not, she was beginning to think she needed to be a regular part of his life. \n\n****** \n\nBy the time Thursday afternoon rolled around, the project was done, for the most part. There was still a little final editing going on, but it was ready to be published. The printing firm with which the law office had contracted was waiting for it to be sent, ready to print the initial 100 copies that had been requested. \n\nSarah was going over her ideas for the publication with a graphics consultant, who was hastily creating how the pages would appear. Once that meeting concluded, Sarah was done \u2013 it was in the hands of others now. But she knew that the main body of work was completed in the exact manner in which she had envisioned at the start. The document was written well. The other last minute stuff was just window dressing to the important information contained inside. \n\nSarah decided to reward her team by taking them down to the pub for a relaxing evening of food, drinks and fun. At the end, the team had grown to nine people total, and they had worked together enough that they started to feel like a family to Sarah. They each had much to celebrate \u2013 everyone on the team played an important role in the final product. Sarah beamed as she led her group down the street and into the pub. \n\nOf course, as soon as Pete saw her, he shouted out a rousing welcome which made Sarah blush. As he saw the others follow her in, he knew this was going to be a celebration. He put a couple of the tables together so they could sit as a group. Sarah introduced Pete to her team, and it wasn't long before they were all having a great time laughing and drinking, with Pete right in the middle of the fun. \n\nThe celebration had been going on for about an hour when Sarah glanced at her phone and noticed she had missed a call. She unlocked the screen and saw that Robert Ward had called her and left a message. She got up from the table and headed back to the ladies' restroom to call her voice mail and play back his message \u2013 \"Sarah, this is Robert Ward. It's urgent that you call me as soon as you get this message.\" \n\nShe didn't like the sound of his tone, so immediately she dialed his number. After a couple of rings, she heard his voice. \n\n\"Robert Ward.\" \n\n\"Hello, Mr. Ward \u2013 this is Sarah Sullivan. You asked me to return your call.\" \n\n\"Yes, Sarah. I'm afraid I have some bad news. It seems that our two companies have had a change of heart, and it appears they may be canceling the possibility of working together. I just found out about this a couple of hours ago. Now this doesn't mean that they may change their minds back and work together at some point \u2013 it might even be sooner than later. I've sent a couple of our top negotiators to the headquarters of each company to try and at least continue the dialogue. Until we hear they have changed their minds, I'm afraid it means they won't be needing the agreement your team prepared.\" \n\nSarah's heart dropped. She tried listening to Mr. Ward, but her own emotions got in the way. All she could think about was how this was her chance to show the firm \u2013 and the world, for that matter \u2013 that she was capable of performing at the highest levels possible. Now the work she and her team had completed was useless \u2013 something that showed they could handle the job, but an exercise in futility, as far as she was concerned. \n\nMr. Ward had continued on talking, so she tried to focus on his conversation again. \"Is your team still there with you, Sarah?\" \n\n\"Yes, Mr. Ward \u2013 we're still celebrating our accomplishment.\" \n\n\"Sarah, listen carefully to me. You still have reason to celebrate. I gave you a tough job to do, and you and your team performed exceptionally well! Even if this doesn't ever get used, two things have come from this \u2013 first of all, it will be a great blueprint for future agreements like this. And second, you have proven your worth to the firm in the fact that we can trust you'll be successful when given important assignments such as this one in the future. \n\n\"I know this is probably upsetting to you, but don't take it personally. Sometimes these things happen, and there is nothing we can do to prevent it. Hopefully our team will be able to get these two companies back together. But for right now, you and your team needed to know, since you've worked so hard on this. \n\n\"Tell them to take tomorrow off \u2013 they deserve a three-day weekend. You do the same, Sarah \u2013 if I see you here tomorrow, I'm going to have security escort you out. Do you understand?\" \n\nSarah sighed. \"Yes, Mr. Ward \u2013 I understand. It may be best if I don't come in anyway. Right now I'm not sure how much work I would be able to do after hearing this news.\" \n\n\"Sarah, this was not your fault! Please don't let this keep you down. I'll see you bright and early on Monday morning. Please make sure you let your team know as well.\" \n\nHe disconnected the call, and Sarah walked dejectedly back to the table where her team was still celebrating. As she approached, her team could tell something was wrong. One of them asked her if she was okay. \n\n\"I'm afraid I have some bad news. It seems that before we could give them the agreement, the two companies decided they weren't going to work together after all. All of our hard work the past two weeks has gone for nothing. Our firm has sent representatives to talk to both companies to see if something can be worked out, but I'm afraid it doesn't look good.\" \n\nThe celebratory tone of the party was gone for good. Sarah looked around and saw her team needed the same support Robert Ward tried to give her on the phone. \n\n\"Listen, it's not all bad news. We'll keep the copy of what we created, and perhaps it will used by us or others on a similar project in the future. And who knows, maybe the two companies will get back together and try to work something out. But one thing that has come out of this \u2013 our team was incredible! You worked so hard, and we should be proud of what we have done. I can't thank you enough for your hard work and your dedication to me and to this project.\" \n\nShe looked at Pete and said, \"I'd like to propose a toast for our team. Do you think maybe we could do it with a little champagne?\" \n\nPete flashed his warm smile and said, \"Say no more \u2013 it will be here shortly!\" He hurried off to the bar, where he and the day bartender brought them all champagne glasses and a bottle of bubbly. They opened the bottle and poured it into the glasses. Sarah insisted that Pete and the day tender poured glasses for themselves, and after all had a glass in their hand, Sarah offered her toast. \n\n\"Here's to the value of hard work, and the thrill of having a dedicated team of professionals \u2013 and friends \u2013 to help you accomplish your goals. Good job, team!\" \n\nThe clinked glasses together and then drank. After, they put their glasses down and began to applaud each other. Sarah had brought at least some of the happy mood back to the party. \n\n\"One more thing \u2013 Mr. Ward instructed me to tell you that your hard work is being rewarded with a day off tomorrow, and if you show up for work, he will have security escort you out. So stay home and get reacquainted with your friends and loved ones. Stay here as long as you want \u2013 it's on my tab today.\" They cheered again, and Sarah walked over to Pete, who gave her a big hug. She looked up into his eyes and mouthed \"Thank you.\" He just smiled back \u2013 a smile which warmed her heart. \n\nThey stayed for a little while before finally leaving for their homes and other places. Pete walked over to the table to begin cleaning up, and Sarah joined him, but he tried to shoo her away. \n\n\"Sarah, what are you doing? I've got this \u2013 you go sit down and relax!\" \n\nShe grabbed his hands and got his attention, then looked at him and said, \"Please \u2013 I want to help.\" He saw that she was serious, so he nodded yes, and they cleaned up the tables together. When that was finished, she sat down at her usual end stool at the bar, but realized how tired she was, so she motioned Pete over. \n\n\"Is it okay with you if I go upstairs and just relax for a little while? I guess I'm more tired than I thought I was. I think I'll be more comfortable up there.\" \n"
    ],
    "authorname": "PapaRomantic",
    "tags": [
        "young woman",
        "older man",
        "lawyer",
        "pub",
        "mature",
        "virgin",
        "bar",
        "cheating",
        "romance"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/petes-pub"
}