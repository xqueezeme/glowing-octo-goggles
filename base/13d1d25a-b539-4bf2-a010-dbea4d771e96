{
    "title": "Sur La Mer",
    "pages": [
        "Prologue\n\nI hate it when he puts his hand on the back of my neck. Usually it means the person I am with doesn't want me to stop. With my boyfriend Jack, it means he has had enough.\n\n\"Don't overdo it, Keren. Too much of a good thing, eh?\"\n\nI pull off him, wanting just once to feel his sticky jizz cascade down over my face and breasts. It has been far too long since that happened. I also wish he would go down on me -- I love oral sex -- but the admittedly handsome lad who is my latest squeeze thinks it is dirty and demeaning.\n\nHe fumbles the condom on as usual -- I don't even get the pleasure myself. I am barely wet and it hurts. Luckily for me it is over in a flash and the thing I wanted to spray all over me is safely contained in its latex wrapping.\n\nAnother fumble to get it off, a quick kiss on the cheek and he is asleep within seconds. At least he doesn't tell me how good it was. As ever, I wipe one out through gritted teeth. It isn't earth shattering but it is the best I am going to get.\n\nNot for the first time this summer, I silently cry myself to sleep. Another long day of waitressing lies ahead tomorrow, followed by more passionless sex that can barely be described as 'vanilla'.\n\nNot for the first time this summer, I think, 'There has to be more than this.'\n\nI wake the next morning to the same thought.\n\n'There has to be something more than this.'\n\nI ask the same thing each night and each morning.\n\nBut it never gets any better.\n\nOne\n\nThe end of the summer season was always hell. Things were busy before, but the last few weeks seemed utterly manic as people without kids took advantage of the schools going back and flocked to the area for some late summer sun.\n\nThen there would be a couple of weeks to recuperate and catch our breath before two months of nothing leading up to the festive season. Then all hell would break loose again.\n\nI worked as a waitress in a reasonably upmarket Cornish hotel. I had a degree in modern languages, but no-one seemed interested in giving me a decent, meaningful job so aged twenty-three, I was stuck living at home, doing long shifts and earning a smidge over the minimum wage. I hated living at home -- my step-father was a drunken ne'er-do-well and my mother was downtrodden and in his thrall. My friend Tasha and I had briefly lived together in a small flat, but we couldn't afford the rent, so reluctantly went back to our respective private hells.\n\nFactor in my boyfriend Jack, and it was the perfect storm.\n\nOne night, after the madness of the end of season had died down, Tasha and I were sitting in a Newquay curry house, drinking Kingfisher and scoffing lamb pasanda and keema naan. Feeling low, I trotted out my twice-daily mantra to her.\n\n\"There has to be something more than this, Tash.\"\n\nShe shook her shaggy blonde mane. \"Not sure there is, Keren. Not for us, anyway. You've got an idiot boyfriend who barely knows what it's for and I'm single again.\"\n\n\"Thought you and that guy Kieran were all loved up.\"\n\n\"We were, but he buggered off back to Liverpool. They let him go at the arse-end of the season. Nice bloke, but I couldn't understand a word he said.\"\n\nI laughed. \"And that's a problem because?\"\n\nThen Tasha had her moment of genius. \"Tell ya what, let's take off down the south of France until the Christmas season. A few weeks of all the sun, sand and sex two hard-working Cornish lasses richly deserve!\"\n\nI thought she was serious, but she was only joking.\n\nI wasn't joking when I said it was a great idea and ten days later we flew into Nice on a cheap flight in an orange aeroplane, headed east along the coast and settled into a basic but liveable AirBnB.\n\nFor three weeks, we got plenty of the 'Three S's,' as we had come to know them. We strolled around town and along the seafront pretending we were sophisticated ladies ogling handsome Frenchmen, then dined on pizza and burgers and drank wine at the cheaper end of the spectrum. In that time, Tasha had five different partners, I had six. I was always the greedy one and after all, I was making up for my lost time with Jack. It was great to feel a cock go off in my hand again after so long and I had almost forgotten how addicted I was to the feel of cum on my skin.\n\nOne night, Tasha and I even swapped our partners, though we did it by sneaking into each other's room in darkness and giving the guys a nice little surprise. My one regret was beach sex. I had never had the courage in Cornwall, despite the numerous opportunities, but here it felt different. However I soon found out that sand and seawater have a particularly abrasive effect on delicate parts of the anatomy and was subsequently out of action for a few days.\n\nDuring week four, Tasha began to worry about her limited finances and spent almost as much time checking her dwindling bank balance and the cost of flights home as she did on her back, which was saying something. It soon became apparent that ten weeks was insanely optimistic and it was going to be five at a push. We would probably have to walk to the airport and pay for the flights on credit cards - or more likely hitchhike home.\n\nAt the start of week five, we knew we were a busted flush and decided to go out in style in a restaurant in an upmarket hotel that was probably too expensive for us, but we didn't care. Whilst our diet had thus far been mainly restricted to things that had lots of toppings or came in a bun, we did know our food. It was only money -- or the lack thereof - that kept us from dining in slightly better style. The hotel restaurant back home was well regarded for food and was decorated with numerous rosettes and awards. As waitresses we were given samples of the dishes so we could inform the discerning diners with some sort of authority, so we had expensive tastes but just couldn't afford them.\n\nWe dined on moules mariniere, Chateaubriand and enough Tarte Tatin to sink a battleship. The Chablis was lovely but just about broke the bank. We left sated, with the intention of finding a nightclub, dancing into the early hours and getting laid.\n\nAs we left the restaurant, Tasha saw a laminated notice on the window saying they required waiting and bar staff urgently. Experience was necessary, fluent French an essential and other European languages an advantage.\n\nShe pointed at the sign. \"Fucking no-brainer, Keren!\"\n\nI had to agree with her and instead of heading on the pull, we ran back to our digs to e-mail home and ask our folks to send our CVs across forthwith.\n\nWe were both fluent in French and passable in Italian and Spanish. And of course, we spoke English -- albeit in a strange Cornish accent -- but in these parts, it qualified as a European language. We had the necessary experience, an essential language and three other advantageous ones. I could also say a few words in German thanks to a brief fling with a holidaymaker from Munich when I was nineteen, so if 'fick mich' and 'lech mich' were required, I was the go-to girl.\n\nOur CVs were with us the next morning and we found a computer shop to print them off for a small cost.\n\nWe had identical experience and language skills. I got a job offer, Tasha never even got an interview. I said I would turn down the offer and she wagged a finger in my face.\n\n\"Don't you bloody dare, Keren Green. Take the job, give it big ones and have a load of fun and I'll see you for Christmas.\"\n\nI saw her off at the airport and made my way back into town to take up my new post.\n\nI never got back for Christmas and it was a long time before I saw her again.\n\nTwo\n\nThe work was familiar even if the hotel was a little more genteel than I was used to. That was no bad thing. When stag- or hen-do's get out of hand it gets messy and this wasn't the sort of place for that. My new colleagues were friendly and welcoming and I was the sixth nationality on the roster. I was soon well-versed in the little quirks that made the place stand out from my previous places of employment. I enjoyed doing the same old job but in nicer surroundings and in a foreign language in which I was reasonably fluent to start with but was now speaking like a native.\n\nStaff accommodation was in a converted stable block away from the main building, behind a bank of trees. We shared and my roomie was a bubbly, friendly Ukrainian girl a couple of years younger than me named Danica Antonova. We immediately hit it off, which was a relief given the slightly cramped conditions and I took to her husky Eastern European accent and her almost flawless English. She even had a decent attempt at mimicking my Cornish accent, though I struggled with hers.\n\nOn our occasional mutual days off we spent days out together in town and she was great fun to be with and helped me settle in quite nicely.\n\nHowever, my horizontal activity had ceased in the few weeks since Tasha headed home and a shared room was not exactly conducive to bringing people back, even though our shifts were often polar opposites. I had a few potential candidates in mind and wondered if Robert the cocktail waiter would be able to shake me as well as he did a Margarita.\n\nI got my chance to find out when Danica was on night duty and I finished at ten in the evening. I waited for Robert to finish cleaning his station and engaged him on the way back to the staff quarters. He liked to speak English with me to practice and we chatted amiably on the way. His room was on the upper floor and we had to pass my room to get there. As we reached the door, I invited him in for a coffee.\n\nHe gave me a hopeful glance. \"Maybe a little late for coffee, Keren. I may not get to sleep.\"\n\nI opened the door and dragged him inside by the arm. \"Exactly the plan, Robert but I don't mind -- means we get to fuck all the quicker.\"\n\nIt was great to be back in the saddle, even after a short break and he certainly gave me a good shaking. So much so, we did it again the next week when shifts permitted.\n\nOur first time had been somewhat frantic, so I decided to take it a little slower and treat him to my almost forgotten oral skills. I had just got into my work when the room door opened and a small figure was silhouetted in the doorway.\n\nA hand flew to her mouth, her sparkling blue eyes wider than usual. \"Oops, sorry Keren. They changed my shift!\"\n\nIf I expected her to close the door, I was disappointed. I lay with my mouth open, hovering over Robert's erection, not knowing what to say or do. She broke the tension by taking a step into the room and peering over my shoulder.\n\n\"Ooh, hello Robert. Wondered who the lucky guy was. Got room for a little one?\"\n\nHis fingers were stroking me gently but I was barely aware of them and barely heard his whispered, \"Oh oui, Mon Dieu!\"\n\nI stared at her in horror and amazement as she calmly divested herself of her uniform and smiling benignly, threw her little cap onto her bed. She stepped out of her panties and knelt down beside me, giving me one of her best smiles. They usually lit up the day but at that moment it was the last thing I wanted to see.\n\nShe pointed to the erection in my hand. \"May I?\"\n\nIn shock, I held it towards her. \"Erm, yeah -- knock yourself out, Danica!\"\n\nTo say she went at it with feral abandon was an understatement. Despite my shock, I registered that she was extremely accomplished and her innocent look was just that -- a look. The girl could give head and Robert's moans attested to her skills as she took him all the way, something I struggled to do. Her bare arm rubbed against mine as she worked and I moved away a little, disturbed at her proximity. She was oblivious as first a thigh, then her shoulder again made contact with me as I was pinned between her and the bedside table. After a couple of minutes of frantic action, she pulled off and held him up to me once more with a little nod.\n\nAs I went back down, I suppressed a little shudder as I realised I was sucking up her thick, gooey saliva. My stomach turned over as I tried to match her throating achievement and I pulled off him, gagging. Thinking I was done, she went back to her task at the same time as I did. We both flicked our tongues out at the same time and inevitably there was a brief coming together. We rocked back, staring at each other with wide eyes, mumbling apologies.\n\nThere was a moment of confusion as we both indicated to each other to continue on the hapless Robert and this time when we both ducked down in unison, there was a real coming together. My attempt to take his glans in my mouth coincided with hers and we met in an inadvertent wet kiss that had Robert moaning in ecstasy and me recoiling once more in horror. Her hair had brushed my face and our lips and tongues had met.\n\nWe both said, \"Sorry\" at the same time. To cover our embarrassment, she indicated for me to get on board.\n\n\"You were here first...\"\n\nRelieved, I picked up the condom from the bed and rolled it down on his erection. I straddled it as Danica held him up for me and sank down hoping she would back off and leave me to it for a while. Then I hit her small hand on the way down and stopped dead. \"Erm, Danica...\"\n\n\"Ooh sorry! Just trying to help!\"\n\nHer hand seemed to take an age to unravel from Robert's shaft and her fingers lingered far longer than I liked against my wet folds. At last she moved away and I sank down with a long, satisfied sigh. I tried to put her out of my mind as I warmed to my task again and Robert responded by thrusting up off the bed as he had done the first time.\n\nI froze in sheer horror as small hands gripped my hips and slid up over my ribs before gently squeezing my breasts. I hissed her name through gritted teeth and she let go, her head bowed, trapping her hands under her armpits as though trying to stop them from roaming.\n\n\"Sorry, Keren. It felt... nice.\"\n\nI took a deep breath. \"Maybe for you. Look Danica you can have your turn in a minute. Why not sit on your bed like a good girl until I've had a nice ride, eh?\"\n\nShe nodded nervously and sat down behind me. I resumed my grinding with diminished enthusiasm, now feeling distinctly uncomfortable.\n\nBarely thirty seconds later, she did it again, except this time, she put her head on my shoulder. Her hands squeezed gently once more and I felt her hot breath on my neck and in my ear. I was about to elbow her in the chest when she whispered to me, almost in desperation.\n\n\"Please don't make me stop, Keren. It feels so good. I've never done this before. I don't want to stop. I want you to do it to me too.\" She gently tweaked my nipples between her fingers and thumbs. \"Please let me convince you!\"\n\nDespite the situation, I almost laughed as Robert moaned below me. \"I am not wanting stop either! Deux jolies filles! Oh mon Dieu, ne t'arrete pas!\"\n\nI shivered for a moment then forced myself to admit that her tiny hands felt good against my breasts and when she tweaked my nipples, a little electric shock had run all the way down to my nether regions. Her body was soft and warm as she held me and the smell of her newly-washed hair and musky perfume assailed my senses.\n\nDecision made, I looked at the digital bedroom clock. It had just ticked over to 22:27. \"Ok, Danica -- you have until 22:30 to convince me. If I then tell you to stop, please stop.\"\n\nAt 22:35, Danica Antonova straddled Robert's face and I took her in my arms for the softest, gentlest kiss imaginable. It felt like a butterfly's breath and I was so glad I had not told her to stop.\n\nShe took my face in her hands. \"Thank you, Keren. Does it feel good now?\"\n\nI kissed her on her cute little snub nose and grinned. \"Not sure. Let's do it a bit longer -- in the interests of science, you understand. Would you care to swap places?\"\n\n\"Keren - can I... can I lick you while Robert takes me from behind?\"\n\nRobert and Danica's moans of delight as he sank into her was matched by mine as a tiny, shaggy-haired blonde girl lapped at me with a long, flexible tongue. Her hair was so soft against my thighs, her fingers so gentle on my labia and clit. It was all too much for Robert. Given the circumstances, he had lasted well and apologised to Danica as he shot his load into her as she bucked back against his insistent thrusts before being rammed back hard against me.\n\nHe pulled out and Danica slid up my body for a sticky, wet kiss. I tasted myself on her lips then went down on her for my first taste of another girl. From the first moment I lapped at her slippery wetness, I knew it would not be my last.\n\nWe came in unison, mouths clamped together, fingers darting down below while Robert watched on in sheer astonishment.\n\nLater, when he was gone, we lay in each other's arms. She touched my face. \"Thank you for letting me go on. I've wanted to do that for so long but never had the opportunity. You're so pretty, Keren. It was wonderful and I don't want it to be a one-time thing.\"\n\nI held her to me. \"I'm glad I did, Danica. It was wonderful for me too, and you are so lovely. I think tonight has been a bit of a revelation.\"\n\nWe kissed for a long time. When we parted, she gave me a shy little smile. \"My friends call me Danni. I'd like it if you called me that.\"\n\nI thought for a moment. \"My schoolfriends had a nickname for me and I quite liked it. You can call me Greenie if you like.\"\n\nHer big eyes glazed over as she stroked my face. \"Hello, Greenie!\"\n\nA little shiver went through me as I reciprocated. \"Hello, Danni. Shall we do it again?\"\n\nOver the next few weeks, we did it again and again and it just got better and better. I had never even thought about doing it with another girl and when she came on to me, I was appalled. Then I realised just how good it felt and went with it. Thereafter we were barely parted and each night I was on duty with Robert, he would watch me like a little puppy-dog in the hope that I would whisper two words to him.\n\n\"Ce soir.\"\n\nWe still had the odd night with him alone when our shifts clashed and the threesomes got better as we got more used to the dynamic, but I relished the time we spent together more. Two girls getting to know each other and the joys of Sapphic sex from watching things on the internet and copying what we saw. We soon outgrew our little travelling comforters and began to order more robust forms of female entertainment from discreet sites. Within a month, our favourite pastime was scissoring with a magic wand clamped between us. If Robert was there to suck on while we did it, all the better.\n\nI never got home at Christmas and I apologised to Tasha. She was not too bothered -- she had landed herself a plumb job at a 'restaurant with rooms' on Dartmoor in Devon and boasted that it had a Michelin star. She was the assistant manageress and had a new boyfriend -- the junior sommelier.\n\nShe laughed down the phone line. \"Seems weird, Keren, don't it? Off we go down to France and I come home and you stay. I fall for a Frenchman on me own doorstep and you end up with a girl from bloody Russia or somewhere!\"\n\nAlthough I loved Cornwall, surfing on the Cote d'Azur on Boxing Day just about edged a cold dip at Newquay. The festive season was much nicer in France and it rekindled my enthusiasm after the soulless, commercialised circus it had become back home.\n\nAs the New Year was upon us, Danica and I were inseparable, but I detected an undercurrent. Something was not quite right and she was not her usual, bubbly self. I let it ride and didn't want to press her, so put it on the back burner.\n\nThen one night, as I lay waiting for her to return, the room door opened and I heard muffled giggling and shushing noises. She was up to something. She sat on the bed and took my hand, her face illuminated by soft moonlight.\n\n\"Hey, Greenie -- got a little present for you.\"\n\n\"Ooh, I like pressies. Watcha got?\"\n\nIn answer, she wrapped my fingers around an erect penis.",
        "\"Bonsoir, Keren. Ca va?\"\n\n\"Bonsoir, Robert. Je vais bien, merci.\" I was just about to go down on him when Danica repeated her words from a few seconds earlier.\n\n\"Hey, Greenie -- got a little present for you.\"\n\nI now found myself holding an erect penis in both hands and my heart began to pound.\n\nThe lights went on to reveal a naked Danica, bouncing on the spot, her cute little titties jiggling. \"Surprise!\"\n\nThe fourth member was a slightly older staff member, Alain who I had heard had just split from his wife. None of us were really fit for our next shift as Danica and I took delight in guiding them into our willing holes and I had the inestimable pleasure of watching her being spit-roasted before I suffered the same fate.\n\nIt was the night of my life as myself and a girl I thought I might be falling in love with embarked on another voyage of discovery together. We had always used condoms with Robert and tonight was no exception, but this time we removed them before the coup de grace and let them come on our breasts. I ran my fingers through the mess on Danica's left titty and held it up to her. She did the same to me and we enjoyed our first ever cum-kiss, watched on by two incredulous co-workers who could barely believe their luck.\n\nI was truly on Cloud Nine. I had come to France hoping to get laid by some nice hunky guys and ended up being brought to my knees by a twenty-year old girl from Odessa on the Black Sea.\n\nThe next night, she pricked my bubble with a vengeance and I came crashing back to earth with a painful bump. I knew something was wrong from the moment she came back from her shift. She was quiet with me and seemed irritable. When I asked her what was wrong she burst into floods of tears. The night with the guys had been her leaving present to me. She had a new job and was off to an exclusive resort along the coast. We only had two days left together.\n\nI was utterly stunned and now knew how Tasha must have felt when I got the job and she didn't. Danica said she had applied to them before we met and they had said there were no vacancies but they would keep her application on file and get back to her if anything arose. She almost forgot about it until they contacted her out of the blue. She never told me as she never expected to be selected.\n\nThe resort, Sur la Mer, was an island bolt-hole for the rich and famous some fifty kilometres away, close to Monaco and the Italian border. It had a reputation of being one of the best and most prestigious resorts in Europe.\n\nThe next four months were sheer purgatory. I missed my little blonde bombshell so much and I was shocked as to how empty I felt. We kept in touch via social media but our meetings were so rare they seemed to pass in an instant. Our shifts conspired against us and every meeting, somewhere halfway between our workplaces, began with a fevered and undignified clinch in the ladies' toilets at the station as we devoured each other and headed to our lunch spot with sticky, wet fingers.\n\nAs summer approached, I was seriously thinking of returning home. It was almost better to be denied access to her rather than the fleeting, stolen moments followed by weeks of emptiness.\n\nOne April morning, as I perused the EasyJet flight schedule, intent on ending my torture, Danica called me. \"Hey Greenie, fancy a day out in sleazy old Monte Carlo next week?\"\n\nDid I ever? I was ordered to wear something nice as she had booked us a special lunch. The train ride was spectacular and I was glad I had decided not to go back home. She met me off the train and we must have garnered a few telling looks at our embrace, but if we did, we were oblivious. I dragged her towards the ladies, but she stopped me.\n\n\"No, not today lovely Greenie. Gotta wait. Got a surprise for you!\"\n\nShe took my hand with a gamine grin on her face and swept me out of the station. When she held up a hand, I thought she was about to summon a taxi, but a deep blue van pulled up, emblazoned with the logo of the place where she now worked.\n\nSur la Mer.\n\nI hugged her. \"Ooh, going to take me on a tour?\"\n\nShe put her hands on my shoulders, suddenly serious. \"No babe. I hope I am going to get you a new job. I've got you an interview.\" She bit her lip, biting back a tear. \"C'mon Greenie, knock 'em dead. I want you back, babe. Miss you so much.\"\n\nFor once in my life, I was utterly speechless. I held her so close I thought she would suffocate. I managed some sort of thanks and sat in stunned silence as we drove along the coast road towards the island paradise she now called home.\n\nI knew the instant I saw the place that if I didn't get the job, I would be utterly devastated and would definitely head home. The place was idyllic, a hundred metres out in the Mediterranean, reached from the mainland by a causeway. At high tide, launches ferried staff and guests across the bay and there was a small dock and a helipad. The main hotel and restaurant area was in a faux chateau, the centrepiece of the island. A dozen or so villas were dotted around the grounds, some on rocky outcrops, hanging precariously over the waves. Vintage French cars dotted the landscape and the whole air of the place harked back to the Riviera of the Swinging Sixties.\n\nAfter my interview, I sat on a terrace with Danica, sipping coffee and marvelling at the view back across the bay and the shoreline and the distance Alpes Maritimes. Monaco was around the headland to the west and the coast curving away to the north-east was in Italy, heading towards Genoa.\n\nI wasn't nervous as I had no expectation. I was resolved to this being my last sight of Danica and I would soon be back in Cornwall, with not even Tasha to fall back on.\n\nThey had said it would be about an hour before they let me know. Therefore it was a shock to hear a discrete cough from behind me after only forty minutes. I turned to see Claudine, the General Manager and one of the three staff who had interviewed me, smiling and holding a big envelope under her arm. She held out her hand towards me and I barely heard her words for Danica's unseemly screech of joy.\n\n\"Bienvenu a Sur la Mer, Miss Green. We are delighted to have you on board!\"\n\nThree\n\nMy feet barely touched the ground in the first few weeks of landing at Sur la Mer. It was hard work, but again apart from some slight changes, the work was familiar and nothing new. The surroundings certainly were though, and I never tired of that view back to the mainland and doubted I ever would.\n\nIt was wonderful being back with Danica again and we took up where we left off, although there were no equivalents to Robert which was a little disappointing. The staff quarters were in the basement of the main hotel, known as Le Chateau and comprised of single rooms. There was no ban on fraternisation with other staff members but discretion was advised. That suited Danica and I and although our relationship was noted by some, there were a fair few gay couples on the male side, so there were no issues.\n\nIt was just a shame that the three guys we would definitely have tried our charms on were all in relationships -- two of them with each other.\n\nI was assigned to three different stations in the first three weeks -- waitressing at the bistro, room service and bar work either in the main bar or by the infinity pool on the rooftop of Le Chateau. The view from there was even better than down below and the colours of the pool mesmerised me as I served drinks and canapes.\n\nAbove it was the crowning glory of the resort, the owner's private suite named after the nearby landmark of Cap Ferrat. Suite Cap Ferrat was spoken of in hushed tones by the staff and newbies like Danica and I would not be allowed even close to it. From the infinity pool it looked like a spaceship had landed on the roof, all chrome, glass and wood and I could easily imagine it in a science fiction movie. Apparently the owner used it as their main winter residence and in the summer it was let, usually free of charge, to the great and good who could afford it most. The names of movie stars, rockstars, tennis players and racing drivers amongst others who had stayed there read like a Who's Who of the last thirty years.\n\nI loved it up there but I also loved working in the bistro. The food was the best I had ever tasted, despite it being the resort's third-string restaurant and I shuddered to think of what the three Michelin-starred main restaurant in Le Chateau would be like.\n\nMaybe one day.\n\nRoom service was my least favourite service as it was damned hard work. I had never taken to arriving at a stranger's door, bearing gifts. In my early days back in Cornwall I had walked in on couples getting it on and on one occasion, I was sure the man I was delivering wine to was doing something he shouldn't under the bedclothes as I uncorked it. One or two girls -- and even one boy I knew of had been propositioned, although it had never happened to me.\n\nAt least not yet.\n\nThere were some quite large distances involved and I found my daily steps were covered quite easily and on some weekends or busy times, I could cover fifteen kilometres in a day. That wasn't so much of a problem as I loved walking the Cornish coast, so I was used to the distance. It was the fact that covering that distance carrying food and drink, even if it was pushing one of the electronic trolleys we used, took its toll. Soon, Danica and I were becoming experts in shoulder massages as well as honing our other, relatively new-found skills.\n\nI may have disliked room service, but at least I had it to thank for changing my life. It didn't seem as though that was going to be the case when I was asked to deliver a bottle of vintage champagne to a location that came up on the iPad mini strapped to my wrist as 'VAM.'\n\n'VAM' was the resort shorthand for Villa Alpes Maritimes, probably the most sought-after of the outside villas, set upon the highest of the various outcrops. Apparently the view from the picture window and balcony was something special.\n\nI set up my trolley and wheeled it out of the main bar area onto one of the perimeter paths, where the electronics kicked in. It was nice to just wander along behind it as it wound its own sweet way to its destination and helped me get the lie of the land in no time. Inside Le Chateau or villas the electronics were disabled for safety, but we had very elegant copper wristbands that were programmed to let us open doors with a wave of our hands.\n\nIts journey done, my trolley glided up to the door of the villa and I reached out to activate the intercom. I shouldn't have been surprised to see the door swing open as each guest had a telephone app that showed the progress of their order down to the nearest metre. I took control of my trolley and wheeled it in, trying not to stare open-mouthed at the opulence of the place, or the sheer, jaw-dropping view of the coastline through the massive floor-to-ceiling window. The place was vast, probably bigger than the entire block of ten apartments that housed my family home in Redruth for most of my life. Our flat would have comfortably fitted into the vestibule and there were doors off it and what looked like a mezzanine bedroom up a circular staircase that cut the main picture window in two.\n\nI knew the recipient of the delivery was a female but there was no-one in sight. I stood in the middle of this incredible sanctuary and tried to summon up the courage to speak.\n\n\"Excusez-moi, Madame. Service de chambre.\" My voice seemed to get lost in the enormity of the surroundings.\n\nI waited a moment and a figure appeared at the top of the staircase. It was certainly a female and she wore a yellow two-piece bikini, a broad brimmed sunhat and very little else. She smiled down at me from on high.\n\n\"Ah, merci, sur le balcon s'il vous plait!\" She flicked a hand towards the large opening in the left wall.\n\n\"Certainement, Madame.\" I wheeled the trolley over and gasped out loud as I now saw the view without the window in the way. The balcony jutted out into the Med and the view in front of me was uninterrupted by anything man-made and I gasped at the beauty of the distant, snow-capped mountains.\n\nI put the ice bucket with its precious cargo on the small table next to a lounger and shook my head in disbelief. As I did so, she spoke from the doorway.\n\n\"Quite the view, isn't it?\" Her voice was soft but commanding.\n\nI turned to see her leaning nonchalantly on the doorpost, smoke curling up from a black cigarette in a holder in her left hand. \"C'est magnifique, Madame. Encroyable.\"\n\nShe laughed and took a pull on her holder. \"Your French is impeccable young lady, but you are as English as I am. Please, save a poor middle-aged lady the embarrassment of delivering her A-level French, which is now largely forgotten in the mists of time.\"\n\nI had been told to be friendly with the guests if they seemed they would be happy with it, but not overly familiar. I took the woman to be in her late thirties and she was very good looking and still had a body to die for. \"Certainly, Madame, but I think Madame is neither middle-aged nor lacking in her linguistic skills. She is doing herself an injustice.\"\n\nShe blew out smoke and smiled at me, leaning forward to see my name tag. \"Thank you... Keren. Keren Green, eh? I have lived here for twenty years, so I have picked up the odd phrase. Nice name, nice accent. West country girl? Devon? Cornwall?\"\n\nI inclined my head. \"I'm a Kernow girl alright Madame and I am impressed you would notice.\"\n\nShe moved past me and stood by the lounger. \"Spent many a happy time in my teens down that way. Lovely part of the world. So what brings a delightful young lass like you down to this neck of the woods?\"\n\nI hadn't expected an inquisition, but it was nice to talk with a guest after so many brief encounters. \"First it was a holiday with a friend. Then I got a job along the coast near Cannes. A girl I met there got a job here and somehow got me an interview. I've been here three weeks and I am still pinching myself.\"\n\nShe smiled. \"And you still will be if you are here at my age, Keren. It never gets old. So, I hope that before you started on the hard work, you got plenty of sun, sand and sex? I certainly got two of those things in my time in Cornwall.\" She twisted her mouth. \"Sun didn't shine much though...\"\n\nI felt the same frisson of excitement I had when I had first given in to Danica but I dared not let it show. Instead, I feigned self-modesty and smiled demurely. \"I couldn't possibly say, Madame. May I open your champagne?\"\n\nSomething about her just fascinated me. She was so confident in her own skin and exuded a powerful, commanding presence. Even though she was around my size she seemed to tower over me, oozing sexuality. I wished I could see her eyes but they were hidden behind a pair of Raybans that would have cost me a month's wages.\n\nHer smile was almost hidden by another plume of smoke. Why did she look so damned sexy when she did that? \"Shame, I do so love a salacious tale. Now I shall never know. Oh and thank you, but I'll wait until my guest arrives for the champers.\"\n\nI decided to play her little game. \"Thank you, and - never say never, Madame.\" I took a step back towards the villa.\n\n\"Oh, I never do, Miss Green. It is not a word I am familiar with.\" She held up her cigarette. \"May I count on your discretion? I clearly broke the rules by lighting this before I came outside.\"\n\nIn reply, I made a zipping motion across my lips. \"Enjoy your champagne and the rest of your day, Madame.\"\n\n\"Oh, I will, young Keren. I certainly will. Lovely talking with you. And for your trouble, there is something for you on the dresser inside the door.\"\n\nI nodded my thanks. \"Merci, Madame. Vous etes tres gentile.\"\n\nAs I did a double take at what was on the dresser, there was a throaty chuckle behind me. \"Choose carefully, Keren. Please don't spoil my afternoon.\"\n\nI picked up the twenty Euro bill and turned back to her, trying to keep my voice level. \"Merci encore, Madame. I'll leave the rest for your delectation.\"\n\nAs my empty trolley glided back down the path towards Le Chateau, I wondered what her reaction would have been if instead of the money, I had chosen the G-spot vibrator, black strap-on or nine inch dildo that also adorned the dresser.\n\nThe rest of my shift went by in a blur as I tried to imagine what she got up to for the rest of the afternoon, and with whom.\n\nWhen Danica came back late from her shift, apologising for doing extra hours and crying off our usual end to the evening, it never occurred to me to put two and two together. It would be a few weeks before I was able to do that simple arithmetic.\n\nFor the next few days, I hoped to get another visit to the enigmatic woman in 'VAM' but by the time I was back on bar duty, I remained disappointed. Danica and I were back in full swing after her little time-out and we were very taken with the double-ended strap-on she had ordered from our now favourite online adult shop.\n\nWell, that was where she said it came from, so who was I to argue?\n\nI liked working in the main bar. The huge glass and steel atrium at the centre of Le Chateau was a clearing house for the two restaurants that adjoined it and it was always buzzing with beautiful people in their finery, drinking ridiculously priced wines and a range of cocktails that made the lovely and talented Robert look like a trainee barman from a back street boozer in Redruth.\n\nGaston, the junior sommelier sent me my latest order for table nine via my iPad mini. I nodded across the bar to him, wishing he wasn't an item with one of the sous-chefs in the bistro. They were both utterly gorgeous, but oblivious to the charms of a horny Cornish lass and her Ukrainian girlfriend.\n\nIt was a young, refreshing bottle of wine, perfect for a pre-dinner drink, but it was at the top of the huge floor-to-ceiling chiller cabinet that dominated the wall behind the bar. It looked utterly spectacular and Danica and I once tried to work out how much wine was in there and how much it would cost. When Gaston told us, we stood like goldfish, wondering how many years we would have to work at Sur la Mer to afford even one rack of the stuff.\n\nI rolled the ladder along on its rail and clambered up, hoping it would be my only such order of the night. Sometimes a night in the bar could be as exhausting as a day on room service. Back at ground level I set it in a cooler, made sure the two glasses were clean and chilled and strode purposefully towards table nine. The woman had her head down, hard at work on her social media on her phone.\n\n\"Bonsoir Madame, comment allez-vous ce soir? Votre vin, si vous plait.\"\n\nShe never looked up. \"I'm just fine and dandy, thank you Keren. How is my favourite room service girl tonight?\" She now looked up and smiled playfully. \"Have you been avoiding me?\"\n\nMy heart leapt as I put down the wine. \"Absolutely not, Madame. My apologies. The last time I saw you, you wore a hat and sunglasses. I didn't recognise you tonight.\"\n\nThis time I could see her eyes and they bored into mine like green lasers. \"I suppose if I wore the bikini and the sex toys were on the table, it would have been more obvious?\"\n\n\"Possibly Madame, but I would have to ask you to leave as you are inappropriately dressed. May I pour your wine?\"\n\n\"You may, Keren. And please, call me Vanessa.\"\n\nI took the bottle from the cooler. \"Maybe in your villa, Madame.\" I looked around the room. \"Mais pas ici.\" I switched to a real Cornish burr. \"Mor'n moi job's worth, comme on dit in Newquay.\"\n\nShe laughed. \"Oim sure you do. I like you Keren - you have spirit and you are fun. Most of the staff are polite and reserved, but you... you have something about you. Now, please do the honours if you don't mind.\"",
        "I was forgotten for a moment as she went back to her phone. I busied myself with the bottle and appraised her surreptitiously. Her hair was dark and fell in natural waves to her shoulders. Her mouth was wide and full-lipped and her nose long and almost aquiline. For her age, she was a stunningly attractive and elegant lady. Her simple, clinging black cocktail dress showed off her ample curves very nicely and enhanced an alluring cleavage. It all added up to an impressive package that would turn most men's heads, never mind a twenty-three year old waitress with a new-found affinity for her own gender.\n\nThen there were those eyes. The things that took the lady I now knew as Vanessa to another level. They were slightly hooded and sparkled with life and intensity. They enhanced every nuance on her expressive face and had fixed me with such intensity that I could barely think straight when confronted by them.\n\nHaving done the necessary with the foil cutter and the corkscrew, I held out the cork to her. \"Madame?\"\n\nWithout an upwards glance, she took my hand and held the cork under her nose, inhaling deeply. Her fingers squeezed mine and she held her breath for a moment before releasing me without a word.\n\n\"Would Madame care to sample her wine?\"\n\nThose lasers fixed me from below. \"No, Keren. I shall trust your knowledge, which you must have to work here. You shall be my nose and taste buds. Please, taste on my behalf and give me your honest judgement.\"\n\nI had taken a few wine tasting courses over the years and was grateful for my training. I may only be able to afford Vin Ordinaire but I still knew my Beaujolais Nouveau from my Chateauneuf du Pape. I poured a drop into the glass, swirled it around, then did the mouthwash thing that never seemed to make any difference to me. I was unable to spit it out so broke a house rule and swallowed it. After all, a wealthy guest had asked me my opinion, so who was I to argue?\n\n\"Well Madame, it is a young but vibrant wine, with overtones of lemongrass, kiwi fruit and a hint of honey. Perfect for a pre-dinner aperitif. Our sommelier works closely with the vineyard on a number of our exclusive wines and this is a perfect example of how the local terroire influences the taste of this unassuming but still remarkably complex vintage.\"\n\nShe regarded me with amusement. \"So it's not cat's piss then?\"\n\nI picked up the bottle. \"Ah, apologies Madame - I missed the bit about feline urine. I thought it was piss-de-chien. Lost in translation, you understand.\"\n\nShe picked up the glass and held it out to me. \"You, my dear girl are a class act. Will you be doing the honours in there tonight?\" Her head inclined towards the huge glass door of the three-starred restaurant.\n\nI poured her wine. \"Alas, Madame I need to work on the difference between cat's wee and doggie wee for a few more years before I am allowed within those hallowed portals. Would Madame be so kind as to sign on my pad for her bottle of unmentionable animal excretion?\"\n\nShe took my stylus and scribbled something with a flourish. \"I am in two minds, Keren.\"\n\n\"About what, Madame?\"\n\n\"Whether to report you for gross impertinence or put you forward for employee of the month.\"\n\nI smiled. \"As long as I make an impression one way or the other...\" I leaned in close. \"Vanessa.\" I straightened up. \"Well, enjoy your evening Madame and I hope to see you soon.\"\n\n\"You too, sweet girl. And I will enjoy, darling.\" She handed me a twenty Euro bill and gazed over my shoulder. \"Ah, Serge, mon ch\u00e9ri, perfect timing as ever!\"\n\nWhen I turned around I was under no illusions that Vanessa would enjoy her evening. Serge was an absolute dreamboat. Heads turned at the sight of this fortyish Adonis with swept back shoulder length hair and craggy Gallic looks. Women of a certain age cricked their necks to get a better view and a Cornish girl in her early twenties returned to the bar with an empty tray and a little twinge down below.\n\nI tried to read her signature on my pad, but all I could make out other than her initial 'V' were three more letters, 'deL' before the stylus stroke swept upwards like a comet trail.\n\nI couldn't wait for Danica to return after my shift, but once again, I was disappointed. She stood at the bottom of the bed like an automaton, arms by her side. She then raised them above her head and fell face first onto the bed, legs sticking up in the air. Her voice was muffled by the bedclothes.\n\n\"Sozzy babes. Long shift. Danni sleepy.\"\n\nAnd with that, she was gone.\n\nI had never known anyone who could fall asleep at the drop of a hat like Danica Antonova. I straightened her legs and covered her with the sheet, still in her uniform. It was like being back with Jack, rubbing one out, imagining Vanessa going down on Serge and him exploding over her breasts and beautiful, arrogant face.\n\nI still cannot believe that I was so naive not to realise that Serge had just exploded over Danica's breasts and sweet face as well as Vanessa's.\n\nThen, just over a week later, Vanessa made her move on me.\n\nFour\n\nWhen I got the call to deliver a bottle of fine bubbles to her villa at the end of my shift, I knew the game was on. My decision was already made if she came on to me. I decided against a trolley as I hoped I would not be back. When her door swung open, I had to catch my breath.\n\nShe was lounging on a chaise longue next to a low table in dark grey lycra workout gear, smoke curling up from her cigarette. I narrowed my eyes and shook my head in admonishment.\n\n\"I've already bought your silence, Keren. Not a fucking word - I've paid a fortune to inhabit this little beach hut for the summer and I'll happily pay for the fumigation before I move on. So once again, turn a blind eye and be a dear and pop the bubbles down here, will you please.\"\n\nI did as I was bid. She acted like she owned the place, so it was her problem, not mine. \"Certainly Vanessa. Hope you enjoyed your evening last week.\" I busied myself with the cork.\n\nShe looked like the cat that got the cream. \"I did indeed, young lady. A lovely meal with a very dear friend.\"\n\nI doubted that was the extent of it, but I held my council as the cork popped. \"May I do the honours?\"\n\n\"Indeed you may, and pour a glass for yourself, my dear.\"\n\nYes, we were on! I decided to have a little fun of my own. \"Thank you Vanessa, but I am on duty. Strictly forbidden to imbibe alcohol.\"\n\nShe nodded sagely. \"Quite correct, but by my watch it is five minutes past six and the day shift ends at six. So either you are working overtime or in your own leisure time.\" She gestured to one of the glasses, then to the chair opposite. \"So please, I insist. You work bloody hard and deserve a little treat.\"\n\nI thanked her and poured two glasses. She touched hers to mine and I sat down. I was used to Prosecco at best and the first sip probably cost more than the last bottle Danica and I had shared.\n\nVanessa looked me up and down appraisingly. \"That uniform suits you. I didn't have you in mind when I designed it, but you wear it well.\"\n\nI looked at her in amazement. \"Wow, I'm impressed. I love the design. Are you a fashion designer then?\"\n\n\"I'm a lot of things, Keren but no - I am very good friends with the General Manager and I showed her some scribbles I made. She liked them and now lovely girls like you make the results look good.\"\n\nI really did love the design and told her so. \"I've worn a few shockers but this is a cut above. It's so sixties and I love the way the bands of blue remind me of the infinity pool. I hate wearing hats but the cap is so cool.\"\n\n\"Thank you and yes, I love the sixties look. I binge-watched a boxset of an airline drama set in the sixties and their uniforms resonated with me, so I used them for inspiration. If I could spirit myself back to that time, I would in a heartbeat. \"\n\nI pointed to her cigarette holder. \"Hence the holder? Very swinging sixties.\"\n\nShe gave me a wry look. \"In part, but I'll need to know you a little better before I give you the full monte on that little tale! But how remiss of me - do you?\" She indicated a silver cigarette case on the table.\n\nI shook my head. \"Not anymore.\"\n\n\"Shame, I do like seeing a pretty girl smoke. But sensible of you. Teenage phase?\"\n\nI recalled a bad six months when my stepfather came into my life. \"Yes - I rebelled a bit aged seventeen. Did a few things I regret - pills, smoking, a bit of dope. Not a good time, but I saw sense.\"\n\n\"Good girl. I was a bit silly when I first came down to this neck of the woods. Went at it full tilt and hoovered up the gross national product of a small nation before I cleaned my act up.\" Another wry look. \"Well, in one department, anyway.\"\n\nThen came the kicker. \"I try to limit myself to smoking before and after sex these days.\" Her eyes bored into mine.\n\n\"So you smoke a lot then?\"\n\nHer laugh was genuine and hearty. \"Keren, I really am going to put you forward for employee of the month. Sorry my dear - I am so bloody obvious, but I am used to getting what I want.\" She took a long final pull on her holder and stubbed it out, her eyes now blazing. \"So not to beat about the bush, Miss Green, would you do me inestimable honour of lying with me in sexual congress this evening?\"\n\nI drained my glass and held her gaze. \"Thought you'd never fucking ask, Madame. More champagne?\"\n\nShe held out her glass and gave me a strange, searching look as I refilled it. \"Keren are you doing this of your own volition or do you feel pressured by a rich guest who may actually intimidate you?\"\n\nI was a little taken aback to say the least. \"Rest assured, Vanessa - no-one intimidates me. You are a wealthy lady and I am a waitress, but as my good friend Tasha would say, you still bleed every month. You fart and scratch your arse when nobody is looking.\"\n\nShe glared at me. \"How dare you, young lady. I do nothing of the sort. I will scratch my arse when it pleases me and my farts are legendary!\"\n\nWe both lost it for a moment as the absurdity of the situation washed over me. I shook my head in disbelief. \"I've barely spent five minutes in your company and I've already agreed to spend the night with you. Who the fuck are you, Vanessa?\"\n\nShe lit another cigarette. \"Oh dear girl, I haven't a fucking clue. If you're still around when I find out, I'll be happy to tell you, but we may both be old and grey by then.\"\n\n\"Ok then - what are you?\"\n\n\"An easier question. How shall I describe myself?\" She closed her eyes for a moment and made some inroads into her cigarette and champagne. \"I'm a facilitator. I make dreams come true for people like you - beautiful, sexy, intelligent girls and boys in whom I see some promise. In the process, I also make my own dreams come true.\"\n\nI was now very interested, but I played it low key. \"Such as?\"\n\n\"What do you think? That three letter word that some find offensive but others crave. It all comes down to sex with me, Keren. I live for it. I allow others to live out their fantasies. I can make it happen. I could make you a very well-off young lady. Escorting, parties, orgies. Modelling, porn - I could say the sky is your limit, but I never set my sights that low.\"\n\nAll I could hear in my head were my words to Tasha. \"There has to be something more than this.\" At that moment, I was being offered a chance of more than this by a very compelling lady. I so wanted to believe her and something hit me between the eyes with a rock-solid certainty.\n\nWhatever she was offering, I wanted to be part of it.\n\nI sipped my wine and tried to keep a lid on my emotions. \"There are people in the news at the moment who have also provided those sort of services. Some are behind bars, some are mercifully deceased. Somehow I don't think you are like them, but I need to be sure. I'm interested, Vanessa. What can you say to convince me you are not like them?\"\n\nHer voice was calm and even. \"Well said, Keren. Well said indeed. What I said a few minutes ago is something of a mantra for me -- about it being your decision. Believe me, I am not like those people - nor are my friends. You would never need recourse to crystal paperweights and kinky boots as I did.\"\n\nThere was obviously a tale brewing and I was utterly intrigued. \"Vanessa, I am twenty-three years old and I wait tables and provide room service. As you so rightly observed the first time we met, I came to France looking to get fucked rotten.\"\n\nA laugh interrupted me. \"See - never say never!\"\n\n\"Told you, didn't I. Well, Vanessa, believe it or not, I love sex as well. So come on, mysterious, enigmatic Vanessa whoever and whatever you are. It is now six-thirty. I'll give you until seven to convince me.\"\n\nShe held out her glass once more and touched it to mine. \"And if I fail?\"\n\n\"I'll still sleep with you.\"\n\n\"Why?\"\n\n\"Because I'm damned sure you will be a great fuck, Madame.\"\n\nShe inclined her head. \"Oh I am, Keren Green. Believe it. OK - the unvarnished truth - well, as much as I am prepared to divulge on night one. Ready?\"\n\nI prayed she would convince me. \"Go for it.\"\n\nI listened with rapt attention as she told me as much of her tale of her early years as she was prepared to. By the end, there was no doubt in my mind she was sincere.\n\n\"Ok, warts and all, Keren. I'll tell you why I will never coerce, force or demand that any of my charges do anything against their will. When I was barely eighteen, my employer decided he liked me and gave me a job way above my pay grade. I was his personal assistant but it soon became apparent that I was to be very personal to him. I was no stranger to doing to men what he asked me - sorry, he instructed me to do on pain of losing my job - but he was a disgusting, overweight ball of sleaze. Charles Brabinger was the vermin's name and I really do say, in all sincerity, I hope he rests in eternal torment if he has arrived down below where he deserves to be. When I refused his advances, he threatened me with losing my job. When I told him to take a flying fuck, he grabbed me by my cute little pigtails and told me he would relish seeing me 'wearing his load' as he so eloquently put it. As you may now be aware Keren, under most circumstances that would not be an issue for me, but a twenty-two stone, sweaty, balding pervert - even I have standards.\"\n\nEvery sexual encounter I'd had since I was sixteen had been entirely consensual and I couldn't imagine being forced into a situation I wasn't comfortable with. I swallowed hard. \"Shit, Vanessa - what happened?\"\n\n\"Vanessa happened, Keren. Remember I mentioned a big crystal paperweight? When he pulled me down, I completely panicked and thought about biting him, but that would mean making contact with the horrid thing. Then I remembered his prize paperweight -- some sort of award or other. I scrabbled around on his desktop, trying to find the damned thing and just as he was about to force me onto him, I grabbed it.\"\n\nShe shivered at the memory and pulled on her cigarette. \"It was bad enough when I hit him in the bollocks with it, but the worst sound was when the next blow smashed his nose. Honestly, Keren - I hope you never live through that experience. I occasionally dream of a fat sleazeball wheezing like an extra from the Living Dead as I kick him in the balls multiple times with a very nasty pair of studded ankle boots.\"\n\nI held my fist out to her. \"Way to go, lady.\"\n\nHer face was a picture. \"I'm not all that familiar with the younger generation, Keren. Do I do that back to you or is that an idea for later?\"\n\nDanica and I had tried fisting a few times and the idea certainly appealed. \"Let's say both, shall we?\" She bumped me. \"So, what happened next?\"\n\nShe shrugged. \"I hadn't a fucking clue what to do. I had a probable assault charge on my hands and a fat slob looking like a slaughtered pig in a heap before me. I did what any sensible girl of my age would do - I flew to Nice, hitchhiked to Monte Carlo and paid the driver in the manner that the foul Charles Brabinger would have relished, then settled into a life of sun, sex and sand that even Cornwall couldn't compete with.\"\n\nShe sucked the life out of her cigarette and tossed her glass back in one hit. \"Rest assured if you sign up with me, there will be no need for paperweights and kinky boots.\"\n\nI drained my own glass. \"Shame, I quite like kinky boots.\"\n\n\"Leather and latex evening wear?\"\n\n\"Out of my price range, Madame. Like to try them though.\"\n\n\"Stick around, kid. You will and you'll look just great.\"\n\n\"Well Vanessa, you've convinced me so far.\" I took a sip of champagne, barely able to believe my luck. \"Ok, sounds like fun. Where do I start?\"\n\nHer hand went to her chin, as if in contemplation. \"We seem to be getting along well. You call it.\"\n\nI thought for a moment. \"Ok, since we're going to have sex, I think I'll have a cigarette first.\"\n\nFive\n\nTwo hours later, I walked back through the grounds in a daze hoping I wouldn't come across any guests or staff members. I probably stank of sex despite cleaning up in a bathroom that defied description. Danica was waiting for me, tucked up in bed, her tousled head sticking out from under a single sheet.\n\nA hand went to her mouth to cover a sweet little giggle as I leaned on the doorpost. \"Now you know why I'm so sleepy all the time. Vanessa is a naughty lady!\"\n\nVanessa had already told me Danica was a little further down the road on her journey than me. \"You little tinker, Danni -- you knew all about it, didn't you?\"\n\nShe pulled the sheet over her face and I could see her nodding behind it. She uncovered one eye. \"The second time I was with her, I told her about you. She's friends with Claudine, the General Manager. That's how I got you the interview. Mad at me?\"\n\nI flopped onto the bed beside her and tugged down the sheet. I tweaked her nose. \"Mad at you? God, you dizzy little babe, I love you more than ever!\"\n\nShe hugged me. \"Love you too!\" Then she recoiled. \"Ew, smoky. Lovely Greenie not so lovely tonight!\" Her face gave away the lie as she grinned down at me. \"She asked me to smoke for her but I wouldn't. See -- she means it when she says nothing is forced. She's never smoked when I'm with her since and I've never said no to anything else.\"\n\n\"Glad she's a woman of her word. Sorry babe - something about her and that holder just resonated with me. I wanted to make an impression. I'll never do it around you either.\"\n\nShe kissed the top of my head. \"Should hope not. I was dying to tell you, but she swore me to secrecy. She's amazing isn't she?\"\n\nThe tingle throughout my ravaged body testified to that. \"She is indeed. So you believe her, Danni?\"\n\nHer whole body rocked as she nodded her assent. \"Sure do. I'm not going to spoil the fun by telling you what will happen to you over the next few weeks, but yes - she has convinced me.\" She stroked my face. \"I've already signed up. I sold my soul to her last week, Greenie - but I told her I want to wait for you to decide so we can go into it together.\"\n\nI felt as though I was dreaming. \"Thanks babe. Shit, Danni - what are we letting ourselves in for?\"\n\n\"I don't quite know what I've signed up for fully yet, but we'll soon find out. Whatever, I think it's going to be a roller-coaster!\" She paused. \"Did she... afterwards, did she...\"\n\n\"Pay me? Yes but I don't know how much. My phone battery died on the way back. I just had enough juice for her to make the transfer.\"\n\nVanessa had insisted on paying me. It was a gesture of her goodwill and honest intentions and she would recompense me each time we were together. I felt a little uncomfortable, but if it was going to be a way of life for me, then it was something I was going to have to get used to. A rich woman had just paid me for sex. Others had paid me to deliver food and champagne to them. They were both things I did in my everyday life. Where was the difference?",
        "I took my phone charger from the bedside table and plugged in my phone. When I turned back, Danica held up hers. \"My first time with her.\"\n\nI looked at the screen in wonder. Five hundred Euros from the account of one Vanessa deLaunay. I now knew her full name. Danica scrolled down past a dozen or so similar entries and stopped at another one, this for one thousand Euros. My eyes nearly popped out.\n\n\"Fuck, Danni - is this for real?\" Then I saw the date. It was the night I had served Vanessa in the bar and her date Serge arrived. \"Danni - did that night involve a handsome gentleman called Serge by any chance? The night you came in and collapsed like you'd been hit by Tyson Fury?\"\n\n\"Hey, I'm Ukrainian. It was Wladimir Klitschko who hit me, ok?\" Her eyes went all dreamy. \"That was my final audition. It was on another level, Greenie. No offence, but I've never had sex like it. He is a big man in every sense, if you catch my drift, but so gentle and caring. I never wanted it to end. I signed with Vanessa there and then.\" She kissed me. \"I can't wait for you to sign too, so we can start our adventure together.\" She suddenly looked scared. \"You will say yes, won't you?\"\n\nI kissed her snub nose. \"If she'll have me. I doubt I'll ever be able to afford a villa like hers, but if it means a life less ordinary, then I'm in. Before I came down here, I told my friend Tasha there had to be more to life than what we had. I didn't really believe it until three hours ago.\" I hugged her tight. \"We're in this together, Supernova!\"\n\nHer voice was muffled against my chest. \"Who's Supernova?\"\n\nI tapped her on the head. \"You are, Miss Antonova. You're my little Danni Supernova -- a bright, shining star of supercharged energy and love.\"\n\nShe gave one last little giggle. \"Danni Supernova. Like it -- I've got my porn name already. Nighty night, lovely Greenie.\"\n\nShe was asleep within seconds, a gentle smile on her sweet lips. I was buzzing and knew I would not be asleep for hours. When my phone had enough juice, I switched it on and stared in disbelief at the latest line on my banking app. Vanessa deLaunay Misc Outlay Account #2 +\u20ac500.00\n\nI closed my eyes and thought back to the moment when I told Vanessa I was going to have a cigarette.\n\nI didn't know if it was my one and only chance at what she offered me, but I wasn't going to die wondering. I reached down and opened her cigarette case and lit my first one in nearly six years. I hooked my left leg over the arm of my chair and exhaled a long plume of smoke in her direction, feeling slightly lightheaded and wondering if I had made the right decision. I resolved not to inhale and got on with my evening's work.\n\nI gazed into her eyes. \"Ok, Vanessa. Since you like watching pretty girls smoke, I assume you like watching them masturbate. Join in whenever you like.\"\n\nI started slowly, giving her glimpses of the delights awaiting her, letting out little plumes of smoke that I hoped would turn her on. I let it trickle from my lips as I rubbed myself through my panties and she watched on with rapt attention, now smoking again herself. I ran my tongue around my lips as my fingers dug deep and shuffled forward so my bottom was level with the edge of the seat. For ten minutes, I smoked and played with myself for a woman fifteen years my senior and it seemed the most natural thing in the world. I realised in my sessions with Danica and Robert and briefly Alain that being watched was a turn-on for me -- an aphrodisiac -- and seeing how Vanessa reacted to me smoking, I knew I must be doing it right. The look of unbridled lust on her face spurred me on as I finished the cigarette and began to unbutton my uniform.\n\nDanica and I loved masturbating together. We lay at each end of the bed and gazed into each other's eyes as we worked on ourselves, so I had no issues with doing it, even for an almost complete stranger. For some reason it felt liberating. I didn't have any toys to enliven the scene so I stayed partially clothed to keep the suspense going for her as I fingered myself, making all the right noises, pinching my nipples, cupping my breasts. It took me almost ten minutes to get naked and as I did so, she lit another cigarette and leaned across and handed it to me.\n\nI took it and pointed down below. \"Only if...\"\n\nI held my breath as she knelt before me, her green eyes blazing. It seemed strange smoking with the holder and I let out a long thin stream again as my other hand gripped the chair arm. It was down to her now -- my work was done. Her eyes never left mine as she went to work, pulling my pussy lips apart and lapping at me with a long, narrow tongue. I blew smoke down towards her, purring in the back of my throat and she inhaled it up her nose as she licked me.\n\nI lost all track of time as her tongue, lips and fingers played me as if she were a master violinist and I was her Stradivarius. I even managed a couple of inadvertent inhales before I leaned over and stubbed out the cigarette.\n\nThat was her signal to take it home and I came, both hands gripping the chair arms, legs cocked wide, my buttocks off the seat. I gasped out in ecstasy, lips sucking at my clit and fingers pressing on my G-spot. The finger squirming in my back passage just added to the mix and at last I flopped back down thoroughly sated.\n\nShe kissed me for the first time, her mouth wet with my juices. I couldn't get my head around the fact that a woman I barely knew and mainly had called Madame was kneeling in front of me, her face coated in the residue of the shattering orgasm she had just induced in me. I stroked her wet cheek.\n\n\"Thank you Madame. Quite a nice little tip for delivering a bottle of champagne. Will that be all tonight?\"\n\n\"Glad you enjoyed it. I certainly enjoyed your naughty little show-and-tell. And no - it fucking well will not be all, young lady. There is a very nice strap-on lying on the bed upstairs. Be a darling and put it on. I shall be up in a moment.\"\n\nI went up the spiral staircase, trying not to be distracted by the view or the tingling glow between my legs. The bed was enormous and the double-ended strap-on looked tiny lying there, artfully arranged with the straps in the shape of a heart. I fitted it and stood with my hand on it, wishing it was a real cock, squeezing down on my end of the deal. Suddenly it didn't seem so tiny. I gazed out of the window and hoped no-one on the mainland had a high-powered telescope trained on me.\n\nThen I laughed to myself. Actually, I hoped someone did.\n\nI stood for a few moments, aware that she was behind me, a few feet from the bed. I decided to ignore her and let her make the first move. I stood, gently masturbating the dildo as I gazed absently out. I spat into my hand and slathered it all over, then let saliva dribble out of my mouth onto the toy and rubbed that around also. As with when Claudine had welcomed me, I heard a discrete cough from behind me.\n\nI turned. \"Oh, there you are. Thought I was on my own again.\"\n\nI got my first view of Vanessa naked. Her breasts were slightly larger than mine and obviously had been worked on. Nice fat nipples tipped them and her skin was lightly tanned. Her dark bush was neatly trimmed into a triangle shape, pointing towards the promised land. I looked her up and down and my first thought was that I hoped I looked half as good in fifteen years' time.\n\nHer voice was low and husky. \"Miss Green, there is a lovely delicate breeze coming up these stairs from the balcony door, but if you think I'm going to get off on a zephyr from the Med, you have another think coming. Now, young lady -- you have the wherewithal at your disposal to do whatever you like to me -- so fucking do it.\"\n\nSplendid. Game on. I walked towards her and gauged she was two steps away from the bed. I tapped the end of the dildo against her tummy. \"Step back, bitch.\"\n\nHer eyes sparkled. \"What did you just call me?\"\n\n\"Fucking hell, the bitch is deaf as well.\" My voice rose. \"I said step back!\"\n\nShe did, her face alive with anticipation.\n\nI closed the space between us. \"Again.\"\n\n\"Make me.\"\n\nI put my hand on her sternum and pushed hard. \"Fucking do as you're told.\"\n\n\"Since you asked nicely...\" She stepped back demurely, her calves now touching the edge of the bed.\n\nI gave her another hard shove and she tumbled back onto the bed, her hair flying, legs in the air. I grabbed both of her ankles and pulled her forwards until her bottom was level with the edge. With her ankles up around my shoulders, I leaned in and slid the head of the dildo inside her, eliciting a sharp intake of breath.\n\nI gave her my best waitressing smile as I gripped both ankles. \"Good evening Madame. I'm Keren, your room service girl tonight. I do hope you enjoy your evening, because...\" I rammed the dildo home hard. \"Because Madame -- here's some fucking room service you... are... never... going... to... forget!\"\n\nEach of the last six words were grunted out and punctuated with a hard thrust, after which I went at her with something approaching a fury. I didn't know what had come over me, but I just knew I had to impress this woman, even if I didn't really know how.\n\nI had never done anything like it -- with Danica it was gentle and loving -- here it was as if I hated the woman. I thought back to my rebel days -- railing against authority and hating anyone telling me what to do. Maybe I was just showing a wealthy, arrogant woman that even a lowly waitress could fuck her just as well as the great and good she had no doubt enjoyed in the past.\n\nHer cries certainly spurred me on, taunting me, interspersed with guttural grunts and moans. \"Is that all you've got, little girl? Fuck me, you amateur. Harder, girl. Can barely feel it. Fucking lightweight, give me some cock, bitch!\"\n\nIt all came out in a stream of consciousness, driving me on as I started to get off again on the dildo up inside me. She called me all the names she could think of as I battered into her, her hand rubbing herself furiously as I went on relentlessly for minutes on end.\n\nHer breath ragged, she put a wet hand on my chin, gripping my cheeks. The words sounded like they were being torn from her. \"Fuck... my... arse...\"\n\nWho was I to argue with a wealthy guest? \"Certainly Madame. One arse-fuck coming up.\"\n\nI pulled out and slammed home again as she screamed, her fingers a blur. I love anal, but the treatment I gave her would have torn me in two. She loved it, screaming for me to go harder and just when I thought my legs were going to give way, she looked at me imploringly.\n\n\"Keren, I'm going to come. Please lick me. I want to squirt on your lovely face.\"\n\nRelieved, I pulled out and sank to my knees, her legs now trailing down my back. Her buttocks eased up off the bed and I began to lap at her, then as I tasted her salty fluids, sucked ever harder as she began to flood into my mouth, screaming obscenities and scrubbing at her clit with long-tipped fingernails.\n\nDanica had squirted twice but I had never managed it and hoped I would someday. It felt every bit as good as a cum shot as she shook and shuddered and my face and the floor were soaked with her juices. I rammed my dildo in and out hard and came a second time as she subsided. It dripped from my chin into a little puddle between her legs and she pulled me up gently by the hair and we met for a long, wet kiss.\n\nWe fell into a tangled heap on the bed and she wiped us both down with a thick towel and lay in my arms, still breathing heavily. \"Fucking hell, Keren -- where did that come from?\"\n\n\"I'm not actually sure myself. Something took me over. Was it ok?\"\n\n\"Was it ok?\" She shuddered in my grasp. \"Was it ok? Whatever took you over, bottle it and you'll make a fucking fortune. That wasn't 'ok', it was beyond words young lady -- beyond words.\"\n\nI was on such a high as we lay in silence, taking a few minutes to come back down to earth, Vanessa stroking my hair that now fell down around my shoulders. She lit a cigarette and held the holder to my lips. I pulled on it, careful not to inhale, and let out the smoke in a gentle trickle into her mouth.\n\nShe purred. \"Thank you, Keren. It's a little thing of mine as you can tell. A little fetish of mine for many years. Not everyone's thing, but it turns me on. Smoke kissing, cum kissing, sharing the spoils. All part of the fun.\"\n\nWe did it again and it really did feel rather nice. I knew I would never become a regular smoker again, but maybe under the right circumstances I could be persuaded, and these seemed like the right circumstances to me. We shared it in companionable silence then she took my face in her hands.\n\n\"You have the right attitude and the right talent, Keren. I'm convinced you can go a long way. I haven't seen you with a man yet, obviously, but I can't wait. You have that naughty girl-next-door vibe. I know you were trying to impress me and you did. That was utterly amazing -- lovely and tender in parts and utterly feral in others. Would you be comfortable making porn? Attending rather naughty parties? Maybe even stage shows?\"\n\nI thought for a moment. \"Over the last few months, I've proved to myself I'm up for almost anything. I had my first group sex a while ago -- three of us, then four. I made out with another girl and now we're together and it was such a blast for both of us watching each other in action. We both got off on it. Then seeing your face tonight -- it's so exciting knowing something you are doing is turning someone else on. If that audience was bigger, I guess the kick would be bigger as well. So yes -- if the chance arose, I think I would.\"\n\nThat is when she told me Danica had been with her on many occasions and had already signed up. I should have found it a shock, but somehow it just seemed a given. I thought back to her coming in drained and flopping down on the bed and knew I would soon be in the same state. In truth, I was utterly elated she and I were on the same path.\n\nVanessa stroked my cheek. \"So don't blame your pretty little girlfriend, Keren. I swore her to secrecy until you were on your journey. She told me all about your adventures and your rather awkward -- how shall I put it - first contact.\"\n\nI smiled at the memory. \"It was all very strange. I was doing this tug of war with myself -- do I or don't I? She's so sweet and I'm so glad I let her go on. I love her so much. It was hell when she moved here and it was the best moment of my life when Claudine told me I had the job.\"\n\n\"Best moment so far, Keren. From what Miss Antonova said, you sounded like the sort of girl I am looking for - as did she when she first graced this bed. I told Danica to mention you to Claudine -- as I said we're big buddies -- have been for years.\" She saw a look in my eyes. \"Rest assured, Keren -- you got the job on merit. I can pull strings, but not that many. I merely set things in motion, the rest was down to you. You are here because you impressed Claudine and her colleagues. They do not take on amateurs here. I do, but I hone them into ultimate professionals. Now, young lady -- you've impressed me greatly as well as Claudine and you certainly gave me a very vigorous work-out, but it is getting late and I need my beauty sleep and you have a long day tomorrow.\"\n\nI stood and began to gather up my scattered garments. \"Well, thank you for a very pleasant and informative evening Madame. May I enquire as to what happens next?\"\n\n\"Oh, I'll be in touch, don't worry. After all, I love fine dining, but I also love a nice little nibble at a good Cornish pasty now and again!\"\n\nSix\n\nIt all seemed so surreal and for the next week I had to pinch myself as Danica and I resumed business as usual. I was back in the restaurant for a fortnight and was wondering how I would have the time to meet with Vanessa when my shift was split between eleven until three and six until midnight.\n\nI need not have worried. I had forgotten that when I gave her my bank details, she also got my phone number. When a text message came in one morning and I read the content, I quickly saved the contact as 'VdeL'.\n\nThe message was a single line. Need my Cornish pasty fix. Tasting session, three thirty tomorrow, VAM. Can't wait! \n\nI couldn't wait to inhale her musky scent and taste her either. As I approached the villa the next day, I hoped she wouldn't want payback for my feral assault on her the previous time. Again, I had nothing to worry about. She was already waiting for me in the vast bed on the mezzanine. I made sure my uniform was neatly folded and my hair stayed in my tightly bound pigtails. I removed the blue peaked cap this time and slid into bed beside her.\n\nThere was no smoking, no rough stuff -- just a delicious, slow burn of two bodies entwining, enjoying the taste, smell and feel of each other and eliciting little moans and gasps as hands and tongues roamed. I went back to my duties feeling very mellow. I was always friendly with the guests, but maybe my pheromone levels were heightened as my tip jar for the evening was one of my best.\n\nWe did the same thing on two more afternoons, and during our third session, she lay stroking my breasts, teasing my nipples with fingers and tongue. \"Such lovely, natural breasts, Keren. So shapely, so alluring.\"\n\nHers were clearly enhanced -- subtly, but there was a definite difference to the way hers wobbled to Danica's and mine. The skin seemed slightly stretched, almost with a vinyl-like quality. I quite liked it, but never in a million years would I ever have mine done.\n\nAs she nibbled, she looked up at me. \"These would look so lovely with little bars in them.\"\n\nI said I had always wanted them but never had the courage. Five minutes later, I was booked into a session on the mainland the following morning. My next few shifts were a little uncomfortable, but I loved them and so did Danica. And best of all, someone else had paid for them. A week after I had mine done, Danica proudly waved her pert little titties at me, now replete with beaded rings in each nipple.\n\nIt was when I was put back on room service that Vanessa got her retribution for our first time. She rammed into me with the strap-on until I could barely catch my breath. I was on the edge of the bed, facing the spectacular view, but I saw very little of it. I was blindfolded with little weights attached to my nipple bars and my legs stuck straight up in the air. My wrists were bound to my ankles with Velcro ties. Danica and I had tied each other up a few times, but this was on another level.\n\nThe woman was utterly relentless and I came over and over as the long, ribbed dildo did its work. When she rolled me onto my side and squeezed something cold and sticky against my anus, I held my breath. Danica struggled with anal whilst I had always relished it and it had long been my go-to at the wrong time of the month. We were practicing hard -- my nemesis was deep-throating, which she could do with ease, despite her diminutive size. We watched 'how-to' videos and were getting better, but still had some way to go to match each other.\n\nI shivered and shuddered as Vanessa entered me. I had told her I could take it all the way and did not disappoint her. I came, biting the pillow as she fingered me with one hand, her other tugging my weighted nipples until I screamed. It was no wonder she wanted me to have them pierced.\n\nAfterwards, she invited me to demonstrate my oral skills on the dildo. It reminded me as to how long it had been since I had sex with a man and I asked her when it was likely to happen as there seemed to be few if any candidates at work. She was very impressed with my technique, but a little vague as to when I may get to do it next with a live person.\n\nDanica had obviously had sex with men more recently, and on one night off we went over to the mainland looking to get laid but were out of luck. Everywhere was quiet or full of middle-aged holidaymakers, not rich playboys looking for some fun-loving girls to go ape on.",
        "When I next net Vanessa, she told me she had a present for me. \"It's on the bed upstairs, darling. I'll be up in a few minutes -- make sure you're playing with it when I get up there.\"\n\nWondering what sort of sex-toy she had in mind, I raced up the stairs to find a little blonde girl kneeling on the bed. She wore a tight, black leather harness that criss-crossed her body and my heart almost stood still. She looked utterly sensational. When Vanessa came up and sat in the chair specially positioned for her viewing delectation, Danica already had two fingers inside me and I was sucking an ice cube from her gorgeous, pink folds.\n\nIt was a very long night and we put on a show and a half for Vanessa before she joined us. We ended the evening with my mouth clamped to Vanessa's pussy, hers to Danica's and Danica's to mine in a triangle before topping things off with a long, sticky three-way kiss.\n\nAs we made to leave, she thanked us and asked if I would be able to see her on the following Saturday. It was unusual as we had never been together over a weekend before, but I had a day off so it was fine by me. Danica put on a grumpy face as we walked back to the staff quarters and only cheered up when the 'kerching' of an old fashioned till rang out within a few seconds from our respective phones. Another few hundred Euros for making love to my girlfriend in front of a hot older woman. What was not to like?\n\nIt seemed strange to go to her villa not in my uniform. I walked in through the open door and it swung shut behind me. A voice rang out from above.\n\n\"Something for you to wear on the main table darling. Then up here, please.\"\n\nTen minutes later, I walked up the spiral staircase to the mezzanine clad in a body harness like the one Danica had worn. It took a bit of putting on, but when I looked at myself in the full-length mirror, I was amazed. It looked and felt incredible. I loved the feel of the tight leather bands of our strap-on around my waist and thighs, but these encircled my breasts and pudenda and went around my neck in a wide choker. There was a cigarette holder in my hand and I couldn't wait to share a smoky kiss with her.\n\nWhen I saw her lying on the bed, similarly clad, I knew I would be doing more than a smoky kiss. A tall naked man lay with her, his hand in her hair as she worked on him. I stood for a moment watching her with another man for the first time and took in the scene. He was probably mid-twenties, tall and athletic with a light beard, hair in a long ponytail and piercing blue eyes. He turned to me, smiling. I couldn't imagine many men not smiling at what was in store for him.\n\n\"Bonsoir, Keren. Je m'appelle Christophe. Enchant\u00e9.\"\n\nI knelt down beside Vanessa. \"Enchant\u00e9 aussi.\" I took a long pull on my holder and let a thin stream of smoke out over the head of his impressive erection. Vanessa took it between her lips and he moaned as I did it again. Vanessa lifted her head.\n\n\"Been dying to see you do that, lovely girl.\" She took the holder from me and engulfed his cock with smoke and we slowly began to work on him together, teasing and nibbling. When she held him up for me and I sank down, I let out a long, low moan. It was the biggest cock I had ever had and I could feel my pussy lips stretching in a most delightful way. As Danica had done on our first time, she straddled his face and we kissed as his cock and tongue did wonderful things to us both. We then swapped and I squirmed as his long tongue went in deep. It was another long, steamy night and as I sucked Christophe's cum from Vanessa's pussy and dribbled it back into her open mouth, the view both inside and outside the villa was utterly breath-taking. As we knelt up, enjoying our first cum kiss, the moonlight sparkled on the water below and the lights twinkled along the promenade of the mainland.\n\nLong after he had gone, we lay, sharing a cigarette and gazing at the vista and I knew with all my heart that I wanted this more than ever.\n\nThe next time with Christophe was even better as I had a little blonde bombshell called Danica with me and we got to share his cum. The look on her face as she sucked it from my pussy, then slowly crawled up my body to deliver it would live with me forever. Luckily, Vanessa took a picture of her on her phone as her shaggy little head popped up from between my legs. It was perfectly timed and her face was wet and a dribble of cum escaped her lips. Her big blue eyes were wide and her hair a tousled mess. It was breath-taking and a few days later, she returned from an evening with Vanessa with a large paper carrier bag.\n\nHer gamine grin was in place, a sure sign something good was about to happen. \"Got a pressie for both of us.\"\n\nI took the bag and squealed in delight when I saw a framed A4 sized version of the image, her lovely, sweet face staring at the camera. We resolved that when we didn't live in a basement and had our own place, hopefully with a view of the sea, it would adorn the wall somewhere discreet along with one of mine. All we had to do now was find a suitable image to go with it.\n\nSummer wore on and the sun shone and the sex was incredible. When another fine gentleman named Erich joined our sessions occasionally, I began to wonder how long it would be before Vanessa made me an offer. Danica had been on board for a while but remained on hold for me. I was still seemingly in my probationary phase. When I mentioned it to Danica, she told me to ask Vanessa myself.\n\n\"Tell her you're ready, babe. You've done some amazing things. I told her I was ready. Maybe she's waiting for you. As she said, it has to be our decision after all.\"\n\nIt made sense. The next time I was with her we were alone. We lay naked on a lounger on her secluded balcony, glasses of a very fine Picpoul in our hands. When she shivered in delight as I gave her a mouthful of smoke, I felt the time was right. I slipped an arm around her shoulder.\n\n\"Vanessa, this is all beyond my wildest dreams. I come in, we have incredible sex with amazing people, but I still know little about you. I think I've earned the right to a bit more, don't you?\"\n\nShe burst out laughing. \"As you said to me back in May -- about fucking time! I said it had to come from you, didn't I? It has to be your decision. I'll happily shag anyone with you until we are old and grey, but I'd rather you came on board. If you're ready to commit, just say the word.\"\n\nI sighed. \"I'm ninety-nine-point nine percent sure you are on the level, Vanessa. But I need to know more about you. How you can afford to treat what you call this 'little beach hut' as your own for a whole summer. I couldn't even afford a single night.\"\n\nShe sat up. \"Ok, Keren -- let's go back in to where this all began, shall we?\"\n\nWe went back inside and sat in the same positions as we had done a few months earlier. For the first time since I started work at Sur la Mer, someone other than Danica poured me a drink.\n\nShe gathered her thoughts for a moment. \"Right then - a short, potted history of Vanessa Lyle - as I was then - after arriving on the Riviera some twenty years ago. First of all, I threw myself into the party scene and gained quite a reputation as a girl who never said 'no'. As I alluded to earlier, I unfortunately picked up a bad habit and began to get a little out of control. It is why I insist on a strict no-drugs policy with anyone I recruit to my cause.\"\n\nI nodded. \"Safe with me then.\"\n\n\"Good girl. So, when my funds began to run out, unlike you and your friend who sought more salubrious employment, I decided to get paid for the only thing I'm good at. I soon made a lot of money working for a high-end escort agency but the white stuff was taking over, so I did a short, sharp shock treatment and have been clean ever since.\"\n\nI told her I was glad to hear it -- I hated my short time smoking pot and regretted the few times I tried pills as a teenager. I couldn't imagine what getting off the hard stuff would be like.\n\nShe went on. \"I was in demand and I gained a loyal band of men and some women who were prepared to pay a young woman a fortune to do virtually anything they liked. I allowed them to live out their fantasies with me. I told you a while ago I use my holder as an homage to the sixties look. Well, I know you better now and I can tell you I have this fetish because a gentleman saw me smoke after a session of ours, and the next time paid me handsomely to live out one of his long-time fantasies. I had never done it before, but as you have seen... it can be quite compelling.\"\n\nFor a moment, she examined herself as if searching for something. \"If I have an off-button, I've never found it. Anyway, I attended lavish parties and orgies and became very well-known and sought after. At one party, I came to the attention of a man called Pierre deLaunay. He was twice divorced and once widowed. He was twenty years my senior and aged twenty-three, I became the fourth Madame deLaunay.\" A long sigh racked her body. \"And aged twenty-seven, I was a very wealthy widow.\"\n\nThat shocked me. \"Oh my God, that's awful. So sorry to hear that.\" She was silent for a moment and I said something I hoped wouldn't be taken the wrong way. \"Not wanting to be rude, but - you were in love, I take it?\"\n\nShe laughed. \"A fair question, given the circumstances. I've been asked it many times as have many women in my position. A sadly departed English comedienne once asked the wife of an also sadly departed English magician and entertainer a question on her chat show. \"What first attracted you to the millionaire Paul Daniels?\" Another laugh. \"It wasn't the money with me, Keren. He was handsome, debonair, a consummate lover. He made my friend Serge look like the man who's nose I broke. He was almost an Olympic standard showjumper and raced powerboats and motorcycles. Our parties were a thing of legend around this neck of the woods.\"\n\nHer eyes glazed over. \"Yes, it was love -- but it wasn't meant to be. When he passed, I inherited a lot of his business interests and some went to his ex-wives and the estate of his own deceased wife. They got the more genteel parts of the estate and I held on to a few, but mainly concentrated on the -- how shall we say - more pleasurable enterprises.\"\n\nI had a fair idea what she meant but wanted her to spell it out. \"And what are they exactly?\"\n\n\"I think you can guess, Keren.\" She began ticking things off on her fingers. \"The escort agencies, the party facilitation, orgies on yachts, sex cruises.\" She looked at me long and hard. \"And of course the high-end pornographic movie and magazine productions, plus the live sex shows for discerning private clients.\"\n\nI looked around at the opulent surroundings. \"Must pay well.\"\n\n\"Oh it does darling, it does. I made a decision then to foreclose my career in front of the camera and go behind the scenes -- directing, producing, picking the right people for our productions.\"\n\nI sat in stunned silence for a moment. \"You were a porn star? Bloody hell is there nothing you've not done?\"\n\nShe shrugged. \"Oh, I made a few racy little features in my time. Group, girl on girl, straight sex, the odd fetish thing obviously.\"\n\n\"Wow, how many? God I'd love to see you in action!\"\n\n\"Oh I never counted. Must be about fifty. I'm sure you can find them on the internet, but I have a full collection, of course. I'd happily show you one tonight... if.\"\n\n\"If I sign up?\"\n\n\"If you sign up. Are you utterly sure this is what you want, Keren? It's not a step to be taken lightly.\"\n\nI stood and bowed my head. \"Would Madame please accept the answer of the humble room service girl to her kind offer of becoming a pornographic movie star and escort?\"\n\nShe gave me an amused look. \"She would.\"\n\n\"My answer is in the affirmative, Madame. Sign me up. There's a USB port at the base of my spine. Charge me up and let me go and when I run down charge me up again. I'm ready, Vanessa.\"\n\nShe also stood and took my hand. \"Not so fast, young lady. One final stage, then we can sign on the dotted line.\"\n\nI went all Cornish on her and put on a sulky face. \"Always summat else wi' you, in't there?\"\n\n\"There is indeed.\"\n\n\"What now?\"\n\n\"Just come back tomorrow at the same time for an audition, that's all. Be a formality darling. A formality.\"\n\nDanica's final audition was with Serge. Did I dare dream? \"Yeah, ok. I've got nothing better to do.\" I bounced on the bed like an excited toddler. \"Keren said yes, can Keren watch one of your porn movies now please, Madame?\"\n\nThat earned me one of her looks. \"Yes, I suppose Keren can, assuming she stops whining.\" She led me back upstairs and we lay on the bed. She picked up a remote control from the bedside table and I gasped as a huge screen rose from the foot of the bed. It was utterly enormous. She pulled up a file menu and dug down a few levels until she found the required folder.\n\n\"Hmm -- sixty four -- more than I thought. Ready for my debut? It may seem ancient history to you given you were probably starting primary school around the time I made this, but it was still in the digital age.\"\n\nThe picture on the vast screen was surprisingly sharp although the title graphics and music were a bit cheesy. I snuggled into her, unable to process that I was going to watch a movie the woman next to me had made some seventeen years earlier.\n\nThe title sequence showed snippets of the action to come and introduced the performers. As their names came onscreen, the image froze for a few seconds as the name then traversed a little unsteadily from one corner to the other. Orlando and Geraldine were introduced first, followed by Phoebe and Johnny Longue, both women taking impressive erections in their mouths. Then the screen was filled with a blonde-haired woman working on an even bigger cock. It was only when she flicked her hair out of the way I realised it was her and I gasped as she froze the scene with the remote.\n\n\"Yes, so I was blonde for a short while. Blame the white stuff.\" She held up a hank of my hair. \"Wonder what you'd look like blonde.\"\n\n\"A right skank. Tried it once, never again. Might go for a few highlights, but we'll leave Danica to be the blonde bombshell.\" I tapped the remote. \"Come on, let's see the dirty old bugger in action!\"\n\nHer name appeared as she froze again, her tongue flicking at the engorged head of the glorious erection. Then the camera began to pan up the man's athletic body and his big, meaty hand stroked Vanessa's hair. She really did look strange as a blonde. As the camera reached his shoulders, she paused the action.\n\n\"Care to guess who?\"\n\nThe chiselled jaw was just visible, the hair falling to his shoulders, a little less grey than it had been in the bar all those weeks ago. I envied Danica all the more and hoped he would also be my final audition tomorrow.\n\n\"Looks a bit like some old bloke I saw in the bar the other night. I think he was going to give a randy old granny a good seeing to. Looked a bit desperate for it, so she did.\"\n\nA bony elbow dug into my ribs. \"I'll randy old granny you, young lady -- but she was a bit desperate for it. Serge Truffaut - forty-one and still one of the best - and I'm glad to say still as good a friend as he was back then. Shall I zoom through to our little sequence?\"\n\nIn truth, it was a fairly standard suck/fuck movie, but the fact that the star of it was lying by my side made it all the more compelling. She was a dervish, all action, and he had her moaning in French and English as he took her from behind with long, steady strokes. After about nine minutes of standard action, he went up between her breasts. I squeezed her left one and pointed to the screen.\n\n\"Pre-enhancement then, I assume.\"\n\nShe paused the playback and gave me a hurt look. \"Oh, Miss Green -- you wound me. I thought the surgeon's work was undetectable! Now, may I proceed to the money shot or will I have to dig your ribs again?\"\n\nI signalled for her to continue and soon afterwards, an impressive spurt flew out from the end of Serge's cock and landed on her shoulder, cheek and chin. The scene faded out with her licking her lips, smiling at the camera and the next segment began.\n\n\"Marks out of ten?\"\n\n\"A strong seven from the Cornish judge. Could have been improved with a bit of cum play at the end and maybe a slo-mo replay of the pop-shot, but pretty damned good.\"\n\n\"Must have read the director's mind!\" She wound it on to the end titles where the cum shot was included in slo-mo. \"Extra point?\"\n\n\"Yeah, make it an eight. Can I see another one?\"\n\n\"No, you have to go home now and prepare for your big day. So not to put too fine a point on it, fuck right off, young Keren. Fuck right off and come back the same time tomorrow. No paperweights, no kinky boots required, as I said.\n\nI stood by the bed and did my best Cornish accent again. It always seemed to amuse her. \"Can I get dressed first, Miss. 'Fore I goes home loike. Bit of a shock for guests seein' staff member in the nood, loike. Moight get arrested!\"\n\nHer face was a picture. \"Yes, Miss Green -- please get dressed... then for God's sake, please fuck right off!\"\n\nI dressed quickly and stood to attention once more, tugging at my forelock. \"Fuckin' roight off, I is, Madame. Then I'm comin' back termorrer for a roight fuckin'!\"\n\nI could still hear her laughter as the door closed behind me.\n\nSeven\n\n\"Excuse me Madame, is this where the audition is?\"\n\n\"The audition?\"\n\n\"Yeah, the one where the pretty little room-service girl gets fucked into the middle of next week by person - or persons - as yet unknown. That audition.\"\n\n\"Oh, that audition? Why didn't you say, silly girl?\" She waved a hand airily at the mezzanine. \"Somewhere up there, I think. And don't mess up the sheets. They were only changed this morning.\"\n\n\"Can't guarantee it Madame -- standard of sex I'm getting at the moment I do tend to squirt a lot.\"\n\nI began to make my way up the stairs when she spoke again. \"Oh, I lied about something last night.\"\n\n\"What would that be Madame?\"\n\n\"The kinky boots. They are required. They're by the bed. Fucking red-hot they are, you'll look great in them. Just don't kick him in the bollocks. Oh and by the way, there are cameras on all four corners of the bed. We won't miss a thing when we play it back later.\"\n\nI did indeed look great in them, as well as the harness which I found a little easier to put on the second time, plus a pair of lacy, fingerless gloves.\n\nWhen she saw me from the top of the stairs, she purred. \"Fuck me, good enough to eat. Reddish-auburn hair, black leather, lovely little gloves. Can't wait. Those gloves give a different feel on a nice big erection -- nice contrast between flickering tongues and fingers and the slight catch of the material.\" She pulled up a chair. \"I was going to do a big dramatic reveal, but I think you've got this one covered, haven't you? Out you come, Serge -- she watched you last night doing me. Time for me to watch you doing her.\"\n\nMy heart stood still as the bathroom door opened and he walked out in a black shirt and white chinos. He took my hand and brushed my fingers to his lips. \"Enchant\u00e9, Keren.\" He turned to Vanessa. \"Une vrais rose anglaise.\"\n\nI hooked a finger into his waistband. \"Enchant\u00e9 aussi, Serge. Maintenant -- viens ici.\"\n\nTwenty minutes later, I rose unsteadily from the bed, my face, breasts and tummy coated in the most impressive cum shot I had ever encountered. I had scooped up and swallowed a lot of it, but I was still covered in it. My legs were wobbly from a shattering, never-ending orgasm and the stiletto heels of the boots didn't help. There were indentations in Serge's buttocks where I had dug them in, urging him on.\n\nVanessa sat in her chair in silence, open-mouthed. I made for the bathroom door and was about to ignore her, but the devil caught hold of me and I flicked a tiny blob of cum from my fingers onto her cheek. She never even reacted.",
        "I looked at myself in the bathroom mirror and couldn't wait to see it all rain down on me once more onscreen. Every nerve-end seemed to tingle and the was a lovely warm glow between my legs where his mouth had worked on me before his huge erection stretched me even more than Christophe's. There was even cum on my boots.\n\nIt took me an age to clean up and get it off my harness. Again, something I was going to have to get used to. I did the best I could and when I returned to the bedroom, I expected carnage.\n\nI was wrong. Vanessa sat at the head of the bed, smoke curling up from her inevitable cigarette. There was no sign of Serge. She saw my disappointed look.\n\n\"Fleeting visit. Nice of him to drop in, don't you think? If you listen carefully, you should be able to hear his helicopter. Flies it himself. Multi-talented man.\" She pointed to a vast wet patch on the black silk sheets. \"Told you not to mess them up.\"\n\nI walked to the side of the bed and glanced between her legs. \"Says the lady dribbling all over the place like a leaky hosepipe.\"\n\n\"Your fault.\"\n\n\"Did I pass then?\"\n\n\"One more judge to impress.\" She pointed down below. \"Make me squirt. I want to see you take another facial.\"\n\nI wanted to take one as much as she wanted to see me take it, but there was something of an impediment to my quest. \"No can do, Madame.\"\n\n\"Why not?\"\n\n\"Because Madame has a fucking huge dildo stuck in her wet, slippery snatch -- kind of blocking the way.\"\n\nShe glanced down. \"Oops, how did that get there? Be a darling, would you?\"\n\nWhen she came, I thought I was going to drown. The bed now really did look a mess and my second clean-up took almost as long as the first.\n\nThis time, when I came out of the bathroom she was waiting for me and hugged me with tears in her eyes. \"Awesome, young lady. You are a force of nature and I know you are going to be a star. Serge was so impressed with his little English rose.\"\n\nI was impressed with my French stallion too, and I told her so.\n\nShe led me back to the bed and lay down on a relatively dry patch. \"Right, let's sign shall we?\"\n\nI looked around for a pen and paper thinking it may not be a good idea to put them anywhere near the bed.\n\n\"I do things differently, Keren. You must know that by now. Your turn to 'viens ici', so come here!\"\n\nPuzzled, I lay down next to her. It took a moment for me to realise what she was doing when her finger went back into her still wet pussy. She ran it along my tummy, just to the left of my belly-button and the penny dropped. After a few revisits and a few strokes of her forefinger, her initials were inscribed on my skin in little wet trails.\n\nSmiling, I reciprocated and soon her tummy was adorned with a wet, wobbly 'KMG.'\n\nShe held a wet fingertip up to me and I did the same to her. \"Seal the deal.\"\n\n\"Seal the deal.\"\n\nThe sucking of fingers turned into a very long kiss, followed by the inevitable cigarette. \"Welcome, Keren. You have just joined a very elite club.\"\n\n\"Thanks, Vanessa. I can't wait. I'll give it my all, I promise. I won't let you down.\"\n\n\"I know you won't, nor will Danica.\"\n\nI looked her in the eye. \"I won't let you down, Vanessa -- but please don't let me or Danni down either. She and Tasha are the only two people in this Godforsaken world that have never let me down.\"\n\nShe made a tiny cross with her fingernail over my heart. \"I swear by all I hold dear, Keren Green. I look after my boys and girls like a tigress.\"\n\nI kissed her fingertip. \"Good enough for me, Vanessa deLaunay.\"\n\nShe lay back and picked up the remote. \"Playback time.\"\n\nI snuggled in once more, barely able to conceal my excitement. \"Yeah, go on then.\"\n\nI held my breath as the screen rose from the bed and she clicked the playback button. It was still so vivid in my mind. To see it all unfold again so quickly afterwards, when I could still feel the effects of our session on my body and see the mess we had made on the bed was one of the biggest turn-ons I could recall. Danica and I had recorded the odd little snippet on our phones, but soon deleted them after a couple of viewings.\n\nFrom the moment I hooked my finger into his waistband and pulled him forward, to tottering towards the bathroom, we were both utterly riveted. Seeing myself take that huge, silky smooth head in my mouth brought it all back and I recalled the feel of my fingers as they wrapped around the shaft, contrasting with the gauzy gloves. Vanessa was right -- they felt great and I was determined to keep them - along with the boots and the harness. I felt I had earned them.\n\nIt was a revelation watching my facial expressions as Serge licked at me, hearing my breathy little moans and grunts of pleasure. It was also clear I was giving him just as much pleasure with my mouth and as he entered me from behind for the first time, my mouth was wide open as I stared into the camera on the bedhead.\n\nVanessa played my coming over and over from every angle as I rode him reverse cowgirl, facing her primarily for her benefit. It also benefitted me as he went deeper than ever and I screamed the place down onscreen. Again, it was still so soon after that my throat felt raw from the screaming and my lips were tender from taking his big cock as far as I could. I knew Danica would have been able to go all the way, but there were still a few centimetres left when my eyes watered.\n\nI glanced up at Vanessa as my onscreen-self spat out gobbets of saliva, gasping for breath. \"How big?\"\n\nNever taking her eyes from the action, she deadpanned. \"Big enough. Never checked.\"\n\nI had to agree but it would have been nice to know.\n\nIf she played my coming over and over, I lost count of how many times we replayed his cum shot. I had made sure I was close to one of the cameras for the best possible footage and it sent shivers down my spine to hear myself telling him in French and English where I wanted it.\n\n\"Sur mon visage. Dans ma bouche. C'mon, Serge -- give it to me. On my tits, my face. Fucking give me it, you lovely hunk.\"\n\nOh, did he give me it? The first spurt looped in a graceful arc to make touchdown just to the left of my nose. It splattered in a thick white rope down my cheek and neck and onto my shoulder. I wanked the huge thing hard and a second lot traced across my breasts, forming a perfect line with the first load. I dived in for his last drops, sucking him hard as he gasped for breath.\n\nVanessa's hand not on the remote was now between my legs. I fingered her and we replayed it from every angle in real time and slo-mo until we were panting for breath once more.\n\nIt was one in the morning when I got back to our room, but Danica was waiting for me. She put a hand over her open mouth as once more I leaned on the doorpost.\n\n\"Oh, Greenie -- what did they do to you babe?\"\n\nI slumped onto the bed. \"I've been Serged.\"\n\nShe mimed having initials written on my tummy with an anxious look. I took her fingers and placed them on the spot. A little tear ran down the side of her nose.\n\n\"Yay, I got one too. We're gonna be porn stars, Greenie! Don't suppose you've got anything left in the tank for poor, horny little Danica have you?\"\n\nI was sore, but I wanted more. \"Always Danni Supernova. Always!\"\n\nIt was a lovely, gentle end to a tumultuous day and I couldn't wait to see what the future had in store for us.\n\nEight\n\nWhen I was younger and things didn't go my way, I would go into what my mother called 'silly mode'. It was a defence mechanism -- a way of dealing with something I couldn't deal with sensibly. I hadn't used it in years, but as I almost ran back from Villa Alpes Maritimes, I knew I was going into silly mode as soon as I saw Danica.\n\nThe bar was busy as the restaurants were about to open. Danica saw my stricken look as I came back in from my room service delivery, but it was a good ten minutes until I got a chance to speak to her after another delivery inside Le Chateau.\n\nShe was deputising for the duty manager and had been giving me my delivery orders, which pleased her immensely. Finally she was able to sidle over. \"Whassup, look like you've seen a ghost.\"\n\nI felt like crying. \"I think I did, Danni. She's gone!\"\n\n\"Gone?\"\n\nThat was my trigger for silly mode. \"Yes, fucking gone. Worth five letters in Scrabble -- a polite way of saying she's fucked off. Vanessa deLaunay has left the building. Our dreams are in tatters and the bitch that swore she would never let us down has just dropped us from a great height into a pile of dogshit.\"\n\nFor a moment, she resembled a stricken goldfish. \"Are you sure?\"\n\n\"Well unless she's transformed into an ancient French crone with bad breath and a hump like Quasimodo's mother...\"\n\n\"Oh fuck. I thought it was odd -- not her usual champagne.\"\n\n\"Oh fuck indeed. What we gonna do, Danni?\"\n\nWe had no more chance to ponder our fate as another delivery came in. The last half hour of my shift dragged and I was just about to go back to the room and cry my eyes out when Danica called me over.\n\n\"Sorry, Greenie -- last delivery of the day. Looks like you're going up in the world. Suite Cap Ferrat!\"\n\nGreat -- kick a girl when she's down. I find out my promises have been broken then have to deliver not one, but three bottles of champagne to the top floor eyrie -- the owner's private bolt-hole. I had longed to see it, but it felt like a kick in the teeth after what had just happened.\n\nI loaded up my trolley without much enthusiasm and snapped at Danica. \"How the fuck do I get up there anyway?\"\n\n\"Hey, easy tiger. Not my fault. We'll talk about it later, yeah?\" She tapped at her pad. \"Left hand elevator. A few more taps and you'll be good to go. Might see someone famous, never know.\"\n\nThe copper bracelet on my wrist buzzed, her reprogramming complete. I apologised to her and rolled the trolley towards the elevator not caring if it was Tom Cruise or Johnny Depp in residence. Vanessa deLaunay was gone and I was bereft.\n\nIt seemed strange to be whisked past the infinity pool floor. When the door opened, I was confronted by a curved glass tunnel some twenty metres long. It reminded me of a walk-through at an aquarium, except that above me were fluffy white clouds, slightly distorted in the curvature of the glass. All the weird and wonderful creatures were a long way below me in the Med.\n\nThe door opened as I approached and wheeled the trolley into an area that made Villa Alpes Maritimes look like my council estate bedroom back in Cornwall. Modern art adorned the walls and I was sure if I looked at a few I would recognise some of the names from a visit to the Pompidou Centre in Paris a few years earlier.\n\nThe layout was similar to 'VAM', with a mezzanine bedroom overhead and the walled-off bathroom next to it. The scale was mind-boggling and the view even better from the elevated height. I had no idea where I should leave the champagne until I saw a big notice on a low table. There were three words and an arrow pointing towards a door in the left wall.\n\nDans le r\u00e9frig\u00e9rateur\n\nGreat -- not even a 'please' and I wasn't even going to see anyone, famous or otherwise. The kitchen area was vast and the ice buckets easily fitted into the massive fridge. I unloaded and wheeled the trolley back out, getting ready for a damned good cry. No doubt somewhere over the headland to the west, Vanessa deLaunay was on her yacht in Monaco harbour, straddling Serge and laughing at the two ditzy little fools along the coast crying into their cheap wine.\n\nI took a final look around the stunning place and headed back towards the door wondering who the recipient of my delivery was. I supposed I would never know. I was halfway across the floor when I stopped in my tracks at a voice from the mezzanine.\n\n\"Not like you to leave so soon Miss Green. Aren't you going to stop and say hello?\"\n\nI almost tripped over the trolley in shock. I turned and gazed up at her leaning nonchalantly on the railing, grinning down at me, fingers waggling in a little wave. I didn't know whether to laugh or cry. I stared at her for a long moment before I found my voice. I put my hands on my hips and glared at her indignantly.\n\n\"May a humble serving girl say that Madame is a right fucking piece of work?\"\n\n\"Why so?\" She made for the stairs and began to descend.\n\n\"Because Madame scared the living shit out of said humble serving girl. Fuck, Vanessa - I was in bits. Danica was in bits. We thought you had done the dirty on us.\"\n\nShe shook her head as she approached me. \"Danica is a fine little actress, Keren. She was in on the deception. She just called me to say you were on the way and that the new incumbent of 'VAM' did not meet with your approval. It was all just a little bit of fun to wind you up. Do you forgive me?\"\n\nI was too relieved to be angry and put on a pretend pet lip. \"I suppose so, but Danni is getting her nipple rings pulled very hard.\" I hugged her. \"You scared me, Vanessa deLaunay. And worst of all, fucking Quasimodo's mother in 'VAM' never even tipped me.\"\n\nShe stepped back. \"How rude of her, but first world problems, hey? Sorry Keren - blame my warped sense of humour.\" She looked around. \"Not bad, is it?\"\n\nI followed her gaze. \"Just like Redruth, Vanessa. Cambourne's riddled with shit holes like this. To be honest, I thought I was back home for a moment. Bloody hell, I know you're bosom buddies with the General Manager, but how the hell did you wangle an invite up here?\"\n\nShe stood with her tongue in her cheek, shaking her head, a little smile on her face. \"You still don't get it, do you?\"\n\nI did a facepalm. \"Oh... my... fucking... Lord. The reason you act like you own the place is because... oh shit, how did I not realise it before? How the fuck?\"\n\nShe held her arms out. \"Hey, the penny drops at last. Welcome to my winter home, Keren. I think you might be seeing a fair bit of it. Come with me and I'll explain all.\"\n\nI followed her in stunned silence towards the massive window. Lights were coming on along the seafront and it looked like a picture postcard. As we gazed out, an arm wound around my shoulders.\n\nHer voice was soft and wistful for once. \"In the early nineties, long before I met Pierre, he bought this little island from an English couple. They inherited it from the wife's French mother and it had fallen on hard times. They were unable to afford the upkeep and Pierre stepped in with a very reasonable offer - around ten million dollars. They snapped his hand off.\" She was quiet for a moment. \"Weird thing is, some girl who says she is their daughter keeps contacting me claiming they were defrauded. The girl must be delusional. I have the documents and it was a fair and equitable sale.\"\n\nShe took a deep breath. \"Anyway, never mind her. Pierre built the place up over the next decade and turned it in to a successful resort. When I came on the scene, I took over the running of the place and it became my little vanity project. I added the infinity pool, housed his collection of vintage cars around the place and gave it the sixties feel I loved. Twelve years ago, we added this little rooftop eyrie and the atrium and achieved our coveted third Michelin star for the main restaurant.\"\n\nThere was a long silence and I knew something bad was coming. \"See those rocks out to the east, about a hundred metres away. Look like shark's teeth.\"\n\nI nodded. They looked vicious and nasty and the incoming tide swept around them in a maelstrom in an otherwise tranquil sea. Her voice was chillingly calm. \"One year later, I stood on this very spot and watched his brand new powerboat explode on those rocks, Keren.\"\n\nMy blood ran cold as she tapped the thick glass. \"Heard it through this - two inches thick and allegedly soundproofed.\" She banged her fist on it so hard I feared she would break a bone. \"The fuck is it soundproofed? Like a paperweight on the bridge of a nose, I will go to my grave with that sound echoing in my ears.\"\n\nI held her close. \"Jeez, Vanessa - I had no idea. Oh my God, that is so awful. What the hell happened?\"\n\nA single tear ran down her cheek. \"Probable cardiac arrest. There wasn't much left to determine the cause. All speculation. That cross on the tallest rock was made from all that was left of his boat.\"\n\nIt was barely visible in the gathering darkness and I shivered as I thought of what she must have gone through. We stood in silence for long minutes and any thoughts of getting her back for her earlier deception were long gone from my mind. I didn't know what to say, so I kept my thoughts to myself and held her to me gently, her head on my shoulder.\n\nAt last, she looked up at me. \"So, that is 'how the fuck', Miss Green. This is now my own personal playground and I use it to recruit my boys and girls. A lot of rich people pay me a lot of money to stay here and help me maintain my lifestyle. I miss Pierre more than words can say, but life must go on and I intend to live it to the fullest for as long as I possibly can. I hope you and Danica will be around for a long time to help me achieve that.\"\n\nI wiped away a tear of my own. \"It will be our privilege, Vanessa. That must have been hard - thank you for confiding in me.\"\n\nShe set herself straight. \"As you know, I value honesty. Danica knows, as does everyone else who is lucky enough to get my naughty little signature on their skin. Right, enough maudlin talk, young lady. There is work to be done and a Sur la Mer uniform is not going to cut the mustard tonight.\"\n\nOh shit, she was off on one again. What was I in for this time? \"What have you got planned now, Madame deLaunay the Fourth?\"\n\nShe pointed over my shoulder. \"Keren, this is a good friend of mine, Leonie Oliver. Leonie will be dressing you and doing your makeup - making you look stunning for what is about to unfold.\"\n\nI turned to see a pretty black girl with beaded corn rows and braids halfway down her back walking towards me. She had the most beautiful smile and held out a welcoming hand. \"Bonsoir, Keren. I am delighted to meet you. Please come with me.\"\n\nWhen I looked back at Vanessa, she was gazing out to sea, lost in her own little world. I felt a gentle hand on my shoulder. Leonie's French accent was warm and seductive. Like Danica, her English was flawless. \"Give her a moment. Come with me and let me get you ready for your big moment, Keren.\"\n\nOnce more I was confused. \"Erm, what big moment, Leonie?\"\n\nShe took my hand and led me towards a door next to the one where I had deposited the champagne in the fridge. Her infectious grin lit up her face. \"You are about to make your first porn movie of course and I am delighted to be your make-up girl and dresser. When we get started, I will switch to second camera. Come on, let's get you looking even lovelier than you are now.\"\n\nStunned did not even cover it, and when I saw the results of Leonie's work half an hour later, I was struggling to think straight. I gushed my thanks at her, not able to believe that the girl staring back at me from the mirror was twenty-three year old Keren Morwenna Green from Redruth, Cornwall. I prayed I would not cry to spoil the effect of her exquisite make-up.\n\nMy eyes were adorned with a smoky, silvery-grey shadow that made them shine. I was assured that neither it, nor the dark red lipstick would run or smudge no matter how torrid things got.\n\nI wore the boots I had worn when I was with Serge, and short, red leather gloves. There was no underwear beneath my dress and the sleek, silky fabric felt so good against my skin, I was getting damp down below wondering what was about to unfold.\n\nThe dress was in the same shade as my eye-shadow -- silvery-grey and it shone in the last rays of the sun as they slanted in over the Med through the side window. A strap ran over my left shoulder and the fabric slanted away down over my breasts leaving my back almost bare. There was no left sleeve and the right sleeve went from my wrist to just below my shoulder and was attached to the body of the dress by a fold of black silk. I was utterly blown away and hoped I would get to keep it.",
        "My hair hung down over my bare shoulder in a thick ponytail and Leonie had braided two long strands with beads and they hung down separately, clicking together as I moved.\n\nThe final touches were my jewellery. My copper bracelet was replaced by a thick, dark metal bangle that covered most of my left forearm and a diamond encrusted watch replaced my habitual sports watch. I didn't expect to be able to keep that as Leonie said it came from Vanessa's private collection. Long pendant earrings hung down to my shoulders and a matching necklace dangled between my cleavage.\n\nI wanted to hug Leonie, but I dared not spoil her work. Someone else would be doing that very soon, but I had no idea who. Instead, I put a hand on her shoulder. \"Thanks Leonie. You are amazing. Can you not be in it with me?\"\n\nShe shook her head, her beaded braids clicking. \"Behind the scenes only and strictly girls only, Keren. I'm here a few days, so feel free to show your appreciation in any way you feel!\"\n\nI kissed her fingers. \"Count on it!\"\n\nShe led me out of the makeshift dressing room and Vanessa was in deep conversation with a woman with a slightly scary look -- short spiky black hair, copious tattoos and piercings, vinyl trousers and a white t-shirt.\n\nHer eyes were wide as she regarded me and her French accent was very thick. \"Mon Dieu, you are right, 'Nessa -- she is gorgeous. Fine work, Leonie.\" She strode towards me, hand outstretched. \"Roxie Rimbeau. Une Plaisir.\"\n\nVanessa chirped up before I had a chance to respond. \"Finest porn director in all of Europe. Won't go near a male appendage but somehow still makes the best movies by a distance.\"\n\nI took her hand. \"Hi, I'm Keren. Sorry, but this is all happening a bit fast. So you'll be directing me then?\"\n\nIt was Vanessa who answered. \"No, Keren. Roxie will be recording your every move -- you will be directing yourself. We like spontaneity, improvisation, going with the flow -- call it what you will. You're in charge, it's your show. We have placed a few props here and there for you to fall back on, but the rest is up to you.\"\n\nI was flabbergasted. \"But... what if I fuck up?\"\n\nRoxie shrugged. \"Good fuck ups, we keep. Otherwise we edit. Simple. So, if I do this...\" She mimed tucking her hair behind an ear. \"It means your hair is obscuring the action, so sort it. If I point to my eyes, look at the camera, otherwise ignore it. You won't find it hard after a moment or so, honestly. If you need a break, one arm straight up in the air. We may give you a few signals to move on to something new, but whatever that is will be your choice. Got that?\"\n\nI mimed her three actions back. \"Good girl, right let's go upstairs and make a porn movie!\"\n\nI swallowed hard. \"Yeah, let's. No pressure then. The waitress in the nice dress just walks up a set of stairs and becomes a porn star -- just like that.\"\n\nVanessa nodded. \"Yes, just like that. Just like you did with me, Danica, Christophe, Serge. Be yourself, your wonderful, uninhibited, beautiful naughty self. Do what comes naturally and everything will fall into place.\"\n\nLeonie and Roxie went upstairs. At the top, Roxie looked down and pointed to the floor. \"Just start here, Keren. There's a couch in front of the window with a table. Your props are there. Use the couch and the bed at your discretion.\"\n\nI fought down panic. \"Who else is in it?\"\n\n\"You'll see when the time is right. It's your show to begin with. Come on up and let's get going.\"\n\nI negotiated the stairs with my heart pounding, hoping I wouldn't trip on the needlepoint heels of the amazing knee-length boots. I loved wearing them and coupled with the dress, I knew if I got it right, it was going to be sensational. It was just getting it right that was the issue. Leonie had done her magic, now it was down to me.\n\nI stood at the top of the stairs and took in the scene. It was almost identical to Vanessa's previous bedroom, the bed at an angle facing the view, the same couch and table in front of the window. I crossed to the table and looked at my props. There was nothing I wouldn't have expected and would have been surprised if some were omitted. Looking at Roxie, I pointed at the bathroom door. \"May I?\"\n\n\"As long as you need, no rush.\"\n\nI just needed time to think. I sat and thought as I did the necessary. I had already had an enema downstairs. Leonie had whispered before we started my transformation. \"Will you be doing anal?\"\n\nI hadn't thought about it, but it seemed likely. \"Probably.\"\n\nLuckily, I am the sort of strange person that quite likes enemas.\n\nThe bathroom was vast and there were all sorts of contraptions in there. There was a jacuzzi the same size as our bathroom in the basement and the shower cubicle looked like a car wash with jets at all angles on the walls, floor and ceiling. Off it were walk-in wardrobes filled with fine clothes and at the centre, a bath that could double as a training pool for Olympic swimmers.\n\nMy plan formulated, I finished, washed carefully and went back out. As I closed the door, I saw the entire wall was covered in pornographic and erotic pictures, many of them including Vanessa. I wondered if they were only there when she was in residence or whether the other hallowed guests got to see them. I fought down a giggle as I thought of the Queen flying her Royal Standard when in residence at one of her palaces. Did Vanessa deLaunay have her own porn wall to show she was at home?\n\nI walked back to my indicated starting spot. \"Sorry, but has anyone got a phone I can borrow for a moment? I won't get it messy, just another prop to start me off.\"\n\nLeonie handed me hers. \"Need it unlocked?\"\n\n\"No, that's fine thanks Leonie.\"\n\nShe and Roxie picked up their cameras. They had smaller ones strapped to their foreheads. Two more stood on tripods pointing at the bed and another at the leather couch. Vanessa stood to one side, well out of camera shot. I went through my opening gambit in my head once more and nodded to Roxie. I wasn't ready, but would I ever be?\n\nHer right hand counted me down. 5,4,3,2,1.\n\nI took a step forward and the porn career of Keren Green had begun.\n\nI looked at the phone as I moved forward, pretending to read a message, shaking my head sadly as I reached my prop table. \"Oh, you naughty boy -- I was so looking forward to tonight. Don't like being stood up, especially by text. What shall I do now?\"\n\nOut of the corner of my eye, Roxie nodded her approval. I was off to a good start. It didn't take a genius to work out who had placed the props for my delectation. I put down Leonie's phone and opened the silver cigarette case. I pulled out a long, black Sobranie and clipped it into the holder that oh-so coincidentally lay next to it. I lit it using a heavy, ornate lighter and held my head back, so my ponytail fell down my back as I exhaled a long, thin stream. I then picked up the G-Spot vibrator, the last of my three props, and tapped it on my palm as I moved to the window.\n\nI stood for a few moments, smoking, snap-inhaling. I hated it, but Vanessa had been giving me lessons, and it did look bloody good. I stared out at the view for a while as if wondering what to do as I went through my repertoire of moves with the holder. I gave the vibrator another rueful tap on my palm. \"Just you and me then, Spotty.\" I turned towards the couch. \"Again.\"\n\nThis time, it was Vanessa showing me her approval from the wings as I tried to recall what I had done the first time I masturbated for her. I went through the same routine, and Roxie was right -- I just forgot about the cameras even as the two women buzzed around me to secure the best shot. It came naturally and I barely had to think. I cocked a leg over the arm of the chair and began to stroke myself with the end of the vibe, smoke billowing upwards, my fingers on my nipples between pulls on the holder. I warmed to my task and soon my dress was rucked up around my waist and my right breast hung free. I slid the vibe home and left it there, now buzzing and used my free hand to play with my nipple bar. I was getting more vocal and nods of encouragement spurred me on.\n\nAs I turned from lighting my second cigarette, a handsome head appeared at the top of the stairs, soon followed by an oiled body and leather trousers. My heart leaped as Christophe strode towards me, smiling.\n\nI looked up at him and ran a finger around my lips. \"Oh, you naughty boy. First you stand me up and now you interrupt my chill session. What shall I do with you?\"\n\nThe answer to that was to unzip him and blow a long plume of smoke on his rapidly stiffening cock. I ran it around my cheeks as he became fully erect, then the fun really started. Danica had said Christophe had a 'Goldilocks' cock -- just right. She had found Serge a little too large despite his skills and we both relished making out with this great lover who also happened to be a very nice, friendly and charming guy.\n\nUnsurprisingly, I went to town on him and by the time I had finished my cigarette, he was on his knees, lapping at me. I decided lighting another would be overkill and stretched out for a good dose of oral when another figure appeared at the stairhead, similarly attired to Christophe. It was Erich from our more recent evenings with Vanessa. Like Christophe he was also great in bed and a very nice guy into the bargain. The thought of getting it on with these two hunks took my breath away. Leonie tracked him across the floor and Roxie moved in for the close-up. I unzipped him and decided to break the fourth wall. I gazed into Roxie's camera and licked my lips.\n\n\"Looks like my lucky night after all!\"\n\nI took Erich in my mouth as Christophe worked on me and realised that our earlier sessions were something of a rehearsal and their inclusion certainly helped the little newbie to settle in very nicely.\n\nWe had a lovely, long oral session where we tried every combination we could come up with. I could have gone on all night, but in one of the few directions I got that evening, Vanessa pointed to her watch, then towards the bed.\n\nOk, it was my choice what happened next and I was hardly going to turn down the chance of these two hunks double-teaming me. I took them both by the hand and led them to the bed.\n\nI turned to Roxie's camera once more. \"Excuse me a moment, but I'm going to have to get lubed up if these two gentlemen are going to DP me.\" I held a hand over the camera lens and gave a wicked little laugh.\n\nI put up my hand. \"Sorry, just need a strategy break. Who's got the lube.\"\n\nOf course, Vanessa did the honours. Leonie was beaming, the guys looked very happy and Roxie told me I was acing it so far. We had a quick brain-storm and decided how we would play it out. I wasn't that experienced with it, but I already loved DP. Given my inexperience, I thought it best to choreograph it first rather than go in without a plan.\n\nWe resumed the recording with me taking my hand off the lens again. \"Welcome back. You're just in time!\" I was now naked, my lovely dress a long way from the action so as not to mess it up. Erich lay beneath me and I sank down on him, easing my buttocks up to enable Christophe easier back-entry. He was halfway in when my third surprise of the night appeared on the scene.\n\nThe first time Danica walked in on me having sex led to where we were now. This time, she looked daggers at me from the top of the stairs, her hands on her hips. There appeared to be a chain in her left hand. She wore a leather sheath dress that barely covered her modesty and there were only a few centimetres of skin visible between the hemline and her thigh-length boots. There was a red flower in her hair and I almost had to fight back a tear that she was there and looked so stunning.\n\nVanessa was right -- she was such a good little actress. Her booted foot stamped on the floor and she gestured to my two would-be lovers. \"Two of them? You always, always overdo it, always the greedy one, huh? Very greedy indeed.\"\n\nMy heart sang as I replied. My lovely little Supernova was about to join me in our first ever porn scene together. I recalled her words from our first time. \"There's room for a little one!\"\n\nShe sneered indignantly. \"No thanks, got my own entertainment.\" She hefted her chain and tugged on it. \"Come on, Nathaniel. Be a good boy -- plenty of room for us on that nice big bed.\"\n\nErich and Christophe began to move in me as Danica walked across the floor, the chain over her shoulder, heels clicking. She whistled nonchalantly and tunelessly. Behind her was a large, naked black man with beaded corn rows similar to Leonie's but much shorter. He looked like an Olympic athlete. As Danica passed, she poked her tongue out and thumbed her nose at me. Ten seconds later, my girlfriend was going down on a very large black erection inches from my face as two French guys double penetrated me.\n\nIn sheer joy, I sent out a silent shout to Tasha to tell her that yes, there was more to life than we had ever dreamed back then. I was living the dream and I couldn't be happier.\n\nAt least I thought I couldn't. When Nathaniel was fully erect, Danica looked up at me. \"You're already very greedy. Suppose you want to be very, very greedy, don't you?\"\n\nMy grin said it all and I took the gorgeous cock in my mouth for my first ever full-house. As debuts went, I thought I was doing rather well.\n\nI was glad it was being recorded as the next twenty minutes went by in a blur as Danica and I got fucked from all angles. Nathaniel's cock was a wonderful contrast to her pale skin and fair hair and I could have watched them all night as she took him all the way, her lips stretching, her cheek bulging. She was in her element and so was I and I was so happy we were doing it together. Vanessa's smile as she leaned on a pillar by the window said she was happy too.\n\nAfter countless shifts of position and configuration, we came, facing each other, Erich in me, Nathaniel in her, Christophe's erection gliding between our lips. She still had her leather dress on, now more like a belt, pulled down below her breasts and up around her waist. As we screamed into each other's mouths, Christophe pulled away and unloaded onto our ecstatic faces. We kissed and sucked at each other in orgasmic bliss as the two guys pounded into us, then slid off in a tangled, exhausted heap, cheek to sticky cheek.\n\nLeonie saw the possibility as we lay together and signalled us to move apart. When we did, a long string of cum extended between us, getting ever longer as Danica's eyes widened in wonder. We moved slowly to see how long we could get it to go and I shivered in delight as it finally broke and dribbled down between Danica's breasts from her chin.\n\nShe then took Erich in her mouth and as he came, pulled him out and he unloaded onto my breasts. I did the same to Nathaniel and his load almost took Danica's head off and she squealed in delight as I moved in for the second spurt. We were there a very long time and the last ten minutes of our porn debut were spent licking and lapping at each other until almost all of the mess was gone. Both camerawomen were on their knees getting close-ups and Vanessa stood behind them. She signalled for us to smile and wave to the camera, which we did and gave each other a final, long, sticky kiss.\n\nAs the guys moved away downstairs, Vanessa let out a long, satisfied sigh. \"And... fade to titles. What did you make of that, ladies?\"\n\nThe women stood and switched off their cameras. Leonie took hers from around her head and put them on the couch. Roxie rubbed her knees. She had been in position for quite a while. She looked down at us, shaking her head in astonishment.\n\n\"All I can say is, clean them up and let me loose.\"\n\nLeonie jerked a thumb at her. \"What she said. Fuck, I know there were guys involved, but I'm fucking dripping here.\"\n\nVanessa was silent for a long moment and Danica and I looked up at her wondering what she was thinking. \"I haven't got the words, girls. The guys were amazing, but you two little bundles of joy -- you have just made your first porn movie and I guarantee it is going to be a stone-cold classic.\"\n\nThere was always a 'but' with Vanessa. \"But now it's time to go back to the day job for a while.\" A finger pointed to the bathroom. \"So go and clean up in there, then please go and retrieve that champagne from downstairs while we three ladies have us some fun of our own before we do a playback.\"\n\nDanica helped me up and we staggered into the bathroom like Bambi on ice. I took her in my arms and began to shake. \"What have we just done, Supernova?\"\n\nShe sniffed back a tear. \"We're porn stars, Greenie. She came through for us. I love you babe!\"\n\n\"I love you too, you mucky little pup. Come on, let's get these boots off, get cleaned up, get some bubbles down us and get back into the action.\"\n\nIt took us a few minutes to work out how to use the car wash but when we did it was great fun and the excesses that we had not been able to remove from each other manually were soon sluiced away, down into the Mediterranean. We dried each other with towels the size of beach blankets and when we emerged back into the room, the action was in full swing.\n\nWe tiptoed past them and went downstairs. There was no sign of the three guys. We poured ourselves two glasses and toasted our new career, then ferried the buckets upstairs. Despite being in the fridge, most of the ice had melted and they were now full of icy water. The three women were oblivious to us. Roxie was intently fitting a strap-on and Vanessa was on all fours, licking at Leonie, her buttocks raised towards us.\n\nDanica looked at the ice buckets, then at Vanessa, then back at me. Her tongue was firmly in her cheek, eyes wide. \"Shall we?\"\n\nIt was just too tempting. Danica picked up the bucket and I took the bottle from it. We both moved behind Vanessa and stood, poised. Roxie looked up and saw our intention and a wicked smile crossed her face. She pointed to one of the small head-cameras on the couch and held a finger to her lips. I tossed it to her and she switched it on. As she had done to me earlier, she counted us down.\n\nOn the count of one, Danica tipped the bucket over Vanessa's back and I rammed the bottle up inside her, giving it a good shake. She went rigid, screaming into Leonie's pussy as the girl rocked with laughter and squealed as she too got a good soaking. Champagne fizzed from Vanessa's crack and Danica ducked down to gobble at it greedily. I gave the bottle another shake deep inside her and had a damned good drink myself as Vanessa thrashed and wriggled beneath us and the wine poured out of her.\n\nShe finally extricated herself and looked up at us shivering, a huge grin on her face. \"You two will pay for that. Oh, fuck I love you girls. Come on, let's have a fucking party!\"\n\nDid we ever have a fucking party, and for the next hour we almost forgot about our playback as five women cavorted on a soaking wet bed and drank champagne from damp, dark crevices. Roxie was relentless with her strap-on and Leonie was a pneumatic box of tricks with the most adorable, pierced pussy. I was almost tempted myself.\n\nWhen we finally got around to seeing our work from earlier, Danica and I held on to each other for grim death as it unfolded. She had seen it all on CCTV downstairs before she joined us and as the final scene faded out, Vanessa raised her glass and we all toasted the hoped-for success of our joint venture. We had only seen Roxie's footage. When Leonie's and the still cameras were factored in, it would be even better.\n\nDanica put a finger to her lips as if in thought, looking at me intently. \"So I'm gonna be Danni Supernova. Who's she gonna be? Keren Green's a nice name, but it's not porny enough.\"\n\nVanessa's idea of 'Newquay Nookie' got a laugh but no votes. Danica tried 'Kerri Pornwall' to no avail and we sat drinking and thinking for a long time. Eventually, it was Leonie who gave me the name that I would go on to use in my movies and on stage.",
        "\"What is your middle name. Usually a good place to start.\"\n\n\"Morwenna.\"\n\n\"Ooh, nice. A bit of mystery to it. Right, you made your debut at Sur la Mer, so therefore I propose votre nom du porn is... Morwenna de la Mer.\"\n\nIt was unanimous and I resolved to spend a lot of time with the lovely Leonie before she went back to wherever she came from. I had a lot to thank her for.\n\nVanessa held her glass aloft once more. \"Again, to the success of the latest deLaunay/Rimbeau production, My Lucky Night starring the delicious talents of two wonderful newcomers to the industry, Danni Supernova and Morwenna de la Mer!\"\n\nWe hadn't noticed Roxie sneak behind us during the toast.\n\nThis time it was Danica and I squealing as the last two ice buckets were emptied over us. It took a long time to get warm again, but boy was it fun!\n\nEpilogue\n\nI take a moment to look out over the scene around me and still cannot take it all in or believe I am now part of this world. The last two years have been an utter revelation and I have to pinch myself when I realise how far I have come.\n\nTo think that a waitress from Cornwall could set off on a holiday with a friend, then meet the love of her life and become what I have become is the stuff of fairy-tales. That two horny little waitresses in a French hotel could almost accidentally fall into each other's arms, then into the clutches of an enigmatic, wealthy lady who took a shine to them.\n\nI have only been back to Cornwall once. I didn't bother to go home. When they found out what I was, they disowned me. That was fine -- I should have disowned them years ago. I have shamed the family apparently. Not that they shame themselves on a daily basis of course.\n\nI went back for Tasha's wedding. She and Richard are so happy and they are expecting twins in a few months. Despite her wild youth, all she ever wanted was a good husband, kids and a decent job. Soon she will have all three and good luck to her. She's still my best mate and I love her dearly, and she is so happy for me. She can't watch me -- too close to home she says, but she wishes me well.\n\nI will make my sixth movie tomorrow, with a Polish girl called Kasia and a certain Christophe. We seem to have developed a chemistry together. Danica will be doing her seventh in a few days, with the lovely Leonie who I am delighted to say we have tempted out from behind the camera. We have been giving her plenty of practise recently and I am doing the honours on second camera. Well, a girl should have a few strings to her bow after all. Roxie has been tutoring me and given that she has a penchant for face dildoes, paying her for her expertise is hardly an onerous task.\n\nDanica's diary is getting booked up nicely and a few more shoots are in the offing. I have another planned with the lovely Nathaniel and I can't wait to do my first smoking fetish shoot. That one involves a Sybian ride and some restraints. I'm pushing my comfort zone with it, but what the hell. I've been pushing it for two years now and it is going quite nicely.\n\nWith her wide-eyed innocence, Danica seems to be getting the 'young babysitter seduced by an older woman' storyboards. Her last one was a forty-year old teaching her how to blow her boyfriend. Fuck is it good?\n\nMy slightly darker looks and my new-found penchant for leather and latex means I am getting slightly grittier stories, as my Sybian scenario will testify. How far I go down that road is in my own hands. As Vanessa says, we will never be coerced into anything.\n\nDanica and I have our own place now and we still work weekend shifts at Sur la Mer. We love the buzz of it, the period feel, the excitement. And after all, there are still quite a few rich friends of Vanessa's that frequent the place and are looking for a little something extra after hours.\n\nWe live a couple of kilometres away on the mainland. We haven't got a sea-view yet but if I stand on a stool in the kitchen and hang out of the window, I can just see the penthouse suite in the distance. I'd have to hang on to Danica's ankles for her to see it. Hanging onto her ankles is not usually an issue for me but given the danger of her falling from the second floor and the fact she's seen that penthouse many times from inside and out, it is not worth the risk.\n\nWhen I open my side of the wardrobe and part my clothes, a picture of Danica's wide-eyed, cum-glazed face stares out at me. On her side is a picture Vanessa presented us with when we moved in. It is taken from my audition with Serge and depicts the moment the first drop of cum hits my left cheek. My left eye is closed, the right wide open and my tongue pokes out from between my lips. My face is contorted with lust and excitement. Hopefully one day we will have a porn wall to match Vanessa's.\n\nI am shaken from my reverie as more racing cars emerge from the tunnel across the harbour, opposite to where Vanessa's yacht is moored. The noise is ear-shattering even at this distance as they swing along the harbourfront and back through the pit lane and up into the town at frightening speed.\n\nNot for the first time, Danica clamps her hands to her ears. \"Too loud. Danni no like Grand Prix. Hurty ears.\"\n\nVanessa pulls on her holder and gives her a look. \"You liked the Grand Prix last night when that racing driver was banging out a few revs on your delectable bodywork.\"\n\nKasia laughs. \"Don't build him up, Vanessa. He was only a test driver for a team without a single point to their name all season.\"\n\nDanica pouts sadly as Vanessa glances down at the race on her iPad. \"One lap to go, darlings. The race is nearly run. Your delicate little ears will soon have some respite, Miss Antonova.\"\n\nI chip in for the first time. \"Unlike her delicate little pussy.\"\n\nVanessa stirs. \"Indeed. Very soon, three silly men will be wasting damned good champagne to show off their prowess in driving fast cars. There will be no such sacrilege tonight when the bubbles are uncorked and we begin to show our guests our prowess in a much more pleasant pastime. Let's go, kids -- it's nearly time for Vanessa deLaunay's legendary post-Monaco Grand Prix party!\"\n\nThere are ten of us. Four boys and six girls, including Vanessa. She is getting paid a vast amount for well-heeled guests to mingle with porn stars and high-end escorts and we will be getting paid a lot of money as a result.\n\nWe head below decks and I get changed into my favourite dress -- the one from My Lucky Night. . Danica is in her leather one from the same shoot. I tell her she looks sensational and she tells me I do too.\n\nI take her in my arms. \"Love you, Danni Supernova.\"\n\nShe rubs her nose against mine. \"Love you too, Morwenna de la Mer. Shall we go knock 'em dead?\"\n\nSo men and women pay us to have sex with them. So we get paid to have sex with men and women so people can watch us doing it.\n\nSo what. So fucking what.\n\nIf you don't like it, go fuck your narrow-minded, bigoted selves.\n\nWe'll fuck the rest. For a price of course.\n\nSo thank you for listening to my story. Keren and Danica's little voyage of discovery. It's been a blast and it is great to know that sometimes, there really is something more out there than a mundane existence.\n\nAfter all, whether it is on an idyllic island or on a luxury yacht, there really is nothing better than fucking Sur la Mer.\n\nAuthor's Note\n\nI'm going to see how this one goes first, but I have a sequel planned, based on a few lines towards the end. I like these characters so hopefully they'll all be back soon. "
    ],
    "authorname": "BarracudaSwordfish",
    "tags": [
        "lesbian",
        "group",
        "mature",
        "smoking fetish",
        "british",
        "france",
        "cum play",
        "porn star",
        "threesomes",
        "foursomes"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/sur-la-mer"
}