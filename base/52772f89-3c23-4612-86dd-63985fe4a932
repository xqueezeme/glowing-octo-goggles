{
    "title": "Breast Suggestions Ch. 09",
    "pages": [
        "A man uses a special Powder of Suggestion on his well-endowed neighbor.  Please send comments via the CONTACT tab on my profile. I need them to know where/how to continue.\n\n*****\n\nChapter 9: Becky and Barbie Go Back To Work\n\nAfter watching a movie on the couch, the trio were starting to fall asleep. Barbie excused herself as she had to work in the church gift shop the next morning. She looked rather funny with her shirt barely buttoned back on, her breasts had expanded so much during the night it was a struggle to button up. Her buttons were strained to the breaking point in the middle and she was in such a hurry, and feeling so ashamed, that she didn't even tuck her shirt in. She left with a kiss to her sister and a quick, almost embarrassed hug for her new friend Chris. She loved him, but felt nervous being around him at the same time. Barbie hurried off home.\n\nBecky and I were quite exhausted and she, feeling a burst of properness and conservatism suggested I sleep on the couch. Unmarried couples shouldn't sleep together, after all. That wouldn't be proper, she thought. My cock was rather sore from all the sucking and forceful fucking that I simply excused myself and went back to my house for some serious shut-eye.\n\nThe next day, Barbie tried on quite a few pieces of clothing but nothing fit her right in her chest area. She wasn't surprised at all because she even felt different in her bed last night. Her breasts were firmer and a bit larger and tossing and turning in bed was a bit of a new experience. Her nipples rubbing on the bed sheets too was quite different. She was determined to buy some new, softer bed sheets. Maybe flannel or extra thin Turkish cotton was what she needed. The rubbing and stimulation on her nipples was very distracting indeed and once, in the middle of the night, she almost started to pleasure herself right there in her bed. \"What had become of her?\" she thought. \n\nBarbie knew she'd have to go to the clothing store right after work to get some more bras and probably quite a few new tops. She was at once torn between finding clothes that hid her newly swollen breasts and nipples versus clothes that would totally make men flip out with lust. That Busty website she looked at certainly left an impression in her mind. She also wanted to go to a sexy lingerie store to buy quite a few sultry outfits, though she was not sure yet where on earth she would allow herself to wear them. \n\nBarbie felt very self-conscious and confused indeed after having had sex for only the second time in her life last night and loving it. The feeling of a very large stiff cock filling her young pussy and rubbing against her special little clitty was something she could not but admit that she really enjoyed. She had sex right there in her sister's living room too, and with a complete stranger! She just couldn't believe all that had happened and thought it was a dream, but knew that it wasn't. \n\nThe extra sensitivity in her nipples was also a new experience. They seemed hard almost all the time now. She had to wear something to hide them for work and that wouldn't show off her big juicy tits either, I mean her recently swollen new bosoms, she thought. She chose a loose pull-over dress with buttoned up the front going down to her waist. It was loose enough that nothing really showed through but her thick cotton bra, the largest size she owned, felt rather tight and the straps were hurting her a bit. She wondered if she could make it through the day dressed this way.\n\nHer sister Becky also went off to work at the library so Chris had time to make some more plans. He ran to the store and bought more tiny surveillance cameras and put more of them in Becky's house. He thought if the neighbor kids came by again he could catch the show in any room they went to, especially her bedroom. Then, he thought he would go and visit both of them at work that day. He went to Barbie's gift shop first and was greeted with a restrained handshake by her. She was happy to see him, but nervous and embarrassed at the same time. Chris wasn't worried.\n\nBarbie showed him their big collection of Jesus paintings and jewelry, especially fancy crosses for women to wear across their chest. They had books and all sorts of things. While Barbie greeted a customer, Chris went into the small office there and set up a camera. He was sure that at some point her milk-laden breasts would simply demand to be emptied and she was bound to take someone there to assist her. Once she was relieved, no hormone-ridden man would be able to resist fucking her brains out either. What with a body as fucking hot as hers; so petite and young and thin and, well, busty as hell too!\n\nOnce the customer had left Chris approached Barbie and asked her why she wore a dress that hid her God-given body; her perfect and firm curves. As she explained that it just wasn't proper to show herself off at the church gift shop of all places, he reached up and grasped both of her hooters in his hands. She almost pulled away but allowed his grasp knowing that she must follow his directions. She felt nervous that someone might see them. She even felt a bit sweaty, but then, she also felt tingly in a good way. He felt for her nipples but could only barely detect their firm bumps through the very thick cotton bra she was wearing. He knew that would change, it would just take some time. \n\nHe released her breasts and thought, rather than attacking her here in the church, he would monitor her to see how she was going to deal with her need to nurse from her swollen breasts when the need became too unbearable. He also wondered how she was going to quell her desire to emulate those luscious babes like Rachel Aldana, whom she looked very much alike though not quite as cumbersomely overly large breasted as her. Yes, Chris had many pleasant memories laying ahead of him with luscious Barbie.\n\nChris gave Barbie a quick peck on the cheek and went off to visit Becky at the college library. As he was driving there with his bag of hidden cameras, his laptop notified him there was activity in the office at Barbie's gift shop. He quickly pulled over to the side of the road to watch. \n\nWith the new swollen size of her tits, Barbie just couldn't stand how the straps of her brassiere were digging in to her shoulders anymore. She just HAD to take it off and relieve herself. She knew that her loose dress would not reveal that she was topless beneath and she looked forward to doing some clothes shopping after work anyway. \n\nBarbie went into the office and unbuttoned the long dress down to her belt and slipped her arms out of the sleeves, letting the gown fall to her waist. As chance would have it, she was facing directly at the camera as she then reached behind herself to undo the straps. This thrust her swollen bosoms in a most obscene manner right towards the gaze of horny Chris. She unclasped her exhausted brassiere and quickly let it fall off her shoulders. There they were. Her perfectly round and milk-filled bosoms barely wiggled as she moved. The cool air instantly making her thick nipples rise to attention. Chris was sucking on her in his mind. \n\nBarbie then buttoned up her dress, completely braless, and returned to the counter. She felt much more comfortable but a bit self-conscious that maybe someone would notice as she moved around so she posed a bit in front of the mirror to look at herself. If she turned in a certain way, the dress would indeed be stretched over her taunt nipples and reveal them to anyone's roaming eyes. Even though they were as firm as natural breasts could possibly be, they still jiggled somewhat if she walked around. It was not a salacious display, but if you were a breast lover, you would be sure to notice something was going on. \"Oh well\" she thought. You can't control everything and her work day would be over in a few hours anyway.\n\nJust as luck would have it, young Tommy came by the gift shop. He was the parson's son and was always hanging around the church. His job was to clean up like a janitor and help around as needed. Tommy was only one year younger than Barbie and they used to play silly games together during church service. Having just reached the age of puberty he was beginning to really take note of women's cleavage, bare arms and legs and, at times, the jiggle of their breasts or the pointed protrusions of their erect nipples. Tommy tried not to notice such things and to read his bible as his father wished but he too had an internal struggle that was simply hard to reconcile. \n\nPoor Tommy, when he came into the gift shop he saw Barbie who just happened to be stretched to one side looking for some boxes. This strained the fabric of her dress over her breasts a bit and he clearly saw the outline of her nipples poking out. Tommy cleaned the floor as he normally did but he started to really take his time about doing so. He would sneak glances at her as she moved, or rather jiggled around, from time to time. He lingered at the shop quite a bit longer than he really needed to while fantasies developed in his mind. \n\nKnowing that if he stayed around any longer it would seem a bit odd, he asked Barbie if they could play Patty Cake like they used to, for old times sake. Barbie said \"Sure\" and while they stood in front of each other they sang the little song and slapped their hands together. They would clap individually, then slap opposite hands together and, at times, both hands together at once. Well, he waited for the next time they were to slap their hands straight forward, their hands intending to meet, and he intentionally slipped and allowed both his hands to rest on her breasts with a gentle smack.\n\nWow, but Tommy was in for a surprise. He instantly felt both her big breasts and pointed nipples and realized she had no bra on whatsoever! Tommy was freaked out, but in a good way. He quickly said excuse me and continued to finish the song with her as if nothing odd had happened at all. Barbie thought it was silly and didn't raise a fuss either. Tommy left the shop and immediately rubbed his cock as he replayed the events over again in his mind. He hoped nobody would notice him.\n\nAs the day progressed Barbie was feeling more and more horny. She didn't realize it, but all the chafing and rubbing of her free swinging breasts and nipples within her dress as well as the slowly building pressure of her new milk production was building her arousal level within her. She daydreamed a bit about how she was going to release the milk that was developing in her breasts. She thought that maybe she could find a special older man who would keep her needs a secret or, maybe she needed to develop a relationship with a much hotter younger guy, if he could just keep a secret. She was nervous about younger guys, but loved how hard their cocks got. Her thoughts were leaning more and more in the direction of finding a young lover, one that she could trust. \n\n* * *\n\nBecky arrived at the library around mid-morning that same day. She had plenty of work to catch up on and, due to the effects of the alcohol the night before, she was feeling more and more self-conscious with a strong inner turmoil being developed between her conservative nature and her new role as a pleaser of men. She dressed today in one of her regular thick bras and a pink cotton shirt buttoned all the way up. Little did she know but, she had built up quite a reputation in school and the library carousels were rather filled with horny young men. \n\nIt wasn't long before young Phillip came up to the desk to ask her if she could help him find a book. In fact, he didn't need any research material at all, he simply wanted to feel her big tits again and see if he could fuck her hard in the library aisles somewhere. He remembered her dress that zipped all the way up the front and how he had unzipped it and ravished her tits and then fucked her hard right in the aisles the other day. Becky certainly recognized him and that made her feel very nervous and self-conscious. She remembered the feeling of his young hard cock inside of her and of his manhandling of her big tits yet she was not brought up to act that way. She was determined to keep things proper and above board with him.\n\nOf course Becky complied with his request to help him find a book on melting glaciers in Alaska and she brought him to the aisle where they were kept. Phillip had a half-hard cock just looking at her nicely shaped ass as she walked and the bulges beneath her delicate blouse. Once he got her far away from roaming eyes, he asked her if he could touch her again. \"I want to squeeze those big tits of yours again.\" he asked. Becky, knowing that this was not a suggestion, but rather a blatantly lewd request, responded defensively \"You most certainly may not. How could you even ask that?\" \n\nPhillip was perplexed, remembering how fantastic the quick fuck he had with her only a couple of days ago felt like. He then pushed the subject, \"But I want to feel that hot pussy of yours again and kiss your juicy lips.\" he said this more for his own pleasure rather than trying to get her to agree with him. Becky quickly replied, \"You most certainly may not and I don't want you speaking to me in such a lewd manner. You need to change your tone with me or I will call for assistance.\" \"But I'm just so in love with your big thick nipples!\" he exclaimed.\n\nPhillip was frustrated and almost angry, but fearing he could get into some big trouble with the admin's at the school, he recanted and backed off. \"Weird bitch\" he thought, and he left with his book frustrated and horny, but then that was the way his life was going these days anyway, he thought.\n\nBecky, trying to forget about the impropriety, went about unloading her book cart in the aisles and then Johnny came up to her while she was putting some books away. Johnny remembered how he and his friend Genie had tag-teamed her and fucked her silly right in the library without being seen. He loved the feel of her thin waist and her fucking soft, huge tits. \n\nTaking an approach similar to last time, but doing it alone, he didn't say anything to her at all by way of an introduction and simply reached around her from the backside and quickly undid a couple of buttons in the middle of her blouse. He wanted to ravish her again.\n\nBecky was very shocked and taken by surprise by his assault. She immediately got very defensive and told him, \"Stop that this instant or I will call the authorities.\" She had no idea who she would call, but she did know that this was not a proper way to act. Johnny was perplexed and very horny. He told her, \"But just yesterday you let me fuck you right here in the aisles. I need to fuck you again you've got such nice big tits!\" Becky was really in turmoil now. She new this was an assault and was totally unproper, yet she also heard that he needed her. She remembered that she had a duty to service men and to fulfill their needs, yet something was wrong about all this. It wasn't right for her to be groped right in the aisles of her library.\n\nAs Becky was dealing with her inner turmoil, Johnny reached out and started groping her tits again but through the material of her blouse. Sadly for Johnny, Becky reached up and swatted his hands away and said \"No, you musn't do this. Who do you think I am?\" as she quickly scurried away, returning to the front desk, not even recalling that two of the buttons in the middle of her blouse had come undone. She continued to work as if nothing had happened.\n\nFinally, Gary came up to her desk. Gary was an overly horny guy, addicted to Playboys, who had only kissed one girl once and then, just the other day, he accosted Becky and grabbed her tits. He sucked on them wildly while he humped her leg, soon to be assisted by Becky's hand. He had the most fantastic orgasm of his life with her. Of course, he didn't even know what full-blown sex would be like anyway. \n\nHe quickly noticed that a bit of her blouse was open and he could peak in to see a tiny bit of her bra. That tiny view was extremely exciting to him. He just couldn't believe that she would walk around like that. It is very, very rare that a woman, especially one with big tits, would walk around with part of her blouse undone. \n\nFrom some stroke of luck, Gary stumbled upon the right words to get her to react. He was actually feeling rather 'cocky' to be honest. He clearly remembered his little conquest of this babe just the other day. He, like the others, asked if she could help him find a book or two down a remote aisle. \n\nHe then boldly told her, \"You want me to rub your tits again, don't you?\" That way of speaking clearly qualified as a suggestion and suggestions were the paramount driver of the Powder of Suggestion that she had been exposed to. \n\nDeep inside Becky wanted to also resist him, but her brain was solidly programmed to comply with any suggestions, so Becky was stuck there racking with inner turmoil. Finally her brain overrode her shame and she tentatively responded, \"Why yes, I'd really like for you to...um...\" \"Um what?\" Gary asked, sensing some twisted thing was going on inside of her and wanting to capitalize on her dilemma. He really wanted to do nasty things with her. \"Um...I'd really like you to...um...suck on my tits!\" She finally exclaimed. \n\nGary could not have been more delighted. He reached up and firmly grabbed both of her jutting tits and squeezed them like the fun bags they are. Becky did like that feeling and she got into a dreamy state for a bit. He only briefly squeezed her big tits because his fingers were anxious to find their way into her slightly open blouse. He undid only two more buttons because he couldn't wait to feel those tits again. With a total of four buttons open he now could slip his hands inside her blouse and squeeze her big tits through her heavy bra.\n\n\"You mean you actually want me to suck on your big mellons. Your fucking big tits?\" he suggested once more, wanting to convince her, as well as himself that this was all true. \"Oh...yes\" she replied dreamily. In fact, even Becky's hands got into the act and found themselves unbuttoning more of her blouse. Soon it was open all the way down to her navel and her front-clasp brassiere was exposed to Gary's manhandling.\n\nMeanwhile, Gary's cock was rock hard and he simply HAD to adjust himself. He reached down and unzipped his zipper while his other hand was busy squeezing her big tits. He even flicked her nipples as best he could through the fabric of her bra while he also guided Becky's hand into his now open pants.\n\nBecky instinctively grasped his hard manhood while Gary instinctively unclasped her brassiere. Her bra easily burst open revealing her fantastic melons to his hungry lips and hands. Gary squeezed her milkers as Becky squeezed and stroked his super erect cock in his underpants.\n\nAfter several minutes of mutual groping, Becky said, \"We need to get him out.\" referring to his hard cock. Using both her hands she was able to pull his underwear down within his pants, exposing his throbbing member. \n\nGary bent over and started sucking and sucking on her nipples while both his hands squeezed her tits. Becky kept one hand on his cock while she steadied herself with the other.\n\nGary wasn't sure what he was supposed to do with such a fucking hot woman giving him full access to her body. He thought about shoving his cock between her tits, or maybe in her mouth, and also thought about pulling her panties down and shoving his cock into her pussy. Finally, he was completely certain he needed to simply fuck her in the traditional style. He wanted to fuck her right up against the book racks and fill her willing pussy with his cum. He was dying to loose his virginity, but he was also really scared he was doing something wrong, or maybe she would just slap him and scream for help.",
        "Mustering up all his bravery, Gary slipped his hand up Becky's skirt to her panties and found them rather moist with her own love juice. Becky continued to squeeze his rock hard cock as Gary rubbed her pussy and then started to slip her panties downward. Quickly he realized he simply had to release her tits to pull her panties further down below her knees. \n\nBecky did not relent on tugging on his cock; squeezing and rubbing and pinching it. She was fascinated by hard cocks. Gary was delirious with lust at this point and, luckily with Becky's help, he was able to guide his cock into her juicy pussy. Being rather short like Becky he was able to lean over and latch onto one of her long thick nipples with his lips as he grasped her by the hips and thrust his cock deep into her. \n\nThe two of them started up a rhythm of pounding and fucking against the bookshelves while he continued to suck on her firm hooters. \"God was she stacked!\" he said to himself. Every sensation Gary ever dreamed of feeling was overwhelming him at this point and he tried his best to make this moment last. He kept pounding her, rubbing against her clitty as she kept thrusting into him. Becky loved the sensations. Gary couldn't believe how deep he was impaling her with his love stick. He kept pounding and pounding and pounding against her for well over five minutes until Becky started to whimper and pant.\n\nGary, not wanting anyone to hear them, released her breast and started to deeply French kiss her to muffle her screams. Becky squeeked and squealed and panted into his mouth as she climaxed a most beautiful and intense climax. As she desperately whimpered into his mouth, Gary felt impassioned with love. He was so excited and fulfilled, finally fucking like a man. He felt like he was in love with her and he simply didn't know what to do next so he just kept on fucking her for all he was worth. He kept kissing her and pounding her and kissing and thrusting his hard cock into her wet pussy. He grasped her big firm tits with one hand and kissed her one last time as he thrust into her, deeper than he ever had before, and then he shot his load. He pumped and thrusted into her seven or eight more times, ejaculating more and more love juice into her each time. She was filled up and wet. He was spent. They both were in true bliss and didn't want to loose this moment. They both continued to kiss and hold each other.\n\nAfter their mutual orgasms, Gary was out of breath, as was Becky. His cock slipped out of her and he tried to put it away before anybody noticed. He felt very embarrassed and also very lucky at the same time. Becky slid her panties back on over her slippery legs, wet with both of their love juices. She loved what just happened. She could imagine having a true relationship with Gary. She didn't even know his name.\n\nGary then was smart enough to quickly write down his cell number and pass it to her. \"Please call me\" he said. Once they both were dressed again, Becky didn't bother buttoning all of the buttons of her blouse, only just above her bra line revealing a lot of cleavage. Gary told her, \"You want to meet me again, don't you?\" Becky smiled and said, \"Of course I will.\" Gary only thought about having another chance to suck on her big fucking tits for much, much longer. He was in fucking bliss!\n\n* * * *\n\nThe next morning Barbie woke up with rock hard tits. They were quite filled up with her new milk supply and she knew she was going to have to do something about it. She worshiped God but, looking in the mirror to see her new womanly body, she also knew and believed that she was finally a complete woman, a woman destined by the Lord to nourish men. She just didn't know how to go about her new tasks without acting like a complete slut.\n\nBarbie had gone for some needed clothes shopping after work the previous day. Her larger bust just didn't make it comfortable to wear any more of her bras. It was difficult for her to even decide what to shop for because she wanted to dress normally and conservatively for when she would be at the church, but she also wanted to explore all the wonderful sexy outfits that those women of that Busty website wore. She wanted to live her new life as a sexy busty woman who nourished men with her warm motherly nectar. Those outfits were very sexy indeed; they were outright racey, sultry, alluring and, well, downright slutty. She had to go to a special shop for those clothes. She was completely and totally embarrassed as she went to the cashier and saw out of the corner of her eye Mr. Johnson from down the street. He caught a glimpse of her buying the slutty apparel while he was getting a new jackoff cup. He had worn his old one out. He immediately recognized her as his neighbor Becky's sister. \"Wow\", he thought.\n\nSo there Barbie was at work again filled with inner turmoil and that was even evident by the way she dressed. Outside she had on a white skirt that stopped a bit above her knees and a thin white knit blouse that was slightly tight on her and looked very flattering for her figure but was not out of normal at all. Beneath these clothes, she had on a bright pink brassiere and G-string that would get any man's cock hard as a rock in less than a second if they saw it. Her bra displayed her big tits like family treasures and had a simple snap in front so it could pop right off when needed. Barbie knew that she was going to need to nurse someone today. She even wanted to.\n\nBarbie was very pre-occupied at work because she just wasn't sure how she would choose a man to help her with her 'special' situation. It was clear she wanted to be chaste, but at the same time she needed to find someone to help her reduce her needy tit flow; her nipples needed leaking; she needed to nurse some lucky guy. She needed to care for and love some lucky man and she needed to do it without developing a reputation as being a harlot or a slut.\n\nAs luck would have it, Tommy's dad the pastor, asked him to come in early to fix some things in the kitchen. Tommy noticed busty Barbie had arrived also. He noticed something a bit different about her in that her blouse seemed somewhat packed tightly with her big set of hooters. He got horny all over again, even after masturbating that very morning to images of a busty teen with her tits fully exposed. He hoped and prayed that God would know his needs and give him a set of tits to play with. He even put a dollar into the wish bucket at the front of the church this morning. \n\nTommy fixed the silly leak in one of the faucets in the kitchen and went looking for his dad. He passed by the gift shop and couldn't help but stop in to see if his childhood friend Barbie needed some help. He really just wanted to drink in the sight of her young body and wonderfully busty chest. He had never seen her in anything close to a tight-fitting outfit and it gave him something to ogle to feed his fantasies.\n\nBarbie, knowing that Monday mornings were exceptionally slow and that maybe now was the time to make her moves on a man, welcomed Tommy with a smile. She noticed what a rather tight butt he had. She liked men's butts. She had always thought he was cute but never thought of doing carnal things with him until this new need of hers started to rise within her; this new feeling of womanhood. Barbie asked Tommy to come into the small office where she had a problem. Her 'problem' was that she had some very needy nipples that needed a good sucking on. \n\nTommy gladly obliged her following her shapely ass and treasuring any extra moments he could get to be close to a big set of tits like hers. Once they were both in the tiny office, Barbie turned away from him and said, \"I really appreciate you keeping an eye on me and helping me out here at the gift shop Tommy. I'd like to thank you in a special way if I can.\" While she said this, and not facing him, her fingers were busy unbuttoning her blouse from the very top all the way down to her waist. She then said, \"I've also noticed Tommy that you keep staring at me.\" Tommy immediately felt very self-conscious, almost embarrassed, and wanted to run away but he remembered that she was saying she wanted to actually thank him.\n\nTommy said, \"Sure, um, well...\" He couldn't think of what to actually say to her but if she didn't seem to take offense at him staring at her body, he was not going to complain either. Barbie continued, \"I actually think you keep staring at my b..ba...breasts.\" With the mention of her breasts to him, the big firm objects of his desire, he immediately got rock hard in his pants. \n\nBarbie then turned around towards him, exposing her lovely new transparent bra and very full tits to his lustful eyes. \"I'll bet you'd like to see my breasts closer up, wouldn't you Tommy?\" He couldn't believe this. His dreams had come true. Tommy was quick to respond, \"Yes. Yes. Oh yes I would.\" Barbie continued, \"Do you like looking at my large breasts? They are DD tits you know. Do you like that? Do you want to play with them? Why don't you touch them Tommy. Why don't you grab my big tits!\"\n\nTommy almost came in his pants right there and then. Of course he reached out and grabbed both of her tits. He caressed their round full shape. His fingers sought out her nipples and pinched them. Barbie let out a sigh. This was exactly what she wanted so badly. She told him, \"We need to keep this a secret, OK?\"\n\nOf course it was OK. He was OK with everything right now. He was in total heaven groping her tits and squishing them around. \"You can open my bra if you want to. You can suck on my big tits if you desire.\" Well, that was more of an invitation than he needed and his fingers easily popped open her lovely lace bra.\n\nTommy dove in to gobble her tits. He kissed them all around and got them very wet. He squeezed and squeezed them until he finally latched on to a nipple and began sucking. He sucked with wild abandon, being a young inexperienced kid. He was rather clumsy and forceful but this was exactly what she needed, some good hard sucking, and her milk started to release.\n\nTommy wasn't expecting that to happen but the warm womanly nectar was not disagreeable at all. Having never had experience with a woman, he just assumed that they all gave milk while having sex. This was more than he ever dreamed of so he grabbed her tit with both hands and kept sucking on her. Soon his mouth was filled and he swallowed more and more of her tit milk. \n\nBarbie was feeling intense pleasure from all of this. She needed to be sucked on so badly and he was doing such a good job, she cradled his head in her arms. \n\nAfter almost 5 minutes on just one nipple, Tommy came up for air. They both were dreamy-eyed with lust and passion. \"Please suck on my other tit Tommy. They like this so very, very much. You are so, so good at this honey.\" she said. Her pussy was also getting very wet too.\n\nLittle did Tommy know, but her breast milk was going to give him special powers. Her milk was like a natural Viagra and was going to make him get hard more often, and last longer than his 17 year old body could even normally do, and that was saying a lot because he could easily come 5 times a day as it was.\n\nBarbie sensed that, although Tommy was relieving her nursing needs, he too would need to be relieved of his insanely hard cock all cramped up inside his pants. Barbie reached down and unzipped his pants. Tommy was pre-occupied grasping her other tit and sucking for all he was worth on it's turgid thick nipple. Barbie released his belt and his pants fell to the ground.\n\n\"Fuck me Tommy. Fuck me with your big cock please!\" she pleaded. \"I need you inside me I'm so, so hot!\" Well Tommy didn't need another invitation. He pulled her skirt up above her waist and felt down in her crotch. He felt the thin G-string she was wearing and how very wet she was. It was almost natural for him to slip his cock right past it and into her juicy wet pussy. She felt so warm. Her milk was so warm. His cock was so hot he began to pound into her.\n\nBarbie loved it. She was full with cock and almost empty from milk. Her pussy was on fire and her nipples tingled with delight. They stuck out so hard and straight and each bit of contact with his mouth or chest gave her an extra pang in her pussy. She was dripping wet with lust as he pounded into her. \n\nTommy went on for a full 10 minutes pumping into her over and over again. Barbie had passed through at least three orgasms in this time. She loved what he was doing. She had chosen the right lover. He made her so crazy and happy. She wrapped her legs around him as he sat her ass on the desk there and continued to pound into her. \n\n\"Squeeze my tits Tommy. Squeeze them hard!\" she said. As he did this more milk dripped out of them onto his hands and his cock was finally ready to spew. Barbie wasn't sure why, but she said, \"Let me drink you cum Tommy. I want to drink your holy seed.\" With that she pulled off of him and sank down to his cock, burying it deep into her mouth.\n\nTommy's cock was slick with her pussy juice and his own pre-cum but Barbie didn't care at all. The wetter, the better she felt. She grabbed his balls and sucked on his cock being careful to avoid using her teeth. She sucked and licked on him until he did it. Tommy shot a gallon of cum right down her young willing throat. Barbie drank and sucked and sucked some more as she swallowed his seed. She liked it. She really liked it.\n\nAs would be coming from such a young man, he had so much semen that she just couldn't swallow it all and keep up with him so some of it overflowed her mouth and dripped down onto her big tits. Tommy looked down at her, ecstatic in orgasmic bliss, and saw this scene of depravity. Her lips and tits wet with his come and a huge load of semen escaped from his body. He was fucking happier than he had ever been in his life. He was in love."
    ],
    "authorname": "mrddman",
    "tags": [
        "busty",
        "busty sisters",
        "exhibitionism",
        "lactation",
        "nipple sucking",
        "nipples",
        "tease",
        "tit sucking",
        "big breasts",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/breast-suggestions-ch-09"
}