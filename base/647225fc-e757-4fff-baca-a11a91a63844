{
    "title": "It Ain't About the Dick",
    "pages": [
        "So this is my V2 of this piece. After much consideration, I've added a few things and clarified a few things to make it better. \n\nThis is my opinion and knowledge gathered from many years of pursuing better sexual relationships. All I can write about is my experience so take it for what it is. If you disagree with any of it, you're more than entitled and I applaud your approach. I have no desire to wrestle with anyone about these ideas. This is one man's opinion and one man's pursuit. \n\nFrom the first piece, there was so much love and some very interesting reactions. I think my favorites were from women giving it to their lovers AND telling me it changed their world. \n\nI'm pretty happy about this. So here's the expanded version.)\n\nIt ain't about the dick. What I wish I knew when I was a much younger man. \n\nFirst off. I love women. I always have. I've had a lot of wonderful women in my life and I love them all to this day. \n\nAnd maybe because of that, I've learned a lot about them. \n\nBut let me preface first. Yes, there is no one rule to explain anyone or anything. There are a zillion exceptions to everything and I'm not about to say \"this is how you treat all women.\" That would be just plain stupid. \n\nWhat I am going to do however, is to try to give younger guys some advice on better sexual relationships with women all based on my personal experience. I'm not your doctor or therapist or priest. I'm just some anonymous guy from the internet that's learned some important lessons. If I can save a guy some fumbling around and save some women from lousy sex from someone they love, then my work is done. \n\nHow men deal with men, or women with women or all the things in between, not my pay grade. Y'all go figure that out on your own. \n\nBut if you're a young straight guy wanting better sex with women, listen up. I got things to say. \n\n1. IT AIN'T ABOUT THE DICK.\n\nEvery guy points to his JohnThomas and figures women will swoon. That his dick is the center of the universe and all he has to do is whip it out and holy fuck, the girls will go mad. \n\nThat ain't how it works. \n\nMost women can get along just fine without your dick. In fact, most women can have better orgasms without you even in the room. Sure, keeping a hardon long enough for them to ride it till they're fulfilled, or sore or bored is nice. But there are a thousand ways to make a woman have a fantastic orgasm that have nothing to do with your dick. \n\nCan we see a show of hands of all you women that only want a guy to stick his dick in you and hot damn, that's the center of the universe. \n\nAny takers? \n\nGet over it guys. It's an elective, not a required class. Hell, you can probably give a woman more pleasure with two fingers than with your cock. Even if you're hung like a fucking horse, two fingers can probably take most women further than a massive meatstick. And from what I've seen in life, a big cock can mean more pain than pleasure for a lot of women. Personally, I'm a big guy and I've got a good sized cock. I've had relationships where my dick was just too big for her so I learned a lot of workarounds. You have a million choices here guys. Use them. \n\n2. IF YOU'RE THE RIGHT GUY AND YOU GET IT, YOU CAN DRIVE. \n\nI've seen a change in womankind over the years. I think we can thank the internet for that, but women are, in my opinion, much more able to take control of their world. I welcome this. Of course, it seems one political party is doing everything it can to push women back into a little box, but they'll fail in the long run. \n\nI'm really happy to see power being taken by women in business, choices and personal lives. And because they're more able to make decisions and run their own worlds, most guys feel like they're losing their power. Which they are. But buck up guys, live with it. That's just how it is. \n\nBut if you listen and you get it, they'll let you drive. In my own experience with the Dom/Sub culture, it's very conditional. Most women I've known are more than capable of running their own show and don't need some asshole guy to do anything for them. But when conditions are right, they'll let go. They'll submit to the right lover and take in all the pleasure they can. \n\nThat means guys, you need to understand this. Telling your lover how to do shit won't go far. She's probably smarter than you anyway. But understanding her sexuality, and I mean REALLY understanding is the key. \n\n3. ASK. JUST FUCKING ASK. \n\nThe best way to understand a woman's sexuality is to ask. Put it right out there. Ask her what she likes. Ask about her fantasies and be prepared. She may have a dark side, she may want to be tied up, spanked, fucked with a rubber cock, shown off to your friends... She may totally embrace her inner slut but only under the prefect circumstances. She may scare the shit out of you once you pull back the veil. She may have a side much darker than you're comfortable with... She may not. But unless you really ask, you'll never know. Whatever is deep inside her, it's better for you both to open up that box and see what's inside. Celebrate it... Embrace it and try it all. \n\nYou'll never guess on your own. Ask. Most of the erotica I've written has come about from conversations that opened up new thinking. I use my words to illustrate a lot of secrets that might have never been heard had I not asked. \n\n4. WATCH. IT'S FUN. \n\nIf you want to know how your lover wants to be touched, see how she touches herself. \n\nWatching a woman masturbate is both educational AND wonderful. Most guys see a vagina and start treating it like a fucking basketball. Too rough. No understanding of the anatomy or the mind behind it. \n\nHow a woman wants to be touched in the right conditions can only really be understood by observation. And if you ask your lover to masturbate for you, she may be too shy at first, but be patient. Let her get comfortable with it because this is Orgasm 101. \n\nShe is an expert on her own body. Learn at the feet of the master if you're ever going to be a master yourself. Watch her make herself cum... \n\n5. MAKE A PLAN. \n\nMy lover is gone quite a bit. So our times together are very precious and every minute is worth something. So I plan each encounter and work to make it perfect for us both. For me, giving her pleasure is my biggest turnon. I love helping her lose herself in the experience, turn off the rest of the universe and let go and melt. \n\nSo we talk about what she'd like. Soft, gentle, making love... Or rough, scare the shit out her, beat her ass and force her to squirt and scream and thrash and explode and pass out from the intensity. \n\nOr any of the thousand degrees in between? \n\nTalk about it... Build up that visual and fantasy beforehand and plan ahead. Have everything ready and let her know you're taking your time together seriously. Make it good. Don't just stumble around hoping you can stick your dick in her. Talk about it. Be prepared and make her melt. \n\nIf you make it through half of your plan, you're still both going to have a much better experience than if you had no plan. \n\n6. SHE CUMS FIRST.\n\nThis is my rule anyway but rules are for breaking. \n\nSometimes the moment is way too powerful to hold back and holy fuck, that was good... OK, now your turn. \n\nBut it's great to be able to take your time. Tease her. Edge her (REALLY POWERFUL FOR YOU BOTH). Learn what melts her and do it. Make her cum before you stick your dick in her (if that's the goal). She'll cum again. And again. And possibly again. \n\nI've known some extraordinarily orgasmic women. I've known women who can have 30 and 40 and 50 squirting orgasms in a night. But only if you're in tune with what she loves. Take the time to give her so much pleasure she has her first orgasm before you slide your cock inside. Don't just jam it in and expect the heavens to open. \n\nOpen the heavens first dude. \n\n7. SQUIRTING. \n\nThis is a very contentious point. \n\nSome women have assailed me for even bringing it up, which is pretty fucking stupid. \n\nSome women love squirting. Some don't. Some want to learn, some don't. Some women don't feel its possible for them or that it's worth the trouble... \n\nI'm over the opinion that whatever you want is fine. \n\nWhat I can say though is that every woman I've ever been with that's squirted for their first time, it was incredibly powerful for everyone concerned. And often, it's a surprise. Where the fuck did that come from... What just happened... Holy hell, I soaked my dress and I have a meeting in an hour...\n\nYes it's awesome to make a woman cum so hard she totally loses it and squirts across the room. I've written a lot about squirting orgasms so dig around and find that stuff. It's real, wonderful and when you figure it out, life changes. \n\nIf you hate the idea, more power to you. It's your choice to play or not. \n\nFor guys who've experienced it, you either love it or not. Up to you. \n\nFor me personally, I love it. And I love making it happen the first time,\n\n8. IF SHE WANTS YOU TO ABUSE HER, TREAT HER WELL. \n\nThis is part of the dance. The game we all play. If she has a fantasy of the big, strong Alpha Male taking over and turning her to jelly, or calling her a cunt and slapping her around, or tying her up and fucking her ass or forcing her to cum or whatever... Ask. Understand and make it happen. But know her hard limits and soft limits. We're all in this together so listen and don't abuse the power she's giving you. \n\nAnd make no mistake, she's giving it to you. Don't fuck it up. If you're such an Alpha God Ultramale, then you probably don't give two shits about what she wants or not and I'm surprised you got this far. You get a cookie. \n\n9. GREEN MEANS GO...\n\nThis is a great idea. \n\nTraffic lights. \n\nOnce you have the keys and know how to drive, it's a green light. If she wants to up the level of intensity but it's getting pretty close to stop, she can say \"yellow\" and you know to back off a bit. \n\nWhen she says \"red\" its time to pull the plug. Stop instantly. She knows her limits. \n\n10. EMPATHY BUILDS TRUST. \n\nWhen you understand her you can build her trust. When she trusts that you understands her melting points, she'll trust you and let go. \n\nWhen she lets go and you understand her, you'll have the best fucking sexual experiences in the universe. \n\nBut without empathy, you're just exercising and she'll end up frustrated. Put yourself in her shoes (literally if you want). When I write erotica for my Wildflower, I write it thinking about how she'll read it... I know what things she'll visualize that will make her heart skip a little... \n\nYes, it takes some work to think like someone else but it's worth it. Give her that extra effort and your relationship will be much better. \n\n11. MIX THAT SHIT UP. \n\nPart of keeping a great sex life great is unexpected change. Bring in new things all the time and surprise her (and this goes for both parties!)\n\nBefore seeing Wildflower, I'll ask her what she'd like. Sometimes she wants me to scare the shit out of her. Sometimes not. And nothing ever goes exactly as planned. I may have a whole outline laid out in my mind but things will change and I'll go with it. Forcing something just seems awkward. Once you've opened up the communications, it'll flow much better. \n\nSo that's my treatise. My Manifesto For Men Who Aren't Arrogant Selfish Assholes. \n\nI suspect most men start out as arrogant selfish assholes and some dummy up over the years and drop the selfish asshole part. A little Alpha Male Arrogance has it's charms I suspect. But nobody loves a selfish asshole. \n\nSo did I forget anything? Probably so. There could be a V3 coming."
    ],
    "authorname": "TheAustinDom",
    "tags": [
        "squirting",
        "how to",
        "guide",
        "spanking",
        "advice",
        "orgasm",
        "touch",
        "submission",
        "understanding",
        "sexual partners"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/it-aint-about-the-dick"
}