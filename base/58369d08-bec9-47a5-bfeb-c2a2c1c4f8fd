{
    "title": "Any Chance We Could Ch. 37",
    "pages": [
        "This chapter is not meant to stand alone. Please begin at the first chapter to appreciate this tale.\n\nTuesday, October 30\n\n\"You're okay with last night?\" I asked both Veronica and Carol over coffee.\n\n\"I am,\" said Veronica. \"But you need to spend some one-on-one time with her as you agreed last night.\"\n\n\"If Veronica's good with it, I am as well,\" said Carol. \"By the way I brought over a bunch of clothes yesterday. I hope I wasn't being presumptuous.\"\n\n\"No, we did ask you to move in knowing that you'd need clothes,\" I laughed. \"But don't bring too much until the renovations are completed or you'll just have to store them in the third POD that was delivered yesterday afternoon.\"\n\nI left before either of our daughters or Cathleen came downstairs. I embraced Carol and kissed her deeply with my hands under her robe and on her bare ass. Veronica happily received the same treatment except I took a moment to kiss each nipple after we broke our kiss. Having two wives, two daughters, plus Mary Claire to play with makes me glad that I'm retiring tomorrow, I said to myself as I opened the door.\n\nFifteen minutes after arriving at the office Emerson and I met with the additional staff from Citigroup, three more guys and one additional woman. Margaret arrived with that 'just fucked' look about her while Jack at moments in the early part of the meeting seemed a bit distracted. From the way he looked at Margaret I doubted Margaret had been in his bed. We met for three hours with the five in the boardroom going over the portfolios and contracts of our major clients, as well as the latest staff assessments of everyone in a managerial position. Cheryl spent the same amount of time with Margaret and the newly arrived second EA, Joan something. The last half hour Cheryl spent gathering and boxing Grace's personal belongings and copying business contact lists. Even without being asked, after securing IT access codes and burning the files to CDs, Cheryl thoughtfully deleted our personal contacts, files and emails from the computer system. Her attention to these details which Emerson and I'd overlooked reinforced for me that I wanted her to remain in my employ in some capacity.\n\nAt eleven-forty, Emerson and I toured the office, thanking our staff and saying goodbye. That was a lot harder to do than I'd expected. I noticed a few times that Emerson's eyes were sparkling a bit as mine were as a few unshed tears were stifled.\n\nI invited Cheryl and Emerson to join me for lunch, but Emerson begged off. Cheryl and I took our sandwiches to the pocket park across from the deli and had a nice conversation. She was as happy as I'd ever seen her. Max and Beth were now her young lovers and they were planning to fall into an every other night threesome as long as John was out of town.\n\nAs if it were a normal business matter an emotionless Cheryl related that the private investigator she'd hired in Boston had gathered some very damning evidence over the weekend and on Monday. He was sending her the pictures as well as other evidence indicating that John's dalliance with the woman started well over two years before. When I asked why she didn't seem to be upset she replied that she felt more happy and relieved than sad. Living in a loveless marriage had troubled her for several years but she had difficulty allowing it to die. She'd wanted to rescue it but whenever she raised the subject John dismissed her concern by saying that all was fine and that he loved her.\n\n\"Though the words 'I love you' were on his lips, his tone was more dismissive than anything,\" she sighed. In a firm voice and with a chill in her eyes she continued, \"I can't shed any tears, they'd been used up months ago. Scott, when the time is right, I'm going to hit him hard with a reality check by demanding an uncontested divorce, the Kirkwood condo and the car. I want it done and him out of my life the first day possible. I'm rather happy to be able to plan a future without being concerned about him.\" Lunch was too short, Cheryl had to get back and said that the movers would get and deliver our boxes this afternoon. She promised to make a final 'sweep' of both our offices before letting Jack and Michael get too settled.\n\n##\n\nAt about nine-thirty Veronica asked Mary Claire if she wanted to go shopping with her and Cathleen. Mary Claire accepted, forgetting about her ten o'clock phone call.\n\nAs they were driving to Plaza Frontenac to shop Veronica told Cathleen to expect me to call her and ask her to meet me someplace so we could try to work out our feelings. \"I'd probably expect a hotel. I think you'll want to spend the night with him,\" said Veronica.\n\n\"And you're okay with this?\" she asked Veronica.\n\n\"It was my idea. I like you Cathleen and I want to see more of you, but the elephant in the room has to be dealt with for all our sakes, especially Katrina's. I have some suggestions on what you could wear, if you're amenable. Or do you want me to butt out?\"\n\n\"No, I want your suggestions. If you hadn't offered I'd have asked,\" smiled Cathleen touching Veronica's arm with her finger tips, then moving it up to touch her cheek with the back of her hand.\n\n\"When he picks you up be wearing nicely fitted slacks, black leather pants tightly hugging your hips and ass would be nice, and a red satin button-front blouse with a frilly scooped collar. Have the buttons open to your mid bust line so that a necklace with some type of charm or medallion resting near the top of your cleavage will keep drawing his eyes. Red peep toe pumps or red slides'd be a nice touch. Wear a shelf bra, and stockings with a garter belt and a red g-string under the pants. The stockings should be a light gray so with the peep toes or slides it'll be obvious that you have hose on,\" smiled Veronica.\n\n\"To dinner wear a little black dress, a little shorter than you normally feel comfortable wearing and nicely fitted over your gorgeous ass. The key is to have it as short as possible, shorter than you feel completely comfortable with so that you'll be conscious that your legs are on display for all and that if you're not careful you'll be giving some men ... and women a little flashing show. Believe me, the few times I've done it, I've felt extremely hot and sexy. Again wear a red g-string and if the skirt's as short as I hope it to be, wear suspender hose, they're like a combination of panty hose and stockings. I'll show you a pair on the web, or if my order has some included when it arrives tomorrow, I'll give you a pair. Strappy high heel sandals, black, and I know just the store for them. If you like I'll suggest the Ameristar Hotel in St Charles to him,\" she smiled as she continued.\n\n\"Let him seduce you, or you seduce him if that's your fancy, tease and play around as often as you both choose, but through it all communicate, communicate, communicate. Scott's very good at that with me and our daughters, but there are things you both need to talk out. Cathleen, listen not only with your ears but also with your heart to hear what lies below the surface. Scott is still harboring some deep pain. I can't stress too much how important it is for you to listen for his pain and the anger he has buried in his soul over what happened. He may also have some displaced guilt, feeling that he did something to cause all this. Keep this in mind, that he feels the pain after all this time is a reflection of the love he had, and to a significant extent still has for the wife of his youth. It's important that he too hear your anguish as well as the love you still have for him.\"\n\nAs Veronica paused to turn into the parking lot, with a quavering voice Cathleen said, \"I didn't realize that he's still hurting. I knew he'd be angry at first but I had no idea that he'd still be hurting. What happened was my fault. It was I who sinned against him. Scott did nothing to feel guilty about.\" Her right hand wiped a tear from both eyes.\n\nWith the vehicle parked, Veronica turned and reached over to squeeze left Cathleen's hand as she continued, \"The soul of the man we both love needs to hear what you just said. I'll tell this to Scott too. Be it in the afterglow of a good orgasm or just over a glass of wine, listen well but also allow the love you have for each other to again be expressed through all you say and do together. After dinner, dance, enjoy each other then spend the evening as you desire. Wake up next to each other, communicate some more, listen to each other, understand what the other is saying, wanting, needing. Fuck him hard, fuck him soft, fuck him lustfully, fuck him playfully, fuck each other as the mood fits. Fuck again and again as often as you both like, come back here early Sunday afternoon, and feel free to stay if either of you have unresolved differences. If all goes as well as I hope, by late Saturday night there'll be little if any unresolved issues so that when you return here Sunday you both'll be grinning from ear to ear.\n\n\"And before you ask, I'm not worried about losing him to you or anyone else. I want you to love each other and be comfortable with each other. I know that he's my man and he knows that I'm his queen,\" finished Veronica out of breath.\n\nMary Claire had been listening without commenting from the back seat realized again how much she really loved Veronica and why. If only her parents could have been as open, self-giving and totally committed to loving their spouse as Veronica. I will love them and stay with them as long as I have breath. I feel complete serving and loving them. I'm theirs in heart, soul, mind and body, she reminded herself.\n\nI got home about one, Katrina hadn't left yet and I saw her in the kitchen poking around in the refrigerator. She was bent over with her short denim skirt stretched tightly across her ass showing most of her gorgeous legs. I walked behind her, held her hips and pushed my erection against her ass. \"Ooh, you must be glad to see me, those certainly aren't batteries,\" she giggled.\n\nShe straightened up and started to turn but I put my arms around her further and held her back against me. \"Find anything?\" I asked.\n\n\"Other than the cock against my ass, no,\" she laughed. \"What would you like as if I already didn't know?\"\n\n\"Since leaving this morning I've been thinking what a wonderful, sexy woman you've become. How much I love you. How much I enjoy being with you, holding you and kissing you. And how much I love to taste that wonderful pussy of yours,\" I said as my hand ran down her skirt and lifted the front so I could palm her youthful pussy.\n\n\"Is that anyway for a father to talk to and touch his daughter,\" she asked pushing back against me. \"You're sounding like how man would talk to a woman he wants to mate... not that I'm complaining in the least, mind you. So how about a pussy snack?\"\n\nI moaned quietly as I felt her become very wet within seconds. She was as eager as I. I moved my other hand under her tank top and pinched her hardened nipple through her bra. \"I'd love one,\" I murmured into her ear through her hair.\n\n\"I'd like a hot semen snack myself,\" she cooed reaching behind her and wrapping her hand around my erection. I hardened even more when she whispered between a pair of kisses, \"I want my snack to discover what it's lovingly fated to find, but having you come in my mouth will satisfy me for now.\"\n\nExcitedly I turned her around and feverishly kissed her with urgency and a desire to couple with her. As this wasn't the time or the place for such an event I lifted her to sit on the counter. I reached under her skirt and forcefully pulled her thong down and off. Her scent once again intoxicated me.\n\n\"Ooh, right here, right now,\" she exclaimed gleefully. \"It's a good thing the drapes are closed since there're guys outside.\"\n\n\"Hmm, then in the den,\" I said as I lifted her and with her legs around my waist I carried her towards the couch. With her arms still around my neck I kicked the door closed and checked that the drapes were completely pulled. My heart was racing as I adjusted one partially open drape as my imagination pictured her impaled like this as I walked through the house for all to see. Arriving at the couch she dropped from my arms, unzipped, slid out of her skirt and sat back with her thighs slightly parted.\n\nI knelt in front of her and ran both hands lightly up her legs and parted her thighs further as I got closer to my 'snack'. Her pussy looked firm and tight. Her scent was heady and she'd scooted to the edge of the cushion. Lustfully I began lapping her slit after spreading it open with my thumbs to expose her glistening pink entryway. She was purring as her fingers began moving through my hair as my tongue flicked her clit back and forth. I realized again how much I'd been fantasizing about being the first man to come inside her succulent pussy. I licked her down to her asshole and lightly rimmed it. \"Mmmm, that feels really, really good. Will you tongue fuck me and stick a finger in my ass?\"\n\n\"Love to,\" I said as I once again began rimming her vagina which was already soaking wet.\n\n\"Can you reach the drawer in the coffee table? There's some K-Y in there,\" she gasped.\n\nI reached behind me not taking my mouth off her pussy and came up with the tube. \"Slide forward a bit more sweetie and put your legs on my shoulders.\" I squeezed a bit on her taut asshole and some on my finger as I began sucking on her clit. I gently rubbed it around and gently entered her up to my first knuckle.\n\n\"Umm, I like it. Go slow but put your whole finger in,\" she softly said.\n\nI pulled my finger out for a moment to apply more K-Y and gently began stroking in and out going a bit deeper each time allowing her body to adjust. When my finger was all the way in she began writhing a bit and said, \"Bite my clit, thumb in my cunt.\"\n\nHer grasp of my head tightened and I felt her begin to shake and push against my fingers and heard her moaning and sighing, \"God that's good, that's good, put another finger in my ass.\"\n\nI pulled out for a moment to lube my index finger as well as my middle finger. Gently and ever so slowing I reinserted both into her asshole. As they were half way in I started to move them around and slowly stroked them in and out. \"Put your thumb back in my pussy,\" she groaned. Moments later as she began gasping and swiveling her hips, she tightened her legs. \"Oh God, oh God, oh good, ohhh gaawwd\" she began chanting and then after her hips shuddered she suddenly became still.\n\nI started to lean back, but she held my head and said, \"Nooo, not yet, not yet.\"\n\nI stayed in her and began kissing the inside of her thighs and up her mound to her stomach. As I looked up there were tears flowing down her cheeks. \"Are you okay?\" I asked.\n\n\"Better than okay, Dad, that was the best. Very intense, very much the best,\"\n\nAt that moment Veronica who had been standing in the opened the doorway for more than a few minutes with Mary Claire said, \"Just retired and already eating pussy in the middle of the day. What a life we're gonna to have.\" Then she grinned, \"We're going to have to be fighting off this letch morning, afternoon and night.\"\n\n\"Hi Mom. Dad was just having a snack. Come sit next to me.\"\n\nMary Claire was dangling a grey thong from her finger with a big grin on her face as I withdrew my two fingers. \"Can I assume that these are yours? They were on the kitchen counter.\"\n\n\"Yeah, we started in there but I worried a bit about the workmen outside so Dad carried me in here,\" laughed Katrina.\n\nKatrina lowered her legs. I stood to kiss Veronica who was now seated on Katrina's left. Veronica gave Katrina a short kiss and lightly ran her right hand between Katrina's thighs, I kissed Mary Claire as I walked past her on the way to the bathroom. When I walked back in I patted Mary Claire on the ass and asked \"Been shopping?\"\n\nI gave the hand towel I'd carried back from the bathroom to Katrina, as I sat on the other side of my daughter.\n\n\"Did Dad have two fingers in your ass?\" asked Mary Claire.\n\n\"Felt like four, but yes,\" smiled Katrina. \"Felt really good too. Now I know why Ashley and Cathleen seem to like it so much.\"\n\n\"We got dresses for Mary Claire and Cathleen for the wedding and I picked out a few things for Cathleen with a promise of more shopping on Friday. Mary Claire also got a sheer red teddy that you're going to love,\" she said looking at me with a smile. \"Both girls have asked about shaving but they wanna be sure you're okay with it,\" Veronica added.\n\n\"I'm seriously considering it too,\" smiled Veronica. \"Hazel says that she's incredibly sensitive since they shaved her pussy and Emerson likes it. If I can get Emerson to eat me in the dark maybe he'll think it's Hazel and won't get in trouble. ... But since it's not fucking maybe it'll be okay with Hazel anyway,\" Veronica said as she continued to laugh.\n\n\"Sure, Ashley's too? What about Carol? On one condition, well maybe two.\" I smiled.\n\n\"Okay, what are they?\" quickly piped up Mary Claire.\n\n\"I get to help shave each of you and that if either the shaver or the shavee doesn't like it you'll let it grow back. If we all like it, I might just be able to afford laser treatments for all of you.\"\n\n\"Well, I have one condition too,\" stated Mary Claire. \"Dad has to shave all his pubic hair as well as his balls and we get to help.\"\n\n\"Fair enough, wanna start now?\" I asked.\n\n\"Katrina, aren't you going to be late for class?\"\n\n\"Oops. Just a bit. If she asks I'll tell the prof that something came up and I got a bit delayed, but yeah, I need to run. Is Alyssa still coming later?\"\n\n\"As far as I know. I haven't heard otherwise. If you see Dave out there, ask him to come in I wanna ask him something,\" Veronica said.\n\n\"Like how long his cock is,\" I laughed.\n\n\"No silly. About the master suite, if he could add a bedroom instead of the large sitting room. Remember what Evie said?\" Veronica asserted with a smile and a punch to my bicep. \"Besides his 'package' looks to be about the same size as yours as far as I can tell through his jeans.\"\n\n\"And God knows you've spent a good deal of time looking, haven't you?\" I said laughing.\n\nKatrina had wiped herself dry and put on the thong that Mary Claire pitched to her, slipped her skirt back on, kissed each of us goodbye and grabbed her computer backpack from the living room before leaving. After fifteen minutes Dave hadn't come to the door so we assumed that Katrina hadn't seen him and being in a hurry hadn't spent any time looking.\n\n\"Handsome, will you go out and talk to Dave about the bedroom situation,\" asked Veronica. \"And then will you call Cathleen. She should be home shortly.\"\n\n\"I know what you want about the bedroom, but why Cathleen? ... Ooh, I remember, I'll bet you already mentioned it to her, didn't you?\" I asked.\n\n\"I did. So you can't squirm your way out of it. And before you say we have something happening, we don't have anything going on Saturday, and just the club on Friday,\" she coyly said.\n\nI found Dave in the back talking to the backhoe operator and looking at some foundation trenches he'd just finished for the office area. Two guys were building footing forms atop the gravel garage floor footing base and another two looked to be working on plumbing lines for the office and the four room apartment on the back of the office. His grin widened as I explained to him the bedroom modifications. When I'd finished he said it'd be easy to modify the plans and still keep a good part of the sitting area. He promised he'd come up with something, probably by Thursday.\n\nHe then laughed with a roar, clapped me on the shoulder, \"That huge bed getting full? What a problem to have. You may well have to order an even larger bed.\"\n\nI went inside and told Veronica what he'd said and when he'd have something for us to look at. I thought, but didn't share with Veronica, that he knew more than he was letting on. He wasn't surprised by the request. He was too cool about it and too quick with his assurance. It was as if he'd already planned it out and Thursday's deadline wouldn't be an issue.",
        "As I picked up the phone to call Cathleen I looked out the window and saw Dave talking with the backhoe driver and pointing to a line of stakes marking out a box that was not on the latest plans. No way, he could have it planned out already, I thought to myself. My thoughts changed when I heard my call being answered.\n\n\"Hi Cathleen ... got a few minutes? ... Can we get together this Saturday to talk and perhaps ... Yes, and perhaps ... Good, I'll pick you up at noon. ... Yeah, probably. Bring a change or two of clothes, we'll go someplace nice for dinner, then perhaps a nice dessert. ... Probably after noon on Sunday. ... Good, I look forward to it and I'll see you tomorrow at the club. ... Okay, bye.\"\n\nAfter her noon class ended Ashley called Evie and scheduled a meeting for two-thirty tomorrow. Evie asked that they meet in her office on the Washington University Campus.\n\nI called three BMW stores before finding a female salesperson. My answer when asked why I wanted a female was simply that my wife insisted on it, and if they didn't have one, we'd find one. On the third call I spoke to a Jeanine Clarkson. She had a very gentle tone to her voice and was very knowledgeable about the 3 and 5 series. I told her that I wanted her to bring a top of the line fully accessorized 5 series to my house. If it would make her more comfortable she should bring her sales manager along. \"Can you be here at eight-thirty Thursday morning?\"\n\nShe replied that both she and Fred Allison her sales manager would be there and he'd bring a top of the line 3 series as well. She asked what I was looking for and I told her that I'd just sold my business and needed something to replace my Z4 company car. But now I had a family and needed a larger car.\n\nAt three-thirty I was watching the movers leave after I directed them to put a few boxes in the POD next to the driveway when Veronica came downstairs. The sight of her took my breath away. She looked stunningly beautiful and very sensuously dressed. My eyes studied her figure and attire. I noticed she was wearing a just above the knee flaired skirt and camel colored three inch heels. I grinned as I gazed at her semi sheer top that did little to hide a sheer bra which itself didn't leave any doubt that she had slightly darker than skin tone nipples and areolas. Her luscious and curvy legs were accentuated by her nude stockings. When I embraced her I groaned as I felt the garter straps crossing her ass. My love was dressed to kill and to send Alyssa a clear message of wanton desire and lust.\n\nJust minutes before four the bell rang. Veronica excitedly hurried to open the door and much to her surprise Dave stood there alone holding a red wallet. Dave was actually speechless for a moment looking at Veronica's luscious tits. Finally he explained that Alyssa had a twenty-four hour bug of some sort which she woke up with this morning. He said that her office had called and had delivered the drawings and quote to him earlier today. \"I have the configuration and contract she was going to bring. But from what I overheard on Saturday morning somehow I think you expected only her, not me. Although, I must say that I certainly enjoy and appreciate the way you're dressed.\"\n\n\"Thank you. You're right I expected Alyssa but you may stare as long as you wish. I guess I'm glad that you noticed,\" grinned Veronica waving him in with her hand as her nipples noticeably hardened.\n\nI joined Dave and Veronica in the den, Veronica on the couch, Dave and I in the wing chairs across from her. As she sat she managed to have her skirt ride up to the tops of her hose. \"Now what have you got to show me?\" she asked reaching out her hand. And what do you have to show Dave, I thought.\n\nAs Dave opened the wallet he pulled out the sketches and the quote. \"It's not nearly as nice as what you're showing me.\" Both Dave and I chuckled and Veronica merely smiled.\n\nAfter looking at the sketches and giving her approval, Dave handed her the contract for her signature. She scooted forward a bit on the couch and in the process her skirt hem rose to her bare thigh. She looked up to catch Dave staring at her legs and replied, \"Knock-outs aren't they? Anything else you want me to sign?\"\n\n\"I'll see if I've got some blank paper in here,\" said Dave putting his hand into the red wallet and laughing.\n\nI was amused at his reaction. He was feeling comfortable with Veronica's little exhibitionism and he seemed to be enjoying the show tremendously. Who wouldn't?\n\n\"I usually don't kiss and tell, but both my wife and I've enjoyed Alyssa tremendously. I hope, given an opportunity, both of you will as well.\n\n\"Off sex and back to the project, Scott, I've come across a 220 square foot wine cellar 'kit' that can hold about sixteen hundred bottles. It includes shelving, insulated ceiling and wall modules, a temperature regulating system, door and insulated wooden floor. A lobbyist bought it to give to one of our erstwhile politicians, but right now the FBI is looking into 'pay for play' and he thinks that now isn't the best time. He'll sell it a bargain price. Interested?\" asked Dave.\n\n\"If the price is right, when could you install it?\" I asked.\n\n\"Monday next, we'll use the basement entry in the back and won't disturb anyone in the house. He says he's got twenty-five grand in it, but given that the lobbyist would have put down a non-refundable deposit, I'd offer ten and see what he says,\" advised Dave with glances at me but keeping his attention on Veronica's shifting legs.\n\n\"Offer ten, Scott, but go up to twelve five,\" mischievously smiled Veronica looking into Dave's eyes as she scooted forward a few more inches her panties coming into view as she exaggeratedly crossed her legs.\n\n\"I'll call him now,\" replied Dave not moving from the chair as he opened his cell. After a brief conversation they settled on eleven thousand and Dave would pick it up from the warehouse tomorrow.\n\n\"I guess you noticed that I started some foundation work. I guess I should have cleared it with you, but the equipment was here from the garage work. I hope you don't mind?\" he said looking directly at me for the first time in a long while.\n\n\"No, not at all, just be sure we have water, power and sewer until the thirteenth,\" I replied smiling.\n\nDave stood, saying \"It'll allow me to get the foundation inspection for the office and garage done by the middle of next week, if not before. When we do the wine cellar, because I'll have the electrician here for that, I'll have them install the additional electrical panel that you'll need to handle all the new circuits. You could be without power for an hour, two at most, if that's okay with you.\"\n\n\"As long it's only for that short time and you give us a day's notice, that should be fine,\" answered Veronica. \"Scott, hand me the checkbook on your desk and I'll write a check for the wine cellar.\" As she completed the check Dave drank in as much as he could of her sexiness.\n\nReaching out to gather up what he needed he said, \"I guess we're done for today. That order Veronica signed is just slightly under the bid, so no change order is necessary. It's a pleasure doing business with you as it has been since the beginning and nice seeing you both. Shall we visit again on Saturday morning, say nine?\" he asked shaking my hand and then Veronica's. \"I'll bring along Keith who along with his wife Joy is helping me manage the project.\"\n\nWe both walked him to the door but I walked out to his truck with him saying, \"I like you Dave and obviously so does Veronica. Why don't we have lunch sometime, you and I? I'll call you when I've had a chance to look at my schedule.\" As he climbed into his truck he said that he'd look forward to it.\n\n\"What was that about?\" smiled Veronica.\n\n\"We're going to have lunch sometime\", I replied while putting my arm around her and caressing her ass as the door closed. \"Too bad Alyssa isn't feeling well. I hope she's feeling better tomorrow.\"\n\n\"Yes, but seeing Dave almost made up for it. Do you want me to change?\" asked Veronica.\n\n\"That's a silly question. No. Come here you sexy woman,\" I said as I folded her into my arms.\n\nAs I held her I told her, \"Oh, before I forget. Dave mentioned that Alyssa would be emailing you some art suggestions in the next day or so.\"\n\nJust then Katrina came in a rush asking, \"Where's Alyssa?\"\n\n\"She wasn't feeling well, so Dave dropped off the papers,\" I replied.\n\n\"Well Mom given your blouse and I'll bet you have on stockings, that wasn't a total waste, huh?\" smiled Katrina. \"Knowing him, he left here with a boner,\" she teased.\n\nHearing Katrina, Mary Claire drifted in and asked, \"How many for dinner tonight?\"\n\n\"The usual suspects, ... six\" I said. \"Want me to build a fire?\"\n\n\"No, I'll oven bake some chicken and a couple of veggies should do it. If we have any rolls in the freezer I'll get those out as well,\" replied Mary Claire turning to leave the room.\n\n\"Mom, when Ashley gets home can we talk to you about something?\" asked Katrina.\n\n\"Certainly,\" smiled Veronica.\n\nI sat on the couch and opened the Wall Street Journal I'd forgotten to take to the office this morning. Veronica sat next to me with her arm around my shoulder and said softly onto my ear, \"Was I too forward with Dave?\"\n\n\"No, you were just being the love of my life. All three of us enjoyed it. Immensely.\" I turned and softly kissed her.\n\n\"If the luncheon goes well why don't you suggest that you and I meet him and his wife for dinner next week,\" she suggested. I agreed it was a nice idea. I'd like to see if my musing about what kind of woman he was married to were anywhere near accurate.\n\nFifteen minutes later Ashley breezed in, stopped to kiss us both and went upstairs to see her sister. A few minutes later Katrina called down the stairs, \"Mom can you come up?\"\n\n\"Go. Solve the issue, whatever it is. Do your mom thing,\" I smiled.\n\nAs Veronica was heading up the stairs Carol came in, called \"Hi\" to Veronica and then to Mary Claire. Then seeing me she asked, \"Do you want some wine?\"\n\n\"Sure if you'll join me,\" I smiled over the top of the newspaper.\n\nShe came back in the room with two glasses of white wine, set both on the coffee table and sat next to me. After taking a sip from her class she leaned into me and warmly kissed me, saying \"Hello my dearest. I missed you and Veronica today.\" After breaking our kiss I got up and asked Mary Claire what happened to the other boxes from yesterday. She picked them up from a dining room chair, handed them to me and lightly kissed me. \"Love you, Dad.\"\n\n\"Love you too, sweetheart,\" and walked back into the den sitting next to Carol. \"These are for you. I got them yesterday but last evening was a bit hectic. So, enjoy.\"\n\n\"Thanks, Scott, what is it besides a camera?\" she asked taking the larger box off my lap.\n\n\"It's the newest model of my camera with a long zoom lens that's very fast and two 8 GB memory cards. I bought one for Mary Claire too. I thought you'd enjoy using them.\"\n\n\"Aww, thanks. Sure you didn't buy it for me just to get in my panties?\" she laughed.\n\n\"Mary Claire asked the same thing yesterday. Veronica told her that all I had to do was pull down my zipper to get into her panties,\" I smiled as I raised my glass. \"May I assume that it's the same for you?\"\n\n\"For sure, you wonderful sexy man. Any second thoughts about me being here?\" she asked taking a sip of her wine.\n\n\"Not a one. We had an interesting conversation with Evie Graham yesterday. She wants to talk to you about marrying us, and that we'd have to go through few sessions of premarital counseling. Before that though Veronica and I need to sit down, or lie down, with you and talk a couple of issues through,\" I said.\n\n\"Premarital. ... l love the sound of that word when it's applied to us. Scott, I love you as much as I do Veronica. My words fail to describe how I feel in my heart for both of you. Just any old time, say the word and I'm happy to talk. Of course you could just pull down your zipper as a signal and I'll come running,\" she laughed as her left hand caressed my now erect cock.\n\n\"Did I do that?\" she coyly asked standing up, unzipping and letting her below the knee length skirt slide to her feet revealing tan garter stockings.\n\n\"I thought you only wore pantyhose to work?\" I gasped while reaching for the inside of her thigh, lightly caressing it and pulling her back beside me. She sat against the arm of the couch and lifted her legs across my lap.\n\n\"I always did, but today I thought I'd try stockings. Every time I crossed my legs under my desk I could feel my bare thighs and each time I thought of both my lovers. Electrifying is what you both do to me. Mmm, your hand feels good. Keep that up for ten minutes and I'll fuck you right here. I'm getting damp already.\"\n\n##\n\n\"Mom, when Ashley and I were seducing Cathleen last night one of us called her a 'hot bitch' and her whole demeanor changed.\"\n\n\"She got upset?\" asked Veronica.\n\n\"No she got more excitable and became 'submissive' I guess is the word. She said she'd do anything we 'commanded' her to do. She said she wanted to be 'our hot bitch'. We thought she was just playing a game, so we played along. Every time one of us used 'bitch' she became even more submissive and energetic. We talked about it a bit after she fell asleep, and we were still confused if she was serious or it was a game. As she slept she looked so peaceful that we still thought it was a game she enjoyed playing, but it still scared us,\" finished Katrina with tears forming in her eyes. Veronica moved to her side and hugged her.\n\nAfter composing herself she continued, \"I awoke in the middle of the night with her head on my breast and her arm over my lower stomach. She sounded like she was purring quietly in her sleep as if she was having a pleasant dream. Then this morning, she was sitting in the chair where Ashley is sitting now just waiting for us to wake up. She helped us to shower, dry our hair and dress.\" With a quiver in her voice she said with tears in her eyes, \"Mom, that's not all. This morning she seemed to be so happy and when she said she really enjoyed what happened last night I replied without thinking as we walked to the bathroom that she was certainly one hot bitch for us last night. She grinned saying that she loves being our hot bitch. Mom, she was so happy when she directed us into the shower before we could pee. And then...and then...with the water running over my back she knelt between us and asked me to pee on her face and Ashley to pee in her hair. I don't know what came over me, but I'm so embarrassed to say that we did pee on her and when we'd finished she looked up with the biggest smile I have seen from her in years. She actually said that she was very pleased to be our bitch. It wasn't a game. She really wants to be my....our ... bitch. I don't want to have that kind of power over another person, especially my mother,\" she finished with tears streaming down her face and wetting Veronica's blouse. While Veronica held her daughter Ashley elaborated further about the prior evening and that morning. Veronica concluded that they were both confused and scared by what happened.\n\nAfter Ashley finished, Veronica shook her head, \"First, let me say that participating in water sports doesn't make you an evil person Katrina, or you either Ashley. Also, I'm not sure I'd have thought it was anything but a game she was playing at first and I may well have gone along with it thinking it was a game that excited her. This type of thing, dominance and submission, and a woman wanting to be someone's bitch is beyond my experience and knowledge. It almost sounds as if it could be a repeat of what cost her her marriage to your Father. Perhaps Evie can help. Do you have an appointment yet?\"\n\n\"Tomorrow, two thirty, down at Wash U,\" replied Ashley. \"Should we talk to Dad about it?\"\n\n\"No, I'd suggest not now. After you've talked to Evie would be a better time,\" mused Veronica. \"Is Carol home yet?\"\n\n\"I don't know, but that sure sounded nice. Is she 'home' yet. We both really like her. I hope things work out so she stays,\" smiled a more composed Katrina.\n\nAs they opened the door they could hear \"Ohh, God that feels good. Harder baby, harder! Like that. Mmmm, yes, almost there, Mmmm, good.\"\n\n\"That's Carol's voice. She and Dad must be fucking on the couch. Shall we watch? Dibs on sucking him when they're done,\" grinned Katrina.\n\nJust as they reached the door to the den Carol explosively came, wrapped her arms around my neck and held herself tightly to my chest. My pants were around my ankles and she was straddling me. Veronica walked over and lightly kissed Carol's ear through her hair and said, \"Welcome home honey. I see you got a welcome home fuck from our fianc\u00e9.\"\n\nWith a languorous tone Carol replied, \"Yes. Hi dear love. Sit.\"\n\nWith Carol still impaled on me and her head on my left shoulder Veronica sat to my left and caressed my arm. With her head on my other shoulder Katrina cuddled against me while Ashley sat on the coffee table grinning brightly at the four of us. So this is retirement. I hope I live through it, I thought.\n\n\"Did you come Dad?\" asked Katrina.\n\n\"No, but I'm still hard. Why?\"\n\n\"I didn't get my protein snack at lunch. Can I have him Carol?\" asked Katrina.\n\nVeronica moved to the end of the couch and extended her arms to Carol who raised off me and kind of rolled, fell into Veronica's embrace. Katrina with a glare of a tigress in her eyes knelt on the floor in front of me and Ashley sat beside me and wrapped her hand around my cock. A moment later I was engulfed in Katrina's warm wet mouth. A minute after Katrina began laving me Ashley asked, \"Share?\"\n\n\"Umm huh, as long as I get some in my mouth,\" nodded Katrina between licks. Ashley got up, I spread my legs a bit wider and they both licked and sucked me. I pulled their hair to the side so Veronica, Carol and I could see their unobstructed faces. They worked so well as a team, one sucking high and the other licking low, sometimes both licking along opposite sides of my shaft, and occasionally kissing each other with my hard cock between them. Periodically they moved north and off the head of my cock to give each other a brief yet hot kiss before again pleasuring me with their glorious and ever improving skills.\n\nOne moment Katrina had taken me in her mouth, and Ashley was licking my balls. I felt the stirring desire for release. \"Umm, soon girls, soon,\" I begged. They both knew I wanted to come and were happy to grant me my wish.\n\nAshley picked up the tube of K-Y put a dollop on her finger and asked \"Now?\"\n\nKatrina lifted off my cock long enough to say 'yes', then wrapped her lips back around the head of my cock and started bobbing with a vengeance. Her left hand started to slide up and down the base of my shaft matching the rhythm of her descending and ascending head.\n\nAshley firmly pushed her lubricated finger in my asshole to her second knuckle and I came in Katrina's mouth. After two spurts Katrina wrapped her thumb and first finger around the base of my cock, lifted her mouth off and as she gasped for breath nodded to Ashley. Without removing her finger Ashley closed her lips around me and a split second later Katrina removed her fingers. I spurted three or four more times into her mouth. As I calmed down a bit and my breathing returned to normal, Ashley wriggled her finger and removed it. Reaching for a tissue on the end table she cleaned her finger and my asshole before sitting next to me.\n\n\"First time I've been gang-blown, with a finger in my ass to boot,\" I smiled as my eyes refocused. I wrapped my arms around both and pulled them close to me as each kissed a cheek. I turned my head to my right and gently kissed Katrina. As my mouth briefly explored her mouth I tasted my remnant in her mouth. I quietly said, \"Thank you,\" before turning my head to Ashley to give her the same kiss and experience the same taste in her mouth.",
        "Mary Claire was leaning against the doorframe smiling and rhetorically asked, \"Think Emerson would enjoy that?\"\n\n\"Or Dave?\" chimed in Veronica.\n\n\"Hopefully both,\" laughed Katrina.\n\n\"Dinner in fifteen, any one want wine, or a refill?\" asked Mary Claire.\n\n\"Topless dinner tonight ladies?\" I asked with a hopeful smile.\n\n\"Took the words right out of my formerly come filled mouth Dad,\" laughed Katrina. \"Okay by me, if Mom's agreeable.\" Veronica nodded. \"Come on Ashley let's get some heels on and some tops and bras off,\" she said rising and leaving the den hand in hand with Ashley.\n\n\"Will one of you bring me a dry thong when you come back down?\" asked Carol to Ashley's back.\n\nI was in the foyer when my two bouncing daughters came down topless and both wearing skirts and heels. Carol took the offered thong from Ashley and stepped into it and asked, \"Skirt back on?\" as she unbuttoned her blouse.\n\n\"Yeah.\" I replied, \"Longish skirt and heels, bare tits, redheaded woman, what a sight you'll be.\"\n\n\"Too bad Dave left,\" laughed Veronica as she removed her blouse and bra and began pulling my shirt out of my pants. \"You too,\" kissing me as she unbuttoned my shirt. As soon as I was bare-chested an equally bare-chested Mary Claire was dragging her nipples across my back.\n\n\"Well, Dad, as good as expected?\" grinned Katrina.\n\n\"It'll have to do,\" I laughed.\n\nDuring dinner we talked about the changes to the addition. As Veronica and Carol were talking about having the d\u00e9cor of the second bedroom in the new master suite very feminine, Mary Claire asked if we'd consider letting her live here full time. \"I'll even put up a tent in the back yard if I have too,\" she remarked. \"I've never been with a family that has much love and affection for each other as this one.\"\n\nVeronica, looked at me and asked, \"Can you handle another teenager living here?\"\n\nMary Claire was sitting next to me. I looked into her pleading eyes, leaned over, caressed her bare breast and pinched a nipple,\" Looks like I can,\" I laughed.\n\n\"So, where are we?\" Asked my queen rhetorically. \"We have an enlarged suite for Ashley and Katrina, the spare bedroom, our master suite enlarged, the small first floor maid's bedroom that has been a storage room is being enlarged to include a larger sitting area and a new master suite of two bedrooms, large walk-in closet and a bath/spa on the second level over the first level addition. Then there's the four room apartment on the back of the office. When we move into the new master suite, how about Katrina and Ashley moving into our bedroom with the enlarged bath and keeping Bryce Field, Mary Claire and Cindy when she spends the night can have Ashley and Katrina's room. The spare bedroom on the second floor remains, our new three room suite for guests, the new four room office/ bedroom/ bathroom/spa suite adjacent to the pool will be available. Perhaps I'll offer it to Lauren. Our suite will be over the office suite and accessible from either floor as well as from the pool.\n\n\"Sounds expensive,\" said Carol.\n\n\"It is, but who's counting when it comes to my family,\" I concluded.\n\nAs the dishes were cleared, Carol asked me, \"Veronica said we're going to have a pussy shaving party tonight, is that true?\"\n\n\"I suppose so,\" I grinned. \"Why?\"\n\n\"Well, I'd like to keep a runway at least, I like my red hair,\" Carol said.\n\n\"Neat idea. Dad, I'd like mine trimmed to leave a 'V' pointing to the promised land,\" laughed Katrina.\n\nWe retired to Bryce Field and began a gang shaving event. As much as I wanted to do everyone, ten minutes into shaving Veronica and only being half way through doing her, I knew Veronica and Katrina were going to have to assist. I was quite surprised that I was not aroused by what I was seeing and touching. I guess I was concentrating so hard in not nicking Veronica that I didn't think anything sexual as I was trimming with the scissors and then shaving her. I only became aroused when I was applying baby oil to her now bare pussy. But not Veronica, her arousal was clearly visible throughout the shaving and from the beginning to the end of her doing Mary Claire. Mary Claire winked at me when she noticed that I saw that my fianc\u00e9e's nipples were still quite hard.\n\nMary Claire won the series of coin tosses to determine who would shave me while Veronica took pictures. While Mary Claire was shaving me she held the head of my cock in her mouth to 'get it out of the way' she said as she shaved my balls. That excuse got a lot of 'oh, yeahs' and 'since whens' from the peanut gallery. When we were done everyone was pleased with the result and our new look. Each bare pussy looked even more scrumptious as they glistened with arousal and baby oil.\n\nEach spread her legs inviting me to lick and enjoy the new feel. I have to admit everyone felt different to my mouth and I was able to wander well beyond the edge of each of my lover's womanly lips without having hair to push through or aside. I enjoyed the experience. They too agreed that they were all more sensitive. I too was quite a bit more sensitive and I certainly enjoyed five bare pussies in our bed.\n\nKatrina wound up on her back with Mary Claire straddling her face and Ashley between her legs eating her and playing with the plug in her asshole. They'll soon be a supply of toys in our house I quietly grinned. Seconds later Carol was astride my mouth and Veronica impaled on my cock, our wetted and hairless skin slapping against each other filling our ears and Bryce field with a sound unheard before. Our passion quickly built and it was not more than five minutes before all three of us came almost simultaneously.\n\nMary Claire slid down to dutifully clean Veronica's juices off my cock and greedily savored the bit of come still dribbling out. Carol licked Ashley's face spotless of Katrina's juices. Veronica being held by both our daughters had a serene look on her face as her eyes quickly closed and her breathing calmed. Exhausted I fell into a relaxed asleep snuggled comfortably between Carol and Mary Claire.\n\n*\n\nI hope you're continuing to enjoy this tale of a family and their lovers. I've a long way to go before I finish but the chapters may sometimes be published further apart because of my day job. I'd appreciate comments and if you have some ideas you'd like me to incorporate, please tell me and I'll consider them. I try to respond to all emails unless they're cranky. I'd like especially to hear from any female readers. "
    ],
    "authorname": "Reindeer58",
    "tags": [
        "hose",
        "heels"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/any-chance-we-could-ch-37"
}