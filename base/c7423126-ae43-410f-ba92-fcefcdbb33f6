{
    "title": "Adventures of Hollywood Jim Ch. 52",
    "pages": [
        "Up to now my only contact with the hierarchy at Artists Unlimited had been confined to my boss Jeff Murphy and his boss Chuck Tyler. The last few days Chuck had been in meetings with the legal department over the pending lawsuit filed by his former partner Marty O'Brien. As a result, Jeff was taking on more than his usual workload. And I was about to find out a little more about the history of AU in a most unexpected way.\n\nI was delivering some new photo sheets to Jeff's office. His secretary Natalie noticed me as I came off the elevator.\n\n\"Hey, gorgeous.\" She said with that classic smile \"Coming to see the big boss?\"\n\n\"Oh, Natalie, are you talking about yourself again?\" I said without looking up from my photos before acknowledging her smile with my eyes and my sly smile.\n\n\"Go on in.\" she said\n\nTo my surprise, Jeff had company. A rather gregarious and animated man was talking a mile a minute as Jeff watched, barely getting in a word. Seated was a silent brunette haired girl I only saw from the back of her head.\n\n\"So like I said!\" he continued \"this one can't miss, she's got all the right moves, all the curves, big plans for this one Jeff!\"\n\n\"Right, I agree, big plans.\" He said before noticing me at the door. \"Jim! Great to see you!\" he said as he jumped up from his desk \"As usual, it's been an adventure with you, keep in touch.\" He said hurriedly to the man, like he was glad to see me and end this meeting.\n\nThe gentleman escorted the lady who was seated to the door.\n\n\"How ya doin'? Gary Mackas, great to meet you\" he said with a generous handshake.\n\nI now got a better look at his companion, whoa!\n\nShe was fairly short and petite, but had a body that screamed centerfold in her low cut black t-shirt and matching jeans. I couldn't help but get a glimpse at a generous chest that filled out the shirt incredibly well.\n\n\"Hi, there darlin'!\" she said with a sweet accent as she was led out by Gary.\n\n\"Yes...hi to you too.\" I said as she walked out and gave me a sweet look back at me over her shoulder.\n\nI watched her as she headed for the elevators before turning back to Jeff, who leaned back in his chair and let out a long sigh as he looked at the ceiling.\n\n\"Who...was...that?\" I said to Jeff\n\nJeff finally leaned forward in his chair.\n\n\"Shut the door, Jim.\" He said with a sigh\n\nI did and took a seat.\n\n\"OK, you just saw a part of the company we don't talk about.\"\n\n\"What side is that?\"\n\n\"Long ago when the agency opened, one of their first clients was a company called VCX, they used a different name back then but you can probably guess what they do. Anyway, as my dad tells it, they kept us going for awhile until we picked up some real clients. Gary's dad was close friends with mine and he always promised to keep them on, it's a little more important now because his dad is, well...\" his voice trailed off.\n\n\"His dad is what?\"\n\nJeff spun his hand slightly around his head like he was trying to say something as his eyes looked upward.\n\n\"Not well?\" I said\n\n\"Yes, that sounds a lot better than what I was about to say, thank you.\"\n\n\"OK, that answers who the guy was, but who was the lady with him?\"\n\n\"All I know is her name is Laura, she's from Texas, very Italian and she's their new up and coming starlet. But that's probably all we'll ever know.\"\n\n\"Why's that?\"\n\n\"Gary Mackas only comes in here once a year, thank god, to re-sign his paperwork with us since he runs VCX now. Like I said, it's a part of the agency we don't talk about freely. And I'd appreciate it if you did the same.\"\n\n\"OK, you got a deal.\"\n\n\"Thanks, between us getting sued by Chuck's old partner, and all my other work, I really didn't need that clown showing up. Even if the girl with him was, well...\"\n\nAgain, his voice trailed off and he spun his hand again, like he was waiting for me to provide the right words.\n\nThis time I just started at him. \n\n\"Let me know when you find the words.\" I said as I left his office with him still trying to find the right words. \n\nAs I got on the elevator, my cellphone buzzed with an incoming text message;\n\n\"Meet me at the Polo Lounge tonight, would love to see you again.\" A pair of hearts and kissing lips emphasized the sender, \"Mimi Sheraton\" whom I knew as Paris Hilton. She was right; it had been awhile since I'd seen her. I never knew what she had in store when she contacted me. The Polo Lounge though was different. I'd heard of it but never been there. Perhaps she was looking for a real date. We'd never had one in all the time we'd known one another.\n\nI pulled into the Beverly Hills Hotel's underground garage and found a space for my Mercedes SLK convertible next to a gleaming Corvette Stingray of 1970's vintage with a license plate that said \"CIAO BELLA\".\n\n\"What a sweet ride.\" I said to myself as I looked it over before heading inside to the famous Polo Lounge. \n\n\"Good evening sir, are you meeting someone?\" a crisp doorman said at the entrance.\n\nNow I was stuck! If I said her name I'd be out of there fast. Maybe her alias would work.\n\n\"Uh, yes...Mimi Sheraton.\" I said\n\n\"Ah, yes.\" He said \"Have a seat at the bar, she'll be down momentarily.\"\n\nThis was not the place to order a Corona!\n\n\"Uh, yes...vodka martini, extra dry.\" I said\n\n\"Any particular Vodka, sir?\" the bartender asked\n\n\"Oh, uh...whatever's popular should be fine.\"\n\nI had never ordered a martini in my life. That was strictly my dad's drink of choice. I took a sip like I would any other drink and the concoction hit me immediately. \n\nHow he ever drank these every night I'll never know! He must've had a steel plated liver implanted during the war.\n\nMy phone buzzed again with a message from \"Mimi\".\n\n\"Can't make it tonight, flight from NYC delayed indefinitely, gonna stay overnight here, so sorry!\" with some sad faces added.\n\n\"OK, tonight I'm just another well-dressed patron at the Polo Lounge\" I thought.\n\nWhat do I do now?\n\nI happened to look at the huge mirror behind the bar and noticed a woman entering. She had on a short, low cut dress somehow held up by sparkling straps. She said a few words to the doorman and made a slow path to the bar where she sat a few seats down from me.\n\n\"Hi, Jack.\" She said with an easy southern drawl \"just a ginger ale for now, honey.\"\n\nI tried not to look but I suddenly realized it was the girl from this morning. If this is the girl Gary said had \"all the right moves, and all the curves\", man, was he right!\n\nJust then she turned in my direction and caught me looking at her.\n\n\"Hi there! I saw you this morning.\" She said\n\n\"Yes, evening.\"\n\nShe walked over to my stool and sat down, oh my god what a body!\n\n\"I'm Laura, I never did get your name.\"\n\n\"Jim.\" I said as we shook hands\n\n\"Are you waiting for someone?\"\n\n\"Well, I was\" I said \"I just got a text message from her cancelling our date tonight.\"\n\n\"Aw, too bad.\" She replied as she sipped her drink \"I got stood up too, my man is back in New York. I was supposed to spend the whole weekend with him here.\"\n\n\"Man, that would've been cool.\" I replied\n\n\"Still is, he told me to enjoy myself and charge everything to his company.\" She said as she jangled her room key.\n\n\"Nice!\"\n\n\"You know it baby!\" she said \"so what do you do over there?\"\n\n\"Oh, I run the photo department.\"\n\n\"Awesome! I get pictures taken too. I guess you can figure out what kinds.\" She said with a giggle as she looked down at her chest.\n\nI was looking too, oh, man was it a beautiful view.\n\n\"Nah, I have no idea what kinds of photos are taken.\" I said\n\nShe laughed as only a starlet could laugh.\n\n\"I think you like what you're seeing.\" She said \"Don't be ashamed.\"\n\nI looked at her face now, just as cute as the rest of her.\n\n\"OK, yes. I, uh, like what I'm seeing.\"\n\n\"Would you like to see more?\"\n\nShe seemed to get a thrill out of her directness, and how it affected me.\n\n\"Us Texas girls we get to the point, you know.\" She said as she leaned in closer to me.\n\n\"I guess you do.\" I said\n\nMan, this is going somewhere but I wonder if I should watch my step with her?\n\n\"So how'd you meet Gary?\"\n\n\"Oh, I came out here for a different job, but that didn't work out like I wanted. So I decided to use what I got here.\" She said giving her self (and me) another look at her ample chest \"I used to do that back in Austin, had a lot of fun there.\"\n\n\"I've always wanted to check out that area, I hear it's a lot of fun.\"\n\n\"Oh! You know it, honey! The stuff with Gary is just for show. The real stuff I like to do is with another friend.\"\n\n\"Uh-huh, and who would that be?\"\n\n\"Alex, she takes good care of me, maybe you'd like to see my room? It's so awesome.\"\n\n\"OK, that sounds good. Maybe we could have some dinner sent up or something?\"\n\n\"I like the idea of something.\" She said with another giggle.\n\nLaura and I walked out of the Polo Lounge.\n\nI was in uncharted waters now. \n\nThe elevator smoothly carried us upwards and now Laura's hands were moving upwards as well. \n\n\"I guess your hands have a mind of their own.\" I said\n\nAgain, Laura gave me that starlet giggle.\n\n\"Hey, I'm from Texas, baby\" She said as her hand softly moved to my crotch \"we don't bullshit around.\"\n\nSoon we were in a luxurious suite the likes of which I'd only seen in Vegas. It wasn't high-tech but instead had that old-world kind of charm, or old Hollywood charm as the case may be. Laura casually walked around and dimmed some lights as I looked out onto a garden type courtyard.\n\n\"Pour me a drink, honey.\" She said\n\n\"Anything in particular?\" I asked\n\n\"Oh, just a little wine.\" She said holding her fingers apart slightly\n\nI looked around the small bar and found some wine and poured two glasses worth. I then also noticed a bottle of Jack Daniel's. Finding a shot glass, I poured myself one and quickly downed it. I needed a little \"shot of courage\", as the song goes. I also hoped the right words would come too, as the Eagles song once said.\n\nLaura stretched out on a sofa, legs tucked underneath her as I joined her.\n\n\"So, who's this Alex you're friends with?\" \n\n\"She's a nice lady. She's taken very good care of me\"\n\n\"Alex, huh? Rather unique name, ever call her Al for short?\"\n\nLaura tried not to spit out any of her drink as she snickered at my remark \n\n\"It's short for Alexandra. She provides companions for special occasions and all.\"\n\n\"Oh, like an escort service?\" I said half-jokingly as I took another sip of wine.\n\nShe nodded.\n\nNow things were much clearer. Play it cool, Hollywood. This might turn out better than you expected. The operative word being MIGHT. She must've picked up on the look of surprise I had on my face. \n\n\"Oh! I know what you're thinking!\" she quickly said \"Um, I don't consider what's going on here to be, you know, work.\"\n\n\"Okay, then.\" I said, still wondering if this was for real.\n\n\"I said that my date stood me up.\" She continued \"...and he gave me this for the weekend.\" She said as she looked around the room \"seems a shame to let it go to waste, right?\" she said with her eyebrows raised and a cute smile.\n\n\"OK, uh, right.\" I said \"You, or should I say, we, should put it to good use.\"\n\nShe nodded slowly, still smiling, before getting even closer to me.\n\n\"So, babe...\" she said softly looking down at her ample chest \"you like what you see?\"\n\n\"Oh, yes...yes I do.\"\n\n\"You know the phrase, 'reach out and touch someone'?\"\n\nI nodded\n\n\"Why don't you reach out...and touch me.\" she said softly as she rubbed my crotch again \"...and I'll reach out...and touch you.\"\n\nHer touch felt incredible, I was immediately getting hard. We were so close that it felt natural to kiss her. Her lips were soft and wet. I turned to those beautiful tits of hers. She leaned in further and their fullness was apparent and my hands were caressing those beauties. Even through the material of her dress, they felt soft and warm, the nipples already hard. And she wore a beautifully fragrant perfume that only heightened the sensations I was feeling.\n\n\"Oh baby...Let me make things easier...\" she moaned\n\nLaura slid the straps of her dress down and held her tits, they were enormous! Bigger than any starlets' I'd seen, and all real from what I could tell. She held them in her hands before leaning in and offering one to my mouth.\n\n\"Take it, honey...take it...love it...\" she said as my lips and tongue began to suck and lick her nipples \"....yessssss...just like that baby...oh just like a baby...ohhhhh... suck my boobies...suck 'em...ohhhhhh goddddd!!!\" her moans had taken on a pleading quality that got hotter and sexier the longer they went on.\n\nBy now her hand had found my zipper and as she felt her way inside my pants I felt like my dick would explode through my pants. But somehow she got it out. \n\n\"Ohhhh...so beautiful...so nice...\" her hand had wrapped around it and was softly jerking it to full length, which didn't take much effort!\n\nHer moans were so hot the more I licked and sucked her tits\n\n\"Oh honey...honey...baby...let me make you feel good...lean back.\" She said\n\nLaura leaned down and held my dick in her hands\n\n\"This is gonna be fun.\" She said with a smile as it disappeared into her wet mouth, she looked at me as it went all the way in then as she slowly came back off it.\n\n\"Mmmmm...fuck this is nice, baby...\" she said with a sexy moan \"....this is nice...\"\n\nI was speechless the whole time, it was all so unexpected. But I did as I was told, I leaned back and enjoyed her work, watching her take all of it into her mouth, feel her tongue swirl around the head. When she came off my dick, she brushed it across her face, seductively swirling her tongue before touching it to her tits, around the nipples.\n\n\"Like this baby...like how I suck your cock?\"\n\nAll I could do was close my eyes and breathe slightly.\n\nLaura smiled\n\n\"I like it too.\" She said as she stood and draped herself over me, kissing my cheek and lips softly.\n\n\"Why don't we take out clothes off?\" I whispered in her ear between kisses\n\n\"Oooo...thought you'd never ask.\" She replied slowly and softly in my ear.\n\nLaura slowly stood and I did the same. She let her dress slide off her and onto the floor. As I removed my tie and shirt she stopped me.\n\n\"Oh, baby look...\" she said as she stood before me in her silk panties showing off a large spot \"you made me all wet...made me wet my panties...you naughty boy.\" She giggled\n\n\"Well look what you did.\" I said as my pants were off and my dick stood straight out.\n\n\"I'll just have to take these off, won't I?\" she said as she slowly slid her panties down, revealing a perfectly smooth pussy that looked beautiful. She was very close to me and now slid my underwear down and knelt down, getting the full picture of my hardness.\n\n\"Ahhhh, so beautiful.\" She said looking up at me.\n\nLaura took my dick back into her mouth and her lips wrapped around its length as it slid in and out of her hot mouth, it felt incredible. All the stresses of work seemed to melt away and I felt so good. \n\nSo good...so nice...I could feel...could feel like...\n\nWith a groan I exploded into her mouth, Laura didn't move, she only jerked me off, getting every drop. She looked up again and I could see a slight dribble of cum on the side of her mouth, which she seductively licked off.\n\n\"That was nice, baby!\" she said\n\nI was still panting, my knees felt a little wobbly.\n\n\"I'm sorry it was...so quick.\" I said panting\n\n\"Oh, don't be!\" she quickly replied \"Just makes the next one more fun.\"\n\nLaura stood and held me close.\n\n\"You did fine, baby...\" she said softly with a kiss \"Just fiiiinnne. We've got lots of time.\"\n\nHer accent sounded so sexy, the way she said \"fine\"\n\nThough my dick was softening, I could feel it brush against her warm inner thighs. Maybe I'd be ready for more action sooner than I thought.\n\n\"Let me return the favor.\" I said\n\nNow I knelt down\n\n\"Open your legs.\" I said\n\nLaura opened her legs slightly as I knelt on the floor and could now see her beautifully smooth pussy. It was nicely pink and I could see it glisten slightly. \n\nShe was horny, all right.\n\nMy fingers gently touched its folds, then went inside slightly, she was very wet.\n\nLaura breathed in slowly as this new sensation took hold. I got closer and kissed her pussy. My tongue replaced my fingers and it teased the outside folds before it slid inside and I licked her pussy, she tasted wonderful and I could hear her breathing get rapid and her moans erotic the more I licked her. Her hands gently caressed my head.\n\n\"Oh Jim...uh-huh baby that's it...uh-huh...so hot baby...so hot.\"\n\nMy face was practically buried in this beauty's pussy.\n\nLaura was super-turned on now, and I loved what I was doing to her.\n\n\"Uh-huh...uh-huh...UH-HUH! UH-HUH! OH MY GODDDD I'M COMING BAYBEEEEEEE!\" she screamed out as her legs buckled.\n\nHer pussy tasted even better as I felt her orgasm on my tongue.\n\nShe slowly dropped to my level now and I immediately kissed her\n\n\"Taste yourself, honey.\" I said as I deeply kissed her.\n\nShe almost seemed to be crying.\n\n\"What's wrong? Did I do something bad?\" I was so confused at this moment.\n\n\"No! No! You were great!\" Laura somehow said \"It's been awhile since I felt like that. You just seemed to know what to do, not every guy can do that.\"\n\n\"Really, you mean that?\"\n\nLaura nodded and closed her eyes slightly, as if to emphasize how I'd made her feel.\n\nWe held one another on the floor. When she released her grip on me, she ran her fingers through her thick black hair.\n\n\"That was so awesome baby.\" She said \"I see you're ready for more.\" \n\nMy dick was hard again, thanks to her sounds. \n\n\"Let's check out the bedroom.\" Laura said seductively\n\nWe both slowly stood, but I surprised her by swooping her up in my arms, all that time in the gym had finally started to pay off when it counted.\n\nThe bedroom was certainly luxurious, that's for sure. The bed was elegantly large as I carried Laura in and laid her on the bed. She immediately rolled over to make room for me as I joined her. Our arms were quickly around one another for a long lingering kiss. \n\nI could feel the ultimate experience with her was about to happen when I heard the doorbell, freezing us both.\n\n\"Who's that?\" I asked\n\n\"Hang on, babe. I think I know.\" She replied as she got off the bed.\n\n\"Aren't you gonna put on a robe or something?\"\n\n\"Why? I'm not ashamed of my body, neither should you.\" She said as she left the bedroom.\n\nI heard the door open and it sounded like she was glad to see whoever it was. Laura returned with another lovely lady in tow.\n\n\"Jim, this is Vicky.\" She said before turning to Vicky \"You're just in time, babe.\"\n\nVicky was a stunner with thick blonde hair and a figure to match Laura's.\n\n\"Whoa! Who's this?\" she said with a big smile and jaunty tone.\n\nLaura hopped onto the bed and wrapped her arm around me\n\n\"I met him in the Polo Lounge, his name's Jim and he's...\" she turned to me \"very nice.\" \n\n\"Well if he's a friend of YOURS, babe he's gotta be nice!\" she said with a hearty laugh. \"Can I get a drink?\"\n\n\"Sure, the bar's out there.\" Laura said as she turned to me and gave me a quick peck on my lips. She got off the bed and went to a small bag on a table and adjusted her makeup a little. \"What are you doing out here tonight, anyway?\" she asked Vicky\n\n\"The Congressman is in town, the one we went to the party with, remember?\" Vicky said from the other room.\n\nI could see Laura's eyes widen in the mirror's reflection as she remembered.\n\n\"Oh, wow! He's back?\" she laughed\n\n\"Uh-huh! He was speaking to this group, says he'll run for another term, gonna clean up Washington, blah-blah-blah.\"\n\n\"Was this before or after you gave him a BJ?\"\n\nVicky laughed again.\n\n\"Who was this?\" I asked\n\nLaura looked back at me through the mirror, her naked body looking so nice.\n\n\"A good escort never tells her secrets, right Vicky?\"",
        "\"Fuckin'-A babe!\" she called back with a laugh.\n\n\"We learned that from Alex.\" Laura said as she turned around and faced me. Her tits still looked incredible, her pussy smooth as silk. She came back to the bed and curled up with me as we kissed.\n\n\"Save some for me, hon.\" I heard Vicky say as she stood in the doorway momentarily, her tits were just as nice as Laura's, I was awestruck. Her pussy looked nice too, with a nice landing strip of dark hair near the top.\n\n\"Does she look nice, Jim?\" Laura asked me with a giggle.\n\nI turned to face her\n\n\"Oh, yes...very nice.\" I said\n\n\"Hear that, Vicky? He thinks you're nice.\"\n\n\"Just nice, Jim?\" she said \"You mean these are just nice?\" she said as she cupped her tits\n\nThese girls seemed to love taunting me, they knew they had me right where they wanted me. OK, I can play this game too.\n\n\"OK, uh, they are stupendous! Awesome! Extremely fuckable!\" I turned to Laura and added \"as are yours, my dear.\"\n\n\"You're such a charmer.\" Laura said to me with a smile \n\n\"Let's see how much of a charmer he is.\" Vicky said as she joined us.\n\nWe were all on our knees exchanging gentle kisses. I caressed Vicky's tits as we kissed while Laura leaned down and began licking the nipple on her left breast, eliciting a gentle moan from her.\n\n\"Oh, yessss...yes Laura...oh so gooood.\" She moaned as she swung her blonde hair back. I did the same on her right breast. She had two sets of tongues on her tits, and it was so sexy to experience. Vicky lay flat on the bed and let the waves of pleasure go over her.\n\n\"Isn't he good, Vic?\" Laura said softly\n\n\"Oh, yes...so good.\" She moaned in return\n\nI took her nipple into my mouth and eagerly sucked it, Laura did the same before deeply kissing Vicky, I could even see their tongues merging. Each one did the same to me, I couldn't decide whose tongue I loved better, like it made any difference? Now Vicky went after Laura's huge tits, taking one in her mouth while I took the other. It was Laura's turn to be driven wild by our tongues and lips.\n\n\"Suck her boobs, Jim...you're gonna fuck those soon, baby.\" Vicky said with a leering smile as she watched her friend. \"Right, Laura? Is Jim gonna fuck those big boobs?\"\n\nLaura somehow gasped out a \"yes\"\n\n\"Yeah...Jim's gonna fuck you good, and he'll fuck me good too. Won't you Jim?\"\n\n\"Uh-huh.\"\n\n\"Oh yeah...lemme check that pussy.\" Vicky said as she fingered Laura's pussy, making her eyes open wide and a louder gasp come from her mouth. \n\n\"Mmmm...nice and wet.\" Vicky said approvingly to her friend \"Yeah, you're fuckin' wet aren't you babe?\"\n\nLaura gasped out a desperate sounding \"yes\"\n\n\"You like it when a guy sucks your big boobs?\"\n\n\"Y-y-yes! I love him sucking my big boobies.\"\n\nI loved licking her tits and now I was rubbing her pussy.\n\n\"Like the way Jim sucks your boobs?\" \n\n\"Yes!\"\n\n\"Want Jim to fuck you?\"\n\n\"YES!\"\n\n\"SAY IT, LAURA!\"\n\n\"I want Jim t-to fuck me!\"\n\n\"LOUDER!\"\n\n\"I WANT JIM TO FUCK MEEEEEE!!!\" Laura screamed out\n\n\"YEAH! DO IT JIM!\" Vicky commanded\n\nLaura immediately fell back onto the bed and spread her legs wide.\n\n\"Oh, Laura babe, you look so nice. Do you see Jim's dick?\"\n\nLaura nodded as she continued to rub her pussy\n\n\"He's gonna put this nice dick inside you, It's so big I'll have to guide it into your sweet pussy.\"\n\nVicky did as she said and she guided my dick into her pussy, making her gasp as I entered her. Wow she felt incredible as I fucked her. We were so close, her eyes were slightly closed and little cries came from her along with many sexy moans. These only encouraged me to keep going, watching her huge tits sway back and forth as we fucked. I still kissed her throughout, just to keep the romance going. Vicky was close to us and her breathing was sexy too. I'd look over at her and we'd kiss or she'd kiss Laura and stroke her hair as we fucked.\n\n\"How does he feel, baby?\" she asked Laura, but not in the commanding voice she had before.\n\n\"Wonderful...so good...\" she said in a soft voice\n\nVicky had me sit up a little so she could feel and suck Laura's tits as we fucked. This made her moan even more.\n\n\"Fuck her good, Jim...she loves to fuck...wow look at these big tits of hers.\" Vicky said as she leaned down and eagerly grabbed Laura's tits and kissed them.\n\n\"Ohhh....fuck yeah!\" Laura cried out\n\n\"I'm gonna want...to cum on those tits.\" I said\n\n\"Oh yeah! She loves that...don't you babe?\" she said to Laura as she kissed her forehead\n\n\"I love it!\"\n\n\"Love him to cum on your tits?\"\n\n\"Uh-huh!\"\n\n\"Your big boobies?\"\n\n\"Uh-huh...my big boobies.\" Laura giggled a response\n\n\"Cum in your pussy?\"\n\n\"Uh-huh...cum in my pussy.\"\n\n\"Oh, I love watching his dick slide in and out of your pussy, it looks so big.\"\n\n\"Ohhhh...it feels wonderful!\" Laura moaned\n\nI slowed down and pulled out of Laura and sat back on my legs, I motioned with my hands for her to sit up. She sat up and it was so cool to just see her like that, she looked so ready for more.\n\n\"Let me see your ass, babe.\" I said\n\nLaura smiled and turned around and showed me her cute ass.\n\n\"You should get in on this too, Vicky.\" \n\n\"Oh, my...what did you have in mind?\" she asked with a naughty smile on her face\n\n\"Well, just watch and do what you feel like doing.\" I said\n\nI got up behind Laura and my dick easily slid back into Laura's pussy, eliciting a groan of lust from her. My hips started a steady pounding of her and her ass felt just as smooth as the rest of her.\n\n\"Oh my god...he feel so gooood!\" Laura groaned.\n\nVicky got in front of Laura and gently kissed her. Then opened her legs and Laura buried her face in Vicky's pussy, making Vicky cry out in pleasure before she looked at me.\n\n\"Do her good, Jim...do her good.\" She moaned\n\nI continued to fuck Laura as she moaned and gasped with each push into her. I loved the show from my end too. Vicky was caressing Laura's brunette hair as she was licked. Her tits looked great as they heaved upward with each gasp from her. Vicky's breaths got more rapid as Laura was bringing her to orgasm before she brought her head up.\n\n\"OHHHH FUCK!!!\" Laura screamed out \"FUCK ME JIM!! FUCK ME!!\"\n\nVicky suddenly cried out as she was sent over the edge by Laura, with help from me.\n\nI leaned down and felt Laura's beautiful tits, then pulled her up so she was on her knees so I could kiss her neck. Vicky somehow sat up and kissed Laura while rubbing her pussy.\n\n\"You're doin' good Jim.\" Vicky said as she kissed me \"It's my turn, now.\"\n\nI looked at Laura and she nodded her approval.\n\nI pulled out of Laura, my dick glistening like her pussy. We were all on our knees and kissing. Vicky now lay on her back, legs open and looked over at Laura who was gently rubbing her pussy.\n\n\"Was he as good as it looked?\" she asked with a grin\n\n\"Very good!\" Laura giggled\n\nI had two beauties lying in front of me, their legs spread and inviting me in. I couldn't believe how lucky I was. \n\n\"Getting your pussy ready, Vicky?\" I asked \n\n\"Uh-huh...it's ready now, babe.\" She replied\n\nI got on top of the lovely Vicky and my dick slid into her now just as effortlessly. Vicky moaned long and slow as I filled her. She felt just as hot as Laura as I began fucking her. Laura was beside her gently rubbing and fingering her pussy as her friend was fucked next to her, Vicky's moans were just as sexy. But now Laura was being the aggressor.\n\n\"See what I mean Vic? Isn't he good?\"\n\n\"Oh yessss...fuck me Jim...fuck me.\"\n\n\"She's got such a nice pussy doesn't she Jim?\" Laura said\n\n\"Oh yeah...very hot.\" I somehow replied\n\n\"Just as good as mine, huh?\"\n\nI nodded.\n\nLaura turned and sucked Vicky's tits before they lovingly kissed.\n\nI was really doing her good. It was all still unbelievable to me. And I didn't care if I felt an explosion building so quickly from within. I fucked her harder now.\n\n\"Oh GOD! YEAH, BABE! Oh yeah...oh yeah oh OH YEAH!!\" Vicky screamed out\n\n\"Gonna cummmmmm....\" I groaned as I exploded inside Vicky's pussy, making Laura cry excitedly too.\n\n\"Oh! He's cumming inside you Vic!\"\n\nVicky gasped and continued breathing hard as we all came down from our \"high\" as it were. Laura now kissed me lovingly.\n\n\"That was nice, we're gonna have some fun here, I know it.\" she said\n\nI rolled off Vicky and was also breathing hard.\n\nLaura was on her knees smiling at her two friends. She obviously loved what she'd just seen.\n\nVicky smiled too as she ran her fingers through her hair.\n\n\"Laura, dear?\" she said to her in a singsong voice \"Would you like a creampie?\"\n\nLaura bit her lip and gave me a naughty smile.\n\n\"Watch this, Jim.\" \n\nLaura crouched down and her face disappeared between Vicky's legs, Vicky immediately gasped out an \"OH!\" as she felt Laura's tongue probing her pussy.\n\n\"HUH-GOD! OH GOD! OH GODDDDD!!!\" Vicky screamed as her body convulsed, she almost levitated off the bed it was so intense. \n\nLaura watched and was smiling the whole time as her friend slowly returned to normal, her chest still heaving.\n\n\"Pretty wild, huh Jim?\" she said as she wiped her mouth with her finger.\n\n\"Yes, I've heard about that but never seen it done.\"\n\n\"She taught me how to do it, always sends her into orbit.\"\n\nVicky finally sat up slowly, then lay back on the pillows.\n\n\"Whoa, that was fuckin' intense.\" She said, still breathing rapidly.\n\nI liked sitting there with these two naked beauties. This was a fantasy of every guy (and maybe a few girls), but frankly I had no idea what I wanted to do next! Laura came over to me and was very close to me again.\n\n\"So, Jim...did you like being with us?\" she asked in a very sexy voice.\n\nVicky had since turned over on her side\n\n\"Yeah, Jim...did you like doing it with two girls?\"\n\nI could only take a deep breath\n\n\"It was...amazing.\"\n\n\"Well, let's keep it amazing.\" Laura said as she kissed me deeply\n\nVicky smiled at what she was seeing before rolling onto her back. I loved how her legs were so casually spread open.\n\n\"I guess we've worn Vicky out.\" I said\n\nLaura looked over at Vicky who seemed to be dozing.\n\n\"It takes a lot to wear her out. She's probably recharging her batteries. What about you?\" \n\n\"Well, I don't know just yet.\" I said with a smile before giving her a quick kiss.\n\nLaura climbed off the bed and led me back into the living room and started to look at the room service menu.\n\n\"I guess sex makes you hungry?\" I said\n\nLaura laughed\n\n\"Yeah, I guess so!\" she said \"they make great burritos and tacos here, want some?\"\n\n\"Sure, why not.\"\n\nLaura called and had an order prepared, telling them to leave it outside the door.\n\n\"Interesting how you can get burritos and tacos at a place like the Beverly Hills Hotel.\"\n\n\"They make everything here, they aim to please.\" Laura said as she poured herself some water.\n\n\"Just like you, huh?\" I said\n\nLaura looked at me with a slightly bashful expression\n\n\"Aw, you're such a charmer, Jim.\" She said in an exaggerated (or was it?) Texas drawl.\n\n\"Nah, you're the real charmer.\" I said\n\nLaura held me loosely around my waist. We were both still naked, her body felt so beautifully soft and warm.\n\n\"So, how would you like me to charm you?\" she said looking up at me with her smiling eyes.\n\n\"Gee, I don't know.\" I said with a comical roll of my eyes.\n\n\"You'll think of something...I know it.\"\n\n\"Well, one thing I know is I gotta make a pit stop.\" I said as I headed for the bathroom. It was suitably luxurious with lots of marble surfaces. As I stood to \"empty my tank\" as it were, Laura stood beside me.\n\n\"Let me give you a hand, sweetie.' She said as she held my dick. She seemed to love how it would pulse and twitch a little in her hands. Once I finished, I reached for the handle but she stopped me.\n\n\"Not yet, I have to go too.\"\n\n\"Ah, OK\" I said as I turned around to leave.\n\n\"No, no...you can watch.\" She said as she sat down and spread her legs.\n\nI'd never been inclined to be a voyeur at times like this but it had been such an unreal evening that it seemed perfectly normal. Laura even seemed to enjoy my watching her.\n\n\"I guess you like to watch, huh?\" she said as she dabbed her pussy clean.\n\n\"No, not necessarily, uh...\" I was tongue tied at the moment\n\n\"I think you do, because your dick looks even nicer than before.\"\n\n\"It must be the lights.\"\n\n\"Maybe...might just be you're turned on...I know I am.\" She said with a smile as she leaned back, casually touching her tits.\n\n\"Would you like to get cleaned up before dinner?\" I said\n\n\"Oohh, nice thought.\" She said\n\n\"We already got dirty, maybe it's time to get clean.\" I said with a shrug.\n\nLaura nodded her approval\n\n\"And then, we can get dirty again.\" I added\n\nI reached in and started the shower. The shower was large with glass doors around it, a small bench that faced the door and a detachable shower massager. As we stepped in, we felt wonderful amidst the heat and steam. I was immediately on her as she let the hot water flow through her hair and ran her fingers through it. We got some liquid soap and lathered up a large buff and were soaping one another until she was awash in a soapy lather that smelled beautiful. She was moaning and breathing hard as I felt her all over. When my hand reached her pussy I immediately had a finger inside her and she was gasping as I finger fucked her. Her hands felt great on me and my dick was getting harder and harder the more I kissed and felt her. She took the shower massager and began rinsing me off before handing it to me with a naughty expression on her face. I slowly rinsed her off and when I turned the hot water on her pussy she let out an erotic cry of pleasure. She turned around and bent over pulling the cheeks of her ass apart.\n\n\"Wash my ass, honey.\" She said\n\nShe loved the feel of the water shooting all around her ass as it rinsed her off. \n\nI turned her around so her back was to the shower wall. She instinctively opened her legs and I positioned my dick at her pussy and slid in effortlessly. She moaned deeply and my hands went under her legs and as I slowly picked her up, they wrapped around my legs. \n\nWow, I was fucking her standing up! \n\nI guess her being a little short really came in handy! \n\n\"Uh-huh baby...oh yeah fuck me honey...fuck me honey.\" She moaned, and then smiled. It was her way of telling me how good she felt.\n\nI kept fucking her and she gritted her teeth as wave after wave of pleasure came over her.\n\n\"Gonna cum baby...gonna cum..ohhhhhhhhggggoddddddd!\" she cried.\n\nAs she climaxed, her body started to go limp and we slid down to the shower floor. Still inside her, we kissed deeply as she pushed every last bit of orgasm out of her.\n\nJust then Vicky walked in.\n\n\"Hey, you two just can't keep your hands off one another\" she said as she sat down on the toilet like Laura did before. Laura giggled in response.\n\n\"He hasn't even cum yet.\" She said \"it's your turn, baby.\"\n\nLaura stood up slowly and told me to do the same, then she began to caress my dick. Vicky was sitting on the large counter of the sink, legs spread and slowly fingering herself, enjoying the show in front of her. \n\n\"Just relax honey, I'm gonna make you feel real good.\"\n\n\"I've got a better idea.\" I said \n\nI led her over to the bench and as I sat down, I turned her around so her lovely ass was facing me.\n\n\"Let's give your friend a nice show.\" I said\n\nLaura looked nice with her hair slicked back from the shower. Along with her slightly tanned skin, it emphasized her lovely curves. She gave me a naughty smile as she lowered herself onto my dick.\n\n\"Getting' a little kinky, huh, Jim?\" Vicky said as she watched us.\n\nLaura moaned as she leaned back in my arms as my dick filled her. I kissed her neck and held her tits as we fucked.\n\n\"Oh my god, this is sooo good!\" she said quickly \"So fuckin' hot!\"\n\nI looked over her shoulders and could see Vicky with two fingers deep inside her pussy and a look of total concentration as she watched her friend fuck this (somewhat?) cool guy. I was still trying to believe all that had happened to me tonight. But that didn't matter. I fucked her harder as she sat on my lap, making Laura cry out in passion.\n\nVicky could sit still for just so long. I saw her get off the sink and enter the shower. She took the shower massager and looked at Laura.\n\n\"Mmmmm you two look so hot.\" She said as she held the massager \"I wonder what this could do?\"\n\nLaura was too much into me that she couldn't respond I wish I could see her face though.\n\nVicky turned on the sprayer and sprayed it on Laura's body, gently massaging her tits with the water. \n\n\"Does that feel good, sweetie?\" she said as she kissed Laura\n\n\"Yessss...so good.\" She moaned before laughing slightly as she enjoyed me\n\n\"You're doing her good, Jim.\" Vicky said as she kissed me\n\nVicky began to spray the water on her body and we were all nice and slippery. Vicky took the massager and worked it up Laura's legs before she aimed it at Laura's pussy. Immediately, Laura let out a long cry of passion, I loved the feeling too as it hit my dick. As if it couldn't get any hotter, I saw Vicky disappear from view, then Laura let out another loud cry, I felt something slick on my dick and realized Vicky was licking Laura's pussy and my dick. Between my kisses on her lips, hands on her tits and now Vicky between her legs, Laura was going into orbit. I was too and I couldn't hold out any longer.\n\n\"Gonna cum! Oh my god, gonna cum!\" I said quickly\n\n\"Make her cum Jim! Make her cum!!\" Vicky said urgently\n\n\"Yes! YES! YES! YESSSSSSSS! OH GODDDDD!\" Laura cried out as she felt me explode inside her \"I FEEL IT OH GOD I FEEL IT!!!\"\n\nWe both went limp in each others arms. Vicky continued to lick us before she stood and kissed us on the lips.\n\n\"Mmmm...you two are really hot together, you know that?\" she said as she stood over two exhausted people. \"I need to do one more thing, though.\"\n\nVicky went down on her knees and kissed Laura's pussy and my dick, then I felt her remove it and Laura let out another cry of passion.\n\n\"Oh my godddd...she's licking me!\" she cried\n\nLaura was getting the same creampie treatment she'd given Vicky. I was feeling it too as she cleaned off my dick, she seemed to love the mix of our love juices. We all somehow stood up, Vicky and Laura gently washed me off, then each other. \n\nAs we dried ourselves off, I heard the doorbell and Laura immediately scampered out to the door, still naked. I got a glimpse of her ass as she stood in the doorway to sign for our dinner. The waiter was trying not to look at her but Vicky and I got quite a laugh at his feeble attempts. Laura laughed too once the door was closed.\n\n\"There's the highlight of his night.\" I said to Vicky\n\n\"Hell, that was nothing, I'm sure there's a few people in this place with Marilyn Monroe stories.\" Laura said as she rejoined us.\n\n\"Or Lindsay Lohan for that matter.\" Vicky said as she dried herself off.\n\nAll the sex we had might've had made Laura and Vicky hungry but it made me sleepy and I barely made it through dinner. We all retired to the huge bed and were soon asleep. I don't know the time but I felt Vicky rouse me at one point.\n\n\"Hey, Jim.\" She said softly as I awoke \"I gotta go now, it was great meeting you. We'll have to do this again.\" She said as she kissed me and Laura.\n\nIn the morning, Laura walked me to my car and proudly showed off hers.\n\nIt was the red Corvette I saw when I pulled in.\n\n\"This is yours?\" I said amazed\n\n\"Uh-huh! Let's just say it was a special gift from a friend.\"\n\n\"Uh-huh...\" I said slowly as I looked over the car that had curves to match its owner \"I'd say something clever right now...but I'm speechless.\"\n\nLaura laughed as she embraced me against my car.\n\n\"You've got some nice wheels too. You'll have to take me for a drive sometime.\"\n\n\"It's a deal.\" I said as we kissed",
        "Laura eased her slender frame into the Corvette and the powerful rumble of its engine reverberated in the garage as she started it up. She checked herself in the mirror before putting on some stylish sunglasses.\n\n\"Bye, babe.\" She said as she blew me a kiss and the Vette roared out of the garage.\n\n\"Ciao, Bella.\" I said in my best Italian\n\nI stood alone now.\n\nIt had been quite a night, to say the least.\n\nI looked at my phone which showed me my appointments for the day. In thinking about the lawsuit, for some reason I didn't feel as nervous as before, in fact I was very curious about the whole process.\n\n\"Let's see what happens, Hollywood.\" I said to myself as the SLK smoothly started up and I headed out into the Los Angeles morning.\n\nAs I drove back home, my cellphone rang.\n\nIt was the company's lawyer, Michael Baldwin.\n\n\"Jim, get yourself a good suit and be ready tomorrow morning we have a meeting at the courthouse.\" He said\n\n\"They've made a decision on the lawsuit?\"\n\n\"Yes, that's what I've been told. The judge has gone over the evidence presented, all the depositions. If they go forward with the case, they'll need to interview you.\" \n\n\"Wow, uh, OK. What time?\"\n\n\"I'll pick you up at 8 o'clock and drive you there.\"\n\n\"OK, see you then.\"\n\nAs I drove on, the nerves I'd been feeling about this case started coming back. I didn't know what to expect if I saw Marty again.\n\nI barely slept all night, even Smokie the cat knew something was up. When 8 am arrived, Michael arrived on time in a huge black Mercedes sedan. I had on my best suit and tried to tell myself everything would be fine. \n\n\"Good choice of suit, Jim.\" Michael said as he stood by the passenger door \"let's go.\"\n\nI climbed in the back seat and got the surprise of my life.\n\n\"Hey, baby.\" \n\nIt was Blake Lively, looking all business in a navy skirt and blazer combo. Her blonde hair was tied in a loose ponytail. She gave me a quick kiss as I sat down next to her.\n\n\"What the hell are you doing here?\" I asked\n\n\"Moral support, Michael is my lawyer too so I thought it would be good to be here for you.\"\n\n\"You've been so nervous lately and I thought you could use a familiar face at a time like this.\" Michael added\n\n\"Well I guess I can't argue with that.\" I said as I looked at her\n\nShe gave my hand a squeeze and smiled.\n\nAs we pulled up to the courthouse, I was surprised to see a cadre of photographers.\n\n\"Marty has obviously been trying this case in the media, this all goes back to the stuff with Tigress that happened New Years Eve. Unfortunately this is Hollywood, my friend.\" Michael said before leaning in close to me \"Now, like I said, keep quiet no matter what's being said.\"\n\n\"Just follow my lead, Jim. I've done this a lot, put your blinders on and we'll be OK.\" Blake said\n\nAs we stepped out a barrage of camera clicks could be heard and reporters shouting questions, they hadn't counted on Blake being there and that only made things even more chaotic. Michael quickly hustled us inside and through the metal detectors. We made our way down a hallway to what seemed like a conference room. Down the hallway I saw Marty O'Brien outside a similar room. He had lost some weight and was with his own legal team. But what really surprised me was a short brunette haired girl wearing a gold sweater and grey slacks who walked past Marty and then past us. It looked like Laura, the girl I'd met at the Polo Lounge. But what was she doing here?\n\n\"OK, I need to talk to someone here, I'll be just a minute.\" Michael said as he led us in the room and closed the door.\n\nBlake sat down and got out her IPhone and started a text message.\n\n\"How can you do that at a time like this?\" I said, surprised at how cool she could be.\n\n\"Jim, don't worry about this, you're gonna be fine. I just know it.\" She said calmly\n\nI took a deep breath and nodded in agreement.\n\nThe door opened and Michael stepped in.\n\n\"OK, I need your signature on this, it's the deposition you did in my office. This will be the official copy going into the court records.\"\n\nI looked over it and saw it was a perfect transcription of the meeting I had with Michael in his office.\n\nI took a pen and signed as calmly as I could. At times like this, my signature always looked terrible, and this was no exception as I tried signing my full name, complete with middle initial.\n\n\"OK, we're ready to roll. I shouldn't be too long.\" He said as he left the room.\n\nI was alone with Blake.\n\n\"So, what's new in Gossip Girl land?\" I asked her, making us both laugh.\n\nFifteen minutes later, Michael returned.\n\n\"So, feel like celebrating?\" he asked\n\n\"Celebrating?\"\n\n\"Marty's case was thrown out of court, insufficient evidence on his part. We had all we needed to prove you did nothing wrong and he did everything wrong.\n\n\"So...?\" I asked, my excitement building\n\n\"You're in the clear, my friend.\"\n\nBlake immediately hugged me\n\n\"Oh my god, I'm so happy for you!\" she said excitedly\n\n\"I have some loose ends to clear up with the court but you're free to go, there's a private exit to the garage where the car will pick you up and take you home.\" Michael said as he looked at us \"...or wherever else you two choose to go.\"\n\nI was still in shock that this nightmare was over before it had even begun, I was practically shaking.\n\n\"Geez, Michael I don't know what to say.\" I somehow said\n\n\"Say thank you and accept my offer of dinner tonight.\" He replied.\n\n\"We accept!\" Blake immediately said with her classic smile.\n\n\"The lady knows just what to say.\" Michael said as we shook hands \"I'll call you later on.\"\n\nWe all walked out of the conference room victorious, Michael went back to the court room, while Blake and I started towards the elevators. \n\n\"Oh! I've got an idea about dinner, let me go find Michael\" I said\n\n\"OK, I need to make a couple of calls.\"\n\nShe gave me a quick kiss and went off.\n\nI walked down the hall towards the court room Michael had entered and suddenly heard screaming and several loud \"pops\".\n\n\"What the...\" I started to say\n\nSuddenly my leg felt like it had exploded from within and I fell to the ground. My side felt like it was on fire. I didn't know what was happening to me but I looked at my leg and saw blood, a lot of blood.\n\nWhat was happening to me? I couldn't move.\n\nI heard explosive sounds down the hallway and bits of the wall hit the ground\n\nWhat's happening?\n\nI was terrified.\n\nI still couldn't move, my leg and side ached.\n\nThen I looked up and saw something I could scarcely believe, something that terrified me even more.\n\nMarty O'Brien, he was staggering somewhat and his suit was bloodied. His face was ashen but his eyes clear and focused. He was holding what seemed like a 9mm pistol. \n\nHis hand raised the gun and he looked down at me.\n\n\"You bastard...this is all your fault...ALL YOUR FAULT!!!\" He said through clenched teeth.\n\nOh my god, I couldn't even speak at this moment.\n\nSomehow I found the strength to move my arm over my face and close my eyes.\n\nI didn't want to see what was next.\n\nAll I heard was a bang that echoed in the long corridor before everything went black."
    ],
    "authorname": "hollywoodjim",
    "tags": [
        "blondes",
        "brunettes",
        "big tits",
        "shower",
        "threesome"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/adventures-of-hollywood-jim-ch-52"
}