{
    "title": "Point Hollow Ch. 03",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n\n\nThis story is dedicated to the memory of Dame Agatha Christie, and is partially inspired by her Poirot novel 'The Hollow'.\n\nPart 13 - Meetings \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded MILF reporterette from outside University Hospital at 7:00am, Tuesday, May 3d. \"Channel Two News has learned that the three students found by the FBI outside the State have been transported to University Hospital, where they are currently recovering. There is still no word of the fate of Danny Cantrell, the only student still missing.\"\n\n\"In political news, today is Primary Voting Day in the State.\" Bettina continued. \"Most local and State incumbents are not being primaried, and the red-hot District Attorney's race is officially non-partisan and will not be contested until November. In that race, District Attorney Gil Krasney maintains a 49-46 lead over Jenna Stiles. \n\n\"And in the Governor's race, it will be a mere formality to name Val Jared the Republican candidate and Jack Lewis the Democrat's challenger. Governor Jared has developed a 50-44 percent lead. Karl Frazier of Public Policy Polling has told us that the recent SBI raids into the City and Hamilton County have not gone over well with the Public, and this could be hurting SBI Director Lewis's standing in the polls.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Okay, get your doughnuts here!\" I said as I brought in two boxes of the Police staple breakfast. Detectives quickly attacked them.\n\n\"Parker will be here in a little bit.\" said Cindy. \"He was here until 2:00am getting data on the missing students. The FBI has essentially cut us off, by the way.\"\n\n\"I know.\" I said, then said much more quietly, \"I unleashed the full power of the Mouseketeers yesterday. I'm sick and damn tired of people I thought were friends and colleagues not even having the common courtesy of returning a phone call to tell me to mind my own business.\"\n\n\"I am the choir. You are preaching to it.\" Cindy said, then raised her voice and said loudly so that everyone could hear it: \"By the way, we have over 120 entrants for the Police Boxing Matches, Freestyle Division. My only regret is that I only get to whip some of you.\"\n\n\"I hope I'm in your bracket, Captain.\" said Detective Joanne Warner. \"We'll see who whips who.\" The bravado got some cheers as the two blonde stared each other down, then Cindy made the 'V' with her fingers to her eyes then at Joanne. Game on!\n\n\"By the way,\" said Lt. Wes Masters, \"who makes the brackets?\"\n\n\"Usually the Captain of Uniformed Personnel...\" said Cindy, then stopped as she looked at him. \"But now we don't have one. That would mean...\" All eyes went to Your Iron Crowbar. I smiled.\n\n\"That's right.\" I said. \"Me. Actually, Commander Harlow and I are doing it together, and the Chief will look at it before it's final. First rounds are this weekend. Finals are June 4th.\"\n\n\"A day which will live in infamy... for the Iron Crowbar.\" said Cindy with great alacrity.\n\n\"I think I hear smack talk, Mr. Coldiron.\" I said with great coolness as I sipped my coffee. Lt. Masters nodded with a grin.\n\n\"More like smack-down!\" said Mary Mahoney Milton as she came in. \"It's gonna be Girl Power all the way!\" She and Cindy high-fived.\n\n\"I'll be in my Man Cave, that being my office.\" I said, then said quietly to Mary as I passed by: \"You know, man cave... the big office, not the cubicles.\" Mary laughed as I walked out of MCD with all the male dignity I could muster.\n\n* * * * * * * * * * * * * * * *\n\nCindy came into my office just before 8:00am. \"Commander, I have a question about------\"\n\nShe stopped short, seeing what was on my wall to the right of my desk, her left as she came in. Instead of Pete Feeley's badge alone in a frame, there was a frame that contained two badges side-by-side... Pete's on the left, and Tanya's next to it on the right. Just above the bottom of the frame was a slip of paper, a tiny slip, with the inscription 'Deuteronomy 32:35'.\n\nCindy stared at the framed badges for a long time, then finally looked at me. I was looking right back at her. She just nodded her head, then said \"Excuse me a moment.\" and left the office...\n\n* * * * * * * * * * * * * * * *\n\nMeetings. It was a day of nothing but meetings. First, what was formerly called the 'Crowbar Angels' meeting... with Tanya gone, we respectfully retired that name. Teresa then rather sarcastically suggested we call it the 'Detective Fiction' meeting... and of course that stuck.\n\n\"What's the uniform policy for us, Commander?\" asked Wes Masters. We all happened to be wearing light blue shirts with soft shoulderboards. As Senior Officers, Masters and Ross had on pants with a thick light-blue piping stripe down the sides. Teresa was wearing a dark blue skirt, and therefore had no piping. I had the double line of thin light-blue piping on the sides of my pants, representing the Command Group.\n\n\"Whatever I'm wearing.\" I said jokingly, then said \"Seriously, the Chief wants Captains and above to wear uniforms, and preferrably the light blue shirts, though of course we can wear white shirts with Duty Dress or Formal uniforms. You and Teresa will be just fine in plainclothes or like Cindy and me, here. Detectives are being encouraged more and more to wear plainclothes, except on Promotion Days and Orange Order day, etc.\"\n\n\"Just wear clothes.\" Teresa said. \"It'd get really bad if everyone started running around here 'nekkid'.\" We all laughed, then I brought the meeting to business.\n\n\"Okay, Coldiron,\" I said, \"I know you've hit the ground running, but you're still barely up to speed. Teresa, what does Vice have going on?\"\n\n\"First, Lorena Rose's mother died, so she will be ending her unpaid leave of absence and going to Detective School.\" Teresa said. \"I'll be very glad to have her back, too. Right now, there's not a lot going on. We're trying to help with the missing students case and the drug lab found at Point Hollow. The FBI is not really interested in the drugs aspect of the case, though.\"\n\n\"Okay, Cindy, whaddya got?\"\n\n\"We're going to have to start talking personnel.\" Cindy said. \"With Torres still on loan to Vice, MCD only has Joanne, Theo, and Teddy. I really, really, really want to get Joanne to Detective School and Advanced School. Teddy has been doing well, and we need to get him to Detective School. Theo's already been to Detective School, 'Coldiron', so he's good to go.\"\n\n\"Yeah, we'll have to talk about that.\" I said. \"Detectives will now be coming up through the Uniform ranks, as well. The current people you see will be expected to be leaders of teams. Of course some in the Council want these teams dispersed amongst the Precincts, but that's simply not going to happen while I'm alive and while Daniel Allgood is Sheriff. So what will happen is we'll have more people coming in to the MCD and Vice Rooms here, but they'll be Corporal-level Detectives, green as grass yet thinking they can solve the Grand Unification Theory.\"\n\n\"No worries there, guys.\" Cindy said to the others. \"One day in the field with the Iron Crowbar, and they'll quickly be cured of any illusions of grandeur on their own parts...\"\n\n* * * * * * * * * * * * * * * *\n\nThe meeting with the Precinct Captains was being held in the Precinct 3 Headquarters Conference Room, as PCpt. Briscoe was the new man. The other Precinct Captains congratulated him as we gathered. Briscoe and Precinct 1 Captain Briggs were old friends, and while Briscoe was not as laid back as Briggs, they were going to be talking fishing more than Police leadership, I suspected. Oh well, Chief Griswold had been guilty of that, too...\n\n\"Okay guys,\" I said, \"I know Briscoe is getting up to speed, so he gets a free pass this meeting. Enjoy it.\" The others laughed. I was their direct superior officer, with no in-betweens, and I had developed a small reputation for expecting questions to be answered and plans well in place and easily explained. They even made sure they knew what the duty schedules were or had copies available to show me.\n\nWe went over personnel and equipment wants and needs, then I opened the floor for questions.\n\n\"Sir,\" asked 2nd Precinct Captain Damien Thompson, \"is there any truth to the rumor about having Detectives assigned to Precincts?\"\n\n\"In the minds of three Council Members, yes.\" I replied. \"But that is a figment of their imaginations, like the 'Leg Ranger'. Basically, you guys will be expected to evaluate and recommend good talent for Detective positions, and if they want to take that path, they'll be assigned to Headquarters, and sent to the field anywhere in the County.\"\n\n\"Sir,\" said 1st Precinct Captain Briggs, in his drawlish way of talking, \"I've been getting questions about emergency medical service. With the EMTs gone, who's going to be doing that? Some of my Officers are getting Red Cross training to supplement our basic training, but we're not paramedics by any stretch of the imagination...\"\n\n\"You're right.\" I said. \"We're looking at getting some increased training for all our Officers, but we have to be careful: if either us or the Fire Department starts having anything resembling medics, the Federal Departments of Justice and Labor will come in and hammer us, that being the County, over the disbanding of the EMTs. Right now, we just have to call University Hospital for an ambulance, and let their paramedics take care of it.\"\n\n\"What about that private ambulance service that's been talked about?\" asked Briggs.\n\n\"My two cents on that is that it's not going to happen.\" I said. \"The optics are bad, especially for what some are trying now.\" I knew that this conversation would get back to Thomas P. Cook... and I wanted that to happen. I wanted that dirty S.O.B. to know that the Iron Crowbar was watching him, and would be all over him like a wet blanket if he tried to enrich himself at my County's expense with a private ambulance contract.\n\nAfter we completed the agenda, the meeting broke up. I stayed around to talk more with PCpt. Briscoe. We toured the facility, noting things that might need some improvement, then went to his office.\n\n\"I think Captain Weston left this Precinct in decent shape, sir.\" said Briscoe.\n\n\"I think so.\" I said. \"But there's room for improvement. One reason we asked you to take this position before you retire is so that you can share some of your vast experience with the younger Officers. I'm not expecting you to overhaul the place, as you won't be here more than another year unless you change your mind on that...\"\n\n\"Noooo, sir.\" said Briscoe. \"I was happy to have this opportunity, and it's a good capping stone to end my career with the Force. But the day is coming to leave things to the younger generation. I'll definitely teach them what I can, though.\"\n\n\"Good.\" I said. \"So... while you have me here, what are your questions of me?\"\n\n\"I was talking to some of my people about that storm drain under the County Jail.\" said Briscoe. \"It's locked up, but there's still some security concerns about escapes. Do you think we should consider filling that in or something?\"\n\n\"I talked to some engineers about that.\" I said. \"They said if we fill it up and then have that once-in-a-millennium flood, the drain would not be able to take the water away and we'd be up to the ceiling in floodwaters. It's also there for us to evacuate the Jail if there's ever a dire need, so we have the keys if we need them. We could add some monitoring, though, like that secret passage we found at Headquarters...\"\n\n* * * * * * * * * * * * * * * *\n\nThe next meeting was a lunch meeting at the Sheriff's Office in City Hall. Sheriff Allgood liked to have these meetings on the days of Council meetings, so that he was prepared to meet with the Council before or during their meetings.\n\nPresent at the meeting was the Sheriff, his Chief of Staff Charles T. Oswald. Police Chief Moynahan, myself, Deputy Chief Della Harlow, Fire Chief Quinlin, Fire Marshal Zoe Singer, Public Health Officer Loran T. Michaels, and Assistant Public Health Officer Beth Paige. There was no longer an Assistant Fire Chief, so that seat was vacant for the moment. Sometimes the Coroner came, though not always. And after this meeting, Chief of Staff Oswald would usually meet with Harlow and the Assistant Fire Chief and Assistant Public Health Officer to go over 'beans and bullets' issue, i.e. personnel and equipment.\n\nAfter we made our cold-cuts sandwiches and grabbed drinks, we sat down to have our meeting. It was mostly small talk while we ate. Afterwards, we got down to (the Sheriff's) business.\n\n\"Okay,\" said the Sheriff. \"We are under budget for the year, so you're all to be commended for that. I might add that some of that comes from the EMS no longer existing, but the Police Department is much more efficient now that Deputy Chief Harlow has the reins...\" There were murmurs of acknowledgement for Della.\n\nThe Sheriff went through a few agenda items, then opened up the floor for comments and questions.\n\n\"Just one question, Sheriff,\" said Chief Moynahan, \"and since we're doing well with the budget: I'd like to get my SWAT guys some more range time and some more practice with less restrictions on their time. I wouldn't mind getting another set of eight guys trained up, as well. Times are getting more chaotic, and we're going to need our guys to be trained as best as possible.\"\n\n\"I agree, Chief.\" said Daniel, and I was not fooled into thinking that this was their first conversation on this... just the first one in front of the rest of us. Daniel said \"I'm working with the Council to lift the time restrictions on their training, but Malinda Adams is putting up a huge fight on it, as always.\"\n\nLoran T. Michaels, the Public Health Officer, spoke up next. He was in his 40s, slender, and it looked like his suit was consuming him. He had a pursed mouth and smallish eyes, and his brown hair was neatly combed outward from the middle of his head to the sides.\n\n\"Sheriff,\" he said, \"I'll bring up a touchy one: I'm being told that if Robert Brownlee tries to get his job back, he's going to be pushed off onto the Public Health Department. I can tell you right now that my people want nothing to do with him, and we'll fight hard to keep him out.\"\n\n\"I'm not sure what to tell you about that, Loran.\" said Sheriff Allgood, who was over the Public Health Department the same as he was over the various branches of Public Safety. \"I'd say that Robert Brownlee is nowhere near in good enough shape to return to work anywhere, and we should burn that bridge when we come to it.\"\n\n\"Sir,\" said Michaels, not ready to drop it, \"I don't see why we should bear the brunt of having to provide that man a job. Why can't he go back to the Police Department? That would be the correct thing to do under the law.\"\n\n\"There's also an opening for the Assistant Fire Chief.\" said Assistant PHO Beth Paige.\n\n\"Don't you go telling me who to put in my Fire Department positions!\" growled Patrick Quinlin. \"You mind your own damn Department and leave mine to me!\"\n\n\"She's right.\" said Michaels, with an unnerving calm, and a facial expression like he was about to get something over someone. \"Why can't Brownlee go to the Fire Department?\"\n\nDaniel Allgood looked like he was developing heartburn. \"Guys, we are nowhere near having to even think about that situation. Why are we fighting about it now?\"\n\n\"Because the longer the can is kicked down the road without assurances that my department won't be polluted with Brownlee's filth,\" said Michaels, \"the likelier it'll be you'll try to force him on me.\"\n\n\"I'm not sure what the Council will do, if they've even thought about it.\" said Allgood. \"I do know Brownlee will not be returning to the Police Force. But there are other positions in the County, not even in my Public Safety Department, where Brownlee can be sent to. The Parole Office, the Library System...\"\n\n\"So are you assuring me that Brownlee will not be forced onto the Public Health Department?\" asked Loran T. Michaels, ever persistent.\n\n\"Loran, I'd be lying if I could give you that assurance.\" said Allgood. \"It's in the Council's hands, not mine. Now why don't we move along with more current and realistic issues... what?\" He saw Michaels and Paige collecting their paperwork as if to leave.\n\n\"I'm sorry, Sheriff,\" said Michaels, \"but I need to consult with attorneys and the Council. I believe you're going to try to force Brownlee on us, you won't assure me that you won't, and I'm not really taking your word on this.\"\n\n\"Mr. Michaels,\" I said with authority in my voice. \"Sit back down, please, and I'll tell you what is going to happen with Brownlee.\" Michaels looked at me in shock; technically, he was the equivalent of the Police Chief.\n\n\"Okay, Commander Troy,\" Michaels said with something of a sneer in his voice. \"Tell us.\"\n\n\"Robert Brownlee is going to try to come back to the Police Department.\" I said. \"He will be flatly denied. He may or may not be offered a Public Health position or even a Fire Department position... but that doesn't matter, because he's going to scream and cry and threaten to sue if he does not get his Police Department position back... and that ain't happening. He'll probably file the lawsuit, and the Council will settle with him for some undisclosed amount of green dollar bills, and he will go away... to a new job with the SBI. So stop worrying about it, willya?\"\n\nMichaels and Paige sat back down. \"You better be right, Commander Troy.\" Michaels said.\n\n\"He always is.\" said Chief Moynahan. Zoe Singer did not quite suppress a smile.\n\n\"Okay, is there anything else?\" asked Sheriff Allgood.\n\n\"Well, Sheriff\" I said, \"I might as well bring up the 800-pound gorilla in the room. My Precinct Captains are getting asked by Citizens about emergency medical services. With the EMTs gone, they want to amp up our Officers's training, but that won't be to a First Responder level. This private ambulance service business of Councilman Cook is not kosher, and is going to be looked at by law enforcement both within and outside of this County. So my question is... what do we do, and what do we tell the Citizens?\"\n\n\"You're right, Mr. Crowbar.\" said Chief Moynahan. \"That is indeed an 800-pound gorilla.\" Everyone laughed.\n\nSheriff Allgood nodded, then said \"It's a good question, though, and I need to be prepared for it if and when the Council asks about it. As to what is happening: the Council was looking into a private service, but as you said, John Colby exposed some issues with it.\n\n\"I can also tell you that the Council has expressed concerns that a private service carries severe risks... if inadequate services are provided and someone dies, then there might be lawsuits. With the County EMS, they were indemnified by State Law unless they could be shown to be grossly negligent or intentionally harmed someone. The legalities of a private service are not nearly as clear. They might be fine, but the Council is composed of a lot of worry-warts.\"\n\nWe all laughed at that accurate description of the Council.\n\n\"So,\" the Sheriff continued, \"there's the University Hospital. But that's the State, and I know how much you love the State coming into your business, Commander Troy.\" There were some chuckles at that, but I was not amused: I have no love lost for the SBI, and might have expressed that with a machine gun every once in a while...",
        "\"I can tell you this.\" said Fire Chief Quinlin. \"Long before the EMS was done away with, we created a position in the Fire Department called the 'Fire Medic'. These positions were not First Responders; they were like combat medics that went into the fires and gave emergency treatment, and helped bring firemen out of danger situations. For example, EMTs would not have gone in after Roy Easley, but Fire Medics would have if they were on the scene that night. I'm looking into expanding the Fire Medics to be able to be first responders as well as going into dangerous situations.\"\n\n\"Chief,\" said Commander Zoe Singer, \"we've had this conversation: we're on the verge of the Federal Department of Labor coming after us, and if you expand the Fire Medics, the Feds will say it's a replacement for the EMTs... and they'll allow the fired EMTs to sue as well as to be able to get unemployment and other benefits.\"\n\nQuinlin looked upset at Zoe for bringing that up, but she was independent of him as our Internal Affairs was independent... and she had no fear anyway. I liked that about her.\n\n\"My point,\" said Quinlin, \"is that the Fire Medics existed before all of that EMT business happened. It's pre-existing, or ex post facto, or whatever you want to call it. I consulted with the City Attorney's office, and they agree with me that this might be our way past the Feds.\"\n\n\"But it would still give the EMTs the legal opening they need. They can still sue in Federal Court, especially if the Federal DOJ or DOL backs them up.\" said Deputy Sheriff Charles T. Oswald. \"Yeah, you might win, Chief Quinlin, but you could just as easily lose.\"\n\n\"That's true.\" said Sheriff Allgood. \"So, Patrick, who are you going to nominate for the next Assistant Fire Chief?\"\n\n\"Since the Fire Marshal here has said she's happy where she is,\" Quinlin said, causing Zoe to nod vigorously, \"I'm considering some of our Battalion Chiefs and Superintendents. Not sure yet, though.\"\n\nPart 14 - Lost and Found \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted Bettina from in front of University Hospital at 7:00am, Wednesday, May 4th. Star Wars Day. May the Fourth be with you.\n\n\"Channel Two News has learned that in their meeting last night, the Town & County has made a stunning decision to contract out their Emergency Medical First Responder Services to University Hospital!\" Bettina said. \"The decision will be ratified with the Second Reading of the Bill next week. The vote was 9-1, with Councilman Thomas P. Cook the lone dissenting vote. Sources tell Channel Two News that the Council acted out of concern that Citizens were beginning to be fearful that proper First Responder treatment might not be available when needed.\"\n\n\"And in other news, the five students that had disappeared but have been since found alive are recovering at University Hospital, and most of them may be released very soon. One student, Sherry Kim, is reported to still be traumatized, and is being evaluated and treated by psychiatrists. One student remains missing.\"\n\n\"Guess what you and Theo get to do today, Mr. Parker.\" I said as we drank our coffee.\n\n\"Uh, interview students?\" guessed Teddy Parker.\n\n\"Yes, that is the correct answer.\" I said. \"Take someone to videotape the interviews, as well.\"\n\n* * * * * * * * * * * * * * * *\n\nI was wrapping up the 'Detective Fiction' meeting when my Police cellphone rang. It was Teddy Parker at the Hospital.\n\n\"Sir!\" he said, \"the FBI is here and they're refusing to let us talk to the students.\"\n\n\"I'll be right there.\" I said. I had Cindy come with me, making sure she had her armor on, as did I. And crowbars, of course.\n\nIt was one of those rare moments when I burned the blue lights and drove like a bat out of hell across Town to get to the Hospital. I parked in the 'authorized vehicles only' area, and Cindy and I went inside and up the elevator.\n\nMy wife Laura met us at the elevator. \"Don't do anything rash, guys.\" she said. \"They're just following orders.\"\n\n\"We'll see about that.\" I said. I strode down he hall, Cindy following, both with crowbars at the ready. We came upon Teddy, Theo, and Sr. Patrolman Morton, the videographer. Two men in suits were not only blocking the door, but trying to confiscate Morton's camera.\n\n\"What in the heck is going on here?\" I demanded to know as I came up.\n\n\"These guys won't let us through, and they're trying to steal our camera.\" said Parker.\n\n\"We're the FBI.\" said one of the Agents. \"We have orders to prevent anyone but FBI Agents from speaking to these patients. And we also have orders to confiscate any cameras filming us.\"\n\n\"Who is your supervisor?\" I thundered. They remained silent. \"Look, bozos, I am the Police Commander in this County, and an FBI Consultant as well. You had better start answering some questions, or I'll have the two of you arrested. Who is your supervisor?\"\n\n\"Special Agent in Charge Clark Webster, chief of the Missing Persons Bureau in the City.\" said one Agent.\n\n\"All right, Captain, we're going to go in and interview Mr. Stone here.\" I said. We were in front of his room. \"If these guys try to stop us, show them no mercy in beating them down with your crowbar. If they draw guns, Officers, shoot them dead.\" I moved towards the door. The Agent moved to block me, Cindy raised her crowbar, and Parker drew his gun.\n\n\"Hold on, hold on.\" came a voice from down the hall. The FBI Deputy Director himself was striding down the hall. \"They're just following orders, Commander.\"\n\n\"I don't care. They'd better get out of my way, sir.\" I said, and not in a friendly voice.\n\n\"May I see you a moment, Commander? Privately?\" asked the DepDirector.\n\n\"No sir, you may not.\" I said with alacrity. \"Not until I have interviewed these five kidnapped students. And I will interview them, if I have to shed your Agents' blood to get my mission done.\"\n\nI could feel the power of the man as he tried to reach into my brain and force his will upon me. This time, however, he was up against someone who was pissed off, tired of the games, and exerting my own will. He could see it in my eyes, as well.\n\n\"I can see you're upset.\" the DepDirector said. \"Guys, let these police officers interview the patients.\" The FBI Agents walked away from the door and down the hall, like automatons. \"Commander, would you come to the Federal Building after you're done?\"\n\n\"How about Dr. Fredricson's office? Neutral ground.\" I said, then added \"If she will allow it, of course.\" Laura just nodded.\n\n\"Good enough.\" said the DepDirector.\n\n\"William,\" said Laura, taking his arm and leading him down the hall, \"why don't I get you some coffee and we'll head on back to my office...\"\n\nCindy and the Officers were just looking at me, and my partner's face had a look of stunned amazement. \"Don, did you really just bust the FBI Deputy Director's chops?\"\n\n\"I'm getting tired of being treated like a mushroom, Crowbar 2.\" I said. \"Okay, Teddy, I'm going to lead the interviews. Come on in...\"\n\n* * * * * * * * * * * * * * * *\n\nThe interviews will be somewhat condensed here for brevity. First was Jason 'Big Jake' Stone. He was a handsome young man with a very fit, muscular body, and he reminded me of my nephew Todd and the other well-hung young studs like Sean and Ryan in that one could sense his virility. It did not take a great feat of detection to know that Jake Stone was getting a lot of pussy.\n\n\"I don't remember much.\" said Jake. \"We were doing two things out there. We were collecting samples for Sherry and her professor, and we were doing a cinematic arts project for Annemarie. She was filming Sherry and I taking samples, and we were flirting... uh, the plot of Annemarie's film?... she wanted me to have sex with her, with Natalie, and with Sherry, and she'd decide which one worked best for her project.\"\n\n\"With Sherry?\" I asked. \"Was she sexually active?\"\n\n\"No sir.\" said Jake. \"That was the story line. I was going to take her virginity.\"\n\n\"What about Danny?\" I asked.\n\n\"Huh!\" Jake exclaimed with disgust. \"That fucking twerp? He'd been trying to hit that for a long time, and couldn't get the job done. Sherry was very eager to go along with Annemarie's project, especially in front of Danny.\"\n\n\"So,\" I said, \"We know you and Natalie had sex, and you and Annemarie were having sex in the Hollow. What about Sherry?\"\n\n\"Oh yeah.\" said Jake. \"I did her first, right about sunset. Annemarie and Jeff were both filming it. After taking the samples, we went back to the tents, and Sherry and I started making out. We got out of our clothes, and laid down a blanket, and I got on top of Sherry. She's really hot for an Asian girl, and I was hot for her. So I popped her cherry and fucked her. Made her come her very first time, too.\"\n\n\"And this was filmed?\" I asked. Jake affirmed it.\n\n\"And how did Danny take all this?\"\n\n\"He was really pissed off. He was begging Sherry to stop, to not do it.\" Jake said. \"Annemarie is pretty tall, taller than Danny, and she threatened to beat him up and cut off his nuts if he interfered. Then Sherry told Danny to go away, that she was going to give me her cherry. I thought all that was part of the script, at first. But then Danny left in a huff.\n\n\"Did you see where he went?\" I asked.\n\n\"No, I was too busy fuck------ er, making love to Sherry.\" Jake said. \"And after I came inside Sherry, Danny wasn't there. We made supper, then I had sex with Natalie, and Jeff got sloppy seconds with her.\"\n\n\"So what happened to you afterwards?\" I asked.\n\n\"I... don't remember.\" Jake said. \"We went down into the Hollow after dark, and I had sex with Annemarie on camera.... no, it was Natalie filming it... well, she filmed for a while, then she set the camera down and left. Annemarie was really into it, so I concentrated on her and gave her all I had, then finally came inside her... yeah, I took a Viagra. Hell, not even John Holmes could keep up with three hot women like that, especially Sherry. I was going to spend the night with her in her tent... but... I don't remember...\"\n\n\"So the last thing you remember is having sex with Annemarie?\" I asked.\n\n\"Yeah, I came in her and I was about to get up off her... and... I....\" It was clear he could not remember.\n\n\"Did you hear a scream, or any other loud noises?\" I asked.\n\n\"When I was fucking Natalie...\" Jake said, \"... there was a strange scream from the woods. It was... weird... but there wasn't anything there... we went down there... we were going to film the scene with Annemarie...\" I could see Jake was becoming agitated, but it didn't help his memory.\n\n\"Just take it easy.\" I said. \"Don't try too hard and it'll come back on its own. Just one more question: who was supposed to pick you guys up, and when?\"\n\n\"Uhhh...\" said Jake. \"I don't remember... we were going to call...\" He shook his head, as if it wasn't coming to him.\n\n\"If you remember that, please give me a call.\" I said, leaving my card on his bedside table. We all left the room.\n\n* * * * * * * * * * * * * * * *\n\n\"Wow, that seriously changes things.\" Cindy said as we went into the hall. \"Danny might not have been there at all, or he was hiding somewhere.\"\n\n\"Or my theory,\" I said, \"which is that one of the vehicles stayed there, and Danny drove it back, stranding the others. But that opens a whole new slew of questions. Let's talk to Jeff next.\"\n\nJeff Slake didn't add much. He said that he was helping Natalie and Annemarie with filming, that he watched Jake pop Sherry's cherry and then have some really hot sex. Danny got pissed and he, Jeff, was helping Annemarie stop Danny from interfering with Sherry and Jake... Sherry was really into Jake, and Jeff thought some of it was Sherry's pleasure in tormenting Danny... then Jake fucked Natalie and after they were done Jeff fucked Natalie to get sloppy seconds, which he liked a lot. He didn't know if Annemarie filmed him, Jeff, with Natalie. \n\nNo, Danny had walked off... didn't see him again... as far as Jeff knew, they were going to call to have the van come and get them on Sunday... the last thing he remembered was Natalie on top of him, fucking in their tent... he'd heard a scream when Jake was fucking Natalie... no... no more screams... but he heard what sounded like someone walking outside the tents while Natalie was fucking him... no, just nothing after that...\n\nNatalie Jenkins seemed a bit more alert than the others when we went to her room. She confirmed that they'd been taken out in a couple of vans... no, the vans had left... no, Sherry was supposed to call for them to be picked up on Sunday... yes, they filmed Jake and Sherry making love, and they were really hot and going at it, then Jake fucked her, Natalie, then Jeff was all hot to get sloppy seconds, so she let him... yes, she filmed Annemarie and Jake, and Annemarie was really into it... yes, she put the camera down and went back to camp and had more sex with Jeff... she'd heard a scream while Jake was fucking her, and it was really spooky... no, she heard nothing else like that... yes, she was having sex with Jeff, then the next thing she knew she was being put into an ambulance in a town called Rome, and she was really groggy and out of it...\n\nLast, and certainly not least, was Annemarie. Though still in physical pain, she was ready to be discharged from the Hospital. She was a very beautiful young woman with her black hair and very pretty face. What is it about raven-haired women that attracts me so much, I wondered, thinking of Laura, Melina, Ivy, Ryan's mother Marlena...\n\n\"Look, I'll tell you the whole story, since I've heard of your reputation, Mr. Iron Crowbar.\" Annemarie said. Her eyes were looking at me with something resembling awe. \"Sherry and I had been talking, and she needed to go get samples as part of her professor's study. I needed to make a short film, so we thought we would combine our work on one trip.\"\n\nAnnemarie continued: \"Sherry had a crush on Jake, and to be honest, he was hot for her too. And she was getting tired of that little worm Danny. He'd asked her to marry him, even had bought a ring. She'd told him she wouldn't even think about things like that until she had graduated, but she knew she couldn't string him along any further... yes, that's right, she said she was stringing him along all that time. So, she wanted to find a way to break Danny off, and she thought making him watch while she gave her virginity to Jake would get the message across.\"\n\n\"So, we went out, set up camp, and Jake and Sherry were taking samples and flirting while I filmed it.... yeah, they were kissing a lot, making out... yeah, Danny saw it and he was getting upset... Jeff and Natalie were making sure he didn't get to talk to Sherry or mess with her... So we went back to camp, and Jake made love to Sherry. Danny was trying to get her to stop, and she said something about telling him to watch a real man pop her cherry... and then Jake got on Sherry and did it, he deflowered her right there in front of us with the cameras rolling... \n\n\"Uh, no, I only had the one videocamera... it was on there, close to the beginning... yeah, the camera Natalie was using to film Jake fucking me in the forest. I was thinking of editing it to be something like the 'Antichrist' scene, but that wasn't original so I was thinking I'd have to do something else with it... we were thinking of having Jake dress up as 'Slender Man' and come and fuck me, maybe take the unclothed Jake's place and I'd edit that in, but we'd have to go home and get his suit and stuff...\n\n\"So yeah, we filmed Jake and Sherry making love, and I do mean making love, Jake was really hot for Sherry and she was into him, it was really beautiful to see... no, Danny had walked away from us... I don't know, never saw him again that day or that night... the last thing I remember is having a mind-blowing orgasm when Jake was fucking me under that big tree... then he came in me and was getting off and... no, don't remember anything after that... yeah, I had what I thought were weird dreams that there was a lot of shouting and I was being fucked again and again... no, it was a lot more dreamlike, I wasn't really awake for it...\n\n\"Who was supposed to come get us? Gosh, I don't know... I think Sherry was going to call to have the van come back and at least take the samples back on Sunday...\n\n* * * * * * * * * * * * * * * *\n\n\"Get that video into the evidence servers, pronto.\" I said, once we were back in the hall. \"I'm going to be studying those interviews over and over. I'd caution all of you to make no theories until we get all the facts.\"\n\n\"That was mindblowing stuff in there.\" Cindy said, the gears in her head turning a million miles a minute.\n\n\"Sir,\" said Parker, \"should we put out an APB for Danny Cantrell... and as a suspect instead of a missing person?\"\n\n\"Uh, not yet.\" I said. \"He's being searched for as it is. Okay guys, y'all can go back to Headquarters. I'm going to my wife's office.\"\n\n\"Invite the FBI to the Police Boxing Matches.\" Cindy said. \"I want to whip their asses as much as you do right now.\"\n\nPart 15 - Formulating Answers \n\nI called ahead and Laura answered. \"Hi Darling. Listen, he had to leave, and it was for legitimate reasons. That's me telling you that darling, it was legitimate. He did say Jack Muscone would come to your Headquarters later today, and to please not hurt him... Yes, I think he underestimated how pissed off you are...\"\n\nSo I went back to Headquarters. The MCD was buzzing. I 'invited' Parker, Masters, Washington, and Ross to my office.\n\n\"So, guys,\" I said, \"You'll have to catch up by listening to us, Coldiron, but I wanted to hear what the rest of you thought.\n\n\"Those interviews changed everything.\" said Cindy. I wanted the Detectives to hash on this one, so I asked Parker and Washington to give me their thoughts.\n\n\"Sir,\" said Teddy Parker, \"I'm still processing it all, and I want to see the tapes of those interviews again. For me, Danny Cantrell has turned into a suspect. Maybe he left, called for help, then went back and abducted the rest of them.\"\n\n\"Way too many holes in the argument that Danny is the creep.\" I said. \"First, he left his cellphone in one of the tents, so how did he call for help? Second, it was his vomit and blood found at the scene where Sherry and Annemarie were raped. So if we'd come across five or six people dead of gunshot wounds, I'd say Danny was the cause of a murder-suicide. But I don't think that's the case.\"\n\nTheo Washington said \"That was pretty brutal, how they acted towards Danny. Reminds me of that Jimmy Tolson case... why would he hang around with people treating him like shit like that?\"\n\n\"Especially after Sherry herself teased him, then cuckolded him.\" said Cindy.\n\n\"I've got a question.\" said Lt. Masters. \"From what I've been told so far, all four of the ones you talked to lost their memories right about the same time. Sherry Kim is still too traumatized to talk with us, but I'd like to know where she was and what she was doing at the moment the rest of them went blank.\"\n\n\"Good thought.\" I said. \"Keep that up and I'll put you in the MCD Lieutenant position.\"\n\n\"Don't threaten the poor guy.\" Cindy replied, and everyone laughed.\n\n\"Okay,\" I said, \"Seriously, that's a good thought. Danny wasn't seen in any of the videos. For that matter, we don't have the video of Sherry and Jake. Did you guys check on that?\"\n\n\"Oh you bet, sir.\" Cindy said. \"I've got the Crime Lab re-examining all the tapes and cellphones, as well as the rest of the stuff we collected there. It's digital, not tape, so we're looking for any media storage devices. Having said that, I would've thought we'd have found something the first time through.\"\n\n\"Hmmm...\" I said. \"Okay, anything else?\"\n\n\"On behalf of everyone here,\" Cindy said, \"what do you think of this, Commander?\"",
        "\"Well,\" I said, settling back into my comfortable Command Chair, \"my original and most burning question is still unanswered: what were the arrangements to return these people home to the University campus?\"\n\n\"Yessss! I get to say it!\" Cindy exclaimed, a huge light in her ruggedly pretty face. \"Okay everyone... 'teachable moment'!. When the Iron Crowbar focuses on something as closely and persistently as he is doing with this question, that is our cluuuuuuue to give it the same amount of attention! Consider yourselves warned!\"\n\nI chuckled. \"Yes, that is very true.\" I said. \"And it definitely is a key issue in this case. Anyway, Lt. Masters covered my second question: what happened to all these people right at the same time, such that their memories left them right at the same time? And last, and pretty obvious to state: what is the sequence of events that led to Sherry and Annemarie and Danny being at that cabin, and the others found so far away?\"\n\nAfter a pause, I said, \"Okay, if you guys will get to it, I have a couple of things to do.\" That was a dismissal, and the Detectives needed no help understanding it. Everyone left. I made a call to the Crime Lab.\n\n\"Ah, Christina.\" I said. \"I need you to search something in particular...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Hello, Mr. Muscone.\" my lovely assistant Helena French said brightly as FBI Special Agent In Charge Jack Muscone came to the anteroom of my office. \"Commander Troy said you could go right in whenever you got here.\"\n\n\"Thank you.\" said Muscone. He mentally prepared himself, knocked on the door, opened it, and entered my office. I was sitting behind the desk, my eyes boring into him. He closed the door behind him.\n\n\"Have a seat.\" I said.\n\n\"Thanks.\" he replied. After sitting down he said \"I know you're mad, so go ahead and rip me a new one.\"\n\n\"I can understand the FBI not sharing information with the locals; they do that all the time, nationwide.\" I said. \"And I understand that for the most part this case is out of my jurisdiction. But I thought you and I were better friends than this, Jack. Not even returning a phone call?\"\n\n\"I know.\" said Muscone. \"And I won't insult you with excuses. I will say this, and you can believe it or not believe it: I talked to my boss earlier this morning. I'd already told him I didn't like us treating you this way, and after what happened at the Hospital I told him I was going to talk to you no matter what his orders were. After he saw you, he relented.\"\n\n\"So, what is going on?\" I asked.\n\n\"You can probably tell me.\" Muscone said. \"The missing people have been Clark Webster's case, and they're not sharing much with my team, either.\"\n\n\"And the gunrunning?\" I asked, my eyes boring into Jack's. He winced.\n\n\"You do know, don't you?\" he asked. \"That's where my boss and I are at odds. All I can say is that I've been ordered directly to not tell you nor Cindy anything about it. I think that's stupid, I'd rather have you both working with us, but those are my orders. Yes, I'm your friend, but you know how it is with these things... hell, your own wife doesn't tell you everything, like that Priya Ajmani incident.\"\n\n\"Yeah, I know.\" I said. \"And I understand. But again... next time, pick up the god-damned phone and tell me straightaway, whydontcha.\"\n\n\"All right.\" said Muscone. \"So, how about I make it up to you by treating you to lunch. Cop Bar, of course.\"\n\n\"Sure.\" I said. \"But let me call Cindy. She's pissed at you guys, too.\" I got on the phone and called Cindy to my office. \n\nWhen she got to the office, I said \"Agent Muscone is treating us to lunch, Cindy. I'm going to have a couple of double cheeseburgers myself, Jack. I'm going to need to pack as much protein as I can if I'm going to have a shot in hell in the Police Boxing Matches.\"\n\n\"The cheeseburgers are tasty,\" said Cindy, \"but they're not going to help when I get you into the ring, Brother Crowbar.\" Jack laughed, though it was a tepid one.\n\n* * * * * * * * * * * * * * * *\n\nAs Jack and I consumed two double-cheeseburgers each, and Cindy practically inhaled a fish and chips dinner, Jack did tell us some things.\n\n\"Martin Nash seems happy to be back, but I think he's going to miss you guys more than he realizes.\" Jack said. \"So tell me something, Don... when do you think you'll be ready to move on the Consultant of Crime? To take him down?\"\n\n\"Two months.\" I said. \"Literally... I think all will be said and done by July 4th. I am starting to cast my nets around him. The Mouseketeers and I are beginning to put together the financial case that'll get him charged with RICO violations, and I'm starting to put together evidence and witnesses that'll get him the death penalty for multiple murders.\"\n\n\"Conspiracy to commit murder?\" Jack asked.\n\n\"We may can get him for a direct charge in this last case of the Standard Tools Building blowup.\" I said. \"But it's going to be tricky, no doubt about it.\"\n\n\"Think you can get him without getting yourself killed in the process?\" Cindy asked, brutally and directly. I looked at Cindy, then down at my plate. I did not reply, and Cindy was not pleased as she stared at me.\n\n\"He better not get himself killed.\" said Muscone. \"No one else will be able to correlate everything and wrap it up tight for a Court case. Paulina's good, and so are my U.S. Attorneys, but this one is going to need the Iron Crowbar.\"\n\n\"Don't worry.\" I said. \"When all is said and done... we will not have failed.\" I would say no more, and I still had one agitated platinum blonde with a blue crowbar sitting next to me.\n\nPart 16 - The Camera Doesn't Lie, Does It? \n\nLater that afternoon, I got an email from Christina Cho. She said that they had found the digital media storage device for the camera Annemarie was using, in a false bottom of Jeff Slake's backpack, just where I'd suggested she look. She also said the data was on evidence servers, and was password protected due to the 'adult' nature of the material. I forwarded the email to Cindy, Coldiron, and Teddy, then sat back to watch.\n\nThe video showed Sherry and Big Jake at the river. Sherry was a beautiful Asian woman, short and lithe, but with very shapely legs under the 'Daisy Dukes' jeans she was wearing, a mouthwatering ass, relatively large breasts that jutted out proudly under her low-cut shirt. Her black hair fell in gentle curls down her upper back. Her lips were full and inviting, and her high cheekbones and slanted eyes were a hot interracial contrast to the young white stud next to her.\n\nAfter collecting some samples, Jake leaned over and kissed Sherry, and she eagerly returned it. Their lips locked, alternating with showing their tongues twining hotly. I could hear some voices in the background, a male voice whining \"Sherry, what are you doing?\" and another voice, a woman's, saying \"It's for the video, just watch and enjoy it.\"\n\nJake was now on his knees, and Sherry was kneeling between his thighs. He unzipped his jeans and fished out his cock. Even half-hard, it was huge, and it was quickly hardening to its full length. Sherry grasped the huge weapon of lust in her small hand. As she gently jacked it, I could see the veins and ridges of his cockshaft as the camera zoomed in on it, and the drop of pre-cum on the huge, helmeted head.\n\nThe camera zoomed out a bit as Sherry bent down and slid her mouth over Jake's cock. Her full lips slid up and down his taut shaft, stretched by his thickness as she fellated him hungrily. She took almost all of it into her throat, gulping and gasping as she sucked him hard and deep. The look on Jake's face was pure pleasure, and Sherry's eyes betrayed her pure lust.\n\nFinally Jake stopped it, saying he would come if she kept that up. They got up and Jake closed his pants, then they walked hand in hand towards the camp in the yard of the Point Hollow property, the house visible on the right. \n\nThe video went dark for a second, then came back on. This time Sherry was wearing only a skirt and t-shirt, and high heel sandals instead of tennis shoes. The sandals had a block heel. She and Jake were making out on a sheet on the grass, and it was obvious they were really into each other. They began stripping each other, and Sherry's breasts came into view, her nipples hard and pointing out with arousal. Jake's huge boner was bobbing in front of his large, low-hanging balls. Sherry had a nice little pubic bush above her pink slit. Jake eased Sherry onto her back, then slid between her upraised legs and began feasting on her virgin, Asian pussy.\n\nAgain I heard voices off-camera, someone saying \"Sherry, stop! What are you doing?\" and a woman, likely Annemarie, saying \"She seems to like Jake's tongue better than yours, limpdick!\" Others laughed.\n\nThen the moment arrived and Jake mounted the beautiful Asian woman. Sherry reached for the young stud's big cock and eased it to her labes. Jake dryhumped her several times, slicing his long, thick cockshaft along her slick labes several times. Then he prodded at her swollen clit a number of times, making her moan. Then she reached down and pushed his cockhead into her cunthole. He pushed forward.\n\n\"AHHHHH!!!!!\" Sherry gasped out as she was penetrated. Jake eased his ass up then sank down again, burying more of his meat into her virgin cunt. He withdrew and pushed in hard again, and his long cock sank all the way down into her! \n\n\"Oh yeah!\" I heard someone off camera say. A woman then said \"Damn, he just popped her cherry with that big thing! Sherry! how does it feel?\"\n\n\"It's heavenly.\" Sherry said as Jake ground his loins against hers. \"Ohhhh, it so good!\" He slowly withdrew until his cockhead was visible between her labes, then slowly sank all the way back in again. They both groaned. \n\n\"How does Sherry's pussy feel, Jake?\" asked Annemarie, who was holding the camera.\n\n\"Tight.\" he gasped. \"So fucking tight! But frickin' awesome!\" He began pumping his cock in and out of the lovely Asian woman, slowly at first, then increasing the speed and power of his strokes until he had a good, steady rhythm going.\n\nSherry was responding to his thrusts, meeting them like a practiced lover. She was kissing Jake's chest, then as he bent down to smash his mouth against hers, she kissed him hard back, pulling his face into hers. Her legs wrapped around his back, then his ass and thighs.\n\n\"Wow, not bad for a virgin!\" came a voice off camera. Then another voice saying something muffled. Sherry then said \"Ohhhh, I'm so glad you popped my cherry, Jason! I'm glad it was a real man like you!\"\n\n\"Oh yeah, a woman like you deserves the very best of everything, nothing second rate.\" Jake said. I realized these words were meant for Danny Cantrell, to make him feel the pain of his inadequacy.\n\nThe rutting couple humped lustily for several minutes, kissing each other hard and nuzzling each other's necks. The camera moved to show the huge cock pumping the clinging Asian pussy as Jake fucked Sherry to her first of many orgasms. I heard her gasping out.\n\n\"Damn, you're a natural at this.\" Jake said, making Sherry smile up at him.\n\n\"It's because I love you, Jason!\" Sherry said. \"I want to make you happy, only you, Jason!\" Jason kissed Sherry again, tenderly then deeply as her arms wrapped around his neck.\n\n\"Where's he going?\" I heard someone say off camera. \n\n\"Who gives a shit?\" said someone else. \"Come on, Stone! Fuck her like you mean it!\"\n\n\"I do mean it.\" Jason said. He then kissed Sherry's cheek then nuzzled her neck. When the camera panned around to show their coupled loins, I could see white froth... Jake had come inside Sherry and was so aroused that his huge cock remained hard, and he continued to steadily and deeply fuck her.\n\nThe tape went on for several long minutes. Then Jake raised up, trapped Sherry's sexy legs under his strong, muscular arms and began powerfucking down into her. Sherry cried out in pleasure as Jake fucked her until he announced that his nut was rising. A moment later he cried out as he began shooting his load deep into Sherry's eagerly receptive, Asian pussy. The couple collapsed, holding each other and sharing kisses and small talk, and then the scene ended.\n\nThere was a bit more on the tape. It showed Sherry (clothed) and Natalie collecting more soil samples, then the camera went inside the house. I watched and re-watched that portion, but there was nothing of interest in the few rooms shown... but that was an interesting mirror over the fireplace of the greatroom, I thought to myself...\n\n* * * * * * * * * * * * * * * *\n\n\"Oh my God.\" Cindy said as she came into my office some minutes later. \"I am going to need a few drinks after that one. You are buying at the Cop Bar tonight.\"\n\n\"Agreed.\" I said. \"Yes, that was pretty... steamy.\" I said. I did not mention that I'd already secreted copies of all three of Jake' sessions with the three women onto a jump drive to take home for Laura and I to watch... while in our bed making love.\n\n\"One thing is for damn sure.\" Cindy said. \"Sherry might have been a virgin until that day, but she was one hell of an experienced cocksucker. I'll pet a paycheck on that.\"\n\n\"I won't bet against you.\" I said.\n\n\"So why did Annemarie say that was on the same tape as the other sex scenes?\" Cindy asked. \"And for that matter, how did you know where to tell the Crime Lab to find it? Christina Cho is in awe of you yet again.\"\n\n\"Well,\" I said, \"Jeff has a reputation for watching porn and being a pervert. I think he switched out the camera storage device, and intended to keep the Jake and Sherry tape for himself... or maybe force Danny to have to watch it again and again. Annemarie might not have noticed the switch, and thought it was the same storage device.\"\n\n\"Makes sense.\" Cindy said. \"About the only thing that does make sense in this case. Any good clues, though?\"\n\n\"Well, we do get a better sense of the timeline.\" I said \"We can hear background voices asking where someone was going, likely Danny as he got upset and left. He has not been seen nor heard from since.\" I said.\n\n\"Until his vomit and blood were found in that cabin.\" Cindy said. \"So do you think he walked back to Town?\"\n\nJust then, there was a knock on the door. Detective Teddy Parker was admitted. \"Ma'am, sir,\" he said, \"I just found out why the Point Hollow house stays so clean. There's been a cleaning service that goes out every Wednesday and cleans the house, top to bottom. They've been paid out of a trust from the Bonniker estate, and the estate's lawyer has maintained the trust. The cleaning service is 'Gomez Cleaning and Repair, LLC'. I talked to the owner, who says they've been routinely cleaning the house for nearly 20 years now, and they've never had a problem nor seen any intruders or trespassers on campus.\n\nParker added: \"The owner did say that they always go in the morning because they refuse to be there after dark. They've never heard any weird noises, but some of them are very superstitious, and won't go near the Hollow itself. They had one woman who worked for them a few years ago. She said the Hollow was haunted by evil spirits.\"\n\n\"No doubt about that.\" I said, getting a look from Cindy. \"Oh, you know it's true, Crowbar Two.\"\n\n\"Yes.\" Cindy said. \"I did feel something really deep and dark there when we were out there the other day. I don't know what it is...\"\n\nPart 17 - The Flatfoot Grind \n\nStill Wednesday, May 4th. There were a lot of University students dressed up in Star Wars gear as I drove in my Police SUV to the Biology Building. In the vehicle with me were Captain Cindy Ross and Detective Teddy Parker.\n\nThe Biology Building was one of the older and least-kept-up buildings on Campus. It was one of the least funded majors on this campus and many others, for right or for wrong.\n\nComing around back, I saw three vehicles parked near the back dock. There was a young man unloading one van, and I recognized him from his DMV photo.\n\n\"Ron Estes?\" I asked loudly, coming up to him.\n\n\"Yeah?\" he replied.\n\n\"I'm Commander Troy of the Town & County Police Department. This is Captain Ross and Detective Parker. Can I ask you a couple of follow-up questions about the students that disappeared?\"\n\n\"I thought you guys found them.\" Estes said as I indicated to him to sit on the concrete steps at the end of the loading dock.\n\n\"Most of them.\" I said. \"One's still missing. Danny Cantrell.\"\n\n\"Oh, him.\" Estes said with a hint of derisiveness.\n\n\"Something about him you can tell us?\" I asked.\n\n\"Not really.\" said Estes. \"I thought he was an idiot. He was chasing after Sherry Kim, and it was plain to the world she didn't think much of him. He didn't give a damn about Biology, either. Changed his major to get near her.\"\n\n\"What do you think of Sherry Kim?\" I asked.\n\n\"Oh, she's a great girl.\" Estes said. \"Kind of quiet, like many Asian women are. But she could take charge when she wanted to. She'd organize field trips to collect samples, stuff like that.\"\n\n\"So she arranged the trip to Point Hollow?\" I asked.\n\n\"Uh, no, that was Professor Mickelson. He arranged two trips at the same time: one to Point Hollow, one to Farmdale County, south of the nuclear power plant.\"\n\n\"And you used those three vehicles to take them there?\" I asked. \"Two vans and an Jeep Wrangler type of truck?\"\n\n\"Uh yeah.\" said Estes. \"We used the Wrangler and one van to take them out to Point Hollow, then we drove back and used the two vans to go to the other collection point.\"\n\n\"The two vans?\" I asked. \"Why not take the Wrangler, like you did with the Point Hollow group?\"\n\n\"Uhh...\" Estes stammered, then collected himself, \"... we took a lot more gear to the Power Plant collection site. The guys going to Point Hollow mostly had their own stuff in their backpacks or rucksacks, and just a cooler for their samples. To be honest, I didn't know if that was a real sample collection trip or just going out camping and drinking beer.\"\n\n\"Who went on the Power Plant trip?\" I asked.\n\n\"Me, Ben Ellman, Shani Waughton.\" said Estes. \"That dirtbag Cantrell was supposed to go with us and do some work for a change, but he went with Sherry's group. Of course.\"\n\n\"Where is Shani now?\" I asked.\n\n\"She went with Dr. Ellman to his conference in Tennessee.\" said Estes.\n\n\"So let me ask this.\" I said. \"What was the arrangement to pick the Point Hollow guys back up?\"\n\n\"Sherry was supposed to call.\" Estes replied. \"She has my number as well as Professor Mickelson's and the Biology Department's line. But she didn't call at all. I got a bit worried on Monday, as did one of her dorm mates. We thought maybe they got back another way, but when they didn't show up Tuesday, Professor Mickelson suggested we call the Police.\"\n\n\"So why didn't you go out there to check up on them?\" I asked. \"You're in charge of all three vehicles; you could've taken one out there, to see what was going on?\"\n\n\"Well, Commander,\" said Estes, just a hint of testiness creeping into his voice, \"with perfect 20/20 hindsight, you're right; I should have. At the time, we thought little of it. We'd just gotten back from the other trip, we had samples to process and test, gear and vehicles to clean up, and all that.\"\n\n\"When did you get back from the Power Plant trip?\" I asked.\n\n\"Sunday. Just before sunset.\" Estes said.\n\n\"Nothing out of the ordinary down there?\"\n\n\"No sir.\"\n\n\"Okay, thanks.\" I said. We all took our leave of Estes and went around to the front of the Biology Building. I told Cindy and and Teddy that my appointment with Professor Mickelson was for me alone, that he was touchy and would balk at seeing three of us, and that they could walk a couple of buildings down and visit my wife in her office and I'd catch up to them there.\n\nI went up to Mickelson's office, where I was ushered in by his assistant. His office was most very typical of a Science professor's: books on shelves that reached from floor to ceiling, a few awards hanging on the wall, a desk littered with papers.",
        "\"Ah, Commander.\" said Mickelson, standing up to shake hands. He was short and had to look way up to make eye contact. He was getting wider in girth, though not 'waddling' fat; indeed, he was fairly spry. His graying hair and beard were a bit unkempt.\n\n\"Walk with me, I have to check on some things as we talk.\" he said. I followed him through the hall and into a lab. \"I gave you this interview because your wife asked me to. She is not a woman one says 'no' to. Being her husband, I am sure you know that already.\"\n\n\"I certainly do.\" I said. \"So to not waste your time, I'll just begin asking my questions. Can you tell me about the project that you sent the students to Point Hollow to do?\"\n\n\"Well, I sent Sherry Kim, Annamarie Reynolds, and Jason Stone. Jeff Slake went along, and Natalie Jenkins ending up going with them. Stone was in radiochemistry, so he had a useful purpose for going. Danny Cantrell went too, but I'm not sure why; he wasn't part of this project. Estes had wanted him to go to the other site, said he wanted to make Cantrell do some real work.\"\n\n\"What was the project, to the extent you can tell me, and with my assurance of confidence...\" I asked.\n\n\"Yes, I can tell you're married to a University professor.\" Mickelson joked. \"I know you'll keep this in confidence, though it's not a big secret. We're doing soil sample testing well above the Nuclear Power Plant, and down below it. The purpose is to ostensibly to see if there is more radiation below the Plant vs. a control upstream. But in reality, Point Hollow is no place to run a control test. There's some strange radiation there. That's what I'm really studying, though I'm trying to keep that hush-hush.\"\n\n\"If I may ask, why?\" I said, genuinely curious. I watched as the Professor checked on several soil samples, then some plants. Then we headed back towards his office as he talked.\n\n\"Have you noticed all the students wearing that silly Star Wars stuff today?\" he asked.\n\n\"Sure.\" I said. \"It's May 4th. Star Wars Day.\"\n\n\"Yes, so if they're doing crap like that,\" Mickelson said as we sat down in his office, \"then imagine how nuts they'd go if they thought aliens were landing at Point Hollow.\"\n\n\"Say again?\" I asked.\n\n\"Now don't get me wrong; I'm not one of those nutjobs.\" Mickelson said. \"But there are some interesting things going on up there. First, as you may know, no crops are grown on those grounds. Just the old orchards, left to grow wild, and some muscadine vines left over. The rest is nothing but short grass that cattle won't eat.\"\n\n\"Yes sir.\" I said.\n\n\"There is some radioactivity there. Some heavy elements that normally shouldn't be there. But that's relatively small and minor. What's interesting to me is the Sigma radiation. Have you heard of that?\"\n\n\"Vaguely, sir.\" I said. \"There's been some association with the paranormal, if I recall correctly.\"\n\n\"Not bad.\" said Mickelson. \"Yes, Sigma radiation is not really radiation, but an energy signature. It's associated with the Slender Man, and the Rake, and possibly other paranormal occurrences. With all the goings-on up at Point Hollow for so many years, I wanted to test for it. But quietly, of course, as this is not accepted as genuine scientific study.\"\n\n\"I see.\" I said. \"Purely for my own curiosity, what have you found?\"\n\n\"There is definitely something. If not Sigma radiation, perhaps some other unique energy that is affecting that area. It may be byproducts or breakdown products of the radioactive substances. So tell me, Commander, what do you think might be causing the radiation at Point Hollow? I understand you were a Chemistry major, and you were in the military.\"\n\n\"Yes sir.\" I said. \"If I recall, there was a Government facility near Dawsonville, Georgia, decades ago, where they did work on nuclear materials when the science was new. There are still glass-like rocks there that are radioactive. I suspect that something like that occurred around Point Hollow... or materials were dumped there, decades ago.\"\n\n\"Could well be, could well be.\" said Professor Mickelson. I couldn't tell if he was impressed with my answer, or disappointed that I knew as much as I did.\n\n\"So let me ask you, sir,\" I said, \"these students went on this trip, didn't come home as planned. What was the original plan to bring them home?\"\n\n\"You know, I don't know.\" said Mickelson. \"They usually work that out themselves. Estes usually works out the details of that, so you might ask him.\"\n\n\"Yes sir.\" I said. \"So when these students didn't show up on Monday, what did you do?\"\n\n\"Estes came up to me, along with one of Sherry Kim's friends.\" said Mickelson. \"They were concerned they'd heard no word from the students. It's not unusual for young people these days to take off on whims, so I suggested they waited until these kids were supposed to show up for my Tuesday class. They didn't show, and that's when we decided to call the Police about it.\"\n\n\"I see.\" I said. \"So no concern before Tuesday?\"\n\n\"Oh no, it wouldn't be the first time a student didn't come in when expected.\" said the professor. \"In fact... the first place I'd look for a missing student would be the Police Station... they tend to get arrested for drunken and disorderly behavior.\"\n\n\"That could well be possible.\" I said as I extended my card to him. \"I appreciate your time, Professor, and if it's not too much to ask, I'd be very interested in hearing about your research in the future.\"\n\n\"I'll certainly let you know of any interesting findings or symposiums I give.\" said the professor. \"And say hello to your lovely wife for me.\"\n\n\"Oh, by the way,\" I said as I reached the door. \"I need to talk to one of the teachers and one of the students here. A Ben Ellman and a Shani Waughton.\"\n\n\"Oh, he's out of Town.\" said Mickelson. \"Attending a conference in Tennessee. He's due back next Monday. I'll have him call you when he gets in. I'm not sure who Shani is, she's not one of my students...\"\n\n* * * * * * * * * * * * * * * *\n\nAs I entered Laura's office, a piercing scream split the air, followed by the shout of \"Daddy!\" It was my daughter Carole, who worked her way out of Cindy's lap and ran at top speed to me and hugged my leg.\n\n\"Hey, Carole!\" I said, picking her up and giving her a big hug. \"How's my girl?\"\n\n\"Good!\" Carole said. \"Cin-dee came to see me.\"\n\n\"Aw, that's good of her.\" I said. I moved to the group, sitting on Laura's sofas, and sat down next to Teddy Parker. Laura was holding Jim. After a few moments, Carole became restless, so I gave her back to Cindy and took Jim in my arms. He smiled when he saw me.\n\n\"So,\" Laura said, \"what did you think of the nutty professor?\"\n\n\"You know,\" I said, \"some of the stuff he talked about was kind of interesting. I get the sense he's bored, though.\"\n\n\"I haven't thought of that, but you're probably right.\" Laura said. \"Like I told you before, he's studied radiation effects on genetics for years. They're not giving out grants for that kind of study, not like they used to. So he starts looking for radiation sources from the paranormal, alien landings and such stuff, and the contributions of aliens to human genetics. Of course there will be no grants for that, unless he can somehow actually find proof of something.\"\n\n\"So how is Sherry Kim?\" I asked.\n\nLaura said \"I was just telling your partners here... she's not doing well at all. She's going to need some serious therapy. Maybe hypnosis therapy. Dr. Yates is taking over her treatment from me. There's nothing more that I can do.\"\n\n* * * * * * * * * * * * * * * *\n\nBack at Headquarters, I told Cindy and Teddy of my conversation with Professor Mickelson, couching it in pretty innocent terms regarding the paranormal stuff. \"The bottom line is that I am still not happy with everyone being so nonchalant about these six not showing up on Monday. Oh... I have an email.\"\n\nI looked at the email. \"It's the FBI's results of the DNA tests on Sherry and Annemarie. Both had Jason Stone's semen in their vaginas, and there were DNA workups of at least two other men from their vaginas and Sherry's anus, none of the DNA matching anyone on any Federal or State database. That's curious.\"\n\n\"What about Natalie Jenkins?\" asked Cindy.\n\n\"Yeah, it's in here, too. Slake and Stone, both men's semen found in her vagina and underwear. Annamarie and Sherry were found naked, and no clothing at the scene, by the way. Natalie had two other men's semen in her vagina, one of them matching Sherry's anal rapist, the other being different and also not found in any database.\"\n\n\"Kind of getting hard to not have one's DNA on file with the Federal Government.\" said Cindy, with a great deal of acerbity in her voice. \"Every military and Federal officer has to give blood for medical exams, so they're on file. Most anyone in any Government job likely is in the databases. Most if not all convicted criminals in the last couple of decades.\"\n\n\"Yep.\" I said. \"So this means one of three things... these men are foreigners, these men are so under the radar that they've never had their DNA matrix saved...\"\n\n\"And what else? The third thing?\" Cindy asked.\n\n\"The FBI is lying to us in this report.\" I said.\n\nPart 18 - Plots \n\n\"You have got a lot of nerve, a lot of nerve, coming here.\" said Dirty Lennie.\n\n\"Yeah, right.\" said SBI Agent Leonard 'Sergeant' Sharples.\n\n\"Not only is this the Iron Crowbar's County,\" said Lennie, \"I heard he's out for blood. Your blood.\"\n\n\"We'll see whose blood is shed first.\" snarled Sharples. \"Listen Lennie, do you want a shot at the bastards that killed your cousin?\"\n\n\"I heard you SBI Agents planted him.\" said Lennie. \"I even heard that you shot him.\"\n\n\"Aw, that's stuff for the media. Political stuff to make Lewis look good.\" said Sharples. \"But the truth is, Lennie, when we got there, Scrawny was already shot dead. The drug gang we were after killed him then ran up the highway to this County. Now... would you like a shot at helping me bring their asses down? Getting some revenge for your cousin?\"\n\n\"I'm listening.\" said Dirty Lennie...\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "virginity",
        "cherry",
        "mystery",
        "police drama",
        "crime drama",
        "watching",
        "female virgin",
        "student",
        "coed"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/point-hollow-ch-03"
}