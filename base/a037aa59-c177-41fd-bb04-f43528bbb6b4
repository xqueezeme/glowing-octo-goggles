{
    "title": "Dawn's First & Only Ch. 03",
    "pages": [
        "This story is dedicated to the memory of Dawn, who unfortunately died too young to enjoy all that life has to offer.\n\nSunday.\n\nI slept until nearly 11am after such an amazing day & beautiful night on the Saturday. I felt the warmth of Dawn curled up tight against my chest as she slept, maybe trying to find protection from the cancer growing inside of her. Resting my head on one hand I ran my other hand over the smooth skin of her warm shoulders & slow down the curve of her back and into the tight crack of her bum before lifting up onto her hip. Dawn started to stir under the quilt as I ran my hand over her stomach & snuggled her in tight and kissed her soft neck.\n\n\"Good morning,\" she sleepily whispered.\n\n\"Good morning,\" I replied as I hugged her to me.\n\nI could feel her tremble slightly & heard her weep quietly as she rested against me. \"What's wrong?\" I asked gently.\n\n\"I don't want this to end,\" she openly sobbed.\n\nI turned her gently to face me & pulled her close to me to try to offer her security & protection that I was defenceless to provide her in the long term against the cancer destroying her invisibly from the inside. All I could give was warmth & love to reassure her as much as possible as we lay tight together in our warm bed. \n\nI kissed the tears away from her eyes saying, \"Unfortunately everything ends at sometime, but we are making the most of what we have now. You know that I will do everything I can for you, and you only have to say what you what or need.\"\n\n\"I need you to hold me tight,\" she sobbed as she knew our weekend was coming to an end, and ultimately her life, possibly in a few short weeks.\n\nI felt totally inadequate, no knight in shining armour, as I held her, hugged her, stroked her, & kissed her.\n\nSlowly her tears dried as we started to kiss each other, absorbing the warmth of each others bodies held tightly against each other.\n\n\"The whole day is ours,\" I tried to reassure her as I kissed her forehead, \"Lets shower, have brunch & you can chose what you would like to do,\" I offered trying to cheer her up.\n\nWe both reluctantly climbed out of bed & went into the bathroom, Dawn to shower & me to shave; before swapping positions. We wrapped ourselves in the thick robes & ordered brunch from room service. The day had developed into a hot summer's day as we sat out on the balcony with the Sunday paper & a mellow CD playing on the sound system as we waited for our food to be delivered.\n\nIt was nearly one o'clock by the time we had finished our feast of fruits, cereal, hot bread, jams, cheeses & meats; all washed down with strong black coffee to clear the excesses of Saturday night. \n\n\"What would you like to do?\" I asked as I soaked up the rays & admired the fantastic view of the harbour.\n\n\"I just don't want this to end,\" she said with sad puppy eyes, \"I want to enjoy all of the sensations that I can from my body as you make love to me. I love the way your mouth & tongue brings my senses alive, your soft caring touch; and the firm way you give me pleasure when we come together.\"\n\n\"I am yours to command,\" as I reached across to kiss her hand & bow slightly.\n\nDawn smiled, and it tugged at my heart, what a beautiful young woman.\n\n\"Please kiss me between the legs again, it is such a beautiful feeling as your tongue explores me, I have never none feelings like it before,\" she quietly whispered.\n\nShe was still the picture of innocence, she didn't use words like 'pussy' or 'clit', she was a beautiful well spoken young lady who was a credit to her family.\n\nI didn't want the weekend to end either, but I knew it must, and I must return her to the care of her family for the last few weeks of her short life. But until then I would give her everything she desired & wanted.\n\nI reached for her hand & pulled her to her feet for a long kiss as I hugged her to me to reassure her as best as I could. After a few minutes of kissing I led her across the balcony to lie on the sun lounger. Dawn looked puzzled as she thought I would lead her back to bed, but why be inside on such a beautiful day.\n\nI folded down the foot of the lounger to give me room as I eased her robe clad legs apart. I would really have loved to dress Dawn in her stockings & satin wrap, but that seemed a bit self centred. Instead I massaged her warm calves & knees as I eased her legs slowly apart and admired the supple young skin of her thighs. Her pussy lips glistened in the sun light as she was already damp with anticipation of what was to follow. I didn't want to disappoint her in anyway in our final hours together.\n\nMy hand grazed across the top of her thighs easing the robe off her legs as I kissed my way up from her knees towards the glistening prize in front of me. Once I got close to the vee of her thighs I could smell & inhale the sweet musky scent of her pussy wafting down the valley of her thighs to my nose. I blew warm breaths onto her sensitive skin on the inside of her thighs before focusing my warm breaths to gently blow across her steaming bush.\n\nDawn sighed under these feelings and lifted her feet onto my back giving me uninterrupted access to her pussy as her lips eased open at the same time as her thighs. I marvelled at the sight before me, my prick quickly hardening between my legs as my neck & mouth stretched forward to pleasure her jewel.\n\nI eased my hands under her robe & over her thighs to reach her waist & rest on her hips as my mouth drew nearer to her pussy. Her scent was heady & fresh as I opened my mouth wide to cover as much of her mound as I could.\n\nDawn trembled as my mouth closed over her mound & she anticipated the pleasures to come.\n\nI slowly extended my tongue so it brushed across the damp folders of her lips as it travelled up toward her clit. Just then I lanced my tongue between her lips to bring her juices flowing outwards & smeared them across her bush with my tongue. Dawn rocked on the lounger as she began to enjoy the pleasure again of being licked out by my hungry mouth. It was very hard to restrain myself when really I just wanted to be a selfish bastard and to turn her on her knees and fuck her hard & deep from behind. But this weekend was all for Dawn & not myself.\n\nSolely pleasuring Dawn with my tongue only must have focused her on the feelings in her pussy as I kept my hands on her hips. I didn't want to distract her by teasing her breasts & nipples at the same time.\n\nMy tongue eased her lips apart before closing my lips on one pussy lip & sucking it into my mouth. I could feel it swell under this teasing before transferring to the other lip & doing the same. I could see her clit start to swell as I ran long strokes of my tongue up & around her pussy lips, never delving far into her hole.\n\nDawns hips started to rotate & thrust, following the direction of my tongue. As her pussy opened more juices coated my tongue with the sweet nectar of young fresh pussy. At the same time her warm thighs rubbed against my ears & face, I was in heaven.\n\nEventually I delved my tongue deep into her love tunnel, triggering more juices and a regular thrusting of Dawns hips as her hands pushed my head harder against her mound. Sighs, moans, & then groans of delight heralded the first orgasm of the day as my tongue continued to intimately explore the depths of her pussy. Dawn bucked on the lounger, her bum lifting to ram her mound onto my mouth & push my tongue to the furthest depth that it could reach. As the orgasm washed over both of us I didn't ease up, instead transferring my attentions to her clit, which had now swollen full of blood & passion.\n\nStill keeping my hands on her hips to keep her in place, I traversed my tongue up her lips until it met the hood covering her clit. My tongue instinctively went in under to find her love button. On first contact her body shook even more & Dawn groaned loudly into the sunshine. Her finger nails raked the back of my head as I used my tongue & teeth to tease & stimulate her clit, all the time her hips were grinding upwards in automatic pleasure seeking mode. Her clit swelled & extended as I gave it my utmost attention for a couple of minutes as another orgasm quickly started to build deep within Dawn.\n\nHer hips were giving a rhythmic thrusting as I plundered her clit and drew forth her next orgasm. Dawn started to pull my head away to give her some relief as her whole body racked in orgasm & she shouted her pleasure to anyone who could hear her, but immediately pushed it back against her to continue her pleasure & my plundering of the prize jewel in front of me. My finger gripped her hips to stop her bouncing smothering me as her juices flowed around my tongue.\n\nMy prick surged between my legs waiting urgent relief or pleasure & I considered standing & offering it to Dawn's mouth but that would spoil the beauty of our morning. Instead I slid both hands inside her robe & up across her stomach and onto her swollen breasts. Her nipples were rock hard after chafing against her robe during her orgasms, and they slotted between my thumbs & forefingers easily.\n\nWhile my fingers & hands started to pleasure her breasts & nipples; my tongue & lips gently kissed, licked, & sucked the inside of her thighs and gently lapped up her juices as they ran into the crack of her bum. A couple of times my tongue flicked lightly across & around her puckered & tight arsehole causing her to flinch, but also moan in pleasure at the sensations it caused within her pleasure soaked body.\n\nA couple of minutes after Dawn had recovered from her orgasm; I again returned my tongue to her bush covered mound. This time I ran my tongue through the thick matt of her juice saturated pubic hairs as my hands continued to tease & pleasure her breasts & nipples. The heat & scent radiating from her pussy was hot & intoxicating as I breathed in, my head wedged in the valley of her thighs. \n\nI spent several minutes enjoying & teasing her bush before moving back onto her lips. As her pleasure started to build again Dawn's hand reached down to rub her clit as I started to lap my tongue deep into the lower part of her pussy, occasionally extending my tongue to lash across her other hole. I was tempted to pull one hand down to play with her arsehole as well but I thought that my tongue & her fingers were giving all the pleasure her loins could absorb.\n\nAs her hips started to hump on the sun lounger I increased the pressure on her breasts, now cupping them quite roughly, and as her passion increased I started to maul them sending Dawn into a drowning orgasm that drenched my tongue as she received unlimited stimulation from my tongue, her fingers and my mauling hands.\n\nIt was like trying to hold someone in an epileptic fit as she thrashed through her most powerful orgasm ever. Her thighs clamped on my head & her juices just flowed down my throat as I gripped her breasts hard in my hand as Dawn screamed & moaned in both pleasure & a little pain as her body became highly sensitised in orgasm.\n\nAs her orgasm started to ebb she roughly pulled me to my feet by tugging on my ears until I popped out from thigh her come saturated thighs. I desperately wanted to shove my prick down her throat, but instead I pulled her to her feet as well and kissed her deeply as we hugged each other tightly.\n\nSliding my hands under her bum I hiked her up into the air & slid my hands under her thighs so her legs wrapped automatically around my hips as I slowly lowered her onto my raging hard on. My back wouldn't be strong enough to support her through a knee trembler, so I slowly crabbed my way inside, my prick sliding in & out her burning pussy with each movement.\n\nWe made it to the bedroom without injury & I lowered her on to the bed, letting her slide off my prick. Rolling Dawn over on to her stomach I gently pulled on her hips so she came into a tight kneeing position that spread the cheeks of her perfect bum open wide. I would have loved to have knelt behind her I licked up her crack, but my surging prick was demanded pleasure for itself.\n\nI stepped up onto the bed & crouched down behind Dawn as I guided my prick into her dripping pussy from behind in one long deep thrust. Dawn's back arched in pleasure as I reached under her to cup her hanging breasts in each hand. Now that Dawn was used to the swollen thickness deep inside her I started to rock back & forwards on the bed to rifle my prick in & out of her swollen juice filled love tunnel. My come filled balls slapped against her swollen pussy with each deep stroke forwards.\n\nLooking down, the sight was unbelievable with Dawns head arched back moaning & cooing as my hands massaged & tugged on her heavily aroused & swollen breasts and my hips started to pound in a steady rhythm against her tight firm bum \u2013 Outstanding & supremely beautiful.\n\nWhilst I was extremely horny after all that pussy licking, I wanted this moment to last forever so I slowed down. At this slower pace I wiggled my hips so my prick pleasured every part of her pussy which was starting to throb & clamp around my prick.\n\nSwitching my attention I rolled one of her nipples between finger & thumb while allowing my other hand to travel south to find & tweak her clit. This action immediately triggered a hot panting orgasm out of Dawn that caused me to hold still inside of her as the orgasm washed through the entire length of her body. The bed bounced as she bucked under me, pinned to the bed by my prick buried deep to the hilt inside of her. Removing my hand from her clit I gently ran my fingers down each vertebrae of her spine as she came down from her orgasm in a mass of sweat beneath me.\n\nSlowly I started to pick up the pace as I allowed myself the selfish need for release of my own. Releasing Dawn's breast I crouched in a more upright position so I could massage & grope her fine hips & bum as I started to pound hard against it. Easing backwards further I ran one finger down between her legs to lubricate my finger in her pussy juices & I gave her clit a quick teasing rub to stimulate Dawn towards her final orgasm. Then I transferred my come soaked finger to the crack of her gorgeous bum as it trailed from her waist down between her magnificent cheeks to her puckered hole that was winking at me seeking attention. I ran my finger around the rim of her hole to tease it and see what reaction I got from Dawn, and I was pleased to receive a long sigh.\n\nWhile still rodding in & out of her hot juicy pussy I carefully pushed my finger against her ring, feeling it ease open a fraction as I increased the pressure against it. Dawn's tight hole clamped tight to my finger as it slowly penetrated further. I could begin to feel my finger through the thin membrane as my prick rubbed from the other side. Dawn was moaning loudly now at this new sensation of rubbing between her pussy & arse. It was also doing wonderful things to me as well meaning that I wouldn't be able to last much longer.\n\nTaking my finger into the second knuckle I stopped and concentrated on pleasuring & coating Dawn's pussy for the last time with my spunk. It was an unbelievable feeling fucking into her clamping pussy while feeling my finger wiggling in her arse at the same time. Dawn was enjoying it as well as it brought forth her final orgasm. My balls slapped hard against her as she started to shake, scream & throb as a beautiful mass on the end of my prick & finger. As her pussy muscles clamped open & close around my prick, my balls exploded sending hot spurts of spunk arching up my prick & deep into her pussy as I grunted my pleasure over this young beauty underneath me. I slowly extracted my finger so we didn't do any harm as we humped & shook on the bed with Dawn collapsing onto her elbows as my own body folded over the top of her. Resting on my elbows on the bed, I reached under to cup her breasts in my sweaty hand as we finished an amazing orgasm, totally spent of energy. Finally we rolled onto our sides & hugged each other tenderly. As our breathing settled down we kissed deeply sharing a special love that didn't exist 48 hours before. I looked into her beautiful eyes & thought I saw contentment as we slowly drifted into a contented sleep allowing our spent bodies to recover as we slept.\n\nIt was late afternoon as we awoke & smiled at each other. I led Dawn into the bathroom & turned on the shower, this time climbing into the large cubicle with her. As the hot pulsing water revitalised our bodies we gently & lovingly soaped & shampooed each other all over, taking care to be gentle with tender or sensitive parts of our love & sex worn bodies. We hugged & rubbed our soap covered bodies together under the streaming water, sharing one of our last intimate moments together. Finally we had to step out & dry each other. Once dry I rubbed talc over most of Dawn's wonderful skin before we started to dress.\n\nMuch to my surprise Dawn started to dress in her lingerie which elicited a twitch or two out of my worn out prick. I watched in awe as she dressed before me and I wanted to make love to her all over again, but the end of our wonderful weekend had crept up on us. Dawn was very mature in her realisation of this fact, and half a hour later I was carrying our bags as we descended to the lobby for the final time. As I paid the bill, the desk clerk gave each of us a package that contained framed photos from the restaurant that I had arranged as a lasting memento for each of us. The bellboy brought up the wagon & loaded the bags, then we reluctantly left the Marriott.\n\nDawn opened her package on the drive back to her home, leaning over to kiss me 'thank you' as she admired the photos. We drove the rest of the way with our hands together rubbing up & down each others legs alternatively. The feeling of rubbing up her stocking thigh was unforgettable and I wished I could pull over & do more stroking, but reality said no.\n\nWe pulled onto her drive and Alex & Di opened the front door as I went around the wagon to open the door for Dawn to step out. Alex & Di's mouths dropped wide open as their daughter stepped from behind the door & they got a view of their now transformed daughter. They both rushed forward to hug Dawn & welcome her home as I stepped around the wagon to retrieve Dawn's bag. I was joined by Alex who thanked me for taking such great care of their daughter before taking Dawns bag off me & heading indoors. As I walked back to the front of the wagon Di let go of Dawn & gave me a crushing hug & a kiss, sobbing \"Thank you, Thank you so much,\" before walking inside as well to leave Dawn & myself to say our goodbyes.\n\nDawn lovingly placed her arms around my neck & whispered in my ear, \"I love you, & now I will have no regrets.\"\n\nTears rolled down my cheeks as I kissed her & whispered in her ear \"I will be here whenever you need me over the coming weeks, and I will always love you for all time, you are a very special person.\"\n\nI watched Dawn turn & walk into the house, her magnificent calves encased in stockings & her smooth exposed back glowing in the evening sun.\n\nEpilogue.\n\nDawn's health faded very quickly over the next two weeks and she went onto a drip to dull the pain. She had nursing help as she wanted to die at home, rather than in a hospital or hospice.\n\nI visited her every evening & held her hand while she slept & talked for the short times she was awake. She was surrounded by love from her family & friends.\n\nDi rang me at work at 10.47am on the Tuesday to say Dawn had passed away two minutes ago peacefully.\n\nThe funeral was hard for me, made even more so when Di whispered in my ear that Dawn had been buried in her new black dress that she loved so much. But we spent the day remembering a life well lived without any regrets, and that was something special.\n\nOur photo from that weekend has a special place in my home that I see on the way to bed each evening and I remember the special favour for two dear friends that made Dawns & my brief time together something special that can not be equalled."
    ],
    "authorname": "wizarddriver",
    "tags": [
        "pleasure breasts",
        "started dress",
        "started build",
        "final orgasm",
        "time special",
        "crack bum",
        "hand dawn",
        "dawn started",
        "part pussy",
        "started pound"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/dawns-first-and-only-ch-03"
}