{
    "title": "Buried Treasure Ch. 41-45",
    "pages": [
        "Agent-In-Charge Tim Needle's POV \n\nOakland International Airport \n\nOur plane had landed just after four in the afternoon local time, and I still hadn't been told what the operation was. As our customized transport taxied to a remote section of the airport, I looked over my men with pride. Commanding the FBI's elite Hostage Rescue Team was the pinnacle of my career in Special Operations, more satisfying than my time in Delta Force. We were the civilian equivalent of military Special Forces, but we were better because we stayed together longer. We trained and operated overseas with Navy Seals, Army Green Berets and Delta Force, Marine Corps Scout Snipers and Air Force Combat Air Controllers. Right now, some of the Training group was in Israel working with a Special Reconnaissance Platoon in how to storm airplanes and buses held by terrorists. The other half of the training group was in England updating parachute assault tactics with the Special Air Service. \n\nThe Team was divided into three groups that rotated on a 120-day cycle. One would be in training, one would be in Support, and the third would be Operational. The Operational group was expected to be able to respond anywhere in the continental United States within four hours of a phone call. \n\nThat phone call came just after noon today. We were at our headquarters in Quantico, just finishing lunch after morning physical and weapons training. We geared up and were wheels up on the FBI jet in less than thirty minutes. \n\nMy Team had been on this rotation for the last four weeks and had deployed to six times. Other than being fooled by the Sons of Tezcatlipoca's disappearance at their safe house in Florida, we'd had a good record thus far. Our sniper team ended a bank robbery turned hostage situation in western Minnesota. Our group supported three hostage situations resulting in peaceful surrenders and arrested a man holding members of a church group hostage without injuries. \n\nI just hoped we'd see action this time. \n\nThe plane came to a stop, and a portable stairway drove over. A man in a suit ran up as soon as they were in place, and the door opened long enough for him to come inside. He was a senior law enforcement agent, but I didn't recognize him. \"Tim Needles, Hostage Rescue Team Leader,\" I said as I shook his hand. \n\n\"Drug Enforcement Agency Director Frank Grimes, Los Angeles,\" he said. \"Gather your men; I only want to do this once. I'm going to need complete operational security on this; anyone with a cellphone turns it off and turns it in now. No phone calls are to be made or received by your team. I'm the only contact, and I'm with you until this is over.\" \n\nI nodded, leading him to an area in the middle of the plane with a table and multiple computers we used for in-flight briefings. One of my guys collected the phones, putting them in a drawer. Director Grimes pulled some maps out of his briefcase along with a laptop. One of my guys hooked it to the screens, while he spread out a map of a warehouse near the docks in Oakland. \"I received a tip this morning that the Sons of Tezcatlipoca's Bay Area chapter is receiving a large shipment of drugs this evening at the warehouse they own in Oakland,\" he said. \n\n\"The Sons? Fucking bastards,\" one of my guys said. \n\n\"You know them?\" \n\n\"Missed them a week back, they slipped away before we arrived. We're familiar with what they did in Florida,\" I said. \"I'd love another shot at those sickos. How sure are you of the intelligence?\" \n\n\"Very high confidence. The tips were credible and specific, and we've been able to confirm the ship and the container number that is involved. It is being transported from the docks to their warehouse right now, and the drugs will be transported out tonight. Your team is going to take them down after it arrives.\" \n\nHe had highlighted the building on the map; it was a typical small warehouse/office building, surrounded by an eight-foot chain-link fence and a small parking lot. There were eight bays on the loading dock, and two big doors for semi-trucks to drive inside to unload. He brought up a file with photographs. \"One of my agents is maintaining surveillance on the target. He estimates there are between twelve and twenty Sons inside. Assume all are heavily armed and dangerous. Here's the warrant,\" he said as he handed it over. \n\nSigned less than two hours ago, it was a high-risk warrant since armed resistance was expected. The warrant was to be served if the specified container arrived at the warehouse location. High-risk warrants were a specialty of SWAT teams, and we served these occasionally, but mostly when there were significant numbers of innocent civilians around. \"What's the catch? The DEA has SWAT teams, and Oakland and San Francisco do too. Why bring my team way out here to make a drug bust?\" \n\n\"The tipster also warned us that local law enforcement was compromised, including the DEA Director in San Francisco and senior people in Customs and local law enforcement. There's no telling how extensive the penetration by the Sons and their Cartel backers has gone; I couldn't pass the intel to them if I couldn't trust them. When I spoke to the DEA Director and Homeland Security this morning about it, they decided to bring in a team that could operate independently and hit hard. That's why you're here.\" He tossed a list of names on the table; my eyes bugged out when I read it. \"In one hour, two MD500 helicopters from Task Force 160 equipped with FRIES will land next to your plane.\" \n\nMy eyebrow raised; Task Force 160 was the Army's elite Special Aviation Operations unit out of Kentucky. The helicopters were fast and quiet, and the Fast-Rope Insertion/Extraction System was perfect for landing six men on a rooftop in seconds. We'd trained with them a few months ago, and this gave me options. \n\nWe spent that hour going over the photographs, the floor plans, and the surrounding area. We were lucky in that the surrounding buildings would be deserted at the late hour, and it was a new moon. We would be able to take advantage of the darkness. \n\nThe helicopters landed, and the pilots came over and briefed while their birds were being fueled. A tour bus also pulled up; Frank had rented it with his credit card, telling the company it was taking a bachelor party group into town. I had to hand it to him; he'd kept things tight. \n\nMy plan was simple, and the eight men I was sending on the helicopter left with the pilots. The rest of us walked onto the tour bus. Frank had given the driver an extra five hundred to ignore what he saw and just drive; his radio had been disabled, and he'd turned over his cell phone. He didn't even tell the driver the destination; he just gave him directions. \n\nWe did our communications and weapons checks before we entered the industrial area. The bus stopped four times in the darkness, dropping off teams blocks away from the target. When they were all gone, I looked over at Frank while I watched the body cams of my team leaders on my laptop screen. \"How bad do you think this will be?\" \n\n\"They're armed heavily, violent and facing life in prison,\" he said. \"If we have the element of surprise, it could go well.\" He left unsaid the other part. \n\nOne by one, the teams checked reported they were in position. The helicopters were circling over the bay, two minutes out. I did one last roll call. \n\n\"Sniper one, ready.\" \n\n\"Sniper two, ready. \n\n\"Sniper three, ready.\" \n\n\"Team Alpha, ready. \n\n\"Bravo ready.\" \n\n\"Charlie ready.\" \n\n\"Air One, ready.\" \n\n\"Air Two, ready.\" \n\nEverything was in place. \"Teams Alpha through Charlie, advance and cut fences.\" It was common for defenders to focus on the main gates of a building, so we avoided that. There were two fire doors in the back and one off the east side by the offices; we would enter via those. \n\n\"Thirty seconds to target,\" Air One reported. I looked out towards the bay; the helicopters were blacked out, and I could barely see them and the four men hanging from ropes below it as they approached. \n\nAt ten seconds, the teams pushed through the fencing and ran in a line towards their respective doors. Explosive charges were placed on the locks and they hugged the building, the breacher holding the detonator. \"Three, two, one, GO GO GO,\" I said. \n\nThree explosions occurred almost simultaneously, and the doors were blown open. The three teams rushed in, the point men throwing flash-bang grenades to disorient anyone nearby with the light and the deafening noise. At the same time, the two helicopters flew in, men dangling from the ropes. They shot out the upstairs office windows before crashing through, releasing the ropes as they rolled into the office space. \n\nFive seconds had elapsed and my teams were inside the building. The 'brrrt' sound of the fully-automatic HK MP5 submachine guns mixed with the sound of pistol and assault rifle fire. I watched as the teams blazed through the warehouse, killing or subduing men until there were no more threats. \"CEASE FIRE,\" the Team Alpha leader said as the last two men surrendered. \n\n\"Report,\" I said. \n\nIt was better than I had hoped. As the teams reported in, we had killed thirteen and arrested eight, four of whom were injured. My team was relatively unscathed; one agent had a grazing gunshot wound to his calf, and another took two pistol rounds to his body armor and was badly bruised. \"Good job. Gather the prisoners out front for transport.\" \n\nThe first contact with local law enforcement was when Director Grimes called 911 and reported the raid. We walked the three blocks to the building, beating the first cop there by a good thirty seconds. \"Boss, you gotta see this,\" the Team B leader said over the radio. \n\n\"I'll be there in a minute,\" I said. The police were starting to arrive, and I left the Director to talk to them. The patrol officers gave way to Sergeants, the Sergeants to Lieutenants, and Lieutenants to the Deputy Chiefs and the local FBI Field Office Director. Director Grimes thanked them for coming, handed over the warrant and had the FBI men transport the prisoners to jail or the hospital. They were all pissed about not being given prior notification and wanted in on credit for the bust. \n\nI didn't care about the credit; we knew what we had done. I finally got inside to see what they were talking about. \n\nThe shipping container was open, and about three dozen plastic 55-gallon drums of what was labeled \"Avacado Oil\" were inside. We'd interrupted their sorting operation; they were about halfway through based on the cut-open barrels off to the side. \"Looks like we the tip was good, boss,\" a grinning agent said as he wiped Avacado oil off of his arms. There was a pile of cocaine blocks, wrapped kilo-sized packets in one area. Another contained baggies full of pills, while a third area contained plastic bags of Fentanyl. The DEA would have a field day with this haul. \n\nWe didn't stick around to see what all they seized in the bust; my men loaded back onto the bus, and we celebrated the successful mission on the way back to the airport. Director Grimes sat in front, mostly on the phone. He didn't look happy. We were entering the airport when I walked up and sat across from him as he finished a call. \"Nice working with you, Mr. Grimes,\" I said as I held my hand out. \n\n\"I should be thanking you, Tim. Your men did a great job tonight.\" \n\n\"You don't seem too happy about it.\" \n\nHe shook his head. \"We had wiretaps on the San Francisco DEA Director and other senior law enforcement people based on the tip we got,\" he said. \"Four minutes after the bust began, he got a call from one of the Sons. They were furious that he didn't warn them.\" \n\nI couldn't imagine what he was feeling; the betrayal would be overwhelming. \"We started pulling the weeds tonight; it's going to take a while to finish the whole garden. Take some time to enjoy this moment; they don't come often enough.\" \n\n\"Thanks, Tim.\" The bus came to a stop by the charter terminal, and he grabbed his briefcase and stood up. \"You men did a hell of a job tonight. Thank you.\" My guys cheered and thanked him. \n\nHe walked off and was gone. \n\nCh. 42 \n\nAlpha Rori King's POV \n\nArrowhead Pack, Alpha's Home \n\n\"Alpha, there is a vehicle at the gate, a middle-aged woman is inside,\" the duty Warrior in the security center reported. \n\n\"Recognize her or the vehicle?\" \n\n\"No, ma'am,\" he said. \"Sending patrol out to talk to her; she isn't going away.\" \n\nI sat back, rocking Cheryl after her last feed of the evening. Mark had already been fed and changed, and the Omega who had nanny duty tonight set him down next to a sleeping Hope in the crib. The Pack was still on high alert after the recent attack by three Werejaguars, and it made sense for my Betas and their daughter to stay with me. I appreciated the extra protection Coral provided with her twin brother Chase gone. \n\nCoral was a better fighter and had always been a more dominant wolf than her Doctor brother. She had dedicated herself to the warrior arts from a young age, while Chase never expected to be an Alpha. The heir-apparent to his Pack had been his oldest brother, Sawyer, now 133 years old. Sawyer and his mate Ashley had taken over leadership of the Donner Pack in California last year. Middle brother Carson, who had expected to be Sawyer's Beta, but ended up becoming Alpha when Chase's father went feral and was killed. Chase was my mate, and I was the dominant wolf in the relationship. It wasn't the norm, but it worked well for us because Chase didn't want to be the top dog. \n\nOur Pack was not like others, and we liked it that way. We'd taken in dozens of Omegas and abused females, and my adoptive mother and her biker husband were Betas in the Pack despite being human. \"Brent, you and Laura stay close in case this is a diversion,\" I sent to them. The mated pair of Warriors had Cheryl duty tonight; as the next Blessed One, a firstborn female in the line of the original Werewolf King, she was the most valuable female in our world. She could become pregnant annually like me, while normal pairs were lucky to have one child every fifty to a hundred years. \n\n\"Alpha, the woman at the gate, she says she is Three Tequila and is here to see you,\" Security reported. \n\n\"Let her in; she knows the way. Close the gate behind her and keep an eye out for anything else.\" There was only one reason she would leave Florida in December to come to frozen Northern Minnesota, and it wasn't to see the babies and me. I reached for the phone, calling for backup. \"Mom, it's me. I need you to come over and hurry up. You need to be here before Three Tequila kills me.\" \n\n\"Three Tee is here? Oh fuck. I'll be there in a few minutes.\" Our Alpha house was at the tip of the point the Pack House sat in the center of, and Coral's house was to my right. Possum's house was back where the shoreline point met the west side of the lake, on the way to the front gate. She would have to hurry if she was going to be here before Three Tequila. \n\nI handed Cheryl over to the nanny, then looked over at Laura. \"Watch the babies; I'll be back in a few. If you hear yelling, ignore it. I can handle her.\" \n\n\"Of course, Alpha.\" The nanny laid Cheryl down with her brother and cousin as I walked to the door. Heading downstairs with Brent trailing behind, I walked to the entryway and waited for her to arrive. Looking out the window, I knew it was her because she was going at the speed of smell through the snow and ice on the road. A lifelong Floridian, this was her first time driving in a Minnesota winter. \n\nShe parked in the driveway and got out, and I laughed at her dress. She didn't own a winter coat, so she was in jeans, motorcycle boots, and a Harley-Davidson hoodie. She looked miserable as she came up the walkway to my door. I opened it up and smiled. \"This is a surprise, Three T,\" I said as she came in. \n\nShe looked around as I closed the door, then grabbed my sweatshirt by the shoulders and pushed me into the door. \"WHERE THE HELL IS SHE,\" she said. \n\nBrent moved to grab her, but I shook him off. I just pulled her into my arms, holding her as she started to break down. \"You took her, she's still alive, and you didn't tell me,\" she sobbed as I held her up. \n\n\"Come on; we need to talk.\" Possum had shown up by now, so I led them to the library, a cozy room off the entryway that held books, comfortable chairs, and a gas fireplace between the windows looking over the lake. I turned on the fireplace and set Three T in one of the wide leather chairs, sitting next to her as I pulled a crochet afghan over us. She had only been outside a few minutes, but her hands were freezing cold. Possum hugged her, then took a chair across from us. I sent for an Omega to bring us some hot chocolate and snacks while she snuggled in next to me. \n\n\"Where is she?\" \n\n\"She's safe,\" I said. \"I'm sorry we didn't tell you. We needed the Sons to think the DEA had her in Witness Protection, and the DEA to think the Sons had her. We screwed up when we took her; our team used too much sedative in the coffee, and we were looking at serious charges. It was best not to tell anyone.\" \n\n\"Mongo said you didn't trust the cops to keep her safe.\" \n\nI nodded. \"The cops don't understand the threat. It's more than just an outlaw club. The leaders of the Sons of Tezcatlipoca are jaguar shifters. Very big, very tough and they wanted her dead. Only a Pack could hope to protect her.\" \n\n\"Jaguars? The big fucking jungle cats?\" \n\n\"Yes. When Manilo showed up at the service, he smelled us and figured out that we were hiding Heather in Minnesota. Three Werejaguars attacked us a few nights ago, but we'd already moved Heather to a safer location. We killed the three jaguars, and moved Heather just in case.\" \n\n\"Who's Heather?\" \n\nPossum answered instead. \"Heather Rhodes is her new identity. We try not to use her old name so we get used to her new one.\" She smiled. \"She stayed with us for a day when she first got here. We've taken good care of her for you.\" \n\nShe sank back into the chair, wiping the tears from her eyes. \"I need to see her. I need to know she's all right.\" \n\n\"Charles, Connie, come to my house please, the library,\" I sent. \"I can't do that, Tee. The Sons suspect we are here, and we don't know if they have people watching our Pack. You arriving like this, in a panic, just confirms to them that we have her. It would have been better if you had trusted us to take care of her. You know we will do anything to protect her from them.\" \n\n\"Not good enough,\" she said. \"We had an interesting conversation with Frank Donovan, the DEA guy in Orlando? He met us for lunch, and gave me a message for you.\" \n\n\"Why didn't he just call?\" \n\n\"He told me that you needed to keep Harleigh, umm Heather, out of sight. She was seen yesterday at a pizza place in Wadena.\" \n\nI sighed. \"We know she was recognized, but our people destroyed the security camera footage, and the photograph wasn't good enough. Still, we relocated again, and she's with one of our Pack Warriors for protection.\" \n\n\"You didn't destroy it,\" she said as she shook her head. \"Donovan saw the photo; he said facial recognition was a match to her. He kept it from spreading, but he told me not to trust phones or emails, and he gave me a warning. He said you needed to keep her safe and completely out of sight. The Director doesn't want his friend's only daughter to die because you guys are getting sloppy.\" She wiped a tear. \"Do you have any idea of what I've been through today? That was how I found out my niece was still alive!\" \n\n\"Oh god,\" I said as I pulled her into my arms. \"No wonder you showed up on my doorstep!\" I heard someone come in the door, then a minute later Charles and Connie entered the room. I introduced her to Three Tequila, reminding them that she knew of Pack life. \"She wants to see her niece, but I explained how we couldn't. Can you tell her how she is doing?\" ",
        "\"Of course, Alpha.\" I got up and moved to the kitchen while they talked. \"Coral, Keith, Three Tequila was told by a friend in the DEA that Heather had been positively identified as Harleigh Ryder in the Pizza Ranch. I need you guys to come up with a way to find the two and pass on the warning. We have to be very careful, though; it's possible law enforcement and the Sons are watching us by now.\" \n\n\"Of course, Alpha.\" \n\nI was helping Angie put together the tray of snacks when I heard a cry from upstairs. \"Alpha, Cheryl won't sleep,\" the nanny sent. \n\n\"Have Laura bring her down to the library,\" I said. Angie took the tray with the mugs of hot chocolate while I brought the chocolates and cakes on the tray. Three Tequila was sitting up now, and Possum was sitting with her. We passed out the mugs just as Cheryl arrived. \n\n\"Oh my God, she's getting so big,\" Three T said as she saw my daughter. Her hand slipped down to her stomach, rounded in her fifth month of pregnancy. \"Can I?\" \n\n\"Of course, you're practically her Grandmother,\" I said. She held the fussy girl, rocking her as she calmed down. I could tell she felt better about Heather now that she had talked with the two warriors who had recently left her. She caught us up on what was happening in Florida, while we told her about what we were doing here to guard against the Sons. We were all getting tired, and even Cheryl was asleep in her arms. \n\n\"Where is Chase,\" she finally asked. \n\n\"Chase is doing what he promised the Club he would do,\" I said. \"He's making them pay for their sins.\" \n\nDEA Acting Director Lawrence Miller's POV \n\nSan Francisco Division \n\nThis had been the weirdest night of my twenty-six years in the DEA. \n\nThis morning I was reviewing reports in my Washington, DC office; my division worked with law enforcement in Central and South America to disrupt Cartel operations. I was called into the Director's office, handed a warrant and instructions, and was told to bring two agents I trust with my life with me. I had arrived in San Francisco and waited for the call. \n\nWe were sitting on a bench outside the DEA building when the call came. \"Execute the warrant and take over immediately,\" the Director said. \n\n\"Yes, sir.\" I hung up and went inside, my men and I presenting our badges. I showed the warrant and my orders to the duty officer, who paled as he read them. \"Is the Division Director here,\" I asked. \n\n\"No, sir. He left about two hours ago.\" \n\n\"I am assuming command of this Division, effective immediately. You are relieved of your duties; you are to drive Agents Thompson and Guiterrirez here to arrest Mr. McClintock.\" \n\n\"I understand, sir.\" He left with them as I entered the floor where the agents worked. \n\nOnly one man was around, and he wasn't on the list. \"I'm Director Miller, and I'm the new Division Director. Stand up from your computer.\" He did, looking at me quizzically. \"Place your weapon and badge on the desk. You are on paid suspension pending an investigation into this unit.\" \n\nHis face paled. \"Investigation for what?\" \n\n\"That's classified. Another agent or I will call you in a few days with further instructions\" He left the office, and I locked it behind him. I went into the Director's office; the first thing I did was unplug his computer and disconnect it from the network, setting it aside. I put on gloves and looked through his desk. I didn't find anything; I didn't expect to. The betrayal was more about what they DIDN'T investigate than what they did. \n\nI got the call about McClintock's arrest about the same time as the FBI showed up. Their teams seized all the computers in the office, tagging them for evidence, then started boxing up the desks. \n\nMy men collected the duty agent's badge and gun, and when they returned, we locked it all up in the safe and left the room to the FBI. Going outside to our rental car, we drove to the jail where the FBI had brought the men arrested in the raid. I had a brief conversation with Director Grimes, the Los Angeles agent who had received the tip. The FBI raid on the warehouse had been nearly flawless, and they had seized a large shipment of drugs. The shocking part was how many were killed instead of being arrested; I guess that's what happens when a violent biker gang doesn't want to go to prison. \n\nWe arrived, and I met up with the FBI Agent-In-Charge that had brought them in. \"They've been segregated for questioning?\" \n\n\"We have four here in different interrogation rooms, and the four in the hospital segregated from each other. They all refused to speak to anyone without their lawyer,\" he said. \n\n\"Let me guess... high-priced defense lawyer?\" \n\n\"Yep. She was here before we had them fingerprinted.\" I told him what was going on and what I planned to do. \"You sure about this?\" \n\n\"I just do what I'm told,\" I said. I entered the interrogation area and walked to room three. Knocking, I walked in without waiting for an answer. \n\nA big Hispanic biker in orange coveralls sat handcuffed to the table, and a woman in a two-thousand-dollar pantsuit turned to me in shock. \"I'm meeting with my CLIENT, now GET OUT,\" she said. \n\n\"There's no need for that,\" I said. I walked over to where Carlos Pachino, the Vice President of the Bay Area Sons of Tezcatlipoca, sat. Taking the key out of my pocket, I removed his handcuffs. \"Mr. Pachino is free to go as no charges against him are being filed; I will take him to Outprocessing so he can retrieve his personal effects.\" \n\nBoth of them looked at me like I was crazy. \"He's not being charged?\" \n\n\"That's correct.\" I waved for Carlos to follow me, and the lawyer trailed him out the door. It only took ten minutes for him to change, then he was at the front door. The warrant we had obtained allowed us to plant a tracking device and bug, and the one we had inserted into his wallet was our newest design. It had a voice-activated recorder and GPS location data and transmitted to a cell tower once an hour in a burst that lasted only a few seconds. It was almost impossible to detect. \"I assume you can get him home,\" I asked the lawyer. \n\n\"Yes,\" she said. \n\n\"Good.\" I turned to Carlos, who was just figuring out what was going on. \"The DEA appreciates your cooperation, Carlos. Have a nice day.\" I walked back inside, smiling to myself. The release would be suspicious, and the lawyer didn't work for Carlos personally. It would be reported back with my words, and once the search warrant became public? We both knew what the Sons did to traitors. \n\nHe had two choices, both of them bad. He could run, spending the rest of his life looking over his shoulder. Or, he could go to the Club and hope they would believe him. \n\nEither way, he was a dead man. \n\nCh. 43 \n\nSpider Monkey's POV \n\nI-5 North of Los Angeles \n\n\"We're going to need to rent a vehicle for this, maybe two,\" Chase said as we sped towards Los Angeles. \n\n\"What kind?\" The car we were in wasn't enough to pick up more than one person. Two, if I sat in Vic's lap, which would be fine with me. \n\nHe closed his eyes and thought for a moment. \"Depending on how much cash they are holding at that building, it could be a pallet or more. Add in that my brother is going to be arriving with between eight and twelve more men, and all their gear?\" \n\n\"So a van, something with a closed back that we can load into. A U-haul? The men could sit in the back, and it would be quick to load.\" \n\nHe nodded. \"That would work.\" He got a look on his face as he realized something. \"You know, the Oklahoma City bomber was identified because he rented a van like that. If one of us rents it, we're leaving a trail.\" \n\n\"Could your brother or one of the men do it?\" \n\nHe shook his head. \"We need to pick them up with the vehicle, so no.\" \n\nI just smiled as I reached into my bag. \"Well, I guess it's a good thing I wanted to drink before I was twenty-one,\" I said. Finding the hidden seam, I pulled open the thin compartment where I kept my emergency supplies. I pulled out a plastic bag and opened it; inside was everything I would need. \"May I introduce Mariko Lim, my alter ego.\" \n\nHe took the driver's license out of my bag. \"How...\" \n\n\"I realized long ago that an alternate identity might keep me out of trouble. Mariko here has a history going back almost two decades. Driver's license renewals, credit cards, social security number, she's been carefully maintained to avoid scrutiny.\" \n\n\"The photograph? It's like you, but not perfectly.\" \n\n\"True. When they started using facial recognition, I substituted a woman in China who looked similar for my photograph. It didn't take much to hack the DMV database, changing the image in there as well. She even has a job and an apartment.\" \n\n\"You're kidding me,\" Vic said. \"How have you maintained that?\" \n\n\"A friend manages an apartment complex. There is a mailbox for Apartment 4K, but you won't find it if you go there. I stop by and pick up the mail every few days. The only thing I haven't done is register to vote because I don't want to get called for jury duty.\" I smiled as I pulled out the auto insurance card. \"She owns an old Ford Tempo that is parked at the apartment and carries minimal insurance.\" \n\n\"Wow, you thought this out,\" Vic said. \n\n\"Hackers are on alert for compromise all the time, Vic. Mariko allows me to hide income and expenses, while little old me works as a Google drone waiting to retire early on my stock options,\" I giggled. \"She's never gotten a ticket, unlike me.\" \n\nChase looked out the window; we were hitting Los Angeles traffic on the north side, and we had to get all the way around to Long Beach. We might spend as much time stuck in traffic as we did driving down. I started searching for rental places near Long Beach, figuring we didn't want to drive far from the airport to get it. I heard a buzz and he reached into his pocket, checking the text message. \"It's my brother,\" he said. \"Their plane is arriving at Long Beach at half-past midnight. He's bringing eleven with him, including Charlie and his four brothers,\" he said. I looked at him, not getting it. \"Charlie and Four? C-4, a military-grade plastic explosive. It means they came prepared for most anything.\" \n\nDamn. His family didn't mess around. \"So what do we do until then?\" It was just after six. \n\n\"We should stop and eat. Spider, you should reserve the truck and maybe find a hotel for the night,\" Chase said. \"After we've got the truck, I can go visit Director Grimes while you guys pick the men up at the airport.\" \n\n\"We should drive past the warehouse and their clubhouse, just to get familiar with the area,\" Vic said. \n\n\"All good ideas, but let's get some food,\" I said. We stopped at an In-N-Out burger and loaded up on all kinds of stuff that wasn't healthy but tasted damn good. I planned to get a lot of exercise tonight, so I didn't even feel guilty. We decided to rent from a place in Anaheim so that Chase could take the car, plus we were running out of time before the store closed. I rented it for three days on Mariko's credit card, telling them I would return it in Eau Claire, Wisconsin. I also rented a block of eight rooms at a hotel near the Queen Mary in Long Beach. \n\nWe got to the rental place at seven-thirty, and Vic walked off while and I entered the store. The rental went without a problem as I pretended I was moving to my boyfriend's hometown, and the woman teased me about the Midwest winters. I got a mid-size truck with sixteen feet of cargo space, leaving plenty of room for people. \n\nParking it in the back of the hotel lot just after nine at night, I looked over at Vic in the passenger seat. \"Let's go check-in,\" I said. \n\n\"We've got a few hours until we pick the brothers up,\" he said as he sent me a smoldering look. \"What shall we do?\" \n\n\"You're going to pound me into a puddle in the middle of the bed,\" I said as I leaned over and kissed him. \"Come on, stud.\" \n\nTen minutes later, we were approaching our room. I was hot and bothered on the way up, his teasing and casual touches of my body sending delightful tingles through me. All I had to do was think back to last night, and the way he loved me up; I couldn't wait for more. I opened the door and turned on a light before going over to close the shades. \"No,\" he said as I reached for the heavy drapes. \"Open the curtains all the way.\" \n\nI did what he said as the room darkened again; the lights of the city were the only illumination in the room. I turned to look at him; he was standing a few feet away, his intimidating body bristling with strength and sexual energy. It was like he was hunting me, and it was hot as hell. \"Vic, what...\" \n\n\"Strip,\" he commanded. I did what he said, pulling my shirt over my head and tossing it into the corner. My shorts and underwear soon followed, and I was standing naked in front of him; anyone looking at the room would see me. \"Turn around and put your hands high on the window.\" I moved forward, stretching up, my legs spreading as I looked out. I heard clothes hitting the floor and sensed him as he moved forward. His hard cock poked me halfway up my back; such was the difference in height between us. \"Don't move a muscle, or I won't let you cum for me,\" he said into my ear. \n\nI was so turned on right now; I was dripping onto the carpet. I looked forward, seeing the city below from our tenth-floor window. He reached around me, cupping my breasts, and pinching my nipples gently as his mouth moved to nibble at my neck. I moaned as he wrapped me in his strong arms. I tried to stand on my tiptoes, to encourage him to sheathe himself deep inside me, and all it gained me was a loud smack on the ass. \"I told you not to move,\" he said. \"Now you won't cum until I do.\" \n\nI whined as his hands kept working me into a frenzy in front of the window, but every time I got close, he'd stop and move somewhere else. He was driving me mad with lust, and I loved every second with my big man. I wanted to move so bad, but his warning kept me from doing anything else. \"Please,\" I begged him. \n\n\"Hold onto the window frame and don't let go,\" he said. I let out a screech of surprise as his big hands reached around my thighs and lifted me until I was a little past horizontal. He set my legs on his shoulders as he stood tall. His mouth latched onto my hot pussy, and I almost let go. \n\nI was shaking, I needed to cum so bad, and he was driving me wild. I was looking down through the window at the parking lot and the city, while his talented tongue plunged my helpless body. I'd never felt so absolutely at the mercy of my lover, and I loved it. He tongue-lashed me for a couple of minutes as I begged him to let me cum. He moved his head back. \"Suck me,\" he said before going back to suck on my aching clit. \n\nI looked down; he was hard and ready. I trusted him to keep me from falling, so I just let go of the window and let my hips bend. I put my hands on his thighs as I engulfed his large cockhead. I knew he wouldn't let me orgasm until he did, so I pulled out all the stops as we did a standing 69 in front of the window. I took him deep into my throat, swallowing hard against the gag reflex, then came back out. My thighs were shaking with need as he warned me not to cum yet. \n\nI could feel him swell in my mouth as he got closer. I felt him move forward, my back pressing up against the window as his length pushed into my throat. He started to cum as he sucked hard on my clit, and I came so hard I saw stars. I lost control of my body; only his arms around me kept me from falling as the sensations rolled over me. His load had gone deep into my throat, and I gasped for air as he pulled back out. \"Holy shit,\" I said as I hung there. \n\nHe walked over to the bed, my neck hitting the edge before he pushed my body onto my back, my face looking up at his spent cock. \"We're not done yet,\" he said. \"Get me hard again.\" \n\n\"Yes, sir,\" I said with a smile. I laid my head back over the edge of the bed, setting myself up for a good throat fuck. Taking him back in my mouth, I swirled my tongue around him. The faster I could get him hard, the sooner he'd be inside me. \n\nI wasn't going to waste a moment with the best lover of my entire life. \n\nChase's POV \n\nAnaheim, California \n\nI dropped off Vic and Monkey at the rental place, then drove a few miles away to make sure I wasn't on the same cell tower they were. Pulling into a parking lot, I pulled out my phone and texted Frank Grimes from the phone I'd used earlier for him. \"NEED MEET W/U 2NITE,\" I sent. \n\nIt took a few minutes to get a reply. \"FLYING IN VERY LATE MEET ME AT OFFICE TOMORROW.\" \n\nI didn't want to tip anything, so I told him OK and turned off the phone again. Knowing he was not going to be around for a while, I set off for the piers in Long Beach. Over the next few hours, I surveilled both the Clubhouse and the Warehouse where the money was from a distance. I could see people in the Clubhouse, but the gates were closed, and no one was arriving or leaving. They looked like they were on lockdown too. I could see armed men by the fence and on top of the building. \n\nI didn't want to risk getting out of the car or getting close enough one of the Werejaguars could scent me. I spent some time looking at how to get in and out of the warehouse without being seen by the cops that would be surrounding the Clubhouse in a raid. When I was satisfied, I drove back to Anaheim and parked down the street from his house. I walked around the block, making sure there were no feline scents larger than house cat size, then grabbed the packet of printouts and a thermos of coffee. His home had been built in the '20s and had a full front porch with a hanging chair. I sat in a dark corner away from the door, poured myself a cup, and waited. \n\nI had a pocket AM/FM radio and tuned to a 24-hour news station while I waited. The raid in Oakland was leading the news, and I was shocked at the death toll. The Sons weren't going quietly, and the commentators were full of speculation about what this meant for them. \"A major drug bust is a game-changer,\" one of the commentators, a former US Attorney from California, said. \"If they can tie this to other chapters, they have a criminal conspiracy that brings the Racketeering Influence and Corrupt Organizations statutes, commonly known as RICO, into play. It would not shock me if this club ceased to exist by the new year,\" he said. \n\n\"Really? That fast,\" the host asked. \n\n\"If they can make the links, then yes. The RICO statutes were put in place in the fight against organized crime, and a criminal gang can be taken down that way. If the Government can prove there have been at least two acts of racketeering activity within a 10-year period, and those acts are related in one of four ways to an ongoing criminal enterprise, they can use RICO.\" \n\n\"What exactly is a racketeering activity?\" \n\n\"There are twenty-seven federal crimes and eight state crimes that meet the definition. Drug smuggling certainly meets that bill, as does murder, kidnapping. and extortion. They've got them with at least one with this bust; if you include the attacks on the Steel Brotherhood clubhouse and the murders of current and former law enforcement officers, you've got more than two. If these acts are tied back to the Club leadership, proving the criminal enterprise is straightforward.\" \n\n\"What does that mean for the Sons of Tezcatlipoca?\" \n\n\"It's a hammer. Each charge of racketeering can result in a fine of up to $25,000 and twenty years in Federal prison. The Feds can also immediately seize all the 'ill-gotten gains' of that criminal enterprise, and those assets are forfeited if they are found guilty.\" \n\n\"Wait, they take their money?\" \n\n\"Not just their money; they can seize businesses, homes, properties, jewelry, cars, anything they can show was paid for in whole or part by the proceeds of that criminal enterprise. Usually, prosecutors can use the hammer of RICO to get defendants to cooperate in prosecutions in exchange for lesser sentences. The US Attorneys love RICO because it's easier to prove a pattern of acts and take out the leadership than to prove an individual leader ordered a specific act. We just charge them ALL.\" ",
        "\"What about the victims? If the Federal Government takes all its assets, what happens to them?\" \n\n\"Well, Bob, the RICO statutes allow for civil cases. For instance, if the Steel Brotherhood in Orlando can prove in civil court that the 'enterprise,' in this case the Sons of Tezcatlipoca, damaged their business or property, they can file a RICO suit for damages. In these cases, they are suing the enterprise, not the individual, and the Fifth Amendment right against self-incrimination doesn't help you in civil court.\" \n\n\"Because in civil court, if you refuse to answer the question, the jury can assume you are hiding the truth.\" \n\n\"Exactly. If Federal actions are ongoing, they'll have to plead the Fifth since they are under oath. It almost makes me wish I hadn't retired; this case will be the highlight of a prosecutor's career. When they are done with the Sons, they won't have a Club, a motorcycle or even a Club cut. They're going to lose everything.\" \n\nThe talk show moved to commercial, and I smiled as I thought about what I had on the small table next to me. The account statements would tie each chapter to the drug trade, and the hammer would fall. I'm sure Mongo had lawyers already working on a civil suit. \n\nThe night was beautiful, and it was just after two in the morning when lights moved across me as a car drove into the driveway. The Mercedes sedan parked in the detached garage, then I heard the footsteps coming closer. The motion-activated light came on as Frank Grimes walked up the stairs, and he froze as he spotted me. \"Chase?\" \n\n\"I couldn't wait,\" I said. \n\n\"Come on in.\" He opened the door and walked into his kitchen, grabbing a couple of beers out of the fridge. \"What's so important you came all the way down here?\" \n\nI set the manila envelope down on the table. \"My informant gave me printouts of the offshore bank accounts where the Sons are laundering their money. I've looked at them; they show payments to each of the Chapters, as well as the incoming and outgoing funds to the dummy corporations they are using. I thought you might find them useful.\" \n\nHe set his beer down unopened and flipped through the package. The accounts had been organized by chapter and the person making the transfer was identified in the margins. \"Well, raise my rent; this is real?\" I nodded. \"Who did you get this from?\" \n\n\"I can't say, but it's legit. All I ask is that you give me an hour's warning before you hit the Los Angeles clubhouse so I can get him out of there.\" I didn't have a source in that Chapter, but he didn't have to know that. \"You should move fast; they might already be destroying evidence after the drug bust last night.\" \n\nHe nodded. \"I'll get this verified immediately; then I'll contact the US Attorney and get a warrant. Don't get too far from your phone.\" He reached out his hand. \"You've come through big time, Chase. Thank you for letting us handle it.\" \n\n\"It was the best thing for the Club,\" I said. \"Good luck, and keep my name out of this.\" I walked out the door and drove away, headed for the hotel. My brothers and the Warriors they brought along should be in, and we needed to meet. \n\nIt was going to happen soon. \n\nCh. 44 \n\nDirector Frank Grimes' POV \n\nLos Angeles \n\nI started waking people up as soon as Chase left my house. \n\nI was feeding papers into the scanner as I was on the phone with the DEA Director in Washington, DC. He agreed that we needed to strike fast; there were men from five other chapters caught up in the Oakland raid, and that was enough for him. We had been maintaining surveillance on each of the Clubhouses, and plans had already been made for how to take them down if needed. \n\nGo time for coordinated raids was 0600. Across the Southwestern United States, Supervisors were frantically paging their Agents to come in immediately. Most had just enough time to gear up before the vehicles were moving out. \n\nThe Los Angeles Division had its own SWAT team, and they coordinated with the Los Angeles County SWAT. By five in the morning, I had a copy of a Federal warrant authorizing raids on all US chapters of the Sons of Tezcatlipoca. All this was courtesy of Chase Nygaard, who had provided the information on the Oakland smuggling operation, and the banking information which was quickly validated by our financial investigators. \n\nI pulled out my phone and sent a quick text to him. \"GO TIME 0600,\" I said. Putting it away, I went to my car and pulled out my gear from the trunk. The bulletproof vest fitted over my white shirt and tie, and my badge slid into the holder on the breast of it. Getting in, I drove to the rally point for the raid, a parking lot two miles from the target. \n\nThe SWAT vans were already in place, the men gathered around a table behind one of them. They were looking at the satellite images of the outside of the Clubhouse, as well as the building plans the City had on file. \"Good morning, Sir,\" said Doug Baldwin, the Senior Agent in Charge of the DEA SWAT team. \"You know Lieutenant Jackson of LAPD?\" \n\n\"Good to see you again, Rufus,\" I said as I shook his hand. \"We ready?\" \n\n\"Almost. There are still a few people on their way,\" the big man said. \"You should give us more warning next time.\" \n\n\"The raid in Oakland worked out better than we hoped, and we were able to get a warrant for the whole Club just now.\" I put a copy of the warrant on the table. \"We arrest everyone in the Clubhouse on the raid. Anyone we don't catch for something else we kick later if they aren't members.\" \n\n\"How many people do we expect in, Director?\" \n\n\"We don't know. Since we started surveillance, we haven't seen a lot of activity in or out. We could have anywhere from a dozen to fifty people.\" The SWAT teams and agents I was calling in would give us about three dozen officers for the entry team, with another dozen snipers, and command personnel. \n\nRufus pointed at the front gate. \"We're going to hit them with tear gas and smoke through the windows, then flash-bangs for the entry teams. Nothing fancy, we're using our entry vehicle in the front, and tactical teams will close from the other three sides. We use the speakers to announce the raid, and they are all under arrest.\" The big armored vehicle was a modified military Armored Personnel Carrier and would smash through the gate before the teams would deploy from inside and behind it. \n\nWe were bringing a shit-ton of firepower along, much of it military-grade. \"The raid in Oakland was successful but met with more resistance than we expected. The FBI team killed two-thirds of the people in that warehouse because they refused to surrender. They have armed men on the roof and in the parking lot. DO NOT underestimate them, they don't give up, and they don't hesitate to shoot back. Rules of engagement for high-risk warrants apply. Once the warning is given, if they threaten you or another officer, put them down.\" \n\n\"We won't take them lightly, sir,\" Rufus said. \"Our snipers are deploying now; we will have two shooters front and back and one on each side,\" he said. \n\n\"Make sure they keep their heads down, we can't afford to tip them off,\" I warned. \n\n\"Understood.\" Some unmarked vehicles left, and the rest of the men in full combat gear were checking weapons and communications. The agents I had watching the clubhouse met up with some of the sniper teams and passed along what they had learned. \n\nI looked at my watch. Five minutes to target. \"Mount up, boys,\" Doug yelled. The LA SWAT members were inside the carrier or standing on platforms on the side and back. Their SWAT vehicle was behind it, another team inside and ready. The two armored vehicles would provide cover for the teams making the front door entry. The DEA SWAT vehicle pulled out, headed for the alley behind the building. They would break through the back fence, then deploy to the back door off the kitchen. \n\nI stepped into the command vehicle, an RV-like vehicle owned by the Sheriff's Department. They were taking the tactical lead on this operation since their SWAT team was much bigger and more experienced than ours. I sat behind Rufus and Doug as they watched the screens, a drone high above showing everything still quiet. \"Don't go early, everyone goes at six AM,\" I said. \n\n\"We're right on schedule,\" Rufus said. The armored trucks were two blocks away, stopped where a building hid it from anyone looking out of the clubhouse. The command truck had launched a drone, which was providing a live overhead view of the target area. I could see two men on the roof and one by the front gate. \n\n\"Thirty seconds,\" Rufus said over the radio. \"All teams move into position.\" The three SWAT vehicles left their hiding places, and the big personnel carrier accelerated. At five seconds, it made a turn at speed, crashing through the front gate. \"GO, GO, GO!\" \n\nThe raid was on. \n\nChase Nygaard's POV \n\nLong Beach Hotel \n\nI arrived at almost three in the morning, expecting to find everyone asleep. Instead, they were all in my suite, gathered around Spider Monkey as she showed them everything she had on the warehouse where the money was. \"Chase!\" My big brother Sawyer had spotted me and ran up, hugging me to him. \"Quite the fun job you've got for us.\" \n\nI slapped his back as he released me. \"Never a dull moment for your baby bro,\" I said. I hugged Carson, then greeted the ten Warriors they had brought from the Cascade and Donner Packs. \"Thank you all for coming.\" \n\n\"Mom would have our asses if we let the Cats get to you again,\" Carson said. \"I'm just glad I don't have to deal with Coral after this. She's going to be SOOO pissed she missed out on the fight.\" \n\nI laughed; my twin was a true warrior Beta. Part of the reason I hadn't called home was that I knew she'd insist on coming, and I needed her protecting Arrowhead. I moved over to the table as everyone gathered around. \"I'm glad I'm not waking you up or pulling you out of the bar, because we need to move quickly. I gave the DEA the information they need to get warrants, and Director Grimes told me things would happen soon. We need to get our plans down because we'll get less than an hour warning before the Feds strike the clubhouse.\" \n\n\"Do we have anyone watching the warehouse?\" \n\nVic shook his head no. \"Not yet. Now that the car is back, I'll take Joe with me. We'll set up some wifi-enabled cameras for Spider to watch, and we'll set up surveillance.\" \n\n\"Just stay on the far side of the clubhouse, we don't need you being spotted by the Feds as they close in. I'm sure they have people around there somewhere.\" \n\n\"Roger that, boss.\" Vic grabbed the bag from Spider, giving her a possessive kiss, then walked out with Joe following. \n\n\"Vic, you know you can't get close to Spider Monkey.\" \n\n\"I know, and she does too. We're having fun, and that's all we'll have.\" I looked at Spider as he walked out, and she looked like a little girl who'd just had her favorite toy taken away. Vic was a big boy; he knew the rules, I just hoped he'd let Spider down easy. \n\nThe attack plan was simple, and we divided into teams for it. Matt was our explosives guy, and he'd place a small charge on the transformer feeding the building so we could cut power to it when we started the attack. We could see well in the dark, and the humans couldn't, so we'd exploit that vulnerability. A team of six would storm from the front, five from the back. Joe and Vic would provide overwatch from their positions on nearby buildings; Joe's suppressed AR-15 firing .300 Whisper subsonic rounds would barely make a noise as it took people out. Finally, I'd drive the moving van while Spider monitored the cameras. Since my brothers were here, I could mentally communicate with them and they could pass the information to the warriors they'd brought along. \n\n\"We should get going,\" I said as I looked at my watch. It was four-thirty in the morning, and we'd gone over the plan again and again. \n\n\"Your luxury chariot awaits,\" Spider said with a wicked grin as she packed up her laptop. She looked around at the tall and muscular men who all dressed the same; black jeans, T-shirts, and boots. \"You guys might want to stagger your departures so you don't scare the guests. You look like trouble.\" \n\nI opened the door for her, and we went out to the parking lot. She started it up while I opened up the back, and we parked near the back entrance. The guys came out in small groups, jumping up into the back and sitting down next to their bags of gear. It took five minutes before the rear door was closed, and we pulled out into traffic. \n\nShe parked on a deserted street near an all-night fast food place, and we went in to place a big order. Carrying big bags of burgers, fries, and milk containers, we walked back and slid the food into the darkened interior. \"We're only two miles from the target; we should stay here until we get word the raid is imminent,\" she said. \n\n\"Works for me.\" \n\nShe wadded up her burger wrapper and looked over at me. \"So what's the deal with Vic?\" \n\n\"What do you mean? I'm sure you've done a complete background check on him by now.\" She was careful and thorough; she would have done that before taking him to bed. \n\n\"It was the most boring background check ever. He has no police record, no credit history, no home or rental history, and no educational records. All I found was his Provincial Driver's License and insurance information on his car and motorcycle. It's clean; too clean. It's not him.\" \n\nI just snickered; she had no idea how Pack life worked, and she'd flip if she knew Vic was around during the Civil War, and this was probably his second or third identity. \"Have you asked him?\" \n\n\"He didn't want to talk about it.\" \n\n\"He won't. I won't tell you his secrets, but he is a good man and I trust him with my life. When he lost his wife, he dedicated himself to being a protector of the innocent. He doesn't care about anything else.\" I looked over at her. \"I know you like him, but his heart is locked away deep inside. Don't hurt yourself thinking he is capable of more than he is.\" \n\n\"He's capable of all I can handle right now,\" she said. \n\n\"Your help has been key to taking the Sons down, Spider. I won't forget this, none of us will. When this is over, you'll share equally in the spoils of war. Whatever else you need from me is yours if I can provide it.\" \n\n\"I might take you up on that.\" \n\nMy phone in my pocket buzzed with a message from Frank Grimes; the raid would happen at six in the morning. I let my brothers know. \"It's time to move in,\" I said. \n\nI started the truck and drove out of the shadows while she watched the cameras for activity. Our route ensured we wouldn't get too close or expose ourselves to the lookouts on top of the Sons clubhouse. I cut the lights when we got close. When I came to a stop a few blocks away from our target, the team taking the back jumped out and moved silently away. They now wore black long-sleeve shirts, gloves, and masks, and were carrying suppressed machine pistols and knives. I drove through the deserted streets another six blocks, then turned around and parked in the shadows just out of sight of the warehouse. It was only a few hundred feet from the entrance. \"Any activity, Vic?\" \n\n\"Nothing, nice and quiet. We've got a good spot, views on the front and clubhouse sides.\" \n\n\"Keep low, the strike on the Clubhouse is supposed to be at six.\" I checked with my brothers, their teams were ready, staying hidden in the shadows. \n\n\"Chase, the SWAT vehicles are moving into staging positions now,\" I heard from Vic. Looking at my watch, it was five minutes to six. \"There's a drone in the air too, it's high up but I can hear it.\" \n\n\"Stay hidden. Everyone move to final positions; we go when they do. The sounds of their attack will cover our own, and the drone won't be looking our way.\" I looked over at Spider Monkey. \"What do you see on the cameras?\" \n\n\"Nothing, we're good,\" she said. \n\nThe next few minutes took forever; finally, Vic reported the SWAT teams were inbound. \"Stand by, go on the first explosion or announcement,\" I told them. The last thing we wanted to do was go early and call attention to our location. \n\nThere was a screech of tires before a crash and a loud announcement of \"POLICE! YOU ARE ALL UNDER ARREST!\" The teams were off and running, climbing over the fences like they were nothing before rushing to the doors. The team in front kicked the door down and suppressed machine gun shots rang out. \n\nIt was on. \n\nCh. 45 \n\nDirector Frank Grimes' POV \n\nLA SWAT Command Vehicle \n\nIt took less than ten seconds for the raid to go to shit. \n\nThe approach of the SWAT vehicles and the announcement didn't cause the men to throw down their guns and surrender; instead, they took positions of cover and started firing on the men approaching. Shots rang out as the police snipers opened fire on the three guards, and they were dead before the first man had dismounted. \n\nA sniper shot out the meter supplying power to the building, sending it into darkness. The breaching team ran for the front of the Clubhouse while officers with grenade launchers sent 40mm grenades into the windows on the front and back of the building. Instead of filling the Clubhouse with smoke and debilitating gas, the grenades just bounced off the windows. The smoke didn't affect the infrared camera on the drone, but it did make it tough for the snipers and the men to operate. \n\nThe breaching team reached the door, and the battering ram they carried just bounced off the area they hit by the handle. They hit it again, then a third time and still didn't get it open. The men at the rear door fared no better. To make things worse, small gunports opened along the walls and the men inside opened up on the police with AK-47's. I watched in horror as assault teams were caught in the open and cut down. Men dove for cover, the wounded being dragged to safety as the tables were turned. \n\nIf not for the quick response of the SWAT driver, things would have been much worse. The driver gunned the engine and laid on the horn, accelerating forward as the breaching team dove to the sides. The armored front of the big transport busted through the concrete block and the steel door as rounds from the rifles pinged off it. When his progress was stopped, he reversed and backed up to the gate so men could take cover behind him again. \n\nThe highly-trained officers were quick to exploit the breach. The grenade launchers sent more rounds into the opening, quickly filling the room with tear gas. The firing slowed, then stopped as men inside were unable to continue. The breaching team, joined by the others who had made it to the wall, formed up on either side and started their assault. Wearing gas masks and infrared-range vision goggles, the teams moved as one, rifles burping bursts of rounds as they took out threats inside. \n\nMore officers moved in, even as SWAT medics started evacuating the wounded. The sound of police sirens filled the night as additional officers and ambulances responded to the 'Officers Down' call over the radio. My DEA SWAT team had finally gotten in the back door, using explosives to blow it completely off. \"Make sure they know my men are entering through the kitchen,\" I said. \n\nHe made the call. \"They have retreated to interior rooms because of the gas; we're still getting fire. Going room to room now. They know about your guys.\" I listened to the radio chatter, my gut churning to the warnings and calls for help, and watched the feeds from the selected helmet cameras. My SWAT guys had broken out of the kitchen, linking up with the County SWAT as they cleared the dozen or so rooms on the side. It was a long four minutes before the final room was cleared, and I could breathe again. \"Teams report,\" Rufus said. ",
        "My DEA team had been relatively unscathed, mainly because of the delay getting inside. One man got shot in the arm, he'd been bandaged and was walking out. The Sheriff's SWAT team had been hit hard during the failed initial assault, and Rufus's face showed the pain as the reports came in. He had the men establish a perimeter, and the responding officers blocked the streets around it as the ambulances arrived. I left the Command Post with Doug, leaving Rufus to coordinate the medical response. \n\nFour men laying by the road, medics working on them as the EMT's arrived to pick them up. One was screaming, his hip shattered by a bullet. Another had a chest wound, the rifle round punching through his vest just to the right of where his ballistic plate sat. I talked briefly to Jenkins as our medic checked him over, then went inside the fence. \n\nTwo Deputies were on the driveway, their faces covered by SWAT jacket. \n\nThe Clubhouse was being ventilated, doors open to allow the gases out, and we got there just as the DEA SWAT guys came out with their counterparts. The leader of the breaching team spoke up. \"I wish we'd known the fucking windows were bulletproof glass. And those doors? Plate steel on heavy-duty hinges, reinforced with bars on the inside. We could have been out there all night with that fucking ram. If Luke hadn't driven through the fucking wall, we'd all be fucking dead.\" \n\n\"You think they knew we were coming?\" \n\nHe shook his head. \"I think they knew we might come, and they were ready for us.\" \n\n\"They've been holed up all day, and after the raid in Oakland last night they had good reasons to bar the doors,\" I said. \"I thought they might scatter, but they never left.\" \n\nDoug looked over at the Sons taken prisoner. \"Where did we find them?\" \n\n\"Main area, overcome by the gas,\" the SWAT guy said. \"The ones in the back room didn't give up; we had to kill them all. I've never seen anything like this before; they'd rather die than be arrested.\" \n\nFour men were seated in front of the line of motorcycles, one being treated by a paramedic for a leg wound, all in handcuffs. \"Even after Oakland, I can't believe that's all we arrested.\" \n\n\"Yes, sir,\" one of the Deputies said. \"Still counting dead bad guys, last I heard was nine.\" \n\nThirteen guys sounded way low for the number of motorcycles parked out front. \"I thought we'd find more,\" I said. \"There should be a couple of dozen men inside,\" I said. \"Check for a safe room or tunnel; we're missing something.\" \n\nHe yelled for his men and briefed them before they pulled their gas masks back on. They were going to enter in teams of two, in case they found anyone hiding. One would be looking with a flashlight, the other with their infrared camera. If there was a tunnel or hiding place, the thermal images might find it faster than the visual checks. \n\nWe had photos of almost all the known members, so we started looking at the dead and injured Sons and checking them off the list. \"There's nobody in leadership on this list,\" I said as the names came in. \n\nA few minutes later, I had the answer I feared. \"We've got a trapdoor in the President's office, leading to a tunnel,\" the radio call said. \n\nFuck. The leaders had sacrificed their men while they made their escape. They had a good twenty minutes on us. \n\nThey were long gone. \n\nVic Knightley's POV \n\nBuilding Near Sons of Tezcatlipoca Warehouse \n\n\"Chase, the SWAT vehicles are moving into staging positions now,\" I sent to him. The building we'd chosen was kitty-corner to the warehouse, across the street and slightly farther away from the clubhouse. It was slightly higher and had plenty of air conditioning equipment to hide behind. Joe had his sniper hide constructed while I was watching his back at the other end. \"There's a drone in the air too, it's high up but I can hear it.\" \n\n\"Stay hidden. Everyone move to final positions; we go when they do. The sounds of their attack will cover our own, and the drone won't be looking our way.\" \n\nIt was a few minutes later when the SWAT vehicles moved out. \"Their raid is beginning, estimate sixty seconds.\" \n\n\"Stand by, go on the first explosion or announcement,\" I told them. I ran over to the other side of the building, taking a position next to Joe and his rifle. Looking out, I could see our teams cutting through the fence and racing to take position next to the doors. Matt was in the lead out front, and he removed a long roll of a V-shaped plastic explosive. He removed the plastic film covering the adhesive as he placed it along the hinge side, then continued around to the handle side. He inserted an electronic device into the other end and turned it on. A green light started blinking on the device, and as Matt pulled back, he took a transmitter out of his pocket. In back, one of Carson's men was doing the same to another door. \n\n\"Charges are ready,\" Joe said. \"Waiting for the boom.\" \n\nWe didn't wait long. The cops broadcast the arrest announcement, and the gunshots started. The three explosions that Matt set off with his detonator blended into the sounds of the gun battle two blocks away. \n\nNobody noticed. \n\nThe doors blew off and into the room and our men were inside before they knew what had happened. The machine pistols they carried were muffled by the building, and the battle was over in less than ten seconds. \n\nJoe heard the mental communications and smiled at me. \"Six men down, no casualties. Tell Chase to bring the U-haul, he's not going to believe this shit.\" Joe was smiling as he stood up and started to jog for the fire escape we'd used to reach the roof. I passed along the message and ran after him. \n\nWe got to the warehouse just as the guys were raising the door at the loading dock. \"Holy shit,\" I said as I got my first glance inside the space. Dead men surrounded a pallet, and on the pallet sat at least a dozen large duffle bags. Matt had one unzipped, and it was full of wrapped bundles of cash. \n\n\"Can you believe this shit?\" \n\n\"Grab a fucking bag and get ready to load, our ride is coming,\" Carson said as he came in from a back room. \n\nSawyer was right behind him, a big smile on his face. \"I gotta say, Chase is never boring.\" The guys started grabbing the heavy bags as Chase backed the truck into the loading dock. The back was already open, so they jumped in and stacked the bags in the back. Less than two minutes after the 'go' order, the sliding door on the back of the U-haul was down, and the men were driving away. \n\n\"Come on, let's get to our ride,\" Joe said as he slapped me on the shoulder. I was pulling down the door on the loading dock, then I followed him towards the door that had been blown open. \n\n\"Fuck, Vic,\" Joe said as he ran back in. \"We've gotta go.\" Tossing a bag towards the back of the room, he pulled me up and out the door before it destroyed the room in a big explosion. Holding me around my waist as his arm held mine across his shoulders, he helped me walk away. I pushed back the pain as we exited onto the street and turned left. It hurt like hell, but we had to cover a block and a half to get to our car. \n\n\"Chase, I'm hit. Joe's helping me to the car now. Someone came up behind us and put two into me.\" \n\n\"I'm coming for you,\" he replied. \n\n\"NO, you need to get everyone away from here before the cops show up. We're almost there; we'll meet you at the rally point we were at before we came here.\" I was glad I could talk mentally because it was getting more and more difficult to breathe. I was coughing up blood as we turned the corner. Joe leaned me against the rear passenger side as he opened the door, then set me in. As soon as he got in, we were rolling. \n\nI pulled my belt off and wrapped it around my thigh, tightening it up over the handkerchief he gave me. I couldn't do anything about my chest, and I started to feel woozy as I lost more and more blood. \n\nEverything went dark when we pulled up behind the U-Haul."
    ],
    "authorname": "partwolf",
    "tags": [
        "biker",
        "gang",
        "human",
        "motorcycle",
        "werewolf",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/buried-treasure-ch-41-45-1"
}