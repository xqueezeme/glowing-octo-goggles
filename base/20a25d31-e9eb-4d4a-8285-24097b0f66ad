{
    "title": "Her Stolen Grace Ch. 03",
    "pages": [
        "It couldn't be him. \n\n\"'Mora!\" \n\nBut that was Ken's voice. Amora's knees sank to the ground as the little boy broke into a full sprint towards her. Even from a distance, Amora could tell that Ken had grown, even if only a little. His hair was a little longer; his chestnut curls bounced jubilantly as he made his way towards her. In her mind, Amora scolded whoever had been looking after him for letting his mane grow to be so unruly. \n\nAs he neared, she could see he was taller now, too. His legs had leaned out a bit from when she'd seen him last. Did children really grow so fast? \n\nA tear betrayed her as Ken closed in on the last remaining feet between them, his arms wide to hug her. Still in shock, at first Amora did not move when the boy embraced her. The image of seeing him dead on the floor still fresh in her mind. Interrupting, Ken laughed. \n\nIt was his laugh, still full of purity and innocence. The laugh of a child who, despite whatever had happened to him over the past several months, could still find joy. It was his laugh, she realized. Her arms lifted finally she squeezed him firmly, burying him underneath a barrage of kisses and ignoring the pain in her shoulder. \n\n\"You're alive!\" she cried softly, holding him tightly. Ken giggled. \n\n\"Stop it, 'Mora, I can't breathe!\" She let him go, afraid she would break him. Another tear fell. Kenneth was the one to break their embrace. He cupped her face and attempted to wipe her eyes. \n\n\"Why are you crying, 'Mora? Are you sad?\" Two more tears escaped him and made their way down her cheeks. Amora hugged him again. \n\n\"Oh, sweet boy, no. I'm not sad. I'm so happy. I'm happy that I get to see you again.\" She looked up to see King William approaching on them from across the clearing, his men lowering their weapons as he passed. Quickly, she lowered her voice and scanned over Ken. \n\n\"Have they hurt you?\" she whispered hurriedly. Checking over him, she noticed a large scar that lined the side of his forehead, covered by his locks. It was old but appeared that it had taken an extensive time to heal. Kenneth shook his head. \n\n\"No. Although Brandon hits a little hard sometimes when we spar.\" \n\n\"Brandon? Who's that?\" \n\n\"He's my friend. He lives at Braewood.\" Before Amora could respond, William had reached them. He knelt to one knee and ruffled Kenneth's hair playfully. \n\n\"How about we get inside? I'm sure the Restor would like to take a look at Amora's shoulder.\" \n\n\"'Mora, you're hurt!\" exclaimed Kenneth, just now realizing that she'd been injured. She winced as she was suddenly aware of her injury. Not wanting to alarm Ken, she casually shrugged it off. \n\n\"It's not that bad, really\u2014\" \n\n\"\u2014Why don't you help her inside, Ken?\" William interrupted, placing gentle hands on Kenneth's shoulders. \"It's a knight's duty to help a lady, is it not?\" \n\nAmora watched the interaction between the two. It seemed so...familiar. William winked at Kenneth who nodded and held out his hand for Amora to take. The King only offered her a light smile and turned to head back inside. A dangerous thought suddenly danced in Amora's head. It was only a few feet to the woods. She could grab Ken and they would at least make it to coverage from the archers. \n\nThey could make it. \n\nProbably. \n\nFrom there, she didn't know. Kenneth held out his hand eagerly, waiting for her to take it. She looked to the King, whose size was shrinking in the distance, and then to the knights who'd lowered their weapons but were waiting for her to follow. Reluctantly, she let her hand slip into Kenneth's and allowed him to lead her back inside. \n\n-- \n\nDespite Amora's protests and Kenneth's, William had ordered that the boy be taken to another room while Restor Terrick looked over her wound. The King then sat and watched, without a word, as the Restor worked. The worst of the pain had come when it was time to remove the arrowhead from her flesh. The shrill sound of her screams echoed throughout the room as Restor Terrick gave no warning when he ripped the arrowhead from her flesh. After a few moments of piercing pain, the intensity died down and Amora's screams subsided into quiet whimpers. \n\n\"You're lucky,\" commented the Restor, \"It seems the wound is mostly superficial. I will sew it closed and apply a numbing salve. It'll heal in a few days.\" \n\nAmora nodded and sat quietly as the Restor continued his work. She could feel the King's eyes on her but did not dare return a look. She merely bit back a cry as she could feel the Restor's needle pierce her flesh. Trying to distract herself, she closed her eyes and spoke aloud. \n\n\"I thought he was dead. This whole time...I thought I would never see him again.\" She wasn't really speaking to the King, but the accusation in her tone was evident. \n\n\"Levan made sure that he was procured. He's been staying in the elder Lord Vander's keep at Braewood.\" Another sharp pain and the feeling of tight tugging in her back indicated that the Restor was still stitching up her wound. \n\n\"Is he being treated well?\" Ken hadn't appeared to be injured or malnourished, but she wanted to hear an answer. \n\n\"He is,\" was William's only reply. Amora was unable to read his dark expression. She settled for assuming he was angry. They both remained silent. The king never taking his eyes off her while she looked anxiously at the floor, occasionally wincing as she felt the Restor work over her wound. \n\nWhen he was done, she felt the coolness the salve application, alleviating the pain almost immediately. The Restor then stood, as did William, and both went to the other side of the room to speak. They exchanged a series of hushed whispers which Amora knew was not meant for her ears. Both the King and Restor Terrick looked at her, the Restor shaking his head in what seemed like exasperation. The King nodded, a curious gaze still upon her. The Restor bowed to William and promptly left the room. \n\nAmora prepared herself for his wrath. \n\nWilliam was beside her within in a moment. She was surprised considering the great distance between them in the room. She recoiled as he reached out a hand. \n\nShe didn't know what she expected, but she knew she expected pain. None came. Instead she felt a tender caressing of her shoulder. The King was kneeling behind her, examining her wound. He held out a hand. Confused, she turned to look at him. He simply shook his hand. Hesitantly, she placed her hand in his. \n\nOh. Amora blushed at their proximity. His hand was much larger than hers but fit snugly around it. Though calloused, they maintained a tenderness to them. He took her hand and held out her arm. She watched curiously as he experimented with slight movements. \n\n\"Does it hurt?\" he mumbled, his attention still focused on her wound. \n\n\"A little. Not really.\" The salve that Restor Terrick applied had helped to dull the pain. It felt more like a memory. \n\nThe King moved on, extending her arm completely and rotating it in small circles. A sharp pain shot through her shoulder and Amora bit back a small cry. \n\n\"Sorry,\" the King offered. He refrained from exaggerating her movements but instead continued to survey range of her mobility, observing her face for any reactions of pain. Once he was satisfied with his experiment, he rested her hand back in her lap. Turning his back to her, William walked over to stand in front of the fireplace. Neither one of them saying a word. Finally, Amora broke the silence. \n\n\"You are angry...\" she wasn't entirely sure, but it seemed a very fair presumption. \n\n\"Yes, very.\" the King replied curtly. \n\n\"I will be punished?\" \n\n\"Without a doubt.\" \n\nAmora's voice lowered to just beyond a whisper. \n\n\"How?\" \n\nThe King was quiet for a moment, then turned back to look at her. His expression unreadable. \n\n\"I am still debating that.\" He waited for her response, reading her face for a reaction. Instead she looked down, not willing to concede her thoughts. The King spoke to her again. \n\n\"There are some who feel that my generosity towards you is unfounded. That you are spoiled and a troublemaker.\" One of those words struck Amora the wrong way. \n\n\"I am a prisoner! A slave.\" \n\n\"Would your defensiveness qualify as an acknowledgement of your behavior? In your time here, would you truly consider yourself a slave?\" The King sat down across from her. \n\n\"I was taken from my country and brought to an enemy stronghold. I am forbidden to leave. Locked away and made to do work without pay.\" \n\nA small smile came to William's lips. \n\n\"I did not take you from your country. You are a citizen of my empire. And this 'work' you say you are forced to do is nothing that is unfamiliar to you. Instead, you are compensated with daily meals, much better than those you are used to. A bed to sleep in, and general assurance of your safety. If anything, I have provided you with more than your former monarch. In the least, you should thank me.\" \n\nAmora wanted to argue but a certain look from William convinced her otherwise. He continued, \n\n\"As for being forbidden to leave, I'll admit to some truth in that. However, I am keeping you here for reasons that do not concern you. I would have been open to allowing you supervised time about the grounds, but you have long since relinquished that privilege. Regarding Kenneth\u2014\" \n\nAmora's heart dropped. Deep down she had known. The moment she'd realized he was alive she realized the King's game. Kenneth was to be leverage. Kept alive only to keep her in line. Heatedly, she interrupted. \n\n\"You stole him. Had me believe he was dead. It's foul.\" William said nothing, he simply stared at her impassively as she continued her rant. She felt the tears come to her eyes but continued strong in her resolve. \n\n\"I know what you're doing,\" she accused, ignoring the King raising an innocent eyebrow, \"you are going to use him against me. To make me do what you want. To make me obey.\" Her heart sunk at the thought of it. \n\n\"Would you?\" The King asked curiously. \n\n\"Would I what?\" \n\nHe drew closer to her then, looking intently into her eyes. \n\n\"Would you obey me, then?\" He studied her, waiting for her response. She didn't know how to respond. Of course, she would. It would make her hate him even more than she believed she did already, but she would have done anything for Ken. \n\n\"Yes.\" Amora confessed. William seemed to ponder the weight of that statement, as if contemplating just doing it. \n\n\"Will you not obey me now?\" he asked thickly, inching his way closer to her. She could feel heat emanating from his body, it almost felt as if she couldn't breathe. Or was it her? Why was she so affected by his closeness? \n\nHe stood now, standing beside her and taking her good arm to coax her into joining him. As Amora began lifting herself to stand, she was suddenly swooped forward and found herself in a snug embrace. He was careful not to agitate her injury, but held her tightly against him and lifted her chin so he could peer into her eyes. \n\n\"Will you obey me now?\" The King repeated quietly. His eyes were expectant of an answer. Nervously, she looked down, trying to gather her thoughts. \n\n\"I...\" \n\n\"Think carefully, Amora.\" It was only the second time, that she could recall, that he'd called her by name. At times she was unsure that he even knew her name. Hearing it come from his lips melted her skin, a deep feeling stirring within her belly. \n\n\"Yes.\" She conceded hazily. She could have sworn that a devious smile was escaping the corner of his lips. Eyes focused on his lips, she suddenly had a strong desire to caress his face, wondering what it would be like to have his mouth on hers. As if he'd read her mind, he leaned in closer, drawing her chin upwards for his lips to meet hers when suddenly the door flung open. \n\nLevan Vander strolled joyfully in the room with Kenneth clutching his hand. Amora, upon seeing him, broke their intimate embrace and fell to her knees as the child ran to her. William shot an annoyed look at Levan, who only shrugged. \n\n\"My apologies, your grace. The boy insisted that you said 'ten minutes'. He is very adept at keeping time.\" \n\nWilliam ignored him and watched as Amora embraced and laughed with Kenneth. Her concern for him seemed genuine and there was no denying the bond between them. He gave them a moment and pulled Levan aside. Knowing exactly what he wanted, Levan lowered his voice to report. \n\n\"It was an old entrance. Used long ago by the servants for drying linens. It's not even on any of the maps of the castle. I doubt even your father knew about it.\" \n\n\"How did she find it?\" William narrowed his eyes at his Confidence, not lowering his expectations for his friend. Jovial smile gone, Levan's face showed the King he was serious. \n\n\"I do not know,\" he confessed, \"but I don't think she has known about it long. I doubt anyone knew of it.\" \n\n\"Are you sure?\" \n\nLevan crossed his arms and sighed in frustration. He was not used to not having answers for his King. \n\n\"Honestly, I am not. It is possible that someone could have been using it without anyone noticing. It is very discreet.\" He looked over to Amora, who was laughing and talking with the young boy, \"Had she not been foolish enough to run in front of the whole of the staff, I am sure she could have made a successful escape. And none of us would have known how. That portion of Nightswood leads out to the Billows. If she didn't fall to her death, she could have made her way down to the river and her trail would surely be lost.\" William did not like the insinuation. \n\n\"If that part of the Billows has an accessible route to climb down, someone could have easily climbed up.\" \n\n\"Exactly.\" \n\n\"Did you...\" \n\n\"I already did. Everyone is accounted for and I am having the castle and grounds searched. I also have men out searching within a couple miles of that direction. While I doubt there has been any comings and goings, I do suspect it is very possible that if someone knew about the entrance, they could have easily came and went as they pleased. There is no one stationed there and with the number of people we have on staff, vendors that come in and out, anyone could have breached.\" \n\nWilliam was concerned, had there really been such a thing that his father did not know? He moved to request one of thing of Levan. \n\n\"I need you to check for\u2014\" \n\n\"Already being done, your grace,\" Levan said with pride, his sly smile returning. \"Discreetly. I have ten trusted men undertaking the task of making sure there are no more hidden doors we don't already know about. By the end of the week, I will have a summary.\" \n\nPlacing a hand on Lord Vander's shoulder, William nodded. \n\n\"Thank you, my friend.\" Levan returned with a playful bow. \n\n\"Ah. No need for thanks, Will. If anything, thank her.\" He gestured towards Amora with a crafty smirk. \"No offense, but before she arrived, things were starting to get quite boring.\" The king chuckled. \n\n\"Was war and the conquering of lesser nations not game enough for you?\" \n\n\"Oh, quite. But that pales in comparison. She makes things a bit more...interesting.\" William raised an eyebrow at his oldest friend. \n\n\"Oh? How so?\" \n\n\"Well,\" Levan leaned lazily against the wall, \"In all our years together, I've never seen you let a woman have her way as much as you allow her.\" William responded with feigned surprise. \n\n\"I let her have her way?\" Levan offered an indignant look, unconvinced that the King was unaware. \n\n\"Just an observation. She's playing a game, trying to test how far you'll let her go. She might even be aware she won't win.\" \n\n\"And?\" \n\nLevan wrapped an indolent arm around the King's shoulder and chuckled. \n\n\"You're allowing it.\" He whispered matter-of-factly. William shrugged, a mischievous gleam in his eye. Patting the King on his shoulder, Levan moved from his perch against the wall and began to make his way towards the door. William followed and opened the door. Levan offered his King an overexaggerated bow and began whistling as he walked down the corridor. William closed the door and turned back to Amora and Kenneth who were laughing and playing on floor. He allowed them a few more moments of reconciliation before he informed Amora that it was time for Kenneth to go to bed. He allowed Amora to escort the boy to his room and even put him to bed, instructing her to bathe and return to his chambers when she was finished. Amora nodded reluctantly as a guard waited for her and Ken to leave. \n\nKen easily went to sleep despite his firm protests that he was not tired. She watched as his chest lifted slightly during each breath. She stroked her hand through his curls, pausing faintly on the scar on his forehead. Regretfully, she kissed the scar and tucked the blanket in around his shoulders. As she rose to leave, Amora looked at Ken one last time, his boyish smile resting peacefully across his face as he slept. She sighed and followed the guard back to her rooms to bathe. \n\nVareena was nowhere to be found and Amora had been thankful it was just Isabel to attend to her. Although she insisted on bathing herself. Isabel, was too afraid to let Amora out of her sight and stood right at the side of her bath the entire time. She even helped her dress for her return to the King's chambers. \n\nAmora was nervous as she entered the room. The King was standing at the edge of the dining room table, as if he had been waiting for her the entire time. William nodded to the knight who had escorted her, and waited as he bowed and left the room. They were alone now. \n\nSuddenly, her stomach panged loudly and she remembered that she had not eaten supper. She looked at the table expecting a meal to be there and was disappointed when she found none. The King smiled. \n\n\"Are you hungry?\" \n\nAmora contemplated lying, but another pang of her stomach informed her that it would be useless to even try. Meekly, she responded. \n\n\"Yes. I haven't eaten since breakfast.\" \n\n\"Then we shall eat.\" He called for someone outside the room and two servants appeared with two silver trays. Gesturing, William had him place both trays down on his end of the table. The servants uncovered them and Amora's mouth watered. \n\nIt was the most fanciful meal she'd ever seen. There were fruits, some she recognized and some she'd never seen before, and cheeses that adorned each plate. In the middle was the most delectable smelling meatpie. She almost groaned aloud as the scent of the meal danced across the room. William sat down and signaled for her to come to him. \n\nAs she approached, he cleared the area in front of him by pushing both platters to the side. Confused, she stopped just short of one of the trays. \n\n\"Come. Stand here.\" He pointed to the area directly in front between him and the table. Slowly, she approached and stood before him. A long moment passed and the King said nothing. He simply stared at her, his eyes slowly making his way down from the top of her dress down to her hips. The silence was deafening and having him look at her so intensely had Amora suddenly aware of her need to breathe again. As William leaned forward in his chair, Amora attempted to take a step back but was prevented by the dining table. She leaned against it for support as William stood. \n\nStanding dangerously close to her now, William leaned into her, reminding her of their earlier embrace. Amora closed her eyes and inhaled. He smelled so good. The scent of him burned intensely in her nostrils as she felt his facial hair against her cheek. She opened her eyes in surprise as the King spoke quietly into her ear. \n\n\"Turn around.\" \n\nPerplexed, she looked at him as he leaned back, waiting for her to comply. When he offered no other instruction, she slowly did as she was told. Being unable to see him made her even more anxious than before. ",
        "\"Lay your hands flat, palms down, on the table.\" She felt him take a step back, again waiting for her to do as he commanded. Slowly, she leaned over, spreading her hands flat on the table. Amora shivered as she felt his hand trace slowly down her back. She had worn a light fabric dress because she had believed their meeting would be brief. She'd wanted something she could easily take off when it was time for her to go to bed. Had she known the King would be so close to her, she would not have worn something that would allow her body to deceive her so easily. She could feel her breasts swelling at his touch, her nipples tightening as it grazed against the light fabric. She was suddenly grateful that he could not see her trying to control her breaths. Again, he leaned against her to whisper in her ear. \n\n\"Do not move.\" It was a quiet yet firm command and her body reacted instantly to obey. She stilled and felt his arms move their way from her shoulders down the sides of her waist and then to her hips. She gasped lightly as she felt him start to hike the skirt of her dress upwards. When she felt they were just above her bottom, she closed her eyes in hopes that he couldn't see her cheeks burning with embarrassment. Biting back her protests, she felt him flip the skirt onto her back, revealing her undergarments. \n\nSlowly, William slid his fingers into the band and slid them down from her hips until they reached her thighs. From there, the garments slipped easily from around her legs to the floor. William kicked them aside. Before she could react to the coolness of the air, William gently caressed her plump bottom with his large palms. Playfully he grabbed at the flesh, kneading it and lightly pinching different parts of her. \n\nSuddenly, his hands were gone and she felt a new sensation brushing against her behind. The King of the Jodellian Empire was nuzzling his face against her ass. The feeling of his facial hair grazing against one of the most sensitive parts of her body was overwhelming. She stood still as one of her round cheeks was caressed by the King's hand, the other was being massaged by his face. It was a strange feeling, but not unwelcome. Amora could feel that burning sensation in her stomach making its way down and she squirmed. \n\n\"Do not move, pet,\" murmured the King from behind her, \"I am enjoying this.\" \n\nShe felt him bite her bottom lightly and she squealed, resisting her urge to move. It was so erotic, the feeling of his mouth so near to a forbidden place. He continued to shower her bottom with a barrage of small nips, licks, and kisses. Never had she been touched by anyone, much less - like this. Losing an internal debate, Amora tried to deny that she was not enjoying it, too. She could feel the growing wetness between her legs and breaths slowed and felt heavy. Amora was immediately disappointed when the feeling was gone. Unexpectedly, his hands and face left her, and she felt a sudden twinge of disappointment, overcoming however, the urge to look back to see where he'd went. \n\nAmora heard the King sigh in disappointment. Not daring to move, she waited. His hand was at the base of her neck now, his fingers twining in between her soft curls. She felt another hand tug at the drawstring of her dress. With one fell swoop, she felt the dress sink loosely around her shoulders, her breasts easily falling out the top. He was behind her now and she could feel his body press headily into hers. He lightly kissed the nape of her neck, trailing down to her shoulders and back. She could feel the thickness of his desire pressed against the back of her thigh, just the feel sent a sensation of sinful wanting through her. \n\nHowever, as quickly as she'd felt him pressed against her, he was gone, only the hand on the back of her neck remained. With a gentle push, he pressed her head downward, signifying he wanted her to bend forward. She complied with his silent instruction. Another hand, reached down to caress her ass once more. Amora didn't know why but she leaned into his touch, her body reacting to every stroke. However, in a moment it was gone and the onslaught began. \n\nA firm slap elicited a yelp from Amora. The King gripped the back of her neck tightly, and he gruffly spat one command. \n\n\"Count.\" \n\nRemembering their previous encounter, Amora rattled off the tally. This spanking was much harsher and swift; she could feel his anger behind every strike. He did not stop to caress her bottom between cuffs. By 'four', Amora's ass was raw and she was biting back the urge to cry. So many emotions were coursing through her veins. She felt the wetness running down her legs and she was angry that a small part of her was enjoying this. Especially pleased that it was William delving out such an illicit punishment. Her body reacted accordingly, to the pain and the pleasure of it. \n\nThough as intense as it was, the spanking was a short one, and at 'ten' the King stopped. He finally massaged the tender flesh, as if admiring his own handiwork. Finally, he returned the skirt of her dress to its rightful place and lifted her head, allowing her to turn to face him. Before she could say anything, he crushed his lips upon hers pressing the full weight of his body against her. At first she was stunned, but Amora's body reacted instantly to his touch, her lips parting to take him in. She could feel his length pressing needily against her belly, her hands involuntarily making their way to his shoulders to draw him closer to her. His scent was intoxicating, and she moved to pull him even closer to her. The King gripped one of her breasts with greed, causing a moan to escape from her into his mouth. \n\nHe broke their kiss, leaving Amora panting and disappointed. Quickly, it dawned on her: she had just kissed the most powerful man in the known world. It had been her first and was like nothing she could have ever imagined. It was wild and raw, left her wanting. Her fingers instinctually brushed against her lips, the memory of his tongue against hers still fresh and lingering. As he stood back, she covered herself in sudden discomfiture. William looked at her carefully, catching his own breath. \n\n\"Do you understand why?\" Amora looked down and nodded in shame. William, however, was not convinced. \n\n\"Say it,\" he commanded. Mortified, Amora closed her eyes. Why did he insist on chastising her like a child? \n\n\"Because I tried to escape.\" \n\nWilliam leaned in closer to her, his hands resting on either side of her against the table. His nearness quickly filling her senses with heat. Once more, she forgot how to breathe. \n\n\"No,\" he urged quietly, his breath low and heavy. He leaned his forehead into hers looking down at her breasts. \"Think. Tell me why.\" \n\nConfused, she closed her eyes and tried to calm her racing heart. Was that not why he was upset? Because she'd attempted to leave, once again? A dull pain reminded her of the earlier events of the day. \n\n\"Because I stole the sword?\" She was unsure and so waited for him to confirm. He bent down, once more hiking the skirt of her dress upwards. She steadied herself by placing her hands on his shoulders. Her breathing slowed as she felt his fingers trace his way up her legs and then her thighs. \n\nOnce more, William shook his head. \n\n\"No pet, think.\" He whispered roughly, his fingers now gripping her waist as he used his hips to part her legs. Feeling him press against her, she moaned at the need she felt. \n\nHow shameful, she berated herself, I am like a bitch in heat. \n\nShe could feel the heat radiating from between her legs, she prayed to the gods that he could not feel her wetness beneath the fabric of his own trousers. His thick shaft strained against her, urging to be free. \n\nHazy from overstimulation, Amora fought to make her mind work to answer him. \n\n\"I don't...I don't know,\" she gasped. \n\n\"Think! I will grant you one more try.\" His response was needy, demanding. As if her answer would determine what would happen next. Pressure mounting, she fought to come up with the right answer. His teeth grazed over her neck and all she wanted in that moment was to feel his lips upon hers again. \n\n\"Because...because I was injured?\" she tried desperately, hoping it was the right answer. The King kissed her neckline and broke away from her. Her answer was clearly not the right one as the disappointment on his face was evident. Hurt that they didn't finish...whatever it was they had been doing, she found herself once more overcome with shame. The King stepped back and pointed to the chair in front of one of the silver platters. \n\n\"Sit.\" He sighed, pinching his temples in annoyance. She had clearly upset him, in more ways than one. Self-conscious, she quickly pulled down her skirt and went to sit down. A small cry escaped her as she felt the sting of pain from her bottom. As the King sat down in front of her, he slid the other tray in front of him and watched as she writhed in an attempt to find a comfortable position in which to sit. \n\n\"Let this serve as a lesson,\" he said flatly as he began to eat, \"I did not punish you specifically because of your attempt at escape, nor because you got yourself hurt. I punished you because you defied me.\" \n\nThough the spanking was nowhere near as bad as a lashing, it did not make her bottom, nor her pride, hurt any less. Unable to look him in the eye, Amora looked down at her hands in her lap. \n\n\"One thing you will come to learn is that I do not tolerate disobedience. The next time you defy me, I will have you flogged and thrown into a dungeon with the others. Do you understand?\" \n\nShe nodded and looked at him, hoping he would see her compunction. His eyes demanded something more and Amora remembered to vocalize herself. \n\n\"Yes, your grace.\" He nodded, his hardened look softening. \n\n\"Good. You may eat.\" \n\nWincing at her aching bottom, Amora shifted to one side and joined the King in feast. They ate silently for a time, her pain slowing fading away as she reveled the delectableness of the meal. Without looking at her, William spoke. \n\n\"As for Kenneth, you are wrong.\" \n\nAmora peered up from her meal. The King did not even glance in her direction as he continued, \n\n\"I have no intention of using him against you. In fact, my reasons for keeping him are purely self-motivated.\" \n\nAmora suddenly felt sick. What reason would he have interest in Kenneth? \n\n\"Why? He is child of a dead servant, nothing more.\" \n\n\"Quite the contrary. He is the bastard of a dead king, and I plan to adopt him as my own.\" \n\n****** \n\nAmora could not focus on her history lesson. Restor Rian had long given up on her for the day and left her with an assignment to research the history of Nightwall. She sat contemplating the revelation of the King a few nights before. \n\nKen was the son of the late King Geric. Now that she knew, the resemblance was obvious. How could she have not known? His chestnut locks mimicked the former King's brown wavy hair. Even the boy's rosy cheeks sat high like Geric's once did. It was plain to see, Ken was Geric's son. \n\nWhat really surprised her was that Fiori had been the King's mistress. Although a shock, it made sense. Fiori was headmaiden to Queen Maria, therefore was privy to having the most interaction with both monarchs. She just couldn't fathom Fiori having anything that would have interested King Geric. \n\nNot that she hadn't been attractive, Fiori was just... mean. She'd been cold not just in her demeanor towards Amora, but everyone else. Even with Ken, her own son, she had not been as tender with him as she recalled her own mother had been with her. The thought of her mother brought a wave of sadness over Amora. Intent on not letting it overcome her, she cast the thoughts aside. \n\nThe King was planning on adopting Ken as his to solidify his hold over the Relanese province. It pained Amora to think about. Ever since learning he was alive, she foolishly believed that she would be the one to raise him. Now he would have grand scholars and tutors and the like to educate him. He would want for nothing. He would be a prince, or at least a lord. Amora contemplated if she was jealous, but after brief reflection, she determined she was not. She simply wished that she would have been able to have a more direct role in his rearing. \n\nThe King informed her that as long she behaved, she would be allowed regular visits with Ken while he stayed at the castle. Should she earn the privilege, he would even allow her to visit him at Braewood. While grateful for the offer, she still felt like the King was giving her an ultimatum. \n\nIt was a lot to process, her thoughts becoming no less clear throughout the course of the week. Three days passed and she found herself unable to concentrate on her daily chores and tasks. The King had not sent for her since the night of her latest escape, only seeing him twice in passing. Once again, she found herself conflicted with both disappointment and relief. \n\nThe castle was unusually busy today, people moving in and out with energetic fervor. Even Levan seemed to have no time to annoy her, oddly disappearing altogether. All the servants, including Amora, had been assigned extra chores. It was the start of the day and the vendors had come to sell their goods. Amora went with them, escorted by a knight, to the front courtyard where the vendors did their business with the castle. It was the first time Amora had been allowed outside and though it was just at the castle doors, she was grateful. \n\nNot familiar with the Jodellian way, Amora watched curiously as the servants inspected goods from the vendors' carts. Each had been given money by the headservant to make purchases for the castle. Well, everyone except Amora. Her escort, a brawny knight whose name she could not remember, stood a few feet behind her as she wandered over to the gardens. No doubt making sure that she didn't get far, should she decide to run. After her last attempt, she had no desire to repeat those events. Besides, there were way too many guards stationed at the front. She wouldn't have made it ten feet. \n\nShe noticed two women dressed in slightly tattered clothing walking among the wildflower beds several feet away. They wore grey hoods and their faces were covered by large bundled scarves. They were also watching the vendors with interest. Amora looked around, no one seemed to think that their presence was out of place. One of them laid eyes on her and offered a kind nod. Hesitant, Amora returned it, noting the striking gleam in the woman's eyes. Out of nowhere, two soldiers appeared behind the two women. One of them spoke to the women and pointed at the castle. Nodding, they both turned to walk inside. Amora watched as they made their way up the steps and into Nightwall. \n\nMore captives, she thought sadly. Prisoners of war, like she was. She wondered where they had come from and if their homeland had been invaded by the Emperor as hers was. Conflicted, she abruptly recalled the Emperor's touch on her skin, the feel of his lips as he had claimed her mouth. Her body quivered and for a moment and Amora almost forgot where she was. Feeling silly, she sauntered off to join the other servants with their chores. \n\n****** \n\nOxmere, Ularia \n\nAnthony was extremely pleased. Everything was going according to his plan. Re-reading the stack of papers that was handed to him the night before, he could barely contain his excitement. Setting them back down on the table, he looked to his best spy once more. \n\n\"Are you absolutely sure?\" he demanded of the young man. \"You must be certain. I want no mistake.\" \n\n\"Without a doubt, your majesty. I spent the better part of three years making sure there was no mistake.\" \n\nAnthony giggled with maniacal delight. Everything would fall into place now. He turned to face the old man lying on the bed behind him. \n\n\"Do you hear that, Father? It would seem I was right. Just as I was with Nemis.\" Henri's ragged breathing could be heard from anywhere within the large room, but he said nothing. He was unable to. He simply stared angrily and wide-eyed at his son, just as he'd done to anyone who had spoken to him for the last four months. Knowing his father couldn't respond, Anthony continued, \n\n\"Nemis...Nemis was a test. I issued him a challenge and he accepted. It cost me a hundred men but do you know what this means, Father?\" Not waiting for a reply, Anthony answered his own question. \"It means he considers me a worthy advisory. Not just you.\" \n\nThe King of Ularia's eyes moved heatedly from side to side, seething with fury. This pleased Anthony and he continued his gloating. \n\n\"Not you, not Azer, but me. I am his greatest opponent now. And do you know what this is?\" Anthony held up a piece of paper and shoved it in the paralytic King's face, pointing fervently. \n\n\"This is an invitation to the Holly Harvest. It is addressed to me, directly, by name. Only his most formidable opponents are invited to attend. Have you ever received one, Father?\" \n\nThe King of Ularia had obviously wanted to say something but it only came out as a sad bleat of noise. Anthony snickered, unable to contain his pleasure seeing his father in such a compromising position. \n\n\"I didn't think so,\" he sneered nastily, \"This is an outstanding achievement, wouldn't you say?\" Anthony turned to his spy, expectant of a response. The young man nodded in agreement. \n\n\"Yes, your grace. It seems your plan has worked.\" \n\n\"Of course it has, there's no reason for it not to.\" Turning away from them both, Anthony started talking to himself excitedly. \n\n\"This is another opportunity. I must figure out what to do next.\" \n\n\"Perhaps,\" the man offered suggestively, \"you would allow me to attend as well, your grace? I am familiar with Nightwall due in part to my previous reconnaissance. It would be helpful for me to find out more about the inner workings of the castle. The Harvest is would make an excellent distraction.\" \n\n\"Oh yes! Brilliant. You shall come along, then.\" Anthony was brooding now, \"Yes, yes. It all makes sense. I will able to challenge him in person, as well. I can't wait to see the look on his face!\" \n\nIf Henri could scowl, he would have been doing so at this very moment. Anthony grinned at his father, his aura oozing with accomplishment. \n\n\"Make the preparations,\" he commanded of his spy, who nodded in obedience. \"I want everything in place before we depart. We only have three weeks.\" \n\nThe young man bowed and took his leave. Anthony sat back down beside his father's bed. Caressing Henri's head and rereading the parchment paper once more. \n\n\"Don't you see, Father? In time, I am going to be the ruler of the greatest empire in the world.\" \n\n-- \n\nA wooden shack, somewhere deep in the wilderness just north of Calter \n\nFour nights had passed and the young man finally reached his destination. He knocked on the door with a calculated series of raps and waited \n\n\"It's late.\" Called a gruff voice from the other side. \n\n\"Early enough for the moon to rise, late enough for the sun to set,\" recited the young man impassively. As he expected, the door opened slowly and the young man entered the shack. \n\nIt was dark, except for the light of a single candle burning on the other side of the room. It kept the shack cold and the occupants of the shack concealed. \n\n\"Well?\" rumbled a deep voice from the large shadowy figure seated before him. The man who answered the door stood fast in his position at the front of the shack. \n\n\"He is accepting the invitation, as expected. He has also heeded my suggestion that he take me with him.\" \n\n\"Excellent,\" growled the seated figure. \n\n\"You will make sure to keep suggesting things to him, in accordance to our plan.\" ",
        "\"Of course, your grace,\" the young man nodded respectfully. Under the assumption there was nothing more, he bowed and turned to leave. \n\n\"And Talen,\" the resonant voice called, stopping him in his tracks, \"when you go, you will make sure to make your presence known to the girl.\" Unfazed, the young man nodded, already aware that this was a part of the objective. Dipping into another low bow, he opened the door, revealing the cold night's air, and took his leave. \n\n***** \n\nThe sounds of the servants' chatter could be heard from the balcony of the dining room. The young ladies watched as the soldiers below were discussing security matters with the King, who was seated at the head table. \n\nAs they sheared their corn, Amora turned her attention back to the group, asking no one in particular, \n\n\"What is Holly's Harvest?\" \n\nShe heard Vareena scoff and ignored her rolling her eyes at Amora's query. Some of the other girls ignored her and continued with their separate conversations. The rest looked at each other quizzically, as if expecting another to answer. Finally Cecily, the elder of the young women, answered her. \n\n\"It's the changing of the seasons. A festival held to celebrate the goddess of agriculture's, Holly, descent to bless the lands with fertile crops. It is strictly a Jodellian holiday.\" \n\nAmora nodded. Holly was a lesser goddess, not one of the main twelve, it would have made sense that many other nations didn't celebrate this holiday. Cecily lowered her voice and continued in her explanation. \n\n\"Each harvest, the King of Jodell invites monarchs from all over the continent, even the ones he's currently at war with.\" \n\n\"Why would he do that?\" Amora questioned quietly, to her it did not make much sense. Cecily leaned back and shrugged, ripping the husk off another ear of corn. \n\n\"Not many people know. His advisors do, I'd bet. Or His Confidence. I suspect it's for mental warfare.\" \n\n\"Mental warfare?\" Isabel piqued. Cecily looked at her and nodded. \n\n\"Yes. I think he invites his enemies to show them that no matter how close they think they are, they will never be able to defeat him.\" \n\nThey were all quiet for a moment, all of them looking down at the King who was speaking to a group of knights quietly. \n\n\"Of course,\" Cecily chirped with a bit more enthusiasm, \"it's not just his enemies that are invited. His allies as well as many noble families all over the country. It's a grand occasion.\" Amora nodded as she cleared an ear of corn and tossed it into the basket. \n\nAbruptly, a side door to the dining hall opened and a group of soldiers entered, followed by two women. One was dressed in a lavishly dark violet gown embroidered in gold. She was beautiful, with her light brown hair bouncing playfully against her back and shoulders. Another woman, a bit older and clearly her attendant, followed two steps behind her, hands clasped behind her back. \n\nThere was something familiar about the beautiful woman, that somehow made Amora uneasy. The group stopped a few feet from the King, who was still in deep conversation with the knights. The young woman looked up at the balcony full of servant girls and smiled kindly and all the women sitting above. Her eyes met with Amora's and a vivid memory flashed into Amora's mind as she recalled the two women from the day before. It was the same woman who had nodded to her from outside the castle. \n\n\"Who is that?\" gasped Amora quietly, unable to mask her interest. \n\nSensing an opportunity, it was Vareena this time that answered. \n\n\"You don't know?\" she sneered cattily, giving Amora a fake smile. \n\nIgnoring it, Amora shook her head and waited for an explanation. Vareena's smile grew wider as she watched the progression of expressions on Amora's face. \n\n\"That is Penelope. Second Princess of Rhaska and betrothed of the King. She is to be our new Queen.\" \n\n******************** \n\nThank you to all who have supported this series and have been patient with me. Please let me know if you like this chapter! I already have 4 in the works, so do not worry. I will not give up on the story, no matter how long it takes! \n\nI am thinking this will either be an eight or ten-part series, depending on how much of the story I decide to put into each chapter. I already have the ending mapped out (tear) but I promise, I will try my best to make it exciting. I am having a lot of fun writing this, so again, thank you so much for the love, patience, and support! \n\n\u2014I.D."
    ],
    "authorname": "IllicitlyDesired",
    "tags": [
        "spanking",
        "medieval",
        "historical",
        "fantasy",
        "political intrigue",
        "noncon",
        "abduction",
        "reluctance",
        "powerplay",
        "punishment"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/her-stolen-grace-ch-03"
}