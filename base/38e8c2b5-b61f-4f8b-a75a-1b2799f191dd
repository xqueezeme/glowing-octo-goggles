{
    "title": "For the Whored: Stormwind Ch. 04",
    "pages": [
        "Once back in the house, returned to her work redesigning the house. With some consideration, she did two separate sets of drawings. \n\nThe next day, she went up to the Keep, saluting guards along the way. \n\n\"Hello, Elunara. What brings you up my way?\"\n\n\"I finally finished the plans for either redoing my house, or rebuilding it altogether. Since I never bothered with such silliness when I lived here before, I wasn't certain how to go about getting it done.\" \n\n\"Well, let me see.\"\n\nShe shrugged and handed the papers over.\n\nHis eyebrows shot up as he flipped through. \"This much?\"\n\n\"Well, I took previous designs of my house on Draenor, and took what worked or didn't work, what got used and what didn't, and modified from there. I gave Tulani space for her studio, and changing rooms; added a couple of extra rooms for my purposes, room for the cats, bigger space for the boys, etc. etc.\"\n\nHe blinked. \"Well then. It's probably best that you brought it to me, because this kind of renovation in city requires my approval anyway.\" He frowned. \"This will take a lot of man hours.\"\n\nShe snorted. \"Let me snag a few of my guys, we used to get this sort of work done in a day, back on Draenor, we got kind of pro at it.\"\n\nHe shrugged. \"How ever you wish to accomplish it.\" He stamped the pages and handed them back to her.\n\nShe kissed him on the cheek. \"Thanks, doll.\"\n\nHe shook his head and rolled his eyes, as she bounced out of the room. \n\nIt took longer than expected, but she was thrilled with the results. Once the house was put together, they made it cozy as their own.\n\n\"I have to ask...\" Jordan hazarded. \"Did you do pictures again?\"\n\nShe grinned. \"It's me... of course I did. This time I hid some of them in different places.\" She took his hand and led him to his room. \"I also made the view hole a little bigger, and in a more comfortable place.\" \n\nHe sat down and peered into the little hole. \"Nice.\"\n\nShe went downstairs. \"Tulani, I expanded your studio, and added some dressing rooms. I also tried to incorporate the shelves you asked me for.\"\n\n\"Oh, it's lovely.\"\n\n\"For the boys, I added a third level to their rooms, and gave them more space, as well as plenty of view from each level.\"\n\n\"Coool!\"\n\n\"And I had a special room for the two cats to stay in, so they don't have to be in your room.\"\n\n\"Aw, but we liked them.\" Darguni frowned.\n\n\"That's why there's a door between the rooms. This is just more for when we lock them in when company is over.\"\n\n\"Oh. That's ok then.\"\n\n\"Now, if any of your friends want to stay over, there's plenty of room for lots of them.\" Elunara put her hands on her hips. \"Speaking of which, those cats have been acting strange lately.\" \n\n\"How so, Momma?\" Bradly cocked his head to the side. \n\n\"They keep disappearing on me. Go put your things away, I'm going to try and find them.\"\n\nShe tracked them down to the orchard behind the house. Finally spotting their colors, she wound her way through to a secluded area, and found Savage draped across Yoona, licking her ear. As he continued to groom the other cat, Elunara put her hands on her hips. \"What in the world are yo... oh, shit.\" Stepping back, she turned and headed home. \n\n\"Hey, the boys said you were going to find the cats.\" Jordan frowned. \n\n\"I did.\" She sighed.\n\n\"What's the matter?\"\n\n\"Expect kittens.\" \n\n\"Expect...?\" His eyes went wide as realization dawned on him. \"Oh! Oh, damn.\"\n\n\"I guess it was kind of inevitable.\"\n\n\"In this house?\" Jordan grinned. \n\n\"They're going to have some fascinating colors.\" She murmured. \"Since I have no experience in dealing with cubs, I'll have to send to my mother for an expert.\"\n\nJordan sighed. \"Let's hope they're not half as destructive as Yoona was.\"\n\nShe was sitting on the platform above the training yard, when Savage made his appearance. He came up to her and flopped down on his side. She scratched his belly. \"Well, someone looks satisfied with their selves.\" \n\nGrogek looked up. \"Where has he been?\"\n\n\"Stuffing it in Yoona.\"\n\nHis eyebrows shot up. \"Really now?\"\n\n\"Oh, yeah. I've sent a letter to my mother; hopefully she can send me someone with experience in these things.\"\n\nShortly after, Yoona hopped up on the platform and cuddled up to Savage, who began to lick her ear.\n\n\"Ugh, I may be nauseous.\" Elunara sighed. \n\nThe following day, she hummed to herself as she put her books on the shelves in the library. Hearing the knock on the door, she sat them to the side and went out. She blinked at Lucy. Lucy was standing there on the porch, fidgeting, a pack slung on her shoulder. \n\n\"Can I stay with you?\" Her voice was near a whisper. \"I... I didn't like being there without you. I haven't spoken to my dad yet, and I don't really have any where else to go.\"\n\nElunara stepped back. \"Yeah, sure. Just observe my rules and such.\"\n\nLucy stepped in and dropped her bag to the floor. \"I'm sorry. I tried a million ways to talk myself out of coming back, out of bothering you...\"\n\nElunara sighed. \"Oh, Lucy, you've got to learn to listen to your heart. If you're always going against what you feel, you'll never be happy. It's just like joining the army all over again. You never wanted that, it was your father's decision for you, and look how awful that was. Following your heart with the leather working was the only thing that made you truly happy. Own what you feel, no one else can feel for you.\"\n\nTears streamed down Lucy's face. \"I followed my heart with Terica, and look where it got me.\"\n\n\"Lucy, don't do this to your\u2013\" Elunara blinked at the sheet of paper in her face. Taking it, she read the words and then stared at Lucy. \n\n\"That guy that attacked her... was a set up. She was trying to set me up.\"\n\n\"But... why?\" Elunara stared at the letter.\n\n\"I don't know.\" Lucy bit her lip. \"I wondered for a brief moment, if it wasn't because I refused to be... out. But if she never loved me, never wanted me... Then why? It was stuck in my things. I only found it yesterday, and I just KNEW that it was my sign to get the hell out of Draenor.\"\n\n\"There's a lot still hanging about that bitch.\" Elunara sighed.\n\n\"Huh?\"\n\n\"Dak's mother has never heard of her.\"\n\n\"What does any of this mean?\" Lucy whispered.\n\n\"It means that you can't guess crazy.\" Elunara refolded the letter. \"Can I have this?\"\n\n\"I don't freaking want it.\" She muttered.\n\nElunara put a hand on Lucy's back. \"Come on, little lily, let's get you set up in your room, and then I'll drag you over to the leather shop and let you get acquainted.\" She brushed her hand down Lucy's hair. \"You can deal with your father when you're more up to it.\" \n\nLucy sniffled. \"You're always taking care of me, when all I wanted was someone to take care of.\"\n\n\"It just happens sometimes. Once we have you back on your feet, you can figure the rest out.\"\n\nLater, Elunara passed the letter to Mathias. \"I recognize the code in it; I just don't recognize the author.\"\n\nMathias frowned. \"I do. One of our agents headed out to Draenor, and never returned. We figured the worst.\"\n\n\"Uh, well, I killed him. Mostly. I had no idea he was one of ours.\"\n\nHe tapped his fingers on the table. \"You say he attacked a woman?\"\n\n\"He was in the process of sexually harassing her when her girlfriend tried to interfere. She got a broken jaw for the trouble, and I beat the hell out of him and left him unconscious in the street. Someone had to have cleaned up behind me, dumping him over the barrier. He got eaten by the local wildlife.\"\n\n\"I just can't imagine he had done that...\"\n\nShe held out another sheet of paper. \"This is my rendition.\"\n\n\"That's him. What game was he playing?\" Mathias continued to glare at the two sheets of paper.\n\n\"And the name Terica means nothing to you?\"\n\nMathias shook his head. \"Do you have a picture of her?\"\n\nElunara went blank. \"I...\" She dug through her board. \"Wait, here it is.\"\n\n\"Are you alright?\"\n\nShe shook her head. \"Still a little brain fried from my obnoxious followers. They pump out energy at me like a bitch in heat. It's becoming a pain in the ass just to walk down the street.\" She passed over the sheet of paper. \"I really need to develop a method to block out all of their love and admiration, and did I just fucking say that?\" She put a hand to her head.\n\nMathias laughed. \"While I should be concerned with one of my best agents being flustered, I'm quite enjoying seeing you as more than just a hardass.\"\n\n\"You've seen me flirt, sir.\"\n\n\"Yeah, and underneath that, there's always been this nasty edge, like a predator to prey.\" He frowned down at the paper. \"It's easy enough to resist the temptations of a viper.\" He muttered. He turned the paper in several directions. \"There's something vaguely familiar about that face. I can't figure it out.\"\n\n\"Well, you can keep it, sir. I've got copies.\" She sighed. \"Back into the fray, I guess.\"\n\n\"I'll let you know what I've figured out. You might want to try the roof tops, that was always your favorite way to travel.\"\n\nShe grinned. \"Good idea, sir.\"\n\nSince it was nearby, she swung into the leather worker's shop. She found Lucy working beside the others. \"How's it going, Lucers?\"\n\n\"She's got a real gift. I wish you'd brought her ages ago!\" Coffee snorted.\n\n\"I didn't know her ages ago. She's all yours now.\" Elunara winked. \n\n\"I've got your order ready.\" He gestured to the box. \n\n\"Thanks coffs.\" \n\n\"I heard you married a tailor.\"\n\n\"That I did.\"\n\nHe snorted. \"Well, no accounting for taste, but at least they won't take any business from me.\"\n\n\"I don't know; her designs are completely fabulous.\"\n\n\"Wait, you married a chick? I wouldn't have pegged you for the type.\"\n\n\"Honeybunch, I don't have a \"type\". If I enjoy it, it's mine.\" She ran her finger under his chin. \"Too bad you're ridiculously married. Or I might have tried a bite.\"\n\n\"She also has two husbands.\" Lucy murmured, focusing on her design.\n\nCoffee's eyebrows shot up. \"You what?\"\n\n\"I have two husbands, one wife, two kids and two giant cats. It's getting a mite crowded in my house these days.\" Elunara snorted. \n\n\"And a slew of worshippers.\" Lucy sighed. \"I happen to be one of them.\"\n\nElunara sighed and brushed Lucy's hair out of her face. \"That's all well and good, dear, but you should be carving your own path, not relying on me.\"\n\n\"I'm trying not to.\"\n\nElunara twirled a lock of hair. \"You do what makes you happy, and I will help you do it. But stop hiding behind me, sugar love.\" She hefted the box. \"I'll see you all later.\" \n\nStepping out, she barely missed plowing into Gerald. \"Oh, hey, here to renew your commission?\" \n\n\"Yeah.\" He had his hands behind his head. \"Won't be as fun without you, but it's good work.\"\n\n\"How's Chrissy?\"\n\n\"As tight as ever.\" He winked.\n\nElunara snorted. \"Don't give me that shit; you love her like a maniac.\"\n\n\"Gods, do I ever? The fuck did you do to me, Nara?\"\n\n\"Ugh, stop calling me that. Also, I told you, I choose well. Never doubt me.\"\n\n\"A gentleman would offer to carry the lady's box.\"\n\nElunara snorted. \n\nGerald sighed. \"Elunara is stronger than I am. She could probably chuck me over her shoulder and still carry the box without effort.\"\n\n\"That is NOT the point.\" He sniffed.\n\n\"Elunara, meet Carlos. He's one of the newer SI agents.\"\n\n\"New enough to not recognize me then.\"\n\n\"Yeap.\"\n\nShe put the box on one hand and held it over her shoulder. With a smile, she held out a hand. \"Name's Elunara, former SI:7 agent, codename \"The Whore\". Nice to meet you.\"\n\n\"Y\u2013\" He just blinked at her and stared at her hand. \"You're HER?\"\n\nShe put her hand on her hip. \"In the flesh.\"\n\n\"They... they teach your methods... your mindset... We have to STUDY you!\"\n\nShe raised an eyebrow. \"Do they now? Maybe I should take Mathias' offer of a teaching job. Make sure they do me right.\" \n\nGerald snorted. \"You know how to make anyone... do you right.\"\n\n\"Sugar, I'm a pro.\"\n\n\"I think Mathias is out of his marbles if he wants YOU to teach, you'd only make them your slaves.\"\n\n\"Pfft, I've got enough slaves, thank you very much.\"\n\n\"Well, it's not like you TRY at it.\"\n\n\"Yeah, and you make such a loyal subject.\"\n\n\"Are you kidding me? For giving me Chrissy, I'd probably lick your shoes if you asked.\"\n\n\"Oh, first it was your sister, and now you have a foot fetish?\"\n\nHe flushed. \"Gods, your brain kills me.\"\n\nShe laughed. \"Oh, I know you only said that because Grogek and Jordan were staring at you.\"\n\n\"Only you can unsettle me.\" He grumped. \n\n\"I think we broke your friend.\"\n\nGerald snorted. \"He's not MY friend. I only met him like, ten minutes ago. \n\n\"Did you really fuck five thousand men?\" Carlos blurted out.\n\nThey both just blinked at him, and several people nearby openly stared. \n\n\"Well, that depends, five thousand unique individuals? Or sex five thousand times, some with the same men on repeated occasions? Because I'm not sure to the first, and more than yes to the second. Thirty to forty years of fucking, kind of totals up to a lot.\" She shrugged. \"In any event, I have shit to get to.\" She shrugged and dropped the box down, taking it with her other hand, before walking away. \n\nGerald snorted at Carlos. \"You're entirely too green.\" He left the man standing there in shock. \n\nElunara tossed the box on the bed and started putting away her clothes. \n\nBradly crashed through the door. \"Momma, Lydia!\"\n\nShe scooped him up and ran. Elunara deposited Bradly by the door and followed the sound of coughing. Reaching the little girl, she put her hands on her and began to focus. \n\n\"Trees.\" She murmured. \"I need to get her to trees! Linda, does the Darnassus boat still come to Stormwind?\"\n\n\"Yes, but...\"\n\n\"I'm sorry, I'm taking her.\" Elunara wrapped Lydia in her blanket, scooped her up, and started running. She jumped most of the way down the ramps to the docks, and stood waiting for the next boat out. \"Come on, my girl, just breath for me. Nice and slow. We'll get you to the oxygen rich trees of Darnassus. They'll help you heal.\"\n\n\"Hurts...\"\n\n\"I know it does.\" \n\nDarguni and Bradly made it to the end of the dock. \"Momma!\" Darguni gasped. \n\n\"Can we come?\" Bradly asked.\n\n\"Yes, that's fine. I just need to get Lydia there.\"\n\n\"What happened to her?\" \n\n\"Her lungs just can't keep up. I need to take her to Darnassus so the special trees there can help her.\"\n\nLydia gasped and shuddered, as Elunara tried to give her energy. \"It's a good thing people have been pumping me full lately.\" She muttered.\n\nLinda made it to the dock, just as the boat pulled in. \"What's going on?\" She huffed. \n\nElunara grabbed her by the arm and pumped a shot of energy into her body. \"I have to take Lydia to the trees of Darnassus, the oxygen rich plants will help her breathe.\" Elunara stepped on to the boat. \"She'll be safe with me.\"\n\nLinda nodded, struggling past the tears. \"I know she will.\" She whispered. \n\nBradly and Darguni put their hands on Lydia. \"We'll keep her safe, too.\" Bradly nodded.\n\n\"We'll give momma energy to do it, too.\" Darguni nodded. \n\nLinda held a hand to her mouth, as she watched the boat take her baby away. She found her way to the training yard, and stood there, completely lost. \n\n\"Linda, is something wrong?\" Jordan peered at her. \n\n\"I need... I need Thomas.\" \n\n\"Yeah, sure. Let me get him.\" \n\nThomas rushed over. \"Linda, what's wrong?\"\n\n\"Lydia got bad again. Elunara's taken her to Darnassus.\"\n\nJordan laid a hand on Thomas' shoulder. \"There's no better place for her.\"\n\n\"Oh, she took the boys.\" Linda gave a shuddering breath.\n\nThomas wrapped his arms around her. \"It's ok, Elunara has her.\"\n\nLinda cried on him. \n\nOn the boat, Lydia struggled to breathe as Elunara concentrated on her. \"Come on, we're almost there, sweetheart. I got you.\" \n\n\"Momma.\" She whimpered.\n\n\"Your momma had to stay behind. I can see the shore. When we get there, you'll breathe easier.\" \n\nBradly rubbed Lydia's hair and Darguni rubbed her leg. \"Momma will save you.\" Bradly whispered.\n\nThe boat docked, and she was off like a flash. She didn't bother to acknowledge the guards as she ran into the magical portal. \n\n\"Elunara?\"\n\n\"I need my mother, NOW!\"\n\n\"She's in the templ-\"\n\nElunara took off running towards the Temple, clutching the gasping child, leaving her own to follow behind. \"MOTHER!\" She screamed, as she finally came to a stop by the fountain.\n\nTyrande rushed down. \"Elunara? What's the matter?\"\n\n\"This girl. Please, help her.\" \n\n\"Lay her down, let me see her.\"\n\nBradly and Darguni ran in and collapsed on the fountain steps. \n\n\"What happened to her?\"\n\n\"She got some kind of spore infection from Draenor. It ate her lungs, but I tried to purge the infestation and heal her. I thought I did a reasonable job, but then she stopped being able to breathe on her own. I thought the trees here might help her.\" Elunara shook her head. \"I've essentially been breathing for her.\"\n\n\"You never cease to amaze me.\" Tyrande murmured. \"I don't think you were able to purge all of the spores. They're still eating at her.\"\n\n\"Then I'll try again.\"\n\n\"Wait, let me look at her.\" Malfurion stooped down and put his hands on the child. \"Yes, I can see them.\"\n\n\"Can you help me trace them?\" Elunara put a hand on Malfurion's arm. \"If you can guide me, I can destroy them.\" \n\n\"We will work together.\" \n\n\"I will keep her stable.\" Tyrande nodded. \n\nElunara closed her eyes and focused on following Malfurion's trails and attacking each end point with a vengeance. Over and over, she attacked those little points, finishing it off, before moving on to the next. When at last she could find no more tracers, she began channeling her healing ability, focusing on regenerating damaged tissue.\n\nThose around her stared in awe at the golden glow that surrounded her and the fluttering wings that sprang from her back. The boys clung to their mother, concentrating on giving her their love and adoration. The little girl went from gasping breaths, to slow and steady rhythm as Elunara breathed for her and repaired the girl's damaged body. The light surrounded her in a brilliant comforting blanket. Soon, Lydia breathed easy and settled into a calm rest. \n\n\"It's a miracle.\" Malfurion breathed.\n\n\"It's the will of the Goddess.\" Tyrande whispered.\n\nThe light dissipated as Elunara let go of the spell. She put her hands back on the girl and searched through her body. \"I think we got it this time.\"\n\n\"What is she?\" Malfurion whispered. \n\n\"My daughter.\" Tyrande smiled."
    ],
    "authorname": "Thatawfulwowporno",
    "tags": [
        "world of warcraft",
        "non erotic"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/for-the-whored-stormwind-ch-04"
}