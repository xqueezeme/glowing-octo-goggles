{
    "title": "Five Whores for Denver",
    "pages": [
        "Randi wants adventure and a few of you have been bugging me for a western. So, here's two figurative birds with one metaphorical stone. Thanks, as usual, for including me old friend, and I hope all of you enjoy. DT\n\nPROLOGUE\n\nWe were making love in our first-class cabin when we felt the faintest \"bump.\" She whispered, \"Nearly there!!\" I immediately returned to the task at hand. Then, there was a rap on the cabin door and a voice said, \"All passengers are to report to the boat deck. It's the captain's orders.\" \n\nSince my wife and I were wearing nothing but frustrated frowns, I partially opened the door and said, \"It's the middle of the night. Why the devil does the captain want us on the boat deck?\" The steward was standing in the passageway holding a pair of those godawful canvas and cork life belts. He said impassively, \"I will help you put these on if you like.\" \n\nExasperated, I snatched the belts, slammed the door and turned on the light. She'd wrapped a gown around her beautiful body and was sitting on the edge of the bed. She said puzzled, \"What's happening?\" \n\nI said, \"I don't know. We're supposed to go up to the boat deck. I can't imagine that they'd hold a lifeboat drill at this ungodly hour but that's what it seems like.\" \n\n*****\n\nIN THE BEGINNING\n\nThe sea birds were soaring overhead, as we rounded Clarks point, out of Buzzards Bay. It was a dazzling early summer day, bright blue sky, a few white puffy clouds. The trees were vividly green. The waves breaking on the rocky beach added a foamy touch of contrast. \n\nThe wind was fair abeam as we felt our way in on the staysail and jib. The Ansel Gibbs had been hunting sperm whales in the South Atlantic and the hold was full of spermaceti. There would be a substantial pay-out and as a boatsteerer, I was in for a nice piece of that stake. Life was good. \n\nIt was rare, for a twenty-year-old kid to be a harpooner. But I'd grown up in New Bedford, where whaling was a religion, and it was in my blood from the time I was a wee lad. Like most little boys, I wanted to be just like my old man. He was captain of the Cicero, a huge fellow with fierce blue eyes and a weathered face. I never really knew him. He was away all the time. But I shared his love of adventure. \n\nHe'd given me a toy harpoon when I was young. I think somebody whittled it out of whalebone. I just had to try it. So, one morning I snuck up on the cat as it sunned itself in our window. I didn't really hurt it; just jabbed it in the butt. But my mom remembers me yelling, \"Pay out mother, she's sounding,\" as the cat screeched and shot off down the street. \n\nBy the time I was fourteen, I was blond, blue eyed and bigger than most men in my first crew. I had my Viking ancestors to thank for that. But I'd also spent every year since I'd begun to sprout hair building up my back and arm muscles. I knew that I had to be stronger than every other fellow if I wanted to pull the harpoon oar. \n\nIn my three voyages, I'd worked my way out of the focsle and into steerage, where the skilled hands slept. And I was still only twenty years old. To say the least, I was pretty full of myself. I was standing on the fantail rail, holding on to one of the spanker lines as Isaac, the steersman eased us into the dock. I threw the stern mooring line to the waiting longshoremen and they pulled us in to the pier. \n\nMr. Gibbs was already waiting for us with a money chest. Gibbs seemed abnormally happy to see us. It was like our appearance was a surprise. That was peculiar. I also wondered how Gibbs already had the money. \n\nOf course, New Bedford was a hotbed of the factoring business. Basically, a speculator bets a certain amount of cash that the value of the haul will be greater than the amount that he paid the owner. It was a form of insurance. That must have been why Gibbs was already flush.\n\nGibbs's half of the profit came off the top. But he still dropped almost a thousand dollars in gold in my hand. That was my share. He said, \"It's lot of money for a young man.\" It ought to be. It represented over a year of hazardous and backbreaking work. The afternoon was turning hot as I strolled down the gangplank, sea bag over my shoulder. \n\nI probably looked like an Indian. The tropic sun burns a man brown. We'd only been out a couple of years, which was nothing compared to the Pacific hunts. But it was a long time for a newlywed to be away.\n\nThe waiting crowd was sparse. That really didn't surprise me. When a whaler goes out, it's almost impossible for the home folks to stay in touch. I scanned the dock for Faith. I didn't see her. But I saw my mom and Faith's sister, Julia. I walked up to them, jaunty smile on my face and money in my pocket and said, \"Where's Faith?\" That's when I noticed the looks.\n\nMy mother wasn't one of those warm and loving moms. She was a hard woman with her husband's gravitas. She looked me over like she was gauging me. Then she took my arm and said, \"Let's go back to the house Jacob. There are a few things you need to know.\" \n\nMy old man was a whaling captain. So, we were rich. It never benefitted me in the trade. But I WAS raised in one of those mansions on County Street. There wasn't a word said as we walked up from the docks. I was thinking, \"My God!! Where's Faith??!\n\n*****\n\nI grew up with Faith Polk. She was literally the girl next door. My father captained the Cicero and her dad was the master of the Charles W. Morgan. They were friends and partners in the whaling trade. And their stately homes were side-by-side on County Street, up on the heights. \n\nMost of the time it was just Faith and me. There were boys in our neighborhood. But none of them were as adventurous as my little pal. We were maybe six years old when we started exploring the many interesting places along the Acushnet. We'd go out for the day with a basket, looking for duck eggs, and come home covered in mud. \n\nFaith was a tiny girl. But she was as fierce and daring as her dad; and that man was a legend among the Pacific whalers. I had a rowboat by the time we were ten and I'd row us around the Acushnet looking for pirate gold, hostile Indians, or any odd creature - porcupine, beaver or skunk. Fortunately, we never encountered any such thing. But the thrill was in the trying. \n\nGrowing up, our parents made sure that we learned our readin', 'ritin and 'rithmetic. They even talked about me going down to New Haven for college. But it killed both Faith and me to sit in a one room schoolhouse while there were further adventures to be had. So, more days than not we'd disappear into Clark's Cove, and not return until supper. \n\nSome radical changes happened once we hit puberty. I was ready for my first voyage by my fourteenth year, big, strong and able to do a man's work. Faith had changed too. Growing up, she had been lean and hard as a vixen. Now she was a vixen with a chest that pillowed as broad and full as the mainsail of a whaling brig. Faith's amazing tits were the talk of our social set. \n\nWe had a small collective of friends. New Bedford wasn't Boston. But Faith and I were part of what passed for society there. So, we attended our share of socials and cotillions. It was just to learn the basics of being a grownup, nothing of a sexual nature. That changed as the sap began to rise. All of a sudden, my little buddy had a following. \n\nFaith was inherently shy, and the newfound male attention embarrassed her. So, she'd cling to me even tighter. None of the other boys would mess with me. I was bigger than most of their dads. Hence, I became Faith's protector, and as time passed, her lover. \n\nIt happened after my second voyage. I was seventeen, nearly eighteen, when I went out for a right whale hunt. It was on Faith's father's ship, the Charles W. Morgan. They are the \"right\" whale because they are easy to hunt and produced a lot of oil.\n\nIt was a short voyage, only five months into the Bay of Fundy. I was a deck hand back then, living in the focsle, pulling a whaleboat oar and doing all the menial chores. I made thirty-five dollars for the entire voyage. But that was how I learned the ropes. \n\nFaith was waiting on the dock when we tied up. I assumed she was there to see her father. I marveled at how much my little friend had changed. She used to have a round snotty-nosed face with huge wide-set blue eyes and long blond pigtails. That face had lengthened into a thing of beauty, lovely high cheekbones, straight nose, pointed chin and full kissable lips. \n\nFaith was wearing a light linen dress. It was hot and she had been sweating. So, it clung to her big boobs and nubile hips in a way that nobody could miss. When we landed, she rocketed past her father and threw herself into MY arms. I grabbed her and hugged her, surprised. She said, \"Oh Jacob, I missed you so much.\" \n\nThat was in front of her dad and the rest of the men, all of whom were giving her lustful stares. I mean, we'd been at sea for almost a half year and the focsle is no place to beat off. I looked into her face and she was crying. I said, \"I love you Faith.\" I hadn't planned it. I just blurted it out. But I knew it was true the minute I said it. She said, \"I love you too,\" and we kissed. \n\nThat bought me five minutes of manly grief. But it was worth it because from that point on it never entered either of our minds that we wouldn't marry. The nuptials were finalized in Grace Episcopal on the twelfth of May in the year of our Lord eighteen hundred and fifty-seven. We were both eighteen. \n\nNew Bedford wasn't as Puritanical as the areas up around Boston. But that didn't mean we were allowed to take liberties beyond the occasional embrace. Those restrictions went over the side the minute we said, \"I do.\" \n\nOur parents were both wealthy. So, they'd set us up in a little saltbox house on Acushnet Heights. It was a pretty, three room cottage with a big stone fireplace and nice wrap-around front porch. The sea breeze was refreshing sitting out there in a rocker.\n\nOn our wedding night, I came back from my nightly visit to the outhouse, to find my new wife propped up, pillows at her back, wearing a flannel nighty. The moonlight through the window illuminated a fine brass bed. It was a wedding present from my grandparents. \n\nShe gazed timidly at me as I shucked my long johns, pulled the covers aside, and lay down next to her. I might be an apprentice boatsteerer and a wizard with the harpoon. But I was as nervous as she was. \n\nWe had been almost exclusive companions for two thirds of our life. But that was by far our most intimate moment. We'd kissed, of course. But those were mild displays of affection. We both knew that tonight's event was something entirely different and neither of us was experienced enough to even know how to take the first step. \n\nFaith was lying back, looking at me with a touch of fear in her eyes. I lowered my face to her lush lips. The spark was instantaneous. The closeness we 'd shared growing up unleashed a tidal-wave of passion. \n\nFaith moaned loudly and her mouth opened. My tongue instinctively headed for hers. We held that kiss for what seemed like hours. Just getting prepared for the act to follow. She exhaled a series of rapid breaths. It was as if she was hyperventilating. Then she sat up and frantically pulled her nighty over her head. Her body was heart-stoppingly beautiful. \n\nFaith's big boobs had been a topic of conversation for every teenage boy in New Bedford. Now, there they were!! They were even prouder and fuller than we'd all imagined, with wide pink circles on the tip and jutting nipples perfectly located in the middle. \n\nGrowing up, Faith had been a skinny little girl. Her waist and legs were still tiny. But her hips had broadened to a lushness that promised both strength and fertility and her flanks were as tight and powerful as a little filly's. I just gazed at my new wife in wonder. \n\nHer tits jiggled and jogged as she threw her nighty aside. I reached over and hefted one, awestruck by its substantial weightiness. The size of the thing emphasized the disparity between Faith the girl, and Faith the woman. \n\nI tweaked the rapidly growing nipple. That produced an unexpectedly violent reaction. The instant I squeezed it Faith uttered a loud, almost startled, cry. She might be a foot shorter and a hundred pounds lighter. But she dragged me between her legs like the crew manhandles a whale. I'd forgotten how naturally pugnacious she was.\n\nNeither of us had any experience with the other's sexual equipment. So, there was an uncertain moment as we got accustomed to the terrain. Still, the concept is age-old, and the design is so intuitive, that we rapidly discovered how things fit. It was extremely hot and slippery down there, which was baffling. But we were bathed in a scent that made me crazy. \n\nThe human animal has a few basic instincts and one of those is the act of sex. So, I just acted. Faith gave a loud gasp as I slid up into her. There was a momentary obstruction and she gave a cry of pain, clutching me. Then she made a long groan of satisfaction. The continuation up her passage was just nature taking its course. It was pure reflex. \n\nI could feel her arms around my neck and her feet braced against the bed, as she pounded back against me. I was totally out of control by that point. It was the culmination of a dozen years of intimate comradeship, and it had built itself into a tidal wave of need for this woman.\n\nFaith was panting loudly, grimacing, mouth wide open in a rictus of sensation. Then she began making rhythmic \"ahh-ahh-ahh\" noises, like a person about to sneeze. In fact, what followed was exactly like a violent sneeze. Except, it was in her nether regions. Then my new wife proceeded to buck and writhe like she was suffering intense pain. It probably would have alarmed me if my balls weren't experiencing their own violent seizure. \n\nAfter the moaning and shouting rumpus had died down, we lay there exhausted. I ultimately got enough of my sanity back to look at her sweet face. She was looking back at me with a mixture of wonderment and unease. I think she was worried that her animal behavior during our first nuptial voyage would somehow put me off. \n\nI looked her squarely in the eye and said in a voice suffused with emotion, \"We've loved each other since we were mucking around on the Acushnet. This just seals the deal. You're mine forever.\" Her face got a jubilant look as she said, \"That's all I ever wanted, my love.\"\n\n*****\n\nFor many years, I remembered the short period after our wedding as the best days of my life. Existence was a cozy haze of companionship, love and passion. But whaling was in my blood. So, I knew that I would eventually have to return to the sea. \n\nFaith didn't want me to go. She kept urging me to take a landsman position in her father's office. Her dad, Jedediah Polk, had three ships and a thriving business in whale oil. I could have made more money as a broker and that would have kept me ashore. But that was never an option. I was young and the thrill of a Nantucket sleigh ride was too much to resist. \n\nI would be away a couple of years. And so, my decision to go whaling caused some upset with my wife, which puzzled me. She'd grown up in New Bedford and she ought to know that it took to be married to a whaler. \n\nI said, \"Look Faith, your parents have been together for almost thirty years and they're happy; even though your dad has been away on three-year voyages that entire time.\" \n\nShe looked at me skeptically. So, I added, trying to comfort her, \"You'll be well taken care of, and it won't be forever. I'm saving up to buy my own brig and we'll be able to live on the proceeds from other people's work. You just have to be patient for a few more years.\" \n\nShe stared at me pleadingly and said, \"I want a husband, not a whaling skipper.\" I appreciated what she was saying. Faith had always been spirited and adventurous. But she needed intimacy, like a fish needs water. \n\nI appealed to her practical side. I said, \"We can travel together when I have my own ship. Then, we can see and do things that we always dreamed about. This is the start of a great adventure, the one we always wanted.\" \n\nShe said warily, \"When will that be?\" I said earnestly, \"No more than three more voyages, if they're successful. Maybe six, to eight years.\" \n\nFaith looked defeated, almost frightened. I should have understood. In some ways she loved me too much. That period of time must have seemed like a hopeless eternity; especially when she was so young. \n\nHunting a sixty-foot creature is a perilous undertaking. Nonetheless, we were both brought up in New Bedford and whaling voyages were as much a part of our world as eating, sleeping and going to church. So, there was no arguing about it. Faith just had to accept that I was going hunting because that's what men in whaling cultures did. \n\nThus, I signed on with the Ansel Gibbs as a boatsteerer. The offer of a boatsteerer's position was what helped me make the decision. I wanted to be a captain, just like my dad and that was a crucial leg up. I was only eighteen, which would make me by-far the youngest harpooner in the entire town and a rising star in the whaling trade. \n\nThe boys my age were pea-green jealous. I'd crewed with Jimmy Faulks on my first two voyages. He was signed-on as a hand on the Gibbs too. He was a pal when it came to shipboard routine. But he was lazy and born jaded. So, he was never going to be more than a deckhand. \n\nHe said, \"We could be out a couple of years. What are you going to do about your pretty little wife?\" I said, \"What the hell are you talking about?\" \n\nHe laughed and said, \"She's the best-looking woman in the whole town. You don't seriously think that the other boys won't come calling once you're out of the picture?\" \n\nI gave him a hard stare and said, \"It doesn't matter. Faith won't give them the time of day. She loves me. So just shut up or you'll get what I'd give any fellow who took a run at her.\" \n\nHe was right though. There were lots of slick landsmen in New Bedford, many of whom were Jimmy's and my age. I knew that any of them would give an eye tooth for a shot at Faith. But the insinuation that one of them might lead her astray made me angry. Wives waited for their husbands. It was their duty.\n\nThe hunt was in the area that lay between the Falklands and the South Sandwich Islands. We'd watered at Stanley on East Falkland, where we heard about a population in the open ocean. The Concord was in harbor when we pulled in, and they were loaded with oil from the hunt. So, based on their advice we bagged nine of the huge beasts in just a few months. \n\nThe hunts themselves were dangerous. You're in an open, thirty-foot rowboat and you need to get within twenty yards of the whale to put a harpoon into it. Then you have to fight a seventy-ton creature that doesn't particularly appreciate your trying to kill it. But we were skilled hands and we knew what it took to survive. \n\nIn fact, the only real threat was on the way out. We sailed into a hurricane while we were passing east of Hatteras. We didn't know it at the time. But the ferocity of that storm was the talk of the entire east coast. It was particularly violent, with killer winds. Many ships were lost. We would have been one of them if it wasn't for a little bit of luck.\n\nWe managed to dodge due west, leeward, and through the Inlet into Pamlico Sound. We'd have all drowned if we'd been a little farther north, off the shoals off Cape Hatteras. The wind was diminished behind the barrier islands and we were able to beat our way into Ocracoke. \n\n*****\n\nMost men would have insisted on rushing home to their bride, rather than following their mother. But the thought never crossed my mind. People did what Mother told them to do. She was a commanding presence. It was a silent trudge up the hill to County street. Mother was striding grimly along. Julia seemed to be crying. I was getting concerned. Where was Faith? ",
        "We went into the parlor. I knew right away that something auspicious was coming. The only time we used the parlor was for weddings and funerals. Mother sat me in one of her ghastly carved wood chairs, while she and Julia sat opposite, on her dreadful horsehair sofa. Julia was wringing her hands with anguish. \n\nMother began without preamble. She said, \"We had word that the Gibbs was lost in the hurricane of fifty-seven.\" I said, \"So that explains why the town was surprised to see us.\" \n\nMother looked ominous. She said voice dripping disdain, \"It was Esau Briggs who brought us the news. He said he heard it in Baltimore City.\" \n\nBriggs was one of our old social set. His dad was an oil speculator and investor. Briggs junior traveled up and down the coast, buying up options on the proceeds of voyages. I said, \"He was almost right. We weathered it out in Ocracoke. But it was a near run thing.\" \n\nThen it dawned on me. I said, \"Did the news cause much distress here?\" Mother looked even grimmer, if that was even possible. She said, \"Most of us were used to it. We've been through it before. But your bride hadn't.\" \n\nShe added even more ominously, \"The news nearly killed Faith. We told her that it was just a rumor, nothing would be certain until you didn't come back. But she just couldn't be consoled.\" \n\nMother stopped and looked at me with what almost seemed like pity. Then she continued with fury in her voice, \"Esau Briggs devoted all of his time to consoling her.\" \n\nJulia burst into tears. I was speechless. I said, \"Briggs was comforting Faith?\" Then it hit me, \"NO!! IT COULDN'T BE!!\"\n\nMother said with intense anger, \"There is no easy way for me to tell you this, son. But Faith died in childbirth two months ago. It was the disgrace that killed her.\" \n\nIt took a moment. Catastrophic, news is like that. The implications take time to percolate into your brain. Mother saw my face. She hastily added, \"Briggs is in France. You'll never find him. Everybody knew you would kill him.\" \n\nThen she got a harsh look and said, \"I don't need to tell you that this is God's judgement. So, accept it\" She added in a kindlier tone, \"Faith's buried in the Congregational cemetery if you care. We wouldn't allow her to be buried in our churchyard\"\n\nIt was like being submerged under a breaching whale. The pain was devastating. I couldn't bear it. My little Faith, the love of my life, betraying me with that snake. All light went out of the world. I was a big strapping boatsteerer. But I broke down in tears. \n\nMother was visibly disgusted by my display of weakness. That was when I understood why Julia was there. She rose, walked over, gently gathered my head to her bosom and we sobbed together. She kept repeating over-and-over, \"Faith found out that you were still alive when the Concord pulled in. All she wanted was your forgiveness.\" \n\nSuddenly, I got the claustrophobic panic that you get when you're drowning. I thrashed my way to my feet and ran panicked out of the house. Both women called out, \"Jacob!!\"\n\nThe rest of the day was a blur. My heart was dead. I remember stumbling down to Faith's grave. I had to confirm it. There was a nice headstone. Her family loved her. It was a hot, cloudless summer afternoon and I just sat on my wife's grave cursing Esau Briggs and the God who would let this happen. \n\nThen I thought about what my mother had said. I was nobody special. So, why was I involving God in the discussion? It was Briggs who owed the bill!! There was only one option. That is, if I ever wanted to be free of the burden of Faith's infidelity. I needed to find Briggs and kill him. It would be my life's purpose. \n\nHence, with murder on my mind, I went down to the waterfront, drank dark rum in a shadowy corner of a filthy sailors bar and passed out.\n\n*****\n\nI slowly opened my eyes. The gloom and smell was pervasive. I was disoriented. I had a splitting headache and my mouth tasted like the bottom of a blubber vat. I sensed that I was at sea. \n\nI was lying on a floor with a huge man standing over me. It was his boot to my ribs that had awakened me. I jumped to my knees to avoid the next kick. The room spun and I threw up what felt like a gallon of cheap rum. The guy hit me with a roundhouse right. I fell to the floor and he went back to what he had been doing earlier, which was kicking me. \n\nI was more puzzled than hurt. The last thing I remembered was my head hitting the top of the table in an anonymous whaling tavern. Then, the next thing I knew I was getting the shit beaten out of me in what was obviously a ship's focsle. \n\nI hadn't lost a fight in my life and I wasn't going to lose one now. So, I rolled away from the next kick and sprang angrily to my feet. My head hit an overhead beam and I went out like a light. Some fights you lose. \n\nI came around a couple of minutes later. The face that was hovering over me was the ugliest sight imaginable; and I'd looked sperm whales in the eye. He was taller than me, over six-two and he must have weighed close to two eighty. \n\nHe was completely bald, with a full beard that looked like a bushy head-of-hair had slipped around to his chin. He had mean, piggy eyes and he was missing an ear, which might have been related to the scar across his face. He had on a ragged captain's swallow-tailed coat and he smelled like the bilge after a long voyage in the tropics. \n\nHe gave a nasty laugh and said, \"Welcome aboard sailor. I wanted to introduce myself.\" \n\nI wiped the blood off my mouth and said testily, \"Who the hell are you and what the hell am I doing here?\" The giant laughed, made an ironic bow and said, \"John Quincy Adams at your service... AND you've just joined the triangle trade.\"\n\nThe unpleasant fellow in front of me was clearly not the seventh president of the United States. But I got the joke. John Quincy Adams's nickname was \"the Abolitionist\" and the triangle trade was still going strong; even though it had been banned in England and America for over a half century. \n\nCotton and rum went from the U.S. to England, cloth, guns and trinkets went to Africa and slaves were shipped to the U.S. The legal penalty in Great Britain was death. But you could get extremely wealthy if you were successful. Of course, the profit was all for the owners. \n\nNobody in their right mind wanted to crew a slaver. The only thing a crew member got was regular beatings or hung from a yardarm, if he were caught. It was just my luck that they'd found me passed out; when they were looking for somebody to shanghai.\n\nThe captain said, \"You're a sailor. What do you do?\" I said, \"None of your business.\" Which earned me another rap in the mouth. I said grudgingly, \"I was a boatsteerer.\" \n\nHe looked skeptical and said, \"You're kind of young to be doing that ain't you?\" I said angrily, \"I don't give a shit what you think. My wife's dead, and I'm fixin' to join her.\" Adams got a beatific look on his face, chuckled and said sardonically, \"I can help you with that.\"\n\nThat was how I became a maintopman on the good ship Princeton College. It was so-named, because Adams claimed that he had been a student there. He might have been. He was a very smart man. Except he was also creepier than a belfry full of bats. \n\nHe could actually quote Latin phrases, or at least I think it was Latin. I barely spoke English. So, foreign tongues were out of my reckoning. But when it came to humanity, he was a total headcase. Adams hated everybody.\n\nThe ship I was on was a ninety-foot, square rigged brig of two-hundred-and-seven tons burthen. It had a crew of twenty, which was dangerously sparse for a ship that size. And I was one of the few experienced hands. \n\nHence, in weather fair or foul, I was the guy who got sent aloft to trim sail on the topgallant yard. That was the most dangerous work on the ship. The pitching of the mast was magnified up there and the deck was a long way down. \n\n*****\n\nI was chained up while we were loading and unloading in Plymouth. It was below-decks where they kept the African cargo. I was bound with another unfortunate. He'd also joined the crew via the abduction method. Except he was a landsman who they'd snatched off a pier on the Chesapeake, while they were loading the tobacco. \n\nThe manacles kept us from jumping ship. They had plenty of those handy, given the ship's real purpose. We actually became friends of sort. I suppose it was the brotherhood of misery. We were both literally and figuratively in the same boat. \n\nWe talked for hours in the dark of the hold. His name was Springfield and he called himself a preacher, which meant that he had no useful skills. But he could read and carry on a sensible conversation. He'd never had a woman in his life. Being frail and poor, was no way to attract a mate. So, he was very interested in my situation. \n\nI told him about Faith and her betrayal. He said, \"But your wife thought you were dead, right? She had no further obligation to the marriage vows if you were dead.\" That hurt a lot. I wanted Faith's actions to be purposely immoral, not the result of a regrettable misunderstanding. \n\nSpringfield asked puzzled, \"Do you think that feller made up the story?\" I was sure that the slimy son-of-a-bitch had fabricated it. Every young man in New Bedford wanted to slip their hand under Faith's petticoats. But sadly, there was also clear-cut evidence to the contrary, since we HAD nearly foundered. \n\nI don't know whether the fact that Briggs's lie was based on truth made me feel better, or worse. Briggs had always drooled over Faith, just like the rest of the New Bedford lads. She was far and away the most beautiful girl in our social set. I smiled bitterly and said, \"No there was truth to it.\"\n\nI added, \"Do you remember that big storm that came up the coast a couple of years ago?\" He nodded and said, \"Yep, I was lucky that I was spreading the word over in Fredericksburg. Since, it almost blew the Eastern Shore off the map.\" \n\nI said, \"My ship was caught in it. We made it to safe harbor. But a lot of the others didn't.\" \n\nSpringfield said, \"So your wife wasn't being THAT unfaithful believing that you'd been lost at sea.\" I nodded miserably. \n\nI knew Briggs was a snake-in-the-grass. But Faith had always seen the best in people. She would have been an easy mark for his seduction. Especially if she thought I was dead. I would've been lost if the situation was reversed. \n\nI said, \"No she wasn't. But she still had no right to let that reptile into her bed.\" \n\nSpringfield said, \"Maybe she was just looking for another man. You know how women are. They need a man to take care of them.\" \n\nThat was the common belief back then. But I wasn't so sure that was true with Faith. My wife was very spirited. Still, I DID know that she tended to think with her heart, not her brain. I also knew that she truly loved me, and she would need a lot of comforting. That is, if I was actually dead. Briggs must have used that. \n\nSpringfield said, \"Whatever the reason you can't blame yourself. A man has to be true to his nature. A sailor has to go to sea. But there was nothing wrong with what your wife did either. She might have mourned you a bit longer. But she DID think she was a widow.\" \n\nI said angrily, \"But I WASN'T DEAD. She just didn't listen to the other women. Faith was always pig headed once she got something in her mind. They all told her to wait.\" The vision of Faith writhing in passion under that bastard haunted my nightly dreams.\n\nSpringfield said, \"What did you do to that Briggs fella?\" \n\nI said, \"Regretfully nothing. His dad squirreled him away in Europe, to keep him out of my reach. Of course, the scandal of him knocking up my wife probably had something to do with his desire to scuttle out of town. I vowed that I would find him some day and settle up the bill.\"\n\nAfter that, my reality consisted of two seconds of past and one second of future. That's as far as I could think. Even odder, I was totally devoid of emotion I knew I should feel something. But it was as if, every kind of reaction had been boiled out of me like we cook oil out of a whale. \n\nThere was nothing left; not fear, not sadness, not remorse, no sensation whatsoever. I was a hollow man. My soul had shrunk to a husk. \n\nThey say that, the opposite of love isn't hate. It's total indifference. That was how I felt about living. It made me appear brave to others. I would do any dangerous thing because I simply didn't care. \n\n******\n\nThe voyage to the Guinea Coast and back on the middle passage was pure hell. First, I had to endure the sight of thirty-eight poor souls being herded down to our boats by their own countrymen; to be chained below in the heat of the hold. \n\nI understood that slavery was the underpinning of the southern way of life. And I suppose you have to adopt a cruelly callous mindset if you are going to buy and sell another human. Still, the utter inhumanity was beyond my simple grasp. That is, until I actually witnessed it. \n\nThat no doubt sounds na\u00efve. But you have to understand. I was raised in New Bedford, where the only people of color were Indians. I DID know a few black people from whaling. They were among the best harpooners and boat-handlers in the crew; and believe me, skin color isn't a consideration when you're fighting something twice the size of your boat. \n\nThat's why the sight of folks, who looked just like my former comrades, being loaded into our hold like animals, just revolted me. A few of the braver souls, myself included, tried to make things a little better for them. We'd smuggle fresh water and food when we could. But we couldn't do anything about the situation except endure along with them. \n\nYou might fault me for not doing more. But I was as much a prisoner on that ship as the Africans were. Adams had six guards, all as brutal as he was. They were all armed and any infraction brought the cat. Adams even shot a man for quoting St. Paul about slavery. \n\n*****\n\nIt was black as pitch, hot and humid as we slid along the Louisiana coast. I was the helmsman since I was one of the few experienced hands. The heat lightning lit the heavy clouds to the northwest as we passed through the Rigolets strait. It was an ominous portent. \n\nI heard Adams tell his compatriots that we would drop our \"cargo,\" his words, at Mandeville on the north shore of Lake Pontchartrain. I assumed the slave traders would meet us there. That was thirty miles as the crow flies directly across the lake from New Orleans. \n\nNew Orleans hosted the biggest slave market in the United States. But since the importation of slaves from west Africa was banned in 1808, we obviously couldn't pull into the docks on the Mississippi side and start unloading. The citizens of New Orleans might have welcomed us. But the authorities would have locked us up. \n\nWe were feeling our way in the dark, as we transitioned the straits. This was a delicate time. The navy had armed revenue cutters patrolling Pontchartrain, that were expressly dedicated to catching smugglers. And although the Princeton College was built for speed, it was a sailing brig. There was no way we would outrun a steamship. \n\nWe had just gotten past the tip of Treasure Island, into the open lake, when we saw running lights coming out of the Chef Menteur pass and Fort Macomb, to our south east. The only reason for a ship to be out at that time of night was to patrol the lake. \n\nThe cutter was headed along the southeast shore. And if we continued on the course that we were on, they would catch us sooner, than later. I wanted Adams to be caught. But we were ALL in deep shit if we were boarded. \n\nWe had picked up a pilot at the entrance to the Rigolets. He had rowed all the way over from someplace on the shore of Lake St. Catherine. He was a lanky Frenchified creole with a heavy Cajun accent and he knew more about the neighboring swampland than half the alligators. \n\nHe whispered, \"Hard apport boy. We can hide in Irish Bayou, yeah.\" I spun the wheel hard over without consulting Adams. I could see that we were going to have to creep tangentially, out of the course track of the patrol boat. \n\nWe would have made it too, except some fool on the foredeck lit a pipe. He must have been nervous, or maybe he wanted us to get caught. It was only a sulfur match. But it flared like a lighthouse in the black of that humid night. \n\nWe held our collective breath waiting to find out whether it had been seen. The answer came almost immediately. I heard the clatter of the steam engine increase and the running lights turned in our direction. \n\nWe were just passing Irish Point and we could've hidden in the bayou there. But Adams and his guards were in a panic. They hastily put their heads together and came up with a plan to put all of the \"contraband\" into the ship's whaleboat and then row them back into Bayou Sauvage. He couldn't be hung if there was nothing incriminating on board. \n\nAdams knew I'd pulled the harpoon oar. So, I was the first one he heaved over the side. He also tossed in the creole pilot and Springfield, who was more-or-less useless. Then they sailed away, leaving us to deal with a bayou full of alligators, water moccasins, and all sorts of other venomous whatnot.\n\nWe had twenty-eight terrified black people as passengers. There had been thirty-eight to start. But ten had died on the voyage over. That was the usual consequence of being kidnapped out of your life and then crammed into a beastly hot and unsanitary space for days-at-a-time. So, Adams had another think coming if he thought I'd just row those people back for him to sell. \n\nA couple of the captive men spoke French and our Cajun guide eventually got them calmed to a point where we could do some planning. The pilot, Delphin was his name, had the same attitude about slavery that I had. According to him, Bayou Sauvage was full of runaway slave communities. So, he offered to take our passengers back to where they'd never be found. \n\nHence, I landed twenty-eight refugees and him on a hummock with a trail leading back into the bayou. They could try to rebuild their lives from there. To my amazement, Springfield joined them. He said he saw God's hand in the business, and he wanted to spread the word. \n\nAll I saw was darkness and snakes. But I wished them well. The group disappeared into the night, chattering in their odd language. I didn't know what they were saying. But I thought I detected a note of hope in their voices.\n\n********\n\nThe sun was coming up over the lake, as I rowed along in the shoreline mists. The area had a humid atmosphere that wasn't like anything I'd encountered in New England. The terrain had changed from swamp to farmland. Yet, there was still no sign of the city of New Orleans. \n\nI was maneuvering along the coast, looking for a logical place to land. I finally encountered what looked like a river leading southwest from the lake. There had to be a city at the end of it. \n\nThat waterway was actually a canal. It was something that the French had dug back before Jefferson bought the place, fifty years previous. My whaleboat didn't stand out because there were commercial, barges and other small boats on the waterway, even at that early hour. \n\nI joined the southbound stream rowing easily. There was a turning basin, when I reached the end of the canal. I tied up the boat and made my way down a dusty road. The roadway quickly changed to cobblestones and it had a name, \"Canal Street.\" That seemed appropriate. I had finally reached New Orleans. \n\nI figured I'd put my stake in the ground right where I was at. Since, there was nothing back home but bad memories. I had on the same baggy sailor's pants that I'd been wearing when I was shanghaied. They had a concealed pocket right next to my family jewels. The placement ensures that you're instantly aware of any attempt to get at your valuables. ",
        "You can't trust anybody in the focsle. So, every sailor has something like that. Luckily, I'd stashed the gold from my last voyage there, before I'd learned about Faith. So, I had been carrying a relative fortune all the time I was in Adams's clutches. \n\nThat led me to a chilling thought. By now, Adams had no-doubt figured-out that I wasn't coming back. And he would probably guess that I was in New Orleans. Hence, it was likely that he would be combing the city looking for me. Therefore, it seemed advisable that I go to ground. \n\nIt was midafternoon and I was walking through a place with very distinctive architecture; all Frenchified balconies and wrought iron fantasies. It had narrow streets and back alleys. THOSE had the potential for good cover. Logically, it was called the \"French Quarter,\" and it looked to be one of the older sections of the city. \n\nI was dawdling my way down Dauphin Street, right on the edge of the Storyville district, when I saw a sign on a substantial clapboard and stone building up an alleyway. Men were coming and going through the front door. Naturally, I just assumed it was a hotel. I mean, it certainly looked like a hotel. I needed some sleep and a bath. So, I went in looking to book a room. \n\nThe instant I walked through the door I realized my error. There were beautiful women draped around on the plush furnishings, like alley cats. And they were ALL in some form of undress!! \n\nMy first instinct was to avert my eyes. That had been drummed into us at all those cotillions. Still, the infinite bounty of breasts and hips in bustiers and bare legs in net stockings was far too much for my twenty-year-old sensibilities. So, I just stood there with my mouth hanging open. \n\nNow, you might think I was a naive fool, walking into a whorehouse looking for a bed and bath. But this place was like nothing I'd ever encountered. New England was still under the thumb of its Puritan ancestors and places like this were kept secret lest they offend the eyes of the godly. \n\nA woman detached herself from the delectable array of female flesh and glided majestically over like a clipper ship entering harbor under full sail. She was older than the collection of kittens around her. But she must have been a stunning beauty in her day. \n\nShe was painted-up like the lead float in a Fourth of July parade. But she had a very pretty face under all the cosmetics. And her monumental tits were hoisted to inconceivable heights by a bustier that was an engineering marvel. \n\nAt six-two, I towered over her by a foot. Yet, I was intimidated by her worldly confidence. She stood there, appraising me like she was buying a horse. I almost expected her to thump my chest and pry open my mouth to count my teeth. She finally said, \"What're y'all heah for sugahhh?\" There was a glint in her eye. \n\nI got enough rationality back to stutter, \"I was just-just looking for a b-b-bed and a b-b-bath.\" She tittered merrily and purred, \"That'll cost you twenty dollahs gold, sailor.\" \n\nI said in amazement, \"That's a lot of money for a room.\" She laughed, a throaty chuckle that dripped pure sex, and said, \"We provide a little lagniappe along with the bed and hot water mon-cher.\" \n\nI handed a liberty-head to her. She took it and actually bit it. Then she turned to a beautiful dark girl who had drifted up next to her and said, \"Marie-Aimee, could you please show this Yankee to a room and draw him a bath?\" \n\nThe new woman was willowy slim with long gorgeous legs and smooth raven hair. It hung down her back, all the way to her delectable hind-quarters. She had large, soft, perfectly shaped tear-drop breasts parked on top of her corset. But her face was the real wonder. \n\nShe was a rare, exotic beauty with huge dark eyes, perfectly proportioned features and a lush sensuality that hearkened to leaping fires, beating drums and wanton tropical nights. You would have to be made of stone to not respond to her. And one part of me was pure granite. as I inhaled her musky scent. She smelled like magnolias. \n\nShe moved with the lithe feline grace of a hunting jungle cat, natural and smooth, yet compellingly purposeful. She almost prowled. I followed the swaying globes of her ass up the richly carpeted stairs. They looked like two cannon balls moving up and down. \n\nShe opened the door to a room and ushered me in. There was a big galvanized tin tub placed right in the middle of it. I said nervously, \"So, do you work here?\" I still hadn't gotten it in my head that a woman as remarkably beautiful as this one was a whore. \n\nShe gave me a pitying look, like she couldn't believe I was allowed to walk around without a keeper. She said in a soft Cajun accented voice, \"It's a living. Now take off your clothes and settle down in this tub, Cher. We'll get you some hot water and soap.\"\n\nI was a bit shy about undressing in front of a lady. I also wanted to make sure my stash of gold coins stayed in my possession. So, I waited until the stunning creature had glided out of the room. Then I stuck everything under the mattress. \n\nI was sitting in the tub in my birthday suit when the first woman, who clearly was the madam, came in with a couple of black porters bearing steaming buckets of water. They proceeded to pour hot water into the tub and I found out how a boiled lobster felt. \n\nThe lady was disrobing while the two men did that. I wondered how a female could undress with three men in the room. But it appeared that the two porters were invisible to her, being no-doubt slaves. The woman had removed the bustier and was down to nothing but frilly pantaloons, staring at me hungrily. \n\nShe was maybe forty years old. But she was the most voluptuous female I'd ever seen. I'd marveled at the size of her tits. They were topped by big, round, red, almost purple aureoles, with large nipples protruding from the middle. My wife's breasts had been big. But Faith's tits were mere foothills compared to this woman's jaw-dropping treasures. \n\nI'd thought she'd looked chubby in a dress. That was because her boobs were wider than her ribcage. Naked, they were giant swaying globes, with surprisingly little sag. To this day, whenever I see an enormous pair of juicy watermelons, I think \"New Orleans whorehouse.\" \n\nThe impression of plump was reinforced by the fact that her massive boobs were accompanied by wide, fruitful hips. In fact, naked, you could see that there was actually very little fat on her. And the muscles moving around beneath that soft female flesh were clearly visible. \n\nWith boobs and hips so enormous, you would expect her to have legs like tree trunks. But hers were slim and sculptured, with enough space at the top to berth a frigate. Nevertheless, although her legs might be works of art, her true wonder was her waistline. \n\nIn the nude, her tiny waist made her look like she had been tied in the middle using very little rope. You could just about span it with your hands, a little over twenty inches. The contrast between her hips and boobs and her waist brought to mind the term, \"Earth Goddess.\"\n\nThe sight of her was something you'd see maybe once in a lifetime. Even more relevant, I hadn't been with a woman in over two years. So, understandably, an object broke the surface in front of me that looked like a breaching bluefin. \n\nMy new friend got a hungry expression as she shoved me back in the tub and climbed in facing me. She said coyly, \"I'll have to do something about that sugahhh.\" She leaned forward, seized the recently surfaced item, which was sticking out of the bathwater like the Scituate lighthouse, and proceeded to gobble it like it was a plump chicken and she'd been living on a desert island. \n\nThe exquisite sensation of her hot mouth slammed my head back onto the edge of the tub. You have to understand. Faith and I were both newcomers to sex. And we hadn't gotten to that chapter in the book yet. That was the first time I'd ever been blown. I lasted perhaps ten seconds before I groaned and then erupted like Vesuvius. She began to drench her own breasts with the resulting molten magma, moaning lustfully as she did it. \n\nI had no idea what was happening. But that was irrelevant. This woman had just awakened the Kraken. I rose out of the water. Picked her up like she weighed nothing and tossed her on the bed. She gave an eager squeal as she landed, legs spread, massive boobs flopping. Then I pounced on top of her making alarming growls. Her hand reached between us. There was a minute of fumbling and I slid into a fiery passage. \n\nMy partner was a professional, which was actually an advantage. She might have serviced many men. But it made her expert in the fine art of fucking. She gripped me down there with more strength than most women have in their hands and proceeded to massage me in mysterious ways. \n\nI made another loud groan and plunged into her to the hilt. That caused her eyes to go remarkably wide, she shrieked, they rolled completely up in her head, and we began a very vigorous dance. \n\nI'd never been with a whore before. In fact, I hadn't been with anybody but Faith. Still, my wife was one very wild fuck... Bad thought!! The vision of that son-of-a-bitch tapping Faith's extraordinary passion hit me and I was overcome by a blazing pang of jealousy. \n\nMercifully, the pain was quickly submerged by a tidal wave of sensation. My new partner had her gorgeous legs around my waist and was slamming back at me. She was grunting with effort as she worked my shaft writhing like a madwoman. Our mutual sweat made our bodies slippery and she was oozing lubrication around the part where she'd been penetrated. \n\nShe had her arms wrapped tightly around my chest and her giant tits were moving around independently between us. It felt like an eternity passed. Then my partner began to emit loud rhythmic cries that built to a crescendo. With that, she made a throaty sound very deep in her chest and yelled astonished, \"Oh Mon Dieu!!!-J'ARRIVE!! -- YESSSS!!\" \n\nThat set her off on a series of bucking and writhing maneuvers that nearly tossed both of us off the bed. Her violent reaction, the musky aroma and the sheer violence of what was occurring in her passage caused me to nearly deposit my testicles in her. \n\nWhen I got my wits back, I turned and looked at her. She was lying on her back whimpering, one arm thrown over her eyes, giant mounds, rising and falling. She popped one eye open and looked at me with wonder. \n\nThen she rose and planted a steamy kiss on me and said, \"That was epic cher!!\" I was astounded. I knew that whores didn't come. It's a business, not pleasure for them. And they certainly didn't kiss. \n\nI flopped over on my stomach, covered in sweat, still trying to figure out what had just happened. She was tracing the muscles in my shoulders and back. She said huskily, \"How did you get slabs of muscle like that, sugah. I have never been with a man with a back, shoulders and arms like yours.\" \n\nI said idly, \"I've been a whaler my whole life. You get like that if you are good with an oar and harpoon.\" She said, flirtatiously, \"What's a whaler doing in New Orleans? We don't have any whales here.\" \n\nI said, \"I was shanghaied on a slaver that tried to run past the patrols on Lake Pontchartrain last night. They still import slaves from Africa, you know, even though it's been outlawed.\" I heard a grim voice say, \"I know. If that double-eagle's from the slave trade I don't want it.\" \n\nI laughed and said, \"The opposite; they needed to evade a revenue cutter. So, they dumped me and some others over the side with the people they'd kidnapped. I landed them in Bayou Sauvage, and they were heading for a runaway settlement when I last saw them.\" \n\nShe gave me a glorious smile and immediately tried to roll me over. When I complied, something hove into view that looked like the bowsprit of a ship-of-the-line. It wasn't anything miraculous. I was only twenty and it HAD been two years. \n\nShe gazed at it hungrily. I grinned and said, \"I imagine John Quincy Adams is looking for me as we speak.\" She gawked incredulous. She said in a no-nonsense tone, \"Are you seriously trying to tell me that the Great Abolitionist was captain of a slave ship.\" \n\nI laughed and said, \"I don't think that was his real name. But my life is forfeit if he ever finds me.\" She said, a voice that was furry with lust, \"You can stay here as long as you like my beautiful boy. I just might find a use for you.\" \n\nThen she lowered herself daintily onto my throbbing member and we commenced the process of getting to know each other better. \n\n*****\n\nThat was how I met May Bailey. She had been orphaned by the death of their parents in one of New Orleans periodic yellow fever epidemics. But her beauty was already full-fledged. So. she immediately caught the eye of Joseph Samuel, a wealthy cotton merchant. \n\nHe \"adopted\" her, even though she was already eighteen and maintained her in lavish style in a house in the French Quarter. Attitudes are different in the Big Easy. Hence, having a mistress as young and stunningly beautiful as May was, a mark of distinction for her benefactor. \n\nThen Samuel died. It was alleged that his massive heart failure might have had something to do with the wide disparity in their ages, and his preoccupation with his hot young mistress. But May was a redoubtable woman and she had her renowned beauty to fall back on. So, she quickly snared another cotton magnate named Herman. \n\nHe was even older and richer than her previous conquest and May actually worked out a deal where the house went to her upon his passing. The man's inevitable demise came three years later. He was buried with a smile on his face and May had property and a little money. \n\nMay told me that she'd grown tired of being taken care of by a man. She had no marketable skills except the ones she'd acquired in her seven-year sojourn as a professional mistress. So, she went with her strength. \n\nShe turned her new residence into the type of high-class knocking shop that would attract the area's wealthy planters and merchants. The \"talent\" she gathered was every type, from poor creoles to rebellious daughters. \n\nThey were every color in the rainbow, including red and yellow. But they all had one thing in common. Like May, they were exceptionally beautiful, and they knew how to fuck. In fact, by the time I met her May was something of a New Orleans legend. She even had a license to operate a \"house-of-ill-repute,\" granted by the city. \n\nMay might be wealthy and influential. But she couldn't have children. She divulged that piece of information to me one weepy night, after she had nearly killed me in bed. She said that she'd taken a shine to me because she imagined that I looked like the son she'd never have. \n\nThat statement was more than a bit disturbing, given the fact that she'd just finished riding me like a thoroughbred at the Gentilly fairgrounds, she called it \"cowgirl.\" \n\nI didn't know what to say. My one experience with a woman was with Faith. And inevitably, I had a flash of painful regret at THAT thought. So, I did what I'd do with my former wife. I stroked May's naked back and held her as she cried. \n\nI said matter-of-fact, \"You know, the priest might have a problem if I really were your son.\" She looked at me sadly and said, \"I know dear boy. It's just that I've grown very fond of you in my own way and it's time for you to leave.\" \n\nThat was news to me. I said puzzled, \"Leave, where am I going?\" \n\nMay smiled affectionately and said, \"I have a partnership arrangement with one of my girls. We're going to open a place in Denver. There's gold out there and we're going to split the profits. That is, if I provide the stock.\" \n\nI had visions of cattle drives. I said, \"What does that have to do with me?\" May said, \"It's a long and dangerous journey. So, I'm sending you, along with Patrick, to make sure they get there.\" \n\nPatrick was the very essence of the smiling Irishman. I liked him. He was ten years older than me, and he had one of those classic Irish faces, hooded eyes, long narrow nose, thick eyebrows and an accent that hinted at larceny and good humor. \n\nHe'd come over during the great hunger and was making his way via every conceivable form of grift. He had been working as the barman downstairs, laying out drinks and blarney for as long as I'd been upstairs. \n\nI might have felt a bit resentful being unceremoniously kicked out of the nest. But I was thrilled by the prospect for new adventure. It had been almost a month since I'd walked through May's door. We weren't sure whether Adams was still looking for me. So, I had been confined to the upstairs of the house; trying to stay invisible. \n\nAt night I serviced the madam. But we were both getting fidgety. I always had a daring spirit and a journey into the wild west was just the kind of prospect that I could sink my teeth into. Even if it was as a trail boss for a herd of whores, movin' west. \n\nI'd miss May. But we both knew that our interlude wouldn't last long. I was twenty years her junior and she was a madam. Hence, a week later we were bound up-river on the steamer Natchez - destination, Hannibal, Missouri. \n\nThat was my first trip on a steam driven boat, and it was eye-opening. The big stern paddles were turned by a mighty engine located in the bowels of the ship. It huffed and puffed its way against the current, making a full five knots. That was a miracle in-and-of-itself for a blue-water sailor like me. Steam obviously had a future. \n\nMay had seen us off at the cotton docks at the end of Ursulines Avenue. She gave me a parting hug and said, \"Be good my beautiful boy. I'll never forget you\" Was that a tear in her eye? \n\nMay Bailey might have been a prostitute and a madam. But she was a strong and independent woman and one of the kindest and most honorable souls I've ever known. She sailed by her own star and she never budged an inch her entire life. \n\nIt was obvious that May was helping me to get out of town. Still, fate has a sense of humor. Who would have thought that I would be making my escape by honchoing a shipment of prostitutes on a thousand-mile journey to the promised land? \n\nThere were eight girls in our group, all stunningly beautiful. Two of them, Aphrodite and Bathsheba were former slaves and black. Lin was exotically oriental. Abigail was a planter's daughter. She actually seemed to enjoy her work. Then, there were three Mexican beauties, Itzel, Nelli and Tepin. They were sisters from Vera Cruz; sold into the trade by their parents. \n\nFinally, there was Marie-Aimee. She called herself Aimee since every Cajun girl was named after the Virgin. She was May's business partner. I had not seen much of her since the day I arrived. She'd been around. But she had kept herself scarce while I was hiding out. I think that she'd been told to stay away. Since, it was clear that I found her fatally attractive. \n\nAimee was a Louisiana creole, what the locals called a quadroon; meaning one of her grandparents was black. The product of that fortuitous merger was a woman of magical beauty, She had a pointed, \"intellectual\" nose over a stunningly sensual mouth, thick, silky raven hair framed a classic oval face, high, intelligent forehead and her beautiful eyes were a dark shade of violet. \n\nYes, I said violet!! The contrast between Aimee's golden skin and her distinctive eyes was so startling that men would literally stop and gawk - mesmerized. There was also an undefinable scent about her. it might have been voodoo sorcery, or just plain Aimee. Whatever it was, it turned every male near her into drooling idiots; me included. \n\nAs I'd noted, she was perhaps five six, with a body that was feline in its sensuality, big full tits, lithe hips and long smooth muscular legs. She moved like a bayou panther. \n\nMay had dressed me like I was her kid. The clothes were stylish and sophisticated, right down to the ruffled shirts and cane. Nevertheless, I was still a former harpooner underneath, and it showed through the Frenchified duds.",
        "The same was true with the girls. All of our charges were dressed in the best French fashion, and they comported themselves like highborn ladies, as May had trained them to. Still, most of the men on the boat guessed what they were. \n\nHence, Patrick and I had our hands full \"convincing\" the male passengers to keep their hands off the goods. I was bigger than most, at six two and two hundred and twenty pounds. So, all I had to do was gently encourage good behavior. \n\nPatrick was a fireplug, perhaps five seven and a hundred and eighty pounds. And he got his Irish up if guys took liberties; especially with Aphrodite, who he seemed to have a thing for. That led him to toss a planter's kid into the Mississippi, which nearly got us kicked off the boat. \n\nLuckily, they fished him out and Aimee smoothed his ruffled feathers. She didn't do it herself. That job was given to Abigail, who was happy to perform the task. Seriously!! there was something wrong with that girl's head. \n\nThe Natchez pulled into Hannibal Missouri like you'd park a wagon. As a sailor, I was disgusted by the inelegance of the process. They just steered it up to the dock and backed-water. \n\nWe unloaded our cargo, which included enough trunks and valises to accompany Napoleon's army on the march, and then loaded it all onto a private coach on the Hannibal to St. Joe railroad line. Thence we traveled on to the Missouri riverport of St. Joes. \n\nThe railroad journey took a half day. Then, early the next morning we and our charges were loaded abord the steamer Excel for the two-day run down to Kansas City. Kansas City was called \"the City of Kansas\" back then and it didn't have the trappings of a cow-town yet, because the railroad hadn't gotten there. \n\nIt bordered \"Bleeding Kansas.\" Thanks to the Kansas-Nebraska Act, there'd been fights between bushwhackers and jayhawkers all over the Territory. President Buchanan had sent in enough Federal troops to calm the place down and we didn't linger there long anyhow. We just needed to outfit a couple of wagons to head out on the Santa Fe trail. \n\nBy 1860, that trail had been in operation for over thirty years. The deep ruts that marked its path testified to the thousands of folks who had made the trek through Kansas Territory to points west. \n\nThe wagon train that we joined was like a military expedition, with elected officers and armed men to scout and protect the main group. It operated on a fixed routine, up at 4AM, departure at seven. We traveled ten or fifteen miles a day, depending on the countryside. \n\nWe'd bought a Conestoga for the freight. The white cotton canvas cover on the Conestoga, was why they called them \"prairie schooners.\" It was cantilevered out from the front and rear of the bed for better protection of the interior during storms. So, it looked like a sail. \n\nEach wagon could handle a rough two tons of cargo. Oxen were the preferred team; since the greater number of mules required to do the pulling, would be a bitch to maintain. Oxen weren't guided by reins. So, we hired a couple of boys to walk alongside, to \"steer\" them. \n\nSince prairie schooners had no suspension and the trails were rough, most people preferred walking, rather than endure the constant, painful jolting and lurching of the wagon. So, we bought an Overland stagecoach to give the girls some basic comfort. It had a suspension and the passengers didn't suffer the hard bumps and jolts. But it swayed a lot. \n\nI sat up on the driver's box, with the reins, guiding the mules. Driving was tricky at first. I was a sailor, not a teamster. But you can get the hang of anything if you do it for hours a day. I'd traded my \"gentleman's\" attire for the boots, canvas pants, big neckerchief and checkered shirt that all the men in the train wore. It was topped off by a big Stetson that kept the weather off. I even had a waterproof duster if things got too inhospitable. \n\nTo my utter astonishment, Aimee rode up top with me. It takes grit and stamina to sit for hours in the heat and dust of the Kansas prairie. Being a whaler and blue-water sailor, I'd coped with adversity my whole life. But Aimee was by far the most beautiful and exotic of the women. \n\nYet, Aimee'd sit by my side, day-in-and-day-out. It was like she sensed that the endless vistas made me uneasy. I suppose people out west would be equally anxious in the open ocean, which was my domain. Her reassuring presence and her quiet strength encouraged me to be the man she needed me to be.\n\nAimee wore \"men's attire\" while she rode with me. That was just common sense, given the harsh environment. But her amazing ass in a tight pair of buckskin pants and her deep cleavage in a fringed buckskin coat, attracted too much unwanted attention from the other members of the train. \n\nIn response, Aimee would visibly disdain the ogling of the immigrant men and she exuded nothing but anger and contempt at their wives. Aimee always did what she thought was right and she hated petty-minded judgement. \n\nWe traveled behind the Conestoga during the day. We had to keep the pace of the lumbering oxen. Pat oversaw the big wagon, along with a random team of kids. They made sure the oxen stayed in line and kept plodding. \n\nSurprisingly, Aphrodite walked the entire time with Pat chattering and laughing. It was comical, Pat was five-seven and Aphrodite was nearer six feet. But apparently the two had become close at their former place of employment and they were in love in their own peculiar way. \n\nPat was Irish, and the Irish suffered a lot of bigotry back then. While, Aphrodite was a black prostitute. So of course, that evoked tons of moral outrage from the \"righteous\" members of the train. Still, nobody ever said anything openly provocative to them, because Pat had already thrashed a couple of fellows for various offenses. He had a temper. \n\nBoth Pat and Aphrodite knew that there was no changing human nature anyhow; people will believe, what they believe. So, they ignored the sanctimonious stares and enjoyed each other's company. In many respects that was the best revenge.\n\nAimee and I never talked. We just sat there companionably, mile-after-mile. It was as if she was making the statement that we were in this together. I respected her steadfast spirit and our partnership grew as we plodded west. \n\nYou might even call it falling in love. If such a thing could happen between an itinerant sailor and a prospective madam. She'd even shoot me the occasional companionable glance as we bumped along. We were indeed a pair. \n\nThe journey across Kansas followed the north bank of the Arkansas river. That was what the guides called the \"wet route\" since it featured plentiful grass and water. The \"dry route\" took much less time. But there was very little water. Only the eager beavers went that way. \n\nThe trail split again at Fort Dodge. That was where the people who were in a hurry could take the south fork following the Cimarron River. That passed through Comanche territory and those fellows were notoriously inhospitable. So, the folks who took that route often regretted it.\n\nWe took the mountain fork. Every mile was a test of physical strength, even with six oxen pulling. The trail itself. was an eternal mass of ruts, mud, and steep elevations. I was one of the biggest and strongest of the men. And they needed my muscle to move the wagons through the various gullies and fords. \n\nAfter we made camp, Aimee spent all of her time with the women. Of course, that was to be expected. Still, I missed her company. That feeling of discontent was an alien emotion. I hadn't felt close to anybody since the day I kissed Faith goodbye. \n\nOddly, Aimee seemed just as lonely as I was, even while she was sitting among a gaggle of gossiping women. Once in a while I would even catch her gazing pensively at me. It was as if we were an actual couple. I kept telling myself that she was a whore. But she had been nothing but steadfastly loyal, and reassuring throughout the journey. \n\nThe presence of eight gorgeous and clearly sexual women was an issue in a camp full of men. So, Pat and I slept under each end of the Conestoga, which was were the girls bedded down. We kept two fully loaded Army Colt 44s under our pillow. We also kept a .45-70 lever action Henry repeater and a ten-gauge shotgun in the drivers box. \n\nOur destination was Bent's old fort, which was located on the Arkansas River. It was about 500 miles as the crow flies from Kansas City. From there, we would turn north along the Cherokee trail toward Denver. That was another two month's journey. \n\nWe had gotten into Colorado, west of Fort Lyon, to the site where the two trails split and were camping in the cottonwoods along the Arkansas River. It was the middle of the night. I was asleep when I heard somebody creep stealthily out the back, directly over my head, and walk off toward the banks of the river. \n\nI hastily pulled on my boots, grabbed a Colt and followed in my long-johns. I was feeling both anger and curiosity. It was certainly one of the women. But he shouldn't be by herself at this hour. The figure was easy to track. It was one of those classic moonlit starry nights on the great plains of Colorado. \n\nWhen the figure reached the riverbank, she knelt down and appeared to be praying. I lingered behind a cottonwood and just watched. All I could hear was the rushing current of the river. \n\nThen, to my amazement, the choking sobs started. Those morphed into anguished cries of \"WHY?!!\" She fell face-down on the ground, arms above her head in supplication and made primal sounds of agony. \n\nI jumped out, ready to rush down to her. Then it occurred to me that she had chosen that time and place because she wanted privacy. I needed to just wait there and make sure she was safe. So, I stepped back behind my tree. \n\nI was also mystified. Which woman was it, and what had caused so much anguish? \n\nThe wailing finally stopped, and the woman got shakily to her feet. She began to walk up the trail past me, still gently sobbing. She came into the clearing that we had created cutting wood for the fires, when the full moon bathed her face. My heart almost stopped. It was Aimee!! \n\nI was hunkered behind my tree peering out as she passed. She never noticed me. Her eyes were downcast. I was turning to rush back to the wagon, before she discovered what I'd witnessed, when I heard a voice say flirtatiously, \"What are you doing out here little lady?\" \n\nI recognized the voice. It was Wilbert Cooper, one of the train's guards. He was a scruffy fellow, about Pat's general height - a rootless drifter. He was mostly useless but apparently, he was the guy tasked with patrolling the camp tonight. \n\nAimee stopped. You could see her doing the calculations. Her long raven hair was in a braid and she was in a light sleeping shift, just pantaloons underneath. She knew she was helpless if this guy had ideas. \n\nOf course, Aimee was no shrinking violet. She was an experienced whore. She turned and said in a seductive tone, \"Just had to do some nightly business. What do you have in mind, Cher?\" \n\nIt was obvious that Aimee was simply playing for time. But her tone of voice and the way her body shifted into a suggestive stance killed me. I thought to myself, \"You know what she is!! She's protecting herself in the only way she knows how.\" \n\nBut the thought of Aimee giving herself to this rancid cowhand, as the price of her grief, was just too much. So, I stepped out from behind my sheltering tree and said in a menacing tone, \"I've got this cowboy. So, why don't you just go back to whatever it was you were doing.\" \n\nThat startled both of them. Aimee jumped and covered her face. She began to make a high-pitched keening wail. She realized that I'd seen her at the riverbank. \n\nCooper pulled a fat Navy Colt. He leveled it at me and said with a smirk, \"I'm going to fuck this little lady right here. We all know she's a whore.\" \n\nThe first thing that you learn in a focsle fight is that the best option is instant attack, the more unexpected and violent the better. I was holding the .44 down by my leg. So, Cooper thought it was harmless. He knew I'd never get a shot off before he drilled me. But he'd missed the fact that the barrel extended my already long reach by that essential foot. \n\nI stepped to his left. It took him a fatal second to move the barrel of his Colt. That was all the time I needed to sweep my own gun up and knock his hand into the air. I followed that with a devastating punch to his ribs. Something went \"crack.\" He went \"oooofff\" and staggered back. \n\nThen I was on him like an enraged grizzly. I pulled the pistol out of his hand, threw it into the underbrush, spun him and pinned his arms to his sides. God! He stank. I had considered snapping his neck. He was much smaller than me and wiry thin. But I didn't want Aimee to see that. So instead, I said, \"Apologize to the lady cowboy.\" \n\nHe hesitated. I tightened my grip. He cried out in agony. I could feel his ribs actually move. He gasped, \"Sorry!!\" I released him. He staggered forward and landed on his hands and knees. \n\nI administered a kick to his head that put him out for good. He would have a serious headache in the morning and maybe some broken ribs. But at least he'd still be alive. Aimee was looking at me through veiled eyes, I knew I had to say something. \n\nI spread my hands in a heartfelt gesture and said, \"I wasn't spying on you, honest. I followed you because I wanted to make sure you were all right. That's all... You're very important to me.\" She looked shocked. Then she gave me a long glance and said, \"Je comprendre, tr\u00e8s bien. I'll tell you about it someday.\" \n\nWith that, she walked daintily past me and climbed back into the wagon. Aimee was her usual private self the next morning. It was like the previous night never happened. \n\n*****\n\nMost of the train continued along toward Raton Pass and Santa Fe. But five wagons plus our stage turned up the Arkansas. There was a wall of mountains in the direction we were headed. Fortunately, we weren't going any further than Pueblo. \n\nThen we would turn north on the Old Trappers Trail, which was the preferred route up through the Sierra Madres. The Trapper's Trail was forty years old. It had been used by Freemont and Kearney in their early expeditions west. It led north from Pueblo along the front range of the Rockies east of Pikes Peak and thence over the continental divide, between the Arkansas and South Platte Rivers. \n\nWe were making our tedious way across high plains, with endless short-grass prairie. That terrain looked like it supported anything that had hooves... buffalo herds, deer, even cattle. The Indians stayed invisible, which was fine with me since this was Apache territory. \n\nWater was critically important in that arid landscape. So, the trail meandered along a series of creeks. We'd been travelling for days, basically northwest, when we got to a place called Jimmy Camp. Jimmy Camp was a former trading post, named after a crude adobe hut, that Jimmy Hayes, an early trader, had built on the lowland near a creek. It was rumored that he was killed and buried there. \n\nJimmy Camp was known for its crystal-clear spring and there was plenty of grass for grazing along with the cool shade that the pine and cottonwood trees afforded. The Trapper's Trail branched north at that point and we planned to pick up the Cherry Creek trail. It ran along a tributary of the South Platte and led directly into Denver which was our destination. \n\nI was beginning to feel serious discontent as we neared the end of our journey. For months, Aimee had been my constant companion. She was always sitting next to me in her buckskins, with the Henry across her knees, self-sufficient and enigmatic. It forged a deep bond. Even though neither of us acknowledged it. \n\nYet in actuality, my faithful partner sold herself to men for money. I had no thoughts about the right, or wrong of that. I had righteous indignation to fall back on with Faith. But it was never a matter of betrayal with Aimee. From the moment we'd met I'd known what her profession was. \n\nThen again, my closest, and really only, companion in life would be open for business as soon as she got to Denver. And THAT ate at me. I even sensed the irony in our circumstance. It was clear that Aimee just wanted somebody to love. While, at the same time, she could never have that love because of what she did for a living. \n\nThat impossible paradox was like a dam holding back the river of our mutual desire. I assumed that Aimee sensed it too. And she was keeping me at arm's length to save both of us the grief. Yet, it made us the closest pair of strangers in the entire west. \n\nWe'd never said two words to each other about our past. But there was no circumstance that I could conceive of that would cause such a clearly strong and intelligent woman to become a whore. \n\nI understood why the rest of the women were in the trade. Aphrodite and Bathsheba were free now. But they had been sold to May as slaves. I never knew for sure, but Lin and the three Mexican girls were probably in the same boat. Abigail was a whore because she had several screws loose. Nevertheless, what had led a strong, spirited and absolutely stunning creature like Aimee to debase herself like that? \n\nAdded to the mystery, was Aimee's performance by the riverside, back a month ago. I had never seen so much grief in my life. It made the mourning that I'd done the day I learned of Faith's betrayal seem almost lighthearted. \n\nWhatever motivated THAT would no-doubt unlock the mystery of the woman, who I had fallen so hopelessly in love with. But alas, the only way I was going to find out would be if Aimee told me. And up to that point she had shown no inclination to open up. \n\nMost of the time, Aimee treated me like I was her man. She did all the solicitous things a wife would do, cooking and taking care of my day-to-day needs. Once in a while, she'd even wash my union suit. She said the trip was a lot more pleasant if I wasn't stinky - Women!!!\n\nThe one thing she didn't take care of were my sexual urges. But I didn't expect her to. And it wasn't because she sold it for cash. It was clear that Aimee \"the prostitute,\" was the armor she put on whenever she had to face the harsh reality of life, red in tooth and claw. \n\nThe other Aimee behaved exactly the opposite. The occasional flash of the deeply loyal and caring woman underneath the false flag of the fatalistic whore was heartbreaking. \n\nI had unhitched and tethered the mules and I was sitting in the late afternoon sun pondering our bleak situation. That was when I heard the boom of the ten-gauge. It came from the direction of the spring. I grabbed both .44s and dashed down the path toward the sound. There was the rattle of gunfire and then cries and shrieks. \n\nI dashed into the clearing around the spring. When I got there, I found five panicked women in shifts. They'd obviously been bathing. Aimee was also in a revealing shift. But she was levering the Henry for another shot and Aphrodite was vigorously reloading the ten-gauge. \n\nThe sight of Aphrodite's monumental body in a shift was slightly more intimidating than the vast mountain range to our west. I had the inappropriate thought, \"How can Pat EVER survive THAT!!\" \n\nPat was just getting to his feet, obviously woozy. There was what looked like a dead Indian a short distance away and there were whoops coming from the direction where Aimee was shooting. \n\nEverything stopped when I appeared. Aphrodite turned to Pat and smothered him in her vast bosom. I was thinking \"serious suffocation.\" The girls were all yelling and pointing in the direction of the whoops, which were diminishing in the distance.\n\nAimee fired one last round and then walked quickly over to me clutching the Henry. For the first time in forever I saw her agitated. She said in a strained voice, \"They've taken my sister. We have to go after her.\" ",
        "I said, uncomprehending, \"Sister??!! What sister??!!\" \n\nAimee said without further explanation, \"Abigail!!\" Then she turned to run after the departing raiders. I grabbed her arm and said, \"Hold on there. You aren't going to get far in bare feet and a shift. I'm going with you. But we need to do a little preparing.\" I'd finally admitted that I would do anything for this woman; even face a Comanche raiding party.\n\nI had no idea why beautiful golden, exotic Aimee thought that pale, patrician Abigail was her sister. But for the first time ever, I saw the real woman. And she was frightened. I looked her over and added calmly, \"Like getting the right clothes, ammunition and some vittles.\" \n\n*****\n\nFifteen minutes later, Aimee was dressed in her buckskins, with a couple of saddlebags of Henry rimfire draped over the back of her mule. I was trying to stay on mine. I'm a sailor, not a cowboy. I had my .44s in two holsters. \n\nWe'd left the ten-gauge with Pat. He promised to get the Conestoga to Denver, and we'd meet him and the rest of the girls there. Aimee had deputized Aphrodite to serve in her stead. That was an excellent choice. She could probably drive better than I could and nobody would get out of line with Aphrodite in charge.\n\nWe rode off on the mules to follow the obvious trail that the raiders had left, moving west from the spring toward the broken terrain a couple of miles distant. There were plenty of canyons that they could hide in. But they kept on going toward the mountains. \n\nAimee said there were originally three of them. They'd come out of the tree line behind where they had been standing, caught Pat unawares and tomahawked him. Apparently Irish skulls are tomahawk-proof, or the edge was dull, because that just knocked him out. \n\nPat had been talking with Aphrodite at the time, those two constantly chattered. So, Aphrodite grabbed Pat's ten-gauge and blasted the one with the tomahawk.\n\nAimee ran to the Henry, which she had propped against a tree and shot at the other two. That convinced them to flee. But they had grabbed Abigail, who, of course, had fled in the wrong direction. \n\nThe tracks that we were following joined a much larger band perhaps a mile into our pursuit, which changed the situation entirely. I could probably dispose of the original miscreants by hand. But I wasn't going to be able to do anything about a whole tribe. \n\nWe began to cautiously follow the trail. The tracking was made easier by the travoises moving along with the group. They chewed up the ground as they traveled. It looked like we were chasing an entire band. \n\nWe pursued them until nightfall. I was getting used to riding the mule and Aimee rode like she was born on a horse. It seemed that there was nothing in the physical universe she couldn't do. \n\nThe people who we were tracking had encamped on a rise perhaps ten miles north-northwest of where they'd snatched Abigail. It must have been an extended family. There were multiple tepees and several fires. \n\nWe waited until full dark, to wriggle our way up to the perimeter of the camp. It was easy because there were a bunch of gullies leading there. Aimee had always carried the Henry. I thought that was just pretense. But she clearly knew how to use it. \n\nShe also had no hesitation crawling through rocks and vegetation like an Army scout. Watching her hard, round buns in a tight pair of buckskins as she slithered along in front of me, rifle in hand, was distracting to say the least. \n\nWe got to the edge of the encampment, which was a circle of six tepees, big fire in the middle, and began to investigate one tepee at a time. It was pitch black, with just the stars and the dying fire to light the scene. Nobody was actually standing guard. But there were a couple of dogs wandering about. The dogs would provide the alarm if anybody approached. \n\nWe stayed down-wind as we went silently from tepee to tepee. We could hear occasional movement inside. But there was no sign of Abigail. I was beginning to wonder what we would do, even IF we found her. We certainly couldn't walk up to thirty-or-so hostile Indians and politely ask them to return our whore. \n\nThat was the exact moment when the cries of a woman being absolutely fucked to death began to emanate from a clearing just to our right. It could've been anybody. But Aimee immediately jumped to her feet and ran up the path. Maybe she recognized the moaning. I scattered a handful of pemmican before I followed. I thought, \"That should distract the dogs.\" \n\nWhen I got to the clearing, I found the two women loudly arguing. Aimee had one of the two Indian men covered with the Henry, while the other was lodged tightly between Abigail's legs. The Indian who had been fucking Abigail was looking on baffled as the two women yelled at each other. \n\nApparently, Abigail had enjoyed her kidnapping immensely and she was in no mood to turn her back on such a delicious supply of well-endowed men. Did I mention that Abigail wasn't quite right in the head? The essence of Aimee's argument was along the lines of a loss of business value rather than sisterly concern. I said, stunned, \"What's happening? Isn't she coming?\" \n\nAimee turned to me exasperated and said, \"The little slut likes it here and wants to stay.\" \n\nI said, trying to sound reasonable, \"Then why don't we let her?\" \n\nAbigail, from her prone position, Indian still inserted, added, \"Yeah!!\" \n\nAimee said, \"She's my sister. I can't just leave her.\" \n\nAbigail chimed in with, \"They've taken good care of me and I like it here.\" \n\nThe two Indian men began to nod energetically. They obviously didn't speak English. But they got the gist of what Abigail had said. \n\nI said to Abigail, \"There is no turning back if we leave you now. You are totally on your own.\" \n\nAbigail said, \"These people care for each other. They're like a big family. I haven't felt this free and happy since Daddy sold Marie-Aimee.\" Now THAT was one more bewildering tidbit. Aimee gave me a look of horror. \n\nI said as firmly as I could, \"So it's your wish to stay here with these people?\" \n\nAbigail nodded enthusiastically and said, \"It's my wish. Now leave me alone.\" At which point she threw her legs back around the waist of the admittedly muscular brave and went back to what she was doing before she'd been so rudely interrupted. \n\nI took Aimee by the arm and steered her up the trail toward where our mules were tethered. She seemed to be crying. The mystery had endured long enough. I promised myself that I would pry the story out of my beautiful friend once we found a place to bed down. \n\nThe terrain we were in was still high plains. But it was close enough to the mountains that there were table rocks and caves. I had no desire to find out what was living at the back of a cave. But there was a nicely eroded area underneath a cliff face that gave us several feet of cover. \n\nIf we built a fire at the mouth, we could probably sleep undisturbed by any of the local varmentia. And it appeared that the Indians had been pacified, thanks to Abigail. \n\nWe were carrying canteens of water, and pemmican and coffee in our saddle bags. I gathered enough wood to build a roaring fire. Then, while I bedded the mules down for the night; Aimee cooked us up something that was filling, if not exactly gourmet. \n\nShe was still her usual enigmatic self. But in one short day she had morphed from a gorgeous New Orleans fancy lady: into Kit Carson. \n\nWe had the saddles and blankets to sleep on. Now, it was high time we parted the curtain. So, I said decisively, \"You said you'd tell me about it someday. I think now's the time.\" That wasn't the way Aimee worked. She trusted nobody. \n\nAll pretense left her gorgeous face. She turned her incredible violet eyes on me and said with unsettling emotion, \"You first.\" \n\nSo, I told her the whole sad story; from my growing up, to my obsession with the whaling trade, to my inevitable marriage to my childhood sweetheart, to her devastating betrayal. I added, \"I got drunk that night and with my luck, I was shanghaied off the docks onto a slaver.\" \n\nAimee looked appalled. I now knew that slavery was part of her background. I hurriedly added, \"It took fate and the Federal government to free me from that hell ship.\" \n\nI finished with, \"I made my way into New Orleans and you were a witness to the rest.\" Then I added grimly, \"I made a vow that I would settle my grievance with Mr. Briggs someday. That pledge is all that's keeping me going.\" \n\nShe gazed intently at me and it was like watching the winter ice melt on the first warm day of spring. Her heretofore impassive expression shifted and the real woman, the person who lay beneath that cat-like demeanor, began to emerge. \n\nWe had been sitting on the ground opposite each other, with the fire in between. Aimee got an unfathomable look, rose and walked over to sit next to me. I turned with a questioning glance. She grabbed my face between her two dainty little hands and kissed me with intense hunger. \n\nThat broke the dam, and the tidal wave of pent-up feelings inundated our lives. We were sitting on saddle blankets that smelled of mule. But no matter how unromantic the circumstance, we both knew it was going to happen. \n\nAimee gave a wild, cry and began shucking her buckskins like they were on fire. It isn't easy getting out of an outfit like that. But she accomplished it in almost the same time it took for me to clear my decks. \n\nI'd seen Aimee nearly nude before. But her body, presented to me now, as God had made her, was a stunning sight. Her lithe feline shape was perfectly proportioned. I already knew that. But the details had been concealed by various pantaloons and shifts. What she revealed to me in the ever-changing light of the fire was a flawless female effigy.\n\nHer legs were long and powerful but smooth and shapely. Her shoulders were delicate but sculpted. Her rib cage was wide. Her stomach was flat, and her hips were supple and lush, with protruding hip bones and muscled flanks. Her breasts were sizable, broad and meaty, with dark brown acorn shaped nipples. \n\nBut the one thing that set Aimee apart from any woman I had ever known, was her total lack of hair. Every woman I had been with before had fine down on their legs and a substantial bush in other places. Aimee was totally bald down there. I hesitated to think why. Because it was likely a courtesan trick. But it was also exotically tempting, since it highlighted her femininity. \n\nIn actuality, I had to take in that stunning vista in a quick glance. That was because Aimee had thrown her arm around my neck and dragged me down, so that I was laying half on top of her. I was aware of her profession. So, I was expecting all the whore tricks. But Aimee was either the world's most convincing actress, or she was lost in passion.\n\nShe moaned loudly and began to frantically whisper, \"Put it in. You have to put it in!!\" I hastily moved between her legs, which she spread widely for me, her hand reached down, and we were finally joined. The joining felt as inevitable as time. \n\nShe gave a muffled gasp of sensation and then she pushed hard with her feet and her hips rocked up to seat me firmly at the top. We both groaned with the feeling. I could sense the little flutters and nips in her passage. \n\nThen we paused. I was supporting myself on my arms and Aimee had both hands at the back of my neck gazing at me tenderly. The look was almost sad, which was baffling given that I was as deep inside her as I could get. \n\nThen her eyes clouded with lust, she gave a little cry and dragged me down for another deep kiss. The sex wasn't slow and romantic. It was as wild as I had always imagined it would be. \n\nAimee is an exotic creature, deep, mysterious and vibrant. She radiates sexuality simply eating breakfast. You can imagine what she is like when her emotions are riled up. More importantly. There was nothing in how she responded to me that would tell me that she wasn't totally lost in her own desire. Aimee wasn't a lady of the night. She was my lover.\n\nShe bucked and writhed under me, seeking her own satisfaction. Her cries of passion were so loud that they set off the coyotes in the area. She dug her fingers into my ass and humped back at me with fervor. There was no artifice; nothing that would lead you to believe she was anything but a woman in love.\n\nWe had been vigorously humping in the missionary position when she began to mutter, \"On top, on top.\" So, I half-rose and rolled onto my back, Aimee still firmly attached. Once we had settled back, I looked up at that naked golden body and she was staring down at me with fierce desire in her eyes. \n\nShe dangled her big meaty tits down as she tented her long hair around both of us and her hips really went to town, working back and forth at an outrageous pace. I took the engorged nipple of one of her swaying breast between my lips and that pushed her over the edge. \n\nAimee screamed and then lost control of her body. She began to violently quiver and shake. The look in her eye was utter shock, with a garnish of terror. It was like she didn't know what was happening to her. \n\nThe shrieks, the smells and the frantic pulsing of her little ring of muscle brought me right along with her, as she trembled uncontrollably on top of me. I had not had sex since my last night in New Orleans. So, you can imagine the cataclysm that took place in my loins. \n\nWhen I finally got some sanity back, I found Aimee lying bonelessly on my chest. She was either recovering or coming to. She was still panting frantically, and we were both bathed in sweat. I eased her over, so she was lying next to me. \n\nI propped myself on one elbow and looked down at her. Her eyes came back into focus. She'd been far away. Her first words totally flabbergasted me. She said wonderingly, \"I know that was an orgasm. The other girls have talked about it. But I've never had one.\" \n\nIt was foolish of me to blurt it out at that auspicious moment. But I had to say it. I said sincerely, \"I love you.\" The pain in her eyes was unimaginable. She said, \"Let me tell you my story first. Then you can make up your mind.\" \n\nSo, we lay next to each other in the hot night, gazing at the stars over the vast Colorado prairie. The fire outlined the facets of Aimee's magnificent body as she told me her story. In many ways, it was the simple consequence of the society that she was born into. But It was tragic. More importantly, it explained everything.\n\nThe Melancons were wealthy Arcadian planters in rural Baton Rouge. The Grandfather Aristede started the placage tradition by having a girl child with a beautiful slave woman named Leonie. The child grew up with the house staff and she in turn inherited her mother's beauty. \n\nIn fact, the daughter was so lovely that Aristede's son Augustin took her as, in effect, his \"left hand wife.\" That might seem a bit incestuous, given that they were half siblings. But extra-legal \"placage\" marriages with exceptionally beautiful slaves were common among the planter classes. It made the \"wives\" placees in the household \n\nAimee's mother Marielle was more of a wife to Augustin than his real wife Viola, who was the daughter of a member of the legislature in nearby Baton Rouge. They were all one big happy family. Abigail was born to Viola and Aimee was born to Marielle. The two girls were raised together like sisters, until they began to blossom into women.\n\nThat was when their brother Bruno took notice. Bruno was in his twenties, a physical specimen, legendary leader of the Greenville rifles and omnivorously corrupt. Aimee said, \"First, there was Abigail. She was two years older.\" I thought to myself, \"That explains it.\" \n\nAimee added, \"It did something to her. It was like her only raison d'etre after that was sex.\" Aimee added sadly, \"She came willingly with me to May's.\"\n\nAimee's mother knew that her daughter was bound to suffer Bruno's attentions. She was a generational beauty. So, Marielle worked out a placage agreement with Augustin. It would give Aimee some rights. Even though both mother and daughter were still legally slaves. \n\nAccordingly, at age eighteen, Aimee found herself bound to a monster. And of course, since she was a chattel, she had to submit to his every perverted fantasy. Her beautiful face got a look of absolute revulsion as she said, \"I will never tell you what he did to me.\" \n\nHer only friend was another slave, a serving boy who was her age, named Nestor. Aimee told me that Nestor was a sweet and gentle soul. She would pour out her anguish to him in the dark of the night, and he would hold and comfort her. Inevitably consoling became something else. \n\nBruno was beside himself with joy when Aimee fell pregnant. This would be the first child in the next generation, and he had already picked out the name Bruno Etienne Melancon Junior. He even began to treat the mother better. \n\nThat is, until the very dark-skinned baby was born. It only took a few applications of the cat to extract the name of the perpetrator. With that, Aimee rolled on her side to show me the scars on her smooth back. \n\nThe subsequent revenge was merciless. Nestor was sold to the cotton plantations in Alabama. Nobody lived long there. The child was sold up-river. He didn't fetch much. But the aim was vengeance, not income. And Aimee was sold to a whorehouse in New Orleans. \n\nLuckily, it was May's. May was a compassionate woman. She emancipated Aimee and gave her the opportunity to live in semi-luxury. All Aimee had to do was \"entertain\" a few \"clients.\" There weren't very many. And May enforced a strict code of conduct. Aimee was always treated well.\n\nShe paused there, and then stared at me intently, willing me to understand, \"I was property, not a person. I had been abused my entire life. I had no concept of kindness, or even humanity. So of course, I did whatever this generous woman told me to do. She was my savior.\" \n\nAimee added off-handedly, \"The nightly sex was utterly impersonal. It was a chore. I did it to repay my benefactor and keep a roof over my head. The act mattered not at all. I felt nothing.\" \n\nAimee's voiced deepened to reflect her profound grief, \"My heart was an utter void. I'd lost my beautiful child. My sorrow was all-consuming. I'd cry every night and I'd pray for his salvation. That was what you witnessed by the river.\" \n\nShe said bleakly, \"My soul, has always been shielded within the citadel of myself. It is the only way I have been able to survive. People see the walls. They never touch what's inside.\" \n\nThen she looked at me lovingly and said with a rising note of anxiety, \"That is not who I am. We've been together for almost a year. You are a good man. You will not hurt me, and you will protect me.\" \n\nShe paused, like she was bracing herself and added, \"I want to open the gate and admit you, and only you, into my heart. But please understand, it will kill me if you betray me.\"\n\nI had several thoughts. The first was joy. This superb woman had just given herself to me. The second was relief that I had not played the martyr over Faith's betrayal. I would have sounded like an idiot compared to Aimee's suffering. Lastly, I was utterly devoted to her. \n\nObviously, Aimee was a superb beauty and a passionate lover. She would always be a gorgeous and caring life-companion. But that wasn't the foundation of my choice. Aimee's spirit sealed the deal; her strength of character and intelligence, her gallant willingness to fight on, even in the face of hopeless odds. That was the ingredient that no other woman had.\n\nMore importantly Aimee had always been an honorable and caring person. She didn't treat others like they had treated her. She gave them sympathy and respect. That was the remarkable part. If I'd had Aimee's life experiences, I would have become an axe murderer. ",
        "Hence, it was easy for me to say, with absolute certainty, \"You will never regret loving me. That I swear on my grave.\"\n\n*****\n\nThe new town of Denver lay at the confluence of Cherry Creek and the South Platte River. It was mostly tents when we arrived. \n\nThere had originally been gold in the creek. But the truly rich deposits lay in the mountains to the west. Still, all the supplies and mining equipment had to come from somewhere and Denver was the terminus of the Pike's Peak Express. That was the only supply service from the east. And so, it was commerce, not mining, that had turned Denver into a boom town. \n\nOf course, no boom town could consider itself \"civilized\" unless it had a high-class whorehouse. Fittingly, May was called on to deliver that essential service. She, in turn, had sent her prot\u00e9g\u00e9 to set things up. That was why Aimee and I were there. \n\nAfter our adventure with Abigail and the Indians, we had taken our time getting back to Denver. The reason it took so long was that we couldn't get enough of each other. So, we lingered a lot on convenient creek banks and grassy spots. We also needed to work out the details of our evolving relationship. \n\nOddly enough, Aimee was the inexperienced one. I had been married. I knew how to be with somebody. Aimee had never had anything but a brief furtive affair, a brutal quasi-marriage and customers. So, she had to get used to life in a close and loving bond. \n\nIt was difficult at first, For instance, Aimee wasn't used to waking up being cuddled. The first time that happened she jumped to her feet, startled. She also got nervous when I did nice things for her. It was like she suspected ulterior motives. And she apologized far too much. She would even tell me she was sorry if she got too wild during sex.\n\nHer behavior was easy to understand. I knew that I was totally committed to her. But she didn't know that. She had been mistreated her entire life. Now she'd staked her soul on the hope that I was different. And she had everything to lose if I turned out to be just like every other man. \n\nSo, we'd talk whenever one of the ghosts from her past reared its ugly head. Ultimately, each of those shades was laid to rest. It was touching really, watching Aimee slowly come to trust me. And for my part, those discussions convinced me that she would die rather than betray me. Which of course, was somewhat credulous given her former profession. \n\nStill, I was more convinced of Aimee's fidelity than I would have ever been with an ordinary woman. Aimee had survived the worst life had to offer. So, she understood the value of her present situation, and she made no assumptions about its permanence. That fact, more than anything else, cemented my belief in our long-term prospects.\n\nWe got back to discover that Pat and Aphrodite had been busy. May had bought a prime plat downtown and our two friends already had a big tent set up: doing a land-office business. The frame of the permanent structure was laid out behind it and construction was a beehive of activity, since there were plenty of miners who needed a grubstake. \n\nI drifted down to the Pike's Peak offices, while Aimee and Pat oversaw the building. I had a plan that I wanted to set in motion. It was the first fruit of an agreement that Aimee and I had reached. She was still the manager of the best little whorehouse in Denver. But we were eager to get married. So, I had to find a way to support us. \n\nMy ace-in-the-hole was the stake that I had left over from my last whaling voyage. Was that only three years ago? \n\nAt any rate, it was sufficient to set me up to fleece the thousands of fools rushing to make their fortunes in the gold fields. In fact, in many ways mining supply was as immoral as my soon-to-be spouse's former profession, and it was considerably more lucrative. \n\nI made an agreement with the manager at the express office. For a small percent of the profit, he would ship in the goods. Then I would sell them at twenty times the price. Our arrangement would make us both rich. \n\nFor her part, Aimee had hated being part of May's stable. But she had learned the trade inside and out and she was an astute businesswoman. So, she had pledged to oversee the burgeoning cathouse; until Aphrodite felt confident enough to replace her. \n\nShe told me that it was a male fantasy that the women enjoyed the sex they were selling. She called it dirty and demeaning. But on the other hand, it was necessary to survive. I recalled that she had told me that very same thing the first day we met.\n\nWe lived in a small tent next to the big one. By day, I worked in my supply business. Then I spent every night hanging around in the main tent, tending bar with Pat and providing a deterrent to any rowdy miners. \n\nInitially, Aimee had a problem with my presence. I finally took her aside and said, \"Do you love me?\" Her odd violet eyes flamed with intensity. She said, \"How could you ask me a question like that, when you hold my very soul in the palm of your hand.\" \n\nI said, \"Then why are you acting so standoffish? You're supposed to be the proprietor of this place, not the local Women's Christian representative.\" \n\nShe looked at me quizzically and said, \"I was??!!\" I laughed and said, \"It's like you're here to stamp out the sin of prostitution.\" \n\nShe said appalled, \"Seriously??!! Oh Lordy!!\" \n\nI took her exquisite little pointed chin between my two fingers, tilted her head up so she was looking directly into my eyes and said lovingly, \"I have no doubt that your heart is utterly mine. I also know you would never betray that love. So, go back in there and be your usual stunningly sexual self.\" \n\nThen I added stone faced, \"Just don't disappear into the back to fuck any of the customers.\" Aimee looked horror stricken. Then she saw my face melting into a laugh. She made an exasperated sound, slugged me on the arm, and returned to the evening's trade. We had no problem with customer satisfaction after that. \n\nI was there every night. So, I would have known if Aimee had ever dabbled in her former calling. She, for her part, was almost pathologically wary of even going near the back of the tent. It was hilarious really, watching her pussy footing around the hosting duties. And of course; she killed me with kindness every night. \n\nAimee and I were married on the twenty first of July, eighteen hundred and sixty-one. That was a date made significant by more than our wedding. It was the date of the first battle of Bull Run. \n\nIt was no doubt inevitable that the people back east would fight a war over slavery. But it was still a surprise when the two parts of the country transitioned from inflamed rhetoric to actually shooting at each other. \n\nIt didn't affect the people out west in the slightest. The supplies continued to flow, because money was to be made. The miners still brought their gold down and the fellows who didn't want to fight for either side had all developed an interest in visiting us. \n\nSo, we had the likes of Henry James, Mark Twain and William Dean Howells pass through our doors, even adventurers like Bill Cody. \n\nBy that point, we had gotten a fancy bordello built and Aphrodite had taken over Aimee's role as the madam. Aimee, for her part, turned her firm hand and astute business sense to running the supply operation. And thanks to her we were making money hand-over-fist.\n\n*****\n\nOne bright and shining summer morning I walked into the store to find my wife sociably chatting with an Indian maiden. That was such an odd sight that I nearly spilled my coffee. Then the Indian turned to face me, and I dropped the cup. It was Abigail!! And she had prospered. \n\nAbigail still had her pretty face, which was smiling in greeting. Her china-blue southern belle eyes were calm and peaceful, and she looked happy. The old Abigail had been nervous, pail and a bit chubby. The woman in front of me was rawhide, clearly tough and in charge. \n\nAimee knew that Abigail's appearance would surprise me. So, she quickly added, \"Abigail has some news for us dear.\" It is something you'll want to hear.\" \n\nAbigail said cordially, \"It's good to see you Jacob. You were always kind to me, even though I wasn't in my right mind most of the time. Now I'd like to do you a favor.\" She opened her hand to reveal an odd grey rock that clearly had a gold seam in it. \n\nShe said, \"Some of the men found this. We have no need for this devil's material. But we know that you whites put much value on it.\" \n\nI thought, \"We whites??!! Doesn't she recall that she's a former lily-white planter's daughter?\" \n\nAbigail continued with, \"I will show you where we found it. I believe it will be something that you and my sister can use.\" \n\nIt sorta made sense. Abigail and Aimee were in fact half-sisters. And Abigail had voluntarily followed Aimee when she was sold to May. Even after that, we had pursued Abigail after she was abducted and honored her wish to stay with her abductors. \n\nSo, there was a deep connection. Perhaps Abigail was leading us to something more than just a single nugget of gold. Hence, I saddled a mule, kissed Aimee goodbye and followed Abigail, or \"Heron-Woman\" as she now preferred to be called, out of town. \n\nThe same two Indian men were waiting for us, up the trail. We proceeded west in the general direction of the Clear Creek canyon. There was a lot of gold mining going on up there. But my guides turned and headed slightly north, and into the initial elevations of the front range. \n\nWe rode for several hours, until we reached a pine filled split in a sheer rock cliff. The day was getting hot. So, it was a relief when the man, who had actually been situated between Abigail's legs during our last encounter, dismounted and entered the cool shade of the gap between the rocks. It was perhaps thirty yards wide and full of ponderosas. \n\nHe walked a short distance and then pointed at the rock face and sure enough, there was a distinct gold seam in it. I used a little assayer's pick to knock off a chunk, nodded at him and we walked back to where Abigail and the other, ahem...\"husband,\" were waiting. \n\nAbigail said pensively, like she had been waiting a long time to say it, \"That repays my debt to you two. You will never see me again. Rest assured, I am finally happy.\" \n\nThe three of them turned their ponies and trotted off. I watched them go. In her own way, Abigail had suffered like Aimee. I was glad she'd finally found peace. \n\nI got back to Denver that evening and headed straight for the Assayer's Office. I wanted to find out just how lucky we were. The nuggets in my saddle bags looked relatively rich. So, it was clearly a claim I might want to stake. \n\nThe assay office in Denver was more than just a single guy at the back of a little shack, like it was in most of the gold towns. This one had the staff and equipment to do timely evaluations of the ore that was being brought down from the front range. \n\nI wanted the assay done fast. So, I dropped it with the Head Assayer, who was an acquaintance of mine. Then, I went back to the sumptuous new house that we had built from the proceeds of our supply business. \n\nAimee was puttering in the kitchen. She said, vaguely interested, \"Was there something there? Abigail was always overly melodramatic.\" \n\nI said, \"There was something. But I don't know what.\" \n\nThen I added, \"On the other hand, Abigail seems to have found her place in life?\" \n\nAimee smiled and said, \"Yes, she has two virile husbands and a child.\" \n\nI added, to change THAT subject, \"Well, I took what they showed me down to the assay office. We'll know tomorrow whether it's worth staking a claim.\" \n\n*****\n\nIt was a warm and sunny Wednesday morning, as I strolled into the Head Assayer's Office. Seth was an older fellow. It was rumored that he had been a professor back east. That is, until he got caught fucking one of his students. Now he assayed rocks in the ass end of nowhere. Such are the wages of sin. \n\nAnyhow, he was an affable guy; loved to talk like most of those overeducated fellows. He said, \"You've got yourself a rich vein Jacob. But it's hard to get a firm estimate of how much gold since the rock that the gold is embedded in is pure silver.\" \n\nDid he just say SILVER? The whole cliff face was made-up of that material!! Seth chattered on oblivious to my astounded reaction, \" He was saying, \"That happens a lot in this area. God must have been pretty irate when he formed our mountains because everything's melted together.\" \n\nI said unbelieving, \"You're telling me that the two samples are nothing but silver and gold?\" Seth said, \"Yep, it looks like you hit a mother lode, alright.\" I'd get down to the government claims office as fast as I could If I were you.\" \n\nSo, that's the story of how Aimee and I became unspeakably and somewhat undeservedly rich. \n\nWe registered the claim that very day, and we staked it that evening. Then I cut Pat in for a third of the profit, if he would help me get the ore out. He and Aphrodite already had two kids by that point, and they needed the money. \n\nWe made hasty arrangements for people to take care of the whorehouse and the supply store. Then, we rolled out of town in our faithful Conestoga headed for a camp near Clear Creek. We needed to vanish fast. Since Seth was bound to talk; and people got killed for a whole lot less. \n\nThe mining was relatively straightforward. The vein ran right down the side of the split in the rock face. So, we didn't have to do much digging. I was still in my twenties and as robust as ever. Pat was a hard worker and Aphrodite was stronger than he was. Aimee's main job was to discourage visitors. She did that with her Henry. \n\nIt was backbreaking. But we eventually pulled a little over twenty-million dollars' out of that claim. And in that respect; a couple of whores, a peripatetic Irishman, and an itinerant sailor did pretty well for themselves. \n\n*****\n\nThere were a number of paths that our lives could have taken after that. But Aimee's and my direction was set by something that occurred one fine evening in April of the following year. \n\nWe were dining at Pell's Oyster House. I hear you say... Oysters?!! Denver is a thousand miles from the sea. How in the world could you be eating oysters? Well, the new Transcontinental railroad let suppliers ship those tasty little beasties in alive, in portable tanks. And so, oysters'd become all the rage in Denver. That is, if you could afford them, which we could. \n\nAimee causes a stir whenever she appears in public. She's just that extraordinarily beautiful. But she was particularly stunning tonight. She'd swept into the restaurant in a silk dress that was one shade lighter than the deep violet of her eyes. And while being entirely appropriate, it showcased every inch of her astonishing figure. \n\nThe place was crowded. But a fellow immediately caught my attention. He was sitting with a group of four men at a table against the wall. Denver had become quite the commercial hub once the Colorado Central hooked us to the Transcontinental Railroad at Cheyenne. And those guys were obviously, in town to drum up a little business. \n\nThe stranger gawked at Aimee. Then he said something excitedly to the group and they all turned to stare at her. Every other guy in the place was surreptitiously checking my wife out. So, it wasn't odd that she had the undivided attention of a table full of horny males. It was just that this group was being so blatant about it. \n\nThen the man, who had originally noticed Aimee, pushed back and strolled toward us. He was clearly a salesman, dressed a little too flashy in a checkered suit and a derby hat. He had a wide, knowing grin plastered on his fat face.\n\nWe were sitting in intimate little alcove at the back. I always make sure that the ma\u00eetre-de seats us in the best spot. Under the gaslights, Aimee was a study in serene beauty. She had her back to the approaching man, so I tapped her on the hand and nodded behind her. \n\nShe turned and regarded him curiously. He seemed absolutely thrilled to see her. He said jovially, \"Hello little lady. I wondered where you'd gone after you left New Orleans. I want to buy some of your special loving tonight. That is, once you've finished with this fella.\" \n\nWe were both a long way from May's, in both miles and personal history. But Aimee is indeed an unforgettable woman. And this guy was clearly a former customer!! Aimee gave me a panicked look. I returned a nod that said, \"Let me handle this.\" \n\nWith that, the hurricane shutters slammed shut across my wife's eyes and she got that opaque expression that I knew so well; and utterly hated. It killed me to see how quickly she could disappear behind the forbidding walls of her psyche. \n\nI stood and said in a tone that made it clear I wanted this fellow to go away, \"You must be mistaken my good man. This is my wife.\" \n\nHe totally missed what I'd just said, because he was staring hungrily at Aimee. He said excitedly, \"I've fucked a lot of whores. But you're the best. Where are you working honey?\" Mercifully, he was facing into the alcove. So, only Aimee and I heard that. \n\nI didn't want to create a fuss. So, I grabbed his arm, spun him and marched him out the door. He protested every step of the way. But his complaints fell on deaf ears. \n\nThis guy had no idea of the danger he was in. He saw a rich man, well-groomed and fashionably dressed. But we ALL have a past. It takes fearsome strength and utter ruthlessness to throw a thirty-pound whale-iron with sufficient force to kill a whale. More relevant, that primal ferocity lurks underneath my surface, like a river of molten lava. \n\nThis man's imprudent words had brought it ALL to the surface. So, I dragged him into the alley, picked him up and slammed him against the wall. The thunderous impact knocked the wind out of him. I was still holding him pinned against the wall, when he finally got his breath back. I said through gritted teeth, \"You are going to die right here in this alley if you don't immediately go inside and apologize for your error.\" \n\nHe could see pure homicide in the flickering light of the gaslamps and he was shaking terrified. He nodded weakly. He had already pissed himself. I put him down very gently and brushed off the back of his suit coat, which had flecks of paint embedded in it. Then I silently gestured for him to proceed back to our table. \n\nHe walked straight up to Aimee, who was gazing at him with the hooded-eyes that I had seen so often in our trip west, and meekly said, \"I apologize for my confusion madam. I can see now that you are a completely different woman.\" \n\nAimee smiled graciously and with considerable underlying significance, she said \"I understand. People often misperceive me.\" Then he turned and scuttled away.\n\nI looked eloquently at my wife and said, \"Shall we return home my dear. I don't believe there is anything left for us here.\" She rose gracefully, offered her hand and said, \"Yes, I've had more than enough.\" \n\nOn the way home she asked me, \"What did you do to him out there? We felt the whole building rock.\" I said mildly, \"I just explained the disastrous effects of bad eyesight and he accepted that observation.\" \n\nAimee gave me one of her cat-like smiles and proceeded to spend the rest of the night trying to kill her \"Knight in Shining Armor.\" \n\n*****\n\nThat incident made the choice for us. We had to get as far away as possible from Aimee's past. So, we would reinvent ourselves in the most populous city in America. Therefore, unlike most people of our time, we headed EAST to the fabled isle of Manhattan. \n\nWe bought a mansion off \"millionaire's row,\" right next door to Pierpont Morgan's palatial manse. I'd struck up a friendship with JP while I was investing our gold and silver holdings. He was young then, not the old walrus you see in the pictures, and just getting started. So, he needed capital. Accordingly, ours was a partnership made in heaven. ",
        "Of course, New York society didn't know what to make of us. We were young and fabulously wealthy from mysterious sources out west. Plus, I was clearly NOT a gentleman. Luckily, stories about the wild-west were en-vogue back then. So, they treated me like a cartoon cowboy. Which was paradoxical, since I was born two hundred miles EAST of Manhattan.\n\nSociety was just as mystified by Aimee. My wife was unquestionably the most beautiful woman in New York City. She had a style that reflected her French, Creole and planter roots. And her natural sensuality drove men wild. \n\nThe women, particularly the doyens, didn't know what to make of her. But Aimee was so seductively charming that she was a highly sought-after commodity among the \"best\" sort of people. \n\nThe problem was that, we both hated snobs and that killed any interest we had in being part of \"society.\" I found the parties tedious. Aimee was equally bothered. But life had taught her how to disguise her feelings, especially her disdain. We mainly just existed for each other and that was good enough for both of us. \n\nWe had staff to take care of the mansion. So, we spent a lot of time traveling. The rail system had matured to a point where unthinkable distances were routine. It had taken us almost nine months to go from New Orleans to Denver in 1860. Now, we traveled from New York to Denver in a couple of days, comfortably ensconced in our personal railway coach. \n\nThat kind of convenience allowed us to visit places that were important to us. For instance, for our fifteenth wedding anniversary I took Aimee camping at the remote table rock where we first made love. Yet, that wasn't the best anniversary. \n\nFor our twentieth, I took Aimee all the way down to New Orleans. She was hesitant at first, given her associations with the place. But I told her that she just HAD to see a rising young musical talent. She thought I had lost my mind, since she knew I didn't like music. But she went along with it because she loved me. \n\nThe guy played the horn and sang something called \"The Blues.\" It was considered \" African\" back then, strictly bawdy house music. But this particular fellow was getting a name for himself as a magician with that new art form. \n\nHe was only twenty-three years old. But he could mesmerize audiences with his soulful sounds. That was why Aimee and I were sitting in a rickety old hall in the French Quarter on the sultry night of July twenty-first eighteen hundred and eighty-one. \n\nIt had been a low-key affair to that point. The only special part was the magic of this guy's music. I could see that Aimee was entranced by his absolute artistry. I'd already bribed the proprietor. So, the youthful virtuoso came over to sit with us when he'd finished playing. \n\nHe was bright and charming, very good looking and he sported the latest, flash New Orleans style. He was obviously a ladies man and Aimee was by far the most beautiful woman present, even in her fortieth year. The man couldn't take his eyes off her. He began to outrageously flirt, and of course my sensual wife was happy to return his attention. \n\nMoney buys power. Accordingly, I was able to summon Alan Pinkerton, himself, down to my little office off Madison Square. I told him that I had a job for his agency, and I was willing to pay an absurd sum to get what I wanted. \n\nPinkerton was a Scot. He loved money. So, he pocketed the unheard-of sum of twenty-thousand dollars up front. It took a year. But his agents finally came up with a name and a location. Now it was time. \n\nAimee and the young man were sitting in the dim and smoky room, chattering away sociably, when I abruptly interrupted them. I said, \"Louis is a very accomplished person and he has quite a story.\" They both looked at me puzzled. Why would I bring that up? \n\nI added casually, \"He taught himself to play the trumpet and he came down to New Orleans from Natchez back in seventy-four. He was just fifteen. He may only be twenty-three now. But he's already something of a New Orleans legend.\" \n\nThey were both staring at me mystified. Besides sounding like I'd lost my mind; how did I know all of that? I said smugly, \"I'll let you two in on a little secret. But you will have to promise me that there won't be any unseemly displays.\" \n\nThey continued to stare at me. Aimee was baffled. Louis was getting angry. He said, \"What's this all about, man??!!\" \n\nI leaned in conspiratorially and said, \"I spent a lot of money to find this out. So, please take what I'm about to tell you as my gift to both of you.\" \n\nI paused for effect. Then, with a melodramatic flourish I said, \"Aimee, I want you to meet your son, Louis.\" \n\nAimee sat for a split-second speechless. Then she passed out colder than a mackerel. Louis just looked at me confused. I was trying to manage Aimee's dead body as I said, \"Give us a second.\" He nodded still looking bewildered. \n\nAimee came around almost immediately. So, I hoisted her onto her feet and walked her out into the street. She was completely flustered as we stood under the gas lamps. I had never seen her like that. By way of explanation I said, \"The first thing that I knew about you was that you were mourning the loss of your child. I love you. So, I paid Mr. Pinkerton to find him for you.\" \n\nShe looked like she was trying to believe me. But it was still just so overwhelming. She stared at me solemnly as I added, \"Your boy was freed after the war. He grew up being taken care of by one of the older women in the house. He thinks she's his mom and we can walk away from here right now if you want him to keep believing that.\" \n\nI said with sincerity, \"I just wanted you to see what a fine and accomplished young man he's become.\" I kissed her and said appreciatively, \"The apple doesn't fall far from the tree\" Then I added, \"So, do you want to go back in there?\" My wife's a warrior. She runs from nobody. So, of COURSE she wanted to go back in there. \n\nAimee's incredible violet eyes were flaming as she said, \"What you've done is the kindest thing imaginable. My heart had a hole in it. Now, you've mended it. I will love you forever.\" \n\nAimee's son was still sitting at the table looking totally gobsmacked. We quietly sat down, and I explained the circumstance of his birth, without giving him too much of the painful detail. He understood. Every former slave would understand that story. \n\nI said sincerely, \"I know you think that Mama Elizabeth is your mother and for all intents and purposes she is. But my wife is your biological mother and she has mourned your loss every day of her life.\" \n\nI finished with, \"I just wanted her to see what a fine person you've grown into and how successful you've become.\" I added kindly, \"I'm going to leave now. I know you two have a lot to talk about.\" They were both openly weeping as I made my way out the door. \n\n*****\n\nSo, I closed the book on Aimee's regret and the years passed into the next century. A lot of the pleasure of growing old comes from sharing life's experiences with a special someone. And nobody was more precious to me than Aimee.\n\nIt's scary, when you get to the point where you're aware of the diminishing time you have left. That thought had never crossed my mind when I had uncounted days in front of me. Yet, one of the things about life with the right person, is the joy that comes with each passing day. \n\nLike the Louisiana weather, Aimee was a woman of shifting moods. She could be sunny and silly and then deep and sympathetic in the same hour; whatever was necessary to ensure our happiness together. \n\nIn that respect, I have never known a woman so in tune with the moment. I don't know whether Aimee could sense my moods and then adopt herself to them; or, if we were just so alike. But we were totally sympatico in so many ways.\n\nSure, we had disagreements. Intellectually, Aimee was the strongest person I knew. She'd been forced to keep her nature locked behind adamantine walls just to survive. Now she had somebody to love, and who loved her in return. She could finally be herself. \n\nMy wife is a Cajun by birth. She's fiery. I benefitted from that passion even as we aged. But the ghosts of her past were too deep-seated to be totally banished. So, there were times when they would get the better of her. Sometimes she'd cry. Once in a while she'd fly into a rage. Yet, we never had a time when we didn't know why the other person acted or felt a certain way. \n\nMyself? I had no real regrets. When I was pulling an oar in a whaleboat, I could never have imagined that I would be as wealthy as I was. I had lived a long life with a marvelous woman. And I'd spent nearly seventy adventurous years doing whatever caught my fancy. \n\nWe'd built a mansion on Oyster Bay, near Teddy Roosevelt's Sagamore Hill. Ours was an unpretentious little place; thirty rooms, a dozen baths and eighty acres. By that point in our life, both Aimee and I had gotten used to the better things in life. \n\nLouis roomed with us when he was playing in New York City. He was a charming and intelligent addition to our family. Aimee adored him. His stepbrothers and sisters all thought that he was \"jazzy\" whatever that meant. I knew that was the type of music that he played. But somehow, I suffered by comparison. \n\nI was still a sailor, at-heart. So, I wanted to spend my remaining time near the sea. I had a seventy-foot schooner docked at the foot of the property, in Oyster Bay Harbor. Aimee and I would explore up and down the east coast, often as far south as St. Augustine, even Miami. But I was the captain of that ship, not a hand on it. \n\nStill, there was still one open account. And I knew that I would not die a happy man if that debt wasn't paid. It was the reason why the other part of the fortune I gave to Pinkerton was to track down one Esau Briggs. \n\nPinkerton was long-since dead. But his agency never quit. They finally located Briggs in Europe, which was why he had been so hard to find. The varmint might have scuttled overseas because he was afraid of me. But he stayed there because things were a lot more civilized. \n\nBriggs had been living in London for the past fifty years, off of his father's money. And so, I went down to the Cunard office in Manhattan that very next day and bought a passage for two on the Mauretania. \n\nLondon in 1911 was a splendid place. It was the capitol of an empire where the sun never set and the wealth that poured into that city had created monumental buildings and splendid mansions. We rented one of those on Berkeley Square. \n\nNeither Briggs, nor I, were young men. And I would never have had Aimee, if he hadn't seduced Faith. So, it might sound obsessive to pursue a grudge over half a century. But it was time to draw a line under that account, once and for all. I had carried the emptiness of Faith's betrayal since the day I'd learned of it and I had to know the reason why. \n\nBriggs had been the son of the richest man in New Bedford. Now, his circumstances were greatly reduced. By the first decade of the twentieth century, electric lighting had replaced whale oil lamps and Mr. Rockefeller's kind of oil was industry's lubricant of choice. So, the whaling industry had long since hit its apogee. \n\nBriggs was living alone. He owned a little rowhouse off Drury Lane, on Dryden Street, on the back side of Covent Garden. The Theater Royal and the opera house were nearby, and the Garden itself was always busy. So, he was probably enjoying the good life. But things had been on a constant downward spiral for him financially. \n\nEvery morning, he would take coffee at a little shop on Maiden Lane, just off the market. I'd watched him for a couple of days before I spoke to him. No, I didn't plan to kill him. Too much water had flowed over the dam for that. And I had met and married the woman I was meant to be with. But Faith's shade still demanded satisfaction. \n\nI approached Briggs as he sat at a table outside the coffee house. To ensure privacy, he had dragged it into a corner behind a faux-marble pillar. It was shady and pleasant back there. Briggs was reading last night's copy of the Daily Mail. \n\nI had left Aimee at our residence. This was between me and my past. Aimee absolutely understood that. She had a few lurking specters of her own. \n\nBriggs shoulders had a defeated slump as he lounged in his chair. It was like life was weighing him down. I remembered him as small and dapper, a real dandy. This man was obese. But he still wore the height of London fashion. It was threadbare, like it had been worn too many times. Perhaps it was his only outfit. \n\nI felt myself slipping back to the way it was in the time that I'd pulled an oar. Briggs had never bullied me growing up. That would have been crazy. Since, I was a lot bigger and tougher than he was. But he had always treated me with contemptuous superiority. \n\nHe looked up startled and angry. How dare I intrude on his morning coffee. What he saw was a big and very rich gentleman; dressed in a bespoke brown silk Granville suit and vest, carrying an expensive walking cane. I was wearing a wide brimmed fedora, all the better to hide my face. \n\nAs I plopped down in the chair across from him, I said in a hail-fellow-well-met tone, \"Hello Esau, it's been a long time.\" My familiarity puzzled him. I obviously knew him. But he had no idea who I was.\n\nHe said in an irritated voice, \"I'm taking my morning coffee my good man. Why are you bothering me?\" \n\nI doffed my hat and leaned forward to look him directly in the eyes. I said in a menacing tone, \"I wanted to talk to you about Faith Polk, you'd remember her as Faith Ivarsson.\" Then I put the hat back on. I wanted to keep my face hidden.\n\nBriggs finally recognized me. His first expression was horror. It was as if his worst nightmare had sprung up on a London street. I said, sociably, \"No, I'm not here to kill you. I probably should. But I've led a happy life. I just want to hear the story.\" \n\nThen I gave him a look that disclosed my true feelings and added calmly, \"It had better be truthful or I might reconsider.\" \n\nHe sputtered, \"How can I remember an incident that took place fifty years ago??!!\" \n\nI said ominously, \"I've remembered it every day of my life. Now it's time for you to lay those memories to rest for me. What happened between you and Faith?\" \n\nThe old Esau Briggs was beginning to appear. He couldn't help it. He was just too fundamentally narcissistic. He laughed and said, \"It was simple.\"\n\nHe paused to savor my look of pain, smirked and added, \"I'd always wanted Faith. But she never had eyes for anybody but you. I was in Baltimore when I heard about the hurricane, and it gave me an idea. I knew you wouldn't be back for a couple of years, even if your ship wasn't in it. So, I made up a story.\" \n\nHe stopped, grinned, and said with a wink, \"Your mother didn't believe me. But Faith did. It was like she expected something to happen to you. She told me that she had always known she'd lose you. She felt it, every time you sailed away. She said that she just loved you too much.\" \n\nThat shot an excruciating thunderbolt of agony through me. \n\nBriggs was boasting now. He said, \"Faith went into deep mourning. At first, she wouldn't eat, and she slept constantly. It was like she wanted to die too. I kept coming over, bringing her food, holding her while she cried.\" \n\nHe was getting into it, like he was reliving it, \"I told her over-and-over that she had to let you go. That you were dead.\" \n\nHis conceited grin was becoming nauseating as he added, \"She would constantly ask me if I was sure. I swore on a stack of bibles that it was true. I was a factor and we knew those things. Your ship was one of the ones that was lost, and you were gone.\" \n\nHe glanced at me amused. \"Then one day, she was crying, and I was holding her. She looked up, just for reassurance I think, and I surprised her with a deep kiss. She resisted at first. But I knew that all of her pent-up feelings had to go someplace. Finally, she groaned and began kissing me back. That was the first time.\" \n\nHe stared at me, taunting, \"Her tits were just as beautiful as I imagined, like big soft pillows. And she was absolutely wild once I got her going. It was like she couldn't get enough of it.\" I knew Faith, she was both passionate and needy. She'd be insatiable once the line got crossed. \n\nBriggs laughed and said, \"I'd been enjoying her tight little cunny for a couple of months when she announced that we were going to have a baby. She was overjoyed.\" \n\nCould the pain get any worse?\n\nBriggs finished his coffee and said dismissively, \"Of course that wasn't going to happen. She'd been fun for a while. But the thrill of conquest had already worn off. I was gone on the next ship to France.\"\n\nThen he added mockingly, \"I hear she died having the kid.\" He chuckled and said, \"Serves her right. Women are just cunts.\" \n\nI was staring into Briggs's smug face while he recounted my wife's debasement. He was enjoying my look of pain and sorrow. It was the last thing he ever saw. The jury was back. The verdict was rendered. The penalty would be death. \n\nSword canes were popular in London prior to Bobby Peel's Metropolitan police. They were the only way a gentleman could defend himself, short of openly carrying a blade. So, there were plenty of nice ones still available.\n\nMine was a beautiful lacquered piece, black with a big shiny brass knob. Hidden inside, firmly attached to the knob, was an ultra-thin, two-foot, razor sharp, tempered steel rapier. I had been covertly slipping it out, as I listened to Briggs boast about my wife's ruin. \n\nHe had an instant to realize what was about to happen. His eyes filled with panic. I hissed with fifty-two years of pent-up hatred, \"This is for Faith!!\" \n\nThen I used my fearsome strength to drive the blade up from underneath the coffee table and directly into his heart. The kill was silent and clean. There was no blood, just death. His look of dread vanished almost instantly, to be replaced by one of nothingness. \n\nI secured Brigg's corpse with my left hand, while I slipped the sword back into the wooden cane body with my right. Briggs deserved much worse. But that was all the justice I could administer under the circumstances. I prayed there was a hell. \n\nThen I made a production of bidding Briggs's carcass a fond adieu, just in case anybody was watching. People would eventually realize he was stone-cold dead. But by that point, I would be a phantom. The business with my past was concluded and the account had finally been closed.\n\nI had mixed emotions as I strolled back to our place. The debt had been wiped out and I could spend my remaining days with my perfect friend and lover. Yet, I still had to wonder what my life would have been like if Esau Briggs had never been born. \n\nAimee was waiting with the guarded look that she had perfected in her former trade. I said simply, \"He's dead.\" She asked the practical question, \"Any witnesses?\" \n\nI shrugged and said, \"Probably... But they only saw Briggs talking to a sport in a fedora, not a financial tycoon like me. He died too fast to make a fuss.\" She said, \"Any regrets?\" \n\nI said, \"Only that I won't live forever. Because, I have the world's most wonderful woman to spend my life with. I have no misgivings about dispatching that son-of-a-bitch.\" \n\nShe said, \"What happens next?\" I said, \"Let's do the grand tour, London, Paris, Berlin, Vienna, Rome. I want to stay in Europe until next spring.\" \n\nMy canny wife got that familiar look. She knew I needed comforting. It was early afternoon. But Aimee reached over, took me by the hand and led me toward our bedroom. She wanted to make a salient point about our eternal partnership.\n\nHer statement amounted to a couple of hours of unbridled passion. It was a wonder to me that a seventy-two-year-old man could perform like I did. But of course, anything is possible when your partner is as sensual as my incredible wife. ",
        "As we lay there panting, she said puzzled, \"Why are we waiting until spring?\" I said excitedly, \"I've seen a lot of change at sea, from wooden sailing brigs to steel passenger liners. But I have never seen ANYTHING like the ship I've booked us on.\" \n\nI continued to enthusiastically prattle, \"It'll be its maiden voyage and they say that it's the fastest, and most opulent liner in the North Atlantic trade. Plus, it incorporates all of the new advances in ship design. Why... The Titanic is even unsinkable.\" \n\nEPILOG\n\nIt was utter pandemonium up on the boat deck. They were blowing steam off, from the valves high up on the funnels and the thunderous boom added to the confusion. \n\nThe time was just past one AM and there were people milling around, mostly just confused, as Second Officer Lightoller commenced loading the lifeboats. I saw the fear and desperation on his face. I thought, \"This is real!!\"\n\nThe night was cold and crystal-clear. There was an outrageous panoply of stars. I'd seen a lot of skies in my time at sea. But this diamond studded, back-velvet canopy was remarkable. \n\nI put my arm around Aimee and pulled her to me. She was wearing one of her full-length mink coats to ward off the chill. I was wearing a heavy tweed all-weather cape and flat-topped shooting hat. \n\nAimee's maid Ellen was with us as was her friend Betsy, who was Lady Allison's maid. The two shared a second-class cabin together. \n\nWe approached lifeboat 8, which was our assigned station. Captain Smith had never actually held a formal lifeboat drill. There were too many people of quality on board to attempt that. But the number of the boat that was assigned to our stateroom was written on a little placard next to the rosewood door of our suite. \n\nI heard Lightoller calling out, \"Women and children only,\" as he and the crew boarded the people clustered around the boat. We walked up together with Betsy and Ellen. There were already perhaps twenty women in the lifeboat along with a few crew members. \n\nLightoller gallantly assisted Aimee, as she stepped gracefully over the side. Then Ellen came forward. Lightoller barred her way. He said, \"I'm sorry Miss. But we only have room for one more.\" He turned to me and said politely, \"You're next Sir.\" The look of panic in Ellen's eyes was heartrending. \n\nI knew what Lightoller was saying. We were obviously first-class passengers and Ellen was just a maid. I'm no social warrior. But there was no way I could EVER live with myself if I preserved my own ancient hide, while this young woman went down with the ship. \n\nSo, I said, \"I will not board while there are still women and children remaining on the ship.\" And I gestured for Ellen to take my place. She looked at me bewildered. I said brusquely, \"Get on the boat girl! I'm not going!!\" \n\nWith that, Ellen stepped over the side and into the lifeboat. Aimee was watching the exchange from one of the boat's benches. Aimee stood up the moment Ellen came aboard. Lightoller said annoyed, \"Please, sit down Madam. We are about to winch away.\" \n\nAimee removed her fur coat and gently handed it to Ellen. She said kindly, \"Take this dear. You will need it to keep warm. I won't require it now.\" \n\nThen she gave Lightoller a formidable stare and said, \"I will NOT be separated from my husband. As we have lived, so will we die ... TOGETHER,\" and to my absolute astonishment, my wife stepped back OUT of the boat. \n\nI said anxiously, \"You have to get back in the boat my love. Nobody will survive in this frigid water.\" There are times when Aimee's odd violet eyes seem to glow with the deep fires that power her soul. She touched my cheek and said affectionately, \"Now don't argue with me Jacob. You know you'll never win.\" \n\nThen my wife turned and pushed Betsy, the other maid, into Lightoller's arms. She said in a voice that brooked no disagreement, \"This woman will take my place.\" I was looking at Aimee with a mixture of wonder and dismay. She gave me one of her patented alluring glances, took my arm and said fondly, \"Where you go, I go.\" \n\nWith that, we strolled over to a couple of nearby deck chairs and sat. We both realized that we were going to die. Still, everybody dies someday and today was as good a day as any. At least we would go together. It would be a perfect ending to a lifelong love.\n\nWe talked about the early days, as the deck continued to tilt. In the end, I took both of her hands in mine and said fervently, \"Forever!!\" She gave me a loving smile and simply said, \"Yes.\" Her violet eyes consumed me as the plunge began. \n\nAUTHOR'S NOTE:\n\nI have to apologize to the Titanic buffs, like me. Since, you'll recognize that I \"borrowed\" the story of Isidor and Ida Straus for the epilog. What you read here actually occurred as I recount it, using their own words. It is in my own not so humble opinion, one of the most romantic incidents of the entire Twentieth Century. \n\nJames Cameron chose to immortalize their ending by portraying the two old people snuggled together in their cabin as the rising water took them. But in my mind the reality is much more romantic. You can almost see the two of them calmly sitting there, in the chaos of the boat deck, knowing they're going to die, but wanting to leave this life holding hands. \n\nThe cable ship Mackay-Bennett recovered Isidor's body a few days later. Ida's was never found. A cenotaph at their mausoleum In the Bronx is dedicated to their love. Its inscription tells it all: \"Many waters cannot quench love -- neither can the floods drown it.\""
    ],
    "authorname": "dtiverson",
    "tags": [
        "big tits",
        "highway song story",
        "prostitution",
        "revenge",
        "seduced wife",
        "travel"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/five-whores-for-denver"
}