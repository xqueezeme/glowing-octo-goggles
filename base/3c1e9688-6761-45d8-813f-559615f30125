{
    "title": "Kirby and the Spy",
    "pages": [
        "I love Spy stories, so I always wanted to write one. This is my go at it. A romantic espionage story set in Central Europe at the height of the Cold War. \n\nI want to give a very special shout out to LaRascasse for editing this story. \n\nThis story is a work of fiction. The characters are fictitious and certainly not intended to represent any living person. All characters are eighteen or older.\n\nKirby and the Spy\n\nMy interrogator adjusted his glasses, kept his gaze focused down on a thick dossier. \n\n\"Ms. Sawyer, I don't mean this as a threat, but your answers here today do matter.\" \n\nHis accent was a smooth Southern drawl, so he was an American. I had not seen him before so he must have flown here to Vienna from the states. An FBI agent perhaps. \n\nA newspaper sat in front of me. He slid it there at the start of the interview. Not meant for me or him to read, only to set the tone. A grainy black and white photo. A body bent in funny ways, blood soaked into the carpet beneath, saturating it so thickly that it glistened in the camera flash. Above the photograph in bold headlines the words: \"AMERIKANISHCER DIPLOMAT TOT IN WIENER WOHNUNG AUFGEFUNDEN\" - American Diplomat Found Dead in Vienna Apartment. \n\nThe font was offensively bold, making a dramatic caricature of the murder. \n\nWe were in a nondescript, egg-white room. Also in the room, a pair of microphones on the table, one in front of each of us, a tape recorder, and an ashtray heaped with ash. The overhead fluorescent light produced a steady electric hum. Moments earlier, he had walked in with two cups of coffee in his hand. \n\n\"Cream, no sugar, right?\" he had asked as he put the plain white mug in front of me. I didn't touch the mug. The cream swirled in it like a small hurricane. \n\nMy interrogator looked to be in his forties. Balding at his crown. Square, thin framed glasses, and a thick mustache, a wrinkled collared shirt at least a size too large and might as well have been government-issued. Same can be said for the mustache. At first, he avoided my eyes, focusing his attention instead on the tape recorder, tinkering with buttons to get it to work. Shortly, the twin reels spun. \n\nHe took a cigarette out and lit it and dragged thoughtlessly on it, scratching his furrowed brow as he flipped through a thick dossier. \n\n\"Can I get a smoke?\" I asked. \n\nHe nodded, pulled a fresh cigarette from his pocket and handed it to me. He handed me a lighter too. I wasn't much of a smoker, but I figured it would calm my nerves. I wheezed as I took my first drag. He didn't notice. He was completely engrossed in whatever was in that dossier of his. As he finished reading, he sat back in his chair and studied me silently. I smiled, trying my best to appear cool. I could sense some compassion in his tired grey eyes. This relaxed me a bit. \n\n\"Ms. Sawyer, I would like you to state it again for the record: Why are you here?\" \n\n\"Sure.\" I cleared my throat and spoke carefully into the microphone. \"I'm here because I'm acquainted with the man that was murdered... and the woman that murdered him.\" \n\n\"Who's the man that was murdered, Ms. Sawyer?\" \n\n\"George. I just know him as George.\" \n\nI added, \"I'm not sure if it's his real name.\" \n\nHe didn't react in any way except to scribble quickly on his notepad. \n\n\"And the woman? \n\n\"Lara.\" \n\n\"Full name?\" \n\n\"Don't know it.\" \n\n\"Describe her for me.\" \n\n\"Light green eyes, strawberry blonde hair. Tall, beautiful, a regular Jerry Hall. She said she's from Prague.\" \n\n\"She's Czech?\" \n\n\"Yes. Russian too. Her father is Russian. At least that's what she had told me.\" \n\n\"What makes you think she's the killer?\" \n\n\"I saw her do it.\" \n\nHe tapped his cigarette into the ashtray, placed it back in his mouth. The smoke from it rose patiently. \n\n\"To be clear, it was George who --\" \n\nHe put his hand up to cut me off. \n\n\"Before we get into that, why don't we just start from the very beginning. Start with how you first met Lara. I advise you to be completely candid with me.\" \n\n\"What's your name, sir?\" I asked. \n\n\"Call me Frank.\" \n\n\"Ok, Frank. Sure. Of course, I'll be candid. Well, I suppose I met her at the start of the summer. It was the middle of June. I remember it was a Wednesday afternoon. I remember the caf\u00e9 well...\" \n\n*** Lara *** \n\nSummer rain in Vienna is a sort of cozy loneliness I enjoyed. Breezy, droning, a welcome freshness against the normally stifling late afternoon humidity. The cars whooshed past, spitting water from their tires to the curb, and the trams packed with people played a ringing melody with their cheerful bell sounds when they came to the crosswalks, their metal wheels singing on the rails. \n\nThe book I had in my hand was Doctor Zhivago. I tried reading, but the soft pattering of the rain on the terrace canopy lent more towards people watching. The waiter brought my coffee. A m\u00e9lange, a popular Viennese coffee not unlike a cappuccino. \n\nVienna was a fresh start for me. A year prior, I had gotten out of a messy marriage to another foreign service officer. His name was Paul. The State Department always tries its best to accommodate the careers of two married employees, but sometimes, they simply can't. By the very nature of the job, when two married officers in the same cohort rise through the ranks together, they inevitably find themselves at a crossroads. Often one must sacrifice their career for the other. Paul asked me to quit. He dreamed big. He imagined being a senior diplomat, maybe even an ambassador someday. I imagined the same for me. I didn't want to be the ambassador's wife. We fought venomously about it, and, in the end, went our separate ways. He asked for Bangkok and got it. I asked for Europe and got Vienna. \n\nDoctor Zhivago once belonged to Paul. Given to him by a mentor in D.C. He hated it, so he left it behind. I took it with me. One of the few things in my possession that reminded me of our short, irreconcilable marriage. But it was something to read. So far, it wasn't a terrible book. \n\nA woman came running out of the rain and sat opposite me. Her bright yellow summer dress soaked in rain, clung wet and tight to her body. Likely, she had been out enjoying the sun and was caught unsuspecting by the afternoon cloudburst and had fled here for shelter. \n\nShe squeezed the water from her rain-matted hair. The waiter came and she ordered an espresso. She caught me staring, so I stuffed my nose back into my book. But I couldn't help peeking over the top of the pages to steal quick glances. There was something unordinary about her. Her face was sharp, soft, and pleasant, conveying all at once playfulness, mystery, and importance. Her lips painted a faded red, delicate eyeliner highlighted her eyes. Her eyes were the most striking part about her -- muted celadon green, curious and awake to the world as if she were the only person who truly was. \n\nShe put a cigarette to her lips, and stuffed her hand into her purse, searching fruitlessly for a lighter. Seeing this, I pulled mine from my purse. I didn't smoke at all, but I was advised by someone somewhere to carry a lighter in Austria. Being able to offer people a light was great for starting conversation, meeting new people. It served me well now. \n\nI motioned to offer it to her. She considered me for a moment with cautious eyes, stood up, walked over and leaned down with the cigarette in her mouth. Her green eyes watched mine as I sparked a light. I blushed. She puffed a long curl of smoke, smiled and said, \"vielen dank.\" Her voice was smooth like my m\u00e9lange. Immediately I recognized her accent as being from somewhere in the Eastern Bloc. \n\nShe pulled out her cigarette pack and offered me one. Her strange allure prevented me from refusing. I took one and lit it in my mouth. I sucked the sharp vapor into my lungs and coughed. \n\nShe grinned, then blew a smooth plume of smoke straight up into the wet air and sat back down in her seat. We sat like this for a few minutes, smoking in silence, the only two sitting at the quiet caf\u00e9, watching the street. She twirled her hair with a playful finger and looked out onto the street at the passing cars and pedestrians Halfway through her cigarette, she turned to me and said, \n\n\"I just love this caf\u00e9 for watching people. All sorts of interesting kinds come through here.\" \n\n\"It's not a bad place for it,\" I agreed. \n\n\"It's fun to guess about them. Where they're heading. Where they're coming from.\" \n\nA man walked by, newspaper over his head, a grim look on his face. \n\n\"This man for instance. I suppose he's heading home from work a bit earlier than usual. Most would find happiness in that. Not him. He dreads it. Must be trouble with the wife.\" \n\n\"I see. That's quite an astute observation. I'm sure you're right.\" \n\n\"You're making fun of me, but that's alright.\" \n\n\"I'm not.\" \n\nA young woman walked in the other direction. She had an umbrella, and she wore a cute, short skirt, and a revealing blouse under a brown leather jacket. \n\n\"She's going on a date. A second date likely.\" \n\n\"Hmm... I don't know. She could be meeting friends for dinner and a night out.\" \n\n\"Look at the hope in her eyes. The anxiousness in her hands. She's soon meeting a man she fancies very much.\" \n\nThe woman walked right by us, and then smiled brightly as she saw the man in question. They hugged tightly, then walked together off in the same direction. \n\n\"I have to admit, that was good.\" \n\n\"What's your name?\" she asked. \n\n\"Kirby.\" \n\n\"And where are you from, Kirby? America?\" \n\nI nodded. \"That's right. Chicago. Well, D.C., recently.\" \n\nJust as I said that a pang of fear struck my heart. I was warned at the embassy security in-briefing that I shouldn't volunteer information so eagerly. Vienna is a city of spies. I shouldn't show my hands so eagerly. \n\n\"I have always wanted to visit America,\" she said. \"Such a beautiful country.\" \n\nI shrugged and answered more vaguely, \"depends on where you go.\" \n\n\"I want to see it all,\" she replied with a sigh. \n\n\"I find it quite nice here,\" I countered. \"So, what's your name?\" \n\nShe took a drag, then, \"I'm Lara,\" then, in a whisper, leaning over as if to share a secret, \"like in your book.\" \n\nI looked down at the book. It rested cover down on the table. She must have noticed the title earlier, when I was reading it. \n\n\"I'll admit, I haven't gotten too far into the book yet. Any good?\" \n\n\"I wouldn't know. It is banned where I'm from.\" \n\nShe glanced innocently up at the canopy. \n\n\"Oh? And where's that?\" \n\n\"I'm from Prague. It's in Czechoslovakia. Ever heard of it?\" \n\n\"Of course, I have. I hear Prague's a beautiful city.\" \n\n\"Was a beautiful city. Not anymore. Now, it's dreadful. It's like living in a coal mine.\" \n\nShe intoned her words in a bored manner, as if she wanted nothing to do with her city or was at least emotionally detached from it. \n\n\"And you're the canary?\" I quipped. \n\n\"One who has escaped from her cage.\" \n\nI couldn't help but smile at her quick wit. \n\n\"What are you in Vienna for, Lara?\" \n\nThe waiter came with Lara's espresso and a glass of water. She thanked him, took some time to pour a bit of sugar into it, stirred it with her spoon, and took a sip before she replied. \n\n\"Studying art, I suppose.\" \n\nHer eyes now studied me with their curious gaze. The unsolicited interest in conversation with little ol' me, I knew was a red flag. A possible Soviet operative looking for an American contact. An instinct told me I was riding on the edge of danger, and somehow, I enjoyed it, as if this conversation were a thrill ride at a carnival. I settled into my seat, tried appearing cool as I studied her more intently for any more signs of danger. I found it difficult to conceal the pounding exhilaration that electrified me. It came out in the timbre of my voice. \n\n\"Lovely. What kind of art do you do?\" I asked. \n\nShe shrugged. \"Photography. Street photography. And portraits. I've grown fond of portraits. You know, you would be a lovely subject. You have a beautiful face. And a beautiful body. You are very sexy.\" \n\nI brushed my skirt bashfully. \"Heavens no,\" I snorted. \"Why would you say that?\" \n\n\"You're very photogenic.\" \n\n\"I'm very flattered,\" I said and took a nervous sip of my coffee. I know I ought to politely refuse the brash invitation. Friendliness is not to be taken or given lightly here. Not during a Cold War. \n\n\"You're very pretty yourself.\" \n\nA gorgeous woman walked by. The bare skin of her long legs revealed with each step in her slitted dress. We watched her. Lara asked, \n\n\"What about her? She's pretty too, isn't she?\" \n\n\"Quite pretty.\" \n\n\"Quite pretty? I would make passionate love to her without question if she asked me. Whoever she's seeing tonight is a lucky man... or woman.\" \n\nMy face reddened. I finished the m\u00e9lange quickly and grabbed the book and said, \"sorry, I should be getting home now.\" \n\nShe looked at me clearly pleased by my discomfort in the conversation's abrupt turn towards the provocative. \n\nI left a few coins for the m\u00e9lange. Quickly she took out a pen and scribbled on a slip of paper. Her name and a phone number. \"This might be a bit forward, but I'm having a party at my place next Friday. Why don't you give me a call for details?\" \n\n\"Um... Sure, why not,\" I said. I put her phone number in my bag. \"It was nice to meet you, Lara.\" \n\nShe took the cigarette out of her mouth and exhaled a long string of cigarette smoke and said, \"likewise, Kirby.\" \n\nThe hair on the back of my neck rose from the way she said my name with her creamy accent. When I approached the corner of the street, I stopped and looked back at the caf\u00e9. She sat pensively, blurred by the inky noise of the rain, still watching people, still guessing at their days. \n\n*** Danube *** \n\nI had almost completely forgotten about Lara when I spotted her in a crowd on a sunny day just in the shadow of St. Stephen's cathedral. A week since the caf\u00e9 afternoon. I was sitting at a bench when a flash of the sunflower yellow in the crowd caught my eye. The same summer dress, or at least the same color she had worn at the caf\u00e9. \n\nI closed my book and watched her for a while. I thought to call out to her, but refrained, remembering that I ought to be wary of her. So, I watched her for a while. She stopped by a flower stand, picked out a bunch of swan-white lilies and took them away rolled up in newspaper. Before she disappeared around the corner, I jumped from my seat and followed her. \n\nShe was like a yellow wisp, dancing through the crowd, stopping by shop windows, lowering her sunglasses to take a good look at what was within before continuing. She drew glances from every man, and quite a few women that passed her. \n\nI felt very much like a stalker, following her like this. I didn't know why I did it. I could only attribute it to her strong magnetic pull. \n\nShe got away from me at the Hapsburg palace. A string quartet played an impromptu Bach in the tunnel of the Spanish Riding School. Past the school, I looked around for the yellow dress in the quiet garden, and in the courtyard of the palace between the dark hedgerows of roses, finding nothing. Curious that she would slip away so easily, but then... \n\n\"Kirby!\" \n\nI turned my head and saw her walking towards me, shimmering in the sun, her strawberry blonde hair bouncing in long curls from her shoulders to her breasts. How I lost her in an empty courtyard, I had no idea. \n\n\"Lara!\" I jumped. \n\n\"What a happy coincidence! You were just on my mind.\" \n\n\"I was?\" \n\n\"Yes. I was wondering when you would call me.\" \n\n\"Oh, I'm so sorry. I've just -- I've been so busy lately.\" \n\n\"I see. You Americans tend to be.\" She smiled slyly. \"In fact, you seem busy now. Am I keeping you from something?\" \n\n\"Oh no.\" I blushed. I came up with a quick excuse. \"I was just, um, going to see a friend today, but they canceled at the last minute, so I came here. I'm not up to anything.\" \n\n\"Oh, ok. Well, would you like to spend the afternoon with me, then?\" \n\nHer eyes studied my face intently. Her lips curled into a hopeful smile. She added, \"I was going to grab my bicycle and go by the river to enjoy the rest of the sun. If you are free, I would love it if you joined me.\" \n\nI nodded. \"Sure.\" \n\nWe stopped by her bike, which was locked nearby on a fence along the ring road that circled the first district. She put her white lilies into her bicycle basket and took a silver Nikon and snapped a photo of me. \n\n\"Say cheese,\" she said. \n\n\"You're supposed to say that before you snap a picture.\" I laughed. \n\n\"I knew that. Just forgot to say it first.\" She shrugged, then repeated, \"Say cheese!\" and snapped another picture. She caught me smiling. \n\n\"That one will be a good one,\" she said. \n\n\"Anyways, shall we go? \"I have a secret spot on the river I like, but it would take us a while to get there walking, so we can ride my bicycle.\" \n\n\"Sure. Are you taking me for a ride?\" \n\n\"My legs are tired, so you're taking me for a ride. I'll get on the back and tell you where to go.\" \n\n\"Ok, I'll try.\" I hopped on the bike. \"Climb on!\" \n\nI held the bike balanced while she climbed onto the back, sitting on the rack above the rear wheel, both legs hanging off to one side. \n\n\"Ok, here we go,\" I said and kicked off, driving shaky at first, weaving precariously between dodging pedestrians, both of us shrieking and laughing. We rode along the ring road towards the river. She pointed out the streets to turn down and snapped photos of people and buildings with her Nikon every opportunity she could get. A few minutes later we were in Heiligenstadt, meeting the riverbank. We rode along a row of tall flickering birch trees and drooping willow. The bike path turned to crunchy gravel, and the city disappeared behind us. A half hour or so of riding later, we arrived at a quiet bend in the river, where the sun rays came neatly through the crests of the tall Kahlenberg hill onto a grassy riverbank. \n\n\"Stop here!\" Lara shouted. I skidded to a stop. She set out a blanket she pulled from the bicycle basket. I plopped down next to her on the blanket and exclaimed awe at the beauty of the surroundings. Verdant vineyards lined the rolling hills across the river, and the river here was slow and flat. The afternoon crickets chirped lazily. The grasshoppers and June bugs hummed in the golden grass around us. A barge passed us by. The men on it waved and hollered eagerly at us. We waved back. Lara blew them a kiss. They blew back kisses emphatically and walked backwards along the boat shouting and waving at us until they disappeared around the river bend. She laughed delightedly at the attention, and when they were gone, she spirited a bottle of wine, uncorked it and drank straight from it, clutching it by the neck and offered me a drink. \"Sorry, I didn't think to bring any wine glasses,\" she said. \n\n\"No, it's fine. I don't think I will have any.\" \n\nShe shrugged. \"More for me then.\" \n\nShe drank again. A purple stream dripped from lips, down her chin and her neck. She wiped it. \n\nAs much as I'd love a drink of her wine, I had to restrain myself. Don't want to get tipsy and tell any secrets now. What was the saying? Loose lips sink ships. When she was done with the sip, she snapped a photo of me. \n\n\"You're quite shy, aren't you?\" she mused. \n\n\"Of course not. Not normally.\" \n\n\"You were rather shy the last time I met you.\" \n\n\"One of my moody days, perhaps.\" \n\n\"You have moody days? I thought Americans were always happy.\" \n\n\"Of course, Americans have moody days. The rain makes me moody. Doesn't it make you moody?\" \n\n\"No. I enjoy the rain.\" \n\n\"You seem like the type of girl who would enjoy the rain.\" \n\n\"Why do you think that?\" \n\nI shrugged. \"I don't know. You just seem so -- I don't know. There's just something about you. You seem like you can be happy in any situation.\" ",
        "\"In the Eastern Bloc, you either learn to be happy in any situation, or you become an alcoholic.\" \n\n\"Those are your only choices?\" \n\n\"Who says it's a choice?\" \n\n\"Well, that's a depressing thought.\" \n\n\"I never claimed to be a happy person. You assumed that. Most from where I'm from who claim to be happy are either lying, or they're drunk out of their minds.\" \n\n\"Well, aren't you happy?\" \n\nShe drank deeply from the bottle, then responded, \"At this moment, I'm happy.\" \n\nShe sat up, crossed her leg, aimed her Nikon at me and snapped another picture. Her skirt rode up her thighs, revealing a white flash of her panties within. She arched her back so that her dress tightened against her breasts. Concentric circles of her nipples pressed against the thin cotton of her dress. I blushed and glanced away and felt a nervous, funny pounding in my chest, being suddenly aware that I was smitten with her. Blood pounded hot through my body. My throat ran tight. \n\nThis curious attraction didn't surprise me, nor was I averse to it. I had always been secretly attracted to girls. I've just never acted on that attraction. There was, however, something about Lara -- the way she moved, the way she talked, the way she smelled (lush like a twisted orange peel), the way she looked at me with her intent eyes. Eyes that were inviting, daring playfully to try something dangerous -- her, perhaps. \n\n\"So do you have someone?\" she asked. \n\n\"Someone?\" \n\n\"Like a boyfriend? Husband?\" \n\nShe sat back, leaning on her hands, tongue in her cheek, her legs laid straight out, feet bare, twirling, toes outstretched. \n\n\"No.\" \n\n\"No one?\" \n\nI shook my head. \n\n\"So, you are here in Vienna all by yourself?\" \n\n\"Yes.\" \n\n\"Why is that?\" \n\n\"Why am I all by myself or in Vienna?\" \n\n\"Why are you all by yourself?\" \n\n\"Because I want to be.\" \n\n\"How old are you?\" \n\n\"Thirty.\" \n\n\"Quite old to be unmarried, no?\" \n\nI laughed. \"Oh, please. Are you going to tell me I'm condemned to a life alone because I haven't got a husband?\" \n\n\"That's how people where I'm from think.\" \n\n\"Yeah. Same from where I'm from.\" \n\n\"But you don't think so?\" \n\n\"No. I'm happy now, more than I've ever been not single. Maybe they're right. But maybe I don't care.\" \n\nLara grinned, crinkled her nose as if tickled by my answer. \n\n\"How old are you, Lara?\" \n\n\"Twenty-six.\" \n\n\"Do you have anyone?\" \n\nShe shook her head. \n\n\"Well, why not? Time's ticking, isn't it?\" \n\n\"It is. Can I give you the same answer you gave me?\" \n\n\"Sure. If it's true.\" \n\nShe looked up at the sky. Clouds floated lazily westward, cumulus and silver from the sun shining down from above them. Glittering rays came through them like bright starburst. Her brow furrowed in thought. \n\n\"I don't think it's true really,\" she replied finally. \n\n\"You don't?\" \n\n\"I think being single makes me anxious.\" \n\n\"Why is that?\" \n\n\"I love the touch of another person too much.\" \n\n\"I don't think you need to be in a relationship to be touched.\" I reached out and tickled the bottom of her feet. She recoiled, snickered. \n\n\"See!\" I laughed. \n\nShe stuck her tongue out at me. \"That's not what I mean,\" she replied. \"I mean intimate touch.\" \n\n\"I see. Yes, a boyfriend would be nice for that.\" \n\n\"Or a girlfriend.\" \n\n\"Oh?\" \n\nHer eyes found mine. I blushed. A moment passed between us where the world was silent save for the constant pulsing buzz of the grasshoppers in the grass, and the sound of my own heavy breathing. \n\nShe straightened out her legs again, stretched out her toes as she yawned, then brushed a naked foot against my leg. Not an accidental brushing. I flinched at the cool touch of her skin against mine. Goosebumps grew on my skin. Slowly, she drew her still-touching foot down the length of my leg. As her leg bent, her skirt fell down her raised thigh to again reveal the white triangle of her panty within. Her face twisted in excitement as she did this. She held her breath, waiting for my response to her brash act. Her nipples were hard -- tiny, pressed pointedly against her dress. Only a loosening of her shoulder straps from her delicate shoulders, and they would be exposed. \n\n\"Don't you think so?\" She asked. \n\n\"Think what?\" I murmured listlessly, not knowing where we were in the conversation. \n\n\"That a girl would be nice to be with, too.\" \n\nHer toes climbed daringly, past my knee, sliding under my skirt. She lifted her leg, lifting the hem of my skirt with her toes to peek inside before quickly retracting her foot. A gleeful grin on her face. I let out a heavy sigh and breathed heavily. I had held my breath. \n\nShe stood, fanned herself, and studied the silent, fast-moving river. Beside the riverbank was a small, still pool. Pebbles tiled the bottom of the pool. Small shadows of fish floated, flashing silver as they turned on their sides to graze at the algae and riverweed. \n\n\"I'm going to cool off,\" she said, then, with her back to me, she slipped out of her dress, leaving only her tight cotton panty to cover her toned, heart-shaped ass. \n\nShe motioned with a quick tilt of her head for me to follow her into the water, then walked in until she was waist deep, then dove into the clear pool. She stayed submerged for a long moment, then sprung out of the water and whipped the water from her hair. The splashing waves caught the sunlight and flashed brilliantly. \n\n\"Come in, Kirby! The water's nice.\" \n\nI couldn't stop staring at her beautiful, diving body bathing in the pool. It didn't take me long to acquiesce. The oppressive heat helped her cause. I took off my dress. I crossed my arms shyly against my thin breasts, as I walked into the river. The coldness of the river took my breath away. I stood there shivering for a moment, then turned to retreat to the shore. Before I could make my mistake, Lara lunged at me, wrapped her arms around me and took me down into the water with her. I gasped at the shock and thrashed in the water when I sank in. \n\n\"Oh fuck! Warn me before you do that!\" I wheezed. Lara laughed gleefully at my convulsions. \n\n\"Stop being a baby. It's nice! And what are you hiding?\" She referred to my crossing my arms protectively over my breasts. \n\n\"I'm American, Lara. I don't revel in putting myself on display for all the peeping toms.\" \n\n\"What peeping toms? There are no peeping toms.\" \n\nAs she said this, a pleasure craft passed by. A rotund man sunning himself in a chair on the stern spotted us and gave a hearty wave. \n\nLara waved back. \n\n\"Right. No peeping toms.\" \n\n\"Oh Kirby, you are in Vienna now. No one here cares.\" \n\nAt the moment I was more concerned at the coldness of the water, which I still hadn't gotten over. \n\n\"You're shivering so much,\" Lara observed. \n\n\"Yes, Lara. That's because the water is freezing!\" I said through chattering teeth. \n\nShe waded over to me, hugged me tightly. \"I will warm you up then,\" she said and rubbed her arms vigorously against my back. Her skin was indeed warm. The warmth sunk into my skin, and I felt myself sink into her arms. Her soft breasts pressed up against mine in the water. Her hard nipples pushed against mine. My immediate thought was to push her away. I yelped but did nothing more. She had me tranquilized with her surprise move. It was pleasant. Her body was pleasant, rubbing against mine. It's been such a long time since someone touched me the way she touched me now. She was right. A girl was nice to touch. \n\nI stared wide-eyed, mouth agape at her while she held me. Lara was an inch taller than me, so I looked up into her eyes. She whispered in my ear, \"warm?\" \n\n\"Yes,\" I whimpered. \n\nI made a vague attempt to squirm away, but she held me confidently. A hand went up, grasped the back of my head. She drew her face closer to mine. I felt her breath against my lips. I went up to my toes automatically to meet her. \n\n\"Oh no,\" I protested in a whisper. But I didn't push her away. I didn't recoil. I only stood permissively and closed my eyes and swallowed nervously. I offered no further protest. My arms fell to my sides limply. Her lips touched mine and a vacuous energy imploded within me, drawing me into a private, timeless world. Her lips were tender. Soft. Then there was her tongue, touching mine. I shuddered. She released her kiss slowly. I opened my eyes and found her eyes delighted, fluttering, glowing, mercurial in the sunlight. \n\n\"You like it!\" She exclaimed. \n\nI stood back, brought my arms into a cross against my breasts again and laughed and blushed beaming, nodding sheepishly. We kissed again. This time more deeply. Her hands, unseen, pried my crossed arms from my small breasts so that she could draw herself more into me. \n\nAfter kissing, she grabbed my hand and brought it to one of her breasts. I held it there unmoving, feeling the softness of her breast. The hardness of her nipple on my open palm, sensing the beating of her heart beneath, then, before anything else could happen, I snapped out of my trance. \n\n\"I can't...sorry,\" I murmured. I backed off and waded back to shore. I wrung out my hair, then sat on the blanket to dry myself out in the sun, trying my very best to keep my cool. \n\nLara came out a moment later, with a confident, sensual sway to her hips. The rippling sunlight reflection of the water bounced like moving tattoos off her body. Water dripped from her hair and streamed down her curves. \n\nShe plopped down next to me and kept a silent gaze on the distant trees and the vineyards across the river. Her warm body being so close filled me with an effervescent buzz. The temptation to touch her, to embrace her, to kiss her again, all over her delicious, perfect Czech body was painful to bear. But for a long while we sat together like that, without conversation, without bringing overt attention to our fleeting foreplay. We sat until we were dried. When the sun started to descend into the mountain behind us, casting a long, cool shadow, we departed and walked along the gently curving river. Lara walked with her bicycle in hand, curled her other hand into mine. We walked like that until we reached the canal that veered into the city and followed it until we reached my apartment. \n\n\"Well, Lara, I -- ,\" I paused. I meant to say, 'I had fun', but realized that fun was a woefully inadequate qualifier for what had happened that afternoon. But I failed to find any other word for it. \n\n\"I'm having my party on Friday. I'd love for you to come,\" she said quickly. I didn't give her an answer, only stood there scratching my neck awkwardly. She embraced me and kissed me on each cheek quickly. She reached into her bicycle's basket, picked out a lily for me. \"Thanks,\" I said. I took it and walked up the stairs. \n\n\"I hope to see you again,\" she shouted after me. After arriving at my apartment, I went immediately to the window, and saw a glimpse of her yellow dress across the canal disappearing behind a passing tram. I really wanted to see her again. I was dying to see her again. And this made me happy. \n\n*** \n\nFrank lit another cigarette. He turned a page in the dossier, and I craned my neck for a peek. When he saw this, he pulled the dossier closer to him. Photographs. I knew them to be ones that Lara took of me. \n\n\"You met Lara again later that week.\" \n\n\"Yes. How did you know?\" \n\nHe smirked. \"Just a guess.\" \n\n\"How did you get those pictures?\" I demanded. \n\nHe flipped out another photograph and set it atop the first. He adjusted his glasses and studied it with clinical sternness. He ignored my question. \n\n\"The night of her party. That's when you found out she was KGB?\" \n\n\"Yes.\" \n\n*** The Operative *** \n\nI knew she was a security risk. I knew seeing her was forbidden. It was the height of the Cold War. The Soviet Union was backed against a corner, unable to compete with the US on military spending. They were embroiled in a shitshow of a war in Afghanistan. They had a party leader who was as paranoid as they come and a government that was corrupt and bloated. To make matters worse, the leader of their greatest adversary, Reagan, seemed like a loose cannon with an unsteady hand hovering over the red button. The KGB had been kicked into high gear, with Vienna being a focal point of their activities. And they were aggressive. Seeing her, I knew I was risking not only my clearance but my career. But if I told them about her, they'd tell me not to see her again. I didn't want that. She made me feel good. I wanted to see more of her. So, I took the chance that she wasn't a spy. How likely was it, really? And if she were, why target me. There were plenty of single, lonely men at the embassy with access to more intel? \n\nA few days after the river, I called her, remembering she had mentioned something about a party she had invited me to. \n\n\"Hallo?\" crackled the familiar voice on the other end. Laughter, loud talking, and loud music in the background. \n\n\"Hi Lara. It's me, Kirby. Is this a bad time?\" \n\n\"Kirby! It makes me so happy to hear from you. You're missing a great party! Why don't you come over?\" \n\n\"Oh... I don't want to be a --\" \n\n\"Don't be silly, I want you here.\" \n\nI was hesitant. I wanted to see her alone. I wanted her all to myself. But I agreed. \"Ok. I'll be over.\" \n\nShe gave me the address. I quickly made myself up and hopped on a tram. \n\nHer apartment was in the first district, on the border with the third on the edge of the ring road in a rather ornate Baroque building. She was on the top floor. A large, luxurious penthouse fit for a royal princess. This was a surprise. \n\nWhen I knocked on her door, she opened at once and her face brightened. An intense marijuana smell wafted out from within. She hugged me tightly and led me by the hand inside. The apartment began with an elegant marble floored foyer larger than my whole apartment. In the living room, paintings in golden frames hung on every wall, a large crystal chandelier hung from the ceiling, and a Turkish or an Afghan rug lay slanted on the oak parquet. Framed and unframed paintings and photographs, books in tall bookshelves all over, and people sat scattered across her floor. Several people were dancing in the center of the room to Annie Lennox singing. An eclectic bacchanalian mix of fashionable people in punk acid-washed jeans and skimpy cocktail dresses. Others barely dressed at all. A bare-breasted woman with a lei of fresh white flowers walked by with what looked like a Black Russian drink in her hand. She looked me up and down and winked before joining someone in the corner of the room, with whom she immediately started to make out with. \n\nLara shouted above the loud music \"Hi everyone, this is Kirby! Kirby, this is everyone.\" Some people looked my way and waved and shouted a greeting. Others were too tuned out to notice. \n\nLara yanked my hand to bring me to a circle of friends passing a roach around in the corner and plopped herself down on a beanbag. The others were sitting on beanbags as well. Lara invited me to join her. As I sat down beside her, a man -- a boy really, with long hair tied back in a ponytail and his shirt unbuttoned - passed me the roach. I proceeded to pass it directly to Lara, who smoked it nonchalantly and passed it to the next person, a beautiful gaunt-faced Asian woman wearing round Elton John style glasses and a scarf tied tightly around her neck. There were two other people in the circle, a man that looked like Jesus and a buzz-cut woman. They were passed out cold in each other's arms. \n\nThe Asian woman smirked at me, looked me up and down and in a sharp accent asked, \"how do you know Lara?\" \n\n\"We've only met twice. Randomly.\" I looked to Lara for assurance. \n\nLara added, \"Yes, twice, but Kirby is quite a lovely friend. Last Sunday we spent the whole day at the river and had so much fun together.\" \n\nThe Asian woman seemed skeptical of me. Or too stoned to carry any other expression. Her voice droned, \"ooh, sounds very romantic.\" \n\n\"Oh, not romantic,\" I blurted. Lara giggled. At that moment, she spotted a man in the kitchen that was trying to open a bottle with what looked like a chef's knife. \"Would you excuse me, I need to yell at some guests,\" she said, then jumped up and went to the kitchen, leaving me in the circle with the Asian woman and the boy and the passed-out couple. The conversation deadened and the woman and the boy both stared at me lazily. I started a new topic. Leaning into them, I asked quietly, \"so, what is her story?\" \n\n\"What do you mean?\" said the boy. \n\n\"I didn't realize she was this... rich.\" \n\nThe Asian woman let out a tittering laugh. \"Old Russian money.\" \n\n\"Old Russian money?\" \n\n\"Don't let her Bohemian style fool you, dear. Her family is Powerful.\" She put a heavy emphasis on the 'P' in powerful. \"Not only in Russia, but here in Vienna as well. You should know she received her debut at the Vienna Opera Ball. That makes her European nobility,\" She stared at Lara with a distant envy as she said this. \n\n\"I thought she was Czech,\" I said. \n\nMy heart palpitated. She had conveniently left out that little 'Russian' detail. Suddenly, my fears started to come into focus. \n\n\"Her mother's Czech. But her father is a general in the Soviet military, I think. Hard to be a general if you're not Russian, I would say.\" \n\nHe took a drag from the weed and offered it to me. This time I took it and puffed on it and wheezed. My first joint since college. The boy chuckled lazily as I grimaced from the sharp, woody taste. I handed the joint to the Asian woman and croaked, \"Lara said she was from Prague.\" \n\nWhen the Asian woman finished a puff, she replied, \"Of course she is, dear. But who knows for sure?\" \n\n\"And how did you all get to know her?\" \n\n\"Same way you did. Randomly. Let me tell you, you are lucky to have Lara as a friend.\" \n\n\"Thanks... I guess.\" I glanced over at Lara who was having a glass of wine with the man in the kitchen. She was smiling and touching him as she spoke, gracious and flirtatious. She glanced over my way, smiled when she caught my eyes. She certainly did not look like a Russian spy, but that's the point, isn't it? \n\nA dreaded sense of responsibility and an associated urge to leave this apartment came to me. I felt stupid, almost embarrassed for coming here. I excused myself from the circle and stood and tried sneaking out unnoticed. But at that moment, a new song started, a random guy grabbed my hand and yanked me onto the dance floor to dance with him. Lara noticed me, so I stayed and danced, pretending I was not just about to flee. Wouldn't want to let the predator smell fear, would we? \n\nWhen the song ended, Lara came over and squeezed herself between me and my dance partner. He took the hint and gave a polite berth. Lara and I danced together to the next song. As we danced, the stress of the situation tried its very best to melt away. My mind, screaming, grasped desperately at caution, fruitlessly trying to hold on to it for my sake. Apart from the light weed buzz, I was sober. Sober enough to recognize that the longer I stayed, the more I was in jeopardy of becoming drawn into a trap I could not see. At the same time, I told myself that leaving, now that she was watching, could be just as risky. So, I kept cool and danced. \n\nThe guy that lent me to Lara lingered nearby to make sure I wouldn't get too far. I could tell he was very interested in me. He was soon joined by a friend, a wingman, and it became obvious that they were plotting to separate me and Lara. \n\nThe wingman whispered something in Lara's ear. She shrugged and nodded and started to dance with him, while my original dance partner took my hand. He wasn't bad looking. In fact, he was cute, and not bad at dancing either. The music was loud, and as we danced, he shouted over it into my ear in German. \n\n\"What's your name?\" \n\n\"Kirby,\" I shouted. \n\n\"Kirby, nice name!\" ",
        "\"Thanks! What's yours?\" \n\n\"Jan!\" \n\n\"Nice to meet you, Jan!\" \n\n\"American?\" \n\n\"Yes!\" \n\n\"Very nice. I like Americans! I like you!\" \n\nI only smiled politely in return. \n\nAnother song came, and he pulled me closer to him. I smelled an awful thick sweet smell of J\u00e4germeister on his breath. It got to be too much, so I tried pushing him away. Lara, thankfully, saw me struggling. She took my hand, blew a kiss to the guys, and dragged me away. The guys, unperturbed, followed us off the dance floor. Lara whisked me hurriedly into her room. A couple were in there, feeling each other up on Lara's bed, jumped alarmed at our barging in on them. The girl let out a squeal of embarrassment and pulled her shirt down over her breasts. The guy sat up on his elbows and smiled, looking hopeful that we were there to complete his fantasy, quickly dashed when Lara said, \"we need this room.\" \n\nThey left and Lara shut and locked the door. \n\nThe room was a quiet reprieve from the living room party. The loud bass from the stereo thumped against the wall. Laughter and loud ceaseless pink noise of music and muffled conversations made the bedroom feel like a secret cloister. But soon knocking came at the door, then an aggressive jiggling of the doorknob. \"Hey girls, are you in there? Come on, let us in! We want to hang out.\" \n\nIt was Jan. He spoke in English with a bad faux-American accent. \n\nLara shook her head at me and put a finger to her lips. The knocking and jiggling didn't stop. I began to be nervous. \n\n\"Do you know these guys?\" I whispered to Lara. \n\n\"No,\" she whispered back. \n\n\"Then why are they here?\" I complained. \n\nWhen it was apparent, they wouldn't give up, she shouted against the door, \"Get lost, arschl\u00f6cher!\" \n\nAn eye appeared in the keyhole, appearing crazed and intent. I gasped and jumped backwards at the sight of it. She blew hard into the keyhole. A loud yelp on the other side. \n\nFor a moment it seemed like they had left. But then a loud thump against the door and the door shuddered so strongly that dust fell from the ceiling. Then another thump. \n\n\"What are we going to do?\" I cried out. \n\nCalmly, Lara walked over to a nightstand where her purse sat open. \n\n\"Come here,\" she instructed. I went. The door crashed open, and the two men barged in, looking fierce and intent, wide grinning smiles baring teeth like wolverines. They swung the door closed behind them. One of them propped a chair against the door handle and they approached us. \n\nBut then, a silver-nickel flash to my side. I turned and found a revolver leveled at them. Lara stood broadly, both hands on the pistol with a steady aim. They both stopped in their tracks and put their hands up, their shoulders drooping, their faces turned pale. \n\n\"I believe it is time for you to leave,\" she said to them. \n\nThey started backing up slowly. One fumbled trying to get the chair loose from the door. \n\nA grin grew on her face, and a fire set in her eyes. She said, \"Wait. Take off your shirts and pants.\" \n\nThe guys looked at each other quizzically then to Lara and me. One smirked and started removing his clothes. Lara pointed the gun at the other one and, in a cooing voice, said, \"Und du, mein liebling.\" \n\nHe nodded and slowly removed his and said, \"How about you lower your gun and I'll let you play with mine?\" \n\n\"Perhaps. Why don't you remove your little panties, so we see what we are dealing with first.\" \n\nThe men, amused now, removed their underwear. \n\n\"Oh God no.\" I turned my head as their cocks came out. \n\n\"Well, how about it, Schatz?\" The same man who spoke earlier asked. \n\n\"No. Not my style. But thank you for showing us. Now you can get lost.\" \n\n\"Wait just a --\" \n\nShe cocked her gun. \"I'm not going to repeat myself.\" \n\nThey bent down to pick their clothes up. Lara tsked at them. \"Leave it.\" \n\nSo, they stumbled out backwards, bare naked, covering themselves as best they could with their hands. The crowd in the living room, oblivious to the showdown in the bedroom, laughed and cheered them as they ran for the exit. \n\nWeak kneed, I sat down in a daze on the bedside. Lara shut the bedroom door, placed the pistol back into her purse and sat next to me. Her transient toughness evaporated. \"I'm sorry about that. I'll have to find out who brought those creeps to my party.\" \n\nShe put an arm around me. \"Are you alright?\" \n\nI scowled at her. \n\n\"What?\" \n\n\"You have a gun,\" I stated. \n\n\"Yes.\" \n\n\"Why do you have a gun?\" \n\n\"For moments like this. Aren't you glad that I did?\" \n\nI shuffled away from her. \"Your friends say you are Russian. Is that true?\" \n\n\"My father is Russian.\" \n\n\"Why didn't you tell me?\" \n\n\"I suppose because it hasn't come up.\" \n\nI huffed. \n\n\"What's wrong?\" \n\n\"Lara, we can't do this.\" \n\n\"Do what?\" \n\n\"Chrissake, Lara. I'm an American working at the US embassy. Don't you think that's an issue?\" \n\n\"No. I don't.\" \n\nI shook my head at her then walked over to the window and looked out over the brilliant amber lights of the city. The steeple of Saint Stephen's cathedral reached into the sky, lit like a votive candle. It was past midnight, and the city was yawning, stretching into sleep. \n\n\"You know we can't meet anymore, right?\" \n\n\"Why?\" \n\n\"Because you're probably a...\" \n\nShe raised an eyebrow. \n\n\"A fucking spy,\" I completed. \n\nI imagined her reacting to this suggestion in a way to feign ignorance or refusal. But she didn't. \n\n\"Yes, I can see why you would think that.\" \n\n\"Then you understand why we can't do this.\" \n\n\"Are you afraid that I might seduce you to sell state secrets?\" \n\n\"Yes.\" \n\nShe scoffed. \"I'm not so dangerous.\" \n\n\"Forgive me if I don't believe you. But even if you aren't. There are rules. I'll have to report my interaction with you. I'm sorry, Lara. I really like you, but it's not worth the risk.\" \n\nI started to leave. \n\n\"Are you still reading Doctor Zhivago?\" She asked. \n\nI didn't look back at her, but I responded, \"I am.\" \n\n\"Do you like it?\" \n\n\"So far, yes.\" \n\n\"Do you know why it's banned where I'm from?\" \n\n\"No. Why is it banned?\" \n\n\"I haven't the slightest idea.\" \n\n\"Don't they tell you?\" \n\n\"Yes.\" \n\n\"Well... what do they say?\" \n\n\"It is not Soviet art. That's what they say. Does that make sense to you?\" \n\n\"No.\" \n\n\"That's life in the Soviet Union.\" \n\n\"Terrible. Ok. I'm going now.\" \n\nShe stood abruptly from the bed. \"I don't want you to go,\" she said. \n\n\"I have to go, Lara. I'm sorry.\" \n\n\"You're right, Kirby. I am KGB.\" \n\nI looked at her, first, incredulously, then with a spitting disgust. \"Ugh. Why the fuck did you tell me that? You really screwed me, Lara.\" \n\n\"I told you because I promise I won't make you do anything you do not want to do.\" \n\n\"Pinky swear?\" \n\n\"Yes. Pinky swear.\" \n\n\"God, that was a joke! I'm out of here.\" \n\nShe moved to the door, blocking it, moving so quickly, it gave me a fright. I backed up, hitting the wall. \"Don't touch me, Lara. I'm warning you,\" I said. My voice trembled. She moved towards me. I shrunk into the corner of her bedroom, about to scream out for help, but unsure if anyone would come to my rescue, or if it would mean certain death. \n\n\"I'm not going to hurt you, Kirby. I will let you leave if that's what you want. I just want one thing from you.\" \n\n\"What?\" \n\n\"A kiss.\" \n\nHer hands were clasped tightly together. A nervousness in her eyes. She appeared vulnerable. I felt sympathy for that vulnerability. So, I conceded to her this one thing. \n\n\"Ok,\" I agreed. \"A kiss.\" \n\nI straightened, sliding up the silken wallpaper. A siren wailed outside. She stepped closer, breathed in, held it in anticipation, bit her bottom lip. I closed my eyes as she drew in and I smelled her familiar citric scent and felt the heat from her body. Her lips touched mine. I clenched mine shut and found myself fighting a terrible battle to keep them shut, but I couldn't resist very long. In spite of it all, I enjoyed her lips too much. My mouth opened. I let her tongue enter and I sighed a shuddering bliss and screamed a silent 'why?'. \n\nAs the kiss continued it grew more passionate. My hands went up, first to find her hips, then up her back, then through her hair. We kissed messily, breathlessly. My chest pounded. My pussy burned. My unconscious mind continued its screaming protest of this flagrant violation of my scruples, but I was so overcome by a sweeping, pleasurable gratification that to act against the physical instinct seemed futile. \n\nHer breathing was loud, excited. Her hands touched my legs just above my knees. Her fingers traced slowly up my thighs, hiking my skirt up, until her fingers reached the thin waistband of my panty. She curled a forefinger around the band, pulled out and let it snap back to my skin. Then her fingers continued their journey. To the top of my legs, my abdomen. To my breasts. Her fingers had been there before, so they didn't linger long. They continued up, to my neck, then to my mouth. We stopped kissing to catch our breaths. I opened my eyes momentarily and gazed catatonically into hers. \n\nShe slid her finger into my mouth. I wrapped my mouth around it and sucked. She moved it in and out, rhythmically, mimicking the thrusting motion of a cock. She pulled the wet finger out and raked it down my front, down between my breasts. \n\nShe sensed my aching desire for her, so she went to relieve it, kissing down my body. She kissed my neck, my collarbone, then between my breasts. Gently, she moved the straps of my dress off my shoulders and rolled them down to expose my breasts to her. I looked down on her. Her beautiful face between my breasts, her lips moist with saliva. She looked up at me, her eyes glimmering with excitement. \n\n\"I've never been with a girl before,\" I confessed. \n\n\"Perfect,\" she responded. \"I will show what you didn't know you were missing.\" \n\nHer lips went to one of my erect nipples, her eyes still locked on mine. My muscles tighten, as her lips formed around my nipple. I let out a squeal as she sucked. Her lips went to my other nipple, her tongue raspy against my sensitive nipple. \n\n\"Your breasts are perfect,\" she exclaimed. \n\nShe spoke as if to emphasize the voluptuousness of her accent. She didn't stay for long on my breasts. She couldn't wait to taste more of me. She went down further, kissing down my abdomen. \n\n\"No, wait!\" I cried out. \"I can't.\" \n\n\"Of course, you can,\" she replied simply. Without giving me an opportunity to act on my protest, she lifted the hem of my skirt and put her head within. She kissed the inside of my thighs, and, moving aside my panty, kissed the top of my vulva, then slid her tongue between my folds. I whimpered. My knees buckled. I braced my back strongly against the wall so I wouldn't slide to the floor. \n\n\"You are wet. You want it.\" \n\nWith her fingers, like a pair of scissors, she pulled apart my folds, then her tongue pressed against my clit, sending off fireworks in my head. I covered my mouth to stifle my moan. \n\n\"Oh, fuck!\" I cried. \n\nMy muscles tightened. My back arched. My legs now spread apart on their own accord to give her access to my moist fruit, to let her taste me fully and suck me dry. Her fingers penetrated me as she licked me. She synchronized the penetrating thrusts with the lapping motion of her tongue. My pussy tightened and convulsed in anticipation of the orgasm. She felt the vibrations and followed my bodily convulsions, going faster with her fingers, and her tongue. My fingers curled into the back of her skull, pressing her face deeply against my pussy, until the pleasure became too much to bear. I exploded in a sudden ecstasy, like I have never felt before. \n\nHer face emerged from under my skirt, glistening with my wetness. A wicked, devilish smile on her face. Every muscle fiber in my body relaxed. I let myself slide down the wall until I sat, breathless. \n\n\"I can't remember the last time I had an orgasm like that. Maybe never.\" \n\nShe sat next to me, nuzzled her face into my neck, kissed my ear, then my cheek. \n\n\"Now you owe me one,\" she said. \n\nShe slid slowly out of her dress until she was completely naked. She stood up and stepped back to give me a full view of her body. Everything about it was perfect, from her sharply curved breasts to her softly tufted vulva. She turned her back to me and slinked to the foot of her bed. on the other side of the room. She leaned, resting her hand on the bed frame, back to bend her heart-shaped ass over enough to display the pink sliver of her pussy. She motioned me over with her head, inviting me to taste her. \n\nI stood wavering as if drunk. It all seemed so funny and light, like a crazy dream. How the hell did I end up here with an admitted KGB spy who had just brought me to orgasm? It could only be a dream. So, I acted as if in a dream. I went to her. I kissed the back of her neck. Then her shoulder, and down her curved spine, biting her soft ass cheeks. \n\n\"Mmmm,\" she responded. \n\nI went to my knees, put my head between her thighs. \n\n\"Oh, you're not so shy now!\" she exclaimed. \"You want to taste me, don't you, Kirby?\" \n\n\"Yes,\" I admitted. \n\n\"Then taste me. Make me cum.\" \n\nI remembered the moment I lost my virginity. It was Freshman year at college. I had drunk too much cheap beer. I took the cutest guy I could get my hand on up to my room. A part of me didn't want to do it. It seemed tiring. Like it was some catechism that I needed to go through in order to fit into my sorority. It was underwhelming. It felt weird. Wrong almost, but not in any moral way, just unnatural, uninspiring. Underwhelming according to my expectations. Paul, for his part, tried, but in all honesty, he didn't do it for me either. I just assumed then, that sex just wasn't my cup of tea. Boy, was I wrong. And by that, I mean, I should have tried a girl a long time ago. \n\nLara shuddered, tensed, as my tongue slid between her wet folds. Her sex was pungent. Not a pleasant taste, but I loved it anyway. \n\n\"Oh!\" she gasped. \"Yes, that's good. Just like that.\" \n\nEncouraged, I slid my tongue deeper into her. She started rubbing her clit. Her pussy loosened. She pushed back against me. Her sticky juices smeared against my face. \n\nBefore long, the tremors came. She braced herself against the chair. The chair rattled against the wooden floor with every pulse of pleasure that coursed through her body. For a second, I thought the sound might draw the attention of the people in the other room. Oh, I forgot about them. It excited me to think that they might hear and know that I was making hot love to their beautiful and dangerous hostess. \n\nI loved her taste. And I loved the way she reacted -- bracing as if against an earthquake. I licked more vigorously, hoping to bring her to the best orgasm she has ever had. With every breath, she breathed quicker, with every pass of my tongue between her folds, she moaned, louder each subsequent time. I realized that at any moment, anyone could come in through the bedroom door, but I was in too deep into the moment to care if they did. I licked faster. Her thigh muscles tightened, quivered, until finally her muscles seized up and she cried out in pleasure and collapsed to her knees to join me. She kissed me, licked her mess off my lips and cheeks, her eyes darting across my face, taking me in with a punch-drunk candor. \n\nThe music in the next room had stopped, perhaps a while ago. If there were anyone left in the apartment, they were too tired, or too drunk and stoned to carry on. Out the window, a dull blue light outlined the distant city. The first light of day. \n\nLara went quietly to her bed. I went to lay beside her and watched her face while the afterglow still affected me. She was so beautiful. So perfect. Her glistening, curved body. Her perfect celadon eyes. Perfect lips, with a perfect, crooked smile. \n\nHer eyes closed. She looked serene. I put my hands into hers, recalled our conversation about intimacy, and concluded, after tonight, that I had indeed been missing it so desperately, I just didn't know it. A few minutes later, she opened her eyes again, and she smiled. I smiled back, but a fluttering memory of our fate as enemies came back to me like a chronic sickness. Abruptly I announced, \"I have to go home now.\" \n\n\"Stay just for the night.\" \n\n\"I can't.\" \n\nIt was much too late to catch a tram, but only a half hour to walk home, so I walked. The streets were mostly empty, except for the drunk spillovers from the clubs and bars that were still open. Pattering footsteps came behind. Lara jogged up to me and weaved an arm through mine. \n\n\"I'll walk with you,\" she said. \n\n\"I wish you wouldn't,\" I responded. I slid my arm out from hers. \n\n\"What's wrong?\" \n\nI gave her a haughty laugh. She cocked her head like a confused dog at my laugh. \n\nA couple walked by, so I waited for them to pass beyond earshot to say anything. Even after they were long gone, I whispered. \n\n\"Whatever it was that just happened...\" \n\n\"It's our secret, Kirby,\" she whispered back. \"Trust me.\" \n\n\"Ok, Lara. It's our secret. And it's the last time.\" \n\nShe touched my cheek then went in for a kiss. I kissed her quickly, then turned my face to avoid a longer one. \n\n\"Good night, Lara.\" \n\n\"Ok. Good night, Kirby.\" \n\nWe were at the canal separating the first from the second district. My apartment was on the other side. I crossed the bridge and looked back. Lara stood watching me beneath a sullen lamplight, a muse of loneliness. I had an urge to run back and hug her, but I didn't. \n\n*** \n\nFrank lit himself another cigarette and sipped his coffee. He seemed either deep in thought or on the cusp of extreme fatigue. Either way, he gave no indication that he found my story necessarily riveting. \n\n\"I struggled a lot with what to do after that night.\" \n\n\"You mean, whether you should report your contact with her or not?\" \n\n\"Yes.\" \n\n\"Why was it such a struggle?\" \n\n\"Well... there was still a part of me that thought that maybe I could keep seeing her in secret.\" \n\n\"But in the end, you reported her.\" \n\n\"Yes. Because I knew the longer, I stayed with her, the messier it would've gotten, and someone eventually would have found out. Besides that, I still wasn't sure if she wasn't just trying to recruit me. Most likely, she was.\" \n\nFrank nodded. \n\n\"So that's when you met George.\" \n\n\"Yes, that's right.\" \n\n\"Did you know him prior to that?\" \n\n\"I had seen him around. I just didn't know what it was he did.\" \n\n\"That he was a CIA case officer.\" \n\n\"Yeah. It was unexpected. In retrospect, I guess I should have suspected.\" \n\n\"Tell me about your first meeting with him.\" \n\n\"I talked to the security office first. Standard protocol. I filled out a questionnaire, he asked me some questions. Told him the truth. And that was that. Or so I thought. George called me on my home phone right when I got home. He asked me to meet him.\" \n\n*** The Case Officer *** \n\nGeorge arranged our meeting in the most peculiar spot -- a sunny picnic table in a large meadow at Prater Park. The location made it difficult for casual eavesdropping. It sat alone in a field of tall golden grass far from any shade and from any prying ears or eyes. He was nothing like I imagined. I was thinking dashing, tall, well-tailored suit. Instead, he was rather a short, paunchy man with thinning, oily hair, pallid skin, and his polo shirt stained with sweat at his armpits. Otherwise, he was cheerful and with his rapid-fire Boston accent, conveyed a sense of confidence and competence that put me at ease. As he talked, my eyes suspiciously scanned the tree line, attempting to pick out any fedora and trench-coat wearing Russians. My stomach fluttered with the anxious notion that Lara might discover this meeting. But Geoge seemed perfectly comfortable with the chosen location. He didn't seem worried. \n",
        "\"Do you know what a dangle is, Kirby?\" \n\nI shook my head. George rested on his elbows. His hands were clasped on the wooden tabletop, his thumbs twiddling excitedly. \n\n\"A dangle is someone in possession or access to sensitive information who pretends to be interested in jumping ships. A fake double agent. You get me?\" \n\n\"Sure. I think.\" \n\n\"Great.\" \n\nHe paused. Studied me, seeming to try to gauge something about me. I shuffled in my seat awkwardly, subliminally aware that there was a reason he was telling me this. \n\n\"I'll get right to the point, Kirb.\" \n\nI frowned at the appointed nickname. \n\n\"If Lara is KGB, we don't have her on our radar. So, I am very interested in getting to know her.\" \n\n\"I have to be honest, if you want her phone number or address or something, I don't feel comfortable --\" \n\n\"No, no, no... nothing like that. Believe me, that's the last thing we want. Here's what I'm getting at: I want you to keep meeting her.\" \n\n\"Sorry?\" \n\n\"I want you to keep meeting her,\" he repeated. His thumb twiddling had stopped. \n\n\"You mean...\" \n\n\"I mean, call her up, hang out. Do girl stuff with her or whatever. Get close to her. Build rapport.\" \n\n\"And what if I don't want to?\" \n\n\"You don't have to. But I would like you to.\" \n\n\"What if she doesn't want to?\" \n\nHe shrugged and gave a cheerful laugh. \"She doesn't have to either. But I betcha she will.\" \n\nI looked around, over my shoulders, thinking this must be some sort of a trick. Should I refuse? Was that the response he was waiting for? \n\nSeeing my worried confusion, he explained, \"She's looking for a contact in the US embassy. Given how young she is, it's likely she's a rookie. Her Rezident probably got you in mind to cut her teeth on. Low stakes stuff, you know what I mean?\" \n\n\"I'm low stakes?\" \n\n\"Yes, you're low stakes. But don't be so glum. You're a young foreign service officer showing a lot of promise. She'll be looking to cultivate a long-term relationship, hoping that you'll serve a long and fruitful career. One day you'll get to be someone important, and that's when she'll get to squeeze you for what you're really worth. Think of yourself as a long-term investment. You're golden.\" \n\n\"What would you have me do?\" \n\n\"Remember what I just told you about dangles?\" \n\n\"Yes.\" \n\n\"When the time is right, and when she's comfortable enough with you, she will ask for information. When she does, I want you to put me in touch with her. Tell her I'm interested in sharing information. Dangle me in front of her face. Let's see if she bites. You know what I mean?\" \n\n\"I know what you mean.\" \n\n\"So, you'll do it?\" \n\nThe easy answer was 'no'. All I had to say was 'no'. He had given me that out. I'd be free and clear. But then I wouldn't ever see Lara again. She'd be gone from my life. On the other hand, if I said 'yes', then I'll get to see her again. I'll get to be with her. \n\n\"She told me she was KGB. Why?\" \n\n\"It's a gambit. To gain your trust. A tactic used more frequently than you think.\" \n\n\"Did she not think I would tell someone?\" \n\n\"She was betting that you wouldn't.\" \n\n\"She trusts me too easily.\" \n\n\"The Russians are desperate these days. What can I say? Do you want to see her again?\" \n\n\"Yes.\" \n\n\"Did you, in any way, express this to her?\" \n\nI thought of our moment in the river. The kiss. The intimate touching. The gaze into each other's eyes that felt nothing less than authentic. The sex... \n\n\"Perhaps.\" \n\n\"Well then...\" \n\n\"What if it's a trap?\" \n\n\"Let us worry about that. She won't hurt you, if that's what you're worried about. You're a State Department civil servant. Hurting you is a red line for the KGB.\" \n\n\"What if I don't like being deceptive?\" \n\n\"Look. You don't have to if you don't want to. Not that big of a deal. But plenty of relationships are built on deception. Just ask my ex-wife, ha!\" \n\n\"It's not the same thing.\" \n\n\"You're right. It's not. In this case, you'd be performing a great service to your country.\" \n\n\"Why should I?\" \n\n\"Why do it?\" \n\n\"I'm already serving my country. Why do this? Why do you need me to 'dangle'... or whatever?\" \n\n\"Simple, really. It's an opportunity to keep tabs on an illegal. It's nothing out of the ordinary. They do the same to us.\" \n\n\"An illegal?\" \n\n\"A KGB operative working without diplomatic cover. That's Lara, if what you tell me is accurate.\" \n\n\"Aren't you worried she'll suspect me of ... er... dangling?\" \n\n\"I'm sure it'll occur to her.\" \n\n\"And you're sure she's not dangerous?\" \n\nHe shook his head. \"I swear on my mother's grave.\" \n\nHe watched me, still waiting for me to say either 'yay' or 'nay' on the offer to be his fake double agent. Or was it just double agent? \n\nThe image of Lara, holding her pistol with steady confidence at the two men in her bedroom flashed in my mind. She must be deadly with a gun. That ought to frighten me regardless of George's assurance. I told myself to be frightened by it. But I'm not really frightened by it. I recalled the way she looked when she asked me for a kiss. How tender. How happy she seemed to be with me. This was my chance to see her again. Courtesy of the US Government. \n\n\"Ok. Tell me what I need to do.\" \n\n*** Venice *** \n\nThe next week, I called her on George's instructions. \n\n\"Hi Lara.\" \n\nA silent pause on the line. Then a tentative, \"Hello Kirby. It's nice to hear from you.\" \n\n\"Hey, Lara. I'm sorry about how I acted last weekend. I wanted to make it up to you. Can we meet?\" \n\n\"Sure. You know I would be happy to see you again.\" \n\n\"How about this weekend?\" \n\n\"I'm going to Venice this weekend.\" \n\n\"Oh...ok. Sounds fun.\" \n\n\"Would you like to come?\" \n\nMy answer was immediate and automatic. \"Yes, I would like to come. I won't be a bother, will I?\" \n\n\"No, of course not. I would love for you to come. I was going by myself. Now it will be just us two. I'm going to my family villa.\" \n\n\"You have a family villa in Venice?\" \n\n\"Yes.\" \n\n\"Ok. That's wild.\" \n\nI called George immediately after, on a pay phone per his instructions. \n\n\"She has a villa in Venice,\" I said when he picked up. \n\n\"Very nice.\" \n\n\"Is it normal for a KGB spy to have a villa in Venice?\" \n\n\"Usually, they settle for a dacha in the outskirts of Moscow. She must be well-connected.\" \n\n\"She invited me. I said yes.\" \n\n\"Good. If she asks you for any 'favors' let me know. Otherwise, have a blast.\" \n\nI met Lara at the S\u00fcdbahnhof, a major train station in Favoriten, in the evening, as the sun dipped just below the edge of the Vienna skyline. The sunset painted the clouds in hues of vanilla and rose apple red. I spotted her by her quirky outfit. She wore a men's oversized dress shirt, untucked, flowering loosely over tight jeans, with sleeves rolled up to her elbow. Her hair pulled back into a long ponytail that sprouted out from a baseball cap. \n\nWhen she saw me, she came over and gave me a strong hug and kissed me emphatically on the cheek. \n\n\"You look like you're ready to go to a ball game,\" I remarked. \n\n\"A ball game?\" \n\n\"Like baseball.\" \n\n\"Ah, I see.\" She laughed and pretended to swing a baseball bat. \"I'd love to see a ball game. It seems like such an event. Won't you take me to one?\" \n\n\"Sure. I don't know if they have baseball in Vienna.\" \n\n\"In America then.\" \n\n\"Not sure how easy that would be given that you are a Russian spy.\" \n\nShe took the dig in strides. She winked and said, \"It won't be as hard as you imagine.\" \n\nShe kissed me on the lips and said, \"Anyways, I'm glad you could come. We'll have the villa all to ourselves, no distractions. Come, let's go to our train cabin.\" \n\nThe cabin, contained in as much as half a car, had wood moldings gilded in gold. Thick green velvet curtains covered the windows giving the sense that we were in a luxurious garden suitable for Hapsburg royalty. In the center of the cabin, on a small mahogany dining table, a chilled bottle of Mo\u00ebt Champagne sat in a pewter ice bucket. Two crystal champagne flutes sat ready to be filled. \n\nLara grabbed my suitcase and tossed it into the closet, then went to open the champagne. \n\n\"This is incredible.\" \n\n\"Perks of having a rich father,\" she said as a matter of fact. \n\n\"You're like royalty.\" \n\n\"An heiress to communism, as if to a kingdom.\" \n\nHer cynical and cheerfully candid quip of her role in Russian society impressed me, but I quickly remembered her goal was to soften me up, to get me to be on her side, so perhaps part of laying on the charm for my American predilections. \n\nShe grabbed my suitcase from me and set it at the foot of the bed, and then immediately went to the chilled champagne and popped it. The cork went up into the crystal chandelier above us and some of the fizz splattered on the parquet floor. Lara giggled and filled the flutes and handed me one. \n\n\"It's not exactly a short train ride to Venice,\" she said, \"So we'll have to at least make it enjoyable.\" \n\nThe train would go to Graz first before crossing into Italy and wind its way through the gentle Alps that strung across the border of Italy and Slovenia. The next day, we would finally stop in Mestre, an industrial commune just across from the islands of Venice on the mainland side, from where, Lara explained, we would take a boat straight to her villa on the Grand Canal. The full Venice experience, she promised. I had always dreamed of visiting Venice, so the promise of such an exquisite experience excited me immensely. If this was how she planned to soften me up, it would work. Good thing that was also my plan all along. \n\nAs we drank, I went on the offensive, pelting her with probing questions. To which Lara answered enthusiastically, candidly as she swirled her champagne. I learned, for example, about her rich and diverse lineage. She was descended from a peculiar Venetian nobility. \n\n\"Spying is in my blood, you know. Rumor has it, my ancestors were spies for the Consiglio dei Dieci -- the Council of Ten, and I may very well be related to Casanova himself.\" \n\n\"That would explain a lot.\" \n\nThe Venice villa had been in her family for centuries. For aristocratic Russians, the family tree is bent strangely by history. I could see the tinge of Italian in her face now. There was a soft elegance not a Slavic sharpness to her cheeks, romance in her eyes, not piercing toughness, and her sunglow warmed whatever room she entered. \n\nI learned much more about Lara as we plied into our second champagne bottle. She was married briefly to a Czech poet and novelist, much against the wishes of her father. Quickly into the marriage, she begrudgingly accepted that her father's suspicions were accurate. \"I swore off love after the divorce,\" she said. \"It was a very depressing time for me.\" \n\nHer mother died in a car crash in 1969. She was fourteen then. That too seemed to affect her greatly, but she spoke only shortly and vaguely about the tragedy. \n\nShe was disarming with her intimacy -- ready to share any private detail about her own life without asking for reciprocation. But this was, as George had warned, a common espionage tactic. Even if the things she told me were true, they may well be craftily useless information, or otherwise strategic misdirection, as a magician might use against her audience. I must be ready to accept that her divorce and her deceased mother were fabrications. In any case, I was enamored by her, still on a cresting high from our sexual encounter last week so I accepted these stories into my heart unconsciously. \n\nBy dinner, the sun had dipped far below the rugged jigsaws of the Southern Austrian alps. We ate a three-course meal in a glamorous dining car and watched glittering alpine villages pass us slowly by in the moonlit twilight as the train made its winding way through the valleys between the grand peaks. By this point, I was deeply and pleasantly buzzed not just from the champagne, but Italian white wine, a Vitovska, fresh seafood and a wonderful risotto. Lara fed me luxury like fattening feed to geese, preparing me for the slaughter. But nothing about her behavior was predatory. She was gracious, lively, and carefree. I secretly hoped that her confession of being a spy was nothing more than a playful ruse, or a quirky fantasy, that maybe she was in fact simply an upper-crust Soviet girl making the best of her youth in the hedonistic West. \n\nAfter dinner, we went back to the cabin and lay in bed without getting out of our clothes, laying atop the bedsheets to continue our meandering conversations that had nothing to do with spycraft and everything to do with two young women falling in love with each other. Above us, the ceiling was glass so that we could see the countless stars and the milky way, and silver clouds that hung in whisps like glowing nebulae. Lara had turned down the cabin lights, so that only a low orange glow from a single table light illuminated the cabin. Lying next to me, she was a warm silhouette. I felt her breathing and smelled faint perfume on her neck. Like freshly cut roses. She drew into me. I drew in closer to her. We watched each other in the private dark, with silent, unremitting attention better than any conversation or lovemaking. She curled her fingers into mine and gradually, lulled by the gentle rumble of the train, we fell asleep. \n\nWe arrived at the Mestre train station in the golden hour. Morning sunlight strung through the sticky sea mist, hurrying the mist into the shadows. Two porters helped us with our luggage, to a taxi, which took us to the nearby marina. Lara walked over to a tarp covered boat on the floating pier, yanked the tarp off to reveal a sleek boat of glistening rosewood. \n\n\"That's yours?\" \n\n\"Yep. Well, my father's.\" \n\n\"You can drive it?\" \n\n\"Since I was ten.\" \n\n\"Well, of course. I should have guessed.\" \n\nShe crumpled the tarp up into a tight ball and tossed it into the bow cabin and held her hand out to me to lead me onto the boat. The porters placed our luggage in the stern, and Lara started the engine and deftly unmoored us and drove us out into the wide Venice lagoon. She punched the throttle, and soon we were skimming effortlessly across the flat artichoke green water. \n\nBoatmen in flat bottomed boats pulled on never-ending gillnets dotted with tiny flashing jewels of fish, piling the wet nets into their boat. Men stood waist deep in the shallow water, in black rubber aprons, collecting oysters or mussels from sunken crates. Though it was only nine in the morning, the sun was already bearing down oppressively. The thin fishermen were leathered golden brown by it. Watching their back breaking work exhausted me. But the Adriatic breeze was pleasant. My loose hair flapped wildly while we jetted towards the old city. Lara turned the helm with one hand while the other held her baseball cap securely to her head. She pointed out all the landmark features of the islands -- large domed cathedrals and palazzos that stood tall among the salmon red and whitewashed buildings and the small ristorantes and cafes she most enjoyed. The terrazzas were filled with lounging people in cool colorful summer clothes and straw sun hats. On the right side was Giudecca, an island full of shipyards and dockyards and a prominent but abandoned building, the Molina Stucky - a flour mill and pasta factory. We passed into the shadows of the basilica di Santa Maria as we entered the Gran Canale, passed a dock near the basilica and near the Ponte dell'Accademia where black and white striped gondoliers sat at the backs of their boats and joked and chatted loudly with one another as they waited in the bleach bright sun for tourist clients. She turned right abruptly into a single slip in front of a beautiful rust-red building. \n\nAfter tying up the boat, unlocked an iron gate, and swung it open to reveal a spacious, sunny courtyard blushing with lemon trees, gnarled olive trees and weather-smoothed marble statues. Sparrows in birth baths chirped cheerfully. \n\nThe villa itself was aesthetically a charming, chaotic mess, full of dusty and crooked artwork and vases and marble statues. The marble floor was cracked in places and worn smooth. The messiness seemed preserved as if to clean or organize any of it were to commit sacrilege. The same could be said for the rest of the city. It was all a beautiful ruin. \n\nLara pulled back the thick red curtains and opened the tall veranda windows. The outside salty freshness sucked the dusty air out of the spacious room. \n\n\"This is magnificent,\" I remarked. \n\n\"Come, there's not a minute to lose,\" Lara said. \"I have a lot to show you. Let's put your stuff in your room, then we'll have breakfast at San Marco. Then, the beach!\" \n\n\"What about seeing the rest of the city?\" I protested. \n\n\"We'll see it after the beach. I promise, you'll get to experience all of Venice before the weekend is over.\" \n\nLara put on a thin cotton dress that showed through to her sharp V-shaped and neon pink bikini, a floppy wide-brimmed sun hat, and a pair of wayfarers. I tried matching her in her stylish comfort. A short flowery skirt, a white halter top. She took out her Nikon. Snapped a photo of me. \n\n\"Are you going to lug that around everywhere?\" \n\n\"Of course. I want photos to remember you by.\" \n\nWe went at once back to the boat. She used the mooring line against the bollard and pulled the boat out into the canal, while simultaneously spinning the helm of the boat to spin us out parallel to the flow of traffic. She tossed the line aside, then gunned the throttle and merged us into the slow line of barges and the public vaporetti taxis. \n\n\"The water is your natural habitat.\" \n\n\"Yes, quite so,\" Lara replied. \n\nShe continued to prove it, expertly weaving in and out between the slower moving water taxis and buses, past the wooden Ponte dell'accademia, past the pearl grey Basilica, and into a mooring near the Piazza di San Marco, near the Campanile, a tall red, white bell tower with a green patina roof. \n\nThe waiter, an old man in a white tuxedo seemed to know Lara. He came to her abruptly, gave her two kisses on the cheek and spoke a rapid, excited Italian and squeezed her cheeks. \n\n\"He's been here as long back as I remember,\" she explained. He looked at her the way a nonno his grandchild. He brought us flaky cornetti with apricot jam and cappuccino. He lingered while we ate, talking with Lara, presumably catching up with life since the last time she's been in Venice. \n\nWhen we were finished with our breakfast, we went back out on the lagoon. Lara at the helm, confidently making her way through the channel buoys towards Lido. Magnificent, gleaming sailing and motor yachts dotted the lagoon. Vaporetti and fishing boats chugged slowly along their routes. \n\nLido di Venezia is a long, thin island, full of grand hotels and baths built mostly in the 19th and early 20th century. It was the outermost island and acted as a protective barrier for the city against the sea. On the seaward side, a stretch of golden sand beach littered with parasols and beach chairs and where people come to sun themselves and escape the summer heat of the city. \n\nWe arrived at the Hotel Excelsior. In the marina, a well-groomed attendant in a clean white shirt and white shorts tied the boat up and helped us out and escorted us to some lounging chairs, where we were met by who I can only describe as a butler. Lara ordered an Aperol spritz for both of us and when the butler was on his way back up to the hotel bar to get our order, Lara fanned her hand and exclaimed, \"Let's cool off before we die.\" \n\nShe pulled off her cotton dress. \"Come to the water with me,\" she beckoned as she walked towards the sea. I couldn't help but gawk at her heart-shaped hips swaying elegantly, her butt and thighs rippling with each cat-like step she took towards the water. \n\nI followed suit shortly, pulled my sun dress off my swimsuit, feeling rather self-conscious and inadequate compared to Lara the Coco Chanel supermodel. Though I couldn't say I was too bad looking myself, I was a bit too pale for a sun goddess, and I'd likely end the day looking like a sun-ripened tomato. ",
        "We waded for a few minutes out in the shallow water. \n\n\"So why don't you just live here, Lara?\" \n\nLara shrugged. \"Venice can be a bit much if you linger here. You can become quite aimless. I find that to be a dangerous lifestyle for me. Vienna is beautiful too.\" \n\n\"And has plenty of targets for the KGB,\" I added. \n\n\"Of course,\" she replied. \n\nI smiled. \n\n\"Well, I'd be tempted to stay here forever. Venice is beautiful.\" \n\n\"You're welcome to come whenever you want,\" said Lara. \"Be my guest.\" \n\n\"Anyways, Chicago seems to be a nice city too.\" \n\n\"Yeah.\" \n\n\"I would love to see it,\" Lara said and added, \"I love jazz.\" \n\n\"Have you ever been to the states?\" \n\nShe shook her head. \n\n\"What would you like to see there?\" \n\n\"Well, New York City first of all.\" \n\nA dreamy smile crossed her face, and her eyes grew wistful. She sunk chin-deep into the water and her hair floated in the gentle waves. \n\n\"I want to see the Statue of Liberty. And go to the top of the Empire State building. And I would very much love to go in the fall and winter to see the Macy parade, and the Christmas tree at Rockefeller.\" \n\nShe had laid out all of the typical New York tourist traps, so specifically, so intently, as if she had thought through these many times. She continued, \"But of course, even more than that, I want to see the desert. The Grand Canyon. Utah. Taos, most of all.\" \n\nI snorted in laughter. \"Taos? Taos, New Mexico?\" \n\n\"Is that so strange?\" \n\nI shrugged. \"Just very random.\" \n\n\"I saw photos of it in a book once. Oh, it was wonderful. It looked like nothing I've ever seen. Like it was a different planet. A beautiful planet. Even through the photos I could tell there is a mystical energy there. I told myself I would see it if I ever had a chance to go to America. Maybe you can be my tour guide,\" Lara replied. \"Maybe we can go to Taos together.\" \n\n\"If our countries ever stop fighting, it would be my pleasure.\" \n\n\"Don't you forget to take me to a ball game too.\" \n\nAfter wading around a bit, I noticed the Aperol spritz sweating on the table by our beach chairs, so I went out to sip on mine before the ice melted. Lara elected to stay in the water a bit longer. The butler arrived as soon as I finished my spritz and asked if I would like another. I said yes, and another was in my hand by the time Lara arrived at her beach chair. I handed her spritz to her. \n\nBy the time the sun rode noon, beach chairs all around us filled quickly with hotel guests, so Lara laid out a beach towel in the sand down at the shoreline, where the water lapped against her feet. I joined her. I laid a beach towel next to her and enjoyed the coolness of the water against my toes. She took her top off to sun her breasts. I did the same. \n\n\"Well, well, look at you. Turning into quite a natural European.\" \n\n\"What can I say, you're a terrible influence.\" \n\nShe giggled and licked her lips. Her eyes went down to my breasts. She shuffled her body closer to mine. She dug her feet into the wet sand. The waves came up across them, covering them fully with more sand. \n\nShe gave me a kiss on the lips, then my neck, then drew her face downward towards my breasts. I pulled back and glanced back worriedly at the people in their beach chairs. \n\n\"Not here!\" I whispered. \n\n\"They won't mind.\" \n\n\"I mind!\" \n\nShe brought a hand secretly to my stomach and raked her fingers softly against my skin. I sighed. \n\n\"You are such a terrible influence. Why?\" I complained. \n\n\"Because you are so irresistible right now,\" she answered. Then she went for my nipple again. I only closed my eyes this time pretending as if I kept them closed, I'd be invisible and no one could see her licking, and sucking my nipples. \"Oh God,\" I gasped at the electric feel of her cool tongue. I shivered and moaned as she used her mouth to play with each of my nipples in turn. She did it slowly, eyeing me, delighted in my expressing so much discomfort in trying to maintain composure so as to not draw attention to us. \n\n\"Ok, that's enough,\" I whimpered and pulled back from Lara. Her lips were glistening with saliva. She wiped it off with her forearm and lay down on her beach towel. \n\n\"Tonight,\" I assured her. \n\nI looked around us. People still relaxing in their beach chairs. Most seemed to have dozed off. Perhaps no one had noticed. I stifled an incredulous laugh and relaxed. I tried dozing off, concentrating on the biting warmth of the sun, the cawing sea gulls and the lapping waves. I tried not thinking about how good Lara made me feel. I still felt her tongue on my breasts. My pussy ached badly for her. \n\nAs the sun dipped back towards the horizon, heavy afternoon clouds floated in, refracting the sunrays, causing everything to drip in golden light. The air felt rich and heady, a feeling I attributed to the spritz, but couldn't shake the feeling that I was somehow living in a dream. In a way, I was, deliberately so, ignoring the real reason for her interest in me and my purpose to bait her into a trap. \n\nWe went back to the villa at sunset, cruising the lagoon as slow as a sailboat. Lara let me drive the boat, and, in a vote of confidence, she sat on the bow, took pictures with her Nikon, waved at others passing in their boats. \n\n\"Just drive between the red and the green buoys, and don't crash into anyone.\" \n\nShe took over as we neared the entrance to the grand canal and piloted us skillfully into her private marina. \n\nFor our evening out, she wore a sky-blue dress with a pleated skirt. Subdued, elegant, and accentuated her natural beauty being hemmed at her most delectable features. I wore the only dress I had brought with me to Vienna, a red cocktail dress that I had bought for all the State Department receptions. \n\nWe walked lazily through Venice to get to her favorite dining establishment, crossing the Ponte dell'Accademia. The sky had turned to a royal velvet purple with some of the early stars starting to show. The canals glittered orange with the lights of the city. People sat out on the terrazas enjoying cocktails and wine, their chatter echoing off the walls of the buildings that towered over the narrow streets. We weaved through couples walking hand in hand, so enchanted they seemed to be doing a synchronized waltz through the city streets. Lara led me left then right, then left again turning down nearly every alley we came across until I was thoroughly clueless as to where we were. We came out abruptly onto a small plaza that looked across a wide waterway towards Giudecca. The buildings on the island were silhouetted against the purple sky. The many windows dotted the buildings like strung Christmas lights. \n\nThere were countless restaurants to choose from, but Lara picked the shabbiest. A nook squeezed into a gap between two buildings like a makeshift afterthought. A few tables spilled out onto the street, and a crowd packed into it like sardines. People stood shoulder to shoulder with their wine or frizzante held closely to their bodies but didn't seem to mind the bustling claustrophobia of the place. This contrasted with the surrounding restaurants that held their guests at politely spaced, white-clothed tables. \n\nAn attentive bartender spotted Lara, gave her a happy smile and pointed us towards the back of the small room. As we squeezed through the crowd, the room turned into a secret cave which opened out onto a terraza against a narrow canal. It was much less crowded here, and there was a stage and a dance floor. Musical instruments stood ready, gleaming beneath dim white spotlights. A baby grand piano topped with candles that dripped wax onto the shiny black top, a cello, electric guitar and a saxophone in their stands. \n\n\"Dinner and a show?\" \n\nLara nodded. \"And maybe some dancing too if you are up for it.\" \n\nThe waiter lit our candle and stood patiently waiting for our order. \n\nLara rattled off Italian, the waiter nodded, memorized the order and left. The wine came quickly. \n\nI sipped it and remarked, \"This could be the cheapest wine in the world, and I would never know.\" \n\n\"Do you like the taste?\" She asked. \n\n\"Yes, I love it.\" \n\n\"Then it might as well be the most expensive wine in the world.\" \n\n\"What is it?\" \n\n\"The house wine.\" \n\nI took another sip and could taste all of Venice in it. I could really be convinced that it was the best wine in the world. \n\nAccompanying the wine was our aperitivo. An assortment of cured Italian meat and cheeses, and a small dish of polenta each. \n\nAs we finished, musicians came out and played lively jazz music. The lights were lowered. Cigarette smoke filled the air and glowed like fog in the moonlight as it swirled above our heads in the table lamp light. Several people got up to dance. \n\n\"Let's dance,\" Lara said. So, we went to the dance floor and danced. \n\nThe tables were cleared from the dining room, and the crowd of dancers grew filling in from the standing crowd. I thought it would be strange to hear live jazz in a Venetian osteria, but it fit perfectly. \n\nAfter a few songs, I became exhausted and so went to the bar to cool off with an iced cocktail. Lara joined me of course. I surprised her by ordering each of us a shot of vodka. \n\n\"Well, well, well, looks like we are about to have a long night,\" she exclaimed as I handed her the shot. \n\n\"How do you give a toast in Russian?\" I asked. \n\n\"There are many ways. Perhaps we can say... 'za lyubov'.\" \n\n\"Za lyubov,\" I repeated, and we drank our vodka. \n\n\"What's it mean?\" \n\n\"To love.\" \n\nThe vodka was the tipping point. I felt so immensely free and daring with my actions. I wanted to dance with Lara. So, I dragged her back out onto the dance floor. I held her closely. We kissed. Her body and her clothes were moist from sweating. Her bangs clung wet to her forehead in curvy tendrils, as they get when humid. Her eyes watched mine with excitement, showing a gleeful surprise at my sudden initiative. \n\nThe band played Bossa Nova. I felt the thrumming double bass on my skin and the guitar in my core. My heart pounded excitedly, and my head swam. It was sweltering like the tropics that summer night from the heat energy coming off every dancer. We might as well be on a moonlit beach in Rio. \n\nI didn't know how to dance Bossa Nova or samba, but neither did Lara. It didn't matter. The feeling of the rhythm, and Lara's body against mine was all I needed. In any case, no one cared. \n\nLara spun me in a pirouette and leaned me down and kissed me into the lean. We fell to the ground. A nearby couple picked us up off the ground, and we laughed and went back to the bar for another pair of shots. \n\nWe toasted again, this time in Czech (Na zdrav\u00ed!), and drank and from then on, the night swam in my head. Time became fuzzy. The next thing I knew, we were out in the streets, stumbling and bouncing off walls, trying not to fall into the canal as we held onto each other. Our laughter echoed through the mostly empty alleys. \n\nLara seemed so drunk I was sure she was lost. In fact, I wasn't sure where we were, or if we had a plan. But, by a miracle, it seemed, we arrived at her home. We ended up in her living room. I plopped down on the couch in front of the cold fireplace. Lara put on a record. More Bossa Nova. The Girl from Ipanema. She put an unlit cigarette in her mouth as she danced solo in front of me, humming softly along as it played. Her voice was pleasant, a lullaby. \n\nA strap of her dress fell off her shoulders as she danced. She attempted to replace it, but failed in her drunken state, so she left it to the fate of cinching her dress down to the crest of her breasts. Her hair fell across her face. She brushed it aside to watch me as she danced. \n\nShe beckoned me to join her. I stood. The blood rushed out of my head, and my knees went weak, so I plopped back down on the sofa. She came over and tried hoisting me up, but I was such a deadweight, that I brought her down atop me instead. We both giggled childishly, and this turned into soft kissing. \n\nLara caressed my face. I leaned my cheek into her warm hand. She smiled at me, hiccupped, then asked, \"Why did you want to meet me again?\" \n\n\"What?\" \n\n\"You said that I was dangerous. You said we couldn't meet. So why did you call?\" \n\nGeorge, of course, prepared me for the question. \n\n\"I really want to see you again. I like you.\" \n\nIt was an excuse so disgustingly simple that if it were not true, I'd have a hard time saying it with a straight face. The reality was it was true. I was dying to see her again, to touch her again, to feel her warm body against mine. \n\n\"Only like?\" \n\n\"Um...\" \n\nShe kissed me. \"You don't have to answer. Can I ask you a favor?\" \n\n\"Depends on the favor.\" \n\n\"I know I ask you a lot of favors.\" \n\n\"I'll let you ask again.\" \n\n\"Ok.\" \n\n\"What's the favor?\" \n\n\"Make love to me.\" \n\nWe kissed again. She pressed her body to mine and brought her breasts up to my face. Taking the hint, I removed the bra from her breasts, and put my mouth around a nipple and sucked. As I did this, she ground her pussy slowly against my thigh through her dress. It was hot and wet. \n\nWhen I was done with each of her nipples, we swapped places. I put her on the couch and straddled her and took my dress off over my head. She kissed as much of my naked body as she could reach. \n\nThe Bossa Nova stopped; the record player continued spinning, giving off a soft white crackling noise. Outside, crickets chirped in the gardens, the vaporetti motors gurgled in the canals, people chatted and laughed muffled laughs in the terrazas, and somewhere someone sang an Italian love song. Above the soft din of these noises, the sucking noise of tongue kisses on my body, punctuating tiny shocks of pleasure, leaving marks of saliva with a lingering coolness that contrasted nicely against the radiant heat of our bodies, and the summer night. \n\nI bent my neck down to kiss her neck. She leaned her head aside to give me more to kiss, eyes closed, mouth agape, mouthing a silent gasp. I went down, kissing down her arched body. I removed her dress and her panty, leaving them in a pile on the floor around her ankles. I pulled her knees apart, and I kissed up her thighs. As I reached her clit with my mouth, her body jolted and she gasped and curled her fingers roughly into my hair, pressing my face deeper into her. Her pussy was moist, her clit swollen. I penetrated her with two fingers and pumped slowly as I licked and watched her writhe as if in pain. \n\nI couldn't help but smile at the thought that I had her, this dangerous KGB spy wrapped around my finger, completely helpless to my torture of pleasure. I felt completely in control, and that made me even hotter. \n\nI licked her inches from orgasm, then stopped at her most vulnerable. I wanted her unsatisfied, starving, desperate for more and realizing she wouldn't get what she wanted unless I too got what I wanted. \n\nWhen I stopped, she blinked her eyes open as if awakening from hypnosis or a deep sleep, unsure of her whereabouts, and sat upright. She bit her bottom lip, her eyes glimmered with an excitement about a way to get back at me. She threaded her legs between mine. Our pussies touched and she began thrusting, rubbing her pussy against mine, her swollen clit against mine. \n\nSweat dripped from my brow into my eyes. It stung a little, but I let it sting. Her wet pussy felt too good to interrupt. That familiar electricity welled up inside me again. She was about to bring me to orgasm again. \n\n\"Oh God, I'm going to come,\" I moaned. \n\n\"Me. Too,\" she heaved. The orgasm seized my muscles, then exploded inside me in an intense release. Shortly after, I felt wet ecstasy squeeze Lara. Our seizing muscles caused us to curl around each other in a tight embrace. \n\nLara relaxed for a moment, calming her deep breathing. A wind came in through the opened windows, carrying the sensual, sticky scent of the sea. \n\n\"That happened too fast,\" I confessed. \n\n\"Indeed. You're welcome.\" \n\n\"I thought I was doing you the favor.\" \n\n\"Yes, but I am returning it. That's how these things work. Isn't it beautiful? Now come lay with me.\" \n\nI obeyed, crawling onto the couch with her. We held each other, nuzzled in silence for a few moments. I spent the tender moment savoring the scent that came off her hair. Twisted orange peel. \n\nShe fell asleep almost immediately, her arms clinging tightly to my body. I stayed awake a little bit longer, thinking a lot about nothing at all. Her steady breathing, her heartbeat, pounded calmly against my skin. I wish I could feel her heartbeat forever. Without condition. \n\nThe next morning, I woke and found myself covered in a light duvet. Sunlight beamed in with a golden color, and the breeze brought a damp coolness from the lagoon. Lara was not next to me. \n\nA hangover made my body limp, but more than that, I felt a strange lightness. Everything was tinted in surreal colors. I went out to the garden wrapped in the duvet, discovering Lara sitting on the terrace sipping an espresso. She had my book, Doctor Zhivago cracked open, and seemed engrossed by it. I stood in the doorway enjoying watching her read it for a moment then said, \"You can borrow it if you want to keep reading it.\" \n\n\"Can I?\" \n\n\"Don't get caught with it.\" \n\nShe clasped it shut, hugged it and placed it gently on the table, then stood to meet me, draped her arms around my shoulders and said, \"How about a caf\u00e9?\" \n\n\"Sure, if you don't mind.\" \n\nShe poured me a cup. The coffee smelled fresh, and strong. I drank it and thought that it was the best espresso I had ever had. \n\n\"Mm, this is marvelous,\" I remarked. \n\n\"Only the best for you.\" \n\nShe slid a hand onto my thigh, and whispered in my ear, \"You were lovely last night.\" \n\n\"As were you,\" I replied awkwardly. She gave me a kiss on the cheek. \n\n\"I could have you again right here, after this coffee.\" \n\nI laughed. \"No rest for the wicked.\" \n\n\"Indeed.\" \n\nShe sighed. \n\n\"On that note. I have something I need to speak to you about.\" \n\nShe lit a cigarette, and nonchalantly blew out a puff of smoke. \n\n\"Oh?\" \n\n\"Yes.\" \n\n\"What sort of wicked thing do you need to speak about?\" \n\n\"Another favor to ask you.\" \n\n\"Given the favor you've asked of me last night, I'm intrigued.\" \n\n\"Not the same sort of favor, I'm afraid.\" \n\nThis was it. Fantasy fading into reality. My face darkened. So did hers. \n\n\"I see. I was wondering when we would get to this. Ok. What do you want from me?\" \n\nShe tapped her cigarette into an ashtray, then held it limply with her wrist resting on her knee. She looked out onto the grand canal as she spoke. \n\n\"I find it difficult to broach such a subject. I thought I might as well just say it. I hope you don't mind.\" \n\n\"There was an inkling of hope in my heart that everything about you being a Russian spy was only my imagination.\" \n\n\"I'm sorry to disappoint you.\" \n\n\"Nothing really for you to be sorry for. Anyways, what does the Rodina request?\" \n\nA slanted, thin smile came to her lips. \n\n\"My boss, perhaps you know him -- Yuri Andropov -- believes your President will launch a nuclear strike within the year. He's a paranoid psychopath... But admittedly, it is hard to refute his fear without verifiable proof.\" \n\n\"To be honest... I kind of get where he's coming from too.\" \n\n\"Then you must know that it's a high priority for the KGB to determine whether it's true or not. Whether a nuclear strike is imminent.\" \n\n\"I don't know what I could do for you, Lara, even if I wanted to. I don't have any information that would be helpful.\" \n\nIt was sort of a lie. In my job, I had eyes on many diplomatic cables. I even had access to other high-level documents as well as the Sensitive Compartmented Information Facilities at the embassy. But George told me to be aloof. Play hard to get. Otherwise, she would get suspicious. ",
        "\"Do you know anyone who might be able to help?\" \n\n\"Help the global communist revolution? Right.\" I crossed my arms and smirked. \n\n\"Help prevent a nuclear holocaust.\" \n\nHer eyes were steady, staring at me now. Her face somber. A genuine plea. \n\n\"Kirby, the Soviet Union is in a crisis. Our economy is in shambles. The Russian people are tired and fearful. Your president sees this, and he may be, let's say, a little too enthusiastic about delivering us a fatal blow. It's a terrible scenario for Russia, but not much better for the rest of the world.\" \n\nIf George hadn't prepped me for this, I had to admit she would have elicited a great deal of sympathy from me. I wasn't the biggest fan of Reagan and his saber rattling. Everything she has said so far, George has planned and prepared me for, up to and including the request for a contact at the embassy. \n\nThis was the moment. I either tell her about George, or I don't and walk away. If I said no, Lara would give up on me. She'd walk away. If I gave her George, well, who knows what would happen to her. Knowing the CIA, I feared the worst. But then again, wasn't she just using me? Time for the fantasy to come to an end. I sighed. \n\n\"I know someone that may be able to help you,\" I said, setting the trap. \n\nShe put a hand on my knee. \n\n\"I want to be perfectly clear: I am not asking you to betray your country. I'm asking you to be on the side of peace. The truth is, I love you, Kirby.\" \n\nI put my hand atop hers, entwined my fingers into hers and smiled, but said nothing in return. I didn't have the heart. Instead, a small rage welled up inside me. For the decisions I've made. For agreeing to betraying Lara's trust. Some of that rage was reserved for her, too. Because despite her proclamation of love, I knew that she was using me for another purpose too. Love was expedient for her, as much as it was for me and even if we were two women that have fallen in love with each other, it was not enough to prevent worldly events from taking precedence. A taste of my divorce came up like a little bit of bile. \n\nA flash of a fantasy came to me -- where I confess everything to her, and she says, \"fuck it, let's run away together.\" \n\nIt was only a flash of a fantasy. She smiled weakly, observed me curiously, perhaps seeing the wrenching struggle written on my face. She snubbed her cigarette out in the ashtray and kissed me. \n\n*** The Traitor ***\n\nThe leaves died in autumn, so did the romance. I linked Lara up with George, and after that, I no longer saw her. George instructed me to stop talking to her. I tried calling anyway, but the number didn't work. I tried her apartment, but she wasn't there. I should have expected it, but some na\u00efve part of me wanted very much for our romance to persist. Of course, it wouldn't. It shouldn't. I was only a means to an end. I knew that, but it still felt like a cruel betrayal. All I really had left as consolation, beside the memories of my short adventure with Lara, was the fact that perhaps I had done something good. Another consolation was the bit of schadenfreude from knowing that Lara thought she could use me so cheaply, but really, I had used her. Admittedly, it wasn't worth the bitter loneliness. \n\nSetting the meeting had been a rather simple affair. I invited George and Lara to my apartment. We had dinner and talked nothing really about politics. A clinical conversation. A business meeting. There was a careful treading through conversation. Somewhere in the conversation -- and I had missed it completely -- they arranged another meeting. Anything else that would transpire after that dinner, was not for my eyes or ears. Strangely I felt some visceral jealousy that George was meeting her regularly while I was not. A jealousy that devolved into resentment, then loneliness, then further into bitter anger, the sort of bitter anger that stemmed from an unexpected break up. \n\nSo, I continued my normal work at the State Department, as if I had no part to play in some grand espionage scheme, trying my best to let the past be the past, understanding that if there was ever love between me and Lara, there was never a chance for it to rekindle and that there was nothing I could do about it. \n\nOne rainy November evening, when the memories of summer had faded, and seemed decades ago, when the chestnut trees were skeletal, and fallen chestnuts covered the main avenue that cut through Prater, and the broad leaves thick and slippery on the pavement, I spotted a bright blue wool coat standing beneath a ghostly lamplight, a familiar figure holding a black umbrella. \n\nIt was Lara. \n\nI froze like a deer in the headlights. I wasn't sure what to do. She must have been on the job, maybe waiting for a drop from George. Should I walk by and pretend to not notice her? \n\nShe looked up, noticed me, then turned and walked away. \n\nThis reaction angered me so much that the urge to chase to confront her sprung up inside me like a powerful coil. \n\nI stepped rapidly after her, closing the distance. \n\n\"Hey!\" I shouted. Several people turned their heads. I ignored them. My mind boiled over with unreasoning rage. Lara started to walk faster. \n\n\"Hey, you,\" I shouted louder. \n\nThat it was dumb to bring attention to a KGB operative had crossed my mind, but I was too angry and reckless to care. I chased her and yelled after her, and she responded only by speeding up to try to lose me. She didn't turn her head or acknowledge me in any other way. \n\nShe turned right and headed straight to the imposing Ferris wheel, the Reisenrad, that marked the entrance to Prater. She stopped right before it, and I stopped a few paces away, breathing heavily. \n\nI wanted to say something clever and biting to her, something that would let her really feel some of my anger, but I was at a loss for words, so I just stood there, waiting to see what she would do, now that I had her cornered. \n\nThe Reisenrad glowed a gloomy, ominous red. It came to a stop and a man stepped out of the operator's booth. He nodded to Lara and leaned against the wall and lit a cigarette. He watched her as if waiting for her to tell him to do something. \n\nLara finally turned to me. \"Come for a ride?\" \n\nShe beckoned with her hand, folded her umbrella then went into the Ferris wheel cabin that was stopped at the loading platform. I followed hesitantly. \n\nWhen we were inside the cabin, the rain picked up, pattered noisily against the tin roof. She sat politely, brushed the rain drops off her coat. I sat opposite her. She nodded at the operator, and he walked into the booth and started the wheel. The cabin rose slowly. The misty cityscape came into view. The Danube a sad blue glowing ribbon in the distance, reflecting the moonbeams that came through the clouds. We watched each other in silence until the cabin came to the crest and the wheel stopped. The cabin lurched; I gripped the edge of my seat. Lara placed her handbag beside her. Her revolver might be in there, I realized. \n\n\"We don't have too long. I have to tell you something important, Kirby,\" Lara said. I noticed bags under her eyes and her cheeks pale, even in the red light. \n\n\"What is it?\" \n\n\"George is not who you think he is.\" \n\nI laughed. It came out almost like a gleeful cackle. \"Oh yeah? What makes you think that?\" \n\nI smirked. I wanted to point and laugh but I restrained myself. I needed to be careful not to reveal anything, particularly since I was now trapped in a cabin suspended high above the ground with a trained KGB agent and her gun. I waited for her response. \n\n\"George is selling secrets.\" \n\nI rolled my eyes. \"Um, yeah. That's the point, Lara. That's why I put him in touch with you.\" \n\nShe shook her head. She came over to sit next to me, placed her handbag on her lap. Though I could feel her anxiousness like electricity in the air, she kept her calm. She tried putting a hand on my thigh. I scooted away from her. \n\n\"This will surprise you, Kirby...\" \n\n\"At this point, I'm used to surprises.\" \n\n\"He's selling actual secrets.\" \n\nI narrowed my eyes on her. \n\n\"Still waiting for the surprise, Lara.\" \n\nShe leaned against the window frame. Looked down at the people who were dots now below us. She traced a curved line in the condensation on the windowpane. \n\n\"He thought I was his contact in the KGB in Vienna.\" \n\n\"Aren't you?\" \n\n\"I am. And I'm not. He's not a dangle, Kirby. He's a mole. I'm the mole hunter.\" \n\nI stared at her. Obvious confusion written on my face. \n\n\"George has been a double agent for over a decade. He started passing secrets in Manila. Then in D.C. He tried the same here. He tried with me.\" \n\nThe realization hit me like a slow train. \n\n\"You work for the CIA.\" \n\nShe nodded. \n\nShe smiled weakly. With trepidation, she went to put a hand on my thigh again. This time I let her. Her hands felt nervous. I put my hands on top to calm them. They were cold from the weather. \n\n\"Do you believe me?\" \n\n\"I don't know. Probably not.\" \n\n\"It doesn't matter. Just know that George has been tipped off. He suspects me, but also you. Rage is a dangerous quality in a man. Which is why I am asking you to leave Vienna.\" \n\nMy mind and my heart raced. I struggled to comprehend the things she was telling me, though I felt that she was telling the truth. My intuition told me she was telling me the truth. She let me sit quietly to process the information that was absurd yet plausible. The wind howled as it passed through the gaps in the windowpane. The car creaked as it swayed. \n\n\"Where do I go? For how long?\" \n\n\"Just away from Vienna. For the weekend at least.\" \n\n\"I don't know. I need time to think.\" \n\nShe sat back, her shoulders drooped, seeming defeated, but knew that's how I would respond. Then she unclasped her handbag and reached in. The revolver, I thought. She's going to use it against me. I curled up into a ball and held my hand out. \"No!\" I cried. I shut my eyes and tried kicking her away. She held my leg still. Nothing happened, so I opened my eyes again. She held out a book -- my copy of Doctor Zhivago. \n\n\"I love this book,\" she said. \"Thank you for lending it to me.\" \n\nI took it silently, relaxing, apprehensive for her next move. She cracked open the cabin window and waved down below. The cabin lurched into motion and Vienna began to rise to meet us. \n\n\"Can I ask you for a last favor, Kirby?\" \n\nI stayed silent, only stared. \n\n\"The last one, I promise.\" \n\nI nodded. \n\n\"A final kiss.\" \n\n\"Ok.\" \n\nMy muscles relaxed. I let my guards down. My arms fell to the side. She moved in and kissed me tenderly on the lips, holding it there a long while. Her warmth, a warmth I haven't felt what seemed like decades was lovely. Her scent, faint orange, reminded me of summer. It reminded me of the river, and of Venice. \n\nWhen the Ferris wheel stopped again, we were at the bottom. The long kiss ended. She slid the cabin door open, looked back at me and said, \"Promise me you'll leave Vienna, Kirby, at least for the weekend.\" \n\n\"Will I see you again?\" I asked. \n\n\"I don't know,\" she said and was gone. \n\nI left in a daze. Looked around for her, but she was nowhere to be seen. So, I went back home in a daze, trying to make sense of it all. \n\n*** \n\nMy apartment had an unsettling quietness to it in the darkness. Orange city light came dimly in and caused things to cast long phantom shadows. The window was cracked open. There was an arc of raindrops on the floor beneath it. Did I leave that open? Clothes strewn across my couch. Nothing out of the ordinary about that. Just as I had left them. I think. \n\nI set the book down on the coffee table and the first thing I did was get out a suitcase. I left the lights off for fear that turning them on would advertise that I was home. \n\nI propped the suitcase open on my bed and started piling clothes indiscriminately into it. Just for a few days, I thought. Not that complicated. Maybe I'd go to Salzburg, or Innsbruck, or Milan, or back to Venice. Yes, maybe I'll go back to Venice. I liked it there very much. No, Venice is too obvious. He would be expecting that, waiting for me at the train station. Oh God, I thought frantically, how do I hide from a rogue CIA agent? A trained killer? Not the sort of thing they teach us at the Foreign Service Institute. \n\nWhat if he's watching the apartment now? What if he's in the apartment? I froze. Listened for any signs of life around me, feeling very vulnerable. \n\nI laughed an exasperated laugh. What if I just called the security office? Tell them everything? I would be safe then. Surely, they have a protocol for such a situation. I picked up the phone and was about to dial. It was rather late in the evening, but there's always a watch officer there. They would tell me what to do. \n\nNo dial tone. \n\nI pressed buttons randomly. No tone at all. The phone was dead. I lifted the phone base up and found the cable snipped. Real fear crackled through my body like sharp lightning. Fuck, what do I do? Someone had been in the apartment, or was in there still, and I didn't have a weapon. \n\nI grabbed my coat and went for the door. A large silhouette blocked the door. I screamed, fell to the ground, pushed myself up against the couch. The figure flipped the lights on. It was George in a rain-splattered khaki trench coat, his eyes and mouth creased in a raging calm. A black pistol with a silencer in a black-gloved hand. \n\n\"Well done, Kirb,\" he said. \"You got me.\" \n\n\"I don't know what you're talking about,\" I stuttered breathlessly. My hand reached out behind me, grabbing at air, hoping desperately for a weapon, something, anything, to defend myself. His sigh was a bull's snort. His eyes narrowed on me. Lara tried to warn me. But her warning had come too late. He must have been waiting here while we were out riding on the Ferris wheel. \n\n\"Are you FBI?\" he growled. \n\nI shook my head. \"No. Please, I'm not.\" \n\n\"Don't try that, you fucking dyke.\" \n\nHe walked over coolly, kicked me hard. \n\n\"You set me up.\" \n\n\"I didn't.\" \n\n\"Fuck you.\" \n\n\"I didn't know.\" \n\n\"Didn't know what?\" He asked through gritted teeth. \n\nHe raised the pistol at my head. The muzzle of the gun was only a foot from my nose. He repeated his question. \"Didn't know fucking what?\" \n\nI suppose it was the adrenaline, or consignment to my fate, or both, but my fear suddenly vanished, and a calm purpose overtook me. I narrowed my eyes, looked at him with contempt and sneered, \"That you are a goddamn traitor.\" \n\nI spat at him. \n\nHe shook his head, chuckled. \"Bye, Kirby.\" \n\nThen, a deafening cracking sound and a white flash. The air filled with an acrid scent. No sharp pain came. No thud of a round. No red. No turn to blackness. Surely, it was the adrenaline, making death easy for me. I held my breath for it to come, for the world to fade. But nothing. \n\nI heard a wet cough. I opened my eyes, looked up at George. His mouth was agape. A gurgling wheeze issued out from it. A foaming pink blood oozed from his lips. He wavered. His eyes rolled back into his head, and he fell into a crumpled pile. His gun clattered to the floor. I dove on it and pointed it trembling at his motionless body. Then I saw the figure in the door. Her blue coat, strawberry blonde hair, wetted into heavy curls that half-concealed her eyes. She stood in a tall, broad posture with her silver revolver lowered. Smoke curled up from the muzzle. Her chest heaved rapidly; she was out of breath. \n\nA tremendous relief on her face, she relaxed, took a step forward, knelt and pressed two fingers against George's neck. \n\n\"He's dead.\" \n\nShe stood, took a step towards me but froze as blue and red light flashed on the apartment wall. \n\n\"I need to run now. So long, Kirby,\" she said. She blew me a kiss, then turned and flew down the stairs. \n\n\"Lara!\" I called out after her. But she was gone. Finally gone. \n\n*** \n\nFrank yawned, rubbed his eyes. He stopped the recording and removed the tapes from the machine. He adjusted his glasses and said, \"Thank you very much for your cooperation, Ms. Sawyer. You're free to go.\" \n\nI stared at him with a vacant expression. \n\n\"Did you hear what I said, Ms. Sawyer? You are free to go.\" \n\n\"So that's it then?\" \n\nHe nodded as he leafed through his notes. \n\nI shook my head. \"I don't understand.\" \n\nHe folded his file, slid it neatly under his arm. He loosened his tie a bit, then commenced to explain. \n\n\"She was telling the truth, Ms. Sawyer. She was born in Prague, and her father is in fact a general in the KGB. Her mother was assassinated, and this had put her on a long path of vengeance. She's likely right in her assumption. That her father was the murderer. Or at least orchestrated the murder. As for George -- he got rich passing military secrets. Did it for a very long time. Nuclear submarine technology, war plans, cables... if it was Top Secret, he passed it. He was a fucking headache we couldn't figure out the cure for. She was it. She was the cure. Our magic bullet. She'd been working for us since Prague, even before she joined the KGB, and had been hunting him for years. The Vienna plan was her's in fact. Didn't think it would work to be honest, but goddamn if she wasn't a fucking natural. It's a shame we can't use her on any more ops.\" \n\n\"Everything she told me was true...\" \n\n\"Yes.\" \n\n\"Can I see her again?\" \n\n\"No.\" \n\n\"Why?\" I sat forward. \"Is she in danger?\" \n\n\"She's safe now.\" \n\n\"I want to see her.\" \n\nFrank sucked his teeth and shook his head. \"You and a lot of Russians. She has a new life and a new identity now. That's all you need to know.\" \n\nI slumped back into my chair. \n\n\"So that's it then? I'll never see her again?\" \n\nHe sighed. His mouth thinned in a sort of pitying compassion. \n\n\"I'm afraid so. Believe me when I say it's for her protection. And yours.\" \n\n\"I have one more question.\" \n\n\"Shoot.\" \n\n\"How did she know George was at my apartment?\" \n\nHe smirked. Stood. Took one last long sip of his coffee, then responded, \n\n\"Know how to tell a good operative from a bad one?\" \n\nI shook my head. \n\n\"The good ones always finish the job.\" \n\nHe opened the door and signaled politely for me to leave. \n\n\"Have a nice life, Ms. Sawyer.\"\n\n*** Space A *** \n\nAfter the meeting with Frank, I was sent back stateside. Back to D.C. I didn't have time to move my stuff out of my apartment, but I was promised that it would all be taken care of. Meanwhile, I had a month off before my new job, so I planned to head back to Chicago to be with my parents and use the time to figure out my life. I flew back on a military 'Space-A' flight, a C-5 Galaxy cargo plane from Vienna International to Andrews Air Force Base. \n\nI brought Doctor Zhivago with me. One of the few objects besides my clothes and toiletry. Many pages creased from dog-ears; I cherished the book knowing that Lara had left these marks. It filled me with comfort knowing that her eyes had passed over these pages. \n\nI read it under the glow of an amber lamplight in a corner of the cavernous C-5 cargo bay, where I lay in an army-green cot wrapped in an army-green sleeping bag given to me by the loadmaster to fend off the frigid high-altitude air. I read it for hours. \n\nOn a particular page turn, the paper felt thicker than usual. The last sentence on the preceding page didn't match up with the first on the next. I looked at the page numbers. The number on one side was 405. Flipped over, it was 408. \n\nIntrigued by this discrepancy, I sat up, held the paper up to the light and, to my excitement, saw a dim outline of a card embedded within the page. I tore into it and discovered it was as I suspected: two pages neatly glued together along the edges, hiding something within. Carefully I peeled them apart. A yellow post-it note fell to the deck. On it, a note scribbled: My name is Zuzana, find me in Taos.",
        "The End.\n\nIf you enjoyed this short story (or if you didn't), please rate it and leave a comment. As I'm always seeking to improve my writing, constructive criticism is very much appreciated. Oh, and please give me a follow if you wanna read more from me! Thank you!"
    ],
    "authorname": "Jackie.O.Hikaru",
    "tags": [
        "lesbian thriller",
        "europe",
        "venice",
        "vienna",
        "lesbian sex",
        "romance",
        "espionage",
        "cold war",
        "russian",
        "spies"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/kirby-and-the-spy"
}