{
    "title": "There Must Be A Mistake Ch. 34",
    "pages": [
        "All persons in this novel are fictitious. If you are looking for a great deal of sexual activity, this story is not for you. Those scenes that are included will be evocative, rather than just for the sake of sex itself.\n\nThis story is for your reading pleasure. Its length is undetermined at this time, because I do not know where my mind will take me as I proceed along this journey. I hope you will stay with this story until it reaches its inevitable...\n\nThis story is copyrighted material owned by Prolonged_Debut10. I am over the age of 18, and all my other information is on file with Literotica.com\n\n<center>This is the REALLY the end of this story!\"</center>\n\n<center>Chapter 34</center>\n\nAll persons in this novel are fictitious. If you are looking for a great deal of sexual activity this story is not for you. Those scenes that are included will be evocative rather than just for the sake of sex itself. This story is for your reading pleasure. Its length is undetermined at this time, because I don't know where my mind will take me as I proceed along this journey. I hope you will stay with this story until it reaches its inevitable...\n\nThis story is copyrighted material and is owned by Prolonged_Debut10. I am over 18 years old, and my other statistics are on file with literotica.com.\n\n\n159. December 25/Merry Christmas\n\nThere were no Christmas trees at the homes of the people leaving Earth today.\n\nThere were no Christmas trees at the NEST today either. The extra trees would only add additional blind spots for intruders to take cover behind, and agents to worry about. Today was about security, and everyone was taking it very seriously.\n\n***************\n\nThe agents changed the alarm codes in Gray's and my home. They reset the alarms after we went to bed. Only Jennifer, and Delicious knew the new codes. \n\nThe agents then moved the SUVs down the road, and hid them. They surrounded our homes, just in case we geniuses figured out a way to bypass the alarms, and sneaked out in spite of their best efforts to keep us in. \n\nJennifer, Zoey, Richard, and Holden were sleeping on blowup mattresses by the front door. They wanted Gordon and me to either go back to bed, or mope around the house, because our plans were childish, just like we were.\n\nAt 1 AM, Gordon and I slithered out of our beds, and grabbed our canvas bags, while not making a sound. We oiled the hinges on our bedroom doors, so they would not squeak, and taped the closing mechanism, so we wouldn't have to turn the handles to open them. We met in the hallway, and changed our clothes in the bathroom. We walked slowly, and quietly towards the front of the house. We knew something was wrong as we approached the kitchen. There were four people sleeping by the front door. Our escape was foiled. How did they know about our plan? I guess they knew us too well, but there was always the windows for us to escape through. All I had to do was silence the alarm, and not wake them up in the process.\n\nI returned to the bathroom and took cotton balls from my wife's stash. I took tape from the cabinet, and returned to the hallway. \n\nGordon nodded understanding my plan immediately.\n\nHe took the cotton balls, and placed them on the top of the alarm. I placed the tape to keep them snug over the alarm. We continued this pattern until only the numbers on the face of the alarm were visible. I put in the code, and it said 'Incorrect entry.' I put it in again, and got the same result. \n\nI said to Gordon, \"When we get into space, I am going to put my wife outside and freeze her into a Popsicle.\"\n\nA voice behind me said, \"Mr. Luck, if you don't go back to sleep, I am going to tie you to your bed and forget about you until 4 o'clock this afternoon.\"\n\n\"Mrs. Luck, you are downright mean.\"\n\n\"It's your choice Even; go to bed, or I will tie you up and forget about you.\"\n\n\"You and what Army dear?\"\n\n\"We doubled the agents around our house, and Gray's. We knew you were going to pull a stunt like this. You need your rest for what's coming ahead today. Please go to sleep.\"\n\n\"Will you come with me?\"\n\n\"Do you give me your solemn word not to pull a trick like this again?\"\n\n\"I promise I will leave this house until 10 AM.\"\n\nZoey said, \"Little Mr. Luck, you better make me the same promise, or you will not get laid for very long time.\"\n\n\"Okay, I will not leave until my dad leaves.\"\n\n\"That's not good enough. I want your solemn vow that you will not leave until 10 AM.\"\n\n\"I almost had her dad. I give you my solemn word I will not leave this house until 10 AM. You're getting much better at this Zoey.\"\n\n\"Your mom is an excellent teacher.\"\n\n\"You're not telling me anything I don't know already.\"\n\n\"Alright people, bed.\"\n\n\"Yes ladies.\"\n\n\"It's for your own good Even. You have to be at your best today. You have 64 lives in your hands. 1000 people will be sitting watching you and our team take off, and travel into space. I don't know how many billion people will be watching us on television, instead of football.\"\n\n\"They won't be watching me dear. They will be watching 250 of the best scientists on this earth, and over 4000 engineers and technicians at Schneider Industries, who fabricated this marvelous spacecraft. Don't forget about the people at Babcock and Wilcox, who made the first Nuclear Fusion engine, and the people at the University of Chicago, who gave us the Exascale Computers. Then there's Sony for the most magnificent camera set- up I've ever seen. There are so my other people involved we could talk all night about them.\"\n\n\"Remember honey, you have 20 minutes on the stage to talk about everyone. If you start talking about William you will never get to anyone else.\"\n\n\"You are right as always, but how can I not thank him for everything he's done.\"\n\n\"You'll figure out a way, you always have. Stop talking and go to sleep.\"\n\n\"Yes Mistress.\"\n\n****************\n\n\"Gordon close your eyes and go to sleep.\"\n\n\"I am too hyped up to go to sleep. My heart is racing, and I want to get into that spacecraft and take off now. We are ready to go, and I hate the waiting. I feel the same way I did when your mother kept you away from me. I wanted to get you, but both my father and mother told me it was the wrong thing to do. I don't know what caused me to call you that morning, but I'm so happy I did, because I got you back. My life without you in it, would have been meaningless.\"\n\nZoey turned over and lay on top of Gordon. She put her head on his shoulder, and kissed his neck.\n\n\"I am going to stay like this all night. If you are a good boy and fall asleep, I will wake you up at 8 o'clock, and screw your brains out. If you don't fall asleep, you're not getting laid for a week.\"\n\n\"That's not fair Zoey. You're lying on top of me, and I already have an erection.\"\n\n\"Go to sleep thinking about that erection. When I wake up I'll make sure you are as hard as a rock. I won't let you out of bed for an hour and a half. You know I can do that for you.\"\n\n\"Woman, you are evil.\"\n\n\"You should have seen me before I started taking the pill. You would have run for the hills.\"\n\n\"All little girls like you needed was a good spanking. I don't mean once, but every time you were bad. You get spanked, until your rear end is red, and you are all cried out.\"\n\n\"Masochistic.\"\n\n\"Dominant.\"\n\n\"You want me to be a submissive?\"\n\n\"Absolutely not, I love you the way you are. Feisty as hell, and willing to argue about anything, until you realize that you are wrong.\"\n\n\"You better go to sleep, before I start hitting you Mister Luck. I am never wrong, and you better believe it.\"\n\n\"NO HITTING!\"\n\n\"NO GETTING LAID!\"\n\n\n\"Yes dear.\"\n\n\nAcross the street there was a totally different problem going on. Teddy pulled Gray's arm, until his eyes opened. \n\n\"Come on daddy, it's time to go.\"\n\nGray looked at his alarm clock and saw it was it was nearly 3 AM.\n\n\"Teddy it's not time to go. Do you want to get in bed with mommy and daddy, or should I put you back in your little bed?\"\n\n\"Are you sure it's not time to go, it's almost light outside.\"\n\n\"Teddy, you have two choices, get in bed with us, or I will put you in your bed. Which will it be?\"\n\n\"I'm hungry.\"\n\n\"I have her Gray.\"\n\n\"No baby, you go back to sleep. I will take care of her.\"\n\nGray took Teddy to the kitchen and asked her what she wanted to eat.\n\n\"Pancakes.\"\n\n\"How many pancakes would you like?\"\n\n\"Tree please.\"\n\n\"I'm going to make you three pancakes, and you better eat them all.\"\n\n\"K.\"\n\nIn her bedroom Delicious smelled the pancakes cooking. She walked to the kitchen and said, \"Can I have pancakes please?\"\n\n\"Of course dear, all pregnant women are allowed to have pancakes at 3: 10 in the morning.\"\n\nNewton was right behind her. \"Does that mean I can't get in on this party dad?\"\n\n\"Of course not Newton, we can all have breakfast three hours before daylight.\"\n\nTeddy said, \"It better. Have big lunch, not hungry when leave.\"\n\n\"What would you like for lunch Teddy?\"\n\n\"Big turkey.\" Then she and Newton giggled.\n\n\"Very funny little one. Are there really turkeys on board the ship?\"\n\n\"You going tell?\"\n\n\"No I won't tell.\"\n\n\"Daddy already know about turkeys.\"\n\n\"Oh really, I guess we will talk about this a little later Gray.\"\n\n\"Thank you Teddy.\"\n\n\"Welcome daddy. 24 little turkeys start tomorrow.\"\n\n\"Monty is going to have a fit.\"\n\n\"You should have seen how mad she was at Gordon today. You got there at the end, but she was chasing him all around the flight deck for 10 minutes, before your dad got there, and put an end to it. \n\nWe were all hysterical, because Gordon would let Monty get close to him, and then he would turn on a dime avoiding her. She was so angry she couldn't catch him. I can't wait to see the two of them in the gym.\"\n\n\"All men are sadists.\"\n\n\"Monty is a woman.\"\n\n\"She is one hell of a woman.\"\n\n*************\n\nDelicious said, \"I should not say this Teddy, but I wish God gave you a bigger mouth. You have maple syrup all over your face, bib, pajamas, and hands. You need a bath.\"\n\n\"No, want shower with daddy. Blow bubbles in stingy water.\"\n\n\"I guess we will get back to sleep by 6 AM, but you'd better go back to sleep Teddy, because we're not going to leave the house until 11 AM. We can have lunch before we leave, but if you don't go to sleep, your nose is going to be in the corner.\"\n\n\"Play with Newton?\"\n\n\"No, Newton has to sleep also.\"\n\n\"Sleep with Newton?\"\n\n\"The only thing that will happen if you two sleep together is trouble. I don't want either of you to go into space with us with your rear ends red.\"\n\n\"Sleep my bed.\"\n\n\"I'm going to make sure you are in your bed sleeping. If you're anywhere else little girl, you are in big trouble.\"\n\n\"Not fair.\"\n\n\"I'll make you a deal. If you are a good girl, we will stop at the Creamy Cow on the way to the NEST. If you're not good, no Creamy Cow. Remember, this is the last time you can have ice cream forever.\"\n\n\"I go sleep now.\"\n\n\"No, we go shower now, then you go to sleep.\"\n\n\"Hurry daddy, I sleepy.\"\n\n\"Amazing.\"\n\n\"You handled that very well Grayson. What are you going to do for me?\"\n\n\"Anything your heart desires dear.\"\n\n\"After we discussed turkey eggs, I'll let you know.\"\n\n\"Oh God, I'm in trouble.\"\n\n\"Yes dear, you are.\"\n\n****************\n\nAt the NEST, spotlights were everywhere. No one could approach the spacecraft, from any direction, without being seen. General Dan Morgan stood at the entrance to the spacecraft, with six heavily armed agents in full protective gear. Every agent would be in full body armor today. They would pull four hour shifts through the night to keep them fresh, and be ready for the onslaught of the guests and dignitaries, who would begin arriving at 10 AM. From that time on, everyone worked.\n\nColonel Lucius Canyon walked through the woods with 60 agents dressed in full black camouflage. He and his men didn't expect to find anything, but that's when you were fooled. Every 30 yards or so, one agent would drop off and go into hiding. The Colonel planned this just in case an enemy decided to show up after his sweep was done. He never left anything to chance.\n\nSlowly and meticulously, they used their high-powered night vision goggles to check for any signs of tampering. These special units could see anything from the normal daylight vision through the infrared range. If anything was producing heat above the natural range of the area, it would be picked up. These units cost a fortune, but Stephano didn't hesitate to buy them for everyone.\n\nColonel Jack Daniels checked the audio sensors that were supposed to be used against an armed invasion. They were still in working order, and just in case someone decided to come to the party, with rocket propelled grenades, or 50 caliber machine guns, they would be heard and taken care of silently, before they were able to set up.\"\n\nIt was 5 AM, when Colonel Lucius Canyon, and Sergeant Paul Zachary walked up to General Morgan, and saluted.\n\nThe Colonel said, \"General, the area is secured.\"\n\n\"Thank you Colonel, get some rest. I want you at the high security checkpoint at 10 AM.\"\n\n\"I will be there sir.\" \n\n\"I see you haven't removed that wart from your ass yet.\"\n\n\"I've tried everything sir, but he keeps coming back.\"\n\nThey saluted, turned and walked towards the hangar to get something to eat, and some sleep.\n\n********************\n\nTelevision trucks, production vehicles, huge generator trucks, and satellite dishes from local, independent, network, and international news networks all lined the side of the roads waiting for permission to enter the nest. Each had a preassigned number, and a corresponding position. They were assigned by lot, and no one was allowed to change their position. At 6 AM, the first television crew was allowed in. Every credential was checked, as was each vehicle. Portable cameras were opened to verify that their internal mechanisms were not been removed in favor of a machine pistol, or lethal gas pellets.\n\nShelby Meil, and a team of his experts briefed the agents on every current threat in the immediate area and in the United States. All three airports in the region were on 'orange alert' for every arriving passenger on the current watch lists. The biggest threat was from those arriving by bus and train. Although security was getting better in those areas, it was not as good as airports yet. \n\nExcept for the 10 men left on the second floor of the main building for communications and control purposes, the building was sealed. The weapons on the first floor were set on automatic, and anyone breaching the front door would be dead on his second step. No one would reach the stairway, the infrared system would activate a potent gas that would render them useless, unless they were wearing gas masks. If anyone did make it by the gas, the twin 50 caliber machine guns, mounted behind a Kevlar and steel casing, would finish them off.\n\nAfter Colonel Canyon explained the invulnerability of the building, Colonel Daniels asked him, \"What did you do about a roof entry?\"\n\n\"This building is 60 feet high, how are they going to get to the roof?\"\n\n\"Come on Lucius; how did the Rangers climb Pointe du Hoc in World War II. They taught it to you at the Academy, just like they taught it to me. You don't want me to come to the helicopter age do you?\"\n\n\"I am a fucking idiot Jack. I never thought about it.\"\n\n\"No Lucius, you're not an idiot. You are a tactical field officer, and used to ground operations. I am an engineer. My expertise, and knowledge was called into action, when the brass needed to know what the easiest way was to enter a building, and save lives. Saving lives was the most important part of any operations.\n\nDo you remember when Schwarzkopf bragged in a news conference about the F-118 dropping a guided munition down the air conditioner vent of his opposite number in the Iraqi military? Guess whose names were never mentioned? \n\nThere were 14 engineers who picked the priority targets for those missions, and never once were we mentioned. We told them what weapons to use to kill every high priority target in theater, without overuse of guided munitions. We showed them the weakest areas of every building, radar site, bridge, railroad yard, and airport. The airports were especially important, because we wanted to use them as soon as the war was over. We didn't even receive a medal for the work we did in 'Operation Desert Storm.' We were shipped back stateside and broken up, like the work we did didn't matter.\"\n\n\"You never told me that before Jack.\"\n\n\"It's not a very pleasant memory, and I don't talk about it a lot. Let's get back to the roof. It's a very easy fix. We pour 2 inches of sticky-tar over the existing roof. It can be done in six hours or less. The top three quarters of an inch seals rain proof, and extends the life of the original roof. However, the bottom inch and a quarter never cures. It stays viscous, and anyone who tries to saw through the roof with any type of blade, is in for a big surprise. The blade immediately ceases, because the tar sticks to it, rendering it useless. The only way to make a roof entry, is by using explosives, which 9 times out of 100, they will not be carrying with them.\"\n\n\"You are a wealth of knowledge Jack. How quickly can we get that put on the roof?\"\n\n\"Let me make three phone calls, and I'll see which company can make a batch of it the quickest and get on the roof.\"\n\n\"Will they know how to make it?\"\n\n\"No, I will have to walk them through it.\"\n\n\"This world is going to miss you Jack. Your daughter has received the money, but it's not worth what she is losing.\"\n\n\"Thanks Lucius, I'm going to miss your phone calls. I always looked forward to them.\"\n\n*******************\n\n\"You are not getting laid this morning William. You have lived this long, and I am not going to kill you on the most important day of your life.\"\n\n\"This is not the most important day of my life. The most important day was the day I married you. Well, maybe not that day, but that day in first class on the United Airlines flight to Phoenix, when I talked you out of your panties, and into your pussy. Well maybe not that day, possibly the day I screwed you on the balcony...\"\n\n\"I get the message William, and if you mention any of those days, while you are on the stage today, you will not die while getting laid. You will die while I rip your heart out of your chest, and stuff it in your mouth, like you stuffed my panties in my mouth at 35,000 feet.\"\n\n\"I guess I'm going to listen to you, because you said when I was 130 years old, I was going to impregnate you for the last time.\"\n\n\"You are correct, and once my pregnancy is confirmed, start saying your prayers, and go into hiding, because I will kill you. That is not a threat my beloved husband, that is a promise.\"\n\n\"Beloved husband, after all these years I am still your beloved husband?\"\n\n\"I love you with every breath I take William, and if you don't know that by now there's something wrong with you.\"\n\n\"There is nothing wrong with me Jemma, because you are my beloved wife. There is nothing in this world I would not do for you, except loan you to another man, roast you on an open fire, lock you in a dungeon...\"\n\n\"How is it that you can make something sound so wonderful, and still fuck it up?\"\n\n\"Years and years of practice my dear, but not on you.\"\n\n\"Even sent this over for you to wear at the ceremony today. He said if you show up in a suit, he will strip you on the stage and put this on you himself.\"\n\n\"What is it?\"\n\n\"Why don't you open the box and find out?\"\n\nHe opened it to find a sky blue flight uniform, with a ring of five gold stars on each collar, and braids of gold on each sleeve. There was also a brass plaque enclosed with his likeness on it. \"William Zabo: By unanimous decision of the 19 members of the Deep Space Science Project, you are hereby appointed 'Admiral of the Fleet in Perpetuity.\" We could think of no higher honor to bestow upon you for the magnificent achievements which have come into being under your leadership. The dream of spaceflight reaching out to touch another galaxy has become a reality in no small part because your genius. We, your fellow members of this project are humbled by your knowledge, and foresight.\"",
        "Signed: Even/Jennifer Luck, Stephano/Patricia Valentino, Christian/Callalily Chase, Philip/Celeste Castronova, Dycke/ Payne Schneider, William T. Moses, August/Mildred Ellery... \n\nTears were running down his face as he read the salutation, and the names signed on the bottom of the plaque. He received many of these tokens during his business career, but none of them meant more to him than this one did.\n\nJemma handed him a handkerchief. She asked him if he understood why I sent this plaque to him privately, instead of handing it to him publicly at the festivities today.\n\n\"I do, because if I would have broken down and cried on the stage today, I would have hunted him down to the ends of the universe and killed him.\"\n\n\"Give me that damn plaque back. I always wanted to go for a trip around the stars, and don't you dare say another word.\"\n\n\"Who me?\"\n\n\"Yes you, you nasty minded bastard.\"\n\n\"Call that sonofabitch for me please, and hand me the phone.\"\n\n\"The telephone is 3 feet away from you, just as it is for me. Why don't you get up and get it?\"\n\n\"I've always had you to do it for me.\"\n\n\"What's Lucius's phone number? I may take him up on one of his many offers.\"\n\n\"No you wouldn't. You would have to divorce me first, and lose all that money.\"\n\n\"I never married you for your money, and you know it. I never said anything about a divorce either. Lucius and I will live in sin forever.\"\n\n\"Lucius would not do that to me.\"\n\n\"You're probably right, but shall we test your theory? Or do you want to get your lazy ass off the couch, move 3 feet, and pick up the telephone?\"\n\n\"I love when you get feisty.\"\n\n\"You love it even more when I get feisty in bed.\"\n\n*************\n\n\"You are damn lucky you didn't give this to me on stage today Even.\"\n\n\"What did I do now William? I tried to escape from my house earlier this morning, only to have it foiled by an extraordinary wife. I'm not allowed to leave here until 10 AM, and I've bitten my fingernails up to my elbows already. What else could I possibly have done today that could have raised the specter of your ire?\"\n\n\"You sent me a package, with a blue uniform, and a plaque.\"\n\n\"I am going to kill you Jennifer. I was supposed to give him those things on stage today.\"\n\n\"Trying to pass this off on your lovely wife will not extend your life any longer than this afternoon my friend. You are lucky you sent this to my home, otherwise you would've met your sister much earlier than you thought possible.\"\n\n\"I would never do anything to embarrass you William. You are too important to me, to this, and our upcoming projects to make you wish you had kicked my ass before I left.\"\n\n\"I will not buy the State of South Carolina for you, no matter how nice you are to me.\"\n\n\"We already have the land in South Carolina. If you feel like purchasing the land around our land, I would not be opposed to that.\"\n\n\"You are an evil sonofabitch, even on the most important day of your life.\"\n\n\"I told Jennifer last night today is not my day. It's our day. The financiers, the scientists, the engineers, the electricians, and the technicians that put the Good Luck 1 together. Everyone is rooting for her to go to the stars, except those companies who are milking the government trough dry on old technologies. They are the only ones who win, if we fail today. I am wondering, deep in my heart, if they don't have one more dirty trick up their sleeves, to try to kill our project today.\"\n\n\"What has you worried Even?\"\n\n\"Can you get me the position of the US Home fleet, and if any guided missile cruisers are missing from it?\"\n\n\"They would never be that bold.\"\n\n\"They've done it once already. Why not give it a second try, after all it is Christmas.\"\n\n\"Merry Christmas Even, you will have everything you need to know within the hour.\"\n\n\"I'm going to miss you William.\"\n\n\"I'm going to miss you too Even, I expect a phone call when you pass Pluto.\"\n\n\"Can I call collect, after all, we did come in $47 billion under budget.\"\n\n\"Hang up you sonofabitch, before I come over there and beat the hell out of you.\"\n\n\"You don't have to yell.\"\n\n**************\n\n(Singing) \"We're getting married this afternoon. Ding dong the bells are going to ring. Don't lose your compass, I made a promise, just get it to the spacecraft on time.\"\n\n\"So help me God, Adam, if you sing that song one more time, I'm going to have to learn how to be a plumber for that spacecraft in a very short period of time. You are going to be dead for two excellent reasons. Those are not the words to the song, and you can't sing worth a shit. If I put you on the talent show, you would not get one vote, especially not from me.\"\n\n\"You're just jealous of my country vocals.\"\n\n\"A cat in heat sings better than you do.\"\n\n\"Are we having our last fight as single people?\"\n\n\"What did I ask you not to do?\"\n\n\"You asked me not to put colored clothes in with the white clothes.\"\n\n\"Do you want to walk to our wedding Adam, or do you want to crawl?\"\n\n\"Walking sounds good.\"\n\n\"Your left arm is still in a sling, would you like your right arm to join it?\"\n\n\"No, it would make tomorrow morning almost impossible for you, and for me.\"\n\n\"You could dream about it for a very long time.\"\n\n\"I have been dreaming about it for a very long time. I've kept most of my promises, and broken several more. I piss you off on a continuing basis, mostly because you have no sense of humor. Either that, or you don't like my sense of humor. You promised you would try to change. I am going to try to meet you halfway. How far is halfway going to be for us Laura? I love you with all my heart. How do you feel about me?\"\n\n\"If I didn't love you, more than any man on this planet, I would have been gone a long time ago.\"\n\n\"How about women?\"\n\n\"You're a dead man Adam, you will never live to see the spacecraft again.\"\n\n\"Do you see what I mean Laura; you have no sense of humor at all.\"\n\nLaura picked up her cell phone and called George.\n\n \"George get your ass in here, before I kill him.\"\n\nGeorge burst through the front door, and stood between them. He looked at Laura and asked, \"What the fuck did you do wrong this time?\"\n\n\"It wasn't me it was him. He told me how much he loved me, and then he asked me how I felt about him. I told him, if I didn't love him more than any other man on this planet, I would have been gone a long time ago. Do you know what his answer was? Tell him Adam, tell him before I kill you.\"\n\n\"I asked her how she felt about women.\"\n\nGeorge started laughing uncontrollably, and Laura became incensed.\n\n\"How can you possibly take his side?\"\n\n\"Listen to me your high and mightiness. First you never told him how much you loved him. All you did was compare him to every other man on the planet. Is it so hard for you to say those three little words, I love you?\n\nThen after you make this long incongruous statement about other men, he had every right to ask you the question, 'What about women?' It was a joke, and it was very funny. If you didn't see it that way, you are in big trouble. If you can't say those three little words to Adam, why the fuck are you marrying him? Call it off so I can beat the shit out of you before you leave. They have extra rooms on board the spacecraft; you can live in one, and Adam another. He's not a fucking pony, he's a Clydesdale. He deserves your respect and love. If you're unable to give him what he honestly deserves, break off this relationship now, before children are involved. Don't bother, I know, I'm fired. This was my last day anyhow.\"\n\n\"Am I really that backward in the ways of the world George?\"\n\n\"After you graduated high school, how many times a week did you leave the ranch? Let me change that, how many times a month did you leave the ranch?\"\n\n\"Once, maybe twice a month at the most. Everything was delivered to us, and there was never a need for us to go anywhere. I had the best computer in the world in the house, and that's where I spent my time.\"\n\n\"How many friends did you invite over to the house to have fun with?\"\n\n\"I never had anyone over. I was either working on the computer, swimming, working-out with you, or fighting with my mother. My days were full.\"\n\n\"Shall we go back to your original question now? Am I really that backward in the ways of the world? Would you like to answer the question for yourself, or would you like me to do it for you?\"\n\n\"The only people I had in my life were Robert and Anna. When they went to college I had no one. That was one of the reasons I wanted to come out here to work with Doctor Luck on the stasis project. Once mom agreed to join me, I knew we were staying at the ranch, because she would never leave it. I'm amazed, and happy she's come this far.\"\n\n\"So what you are saying to me is that your mother has come further than you have.\"\n\n\"It sure looks that way, doesn't it?\"\n\n\"Your mother asked you three questions when you were locked up on the aircraft. Do you remember the questions, and your answers? If you don't, I can play them for you.\"\n\n\"I'd like to hear them if you don't mind George.\"\n\n\"It would be totally up to Laura, because it was a private conversation with her mother.\"\n\n\"Go ahead George, play it for him.\"\n\n\"Okay, here goes.\"\n\nPatti asked Laura, \"Adam, do you love him enough to marry him?\"\n\n\"Mom he is a pain in the ass.\"\n\n\"So is your father, and I've been married to him for 25 years. Now answer the question, do you love him and do you want to marry him?\"\n\n\"I love him with all my heart mom. He just keeps pissing me off.\"\n\n\"Your father and I have a room for that.\"\n\n\"Yes I know mom.\"\n\n\"So there is no problem with Adam?\"\n\n\"No mom, there is no problem with Adam.\"\n\n\"Do you still want to find out if our stasis devices work? 63 people are betting their lives on what we did. Junie survived one year. Do you think they will work for 10 years or more?\"\n\n\"That's why I want to go with them. I want to stand...\"\n\n\"Are you afraid of going into space?\"\n\n\"No I'm not. For some reason or another I know I belong out there and so do my children...\"\n\n\"George, I believe I've heard enough. Now everything falls to you Laura. Did you mean what you said to your mother, or were you just telling her what she wanted to hear?\"\n\n\"I love you Adam, with every fiber of my being. You are going to have to teach me an awful lot while we are together. Don't give up on me, I am usually a very fast learner.\"\n\nAdam moved in for a kiss, but George beat him to it.\n\n\"Now that's the girl I helped raise. When you open your mind to new possibilities you are very fast learner. You will make many mistakes on the way, but don't give up on yourself either. You will be living in a very close knit community. You've never done that before. Everyone will help you along the way, especially the babies. Not only yours, but everyone else's too.\"\n\n\"You're going to make me cry George. You know that's not allowed.\"\n\n\"You could fire me again if you wish.\"\n\n\"Okay, once the spacecraft leaves the ground, both you and our team are fired. On January 3, all of you are to be at my attorney's office at 9 AM, in a suit and tie, for my bequests to all of you. If you are not in a suit and tie, a SWAT team will accompany you to Justice Brothers to have you fitted for a suit. You will wait for it to be completed. It could take all day, it could take two days. You will not leave the store without that suit on your back. Basically George, you will be under house arrest if you're not wearing a suit.\"\n\n\"You're doing this just to piss me off aren't you?\"\n\n\"When was the last time you wore a suit George?\"\n\n\"I believe it was your high school graduation.\"\n\n\"I hope it still fits, otherwise you'd better get one this week.\"\n\n\"Why don't we step outside for a little while, I feel like kicking your ass.\"\n\n\"You were 29 years old when you began to care of me George. That makes you 50 years old now. I don't think you could take me.\"\n\n\"There is only one way to find out Ms. Valentino?\"\n\n\"Yes there is.\"\n\n\"Laura stay where you are, and apologize to him.\"\n\n\"What did you say to me?\"\n\n\"I told you to stay where you are, and apologize to George for your remarks. He helped raise you. He helped make you what you are, and to show your appreciation for what he did for you, you want to go outside and try to break his neck. I won't allow it. It's not going to happen today or any other day. Act your age, and put your hormones away.\"\n\nGeorge had a big shit eating grin on his face. Laura's jaw was open so far, it nearly hit the floor. Adam had taken a stand on an issue, and now she had to make a decision. Should she openly defy him, or back down and apologize to her mentor.\n\nAfter gazing at him for a long while, she relented.\n\n\"Yes dear. George, I apologize for my actions and my words. You have been my best friend and teacher for 21 years. I should know better than to take my anger out on you. Please forgive me, and try to forget what I said.\"\n\n\"I'm sorry Laura, were you talking to me? I am getting old, and my hearing aid batteries must need replacing. I didn't hear a word you said.\"\n\nLaura was livid. She started pounding George on his chest with both hands. All he could do was laugh. She reacted like a girl, instead of a trained fighter. He finally controlled her arms, and kissed her again.\n\n\"Didn't I teach you anything at all over these last 20 years?\"\n\n\"Yes, but Adam told me I was not allowed to hurt you, so I didn't.\"\n\nAdam was holding onto the wall, laughing, trying not to fall to the floor.\n\n\"Why are you laughing at me Adam?\"\n\n\"You looked like a girl, while you were hitting George, after he goaded you.\"\n\n\"He was joking with me?\"\n\n\"I don't wear hearing aids Laura.\"\n\n\"Can we get changed, and leave for the NEST now Adam. If anyone else plays a joke on me today, I will not be responsible for my reaction.\"\n\nAdam pulled her into his arms and kissed her. He whispered into her ear, \"Yes you will!\"\n\nLaura screamed, and stamped her foot. \n\nAdam raced to their bedroom, and jumped on their bed. \n\nShe followed him, with blood in her eyes.\n\nGeorge went outside knowing his job was done.\n\nLaura glared at Adam as he was resting comfortably. He said, \"You have two choices, if you lock that door. Its 9:30 AM, we can dress and be at the NEST in 40 minutes. Or we can undress, and I can do your front, and back. If we have any time remaining, I can do your legs and your toes. We don't have to be there until 1 o'clock. Which would you prefer my dear?\"\n\nHer eyes softened. \"Do you remember when you were having trouble remembering the bottom was the top, and the top was the bottom?\"\n\n\"Yes, it was on the examination, and I received 100% on that area of the test.\"\n\n\"I believe they made an error in scoring on that particular area of the exam. You are going to be retested...NOW.\"\n\n\"Miss, that portion of the examination takes an extremely long time. Also, we would need to take a shower afterwards, because the work is extremely hands on. The clean-up time could be of an equally long duration. Does this meet with your approval?\"\n\n\"Sir, I believe you're stalling.\"\n\n\"Miss, you are still fully dressed. The Exam cannot begin with you in that condition.\"\n\n\"I apologize, you are correct. I noticed you were wounded. Given the option, would you like to assist me in disrobing?\"\n\n\"It would be my honor.\"\n\nThe blouse was easy, but the front closing bra was tricky.\n\nHe said, \"Fuck this. Using his right arm he lifted the strap holding the sling in place and threw it aside. Moving his left arm slowly and painfully, he used both hands to undo a bra and removed it from Laura's body. While kissing her passionately, his hands were rubbing her breasts. He tweaked her nipples, as he bent down to untie her sneakers, and removed them along with her tiny socks. He shuffled their bodies around, to make sure her body was in contact with the bed. He hooked his fingers inside the waistband of her slacks, and panties. Using his head as a battering ram, he pushed, and made her fall onto the bed. As she was falling, her slacks and panties moved down to her knees.\n\nLaura picked her head up to look at him. \"Smooth move Adam, was that on the exam also?\"\n\n\"No baby, it was something I learned when I was a junior in high school. If the girl was already naked, there was very little she could say about having sex.\"\n\n\"Did you learn that in biology or an engineering class?\"\n\n\"It was chemistry actually. If you had chemistry with a girl, sex was next on the list. I always used protection, and never disrespected a girl. I never got a girl pregnant, and if she said stop or no, I stopped.\"\n\n\"You had an excellent chemistry teacher. Who was it?\"\n\n\"Don't laugh, because it's true. It was my mother. My father still is a religious fanatic. Sex is only supposed to be used for procreation. He didn't tell my mother about his views until after they were married, and she was pregnant with me. Once I was born, he didn't want any more children, and sex stopped. My mom got a divorce. The judge nearly laughed him out of the witness chair, when he explained his position. My mother let me read the minutes of the trial, and the judge's disposition of the case. It was hysterical. She received support from him, until I was 18 years old. She had a series of lovers, but never got married just to get even with him. She taught me who, how, when, where, and what about seduction, and sex, using some very explicit texts that came in brown packages. She was an excellent teacher, and I was an excellent student.\"\n\n\"Mother knows best.\"\n\n\"If you give me an hour, I'll prove it to you.\"\n\n\"You have my permission to begin.\"\n\nHe picked up her left foot, separated the little toe, and inserted it into his mouth. His hands worked on the muscles and bones on the bottom of her foot. She quickly felt fluids beginning to build up inside her vagina. It made no sense to her, but she wasn't about to complain. How that toe was connected to her sexual organs was a mystery to her, but as her body temperature continued to rise, and the fluids inside her vagina began dribbling onto her thighs, she was not about to argue with the results.\n\nWhen he put the next digit into his mouth, his thumbs began massaging the heel of her foot. An electric shock went from the tip of her tiny toe, to her ovaries. She winced in pre-orgasmic pain, raised her hips off the bed, and collapsed down. She moaned, with her eyes closed. When she opened them, she looked at Adam, and he winked at her. She reminded herself that this was just the start of his foreplay, and hoped tomorrow morning would be the fulfillment of both their dreams. She hoped Adam was as good a teacher as his mother was, because he certainly was a retentive student.\n\n*****************\n\n160. The 2nd Fleet\n\n\"You are a god damn evil man Even Luck.\"\n\n\"Why, what did I do this time?\"\n\n\"Would you like to take a guess where the United States 2nd Fleet is?\"\n\n\"In the water?\"\n\n\"Even don't make me hit you.\"\n\n\"Okay, so far this morning I've been threatened to be hit by my wife, my daughter-in-law, and now you William. My day is not looking good.\"\n\n\"Why did you ask me to find out the whereabouts of the 2nd Fleet?\"\n\n\"Oh, is that what we are talking about? I asked you about its position, because I didn't want them to shoot at us, as we pass overhead their position.\"\n\n\"Would you like to take a guess where the US 2nd Fleet is?\"\n\n\"They are someplace under our 138\u00b0 climb out direction after takeoff.\"\n\n\"Give that man a prize. The United States 2nd Fleet is 1500 miles northwest of Freetown, Sierra Leone. They are doing flight operations, and live fire exercises, using all new, state of the art anti-submarine, anti-surface, and anti-aircraft missile systems. My friend at the Pentagon said one of the new antiaircraft missiles is capable of reaching altitudes of 140,000 feet. It is designed to take out the new threat capabilities of non-orbital vehicles, such as our Global Hawk.\"",
        "\"Give me a moment William.\"\n\n\"Holden, Gordon, get in here.\"\n\nI heard them before I saw them.\n\n\"Where do you think you're going little man?\"\n\n\"Let go of my neck, and fix your pants. You look ridiculous.\"\n\nHolden burst into the lead and reached me first. Gordon finished fixing his belt as he came to a stop by my right shoulder.\"\n\n\"Enjoying your downtime son?\"\n\n\"I was, until someone bellowed by name.\"\n\n\"Wonderful, both of you put your thinking caps on. What will our altitude and airspeed be when we cross 111.48\u00b0 West by 53.23\u00b0 North.\"\n\nHolden asked, \"Can I use your laptop so I can see a grid map.\"\n\nGordon didn't ask anything so casual. He wanted to know what was at that geographical intersection.\n\nI answered just as casually, \"Nothing important, just the US 2nd Fleet.\"\n\n\"Are they there to do a search and destroy, or a search and rescue mission?\"\n\n\"You answer my question, and I'll answer yours.\"\n\n\"They haven't got a prayer dad,\" Holden said. \"Once we finish our systems check, at 500 feet, and Delicious increases power to the magnetic grid to 95%, Gordon is going to increase power to the fusion engine to 48%. We will be moving faster than 16,000 mph, and passing 150,000 feet 40 seconds later. We will have barely entered the Gulf of Mexico, and the 2nd Fleet is in the middle of the Atlantic Ocean. Whoever did their math did a profile of the space shuttle leaving out of Cape Kennedy, believing that was the best anyone could ever do.\"\n\n\"The people at the air traffic control centers had to show them the tapes of us maneuvering at 4000 mph around the country.\"\n\n\"Sometimes people don't want to believe what they see, and other times they see what they don't want to believe. This leaves us with a more obvious problem. Someone's going to try to plant the bomb on the spacecraft today.\"\n\nThere was a hard knock at the front door, and Jennifer yelled, \"Don't touch it, or the alarm will go off. Even put your birthday numbers into the alarm module to turn it off. Month, followed by the day and year.\"\n\n\"Okay, I've got it.\"\n\nAs soon as I turned my back, and started walking down the hall towards the alarm, Jennifer held up a $5 bill and whispered, \"I bet he gets it wrong.\"\n\nZoey said, \"I'll take that bet.\"\n\nGordon looked at his wife and asked, \"Would you like to lose $5 more?\"\n\n\"It's your money, why not.\"\n\n\"I will figure out a way to get it back from you.\"\n\nRichard asked, \"$5 more Zoey?\"\n\n\"Of course. I suppose you want in on this also Holden?\"\n\n\"I hate taking your money Zoey, but this is a sure thing.\"\n\nAs they finished their betting, I walked to the front door, opened it, and let Monty in. I asked her if she would like coffee or tea, but she declined.\n\nI returned to my chair, and all eyes were watching me.\n\nI asked, \"Is my shirt hanging out of my pants? Is my zipper open? Why are you all looking at me?\"\n\nJen said, \"You remembered your birthday; that's amazing.\"\n\n\"It shouldn't be, I had to write it down on so many forms this year, verifying I knew the people who were coming with us, it became 2nd nature to me.\"\n\n\"Okay, I can accept that excuse. Everyone owes $5 to Zoey. She is the only one that bet you would win.\"\n\n\"Thank you, you sweet adorable girl. I still won't go driving with you.\"\n\n\"You won't get me behind the wheel of a car dad.\"\n\n\"How about the bridge of the spacecraft?\"\n\n\"No, no, no. It will not happen. I am not driving spacecraft.\"\n\n\"You would be bossing your husband around all day.\"\n\n\"When did you say training starts?\"\n\nEveryone in the kitchen started laughing, including Gordon.\n\n\"Let's get back to the more serious problem, how is a bomb going to get onboard our spacecraft today?\"\n\nMonty replied, \"Doctor Luck, the ship is sealed. No supplies, no suitcases, no personal items, nothing goes onto the ship today, except people, and even we are going through metal detectors as we board the ship. I don't believe any of us, who have been selected to go, would meet the profile of a mad bomber. There is one that comes close, but I will keep an eye on him for a very long time; a very long time.\"\n\n\"Thank you Monty, I'm sure the other 62 of us on board appreciate you keeping a very close eye on Gordon, and a 24 little turkeys that will start hatching tomorrow.\"\n\n\"If I see a turkey hatchling tomorrow, Gordon is going to be burping feathers.\"\n\nGordon asked, \"Have you spoken to Janet lately?\"\n\n\"Did that little tramp help you get those turkeys on board?\"\n\n\"It sounds as if you are angry with the entire world Monty. I only asked if you spoke with your friend lately. Now it sounds as if you have abandoned her.\"\n\n\"I haven't abandoned her. I have not seen her lately.\"\n\n\"Have your schedules changed?\"\n\n\"Not that I'm aware of.\"\n\n\"Isn't she supposed to be part of the team who guards Zoey and me?\"\n\n\"Yes she is.\"\n\n\"A real friend would go out of her way to find out what happened to her former partner.\"\n\n\"Doctor Luck, please let me kill him.\"\n\n\"No. Someone is going to try and blow our spacecraft out of the sky today, and all you can think about is killing one of my children. I should put you over my knee and spank you for thinking so narrowly.\"\n\n\"If you do it dad, I will give you $500 million.\"\n\n\"If you don't keep your mouth closed, I'll give her 2 minutes with you in a closet.\"\n\n\"I'll give you everything I have for those 2 minutes.\"\n\n\"Do you see the difference in those two offers Gordon? You offered me a ton of money. Monty offered me everything. Which one is the greater value son?\"\n\n\"I'll be quiet.\"\n\n\"Those are the smartest words you have ever uttered.\"\n\n\"Monty, you said no one was bringing anything on board today, is that correct?\"\n\n\"Yes Doctor it is. The only reason we're using the gangway, instead of the elevators in the legs of the spacecraft, is because it gives everyone a last chance to turn around and wave goodbye. It's also the place where the Honor Guard will transfer control of the remains of President Clark, and Mrs. Julia Atwater to us. The Honor Guard will not enter the spacecraft.\"\n\n\"Get me Jack Daniels on the phone now.\"\n\n\"You're holding the phone dad.\"\n\n\"Oh my god, William are you still there?\"\n\n\"Where the hell do you think I would be you jackass.\"\n\n\"I'm sorry, I forgot you were there.\"\n\n\"I want you to remember this Even. My speech comes after yours this afternoon, and you will regret it. Why do you need Jack Daniels?\"\n\n\"From what Lucius told me about Jack, he's not only a fantastic engineer, he is also a great bomb disposal man. If someone removed the remains of President and Mrs. Atwater, and exchanged them with explosive devices, I believe it would be appropriate for Lucius to return these devices to their rightful owners, don't you?\"\n\n\"You have to leave this planet Even. Only one of us is allowed to think like me, and that's me.\"\n\n\"I don't have to ask you to promise me this will be taken care of, because I know it will be. Our blood sweat and tears have gone into this project, and some asshole thinks he or she is cute enough to slip this one by us.\"\n\n\"Its 10:45 AM Even, didn't you have someplace you wanted to be?\"\n\n\"You bastard, why did you keep me on the phone so long. I'll get you for this.\"\n\n\"If I were a little younger Even, I would rip your lungs out.\"\n\n\"You couldn't get that close to me. Jennifer would protect me.\"\n\n\"Women, they are the loves of our lives, and the Banes of our existence.\"\n\n\"I didn't mean you Jemma; stop hitting me. Jemma I meant all the other women in the world, not you. Remember you can't kill me until I'm 130 years old, and you are pregnant. Stop hitting me.\"\n\n\"It's wonderful to know that you are the king of your castle William, just like I am king of mine.\"\n\n\"Leave me alone you asshole. I have to see if Jemma is getting ready to pull a 'Lizzie Borden' on me, or if she's just getting a baseball bat.\"\n\n\"Call junior, he will protect you.\"\n\n\"Young William has changed his mind. He seen his mother in action, and has decided his never getting married.\"\n\n\"How much did you bet him on that?\"\n\n\"I don't believe in wagering when I have a sure thing. I just laughed at him. He was so disheartened, he went out to breakfast by himself.\"\n\n\"Doesn't he know all our waitresses here are redheads?\"\n\n\"They are not.\"\n\n\"You don't go out to breakfast very often do you?\"\n\n\"I never go out for breakfast, it's too early in the morning.\"\n\n\"Young William is in for a big surprise. I'm going to change and leave for the NEST.\"\n\n\"If I am still alive, Jemma and I will be there at 1 o'clock.\"\n\n\"Be nice to her William, tell her you hope it's a girl, just like her. It will get you out of a lot of trouble.\"\n\n\"Go to work and leave me alone.\"\n\n\"My work is done, now the fun part begins.\"\n\n\"Find the fucking bomb you asshole.\"\n\n***********************\n\n\"In my humble opinion, I believe William is in trouble. Jemma may not kill him, but he will be hurting, when it comes to the festivities this afternoon.\"\n\n\"I don't know about you dad, but look at the time. Zoey and I are leaving.\"\n\n\"Monty would you open the door for my son please.\"\n\nMonty smiled broadly. \"It will be my pleasure Doctor Luck.\"\n\n\"I think we can wait another minute or 2 for you and mom, dad.\"\n\nMonty said, \"Chicken shit.\"\n\n\"Can I see you for a minute mom?\"\n\n\"I'll be right there Richard.\"\n\nI said \"I think it's time to leave.\"\n\n\"Why the change of heart dad?\"\n\n\"You'll hear about it soon if I'm not out of the house.\"\n\nI headed for the front door, with Zoey and Gordon trailing behind me.\n\nJennifer yelled, \"Even Luck, if you take one more step your dead.\"\n\n\"If I don't outrun you now, I'm going to be dead anyway.\"\n\n\"Sit down Even, before I claw your eyes out.\"\n\n\"Hell dad, what did you do now?\"\n\n\"I am an engineer, and the scientist. I did what I do best, and now I'm in trouble.\"\n\n\"You mean you got caught doing some reengineering.\"\n\n\"Yes, I believe that's the appropriate term.\"\n\nJennifer walked into the kitchen, threw the alarm box, 3 paperclips, 2 Q-tips, four short pieces of wire, and some tape onto the kitchen table. She growled at me menacingly.\n\nI thought I secured the alarm box to the wall securely, with that double-back tape, but apparently the weight of the box was too much for the tape, and it fell off the wall. \n\nThen, my tattletale son, Richard, knifed me in the back. If I had just a few more minutes, or if we had left earlier, I would have fooled everyone. Now, like my good friend William, I had to face the Lady of the Manor. I would know in a moment if all I was going to lose was one head, or both.\n\nJennifer said, \"You lost all the bets Zoey. This is how your father-in-law put his birthday dates into the alarm system. He destroyed the system, rather than acknowledging he didn't know the date of his birth.\"\n\nShe looked at me with a smile on her lips. \"Even, you are such a big baby. You would rather use your talents to bypass our alarm system, rather than acknowledge you forgot your birth date, again. \n\nEveryone who has carried your name for more than one month bet against you, because we know you so well. You can remember a formula down to a microgram, because it's important to you. You remember our anniversary, and each of your children's birthdays, because they are important to you. Your birthday doesn't matter to you, and you have no idea when it is. I'm not going to tell you when it is. This way I can throw you a surprise party anytime I want, and say happy birthday. You will go through life never knowing the day you were born, and do you know what Even; you won't care. It doesn't matter to you. Only your work, your family, and your friends matter to you, and most of the time it's in that order. We don't mind being 2nd on your list, because the time you give us, we have you body and soul, and nothing will tear you away from us. We have you all to ourselves, and we relish every moment of it.\"\n\n161. The NEST\n\n\"I'm going to kill that old man.\"\n\n\"Calm down Even, you are not going to touch a hair on Williams head.\"\n\n\"We're 2 miles from the entrance to the NEST, and we haven't moved an inch in the past five minutes. All these people can't possibly be invited guests.\"\n\n\"Well we know this much, they can't leave without us.\"\n\nEven's driver said, \"Relax Dr. Luck, we will be at the NEST momentarily.\"\n\n\"What are you going to do Frank sprout wings?\"\n\n\"No doc, something less radical, and more easily arranged.\"\n\nMy phone rang, and it was my daughter calling.\n\n\"Hi baby, we are on our way. We're stuck in traffic, but Frank says we should be there shortly, although I don't know how.\"\n\n\"Good morning daddy, soon a big milk truck will pass you going very slowly. I am right behind him, and I have several of our guests behind me. Pull out ahead of me and follow the truck to the NEST. Get ready because here we come.\"\n\n\"Okay baby, we will be waiting.\"\n\n\"Did you know about that Frank?\"\n\n\"Yes sir, I did.\"\n\n\"You didn't think it was necessary to share that information with me?\"\n\n\"No, as long as you were only yelling at the Mrs., it wasn't my concern.\"\n\n\"Warren don't open my door. Let me get out Frank's side, I want to hit him.\"\n\n\"That's fine with me Mrs. Luck. Would you like me to hold him for you?\"\n\n\"No, he won't run away, he would never live it down.\"\n\n\"She doesn't know me very well Warren. I can run away with the best of them.\"\n\nA short time later, an 18 wheeler rolled by moving slowly southbound, displaying the Borden's Milk Cow 'Elsie' on its side. Fred pulled out quickly and got in behind it. It was my fervent hope that the people traveling northbound on this 2 Lane Road did not wish to pick a fight with a truck this size.\n\nWhen we reached the turning point for the NEST, we saw what the problem was. Cars were double and triple parked along both sides of the road hoping to get the best vantage point for this afternoon's launch. No one was allowed to turn into our private road, except invited guests. Our agents were standing there, in full protective armor, and with automatic weapons making it very clear we were not playing games.\n\nOur milk truck proceeded on its way to Austin, and we turned into our base and were escorted to the hangar. The invited guests were let off at the discharge point, where they showed their invitations, and were directed to their seats by high school juniors and seniors. When they arrived at their seats, they were given a menu for soft drinks, wine, and finger foods, which would be served at no charge until 2 PM, when the festivities really got moving along.\n\nWhen Jennifer and I started walking towards the hangar, a little voice yelled out, \"Grandpa.\"\n\nWhen we turned to see our little red headed monster running towards us, that's exactly what she was, a redheaded monster.\n\n\"What happened to you Teddy?\"\n\n\"Banana split no chocolate syrup. Had strawberry syrup. Love strawberry syrup. Missed my mouth, down my shirt.\"\n\n\"I would love to take pictures of you, but were not allowed to take cell phones with us. You look absolutely adorable.\"\n\n\"Mommy want to kill me. Daddy stop her.\"\n\n\"We have a washing machine and dryer in this building. We will wash, and dry your clothes, until you are all clean. We will wrap you in a giant towel to keep you warm. You will look as good as new. Ask mommy if it's okay.\"\n\n\"Mommy, grandpa take clothes, wash them, make clean, wrap you in towel until dry. Angry with me?\"\n\n\"No I am not angry with you any longer. I was very angry when you picked up the bowl with your banana split still in it, and tried to drink all the syrup out of it. I'm very happy that is the last ice cream you will ever see.\"\n\nI kept my mouth shut, because I managed to squeeze 20 gallons of ice cream into our freezers. Other condiments like sprinkles, chocolate and strawberry syrup, and tiny marshmallows would show up also. Children should not have to go without ice cream Sundaes without a weaning off period. Some parents would praise me, one particular parent would probably want to kill me at this moment, and it would not be a figure of speech.\n\n\"Gordon check to see if primary and secondary flight crews are here.\"\n\n\"Will do dad.\"\n\n\"Jen when our son comes back with the news of who's here, I want you to lead them on a search of the vehicle. Start on the fifth floor and work your way down. I will get another crew have them start on the first floor and work their way up. I want to make sure the ship is clean before the honor guard comes.\"\n\n\"I'll take care of it Even.\"\n\n\"Remember, on the fifth floor, if you should run into the supplies for the turkeys. Check everything thoroughly. Make sure none of the bags have been tampered with while they were here.\"\n\n\"Yes sir, it will be done.\"\n\n\"You never say that to me at home.\"\n\n\"At home, we are equals. Today, you are master of that vessel. I will follow your orders to the T.\"\n\n\"Thank you dear.\"\n\n\"Mark would you page Col. Jack Daniels to the hangar please. Also, order all engineering staff, flight crews, and future married people to the hangar also.\"\n\n\"Will do, Captain.\"\n\n\"How are you feeling Teddy?\"\n\n\"Mommy angry with me, I think.\"\n\n\"Should mommy be angry with you? Did you do a bad thing, or a good thing?\"\n\n\"I like strawberry syrup.\"\n\n\"Teddy did you do a good thing, or did you do a bad thing?\"\n\n\"Bad thing.\"\n\n\"Should mommy be happy with you, because you did a bad thing?\"\n\n\"No.\"\n\n\"Why were you at the Creamy Cow this morning?\"\n\n\"Daddy said if I was good, he would take us to Creamy Cow this morning.\"\n\n\"So you did a good thing to go to the Creamy Cow, and while you with there, you did a bad thing. Do you see how terrible that was? You cheated your daddy and mommy. You tried to fool them into thinking that you would be good, while you ate your ice cream, but you were bad. I would put your nose in the corner all day for doing that to me. All day, no lunch, no dinner, just water, because you made a fool out of me. I would be extremely upset with you.\"\n\n\"I like strawberry syrup. It delicious.\"\n\n\"Is that your excuse for doing something bad?\"\n\n\"Yes.\"\n\n\"I wonder what Callie would think about that response. Would you like to find out what your new friend would say?\"\n\n\"Yes please, I think she understand.\"\n\n\"Okay, I'll take you there now.\"\n\n\"Mark, if Colonel Daniels shows up, tell them I went to the ship on the third level.\"\n\n\"Yes sir.\"\n\n*****************\n\n\"Good morning General, how are you today?\"\n\n\"Grumpy.\"\n\n\"General this is my granddaughter Teddy, I don't believe you two have met.\"\n\n\"It's a pleasure Teddy, what happened to your clothes?\"\n\n\"Strawberry syrup.\"\n\n\"That will do it every time. Where are you off to Doc?\"\n\n\"We are going to check with the computer, to make sure everything is okay.\"\n\n\"It sounds good to me. Sign in, and check out when you leave.\"\n\n\"Will do.\"\n\n\"Everyone's being very careful today Teddy. This is a very important day for a lot of people including you and me.\"\n\n\"I know. Someone's going to try to blow us up.\"\n\n\"Why didn't you mention this before?\"\n\n\"You are already working on it. You need no help.\"\n\n\"Do you have any idea who is doing it, or where they may be placing the bomb?\"\n\n\"No, no feeling, berry sneaky.\"\n\n\"Okay, let's go see Callie.\"\n\nWhen they reached the third floor, Teddy jumped out of my arms and ran to Gordon's position to say hello to her friend.\n\n\"Hi Callie, its Teddy, are you ready for today?\"\n\n\"Good afternoon Teddy, why are you in your underclothes? My systems are 100%, all ancillary systems are in satisfactory condition, nuclear engine is running at .05%, all exterior lines are connected. Four hours and 10 minutes to launch.\"\n\n\"I wanted to talk to you about my underclothes, is that alright?\"\n\n\"Of course, how can I help you?\"\n\n\"I can't decide if I did a bad thing, or I did something with an excuse that do not make it bad. Does that make sense?\"",
        "\"It sounds as if you did something bad and are trying to get away with it. According to your father's memory banks, you have tried this twice before, unsuccessfully. Your nose was in the corner of your room for four hours. Is that what you're trying to avoid this time?\"\n\n\"Can I tell you what happened, before you make a decision?\"\n\n\"Go ahead.\"\n\n\"This morning I up very early. I thought it time to leave, but not. Dad make pancakes, then mommy and Newton want pancakes. Dad said if I went to sleep, we go to Creamy Cow. I was very good. I went to sleep and didn't get up until daddy woke me. We had lunch. We stop at Creamy Cow. No chocolate syrup. I get strawberry. I never have before. It was delicious, like my mommy. I wanted to drink it from the side of the glass, but my banana split was in it. Everything moved. Syrup missed my mouth, go down my shirt. My mommy very angry with me. My daddy too. Did I do bad?\"\n\n\"What do you think Teddy? If your mommy and daddy are angry with you, was it a good thing or bad thing?\"\n\nTeddy started to cry. Through her tears she said, \"It was a bad thing.\"\n\n\"You must remember Teddy, you are only two years old. You are expected to make mistakes like this. You must learn from them, and not do them again. Your parent's anger is expected, but it is only for a short time. They will love you regardless of what you do, as long as you learn not to do it again. Did you apologize to your parents', and tell them that you love them?\"\n\n\"No, I tried to tell them I was right.\"\n\n\"Now that you know you are wrong, what are you going to do?\"\n\n\"I tell them I sorry, and not do it again.\"\n\n\"Didn't you leave something out?\"\n\n\"I love them.\"\n\n\"Why are you talking to me? You know what to do, do it.\"\n\n\"Thank you for being my friend Callie. I see you soon.\"\n\nTeddy ran to me, and I wrapped her up in the towel.\n\n\"Did you learn anything from Callie?\"\n\n\"Yes, I have to be better.\"\n\n\"You are only two years old, and very soon you will be three. You are not expected to be perfect. I am not perfect either, and I am much older than you are. As we grow older, we try to make less mistakes than we made the day before. As hard as we try, we always fail. Remember, only God is perfect, and he forgives us for most of our failures.\"\n\nTeddy laughed.\n\n\"Teddy, I wasn't being funny.\"\n\n\"I'm sorry grandpa. Grandma wanted to know when you grew up.\"\n\n\"I grew up after the plane crash in Alaska. Ask her to go sleep on the nearest cloud. We have to find the bomb someone planted on this ship to make us fail.\"\n\n\"Can I see my mommy and daddy now?\"\n\n\"Absolutely.\"\n\n*********************\n\nWilliam, Jemma, William Junior, and Patrick arrived, and were immediately attacked by reporters. True to his nature, William refused to talk to them. Young William took his place at the microphone.\n\n\"Today is a very auspicious day for everyone involved in the \"Deep Space Science Project.\" Since its inception, 9 years ago, led by four people, it has grown into a massive undertaking that I can proudly say for my father and the other 19 members, who have financed this project, has been successful beyond anyone's wildest imagination. Its initial budget was $350 billion. Each investor has already recouped their investment, because this project and its 250 scientists have accounted for 918 patents. The lives of Americans, and people all over the world have been made better, and benefited, because of their efforts. The most obvious one is the development of the Nuclear Fusion Reactor. No longer will the world have to worry about the disposal of waste from Nuclear Fission Reactors. All of you have read about, and seen the young man, who developed and patented this reactor. His name is Gordon Oliver Stars Luck. The son of Mrs. Jennifer and Doctor Even Luck. He was 15 years old when he developed this reactor, and he was not a one patent wonder. I cannot tell you about some of the others he developed, because most of them are national secrets.\n\nHis sister, Mrs. Delicious Luck Thyme is responsible for the engines that will lift this amazing craft into the air silently, and without the use of hydrogen, and oxygen, which cause the explosive reaction used to lift the rockets NASA uses. The Federal Government refuses to believe these will work to get anything out of our atmosphere and into space. We will prove them wrong today. We will be out of the atmosphere and into space in less than 90 seconds. \n\nI will not go into everything else we will do today, and leave it to the speeches you will hear later. You will be stunned into silence, and you will not believe what you hear. However, this spacecraft will transmit back live pictures, and radio transmissions every second of its trip past the moon, Mars and every other planet it passes along its trip past the Kuiper belt and into deep space. It may be possible for some of our scientific equipment to communicate with satellites that are orbiting the earth, or that are stationary in deep space.\n\nWe will never see these magnificent people again, as they travel to the next star system looking for Earth 2. They won't be able to set up a signal fire to let us know they found it. It may take generations for a signal to get back from them that they found it. Or they may never find it, but they will keep looking for as long as they live. Thank you very much. I will not take any questions.\"\n\nNeedless to say the press corps started shouting questions to Junior as soon as he finished speaking. He ignored them, walked away from the microphone, joined his family, and began walking towards the stage. He wasn't paying attention where he was going, because he was talking to his mother. He knocked over a beautiful red headed woman, and landed on top of her.\n\nJemma, William, and Patrick laughed as they saw their son in this very sexual position, but decided to let him try to talk his way out of this problem. They kept walking, and left the two of them alone, on the ground.\n\nJunior did not move. He looked at the woman's face, with his body still positioned between her thighs. He was stunned by her beauty.\n\nShe said, \"I don't kiss on the first date, and I don't screw in public. Would you mind getting off me?\"\n\n\"I am so sorry, I was looking at your face and not thinking. May I help you up?\"\n\n\"You would have to get off me first.\"\n\nWilliam rolled off her, jumped up, and offered her his hand. He helped her to her feet, and almost began to brush her off, when her eyes glared at him.\n\n\"Is that the way you get to feel women up?\"\n\n\"No, I've been trying to avoid women as attractive as you are all my life. I never wanted to get married. I am not gay, but I find women overpowering. This is not a come online. I just got back from China. I've been there since I was 21, and built up a business that was quite successful. My father recalled me, because he's getting old, and wants me to take over his entire empire. It's quite extensive, and it's going to take me a while to learn, and understand it all. \n\nI'm sorry I never gave you my name. I am William Zabo Junior. A two-year-old redheaded girl named Teddy, told me I would meet a redheaded girl today. You are Doctor, am I correct?\"\n\n\"How could you possibly know that? I've never met you before.\"\n\n\"I'm not an ax murderer, but if I can find Teddy, would you come with me to meet her?\"\n\n\"How do I know you're not an ax murderer?\"\n\n\"Isn't that evident, I don't have an ax.\"\n\n\"Very funny, I would have to tell my aunt where I'm going.\"\n\n\"You could bring her with us if you'd like.\"\n\n\"I'll ask her if she'd like to come.\"\n\nAfter walking through the crowd, and down the line of seats, they reached her aunt.\n\n\"Aunt Hannah, this is William Zabo Junior. I'm going with him to meet a little girl, who told him we were going to meet today.\"\n\n\"You're going to meet Teddy, how wonderful.\"\n\n\"How do you know Teddy?\"\n\n\"I told you I was going on a long trip today, I just didn't tell you how long.\"\n\n\"What are you talking about?\"\n\n\"I'm not going to be at your wedding dear. I'm going to be far, far away. This nice young man will make you a good husband and a great father to your children. You don't need me hanging around you anymore. They need me on that ship, and I've decided to go. I didn't want to tell you before now, because you would have argued with me, until the cows came home. This way is much easier. Enjoy your young man, he will love you and your children forever.\"\n\n\"Hannah, he doesn't even know my name.\"\n\n\"Your name is Gwendolyn, everybody calls you Gwen.\"\n\n\"What's my last name smart ass?\"\n\n\"Thornhill, it's not the same last name as your aunts.\"\n\n\"This gets scarier by the minute.\"\n\nHannah said, \"It won't be a once you meet Teddy. Go along now, she's in the hangar.\n\n\"I'm going to run away from home, you're scaring me.\"\n\n\"I'm the one running away from home, and I'm running further than you are.\"\n\n\"Hannah stop this, either you are getting nuttier than a fruitcake, or I am.\"\n\n\"Honey just go along with William, and you will have the best life any woman has ever had. Kiss me, and say goodbye. You will see me once more later today, but this will be the last time we will be alone together.\"\n\nTears flowed out of her eyes as Gwen let the power of her aunts words sink in.\n\n\"I'm going to have to hire a new nurse.\"\n\n\"You're going to be closing your office soon, and moving to South Carolina. You can hire a new nurse there.\"\n\n\"If you knew all this was going to happen, why didn't you warn me? I could have taken a sedative.\"\n\n\"Doctor, you are not allowed to medicate yourself. It's against the rules.\"\n\n\"Sometimes you have to say screw the rules, and save the patient.\"\n\n\"Time is running short, and there is a lot to do. Give me my kiss, say goodbye, and go with your young man. Your wedding will be something for the ages. His father will not accept anything less. Don't argue with William senior, worse still, don't argue with Jemma, you will lose, and you will be badly bruised when she's finished with you. She's 63 years old, and she's pregnant. That is a bad combination.\"\n\n\"You know as well as I do that's not possible.\"\n\n\"Get out your medical history books, and be ready to change them, because Jemma is pregnant. Every 15 years like clockwork, she gets pregnant. She's ready to kill her husband.\"\n\n\"I would agree with her 100%, and plead insanity in court.\"\n\n\"If there was one woman in the jury, she would never be convicted. Get going you two, and enjoy your lives together.\"\n\nGwen and Hannah hugged and kissed for the longest time.\n\n\"You should have warned me. What am I going to do without you?\"\n\n\"You are going to do the same thing I am. You are going to have the time of your life. Where else have you ever heard of a 56-year-old woman traveling into deep space because she is needed, and not as excess baggage. They really need me on board that spacecraft, and I was ecstatic when they asked me. Go, before we both start crying.\"\n\nIt was too late for that. William took Gwen's arm, said goodbye to Hannah and began walking down the line of chairs. The flood of tears was already blinding her, and she held on to him for dear life, and for guidance as she walked with him.\n\nHannah watched her walk away, knowing she was fine, but crocodile tears were flowing down her face, and fogging up her glasses. She was thankful she had tissues and hankies in her bag to wipe her eyes and clean her glasses so she could see her one last time.\n\n*******************\n\n\"William, when you tripped me, weren't you with your family?\"\n\n\"Yes I was.\"\n\n\"Where did they disappear to when you fell?\"\n\n\"Since Teddy told everyone what was going to happen today, it was a foregone conclusion I was going to fall over a redheaded female. They saw me fall over you, and they saw you were a carrot top. I believe they disappeared laughing to leave us alone. They knew I was dead in the water, because Teddy is never wrong. Never! She is clairvoyant and the things she says always come to pass. \n\nMy mom and dad are as funny a married couple as you ever want to meet. You would never guess the amount of money my dad has because he never flaunts it. A hospital here, in Temple, was being so poorly managed, and the doctors and staff were so bad my father bought the hospital. He didn't clean house as you would expect a new owner to do, he brought in a new attitude. If you don't smile, you are fired. If you aren't nice to the patient, you are fired. It didn't matter if you were in janitor or a doctor, you were out the door. He bought the hospital for around $60 million, put another hundred million dollars into upgrades, and pays the staff better. Now the hospital get applications to work here from Houston, Dallas and Austin. You may ask yourself what does he get out of this largess, and it's easy. The hospital is a 'Non-Profit.' It's a tax write off for him, and trust me he needs tax write offs.\n\nMy mom and dad have been married for over 43 years, and have two children 15 years apart. If you watch their interplay, you would swear they are newlyweds. It's been 15 years, and my mom is pregnant again. They are unbelievable, and on time.\"\n\nGwen said, \"I know my aunt said the same thing, but physically, it's not possible. It's possible for the man, but not possible for the woman.\"\n\n\"When I introduce you to my mother, would you please tell her she can't be pregnant? She will show you the sonogram of the little girl she has inside her.\"\n\n\"Your family is going to rewrite the textbooks, and that is an expensive undertaking.\"\n\n\"You doctors are all rich, you can afford it.\"\n\n\"You said you were rich, and I'm not doing too badly myself. If it's not too personal, how rich is your father?\"\n\n\"I don't know exactly. I do know is he put down $30 billion to help start up this project. That was before they had all 20 investors lined up. When they had the full complement of the group in the fold, they returned $16.5 billion to him. Each members final cost came in at $17.5 billion, and they will be getting a refund on that also. The project came in $47 billion under budget. When was the last time you heard of a government project coming in under budget?\"\n\n\"I don't believe I have.\"\n\n\"If the government tells private industry what they need, and tell them to use their own funds to get things done, it will be done cheaper, faster, and better. Keep the government out of business and let them make the laws that keep the public safe. Let the government pay like most businesses do, one third upfront, and then by progress reports. Every time the company meets a particular standard, they get paid more money. If they miss a deadline, money gets deducted. Businesses don't like to lose money, they will make those deadlines, even if they have to keep factories open 24/7.\"\n\n\"Is that what you anticipate doing?\"\n\n\"I know one thing I am going to do. There are going to be no hungry people in the United States. Then, there are going to be less hungry people in this world, and a lot fewer sick people.\"\n\n\"How do you figure that?\"\n\n\"One part is going to be your wedding present from me and my extended family. Whether you patent it, or decide to give it away for free is up to you. If there are a lot fewer people that go to bed hungry, the disease rate will go down automatically.\"\n\n\"Does your father know about your plans?\"\n\n\"He is already doing it. He has a program in place to wipe out hunger in the United States. I will continue his dream, by kicking the federal agencies out of that business. If they don't want to cooperate, because they have their hands in too many pots, and too many people are feeding at the government trough, I'll take to the airwaves and make them look like moneygrubbing idiots.\n\nOnce that is accomplished, I'll take it country by country, force the dictators out by feeding the people directly, and teaching them to stand up against their oppressors. If need be, I'll send a private army in and take the dictator apart piece by piece. As soon as that is accomplished, I'll have the UN, and the African Union come in and have them establish order, and form a decent government for the people.\"\n\n\"Do you know how many billions of dollars you are talking about?\"\n\n\"My father's businesses bring in many billions of dollars a month. They are all legitimate, and they pay their taxes in every country they are in. He has passed every audit the United States government has put him through, and every other country in the world. He has had no problems in any area, including China. While I was there, I did not pay one bribe to any official. Every office in my buildings are bugged, and my employees knew it. Any official that came in and tried to get money out of us was turned into the local prefect of police, and was never heard from again.\"\n\n\"What a way to run a railroad.\"\n\n\"You are right, after a few years no one tried to get money out of us. They tried call girls, they tried passing us notes, they tried phone calls. None of it worked. My suppliers hated me, but my employees loved me. I paid them more than any other business in town, and I paid for their healthcare. They protected me like I was the premier of the country. \n\nHere we are, get ready to meet Teddy, she will knock your socks off.\"\n\n\"I'm okay with socks, if it's anything higher, you're in trouble.\"\n\n\"Oh my goodness, you are going to meet more than Teddy; most of my family is here.\"\n\n\"Did you plan this?\"\n\n\"I didn't know I was going to meet you, until you tripped me. How could I possibly plan this?\"\n\n\"I didn't trip you, you knocked me down.\"\n\n\"You wanted to meet me and you know it. I am a chick magnet.\"\n\n\"Yeah, that's why you hid in China for 14 years.\"\n\n\"Uncle Even, I'd like you to meet someone.\"\n\n\"Congratulations William, I see you've met your redheaded Doctor. Did you attack her, or pull her out of her seat?\"\n\n\"No, nothing so elegant. She tripped me, and would not let me up.\"\n\n\"Sex before the first date that was fast work William. Are you going to introduce me to Gwendolyn?\"\n\n\"This is scary William.\"\n\nI took her hand. \"You haven't seen anything yet Gwen. Let me introduce you to our clairvoyant. Teddy will take you by surprise, and you will love her. Everyone take a chair, William has met his new wife.\"\n\nGwen said, \"I think I should leave.\"\n\nTeddy said, \"56 years married. Good long time.\"\n\nGwen replied, \"I'm 35 years old, I'm going to live to 91?\"\n\n\"Him too, die in bed together.\"\n\nTeddy asked Gwen, \"Tell you about beginning of marriage or end?\"\n\nGwen looked at William, \"Please tell me about the beginning please.\"\n\n\"Three children, two redhead girls like mommy; one silver head boy like grandpa. William love you forever. He hen-pecked. You love him forever. Live in South Carolina, he take care of space program, and help feed the world. Him Nobel Peace Prize, you Nobel Prize for Medicine, Richard, Holden Nobel Prize for Science, 18 years. All private money, government not happy. Next election, all Representatives out of office. One third Senators out of office. Many changes take place in government bureaucracy. Lawyers out, business people in. Want William President, he say no. Hold me please.\"\n\nDelicious handed Teddy to Gwen, and they smiled at one another.\n\nTeddy said, \"Head please.\"\n\nGwen looked around not knowing what she meant.\n\nDelicious told her that Teddy wanted to take her head in her hands.\n\nGwen bent her head, and Teddy placed both her hands on her temples. Gwen felt something that she couldn't describe, but she knew it was from the contact with the little girls hands.\n\nTeddy frowned as she gently moved her hands away.\n\n\"Little tumor behind right eye, must get fixed where grandpa went.\"\n\nGwen said, \"I just had a physical, and they didn't see anything.\"\n\nDelicious put an arm around Gwen. \"Gwen, if Teddy said there is a tumor behind your right eye, it's there. Please get it checked. If she wants you to go to M.D. Anderson, go there. My father had pancreatic cancer, and they were able to save him.\"",
        "William said, \"I will have an appointment for you tomorrow morning.\"\n\nGwen looked at him and said, \"Who died and made you God?\"\n\nTeddy said, \"Only God perfect, we try hard not make mistake.\"\n\nTeddy kissed her mother. \"I love my mommy. I make mistake. I try harder.\"\n\n\"I love my Teddy. Mommy make many mistakes. She's trying harder too.\"\n\nFive minutes later William put his cell phone away. \n\nHe said, \"That was easy enough.\"\n\nDelicious asked, \"Who was at the hospital on Christmas Day?\"\n\n\"The assistant administrator; someone has to be there to keep the hospital running.\"\n\n\"The hospital has to be short staffed this week, how did you get Gwen an appointment so quickly?\"\n\n\"He told me I couldn't get her in for a simple set of x-rays, and have them read by a radiologist in no certain terms. I told him I wanted his best x-ray technician, and his chief of radiology to be there tomorrow morning at 10 o'clock. He said I could go straight to hell. It's not going to happen. \n\nI told him it was a shame the hospital was going to miss out on a $5 million donation. He said the chief of radiology and their senior x-ray technician would be there waiting for her.\"\n\nGwen's mouth dropped open. \"You paid $5 million for me to have x-rays, and have them read tomorrow morning?\"\n\n\"It's tax-deductible.\"\n\n\"You're out of your damn mind.\"\n\n\"What good is a doctor who is blind in one eye?\"\n\nI put my arm around Gwen's shoulder, and kissed her head. \n\n\"Gwen, Young William spent $5 million to make sure you stay healthy, and has given money to a charity, which happens to be a tax deduction? William senior's businesses will most likely make $100 million in the next 24 hours. Do you think he is going to miss the $5 million his son spent on you today?\n\nThings are going to happen to you that you never saw coming. If you want to buy a hospital or build one, all you are going to have to do is write a check. The man who stumbled over you this morning is going to be the richest man in the world. The more money he gives to charities, the more money his businesses will earn.\"\n\n\"William told me it was all legitimate, is that the truth?\"\n\n\"His father's businesses are all legitimate. However, William Senior has been forced to deal with some very unsavory characters through the years. Junior has never been involved in any of those transactions. Whether senior tells Junior about it is up to him. I can tell you from personal knowledge that William senior was instrumental in getting the former vice president of the United States not to run for president. The man was an anathema to this country, and William found out through sources that were not so clean themselves what he was up to. We could not have a president that was owned by subversive influences. \n\nWilliam came up with a plan that forced him to expose his weaknesses. You saw what happened on television, and the reruns of it for weeks afterwards. It was the funniest thing I ever saw. Having him pick up Patrick to protect himself from bullets that were fired at a firing range weeks before, and played on tape from a truck that was in flames, and was carrying fireworks, was a stroke of genius. William had nothing to do with what happened to the vice president after that. It was just error after error that forced him to leave the country.\"\n\nGwen laughed. \"It was all my patients could talk about, when they came into the office. Even though they were sick, they laughed as they were talking about that video. I know from reading about it that the FBI and local authorities went through those woods, with a fine tooth comb, looking for shell casings, they didn't come up with anything. It was an amazing plan, and funny as heck.\"\n\n\"The best part was it could not come back at William. He was there to offer the vice president $500 million to help him run for the presidency. He listed all the wonderful things the vice president did as a senator, and vice president, when all hell broke loose. \n\nYou have to hand it to that camera man. He kept the camera on the vice president at all times. He didn't duck or run for cover. He did his job, even though he could have lost his life doing it.\"\n\n********************\n\nEverything was going along beautifully as Gwen met most of our family that day. Then two things happened that made my blood run cold. A voice I knew too well yelled, \"There you are you dumb sonofabitch,\" and Zoey yelled, \"Mom!\"\n\nI turned around and laughed. I sent Dycke a sky blue flight suit to wear to the ceremonies. If anyone deserved to wear one he did. However, the one I sent him was for a man extra thin/extra tall and long. He was none of these. \n\nThe son of the bitch wore it. He had cuffs up to his elbows and his knees. The little bit of belly he had was prominently displayed. I was hysterical. I laughed so hard I wound up on the floor.\n\nHe looked down at me with a grin on his face. \"Well Doctor, aren't you happy with my appearance? This is what you wanted me to wear on the most important day of my companies' life, and mine. If you don't mind I'll wear a suit and tie, while I'm up on the stage today. \n\nI put this abomination on in the car, while we were on the way here. I've never heard Payne laugh so hard in her life. I am memorialized in her camera forever. I can guarantee you those pictures will be all around my office in January. What do you have to say for yourself Doctor?\"\n\nI got up and hugged him. \"I don't care what happens to you, I'm leaving town at 5 o'clock.\"\n\n\"You're not leaving town, you leaving this world. Don't you dare come back.\"\n\n\"I've got to find the bomb first.\"\n\n\"What bomb?\"\n\n\"I have to say hello to your wife first.\"\n\n\"Fuck my wife, tell me about the bomb.\"\n\n\"You don't really mean that do you Dycke?\"\n\n\"Mean what, about the bomb?\"\n\n\"No, you told me to fuck Payne. Do you really want me to fuck her after what you saw?\"\n\n\"Hell no, she'd faint if she saw that thing. Can we get back to the bomb please?\"\n\n\"I know in my heart someone is going to try to destroy our project. There are too many people who want us to fail. They want us to do it dramatically.\n\nI believe I know how they're going to try to do it, but we're going to do a sweep of the ship beforehand just to be sure. I'm about to issue everyone their orders. Stay here, and I'll be with you in a minute.\"\n\n\"You expect me to stand here, and do nothing, while you walk away talking about my spacecraft? You are out of your fucking mind.\"\n\n\"It's our spacecraft, and I knew you would not stand still, but it was worth a chance.\"\n\n\"I hope they stick you out at the end of the Mickey Mouse ears for a week.\"\n\n\"I could come back on one of the rockets you built for us.\"\n\n\"I take it back. Please stay out there. I haven't had a headache, since we finished the ship.\"\n\n\"You haven't received the first four orders from my boys yet? They were mailed out three weeks ago.\"\n\n\"Please tell me you're kidding Even, I'm not ready for number 2 yet.\"\n\n\"Those orders were not for number 2 Dycke, they were for number 3.\"\n\n\"Even, I hate you.\"\n\nI hugged him again, and told him I hated him too.\n\nI walked to the center of the hangar and clapped my hands to get everyone's attention.\n\n\"Thank you for being here so early for today's mission. We have one added attraction none of us anticipated. Is Adam Schiff here?\"\n\n\"I'm here Doctor Luck.\"\n\n\"I suspect you have Laura with you.\"\n\n\"No sir, I'm with Laura. She's making sure I don't get lost.\"\n\n\"There's no easy way to say this so I'm just going to say it quickly. There may be a bomb on board. We're going to be breaking up into three groups. Adam you are a group of one. You are the only one who knows the bowels of the ship. Anyone who went inside, without knowledge of it, would quickly get lost. An inexperienced bomber would probably have stayed close to one of the entrances to the inside plumbing areas. I want you to take a radio, go in there, to see if anything's been tampered with. Are you okay with that?\"\n\n\"Yes sir, I know what to do.\"\n\n\"Get going Adam, and take everything you need. If you find anything out of the ordinary, DON'T TOUCH IT. CALL FOR COLONEL DANIELS'.\"\n\n\"DON'T TOUCH IT.\" That's Laura's favorite saying sir.\"\n\nLaura hit him in the ribs for that remark.\n\n\"It was a joke Laura.\"\n\n\"It was a joke at my expense Adam.\"\n\n\"Oh good, at least you knew it was a joke.\"\n\n***************\n\n\"Flight deck crews; Jennifer is your boss. You will start on the fifth floor, and work your way down to the third floor. Look everywhere from the vents to the rear of the cabinets. If a suitcase is unsealed open it. If anything looks tampered with, check it out. If it looks really suspicious, don't touch it, call for help.\"\n\n\"Engineering deck are all of you here?\"\n\n\"We are short two people Doctor Luck.\"\n\n\"Leave their names with Mark so he can tell them where to meet you. Monty you will be in charge of the engineers. Keep them focused on what they are doing so they are not running around in circles. Start on deck 5 and then up to deck 4. We will all meet on Deck 3. Check everything, including as much of the nuclear reactors confinement area as you can see, especially in the safe area above it. It would be a perfect place to hide a little bomb, and cause maximum damage. \n\nDon't forget the elevator shafts in the landing gear, and the heavy lift cargo port. If we get our blue suits dirty, they get dirty, but we will go into space, without any worries.\"\n\n\"Jack are you here?\"\n\n\"I'm here, Even.\"\n\n\"Ladies and gentlemen, this is Colonel Jack Daniels. He is one of the finest engineers, and demolition experts you will ever meet. If you find something, or need help, he is your man. He will be located on the third floor. If you find anything suspicious, or you are sure it's the bomb, call him, and he will disarm it 'outside the spacecraft.' The operative words are 'outside the spacecraft.' We don't want any explosions inside this craft. \n\n\"This little person standing next to me, in the ill-fitting flight suit is Dycke Schneider. He and his company built this marvelous craft. He knows every nook and cranny of it. If you have any questions, he will be on the third floor with[RG1]  the Colonel to answer them. Since I have covered everyone's assignments, I am going to have something to eat, and take a long nap while all of you work your fingertips to the bone. Okay people off to work, quietly, quickly, and efficiently. Leave nothing to chance, just like we trained. We don't want the public to know anything is wrong.\"\n\nEveryone booed me, as they set off to do their given chores, knowing that I was going to be working as hard as they were to see if any explosive device was on board the Good Luck 1.\n\n****************\n\nAdam and Laura were walking towards the spacecraft, when she punched his left arm.\n\n\"Dammit Laura that hurts.\"\n\n\"I did that on purpose. I wanted to remind you that your left arm is not fully healed. I don't want you to play around in there. You do not have two strong arms to get yourself around those pipes like you normally do. Please be careful, because if I have to come in there to get you, I'm going to break your neck.\"\n\n\"What did George tell you to say, rather than threatening me? Instead of going all hostile on me what are you supposed to say? Come on Laura say it.\"\n\n\"Dammit Adam this is hard for me. I've always been hostile towards men. It's going to take me a while to get over it. I love you Adam Schiff, and I don't want you to get hurt in there. I don't want to lose you. Please be careful or I'll break your fucking neck.\"\n\nAdam pulled her to his body, and kissed her. \"Was that so hard love? Was that so terrible? That was a great beginning, even though I could have done without the end. What is it about my neck that you want to break it all the time?\"\n\n\"I'll tell you when you come out of there in one piece. If you come out of there in more than one piece, as I'm breaking your neck, I'll tell you.\"\n\n\"That sounds fair. Now kiss me so I can go to work.\"\n\n\"Go slowly Adam, and please don't get hurt. If you do, there will be no tomorrow morning.\"\n\n\"That's downright mean Laura. Can I at least practice 'The bottom is the top, and the top is the bottom?\n\n\"Absolutely not, you almost got laid this morning, because of that exploratory mission. I invented that routine for you, and now you have a doctorate in it.\"\n\n\"If I don't practice daily, I could lose my edge, and I may forget things that you may want me to remember. I could go from a doctorate, to a freshman. You wouldn't want that to happen, would you?\"\n\n\"If you forget anything, I will remind you by biting your dick. I'm sure that will remind you that you left something important out.\"\n\n\"You are threatening me again, which means you must apologize in the way George told you to. Come on say it.\"\n\n\"I can't, we are right by the dignitaries' box, and everyone's looking at us.\"\n\n\"They are going to watch us get married in a few hours. I think we are allowed to kiss, before I go to work.\"\n\n\"Adam, my mother is watching us, and she has a camera in her hands.\"\n\n\"Why don't we give her a picture she will keep forever in the Valentino family album? I love you Laura Valentino, and I will never disappoint you again. Kiss me.\"\n\n\"If these people start applauding, you better run for your life.\"\n\n\"I'm not running from my wife.\"\n\n\"You are a real bastard Adam.\" She moved in close, put her arms around his neck, and kissed him passionately. It wasn't a short kiss, it was the kind of kiss that affirmed her love for him.\n\nWhen they came up for air, she said, \"Go to work, and find that fucking bomb. I want to know that my stasis chambers work.\"\n\nThis time he kissed her, and although it was shorter, it was just as meaningful.\n\n\"Go sit with your parents; this could take me between two and three hours. I have my radio, and everything is going to be fine.\"\n\n\"I love you Adam, come back to me.\"\n\n\"I love you Laura, and nothing could keep me away.\" He smacked her on her butt, and ran towards the ship. Everyone in the dignitary area laughed, and applauded.\n\nLaura wanted to take off after him, and rip him to shreds. She decided against it, and moved towards her parents. She kissed her mother, and father, and her eyes turned misty.\n\nPatty said, \"If you start now, we will need gallons of water to hydrate ourselves by 5 o'clock. I have some surprises for you that should make you feel better. Turn around.\"\n\nLaura turned him and saw Anna and Cloudy standing behind her. She screamed and jumped for joy.\n\n\"You little bitch, you told me Cloudy could not come, and you wouldn't come without him, because it was Christmas.\"\n\n\"Cloudy has a very nice boss. Dycke stuffed us in one of his airplanes, and flew us down here yesterday. We were allowed to see mom and dad, but we were not allowed to see you until today. From the looks of things, I would say you and your young man are getting along very well. Are you fucking or not?\"\n\n\"No we are not. I made a promise to myself to remain a virgin, until I was married. Adam has made me keep that promise. There were times I wanted to do it, but he refused. He told me one day I may regret my decision to break my vow, and he didn't want to be the one who was to blame.\"\n\n\"He's quite a man. Is he a virgin also?\"\n\n\"No, he is very experienced. When we go out, many of his former female flames come up to him, and ask if we are monogamous, or if we would like to do a threesome. I must blush bright red, because Adam laughs at me every time it happens. He tells them we are monogamous, but thanks for the offer. Some of these women are knockouts, and I wonder what he sees in me. If we were staying here on earth, I could say it's the money. However, we're leaving, and money has nothing to do with it. We love each other, it's pure and simple. Who would have ever thought of me falling in love?\"\n\nRobert said, \"You could have fallen for me and sex. I am very active that way.\"\n\n\"Holy crap, what did dad do to pry you out of bed with a woman, to come to see your sister get married and leave this planet behind?\"\n\n\"He was very sneaky Laura, sneakier than mom. He called the Chief Justice and asked him to shame me into coming here today. You don't say no to the Chief Justice of the Supreme Court. It's just not done, especially when you're sleeping with his four daughters. Bad things could happen to you if you upset him and his wife.\"\n\nLaura looked at her father. \"Way to go dad.\"\n\n\"You have to hit your brother where it hurts the most dear, and we all know where to hurt him, don't we?\"\n\n\"We all know he wouldn't hurt for long dad. He could always go back to the University of Michigan for a Doctorate in Sex Education. Every female on campus would line up at his door to take that class.\"\n\nRobert said, \"I never thought about that possibility. If the governor does not win the primary for the Presidency, I think I'll do it. Thank you Laura, thank you very much.\"\n\n\"I'm so glad I won't be here to see it. I'll be more than 100 billion miles away, and he won't have one lawsuit against him, because all the females will be coming to him, and not the other way around.\"\n\n\"Laura stop egging your brother along. Keeping four females happy has kept him toned, and his cardiovascular health is wonderful. Taking on 8 to 10 females a day, would be too much for any ordinary male, although he did try when he was 16 years old. \n\nYes Robert I know all about it. I was the one that had to clean out your condoms from the waste paper baskets in the bedroom of the house next door to ours. I don't know how you ever made it to school.\"\n\n\"It was all those push-ups and leg lifts mom. They kept my legs in great shape. The track coach wanted me on the team because I ran so fast. I turned him down, because it would have interfered with my extracurricular activities.\"\n\nAnna laughed. \"Brother, all you had was extracurricular activities. Your dumb act worked perfectly on all of us. We did all your chores, while you were screwing every girl in school. I don't understand why dad didn't realize you were going through so many condoms in a week, and he kept buying you more.\"\n\nStephano said, \"It was easy. Robert kept showing me condoms that supposedly broke during the act of sex. I was not prepared for Robert to have children, or us to have grandchildren running around, at the same time your mother was running around the house with a gun in her hand.\"\n\nRobert said, \"I have an announcement to make of major proportions. The in- vitro fertilization of the Governor of Maryland has been successful. She is one month pregnant.\"\n\n\"Congratulations Robert, you're going to be a father.\"\n\n\"I'm sorry to say I am not the father. I am not at liberty to say who is.\"\n\nStephano was eyes opened wide. \"The Chief Justice, her father fathered the baby, didn't he? They are not related by blood, so there is no health problems to worry about in the future. It's true, isn't it? Fred Hastings is the father of the baby.\"\n\n\"I am not at liberty to say dad, and it's a promise I will keep to my death.\"\n\n\"Good boy, I'm very proud of you. When will she announce it?\"\n\n\"We haven't decided yet. It will either be New Year's Eve or New Year's Day. The problem is very few people will read the paper on New Year's Day because it's a Wednesday. They won't read anything, except for the sports pages. We want more people reading about her, than football scores or about the ball dropping in Times Square.\"\n\nStephano said, \"Shouldn't that be easily done Robert? \n\nThe headline should read:\n\n'Governor may be expecting triplets or quads after in vitro fertilization?' \n\nAn informed source close to the governor's entourage let slip that the governor was amazed when she was told there was a possibility of... \"So on and so forth...\" \n\nEveryone knows going into in vitro fertilization there is always the possibility of multiple births, so it's not a lie. It's a perfect opening for Friday's newspapers, and the Sunday talk shows will be all over it.",
        "Fox News will blast her saying, \"How can a mother of four or more children run the state of Maryland effectively. Everyone else will applaud her for being pregnant, and give her a wait and see attitude on running the government of Maryland. We both know she is going to do a fantastic job, and in 6 or 10 years she's going to be ripe to run for the presidency.\"\n\n\"Dad, you are amazing. I never thought of that, and Hannerty will be made to look like a fool.\"\n\n\"That's what fathers are for Robert, to make their sons look great.\"\n\n\"Will the testosterone group be more in tune with the day's events, because they are supposed to be about me? I'm getting married, which should be enough to shock all of you, but Monday, Anna becomes the richest member of the family.\"\n\nAnna did her Rocky impression and told Robert to be careful, because she could now crush him under the weight of her money.\n\n\"I never cared about money, although it is nice to have. I have four beautiful women at my disposal, and believe it or not they all love me. At the beginning, it was just for the sex. Now we all have wonderful personal relationships. I know I'm 20 years younger than they are, but I will never leave them, because they mean so much to me.\"\n\nPatty said, \"When Sandy's eight years of the presidency is over, you better move to Utah. They don't approve of multiple marriages, but they tend to look the other way at them. What are you going to do about the children Robert?\"\n\n\"I'm going to help raise them as my own mom. I had two great parents, well one great parent, and one flaky one, but I turned out all right, and so did my sisters. I think I can help my ladies raise wonderful children, and get them ready for what the world challenges them to do.\"\n\n\"Stephano, am I wrong, or did that sound like our son is growing up?\"\n\n\"Our son must have figured out a way to send us his clone. Robert would never have said words like 'raise them as my own,' or 'my ladies' in a cogent paragraph. He would have run away from responsibility for children, and told the women exactly where to go, because they were so old.\"\n\n\"Okay, you two win. I can tell you why I've changed so radically and so quickly. I've been sitting at the right hand of Judge Hastings. When the Chief Justice talks to you, on a one to one basis, and it's not about the law, you learn things about life, and living on the edge very quickly. He is an amazing man, and he can talk to you about anything from the beginning of written language, to what we are about to see today, with ease and precision. There are things he told me I can never repeat, not even on my deathbed. He took four ordinary students, and made them into doctors, and lawyers. Now one of them is the governor of Maryland. I could tell you the tricks he pulled to make Clark Atwater president, but it would take all day, and today is Laura day, so we will discuss that at a later time. I've never said this before Laura, I have always envied your brilliance, and I love you.\"\n\nRobert and Laura were always standoffish as children, and remained that way as they grew into adults. Today that vanished as they closed the gap between them, hugged each other, and tears flowed down their faces.\n\nLaura punched him in the stomach, so hard, Robert doubled over. \"You bastard, we could have been friends all these years, instead of adversaries.\"\n\nRobert laughed. \"Yes, but look at all the fun we would have missed.\"\n\n\"You know both Anna and I could take you apart if we wanted to?\"\n\n\"I couldn't take you, but I could take the shrimp apart anytime I wanted to. All I have to do is take off the shell.\"\n\nAnna screamed, and jumped at her brother's head. Robert pivoted to his left, caught her under his arm, and smacked her rump so hard she screamed.\n\n\"If you don't stop acting like a child, I'll drop your drawers and smack you on your bare ass Anna.\"\n\nNot to be outdone, Anna joined her hands together to make a fist and brought them down viciously to the back of Robert's left knee. He grunted as his knee collapsed, and he fell to the ground, releasing his sister in the process.\n\nAnna bounced up and jumped on Roberts' back as he was tending to his knee. She wrapped her legs around his midsection, and her arms around his throat.\n\nHe said, \"Sis if you don't release me, I'm going to stand up and fall backwards. I outweigh you by 90 pounds, and guess who is going to get severely injured when we hit the ground.\"\n\n\"Enough you two, we have a gym in the main building, and if you wish to continue this nonsense, you can do it tomorrow. There is a good hospital nearby that will be able to take care of your broken bones. Kiss and make up, before I knock your heads together.\"\n\n\"Dad, you've never acted this forceful before.\"\n\n\"Nine years of working with agents that could kill you with one finger, getting shot at from across the street, and your mother threatening to kill me if I kept information from her will do that to you. Now do what I said and stop this shit.\"\n\nAs they kissed, Patty pushed the button on her camera, and didn't take her finger off the button until well after they separated. She was after the look in their eyes, more than the kiss itself. She thought she got what she wanted.\n\n162. Lost and Found\n\nThe search was the most meticulous ever done. Any military or police force in the world would have been impressed by the way the crew of the Good Luck 1 took up the challenge to find a bomb that might or might not be in the ship.\n\nJack, Dycke, and I were on the third floor searching the flight deck, inch by inch. Jack asked me if anyone had checked the inside of the computer.\n\nI believe I knocked him over, when I said, \"Ask Callie if anyone tampered with her.\"\n\nHe replied, \"Who is Callie?\"\n\n\"She is our computer. Introduce yourself to her, and she will tell you almost anything you need to know, within your designation on the ship.\"\n\n\"You are shitting me Even?\"\n\n\"Sit in the center chair, and see for yourself. Tell her a lie first.\"\n\n\"Okay Doctor, you asked for it.\"\n\n\"Callie, this is Doctor Luck, I want you to shut down the nuclear engine.\"\n\n\"Voice verification indicates you are not Doctor Luck. Identify yourself, or I will call security.\"\n\n\"Callie that was a test. My name is Jack Daniels, and I would like to know if anyone tampered with you in the last four days.\"\n\n\"Hello Colonel Daniels, no one has tampered with any of us during that timeframe.\"\n\n\"Let me extend that timeframe. Has anyone placed an explosive device inside you since you were installed?\"\n\n\"No Colonel Daniels, since our systems were brought online, no attempt has been made to open our access panels. The only areas I cannot verify, are the cables going to my power source.\"\n\n\"Callie, how many access panels are there to the cables?\"\n\n\"37.\"\n\n\"Would you please print them out for me?\"\n\n\"Printing.\"\n\nIn an instant, the printing was done.\n\nI said, \"Since you built the ship Dycke, you get the extra access panel. It only seems fair.\"\n\n\"You are going to be a pain in the ass until 5 o'clock this afternoon, aren't you Even?\"\n\n\"You wouldn't have me any other way Dycke.\"\n\nJack asked, \"Are you two married, because it sure sounds that way?\"\n\n\"Jack, after six years of working hand in glove, we finish each other's sentences now.\"\n\n\"I don't want either of you standing behind me. You two have me worried.\"\n\n\"You definitely don't want Even standing behind you. You'll think you are mating with an elephant.\"\n\n\"I'm not going to ask you how you obtained that personal information. You stay away from me too.\"\n\n\"Jack you take access panels 1 through 12. I will take 13 to 24, and that leaves you with the rest of them Dycke.\"\n\n\"I knew you would say it that way Even. With your limited education you can't count higher than 24, except maybe in children.\"\n\n\"Go to work, before I take it out, and smack you with it.\"\n\nJack said, \"That's it, I'm out of here.\"\n\n**************\n\n'As a matter of pure chance', Gordon was a member of the team that inspected the room containing the supplies for the turkeys. While the three other members searched the room, he searched the bathroom. He checked to make sure that none of the bags containing the food, and sand had been tampered with. He moved each bag silently to make sure the bomb was not hidden by their bulk. When his search was over, he joined the other members of his team to complete the search of the room. The bomb was not found.\n\nOn the first floor, Monty wished she had a whip. Scientific engineers were great at what they did, but when it came to searching for something as obvious as a bomb, they had no clue. They would search under desks without moving the chairs out so they had an unobstructed view. They would not empty waste paper baskets to see if the bomb was underneath the waste. They were impossible, and for the first time in a long time, Gordon was not the first person on her list to kill.\n\nStephen, a nuclear technician, seemed to be the only exception to the rule. He climbed onto the safe area above the nuclear engine confinement area to verifying nothing was there. He was like a snake, crawling into the smallest areas looking for the bomb. She knew he didn't need watching so she kept her eyes focused on the others. As he entered the security office he was again on his stomach looking for the slightest area where a bomb could be placed.\n\nMonty saw him crawl in, shook her head, and walked off.\n\nAs soon as Stephen saw her walk away, he lifted the access panel, under the desk, to get to the turkey eggs. One by one he turned them over, and when he was finished with the 24th egg, gently placed the container in the area with the two fake mother turkeys, the sand, straw, water, and food. He flipped on the switch for the heat lamp and set the thermostat at 84\u00b0. He turned on the motion detector, because the little birds were supposed to start to emerge from their calcium homes soon. Once that happened, their fake mothers would begin to move also. With the bright lights, their mommies, close at hand, and everything they needed to thrive at their little beaks, they would have all the comforts of home.\n\nWhen Monty returned, she found him dissecting the file cabinets.\n\nStephen asked, \"Monty do you think we should move this away from the wall to see if there's anything behind it?\"\n\n\"No Stephen, there would be marks on the floor showing it had been moved previously. I think it's safe to say nobody touched it. Did you find anything else in here?\"\n\n\"Yes I did.\" He reached into his pocket and pulled out three dust bunnies, and showed them to her.\n\n\"Stephen, if you were not doing such a good job, I'd smack you upside the head. Go back to work.\"\n\n\"Yes ma'am.\"\n\nHe did, searching as meticulously as he did previously. Nearly 2 hours later every floor was completely searched, and the 37 access panels had been checked also. No bomb was found.\n\nI said to Dycke and Jack, \"They are going to bring it in using the urns of President Clark and Mrs. Julia Atwater. It's the only other way they can destroy the ship. They know we are placing the urns on the flight deck. If the blast is strong enough, it will destroy the computers, the flight deck, and the primary flight crew. We will lose all flight control options, and crash. How do we stop that Jack? We can't leave the urns behind, it was in there Will.\"\n\n\"If their ashes aren't in the urns, we can leave them behind. All we need is an x-ray machine to see what's inside them.\"\n\n\"Jack, I love you.\"\n\n\"Stay away from me Even.\"\n\n\"Let's go outside, I have to speak to William.\"\n\n\"Why?\"\n\n\"I'm getting you an x-ray machine. The one in the ship is not ready to be used yet. We will get a portable machine from the hospital.\"\n\n\"I don't think anyone at the hospital will argue with the owner.\"\n\n\"If they want to be working tomorrow, they won't.\"\n\n*********************\n\nWilliam, Jemma, and Patrick were in with the dignitaries having a wonderful time. Many of them couldn't believe he got Jemma pregnant, and asked who the real father was.\n\nJemma laughed at them. \"Hell, I want to know who the mother is.\"\n\nEveryone had a good laugh, and they talked about what a wonderful day they were having, and it was the perfect Christmas present for everyone to be here to watch the Good Luck 1 travel into deep space.\n\nI walked up behind William, but could not sneak up on him, because everyone gave me a way.\n\n\"Here comes Doctor Luck,\" they said before I got there, so William turned to greet me. We hugged each other, and I wished him a Merry Christmas.\n\nI said to him quietly, \"I need a Christmas present now. I need a portable x-ray machine, and a way to process the film instantly. We believe someone is going to try to put a bomb on board using the urns of the president and his wife.\"\n\n\"Will this ever stop Even?\"\n\n\"No William, it won't. We are threatening too many big businesses of their livelihood. If they can't feed off the government, who are they going to feed off of? What they don't realize is what we have realized. Space is not a losing proposition. Space is a winner. Space is the future. How long did it take you to recoup your investment in this project? They don't realize they could do it too. They are afraid of you and people that think 50 to 100 years ahead. Their business models think 10 maybe 15 years ahead. They are dinosaurs waiting to die.\"\n\n\"Are you sure you have to leave today? You sure know how to make an old man feel good about himself.\"\n\n\"There is nothing wrong with your ego William. Have you met your daughter-in-law yet?\"\n\n\"Yes, I saw my son laying between her thighs, but that was all?\"\n\n\"She is wonderful. She is Jemma in the flesh. Bright, beautiful, and will give William the strength he needs to go forward with his dreams. He is going to complete your dreams. You have a great son, and when Patrick comes of age, he will make you very proud also.\"\n\n\"Where are they now?\"\n\n\"I left them with my daughter, Teddy, Newton, and Gray. Teddy told Gwen she has a small tumor behind her right eye and she has to go to Anderson to have it removed. Gwen told everyone she just had a physical and everything was fine. Delicious told her if Teddy says it's there, it's there, and get it taken care of now.\n\nJunior called Anderson, spoke to the assistant administrator, and told him who and when he wanted Gwen to have the x-rays done.\n\nThe guy told him to go to hell, because it wasn't happening.\n\nJunior doesn't have your tact down quite yet, but he's getting there. He told the guy it was a real shame that the hospital was going to lose a $5 million donation. Gwen has an appointment at 10 o'clock tomorrow morning.\"\n\nWilliam senior said, \"That's my boy.\"\n\n\"Oh I forgot to tell you, he didn't answer the guy, he just hung up. He's got that part down perfectly.\"\n\n\"The acorn doesn't fall far from the tree.\"\n\n\"Would you please get me my x-ray machine now?\"\n\nWilliam punched the number into his cell phone, and told whoever answered it what he wanted in no uncertain terms and hung up. He called the police department, and told whoever he spoke to that the hospital had to deliver a piece of equipment to the NEST urgently. He didn't care what it cost, but they needed an escort now.\n\nWilliam shocked me when he said, \"Thank you.\"\n\nJunior walked into the area pulling Gwen with him.\n\nI said goodbye, because this was going to be a family affair.\n\nSenior turned to greet his future daughter-in-law, but Jemma pushed him out of the way.\n\nJunior was getting ready to introduce Gwen to his mother when Jemma pushed him into a seat, kissed Gwen and hugged her so tight she nearly crushed her bones.\n\nShe took both of Gwen's hands and said, \"Ravishing, just ravishing. We have so much to talk about. I never thought my son would get married, he was always afraid of strong women, I can't imagine why. His father runs all over me and I never complain. I'm sure you already know you're going to be living in South Carolina, but your wedding is going to be in New York. Your wedding dress is going to be made by Carolina Herrera, and will be to talk of the next century. We are sorry about your parents, it must've been very hard for you to lose both of them at one time. Are you a religious? Teddy didn't tell us if you were or not. Regardless, we can accommodate you in any manner you wish. We know your aunt is leaving today, but do you have a large extended family that you would like to it attend your wedding? We will arrange everything, and it will cost them nothing. They will be treated to the finest of everything: limousines, hotels, meals, plays, everything, they will be treated the whole New York experience.\"\n\n\"Mom would you shut up and let Gwen speak?\"\n\n\"William if you talk to me like that one more time you will attend your wedding with casts on your legs. Now, where was I...\"\n\nAs she began speaking a handkerchief was stuffed into her mouth, and both of her hands were grabbed. A scarf was put over her mouth and tied behind her head. Another scarf was used to bind her wrists behind her back. Once she was secured she was forced to sit in a chair. She was absolutely livid, and looked for the culprit, who she knew was her husband. She stared at him with her eyes on fire, which normally made agents run from her. William senior stood his ground and glared back at her.\n\n\"Jemma you have two choices, you can sit there and act like a lady, or I can have our agents take you home and tie you in bed until I return later this evening. You have no other options. You disgraced yourself just now. You are not queen of this ball, you are a pawn. You never tell a bride what she is going to do, you ask her what she would like, and then you accommodate her. Using Carolina is fine, but if you tell Gwen what fabrics to use, you will be barred from her salon. This is going to be Gwen's wedding, not yours. She will make the rules, not you. You will not set the date of the wedding, or the place of their honeymoon. All you can do is ask. Do I make myself perfectly clear?\"\n\nJemma did not acknowledge him or his rules.\n\n\"You have five seconds to say yes or be sent home 5-4-3-2-\" \n\nJemma acquiesced and nodded her head.\n\n\"I know that gag is probably very uncomfortable. If you promise not to say one word, I will have it removed. I mean one word Jemma. If you break your promise, you go home. Yes or no?\"\n\nShe nodded her head again.\n\nIsaac was standing behind her, and whispered into her ear, \"Mrs. Zabo, I'm right behind you. If you break your promise, I will gag you again and drive you home.\"\n\nJemma was getting tired of nodding her head, but she did.\n\nIsaac removed the scarf around her head, and the handkerchief from her mouth. Her hands were still bound behind her, but it was the use of her mouth she missed the most. Her husband would pay dearly when they got home this evening. She sat in the chair like a prim and proper wife, and she hated it.\n\nYoung William took a position by Gwen's side. \"Dad, I'd like you to meet Gwendolyn Thornhill, very soon to be my wife if she'll have me. Gwen, I'd like you to meet my father, William Anthony Zabo, the patriarch of our family.\"\n\n\"Hello Gwen, I've been waiting to meet you ever since Teddy told us you were coming into our lives.\"\n\n\"Hello Mister Zabo, it's a pleasure to meet you. All William talks about is your wife and you. Honestly, I was expecting an outburst like that from your wife. William warned me that she was a powder keg waiting to be lit by a match, and I was the match. He was correct. I am quite like her when I get going on a particular subject. If I think I am correct, and I have a point I want heard, no one is going to keep me quiet.\"\n\nYoung William groaned, \"Oh God no, I'm marrying mom.\"\n\nSenior laughed at him. \"How many times have you said since you returned home that you wanted to marry a woman just like your mother? It appears your wish has been granted.\"",
        "\"Shoot me please dad, it will be less painful.\"\n\nGwen slipped her arm in his. \"Remember, Teddy said we were going to be married for 56 years. I'm going to be torturing you for a long time.\"\n\n\"Dad helped me please.\"\n\n\"No one told you to have sex in public.\"\n\n\"She tripped me.\"\n\n\"You knocked me over.\"\n\n\"Go say hello to your mother. If you want to talk about being tortured, think of me when I get home tonight.\"\n\n\"Yes dad, I think mom will have a few things to say to you tonight.\"\n\n\"I'm not worried about the things she will say to me. I'm worried about the things she is going to do to me.\"\n\n\"There is always the couch.\"\n\n\"She's done it to me there too.\"\n\n\"You have to start slowing down dad, you are getting old.\"\n\n\"I'll slow down one dead.\"\n\n****************\n\n\"Mom, I would like to introduce you to Gwendolyn Thornhill, very soon to be my wife.\"\n\nJemma nodded her head, knowing the restriction she was under.\n\nWilliam senior said, \"You may have a conversation with your son, and his fianc\u00e9e, but be very careful Jemma.\"\n\n\"Hello Gwen, I would like to apologize for my behavior. I got a little carried away; no I got a lot carried away. Something I never thought would happen, is happening to my little boy, and it couldn't happen to a more wonderful person than you. I am so pleased that you are coming into our family, your addition to it is my greatest pleasure.\"\n\n\"Thank you Mrs. Zabo, did you hear what your son had to say a moment ago about who he's marrying?\"\n\n\"No I didn't.\"\n\n\"I said to your husband that I'm quite like you when I have a point of view I wish to get heard, and nothing will stop me from getting my point across. William here said 'Oh no, I'm marrying my mother.' Your husband replied 'How many times have you said since you've returned, you want to marry a woman just like your mother. It appears your prayers have been answered.'\n\nJemma laughed. \"God bit you in the ass, didn't he William?\"\n\n\"Don't gloat mother.\"\n\n\"Gwen don't you have something to say to my mother in reference to her physical condition?\"\n\n\"No, not that I know of.\"\n\n\"You're going to chicken out on me now aren't you? You're not going to ask her how a 63-year-old woman is pregnant, and it's against all the medical textbooks.\"\n\n\"There are always exceptions to what's in the textbooks William.\"\n\n\"Aren't you the one that said you were anti-gun?\"\n\n\"Yes I am anti-gun.\"\n\n\"Did I tell you I just changed and became a lifetime member of the NRA?\"\n\n\"Did I tell you that our children are going to be adopted?\"\n\n\"Mom, she is as evil as you are.\"\n\n\"You shouldn't have fallen all over her on the way in. There must've been other redheads in the crowd.\"\n\n\"I didn't fall all over her, she tripped me.\"\n\n\"Is that why you were trying to fuck her on the walkway?\"\n\n\"We were not having sex, it was just the way I landed on her.\"\n\n\"As a lifetime member of the NRA, that may be as close as you ever get to that area of my body.\"\n\n\"We're not even married yet and I am getting cut off. I'm going back to China, I was always safer there.\"\n\n\"Chicken shit.\"\n\n*******************\n\nAt 1:45 PM the horn sounded advising everyone to take their seats, because the festivities were going to begin at 2 PM. People without assigned seats began scurrying to any open seat, while people in the dignitary area presented their credentials and were escorted by agents to their assigned seats.\n\nJeff waited all afternoon for her to show up, and finally he saw her again. He still could not believe she was in her late 60s, because she was stunning. Raquel Welch handed him her credentials, and he welcomed her warmly.\n\n\"If you would follow me Ms. Welch, I will escort you to your seat.\"\n\nWalking down the rows was now like an obstacle course. Women had their handbags, coats, and umbrellas lying on the ground, and he had to move each one out of the way to make sure Raquel did not trip and injure herself. When he reached her seat he stood up quickly and turned, brushing up against both her breasts.\n\n\"I'm terribly sorry, I didn't realize you were that close to me.\"\n\n\"It's perfectly all right, is this my seat?\"\n\n\"Yes Ms. Welch it is. I hope you have your camera with you, because you will have a perfect view of the takeoff.\"\n\n\"Yes I do, and I have my crew standing by the beach waiting to see it moving through the sky.\"\n\n\"Tell them to have their film on high speed, because once The Good Luck 1 finishes hovering, and gets moving, you're not going to believe how fast it goes.\"\n\n\"Thank you for the information Jeff, I'll call them and let them know.\"\n\n\"Enjoy your day Ms. Welch.\"\n\n***************\n\n\"Uncle Even have you seen Adam?\"\n\n\"No, hasn't he checked in with you yet?\"\n\n\"No he hasn't, and I'm worried about him.\"\n\n\"Let me check with Mark to see if he's there.\"\n\nI pulled out my communicator and asked Mark if Adam Schiff had checked in. He told me he had not heard a peep out of Adam, since the search began.\n\n\"Fuck, I forgot all about him.\" I spoke into my communicator again, and told Gordon, Gray, Jack, and Dycke to meet me by the main entrance to the ship, on the double. We have trouble.\n\nLaura said, \"I'm coming with you, and don't you dare argue with me.\"\n\n\"Okay you can come.\"\n\nLaura turned and yelled, \"George, Adam's missing.\"\n\nHe replied, \"You are getting married today, if I have to tear that ship apart.\"\n\nAs I was moving towards the ship, I crossed pass with Stephano.\n\n\"Stephano juggle the speeches. We have one man missing. He was searching for the bomb. Put me last or cut me out, but we have to find him before we take off.\"\n\n\"Do what you have to do Even, I'll take care of everything else.\"\n\nWe met at the entrance to the ship and I advised everyone of Adam's predicament. There were five entrances into the ship's bowels, and it would be up to us to find where Adam was, access his situation, and get him out of there.\n\n\"When you enter your area, go to your right, it will be the easiest way for each of us to cover the entire ship. He will be easy to spot, because he's wearing his blue flight suit. With the five of us it should not take us more than an hour to complete this task. When you get to the next exit/ entrance, call in for instructions. Let's go.\"\n\nLaura said, \"Doctor Thyme, without being insulting, you've put on a little weight around your middle. You will not be able to fit between the pipes. I've been in there with Adam, so I know what I'm talking about.\"\n\nGray said, \"Okay, I'm going to get Teddy to see if she can tell us where Adam is. You are right Laura. I am fat, but in a year I won't be.\"\n\n\"Here is the schematic of the openings into the plumbing system. I'll take number one. Gordon you have number two. Laura you have number three, Dick you have number four, and George you have number five. Jack you stay in the center of the engineering deck on the outside chance Adam has found the bomb, and can't move because of it. You will take the shortest route to get to him, and figure out a way to remove the bomb without setting it off.\"\n\n\"You're not doing this because I'm 78 years old, are you?\"\n\n\"No I'm not. I'm doing it because you're the only one knows how to disarm a bomb.\"\n\n\"In that case, I accept.\"\n\nLaura said, \"Gentleman, I have one word of advice for you before you go in, watch your heads. Adam was forever hitting his head on the pipes above him, and they hurt.\"\n\n\"Thank you Laura, it's a good piece of advice with everything else that's going on today, try not to get hurt.\"\n\nAs each of them crawled through the warren of pipes, they called out for Adam, but they did not get a reply. Their voices bounced off the walls, and piping. Even if Adam replied there would be no way to know from which direction he called, or how far away he was.\n\nIt was very slow going, and each of them would be bruised by the end of the search.\n\nAfter every few meters of progress, Laura would scream, \"Adam, if you don't answer me, I'm going to break your fucking neck.\"\n\nAn hour had passed, and still no Adam. As she crawled along the piping, one of the valves read, \"Low Pressure Valve.\" She smiled, because this was the beginning of his lecture on how to get the waste out of the spacecraft. She continued crawling along and found the 'Waste Valve' that he had to open, using the low pressure valve to force the waste into the plastic bag, heat seal the bag, close the valve, and hurry back to turn off the low pressure valve before the line exploded. She remembered it all, and decided to look for the torpedo tube that forced the waste out of the ship and into space.\n\nShe remembered Adam saying that the bag went one way and the tube was the other. The tube had to be on the exterior wall of the ship so that's where she looked. Moments later she screamed into her communicator, \"I found him. Colonel the easiest way to get here is to come from the entrance four and moved to your left. The asshole is holding the bomb.\"\n\n\"It's nice seeing you too Laura, have you had a nice day?\"\n\n\"You idiot, you were told not to touch anything.\"\n\n\"I didn't touch it. I crawled underneath it to see if it was booby-trapped, and the stupid thing fell into my hands. I haven't moved for over an hour, and what does my fianc\u00e9 do when she finds me; she calls me an asshole.\"\n\n\"What am I supposed to call you, a hero?\"\n\n\"No how about someone who was doing his job properly, and waited for help to arrive. I wanted to make sure that my wife and I were safe when we went into space. I didn't want this to ruin our marriage. I didn't want the bastard's that are trying to blow up this wonderful machine to win. I want them to eat their hearts out as we prove to them that Doctor Luck and all the fine people that worked on this vessel were right and they were wrong.\"\n\nI told you I would never let you down. I told you I was going to make you proud of me. I hope this is a good start, and I want you to know there's more to come.\"\n\n\"If you don't shut up Adam I'm going to cry, and that's not allowed.\"\n\n\"Who said so?\"\n\n\"I did.\"\n\n\"Change your rules, and become human like the rest of us. We cry at the drop of a hat.\"\n\n\"Get out of my way Laura, and let me see what we're working with.\"\n\n\"How did it get in that position Adam?\"\n\n\"I checked out the tube and saw it attached to the top. I crawled in on my back to see if it was booby-trapped, but it was not. Suddenly, it just dropped, and I caught it, the way you see it now. I have not moved my hands or arms in over an hour, and they are cramping badly.\"\n\n\"You can move your hands and placed the box on your chest. It is probably a barometric device that is designed to go off as we pass through a particular altitude. It would be of little use to anyone to have it go off while we are on the ground.\"\n\nAdam tried, but it was impossible.\n\n\"I can't move my arms, they're locked.\"\n\nGeorge and Gordon join them to see if they could be of any assistance.\n\nJack said, \"Slide Adam out of the tube, until I can relieve him of the explosive device. Laura work on his arms until he gets circulation back, and is able to move them. Did anyone else see anything unusual while they were searching?\"\n\nEach of us gave a no for an answer.\n\n\"Good, we will still x-ray the urns to be certain we are in the clear, and then we will take off at 5 o'clock as planned.\"\n\n\"Lucius can you hear me?\"\n\n\"I'm here Jack, what's new?\"\n\n\"Someone sent us a very special delivery. However, I think you might like to return it personally.\"\n\n\"You just made my week, and possibly the end of my year. I'll meet you at the hangar.\"\n\n\"I'll be there in 20.\"\n\nJack pried the package loose from Adams hands, tucked it under his arm and began his trek out of the ship. Joseph Oyster was addressing the crowd and telling them about Good Luck 2. Jack caught William's eye, showed him the package, and nodded his head.\n\nWilliam smiled, nodded, and returned to listen to the speech.\n\nAs soon as Jack was in the secure area of the hangar, he took out his tools and began testing the package. His Fluoroscope showed that it was indeed a barometric device which was set to go off at 14,000 feet.\n\nUsing liquid nitrogen, he froze the assembly opened the package, and disarmed it.\n\nJack was packing his tools, when Lucius joined him.\n\n\"I missed all the fun Jack?\"\n\n\"This device was so simple, a baby could've taken care of it. It was the location they put it in that was exquisite. Someone with knowledge of the spacecraft told them about that weak point. There is just enough C4 here to cause a crack in the outer hull that would expand as they continue to gain altitude. By 25 or 30,000 feet the hull would've exploded and the ship would've disintegrated. Look for the inside man, and he will tell you who paid him to do it.\"\n\n\"You're taking all the fun out of my job, Jack. I don't have any detective work to do.\"\n\n\"Remember Lucius, you helped me get on board that spacecraft, I really wanted to get higher than 24,000 feet before my life ended.\"\n\n\"I'll take care of it Jack. While you're goofing off up there, I'll be taking care of business down here. That is a promise my friend, even though your dead, that's a promise.\"\n\n\"Do you think you could drop my daughter a line and see how she's doing? Remind her that I didn't want her sitting at home with cats.\"\n\n\"I'll do it Jack. She will have the letter by New Year's Eve.\"\n\n\"Thanks Lucius, I still am going to miss your phone calls.\"\n\n**********************\n\n\"How are you doing Adam? Are you getting any feeling in your fingertips yet?\"\n\n\"I don't know, lean closer so I can touch your flight suit.\"\n\nLaura must have missed the devil in my eye as she leaned closer to me. As soon as she was the correct distance, I reached up and grabbed her nipple, and squeezed tight.\n\nShe smacked my hand away.\n\n\"You pervert I should've known better.\"\n\n\"Why, I touched your flight suit.\"\n\n\"Yes, but my breast was underneath it.\"\n\n\"I didn't put any caveat on where I was going to touch your flight suit, did I?\"\n\n\"Have you been reading the dictionary?\"\n\n\"Yes, I'm trying to improve my vocabulary.\"\n\n\"May I ask why?\"\n\n\"Yes you can.\"\n\n\"Well, I'm waiting.\"\n\n\"What are you waiting for?\"\n\n\"I am waiting for you to tell me why you are trying to improve your vocabulary.\"\n\n\"Oh, you should have said that in the first place.\"\n\n\"I thought I did.\"\n\n\"No you didn't. You said, 'May I ask why?' I replied, 'Yes you may.' After that you never asked me why I was trying to improve my vocabulary.\"\n\n\"I am getting very close to explaining to you why I'm going to break your neck Adam.\"\n\n\"Is it a long explanation, or a short explanation, because I would really like to know?\"\n\nGeorge said, \"That's enough you two, it's time to get married.\"\n\n\"I want you to send me a picture of you in a suit George.\"\n\n\"Somehow I knew you were going to say that. Here, take this with you for luck.\"\n\nHe handed her a data stick, and she looked at him confused.\n\n\"What's this?\"\n\n\"You are the computer expert, you tell me.\"\n\n\"Married, you, me, priest. Let's go please.\"\n\n*****************\n\nTheir timing couldn't have been better. Dycke Schneider just finished his speech as they exited the spacecraft. Stephano immediately called them up to the Dias, along with their parents, siblings, and the priest, who would consecrate their marriage. The ceremony was scheduled to take 12 minutes, and it took 20 minutes because of the tears that flowed from the bride's eyes, while she took her vows. Adam went through his like a hot knife through butter. He looked into Laura's eyes, and told her everything that was in his heart. The effect was the same, Laura cried more. It took Adam a long time to put the ring on her finger because Laura was shaking so badly. At long last it was it was on, and everyone applauded. When he kissed her at the end of the ceremony he said to her that they were wed for life, and not one day shorter. Laura started crying again.\n\nAs everyone kissed the new couple and wish them well, the last person to kiss Laura was George.\n\n\"I am finally out of a job, and I could not be happier. You picked a wonderful man, he will keep you happy if you let him. Let yourself be happy also, because you deserve it.\"\n\n\"If you think you're rid of me, wait until Monday. You better have a suit on, or you are going to be in big trouble.\"\n\n\"Watch the data stick, and you will realize I am not trouble.\"\n\n**************************\n\nThe Honor Guard formed to the right of the hangar, and on cue, began marching towards the spacecraft. Two drummers led the way, as two captains carry the urns with the remains of President and Mrs. Clark Atwater. Behind them were 10 more members of the honor guard bearing arms.\n\nThey were met 50 feet in front of the spacecraft by General Dan Morgan, and Colonel Lucius Allen, in full uniform and Colonel Jack Daniels in his blue flight suit. Each of them wore white gloves.\n\nEveryone was standing as the transfer was made, and a 21 gun salute was sounded. As the honor guard retreated, General Morgan turned and led the Colonel's around the spacecraft, not into it. The people wondered what was going on, but the next speaker was at the platform and the festivities continued.\n\nColonel Daniels was ready with the x-ray machine along with the processor to see what was inside these urns. He took pictures from three angles, and put them in the developer. Moments later he had his answer. Inside each urn where the ashes of the loving couple. They all breathe a sigh of relief. The ashes were brought up the side entrance which was then sealed.\n\n*************************\n\nStephano saw Jennifer and I are leaving the spacecraft\n\nStephano Valentino announced to one and all, \"Ladies and gentlemen, Doctor Even Luck.\"\n\nI received many standing ovation during my career, but this one was special. I acknowledged their approbations, and asked them to return to their seats because I had some announcements I had to make before I could address them.\n\n\"All flight crews to your stations for preflight.\"\n\n\"All engineering crews to your stations.\"\n\n\"All personnel on board for initial headcount.\"\n\n\"Nuclear engine 5%, check for radiation leaks.\"\n\nMy crews started to move towards the spacecraft with great excitement, and big smiles on their faces. As they reached the top of the ramp, they turned and waved goodbye to their loved ones.\n\nLadies and gentlemen, I stand before you today as a scientist and engineer. I am not the magician that put this magnificent machine together. That would be Dycke Schneider, and Schneider industries. I am not the woman who invented the way to use negative and positive magnetism to push and pull this magnificent machine away from the earth and towards other planets at the same time at speeds unheard of by any government on this planet. That would be my daughter, Delicious Luck Thyme. I am not the young man who invented the nuclear fusion power plant, when he was 15 years old, and continues to amaze us all with his talents. That would be my son Gordon Oliver Stars Luck. I am not the man who left NASA, after working for years on the Orion project, and is in him responsible for 27 patents. That would be my son-in-law, Grayson Thyme. I didn't build the nuclear engine, or the sarcophagus it's held in, that was done by Babcock and Wilcox. I didn't make the tiny implants for the communications devices that are all over the ship, and all the handheld communications devices we use that keeps our ship as light as we are. Those were made by Mezner Industries. However, none of these things could have been done without our financiers, all 20 of them. Happily I can say, I am one of them. However, there one of our investors that the 19 others have seen fit to honor today, because he has outshone us all. He has worked tirelessly, since the inception of this project to make sure it was a success, and it has become a success far beyond anyone's imagination. William Zabo is a magician. By force of will alone, he makes tides turn, the sun move west to east, and the winds change. I have watched him do it time and time again. Nothing is impossible for this man. It is not a word in his vocabulary. It is just a job he has to work harder on to accomplish, and a little later today you will see that accomplishment soar into the heavens. Unlike governments, who stifle creativity, William allowed 250 phenomenal scientists to work towards an end, without supervision. There it is behind me. For more than seven years, the scientists, engineers, fabricators, and men/women on the assembly lines worked tirelessly towards one goal, to make that spaceship, and we have done it. Accidentally, while we were trying to build this wonderful spacecraft, our 250 scientists have received more than 900 scientific patents' that will make this world a better place to live in.",
        "One day many years ago, at the very start of this program, my daughter, Delicious Luck Thyme mumbled these words, and I cannot get them out of my mind: \"For those who shoulders we stand upon.\" I understand what she meant by those words. I understand what Doctor Warner von Braun meant when he said, \"We will never truly get into space, until we find a way not to use hydrogen and oxygen to blast our way into it.\"\n\nMy daughter solved that problem when she was 16 years old, and the government of the United States refuses to believe it's possible. We offered them the technology, and they refused it, saying it was not possible. Today we will prove them wrong. To date there have been six attempts, by various corporations in this country to destroy this spacecraft. The latest one was today, and we were lucky enough to find the explosive device one hour ago. I am not saying this to be dramatic, I am saying this to prove a point. There are too many companies in this country that are feeding at the government trough. The government is their lifeblood and if this continues the government will go bankrupt. Space is the future. Space is not a hole in your pocket that you put money in and lose. The initial budget for this project was $350 billion. We came in $47 billion under budget. We are taking 64 people into space, and we will never return, because we are pioneers. We have chosen not to come back. We know the chances we are taking, and we are taking them willingly. We will continuously send signals back to Earth that may not get here for thousand years, but one day you will hear from us, and be amazed at what we did so early in the search for Earth 2.\n\nThe government is spending $1 trillion to send four people to Mars and bring them home. Bravo. Four people, $1 trillion. It's going to take them months to get to Mars, they will stay for a week, hopefully, plant a flag, and then they will return, safely we hope. They will still be using hydrogen, and oxygen to blast them out of our atmosphere, in a brand new rocket, that is yet to be built, and the projected cost is $1 trillion. I can guess which way that number is going to go.\"\n\nAt 5 PM, we will lift off quietly, without disturbing the sand, or Texas grass. We will hover at 500 feet to check our instruments, retract our landing gear, and say goodbye. From that point on, we will transmit everything we do by radio and video. We will be out of the atmosphere in less than 2 minutes, and a few minutes later we will pass our moon. We will put our engines into high gear, and pass Mars in an hour later, at one quarter light speed. Our engines and our technology will help us gain speeds heretofore unheard of. When we reach Neptune, we have to be going at .999 light speed, or higher, our mission will be considered a failure. If we don't reach that speed, we will never be able to reach the next star system. We will return home after doing some science studies on the way. We also have other technical advancements that may allow us to pass light speed up to and including Warp 4. This is not a pipe dream, this is pure science. We hope to prove Einstein wrong, but to do it we have to be out there among Dark Matter, and Dark Energy. I could continue boring you with all these technical items for years but I only have 20 minutes so I'm going to stop here and start thanking the people that made our scientific, and manufacturing family's dreams come true. Again, William Zabo, without him this project would have failed miserably, when I got ill. His name was the only one I could think of who could bear the burden, and take the leadership that was necessary to move this project along. $30 billion of his own money went into starting this project, that's how much he believed in it. As soon as he joined in, with Stephano Valentino, Christian Chase, Dycke Schneider, Celeste Castronova, and myself, everyone else rushed to throw tremendous amounts of their fortunes in this venture. They are reaping the rewards far greater than the money they put in initially.\n\nWhile I continued to talk about the people who helped make everything possible...Hannah snuck up on the stage, behind me, in a nurse's uniform. She carried a huge syringe, a blood pressure cuff, and had a stethoscope around her neck.\n\nDuring a pause in my speech, as the audience was applauding, Hannah took my arm, and wrapped the blood pressure cuff around it. She placed the stethoscope in the crook, and increase the pressure. I looked at her in amazement, but not realizing what was going on. She took the cuff off and laid it down with the stethoscope.\n\nShe looked at me and said in the microphone, \"Doctor, your numbers are all over the place. It's time for you to go to sleep.\" She picked up this huge syringe, and I panicked. \n\nI yelled, \"No, get away from me\", and tried to escape from the stage. Everyone was hysterical, except me. I was white as a ghost. William was laughing so hard, I knew he had something to do with it. I was ready to kill him.\"\n\nHe yelled, \"That will teach you to embarrass me.\"\n\nHannah was laughing at my expense, and I couldn't blame her. I totally lost my composure, when she told me I had to go to sleep, because my numbers are all over the place, and she picked up this huge syringe. It brought back terrible memories, but memories that saved my life.\n\nWhen I regained my composure, I took Hannah by her hand, brought her to center stage, and introduced her.\n\n\"Ladies and gentlemen, I would like you to meet Hannah Miles. She, was one part of my terrible trio of nurses who are the reason I am still alive today. After my bout with pancreatic cancer, I had two choices: I could go to a facility where I could be looked after night and day, or I could go home, and have nurse's look after me night and day as long as I followed their instructions to the T. Hannah never yelled at me. She was as professional as any nurse you would ever meet. If I did something wrong she would wait until I was happy or comfortable, and then stick me with a pin 9 inches long. It was part of her knitting ensemble, and I never knew when it was coming. After a while, when Hannah was on duty, I became the best patient you have ever seen. I'm happy that she's here today, and wish she was coming with us, because she is a fantastic nurse.\"\n\nHannah replied, \"Doctor Luck, your wish has been granted. I am going with you. Mister Zabo and Mister Valentino having given me the opportunity of a lifetime. I have accepted it. It will give me a chance to take care of you for the rest of your natural life.\"\n\nI turned and looked at my two so-called friends who were having a hard time trying not to laugh at me.\n\n\"Hannah, since you're coming with us, you'd better get on board. Our agents will have to show you how your seat works, and strap you in for take-off. Welcome aboard.\"\n\n\"Thank you Doctor Luck, you have no idea how much I am looking forward to this.\"\n\n\"Yes I can, because this will be my first time too.\"\n\nHannah left the stage running towards the spacecraft. Jeff stopped her, and made her walk the rest of the way.\n\n\"They need you in one piece Hannah. They don't need you broken before mission starts.\"\n\n\"Okay, I'll just walk fast.\"\n\n\"Ladies and gentlemen, this is the last call for personnel leaving on the Good Luck 1. Fortunately for you, that means me also. It is almost 4 o'clock, and I must join the crew and begin the countdown to launch at 5 PM. As you can tell this is not like a NASA launch, where everybody has to wait for hours while they load the liquid hydrogen, and oxygen into the massive storage tanks that take the rocket into space. We have three engines, and they are all online already. You are less than 200 feet from the spacecraft, and you are all safe, because there will be no explosive take off. I wish you all along life, good health, and enough money to help launch the next 10 spacecraft's to teach private enterprise that space is not the new frontier. It is the next great way to make money. Goodbye all, my fellow passengers and I will never see you again, by choice.\"\n\nI received another standing ovation, as I walked around and said goodbye to all my friends and those who helped finance this wonderful spacecraft. When I reached Celeste I said to her, \"Do you see what you started all those years ago with your first investment in me. I don't know if there is ever a way I can thank you for giving me the chance to grow, and go this far.\"\n\n\"All I did was give you money, and I made money with you. We made tons of money together through the years, and my investment in you has been more than just money it has been friendship. I'm going to miss you Even. I am going to be poorer, because of you.\"\n\n\"No you won't, invest in Richard and Holden, and I guarantee you, you will make more money, then you have sports bras.\"\n\n\"Dammit Even, I get enough of that shit from Antonia. I don't need to take it from you.\"\n\n\"At least I didn't call them Michelin's.\"\n\n\"Phillip kill him.\"\n\n\"If I kill him, who is going to pilot the spacecraft?\"\n\n\"Teddy.\"\n\n\"Teddy isn't three years old yet, I think I will let Even do it for a while longer.\"\n\n\"I have to go folks, our spacecraft is waiting.\"\n\nI waved at everyone as I jogged off the stage towards the Good Luck 1. As soon as my feet hit the ground, Jeff stopped me.\n\n\"Doctor Luck, you made the rules. Do you want to recite this one to me?\"\n\n\"No, not really, I will walk to the spacecraft, I will not run.\"\n\n\"Good boy Doctor, however I think I will escort you the rest of the way, just to make sure you follow the rules, and don't break your neck.\"\n\n\"Did she come today Jeff?\"\n\n\"Yes she did, and so did I, almost.\"\n\n\"What did you get from her?\"\n\n\"I accidentally got both breasts, and they are real. There is nothing fake in there holding them up.\"\n\n\"That's wonderful to know Jeff. Now that you have fulfilled your life's dream, this is your last chance, would you like to come along with us to the stars?\"\n\n\"Doc, everyone knows I'm crazy, the only people crazier than I am are on board that ship. As soon as you enter that elevator, I can put you in that category also.\"\n\n\"People have been calling me crazy since I was 16 years old. I invented and patented the headsets everyone wears when I was 18, and became an instant multimillionaire. I'm still making money from those headsets, and people are still telling me I'm crazy. Don't worry about a thing Jeff, us crazy people, are the most talented in the world.\"\n\n\"Doctor Luck that is the finest thing anyone has ever said to me. Thank you very much, and I hope you find what you're looking for.\"\n\n\"Thank you Jeff, I hope for your sake you do too. Remember, you are now William Junior's close body support. Wherever he goes you are a shadow. Even Lucius Canyon said you are the best there is, and coming from him that is extremely high praise. I want you to go up on the stage and introduce yourself. \n\n\"I'll take great care of them doc, you can count on me.\"\n\n\"I know that Jeff that's why you got the assignment. Goodbye.\"\n\nI took the elevator to the second floor, removed my shoes, and put on the shoes made especially for the floors for when we were in space. I hit the button on the speaker, called for the final headcount. Monty was taking care of A through F of the manifest. As she went down the list checking each name off as she went along, she called out the name Janet Dover, and the young woman said 'here.' Monty checked off the name and went to the next one. All of a sudden her brain stopped working. It couldn't be. She called the name out again. Janet Dover. 'Still Here.'\n\nMonty walked towards the voice and when she reached the couch with the woman strapped into it her mouth opened, but no sound came out.\n\nJanet said, \"Cat got your tongue?\"\n\n\"You little bitch, you never said a word.\"\n\n\"You never asked.\"\n\n\"Is this why you disappeared for the last month?\"\n\n\"You never looked for me, I thought you didn't care.\"\n\n\"I am going to have so much fun on this ship. I have two people to kill now.\"\n\n\"Has Gordon told you he's been holding back when he fights you?\"\n\n\"He's been doing what and when he fights me?\"\n\n\"He doesn't want to hurt you, because you mean too much to him. He holds back, so we won't hurt you. We talked about it at length, when I made the decision to come along on this little ride.\"\n\n\"I'm going to take that little turd apart at the seams.\"\n\n\"I've seen him in action against Jeff's best people Monty. He is almost as good as Jeff, so I would be very careful if you decide to go all out against him.\"\n\n\"You're just saying this to worry me.\"\n\n\"He took me down in six seconds, and I never knew what hit me. He looked at Jeff and bowed because you told him not to fight him. It took everything he had in him to walk away.\"\n\n\"Six seconds?\"\n\n\"We bowed, stepped back, took our positions, and the Master said fight. The next thing I knew I was on the mat, facedown, with my left arm touching my head and his right hand holding my chin. He asked me did I submit, and I said hell yes. He was fast as lightning.\"\n\n\"He never shows that speed when he's on the mat with me.\"\n\n\"I told you he holds back when he is with you.\"\n\n\"I have work to do. I'll talk to you later, while I'm sitting on your head.\"\n\n\"Good luck doing that, I've been sparring with him, and I've gotten much better.\"\n\nMonty moved away and continued calling out names on her list until it was full. The three lists were compared, and it came up to 66 people, which was the correct complement.\n\nIt was now 4:30 PM, and I announced, \"Strap everyone in tight, bring nuclear engine up to 7% and test magnetic engines\n\nGordon replied, \"Nuclear engine now at 7%.\"\n\nDelicious announced, \"Magnetic engines are online, and running at 40%.\"\n\n\"Nuclear engine to 9%, and test the Ion/H2 engines.\"\n\nThe guests watched as the exterior doors opened and slid back into the spacecraft, as the Ion/H2 engines were moved into place. When everything was ready Delicious set off a five second burst of power through the engines, and the crowd was stunned. They couldn't believe these little engines were capable of taking the Good Luck 1 into space. They were happy when they saw the engines move back into the spacecraft and the doors close around them.\n\nAt 4:45 PM, I called out for everyone to do their final checks, seal the elevator shaft doors, and advise when they had green lights.\n\n\"Gordon nuclear engine to 10%.\"\n\n\"Nuclear engine to 10%.\"\n\n\"Delicious, magnetic engines to 700 MW.\"\n\n\"Magnetic engines to 700 MW.\"\n\nI turned to my wife, and pulled her towards me. \"I kissed her, and told her our twins were going to enjoy this ride.\"\n\nShe looked at me and asked, \"I hope they are, but am I?\"\n\n\"You started this, and now you worried?\"\n\n\"Can I help it if I'm horny all the time?\"\n\n\"I love it that you're horny all the time.\"\n\n\"Teddy, do you like your new seat?\"\n\n\"Yes, tall like yours.\"\n\n\"I had to make it tall, so you could see everything. Did you say hello to Callie today?\"\n\n\"No I forgot. Callie, I sorry, I not say hello.\"\n\n\"I know, very busy day for everyone. We will play later?\"\n\n\"Yes Callie, I like that.\"\n\n\"Doctor Luck, we have green lights on all exterior doors.\"\n\n\"Very well, disconnect all exterior connections.\"\n\n\"Lights indicate all exterior connections have been withdrawn, and the doors are closed.\"\n\n\"Very good. Jennifer open the outside speakers and tell them what's happening now. Is 4:47 PM, you have two minutes, take off will be on time.\"\n\n\"Ladies and gentlemen this is Jennifer Luck. Everything is proceeding smoothly, and lift off will be at 5 PM. This is what is happening now, and what will be happening in the several minutes. At 5 PM we will lift off, and climb to an altitude of 500 feet. At that time we will hover, bring in the landing gear, and do our final tests on the engines. Once that is completed, we will talk to you by radio link as we proceed on our flight plan on a southeasterly heading of 138\u00b0 and increasing our speed to more than 28,000 miles per hour until we pass through the Earth's atmosphere and into outer space. Our speed will increase dramatically, at that point. We will only be using our Magnetic Drive Engine during this time, and we will proceed towards the moon picking up speed exponentially. We will pass the moon in 9 minutes, and proceed towards Mars which is 140 million miles away. We will pass Mars in one hour at one quarter light speed. As we pass by Mars, we will attempt to fire a rocket containing a message back towards the earth. A message from the 'Curiosity' rover takes 13 minutes and 48 seconds to arrive at Stanford University. If this rocket works, as we hope it will, the message will reach Earth within one minute and twenty seconds. I am running out of time, we wish you all well. We are approaching one minute to lift off. When we approach 15 seconds, I will begin the countdown.\"\n\nTeddy said, \"Me do it?\"\n\nI said, \"Count backwards from 10 to 0 and you can do it.\"\n\n\"Easy. 10-9-8-7-6-5-4-3-2-1-0. Mommy teach me.\"\n\n\"You did very well little one. You can do it. You can tell everyone it's you.\"\n\n\"We have to be sure to take off on time are you ready?\"\n\n\"Jennifer announced that Teddy Thyme will be doing the final 10 second countdown.\"\n\nJennifer did as I asked and we waited\n\nAt 20 seconds I said to Gordon, \"Nuclear Engine to 45%.\"\n\n\"Aye Captain, nuclear engine to 45%.\n\n\"Delicious, magnetic engines to 1800 kW.\"\n\n\"Magnetic engines 1800 kW.\"\n\n\"Teddy tell everyone 15 seconds to go.\"\n\n\"Hello, 15 seconds to left off.\"\n\n\"Teddy, its lift off, not left off.\"\n\n\"Okay.\"\n\n\"Start Teddy.\"\n\n\"10 seconds to left off. 9-8-7-6-5-4-3-2-1-left off.\"\n\n\"Go Delicious.\"\n\nDelicious moved the switches that focused the energy away from Earth's core, and the Good Luck 1 lifted smoothly into the air, and hovered at 500 feet.\n\n\"All stations report.\"\n\nOne by one all of our stations reported everything was nominal, and we were ready to go. The landing gear retracted perfectly, and you could hear the thump as they locked into position.\n\nAll of our honored guests, friends, and the general public both in the NEST and lining the highway could see us, as we hovered. They cheered and applauded as they knew this was part of our flight plan.\n\nThe press was having a field day, applauding our accomplishment, and accusing the government of waist taxpayer money, because they we beholding to big business.\n\nJen open your communicator and say goodbye to everyone from the Good Luck 1. This is the last time you will see us.\"\n\n\"Ladies and gentlemen, this is Mrs. Jennifer Luck. We have green lights across the board, and are ready to go. For the last time we wish you well, and we hope our governments will watch us and learn that we are the future. \n\n<center>\"We The Space Pioneers Say Goodbye!\"</center>\n\n\"Gordon, nuclear engine 65 percent, Delicious, GET US OUT OF HERE.\"\n\n\"Your wish is my command dad.\"\n\nGray said, \"She never says that to me.\"\n\n\"Not now Gray, you have heard of burial at sea, you could be the first burial in space.\"\n\n\"Delicious, why are we still here?\"\n\n\"Oh, sorry about that dad, I forgot to hit the big blue button.\"\n\n\"I do it.\"\n\n\"No, not now Teddy.\"\n\n\"Hang on everyone, here we go.\"\n\nGray asked, \"Are you colorblind?\"\n\n\"Grayson!\"\n\nI yelled, \"HIT THE FUCKING BUTTON!\"\n\nShe did, and we were all on our backs, for the ride of our lives.\n\n<center>THE END</center>\n\n<center>Chapter 34</center>\n\n<center>There Must Be A Mistake</center>\n\n<center>By</center>\n\n<center>Prolonged_Debut10</center>\n\n\nNote: I guess I forgot to tell you that I was headed back to Houston for my last series. I will forward this home and have my son put it into my computer and submit it.\n\nThere was no way I could satisfy all of you with an appropriate ending. I had four great ones lined up, including both Captain Kirks, but each of them would have require at least 8 to 10 more chapters. I could not see myself doing it. ",
        "I know I left a lot of loose ends, and maybe sometime in the future, I will pick one of them up and starting a new novel. However, I would like to move on to something else, when I'm ready, but definitely, NOT NOW, I Have A Headache. \n\nThis novel took a lot out of me, and I thank you for sticking with me to the end. It was first published on May 18, 2014, and the Final chapter should be published by September 15, 2015. It simply means 16 months of my continuous researching, reading, and writing, between 40 and 60 hours per month, and your continuous reading, for just more than an hour for each publication, if you are an average reader (500-600wpm). Thank you. You have been subjected to 34 chapters of my prose, good or bad, with approximately 30,000 words per chapter. That's 10,200,000 words, give, or take, for the entire series. I wrote them, and even I feel sorry for you. \n\nA standard 480 page Tom Clancy novel only contains 7 million words so I feel honored that you stayed with me this long.\n\nI just want to thank you one more time, and then I am going to SHUT UP. If the Commons could see me now, they would think,\n\nBob/ Prolonged_Debut10 him "
    ],
    "authorname": "Prolonged_Debut10",
    "tags": [
        "science",
        "niece",
        "scientist"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/there-must-be-a-mistake-ch-34-1"
}