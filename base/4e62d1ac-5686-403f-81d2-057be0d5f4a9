{
    "title": "Martha's Second Chance",
    "pages": [
        "Martha's Second Chance\n\n\"Ricky, yo Ricky!\" the manager yelled over the kitchen noises, \"your Stratharn order is up.\"\n\n\"Thanks man,\" the kid with his hat on backward said, \"what's a straight arm order?\"\n\nThe manager laughed, \"Stratharn, it's a name. The lady gets the same thing for Thursday lunch every week. Been doing it for years. I'm busy so ask Mike how to deliver it. Best hurry ya got eight minutes to get there.\"\n\nRicky thought to himself this better not be some new guy prank or something. He had just started at Food City Delivery last week. He ran out the backdoor and put the plastic bag of food in the insulated box on the back of the scooter. He looked for the address on the delivery ticket and all it said was Stratharn. Terrific, now I do have to find Mike. Just then Mike came bursting out of Luigi's Italian with an order.\n\n\"Hey Mike, I got a Straighten order, where's it at?\"\n\nMike laughed and said, \"It's S-T-R-A-T-H-A-R-N, 201 Maple, big old pile on the corner. Go onto the front porch, put the food on the table there. In a wood box is your money. Ring the bell and leave.\"\n\nHe looked at his watch and said, \"Hustle up, you've got six minutes. She insists that we deliver on time.\"\n\nHe found the place with no problem. Jesus, Mike was right, the place was a huge old Victorian mansion. He grabbed the food and opened the wrought iron gate and ran up onto the wide porch. To the right of the door was an old kitchen table. He put the food on it and opened an ornate wooden box. He found a $20 inside, the meal was only $12, was the rest a tip? He shrugged and pocketed the money. The bell was exactly that, what looked like a giant key had to be turned which rang an actual bell in the house. He gave it a twist and went down the walk closing the gate behind him.\n\nHe got back to the alley and had to wait his turn for an order. It was kind of slick how it worked. There were three restaurants on Elm St. south of Main and two restaurants one block over on Oak St. south of Main. That meant that all five shared the same alley. The restaurants had formed a corporation, bought some scooters, put boxes on them and hired kids to deliver meals. They paid the kids minimum wage and a dollar a delivery.\n\nRicky thought he could make enough money to live on. Being a high school dropout he was used to low paying dead end jobs. He didn't really care anyway. He would only work someplace until one of his buddies found him and said they were going climbing in Washington or kayaking in Canada and he would throw everything he owned in his old truck and be gone.\n\nHe never worried about a place to stay. He was a good looking, tanned, fit twenty year old. He could always find a gal that would take him in until something better came along. That was the situation he was in now, he was staying at the apartment of the bartender he met his first night in town.\n\nRicky started at 11 am and worked until 2 pm. They only kept one guy on from 2-4 pm. Then all three worked 4-9 pm. Then one guy from 9-11 pm except on Friday when two people stayed. Ricky was the new guy so he never got the extra hours. That was fine with him, he got paid for eight hours and they let him take a scooter on the break to cruise the town so he wouldn't get lost on deliveries.\n\nGetting off at 9 pm was cool too, he would head over to the bar where his girl Cassie worked and get a half a load on for free. Then about 11 pm he would go to her place and crash until she got home at 2:30. She would wake him up and they would fuck like rabbits, get up, have something to eat and go back to bed. She would still be sleeping when he left at 10:30 or if she were awake she would swallow his load before letting him go to work. It was a great gig for him, the only time he saw her was in bed and at the bar. Free beer, free place to live, free food and best of all, free pussy from a kinky always horny thirty year old.\n\nThat was his routine for the next three weeks. He found he delivered at least four meals a week to the Stratharn place. He asked Mike and he said she had lunch and dinner delivered Monday to Saturday. Mike didn't know much about her, no one he knew had ever seen her. He only knew that much from taking orders sometimes.\n\nRicky asked Cassie about her at the bar that night. \"What do you want to know about that creepy old lady for?\" she asked, \"I remember I was a really little girl when her folks got killed in a car wreck. Family was real rich. That's about all I know.\"\n\nThe older guy sitting next to Ricky leaned over and said, \"I'm Darnell, her name is Martha. She was always a loner, that happens sometimes with an only child. Parents used to go on vacation with her most of the summer. Now she just sits in that old house all by herself. I think the last time anyone saw her outside was at her parent's funeral. That was twenty five years ago now.\"\n\n\"You mean to tell me in twenty five years she has never left that house? You have to go out to do shopping, or to the dentist, the doctor, a movie, something,\" Ricky asked incredulously.\n\nDarnell said, \"My son is a UPS driver and he delivers two or three packages every day to her. Dr. Mills the dentist goes with a hygienist twice a year to her house. Dr. Renner might go there too, but I never heard tell of it. Hairdresser goes over every month. She gets her groceries delivered twice a week.\"\n\n\"So no one else ever goes there, like friends or family?\"\n\n\"Oh no, Mrs. Howell cleans on Tuesday. Doesn't have any other family.\"\n\nThe man sitting on the other side of Darnell piped up, \"I had to deliver a new refrigerator and take the old one away. Never saw her but I can tell you nothing has been upgraded since her folks passed. That fridge I took out had to be forty five years old, it was Harvest Gold color.\"\n\n\"So how old is she then?\"\n\n\"Oh she's forty four, same age as me. We graduated high school together,\" Darnell told him.\n\n\"Shit,\" said Ricky, \"the way everyone talked I figured she was like eighty years old. She's my moms age is all. Seems a shame she should hide away like that. Or is she really ugly or gross?\"\n\nDarnell shook his head, \"Nope she was a very beautiful young woman. Never started a conversation but was always real pleasant to talk to if you started one. Never had anything bad to say about anybody. Just kept to herself is all.\"\n\n\"So she's never left that house, ever?\"\n\n\"She went to college for a year and a half, out east somewhere, I don't remember where. Was there when the accident happened. But no, since then never been outside,\" answered Darnell.\n\nRicky shook his head, bought Darnell a beer and said good night. He walked to the end of the bar and Cassie came over to kiss him and let him cop a feel and squeeze her ass.\n\nIt was lunch two days later when he got an order for Stratharn. He noticed the gate wasn't closed all the way and was on the porch before he saw the big dog looking at him. Ricky didn't know if the dog belonged there or not but he rather doubted it. What the hell was he supposed to do now? The way the dog was sniffing the air he was hungry. He couldn't just leave the food on the table. He didn't want to try to get the dog off the porch and out the gate just in case it belonged there or decided to turn on him.\n\nHe decided the only thing to do was ring the bell and wait for someone to answer. He was sure that it would be all right once he explained the situation. He approached the door keeping one eye on the dog and gave the bell ringer a twist. He took a step away from the door and tried to look as pleasant as he could. It was only a few seconds before he could see a shadow behind the curtained glass of the door. Whoever was there was having a very hard time getting the door open. It finally opened and an attractive slim middle aged woman in a house dress looked at the table first and seeing nothing there looked up and saw Ricky. She gasped and retreated into the house and hid behind the door.\n\n\"Don't be afraid ma'am. I'm here to deliver your food. There is a dog out here and I didn't want him to eat your hot beef sandwich,\" he smiled reassuringly at her.\n\n\"A dog?\" she exclaimed, \"what in the world would a dog be doing on my front porch?\"\n\n\"I don't know ma'am, I take it he's not yours then?\"\n\n\"Certainly not, don't be absurd, a dog for heaven's sake. Why would I have a dog?\"\n\n\"Well I'll hand you the food and then try to get the dog to come with me. I mean I'll try to get him out of your yard.\"\n\n\"Yes I suppose that would work. Come up to the door but don't come in.\"\n\n\"Here you go ma'am, I'm sorry for the trouble.\"\n\n\"No trouble at all, you showed enterprise and initiative young man. Thank you, don't forget your money in the box.\"\n\n\"No ma'am, I won't,\" he grabbed his money and called to the dog who came to him and walked out the gate with him. He could hear the woman rattling the door trying to close it.\n\nThe next evening he got her order. He had bought a small can of WD40 that morning and had it with him. He put the food on the table and used the lubricant on the door spraying it in the old skeleton key hole and around the knob. He gave the shaft of the bell ringer the same treatment. He turned the bell crank and it moved much smoother. He backed up and waited. This time she moved the door curtain and peaked out.\n\nHe mimed opening the door and she tried it. It opened easily and she looked amazed. He held up the can of WD40 and said, \"If you let me come in I will spray the lock from the inside and make it work even better.\"\n\nShe stood behind the door one blue eye staring at him but eventually moved back and held the door open. Ricky smiled and stepped in and used the lube on the door and hinges. He tried it several times and found it worked better each time.\n\n\"There you go ma'am, just like new.\"\n\n\"Thank you young man. Let me get you payment for that. How much do I owe you?\"\n\n\"Oh nothing at all. I didn't do it to get paid. I just saw what a hard time you had yesterday.\"\n\n\"Thank you. What is your name?\"\n\n\"It's Ricky ma'am.\"\n\n\"Well Richard I appreciate your thoughtfulness.\"\n\n\"I just go by Ricky ma'am.\"\n\n\"Well then Ricky, do you take yourself seriously?\"\n\nHe laughed and said, \"Not much about me to take seriously.\"\n\n\"I can assure you of one thing young man, people do not take the Rickys of this world seriously. The Richards of the world sound like serious, competent men, men who get things done, whom you can trust. You might want to think about that.\"\n\n\"No offense ma'am but people don't trust guys who didn't finish high school even if their name is King Richard.\"\n\n\"Think that through, if Richard the III had been called Ricky 3 would he have been king of England do you suppose.\"\n\nHe laughed and grinned saying, \"No ma'am I guess not.\"\n\n\"Please stop calling me ma'am. Either miss or ms. or better yet Martha.\"\n\n\"Yes Miss Martha.\"\n\n\"You are incorrigible Richard.\"\n\n\"That's what my old parole officer told me. Oh shi...shoot, I gotta go make another delivery. It was nice talking to you Martha.\"\n\n\"The pleasure was mine Richard and thank you again.\"\n\nThe next day he got Martha's lunch order. The cook that handed him the order said, \"You must be special, she asked for you by name. Wanted to make sure you did the delivery. She never done that before.\"\n\nRicky just shrugged and grabbed the food. When he got to her house she met him at the door.\n\n\"Thank you for coming Richard. I have a request to make of you. The bulb is out here in the hallway to the kitchen. I called my lawyer and he said he was going to send the handyman out to replace it.. That was three days ago and I have not seen him. I have a ladder here and a new bulb. I tried but my anxiety would not allow me to climb on the ladder.\"\n\n\"Sure Martha, no problem,\" he handed her the food and set up the ladder. He put the bulb in his shirt pocket and went up the three steps needed to reach the fixture. It was a two bulb setup and he asked her if she wanted both bulbs changed.\n\n\"Yes that would be best. I will get another bulb,\" she told him and disappeared.\n\nShe came back and handed him the second bulb. He screwed that in and told her to hit the switch. Both bulbs lit and he climbed down and asked her where the trash was holding the bulbs up.\n\n\"I'll take the bulbs if you would be so kind as to follow me with the ladder.\"\n\n\"Lead the way Martha.\" She led him to the large kitchen and on to a storageroom where he left the ladder.\n\n\"Thank you so much. I had forgotten that there were even two bulbs in that light fixture. I was trying to think and it's been probably five years since the first of them went dead.\"\n\n\"Who fixes things around here when they break or die?\"\n\n\"As I said I call my lawyer and he sends someone out.\"\n\n\"Isn't that damn expensive?\"\n\n\"I suppose it is costly but I have sufficient funds to meet those expenses.\"\n\n\"I heard you were rich. That was not something I should have said, I'm sorry Martha.\"\n\n\"After all these years do people still gossip about my family?\"\n\n\"Well you know how it is in a small town. Rich spinster with a tragic past all alone in a mansion. You have to admit, it makes a great story.\"\n\n\"You mean a bad Gothic romance novel I believe,\" she said smiling.\n\n\"I do enjoy talking with you Martha but I'm still on the clock.\"\n\n\"Please let me compensate you for your efforts Richard.\"\n\n\"No absolutely not. Besides I will get all my drinks free tonight when I tell all the drunks about being inside the mansion and seeing the lady herself.\"\n\nFrom the stricken look on her face he knew he had screwed up.\n\n\"Martha I'm sorry, I was making a bad joke. I would never say anything to anyone about this. This is between the two of us I swear.\"\n\n\"I truly hope I can trust you Richard. I believe I told you I suffer from anxiety and just thinking that someone would know anything about my life puts me in a panic.\"\n\n\"I have an aunt who has panic attacks. We never knew what would set her off, it just happened.\"\n\n\"Anxiety is waiting for the negatives,\" she said quietly.\n\n\"What about the positives?\" he asked her.\n\nShe have a little laugh, \"I'm positive I get anxious.\"\n\nHe sadly shook his head. \"Hey I'm off from 2 until 4 every day. Would you like to talk?\"\n\nShe brightened and said, \"That would be lovely Richard.\"\n\nAnd that became their routine. She would be his last delivery at two and he would bring a lunch for himself. On the fourth day it was very pleasant and he suggested they eat outside in the backyard gazebo. Just the thought of being outside started Martha hyperventilating. After calming down she explained her fear of being outside.\n\n\"It is called agoraphobia, it is an anxiety disorder that makes me fear and avoid places or situations that make me feel trapped, helpless or embarrassed. I fear being in open spaces or very enclosed ones, like a closet, being around people, on a plane, or train or the backseat of a car. I have a fear I cannot escape or call for help. I feel I am not safe and I am to afraid to ask for help.\"\n\n\"Jesus, no wonder you never leave the house. Are there any meds for it? How about a shrink?\"\n\n\"The available medications, in dosages that help, make me catatonic, I cannot function at all. I have seen two psychiatrists in the past but all they wanted to talk about was my childhood. I tried to explain that I knew exactly the situation that caused my anxiety but they said it had to be a 'more deeply rooted psychosis' and I gave them up as self serving cretins.\"\n\n\"So what happened that set you off?\"\n\n\"I was away at college when I received a telephone call from the Bluffs County Sheriff. He said my parents were both dead and I needed to return as quickly as possible. I flew home that day and was told I had to identify the bodies. I was led to a very small dark room and left there alone. I could just make out there was a glass wall in front of me and a room on the other side. Suddenly bright lights came on and lying two feet away were the naked, bloody, mangled bodies of my parents. I remember screaming then awoke in the hospital with a bandage on my head. I had passed out and hit my head on the frame of the glass.\"\n\n\"Oh for god's sake, and neither of the two shrinks thought that was important? Fu- freaking morons.\"\n\n\"Well I was not that concerned at the time but then three days later at the burial the sky just seemed to get larger and larger. Then I became embarrassed because all of these people had to interrupt their lives to be there and I had my first ever panic attack. I couldn't breathe, stand or talk. I was told later I nearly fell into my mothers grave when I passed out. I spent two days with lawyers and went back to college. I lasted only two weeks before I had another panic attack walking across the green. I came home and tried but every time I went outside I had an attack. Now I don't even try.\"\n\n\"Look Martha that was twenty five years ago. They have made a lot of progress in mental health stuff in that time.\"\n\n\"Yes they have, they no longer use elecroshock therapy nor do they perform as many lobotomy's,\" she joked. Then added more seriously, \"I do research my condition on the internet, the most effective treatment seems to be confronting one's fears.\"\n\n\"What, like take a step outside then the next day take two steps? I think you would need some heavier motivation than that for it to work.\"\n\n\"My thoughts exactly Richard, you have any ideas?\"\n\n\"For me it would have to be like a hot girl naked in the gazebo. How about you? A hot guy that wants you, is waiting for you out there, that work?\" he teased her.\n\nShe laughed and he liked the sound of it. \"It has been far too long a time since a man tempted me into going anywhere.\"\n\n\"I think it's a damn shame you can't get out. You are far too young and beautiful to not be able to enjoy a man or a relationship or sex.\"\n\n\"Oh Richard, it has been twenty five years since I had a man. If you could call it that.\"\n\n\"What do you mean, you either did it or you didn't?\"\n\n\"We were two eighteen year old virgins fumbling around in the back seat of an Oldsmobile Cutlass in the alley behind this house. We only did it twice. The first time he ejaculated on the first stroke. The second time on the third,\" she laughed and sadly shook her head.\n\n\"My god that's terrible,\" Ricky said trying not to laugh but finally losing it.\n\n\"I know, it's pathetic isn't it. He was a really good kisser though. At least he was the best of the three boys that have kissed me.\"\n\n\"It is a tragedy that those lush full lips have not been kissed in all that time,\" he said smoothly. He moved closer to where she was standing and brought his lips to hers.\n\nShe did not react as he had hoped. She let out a shriek and pushed him away.\n\n\"Oh Martha, I'm sorry please forgive me,\" he begged.\n\n\"No no I'm sorry. You took me by surprise and got too close to me too quickly,\" she explained, \"Wait a moment Richard and let me calm down.\"\n\nHe stood trying to look encouraging and safe, not a threat.\n\nShe finally smiled and said, \"I understand that a kiss is sometimes a spontaneous thing, a thing of the moment. To someone with anxiety it seems more like an invasion I'm afraid. Now that I know your intentions I would like a kiss I think. I wonder at your motives however, why would a young man like yourself be interested in an old lady like me? Is it my money, or pity or natural desire for any available female?\"\n\n\"Martha do I seem like the kind of guy that cares about money? And you don't need my pity. I have been accused of being constantly horny true enough. No I want to kiss you. I think you are an intelligent, witty, charming absolutely gorgeous female. I get excited thinking about all the things I could teach someone like you. I turns me on to think I would be teaching someone older than me about sex or anything else.\"\n\n\"And what else do you think you could teach me?\" she sounded amused.",
        "\"Well I'm nor sure exactly how yet but I am going to use sex to get you outside this house and outside your brain and we are going to find out what you are really afraid of.\"\n\n\"I told you, I saw my parents like that and I became afraid.\"\n\n\"Afraid of what? Afraid of dying? Of ending up like them? Don't be, it's just all dark after you croak. Afraid of losing someone? You don't have anyone to lose. We will lick this thing together. You don't like feeling alone or scared, I'm here for you. You feel like you aren't in control, tell me what to do, what you want, command me.\"\n\n\"I think you are more unbalanced that I am Richard. It is not that simple, that easy.\"\n\n\"Who said it was simple or easy, it's gonna be hard. I'm telling you in advance I ain't quitting. I'm not book smart but I am street smart. Maybe that's the kind of smart that's going to work with you.\"\n\n\"And how are you going to go about this transformation?\"\n\nHe had not a clue in the world how to start. Then it hit him. \"I am going to come into your space. I am going to kiss you. I want you to close your eyes and just concentrate on the kiss. I am going to french kiss you. Put my tongue in your mouth, suck on your tongue, bite your lip maybe. I am going to put my arms around you, touch your body but not your private parts, just to guide you. You can't say no, your therapy session has started. Dr. Ricky is on the case.\"\n\nShe giggled nervously but nodded her head. She kept her eyes open and he got close enough to put his hands on her upper arms. It felt very strange to her, almost a forgotten thing. He smiled encouragingly and she relaxed a little. His lips came closer to hers and she closed her eyes. She wasn't sure if it was anticipation of the kiss or to shut out the fact he was there so close.\n\nThen his lips touched hers and oh it felt nice. Then he tilted his head and hers went the opposite way making it even nicer. He varied the pressure on her lips and started opening and closing his jaw. She had always thought her only lover had known how to kiss. She knew now he was as inept at that as he had been at love making. Then another thought came, was Richard as good at making love as he was at kissing? Was there a correlation between them? Then she felt his lips part and his tongue was on her lips gently demanding to be allowed into her. She moaned and parted her lips. He was almost hesitant with his probing. Then her tongue went out to meet his and found a willing playmate. Their tongues met and danced, explored, discovered new places and emotions.\n\nThen one of his arms encircled her waist drawing her even closer to him. She could feel the heat of his chest and imagined she could hear his heartbeat. His other hand came up and caressed her blond hair and moved to the back of her head and drew their lips even closer. Another thing she could feel was his erection poking into her. That sent butterflies floating in her insides. But for once it was a good feeling.\n\nHe leaned into her and she felt her feet slowly moving backward, they continued until her back met the screen door that led onto the back porch. His hand briefly left her back to unlatch the door. It returned and started caressing her back. That felt nearly as good as his kisses. Then her feet were moving again, she didn't know where they were taking her. Her skin was heating up, she felt much warmer than before.\n\nHe removed his lips and softly said, \"Keep your eyes closed but use all your senses to feel everything around you.\"\n\nHis lips returned to hers and his tongue to gently fighting with hers. It was a battle neither could win or lose. She felt his arms, his chest, his penis all touching her. She felt alive, aware of him and a slight breeze on her skin, the heat of the sun. He gently tuned her then and after a bit she heard the screen door open and close. He pulled his lips from hers and then gave her three or four pecks and smiled down at her.\n\n\"So how was that?\" he asked.\n\n\"Wonderful, amazing, relaxing, erotic and confusing at once. Did we go onto the porch?\"\n\n\"Yes we did, we stood in the sunlight and felt it caressing us, warming us, smiling down on us. I know you didn't really know you were out there but the sun told me he has missed you.\"\n\n\"Well that was one way to get me outside without me screaming but that's not going to work forever.\"\n\n\"Probably not but I'll think of something else for tomorrow. Right now it's almost four, back to the grind. I'll bring supper when you order, see you then.\"\n\nWhen he showed up with her supper she invited him in. \"I can only stay a minute we're busy as he- heck tonight.\"\n\n\"This won't take long Richard,\" she said pulling him to her and kissing him. Her tongue worked its way into his mouth and her arms came up around his neck.\n\nHis arms came up to her waist and pulled her closer. She felt his erection growing as she rubbed her stomach against it. They enjoyed their explorations but all too soon Ricky pulled away saying, \"Holy smoke that was some kiss Martha, I gotta go.\" He leaned in for one more quick kiss and was gone.\n\nHe didn't go to Cassie's bar after work. Instead he went with Mike and one of the cooks from the Burger Barn. They shot some pool and talked and had a few beers. He found out Mike's last name was Carter. He was at Cassie's and in bed by eleven.\n\nHe woke from a dream about Martha and found Cassie sucking his cock. As soon as he was hard she turned and got on all fours. She had already greased her ass and he slipped in and gave her two orgasms before she went ass to mouth and swallowed his load. It was a great way to wake up but the entire time he had been thinking about Martha kissing him. Cassie woke up still horny and he fucked her doggy again but this time in her pussy. Cassie was feeling kinky and had him come in her pussy. As soon as he pulled out she stuffed a silicone dildo inside to hold his load in her. She said she was going to go back to sleep and when she woke up she wanted to pull the dildo out and suck their funky juices off it.\n\nHe made nine delivery's before two his last being Martha's. He rang the bell and she answered the door in pink yoga pants and a baby blue Lycra sports bra. He could see her large nipples poking through the top. She was smiling and laughing at the look on his face. She led him into the kitchen and set the food down. He went to the fridge and took out two waters. When he turned back she had moved into the sunlight coming through the window. The light rendered the thin yoga pants transparent, it was obvious she was not wearing panties and that she had a small patch of brown hair. It also made her cameltoe very apparent.\n\n\"To what do I owe the honor of seeing you dressed like this,\" he asked her.\n\n\"I exercise to a DVD for one hour every morning. I have made the dining room into my home gymnasium. In the afternoon I follow along with a yoga program on public television. Today I slept in and had a hard time motivating myself. After yesterday I thought you might enjoy seeing more of what I really look like.\"\n\n\"You have a fantastic body. Any twenty year old would kill for a body like that. I'm glad you don't go outside, any guys that saw you would be beating down your door.\"\n\n\"That is why I wear long dresses with sweaters most of the time. I would be embarrassed to have men, or women, looking at me at all.\"\n\n\"Well I think you are beautiful, turn around for me,\" he asked.\n\nShe turned and showed him her ass. It was round and had cheeks that had that shelf you could cup. She completed her turn then raised an eyebrow as if to ask, well?\n\n\"The view from the rear is just as nice as the view from the front,\" he assured her.\n\n\"Yes but you can only kiss the front,\" she said smiling.\n\n\"Oh no, no you are wrong about that. I could spend hours kissing that butt of yours.\"\n\n\"My goodness really? You would find that appealing?\"\n\n\"Martha you have a world class fine ass. I could spend hours worshiping that work of art.\"\n\n\"How exactly do you worship someone's posterior?\" she asked curiously.\n\n\"You caress it with your hands, you kiss it all over, you lick it, you part the cheeks and do the same to the groove, you spank it, you can whip it and then rub the pain away. There are many ways to play with a fine ass.\"\n\n\"Spank it and whip it? You mean actually hurt someone, leave marks?\" she asked incredulously.\n\n\"Oh sure, if both people are into it pain can be a great form of pleasure. I'm sure you have heard that the line between pleasure and pain is very thin.\"\n\n\"I will have to ponder that. And what about you Richard? How do you feel about pain and pleasure?\"\n\nHe suddenly had an insight into helping Martha. He looked at the floor and said, \"I would enjoy it very much if you would punish me Mistress Martha.\"\n\nShe looked at him curiously and said, \"Punish you how Richard? Have you been a little bad or have you been wicked?\"\n\n\"I have been very wicked Mistress, I deserve to be whipped, especially by someone as powerful and dominant as you. I would enjoy being at your mercy and groveling at your feet,\" he said humbly.\n\nMartha wasn't sure what came over her. She was excited at the thought of spanking or whipping Richard. She was really confused by the tingle she felt in her vagina of all places. She rarely masturbated but she was feeling the same way she did right before she had an orgasm.\n\nShe didn't understand it but she told him, \"Get on your knees Ricky, that's right Ricky, bad little boys are not called Richard.\" With no hesitation he dropped to his knees, looking at the floor, and waiting. She moved to stand very close to him. She reached down and took hold of his ears and pulled his head forward until it touched the crotch of her yoga pants. She held him there and rubbed her vagina over his head. He raised his head enough that the bridge of his nose was rubbing her clitoris. She stood on her tiptoes holding him against her vagina, then he slowly started moving his head from side to side causing his nose to rub across her clitoris.\n\nShe gasped and changed her grip from his ears to the back of his head. She began moving her hips up and down while he continued to rub sideways. It felt so wonderful, she was going to have an orgasm, it was going to be huge. What really put her over the edge was the realization that it would be her first orgasm with another person. She threw her head back and howled. She lived alone so was always as vocal as she wanted to be. This was the only time she had worried about her neighbors hearing her. My god, she thought how wonderful to be so wild, so abandoned, so, so primal.\n\nShe suddenly realized she was not standing any longer. She was on her knees and dear sweet Richard was holding her and smiling.\n\nShe started laughing and shaking her head.\n\nRichard asked.\"What, why are you laughing, are you OK?\"\n\nStill laughing she tried to explain, \"Since that first day I saw you I had hoped you would make love to me and give me an orgasm. I envisioned you you sweeping me off my feet and carrying me to my boudoir and ravishing me with your lovely penis. Instead I get your nose in the kitchen.\"\n\nHe broke up laughing and kissed her. He helped her to her feet and kissed her again saying, \"I have to get to work, I'll be late. We didn't even get to eat our lunch, well I didn't get to anyway. See you at supper.\"\n\nWhen he got back to the alley Mike told him one of the guys was sick and asked if he could work until eleven. They were unusually busy and all Richard had time for with Martha that evening was a quick kiss. He didn't get to Cassie's until nearly midnight. He was so tired when she got home he let her climb on top and bounce herself up and down until she came. For perhaps the first time in his life he felt like he was cheating. Not on Cassie but on Martha.\n\nHe was up early the next morning and left before he had to deal with Cassie. He drove out past the mall and pulled into the adult toy store. A cute chubby brunette helped him with his purchases and asked him if he wanted her to help break them in. He said if he needed help he knew where to find her.\n\nWhen he arrived at two she let him in and he found her wearing a yellow sundress. It showed off her pale skin to good advantage. He told her she looked very summery. She gave him a twirl showing the back as well. He set their food on the table then sank down to his knees and looking down offered her the package from the adult store.\n\nCurious she put it on the table and opened the flaps. He heard her sharp intake of breath. The two pair of handcuffs clunked onto the hard surface. Then a soft oh my on finding the next item.\n\nShe didn't hesitate and asked him, \"Why do you still have your shirt on Ricky?\"\n\n\"I'm sorry Mistress Martha,\" he replied as he pulled his T shirt over his head.\n\n\"If you don't want your punishment to be severe you may want to start anticipating my desires,\" she said sternly.\n\n\"Yes mistress, your slave hears and obeys,\" he said contritely.\n\n\"Slave, yes of course, my slave to do with as I like correct?\" He could hear the excitement in her voice.\n\n\"Yes Martha,\" he said, omitting mistress on purpose.\n\nThe flogger hit his back even before she shouted, \"What did you call me?\"\n\n\"Mistress, I'm sorry Mistress Martha, please correct my mistake.\"\n\nThe first blow landed as she demanded, \"Count them slave Ricky.\"\n\nWhen he reached ten she stopped and groaned loudly. The whip fell from her hand and she found the nearby chair and almost fell into it. He could hear her panting but did not move from his position. Concerned he asked, \"Mistress are you all right?\"\n\n\"I- I reached orgasm. Every stroke excited me more and when you said ten I came. I- I never touched myself, it was amazing.\"\n\nShe slowly rose and stepped over in front of him. \"I had planned on forcing you to your knees like this and making you service me. I find I am still excited and want more so you are going to pleasure me as I intended.\"\n\nWith that she grasped the hem of her dress and slowly pulled it up until she revealed her pantyless crotch. She had a sparse untrimmed light brown bush. Her lips were not very prominent but he could see they were glistening with her come. The aroma was intoxicating, a combination of expensive lavender soap and aroused woman.\n\nHe leaned forward with his nose touching her pubic hair and very audibly inhaled. This produced a moan from Martha. \"Mistress Martha may I use my hands as well as my mouth on you?\"\n\n\"No, in fact don't move,\" she told him. She lowered her dress and disappeared behind him. He heard her pick up a pair of the handcuffs, she leaned down and after a bit of fumbling with the unfamiliar implements had him cuffed.\n\nShe moved around and raised her dress. She moved closer until she felt his breath on her mound. She draped her dress over his head and said, \"Get busy Ricky, make your mistress happy.\"\n\nShe gasped when his tongue split her labia. She grabbed his head through her dress and started grinding into his face. It only took a couple of minutes to get her to come. The scream she let out left no doubt. She tried to back away from his tongue but he knee walked after her until he had backed her into the kitchen counter. He licked and nibbled and used his nose to stimulate her and soon had her screaming to her third orgasm. She slowly slid down the cabinets on rubber legs until she hit the floor.\n\nShe tried to hug him but her arms were as weak as her legs. She leaned her head onto his shoulder and tried to get her breath under control. She finally pulled away and then laughed, \"My god I drooled all over you. What the devil is wrong with me. Let me help you up, your knees must be sore.\"\n\nShe got him up and sitting in a chair. She found the keys and got the cuffs off with no problems. She pulled up a chair facing him and put her legs between his and held his hands.\n\n\"Are you all right? Rest a minute and I will look at your back,\" she said. She looked at each of his wrists so see if the cuffs had left marks.\n\n\"I am just fine,\" he assured her, \"You didn't hit me very hard at all, it actually felt kind of good. Like birch branches in a sauna if you have ever experienced that. My god Martha, I am so proud of you.\"\n\nShe blushed and said, \"I don't know where half of that came from. The only thing I was sure of was wanting to surprise you by not wearing underpants. And getting you to orally please me. I hope I don't put you off when I scream like that. I found years ago that it makes the orgasm more intense when I call out. Anyway let me look at your back.\"\n\nShe moved behind him and ran her hands over his smooth skin. \"No marks, it does feel a little warm however. We have time, let's eat our lunch shall we?\"\n\nFor the first time she asked him about where he was staying. Ricky wasn't sure how she was going to take it but he refused to lie to this woman. He told the story as they ate their lunch. When he finished he waited anxiously for her to say something.\n\nShe finally said, \"Do you have any true feelings for this Cassie?\"\n\n\"No not really. She is the kind of woman I seem to end up with. They are just trying to get by the best they know how, like me.\"\n\n\"Well do you feel it is fair to her to be here doing these things with me?\"\n\n\"The question I have is do you find it fair that I go home at night and fuck her- don't look at me that way, it is just fucking with her, what we do is special. Is that fair to you?\"\n\n\"You are taking advantage of her good nature. You are living there free, you eat her food, she gives you alcohol. Your behavior away from me is none of my concern. I know what you are trying to do for me. It is very generous and kind of you. I see how you treat me and how you treat Cassie and the contrast is astounding.\"\n\n\"So if I were a stand-up guy I would find a new place to live is what you're saying?\"\n\n\"That is entirely up to you Richard.\"\n\nHe stood up and shook his head, \"Every time I leave here I have more things to think about.\"\n\nShe got up and walked with him to the door. \"I probably have more questions and things to think about after you leave than you do. See you this evening, now kiss me.\"\n\nHe did think about it all afternoon. That evening he asked Mike if he knew of a place to rent. Mike smiled and said, \"Cassie getting to you? She does that to everybody eventually. I probably lasted longer than anyone.\"\n\n\"You used to date Cassie?\" Ricky said in surprise.\n\n\"Date hell, she was my first wife. Lasted almost a year. My wife and i have a room at our house that we rent out. Your own room and bathroom and share everything else. It's not up to me though. Follow me home and meet my wife, she decides. I think you're a shoo in if she knows you are escaping Cassie.\"\n\n\"That sounds sweet, how much is rent?\"\n\n\"That also depends on how much my wife likes you,\" he said grinning.\n\nMike's wife Debbie was a large friendly woman that nearly crushed his hand shaking it. Mike told her he wanted to look at the room and she led him down the hall. It was a nice room, completely furnished and spotlessly clean. She showed him the laundry and told him it was a dollar a load and pointed to a coffee can on the shelf.\n\nThey went back upstairs and Ricky asked how much. She opened her mouth but before she could say anything Mike told her where he was staying now. She smiled at both of them and told him $300 a month.\n\nHe held out his hand for another bone crushing handshake and told her he would drop his stuff by tomorrow night while Cassie was at work.\n\n\"And don't tell her where you are moving to. I don't want to have to kick her ass again,\" Debbie advised him.\n\nHe went to Cassie's and packed all his things and loaded them in his truck then waited for her to come home. She came banging into the house after closing the bar with fire in her eye. Uh oh he thought, how did she find out he was leaving already? That was not what had her going however.",
        "\"So is it true you are fucking that crazy old lady?\" she screamed.\n\n\"If you mean Martha Stratharn then no, I am not fucking her.\"\n\n\"Dennis Parker says he sees your work scooter there all afternoon every day. Explain that asshole.\"\n\n\"I deliver her food every day. Sometimes she invites me in to talk,\" he said calmly.\n\n\"What the hell would that crazy old bitch have to talk about. She's afraid to go outside, what would she know.\"\n\n\"She likes to read and watch programming other than a reality show. She's pretty smart.\"\n\n\"God damn dried up old cunt. You just better stay the fuck away from her if you want any more pussy from me.\"\n\n\"I had hoped to break it to you gently but I will not stand here and listen to you badmouth Martha Stratharn. Goodbye Cassie, I wish you well. Thank you for your hospitality.\"\n\n\"You're fucking leaving me? Oh no motherfucker, ain't no way you are just walking out that door, you owe me. You owe me money and a round of breakup sex.\"\n\n\"How much do I owe you Cassie? In money, there is not going to be any sex involved,\" he said reasonably.\n\n\"You been here mooching off me for two months,\" she held out her hand and said, \"I want $1000 or I'm gonna call the cops. And you damn sure are going to fuck me. Your cock fills my ass just right and I want your nut in my ass, right after I get my money.\"\n\n\"There is $1200 on the counter. Use the extra $200 to pay someone to fuck your ass. Goodbye Cassie.\"\n\nShe stood there stunned then leaped in front of the door. \"I ain't letting you take any of your things until you fuck me,\" she said smugly.\n\n\"Look around, my stuff is already in my truck. Please move away from the door.\"\n\nJust as she started to reply there was a knock at the door. Cassie swung around and yanked the door open. A Sheriff's deputy was standing there. He didn't say a word he just crooked his finger at Ricky and then stood aside. When Ricky got into the hall the deputy gently closed the door in Cassie's astonished face. The deputy smiled and led the way out of the building.\n\nMike was leaning against Ricky's truck and grinning. He introduced Ricky to the deputy saying they were old friends. Mike and Ricky thanked him and he tipped his hat and walked to his patrol car. Ricky realized he had never spoken a word.\n\n\"Debbie and I figured this wouldn't go well so I set this up. Let's get you home and settled in buddy.\"\n\nThat afternoon when Ricky told Martha about last evening, but without the sex drama part, she seemed very pleased that he had done the right thing.\n\nShe asked, \"That means your evenings are free now correct? I mean you don't have a curfew or a bed check do you?\"\n\nHe laughed and said, \"No but I'm not sure how I would answer their questions if, oh I don't know, I got in very late or maybe didn't come home at all. How would you feel if I told them the truth?\"\n\n\"I never thought of that. Are they trustworthy people? I wouldn't want our relationship to be common knowledge. Not that I am ashamed of you but people are so petty and vicious.\"\n\n\"Well your nosy neighbor Dennis Parker was the one who told Cassie we were spending time together.\"\n\n\"I will give you a key to the gate in the alley. You can park back there. Better yet I will give you a key to the garage and you can park inside.\"\n\n\"That would take care of that. I think we can trust Mike and Debbie Carter too. Why don't you give me the keys I need and let me check things out.\"\n\nThe gate was a match to the one in front of the house. The lock was stiff and he would have to use his trusty can of WD40 on it. The garage was actually the old carriage house back in the day. There were four stalls that opened onto the alley. He went to the side to use the man door and saw a set of stairs leading to the area above the garage. Out of curiosity he climbed them and looked through he grubby window. There was a hallway that ran all the way to the other end of the building. There was a kitchen with a large table and eight chairs. He could see closed doors down both sides of the hall. Servants quarters, that's what it was.\n\nHe went down the stairs and unlocked the side door of the garage. It was dark and he fumbled around for a bit before finding the light switches. Two banks of bright lights came on nearly blinding him. His eyes adjusted and he let out a low whistle. Three of the stalls were occupied and three other cars were under tarps sideways against the back wall.\n\nThe first car was a gull-wing 1954 Mercedes 300 SL Coupe. My god he thought, they only made like 1400 of them. He heard about them selling for a million dollars. One of the cars was recognizable even under the tarp, a 1970 Dodge Daytona with the high spoiler a 440 and a six pack. Not hugely expensive but still $100,000. Next to the Mercedes was a Rolls Royce Phantom III 4 door Cabriolet. He wasn't sure of the year but it was half a million at least. At the end of the row was a 1995 Porsche 993. There was a thick layer of dust on everything. It was obvious no one had been in the garage for years. He didn't want to keep Martha waiting and went through the yard to the back door.\n\nShe greeted him with a smile and an iced tea. She asked him if the garage would do to park his truck in. He looked at her and said, \"You do know that there are at least two million dollars worth of cars out there.\"\n\n\"Yes I'm sure, daddy's precious Mercedes and Rolls. The 993 is mine, my going away to college car. A week after they bought it we learned that freshmen were not allowed vehicles on campus. I think I drove it three times. It has maybe 500 miles on it.\"\n\n\"What are you keeping them for?\"\n\n\"Why not? They are not hurting anything by sitting there.\"\n\n\"How about because two million is a lot of money?\"\n\n\"Oh but it's not, not really,\" she replied nonchalantly.\n\n\"Martha I'm not prying and if you don't want to tell me then don't. How much are you worth?\"\n\n\"I get statements from the trust manager but I don't really pay attention, I suppose it is in the vicinity of 250 million.\"\n\n\"That is, wow, a lot of money. Martha with that amount of money why haven't you sought help for your condition?\"\n\n\"I suppose it is because of my first two failed attempts at treatment. By the time I had given up on them I found I was comfortable being by myself in this house. Back then there was mail order from catalogs. The local grocer has always been kind enough to deliver my phone orders. Since the internet became so huge and with so many options I am even more content to be inside.\"\n\n\"But haven't you ever wanted to travel? See the pyramids, Taj Mahal, the Eiffel tower, anywhere.\"\n\n\"I have actually seen all of them in person. Every summer my father took us on a one or two month excursion to somewhere. I have memories of more than fifteen worldwide trips. With the latest VR gear I have been to hundreds of places.\"\n\n\"But don't you want to see them in person? Touch them, taste the food, breath the air.\"\n\n\"Feel crowds of people, open spaces, narrow alleys, pollution, noise? Thank you but no, even the VR has come close to giving me a panic attack.\"\n\n\"How about a walk through this neighborhood on a quiet fall evening, leaves crunching underfoot, distant sounds of children playing, the smell of a wood fire.\"\n\n\"That does sound lovely, but what happens when I meet a group of say six people and they crowd around me and want to talk. What about witnessing an accident or seeing a crime. What happens to the calm then? Anxiety is waiting for the negatives. I can envision a hundred negatives that could happen on a quiet evening stroll.\"\n\n\"How about you envision me carrying you to your bedroom to ravish you tonight?\" he said moving in for a goodbye kiss.\n\n\"That sounds really lovely.\"\n\n\"I saw a huge grill in the garage. How about I pick up some steaks and charcoal and I'll cook us some good red meat to give us strength for later?\"\n\n\"Oh Richard that would be divine. It's been twenty five years since I've eaten a steak fresh off the grill, I find my mouth is watering. I have potatoes we can bake and salad fixings. Do we need anything else?\"\n\n\"You like corn on the cob? Nothing better than corn caramelized on the grill.\"\n\n\"That sounds delicious but let us save that for another time. If I ate all that you won't be carry me up the stairs.\"\n\n\"OK then next time, although,\" he laughed \"we seem to have a good time on the kitchen floor.\"\n\n\"Kiss me and leave you barbarian,\" she said smiling.\n\nThe old grill weighed a ton and Ricky nearly gave himself a hernia getting it up on the back porch. He wanted her to see and talk to him while he grilled. Someone had thoroughly cleaned the grill before it was stored away. He had picked up a set of grill tools, lighter fluid and charcoal at Walmart. All he had to do was go over the grates with a brush and oil them before putting the meat on. He had asked at the restaurants about who had the best meat and they all said Wrazkowski's. He had picked out a couple of Porterhouse steaks that weighed two pounds a piece.\n\nHe got the charcoal going and while waiting asked Martha if he could make the potatoes. She agreed and watched as he sliced two large potatoes very thin. Then he sliced an onion and cut each slice in small chunks. He asked her where her aluminum foil was and pulled off two pieces from the roll. He put the spuds and the onions on a piece of foil, added butter and salt and pepper. He folded the foil around the potatoes and put them upside down on the other sheet of foil. He folded that around the first package and went to check the grill. He spread the coals out and put the potatoes to one side and lowered the lid.\n\n\"We'll give them half an hour then flip them over and put on the steaks. How do you like yours?\" he asked.\n\n\"Medium if you can. I have never seen anyone make potatoes on the grill that way, interesting. You are quite the chef Richard.\"\n\n\"Not a chef, but I have cooked in several kitchens. The potatoes are what my family called garbage can potatoes, I don't know why really.\"\n\nThey chatted and shared a bottle of Malbec while they waited. He told her about growing up always restless. They wanted to put him on ADD meds but his grandfather said absolutely not. He said the boy had the wanderlust and leave him be. At seventeen he packed his stuff in his pickup and left. He still called home when he could borrow someones cell phone. He had made it back for Christmas that first year. His mom had hoped he was home for good but his dad's present had been a prepaid gas card.\n\nThe steaks were cooked to perfection and Martha claimed the potatoes were the best she had ever had. Martha had made strawberry shortcake for dessert. They cleaned up the kitchen and made sure the grill was out.\n\nRicky said, \"Where is your room so I don't have to carry you all over the house looking for it?\"\n\n\"Yes I suppose it is that time,\" she said nervously, \"up the stairs, second on the right.\"\n\n\"I'm going to touch you now alright?\"\n\n\"Yes, I'm ready,\" she said as she steeled herself.\n\nHe walked up to her and put his hands on her waist and smiled. She nodded at him she waited for him to put an arm behind her shoulders and the other behind her knees. He totally surprised her by bending and putting his shoulder into her stomach and standing with her in a fireman's carry. He flexed his knees and bounced her up and a couple of times then bent and set her on her feet. The ice was broken and they laughed hysterically. He then picked her up as she had expected and carried her to the room.\n\nIt was a rather spartan room with only a bed, chair and chest of drawers. On the dresser was an old fashioned pitcher and bowl with a couple of towels. He put her down and looked around.\n\n\"This is a guest room,\" she explained, \"I don't want to make love in my room in case this is all a mistake and you leave me. I couldn't bear to sleep in that room then.\"\n\n\"I love it,\" he said, \"the iron head and foot board's are ideal for restraining me. The window is to the back of the house so no one will hear me scream when you punish me, it's perfect.\"\n\nShe blushed deeply and said, \"That may be true but tonight is about you making love to me.\"\n\n\"No, it's about you punishing me, making me worthy of worshiping you Mistress Martha.\"\n\n\"I had not thought you would be so wicked as to need punishment before making love to me.\"\n\n\"I'm sorry mistress but that is not true. If you don't punish me how can I appreciate what an extraordinary woman you are. I bet if I looked in that top drawer I would find the means for you to teach me to be a good slave, a good lover.\"\n\nWith that he opened the drawer and found the things he had purchased, in addition were handcuffs that were heavily padded, another heavier flogger and a black blindfold.\n\nShe blushed again and explained, \"I went online and ordered these other things. I want to explore how harsh I can be in punishing you but I don't want to hurt you at the same time. Does that make any sense?\"\n\n\"Yes mistress it makes perfect sense, I understand completely,\" he said picking up the padded cuffs. He emptied the pockets of his jeans then removed his shoes and got on his knees facing the headboard. He clicked the cuffs on and found they were very comfortable.\n\n\"Stupid slave, you forgot to remove your shirt,\" she scolded him.\n\n\"Yes mistress, maybe you should use my knife on the dresser to cut it off me. Maybe I would remember to be a better slave.\"\n\nHe heard the knife snick open and her gasp. It was a wicked looking tactical knife with a matte black blade. She ran her hand with the blade under his shirt all the way to the collar and brought the blade up cutting the cloth like butter. She only cut about six inches then withdrew her hand. Carefully folding the blade she put it on the bed. With both hands she took hold of the shirt and with a jerk tore it all the way in two. She unfolded the blade and quickly cut the remains of his shirt from his arms.\n\nShe was panting from excitement as she got off the bed laying the knife on the dresser and picking up the new flogger. It had twenty tails each an inch wide made of rough leather. The handle was braided leather with a large leather ball at the end for a good grip. She swished it through he air to get a feel for it and then gently ran the tips of the tails from his waist to his neck. He shivered from the light contact. She did it one more time getting a shiver and a moan from him.\n\nWithout warning she laid the whip into his back. She waited four seconds and delivered another blow. After the third he said, \"Harder Mistress Martha, humiliate me, show me how much better you are than me, how much you are in control.\"\n\nShe increased the force of the next blow and grunted, \"I am in control, I am powerful. I was going to give you ten but you haven't been counting slave.\"\n\nRicky quickly said, \"Four mistress.\"\n\nNO,\" she roared, \"that was one. Now we have to start again.\"\n\nAfter he had counted the next five he begged her, \"Harder please mistress. Six, harder please. Seven harder please. Eight harder mistress. Nine all you have this time. Ten he said finally letting out a groan of pain.\" He relaxed his back and sank to the mattress.\n\nMartha was worn out and gasping for breath, she dropped wearily to her knees and rested her cheek against the mattress. \"Ricky are you all right?\"\n\n\"Yes I'm good. That was incredible, you would not believe how hard my cock is right now.\"\n\n\"I might,\" she panted, \"my panties have soaked through and I can feel the liquid on my thighs. I will have to clean up before we continue.\"\n\n\"Don't you dare. I want to taste you, suck up all your juice.\"\n\n\"Well if you feel you have been punished enough let's get those cuffs and your clothes off of you.\"\n\n\"Mistress is it up to you to say if I have been punished enough.\"\n\n\"That is right I have total control in deciding your fate haven't I.\"\n\n\"Yes Mistress Martha, I am at your mercy. Do whatever you want to me.\"\n\n\"What I want right now is to feel your tongue and lips on my vagina bringing me to climax, maybe more than once.\"\n\nShe got the cuffs off and looked at his wrists. \"Not a mark on them.\"\n\n\"No they were very comfortable, I never realized I had them on. Now stand up and let me get that dress off you.\"\n\nHe took his time and kissed every part of her body as it was exposed. Eventually it fell to the floor and left her in a black lace bra and panty set. The bra pushed her breasts up and together giving her an impressive cleavage. He undid the front clasp and slowly pulled the cups apart. The cleavage disappeared but the breasts hardly sagged at all. He marveled that a forty four year old would have breasts this firm. The nipples were a rosy pink color and stuck out proudly from the areola. They called out to be sucked and he answered that call. In time he continued his journey to the promised land.\n\nHe went to his knees kissing a trail to her belly button and tickling it with his tongue. He looked down and saw a few hairs sticking out the top of her panties and got even harder. For some reason it was incredibly exciting to see. He could smell she was very aroused. He reached up and hooked his fingers in the waistband and slowly peeled her panties down. When the panties pulled away from her lips a string of juice stretched four inches before breaking. He pulled them down and she stepped out of them. He chuckled to himself thinking that if he threw them against the wall they would most likely stick.\n\nHe gently pushed her against the bed and she sat down. He told her to lie down and grabbing her legs pulled her to the edge of the bed. He parted her legs and leading with his outstretched tongue leaned into the target. The first lap of her lips netted him a delicious taste and a moan from Martha. He quickly lapped up her juices even licking her thighs. He attacked her clitoris next and got it to come out of its hood of flesh. A few more licks and he got his first howl of pleasure from her. She grabbed two handfuls of his hair and he seriously thought she might pull it out. She calmed down from that one and he inserted a finger in her vagina and set her off again. The third scream came when he inserted two fingers and gently bit her clitoris. He let her calm down, slowly kissing her crotch and thighs. She realized she had a death grip on his hair and let it go gently patting his head as if to glue the hair back on.\n\n\"Get up and stand in front of me,\" she commanded him.\n\nShe reached for the button and zipper on his jeans then pulled them off. His boxers came down with the pants and she was staring at his penis. She reached a hand up and caressed it.\n\nShe looked up at him and said, \"It is hard and soft at the same time. If you don't mind this is the first penis I have held in my hand, I would like to explore.\"\n\n\"Explore away, squeeze it harder, stroke your hand up and down. Gently hold my testicles, kind of roll them around in your hand.\"\n\n\"Is this a large penis or average?\" she inquired.\n\n\"It's six and a half inches so a little longer than average. That feels great, you can kiss, lick or suck on it if you'd like.\"\n\n\"Oh yes I want to fellate you. But I don't want to excite you too much. I want to feel it inside me before you ejaculate.\"\n\n\"I'll let you know when to stop. Hang on before you do anything else.\" he said. He turned and found the rubbers on the dresser. He quickly rolled one on and stepped in front of her.\n\n\"Yes I suppose we should practice safe sex,\" she grinned, \"Although in my case I don't think my last lover gave me anything.\"\n\n\"Yeah,\" he laughed, \"I think you would have noticed something in the last twenty five years. I was checked only three months ago but I did have sex with Cassie so better safe than sorry. I will go get checked next week to make sure.\"\n\nWith that she kissed the head and then started sucking the first two inches. She had a way of popping the head in and out of her mouth and sucking that was driving him wild. He was ready to blow very quickly.",
        "\"Martha I will come in a minute if you keep doing that. I would actually last longer inside you if I shot now. I can get hard again in just a couple of minutes.\"\n\nShe was nearly as excited as he was and took her mouth off him long enough to say, \"Please do that, I want to feel your sperm fill the condom while its in my mouth. This is exciting.\"\n\n\"Well I'm sure as hell excited, here it comes feel it squirt,\" he called loudly.\n\nRicky groaned as he shot into her mouth. She moaned around his cock and slowed her mouth down finally stopping when she felt him quit twitching.\n\n\"Holy shit Martha that was good. I can't believe that's the first cock in your mouth.\"\n\n\"It was but I can tell you it will not be the last time I feel that. I hope you find you are disease free because I want to feel that without the condom.\"\n\n\"Oh that would turn me on to deposit my load on your tongue and have you swallow it.\"<br >\n\n\"What does it taste like?\" she asked.\n\n\"Kind of salty and slippery, I kind of like the taste of my cum.\"\n\n\"Well could I taste it now? I mean can you pull off the condom and maybe pour it into my hand?\"\n\n\"Yes I could but that would defeat the purpose of using the condom in the first place.\"\n\n\"Yes,\" she giggled, \"I suppose it would. It just turns me on so much to think of tasting you.\"\n\nHe pulled the condom off and tied a knot in the top. He poured water in the bowl and used a towel to clean and dry his cock. He gave it a few strokes to get it hard enough to roll another condom on.\n\nHe laid her on her back and she parted her legs wide. He looked at her pussy and it was almost pulsing with anticipation. He lowered his cock until it met her lips and slowly opened them. They looked into each others eyes as he entered her. About halfway in he stopped and asked her if she was OK.\n\n\"Yes oh yes, I think you are already deeper than anything has ever been before but please I want all of it.\"\n\nHe took slow strokes going deeper each time until their pubic hair met. He stopped with his cock buried and then flexed causing it to jerk inside her.\n\nShe giggled and flexed her muscles, tightly squeezing him.\n\n\"Oh my, someone does their Kegel exercises,\" he grinned at her.\n\n\"Yes they are part of my yoga program I do every day. Your penis feels so good in me.\"\n\n\"My penis is what I use to urinate. My cock is what I make love with,\" he corrected her.\n\n\"You know I believe you are right. A penis does sound soft and limp doesn't it?\"\n\n\"So what would you like now?\" he playfully asked her.\n\n\"Oh gosh let me get this straight. I want to you to fuck my pussy with your hard cock until you come in me,\" she blurted out with her face turning red.\n\n\"That's right, that's exactly what I am going to do to your tight pussy. With that he pushed her legs up until her knees were beside her ears and pounded into her until she came, screaming the house down. He was about to come then stopped and told her, \"Wrap your legs around my waist.\"\n\n\"Why what are you doing, what's wrong?\" she asked concerned.\n\n\"Nothing's wrong just do it.\" When she had he pulled her to his chest and stood up. He walked out of the room and down the stairs with her impaled on his cock. He walked to the back door and said, \"Close your eyes for me.\"\n\nHe felt behind her and found the latch for the screen door. He opened it and carried her out into the cool night air. He sat her down on the wide porch rail and started to move in her. She got the hint and opened her legs letting him pound in and out faster and faster. Finally he buried his cock and filled the condom.\"\n\n\"Oh my god, I can feel it filling me. Don't stop I will come again from that feeling.\"\n\nHe kept up his assault and she shouted out her joy. He slowed and finally stopped with his cock all the way in her. They were both trying to get their breath back when he looked up and saw her looking back at him.\n\n\"You are a fantastic lover,\" he told her, \"by the way you did notice we were outside right?\"\n\n\"No it is definitely you that knows how to ma- fuck. I find that saying that excites me. It is so much more primal and urgent than saying making love. And yes I love the cool air and light breeze on my sweaty back. I am not going to look but is the moon out?\"\n\n\"Yes she's about four days from full, right over the garage. You ready to go inside now?\"\n\n\"No, I don't but I'm afraid we will get cold when we cool off.\"\n\n\"If I pull out of you and leave you here for ten seconds would you be OK?\" he asked her.\n\n\"Why,\" she asked nervously, \"what are you going to do?\"\n\n\"I am going to dash in and grab that blanket off the shelf in the storeroom.\"\n\n\"I have a better idea, leave your cock in me and carry me in with you.\"\n\n\"Ooh that is a much better idea, here we go.\"\n\nHe picked her up and she slid all the way down his semi hard cock. He walked them in and she grabbed two blankets and guided him backwards until he could turn and walk forwards to the porch. By the time they got outside his cock was starting to harden again. She felt it thickening and asked if he could go again.\n\n\"Sure, you wanna go back inside?\"\n\n\"No I want to do what you suggested the first time we talked. I want to close my eyes and have you carry me out to the gazebo and fuck me some more.\"\n\n\"You are the most incredible woman I have ever met, I may have said that before but it bears repeating. Hang on my lovely.\"\n\nHe deliberately bounced heavily down the steps driving his hardening cock into her. They made it into the gazebo then found she couldn't get the blankets spread out while was still riding him. He moved to the bench that surrounded the sides of the building and sat her down. She had her eyes closed and he quickly arranged the blankets then helped her stand.\n\n\"I'm going to lie on my back and you are going to sit on my cock,\" he said leading her to the blankets.\n\nShe straddled him and using both hands guided his cock into her pussy. She had just got her rhythm going when he felt the condom coming off.\n\n\"Stop stop we are losing the condom,\" he warned her.\n\nShe stopped and pulled off and saw that the condom was indeed almost at the tip of his penis. She reached down and pulled it off and tossing it to the side sat back down on his bare cock.\n\n\"C'mon Martha, we can't do this,\" he said holding her hips.\n\n\"Shut the hell up slave and start using those hands to pump me harder onto that hot cock of yours.\"\n\n\"Look you're just saying that because you're in the moment. Martha listen to me.\"\n\n\"Woo you listen Ricky, I'm coming,\" she screamed out loud, \"start thrusting into me, I want more orgasms. Fuck me, fill me with your sperm, make me pregnant, I don't care,\" she screamed wildly coming again.\n\nHer gyrations on his cock had him ready to shoot. At the last second he rolled her off him and pulled his cock out. The first shot went nearly to her chin. He aimed the next two at her breasts and the last shot barely made it to her belly button. A couple more dribbles lodged in her pubic hair.\n\nMartha was shaking and nearly convulsing. She calmed down and slowly ran her hands through his come spreading it all over her chest. When she noticed him looking she brought a hand to her mouth and licked his come off her fingers.\n\n\"Please don't look at me that way Richard. Yes I know it was foolish. But let me tell you something, I was in complete control of this situation. You tried to stop me and couldn't. I did what I wanted. Me, I did that.\"\n\nHe leaned over and kissed her. \"You also realize I'm sure that you are fifty feet from your house with your eyes wide open.\"\n\n\"Yes you were right about that too. It did take a naked man to get me out to the gazebo.\"\n\nShe looked somewhat uneasily out over the yard and back of the house then stood up and helped him to his feet. She bent and picked up a blanket handing the other to Ricky. They wrapped up and sat down on the bench.\n\n\"So are you OK, you need to go in?\"\n\n\"No in the dark shadows here I am all right. A little anxious but a long way from a panic attack. When I was a little girl I had a pup tent. My father would set it up here in the gazebo and I would camp out overnight. I made it through the night twice before something would scare me and I would ran back to the house.\"\n\nThey sat holding each other until she said her feet were getting cold. He picked her up and started toward the house.\n\n\"Oh my gosh, stop Richard,\" she ordered him.\n\n\"Why, what's the matter,\" he said turning around.\n\n\"Nothing turn back the other way. I opened my eyes to see if I could and I saw the moon over your shoulder. Richard she is smiling at me,\" she said excitedly.\n\n\"Of course she is.\"\n\nHe started toward the house again and she said, \"Wait, put me down.\"\n\n\"The dew is out and the grass is wet,\" he told her.\n\n\"Oh I want to feel that. I wanted to feel the grass tickle my feet but wet is even better.\"\n\nHe slowly put her down as they looked into each others eyes. He could tell when her feet touched the wet grass by the widening of her eyes. He let her stand on her own but held her hands.\n\n\"Keep holding my hand and guide me. I am going to close my eyes and walk back to the house.\"\n\nShe took four steps and he warned her, \"One more step to the concrete at the bottom of the steps.\"\n\n\"No Richard it's too soon. Lead me to the rose bushes please.\"\n\nHe took her elbow and led her slowly across the yard. Just as he was going to stop her she did it on her own.\n\n\"I could smell them, I knew I was close,\" she answered his unspoken question.\n\n\"OK you ready?\" he asked.\n\n\"Yes, my feet are starting to get cold.\"\n\nHe got her turned around and headed toward the house. They were still twenty feet away when she shook off his arm and letting out a squeal ran for the back steps. She made it onto the porch and started laughing loudly.\n\nHe came up more slowly and when he reached the top she wrapped her arms around his neck and said, \"You are absolutely brilliant. I never would have imagined it, I was outdoors for more than two hours, with my eyes open for most of it. Thank you thank you thank you,\" she gushed.\n\nHe couldn't stop smiling and laughing with her. She calmed down and said bathroom break.\n\nShe had only been in there for a minute when she yelled his name. He rushed in the bathroom to find her sitting naked on the toilet with her feet straight out in front of her.\n\nShe smiled at him and proudly proclaimed, \"I have grass stains on my feet, hallelujah.\" They both started laughing and he had to sit on the rim of the tub until he recovered. She stood and came and sat with her feet in the tub. He swung around and they washed each others feet. They dried their feet and went to the kitchen for something to drink. He drank a glass of iced tea and said he better get back to his place.\n\n\"Oh Richard no, it's nearly three am. I don't want you in my bed yet but the guest room is yours to use.\"\n\nHe saw the anxious look on her face and smiled widely saying that would be perfect. She brightened and asked him what time he needed to get up.\n\nHe said, \"Well I have to go home and get a new shirt before I have to go to work so about ten I guess.\"\n\nShe blushed and said she had forgotten about that.\n\nShe knocked on his door at ten and told him breakfast was ready. He went down and found bacon and eggs waiting. There was also a windbreaker on the back of his chair. They ate their breakfast and he picked up the windbreaker. She stopped him before he got it on and told him it had belonged to her father. He sensed it was important to her and said cool while putting it on.\n\nThey had their lunch together at two and sat talking until nearly four. Martha casually said it might be a good idea if he had a change of clothes and maybe a shaving kit at her house, just in case he ever stayed over again. Both of them knew he had wouldn't be staying many nights at Mike and Debbie's.\n\nIt wasn't that busy for a Friday night, he stopped at Walmart after work and picked up some things including some overstuffed pork chops for Sunday dinner. He was looking forward to his one day a week off. He rang the bell and heard a faint come in. He tried the door and to his surprise it opened. He went in and shut the door making sure it was locked. He called her name and a little louder heard back here. She wasn't in the kitchen but the back door was open. It was dark and the porch light was not on but by the light from the kitchen he could see her wrapped in a blanket sitting on one of the kitchen table chairs. She was wearing sunglasses and a huge floppy sun hat.\n\n\"Isn't this exciting?\" she asked.\n\nIt was but he played it casual saying, \"It is but I usually wear my cowboy hat this time of night but yours is OK\"\n\nShe laughed delightedly and asked if he were hungry. He was but he was more interested in what Martha was up to so he just shook his head no.\n\nShe pointed at the floor beside her chair and said, \"I found some old sleeping bags and pillows. I zipped the sleeping bags together to we have a double under us and we can snuggle in the other double. I also have a towel in there. Now, I am going to walk out to the gazebo by myself. You follow me with this stuff. If I make it without panicking you are going to lie down and let me ride you until I can't. I am sure I will be able to make it because I will be thinking how good you feel inside me. Are you ready?\"\n\n\"No not yet, I have to get something upstairs,\" he said.\n\nShe smugly reached into the pocket of her pants and pulled out a strip of condoms saying, \"Like this you mean?\"\n\nHe smiled at her and gave her a thumbs up and helped her to her feet. He grabbed the bags and pillows but then put them down and went in and got two bottles of water. He picked everything back up and told her he would follow her. She felt her way to the steps and then stopped saying, \"These glasses are darker than they look I can't see a thing.\" She took them off and moved down the steps, at the bottom she was out of the porch shadow and saw the moon high above. She giggled like a school girl and almost skipped out to the gazebo.\n\nThey got the bags situated and Ricky got a condom out. Martha said, \"Wait let me do it. I never have before.\"\n\nThe thought of her putting his condom on had him hard enough that the condom unrolled easily. She surprised him by taking him in her mouth and after bobbing up and down a dozen times slowly took him all the way to his pubic hair. She came back up and coughed then did it again. She came all the way off again but only to take a deep breath. She went down and this time bobbed her head twice before pulling off.\n\n\"So how's that?\" she asked triumphantly.\n\n\"Where did you learn that?\" he asked.\n\n\"This morning with the help of the internet and a banana,\" she told him matter of factly, \"I want to suck you until you are ready to shoot and then tap me on the head or say now\"\n\n\"Sure I can do that, you going to tell me why?\"\n\nShe just shook her head no and took him in her mouth. Her deep throat technique had him ready in no time. He tapped her head and she pulled off and quickly stripped off the condom and started rapidly jerking his cock. He couldn't hold back and came. He watched as she directed his cock where she wanted his come. The first shot hit the bridge of her nose the rest she spread over her face. He was amazed at how much he had shot onto her face. It was dripping off her chin and looked so hot on her dark blue blouse.\n\n\"I saw that on the internet too and it looked so exciting. I loved that, how it splattered and pulsed in my hand and covered my face. I wish I had a picture of my face right now.\"\n\nHe handed her the towel and they quickly stripped. Martha rolled another condom on his still hard cock and he laid down anticipating playing with her breasts and looking at her face. She fooled him by mounting him reverse cowgirl. She sank onto his cock and only had to bounce once to get him buried in her. He realized this position had advantages also. He lubed a finger in his mouth and found her asshole and began rubbing the rim. She didn't protest only groaned. He wet his finger again and returned this time entering her tight ass. She bucked and screamed so loud it scared him. He chuckled when he understood she liked it and was coming.\n\nShe calmed down and turned to look at him, \"More of that if you please, I like it.\"\n\nShe returned to galloping on his cock and he snuck a finger in alongside his cock to get some pussy juice for lube. He returned to her ass and had his finger buried in three strokes. She bellowed his name and nearly jumped right off him. She spun around without dislodging his cock and told him to squeeze her nipples. He did and was rewarded by her third very vocal announcement of her pleasure. He grabbed her hips and pounded up into her until he came. She collapsed onto his chest and they laid that way until his cock softened and fell out of her. She moved so he could roll on his side and spoon her. They went to sleep and woke at around three am to the sound of rain on the roof of the gazebo.\n\n\"Oh isn't this great? I love the rain on a roof,\" she said excitedly.\n\nHe just smiled enjoying her delight of the rain.\n\nSuddenly she jumped up and grabbing his arm said, \"Come on Richard, play in the rain with me. She ran out into the rain without waiting for him. She held her arms out and spun around laughing. Suddenly she stopped and said, \"Richard go into the house and get my shampoo please, hurry.\"\n\nHe went up the stairs and into the house skidding on the linoleum and almost going down. He found the shampoo and went out into the yard. He handed it to her and she went to the corner of the house where the rain spout came down. It ended with a bend four feet above the ground. It had obviously once filled a long vanished rain barrel. A torrent of water was gushing from the pipe. She lathered her head and rinsed and did it again. She handed him the shampoo and he washed his hair reveling in the feel of all that fresh water.\n\nA bolt of lightning flashed and a second later the boom of thunder. He watched her closely but it didn't seem to phase her. They went back to the gazebo and dried off as best they could with the one towel and their clothes. They climbed into the sleeping bag and watched and listened to the storm before drifting off.\n\nHe came by with lunch Saturday and found her on the back porch.\n\n\"My aren't we daring,\" he kidded her.\n\n\"More daring than you can imagine, I went out to the gazebo and brought our things in,\" she said proudly.\n\nHe deadpanned, \"Well at least your good for something around here,\" quickly bending down and kissing her.\n\n\"Richard I want to go for a walk this evening. Maybe just down the alley and back,\" she said tentatively.\n\n\"Yeah sure, if that's what you want, be happy to.\" he said cheerfully.\n\nHe got to her house after work and found her sitting at the kitchen table. She had on black tennis shoes, black slacks, a long sleeved black shirt and covering her blond hair a black beret.\n\nHe joked, \"Are we taking out terrorists tonight?\"\n\n\"No but if we see anyone I don't want them to recognize me.\"\n\n\"They won't be able to see you let alone recognize you. You have the flashlight?\"\n\nShe pulled it from her pocket and turned it on shining it into his eyes.\n\nHe put his arms out like a blind man and stumbled toward her. She let him find her a give her a kiss.\n\n\"Let's do this,\" she said getting out of the chair.\n\nThey went to the back gate, he unlocked it and swung the gate wide. He stepped through and looked carefully up and down the alley. He nodded to her and she stepped into the alley, stopped and closed her eyes taking a deep breath. She opened them and smiled at him. He gestured down the alley and she took his arm. They walked slowly taking in the night sounds. They had reached the far end of the block and were just turning around when there was a loud hiss and a flash of black right next to them. His mind was telling him cat about the same time he jumped two feet in the air. Martha jumped too but not like Richard. He calmed down quickly and looked at her closely.",
        "\"You OK?\" he asked.\n\n\"Yes I'm fine but we should go back now in case someone heard that and investigates.\"\n\n\"People are used to hearing cats at night.\"\n\n\"I was talking about your girly scream,\" she laughed.\n\n\"I did not scream,\" he protested.\n\n\"OK Tarzan, what ever you say.\"\n\nThey made it back to the house with no more excitement and he asked her, \"Why didn't that cat frighten you? It scared the hell out of me.\"\n\n\"Because you were looking away when it jumped. I was looking that way and saw its eyes glowing just before it jumped.\"\n\n\"Well you win this encounter hands down. I need something to eat.\"\n\n\"I have some deli ham and cheese and some good bread if that's all right.\"\n\n\"That will be perfect, just like you,\" he said kissing her neck.\n\nThey both had a sandwich and said their good nights. He retired to his guest bed and slept like a log.\n\nHe was up early and had the coffee made when Martha came down.\n\n\"I was thinking everything omelets, sound good?\" he asked.\n\n\"Sure, if you're cooking anything sounds good.\"\n\n\"Do you not like to cook or are you not good at it.\"\n\n\"Both,\" she laughed, \"why do you think I get twelve meals a week delivered? I can make toast or an eggo for breakfast and on Sunday I eat a frozen dinner or a salad.\"\n\n\"You're pathetic,\" he said shaking his head.\n\nThey had their breakfast and then sat on the back porch reading. Martha a novel and Richard old comic books from her father's stash. About four he fired up the grill for the pork chops and corn on the cob. The early dinner was a success and they sat reading afterward.\n\nSuddenly Martha jumped up and asked, \"Do you like board games?\"\n\n\"Yeah most of them Monopoly, Life, Yahtzee, domino's, Scrabble.\"\n\n\"How about Parcheesi? We used to play almost every Sunday night,\" she said hopping up and down waiting for his answer.\n\n\"Oh man we used to play that at my grandma's house when we visited, sure I'll play.\"\n\nShe clapped her hands and disappeared into the library. She came back in a few minutes with more than the game. She had an old Walkman cassette player and three tapes. She set everything on the table and looked at the tapes. She sat down and fingered the tapes looking sad.\n\n\"You all right?\" he asked quietly.\n\n\"These are three mix tapes the family attorney gave me the day after my parents died. He's the one in charge of the trust fund. I listened to these endlessly for months. I'm going to look for the charger.\"\n\nShe soon returned with the charger and plugged it in. They set up the game and played for a while then Martha reached over and hit play. One Sweet Day by Mariah Carey started playing. They continued playing and listening to the songs. The more they played the more agitated Martha seemed to get. She jumped up from the table knocking the charger from the wall.\n\n\"You need to stop looking at me like that Ricky,\" she said angrily.\n\nWhat the hell is going on here he wondered. \"I'm sorry Martha, I didn't mean to upset you.\"\n\n\"Oh you are like all the rest. Talk nice to my face and then stab me in the back, laugh at me.\" She started looking into the corners of the room and panting. \"You need to get out now. No I need to get out. I need to go to my room.\"\n\nShe was looking around wild eyed and suddenly collapsed to the floor. He knelt by her and checked her breathing and her pulse. The were both fast but not dangerously so. He wondered if he should move her. He decided against it and got a blanket and a pillow for her. He decided she wasn't in any danger and he would wait for half an hour before calling 911.\n\nThe Walkman had not been fully charged and was slowing down, the words barely discernible. Just as he reached to stop the tape he he heard a high pitched rapid voice, saying, 'people hate you, be afraid, they laugh at you' then nothing. He tried to reverse the tape to listen again but the battery died completely. He sat there stunned. What the hell had he just heard? He packed the player and the tapes and charger in a box.\n\nShe moaned and slowly sat up and looked around as if wondering how she got there. She looked at Richard and started crying. He knelt beside her and held her slowly rocking her. She eventually stopped crying and pushed herself away.\n\n\"I'm so sorry you had to see that, I am so embarrassed.\"\n\n\"Shush now, no reason for that. Let's get you to bed, it'll be fine in the morning. Come on let me help you.\"\n\nHe got her upstairs and took her clothes off. He got her tucked in turned off the lights. He sat in her rocking chair and pulled a blanket to his chin. She was still asleep when he woke at ten am. He quietly made his way downstairs and called Mike.\n\n\"Hey Mike do you have an old reel to reel or know someone that does?\"\n\n\"Actually I have an old Akai pro model from my I wanna be a rock n roll star days. Let me drag it out before I go to work. See ya soon.\"\n\nRicky went back upstairs and gently woke Martha. She came awake smiling, seeming none the worse for wear. He kissed her and told her he would be there at two. He gave her Mike's cell number just in case she needed him.\n\nWhen he parked in the alley Mike walked over and said, \"I took the air compressor and blew a bunch of dust off that recorder. I plugged it in and it works, well the tape heads turn. I put it in your room with four blank tapes.\"\n\n\"Thanks man, that's great.\"\n\n\"Something else, you in any kind of trouble? Legal type trouble?\" he asked.\n\n\"No, or not that I know of anyway. Why?\"\n\n\"Some asshole in a suit, looked like a lawyer, was asking about you earlier. Actually asking more about how you knew Ms. Stratharn than about you.\"\n\n\"He leave a name or a card.\"\n\nMike reached into his shirt pocket and produced a business card. \"This guy looks like bad news. Like he would sell his mother, watch out.\"\n\n\"Thanks, does he know about me staying at you place?\"\n\nMike shook his head no. \"The only think I told that leech was you worked here cause he could have found that out anywhere.\"\n\nRichard went in the back door of Luigi's to wait on his first order. He looked at the card. Barry Goldfarb, attorney at law. He would bet a dollar to a donut that Martha knew him.\n\nTwo o'clock took forever to get there. He finally pulled into the alley, opened the garage door and parked. As he was shutting the door he glanced down the alley. There was an older guy with a dog standing at the far end of the alley. He was getting a little paranoid himself. Then he chuckled when he remembered something his grandpa used to say, 'just because you're paranoid doesn't mean little green men aren't stalking you'.\n\nThey had a quiet lunch relaxing and enjoying a second glass of iced tea when Ricky asked, \"What's the name of the trust fund attorney?\"\n\n\"You mean Barry? What do you want to know about him for?\"\n\n\"I'm not sure yet, I have to check out some stuff. When I come here tonight I have some work I need to do in the garage. I'll eat with you first though.\"\n\nHe stopped at Mike's after work and picked up the tape deck and blank tapes. When he drove to Martha's he went past it and down to the next block and turned and came down the alley the long way. He didn't see anyone and got the truck into the garage. He went into the house and they ate their lasagna from Luigi's and laughed and joked around.\n\nWhile she was cleaning up the dishes he went into the storage room and grabbed the box with the Walkman. He told Martha he would be late, don't wait up and went to the garage. He plugged the Walkman in and got the tape deck set up. The Walkman had an audio out jack. He found an old cord in the mess that was in a box on the floor of his truck. He plugged the two units together with the cord and started recording. He got all three 60 minute mix tapes on one of the 10 1/2\" reels. He set up a new reel and started recording another copy.\n\nThe reel to reel blanks were in their original cardboard boxes. He put the first copy back in its box and wrapped it in an old pair of coveralls he found under the workbench. Without disturbing the dust on the boot lid of the Rolls Royce he opened the boot and put the tape in. It was nearly four am when he finished the second copy. He put the Walkman and the tapes back in the box and carried it and the second copy into the house. He put the Walkman box back in the store room and carried the reel to reel into the library. He pulled out a few volumes of the 1992 Encyclopedia Britannica and put the tape behind the rest of the volumes and replaced the ones he had taken out. On his way to bed he looked in on Martha and found her sleeping peacefully.\n\nShe greeted him the next morning in the kitchen with eggo's and coffee saying, \"I'm sorry I gave up on you last night. When did you finally come in?\"\n\n\"It was almost four I guess.\"\n\n\"Did you accomplish what you wanted to?\"\n\n\"Not all of it, I'll have more to do tonight. What I'm doing is not a secret but I don't want to tell you anything right now, for your own safety. It has to do with your illness and your money I think.\"\n\n\"I don't understand but I do trust you Richard,\" she said giving him a hug and kiss, \"now go to work, I will see you at two.\"\n\nHe was almost out the door when he had another thought and went to the storeroom and pocketed the three cassettes. He stopped at an old time electronics store and asked the guy if he could make copies of cassettes. He asked if there was such a thing as a certified copy, one that would stand up in court. The owner assured him he was a notary and could make said copies. Ricky had him make two copies of each cassette.\n\nHe picked up the copies at two o'clock and dropped one set off in his room at Mike's then went to Martha's. The same guy with his dog were in the alley again. Ricky got the truck in the garage and closed the big door. He went to the gate and unlocked it and started down the alley toward the man. As soon as he saw Ricky coming he turned around and almost ran out to the street and disappeared. Ricky went and retrieved the tapes and made sure everything was locked. He put the originals back in the box in the storeroom. He went up to his room and put the three copied cassettes between the mattresses of the bed.\n\nThey had a pleasant lunch and Ricky was just getting up to return to work when the phone rang. They both jumped a little, it was the first time it had rang while he was there. Martha looked at the caller ID and said, \"It's Barry Goldfarb, I wonder what he wants,\" as she reached to answer the call.\n\n\"Don't answer it,\" Ricky shouted putting his hand over hers, \"just let it go. Don't ever answer any calls from him.\"\n\nThey both sat staring at the phone until it quit ringing. Martha looked at him as if waiting for an explanation.\n\nRicky decided telling her what he knew so far was the only way to make her understand how serious this was.\n\n\"When we were listening to that mix tape you had a panic attack, I was going to shut it off because the battery was nearly dead. When the tape slows down you can hear subliminal messages telling you things like: people hate you, they laugh at you, be afraid. I borrowed an old reel to reel tape deck and made legal copies of the mix tapes. I have hidden all the copies where I hope they will be safe. Tonight I am going to play the reel to reel tapes at a slow enough speed to hopefully be able to hear the messages.\"\n\n\"Barry, a man I trusted gave me those tapes. Wait a minute he gave me those just one day after my parents died. He would not have had time to make tapes like you describe. Unless-,\" she trailed off.\n\n\"Holy shit, unless he knew your parents would die. Unless he prearranged this and he had your parents killed.\"\n\n\"But why, why would he kill my parents? Stupid question, for the money of course. He made me think I was crazy so he could get me out of the picture and have control of the trust fund.\"\n\n\"If the money is invested well the income is probably fifteen million a year. What does it cost to keep you here in this house? Maybe a hundred thousand? Plenty of opportunity to pad those expenses to a couple of million or more.\"\n\n\"Wait here a moment,\" she said and getting up went to the library. She came back with four thick folders and plopped them on the table.\n\n\"These are the last four years financial statements,\" she announced.\n\n\"You're on your own with that, I know absolutely nothing about accounting,\" Ricky said holding his hands up, \"besides I have to get back to work.\"\n\n\"Do me a favor please,\" she said handing him two of the folders, \"stop at an office supply place and make copies of these. Do it yourself, don't let anyone see them.\"\n\n\"There is a shipping and printing place next to Burger Barn. I think they are open until ten.\"\n\nHe put the folders in an old gym bag and took them to work. He put them in the delivery box on his scooter thinking it was safer than leaving them in his old truck with no functioning locks. It was a slow night and he was able to copy both of the files by quitting time.\n\nWhen he came in the back door of Martha's that night she had papers all over the table and in piles on the counter and even a few on the floor. Excitedly she got up and kissed and hugged him. She grabbed his hand and led him to the table.\n\n\"Barry has been stealing huge sums of money. First of all he had himself named CEO of Stratharn Group and pays himself three million a year plus stock options. The only time anyone sees him apparently is at the four quarterly board meetings. Everything is actually run by the division managers. On the trust fund side he pays himself a paltry 2% of the funds in his control. On a fund this large the average is less than 1%. It comes out to stealing five million a year. All he has to do to get that money is pay my expenses. Of which as you guessed, he is stealing just over two million a year. So he is taking about seven million a year,\" then she shouted,\"and I am letting him get by with it!\"\n\n\"So what are you going to do about it?\" he asked.\n\n\"About the only thing to do is take him to court on criminal charges.\"\n\n\"That's going to take a high powered, high priced attorney. Can you find one that will take the case with no money down, what do they call it, without a retainer?\"\n\nShe smiled and said, \"I looked through 32 pages of assets of the estate. It lists everything down to the last dessert spoon. You care to guess what is not listed anywhere?\"\n\nHe frowned for a minute then brightened, \"The cars, none of the cars are listed right?\"\n\n\"And on the first guess he wins the all expense paid trip to Pismo Beach,\" she said laughing.\n\n\"Also I'm trying to think, there was a young lawyer that fought and questioned everything that Goldfarb tried to do. He eventually got the man fired. I imagine if I can find him he might be willing to at least look into it.\"\n\n\"Well how are you going to find him after twenty five years,\" he asked.\n\n\"I'm not sure really,\" she said thinking, \"yes I do, I know where his name will appear.\"\n\nWith that she disappeared into the library once more. She came back with a large photo album.\n\n\"This hideous thing is filled with pictures of my parents funeral service and burial. It is the custom in this area to hire a profession photographer to capture the gory details of getting the dearly deceased into the ground.\"\n\nShe shuddered and opened the book. She quickly flipped through the pages until she reached one that showed mourners around two caskets. She pulled the photo from the four holders in the corners and turned it over. In a very neat hand were the names of all the mourners.\n\nShe picked up a notebook and wrote the name Jeffrey Chambers.\n\nRicky got up and retrieved her laptop. He quickly found the guy on a social media site that gave his firm name and phone number. After more searching around he finally found a cell number not listed on the firm's website. He wrote all the info and numbers on the notebook page and handed it to her.\n\n\"I know it's late but I have a feeling you should call, at least leave a message.\"\n\nShe nodded and dialed putting it on speaker.\n\n\"This is Jeffrey Chambers,\" a pleasant sounding voice answered.\n\n\"Mr. Chambers my name is Martha Stratharn, I don't know if you rememb-\"\n\n\"Of course I remember,\" he interrupted, \"how are you? How can I help?\"\n\nMartha started to tell her story and after one minute he stopped her.\n\n\"I am now going to turn a tape recorder on. I ask your permission to do so. Do you agree?\"\n\n\"Yes of course.\"\n\n\"I am recording this conversation with the knowledge and consent of all parties. I need the full name and address of all parties in this conversation and the date and time.\"\n\nAfter he got all this information he asked, \"Martha Stratharn and Richard Koss do you at this time wish to retain the firm of Jeffrey Chambers and Associates LLC and Mr. Jeffrey Chambers as your Attorney's of record?\"\n\nAfter saying they did they began relating their story. Twenty minutes later they finished and after adding the date and time once more the attorney shut off the recorder.\n\nHe cleared his throat and said, \"Now that the recorder is off I am going to say I never trusted that slippery bastard from the day I joined that firm. That he would murder and destroy another person's life does not surprise me in the least. He fought hard to get your parents to put everything into a trust then worked even harder to be named administrator. Your parents were apparently murdered only three months after he took everything over.\"\n\n\"So what do we do now Mr. Chambers,\" Ricky asked.\n\n\"You will need to turn over the originals and one copy of everything you have. I will also need copies of the financial papers to see if they correspond to the documents that were filed with the IRS and Stratharn Group. He couldn't have done this himself. At the least he had to have someone sabotage your parents car. I always thought it was suspicious that the brakes would fail on a nearly new Lexus. The car was inspected after the accident, do you remember by who Martha?\"\n\n\"I don't remember, I can't seem to be able to find any reports on the accident. Wouldn't the Sheriff's Department have a copy?\"\n\n\"Yes but let's not alert anyone to the fact we're looking into this.\"\n\n\"I think I have a way around that,\" Ricky explained about Mike's deputy friend.\n\n\"It's certainly worth a try if you trust him,\" said Mr. Chambers.\n\n\"Just one more thing Mr. Chambers, I don't have the ready cash to give you a retainer at present but I do have title to some very expensive automobiles.\"\n\n\"Martha you don't worry about a thing. I was just going to offer you money in case Goldfarb ties up all your accounts in court.\"\n\nThey said their good nights and hung up. Ricky called Mike and asked about his deputy friend. Mike said his name is Ed Wilson and he thought he was working tonight and gave Ricky his cell number. Ricky called and asked if he could do him a huge favor. Ricky explained what he wanted.\n\n\"This have something to do with that sleazy lawyer asking questions?\"\n\n\"Yeah I think it does why?\"\n\n\"He wanted to look at the same records. Sheriff didn't like his attitude and told him to get a warrant. He'll probably be back in the morning. Where can I meet you?\"\n\n\"Hang on a sec,\" he told him, \"Martha is it all right if Deputy Wilson comes here?\"\n\nWithout hesitation she nodded.\n\n\"It's 201 Maple, pull into the alley, I'll come get you,\" he said and hung up.\n\n\"If you start to get anxious when he gets here let me know,\" he said squeezing her hand.\n\n\"I'm not nervous, what I am is angry. All these years,\" she said shaking her head.\n\nHe went to the garage and retrieved the reel to reel then dug out the tape behind the encyclopedia's. He put the reel on and set the play speed on ELP. It was hard to tell what song was even playing but about ten seconds in they heard a voice rapidly saying: you are worthless, be afraid, they laugh at you. That was all that was on the first song. Ten seconds into the next song they heard: no escape for you, they hate you, give up. And so it went song after song. Martha had been writing all the phrases down. It seemed that every six songs they repeated themselves.",
        "Ricky saw headlights flash in the alley and went down to let Ed in. He had a file about an inch thick.\n\nHe opened it and separated the papers into two stacks. \"I made two copies of everything,\" Ed said pushing one pile toward Martha.\n\n\"Ma'am these are law enforcement reports. That means they are plain written and sometimes very graphic. Just so you know.\"\n\n\"Thank you for the warning Ed, please call me Martha.\"\n\nHe nodded and started reading the first report. Because he was used to reading them he finished each page before Martha and passed his to Ricky.\n\n\"Hey Ed, do you know Dennis Parker?\"\n\n\"A little, used to have a car repair shop when I was a kid, retired and bought a house in town, right around here matter of fact.\"\n\n\"How close?\"\n\nHe reached up and keyed the mike attached to his shirt collar, \"Dispatch can I get an address for a Dennis Parker here in town.\"\n\n\"Stand by Eddie,\" said a female voice, \"honey it's 214 Maple.\"\n\n\"Roger, copy dispatch, out,\" he replied then noticed them smiling, \"there is only one person in this world that can call me both Eddie and honey and that is my wife. She works as a dispatcher.\"\n\nThey all laughed and went back to reading reports. They were near the bottom of the stack when Ed very softly said, \"Son of a bitch.\"\n\nHe pointed at the name on the accident vehicle inspection report and told Martha to look at the next page in her stack. The inspector was Dennis Parker.\n\nEd sat staring at the far wall for a minute then pulled out his cell and began scrolling. He found the number he wanted and hit send. \"Hey Allen it's Ed Wilson, yeah I can tell time, my turn to ask a question. When did you buy the garage from Dennis Parker. You're sure of the date? OK thanks, what? No I am not going to explain. Night.\"\n\n\"Dennis Parker sold his business one month after he inspected your parents car. Does all of this sound like a coincidence to you guys?\"\n\n\"Especially not if you listen to this tape,\" Ricky said.\n\nRicky briefly explained and Martha showed him the notebook. He asked if he could hear one.\n\n\"Yeah sure, there's maybe three or four left,\" Ricky said hitting play.\n\nAfter listening to a couple Ed said, \"It's called masking, bands used to do it it, even the Beatles. I never heard of it having such a profound affect on anyone though, unless they were predisposed or primed to act on the messages.\"\n\n\"How do you mean predisposed?\" asked Martha.\n\n\"I don't know, this is all half remembered from a psych course in college. Oh it was like if you were hypnotized before you heard the messages it would trigger a predisposed or preconditioned response that would be very powerful, almost a compulsion.\"\n\nMartha went very white and said, \"That cold hearted murdering bastard. That evil son of a bitch. A week before my sophomore year Barry was here, at this very table, and my father was teasing me. I had gained my freshman 20 and he was saying he hoped I wouldn't gain another twenty pounds because he couldn't afford to buy me another new wardrobe. Barry said he heard that a hypnotist could help with controlling your eating. He said in fact there is a new doctor in town that did hypnosis. I was a little worried about gaining more weight so Barry said he would set everything up. That was the end of August, my parents died on October 1<sup>st</sup>. He was plotting this for months.\"\n\nEd said, \"That checks out, Allen said he bought Dennis Parker's business on October 31<sup>st</sup>, Halloween.\"\n\n\"Fuck, sorry Martha, you remember who set up the two shrinks you saw Martha?\"\n\n\"Of course,\" she said bitterly, \"Barry Goldfarb.\"\n\n\"I have seen it too many times,\" Ed said sadly, \"what money does to people.\"\n\n\"Well we have evidence, an outraged lawyer, an honest cop and justice on our side, we can't lose,\" Ricky joked.\n\nEd stood to go and said, \"I'll keep one of these copies for safekeeping.\"\n\nRicky followed him and let him out of the gate and made sure everything was secure. When he went back in Martha was standing in the kitchen in her ninja outfit.\n\n\"I take it we're going for a walk tonight, or I should say this morning. You do know it's going on four am?\"\n\n\"Yes I do,\" she said taking his arm and pulling him toward the front door.\n\nThey went out the front gate and Martha turned left. She led the way down the block and then crossed the street. They walked to the next house and Martha turned and put her hands on her hips. They were in front of Dennis Parker's house.\n\nShe stood staring at the place then looked at him and said, \"Richard the man who had a hand in murdering my parents lives here, as God as my witness he will not get away with it.\"\n\n\"No, no he won't Martha, God or no God.\"\n\nShe turned and put her arm in his. They walked for nearly six blocks before she turned them around and started back. It was getting light by the time they got back to her house. They climbed the stairs and when they got to his room he tried to turn in. She didn't let go of his hand and pulled him to her room. They undressed and fell into bed holding each other.\n\nThe alarm clock was an annoyance he didn't need but accepted, grumbling all the while. They had a quick omelet for breakfast and he was out the door. His deliveries all went smoothly but Ricky couldn't help but feel someone was watching him. He never caught anyone doing it, he just felt it. Two o'clock came around and he headed to Martha's.\n\nHe pulled into the alley and knew something was wrong immediately. The back gate was open and he jumped out of the truck and ran for the house. The back door was also open and he ran in shouting Martha's name. He found her on the floor of the library groggily trying to sit up. He made sure she was OK and called 911 and Ed.\n\nBy the time the EMT's got there Martha had recovered to the point she refused to go to the hospital. Ricky had found a rag with a chemical smell that Ed identified as chloroform. The cassettes, the reel to reel tape and the Sheriff's report were missing.\n\nMartha told them she was just going to put the four annual reports back in the safe in the library when she was grabbed from behind and the cloth put over her mouth. She never saw or heard anything else. The annual reports were gone too. Ed announced that the gate lock and the back door were both opened with lock picks. Ricky went to the garage and got the other tape from the boot of the Rolls. He told Ed where the copies of the cassettes were at Mike's. He was going to take all the evidence and put it in the safe at the Sheriff's office.\n\nThey called Mr. Chambers and related the news. He said as bad as it seemed it was actually good news. Goldfarb had obviously arranged the robbery and would assume he had all the incriminating evidence safely in his hands. They had copies of everything except the annuals of the last two years. The only thing they had to do now was watch their backs and wait for Goldfarb's next move.\n\nRicky quit his job and moved out of Mike and Debbie's. They tried to give him his rent money back seeing he had only stayed in the room one night but he wouldn't take it. He and Martha hung around the house all day and then went for longer and longer walks at night. She was doing better at being out. She even had a rather comical conversation with a drunk at two am.\n\nThen a week later a registered letter came from Goldfarb's law firm. It was an order for her to appear at a competency hearing. If she didn't appear in person she would be adjudged as incompetent and be placed in a mental institution. To show how far she had come when she read it she laughed and called Mr. Chambers. He drove the eighty miles from his office to pick up the papers and plan their response.\n\n\"He's really pushing this. Normally a person has ninety days notice of a hearing like this. Our hearing date is in two weeks. Well we aren't going to file anything with the court so he won't know you have retained me until we walk into court. That is, as I see it, our largest concern. Martha can you walk, in daylight, into the Bluffs County Courthouse and testify in front of what Barry will make sure is a packed courtroom?\"\n\nMartha paled at the thought and slowly shook her head no.\n\n\"I didn't think so. I will move for a closed hearing and be granted it. I have been involved in three similar cases and they were all granted. We have an edge here because I know Judge Douglas Merritt. Barry perjured himself in front of this judge but the judge couldn't call him on it because the proof of his perjury was obtained by let's say, questionable means. In other words, he hates Goldfarb's ass.\"\n\n\"So that means appearing before the judge, a court reporter, me and our expert witness; Goldfarb and his expert.\"\n\n\"And Richard.\"\n\n\"Of course and Richard.\"\n\n'There will still be crowds of people right?\"\n\n\"And he will stir the media pot and have those snakes on hand.\"\n\n\"Well with Richard to help I will try my best\"\n\n\"That's all any of us can do Martha.\"\n\nThey continued their routine of night time walks and coming home and making love or wildly fucking until sunrise then sleeping until noon or later. She met with Chambers' psychiatrist four times and seemed to really like the woman.\n\nShe dressed in her ninja outfit and added sunglasses and they drove 50 miles to the next big town and walked through the mall in daylight. It was not busy and Ricky even got Martha to screw up her courage and buy them ice cream. It went well until they were leaving and met a group of about eight loud teenaged girls coming in the door. Even that did not cause a full blown panic attack, just a couple nervous minutes.\n\nThe night before the hearing Ricky called Ed and asked him if there was a way to sneak in the back door of the courthouse. Ed laughed and said he had something better than that and to meet him at the Sheriff's office at eight am.\n\nThey both slept badly and were too nervous for sex so they found themselves at two a.m. playing Parcheesi. At 7:30 they showered and dressed in their best clothes. Ricky didn't have a suit coat but Martha had given him one of her father's ties that looked good on him.\n\nThey pulled into the rear of the Sheriff's department and Ed hustled them into an interrogation room and handed them orange jail coveralls. They put them on over their clothes and he led them outside to the jail van. He pulled into the sallyport of the courthouse and took them to a holding cell. He disappeared but soon came back with coffee and donuts. He sat with them until five minutes to ten then let them out and took the coveralls from them. He led them up the back stairs to the second floor where Mr. Chambers met them in the stairwell.\n\n\"OK I talked to Judge Merritt and he will grant the private hearing. Goldfarb and I will meet the judge in the courtroom and I will ask for the private hearing, Goldfarb will object, the judge will tell him to sit down and shut up and we will adjourn to the judge's chambers. Ed will lead you down the back hall right into chambers and we will do this thing.\"\n\nHe turned to Ed and asked, \"Everything else ready Deputy Wilson?\" Ed just nodded.\n\nTen minutes later the judge's clerk found them and led them to the room. Goldfarb was grinning broadly until he saw Martha walk into the room. Then he scowled and turned his back on them. The judge smiled warmly at Martha and got them all seated. He then outlined the procedure of the hearing. When he was sure everyone understood he called Goldfarb's pet expert witness. He proceeded to give a lecture on agoraphobia and anxiety and told the judge that Martha displayed all the classic symptoms of hav-.\n\n\"Excuse me but I have a question doctor, when did you examine Martha Stratharn last?\"\n\nWell,\" the doctor spluttered, \"I never have examined her.\"\n\n\"Have you ever observed her behavior?\"\n\n\"No I never have,\" he said quietly.\n\n\"Thank you doctor, please sit down. Goldfarb you have any thing else to add?\"\n\n\"No your Honor, not at this time.\"\n\n\"Mr. Chambers I assume your expert witness has actually spent time with Martha Stratharn.\"\n\n\"Yes your Honor.\"\n\n\"Well then let's have it.\"\n\n\"I won't bore you with my credentials, they are on file with the court, thanks to my colleague we have a good definition of Martha Stratharn supposed conditions. I observed Martha a total of four times for a total of ten hours. I found her to be a pleasant well adjusted middle aged woman of above average intelligence. All four times we met we sat outside, on two occasions we walked in the open for fifty feet to sit in an open gazebo.\"\n\n\"See here,\" Goldfarb interrupted, \"everyone in town knows she hasn't left her home in more than twenty five years.\"\n\n\"Sit down Mr. Goldfarb or you will be removed,\" the judge warned.\n\n\"Your Honor, my name is Richard Koss, I have been a friend of Martha's for a while now. I have some pictures taken last week of us at a mall eating ice cream and walking around if you would like to see them.\"\n\nThe judge gestured for the digital camera and scrolled through the pictures. He turned to the court reporter and said, \"Let the record show I have looked at over twenty pictures of Mr. Koss and Ms. Stratharn enjoying themselves and eating ice cream in a public setting. Please continue doctor.\"\n\n\"I believe with a few more hours of therapy and the help of her friend Mr. Koss, that Martha will be able to fully engage in any manner with any group of people she desires.\"\n\n\"I hereby declare Martha Stratharn to be competent in all ways to engage in any private, public or corporate endeavor she so desires,\" the judge proclaimed and rapped his knuckles on his table.\n\nBarry Goldfarb jumped up and shook his fist at Martha yelling, \"You haven't heard the last of this, you're not getting rid of me that easy.\"\n\nThere was a knock on the door and the judge called enter. Ed stepped in with an evidence folder and announced, \"Barry Goldfarb you are under arrest for the murder of Mr. and Mrs. Herbert Stratharn and the unlawful detention and attempted murder of Martha Stratharn. Stand up and turn around.\"\n\n\"What kind of nonsense is this, you don't have any proof of anything,\" he blustered.\n\nMartha stood and walked up to him saying, \"We made certified copies of the cassettes and of the reports you stole. We taped the cassettes and slowed them down to reveal the masking job you did on those mix tapes you gave me. You are going to the electric chair for murdering my parents Barry. Oh by the way, you're fired. And I am going to sue you for all the money you've stolen from the company and me over the years. You won't be able to afford a second year law student when I'm through with you you worm.\"\n\nDeputy Ed chimed in then, \"We picked up your old buddy Dennis Parker this morning trying to skip town, he had a hundred thousand dollars he couldn't explain. He just couldn't wait to rat you out,\" he opened the evidence folder and pulled out a legal pad, \"over twenty pages confessing to cutting the brake line on Herb's Lexus, to you buying his house for him, to paying him to spy on Martha all these years, to being lookout when you sent a burglar to reclaim the tapes. Oh and he gave us a really good photo of your guy coming out of Martha's back door. Like Martha said, you're going to fry Barry.\"\n\n\"And Barry if you think I'm going to recuse myself and not be the one to try you you're sadly mistaken,\" the judge added.\n\nEd jerked the almost catatonic lawyer out of his chair and put the cuffs on him. With a nod to everyone and a wink at Martha he roughly jerked his prisoner out the door.\n\n\"Is it really over?\" Martha asked quietly.\n\nJudge Merritt said, \"Yep, all but the shouting.\"\n\nShe put her arm in Ricky's and said, \"Take me home please Richard.\"\n\nThey got to her house and Martha seemed at a loss as to what to do now. Richard seemed preoccupied and she asked him what was wrong. He claimed he was fine and said he had something to do in the garage. He was out there for two or three hours when she heard his truck leaving. Three hours later he was back and came in with supper. It was a quiet meal with Richard responding but not really joining in on her conversational attempts.\n\nHe disappeared to the garage after supper and finally at midnight she made sandwiches for them and carried them out to him. On the way she dropped some things off in the gazebo. She found him sitting on a stool at the workbench. He had been crying and looked miserable. She put the plates down and went to hold him. As soon as he was in her arms he started crying again. She asked him three times what was wrong and he just shook his head and cried harder.\n\nHe finally picked up a not very clean rag and wiped his eyes. \"I didn't think it was going to be this hard to say goodbye,\" he croaked out.\n\n\"Goodbye, what do you mean goodbye, where are you going, why, why would you go?\" she implored him.\n\n\"You have your life back again, you can find someone your age, someone as smart as you. You don't need some kid hanging around. I'll go in the morning.\"\n\nShe hugged him fiercely and said, \"Richard you fool, you wonderful wonderful fool. I never want you to leave. I could have never ever done any of this without you. If not for you I would be trapped inside that house for the rest of my life. Richard the Lion Hearted you have rescued the princess! And she is never going to forget that.\"\n\n\"But you are 24 years older than I am. What will people say about us. It doesn't matter a damn to me but I worry about you. Now that you can go out I don't want people pointing at you and saying there's that women who is screwing that kid.\"\n\n\"And that is why I want you. You are more mature then a lot of men ten years older. Hell a lot of men never grow up, they just grow older. I just thought of something else. I have been locked away since I was nineteen, you are twenty. You are, outside the house age, older than me.\"\n\n\"That's one way to look at it I suppose. Those sandwiches look good, I'm starved,\" he said reaching for one.\n\nThey ate and drank their iced tea enjoying the quiet of the garage.\n\nFinally she said, \"What were you doing out here all day besides feeling sorry for yourself.\"\n\n\"Come and see,\" he said jumping off the stool. He led her over to the Porsche 993. The forest green paint glistened from a fresh wax job. He climbed in and fired the engine up. It rumbled so sweetly just as she remembered. He pressed the throttle and she could hear the twin turbos spool up. He shut it down and got out.\n\n\"I had to drain the gas and run some Gumout through it. The battery was shot and the tires had dry rotted. I'm glad it's air cooled so no radiator related problems. All the rubber parts will have to be replaced. Damn it, I forgot wiper blades. Anyway I wanted to get it running for you before I left. You will be wanting to get out and do stuff now. I got new plates and insurance is paid for one month.\"\n\n\"This is incredible, where did you get the money to do this?\"\n\n\"Well I made $480 a week plus another $200 a week in tips. I didn't spend even half of it up to now.\"\n\n\"So how much you spend today?\"\n\n\"Maybe twelve, fourteen hundred all told\"\n\n\"So you did all this and you were going to sneak off tomorrow with what, five hundred dollars in your pocket?\"\n\n\"Yeah about that I suppose, it's enough to get by until I find another job.\"\n\n\"Well you're not going anywhere mister.\"\n\n\"Oh yeah,\" he challenged her, \"says who?\"\n\n\"Says me and a pair of handcuffs and a whip.\"\n\n\"That just might entice me to stay,\" he grinned.\n\n\"Besides you have to get my favorite car running for me,\" she said pointing to the car in the corner of the garage under a tarp.\n\nHe went over and pulled up one corner and said, \"Oh my.\" He quickly pulled the tarp all the way off.\n\n\"A 1965 Mustang.\"\n\n\"Nope, a 1964 \u00bd Mustang. It was made on April 20<sup>th</sup>, 1964 the third day of production.\"\n\n\"Well I guess I can't leave for a while now.\"",
        "\"Well there is another reason you can't leave yet. Come with me.\"\n\nShe led him to the gazebo where he saw the sleeping bags and pillows.\n\nShe knelt on the pile of sleeping bags but when he tried to drop down she said, \"No you don't, you stand right here in front of me.\" She took off his tennis shoes then peeled his jeans and boxers off. She helped him step out of them while he pulled his shirt off.\n\n'You got some mail today. I knew what it was so please forgive me for opening it.\" She leaned in and took his hardening cock into her mouth for a few kisses and a long lick.\n\nShe pulled off and said, \"It was your doctor's report.\n\n\"So what did it say?\" he asked.\n\n\"It said come in my mouth Richard,\" as she took him into her throat.\n\nHer mouth felt great without a rubber in the way. She seemed to enjoy it also. She would suck half of his cock for five strokes then deep throat him for two. She kept it up until he gave her the five second warning. She pulled back until just the head was in her mouth and used one hand to stroke his cock and the other to gently roll his testicles. The effect was explosive. When the first shot entered her mouth Martha looked up and met his eyes. She kept stroking him, slowing down as his spurts became less and less.\n\nShe pulled off the cock and leaned her head back showing him her open mouth. She quickly swallowed and returned her mouth to his cock to catch the last drop of cum before it fell to the floor.\n\nRicky took two steps and turned and fell onto the bench. He tried to say something but nothing came out.\n\n\"I'll say it for you: that was incredible. It felt good when I could feel it filling the condom but bare; the volume, the feel, the taste, the slipperiness are exquisite. I could even feel your heartbeat better without the condom. We definitely have to do that again. I want to feel you shoot it right down my throat when you are all the way in my mouth.\"\n\n\"I've created a monster,\" Ricky panted out.\n\n\"You ain't seen nothing yet. I want to feel you shoot into my vagina, I want to know what it feels like when it drips back out of me and makes a mess. What I really want to do however is cuff you to the four corners of the bed and then tease you thoroughly and then sink my butt down on your cock and have you fill my rectum with sperm.\"\n\n\"Is that the way you ask for things Mistress Martha?\" he asked with an eyebrow raised.\n\n\"No of course not. I am going to torture you and then sink my ass down onto that hot hard cock and ride you until you fill my ass with hot cum.\"\n\n\"That's much better mistress,\" he said parting his legs to show his cock rising from her dirty talk.\n\n\"We'll do that tomorrow Richard, I want to give you time to produce a huge load for my virgin ass.\"\n\n\"That is getting me hot just thinking about it. How about you crawl over here and suck my cock until I come all over your face and tits.\"\n\nShe just smiled and got on all fours for the trip over to please them both. Afterwards they cuddled and slept in the sleeping bags, not waking until morning.\n\nThey went in and Ricky made a huge breakfast. After eating Ricky started to get up when Martha motioned him back to his seat.\n\n\"Richard I want you to know I have the same fears as you about our age difference. I don't want to tie you down. This might all be fun for you now but when you are the age I am now I will be an old lady of 68. Think of that Richard. I might even be dead by then. I want you to promise me that if you find a woman your age to tell me and we can end things as amicably as possible. The only thing I ask is that you don't cheat on me. I can handle the truth, I cannot handle lies. I have lived with lies for twenty five years now. If you find a woman much older than yourself however, I will cut your heart out and feed it to a goat.\"\n\n\"Martha right now I find myself looking forward to growing old with you. We have the resources to really enjoy the next 20, 30, 40 years. So let's do it, let's not spend a minute on the past only on our future together.\"\n\n\"You really mean that Richard?\" she said looking into his eyes.\n\n\"Yes, yes I do,\" he said sincerely then grinned and added, \"beside it will be great to be a rich widower.\"\n\n\"Oh you beast, you utter utter beast,\" she laughed jumping up to sit in his lap.\n\nSix months later this notice appeared in the local newspaper:\n\nMartha Stratharn and Richard Koss are happy to announce their wedding this Saturday past.\n\nThe bride was given away by Mr. Jeffrey Chambers. Deputy Sheriff Edward Wilson was Best Man. Mrs. Debra Carter was Maid of Honor. Mr. Michael Carter was witness. The ceremony was presided over by The Honorable Judge Douglas Merritt. The bride and groom intend to honeymoon and live wherever the wind takes them.\n\nThank you for taking the time to read this. As always please vote and leave feedback."
    ],
    "authorname": "oldtruckdriver",
    "tags": [
        "mature",
        "older woman",
        "oral sex",
        "younger man"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/marthas-second-chance"
}