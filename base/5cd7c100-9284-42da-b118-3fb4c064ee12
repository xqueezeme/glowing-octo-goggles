{
    "title": "Against the Law Ch. 03",
    "pages": [
        "She took her time getting ready.\n\nA long, hot shower, giving herself time to think about the evening to come. Choosing her outfit carefully, enjoying the feel of the silk stockings as she rolled them gently up her legs. \n\nShe thought about him. They'd finally giving up fighting their connection after the incident at the office, after she'd been nearly assaulted or worse, and he'd saved her. Maybe it was the thought that life was too short. Maybe it was the heightened emotions of that moment that thrust them past denials and into bed that night. But really, it was just a matter of time. They both realized that by now.\n\nThey had been quietly dating below the radar for a few weeks and that was the only thing quiet about it. Their mental connection remained strong, but their physical connection was overwhelming. The first time they had given in to it was when they both were surprised it was each other when she got pulled over for speeding, and his erotic search of her after.\n\nShe looked in the mirror, smiling as she buttoned her fitted black dress, remembering his hands on her ankles, her thighs....everywhere. As she put on her red lipstick, she realized that was probably why his job as a police officer often stole into their sexual encounters. Either as a law enforcer or a hero, role playing with that heightened the intensity, lifted them up.\n\nShe certainly would been sexually attracted to him regardless of his job, and realized that was because he was first of all, hot, and second of all, because those aspects of his personality were intrinsic to who he was \u2014 his sense of duty, of right and wrong.\n\nBut as she took her perfume and rubbed it gently into her wrists, and her neck, and down the warmth of her cleavage, she had to admit to herself there was really nothing hotter than him in his uniform. He got her hot many ways. She particularly liked him in his casual t-shirt and baseball hat on backwards. \n\nBut the uniform was beyond compare, and she challenged any woman to deny he was a sexual force to reckon with in his pressed blues, and his tall muscular frame, and his dreamy blue eyes.\n\nAnd that's why she had something special planned for tonight. Something she really hadn't done yet. And she wanted to do it in the way she'd been fantasizing about it. Fixing her hair in a tousled bun on her head, she glanced at her face in the mirror, smoky eyes, red lips, checked her dress, felt for her garters to make sure they were secure.\n\nShe was ready. She looked every bit the repeat offender, the speeder, the troublemaker.\n\nAnd she left the house, ready to break some laws.\n\n+++++\n\nHe'd just finished getting dressed in his apartment \u2014 almost time to go.\n\nShe had given him specific instructions and he had learned not to ask questions by now. She'd never steered him wrong. Over the last few weeks she'd opened up so many erotic windows in his mind, heart and body. The sex had been incredible and ethereal, unlike anything he'd experienced before.\n\nHalf the time he couldn't figure out why what she said or they did pushed his buttons in that particular way. He was sure part of it was the honeymoon stage of a new relationship where they couldn't keep their hands of each other, but there was more to it.\n\nThere was a mental connection he couldn't place, where they could read each other wants without them being said. And her egging him on using his job as a cop just when he thought he couldn't get any more turned on while he was fucking her completely surprised him. Why did it turn him on? He couldn't figure it out, but it felt so good he really didn't care.\n\nSo as he looked in the mirror, dressed, pressed, polished, badge glimmering in the setting sun, he was happy to give her what she wanted tonight \u2014 the powerful, steely eyed man of the law. That was who he was, wasn't it? So it wasn't really a role. It was another part of him.\n\nThere was only one problem he could foresee \u2014 his outside looked intimidating enough. It was the inside that he had to try and keep serious, because she made him laugh so easily and often. It was one of the sexiest things about her. She could totally take him off guard with her sense of humor.\n\nBut tonight, as he stared at himself in the mirror, he focused. He'd do his absolute best to be the law enforcer of her dreams. He checked himself once more. His buttons fastened, his blues looking sharp. He thought he was pulling it off pretty well. \n\nOne more thing \u2014 he'd almost forgotten. He reached for his gun and emptied it, leaving the ammunition behind \u2014 now just a prop in whatever adventure was in store for him.\n\n\"What do you want me to do with that?\" he'd said earlier, when it was part of her instructions.\n\n\"You'll know,\" she said.\n\nHe trusted her. He grabbed his keys and headed out to bust some troublemakers.\n\n++++++ The sun was setting as she turned onto her street. Her heart raced as she eyed her rear view mirror. A cop car pulled behind her, and it went from racing to jumping. It seemed lately her body reacted to police cars or sirens like Pavlov's dog \u2014 she'd get wet immediately. It was almost embarrassing.\n\nHer heart sank as the cop car turned off onto a side street, until she saw there was another one behind it. Instinctively, she knew it was him. She smiled.\n\nAs she got closer to her house, the lights went on behind her, and her smile got bigger. Her breathing got faster, and she pulled up her long driveway with him on her tail.\n\nShe pulled up and stopped the car in the dark driveway.\n\nHe pulled up next to her. She rolled down her window.\n\nHe got out and had she been standing she might have dropped with weakness of the knees. She'd never seen him looking more official, more intimidating.\n\nOr hotter. \n\nHe went over to the window.\n\n\"You again?\" he said.\n\n\"I'm sorry officer,\" she said, struggling like hell not to smile.\n\n\"Didn't I just let you off the hook for speeding a few months ago?\" he said, playing the part perfectly.\n\n\"Yes, sir,\" she said, looking guilty.\n\n\"Get out of the car,\" he said, sounding convincingly angry.\n\nShe got out.\n\nHe also was thrown looking at her. She looked sexy as hell \u2014 her dress was buttoned just enough to show her cleavage amply \u2014 a little too much, but not for him. She was made up to look just suggestive enough. Just the kind of girl who'd be likely to do what she was about to do. Her hair was tousled like she just rolled out of bed \u2014 a bed she wasn't sleeping in.\n\nHe fought to control himself and stay on point.\n\n\"You just don't learn your lesson, do you?\" he said.\n\n\"I know, it's just...can I explain?\" she said.\n\n\"Go on. Let's hear the excuse,\" he said, arms folded, towering over her. She leaned her back against the car.\n\n\"Well, you see, officer, I was heading to see my boyfriend, and I get so excited to see him that it is so hard to drive under the speed limit,\" she said.\n\nShe was so convincingly campy that his mouth struggled for a bit to stay set and not laugh.\n\n\"Is that so?\" he said.\n\n\"Yes, he drives me a little crazy, I guess, and he's waiting for me. I had a surprise for him tonight, you see,\" she said, twirling her hair in her finger.\n\n\"Sounds like a lucky guy. Too bad he'll have to wait a bit longer,\" he said.\n\n\"Please, officer, don't give me a ticket,\" she said, leaning to pretend to adjust her hem, giving him a full view of her black lace bra under her dress.\n\n\"I'll do anything,\" she said.\n\nHe reached for his gun now, pulling it out in an intimidating fashion.\n\n\"Did you just solicit a police officer?\" he asked.\n\n\"Me, no! Of course, not. I just ...just... how much would the ticket be?\" she said.\n\n\"It's the second time, ma'am. I have to be harsh. We're probably looking at over $500,\" he said, taking out his paperwork. \n\n\"$500! But......but I don't HAVE that kind of money,\" she said.\n\nHe held his gun up in front of him again, aggressively.\n\n\"Maybe you should have thought of that before you were so risky with your driving,\" he said.\n\nHe turned to process the ticket.\n\n\"Surely we can work SOMETHING out?\" she said, fingering the top button of her dress.\n\nHe turned back, looking at her.\n\n\"Such as?\" he said, trying not to smile.\n\n\"Well,\" she said, leaning casually down again to lift the hem of her skirt and adjust the top of her lace stocking bound in her garter belt.\n\nHe closed his eyes tightly for a minute.\n\n\"I don't know...there's got to be something I can do for you,\" she said.\n\nHe held his gun in his hand again tightly.\n\n\"Officer, that gun is so big and scary. Do you think you could put it away?\" she said.\n\nHe chewed the inside of his lip intensely to drive the laugh away that rose to his lips, and turned away to hide it for a second.\n\nHe recovered and turned back.\n\nHe pointed the gun at her.\n\n\"I'm in charge here, and I'll be giving the orders. So maybe we can work something out that will cut you some slack and get you on your way to little boyfriend,\" he said.\n\nShe smiled.\n\n\"I would be SO grateful. SO grateful,\" she said dramatically.\n\n\"Ok. How about we start with that top button. Open it,\" he said, still pointing the gun at her.\n\n\"Which one? You mean this one?\" she said, fingering the one at the bottom of the deep V that she'd already left open at the top her dress.\n\n\"Yes, that one,\" he said, firmly.\n\n\"But...but, I was thinking more along the lines of making you some brownies or something...,\" she said, acting shy.\n\nHe did laugh that time.\n\n\"Then you thought wrong. So do you want out of this ticket, or not? Open it,\" he said, holding the gun but not pointing it at her.\n\nHe leaned against his car now, waiting.\n\nShe slowly opened the button for him, revealing more of that lace bra he'd seen earlier.\n\n\"Is this what you want?\" she said, looking him the eye. \"It's a start. Now the next one,\" he said.\n\n\"Oh my,\" she said, feigning innocent shyness.\n\nAgain he tried not to laugh.\n\nShe opened the next button.\n\n\"Is that enough?\" she asked.\n\n\"I'll tell you when it's enough,\" he said authoritatively, and she melted inside.\n\n\"It will be enough when you're finished with all of them,\" he said.\n\n\"Ok, but....,\" she started.\n\nHe stood up and said \"What?\" sharply.\n\n\"Well, nothing, you'll see, I guess,\" she said, twirling her hair a little again.\n\n\"Let's go. Finish,\" he said.\n\nSlowly she opened her buttons, their eyes never leaving each other.\n\nAs they opened, one by one, her dress opened to reveal her black lace bra, lace panties, a violet lace garter belt, and thigh high lace-topped stockings.\n\nRevealed, she leaned her back against her truck, hands flat against it, and waited, a hint of smile at her lips.\n\n\"Wow,\" he said, moving toward her.\n\n\"So is this your boyfriend's surprise?\" he said.\n\n\"Part of it,\" she said.\n\n\"What's the other part?\" he said.\n\n\"I can't tell you,\" she said, looking down.\n\nHe moved swiftly toward her, pressed against her with the gun between them.\n\n\"You'll tell me,\" he said.\n\nShe looked at him then, still with a faintly saucy look in her eye.\n\n\"I just can't,\" she said, urging him on.\n\n\"You better tell me, because we're no longer just talking about a speeding ticket,\" he said, threateningly.\n\n\"But...?\" she said.\n\n\"Now, I could arrest your for trying to solicit or bribe a police officer,\" he said.\n\n\"But I didn't!\" she said.\n\n\"Oh yeah?\" he said, moving a little back from her.\n\n\"Let's say I take you to the police station right now,\" he said, and he moved the gun to her thigh, under the strap of her garter, moving it up and down.\n\n\"And I show them this outfit,\" he said.\n\nHer eyes fluttered as the gun moved to her other thigh, and then up, between her legs, moving it back and forth against her pussy through her panties.\n\nHer fingers dug into his arms.\n\n\"You think they'll believe you when you tell them you weren't trying to seduce me?\" he whispered to her, moving the gun up her body now, over her bra, up to her face...to her mouth.\n\nThe tip of his gun was at her mouth now, and she reached out with her tongue and licked it.\n\n\"That's better,\" he said.\n\n\"Now tell me \u2014 what was the rest of the surprise?\" he said.\n\n\"I was going to give him a blow job for the first time,\" she said, looking right into his eyes.\n\n\"Oh yeah?\" he said.\n\nHe teased her mouth with the tip of the gun.\n\n\"Well then maybe you can practice on me first,\" he said.\n\nThe feeling of his gun at her mouth was so erotic. It was hard for her to not want to lick it, taste it \u2014 do naughty things with it.\n\n\"You do that, and we'll call it even, Little Miss Speeder,\" he said.\n\n\"Oh yeah?\" she whispered.\n\n\"Oh yeah,\" he said.\n\nShe looked at the driveway.\n\n\"But I'll tear my stockings...,\" she said.\n\nHis hand moved behind her to grab her ass.\n\n\"Maybe you should have thought of that before you broke the law,\" he said.\n\nShe smiled at him.\n\n\"Can I ask one thing?\" she said.\n\n\"What's that?\" he said.\n\n\"I think you need to at least kiss me first, officer. I have never given a guy a blow job who hasn't even kissed me yet,\" she said.\n\n\"That's fair,\" he said.\n\nHe dropped his gun on the ground, moving toward her, and he took her hips in his hands and easily lifted her up on the side of the truck so she was in the air, closer to his mouth.\n\nShe wrapped her legs around his hips as he leaned in to kiss her, their open mouths meeting, the kiss dirty and hot, a kiss between strangers and not strangers. He kissed her mouth hard, rough, messy, and left her breathless.\n\nThen he pulled away with her mouth chasing him back.\n\n\"That's enough...,\" he said, but it was too late, her mouth caught his to suck him into the kiss again, hungry and hot, her fingers in his hair, her legs tightening around his hips. They were slipping out of their role playing and into that fire they couldn't fight \u2014 sensing it, he pushed her back.\n\n\"What do you think this is, a date?\" he said, catching his breath.\n\nShe smiled at him as he lowered her back to the ground and picked up his gun.\n\n\"There, I kissed you. Now let's get this overwith. I can't be here all night. And your boyfriend is somewhere waiting,\" he said, coldly.\n\nHe buried his hands in her hair and pulled her face to him.\n\n\"Waiting for a surprise I'm getting first,\" he said.\n\nStill eyes to eyes, he felt her hands at his belt, his pants, and moved to his gun.\n\n\"Watch it,\" he said.\n\n\"I just wanted to tell you that you don't need that anymore,\" she whispered.\n\n\"Because actually, you're pretty hot, for a cop,\" she said.\n\n\"Oh yeah?\" he said.\n\nHer hands found him now, hard, and ready, and she gently stroked his dick as she talked to him.\n\n\"Oh yeah,\" she said.\n\nHe pushed the dress off her shoulders.\n\n\"You're pretty hot yourself \u2014 for someone who doesn't learn her lesson,\" he said.\n\n\"You think?\" she said, watching his eyes as she stroked him. She could see he was breathing faster.\n\n\"Oh yeah,\" he said.\n\n\"You might want to stand with your back against the car,\" she said.\n\n\"Why's that?\" he said moving backwards.\n\n\"You'll see,\" she said.\n\n\"By the way,\" she said, looking up at him, smiling, \"I'd appreciate any constructive criticism you can give me, because I REALLY want make sure it is PERFECT for my boyfriend, of course.\" \n\nHe laughed out loud. He couldn't help it \u2014 but the laugh caught in his throat as she fell to her knees and swallowed his dick deep into her throat, and let it slowly slide back out.\n\n\"Jesus,\" he whispered, letting the gun fall from his hand to the ground.\n\nHer fingers dug into the backs of his thighs as she sucked him, slowly, in and out of her mouth, over and over, teasing the tip of his dick with her tongue, making circles around it. Her tongue worked him under and over as she very gradually increased her speed.\n\nAnd it was hard for her because he was so delicious to her, she was soaked from doing it, in his uniform, against his police car, her stockings shredding on the pavement, his fingers in her hair. \n\nHe let go to loosen his collar and open the top buttons of his uniform shirt. It was suddenly getting harder and harder to breathe. His knees weakened and he rested his back against his car to hold him upright.\n\nAnd still she was relentless, now with her fingers stroking him, her hands chasing her mouth to always have pressure around his aching dick, up and down, up and down, in and out, and in and out. He could hear her sighing and moaning between his legs.\n\nOnce again she could read his mind knowing just when he wanted her to go faster, faster.\n\n\"Oh God,\" he sighed over her, and it was such a fucking turn on to see him turned inside out like that. \n\nNow it was so fast, and he was close, she could feel it, taste it.\n\nShe stopped and looked up at him. \n\n\"Oh God,\" he said, looking down at her. \n\n\"Don't stop. Don't,\" he said.\n\n\"So this does mean I get off?\" she said, smiling.\n\nHe laughed.\n\n\"You get off all right. Right after you finish this you'll get off big time,\" he said.\n\nShe smiled and once again her ravenous attack on his dick stopped his heart and his breathing.\n\nHer mouth was wild, her tongue teasing, taunting, her fingers teasing his balls, as she worked him to the brink, saving her fastest speed to push him over that edge.\n\nShe felt him tense, felt his body against the car tighten, and then release, filling her with his delicious orgasm, and she eased him into it and out of it, softly sucking him, working him, until he was done.\n\nThe back of his hand was against his forehead as he just breathed for a minute.\n\n\"Holy fuck,\" he said.\n\nShe tried to stand but in her eagerness she'd scraped both knees and her legs were wobbly from being in that position for so long.\n\nHe lifted her easily, his arms cradling her, and sat her on top of the police car, standing between her legs.\n\n\"That bad?\" she said, smiling.\n\n\"Are you fucking kidding me?\" he said, laughing, as she opened another button on his uniform shirt.\n\n\"All I have to say is that boyfriend of yours is one lucky guy,\" he whispered to her.\n\nShe had worked his shirt open and found his nipple with her tongue.\n\n\"Oh God,\" he said.\n\nThe air was on fire all around them, between them \u2014 erotically, sexually charged. She couldn't see through the haze, just felt for his mouth with hers, with her tongue. His hands ran up her thighs, reached her panties and ripped them in half.\n\n\"I love these,\" he said, feeling her garters and stockings.\n\nHis fingers worked her \u2014 she was so wet and ready \u2014 quickly, deep and hard, and she came immediately, and again.\n\nHe kissed her hard, swallowing her orgasm.\n\nHe pulled away, whispering to her.\n\n\"So are we me and you again,\" he said.\n\n\"We are always me and you, baby,\" she said, teasing his mouth with hers.\n\n\"There's something inside you that likes to keep me in line in your uniform. There's something in me that loves to be naughty for you and something you love about it,\" she whispered back.\n\n\"You're right. I do. But I'm just wondering if I'm back to being the lucky boyfriend,\" he said.\n\nShe laughed. \n\n\"Yes, you are,\" she said.\n\n\"Just making sure,\" he said.\n\nHe buckled his belt and lifted her off the car. He threw her over his shoulder, sore knees and all. \n\n\"Before the lucky boyfriend gets lucky again,\" he said, heading into the house.\n\n\"Really romantic, officer. Put me down,\" she said, punching his back, laughing.\n\n\"I thought we clarified that I'm the one who gives orders around here,\" he said, smiling. \n\nAnd gave her ass a smack to make sure she got the message.\n\nThe End."
    ],
    "authorname": "Lucy1970Harker",
    "tags": [
        "roleplaying",
        "dominant",
        "submissive",
        "blow jobs"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/against-the-law-ch-03"
}