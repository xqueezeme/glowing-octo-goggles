{
    "title": "Brave New World",
    "pages": [
        "\"Can we talk?\"\n\nI laughed into the phone. \"Are you channeling Joan Rivers?\"\n\nSteph giggled and said she was serious about talking. \n\n\"I take it you don't mean over the phone like we're doing right now.\"\n\n\"No, this is a face-to-face talk.\"\n\n\"Is something wrong? Are you sick? No, are you and Cory breaking up? God, what happened? Did he cheat on you? I'll kill him.\"\n\n\"Marnie, slow down,\" Steph said. \"It's 'No' on all those things, but I need to see you. How about lunch on Saturday?\"\n\nI was planning to go shopping, but Steph sounded stressed. \"Okay, can we meet at Checkers at the mall? I can then get some shopping done after lunch.\"\n\nWe agreed on a time and Steph rang off. To say she's my best friend would be a big understatement. She is more like my other half. Ever since we literally ran into each other freshman year of college, we've been the most important person in each other's lives. Well, that was until she met Cory about a year ago. I like him and seeing her happy is worth seeing her fewer and fewer times. I do miss her, though.\n\n*** \n\nSeven Years Before \n\nLiving with forty other girls in a dorm took a lot of adjustment on my part. Coming to school as an only child, I was overwhelmed soon after my parents left me in my dorm room. I met my new roommate and I think we both immediately knew this was not a match made in heaven.\n\nI was dressed in my usual classic-cut, pastel-colored outfit. She was bordering on Goth. I still did a hundred brush strokes a night in my soft brown hair while she ran her gel covered fingers through her hair that, when I first met her, was purple, but would also be pink, red, orange, green and a combination of all of those colors on any given day. Her name was Kimberly, but she insisted on being called \"Chain\". I said \"Chain?\" to be sure I heard right. She stared at me and asked if I had a problem with it. So, Chain and I began an uneasy co-habitation.\n\nBefore bed that first night, I changed into pj's in the bathroom. She stripped bare in front of me. I gawked at the two nipple rings, belly-button ring and shaved pubic area. I also noticed the star tattoo on her pubis, where everyone I knew had hair. She had a little heart on her hip, a tramp stamp resting above her butt and some sort of Chinese characters on the inside of her upper left bicep. Later in the semester, she added a ring in her, what can I say, sex lips. While I rarely said \"damn,\" I think the only adjective she knew was \"fucking.\" \n\nIn spite of how she had decorated her body, I had to admit she was attractive. With a bridge of light freckles across her nose, her face was pretty and wholesome-looking in sharp contrast to her dark make-up, nose ring and at least four piercings in each ear. The rings inserted in her long and hard nipples attracted attention to her small breasts. She was lean and toned. I tried not to stare at her bare pubis, but it was impossible not to notice the lack of hair while I was thinking about how tight her sex lips were. When she turned to get a t-shirt from her dresser, I evaluated her butt. The shape was not quite heart-like and her cheeks looked round and firm. I shook my head to stop staring. I wondered if I were going to be subjected to this nudity on a regular basis.\n\nOne week into my first semester and I was seriously thinking of calling my parents to come get me. I was homesick and hadn't met any friends. The number of women I had to deal with on a daily basis as we tried to get our showers in and bathroom duties completed was more than stressful. Trying to accommodate living with another person in the same room and adjusting to her frequent nudity was keeping me on edge. Then I ran into Steph-literally. \n\nComing out of the bathroom one morning, I was trying to balance my shower caddy with one hand and hold my towel in place with the other. I turned the corner to go down the corridor to my room and ran straight into Steph. She was headed to the bathroom and had her head down looking at her iPod. She screamed, my caddy went flying and I fell flat on my butt. My towel popped open and my breasts were on display. \n\nBefore I could even move, Steph bent over and started picking up my scattered shampoo, soap, conditioner and other stuff. She looked at me and smiled.\n\n\"Hi, I'm Stephanie Marshall. Sorry about knocking you on your ass. Nice tits, by the way.\"\n\nI know I was scarlet with embarrassment, but managed to reply, \"Marnie Adams. No problem, but I always thought they were kinda too small.\" I was more than a little impressed with my quick comeback, which wasn't typical for me, especially since it involved my own body.\n\nSteph looked directly at my exposed breasts and then slowly upward until our eyes met. \"Nah, they're good.\" She smiled, showing straight white teeth behind her full lips.\n\nShe lifted my shower caddy and stood, while I clumsily held my towel and gained my footing. After I re-secured the towel, I held out my hand for the caddy.\n\n\"Hey, Marnie Adams, let's have lunch today. When are you free?\n\n\"Uh, I'm finished at one.\"\n\n\"Meet you at the dining hall.\" She moved past me and disappeared round the corner. \n\nI felt nervous as I walked into the dining hall. I didn't even know this girl and I had agreed to have lunch with her. Looking around, I finally spotted her leaning against a wall, her head moving to whatever was piping through her ear buds. She was dressed in jeans and a pink tank top. Her brown hair, pulled back into a loose pony tail, bounced in rhythm to the music I couldn't hear. Steph was about an inch or two taller than I was and had a much fuller figure. Her breasts filled out her tank top and as she swayed her hips, I could see her well-formed butt. She was also about the most beautiful girl I had ever seen. \n\nShe must have sensed me staring and looked up. A wide smile lit up her face and she walked toward me as she pulled the buds from her ears. Her brown eyes seemed to burn into mine.\n\n\"Yo, Marnie, you came. Thought you might stand me up.\"\n\n\"Uh, this isn't a date,\" I said. \"Is it?\"\n\n\"What? No, just happy to meet someone who could possibly be normal. All I've run into up to this point are Goths, Barbie-wannabes and drama queens. Not into girls, actually. Well, not up to this point. How about you?\"\n\n\"How about me, what?\"\n\n\"Are you into girls?\"\n\nI wanted to shout no, but no words were coming out of my mouth, which was suddenly totally dry and hanging open.\n\n\"Should I take that as a 'No'?\" she said and grabbed my arm. \n\nI was finally able to nod and croak out a \"Straight\" before my throat closed up completely.\n\nSteph laughed again. \"Come on, Straight Marnie, let's eat.\"\n\nOver lunch we began to share our backgrounds. We were from different parts of Pennsylvania. Steph was from Pittsburgh in the west and I was from Scranton in the northeast. She had two sisters, both older and both graduates of the college in Philadelphia, where we now sat. Steph had an easy way about her and a sly sense of humor. She had me laughing through most of the meal.\n\n\"Marnie, I'm really happy we ran into each other. I think we could become friends. What do you say we hang out and see what happens?\"\n\n\"I guess so,\" I replied.\n\n\"God, Marnie, relax. College is all about meeting people and making friends. Learning about life, taking chances, getting educated, and growing up. Well, I hope it's also all about meeting guys and getting laid. I am desperate to turn in my v-card. How about you?\"\n\nOnce again, she lost me in her running train of thought. \"How about me, what?\"\n\n\"God, Marnie, are you a virgin or what?\"\n\n\"I am definitely not an 'or what'\", I said.\n\nSteph laughed so loud other kids turned to look at us. \"You know, I think you just might have a sense of humor buried in there.\"\n\nI grinned and accepted what I hoped was a compliment.\n\nSteph suggested we meet up for the dorm mixer on Friday night. I agreed and we were carrying our trays to the belt when she turned to me.\n\n\"Hey, I didn't mean to freak you out this morning, you know, with the nice tits thing. It's just that you looked so cute sitting there with your towel around your waist. And, they are nice tits.\"\n\n\"Really? You think so?\"\n\n\"Definitely, Straight Marnie. Guys will be following you around to get their hands on them.\"\n\n\"That would be a first,\" I said.\n\n\"Ain't college great?\" she replied and leaned in to kiss my cheek before heading back to the classroom building. I slowly walked back to my dorm and tried to figure out what just happened.\n\nIt took almost two months before I realized I had met my best friend in life and about the most important person I would ever know. Knowing Steph even helped me cope with Chain. Steph helped me see that the world was full of people not like us. I introduced them when Steph stopped by so we could go out for lunch on a Saturday. She invited Chain and I almost fainted. Chain declined the invite.\n\nA week later Steph told me that she thought Chain was pretty cool and probably wanted to be accepted, just like everyone else.\n\n\"Why does she dress like that or have all the piercings and tattoos if she wants to be accepted?\" I asked.\n\n\"Why do you look like you order your clothes from some 'Normal Girl' catalogues?\" she teased.\n\n\"I dress like this because I like how I look?\" I answered.\n\n\"And, because you think it will help you fit in to whatever notion you have about what the social order is,\" Steph countered.\n\n\"I never thought about it that way,\" I admitted.\n\n\"That's because you come from a stable home, are pretty and smart and probably don't have a lot of negative body issues.\"\n\nSteph had pretty much hit the mark and I shrugged.\n\n\"Well, what if your parents had split, you had hardly any support from either one, including financial support, and you felt your body was undesirable? Do you think you might act and dress differently?\"\n\n\"Maybe,\" I said. \"Wait, are you saying that's the deal with Chain?\"\n\n\"Have you talked to her about her life?\" Steph asked.\n\n\"No, I didn't think she wanted to talk with me.\"\n\n\"She's intimidated by you, Marnie. You represent all the pretty girls in school who either never even acknowledged she existed or made fun of her.\"\n\n\"How do you know all this?\" I asked.\n\n\"We have a psych class together and after I knew she was your roommate, I made it a point to talk with her.\"\n\n\"God, Steph, you are like way more pretty and popular than I am. I think she'd be more intimidated by you than she would by me. Did she really open up to you?\"\n\n\"Yeah, I made a couple jokes and once she laughed, she was mine.\" Steph gave me her 1,000 watt smile.\n\n\"Marnie, Chain dresses, swears and acts the way she does as a defense. She assumes no one will like her for herself, so she creates a persona\u2014that's a term I learned in class\u2014that is designed to keep people away. If you notice, she really doesn't hang with the other Goths. She's really lonely.\"\n\nSeeing Chain in a whole new light, I was able to relax around her. We eventually formed some sort of a d\u00e9tente. We didn't mix socially a lot at first, but could talk with each other in our rooms. When I confessed to being lonely too, she slowly began to open up. I made sure I also let down my shield and revealed more of myself - emotionally, not physically. I wasn't up for strutting around naked in front of Chain. Eventually she and I wound up going out to lunch on the odd weekend. Steph joined us on many of those outings.\n\nI helped Chain with math and science and she was a good writer and edited all my papers. I never thought we would be BFFs, but we did acknowledge a certain respect for each other and became closer and closer. \n\nI remember one instance when I think she began to understand that I was not judging her in a negative way. It was midway through the first semester, when our relationship became something we both needed. We had just come back from dinner and Chain stripped to go take a shower. She was standing nude in the room. \n\nI don't know what came over me, but I said something I never thought I would.\n\n\"Chain, you have a really nice body.\"\n\nShe glared at me. I kept my face calm.\n\n\"Cut the fucking shit, Adams,\" she said. \"You probably think I'm some fucking freak.\"\n\n\"No, I don't. You are really pretty and have a nice body. I'm just telling you the truth.\"\n\nShe stared at me for a long time waiting for the smile to let her know I was making fun of her. It never came.\n\n\"You're serious?\"\n\n\"Yeah. And here's another thing,\" I said and paused.\n\nChain stood with her arms crossed under her small boobs.\n\n\"I like that we're roomies. I'd like to think we could be friends, too.\"\n\nI could see her breath catch in her chest. She started shaking and then the most amazing thing happened. Tears began rolling down her cheeks, leaving black trails from her mascara.\n\nI walked to her and opened my arms. She slowly came to me and I embraced her. Her tears turned to sobs and I rubbed her back as she cried. When she got herself under control, she squeezed me and stepped back.\n\n\"Please be honest with me,\" she said. \"I don't think I could take it if you're punking me.\"\n\n\"No punking, Chain. Let's make a deal that we will be best roomies. I want to get to know you a lot more\u2014like being friends.\"\n\nShe nodded and grinned for about the first time since I met her. She rubbed her cheek and saw the black mess on her hands. \"God, I gotta take a shower. I must look like fucking shit.\"\n\nShe wrapped her towel around and left the room.\n\nReturning, she dropped the towel and dried her hair with it.\n\n\"You really think this bod is nice? I have no fucking tits, Marnie. Like none.\"\n\n\"Yeah, you have small boobs, Chain, but they are really nice. Your long legs are what other girls dream about. Plus, you are pretty. I mean your face is really attractive. I'm not making this up.\"\n\nChain regarded her naked body in the full length mirror. \"You didn't mention my fucking non-existent ass,\" she said catching my eye in the mirror's reflection.\n\n\"Sorry, an oversight. Awesome ass, babe.\"\n\nWe both cracked up and for the second time that night and in my life, I received a hug from a naked woman.\n\nAfter that Chain and I really did work hard to form a friendship. We each had to compromise and there were more than a few rough spots, but I think we did become true friends. By the end of the semester, we began to genuinely like each other. \n\nDuring our second semester, we did become true friends and shared lots of girl talk. I discovered she was not as hard as I imagined and I think she realized I was not as dull as she thought I was. I hope she also realized that I was not a snob and didn't have negative thoughts about her.\n\nAlthough we weren't roomies after freshman year, she and I kept in touch. I still text and talk with her and to this day we try to get together once in a while.\n\nOf course, after freshman year, Steph and I roomed together. They were about the best three years of my life to date.\n\n***\n\nPresent Day\n\nAfter parking close to the north entrance of the mall, I went inside and headed to Checkers. It was nothing special, just the usual national chain you'd find in any mall. I secured a table where I could watch the entry and ordered a Diet Coke. Ten minutes later Steph burst through the door. She never slinks into a room; today she exploded. There always seemed to be an aura of energy buzzing around her. She spied me and was sitting across from me in a few seconds. After taking a long sip from my drink, she smiled and told me I looked good.\n\nSteph was forever complimenting me. It was not put-on and usually specific. Today she commented on my cotton V-neck sweater I wore over a white tee. \"Marnie, you have a great sense of style. That looks so good on you and it shows off your nice tits.\" Ever since that first day, Steph usually managed to work in a remark about my boobs. I think she enjoyed seeing me blush.\n\nWe were three years post-college and both doing well in our careers. Still, when we got together we were like those two goofy college girls just learning about life. No one could make me feel as good as Steph. Any cares I might be carrying seemed to float away the moment I saw her. True to her nature, she had me laughing out loud as the waitress approached.\n\n\"Hi, Gwen,\" said Steph reading the name badge. \"We're going to have lunch, but first we need two really big Bloody Marys.\"\n\nGwen smiled and moved off. \"Steph, I'm happy with my diet cola. I don't want to start drinking so early.\"\n\n\"Straight Marnie, you're going to thank me for the alcohol. Trust me.\"\n\nI tried to understand what she was alluding to, but she just gave me her sweet smile. Gwen reappeared and set our drinks down.\n\nWithout asking me, Steph placed our order.\n\n\"Gwen, we'll each have the chicken Caesar salad and we'll split an order of fries. Also, check your watch and in seven minutes bring another round of these red delights.\" Gwen looked at the untouched Bloody Marys and nodded.\n\nAfter she left, Steph raised her glass and offered a toast. I mimicked her and asked what we were toasting.\n\n\"Marnie, I am hoping for two things. Courage and understanding.\"\n\nAfter swallowing my first sip, I must have shown confusion. \n\n\"Courage for me and understanding from you,\" she said and took another big swallow.\n\n\"What are you talking about, Steph? And, why was it so important to meet face-to-face?\"\n\n\"Drink up, darling,\" she said and smiled. I took another sip and set my glass down.\n\n\"Really, Steph, what's going on? Are you sure you're okay?\"\n\nSteph finished her drink and took a deep breath. I waited.\n\n\"Cory turns thirty this month,\" she said.\n\n\"So? You're planning a big surprise party and need my help?\"\n\n\"Ah, sorta. I mean the surprise part is right and I definitely need your help.\"\n\nShe was not making any sense. I became more confused when she snatched my glass and drained it. \n\n\"Well,\" she said, \"Cory and I have been doing great. I think I might have mentioned that the sex between us is just fabulous.\"\n\n\"Yes, bitch, you never fail to give me all the lurid details, including the size and lasting power of his dick. Since I am presently on month nine of my involuntary hiatus from sex, I truly appreciate hearing about what you two conjure up.\"\n\n\"Hey, you turned down 'John What's-his-name.' Don't blame me.\"\n\n\"He was a total asshole and his breath could peel paper from the wall. Why'd you think I'd be interested?\"\n\n\"I told you,\" she said with a grin, \"Cory told me the guy was hung. I thought maybe you could hold your breath or something.\"\n\nWe both giggled. \"Thanks, Steph, but don't bother sending any more of that my way. I'll be fine.\"\n\n\"You still have Arnold, right?\"\n\nArnold was the vibrator that Steph gave me for my last birthday. We treated it as a gag gift at the time, but both of us knew it probably was needed. I was between men. And, by that I meant, I hadn't had a decent night of sex in ages. So, Arnold and I have become a steady couple.\n\n\"Not quite the same thing,\" I said sighing dramatically.\n\n\"Well, that is a great opening to my proposition.\"\n\n\"Proposition?\"\n\nSteph looked past my shoulder and spied Gwen heading our way with two new drinks. She spoke quickly.\n\n\"Yeah, for Cory's birthday I want to give him a three-way and you have to be in it.\"\n\nGwen arrived and started to set down the drinks. I snatched mine from her hands and drank most of it in one long action. \"More, please,\" I said.\n\n\"See, I told you you'd need the alcohol.\"\n\nThe vodka was hitting my brain, but that was not what was making my vision fuzzy. My best friend just propositioned me. My entire world was spinning off-center.\n\n\"Steph, you can't be serious. Tell me this is a joke.\"\n\nSteph drained half of her glass. \"Nope, babe, super serious. We've talked a lot about this and I want to do it for him.\"\n\n\"We've never talked about this,\" I sputtered.",
        "\"Not you and me. Me and Cory. You know, sex talk in bed. We got into fantasies and he, surprise, said he always thought a three-way would be fun. I asked him if that meant I wasn't enough for him. He told me I was perfect. But then he said, couldn't I imagine you and me making love with him. Once I got that image in my head, it just wouldn't go away.\"\n\nGwen appeared with our salads, fries and another round. She asked if there was anything else. I was tempted to inquire if she were interested in having a three-way with my best friend and her boyfriend. After all, Gwen was cute and it would take me off the hook.\n\n\"I think we're all set,\" said Steph.\n\n\"Hardly,\" I thought.\n\nAs soon as Gwen left, I leaned across the table and whispered, \"You're joking with me, right?\"\n\nSteph popped a French fry in her mouth, washed it down with some Bloody Mary and said, \"Nope. Dead serious.\"\n\n\"Stephanie Marshall, what makes you think that I would be interested in this insane idea?\"\n\nSmiling, Steph took my hand. \"Well, for one thing, you've had the hots for Cory like forever.\"\n\nI recoiled. \"No way.\" I couldn't believe I had been that obvious.\n\n\"It's okay, Marnie. Cory and I have talked about it. It's kinda cute, in a way. And, I'm not jealous. I think it's sweet that you agree I have a hot guy.\"\n\nMy salad was probably wilting right in front of me from the heat blasting from my face. I didn't know what to say. I wanted to totally deny everything she said, but the truth was I did have a bit of a crush on Cory. He was really cute, smart and a nice guy. I always thought I was successful in hiding my desires, but I was now realizing that was not the case.\n\n\"I'm not admitting anything, understand, Steph? But, just for the sake of stopping this ridiculous conversation, say I did think Cory was hot? Remember, it's hypothetical, but if I did, you really want me to have sex with him?\"\n\nSteph somehow was able to eat her salad. My stomach was doing a great imitation of an erupting volcano. She sipped her drink and said. \"Marnie, you have to understand that he is so good in bed that it would just blow your mind. He has a really nice dick. It's big enough, looks good, gets super hard and lasts a long time in bed. Besides, what are friends for if not to share?\"\n\nI tried to wipe my mind clean of an image of a naked Cory with a super hard penis crawling up my similarly naked body. \n\n\"But, Steph, a three-way means that, well, that you and I would also be having sex.\"\n\n\"Funny how that works,\" she said and grinned.\n\n\"Have you turned lezzie?\"\n\n\"Nope.\"\n\n\"Have you ever had sex with a girl before?\"\n\n\"You mean other than the time you, me and Chain had a triple make-out session in our apartment junior year?\"\n\nMy mind flashed back to the night the three of us got wasted on wine and weed and ended up kissing each other. We all said we wanted to see what it was like to kiss a girl. I think the biggest challenge was to stop giggling long enough to kiss. I recalled that I liked the kisses, though.\n\n\"That was a long time ago and we were all stoned,\" I said.\n\n\"No problem, I'll get some weed for the three of us.\"\n\n\"Stephanie!! You really want to have sex with a girl, with me?\"\n\nSteph looked at me for a long time and then dropped her eyes. Suddenly, I could no longer hear the chatter and clatter in the restaurant. I imagined I was hearing her heartbeat from across the table.\n\n\"Yes,\" she finally said.\n\nThe weird silence was now replaced by the sound of a freight train. I think it was all the blood rushing away from my brain. My best friend just admitted she wanted to go to bed with me. No, make that have sex with me. No, let's call it what it is. Steph wanted to fuck me. I held on to the edge of the table and fought for balance. I did not want to faint in the middle of Checkers checkerboard-d\u00e9cor.\n\n\"Steph, I don't know what to say. I mean I never thought you had those kinds of feelings, especially toward me.\"\n\nSteph looked up, her eyes tearing, and took a deep breath. \"Marnie, I can't say that I've been pining over you, but when Cory and I discussed a three-way and I thought of you in our bed, well, yes, I did think that you would be awesome with us...with me. You are so beautiful. We love each other. I mean who else could I even imagine doing this with?\"\n\nI tried to organize some thoughts and bought time by taking in more of the Bloody Mary. It may have given me a few seconds, but the alcohol certainly didn't make my mind any clearer. If anything, everything was becoming foggier. I took a bite of salad, but it had no taste to me.\n\n\"You really want this?\" I finally managed to say.\n\n\"It would make Cory really happy,\" she said.\n\n\"Not what I asked, Steph,\" I shot back. \"Do YOU really want this?\"\n\nShe fixed her eyes on mine. \"Yes, Marnie, I really want this. I really want you in our bed. I want the three of us to make love. I want the two of us to make love. Can I make it any clearer?\"\n\n\"Uh, no, Steph, that's pretty clear. Totally mind-blowing, but clear.\"\n\nI thought about all she had just said. \"Steph, when I asked if you'd had sex with a girl before, you made a joke about that time with Chain. You did not really answer my question. Have you been with a girl before?\"\n\nSteph took a drink focusing on the glass. Lifting her eyes to mine, she said, \"Yes, Marnie. I have had sex with a girl. And, yes, I liked it very much.\"\n\nI didn't know what to say, so I said nothing.\n\nWe both tried to eat some more, but I mostly pushed food around my plate. We did, however, manage to finish our drinks. I was definitely feeling the effects as Gwen cleared our dishes. She asked if we wanted dessert, but we both declined.\n\n\"So, what now?\" asked Steph. \n\n\"I'm going shopping and hope I sober up enough to drive home.\"\n\nSteph gave me her sad eye look. \"You know that's not what I meant.\"\n\n\"Steph, I am so confused right now, that I couldn't even form a decent response. The only one that keeps bouncing around my head is, 'Are you out of your fucking mind?' But, I'm not going to say it.\"\n\n\"Marnie, you just did,\" said Steph as her face clouded over. \"Sorry, if I offended you or made you uncomfortable. It's just that...\"\n\nHer voice trailed away and her shoulders slumped. My heart went out to her. I knew how hard it must have been to even bring up the subject.\n\n\"Steph, I still love you and you are my bestie forever.\" I reached across the table and held her hand. \"If there ever was any woman I'd like to have sex with it is definitely you. The thing is I'm not sure I could do it, you know, the sex part. And, you are also asking me to have sex with your boyfriend. That's something else that is not what I would ever consider. I don't want to hurt you, but I'm confused.\" \n\n\"Will you at least think about it?\"\n\nI knew I should just flat out say no, but the look on her face made me hesitate. I tried to soften my response. \"Steph, I don't know, but I promise I will think about it.\"\n\nHer face lit up and we stood. She hugged me and I wondered if this act, which we had shared for years, now had a different meaning.\n\n\"So, want some company shopping?\" she asked. I really didn't, but couldn't bring myself to turn down her offer.\n\n\"Sure, let's go.\"\n\nWe hit a bunch of stores. Steph had me laughing and I put the proposition out of my mind\u2014for a while. We ended up in a woman's boutique where I was looking for blouses for work. I picked out four and we went to the changing area. In the past, I never gave it a thought to change in front of Steph. As we stood in the small room, I hesitated at pulling off my sweater.\n\n\"Chill, Marnie,\" she said. \"I've seen everything you've got like a million times.\"\n\nI pulled the sweater off. Underneath I wore a plain, white t-shirt. Of course, I didn't bother with a bra. Taking a breath, I pulled it off and stood topless.\n\nSteph stared at my breasts. She let her tongue slip out of her mouth and pretended to drool.\n\n\"I want tits,\" she said in a zombie-like voice. I just cracked up. Soon, the two of us were holding our tummies and worrying that we were going to pee our pants. Finally I calmed down enough to grab a blouse from her and put it on. After trying on all four, I decided there were two that I liked enough to buy.\n\nI pulled the last one off and grabbed my t-shirt. Steph and I looked at each other before I put it on.\n\n\"Honestly, Marnie, you are beautiful. And, although I've said this a thousand times to annoy you, you do have perfect breasts.\"\n\nI scoffed and said, \"No, you usually say nice tits.\"\n\nSteph smiled. \"Well, they are.\" She moved toward me. I knew what was coming and had no idea how to respond.\n\nSteph placed a hand on my naked shoulder and gently pulled me toward her. At the same time, her face came close to mine. She closed her eyes and kissed me. I knew I should push her away, but I didn't want to offend her - at first. I quickly realized I never had a kiss this gentle or this erotic. Her lips melded to mine. \n\nHer hand slid down my naked back and pulled me to her. My bare breasts pushed into her full chest. As my nipples hardened in reaction, I could feel her stiff nipples pushing through her shirt and bra. Next, I felt her tongue softly probe my mouth. I opened and she was inside. My heartbeat doubled immediately and I had difficulty breathing. Her hand slipped to my backside and pulled to make our pussies press against each other's thighs. I still had my arms at my side, my hands squeezed tightly into fists. As Steph's tongue probed deeper, I started to relax, opened my hands and brought them to rest on her hips. As our jeans-clad lower halves ground into each other, I felt my desire manifest itself as wetness between my legs. I couldn't believe I was turned on.\n\nMarnie's free hand moved between us and took hold of my right breast. When her fingers rubbed my nipple, I moaned. I had a fleeting thought that I should stop this before it went further, but it left as quickly as it came. She moved forward and I backed up until I was resting against the wall and her weight pinned me there. \n\nWithout doing so consciously, I moved from passively receiving her kiss to responding and then pushing my tongue into her mouth. It may have been imagined, but the heat in my own pussy seemed to be joined with that coming from Steph in spite of the jeans and underwear between us. Suddenly Steph broke our kiss and moved her head down toward an exposed breast. As her lips closed on the taut and sensitive nipple, I let out a long groan.\n\nSeconds later, there was a rap at the door of the changing room. A sales clerk was asking if everything were all right. Steph pulled off my nipple and responded.\n\n\"Thanks, yes, just stubbed my toe.\"\n\nI doubt if the clerk bought it, but she said, \"Well, let me know if you need anything. And, there's only supposed to be one person at a time in the changing rooms.\"\n\n\"Sorry, be right out. We're just finishing up,\" Steph said. To emphasize the point she pinched my nipple and I had to bite my palm to keep from letting another sound of pleasure escape.\n\nSteph started to giggle and despite my embarrassment by being practically busted by the clerk, I joined in. I looked in the mirror and witnessed a strange sight. I stood topless, nipples at full attention, as my breasts bounced with my laughter. Steph was leaning against the wall and clutching her stomach and trying to not howl with laughter.\n\nI gained some control and pulled on my t-shirt, followed by my cotton sweater. I ran my fingers through my hair and thought I still looked like a woman who just had sex in a public place.\n\nI took two blouses and asked Steph to return the others. Taking one last glance in the mirror, I opened the door and exited. I spied the saleswoman standing nearby ostensibly arranging clothes on a shelf. She scrutinized me and then Steph. I was pretty sure she was wise to what was going on. I smiled at her and breezed by on my way to the sales counter. I paid for the blouses and took my bag as Steph fell in beside me. We quickly left the store.\n\nIn the corridor, I stopped and turned to her.\n\n\"What the fuck was that?\" I asked in a whisper.\n\n\"Well, it wasn't a fuck,\" she said smiling, \"but I thought it was awesome.\"\n\n\"I think you've completely lost it.\"\n\nSteph touched my arm. \"Really, Marnie? Because a few minutes ago it didn't look that way to me.\"\n\n\"I was, uh, just taken aback. That was so totally unexpected. I think I had too much to drink.\"\n\nSteph leaned in, her lips grazing my cheek, as her lips touched my ear. So softly she said, \"Bullshit, Marnie. You were turned on just as much as I was. I bet your panties are as wet as mine.\"\n\nI pulled my head away. \"You've had too much to drink. I suggest you sit here until you sober up. I'm going home. Maybe we can pretend this never happened.\" Looking at her face that was seconds ago mashed to mine, I tried not to admit that she was right. As I shook my head to convince her, I knew Steph wasn't buying it either. \n\nSteph flashed an enigmatic smile. \"I doubt we'll forget it, Marnie. Think of it as an appetizer. Yeah, think of it as just that while you consider my proposition.\" She paused, then added, \"And, say hello to Arnold for me when you get home.\"\n\nI was on the verge of denying any such thing was going to happen, when I thought of how that vibrating tool was going to feel slipping inside me. \n\n\"You're drunk and talking crazy,\" I managed to say.\n\n\"Love you, Marnie. Call me later.\"\n\nI kissed her cheek, smelled her perfume and thought of her lips on my nipple.\n\n\"Sober up, Steph.\"\n\nI walked out of the mall trying to figure out how to pull my sodden panties out of my cleft without just stuffing my fingers down my pants. I made it to my car, pulled my zipper down and tugged the soaked cotton free. I hoped I could wait until I got home to finish what I needed desperately.\n\n*** \n\nAfter my third orgasm, I lay naked on my bed, faithful Arnold nestled between my thighs. Thank god he was a trooper. I don't think any man could have lasted long enough to sate my lust. I had a quick mental flash of Cory positioned between me and a naked Steph. His dick rested on his thigh as my best friend and I stroked him in appreciation.\n\nI nearly turned Arnold back on for another round, but instead forced myself out of bed and into the shower. After practically freezing my boobs off with cold water, I dried, dressed and went to the kitchen.\n\nIt was nearly five o'clock. I poured a full glass of chardonnay and sat on a stool. The sexual release I had achieved didn't even make a dent into the desire I still felt. My mind was in turmoil. I needed to talk to someone, but who would understand such a twisted sexual scenario as what Steph proposed. I downed about half the glass and then reached for my cell.\n\n*** \n\nTwo days later I sat at the bar and looked anxiously at the door. It was now seven-thirty and I was nursing a glass of wine. I decided to Uber over and not worry about driving. I turned to scan the room behind me to make sure I hadn't missed my anticipated guest. I sighed and then felt a touch on my shoulder.\n\nI turned and saw the tall brunette standing there. I stood and hugged her.\n\n\"Kimberly, thanks for coming.\"\n\nShe smiled and said, \"Sometimes I wish you still called me Chain.\"\n\nI laughed and said, \"Sorry, you look too tame to call you that anymore. Do any of the other teachers know what's under those conservative clothes? And do they know all the different colors your hair has been. I love your look now.\"\n\nKimberly ordered a Cosmo and said, \"Well, none of them have seen the tats. I lost most of the jewelry. I kept the belly button ring, but all the rest is history.\"\n\n\"God, it's so good to see you. What's it been, six months?\" I drank some wine.\n\nHer drink arrived, she sipped and then sat next to me. \"More like eight months. It was right after school started.\"\n\n\"Wow,\" I replied. \"Didn't think it was that long.\"\n\n\"Well, we're both busy,\" she said. I wondered if she meant that I was too busy to call her.\n\n\"Good to see you. Cheers!\" I said and raised my glass. We clinked and each took a sip.\n\n\"So, how have you been? Seeing anyone interesting?\"\n\n\"Well,\" Kimberly said, \"school is good. High school kids are still evil monsters. The good news is that there is only two weeks left in the school year. The bad news is that I can hardly keep them in their seats now and it will only get worse.\"\n\nI nodded in sympathy. I never thought the wild woman I met freshman year would end up as a teacher. Kimberly seemed so different. I had a moment of doubt about seeking her opinion. Maybe her wild days were so far behind her that she would be offended by my request for advice.\n\nShe continued to answer my original question.\n\n\"I am seeing a guy. He's a fellow teacher. Seems nice and we've had some fun.\"\n\n\"So, what does he think of your, uh, artwork?\"\n\nKimberly chuckled. \"Well, we haven't gotten to that stage yet.\"\n\nShe must have read the surprise on my face.\n\n\"Marnie, give me some credit. I'm not the same wild child I was freshman year. I think you saw that by senior year I had settled down a lot.\"\n\n\"Yes, of course I did. I'm sorry if you thought I was implying something. I think it's great you're going at a different pace.\"\n\nThis time she laughed and said, \"You mean I'm not ripping his clothes off and sucking his dick five minutes after we met.\"\n\nI joined her laughter. Kimberly was referring to a mixer she had talked me into accompanying her to second semester of our freshman year. It was at one of the more notorious frat houses. We had our plastic cups of beer and were standing in the corner. A senior walked over and started chatting us up. He was much more interested in Chain than me. At one point, he leaned in and whispered in her ear.\n\nChain handed me her beer, dropped to her knees and in a second had his cock out. I think my mouth was open wider than hers as she blew him. I had never seen anything like this in my life and incredibly no one else noticed. The guy started rocking and in less than a minute I could see Chain swallowing. She left his dick hanging out, took her beer back and said, \"So, what do you think of freshmen girls now? Still think we don't know shit about sex and need someone to teach us? See ya 'round.\"\n\nChain took my arm and we moved back into the mainstream of the party. I did glance back to see him staring at us, his semi-hard dick fully exposed to the room.\n\nLooking at Kimberly it was hard to reconcile the woman sitting next to me to my old roommate. She wore navy slacks and a pink oxford cloth shirt tucked in. Her dark hair was styled close to her head and kept the focus on her face. She still had the bridge of freckles running from cheek to cheek. A subtle combination of eye shadow, mascara and shaped eyebrows allowed her dark eyes to dominate her face. With only a light trace of pink lipstick on her thin lips, Kimberly looked both fresh and sexy. Her shirt allowed you to determine that there were no big breasts hidden away. She was still long and lean and the slacks fit nicely around her small butt. At five-ten without shoes, Kimberly stood close to six feet in her pumps. I could see both men and women checking her out from different parts of the bar.\n\n\"Those were different days,\" I said.\n\n\"Yes and thank god I survived,\" she added. \"You know, I never told you this, Marnie, but I don't think I would have made it through school without you.\"\n\n\"How's that?\"\n\n\"Well, you were so different from me. I told myself I shouldn't give a shit what you thought, but I kept wondering what you did think. You never got into drugs beyond some weed and I think I saw that you could have a lot of fun and not get messed up. I started doing less and less and finally quit drugs altogether. I also became a lot more selective about sex. You might remember I even swore off men for a bit.\"",
        "\"But you didn't swear off sex, as I recall.\"\n\n\"Ah, Jillian. Yes, that was quite a time.\"\n\n\"Do you miss that?\" I asked hoping I could move the conversation in the direction that would help me with my dilemma.\n\n\"You're awfully curious all of a sudden,\" she said.\n\nI shrugged and smiled. \"Hey, want to get something to eat?\"\n\n\"Sure and I want to know why you really called,\" Kimberly replied, obviously on to me.\n\nI settled our bar bill and we took a booth. We ordered another round and selected three apps that we would split.\n\nWe spent ten minutes catching each other up on what had been going on in our lives and careers. Kimberly put her drink down on the table and stared at me.\n\n\"Be straight with me, Marnie. Why did you ask to meet with me?\"\n\n\"Well, it has been a while since...\"\n\n\"I asked you to be straight with me. If you can't, then let's say we had a nice time and I'm leaving.\" Kimberly said this evenly, but I could detect tension in her voice.\n\n\"You're right. I need some help thinking something through. I thought maybe you could help me.\"\n\nKimberly drank some of her Cosmo and then waited as the apps were served.\n\n\"Is this thing of a sexual nature?\" she asked as she took a crostini onto her plate.\n\nI nodded.\n\n\"And, you think I can help, why?\" She ate half of the small appetizer.\n\n\"I guess because I thought you might have more experience than I do. And, because I've come to appreciate your perspective on life. And, because there is no one else I trust enough to ask. Finally, Kimberly, you are one of my best friends.\"\n\nKimberly was finishing a stuffed mushroom as I stopped speaking.\n\n\"What about Steph? Aren't you guys still joined at the hip?\"\n\n\"Yeah, we're still best friends. It's just that...well, I can't ask Steph.\"\n\nKimberly selected a salted baby potato from the serving dish and popped it in her mouth. \"You're not eating, Marnie. These are delicious.\"\n\nI shook my head. \"Not hungry now.\"\n\n\"So, let me guess,\" said Kimberly. \"This sexual dilemma you face has to do with Steph and that's why you can't talk with her?\"\n\n\"Yes,\" I said softly.\n\n\"So, you called the biggest slut you know to help you out?\"\n\n\"God, no, Kimberly. I don't think of you that way. It's just that I know you've had more experiences than I have and you're really smart. Plus, we've become friends. If I've insulted you, I apologize. I won't push this any further. I do not think of you in any other way than a beautiful woman and a decent person.\"\n\nKimberly looked at me for a long time. She seemed to come to a decision.\n\n\"I believe you, Marnie. You were never any good at lying. So, what do you want to know?\"\n\n\"Thanks, Kimberly. I, well, this is sorta embarrassing. I mean I wouldn't want you to get the wrong impression about me or anyone else. Maybe we could sorta think about a hypothetical...\"\n\n\"Cut the shit, Marnie. It's about you and probably Steph. So, just tell me.\"\n\nI finished my wine and took a deep breath.\n\n\"Uh, Steph asked me to be like part of, you know, like a three-way.\"\n\nKimberly waved to our waitress to signal another round. I smiled thinking that she and Steph recognized the need for alcohol in order to approach this subject.\n\nI nibbled on a mushroom while we waited for our drinks. I didn't mind the silence because I still was fearful of really discussing this whole idea.\n\nAfter we had fresh drinks in front of us, Kimberly raised her glass. I copied her and she said. \"O brave new world, That has such people in't!.\" We touched rims and each took a sip.\n\n\"Shakespeare?\" I asked.\n\n\"The Tempest,\" she replied and asked, \"I assume this is a new world for you?\"\n\n\"God, yes,\" I said.\n\n\"Can I ask you some more questions, Marnie? They may be personal, but it will help both of us have a good and fruitful discussion.\"\n\nI nodded as my stomach slowly knotted up.\n\n\"Have you and Steph ever had sex?\"\n\nMy face burned. A day ago I would have shouted no, now I was not sure how to answer. The silence hung between us.\n\n\"It's not a trick question, Marnie,\" Kimberly said smiling.\n\n\"It's a little complicated,\" I said.\n\n\"What isn't, especially with relationships and sex,\" Kimberly said. \"Just talk to me.\"\n\nI found myself spilling the events of my lunch with Steph and changing room encounter that followed. It seemed I hardly took a breath during this data dump.\n\nKimberly listened and nodded as I spoke. When she was sure I was finished, she reached across and touched my hand. \"Thanks, Marnie, that was brave of you. So, I guess you want to know if I think a three-way is the way you should go?\"\n\n\"Kimberly, I'm not sure. I'm wondering if maybe I'm like in love with Steph. Do I really want to have more sex with her? Am I gay or bi? And, what the hell really goes on in a three-way. Anything you can do to help will mean so much to me.\"\n\nKimberly laughed. \"That's quite a list. I'm not a psychologist, so I can't help you with your identity. From what you told me, I doubt if you're gay. Would you like to have sex with me?\"\n\nShe caught me completely off guard. I looked at her styled hair, pretty face, subtle make-up and tasteful clothes. I flashed back on her naked body and her small, firm boobs with her nipples usually erect because of the piercings. Her bare sex was always plump and inviting and sometimes I could see some moisture along her lips. I admitted that back in college I thought she was extremely sexy, in a forbidden fruit sort of fashion. I don't think I wanted to have sex with her then, although I might have gotten turned on hearing about some of her exploits. When she described in detail what she and her girl lover would do to each other, I did get excited and would later masturbate to those images. I know back then I rationalized I was excited because of the exotic appeal and not because I secretly wanted to have sex with her. Recalling her body I wondered how she would look now, without the piercings. \n\nAfter a too-long pause, as my mind cycled through all of those thoughts and hot images, \"Not really,\" was my final half-hearted answer. \"I mean I'm not coming on to you or anything.\"\n\n\"I don't know whether to feel relieved or insulted,\" she said, but I felt she was mostly teasing and could probably see right through me.\n\n\"Oh, Kimberly, it's not that you aren't pretty, I mean you are totally hot.\"\n\n\"Relax, Marnie. I'm just saying that you most likely are not gay. You are not attracted to women in general, you know to the exclusion of men. I think Steph touched something in you, but it probably has to do with how much you love her anyway. Sometimes platonic love and sexual love can get mixed together. Although since you did get excited and not disgusted with her in the changing room, you might have a bi streak.\"\n\n\"Really?\" I said. My mind flashed once more to an image of a naked Kimberly, her smooth sex lips shiny with excitement. \n\n\"Let's assume so and that's why you got so excited when she kissed you.\"\n\n\"It was more than a kiss, Kimberly.\"\n\n\"Okay, kissed you, played with your boobs and whatever. The point is you already had strong emotional ties to her and now you've added some sex to those ties. I can understand how you could now think you might have sexual desires for her.\"\n\n\"You think I do? I mean that I have sexual desires for her?\"\n\n\"God, stop analyzing everything. She made a move on you and you got turned on, right? So, let's just say there is sexual interest.\"\n\nI nodded.\n\n\"Now, are you sexually attracted to Cory?\"\n\n\"He's her boyfriend,\" I said. \"I shouldn't be thinking of him that way.\"\n\n\"Jesus, Marnie, you just might be the most repressed person I ever met. Put aside any moral consideration, do you think Cory is hot?\"\n\n\"Well, he's good-looking and...\"\n\n\"Marnie, do you think Cory is hot? Do you think of him in a sexual way?\"\n\n\"I guess maybe, a little,\" I lied. I thought about him a lot more than a little.\n\n\"Aagh, you are so fucking frustrating. And, that is the first time I've said 'fucking' in a fucking year. Now, I'll have to go home and put five dollars in my non-swearing jar.\"\n\nWe both laughed.\n\n\"So, you don't say 'fucking' any longer?\" I asked letting the surprise show in my voice and maybe trying to change the topic to let my racing mind catch up with all the revelations I was starting to admit to myself.\n\n\"I figured I used up my lifetime allotment in college,\" she quipped.\n\n\"So, straight out, do you find Cory sexually attractive?\" She stared at me.\n\n\"Yes.\" I held her gaze.\n\n\"Now, we're getting somewhere. So, you find both Steph and Cory sexually attractive. Before you go all denying everything, I don't mean that you are pursuing either one of them. We are just establishing a baseline.\"\n\nI wanted to explain everything all over again, but I kept my mouth shut. \n\n\"So, the question is would you join these two people\u2014two people you admit hold a sexual attraction for you\u2014join them in bed. Can you agree that is the question?\"\n\nI nodded.\n\nKimberly smiled and took a sip. She leaned in to me and I mimicked her so that our heads were nearly touching.\n\n\"Let me just say that given the right combination of people, a three-way can be so fucking hot.\" She smiled again and sat back.\n\n\"I thought you didn't say \"fucking\" any longer?\" I responded to have something to say.\n\n\"I don't,\" Kimberly said, \"unless it really fits the context. And, of course there goes another five bucks in the jar.\" She took a deep breath and let it out slowly. \"God, Marnie, just thinking about it makes me horny. I thought those days were long gone, but maybe there may be some interesting times ahead.\"\n\n\"Hey, why don't you join Cory and Steph?\" I said hopefully.\n\n\"Don't think so,\" responded Kimberly. \"But, if you said why don't I join you and a nice guy, well, then there's something to consider.\"\n\nI knew all the color drained from my face. I was sure because most of my blood seemed to be pooling in my pussy and making me hot as hell.\n\n\"You mean, you like would be interested in me?\" I struggled to get the words out.\n\n\"Like only since the first time I ever saw you. You never picked up on that?\"\n\nI shook my head.\n\n\"Like the first night in our room when I went to skin right in front of you, you didn't think I might have been coming on to you?\"\n\nAnother shake.\n\n\"And when I described, in great detail, as I recall, how I hooked up with Jillian, you never thought I was trying to turn you on or get you interested in exploring sex with me?\"\n\nAgain, I shook my head.\n\n\"And that night I stood naked in front of you and you told me you liked me and wanted to be my friend. And, when I made you talk about my body. None of that registered like I was coming on to you?\"\n\nI dropped my head and said, \"Jesus, I am so stupid. I never saw any of those things as signals.\"\n\n\"Don't beat yourself up about it, Marnie. It's probably for the best. I meant what I said before - I think having you as my roommate helped me more than you will ever know. That's not to say that you weren't an incredibly sexy woman\u2014and still are. As far as joining Steph and her boyfriend, I don't think that would work. I like Steph and do enjoy when the three of us get together, but she does not interest me sexually all that much. To be honest, if it were you and someone else\u2014that would be a different story.\"\n\nI looked at her as she smiled. \"Actually, if it were just you and not even a third party, it could be a different story,\" she said\n\n\"Aren't you seeing someone?\" I asked, trying to control my voice.\n\n\"I am and I like him. But, Marnie, I told you we haven't had sex yet. I don't have those strong 'throw him on the floor and fuck him to death' feelings. I wouldn't mind having something that could really turn me on. Yeah, I know, another five bucks.\"\n\n\"And that would be me?\"\n\nKimberly fixed her gaze on mine. \"Yes, it would fulfill a long-time fantasy.'\n\n\"But you can't mean that you find me sexier than Steph?\" I was vigorously shaking my head in disbelief. \"God, Kimberly, she is like ten times prettier and sexier than I am.\"\n\n\"Not to me,\" she replied softly. \"Well, not to me as a solo thing. As I mentioned, if it were the three of us, yeah, I could dig that.\"\n\n\"I thought you weren't sexually attracted to Steph?\"\n\n\"Uh, did I say that?\"\n\n\"Yeah, a couple seconds ago.\" Kimberly squirmed a bit.\n\n\"Well, maybe I meant not as much as I was attracted to you,\" she admitted. \"I mean Steph is objectively sexy.\"\n\n\"Objectively sexy!\" I said. \"I think she would definitely fall into that category. So, maybe you do have a little desire to fan the embers from college?\"\n\nThe quiet settled between us as we looked at each other. I had another flash of her naked body, pierced and tattooed, moving around our dorm room. I remembered again how I would sometimes use that image in a masturbation session and the pool between my legs had now turned into a flood. \n\n\"This has become awkward,\" I said. \"I'm sorry.\"\n\n\"No need to apologize, Marnie. I didn't mean that I'm looking for a romp with you like right now at this table. I do like dating Wes, and I know I want to have kids-someday. I was just saying that you are an attractive and sexy woman. I can understand why Steph and Cory would want you in their bed. Plus, well, I'm not planning to marry and have kids right away. So, why not have some fun.\" She smiled and winked at me. I laughed and took a swallow of my drink.\n\n\"So, what should I do?\" I pleaded.\n\n\"Can't tell you, 'cause only you can decide. Trying to look at it from a distance, I'd say at least consider it and talk it out with both of them. Don't over-analyze it as you usually do, just talk about it. The only risk I see is that you might somehow affect your relationship with Steph. But, I think you two are such good friends, that this one-time experience will not break that bond.\"\n\n\"So, you're saying I should do it?\"\n\n\"I'm saying think about it. I can sense there is some desire in you for it. If you decide not to do it, I'm sure both of them will understand. They wouldn't enjoy it if you weren't enjoying it.\"\n\nSighing, I played with my empty glass. \"Well, I can think about it. But...\"\n\n\"But what?\" asked Kimberly.\n\n\"What do I do in bed with them? I have no clue.\"\n\nKimberly laughed. \"God, Marnie, there's no manual for this sort of thing. You get in bed and have sex. I think human instincts will be enough to guide you.\"\n\n\"But, I don't know if I could, you know, like kiss Steph, you know, down there.\"\n\n\"Then don't. It seems like she is open to having oral with you. Listen, between Cory and her, there will be enough sex to keep everyone happy.\"\n\n\"I wouldn't have to go down on her?\" \n\n\"Marnie, this isn't a rape fantasy. You won't have to do anything you don't want to do. It's three people having sex in a number of different ways. Trust me, it will work out fine.\"\n\nI was nodding and trying to get my mind around the fact I was actually discussing this possibility.\n\n\"Kimberly, do you, ah, well, I don't know how to say this, but do you, like, well, you know with another woman...\"\n\n\"Are you asking me if I like to eat pussy?\"\n\nMy face burned and all I could do was nod.\n\nKimberly reached out and held my hand. \"Marnie, you are so sweet. God, you bring out all these maternal instincts in me. Of course, they are slightly incestuous maternal instincts because you also turn me on. But, anyway, yes, Marnie, I love eating pussy. I love looking up a woman's naked body and watch her face as I make her cum. I love feeling her body shake as the orgasm I just gave her sends her to new levels. I love the taste, the texture and the feel of a woman's pussy and juices. I love it all.\"\n\nAnother image of her deep brown eyes staring at me from my pussy made me slam my thighs together. \n\n\"Oh,\" I finally said. \n\n\"So, any more questions?\" Kimberly asked as she finished her drink.\n\n\"Uh, well, God, this is so awkward,\" I muttered.\n\n\"Marnie, we are way past awkward at this point,\" she said and touched the back of my hand. Her long fingers rested on my knuckles and my panties increased in dampness by a factor of 10.\n\n\"Well, do you like have any tips on doing, you know, oral stuff?\"\n\nKimberly squeezed my hand as a smile crept over her face.\n\n\"With a guy or a girl?\"\n\n\"Huh, with a girl. I mean I've done oral with guys.\"\n\n\"Ah, so you admit to giving blow jobs?\"\n\nI watched her smile broaden and grinned. \"Yeah, Kimberly, I've given blow jobs. And, I've even received some compliments.\"\n\n\"Good for you,\" she said and squeezed my hand again. \"So, have you ever had oral done to you?\"\n\nI looked around the room wondering if anyone could figure out what the two of us were discussing. I doubted it, because I could not believe I was having such a discussion.\n\n\"Yes, I've had oral.\"\n\n\"And, did you like it?\" Kimberly asked.\n\n\"Sometimes,\" I replied.\n\n\"What did you like about the times that pleased you?\"\n\nI thought about my last lover, Alexander. He was a nice guy, but I think I was probably one of his first sexual experiences. He was hesitant to go down on me, but gave it a try. He really didn't know what he was doing and the effort left me wanting.\n\nBefore Alexander was Greg. He was pretty good. I think I probably had a couple orgasms from his oral stimulation. \n\n\"Hello, Marnie, do I need to play the Jeopardy think music? What did you like about a guy eating your pussy?\"\n\nI startled back to the present as I heard her say \"pussy.\"\n\n\"Well, this one guy was pretty good. He hit a couple spots that made me get really turned on. I think I probably came.\"\n\nKimberly laughed out loud. I began to get angry and felt my face getting red.\n\nShe put her hand up as if to apologize and tried to catch her breath. After she calmed down, she sipped some water and began to speak.\n\n\"Marnie, I'm not laughing at you, really. It was just funny to hear you say that you probably came. I can tell you if I were between your legs there would be no fucking doubt that you came.\"\n\nShe grimaced and added, \"Shit, another five bucks in the jar.\"\n\n\"See, that's part of the problem. I am not all that good at sex. I like it, but I don't have these incredible orgasms that you read about in sexy stories. I think I would suck in a three-way.\"\n\n\"Only with Cory,\" deadpanned Kimberly.\n\nIt took me a second and then I got the joke. I laughed and felt some of the tension leave my body.\n\n\"Yeah, I get it. Suck the guy, lick the girl.\"\n\n\"There's more to it than licking,\" said Kimberly. \"Have you ever watched any girl-on-girl porn?\"\n\nI shook my head vigorously.\n\n\"Tell you what. How about I come over Friday night? I'll bring a couple favs from my collection and we'll watch them. I know my students learn more if there are visuals involved. Okay?\"\n\n\"I don't know. I mean I haven't even agreed to this crazy thing with Steph and Cory.\"\n\nKimberly leaned in and said softly, \"I think you have made up your mind you want to do it, Marnie. Your real doubt is if you will be any good at it. I'll come over. You get some food. Pizza works for me.\"\n\n\"Chinese, instead?\" I said.\n\n\"Sure. Nothing too hot.\"\n\nI thought that watching a lesbian porn movie with a woman who was a secret fantasy of mine would be hot enough.\n\n\"Great. Is seven o'clock good?\"\n\n\"Perfect,\" said Kimberly. She looked at me and I felt something building between us. I paid for our drinks and food. We stood and walked out together.\n\n\"So, are you going to worry this thing to death?\" Kimberly asked as she placed her hand on my forearm.\n\n\"I might give it a passing thought,\" I said and smiled.\n\n\"Marnie, I think you are smart enough to think it through. I just worry that you are not smart in the sense that you will never let some emotion influence your rational side. Sometimes you have to just say 'What the fuck!'\" Don't make any decisions until we have our little video party on Friday. And, yeah, I have to kick another five bucks into the swear jar.\"",
        "I promised and we hugged. She kissed my cheek and we left in different directions.\n\nI was a wreck the rest of the week. My nights were filled with dreams of naked women. Arnold was of little help since I kept wondering what a soft female tongue would feel like moving in and out of me instead of hard metal.\n\nOn Friday I left work early because I was so hyped up. I dashed home and straightened my apartment for the millionth time that week. I don't think there was a stray speck of dust within a five block radius. I stripped and stood in the shower for a long time. As I washed, rinsed, washed, rinsed and conditioned my hair, I asked myself if I were primping out of nervousness or getting ready for a hot date? I flashed back on Kimberly's naked body in front of me in our dorm room. I recalled how sexy she looked and how her smooth cleft always seemed to be wet. As I slipped my finger into my own slit, I cried out and hoped my neighbors didn't hear me.\n\nAfter my shower, I stood naked in my bedroom throwing clothing on the bed and then grabbing more from my closet. Nothing appealed to me. Glancing at the clock I realized that Kimberly was due to arrive in less than an hour. Still naked, I called the local Chinese restaurant and ordered our dinner to be delivered. I think I probably asked for enough food to feed ten of us. \n\nI ran to the kitchen and put an extra bottle of white wine in the fridge, next to the other two bottles I had placed there earlier. I grabbed plates and silverware and placed them on the counter that separated the kitchen from the living/dining area. As I straightened the pink tablecloth for the tenth time, I realized that I was pushing myself toward a panic attack.\n\nTaking a deep breath, I took a superhero power stance. My balled fists rested on my hips and my feet were spread even with my shoulders. I held my head up and looked into the distance, letting my focus soften. When I first heard of this technique, I was more than skeptical. But before a meeting where I had to present to our executive committee, I dashed off to the ladies room and took the pose. After a couple minutes, I began to relax and felt my confidence surge. I left the room and killed the presentation. Our CEO told me it was one of the best he had ever seen.\n\nI still wondered about the effectiveness of such a routine, but decided it couldn't hurt. I was totally convinced one day when I opened the ladies room door to see my vice-president looking like Wonder Woman. She eyed me and I just nodded. I moved to stand next to her and we maintained our silent concentration. We never said a word to each other, but during the meeting of the Board of Directors, we caught each other's eye as we each had to stand to present our findings to the group. Ever since, I've tried to find two minutes to let my inner superhero come out before I undertook a stressful action.\n\nStanding in my living area I asked myself if Wonder Woman's pussy could have been as wet as mine is. Although I tried to clear my mind, visions of small boobs with silver studs through the nipples invaded my subconscious.\n\nI gave up on power posing and ran back to my bedroom. I had to dry my pits three times before I could put on deodorant. I finally chose beige lace bottoms and a matching lace bra. It was warm, even with air conditioning, so I opted for a loose, long floral skirt and sleeveless soft cotton pink top. I added a silver necklace and bracelet. I chose colorful dangling earrings that picked up the tones in my skirt. I went easy on make-up. My cheeks were red enough not to need very much. I did my eyes and added a light shade of lipstick. I looked around my room and saw that a hurricane must have somehow sneaked in. I didn't have the energy to put all my discarded outfits away, and slipped on my flat sandals before I closed the bedroom door behind me.\n\nThe doorbell rang and I jumped. Telling myself to calm down, I opened to see both Kimberly and the deliveryman from the restaurant. I stepped back to allow both of them to enter. The man put the food on the counter and I gave him a tip and signed the credit card receipt. I noticed Kimberly put her bag on the counter and I knew what was in there - lesbian porn and I had to admit I was excited to watch it with her.\n\nAfter he left, I took my first close look at Kimberly. She wore a long cream skirt that hung straight down from her narrow hips. Freshly polished nails peeked out from her ankle strapped sandals. The heels made her stand close to six feet. On top, Kimberly was wearing a sleeveless knit top. The fabric outlined her small breasts that seemed to be held in a thin bra. She had obviously fussed with her make-up as her eyes were shadowed and outlined, making their dark brown shade appear more dramatic than I'd ever realized. Her hair was slightly gelled and accented with a fresh pale yellow gardenia behind her right ear. My heart fluttered at how pretty she looked. Her light red lipstick added a bit of dimension to her thin lips and made them look extraordinarily kissable. I asked myself, \"When did I start thinking about women's lips?\" I answered that it was the moment I felt Steph's pressing against my own and then told myself that, if I'm being honest, it might have been when I masturbated to images of Kimberly and her lesbian lover in college.\n\nShe bent down to kiss my cheek. I could smell the gardenia and a subtle scent I couldn't place. She said softly that I looked beautiful.\n\nWe moved apart but held eye contact. She ran her hand down my bare arm and I tried to suppress the shiver that shot through me, but I know she could feel the goosebumps she caused. I said we should eat while the food was warm. We opened the containers and fixed our plates at the counter and then moved to sit at the small table in the dining area of the living room to eat. She said yes to wine. I brought out a bottle and two glasses. We toasted each other and began to eat.\n\nWe made some small talk about our week and commented on the food. After seconds and another glass of wine, we both admitted having had enough food. I told Kimberly I had some cookies, but she said, and I concurred, that we were too full to eat. Working together we cleaned up and put the leftovers in the refrigerator.\n\n\"Showtime?\" she asked smiling at me.\n\nI nodded and took a second bottle of wine and opened it.\n\nKimberly pulled three DVDs from her purse. She asked if I would choose one. I randomly selected a disc and she turned on the TV and inserted it in the player. We sat close to each other on the couch.\n\n\"Marnie, I hope you'll find it interesting.\"\n\nI was breathing a little rapidly and my heart raced as the images appeared. Two women were sitting on a couch having wine. Kimberly looked at me and chuckled. \"Purely coincidence,\" she said. \n\nOne woman was blond, pretty and seemed to be well endowed. The other was dark and was not as buxom. The women chatted about life and then the blond complained that her boyfriend could never satisfy her. The dark haired woman was listening and nodding. She asked the blond if her boyfriend liked to go down on her. The blond laughed and said he never did\n\nThe dark haired woman told the blond that she shouldn't have to put up with that. She leaned in and kissed her friend. The blond responded and soon their hands were all over each other.\n\n\"They don't waste much time, do they?\" I said.\n\n\"The point of the film is sex, so they need to get...to...the...sex,\" Kimberly said in a very deliberate, but playful, manner, which cut some of the building tension.\n\nAs Kimberly and I were talking the women had peeled each other's tops off. Now the dark haired one was unfastening the blonde's bra. Her breasts were obviously enhanced, but that did not seem to deter the dark haired woman from kissing and sucking them. The blond undid her friend's bra to reveal natural breasts that were large, but not oversized. \n\nAs they played with each other's boobs, Kimberly touched my arm. \"See, it's just like what a guy would do. Think of the dark haired girl as a man. She is the more aggressive one.\"\n\nI watched as the blond fell back on the couch and the other one pulled her skirt off. Her panties quickly followed and the camera zoomed in for a close-up of her bare pussy. Next the dark haired woman was licking the blond and then moved two fingers with crazy long nails inside. The blond was gasping and moaning.\n\n\"Starting to get any ideas?\" Kimberly asked.\n\n\"If you only knew,\" I said silently to myself, wishing I had the courage to speak it aloud to Kimberly.\n\nThis activity went on for a while until suddenly the blond was pulling the rest of her friend's clothes off and going down on her. Lots of moans and dialogue like, \"Oh, yeah, honey, lick it good.\" Out of nowhere it seemed, the dark haired girl produced a dildo and started using it on the blond. More groans and stupid dialogue. The scene cut to the bedroom and the women were now in a sixty-nine. \n\n\"That was fast,\" I said.\n\n\"Need to get in lots of sex,\" said Kimberly which made me giggle a little. In quick succession, they ate each other, the blond moved up to sit on the other's face and finally the dark haired girl started tonguing the blond's butthole. \n\n\"Ugh. People don't really do that stuff,\" I said.\n\n\"Oh, really!\" said Kimberly. I turned to see her smiling. I turned back to the screen to see the dark haired girl's finger disappearing into the blond's butthole. The blond squealed, but, then again, she was squealing a lot anyway.\n\nAfter what seemed like an eternity of trying every position, no matter how uncomfortable they seemed, the dark haired girl was licking the blond and attacking her clit with an incredible amount of force. The blond screamed and started squirting.\n\nI gasped. \"Holy shit, I never knew that could happen. Always thought it was like an urban myth.\"\n\n\"Marnie, I assure you it happens. I do it sometimes.\"\n\nI looked at her and she turned her face toward mine. \"Especially if I get really turned on by my partner. And my partner can find my g-spot and work on it.\" I felt a minor explosion between my legs. My mind flashed on what it would be like to see Kimberly naked with her legs apart and liquid squirting from her pussy.\n\nSoon the film ended.\n\n\"So?\" Kimberly asked.\n\n\"It was okay, but seemed kinda unreal.\"\n\n\"Yeah, not one of the best. I put it in the pile because it showed in great detail how they gave each other oral and used their fingers.\"\n\n\"I would agree with the great detail part,\" I added. We smiled and I refilled our wine glasses.\n\n\"Let me play my favorite,\" said Kimberly. \"And, Marnie, if I finish this glass of wine, I won't be able to drive home.\"\n\n\"No problem,\" I said. \"Stay here. I have another bottle chilling.\" Kimberly smiled and put the new disc in.\n\nThis story was much better quality. The photography was sharp, the acting was not bad and the women were all natural and normal looking. When two of the women finally undressed and started making love, I felt much more involved in the story. They were tender and portrayed affection between them. It was less fucking and more love-making. I was emotionally drawn into their story and found myself getting excited with the love scenes. In this disc, the sixty-nine scene played out for a long time and I believed that each woman enjoyed it and that they did reach a real climax.\n\nWhen it ended, Kimberly asked if I liked it. I thought I could show her my wet panties and let her decide how much I enjoyed the last fifteen minutes. \n\n\"This one was good. I sorta could relate to those women, not like the first one.\"\n\n\"This one had romance in it, Marnie. You're a Romantic, so I thought you'd like it. Did you find the sex disgusting?\"\n\nI thought for a while. \"Actually I thought it was well done. The women made it seem like they cared for each other. It was sexy.\"\n\nKimberly nodded. \"Did it turn you on?\"\n\nI finished the wine in my glass and then shared the remains of the bottle between Kimberly and me. I smiled and nodded, \"Maybe a little.\"\n\nKimberly took my hand in hers. \"I get wet every time I watch this one. Makes me want to get off.\"\n\n\"Uh, yeah, I guess I could understand that.\"\n\n\"So...?\" Kimberly said and squeezed my hand.\n\n\"So, what?\"\n\n\"Want to?\"\n\nI was not following her. \"Want to what?\"\n\n\"Get off, silly. Let's do it. Right here, right now.\"\n\n\"You mean like in front of each other?\" I still was not sure that she meant we should masturbate.\n\n\"Yep. I think we both could stand to get rid of some tension.\"\n\n\"Kimberly, I have never done anything like that.\"\n\n\"You never masturbated for a boyfriend?\" She seemed to have a hard time believing that.\n\n\"God no. I wouldn't want him to know I did that stuff.\"\n\n\"Marnie, don't you think the guys probably jerked off. I know guys, and they do it a lot.\"\n\n\"Maybe, but I've never done it with anyone. I mean anyone, watching.\"\n\n\"Marnie, if you go to bed with Steph and Cory, there's a lot more that will be going on than playing with yourself. Think of this as a tiny first step.\"\n\nI looked at her. She seemed so relaxed and open. \"You really want to do this?\" I had to admit I needed to get off really badly and it wasn't going to take much to get me to agree to anything that involved me orgasming in the very near future.\n\n\"Oh, yeah.\" Her eyes fell to my shirt. I knew my nipples were probably protruding. I could see hers were hard, as well. \"And, I think you're turned on just thinking about it.\"\n\n\"How would we, like, start?\" I asked, not believing I was even considering the suggestion. The idea that I might move forward was emanating from my warm pussy that was more than damp.\n\nKimberly stood and reached under her long skirt. In a few seconds her hands emerged dragging her pink underwear to the floor. She undid her sandals and kicked them free. She sat on the couch, turned to face me as she placed her feet on the cushions and hiked her skirt up past her knees. Slowly her legs parted and I could see her smooth sex. Her lips were glistening and puffy. The star tattoo above her slit was still there and looked sexy as hell. That word \"inviting\" came front and center in my mind again. \n\nShe looked at me. Slowly I stood, inched my panties off and sat back down, sitting in a like fashion. I willed my hands to pull my skirt up and allowed my knees to fall apart. Kimberly stared between my legs.\n\n\"God, Marnie, I forgot how beautiful your pussy is. It's like, perfect. All trimmed and neat.\"\n\nI was at a loss on how to respond. Having never received a compliment on my pussy before, I just smiled. My smile faded as Kimberly reached between her legs and spread her lips. Her long fingers moved slowly up and down and she moved one hand so she could slide her middle finger inside.\n\nAs the finger moved past her engorged lips, I saw more moisture seep out. When her finger was deep inside her, Kimberly let out a soft groan and moved another finger to her clit, still hooded but enlarged.\n\nAs she made circles around her clit, Kimberly began pumping her finger in and out. At first her eyes were closed and her tongue extended from her mouth to wet her lips. I was frozen watching her. \n\nWhen she did open her eyes, she locked onto my face. \"Go ahead, Marnie, go ahead, baby.\"\n\nHer fingers were moving faster on both her clit and in and out of her pussy. I tentatively touched my pussy. It was no surprise to confirm how wet I was. What did surprise me was how sensitive my pussy was. I let out a gasp as my finger slid between my lips. \n\nKimberly now had two fingers pumping in and out and her other hand was rapidly moving all over her clit. I could not recall a sexier sight. With my eyes fixed on what her hands were doing, I moved myself along the path to satisfaction. I was less vigorous in using my fingers, but was enjoying the experience. The added touch of naughtiness, as we displayed ourselves to each other, only added to my excitement. \n\nI heard Kimberly gasp and looked at her face. I had never really watched a woman experience an orgasm, but knew I was about to do so. Her mouth was open wide and her eyes kept closing. As her tongue swiped along her lips, I could see her back arch. I shifted my gaze back between her legs to find that she now used three fingers to plunge inside while her other hand was tapping a rhythm on top of her clit. Suddenly all movement froze. I heard Kimberly say, \"Fuck,\" and then a steady flow of liquid oozed from her pussy and past her fingers. \n\nI had stopped my own masturbation to watch her come. I felt I should be ashamed to be staring at her as I was. The only emotion I could feel was awe.\n\n\"Jesus, that was intense,\" Kimberly said as her legs slowly stretched out. \n\n\"No shit,\" I replied. \"And, you owe another five bucks to that jar.\"\n\nShe smiled. \"Well worth it, babe.\"\n\nWe sat there with our legs spread as though it was the most natural thing in the world. Kimberly looked at my pussy. \"Did you come?\"\n\n\"Uh, no.\"\n\nKimberly moved her foot along my leg, past my calf, up my thigh until her toes touched my exposed sex. Using her big toe she touched my hooded clit and ran it through my cleft.\n\nI thought, \"The first time a woman touches me there and it's a toe.\"\n\n\"Continue, Marnie. Finish it.\" She moved her foot away and stood up. I replaced her toe with my fingers and took up where I left off a few moments ago.\n\nKimberly undid her skirt and let it fall to the floor. She next pulled her top off. Reaching behind she undid her bra and tossed it aside. Her small breasts stood out firmly with not even an inch of sag. My hands began to move faster.\n\nMy eyes roamed over her lithe body. I was breathing through my mouth as my hands moved me quickly along the \"O\" path. \n\n\"You like looking at me, don't you?\" asked Kimberly as her hands traveled from her breasts to her smooth pussy, where her fingers spread her lips. \"Remember the ring I used to have here? I know you used to stare at it. You tried to hide your glances, but I knew. Marnie, you can look at my pussy now. Don't be afraid.\"\n\nKimberly came next to me and knelt on the floor next to the couch. \n\n\"You are so beautiful, Marnie. Let yourself go, I want to see you orgasm.\"\n\nI could only nod. I was getting there, but something was holding me back. I wanted to come so bad, but it wasn't working. \n\n\"Having trouble?\" she asked with a tiny smile.\n\nI nodded.\n\nKimberly leaned in keeping her eyes on mine. As she lowered her face, her lips pursed. I wanted to feel them. I needed their soft warmth. The first thing that touched me was her left nipple against my shoulder and I moaned just as her lips met mine. As we kissed, I felt heat radiate through my entire body. Gently Kimberly offered her tongue. I opened my mouth and eagerly welcomed her in. Soon there was no distinction between our mouths. Her tongue was as much a part of my mouth as mine was of hers.\n\nKimberly began to suck my tongue deep into her mouth. I was so excited that I stopped fingering myself. Then I felt her long fingers on my thigh. My mind wanted to break off contact and tell her that she could not do that. There was no way I was going to let another woman touch me.\n\nKimberly growled and I felt the vibrations rock my face. I knew I had to stop this now. I moved my hands to her shoulders to push her back. At that very second, her finger slipped inside me. God, that felt so good. I knew resistance was useless as she began moving her finger in and out. My vagina acted on its own will to try to trap her finger\u2014not wanting it to move away from me. My hands on her shoulders slipped down until I was cupping her breasts. Those small, beautiful breasts that I had long admired were now in my grasp. Her nipples were taut and pushed against my palms. I loved touching her breasts. I loved the feel of the hot soft flesh in my hands. I cupped one breast and took the nipple of the other between my fingers and played with it. Kimberly pulled her mouth away for a second. She smiled and our eyes met.",
        "\"Fuck, yes, Marnie.\"\n\nI pulled on her nipple and cried out as a second finger entered my most private spot. I was wetter than I thought possible and could hear the squishy sounds above our mutual, labored breathing. Kimberly suddenly pulled her face from mine. I immediately wanted to reestablish contact. She then moved her body up so that a nipple was now playing along my lips. Without a second thought, I took the nub and sucked hard.\n\nKimberly responded by pumping hard with her fingers and placing her free hand on my mound. Her index finger and thumb pinched my clit and then pushed back the hood. Maybe it was my imagination, but I could swear I could feel the cool air rush over the exposed pink button. When I felt her middle finger circling my clit, I took her whole breast into my mouth. \n\nI was rushing to the edge of the cliff and couldn't wait to dive off and revel in the sweet fall that was calling me. I was seconds away when Kimberly pulled her body from me. Her fingers deserted my pussy. Not now, I thought. Not when I'm this close.\n\nShe pivoted and turned so she faced my feet. She bent and then her head was between my legs. As I felt her tongue touch my clit, her nose buried itself between my lips. I grabbed my breasts through my shirt and squeezed hard. \n\nI never thought I would let a woman touch me like this and now I never wanted her to stop. The shock of her tongue on my clit had the immediate effect of forestalling my orgasm. Now it was roaring back. Kimberly took my clit between her lips and sucked hard. Then, she pushed a finger inside, moved it about and found my most sensitive spot. As her finger dug in and her lips pressured my clit, I could take no more. I screamed and my body began to shake.\n\nAs I reached my peak, I panicked. In my excitement I think I just peed.\n\nKimberly did not back off; no matter how gross it must have been between my legs at that moment. She continued to eat my pussy. Since her head was more or less upside down, a lot of liquid escaped and ran down to the couch.\n\nIt took me a while to find my voice. \"Please, stop, please. I can't take any more.\"\n\nKimberly gave me one long, last lick and pulled away. She sat up, resting on her haunches. I could see the shiny liquid coating her face.\n\n\"I am so sorry,\" I said, turning away.\n\n\"God, for what?\"\n\n\"For, you know, losing control like that.\"\n\n\"Like what? For having a great orgasm? Why should you apologize for that?\" Kimberly was licking her lips.\n\n\"No, I mean, for...you know... peeing.\"\n\nKimberly looked stunned and then laughed. It was not a little polite laugh, but a full throaty howl.\n\n\"What?\" I asked, starting to get angry.\n\n\"Marnie, you squirted. You didn't pee. It was awesome.\"\n\n\"I did?\"\n\n\"Yeah. Guess you liked having sex with a girl. But, we ought to clean up your couch before it gets all stained.\"\n\nStill naked, Kimberly moved toward my kitchen. Her small butt barely moved as she walked away. I thought it looked amazing.\n\nShe returned with a damp cloth and a dry dish towel. She asked me to stand and then worked on the cushion that was beneath me. When she was satisfied she turned to look at me. She deftly undid my skirt and let it fall to the floor. Grinning, she leaned over and kissed my pussy and licked up all the moisture there and on my thighs. It was very intimate and had me wanting round two.\n\n\"You taste fabulous, Marnie.\"\n\nShe wiped up the spot from where she was sitting. She then returned the cleaning material to the kitchen as I stood wondering how I found myself standing without underwear in my own apartment and having a woman tell me that she liked the taste of my sex.\n\n\"I think we should go to bed,\" she said.\n\nI could not come up with a reason to say no. She took my hand and we walked into my bedroom. We looked at the mess on the bed and I said, \"Sorry.\" I suggested my guest room.\n\n\"I want to clean up a bit,\" she said. I pointed her to the bathroom attached to my bedroom.\n\nKimberly stroked my face and said, \"Don't get undressed. I want to do it.\"\n\nShe went to the bathroom and closed the door. I was stranded standing in the middle of my own room. How this night took such a turn, I was at a loss to explain. I was nervous about Kimberly staying in my bed. At the same time, I think I wanted to be in bed with her more than any other sexual or emotional feeling I ever had. I wanted to hold her and make love to her again. As the door to the bathroom opened, I covered my exposed pussy with my hands.\n\nKimberly smiled and came to me. She kissed my lips and I could taste toothpaste. I wondered what I would have tasted if she had kissed me immediately after her face was between my legs.\n\n\"Use the bathroom and then I'm going to undress you, Marnie.\"\n\nI smiled weakly and hurried to complete my nightly ritual. Returning to the bedroom, I stood still as Kimberly approached me.\n\nKimberly undid my blouse and pulled it from my shoulders. Her hands flitted over my bra and caressed my breasts through the soft material.\n\nShe reached behind me to undo the clasp. As my bra fell to the floor, Kimberly stared at my naked breasts.\n\n\"Marnie, I've lusted after these since the first day I saw you. You hardly ever changed in front of me and I only really saw them one time.\" As she spoke, her fingers flitted over my breasts, raising goosebumps everywhere she touched. \n\n\"Seeing them now,\" she shook her head, \"they are the most perfect boobs I've ever seen.\" She cupped both breasts and squeezed. As her thumbs ran over my nipples, I felt my pussy begin to weep.\n\n\"Come, let's get in bed,\" she said. I led her to the guest bedroom. I pulled the covers down. Kimberly guided me to sit on the edge. She lowered herself until she knelt between my legs. A slow, tender kiss on my lips resulted in my arms snaking around her shoulders. I kissed back. The heat exchange was intense.\n\nAfter several long kisses, Kimberly kissed my collarbone, and then continued downward. As her lips latched onto my right breast, I thought I would have another orgasm. She kissed all around my flesh and finally took my nipple. Her lips pulled it tight and her tongue ran over its rough surface. At that moment any residual resistance fled my body. I knew I wanted Kimberly to take me and do what she wanted with me. I also faced the truth that I wanted to explore her body. No longer could I deny the passion that was building in me.\n\nAs she kissed my right breast, her fingers toyed with my left one. Never before did I appreciate how erotic breast play could be. The men I had been with played with them, but never long enough or soft enough. Kimberly was adoring them. I slipped my hand between my legs to try to ease the building desire for contact.\n\nKimberly pulled back and took my wrist to pull it away. \"Marnie, dear, that is my job. Lie back.\"\n\nI did as she told me, and Kimberly reclined next to me. We kissed each other for a long time.\n\nWhen I felt her hand on my thigh, I let out a welcoming sigh. Kimberly took my hand and placed it at the top of her thigh. She kept her hand still. I realized she wanted me to make the first move.\n\nI inched my hand up until it made contact with her warm flesh. I felt the smooth lips. Using my middle finger, I split her lips and ran it up and down. Kimberly bit her lower lip.\n\nOn the next stroke, I felt wetness on my fingertip. I rubbed more and harder. Kimberly made cooing noises. At the top of my next stroke, I touched her clit. It felt so much like mine and yet so foreign. I swirled my finger around the hard point. Kimberly buried her face in my neck.\n\nI wanted to be inside her; inside a woman. I put my finger at her opening. Her legs spread ever wider. I pushed past her outer lips and found a hot and wet welcome. As my finger disappeared into another woman's body, my head spun with sexual intensity.\n\nI began to move in and out and felt her. Her flow increased and I could feel it escaping and running down her butt.\n\nI spun my hand and tried to reach her special spot. I was moving around and not being successful.\n\n\"A little higher, honey,\" Kimberly whispered. I moved my finger along her outer wall and felt something different.\n\n\"Yes, so good, Marnie.\"\n\nI began to rub along the newly found area. Kimberly was thrusting back. \"Please, touch my clit.\"\n\nI used my other hand to rub circles along her clit. She sighed and moved her hips faster. \"Push my hood back.\"\n\nUsing my thumb, I freed her clit from its hood. My finger now touched the hard bud directly. I rubbed back and forth.\n\n\"Harder in both places,\" she instructed.\n\nI complied and Kimberly began breathing heavily. Sweat now covered her upper body and her hips lifted aggressively from the bed. \n\n\"God, this is so good, Marnie,\" she said between deep gulps of air. \"Do you think you could use your mouth on my clit?\"\n\nI was at the Rubicon of lesbian sex. If I moved my mouth to her, I was no longer experimenting; I was making love to a woman. \n\nI surprised myself by how quickly I made up my mind. I wanted to do this.\n\nI placed my head on her mound. Holding her hood back I licked the pink erection. Kimberly cried out. I licked more and more, pressing harder each time. I could taste something, but it was not strong. I moved quickly so that I was lying between her legs. I extracted my fingers from her vagina and began licking her swollen lips. The taste of her was strong, almost overpowering. It was also the most erotic taste I could imagine. I licked and licked as Kimberly thrashed about on the bed. Daringly I pushed my tongue past her lips to seek the canal inside. She grabbed my head and held me tight as my tongue darted in and out. \n\nI knew she must be close, so I pushed her hood back and held her clit between my forefinger and thumb. As I pushed my tongue as deep as I could inside, I pinched her clit.\n\nKimberly yelped and began to orgasm. The flow of her sweet juice rapidly increased and covered my mouth. I drank it like it was life-saving nectar.\n\nKimberly rode out her climax and sank back onto the bed. Her hands relaxed from my head and she tried to push me away. I gave her a final lick between her lips and a caress on her clit. She stiffened again with a minor orgasm.\n\nI crawled back to face her. She kissed me and used her tongue to clean my face and chin.\n\n\"Hold me, love,\" she pleaded. I welcomed her to my embrace. \"That was fantastic, Marnie. It lived up to my dreams. I am so happy.\"\n\nWe kissed again and fell asleep in each other's arms.\n\nIt was close to midnight when I awoke. Kimberly snuggled tightly against me with her head on my chest and her long leg draped over my thigh. I slipped my hand down to her butt and marveled how well it fit into my palm. My mind still swirled with the remembrance of what we had shared a short time ago. \n\nThe speed that I travelled from confirmed straight girl to holding a naked woman in my arms seemed like a blink of an eye. As confused as I was, I wasn't regretting the fact that a beautiful woman was in bed with me.\n\nI was also certain that I could move forward with Steph and Cory. As my mind played out this scenario, I could not determine if I were more excited about being with Cory, with Steph or with both. I pulled Kimberly tight to me and smiled. I realized it didn't make any difference. I was planning to enjoy it all. This was certainly a brave new world.\n\nTo be continued.\n\n*****\n\nMy thanks to Prof Davros, HsytLit and Gary13 for their support and editing. These guys are the greatest and saved me from so many errors. As always any remaining mistakes are all mine. Chapter two will be posted soon. I'd love to know what you think of this story. Thank you for reading my story. Althea."
    ],
    "authorname": "AltheaRose",
    "tags": [
        "best friend",
        "group",
        "g"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/brave-new-world-3"
}