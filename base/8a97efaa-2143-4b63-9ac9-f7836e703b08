{
    "title": "Caddy for Hire",
    "pages": [
        "Caddy for Hire\n\n*Author's Note: I do a fair amount of research for stories that require it, but I don't pretend to be an expert in many areas. Remember, we get paid nothing to write these stories, and I'm not willing to spend inordinate amounts of time on the details.\n\nInvariably, whether it's the correct order of steps to hang drywall or how one qualifies for the PGA tour, someone will email me and say, \"Just wanted to let you know you got such-and-such wrong.\" That's fine, but stories can't be changed once submitted, so it isn't going to result in an edit, and I'll never write on the same subject again.\n\nIf you're a golf purist, take the subtleties of the details of how the tour works in this one with a grain of salt. They're close enough for government work, and that's close enough for Literotica where you pay as much to read stories as I receive to write them.\n\nAnd, no, I still don't have my mojo back. I just kept pecking away at this one until it was finished.\n\n******\n\n\"Marc. Listen. I'm really sorry, bro.\"\n\n\"No big deal. If I'd have made the cut who'd have caddied for me anyway, right?\" his brother replied lightheartedly.\n\n\"I feel awful, man.\"\n\n\"Why? It's not like you decided to go skiing and intentionally break your leg. Stuff happens.\"\n\nHis older brother sighed then said 'thanks'.\n\n\"For what?\"\n\n\"For not hating my guts. I mean, you're on the friggin' PGA tour, and now you don't even have a caddy.\"\n\n\"I have Dad,\" his younger brother replied without a lot of enthusiasm.\n\nThat drew a loud snort and both brothers laughed.\n\n\"Like I said, you didn't have a caddy,\" Tyler Hardison told his recently-turned-pro-golfer brother. \"I'm almost afraid to ask that went.\"\n\n\"Well, let's just say Dad knows the difference between a sand wedge and a pitching wedge now.\"\n\nTyler chuckled as he thought about their father, who'd never even liked golf, caddying for his son who'd worked so hard at the game; a game that was expensive and one their father insisted was a waste of time.\n\nPerhaps that was true for Tyler. He had no idea how much money he'd spent over the years on clubs, balls, tees, greens fees, and other expenses. And yet the truth was he was good. Really good. He just wasn't as good as his little brother. Not even close if the truth were told.\n\nSo when Marc's talents eclipsed his, Tyler gave up playing and started caddying. There were two long years of Marc working hard both on and off the course to become good enough to get into Q school which was golf-speak for \"qualifying school.\"\n\nIt was a brutal and very expensive road to go down with no guarantee of ever playing in a tournament for big money. The cost for all four stages of qualifying school was right around $15,000, but for those who qualified, pro golfers could potentially earn millions upon successful completion. But getting through all of the school's four stages was a feat in its own right. And after that, one had to earn a certain amount of money to remain on the tour or it was back to Q school.\n\nMarc had worked at a local golf course in exchange for being able to play for free and also worked another job part time since he was 16 years old. He'd worked, saved, and borrowed to scrape together the money for each of the four stages, and in spite of the intense competition, he'd passed them all. In fact, he finished a very respectable fifth, and with that, he earned his pro card.\n\nOf course, just getting one's PGA card didn't bring in any money. That still had to be earned, but it allowed him to start competing in tournaments where, if he made the cut in their Monday qualifying round, he would be able to play in that tournament on Thursday and finishing on Sunday.\n\nSo for another six months after Q school, he and Tyler hit the road playing numerous Monday qualifying tournaments which cost about $500 each and waited for their first big break.\n\nThat had come five months ago when Marc finally made the cut in the Monday qualifier for the RSM Classic at Sea Island, GA. The tournament purse was $6.6 million and Marc would make at least $25,000 even if he finished last. But to everyone's surprised, the newest man on the tour finished a very respectable 15th and took home $125,000. That was a big deal, in and of itself, but unless he could earn another hundred grand or so that year, he'd have to go back to Q school the following year and start all over again. But if he could earn enough, he'd be exempt for two years, and then the time-money clock would start again to send him back to re-qualify.\n\nIt wasn't actually $125,000 that he took he home, though. By the time Marc paid local, state, and federal taxes it was closer to $75,000, but it was so far beyond anything either he or his brother had ever made that it felt like a fortune.\n\nFor Tyler's part, there was no set formula for how a caddy was paid, but on average pro caddies who worked for top tour professionals made just over a hundred grand a year. A typical deal was a base salary of $1,500-$2,000 a week plus 5-10% of the player's winnings. In this case, because Marc felt he owed everything to his big brother, he split the after-tax winnings with him. Tyler initially resisted saying, \"Dude, YOU earned this. You're the one hitting the golf ball and making the shots. I just carry your clubs.\"\n\nThat wasn't true and both of them knew it. Tyler could read a course as well as anyone, and his suggestions had paid off in spades numerous time during the Sea Island tournament. On one such hole Marc wanted to hit a 'hard 8' meaning an 8-iron, but Tyler insisted that a soft 7 would be the better choice. Marc listened and dropped his second shot to within six feet of the hole to make eagle on a par 5 the second day. And that had moved him up three places on the leader board and that one shot was worth well over $25,000.\n\nWhat no one but Tyler knew was that his younger brother used a chunk of his remaining money to pay off the remaining balance on their dad's truck, and a significant chunk of what was left went to charity. Specifically, Marc had a soft spot for children's charities, and especially hospitals that helped kids. He gave $5,000 to two different hospitals that worked with children who'd been burned or lost limbs. It was all done very quietly and no one outside of the hospital administrators knew. Except for his brother.\n\nHe also bought his mom a new refrigerator she desperately needed and fully stocked it for her. The rest went into his own meager bank account to fund future travel and pay off some bills of his own and catch up on the back rent they owed on their shared apartment.\n\nToday, Marc had failed to qualify for another tournament, and having failed, he now set his sights on the next one that was reasonably close to their Columbia, South Carolina, home in Hilton Head, South Carolina. As with the tournament in Georgia, he and Tyler could drive there in a few hours, eliminating the need to risk losing his clubs in a baggage fiasco on an airplane.\n\nThe RBC Heritage in Hilton Head was an annual event played at Harbor Town Golf Links on Hilton Head Island with a purse of $7.1 million.\n\nTyler had two weeks until the qualifier for the Heritage, and the need for a caddy was growing stronger by the day.\n\n\"I won't be able to get this cast off for another three weeks, bro. And that's if everything heals up right. Even if it does, I won't be able to lug around your clubs for at least another couple of weeks after that and maybe more.\"\n\n\"No worries,\" Marc told him. \"I'll be home later tonight and we can put our heads together.\"\n\nTyler laughed and said, \"The only thing that'll do is give us both a headache when they hit.\"\n\nMarc was a little down after failing to qualify, but talking to his brother had cheered him up the way it always did and he laughed once he 'got it'.\n\n\"Then maybe we should just talk.\"\n\n\"Over a beer?\"\n\nMarc rarely drank, but a cold beer sounded really good to him all of sudden.\n\n\"You know what? I could use a cold one.\"\n\n\"Safe travels, Marco,\" Tyler said, using his brother's childhood nickname.\n\nMarc did the same when he said, \"See you in a few hours, Tye-Dye.\"\n\nTyler hung up the phone then looked down at the cast on his leg for the thousandth time.\n\n\"Shit,\" he muttered before reaching for his crutches so he could go take a leak before grabbing another beer.\n\n*****\n\n\"Mommy? Are you gonna be on TV?\" her six-year old daughter asked.\n\n\"I am! But just on the local sports channel.\"\n\n\"Will you be famous?\"\n\nHer mother laughed, then knelt down to be more her daughter's size.\n\n\"No. Not hardly. But Mommy does need to find a job. Soon.\"\n\nHer little girl hugged her mother and said, \"You will, Mommy. I promise.\"\n\nTrying not to tear up, the former LPGA golfer held her daughter close and told her how much she loved her.\n\n\"And Daddy loves you, too.\"\n\nThat comment was too much for her, causing tears to well up in her eyes, and Renee Roberts started blinking fast to hide them from her little girl.\n\n\"Yes. Yes, he does, honey.\"\n\n\"Can he see us?\" her daughter, Lexi, asked in that innocent way only young children could.\n\nRenee had no idea whether or not anything survived physical death, but she had hopes that something--like a soul--lived on in a place like heaven.\n\nSo she pulled back, put on a happy face then told her daughter she was sure he could.\n\n\"Let's wave to Daddy!\" Lexi suggested.\n\nRenee bit her lip then looked up and waved just like her daughter did.\n\n\"We love you, Daddy!\" the first grader said, believing that her late father really was watching and listening just before blowing him a kiss.\n\n\"Okay. Let's get ready to go to Grandma's so she can watch you, okay?\"\n\n\"So you can be famous!\" Lexi replied, that sweet smile back on the young girl's face.\n\nRenee's husband, Don Roberts, had been killed in a car accident just shy of three years earlier. At the time of his death, he was earning good money, and that was roughly the same time when Renee's golf career hit the skids. She'd never won much in the way of money, but she'd done okay during the 10 years she was on the LPGA tour. It was actually \"off and on\" with most of it being \"off\", but she had made cashed in several tournaments, with fourth place her best-ever finish.\n\nHer last 'cash' had been 15 months before the accident, and by then, they were 100% dependent on his income. Most of her winnings had gone into paying for their four-bedroom home which they owned outright, one of the better decisions they'd ever made. Even so, after a state patrolman informed her of Don's passing, she also learned they had a fairly large amount of debt. He'd done the finances, so she really had no idea where they stood, and when she found out, it took her breath away.\n\nThe only bright spot had been the life insurance policy Don took out when they got married. She was a struggling young pro golfer and he'd just gotten hired as a junior attorney. They struggled to get by, but looking back, those were some of the best days of their lives.\n\nOne of the first things Don had insisted on was a term life policy that would allow his wife 'breathing room' to get back on her feet should someone ever happen to him. Being so young it seemed like a waste of money to her at the time, and neither of them ever really thought it would be needed. And until that fateful day when there was a knock at her door, there'd been no reason to think it would.\n\nThose days were long behind her now as was her marriage, and in spite of living as frugally as she could, the money was nearly gone. The mortgage might have been paid off but property taxes and homeowner's insurance premiums and HOA fees still had to be paid along with all of the other bills people had each month.\n\nRenee loved golf and knew the game inside and out. Her playing days were over, but she'd stayed in good condition thanks to daily walks and Pilates. Even so, at 40, the chances of landing a caddy job for anyone, let alone someone with real earning potential, seemed bleak. Thanks to a friend at a local news station, she was being interviewed as a 'hometown pro' although she was actually a former hometown pro very people had even heard of unless they really followed women's golf.\n\nIt seemed unlikely the interview would generate any interest in her as a caddy, and she'd already used up every favor from any and all former pros on the tour and come up blank, but she had to try. If this didn't do the trick, she had no idea what she'd do, but she would have to find a job in a world where the only thing she really knew was golf.\n\n\"Maybe the station will hire me onto their sports team,\" she thought with a sad little laugh. \"And maybe will pigs will fly and bullfrogs won't....\" as she grabbed her purse and got Lexi out the door.\n\n*****\n\nThe local news aired at 6pm, and while Marc, who was now home, wanted to watch something lighter, he knew his brother too well. He had an evening routine, and watching the news on Channel 4 was a part of it. The only good thing he could think of was that he wouldn't have to watch the golf channel for at least 30 minutes. He loved golf, he just didn't love it the way Tyler did, and he needed a break from the sport he now played for a living after the disastrous outing with their dad as his caddy.\n\n\"Where's that cold one you promised?\" Tyler asked when his brother plopped down on the other end of the couch.\n\n\"Me? I believe that was you, Caddy.\"\n\n\"Oh, okay. I see how it is. You want the guy with the broken leg to go fetch your beer. Real nice...bro.\"\n\nMarc laughed then got up and went to get two cold ones and returned with them a minute later.\n\n\"Jeeez. Are you kidding me? Another carjacking in downtown Columbia. Did you hear about this?\" Tyler asked as he took the beer and took a first long pull.\n\n\"Another car jacking? Here?\"\n\n\"Yeah! Some woman got drug out of her vehicle while her kid was still in the car when this asswipe took off!\"\n\nMarc shook his head because he didn't know what else to say. This kind of thing was happening in cities all across the country now, and no one seemed to really care. Or at least that's how it felt to him.\n\n\"If someone did that to my wife, I'd kill the sonovabitch!\" Tyler said, the frustration from his injury having been building up inside him being released in the form of venting.\n\n\"You don't have a wife, bro.\"\n\n\"I'm just sayin', okay? Sheesh.\"\n\nNeither of them said anything through weather or traffic, but during the break Tyler asked for another beer. Marc had only sipped a quarter of his but got up to help his brother out. As he returned, Tyler called for him to hurry up.\n\n\"Dude! Check this out!\"\n\n\"We're here tonight with a local hometown star, former LPGA pro, Renee Roberts, who's turned to caddying since leaving the tour several years ago.\"\n\nThe reporter turned toward the very attractive woman of 40, whose smooth, fair skin and naturally blonde hair made her look much younger, and started asking questions.\n\n\"So have you found someone on the tour to caddy for?\" was the first question.\n\n\"No. I've had a gig here and there, but I haven't found anything permanent so far.\"\n\n\"There isn't a lot of turnover in the top 20 or 30 golf caddies on tour. Do you have your eyes set on maybe catching their eye and landing a job with one of them?\"\n\nThe woman laughed and told him, \"No. I'm a realist above all else. I'd be very happy caddying for anyone who's on the tour or maybe has their PGA or LPGA card but hasn't qualified yet.\"\n\nHe asked several other questions, but Marc wasn't listening. He was staring at the blonde woman with the perfect smile who looked more like a model than a golfer or a caddy. Her face, and her name, were indelibly burned into his brain as he finally came back to reality himself and asked Tyler a question.\n\n\"You know her?\"\n\n\"Hell yeah!\" Tyler told him. \"I know everyone who's ever been on tour for the last 25 years and pretty much anyone who was any good before that. She knocked around for a lot of years and never won a single tournament. Not sure if she ever even had a top-ten finish. But damn that woman is still hot as hell!\"\n\n\"Yeah, she's definitely attractive. How old do you think she is? Mid-thirties?\"\n\n\"Nah. She just turned 40, bro. And she's been off the tour for quite awhile now.\"\n\nTyler looked over at him and asked, \"Why?\"\n\n\"I don't know. I...I guess maybe she just caught me a little off guard.\"\n\n\"Off guard?\" Tyler laughed.\n\nHe looked over at Marc then said, \"Ah, okay. Yeah, you better believe I'd hit that, too!\"\n\nMarc didn't laugh, but he also didn't say anything. Unlike most brothers, where the older one is the quieter of the two, Tyler was the outspoken sibling. It was Marc who was quiet and measured. So much so that his brother occasionally called him the Professor, because he always seemed to be deep in thought about something.\n\nAdditionally, Marc wasn't about to point out that this very attractive woman was out of her brother's league. Tyler wasn't a bad looking guy, he'd just let himself go the last few years in which beer slowly became his best friend.\n\n\"You hungry yet?\" Marc asked, hoping to change the subject.\n\n\"Hell yes I'm hungry. Unless you're cooking.\"\n\n\"No. I'm not cooking. But I can go pick up some takeout.\"\n\n\"What are you waitin' for? Don't let the door hit you on the way out, bro!\" Tyler told him as he drained his second brew since Marc got home but his eighth of the evening at it wasn't even 7 o'clock yet.\n\nMarc started the car but before he put it in gear he looked up the number to the TV station and put it in his contacts. As he drove he thought about the woman on TV named Renee Roberts and the more he thought the more he wanted to meet her.\n\nAfter picking up the food and putting the takeout in the seat next to him, he picked up his phone again, brought up the number and hit 'dial'.\n\n\"WQXY, your local station,\" he heard.\n\n\"Um, yes. I uh, I was watching the uh, the sports broadcast tonight, and I...well, I'm a pro golfer...a new pro...and I saw the woman looking to caddy for someone, and....\"\n\n\"Mrs. Roberts,\" the woman on the other end of the line said cheerfully.\n\n\"Yes. Renee Roberts, right?\" he asked even though he was 100% sure of the names, both first and last.\n\n\"We're not allowed to give out her number, but we are permitted to take yours and pass it on to her. Would you care to do that?\"\n\n\"Yes. Absolutely.\"\n\nMarc provided the requested personal information and was then asked what would be the best time to call.\n\n\"Um...anytime, really. I'm usually up until around midnight and up by six or six-thirty every morning.\"\n\n\"Okay. Got it. I'll pass this along, and thank you for watching WQXY, your local station!\"\n\nBefore he could say, \"You're welcome,\" the line went dead, and a couple of minutes later he was watching Tyler shovel Chinese food in like it was the first meal he'd had in days.\n\nMarc was less than halfway done with his meal and the first, now-warm beer, when Tyler finished up and let out a loud belch. He'd also polished off a third beer with the food and asked for a fourth, or rathe his fourth that Marc knew of. Rather than try and tell Tyler he needed to slow down a little, Marc got up to get it for him just as his phone rang.\n\n\"I need to take this. I'll get your beer as soon as I'm done, okay?\"\n\n\"Then make it quick, Marco!\" Tyler called out as his brother disappeared.\n\n\"Hello?\"\n\n\"Hi. Is this...Marc?\"\n\nHe knew who it was, and when he heard her voice, he felt something he hadn't felt in quite some time.\n\n\"Yes. Is this...Mrs. Roberts?\" he asked hopefully.\n\n\"Yes. But please call me Renee,\" she said, clearly smiling as she did. \"They told me you saw my mug on TV and left a message to call you.\"\n\nShe said it lightheartedly, and just those few words in a voice as sexy as she was caused him to have to...readjust things.",
        "\"I did see the interview, and I'm really glad you called.\"\n\n\"No. It's my pleasure. I hope you don't mind, but I did a little checking real quick and saw your very respectable finish at Sea Island. Congratulations. That's huge.\"\n\n\"Oh, thanks. I uh, I got pretty lucky on a couple of putts and several drives took a good bounce.\"\n\n\"Maybe so, but you don't finish that well without talent. Sure, we all need a break here and there, but you obviously have serious potential.\"\n\n\"Thank you,\" he told her, liking everything he'd heard so far.\n\n\"So...are you looking for a caddy?\" she asked, biting her lip as she did, hoping she wasn't pushing too hard, too fast.\n\n\"I am. My brother broke his leg skiing, and our dad filled in this weekend, but as much as I love my dad, that was....\"\n\nMarc laughed before saying, \"Pretty awful.\"\n\nRelieved, Renee laughed, too, and told him she understood.\n\n\"Listen. I...I'd uh, I'd like to meet with you. If you have time.\"\n\nRenee tried not to laugh because all she had was time.\n\n\"I'd love that! Just say when and where and I'll be there.\"\n\n\"With bells on?\" Marc said before feeling embarrassed for just blurting out someone so childish.\n\n\"Hey, if you like bells, I'll wear them!\" Renee replied with that laugh he already loved.\n\n\"I'm playing 18 holes on Tuesday at Woodcreek. I have an 8:30 tee time. If you can make it, you can caddy for me, and we'll see how well we work together. I'll pay you a hundred bucks for the round if that's okay,\" he suggested, almost making it sound like a question.\n\nWoodcreek is an 18-hole course that is 7,205 yards in total length and one of the best courses in Columbia. Since finishing 10th in a PGA tournament, Marc was again able to golf there for free. As a teen, he'd worked there in exchange for free tee times. Now, the only catch was that they were allowed to use his name, image, and refer to him as \"Woodcreek's pro\", a deal he was happy to make.\n\n\"Are you kidding? I wasn't expecting to even be paid, so thank you, and I'll definitely be there. With bells on!\" she replied, trying not to sound too excited in spite of being thrilled.\n\n\"Okay, then. I'll uh, I'll see then.\"\n\n\"Yes. And Marc? Thank you. Thank you so much!\"\n\n\"Oh, sure. My pleasure...Renee.\"\n\n\"Bye!\"\n\nMarc hung up his phone too stunned to speak. Renee hung up hers and squealed so loudly that Lexi came running.\n\n\"Mommy? Are you okay?\"\n\n\"I'm fine, sweetie! I...I might have a job!\"\n\n\"Really?\" her daughter asked, a sad look on her face that made her mother stop smiling.\n\n\"Well, yes. Isn't that wonderful?\"\n\n\"I guess.\"\n\n\"Honey? What's wrong?\"\n\n\"I...I don't want you to go away,\" her little girl said.\n\n\"Oh, Lexi. Mommy's not going anywhere, honey. I'm just going to carry someone's golf clubs for a few hours. And you can stay with Grandma. Is that okay?\"\n\n\"You promise?\"\n\nHer mom bent down, kissed her daughter's forehead, then crossed her heart as she promised.\n\n\"Okay!\"\n\nLexi thought for a moment then looked up at her mom.\n\n\"Do you think Daddy helped you get the new job?\"\n\nRenee was so happy that even the mention of her late husband didn't bring her down.\n\n\"You know what? That might just be true.\"\n\n\"See! Daddy IS watching, huh?\"\n\nRenee hugged her daughter, and with that, Lexi skipped out off and went back to playing in her room while her mom went back to her laptop and read everything she could find about Marc Hardison.\n\nThere wasn't much to find, but she felt like she almost knew him by the time she got finished. Renee hadn't even thought of dating since losing her husband, and while Marc was a very handsome young man, he was also very...young. He'd only just turned 26 while, to her chagrin, she had recently hit the big four-oh.\n\n\"Forty, no job, no money, and no honey,\" she slowly and quietly said out loud, feeling sorry for herself for the first time in several weeks. But it only lasted a few minutes as she turned her attention to the possibility of not only having a job but doing something she loved again.\n\nRenee was so excited she barely slept that night. She was up at 5:30, showered, got dressed, ate breakfast, then double and triple checked to make sure she had everything she needed. Satisfied that she did, the only thing left to do was wait for her mom to drop by. She would get Lexi up, feed her breakfast, and take her to school so that her daughter could focus on this new, potentially amazing job offer.\n\nShe was at the first tee by 8am and waited nervously for Marc to arrive. She saw him walk into the clubhouse at 7:50 and felt her heart flutter. It couldn't have romantic. No, it had to be pure, unadulterated excitement fueled by hope.\n\nWhen he walked out and headed toward her she smiled and waited for him to see her. He was wearing a very nice, three-button, blue, collared Henley shirt and white pants with white golf shoes. Were she not so nervous Renee would have noticed that, but she was focused on one thing and one thing only. Being the best caddy she could.\n\nMarc, on the other hand, did notice her. Renee was wearing a short-sleeved pink shirt, white shorts, white tennis shoes, and a white visor. Her long, blonde hair was pulled into a flat ponytail, and she was wearing just enough makeup to make her pretty face look even nicer than he'd remembered from her TV appearance.\n\nAs Marc walked up to her, she was still smiling, and he couldn't help but notice the perfect, white teeth and her bright, blue eyes that went amazingly well with her hair.\n\n\"Good morning!\" she said cheerfully as she stuck her hand out.\n\nMarc shook it, smiled back, then said, \"Pardon me for saying this, but you don't look like any caddy I've ever seen.\"\n\nStill too nervous to know whether he was being polite or maybe even flirting, she only laughed and thanked him for the compliment.\n\nShe finally noticed what he was wearing and said, \"And may I say you look quite dapper yourself.\"\n\nMarc also laughed and thanked her, too.\n\n\"So. Are you ready?\" he asked.\n\nShe pulled out a yardage book for Woodcreek, opened it to the first hole, then told him she was.\n\n\"I'm impressed. Does that have the latest changes in it?\"\n\n\"It does,\" Renee assured him. \"It has the changes on six and on fifteen.\"\n\n\"Great. In that case, let's rock and roll!\"\n\n\"I'm ready! And this is the last time you'll ever carry your clubs,\" she told him pointing to the bag he carried out of the clubhouse. \"If you hire me.\"\n\nHe smiled at her and said, \"Deal.\"\n\nShe handed him a tee and a ball and watched where he placed it. The first hole was a par 4 and 425 yards. It had a dogleg that favored a draw for a right-handed player in order to avoid a small bunker, and she agreed with his placement.\n\nMarc needed to test her knowledge immediately, so as he sized up the hole, one he'd played so many time he no longer needed a yardage book, he asked her what she thought.\n\nWithout hesitation Renee said as she pointed to the book, \"You've got 235 yards to the fairway where we want to land the ball. A nice draw with the driver will get you there plus another 15-20 yards if we get a good bounce. That sets you up for a perfect approach with a pitching wedge. What do you think?\"\n\n\"I think I like the way you think,\" he told her as he reached for the driver.\n\nHis first shot didn't draw as much as he wanted, and he ended up just ten feet from the rough on the right side of the fairway. Renee took driver from him and strapped on the bag and began the first of many walks.\n\n\"You've got 183 to the tee, but we need to get up and over the little knoll.\"\n\nJust to see what she'd say, Marc suggested an 6-iron.\n\n\"You could hit a soft 6, but I think a hard 7 is the better choice to get the roll we're looking for.\"\n\nShe had no idea he'd already decided to do just that nor that he was still testing her. She was also unaware that she was now two for two with her new boss.\n\n\"I agree.\"\n\nShe pulled out the 7 iron, wiped the face, then handed it to him. That kind of attention to detail was expected from any caddy and should be second nature. Seeing her do that only added to her credibility.\n\nMarc's second shot was nearly perfect. It landed just on the fringe, bounced once, and rolled onto the green and stopped about seven feet from the hole.\n\n\"Tweet, tweet,\" she said, indicating his birdie opportunity, a happy smile on her face.\n\nIt was an easy putt with just a slight left-to-right break, and Marc dropped it into the center of the cup.\n\n\"One under and heading to the second tee,\" his caddy chirped as Marc recorded his score on the card the clubhouse provided while she did the same in her book.\n\nBy the ninth hole, Marc was three under par and very impressed with his new caddy.\n\nAs she handed him a 6-iron for the par-3 hole, he said, \"I'm liking what I see, Renee.\"\n\nA feeling of happiness washed over her as she thanked for this compliment, as well.\n\n\"I uh, I was referring to your caddying abilities,\" he then said, causing her to have to think for a moment.\n\nShe got and laughed.\n\n\"Right! I mean, it never entered my mind you were talking about me.\"\n\nShe laughed again as she said that, but when Marc answered her, she stopped laughing.\n\n\"I wasn't, but what I said is equally applicable to how you look as well as how you caddy.\"\n\nBecause he was so handsome and so young, it still didn't occur to her that he could be flirting. She knew she wasn't unattractive, and were someone to press her, she might even admit she was still a good looking woman for someone who'd just turned 40. But men Marc's age didn't look at women her age that way--even if they were still beautiful 'for their age'. Or if they did it wasn't because they were interested in a relationship, and she had no interest in hook ups or any kind of casual affair.\n\nThose and several other thoughts zipped through her brain in the course of a few seconds which gave her time to process what he'd said. The only thing she'd missed was the way Marc also stopped smiling when she did. Renee had no idea he thought he might have offended her because she hadn't been offended in the least. She'd only gotten serious because his words surprised her so much. He, on the other hand, assumed they had made her feel uncomfortable, and his tee shot reflected it.\n\nThe second hole was a short par 3, and he was trying to get the ball up high with backspin so it would hit near the pin and not keep rolling. But his concentration was off just a tad, and he didn't get under it enough. When the ball landed it not only didn't stop, it rolled on for another 30 feet and ended up a good five feet off the green in the first cut of rough.\n\n\"No worries,\" Renee said just as cheerfully as before. \"That's a makable putt.\"\n\n\"I just didn't get under it,\" he replied as they walked.\n\n\"It looked like you lost focus,\" Renee said without being critical.\n\nMarc glanced over at her as they walked and said, \"I did. I knew I offended you with my...comment...and that was on my mind when I hit it.\"\n\nRenee stopped walking, and when Mare noticed, he stopped, too.\n\n\"What...comment?\" she asked, a look of genuine confusion on her face.\n\nNow Marc was equally confused.\n\n\"About...how nice you look.\"\n\nShe'd already completely forgotten about it and was totally focused on his tee shot along with trying to make a second birdie on the hole.\n\n\"Marc. I...I wasn't offended. I...I had no idea you were being serious. I just thought you were, you know, being nice.\"\n\nA sense of relief flooded his brain, and a smile appeared on his face.\n\n\"Whew! I'm really glad to hear you say that.\"\n\n\"Or course. It's no bid deal. Besides, it was just...talk, right?\" she said in a cheerful way.\n\n\"Yeah. Right. Just...talk,\" he said as he looked at her a little too long before quickly looking away and heading toward the green again.\n\nAs they trudged along, he couldn't help but think about how his brother would have been the one to actually say something like that. Only...something not as tactful or as nice. It was just one more of many things that separated him from his brother.\n\nMarc deeply respected women while Tyler saw them as something to be conquered. At 26 and just getting his career going, Marc wasn't planning on settling down anytime soon, but were the right woman to come along, he wouldn't pass up the opportunity just because of his age. Tyler, on the other hand, probably wouldn't even consider marriage until he was at least 40, and it was quite possible he would never tie the knot.\n\nMarc's first putt came up three feet short, and he settled for par on what should have been a birdie hole. But at least Renee didn't think of him as some kind of crass, cocky...player. When that word came to mind it made him laugh because he actually was a player. He just wasn't a...player.\n\nEach hole proved that Renee not only knew golf, she seemed to know Marc. She not only had the right club ready for him on any shot, she was holding a water bottle in her hand before he could ask her for a drink. He didn't mention being hungry, but on 14 tee she handed him a small bag of trail mix she'd put together, and that impressed him even more.\n\n\"How'd you know?\" he asked when he took it and began munching before offering her some.\n\n\"I try to pay attention,\" she said politely and in a way that made him look at her in a whole new light.\n\nShe was definitely very attractive to him, but attractive women were everywhere. Now that he had some very small amount of notoriety, he even had had a few golf groupies, a term that made him laugh. But they were there at every hole smiling, waving, and occasionally slipping their number to his caddy. Tyler, of course, knew his bother would never call them, so after showing him the note, he would call them himself later that evening, assuming he found them attractive enough. Two of the three women told him they didn't 'date caddies' but one of them invited him over after the third round of the tournament. The fourth day had been along, hard slog for the caddy who woke up with a hangover and a smile on his face.\n\nHe finished the snack, washed it down with some more water, then hit a beautiful drive that went 273 yards, landing in the middle of the fairway, his best drive of the day.\n\n\"Now that's what I call puttin' the wood to it!\" Renee called out when she saw how good the tee shot was.\n\nNeither of them picked up on the alternate meaning of 'wood', but had Tyler been there....\n\nMarc birdied the final hole leaving him seven under par for the course.\n\n\"Nice,\" Renee told him as they headed into the clubhouse.\n\n\"I should have been eight under, but yeah. Not bad.\"\n\nRenee was dying to ask him what he thought of her caddying skills but decided to wait for him to tell her. She rechecked every club, wiped them all down, and locked up his bag then returned the key to its owner who was now talking to someone behind the counter.\n\n\"So this is your new caddy, huh?\" the heavyset man of about 55 said as he smiled at Renee.\n\n\"I don't know. Am I?\" she asked as nicely as she could.\n\n\"Are you kidding? You're amazing!\" Marc told her.\n\n\"So...so does that mean....?\"\n\n\"Yes. The job's yours if you want it. Oh. And the hundred dollars.\"\n\nHe fished out five twenties and handed them to her, thanking her again for her superb work. Renee's brain flooded her body with a dozen different chemicals, all of them pleasant, and the combined effect caused her to throw her arms around her new boss as she then thanked him profusely.\n\nShe barley noticed that he briefly put his arms around her waist before she pushed back and apologized.\n\n\"Oh, my goodness. Marc. I am SO sorry!\" she said as she glanced over at the other man who was smiling, an embarrassed look on her face.\n\nBut the man's face was anything but embarrassed.\n\n\"No worries! What I wouldn't do to be in Marc's shoes right now!\" the man said with a laugh.\n\nBecause of his age and the fact that he was an average-looking guy at best, Renee knew he was kind of flirting, but it was harmless, and when she saw Marc laugh, she laughed, too.\n\n\"Don't apologize,\" Marc told her much more quietly than she'd been. \"That was actually...really nice.\"\n\nMarc kind of had a look on his face now. This one was a little...sheepish. It told her that he actually might be flirting with her, and when she realized that could be true, she found herself staring at his handsome face. She had no idea she was staring until he broke eye contact and looked down. She then wondered if he thought she was crazy--or worse--for staring at him as though he wasn't just kidding around--again.\n\nSo once more, Renee told herself that she'd misread him, and now she wasn't sure what to say or do.\n\n\"I...I'm very thankful for the opportunity, Marc,\" she finally said, hoping to reestablish a more professional tone between them.\n\n\"And I'm extremely grateful to have found such a qualified caddy.\"\n\nWhatever emotions she'd just experienced quickly leveled off as she felt like things were okay between them and once again right where they should be.\n\n\"If you don't have anything else for me, I should probably head out. My daughter will be home from school pretty soon, and....\"\n\n\"How old is your daughter?\" Marc asked before she could finish.\n\nThe proud mom smiled then said, \"Lexi is six. And sweet as can be.\"\n\nRenee still wore her wedding ring, and although Marc had noticed it earlier, it hadn't had any meaning because she was there to 'interview' for being his caddy, not a date. But he suddenly felt a little depressed but did his best not to let it show.\n\n\"Do you and your husband live nearby?\" Marc asked innocently enough.\n\nRenee stopped smiling so fast it made him think he'd really stepped in it this time.\n\n\"My...my husband. He passed away....\"\n\nBefore she could say how long ago Marc told her how sorry he was to learn that.\n\n\"Thank you. It hasn't been easy, and it's been even harder on Lexi. She was only three when it happened, and how can someone that young possibly understand?\"\n\nIt was a rhetorical question, but Marc felt the need to say something.\n\n\"I...I don't know. I honestly don't know. And I can't even imagine how awful that's been for...both of you.\"\n\nRenee didn't want to appear weak in front of Marc, so she put a smile back on her face and said, \"Life goes on, right? We either adapt to the changes it throws at us or we...die along with the loved one we lost.\"\n\nShe was no philosopher, but her words made a deep impression on him because he'd believed that for quite a few years. In his mind, life really was all about change.\n\nPeople changed. Things changed. Relationships changed. In fact, everything in the universe was in a constant state of change in terms of both time and space. Change was the norm, but even so, people did their best to create a sense of stability in an ever-changing world where the only certainty was the ultimate change from life to death. Taxes were considered certain, too, and based on the amount he'd paid for his first 'win', Marc had to agree they were probably right.\n\n\"Okay. I was going to suggest maybe getting a bite to eat, but you have someone a lot more important than me to get back to, so maybe some other time?\" Marc told her, a smile now back on his face, too.\n\n\"Um...I...I had no idea you were even thinking about that,\" she said almost apologetically.\n\n\"I was, but I didn't know you had a daughter; a daughter who'll be missing her mom if she's not there.\"\n\nRenee almost said, \"Right,\" but didn't.\n\n\"When we play tournaments. Sorry. When you play in various tournaments, I'll have to be away for a day or two sometimes, so I don't think another hour or so will matter. Besides, my mom's there, and she loves spending time with her granddaughter.\"\n\n\"Are you sure?\"\n\n\"Yes. Definitely. We can grab a bite,\" she told him, a twinkle in her eyes that Marc noticed and liked very much as he tried to get a read from her the way he did from the green on a hole.",
        "\"Okay, then. Do you want to ride with me or follow me there?\"\n\n\"I suppose that depends on the direction we're going in,\" Renee replied in a rather sweet kind of way, something else Marc liked just as much.\n\nHe made a suggestion, and because going there would require him to bring her back the 'wrong' way from her house, she opted to follow him. But she no sooner got in her car that she found herself wishing she'd made a different decision.\n\nWhen she realized the reason she felt that way, she told herself to 'get a grip'. When some other part of her brain tried to argue, she reminded it that very attractive, 26 year-old men didn't date 40-year old women.\n\n\"Not even 40-year old women who still looked good--for their age,\" she reminded herself yet again.\n\n\"Especially once they find out that older woman has a child,\" she thought before dropping it.\n\nMarc turned onto Middleburg Drive and as Renee followed, she saw Band Boys Cafe just ahead. She'd been there once before and really enjoyed it. They offered both indoor and outdoor seating, and she didn't really care which one Marc preferred.\n\n\"In or out?\" he asked after opening her door for her and helping her out.\n\nBefore answering she looked at the door then said, \"Aren't I the one who's supposed to do stuff like that for you?\"\n\nMarc laughed then told her if she ever did open his door he'd fire her.\n\nThat made her laugh and promise she never would.\n\n\"You might be my caddy who carries my golf clubs, but to me, anyway, you're a woman first everywhere off the golf course.\"\n\nWhat he said came across neither as condescending nor offensive. It was actually a refreshing breath of fresh air in a world where many men no longer treated women differently. And who could blame them after 60 years of being told women are no different than men or that women didn't need men except as...sperm donors.\n\nAs she was still thinking about what he said, they reached the entrance where he opened that door, too, then told her, \"And I hope it's okay, especially after this morning, if I tell you you really are a very attractive woman.\"\n\nShe stepped inside, let him catch up then said rather sweetly, \"I don't mind at all. And thank you for saying that.\"\n\nA perky young girl of maybe 17 or so welcomed them and asked if they'd be dining inside or out. She looked at Renee for the answer, but she just looked at Marc.\n\n\"We've been outside for hours. Do you mind if we eat inside?\"\n\nShe then turned back to the hostess and said, \"We'll be eating in.\"\n\nMarc helped her with her chair, another unexpected surprise, and the two of them started looking over the menu.\n\n\"Anything look good?\" he asked her as they continued scanning.\n\n\"Actually, everything looks good!\"\n\n\"I'm starving,\" Marc admitted. \"I want a sandwich but can't decide which one. All of them are making my mouth water.\"\n\n\"I haven't had corned beef in forever,\" Renee mused as something called The New Yorker caught her eye.\n\n\"Oh, yeah. That looks great. Two New Yorkers?\"\n\n\"Please!\"\n\nMarc ordered for them both, and as they waited for their food he spoke first.\n\n\"I can't tell you how glad I am to have found you.\"\n\n\"Oh, gosh. I can't you how glad I am that you did,\" she told him with all sincerity.\n\n\"You were on the tour. Do you miss it?\" he asked her.\n\n\"Yes and no. I love golf, and were I good enough to make a living at it, I'd still be out there. But I was only an average player, and while I did make a little money, it was never anything significant.\"\n\n\"Just making the tour means you're a lot better than average,\" Marc said in a friendly way.\n\n\"True. But among those on the tour, I was average, at best,\" she said correcting him but in that polite, pleasant way he found charming.\n\nMarc sighed then told her she was right before saying, \"That's me, too.\"\n\n\"Wait. You haven't been on the tour long enough to say that,\" Renee countered with a little laugh as their meals came, the corned beef piled high with melted Swiss cheese on marble rye buns.\n\n\"Fair enough, but I see these guys play, and I gotta tell you, I'm in awe.\"\n\n\"Marc? You made more money in your first cash than I did my first four years on the tour. I've seen a ton of players come and go, and you're not giving yourself nearly enough credit.\"\n\nHe took a monster sized bite while she spoke and was still chewing. When enough of it was gone to allow him to talk he replied.\n\n\"It certainly helps to have someone who believes in you.\"\n\nHe looked right at her, and the way he said it made her feel warm all over.\n\n\"What about your family? Your brother's been your caddy since day one, right?\"\n\n\"He has. Tyler's a great guy, and he knows golf. I mean, he lives and breathes it. But his head isn't always exactly in the game.\"\n\n\"I'd ask what you mean but that's none of my business,\" Renee said before taking a small first bite of her own.\n\n\"No, it's okay. Tyler is well, Tyler tends to be...all about Tyler. Don't get me wrong. I love my brother to death. It's just that we're such different people.\"\n\n\"May I ask, 'How so'?\"\n\n\"Renee? You can ask me anything,\" he told her before taking another manly-sized bite.\n\nAgain, he started speaking before he finished chewing, but that's just what guys did, and it didn't bother Renee in the least. She was thoroughly enjoying the company and the food.\n\n\"That's tough. I know why I say that, but telling someone else feels....\"\n\n\"Disloyal?\" she offered, feeling bad for prying.\n\n\"I was gonna say 'wrong' but maybe that's true, too. At any rate I'll just say that altruism isn't in my brother's vocabulary. Not to get into politics, but we're both Libertarians, and Libertarians aren't exactly known for our altruism.\"\n\nRenee kind of tilted her head, smiled again then said, \"Something tells me you're the exception to the rule.\"\n\nMarc lowered his head a little in modesty then told her he hoped that was true.\n\nNow unsure of whether or not she should say anything else, Renee just took another bite and chewed.\n\n\"May I ask you something?\"\n\nShe finished the bite then told him what he'd told her.\n\n\"Sure. Anything.\"\n\n\"You um, you mentioned losing your husband. I really am sorry that happened, Renee. Do you mind telling me how or when?\"\n\nFor the first time since she lost the only man she'd ever loved, Renee didn't choke up when she spoke of her late husband. She quietly explained what happened, how long ago it had been, and that it had been far more difficult that she could have imagined.\n\n\"I'm uh, I'm not a very...religious person,\" Marc began. \"But I am aware of how short life is and that it, or the life of someone we love, can be taken away in an instant. I think that awareness is a kind of driving influence in my life.\"\n\n\"No pun intended, right?\" Renee teased.\n\nIt took him a second to get the reference to 'driving', but that, her smile, and the pleasant way she said it made him laugh.\n\n\"I really am glad I...we...found each other.\"\n\nAgain, his words made her feel flushed, and the realization that she could possibly have feelings for this younger man caused her to look down at her food rather than run the risk of her facial expression giving him any hint as to what she was thinking.\n\n\"This is really good,\" she said before picking the partly eaten first half of the sandwich back up.\n\nMarc was well into the second half of his and told her he agreed.\n\n\"The company's really good, too,\" he told her with a smile.\n\nWithout looking at him Renee said, \"Yes. Yes it is.\"\n\nAs he sipped his iced tea, or 'sweet tea' as any respectable southerner called it, Renee asked him what was next.\n\n\"Another 18 holes tomorrow,\" he told her.\n\n\"Same time?\"\n\n\"Same time. Same place.\"\n\nThey talked golf until she was finished, and when it was time to leave, Renee planned to pay for her meal, but Marc wouldn't have it.\n\n\"Uh-uh. No way. Never. When I invite a woman to go anywhere with me, she's not paying,\" he told her as he handed $25 to their server to cover the meal plus 15%.\n\n\"Okay,\" she replied somewhat quietly before thanking him for lunch.\n\n\"And for the job. And for the company.\"\n\nThey were getting up as she said that, and Marc told her, \"The pleasure was all mine. In every respect.\"\n\nHe again opened her doors, and as she got in her car, she found herself going back to the same thing that had bothered her on the drive over. How could she possibly have feelings for him? Or for anyone she'd just met, for that matter? But especially someone who was 14 years younger than her? And not just him but also...why now?\n\nAs she drove home she told herself not to be so harsh.\n\n\"You've never had feelings for anyone but Don since the day you met him,\" she told herself as she tried to sort through her jumbled emotions.\n\nMarc was definitely handsome, but perhaps more importantly, he'd hired her when she was getting close to being desperate for work. Or was it more that he'd been so nice to her? Perhaps it was how he'd been so thoughtful and understanding when it came to losing her husband. As she pulled into the driveway she thought it was probably a combination of all those things and that was it. There just wasn't anything more to it.\n\nShe no sooner opened the door than all her worries melted away as Lexi came running and calling her name.\n\n\"Mommy's home!\" she heard her daughter call out as the garage door to the house opened.\n\n\"Hey, sweet pea! How was your day?\"\n\n\"Fine! We played Simon Says in school and me and Grandma made cookies!\"\n\n\"You mean Grandma and I, right?\" her mom only partly teased as she hoisted her daughter up and gave her a hug.\n\n\"Yes. Grandma and I made cookies. Wanna see?\"\n\n\"I wanna EAT them. And YOU!\" her mom said, showing her teeth like the Big, Bad Wolf.\n\nLexi laughed and screamed in joy as they headed to smell of freshly baked cookies.\n\n\"Hey, Mom!\" Renee said as she set her daughter down.\n\n\"Hi, honey! How'd it go?\"\n\nShe picked up a still-warm cookie, took a little bite, and went, \"Mmmm. It uh, it went as great as these cookies taste.\"\n\nHer mother smiled then said, \"Really? Tell me everything!\"\n\nLexi had no interest in golf, and she was too young to worry about money and bills and jobs, so a cookie and a glass of milk made her happy as she went off by herself.\n\nRenee and her mom had always been close, but since Don's passing, they'd become more like sisters who were best friends than mother-daughter.\n\nShe started with the golfing side of things from the moment she saw Marc until they finished the 18th hole then moved on to more personal stuff like their conversation at the restaurant. Her mom listened, something she always did, and never interrupted unless she needed clarification.\n\n\"So I suppose it's just...everything all at once, you know?\" Renee said, summing up her previous mental conversation the best she could.\n\n\"You're probably right, honey,\" she told her daughter. \"There hasn't been anyone in your life but Don for...ever. So even a younger or...much-younger man...who hires you to do what you love and who's polite and kind and evidently very handsome...who wouldn't enjoy that kind of attention?\"\n\nRenee and her mom had sat down at the kitchen table, but after hearing those words, Renee got up and gave her mom a hug.\n\n\"You are the smartest person I know, Mom.\"\n\nHer mother hugged her back then laughed.\n\n\"You sure weren't saying that when you were 14 or 15.\"\n\nRenee laughed, too, because her mom was right. Like so many other teenagers, Renee thought she knew far more than either of her parents, and it took another 5-7 years for her mom to 'catch up' in terms of intelligence. Shortly after getting married, she realized her mom had always been the smarter of the two and still was.\n\n\"Renee?\"\n\nHer daughter sat back down without answering and just listened.\n\n\"Just be careful, okay?\"\n\nHer mother didn't need to elaborate. She wasn't being 'bossy'. She was just being a friend, and friends looked out for one another. In this case, a 40-year old woman who had just become aware of how lonely she was, and who was now working directly with a very attractive man--of any age--could easily make a serious mistake that might well end in heartbreak.\n\nRenee had never been, and even now still wasn't, the kind of woman who 'hooked up'. That might work well for a lot of other people in her situation, but it would never be okay for her. So any future romance she would ever consider entering into could well lead to something serious, and having a daughter, she needed to be very careful.\n\n\"I will, Mom,\" she promised before again putting Marc Hardison out of her mind--again.\n\nAt least until the 1st tee the following morning.\n\nThis time, Renee had her boss's clubs with her and was waiting for him. He smiled at her and waved the moment he saw her, and Renee, who felt her pulse quicken waved back, as she returned the smile.\n\nShe was wearing a powder blue shirt, dark blue shorts, and the same white visor and shoes. The visor and shoes weren't the same, but to Marc they looked like they were. The only real difference was that her hair was in a regular ponytail held in place with a scrunchie.\n\n\"Where's my caddy?\" Marc asked very seriously.\n\nRenee shook her head real quick making Marc laugh.\n\n\"Yeah, I came out expecting my caddy and there's a model on the first tee.\"\n\n\"Ha! Yeah, right!\" Renee said as though that was pure nonsense. But if it was, why did the feelings she'd tried so hard to stifle come back with a vengeance?\n\nAs he warmed up Renee asked if he ever golfed anywhere else in town.\n\n\"I do. It's just that this is the only course I can play for free.\"\n\n\"Oh, right. I uh, I did notice your smiling face in the on the poster in the clubhouse.\"\n\nHe chuckled then told her that was all there was to it.\n\n\"I worked at here when I was in high school, and they let me golf for free as compensation. Now they use my face and name, and I still play for free.\"\n\n\"Marc? They really should be paying you for that,\" she suggested in the nicest way possible.\n\n\"Maybe someday. If I ever win a tournament,\" he replied in his typically modest way.\n\nHe reached for driver which Renee had ready, and she said, \"You will. It's just a matter of time.\"\n\n\"Well, if I don't qualify next Monday, it's going to be an even longer wait.\"\n\nHe pushed in the tee then said, \"For now, I'd settle for just cashing again.\"\n\nRenee wanted to give him a pep talk, but she realized he didn't need it. Marc didn't lack confidence, he was just modest. And she liked modesty in men. Especially ones as handsome as Marc who could easily be...a pompous ass...and probably mostly get away with it.\n\nSeveral hours and 18 holes later, he finished eight under for the day and couldn't stop talking about how much of a help Renee had been.\n\n\"I knew caddies were supposed to be a second set of eyes, but you're amazing.\"\n\n\"I appreciate that, Marc, but I feel like there's still so much to learn and do. I do know golf, but playing and caddying are two very different things. I'm just happy to at least not be hurting your game.\"\n\n\"Hurting? Are you serious?\" he told her as he stopped walking then faced her when she stopped, too.\n\n\"I just mean I don't have all that much experience caddying, and I could easily cost you several strokes on the course during a tournament when it counts.\"\n\nHe moved a little closer, and Renee's heart began beating a little faster. When he gently touched her lower arm, she felt a jolt of something pass through her body, as no other man but her husband had touched her that way in so long she'd forgotten what it was like.\n\n\"I probably shouldn't say this, but I'm just happy to have you....\"\n\nHe stopped in mid-sentence then said something other than what he wanted to say.\n\n\"As my caddy.\"\n\n\"Oh. I...I'm happy to be...your caddy,\" she told him, feeling certain there was something more he wanted to say. But he didn't and that realization brought those same doubts and negative feelings back again, and this time they were just as strong as before.\n\n\"I uh, I should probably get going,\" Marc said as he kind of turned toward the clubhouse.\n\n\"Right. Um...me, too,\" Renee said, sensing the tension between them but misreading the reason for it completely.\n\n\"So uh, thanks again. For everything,\" he told her as he opened the door for her.\n\n\"Sure. My pleasure,\" she replied, forcing a smile.\n\nShe turned to walk away when he called her name. She stopped, turned around, and said, \"Yes?\"\n\nAgain, she knew he wanted to say something but didn't.\n\n\"That's okay. It...it wasn't important. Have a nice evening, okay?\"\n\n\"You, too,\" she said as she turned back around.\n\nBut after two steps she stopped and turned back the other way yet again.\n\n\"Marc?\"\n\nHe'd never moved and was staring at her. She startled him, and that told her he'd been looking at her, and that knowledge emboldened her as she smiled again.\n\n\"Would you maybe like to join Lexi and me for dinner?\"\n\nOf all the crazy thoughts she could have, she thought about how the proper grammar in this situation was 'Lexi and me' because they weren't the subject of the sentence. A huge smile broke out on his face, answering her question and causing her to give up on grammar in favor of something more interesting.\n\n\"I...I'd love to. Yes. Definitely!\" he said, utterly surprised at the offer. \"Just let me know when.\"\n\n\"Great. Um...is seven okay?\"\n\n\"Tonight?\" he asked, hoping that's what she meant but causing Renee to assume she'd pushed too hard.\n\n\"Oh. If that doesn't work for you, or if you had plans, it could be some other time,\" she told him, speaking faster than normal.\n\n\"No. Tonight is perfect,\" he told her. \"I'll see you then.\"\n\nShe knew he didn't know where she lived and tried not to laugh.\n\n\"Do you need my address?\" she asked rather sweetly as she walked back toward him.\n\n\"Oh. Duh. Yeah, that might help, huh?\" he told her a little sheepishly as she got out her phone.\n\n\"There you go,\" she said, texting it to his number which he'd shared with her the first time they talked.\n\n\"Got it,\" he told her as he looked at his phone. \"I'll uh, I'll see you tonight. At...seven.\"\n\n\"I'm looking forward to it,\" she said, feeling like she was 16 again after asking a cute boy to the Sadi Hawkins dance at school and hearing him say 'yes'.\n\nRenee was a pretty decent cook, and when Don was alive she loved making dinners for them, especially once Lexi was old enough to eat. Sadly, their little girl didn't have a lot of those meals with her father, and Renee tried not to think about that too much as she wondered what to make.\n\nThe excitement she was experiencing came to a screeching halt when she realized she didn't know whether or not Marc ate meat. Or even fish. There was a time when people wouldn't even think of asking such a thing, but she personally knew people who wore their veganism on their sleeves like a badge of honor.\n\n\"So just call him,\" she thought as she said 'duh' to herself.\n\nRenee enjoyed talking to people, but the truth was, she preferred texts, so she began pecking at the keyboard on her phone.\n\nMarc replied within seconds, and just seeing his words made her happy.\n\n\"I'll eat anything!\"\n\nIt was quickly followed by, \"Except for slimy spinach and stewed tomatoes. Not wild about okra, either.\"\n\nHe put a 'barf' emoji after them, and that made her laugh.\n\n\"No slimy vegetables. Got it!\" she wrote back, aware that she was feeling better than she had since that most horrible of days.\n\nShe really wanted to make a sheet-pan Paella with shrimp and chorizo, but it had cooked peppers in it, and that was too close for comfort. So she went with her second choice of Prosciutto-wrapped chicken with lemon orzo and peas. It had been well over three years since she'd made either of them, and her mouth was watering just thinking about it.\n\nBut as she got to work on it, she had another panic attack.",
        "\"Dessert! What am I going to make for dessert?\"\n\nShe only needed a moment to decide.\n\n\"Nutella-stuffed strawberries!\"\n\nNo sooner had she settled on the dessert when it hit her that they required nuts, and she had no idea whether or not Marc was allergic to them. Or to anything else.\n\n\"Sorry to bother you again, but....\" she texted. \"Are you allergic to anything? Like...nuts?\"\n\nMarc laughed when he read it.\n\n\"No. NKA,\" he texted back.\n\n\"NKA?\" a confused Renee replied.\n\n\"No Known Allergies.\"\n\n\"Oh, jeez,\" she said to herself. \"You knew that!\"\n\nStill feeling very happy, she sent back a 'duh' with a goofy-faced emoji.\n\nShe set her phone down but seconds later Marc texted her again.\n\n\"Renee? You don't need to do anything special, okay? Mac and cheese out of a box is fine by me. I'm a lot more interested in who I'm eating with than what we'll be eating.\"\n\nThere was a pulsing heart next to the text, and Renee laughed out loud. Her good mood went into overdrive as she texted him back.\n\n\"I'm kind of looking forward to being with the person I invited over myself.\"\n\nShe wanted to put a heart next to it but thought better of it. After all, he was probably still just being friendly, and he was her boss, so to speak. Still...\n\nRenee was also an excellent time manager, and by 6:50, dinner was ready to be served, Lexi was also ready, and she'd showered, done her hair and makeup, and was ready for her....\n\nShe wasn't sure what to call Marc. Visitor? Friend? Golf pro? Date???\n\n\"Definitely not 'date',\" she said as she made a final check of the food.\n\nThe doorbell rang a minute or so later, and Renee's heart skipped a beat.\n\n\"Can I get it, Mommy?\"\n\n\"Sure. Go ahead, honey,\" she said as she stood back and waited, taking slow, deep breaths as her daughter ran to the door.\n\nLexi opened the door and said, \"Hello. Welcome to our home,\" just as her mother had taught her.\n\n\"Well, hello. You must be Lexi,\" the tall, handsome young man said to the little girl in a very pretty dress.\n\n\"Yes, sir. I am.\"\n\n\"Hi, Lexi. I'm Marc.\"\n\n\"I know. My mommy told me your name,\" she said matter of factly as he stepped inside.\n\nMarc was smiling when he looked up and saw Renee, but the smile disappeared when he saw her.\n\n\"Um...wow,\" he said, his eyes open wide as he produced a bouquet of flowers he'd been holding behind his back.\n\n\"Marc! Oh, my goodness. You didn't have to do this!\" she told him as he handed them to her.\n\nHe pulled one of the white roses out, bent down, and handed it to Lexi.\n\n\"Flowers for both of the pretty ladies.\"\n\n\"Thank you!\" she said, her smile so big it made her mother very happy. \"Mommy! Look! Marc gave me a flower, too!\"\n\n\"I see that!\" her mother replied as she went to get a vase.\n\nMarc found it impossible not to stare as she walked away. Her long, blonde hair was down and fell to her bare shoulders. She was wearing an off-the-shoulder, black, knit dress that fell to about four inches above her knees that looked amazing in contrast to her golden hair and tanned skin. He had no idea what makeup she'd worn before compared to now, but he did know she looked incredible from her very pretty face to her narrow waist to her long, shapely legs and the black heels she was wearing that made them look even...nicer.\n\nHe stayed a few feet away as she trimmed them up, but he could smell her perfume even from there, and he was thankful he'd chosen dark colored pants to hide a new 'growth problem' he was experiencing.\n\n\"These are beautiful, Marc. Thank you so much.\"\n\nHe waited for her to look his way then said, \"Yes, you are. Very beautiful.\"\n\nIt was so ridiculously corny that he expected a roll of the eyes and a shake of her head. Instead, he saw her turn away from him and go back to the flowers.\n\n\"That was way out of line, wasn't it?\" he said, worried that he'd taken advantage of his new caddy.\n\n\"What? No. It wasn't out of line, at all. It just...surprised me. That's all,\" she said without looking at him.\n\nHe really wanted to ask her if it was a good surprise or a bad one but didn't just as she finally looked at him again, flashed that amazing smile his way, then said, \"A very pleasant surprise.\"\n\nMarc rarely wore pink, but he did have a pink shirt, and something told him it would be okay to wear to dinner. So he paired it with some black pants and black dress shoes and the nicest black leather belt he owed.\n\n\"You look quite handsome yourself, by the way,\" she told him, having noticed that from the moment he walked in.\n\nHe thanked her then kind of nervously said, \"Real men wear pink, right?\"\n\nRenee laughed, then told him she'd heard that.\n\n\"They uh, they just don't wear it too often,\" he added, drawing another laugh.\n\n\"Well, I think it looks very nice on you.\"\n\nLexi had been quietly watching and listening to them, and just as her mom finished with the last rose stem, she asked Marc a question.\n\n\"Do you like my mommy?\"\n\n\"Lexi!\" her mom said before Marc could answer. \"Remember what we talked about?\"\n\n\"I know. He's your boss. But he's very handsome. Just like you said,\" the child, who was being honest again, told her mother.\n\n\"Well, thank you very much, young lady,\" Marc told her as he bent back down and took her hand and kissed it.\n\nRenee was expecting an, \"Eeew!\" from her daughter. Instead, she saw her little cheeks turn bright red.\n\n\"You ready to eat, Lexi Lex?\" her mom asked, hoping to mitigate her daughter's embarrassment or crush or whatever was going on.\n\n\"Yes, ma'am. I'm very hungry.\"\n\n\"I hope you brought your appetite,\" she told Marc as she walked by him to get her oven mitts.\n\n\"Starving,\" he said as her scent created another stir in him.\n\n\"Go ahead and have a seat if you like,\" she told him as she pulled the casserole dish out of the oven.\n\n\"That smells SO good!\" Marc said as he helped Lexi with her chair.\n\nHer cheeks were only a little rosy as she thanked the handsome man who then waited for her mother.\n\n\"I can get my chair,\" Renee told him when she saw that he was waiting for you.\n\n\"No, sorry. No, you can't. Not if I'm here,\" he said in that quiet, baritone voice with a look in his eyes that caused her a different kind of 'stirring' of her own.\n\nShe set everything down then allowed him to help her with her chair. Once he was seated she Renee thanked him then said, \"Okay. Let's eat!\"\n\nMarc asked Lexi what she wanted and got a serving of the chicken out and put it on her plate.\n\n\"Do you need me to help you cut it up, or are you good?\" he asked the little girl.\n\n\"I might make a mess,\" she told him very sweetly as she looked at her mom who was smiling at her for being so grown up.\n\n\"No problem. Have knife. Will cut.\"\n\nRenee had what she wanted on her plate, and once Marc was ready, she smiled at him then cut a small piece as he did the same. She waited for him to take a bite then asked, \"So?\"\n\nHis eyes went rolled up like he'd died and gone to heaven. After just a few chews he told her it was fabulous.\n\nShe smiled then took a bite.\n\n\"Oh, it is good!\"\n\n\"Good? It's incredible!\"\n\nFor the next hour or so the two of them talked without a lull of any kind except for Renee getting up to bring dessert.\n\n\"Strawberries! Yummy!\" Lexi said as her mom sat one on her plate. \"Mommy? Do I have to cut mine up?\"\n\n\"No, honey. Just pick it up and eat it.\"\n\n\"Okay!\"\n\nLexi watched Marc bite off the top half of his and tried to do the same. It was a little much for her tiny mouth, but she managed to deal with it.\n\n\"A little smaller bite next time though, okay, sweetie?\" her mom said as Marc popped the rest of his into his mouth.\n\n\"I have a very big mouth!\" Marc said as he leaned toward Lexi and almost put his forehead against hers.\n\nThe little girl giggled and said, \"You're funny!\"\n\n\"Hey! Did you just say I'm funny...looking?\"\n\nMarc made circles with his eyes and got another laugh.\n\nThen out of nowhere Lexi asked, \"Are you married?\"\n\nRenee's eyes opened wide in shock, and Marc tried not to laugh.\n\n\"No. I am not married.\"\n\nHe waited for a second then said very seriously, \"Are you?\"\n\nRenee had to cover her mouth as she laughed when the look on her daughter's face got to her.\n\n\"I\"m six years old, silly! I can't be married!\"\n\n\"Oh. Sorry. I was just wondering.\"\n\n\"Marc's silly!\" Lexi announced.\n\nNow concerned that the young bachelor might be on overload with his fill of child banter, Renee asked if he'd like to have a glass of wine.\n\n\"In the living room. Away from....\"\n\nShe only kind of nodded at her daughter, and Lexi didn't notice.\n\n\"I like....\" Marc replied as he nodded at Lexi exactly the same way.\n\nThe look in Renee's eyes told Marc she was very happy to hear that.\n\n\"I do, too, but not everyone is a big fan of, you know....\" as she mouthed the word 'kids.'\n\nMarc looked at her and smiled as he said, \"I'm not everyone, Renee.\"\n\nHer smile disappeared again as she broke eye contact.\n\n\"Let me get that glass of wine.\"\n\nLexi was easily entertained and played quietly as the grownups talked and sipped their drinks.\n\n\"Dinner was great, Renee. Thank you.\"\n\n\"I'm so glad you liked it. And thank you for coming over. I love having someone to cook for.\"\n\n\"If tonight was any indication of how well you cook, you can ask me to eat with you guys anytime.\"\n\nRenee tried to hold his gaze as he looked at her, but once again she found herself unable to.\n\n\"So...once you qualify this upcoming Monday, you'll be off to Sea Pines, right?\"\n\n\"Once WE qualify,\" Marc replied, gently correcting her. \"I can't do this without you, Renee.\"\n\n\"Okay. I...I just hope I have my act together enough to be a help to you.\"\n\nHe'd never taken his eyes off of her and was still looking when he told her, \"You've already help me.\"\n\nShe looked away again, but Marc waited for her to look back then said, \"In so many ways.\"\n\n\"Honey? Can you maybe go play in your room for a few minutes?\" she asked her daughter.\n\n\"Okay!\" Lexi said without argument.\n\n\"I'm in trouble, aren't I?\" Marc asked once Lexi was gone.\n\n\"What? Why would you think that?\" Renee asked, a genuine look of bewilderment on her face.\n\n\"Because I keep saying things I have no business saying.\"\n\nStill looking confused, Marc tried to spell out what he thought was obvious.\n\n\"I'm fully aware that you caddy for me. And I'm equally aware that that means I should see you as a caddy. And only a caddy.\"\n\nRenee finally understood where this was going and felt her pulse quicken the way it had so many time around him.\n\n\"But?\" she asked, a kind of hopeful look on her face.\n\n\"But...I can't. I can't because you're...you're not just a caddy. You're...different. You're obviously beautiful, and that's not a bad thing, but it's more than that. You're really good at your job, and you're pleasant and I...I love being with you.\"\n\nHis voice trailed off with the last five words, but the meaning came through loud and clear.\n\n\"I...love...being with you, too, Marc.\"\n\nNow it was his turn to ask, \"But?\"\n\n\"I'm not even sure where to begin.\"\n\n\"Just start,\" he quietly suggested, knowing he was about to be put in his place, romantically speaking.\n\n\"This whole thing--you and me--it's been wonderful. But it's just so...confusing.\"\n\n\"Confusing? How so?\"\n\n\"Since Don's death I haven't even looked at another man. I suppose that's because I had no interest in looking. And maybe that was because it was just too soon.\"\n\nShe took a small sip then set her glass down.\n\n\"But just recently it's really hit me how lonely I've been. And...and then you came along, and....\"\n\n\"And?\"\n\n\"You...you made...feel something; something I haven't felt since my husband was alive.\"\n\n\"Renee, I've been feeling something, too. Something pretty wonderful. If you're feeling anything even close to that, shouldn't we at least see if this 'something' that's going on is real?\"\n\nSuddenly, Renee felt sad. And she knew the reason why. She was about to answer all of her own questions as she said this out loud, and she knew that after she said it, there would be nothing left to say.\n\n\"It...it's very real, Marc. I...I haven't felt this good since, you know. In fact, I haven't really felt much of anything since losing Don.\"\n\n\"But?\" Marc asked again.\n\n\"Marc. You're incredible. You're smart, you're funny, you're a really good golfer, and you're very handsome.\n\n\"I still haven't heard the 'but', so that's coming now, right?\"\n\nShe looked at him like she was trying to soften the blow, and Marc steeled himself for it the best he could.\n\n\"But...I'm...forty years old, Marc. That means there's 14 years difference between us, and....\"\n\n\"Wait. Is there something else coming in this 'but' or is age the only thing you're going to mention?\"\n\n\"I...I don't understand,\" Renee said as she reached for her glass and took another sip.\n\nHe was on the love seat while Renee was on the sofa a few feet away. Marc stood up and walked over to her then sat down beside her leaving almost two feet between them.\n\n\"I know golf brought us together. I'm also well aware that you're my caddy. And I know better than anyone that we really just met. But the truth is, I don't want you to just be my caddy.\"\n\nHe watched her eyes as she watched his with even more intensity. It was as though each of them was trying to look deep into the soul of the other person to find any hint of dishonesty or some subtle hint of insincerity. But there wasn't anything like that to be seen on either face.\n\nAs Marc raised his right hand Renee's eyes watched its movement like a hawk. Her hands where in her lap, but when Marc's touched one of hers, it somehow raised itself up until it was in his and holding it as his curled around hers.\n\n\"I can't stop thinking about you, Renee Roberts. And if you knew me, you'd know that doesn't happen. I...I just don't...fall for women. Ever.\"\n\nShe was still looking at their hands but finally looked up as he finished his thought.\n\n\"But I am...falling...for you.\"\n\nHer heart was pounding in her chest, but even so, she knew she had to make him understand that 14 years was...insurmountable. But before she could try, he slid closer.\n\n\"I don't care about your age. Or my age. Or anyone's age.\"\n\nHe softly squeezed her hand then quietly said, \"All I care about is who you are, and from everything I've seen, you're an amazing woman. I...I'd really like to get to you know you and spend more time with you.\"\n\nShe tried to speak to remind him she had a six-year old daughter, but her mouth was so dry that nothing came out.\n\n\"And Lexi. Who's the sweetest little girl I've ever seen.\"\n\nRenee felt her 'ironclad' excuses rusting and turning into a reddish dust as her heart melted. She wanted to insist this was all some kind of huge mistake, but before she could even finish that thought, Marc leaned closer to her.\n\n\"Please don't turn me down because of...numbers. If you don't like me or my personality or the way I look, or because of my choice of club....\"\n\nRenee wanted to smile but she couldn't.\n\n\"If it's any of those things, please tell me now so I can try and see you as nothing more than my caddy. But if you feel the way I do at all, you can't not try because of something as arbitrary as...age.\"\n\nHer heart was racing and so were her eyes as they flew back and forth, looking at his, first one and then the other. But not a single word came out, and it was then that she lost the battle as Marc leaned even closer, closed his eyes, and his lips pressed against hers.\n\nA thousand things raced through her mind about why this was all wrong, but when she kissed him back, every thought but one vanished. All she wanted was for this kiss and these feelings to last forever. And it might have lasted longer than the five or six seconds that it did had a little girl's giggle not interrupted it.\n\nRenee pulled away so fast it startled Marc.\n\n\"Sorry,\" Renee said after a second or two for her head to clear.\n\n\"We have a visitor,\" he said with a laugh as he looked over at Lexi who was covering her mouth as she stifled her laughing.\n\nWithout warning, he let go of Renee's hand, stood up, then went over to Lexi.\n\n\"A...vis-i-tor...from...another...plan-et,\" he said like a robot, causing Lexi to start giggling again.\n\nMarc held his arms out like a monster then continued.\n\n\"A...plan-et...where...pee-pull...are...very...small. Like...this...one.\"\n\nAnd then he scooped her up and began tickling her as he swung her around.\n\nShrieks of laughter rang out as he spun her around while tickling her sides. He brought her over to her mother and before setting her in her lap said, \"I...must...take you...to the leader...of my world...for...further examination!\"\n\nWhen he set her in Renee's lap, Lexi was laughing so hard she couldn't catch her breath.\n\n\"Mommy! No!\" she screamed out when her mother continued the tickling.\n\n\"You...must...not...spy...on people...from...our world!\" her mom said, continuing the schtick, laughing even harder than when Marc was doing it.\n\nMarc sat next to her, and when Renee stopped the tickling, Lexi slid over onto his lap and put her little arms around his neck. Renee was overcome by emotion, and as she watched her daughter hugging this handsome, younger man she knew she was falling for, tears of joy filled her eyes.\n\nLexi finally let go, and when she did, Marc said, \"Maybe the three of us could all do something together sometime soon?\"\n\n\"Can we, Mommy? Please?\"\n\nLexi saw her mother wiping tears from her eyes and asked what was wrong.\n\n\"Mommy's just happy, honey. That's all.\"\n\n\"Because Marc kissed you?\"\n\nRenee looked at Marc who was smiling at her then said, \"Yes. That and...other things. Is that okay?\"\n\nLexi slid off Marc's lap, turned around then took his left hand and her mother's right and put them together. When they clasped, she nodded her head and said, \"There! That's how it's s'posed to be!\"\n\nShe stood there as though she was expecting something until her mom asked what was going on.\n\n\"Aren't you guys gonna kiss again?\"\n\n\"Oh. I...I don't know,\" her mother replied.\n\n\"I kinda think we are,\" Marc said as he leaned Renee's way.\n\nShe saw Lexi smiling so she leaned, too, until their lips met again.\n\n\"Yay! Now we can play a game!\" the six-year old announced as she clapped her hands in excitement. \"Can we play Candyland, Mommy? Please?\"\n\nAn hour later and a victory under Lexi's belt, Marc watched as Renee put her daughter to bed. When she kissed the little girl goodnight and left the bedroom, Marc told her he could get used to that.\n\n\"If you had to do it 24/7 you might change your mind,\" she suggested with a smile.\n\n\"I don't see that happening,\" he told her in a way that made her believe him.\n\n\"Well, if you're not sick of us, we really would love to do something...together.\"\n\n\"Sick of you? No. No way. I'm not only not sick of you, I'm....\"\n\nHe stopped her in the hallway then took her hands in his.\n\n\"I'm crazy about you, Renee. And yes, I know that sounds crazy, but I swear it's true.\"\n\nAgain, she watched his eyes, and her instincts told her he was the real deal.\n\n\"Then maybe you should kiss me again,\" she told him as she moved a little closer.\n\nMarc smiled then did just that as Renee placed her hands on his chest, her arms sliding up and around his neck as the kissing grew more passionate. Just a short little flick of the tip of his tongue touched hers causing her to moan oh-so quietly.\n\n\"I think maybe you should go now or I may not be able to let you,\" she whispered as she pulled away.\n\n\"I hate to admit it, but you're right.\"\n\n\"Wait. You hate admitting I'm right?\" she teased.\n\nMarc laughed, took her hand then walked her back to the living room.\n\n\"I also hate to admit this, but I'm actually kind of glad my brother broke his leg.\"\n\nRenee laughed then pretended to chastise him.\n\n\"Marc, that's awful!\"\n\n\"It is, but had he not done that I'd have never met you.\"",
        "She put her arms around him then said, \"Okay. Truth be told I have to admit I'm kind of glad, too. Not that he broke his leg. Just don't tell your brother, okay?\"\n\n\"It'll be our secret,\" Marc promised her as he brushed her pretty, long, blonde hair back.\n\n\"Thank you for coming over,\" she said as he moved toward the door.\n\n\"Thank you for asking me and for dinner. It was delicious.\"\n\n\"My pleasure. So...what time are we playing again?\"\n\nMarc gave her a look then said, \"Oh, right. You mean golf.\"\n\nRenee laughed and told him she did.\n\nMarc told her when and where, a course across town, and she told him she'd be there with bells on.\n\n\"Bells are optional,\" Marc said, a gorgeous smile on his gorgeous face. \"You're already beautiful just as you are.\"\n\nRenee sighed then asked if he saw well. He shook his head indicating he didn't get it, so she spelled it out for him.\n\n\"You're 26 years old, a pro golfer, and you're freaking...gorgeous. And yet you tell me I'm....\"\n\nHe put a finger on her lips then finished her sentence.\n\n\"Freaking gorgeous yourself. And amazing. And a great mom. And a fantastic caddy and a great cook and....\"\n\n\"Stop. You had me at gorgeous, but I'm still thinking you ought to get your eyes checked.\"\n\n\"Hey. I have 20/15 vision,\" he told her.\n\nHe pointed his index and middle fingers at his eyes like they did on TV then said, \"I see like a hawk. Okay?\"\n\n\"Okay,\" a very contented 40-year old woman told him as she kissed him goodbye then went to sit back down and go over the day's events again from soup to nuts.\n\n\"I just don't get it,\" she said after reviewing everything to include his hawk-like vision which made her laugh out loud. \"I love it, but I really don't get it.\"\n\nWhen Marc got in Tyler was still awake and said, \"Where the hell have you been, little brother?\"\n\nThere were at least a dozen empties on the table next to him, and just seeing that took a lot of the wind out of Marc's sails. But as a Libertarian, he firmly believed it was none of his business what anyone else did unless it caused actual harm to someone else.\n\n\"Out,\" he said, not wanting to get into it with his drunk brother.\n\n\"You bangin' her?\" Tyler asked out of the blue.\n\n\"Say what?\"\n\n\"That hot MILF of a caddy you hired. You fuckin' her?\"\n\nFor the first time in years, anger welled up inside Marc, and he nearly unloaded on his brother.\n\n\"You're drunk. Sober up and we'll talk,\" he said, forcing himself to stay calm.\n\n\"I'd fuck her. She's hot as hell,\" Tyler said, slurring his words a little as Marc saw another half dozen empty beer bottles on the kitchen counter.\n\nNow more worried than angry, Marc walked over to his brother and said, \"Ty? I'll pay for rehab if you'll go.\"\n\n\"Rehab? What the fuck do I need with rehab? So I have a few beers every now and then. What fucking business is it of yours, asshole?\"\n\nRather than get into it, Marc said, \"I'm goin' to bed, bro.\"\n\n\"Yeah? Well go fuck yourself, too!\" Tyler spat before finishing off the beer in his hand.\n\nLibertarian or not, Tyler was his brother, and this was getting hard to watch. He couldn't actually afford to pay for rehab. In fact, he barely had enough money left to make it another month. He needed to qualify on Monday and make some money in the tournament that started on Thursday.\n\nAs he lay awake in bed, Marc's thoughts oscillated between the amazing evening he'd had with Renee and the brief encounter he'd just had with Tyler. For the first time in his life he felt the pressure to earn money. Prior to that he'd played for the love of the game, and any money that came his way was the proverbial icing on the cake.\n\nIt was obviously way too early to know if anything longterm would come of this new relationship with his beautiful caddy, but he didn't see how it possibly could if he was unable to even afford to put food on the table for them. And then there was Tyler and his growing addiction to alcohol and Marc's increasing sense of urgency to find a way to help him.\n\nIt was only 10:30 and Marc knew his dad would still be awake. Hoping he wouldn't wake up him mom, he opened his phone contacts and hit 'Dad' and waited.\n\n\"It's kinda late for a phone call, isn't it?\" his father quietly said after picking up on the first ring. \"Or are you just calling to ask me to caddy for you again?\"\n\nHis dad chuckled telling Marc it was fine to call that late.\n\nFor the next twenty minutes or so Marc laid everything out for his dad. Renee, Tyler, and the new worries about money. And during that time his father did what he did best. He provided sound advice on every topic without trying to push the advice.\n\nWhat Marc didn't know is that Renee had been on the phone with her mother from about fifteen minutes after he left. Her mom was also a night owl and rarely got to bed before 2am.\n\n\"So...what do I do?\" Renee asked her mother after explaining everything that had happened and how she was feeling.\n\n\"Honey? I'm getting the impression your feelings are more than just gratitude for being hired at a time when you needed work. I'd say it's too early to know exactly what's going on, but from everything you've told me, it sounds an awful lot like you like this young man.\"\n\nAs always, her mom was right.\n\n\"I...I do, Mom. And that's what scares me.\"\n\n\"Renee? There's nothing to be afraid of. You've already faced the worst life has to offer, and you've survived it. You now know by experience that bad things happen to good people for no apparent reason. So you have nothing to fear, sweetheart. But if you ever want to have someone to love and someone to love you the way Don did, I don't think you should pass this opportunity just because he's....\"\n\nRenee sighed then said, \"I know, right? He's just SO much younger than me!\"\n\nHer mom laughed then said, \"I wasn't going to say that. I was going to tell you that you shouldn't rule him out just because he's the first man you've had feelings for since losing Don.\"\n\nThose words hit her hard. Had she been divorced, Marc would seem like a 'rebound'. He'd be the first guy who made her feel good after her marriage ended, and she'd undoubtedly be extra cautious. But she wasn't divorced, and while Marc was the first man she'd had feelings for since her husband was alive, she didn't see him as a rebound.\n\n\"You have an early tee-time, honey. Maybe you should try and get some sleep.\"\n\nHer mom's voice shook her out of her thoughts and back to reality.\n\n\"Yes I do.\"\n\n\"Just take things a day at a time, Renee. Let them unfold naturally. If he's the next Mr. Right, you'll know. And if this is just some kind of...fantasy...you'll know that, too.\"\n\nRenee sighed loudly then told her mom yet again that she was right.\n\n\"Speaking of fantasies, when do I get to meet this Prince Charming of yours?\"\n\nRenee laughed then said, \"Oh, Mom. You won't believe how handsome Marc is.\"\n\n\"So I've heard,\" her mom replied with a laugh. \"Maybe you and my sweet little granddaughter could come over for dinner one of these weekends.\"\n\n\"With any luck we'll be playing in a tournament next weekend, but I'll ask him as long as you prepare Daddy.\"\n\n\"Oh, he knows,\" her mother said with a quiet laugh.\n\n\"Oh. Does that mean he knows Marc is...26?\" her daughter asked with a little wince as she bit her lower lip.\n\n\"I may have mentioned he's a little younger than you, and you know your dad. Whatever makes his little girl happy is fine by him.\"\n\nAnother loud sigh made its way out before Renee said, \"Right. His little...40-year old girl.\"\n\n\"You're still a very beautiful girl, honey.\"\n\n\"Girl. There's another word that makes me feel...old.\"\n\n\"I'm 67, so don't talk to me about old until you hit 60 yourself, okay?\" her mom replied with a laugh.\n\nRenee laughed, too, then said, \"Mom? Thank you. And...I love you.\"\n\n\"And I love you. And if you love this Marc fellow, I'll love him, too, okay?\"\n\nRenee had ridden an emotional roller coaster all evening, and those words caused her to tear up again.\n\n\"You're the best mom ever.\"\n\nHer mom laughed quietly then told her goodnight.\n\nIt was around midnight when they both fell asleep. Alone. In separate houses. But when they woke up the following morning, their minds were filled with hope and thoughts of being with the other person. And qualifying for the tournament on Hilton Head.\n\nAlready in a good mood, Marc's spirits soared when he saw Renee. She was wearing a pink visor, a very cute little pink and gray Argyle sweater over a white, short-sleeved blouse, pink shorts and her trademark white tennis shoes.\n\nRenee noticed how good he looked, too, and was also wearing a smile so wide it hurt.\n\n\"Hi,\" she said as he walked up.\n\n\"Good morning, and may I say you look amazing?\"\n\n\"You may,\" she told him just before he asked if it was okay to kiss her.\n\n\"That would be very okay.\"\n\nIt was a short kiss because of where they were, but it was nevertheless a very nice kiss.\n\n\"It's gonna be extremely hard to concentrate. I hope you know that,\" Marc told as the kiss ended, Renee still in his arms.\n\n\"Considering how good you look, yes, I believe I know exactly what you mean.\"\n\n\"So...may I please have driver?\" he asked, being overly serious.\n\n\"You may, sir,\" she told him again before grabbing 'big bertha' and handing it to him.\n\nFor the entire 18 holes, they focused on golf. Renee was spot on in her club recommendations, and Marc was owning the course. He finished 11 under par for the first time in years, and after birdieing the final hole, he dropped the putter and picked Renee up and spun her around before kissing her again.\n\nAs they walked inside, Marc mentioned the phone call with his dad.\n\n\"Huh. I had almost the exact same call last night with my mom. My parents want to meet you. Don't worry. I stalled them until after Hilton Head, and you don't have to do that.\"\n\n\"I'd love to meet them, and I'd like you to meet my mom and dad, too. If...if that's something you wouldn't mind doing.\"\n\n\"I...I'd love to,\" she told his with a smile as he opened the door for her.\n\n\"I'm still caddying for you, but I'll let that slide. This time,\" Renee teased as she walked by with his clubs slung over her shoulder.\n\nAfter putting the clubs away and yakking with a couple of other golfers about the upcoming tournament, Renee told Marc they needed to talk.\n\n\"Not already,\" he said, as he tried to mask the feelings welling up inside him.\n\n\"What? No! Not like that,\" she assured him. \"I was just wondering if maybe you think this is, you know, happening a little...too fast.\"\n\n\"Oh. I...I hadn't even thought of that. We...we could um, slow things down. If that's what you want.\"\n\nShe moved a little closer then put her arms around his neck.\n\n\"It isn't. At all. I only wanted to know if that's how you felt. I'm fully aware of long we've known each other. But there's something going on here that...I don't know. It...it just feels...right.\"\n\nMarc put his arms around here and held her as he said, \"I couldn't agree more.\"\n\nRenee pushed back a bit, smiled up at him then asked, \"So...your place or mine?\"\n\nHe laughed and so did she before Marc got serious.\n\n\"I want you to meet Tyler. I just need you to know that he's...an acquired taste.\"\n\nRenee smiled but didn't laugh.\n\n\"He's your brother. And your actual caddy. I like you, Marc. A lot. So unless there's some reason you don't want me to meet him or maybe just not meet him now, I'd love to do that.\"\n\nMarc chose his words carefully as he brought up the drinking.\n\n\"I'm not the touchy-feely type, but I do believe it's an addiction,\" Renee said. \"And I know how alcohol can um, loosen someone's tongue. So if Tyler says anything that concerns you, I'll be fine, because I know it's the booze and not him talking.\"\n\nMarc looked into her eyes again, and this time, it was like he was able to see into her soul. The connection they already had became even stronger, and it took all of his restraint not to ruin the mood by telling her he loved her.\n\nSo when Renee said, \"There's something else I'd like to say, but I'm afraid it might have the opposite of the desired effect,\" he knew what she meant.\n\n\"Right. I don't think dropping the 'L' word would be such a good idea. Even if it's something I'm feeling.\"\n\nRenee had no idea he felt that way. She was still looking into his eyes and said, \"I'm feeling it, too, Marc.\"\n\n\"Then when the time is right, we'll know it,\" he said.\n\n\"Yes. We will. Both of us.\"\n\nRenee stood on her tippy toes and kissed him, and the length of the kiss drew a whistle and a, \"Look at you two!\" comment.\n\n\"Oops,\" she said, feeling happy and not at all embarrassed.\n\n\"No. No oops,\" Marc replied before kissing her again even more passionately.\n\nEven the 'get a room' comment didn't slow them down.\n\n\"So...my place?\" Marc suggested after they finally stopped the PDA.\n\n\"That sounds wonderful. I can come over early and cook for you guys.\"\n\n\"With Lexi, right?\"\n\n\"If things are as...difficult...as you described, maybe that should wait?\" Renee offered as a question even though it was a statement of how she felt.\n\n\"Good call. Dinner for three.\"\n\n\"I can bring some wine.\"\n\n\"Tyler only drinks beer, so that should be okay. For us.\"\n\n\"Marc? He'll get through this. I promise.\"\n\nHe knew she couldn't know that, but he loved her optimism and thanked her for saying that before giving her the address and agreeing on the time.\n\nTyler's car wasn't in the driveway when Marc drove up, but he could still drive using just one leg. It was awkward and uncomfortable, but he'd done it several times.\n\n\"Thank goodness for automatic transmissions,\" Marc thought as he opened the door.\n\nHe got to the kitchen counter and stopped when he saw a note in Tyler's handwriting.\n\n\"Marco--I was pretty angry when you called me on my drinking. But today I had to white knuckle it just to keep from having a beer after 10am. That forced me to admit you were right, so I made an appointment with Dr. Carlyle. I need help, bro. Beer's gone from being my best friend to controlling my life. I'm gonna need a lot of support, too, and I need to do this so I can get back out there caddying for you. And while I'm apologizing, I'm sorry as hell for all the shitty things I said about her. About your new caddy. My whole world is just all fucked up, man, and I got no one to blame but myself.\"\n\nIt was signed 'T'.\n\n\"Wow,\" Marc said as he reread the note a second time before going to take a shower.\n\nTyler got home less than 15 minutes before Renee showed up, and that gave both brothers time to let the other know what was going on.\n\n\"Hey, T. I read your note. How'd it go?\" Marc asked as soon as he saw his brother.\n\nHe held up a white bag from a local pharmacy.\n\n\"Step one. I'm taking this drug called Naltrexone. It's a first-line treatment medication for um, people like me.\"\n\nHe set it on the counter then said, \"Step two. Meetings and regular counseling. Step three. Bi-weekly visits with the doctor and then monthly.\"\n\nMarc had never seen his brother like this before. Tyler seemed...broken. He wouldn't even look at Marc, and his voice was shaky. Just like his hands.\n\n\"I'm here for you, Tyler. Whatever you need. You know that, right?\"\n\nAs shocking as the note had been, Tyler's sudden embrace was even more so.\n\n\"My life is...I'm so fucked up, bro!\" Tyler said as he squeezed his younger brother so hard it hurt.\n\n\"Hey. You are not...fucked up. Drinking is what's...screwed up. And it's what's screwing you up. But together, and with the doc and this new medication, we're gonna kick this thing.\"\n\nHe pushed back then said for Tyler's benefit, \"We're gonna kick its fucking ass!\"\n\nMarc rarely used profanity, but he needed to connect with his brother who was clearly hurting more than he'd ever hurt before, so he talked in Tyler speak to make the connection.\n\n\"I uh, I had someone coming over tonight, but I think I'll call her and cancel,\" Marc said after Tyler let him go and thanked him for his support.\n\n\"Her? Is it...her her?\" Tyler asked.\n\n\"Yeah. It's...Renee. My new caddy. My temporary caddy.\"\n\n\"Don't cancel, bro. I could really stand to have some company, you know? I don't do well alone, and I promise to be on my best behavior, okay? I won't embarrass you. You have my word.\"\n\n\"I'm not worried about that. But are you sure you want to do this?\"\n\n\"Yeah. One-hundred percent sure.\"\n\nLess than five minutes later the doorbell rang.\n\nTyler was now taking a shower himself, shaving for the first time in four days, and came out looking like his old self with the exception of the cast.\n\nHe did his best to be charming and friendly in spite of feeling like ten pounds of trash in a five-gallon can. He wanted a beer so bad he could taste it, but having Renee there really helped and he told her that.\n\n\"I don't know how much I can help, but I'll do anything I can for you,\" she told him sincerely.\n\nHe smiled then said, \"I promised to be on my best behavior so tonight, so all I'm gonna say is 'thank you' and tell you that you Marc was right. You really are a very beautiful woman.\"\n\nShe laughed and thanked him for the compliment.\n\n\"I saw you on TV, so I knew. Then Marc told me you were freakin' gorgeous. And yeah, he's right.\"\n\n\"Wow. You two are very smooth,\" she replied with a laugh.\n\n\"We're also right,\" Marc told her.\n\n\"If you say so,\" Renee said, her modesty mixed with the joy of her newfound happiness.\n\n\"So what do you think, Renee? Is my little brother good or what?\"\n\n\"He's very good, and he's going to qualify on Monday.\"\n\n\"I wish I was as sure of that as you are,\" Marc told her.\n\n\"Hey. Where's your confidence, bro? If you can get a woman this beautiful to go out with your sorry ass...self...you can do anything.\"\n\nMarc looked at Renee who smiled at him supportively.\n\n\"Maybe you're right.\"\n\n\"Maybe? You can take that to the bank!\" Tyler told him. \"And when you get to Hilton Head, you're gonna win.\"\n\n\"Okay. That's a little much, but I do believe I can qualify. I mean, with the two of you pulling for me, how can I not do well?\"\n\n\"There you go! That's my little brother!\"\n\nRenee stayed another three hours, and by the time she left, she almost felt like part of the family. The reason she didn't was that she hadn't met their parents yet, and she still had deep concerns about them accepting her the way Tyler had because of that three-letter word she was beginning to hate. A-G-E.\n\nMarc and Renee spent as much time as they could together until it was time to leave for a gold course in Atlanta where the 'Monday-Q Day' for that week was being held. They drove there the day before, and although they talked about separate rooms, when they checked in Renee said, \"I don't need a room for just me unless that's what you'd prefer.\"\n\nMarc smiled at her and said, \"That is most definitely not what I prefer.\"\n\nThat night they made love for the first time, and while no one could say it had any effect on his golf game, Marc not only qualified but finished third with a very respectable 10 under par for the day. When he called his parents to let them know, they asked about his new caddy.\n\n\"She's amazing, Dad. In more ways than one,\" he told his very-proud father.\n\n\"We can't wait to meet her, son, and good luck this weekend. We'll be there rooting for you.\"\n\nMarc took the next two days off and spent them with his...girlfriend...and her daughter.\n\nFeeling mentally and physically refreshed and focused, Marc felt fantastic when he got to the first tee of the course at Hilton Head. He ended the day tied for seventh place at five under par and felt even better on Day Two.\n\nBy Sunday, he was in third place all by himself at eight under par, and by the time he got to the 18th hole, he needed a birdie to finish third. But his birdie putt ended up 27 feet away, and the first putt came up short forcing him to two-putt to end up in fourth. It wasn't a win, but it was by far his biggest cash yet.",
        "Renee not only hugged her pro/boyfriend when he holed out, she kissed him on national television and didn't care who was watching. Nor did her handsome, younger boyfriend who picked up her, kissed her back, and twirled her around.\n\n\"I've heard about his May-December romance, of sorts,\" one of the commentators said after witnessing the kiss, \"but I wasn't sure it was real. I'd say this is all the evidence anyone needs.\"\n\nAnother said, \"With all that's going on in the world, a little romance is just what we need--May-December or otherwise.\"\n\nThe other man and the woman who interviewed players during the tournament all chimed in about what a very attractive couple they made, and now everyone who followed golf in America, Great Britain, Australia, Canada, and even Japan, also knew.\n\nBut the biggest cheer of all came from Tyler who watched every shot on every hole every minute the tournament was on TV. He'd been off the booze for several days and felt better than he had in a long time, and now his brother was back in the money. And while he wasn't the romantic type, Tyler was happy for his younger sibling, because it was obvious he'd already fallen in love with this older woman who'd taken his place as his brother's caddy.\n\nMarc called his brother the first time he had a spare moment after the end of the tournament, and for the first time in his life, Marc heard Tyler choking up as he thanked him for pushing him to get sober. Nearly doing the same thing, Marc told his brother he was proud of him for getting sober and reassured him he'd get his cut of the prize money.\n\n\"No. No way, bro. Renee earned that money. It's hers.\"\n\nThis was also a side of Tyler Marc had never seen, and altruism looked even better on him than sobriety.\n\n\"She's getting twice what you are, so no worries, okay?\" Marc replied with a laugh.\n\nTyler actually did choke up when he heard that and needed a minute to compose himself.\n\n\"This not drinking business is hard. Not the quitting part so much, but the having to face my feelings thing. I'm definitely not used to that.\"\n\n\"I uh, I kinda like the new you, bro,\" Marc said with a chuckle which made his brother feel better.\n\nAfter hanging up, he then called his parents who also heartily congratulated him. Marc thanked them both then let them know they were heading home.\n\n\"You and Renee?\" his mother asked.\n\n\"Yes. Me and Renee,\" he said, using the incorrect word order because it just sounded better to him.\n\n\"Honey? Your father and I don't really understand, but it's obvious you really like this...woman, so we just wanted to say we support you in whatever you do.\"\n\n\"I...I think I might love her, Mom,\" her son said rather quietly. \"I know how long I've known her, but I also know I've never met anyone like her before, and she...she's pretty amazing.\"\n\nHis mom told him they'd talk more when he got him and congratulated him again.\n\nAn hour later he and Renee were on the way back to Columbia.\n\n\"You were awesome,\" she told him once they got on the freeway.\n\n\"Me? You totally called the approach shot on six. I was gonna go a club higher and you talked me out of it. That let me land the ball 15 feet from the hole and thanks to the backspin, the ball ended up five feet away.\"\n\nRenee smiled at him and said, \"We make a pretty good team, don't we?\"\n\nIt wasn't really a question, it was more a statement of fact.\n\nMarc held out his right hand and Renee happily took it.\n\n\"We really do.\"\n\nShe could tell he had more to say, so she asked what that might be.\n\nHe glanced over at her then said, \"I'd love for us to be a team off the golf course, too.\"\n\nRenee was so happy she wanted to yelp but held back as she said, \"Why Marc, are you asking me to go steady?\"\n\nHe saw her bat her eyes and feign being a southern belle, and that made him laugh.\n\n\"I think I am, Betty Lou,\" he replied as seriously as he could.\n\n\"Well, then, good suh,\" she began, using a heavy southern drawl, \"I welcome your desires to both court me and woo me.\"\n\nMarc couldn't help but laugh and did so loudly as Renee joined him.\n\nHe squeezed her hand then said, \"I feel like the luckiest man alive.\"\n\n\"Huh. I feel like the luckiest woman alive,\" Renee told him with a little smile.\n\nHe smiled back then said, \"I love golf. And winning some money is great. But I didn't realize there was something missing from my life until just recently.\"\n\n\"Oh? And what that might be?\" Renee asked as her heart pounded in her chest.\n\nHe looked her way again for a moment then told her, \"Uh, that would be...you.\"\n\n\"Huh,\" she replied again. \"Another coincidence because I had no idea anything was missing from mine until I met...you.\"\n\n\"I know I'm on a post-tournament high, but I also know this is what I feel independent of how well we did.\"\n\nRenee's heart was thumping as she waited, her hand still in his.\n\n\"Renee? I'm falling for you. Hard. Like I've never fallen before.\"\n\n\"That makes me very happy, Marc, because I've fallen for you, too.\"\n\nRenee never once thought about the money he'd made or what he intended to pay her, but Marc's winnings were just a shade under $350,000 before taxes. He'd be netting around $210,000, give or take, and while he still planned on giving a good chunk to charitable causes, he was now giving real thought to buying a home. A home where he'd have room for a family; a family that consisted of a wife and daughter, and one that could hold maybe one or two more children down the road. He wasn't ready to share those thoughts with Renee just yet, but they were now in the forefront of his mind as he held the hand of the woman he loved.\n\nWhen he dropped her off at her place a couple of hours later, he walked her to the door then held her hands in his.\n\n\"If it's too early just tell me,\" he began.\n\nKnowing what he was about to say, Renee told him it wasn't.\n\n\"It's not too early at all,\" she replied, a warm smile on her beautiful face.\n\nMarc put his hand on her cheek and said, \"I love you, Renee Roberts.\"\n\n\"I love you, too, Marc Hardison,\" she told him before their lips pressed together in a long, soft kiss that cemented their feelings even more.\n\n\"See you tomorrow?\" he asked when it ended.\n\n\"Definitely,\" she told him before going inside to see her little girl.\n\n\"Mommy! Where's Marc?\" Lexi asked immediately.\n\n\"Hold on!\" she said as she ran back outside.\n\n\"Marc! Can you come in for a little while at least? Someone is very anxious to see you!\" she called out.\n\n\"You better believe it!\" he called back as he trotted to the door where a little girl was waiting to give him a hug, a hug he wanted as much as anything he'd ever wanted.\n\nNo one was surprised when Marc qualified for the PGA's next tournament or that Renee caddied for him, because Tyler was still in a cast. But the following week, after it came off, and he was given the okay to walk, it was a mild surprise when he insisted she continue caddying in his place.\n\nThe shocker came when, two weeks later, and another decent cash for his brother, Tyler told everyone at the first gathering of both his and Renee's family that he wasn't interested in caddying anymore.\n\n\"Why? You love golf,\" his mother said as his father shook his head.\n\n\"What are you gonna do? Go on welfare?\" his father snorted.\n\n\"No. I...I'm going to seminary.\"\n\nThere was a deafening silence at their table as every head turned and stared at him and waited for him to explain.\n\n\"I don't expect anyone to understand, but getting off of alcohol changed my life.\"\n\nHe looked at Marc and said, \"Thank you for that.\"\n\nMarc tried to say it wasn't him when Tyler continued.\n\n\"I can't explain this to you. Heck, I don't even understand it myself. But what I do know is that I feel...called.\"\n\n\"Called? You sound...nuts!\" his father exclaimed a little too loudly.\n\n\"Well I think it's wonderful!\" his mother said, surprising her sons and especially her husband. \"I may not go to church, but I have my beliefs, and I think this is amazing.\"\n\n\"You know I'll support you,\" Marc quietly told him. \"In any way I can.\"\n\nFor the first time in their lives Tyler told his brother he loved him.\n\nMarc teared up immediately as did his mother who was looking at Renee who did the same. Renee's parents were also getting emotional leaving only Tyler's father shaking his head.\n\nTyler then turned toward Renee, too, and said to his brother, a smile on his face, \"And I know you love, Renee, too Marco. And it sure seems to me like she loves you.\"\n\n\"I do. Very much,\" Renee said as she took Marc's hand.\n\n\"I have no idea how you ever snagged a woman as smart and as beautiful as her, let alone someone who knows golf like she does, but she's a keeper, little brother. Don't mess it up, okay?\"\n\nEveryone, less one unhappy father, laughed and told the unusual couple how happy they were for them.\n\n\"I don't know, either,\" Marc admitted as he looked at the beautiful, older woman sitting next to him.\n\n\"Hold on,\" Renee said. \"I'm the lucky one, here.\"\n\n\"Ha!\" Tyler said with a laugh and a smile.\n\n\"No. I am,\" Renee insisted. \"I never thought I would ever find anyone I could love again let alone love me back. I was just desperate for work when I got the chance to go on TV and let people know I was available to caddy.\"\n\nShe looked at Marc, smiled, then said, \"Let alone that I'd find that kind of love...with you.\"\n\nMarc leaned over and kissed her, and when he did, Lexi giggled.\n\n\"I still think I'm the lucky one, honey,\" he told Renee. \"After all, I'm getting two for the price of one here, right?\"\n\nRenee laughed as she looked at Lexi and told him he was correct.\n\n\"Does that mean me?\" Lexi asked, making everyone, including Tyler's less-grumpy dad, laugh.\n\n\"Yes, it does, sweetie.\"\n\n\"Marc?\" she asked.\n\n\"Uh-huh?\"\n\n\"Can I sit in your lap?\"\n\nMarc let go of her mother's hand and pushed back from the table as Lexi walked over to him. He pulled her up, put his arms around her and said, \"I love your mom very much.\"\n\n\"I know,\" the little girl told him.\n\n\"Did you know I love you, too?\"\n\nLexi turned around and put her arms around Marc's neck, and when she did, Renee leaned over and put hers around them both. Lexi nearly made Marc cry when she said this was their new family, because that's exactly what he and her mom were thinking.\n\n\"So...when's the wedding?\" Tyler asked, caused everyone to turn his way. \"Hey, it's inevitable, folks. I was just hoping I could be the one to marry them.\"\n\n\"You don't need a degree from a seminary to perform a marriage anymore,\" his dad said, now less agitated than before. \"You can just order one online and that's it.\"\n\n\"I haven't even asked this beautiful woman to marry me yet,\" Marc said as the family-to-be let go of each other. \"But you'll be the second to know.\"\n\nThere were some more laughs before Tyler suggested they finish their meals.\n\nThree months later, Marc won his first-ever tournament, and as he was being interviewed by a female golf pro on national TV, he said there was one more thing he'd like to do.\n\n\"We have a few extra seconds, so the floor is yours,\" the woman said.\n\nMarc beckoned to Renee who reluctantly joined him.\n\n\"I wouldn't be here today if it wasn't for my caddy. Who is also my girlfriend and the love of my life.\"\n\nRenee was smiling nervously until Marc pulled a small box from his pocket and got down on one knee.\n\n\"Renee Roberts? I love you more than I can put into words, and you would make me the happiest man alive if you'd be wife. Will you m....\"\n\nBefore he could finish asking, Renee was nearly screaming, \"YES!!!! Yes, I will marry you!\"\n\nMarc slid the large, four-carat diamond onto her left hand, stood up, and kissed her for all the world to see as the female commentator wiped her eyes and said, \"Well, there you have it, folks. Marc Hardison is our tournament champion, and as you can see, an even bigger winner in the arena of love. Guys, back to you.\"\n\n******\n\nThe wedding was set for the following summer when Tyler would be home. He still wasn't an ordained minister, but he did have his 'online credentials' and was able to perform the wedding ceremony. But more importantly, he'd finally found happiness in his life in the most unlikely place after chasing after it for years and never finding it in a case of beer.\n\nHe was now able to be genuinely happy for his younger brother when he said, \"I do,\" and married the woman who'd made Marc just as happy but for very different reasons.\n\nEven their father had finally accepted both of his sons' decisions and was asked to be Marc's best man.\n\nRenee was a beautiful woman even in her 'caddy clothes', but Marc's breath was taken away when he saw her in her white wedding gown as her father walked her down the aisle.\n\n\"You're seriously marrying up, little brother,\" Tyler teased as Renee took her place beside her future husband.\n\n\"You ain't kidding,\" he replied, unable to take his eyes of his bride and the mother of their future children.\n\nThere were two of them, or more accurately, two more of them, as Marc gladly adopted Lexi who loved him as her own father. Renee gave birth to fraternal twins one year and a half dozen more tournament cashes later.\n\nBy the time their twins were born, Marc had made well over two million dollars. Renee sold her house, and together with Marc, they bought her the house of her dreams which, more importantly, included the man of her dreams, and two beautiful babies she loved just as dearly.\n\nOne morning as Marc got ready to go play another 18 holes with his new caddy, Renee Hardison couldn't help but think of the TV interview and the phone call that changed her life. She didn't mention it to her gorgeous, younger husband, but she teared up as she looked at their three children and realized she really was the luckiest woman on earth."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/caddy-for-hire"
}