{
    "title": "Matthew's Choice - A Halloween Story",
    "pages": [
        " Matt is invited to what is guaranteed to be the best Halloween party of his life. His friend has promised that this will be his last night as a virgin. But there's a catch. In this case the Devil is truly in the details.\n\n= = = = = = = = = = = = = = = = = = = =\n\nThis warning is possibly not needed for this particular story, but I am including it because it is needed for most of my stories. If you decide to read other of my stories make sure that you read the disclosures and warnings at the beginning of each story.\n\nWARNING! All of my writing is intended for adults over the age of 18 ONLY. Stories may contain strong or even extreme sexual content. All people and events depicted are fictional and any resemblance to persons living or dead is purely coincidental. Actions, situations, and responses are fictional ONLY and should not be attempted in real life.\n\nIf you are under the age or 18 or do not understand the difference between fantasy and reality or if you reside in any state, province, nation, or tribal territory that prohibits the reading of acts depicted in these stories, please stop reading immediately and move to somewhere that exists in the twenty-first century.\n\nArchiving and reposting of this story is permitted, but only if acknowledgment of copyright and statement of limitation of use is included with the article. This story is copyright (c) 2017 by The Technician.\n\nIndividual readers may archive and/or print single copies of this story for personal, non-commercial use. Production of multiple copies of this story on paper, disk, or other fixed format is expressly forbidden.\n\n= = = = = = = = = = = = = = = = = = = =\n\n* * * * * * * * * * * * \n\nMatthew Walker stood in the doorway and slowly looked around the room at the costumed party goers. Much to his surprise, this was looking like it could turn out to be an excellent Halloween party.\n\nExcept for the fact that she was nearly six feet tall, the girl in the fairy costume who had opened the door looked exactly like Tinkerbell. Her blond hair was piled up on top of her head. Her mouth was formed in a perky grin. And her huge blue eyes twinkled as she said, \"Welcome to the party, Captain.\"\n\nMatt, himself, was a rather good imitation of Jack Sparrow, complete with fake beard and braids.\n\nAs Tinkerbell walked away, he could not help but notice her shapely legs and the hint of asscheeks that peeked out from beneath the jagged hem of the short, green costume. She bent over slightly to speak with someone at a table and his eyes zeroed in on what was most certainly a naked ass. If her wings hadn't distracted him by suddenly beating rapidly as if she were trying to fly, he would have continued staring at that ass as she straightened up and walked further across the room.\n\nInstead, he followed her beating wings with his eyes until she walked past a man made up perfectly as a Satyr. At that point, his attention was caught by the fact that the Satyr was stroking the naked breasts of a woman in an exotic, but not quite describable, costume which totally covered her apparently naked body.\n\nMatt wasn't quite sure what the costume was or who woman was supposed to be, but her skin was somehow pulsating and glowing almost orange as if something molten was flowing just beneath the flesh. And her pubic hair-- or perhaps it was a Merkin-- in any case, her ample bush was somehow lit so that it appeared to be on fire. Surely there was a battery system and LEDs buried inside that flaming pussy toupee. Whatever the lights were, they caused her crotch to glow more brightly as the Satyr continued his breast massage.\n\nAlongside them, a huge man stood towering over everyone with his hands clasped behind his head and his eyes closed. He was moaning softly, almost like he was humming. His bulging abdominal muscles-- and even moreso bulging loincloth-- was almost at eye level to the bevy of small nymphets clustered closely around him. They all had identically dyed purple skin and were wearing what appeared to be mini-togas. The overall effect made them look like triple-X Smurfettes as they stroked whatever skin they could reach on the leviathan of a man.\n\nA middle-aged man dressed like an ancient philosopher called out in greeting from across the room. The slightly graying beard was not part of the costume, but it made him look very much like an ancient Greek. It was Dave, the IT geek who maintained the computers at Matt's office on a contract basis. Matt hadn't been too sure about this party when Dave had first invited him and had almost refused.\n\n\"This isn't a gimmick for my business,\" Dave had explained. \"This is a special party... a very special party... for a few of my very special friends.\"\n\nDave's face had then crinkled up in that strange giggle-chuckle he usually reserved for finding an unusual or obscure problem with the system. \"I'm only inviting single people your age or younger,\" he had promised. His hands waved across the air in front of them as if displaying a sign while he said exuberantly, \"Free booze... free food... good music... good times.\" His excitement was obviously growing as he spoke.\n\nHe leaned in close to Matt and said, \"Besides, there is something about going to a Halloween party in costume that brings out any girl's inner slut.\" After a short, deep laugh he said with a flourish, \"And that my friend means sex... and lots of it. This is your night, Matthew. I can absolutely, positively guarantee you that this is going to be the best Halloween party of your entire life.\"\n\n\"What did you do?\" Matt had asked him, jokingly. \"Sell your soul to the Devil?\"\n\nDave looked very startled, but then laughed and replied, \"Something like that, Matt. But that's my problem, not yours.\"\n\nEverything which Dave had told Matt that day was absolutely true, including his response to Matt's final question. David Wilcox had sold his soul to the Devil many years before. How else could he have become so rich and successful as a freelance computer specialist?\n\nThere was one falsehood in David's statements, however. The fact that Dave had sold his soul to the Devil WAS Matt's problem.\n\nIt was Matt's problem because this year was the final renewal for Dave's contract with the Devil. If the contract did not renew, then the completion clause went into effect and Dave would have to accompany the Devil down into the depths of that demon's hellish abode. If the contract did renew this seventh and final time, however, Dave would be free and Matt would be spending at least the next thirty-five years of his life in a very warm place.\n\nThe renewal clause was David's chance to avoid the completion clause in his contract with Old Scratch. All such agreements eventually come to an end, and there is always some sort of completion clause to the contract. That completion clause usually entails going home with the Devil and serving that old goat's whims in some terribly grotesque and painful fashion.\n\nBut there is also always some sort of escape clause in the contract. Lucifer likes to include escape clauses in all of the contracts because it gives people a false sense of hope that they will not face an absolutely certain future of damnation. Who would sign a contract knowing that after some period of pleasure and prosperity, there was no escape from an eternity in Hell?\n\nIn this case, the renewal clause was very simple. At the end of thirty-five years, the contract either ended or was renewed. If it was renewed seven times, then it was considered fulfilled and David Wilcox was free. This Halloween, at midnight, would be the seventh renewal for Dave's contract. Or, it would be his day of reckoning.\n\nObviously, he hadn't sold his soul for the understanding of computers two hundred and fifty years ago. No, at that time the man who was currently David Wilcox was an apprentice watchmaker in Switzerland-- and not a very good one. He was failing miserably. The only reason he had not been turned out on his ear was that he did have one very consummate skill. He was an expert on getting others to do his work while at the same time blaming anyone and everyone else for his failures.\n\nHe had just damaged a very expensive chronometer that was scheduled to be delivered to a rich ship's captain who needed it for a long voyage. Without an exact timepiece, accurate navigation was impossible, and David had just broken the weighted, counter balanced spring movement in the clock. The watchmaker had promised that the device would be ready on All Saint's Day... tomorrow. David was supposed to be making final adjustments to the springs to guarantee accuracy, but he dropped a small tool into the works, and when he pulled it clear, it bent one of the balance springs. The balance springs were what acted in the place of a pendulum for these clocks and if they were damaged, the chronometer was useless.\n\nThere was no way he could disassemble and reassemble the intricate timepiece by morning. Actually, there was no way that he could reassemble it at all. He didn't know how it worked. The clock in the village square was just striking the midnight hour when a strange voice spoke from behind him.\n\n\"You look like you could use a little help,\" it said kindly.\n\nDave spun around. He thought he had been alone in the workshop.\n\nThere, standing behind him, was an elegantly dressed figure wrapped in a floor length cloak. As the cloak opened, the voice continued, \"I have a business proposition for you. I will fix your... little problem, and make you a master clocksmith in return for your signature on a simple promissary contract.\"\n\nIn one of the most important and insightful moments of his life, Dave replied, \"Clocks that can work aboard a sailing ship are the latest inventions, but one day they will be as old as the sand in the hourglass. I will sign your promissary note, but only in exchange for being a master at whatever the latest invention may be.\"\n\nFor a short while, they haggled minor details-- including the nature of the escape clause-- and then David Wilcox affixed his signature in blood to the contract. His name changed through the decades as he moved from place to place before people realized that he did not age as other men. His profession also changed. For many years he was a very successful master clocksmith. But he then became-- among other things-- a master boilermaker, a railway engineer, a nuclear scientist, and most recently, a computer wizard.\n\nNow it was once again All Hallow's Eve and the contract was due. After 245 years, it was time for its seventh and final renewal... or its final completion.\n\nLucifer like to end the contracts on a Halloween at Midnight. There is nothing special about Halloween which would require the contracts to end on that night, but it adds to the terror of the event and most mortals usually expect that date.\n\nBesides, many of the more modern contracts are actually begun on Halloween during some drunken orgy or another. Again, that is purely a practical matter. How often, in today's world, can someone walk up to you and say that they are the Devil and not get laughed out of the room?\n\nThe renewal clause in Dave's contract was extremely simple. All he had to do was to get someone-- anyone-- to choose to go with the Devil for the night. If that person chose the Devil for the night, then they, not Dave, got to spend the next thirty-five years in the deepest recesses of Hell. Since this was the final renewal, it was unclear whether Matt would be the Devil's guest for thirty-five years or for eternity.\n\nThat doesn't sound exactly fair, does it? But who ever said the Devil was fair?\n\nDave wasn't exactly fair either. He had specifically invited Matthew because he knew that Matt had problems interacting with women. In fact, local rumor was that Matt was an authentic thirty-year old virgin. I did mention that Lucifer was actually a woman, didn't I? She can appear as anyone or anything, but her natural state is female. And it was with the Devil in her natural state that the choice had to be made.\n\nAll of the costumes at the party were beyond unbelievable. That was mainly due to the fact that most of them were not costumes. Only three people at the Halloween party were truly mortals. Dave, who was dressed as Socrates. Matt, who was dressed as Captain Jack Sparrow, and Gloria, who had been bewitched and dressed appropriately so that she would blend in with the rest of the crowd. That rest of the crowd were various demons and demi-gods who had gathered to enjoy the evenings festivities. Lucy, of course, was also there, dressed in one of her more erotic costumes.\n\nGloria was one of the secretaries in Matt's building. He had stood in his office many times trying to work up the courage to ask her out on a date, but was always still arguing with himself when she walked by on her way to the elevator. Had he known that she often slowed her walk in hopes that he would come out and share the elevator with her, it might have given him the courage. But he did not, and so each day they would both end up going home frustrated.\n\nGloria's role in this was one of the things which David had added to the contract during his negotiations with the Devil. If the contract renewed, the man who had unwisely chosen to spend the night with the Devil went back to hell with Lucifer. The unchosen woman-- who had no real choice for the evening, herself-- would spend the next thirty-five years in a different sort of hell. She would be David's wife/sex slave.\n\nThere had been six previous wives. All six of them were featured in various \"News of the Weird\" stories about women who disappeared on Halloween night only to be found the next morning wandering nearby-- naked and senseless-- and apparently at least thirty years older. His most recent bed mate was now back to her own time-- more or less-- wandering the streets of San Francisco trying to understand why her body hurt and ached so badly.\n\nThere had also been six previous male friends who were invited to one of David's special Halloween parties. They also re-appeared the next morning, naked and senseless, and apparently at least thirty years older. But for some reason, this was not considered all that strange for a male the morning after a serious party.\n\n\"Matthew,\" David yelled out, \"I have someone you really have to meet.\"\n\nAs Matt got closer, Dave hurried to greet him and said softly, \"You get first pick.\" He lowered his voice even softer and said, \"Second choice is fine with me.\"\n\nHe then steered Matt over to a small table with four chairs around it. \n\nTwo of the chairs were occupied by extremely beautiful women. Both stood as David approached with Matt.\n\nOne of the girls was dressed-- or undressed-- as a classic Halloween Devil, complete with red skin, horns, and a long, pointed tail. Her breasts were totally bare. The nipples had been pierced vertically with small, bright red, pitchforks. The center tine of the fork extended upward through the turgid nipple. The other two tines seemed to grip the nipple tightly from the side. A handle nearly two inches in length hung down, begging someone to give it a tug to see if the piercings were real.\n\nHer horns were so expertly done that you could not tell that they were not truly sprouting from her forehead just in front of her coal black hair. And the tail, which hung over the top of a very tiny red, spangled bikini bottom, seemed to twitch and move on its own as she stood gazing at him and licking her lips with the tip of her tongue.\n\nThe overall effect of the costume was unsettling, but it was her eyes which disturbed Matt the most. He knew that you could do amazing things with contact lenses, but it almost appeared as if there was fire inside her eyes. It would glow and flare whenever she looked him over.\n\nThe second girl at the table was dressed as an angel. Her blonde hair reminded Matt very much of Gloria's as it spilled down almost to the center of her back. Her teeth were dazzling as her ruby red lips split into a wide smile when Dave introduced Matt to her.\n\nHer costume itself was both extremely sexy and extremely modest-- for a modern Halloween costume. There was a white, fur-trimmed bikini style top which uplifted and displayed her breasts while not revealing more of them than might be seen in an elegant evening gown.\n\nHer stomach was, of course, bare, but the display of skin ended just below her navel and did not extend downward onto the pubic mound.\n\nHer bottoms were soft, white, short shorts which fit snugly, but were not extremely molded to her body. There was no camel toe, and from the back and sides of the shorts, a diaphanous partial skirt obscured the curvature of her ass.\n\nThe wings, which seemed to sprout from her back at about where the shoulder blades should be, were extremely realistic. They flapped slightly as she sat back down at the table.\n\nAgain, it was her eyes which most caught Matt's attention. They were a bright and sparkling blue which he had seen only once before. That time was when he had first met Gloria in the elevator. He hadn't intended to make eye contact with her that day and immediately turned away, but the memory of her bright, sparkling blue eyes would be deeply embedded in his memory forever.\n\nThe rest of the party seemed to fade into the background as Matt, David, and the two women sat and talked for what seemed like just a moment but at the same time felt like hours. Matt didn't remember exactly when they had left the party. He only vaguely remembered taking her back to his apartment with him.\n\nHe did remember the intense and almost unbelievable sex. Somehow they had both gotten their costumes out of the way before they even got to the bedroom. He had pulled the covers from the mattress with one sweep of his hands and pushed her back onto the bed. She had clung to him and pulled him down with her.\n\nHe entered her immediately and began pumping furiously. That isn't what he had planned, but it is what his body did. He also had planned to last much longer, but again, the mind often is not really in control of that.\n\nThe second time, it was she that started things up again. For her, it was probably just a continuation of what Matt had started, but this time, he was able to hold off long enough for her to finish with a thrashing and screaming orgasm.\n\nThe third time was his idea. The franticness was gone and it was a much more gentle trip up orgasm mountain for both of them. Then they both fell fast asleep in each others arms.\n\nThe morning sun spilling through the windows awoke him. Matthew looked down at Gloria's blonde hair nestled against his chest. She turned her face up toward him and he looked into her sparkling blue eyes.\n\n\"First dibs on the bathroom,\" she said with a smile.\n\nAs she slid out of the bed, Matt felt something slither against his leg.\n\n\"Oh,\" she said with a slight laugh. \"I hope that goes away like the rest of it.\"\n\nShe held up her tail. It wasn't nearly as long as it had been last night and it was no longer red. Nor was there any longer a pointed spike on the end of it, but it was still definitely a tail.\n\n\"I think my horns fell under the bed,\" she said softly. \"Those damn pitchforks seemed to just melt away while we were making love.\"\n\nHe reached up and softly twirled her nipple between his fingers. \"You look better without them,\" he said with a smile.\n\n\"How did you know,\" she asked, \"that it was me rather than Lucy?\"\n\n\"I didn't,\" Matt said, shrugging his shoulders and looking embarrassed, sheepish, and guilty all at the same time. \"But I did know that it was all too good to be true. Virgin isn't the same as stupid.\"\n\nGloria looked down at him and he continued, \"I know a trap when I see one. I could almost smell the sulfur in the room. There were devils and demons and God knows what else everywhere I looked. And my IT wizard friend was the most evil looking of them all. I had never seen him so clearly before. I somehow knew exactly what he was doing. And I knew that one way or another, I was going to hell at the end of that party.\"",
        "His mouth crinkled up slightly as he paused and then said rapidly, \"But I was damn well not going to hell as a virgin.\"\n\nHe looked even more sheepish as he said, \"So I let my lower brain do the thinking for me. That part of me decided that a demon was much more likely to know all the kinky sex stuff than an angel. My mind wanted my angel, Gloria, but my penis wanted a horny she devil.\"\n\nShe leaned over and kissed him lightly on the forehead. \"Well,\" she said, \"now you know that I can be both. And if I am understanding this contract thing correctly, we have a long future together thanks to Lucy and Mister Wilcox.\"\n\nHer tail slithered over and began stroking his flaccid organ. \"Just don't depend on your penis brain in the future,\" she said. \"This may be the only time in human history that a man got OUT of trouble by thinking below his belt.\"\n\n = = = = = = = = = = = = = = = = = = = = \n\nEND OF STORY\n\nPlease remember to vote \n\nby clicking on one of the stars at the end of the story. \n\nIf you really liked it, click 5. \n\nIf you really hated it, click 1, but please click something.\n\n= = = = = = = = = = = = = = = = = = = ="
    ],
    "authorname": "The_Technician",
    "tags": [
        "halloween",
        "fantasy",
        "humor"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/matthews-choice-a-halloween-story"
}