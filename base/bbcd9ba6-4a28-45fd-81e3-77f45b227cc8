{
    "title": "Carrots",
    "pages": [
        "A lost art, whittling. Passed on from father to son, though in my family it had skipped a generation. I learned it from my grandfather. My father thought of it as a waste of time. Granddad taught me to use it as a thinking tool.\n\nI had been doing this it seemed all my life. I would go to the backyard with a block of soft wood and my sharpened pocketknife and work problems through my head. Sometimes I would just daydream. The thinking and daydreams would end when the block of wood had become a discernible object. Over the years I had become good enough that some of my wood doodlings were considered works of art.\n\nToday things were a bit different. For one thing I was in the kitchen, not the backyard. For another I was naked. My daydreams today came from my laptop. I was reading erotic stories on Literotica. I wanted to keep my dick hard.\n\nI was not carving on soft wood today, I was carving on carrots. I had a definite finished product in mind when I started. I was making replicas of my hard dick.\n\nMy woman was the love of my life and would be the death of me. She was a voluptuous, adventurous red head with a very pronounced mischievous streak in her.\n\nMore than once she tried to get us both killed by baring her breasts to me while I was driving down a freeway. She knew I could not keep my eyes on the road when her breasts were in sight yet she did it over and over. I did not know a giggle could be evil until I heard hers.\n\nShe loved for me to take her to fancy restaurants, not because of the food or the atmosphere but because they had tablecloths. She would insist on being seated at a table by a wall and would seat me facing the restaurant with her to my left. She would arrange the tablecloth to her liking and before the appetizers arrived she unzipped my slacks and pulled out my dick.\n\nThe damn woman is ambidextrous and can eat with her left hand and jack me off with her right. My spunk is splattered under the tables of some of the finest restaurants in the city.\n\nAbout the carrots, we are both rapidly approaching middle age now. We have a son that is eighteen going on thirty-five. My first complete physical exam was two weeks ago. Some of my numbers were not to the liking of that woman and she has been pestering me about my diet since.\n\nI am a meat and potatoes man but she keeps putting vegetables on my plate.\n\nI keep leaving them on the plate.\n\nThe worst things are the carrots. Every blessed salted snack in house has disappeared, replaced by carrot sticks.\n\nI told her I was no rabbit and refused to eat the damn things. She swore to me I would get no pussy from her until she saw me eat a damn carrot. That was eight days ago. I am horny as hell.\n\nSo that is why I am sitting naked in the kitchen, nursing a hard on, carving carrots into cocks. I figured the only way I was going to stomach eating those things would be if they were coated with her pussy juice.\n\nI am satisfied with two of my creations. I left a portion of each un-whittled so I had a handle for them. The carved parts were pretty close to my dick in size and shape although one ended up slimmer than the other.\n\nI rinsed the carrots and wrapped them in a moist towel. After cleaning up in the kitchen I went to the bedroom and put the carrots under the foot of the bed.\n\nThe woman returned from shopping the antique stores late in the day and again tried to feed me Purina vegetarian chow or something. I swear if it hadn't been for my secret stash of Vienna sausage I would have starved to death.\n\nLord knew where my son was. I hoped at least he was getting laid.\n\nIt was Saturday night and we were getting ready for bed. That woman was wearing her sexiest nightgown, a black, very sheer gown that hugged all her curves and was thin enough to give me glimpses of tits and pussy hair.\n\nShe was definitely not playing fair. She even had a bowl with carrot sticks on the nightstand.\n\nAs I sat on the bed to begin undressing I caught the unmistakable scent of her sex.\n\n\"Well I'll be\" I thought to myself, \"she's as horny as I am\".\n\nI normally wear boxer shorts when I go to bed. Tonight I climbed in naked.\n\nShe said, \"If you want anything from me you better grab a carrot\".\n\nI answered, \"Baby, tonight you have a deal\".\n\nI immediately flipped the hem of her nightgown past her pussy and dove in. She responded with a moan and started to push her pussy harder into my mouth. Her pussy was slick with juices when my lips made contact and released even more as my tongue penetrated through her nether lips.\n\nThe woman suddenly stopped my assault. She pushed my head off her pussy and with a growl ordered me to \"Eat a fucking carrot\".\n\nI picked up a carrot stick, calmly studied it for a minute then said, \"You know, these are pretty small. And they need a little something for flavoring\".\n\nI tossed the carrot stick to the floor.\n\nShe groaned in frustration at either my hardheadedness or the though that she was going to be left in a sexual frenzy.\n\n\"Don't you worry Hon,\" I said. \"I brought my own carrots\".\n\nI reached under the bed and brought out the better of the two.\n\nHer eyes opened wide when she saw it. She did not know whether to laugh or start running. Before she could decide I ran the tip of the carrot dick along her pussy lips and collected cunt juice.\n\nI said to her \" Lets see what it tastes like now\", brought it my mouth and licked it.\n\n\"Ummm, needs more flavoring\" I said as I lowered the carrot to her pussy and pressed the \"head\" completely into her cunt.\n\nI heard a moan. I always find that to be encouraging.\n\nI made myself comfortable next to her pussy and licked it as I pushed the carrot deeper into her cunt. When all I had in my hand was the 'handle\" I began a slow, gentle, carrot fuck.\n\nMy tongue was circling her clit as I shoved my carrot dick in and out of her cunt. She was probably hornier than I was because she came quickly and hard. I feared for the integrity of the carrot.\n\nI had earlier in the evening decided that since I had carved two carrots I might as well use them both. I had gone into my son's room and reached into his \"secret\" stash of condoms and took one. I placed it over the thinner carrot then applied KY Jelly liberally over its length.\n\nWhile the woman was catching her breath from her first cum I grabbed the second carrot.\n\nI lifted the woman's legs and placed them on my shoulders. The first carrot's \"head\" was resting just inside pussy. I now had the second carrot poised at her asshole.\n\nI pushed both carrots into her slowly. The woman was gasping for air. I held the carrots still after I felt the \"head\" of the one in her ass pop in. She was moaning again. I pushed both carrots in until all I had in my hand were the \"handles\".\n\nI waited until I saw she had her breathing almost under control then started working both carrots in and out of her body.\n\nIn no time at all she was cursing me into perdition. Thrashing, moaning, trembling and on the edge of something big.\n\nWhen it finally arrived her shriek would have awakened the dead. Somewhere in her spasms I lost control of both carrots so I just sat back and admired the fruit, (or vegetable), of my labors.\n\nIt took a while but she eventually stopped shaking and regained her breath.\n\nThe first thing she said to me was,\" You fucking bastard. Eat a fucking carrot\".\n\n\"I promised you I would,\" I said as I removed the carrot from her ass. I noted it was broken in more than one place but since a condom covered it I removed it easily.\n\n\"The carrot I want is this one,\" I said as I tried to remove the one in her pussy.\n\nIt was broken at the handle. I showed it to her and asked, \"Now how do you expect me to eat my carrot if your pussy wont let go of it?\"\n\n\"Do something!\" she said.\n\nI looked at her and said brightly, \"I know\", and lowered my mouth to her pussy.\n\nThere was enough carrot sticking past her pussy lips that I had no trouble gripping it with my teeth and working it into my mouth. I pulled it out about an inch and bit off a piece. I chewed it for a few seconds, swallowed, then pulled out and bit off another piece. I kept it up until the carrot was gone from her pussy.\n\n\"Damn good tasting carrot\", I said to her.\n\nI thought to myself that while I was there I may as well get desert and started eating my favorite pie.\n\nMy eating a carrot from her pussy had apparently turned the woman on more than I thought. As soon as I put my tongue into her cunt she quickly clamped her legs around my head and tried to break my neck. Just before I knew I was going to die she groaned and collapsed on the bed. I quickly scrambled my way up her body out of harms way.\n\nMy cock was waiting its chance and dove right into the pussy as it went by.\n\nThe woman moaned again as I ferociously tried to release a week's worth want. I pumped furiously into her cunt as she held on for dear life. She began a long stream of obscenities as was her custom when I was doing her well but this night she added \"pervert' to her list. I guess I had to plead guilty to that.\n\nMy cum must have been piled up all the way to the back of my brain 'cause I almost passed out as it flew out into her pussy. I knew I needed to breathe but couldn't. Spurt after spurt of cum jammed her pussy full and we felt it spill over.\n\nI was finally done. She was nearly catatonic. I slid off the woman, kissing her along the way. We lay side by side panting, waiting for our heart rates to slow.\n\nShe said, \"Give me a carrot stick\".\n\nI reached over the nightstand, picked one out and handed it to her.\n\nShe took it from my fingers, put it down to her pussy and scooped some cum onto the carrot. She brought it her mouth and bit off a piece and ate it.\n\n\"This is pretty good\", she said then repeated the process until the carrot stick was all gone. We ate the entire jar full of carrot sticks and exhausted that supply of sauce so she prepared another batch. We spent some quality time preparing another batch of special carrot sauce then ate most of that jar.\n\nUsing her pussy as a dipping sauce container had an unforeseen side effect. It got the woman hot. I ate my last two sticks directly out of her pussy, which seemed to help immensely.\n\nWe now have two jars of carrots sticks in the refrigerator, a His and a Hers.\n\nEach is coated with our favorite special sauce. We even take some to work, but we don't share. "
    ],
    "authorname": "jjcole",
    "tags": [
        "fucking carrot",
        "whitling",
        "carrot sticks",
        "anal carrot",
        "diet",
        "masturbation",
        "carrot",
        "exhibitionism",
        "carrot dildo",
        "coercion"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/carrots"
}