{
    "title": "Things Change",
    "pages": [
        "Dillards department store. Beaufort, South Carolina.\n\n\"Mama? Isn't that Jackie Frances or whatever her married name is?\"\n\nHer mother stopped talking when her daughter grabbed her arm and looked.\n\n\"Oh, my heavenly days! Yes, it is. I haven't seen her in ages!\"\n\n\"Same here, and just look at her! She's as beautiful as ever.\"\n\n\"Let's go say 'hi', okay?\"\n\nThe two women moved closer then waited for this other women to look their way.\n\n\"Jackie?\"\n\nThe woman stood there staring for a second or two then looked at the other woman and finally smiled.\n\n\"Oh, my goodness! Joan?\" she said, a look of disbelief on her face.\n\n\"Yes! Hi! And you remember my mother, Verna Mae, right?\"\n\n\"I do. Hi, Mrs. Thomas! It's been so long!\"\n\nThe mother-daughter pair took turns hugging their long lost friend then agreed it had been a very long time.\n\n\"So how have you been, Jackie? And just how long has it been?\" Joan asked.\n\n\"Oh, gosh. I'd say...ten years? Seems like you'd just graduated from high school as I recall.\"\n\nJoan smiled and said, \"Yes! That's right! You and Kenny came to my graduation, and I still have the gold pin you gave me.\"\n\n\"That's right! I'd forgotten about the pin. We were always struggling with money, and that was the best I could do.\"\n\n\"I loved it and still do,\" Joan told her. \n\n\"Speaking of Kenny, how is he, Jackie?\" Verna Mae asked.\n\nVery politely, 'Jackie' said, \"I go by Jaclyn now, and well, Kenny and I...we divorced.\"\n\n\"Oh. I'm so sorry,\" Joan told her with genuine sympathy.\n\n\"I can't say I'm surprised,\" Verna Mae said without thinking as she did all too often. Her internal governor was broken and failed to filter comments that regularly came spilling out.\n\n\"Mama! Shame on you!\" her daughter said, the embarrassment showing through.\n\n\"No, it's okay,\" Jaclyn said with a smile.\n\n\"He was such a shit. Sorry. He was just a good for nothing man!\" Verna Mae insisted after getting some support.\n\n\"And a controlling...\"\n\nJaclyn looked around to see whom she might offend before quietly saying, \"Bastard,\" which got an 'amen' from Verna Mae.\n\n\"It's none of my business, but he used to hit you, didn't he?\" Verna Mae asked as though she knew it for a fact. She'd seen bruises more than once and felt sure her husband had done it.\n\n\"He was a very angry man,\" Jaclyn replied, a look of sadness in her eyes. \n\nSomehow she'd believed for the longest time that no one actually knew. She always made up some lame story about where the latest bruise came from, but she didn't fool anyone who didn't want to believe the unbelievable.\n\n\"We didn't mean to get personal,\" Joan said, as she gently touched her old friend's forearm.\n\n\"No, it's fine. People who haven't seen one another in a long time catch up. It's just how things are,\" Jaclyn said as a way of being supportive.\n\nJaclyn smiled again, and while it was obvious she'd aged, Joan felt a wave of envy wash over her as she realized Jaclyn looked more beautiful than she did even though she thought she was many years older than her.\n\n\"You look amazing!\" Joan, who hated to admit she was vain, forced herself to say along with a forced smile.\n\n\"You are too kind,\" Jaclyn replied very modestly. \"But I think getting away from Kenny and taking up running and healthy eating has made a huge difference.\"\n\n\"Oh, my. My boyfriend would love you!\" Joan told her with a laugh. \"He's a runner and a health nut...sorry. He's careful about what he eats, too.\"\n\nJaclyn laughed and told Joan she wasn't offended at all.\n\nThey chatted for another minute or two before Verna Mae invited her to join them for dinner on Sunday.\n\n\"I don't want to intrude,\" Jaclyn said.\n\n\"Nonsense! You're not intruding and we insist!\" Verna Mae said, even as her daughter cut her eyes her way to let her know 'we' didn't include her. \"Don't we, Joanie?\"\n\n\"Mama? Jared's coming over, too. Remember?\"\n\nUndaunted, her mother looked right past her daughter and said, \"The more the merrier! You remember where we live, right?\"\n\n\"Yes. Of course. If you're still on Hickory Street.\"\n\n\"That's us!\" Verna Mae said with too much enthusiasm for her daughter. \"We eat around 4 on Sundays, so just bring your appetite, okay?\"\n\nJaclyn sensed Joan's mood and tried to bow out, but Verna Mae wasn't having it.\n\n\"Okay, then. I'll see you on Sunday,\" she finally said almost apologetically.\n\n\"And if you're seeing someone, bring him along!\" the 59-year old woman said.\n\n\"No. I'm definitely not seeing anyone,\" Jaclyn replied as though she was embarrassed about that. But the truth was she'd never felt freer. At some point, she wanted to love again, and above all else, she wanted to be loved back for once. Not owned or controlled but really and truly loved. And that was something she was willing to wait for.\n\n\"Well, Joanie's got herself a very handsome young man,\" Verna Mae also just blurted out.\n\nShe saw her daughter give her another look, but that didn't stop her.\n\n\"He's a little bit younger than Joan.\"\n\n\"A little bit? Mama, he's three and a half years younger than me!\" Joan said as though that was something awful. \n\nJoan looked at Jaclyn, shook her head, then said, \"I honestly don't know what I was thinking, and I'm the one who asked him out first.\"\n\n\"She was thinking he's gorgeous!\" Verna Mae said making things worse.\n\nJaclyn was now very uncomfortable, but smiled before saying she really needed to finish shopping and get home even though there was no one there to get home to.\n\nThey all hugged again then said goodbye.\n\nJust seconds later, Joan lit into her mother.\n\n\"Mama? What in the world is wrong with you?\"\n\n\"Now what do you mean by that?\" her very petite mother asked as if this was the first, rather than the the hundredth time they were having this little talk. \"What did I say that was so wrong?\"\n\n\"Why did you have to mention the age difference? You know that drives me crazy!\"\n\nHer mother shook her head then said, \"Oh, for the life of me. I will never understand you! You're 28 and you've been married twice and divorced both times, and now you have this wonderful man in your life, and you're still complaining! For the life of me I don't understand you!\"\n\nJoan Thomas was 28, attractive but not beautiful, and when it came to men\u2014extremely picky. She denied that but knew it was true. In fact, both of her now ex-husbands were never good enough to satisfy her and she'd driven them off with her endless nitpicking and demands. She justified it by claiming she knew what she wanted and further saying she knew what they wanted. They just needed someone to...show them. \n\n\"I have very high standards,\" she'd always added whenever anyone dared mention that she was...pushy. She was that and a lot more, and although she'd made herculean efforts to hide it for as long as she could, her current boyfriend was seeing the real Joan begin to emerge.\n\nJared Quinn was a Marine stationed at MCAS Beaufort, where those letters stood for Marine Corps Air Station. He was an aviation ordnance man, military occupational specialty or MOS 6541, who repaired ejection racks and missile launchers. He'd been on active duty for a little over three years and was every bit as attractive as Verna Mae had said. Joan had noticed him at church the first time he showed up, and she'd made her move just minutes after the pastor said the final 'amen'.\n\nAfter introducing herself, she let the handsome young Marine know there was a Christmas party at the church that Wednesday evening, and she'd demurely asked him to go with her.\n\nJoan had lived in Beaufort all her life, and while she had nothing against Marines, she'd never dated one and had vowed (privately) that she never would. She used 'moving around too much' as her excuse, but the truth was she hated the short hair that marked every Marine in the city. In addition to the air station there were also tons of Marines from Marine Corps Recruit Depot Parris Island which was located just across town in a little city called Port Royal running around everywhere in their high and tights. \n\nAnd as a registered nurse with a college degree, the thought of dating a serviceman with a mere high school diploma was something else she couldn't tolerate. Until she met Jared.\n\nHe was different. He was so handsome she was able to overlook the white sidewalls and his choice of careers and his lack of a college degree. She'd even blushed when she introduced herself, but he was very nice about it and said he hadn't noticed when she felt her cheeks flaming on. She later learned that he'd gone to college for three years before enlisting, but that only bothered her more because she saw him as some kind of quitter, which was how she saw her first husband who dropped out of college to support them when they got married at 19.\n\nEarly on, she managed to bite her tongue and not voice her opinions very often. But now, just one month later, she was finding fault with things Jared said or did, and to make matters worse, she'd begun bringing up the age difference nearly every time they were together.\n\nJared had ignored it the first couple of times, then when she brought it up in front of some friends a third time, he tried making a joke out of it.\n\n\"It just kills me! When I turn 30, Jared will still be 26! Twenty-six! Can you imagine?\" a very animated Joan said as she looked for sympathy but got only blank stares as no one else could understand or relate.\n\n\"Hey. I'll be 26...and a half,\" Jared said, drawing a chuckle from the others but an icy stare from Joan.\n\nShe still hadn't really exposed her true self at that point, and although he wasn't in love with her or anything close to it, Jared thought she was a nice girl who was also reasonably attractive. And up to then she'd been reasonably pleasant, and he'd enjoyed spending time with her.\n\nBut as of late, he was fast realizing there were two Joan Thomases. One was a sweet Southern Belle. The other was...not. This other Joan didn't quite ride a broom, but Jared was now able to picture her mounting one every now and then. And while he hadn't yet told her, he'd decided that if this was the new normal for her, then he was going to end things very soon.\n\nJoan bristled at her mother's comment, but her mom was the one person who could handle her, and she knew there was no way she was going to convince her she was wrong. After all, as she'd reminded Joan many times, she'd known her daughter all her life.\n\nBut her mother got one more lick in before giving it a rest.\n\n\"Jared is the nicest, kindest man you've ever dated, and if you don't get your act together, he's gonna leave you, too!\"\n\nJoan didn't let the hurt show, but that remark stung. Bad. It stung because it was true, but Joan was unable to stop being herself, and a part of her knew this latest relationship would soon go down in flames just like her marriages had. Worst of all, she felt powerless to stop it, and was still trying to find a way to justify her behavior to her mother. But she'd known her mom all of her life, too, so she threw in the towel. For the time being.\n\nOn their ride home, Verna Mae unintentionally poured salt into the wound when she tried to get her daughter to talk.\n\n\"Did you notice how smooth Jackie's skin is?\"\n\nJoan glared at her mother then said in an icy tone, \"It's Jaclyn, Mama. Not Jackie. Jaclyn.\"\n\nShe hesitated for a moment then snapped, \"And yes, I noticed.\"\n\n\"Well, excuse me!\" her mom said as she turned away and raised her chin.\n\nJaclyn had lived much of her life in Beaufort where her father had once been a Marine drill instructor at Parris Island. He was an aviation maintenance man, and after his three-year tour was up at 'PI' as the locals called it, he moved over the air station where he remained until being selected for the rank of first sergeant. Their family moved away for three years only to return once her father had been selected for sergeant major.\n\nTwo of the years she didn't spend in Beaufort were in Columbia, the capitol of South Carolina. Kenny broke down one day after she told him she couldn't put up with any more of his drinking and abuse and promised to do better. \n\nAnd for a few months after the move, he did. He got a decent job doing construction, and he hadn't had a drink since they left Beaufort. But as she found out the hard way, old habits really do die hard. Fear had kept her with him before, and once he started drinking again, fear kept her with him in Columbia. Fear of him and the fear of being alone.\n\nThat was true until one morning when she woke up with a black eye and a swollen lip. It was as though something snapped, and from that moment on she was no longer afraid. She sat up in bed and looked at her husband who'd passed out drunk the night before as he'd done more times than she could count and for the first time thought, \"I'd rather die than live like this one more day.\"\n\nSo before he woke up, she packed as much as she could in two suitcases and returned home to Beaufort, moving back in with her parents who wouldn't let Kenny get near her when he came around drunk a few days later. \n\nShe couldn't help but laugh when her daddy pulled out their 12-gauge shotgun and stuck it in his face the first and only time Kenny came looking for her and said, \"You can leave with or without your face, Ken.\"\n\nJaclyn hadn't seen or heard from him since except for the two times he showed up in court during the divorce process. Mercifully, there were no children to worry about, and after just six months, Jaclyn went back to her maiden name of Frances and began starting over. She'd gained a ton of weight over the last three years of her marriage, and she was bound and determined to get back to the size 6 she'd been all of her adult life prior to that.\n\nShe was now running 5k and 10k races and had a decent job in town and had just gotten her own place. During the time she spent back home she was thankful both for her parents' hospitality and that there'd been no children's lives to ruin. But Jaclyn was now 37 years old and wanted nothing more than a loving husband and a baby of their own. That said, she was adamant about one thing. She really would rather live alone than ever get involved with another man like Kenny.\n\n*****\n\n\"You still seeing that Joan chick?\" Jared's roommate and fellow Marine sergeant named Bill Sampson asked.\n\n\"Yeah,\" came the very unenthusiastic reply.\n\n\"She's kinda hot. For a skinny girl,\" his fellow 'ordie' said.\n\n\"Yeah. She's uh, she's great,\" Jared replied almost absentmindedly as he mulled over how to go about extricating himself from the mess he'd gotten mired in as he ran a comb through his thick, dark hair that was just under three inches on top, the maximum allowed for male Marines.\n\n\"You hit that yet?\" \n\n\"What?\" Jared asked as he put the comb away.\n\n\"Joan. You guys done it yet?\"\n\nThe stare told his friend it was none of his business.\n\n\"Okay. Just wondering. I mean, she was married before, so she's gotta, you know...want it.\"\n\n\"And that, my friend, is why you are doomed to bachelorhood for life,\" Jared told him as he pulled on a pair of decent shoes.\n\n\"I'll drink to that!\" his roommate said as he opened another bottle of Budweiser.\n\n\"And I'm gonna be late.\"\n\n\"For supper, right?\"\n\nJared laughed then said, \"Ha! You remembered. Yeah, down here it's 'supper'.\"\n\n\"How do you deal with that southern drawl of hers, man? I mean, she's cute, but damn! That'd drive me crazy!\"\n\n\"And that's just one more reason why...\"\n\nHis roommate threw the bottle cap at Jared and told him he got it. And to have fun.\n\n\"Yeah. Fun,\" Jared said in that same flat tone of voice.\n\nAs he drove along Jared tried saying things out loud to see how they sounded.\n\n\"Joan? It isn't you. It's me.\"\n\nThat made him laugh because it was so cliche, and it really was her.\n\n\"You're a really great girl. We're just not...\"\n\nBut she wasn't great. She was...controlling. And insufferable.\n\nAs he pulled into the driveway, he told himself he'd find the right words. In the meantime, he put on a smile, grabbed the bottle of wine he'd brought with him, and headed to the front porch.\n\nSeconds later, Joan opened it and invited him inside. The look on her face was almost hostile, and Jared wondered if perhaps she'd come to the same conclusion. But once he was inside, he realized that wasn't the case.\n\n\"I see you've once again chosen not wear one of the monogrammed shirts I bought you,\" Joan said coldly.\n\nShe'd purchased three of them for him right after Christmas, all with French cuffs as well as a pair of gold cufflinks he assumed were fairly expensive. It was one of the first hints of her need to control him, and he'd only worn one of the shirts once, and after that he got rid of them. He just hadn't gotten around to telling her that yet.\n\n\"Um, no. It's not cold enough yet to wear long sleeves,\" he politely replied even though it was only 48 degrees outside.\n\n\"But it's always the right time to look your best,\" Joan shot back without looking at him.\n\n\"You mean...your best,\" Jared said with the same level of politeness, causing Joan to turn and glare at him.\n\n\"Fine. Do what you want,\" she told him before turning away with a dismissive wave of the hand.\n\nVerna Mae saw him and rescued him just in time.\n\n\"Jared! How's my favorite Marine?\" she asked before kissing him on the cheek.\n\n\"Verna Mae. Don't you look lovely!\"\n\n\"I guess I must not,\" Jared heard Joan say as she gave him another icy look along with the dig.\n\nVerna Mae took the bottle of wine after thanking him for it, and just as she turned away, the doorbell rang.\n\n\"Joanie? Can you put the bottle on the table, please?\" she asked before going to answer the door.\n\nPartly out of curiosity, and partly due to not wanting to deal with Joan, Jared turned around and took a couple of steps back toward the door just as Verna Mae opened it.\n\n\"Jackie! Hello! I'm so glad you could join us!\" she said before hugging the younger woman who was also holding what appeared to be a homemade pumpkin pie.\n\n\"You shouldn't have!\" Verna Mae told her.\n\n\"Sorry. I just couldn't show up empty handed,\" the very attractive woman said with a beautiful smile that caught Jared's attention.\n\n\"Come in! I want to introduce you to someone.\"\n\nVerna Mae took her arm, and as she led Jaclyn over to Jared, their eyes met for the first time. Jared knew he was staring but couldn't stop. The older, beautiful woman with the shoulder-length, dark hair smiled at him and he unconsciously smiled back.\n\n\"Jackie? This is Jared Quinn. Jared works on F-18s for the Marine Corps. Jared? This is an old friend, Jackie...\"\n\n\"Frances,\" the attractive woman said. \"I went back to my maiden name after the divorce.\"\n\n\"It's...it's a pleasure to meet you,\" Jared said, not extending his hand unless she did so first. When she did, he took it, and just the touch of her small hand and the soft, smooth skin created a stirring. He didn't bother mentioning that he'd never actually worked on an F-18 but only on the equipment that held bombs, rockets, and missiles.\n\n\"Thank you for your service,\" she told him as they shook.\n\n\"Oh. Um...my pleasure,\" he said just as Joan moved alongside him and hooked her arm through his.\n\n\"Oh, okay. This must be your boyfriend,\" Jaclyn said, putting two and two together.\n\n\"My very young boyfriend,\" she replied, a fake smile plastered on her face.\n\nJared only raised his eyebrows indicating he was uncomfortable but not willing to create a scene as Verna Mae suggested they go sit down and maybe open the bottle of wine.\n\nBefore, during, and after dinner, neither Jared nor Jaclyn said much to each other. They sat and listened to the things the other person said during the conversation and let everyone else respond. Jared learned that in addition to being divorced, that Jaclyn had stayed in a terrible marriage for too many years, and that, like him, she loved to run. He had the very strong impression that she was a kind, caring woman, but he'd once thought that about Joan, too, so he withheld judgment for now. Then again, it was unlikely he'd ever see her again, so it seemed like a moot point. Last but not least, she was clearly a lot older than him in spite of her extremely smooth skin, beautiful hair, tight, firm body, and gorgeous face.",
        "She, in turn, now knew he'd grown up near Seattle, gone to college, and that he shared her newest passion. The only uncomfortable moment came when Joan said with a hint of snideness, \"Gee, maybe you two should go for a run together. Or...whatever.\"\n\nJared saw Jaclyn look down the moment Joan said it, and he shot her a rare look of 'watch it' which caused her to claim she was being sincere, something neither he nor her mother believed for a second.\n\nJaclyn managed to excuse herself after a post-dinner glass of wine. She thanked Verna Mae for her hospitality, told Joan how nice it was to see her again, then let Jared know it had been a real pleasure meeting him. He said the same, and that was that.\n\nNot long after Jaclyn left, Jared was finally alone with Joan and knew it was time to talk. They were both sitting on the coach when he turned toward her and said, \"I've been thinking.\"\n\n\"About wearing the shirts, I hope?\" she asked, never dreaming he would break up with her.\n\n\"About us.\"\n\n\"And?\" she asked, her eyebrows now up high.\n\n\"We're...we're not a good fit, Joan.\"\n\n\"What? What does that even mean?\" she said indignantly as she turned to face him and intimidate him with an icy stare.\n\nUnmoved and undaunted, Jared quietly told her, \"It means I've decided not to see you again.\"\n\nThere was no emotion in his voice and no hint of it on his face.\n\n\"You can't just decide that without discussing it with me,\" she told him very defensively.\n\n\"You see, that's what's wrong. You can't see it, but you need to control...everything.\"\n\n\"I do not!\" she shot back, a look of hurt and anger on her face.\n\nVery calmly and quietly Jared continued.\n\n\"This isn't a debate, Joan. I'm letting you know as nicely as I can, that I don't want to be with you.\"\n\n\"You're kidding.\"\n\n\"No. I'm not kidding. I'm serious. And I hope you'll at least be willing to take a look at yourself and see if what I'm saying isn't at least partially...\"\n\n\"Oh, that's rich! I need to look at myself? How about you? You're the one who needs to do some introspection!\"\n\n\"I've never claimed to be perfect,\" Jared said just as quietly.\n\n\"No, but you don't even try. If you did, you'd be wearing one of the shirts I bought you.\"\n\n\"So you could...show me off?\" he asked, still no hint of any emotion in his voice.\n\nJoan turned away from him and went on a tear.\n\n\"You know what? I should have done this to you two weeks ago! You...you have no idea what compromise means. Everything is always about you. It's what you want, what you will and won't do, and...\"\n\n\"Is everything okay in here?\" Verna Mae asked in that sweet, southern way.\n\n\"Jared was just leaving, Mama,\" her daughter said with venom in her voice as she turned her head and drilled holes into Jared's eyes.\n\nHe stood up, thanked Verna Mae for another wonderful dinner, then gave her a hug.\n\n\"If I didn't know better, I'd think you were going off to war or something!\" the older woman said.\n\n\"No. Not today, anyway,\" he told her with a smile as he let her go.\n\nJoan refused to even look at him, and that's when Verna Mae realized what was going on.\n\n\"No. You two are not breaking up. Please tell me you're not.\"\n\n\"I think it's for the best,\" Jared quietly told her before thanking her again and letting her know he'd show himself out.\n\nAs he closed the door, he heard Verna Mae say, \"What did you do this time?\" followed by the sound of Joan bursting into tears.\n\n\"Man, oh man. You really dodged a bullet, big guy,\" the six-foot tall Marine NCO said to himself as he fired up the Jeep Wrangler and headed back to his off-base apartment.\n\n*****\n\nSix weeks later\n\nJared looked at his watch and knew he had less than ten minutes to get in and out before the store closed, so he hurried inside and grabbed a cart.\n\nHe made a quick trip around the store tossing in the things he needed as he came upon them. He was on the last aisle when he looked up and saw a woman about 20 feet in front of him. She had her long, dark hair pulled into a flat ponytail and was pushing a cart ahead of him, and even though he wasn't sure, he thought he knew her.\n\n\"Excuse me,\" he said as he pulled up alongside her.\n\n\"Jared?\" the surprised woman said immediately after turning to see who it was.\n\nThe look of surprise quickly vanished and was replaced by a beautiful smile.\n\n\"I can't believe you remember me,\" he told her.\n\n\"Oh, I remember you,\" she said almost bashfully as she looked away.\n\n\"What are the odds, right?\" he said, just as she began moving again.\n\n\"Truly. What brings you out here so late at night? And to a grocery store no less?\" she asked with another warm smile.\n\nShe looked in his cart and saw it was filled with healthy food and laughed. He picked up on it, looked in hers, and saw the same kinds of things.\n\n\"I take it you're still running,\" Jared said. He felt almost nervous, something that hadn't happened to him even when talking with a beautiful woman since he was in high school.\n\n\"I'm no quitter,\" Jaclyn said as she tried not to laugh.\n\nJared did laugh, and that allowed her to do so, too.\n\n\"Unless you count my marriage. I did quit that,\" she added, her voice now more somber sounding.\n\n\"From what I understand, you fought the good fight for a very long time,\" Jared said in a supportive way.\n\n\"I did try. Lord knows I tried,\" she replied before forcing another smile.\n\n\"How about you?\" Jaclyn asked.\n\n\"According to Joan, I am. A quitter,\" he replied with a smile.\n\n\"I'm sorry?\" she said, having no idea what he meant.\n\n\"No, I'm the one who needs to apologize. After you used the word 'quitter', and because you also know Joan, I assumed you knew the connection.\"\n\nJaclyn gave him a look indicating she had no idea what he was saying, so Jared explained.\n\n\"She uses the word 'quitter' rather freely. In my case, I didn't finish college. I enlisted with a year to go, and Joan accused me of quitting. Technically, she's correct, but there are some very good reasons why I did. I am going to finish, but that didn't seem to matter to her.\"\n\n\"Oh, okay,\" Jaclyn replied. \"Now I get it, and I completely understand.\"\n\n\"But to answer your question, I'm not married,\" Jared said before realizing that wasn't what she'd asked.\n\n\"I know you're not,\" she replied very sweetly. \"And I know you and Joan broke up.\"\n\nWhat she didn't tell him was that she hadn't asked him if he was married. In fact, the conversation took such an unusual turn that she forgot having asked anything at all.\n\nAs they pulled up to register number 3, the only one still open, Jaclyn mentioned having seen Joan one more time after the Sunday dinner as she set her items on the counter.\n\n\"I honestly don't understand her hangup with the age difference. It was only what? Three years?\" she said as she continued unloading the buggy.\n\nJared laughed and said very seriously, \"Three...and a HALF.\"\n\nJaclyn chuckled and told him Joan mentioned him saying that and how she didn't think it was funny. At all.\n\n\"A lot of things weren't very funny to her,\" Jared said with a kind of a sigh.\n\n\"Even so, I still can't understand her being so hung up on three years. I mean, I'm, well, quite a few years older than Joan, and I thought, 'I wouldn't even care about the much larger age difference between you and me', and honestly, three or four yeas seems trivial.\"\n\nJared smiled, but when Jaclyn turned to him with a look of near horror on her face, he stopped smiling.\n\n\"Oh my gosh! I...I didn't mean it like that, Jared. I wasn't implying or hinting that I was...\"\n\n\"I didn't assume you were,\" he assured her with a kind look and a smile. \"But I'd have been flattered if you were,\" just as the cashier announced her total.\n\nHe'd already put his things up, too, as they were talking, and as she was paying, Jaclyn said, \"It was really nice seeing you again.\" \n\n\"Yes. Same here,\" Jared replied as his items were being rung up.\n\n\"I uh, I guess I'll see around then,\" Jaclyn told him as she got behind her cart again that was now half filled with bagged groceries.\n\nJust as she began pushing, Jared said, \"Jaclyn? Would you mind if I walked out with you?\"\n\nShe looked at her groceries then back at him before saying, \"Oh. Well, it is really dark outside, so yes. I'd appreciate that.\"\n\nJared paid with a credit card, helped bag his own groceries, put them in the cart himself and quickly pushed it even with Jaclyn's.\n\n\"I still can't believe we ran into one another,\" she said as they headed outside together.\n\n\"Maybe it's a sign,\" Jared said with a laugh.\n\n\"Right. That must be it,\" Jaclyn agreed with a little laugh of her own as she pointed out where her car was parked among the half dozen or so others left in the lot.\n\nWhen they got to it, Jared offered to put her groceries in the trunk. She knew it would be easier for her to do it herself, but she also knew why he was asking and liked knowing that a man was still willing to help a woman. \n\n\"Um, yes. Thank you. That would be very kind of you.\"\n\n\"My pleasure,\" he told her as she popped the trunk and he began grabbing bags.\n\nIn less than a minute, everything was in the trunk, Jared shut it and turned to Jaclyn.\n\n\"When did you talk to Joan again?\" he asked before quickly saying it was none of his business.\n\nShe smiled and told him it wasn't any big secret.\n\n\"I actually called her mom to thank her for dinner and invited her\u2014and Joan\u2014to have dinner with me the following weekend. I didn't think they'd actually take me up on it, and I thought that even if Verna Mae did, Joan wouldn't show up.\"\n\nThe way Jared looked at her caused her to think he missed Joan, and she mentioned it.\n\n\"What? No. Not at all,\" he told her without any hint of malice or ill will. \"She's a nice enough girl. We're just not right for each other.\"\n\nJaclyn looked at his groceries, and even though it was very cold outside meaning nothing would spoil, Jared took the hint and said he should probably take care of them.\n\n\"Maybe we'll bump into each other again one of these days,\" she said, that amazing smile on her very pretty face.\n\n\"Yeah, maybe so. And...I'd like that,\" Jared said as he moved behind his cart just as she reached for the door handle.\n\nHe quickly moved her way and said, \"May I?\"\n\nAgain, she loved having a man be a gentleman, something she'd rarely experienced in her marriage, and stepped back a bit.\n\n\"Thank you,\" she told him as she sat down.\n\n\"Jaclyn?\" Jared said once she looked up, waiting for him to close the door.\n\n\"Uh huh?\"\n\n\"Listen. I know it's late and this was a chance meeting and all, but, well, I...I was wondering. Would you...maybe like to go out sometime?\"\n\nShe'd meant what she said before about the age difference not bothering her, but she had no idea Jared would ever actually ask or out. He was young, gorgeous, and could date pretty much anyone he wanted. So even though she heard what he said it took her a moment to respond.\n\nBefore he did, Jared smiled then said, \"You know. With me. A younger man.\"\n\n\"I...I'd love to,\" a very surprised Jaclyn told him without giving it any additional thought.\n\n\"Yeah?\"\n\n\"Yes. Very much,\" she said with enthusiasm.\n\n\"Great. Can I maybe get your number?\"\n\nShe provided it, and Jared entered it into his iPhone and promised to text her soon.\n\n\"I hope you will, Jared, and I'll look forward to it!\"\n\nShe closed her door, but before she could start the car, she saw an incoming text and laughed.\n\n\"Seeing you again made my day!\" it said.\n\nShe rolled down the window and with a little laugh said, \"And you made mine, too!\"\n\nJared waved as she drove off and stood there for a few seconds thinking about how fortunate he was to have run into her and how odd it was to have done so at that time of night anywhere in town other than maybe a bar. And yet that was even more unlikely as he rarely ever went to one.\n\nAs he drove back he started wondering if maybe Jaclyn was 'damaged goods'. He'd heard a tiny amount of her side of the story, but it was possible she had serious issues of her own; issues like someone else he'd recently dated, and that thought sent an icy chill through him.\n\nJaclyn was as attractive as any woman he'd ever met, but looks alone weren't that big a deal to him as he'd been told he was cute or handsome his entire life. Even so, it sometimes seemed like a handicap the way having money did. Maybe it was the same for everyone, but he felt like it was often difficult to determine if a girl really liked him for himself or if she just thought he was 'hot'. Just saying that to himself made him feel petty and small because it sounded so vain, and there was no way he'd ever say that out loud to anyone else. \n\nAll through high school and college and his first couple of years on active duty, that hadn't mattered. He'd never even given it any thought. It was one of those things that 'just was', and as long as he was getting laid on a regular basis, nothing else seemed important. Up until Joan, he'd had no troubling finding willing partners, and yet, as he reflected back on his first failed relationship, he realized he'd learned a lot from it. \n\nOne of the biggest lessons was that he was now at a point where the thought of a relationship didn't scare him. In fact, it had a newfound appeal that he liked a lot, and as he shifted his thoughts back to Jaclyn, he not only didn't shiver at the thought of being in a relationship with her, it actually made him smile. If, of course, she wasn't a mess on the inside.\n\nHe had no idea what might happen with her specifically, but he was starting to get a good feel for what he wanted to do with the rest of his life. For several months now he'd felt really good about leaving active duty and finishing his degree. During his final year in school he'd turn his attention to a job or career even though he still had no real idea what that might look like, and at some point maybe a wife and possibly a kid or two. \n\nThe only thing that had any appeal to him at the time was the possibility of coming back on active duty as an officer, a thought that made him laugh when he realized the way he and most other Marines regarded second lieutenants. It probably wasn't fair, but his overall impression was that they should be required to wear signs that read, \"Kick me I'm stupid!\"\n\nHe chuckled at the thought of having that sign hung around his own neck the day he got commissioned then went back to thinking about other things like...getting married or starting a family. It wasn't like he was 40, so why did he perpetually feel alone now rather than happy to still be 'footloose and fancy free'? \n\nEven when he and Joan were having a decent time, he never really felt connected with her. In fact, he'd never really sought a connection with anyone before. But now he had this indescribable, unsettling, and growing need to be connected; a need he didn't understand and couldn't explain. But it did explain his concern with who Jaclyn was and his second guessing his decision to ask her out. And the only reason he had was because...she was hot. Very hot. And that took him full circle to wondering if the only reason she'd said 'yes' was because he was a reasonably decent-looking guy.\n\nBack at his apartment the following morning, Jared was trying to decide what to do with Jaclyn or where to take her. Bill noticed the frustration and asked what was going on.\n\n\"I met someone.\"\n\n\"Hold on. When did you have time to meet someone? You got in around 11:30 and went to bed.\"\n\nJared was chuckling and getting ready to answer when Bill said, \"Oh. Don't tell me. You went for a run already and literally ran into some babe.\"\n\n\"No. Well, I did kind of run into her, but it wasn't this morning or on a run. It was at the grocery store last night.\"\n\n\"No way.\"\n\n\"Yes. Way. Just before it closed at 11.\"\n\n\"And you managed to get her name and number. Just like that,\" Bill said with a shake of his disbelieving head.\n\n\"Yes and no. I did get her number, but I met her once before, so I already knew her name. I met her at Joan's. Or rather Joan's mother's place.\"\n\n\"Ah, okay. When you went for...supper.\"\n\nJared laughed and said that was the when it happened.\n\n\"Oh, now I remember. You mentioned this super hot chick who was there. Older than you\u2014or Joan. Am I right?\"\n\n\"Bingo. Her name is Jaclyn, and yeah, she's...hot.\"\n\n\"So...is there a little...\"\n\nBill held his arms out and started thrusting his hips as he said, \"A little 'chicka wow wow' in your future?\"\n\nJared just shook his head and didn't bother saying anything.\n\n\"What? What's wrong with that?\"\n\nRather than answer the rhetorical question, Jared asked, \"Any idea where to take her to make a good first impression?\"\n\n\"Jesus. You like this woman, don't you? As in 'like' her.\"\n\n\"Yeah, I kinda do. I don't really know her, but I don't know. I have this...feeling about her.\"\n\n\"Ah, okay. As in...feeling?\" Bill asked as he used his hands to indicate squeezing two breasts at the same time.\n\nJared sighed then asked again.\n\n\"How about The Battery?\" Bill suggested.\n\n\"In Charleston?\"\n\n\"Yeah. Charleston.\"\n\nJared shook his head then said, \"I don't know. She lived there for two years. I can't imagine that'd be very interesting.\"\n\n\"Okay, but what if you read up on the history and could give her a kind of running tour as you look around?\"\n\nJared stared at his roommate who could often be a troglodyte and smiled.\n\n\"You're not as dumb as you look, Sampson.\"\n\n\"Ah, gee, Quinn. That may just be the nicest thing you've ever said to me.\"\n\nBill turned around after saying that then muttered, \"Asshole.\"\n\nJared laughed but thanked him for the idea.\n\n\"Yeah, sure. Anytime.\"\n\nWhen Jared texted Jaclyn, he apologized for suggesting something she'd probably seen 'a thousand times', but she surprised him when she told him she'd love to.\n\n\"It's one of my favorite places in the world,\" she wrote back.\n\n\"Maybe we could go early then grab lunch?\"\n\n\"I'd love to!\"\n\n\"Okay, great. How about I pick you up around 10am on Saturday?\"\n\n\"Sounds wonderful!\" Jaclyn texted back.\n\nBill saw his buddy smiling and said, \"You're welcome. You're still an asshole, but you're welcome.\"\n\n\"Sorry, bro,\" Jared said with sincerity.\n\n\"Nah, it's okay. Just do me a favor. Maybe see if this hottie friend of yours has a younger sister?\"\n\nJared laughed and promised he'd ask.\n\nBoth Jaclyn and Jared went for runs early Saturday morning. They'd have both run just for the fun of it, but both of them needed to bleed off some excess emotional energy in anticipation of their date. Jared ran five miles while Jaclyn ran six. \n\nBy the time he showed up at her place, both of them were still just as excited but neither of them was keyed up. The weather was very chilly early that morning, so Jared grabbed a dark-blue sweater to wear with his jeans and had a light jacket in the Jeep just in case.\n\nWhen the door opened, Jaclyn smiled and told him how nice he looked, but Jared barely said, \"Thank you,\" as he was looking at her.\n\n\"What?\" she asked as she invited him in.\n\n\"You uh, you look...amazing.\"\n\nJaclyn laughed then thanked him, too.\n\n\"Sorry. I wasn't laughing because I don't believe you. I'm laughing because I actually thought about wearing a dress.\"\n\n\"No. You uh, you made a really good choice,\" he replied as he finally looked into her eyes.\n\nShe was wearing a very dark-red sweater with black pants, and the way the top hugged her feminine curves had his full attention and even made him think of his roommate. Her hair was down and the way it framed her face made her look even more beautiful. It had a kind of bounce and a sheen to it, and he was having trouble deciding what looked nicer. If that wasn't enough, she was wearing a glossy, dark-red lipstick that matched the color of the ribbed top, and all Jared could do was say, \"Wow!\"\n\n\"You are so sweet!\" Jaclyn told him before letting him know she was ready whenever he was.",
        "\"Oh, right. Yes. I'm ready,\" he let her know with a smile.\n\nShe reached for a black coat, but Jared said, \"I can get that,\" before she got to it.\n\nHe picked it up and held it out for her as she gently lifted her hair. Once the coat was in place, her very soft, silky hair cascaded over the collar and Jared caught a very pleasant whiff of her shampoo mingled with a perfume he liked but didn't recognize.\n\nJaclyn thanked him then did so again when he opened her door and helped her up into the Wrangler.\n\nOther than being beautiful, the first thing Jared realized about her was how easy it was to talk to her. The ride was right at 70 miles and took about an hour and fifteen minutes. They talked the entire time and covered a ton of the basics that people typically asked when getting to know someone they were interested in.\n\n\"So when my dad passed away unexpectedly, that was my last straw. I dropped out of college and joined the Marine Corps.\"\n\nJaclyn was clearly saddened and told him how sorry she was.\n\n\"Thank you. My dad was my best friend, and when he died so suddenly it just...blew me away.\"\n\nJared's hand hand been on the gearshift, and although he sensed movement, it wasn't until Jaclyn's was on top of his that he realized what was going on.\n\n\"I really can't imagine. Both of my parents are still alive and well, and...\"\n\n\"And I've already lost both of mine,\" Jared replied as he debated taking her hand or just leaving it there.\n\nJaclyn moved hers back a few seconds later, and he felt like he'd made the better decision. Rather than stay mired in the saddest chapter of his life, Jared looked over at her, smiled, then said he'd rather talk about her.\n\n\"Oh, my. You must be a glutton for punishment,\" she told him with a little laugh and a smile that made something stir somewhere deep inside him.\n\nJaclyn wasn't just easy to talk to, she was so open and transparent. Jared had never met anyone so willing to share things of a personal nature, but by the time they got to the city limits of Charleston, she'd shared most of the details of her failed marriage with him. He hadn't tried to pull anything out of her, but they'd already talked about her childhood, her parents, and other little things like favorite movies, favorite foods, etc.\n\n\"I can't help but wonder if your husband just didn't realize what he had,\" Jared told her once Jaclyn summed things and up with, \"And that's pretty much it about boring old me.\"\n\n\"Oh, I don't know,\" she replied almost shyly. \"It's not like I'm some famous actress or...\"\n\n\"I'd choose you over any actress, model, or...anyone,\" Jared told her, unaware of how corny that sounded.\n\nAnd yet it didn't sound that way to Jaclyn at all. It sounded like one of the nicest things she'd ever heard, and as he words sunk in, she found herself wondering who this very handsome, much younger man was and how he could have this effect on her.\n\nShe swallowed the lump in her throat then said, \"You made me feel really good, Jared. Thank you for that.\"\n\nNo relationship guru by any means, Jared was instinctively aware of how deeply Jaclyn had been hurt by her former husband. He was also aware that she was very easy to please and was the kind of woman who would appreciate the smallest little thing, and that only made him want to get to know her even more.\n\n\"We're almost there,\" she said once she recognized their turn.\n\n\"I've never been here before,\" Jared warned her.\n\n\"That's okay. I've been here enough times for both of us,\" she told him sweetly.\n\n\"Mind if I ask how many times?\" Jared said with a little wince in anticipation of the answer.\n\nJaclyn laughed then told him, \"Oh...maybe a hundred?\"\n\n\"Oh, geez,\" a dejected Jared said.\n\n\"No! I truly love this place. It was my favorite place to go when I just needed to get away and think.\"\n\nJared glanced over at her, and when he did, Jaclyn said, \"And that was pretty much every day after he started drinking again.\"\n\nNot sure how to reply, Jared looked for a place to park. As he pulled into an open spot, Jaclyn smiled as she looked out over The Battery.\n\n\"It's so beautiful here,\" she said as she scanned the familiar scenes.\n\nJared shut the engine off then looked at her and said, \"It's very beautiful...here.\"\n\nIt took Jaclyn a second or two to get it, but when she did, she laughed that soft, easy laugh again. The look in her eyes told him he'd just made her feel good again, and that made him feel good, too.\n\n\"I'll come around and get your door,\" he let her know when he saw her reaching for the handle.\n\n\"Oh. Wow. I...almost forgot what that was like,\" she told him with another amazing smile.\n\nAs they began looking around, Jaclyn began pointing things out with the caveat that she didn't know much about them. Jared took his roommate's advice and had memorized enough to impress anyone who was interested and began dropping little tidbits of history on her.\n\n\"That's amazing! I thought you said you've never been here,\" she told him after the third major surprise.\n\nJared laughed then told her he had a confession to make.\n\n\"I uh, I kind of studied up on this place. You know, so I could maybe make a decent first impression.\"\n\nJaclyn's beautiful blue eyes sparkled as she smiled and said, \"You already did that on the way up here.\"\n\nAgain, Jared realized he didn't know much about relationships, but he did know that look. It was the one that said, \"I like you, and were you to try and kiss me, I wouldn't object.\"\n\nBut in spite of how badly he wanted to do that, he only smiled back and told her she'd done the same. His sweet words touched her deeply, and when they did, she looked down for a moment. \n\nWhen she looked back up, Jared smiled again then held out a hand with a look that said, \"Is this okay?\"\n\nJaclyn tilted her head a little then smiled at him before placing her much smaller hand in his.\n\n\"So what's the history on this cannon?\" she asked as they held hands for the first time.\n\nJared put his other hand under his chain then pretended to be stroking a beard as he tried out his South Carolina accent.\n\n\"Well, there, young lady,\" he began. \"Back in eighteen hundred and thirty-eight, the city realized the importance of this here location.\"\n\nJaclyn laughed as he continued the schtick which was, at least, historically accurate.\n\nShe then did her best Southern Belle imitation when she replied.\n\n\"Why, I do declay-uh, suh, that is the most interestin' thing I have evuh heard!\"\n\nJared laughed and Jaclyn joined in as he turned toward her and said, \"You uh, you need to get out more.\"\n\nHe saw that same look on her face as she continued laughing, and again, he held back.\n\n\"Come on. You can show me the rest of this place,\" he told her as he again took her hand.\n\nShe gave it to him then pulled it out in order to slide it under his arm as she pointed out where she used to come and sit.\n\n\"I'd just look out into the water and see boats going by and try and imagine this place as it was during the Civil War.\"\n\nShe laughed before saying in faux accent, \"Or as we suthenuhs say, 'The war between the states'.\"\n\n\"So why don't you actually have a southern accent?\" Jared asked once he realized for the first time that she didn't.\n\n\"I don't really know. But it's probably because my father is from Michigan. He was a Marine drill instructor back in the 1970s, and that's when he met my mother who is as southern as southern can be.\"\n\n\"So a case of opposites attracting?\" Jared asked rather carefully.\n\n\"Um...geographically, yes. But otherwise they seem to have pretty much everything in common.\"\n\n\"Nice.\"\n\n\"I think so. And for the life of me, I still can't understand how I managed to end up with someone so...wrong for me.\"\n\nThey were standing next to the bench where Jaclyn used to come and sit, so Jared put his arm around her and said, \"There's still time to find the right guy.\"\n\nShe put her arm around his lower back then laid her head over on his shoulder and said, \"Yes there is,\" in a way that also said something deeper than the words themselves.\n\nThey sat down for a few minutes, and the topic of dating came up.\n\n\"Have you done much dating since your divorce?\" Jared asked.\n\n\"No, not really. But I bet you do plenty.\"\n\nShe could have said, \"I've been asked out by a dozen different men since then,\" but that wasn't how Jaclyn saw it. Most of that was flirting or being hit on, something that happened quite often. But neither impressed her, and the only offers she accepted came from decent, level-headed men. She'd had her fill of 'dangerous and exciting' and would gladly go out with someone who wasn't all that attractive to her physically if he was a kind, caring man.\n\nIn a similar display of modesty, Jared told her he dated 'here and there' without mentioning how 'dating' meant hooking up pretty much any time he wanted and nothing more.\n\n\"That surprises me,\" Jaclyn told him. \"You're very handsome, Jared.\"\n\n\"Oh, gosh. Thank you, but you're the one who's...\"\n\nHe turned her way then said, \"Gorgeous.\"\n\nJaclyn was looking his way when he looked at her, and she could tell he meant what he said, and that not only surprised her, it made her feel happy.\n\n\"You are, you know,\" Jared told her without taking his eyes off of hers.\n\nAgain, she didn't say anything, and this time she turned away.\n\n\"Jaclyn? Do you not believe me?\" Jared asked quietly as he continued looking at her.\n\n\"No. It's...it's not that,\" she finally said.\n\n\"Is there something that's bothering you?\"\n\n\"I'm not sure,\" she admitted as she couldn't exactly put a finger on it.\n\n\"Is it me being a Marine?\"\n\n\"What? No! Of course not,\" she told him as she turned his way again to make sure he knew she was serious.\n\n\"Then maybe the age difference?\"\n\n\"No. I was honest about that. It doesn't make the least bit of difference to me.\"\n\nJared gave up probing and turned to look out at the water the way Jaclyn was when she asked him if it bothered him.\n\n\"If it did I wouldn't have asked you out,\" he told her with a little smile she saw out of the corner of her eye.\n\nIt was then that she understood what was bothering her. She honestly didn't care how old Jared was, but she was convinced that he'd lose interest once he realized how much older she was than him.\n\n\"I'll be 38 on May 15th,\" she said without turning her head at all.\n\nJared turned as far as he could on the bench and put a hand on her shoulder.\n\n\"And you'll be just as beautiful and amazing then as you are now and will be every year after that.\"\n\nJaclyn's entire body tingled as his words hit home.\n\n\"You say that now,\" she said, trying to keep things light.\n\nHe put his leg back down, slid as close as he could to her, and put his arm around her. When he pulled gently on her arm she slowly turned his way and saw him smiling.\n\n\"I'll say it for as long as you'll let me,\" he told her very quietly before leaning over and softly kissing her deep-red lips.\n\nThe tingling sensation became a one that burned deep inside her as she kissed him back.\n\n\"You hungry yet?\" Jared asked, the smile back as they looked at one another from just 3-4 inches away.\n\n\"I think maybe I am,\" Jaclyn told him.\n\n\"Come on. Let's see if we can find someplace to grab a bite.\"\n\nHe'd done some checking on restaurants, too, so unless Jaclyn suggested something, he knew exactly where he wanted to take her. There was a place called Magnolia's on East Bay Street, and when he suggested it, Jaclyn told him she'd always wanted to go there.\n\n\"Then follow me,\" Jared told her with another smile as he stood up and held out his hand.\n\nThe way she looked at him was different. He wasn't sure how or why, but he was certain that something had changed, and his instincts told him the change was good.\n\nLunch was every bit as pleasurable as walking about Battery Park. The conversation was pleasant and light, and the food was superb.\n\n\"I'm surprised you haven't been here before,\" Jared told her at one point.\n\n\"Money was always a big deal,\" she replied without saying anything more about how deeply in debt they always were and that going out to eat was a luxury she rarely ever enjoyed.\n\n\"Sorry. I didn't mean to bring up...bad memories. In fact, I hope coming to Charleston was okay.\"\n\nJaclyn smiled at him then said, \"When you mentioned there was still time to find the right guy, I was thinking how being here with the right guy could create a whole new feeling about this beautiful town.\"\n\nJared smiled back then said, \"I'm not going to assume that's me, but if you've had a nice time, then I'm very happy we came.\"\n\n\"I'm happy, too. And for what it's worth, I've never had a first date that was anything as nice as this one's been.\"\n\nJared got more serious before replying.\n\n\"Yeah. I was just thinking the same thing.\"\n\nJaclyn wasn't flirty or forward, so when she heard herself say the next thing that came out of her mouth it really surprised her.\n\n\"I've had such a good time, I might even agree to a second date.\"\n\nBefore Jared could tell her how happy he was to hear that, she said, \"Jared. I have no idea why I just...blurted that out. I...I never say things like that and I...\"\n\nJared laughed politely then held up a finger to 'shush' her.\n\n\"I'm glad you did, and I would love to go out with you again, Jaclyn.\"\n\nThe tingle returned as she smiled happily and said, \"If you're sure then I accept!\"\n\nOn the ride back to Beaufort Jared's future plans came up, and Jaclyn told him she was very interested in hearing what he had in mind.\n\n\"Do you think you might stay in?\"\n\n\"Maybe,\" he replied before adding, \"but there's no way I'd re-enlist.\"\n\nShe gave him a puzzled look, so he explained.\n\n\"I like what I do okay, but I don't love it, and I don't want to do this for 20 or more years. But when I finally get my degree, I could possibly see myself coming back on active duty.\"\n\n\"Oh, gee. Duh!\" she said with a laugh. \"My dad is a retired Marine, so I should have put that together right away.\"\n\n\"But that's not set in stone. It's just something I've been thinking about lately. I'm just a little concerned about what I'll be able to do with a bachelor of arts degree at 27 and no experience.\"\n\n\"I understand. Military experience doesn't always translate to the civilian world.\"\n\n\"Right. At least not unless United starts hanging bomb racks on its planes,\" Jared quipped, causing Jaclyn to laugh.\n\nThere was a moment or two of silence before she told him how pleasant it was to talk with him.\n\n\"Dittoes on that,\" he told her as he held out his hand which she took after smiling at him in a way that caused him to have to shift his weight.\n\n\"How about you? What are your plans?\" Jared asked.\n\n\"I work full-time. It's a necessary evil, but work isn't my life,\" she began. \n\n\"No. Life is definitely more than a job,\" Jared agreed. \"I hope this doesn't sound shallow, but I can't think of anything more important to me than having a family someday.\"\n\nWhen he turned to look at her, Jaclyn looked...sweet and maybe even fragile. He could see again how deeply she'd been hurt before and how much having someone in her life meant to her.\n\n\"I don't think there's anything shallow about wanting a family. In fact, it seems like the most important thing anyone could do,\" she said.\n\nShe paused then asked a question. \"So the thought of having...children? That...doesn't scare you?\"\n\nThe truth was that Jared had barely started thinking about the possibility of a wife. Children, other than a distant concept, had never even crossed his mind. But as he looked over at this beautiful, older woman, the thought not only didn't seem frightening, it seemed like the most natural thing in the world.\n\n\"No. That doesn't scare me at all,\" Jared told her. \"If, of course, it's with the right woman.\"\n\nAgain, something made Jaclyn saw something else she just wouldn't ever say.\n\n\"Well, there's still time to find the right girl.\"\n\nNow it was Jared who felt emboldened.\n\n\"Who says I need more time to find her?\"\n\nHe squeezed her hand when he said it, and the look on Jaclyn's face told him he'd made the right call.\n\n\"Oh. Okay,\" she replied sweetly and happily as she squeezed his back.\n\nThey saw a sign telling them how far it was to Beaufort, and Jaclyn repeated something her father had said many times.\n\n\"Beautiful Beaufort by the sea 26 miles from Yemassee.\"\n\nThe look on Jared's face, and the way she was feeling, made her laugh.\n\n\"You haven't heard that?\" she asked.\n\n\"No. Is it...a thing?\"\n\n\"It's from a poem by Candice Glover from back in 1962. My dad still says it although he had no idea where it came from until I found it on the internet and told him.\"\n\nBeaufort was the second oldest city in South Carolina with Charleston being the first. Yemassee was a small town of just over a thousand people that's surrounded by both Revolutionary and Civil War sites. Its most famous landmark was the Old Sheldon Church Ruins that was once known as Prince Williams. It was burned by the British in 1779, rebuilt in 1826, then burned again by General William T. Sherman in 1865.\n\n\"Sounds like a thing to me,\" Jared told her playfully.\n\nRunning dominated their conversation the rest of the way back, and before Jared dropped her off, they agreed to meet the following morning and go for a run together. \n\nJared walked her to the door and Jaclyn told him she'd had an amazing time with him.\n\n\"Same here,\" he said back before reaching up and using his index finger to lift her chin before kissing her goodbye.\n\n\"Thank you for...everything,\" she told him, her eyes seeming to twinkle with happiness as she did.\n\n\"Thank you for agreeing to go with me.\"\n\n\"My pleasure.\"\n\n\"I'll see you here tomorrow at zero-seven...\"\n\nJared laughed then said, \"I was going to say 7am, but as a Marine brat, you understand 'zero-seven'.\"\n\n\"I do!\" Jaclyn told him with a happy laugh. \"Just don't ever add 'hours' to it.\"\n\n\"No. Never.\" Jared said as seriously as he could.\n\n\"Right! Wouldn't want anyone thinking you're a...\"\n\nJaclyn looked around as though others might here before whispering, \"A...soldier!\"\n\nJared slapped his right over his heart as though he was having a heart attack.\n\n\"Heaven forbid! The only worse thing you could call a Marine would be...\"\n\nHe said 'sailor' while Jaclyn said 'squid', and both of them laughed loudly when they heard the other's response.\n\n\"You're pretty amazing,\" Jared told her as he moved closer again.\n\n\"Well, I think you're pretty great, too.\"\n\n\"Well, sure. I mean, I'm...Jared Quinn. How could you not?\" he said with all the phony smugness he could muster.\n\n\"Okay! It's getting very deep around here!\" Jaclyn teased as she went to push him away before pulling him back and kissing him.\n\n\"Bye, Jaclyn,\" he said when she ended the kiss.\n\n\"Bye,\" she said as Jared let go of her, something she almost didn't want him to do.\n\nThe following morning Jared had a sweatshirt on when got to Jaclyn's and planned to take it off before the run. His legs never got cold in Beaufort, even on the coldest of days. But Jaclyn was often cold or at least chilly, so she was wearing a pair of long, black Spandex leggings that hugged her legs like a second skin.\n\n\"Good morning!\" Jaclyn said in a happy voice when she opened the door.\n\n\"Hi,\" Jared said before an awkward moment in which he wasn't sure whether or not he should kiss her. \n\nJaclyn solved the problem when she kissed him before inviting him in.\n\nShe was also wearing some other Spandex-looking top that was a very light pink along with a sports bra that made her look downright sexy. Well that and the white ball cap she had on with her hair pulled through the opening in back.\n\n\"Dang, gurl! You even look amazing in PT gear!\" he said using the Marine terms for physical training.\n\nJaclyn was so happy to see him she couldn't help laughing.\n\n\"And you look...naked,\" she teased as he stood there in a pair of shorts and a tee-shirt, the sweatshirt open and ready to come off.",
        "Jared pointed at her and said, \"Hey. A woman as beautiful as you should never joke around with any man about...nuditity!\"\n\n\"Nuditity? Do you make up a lot of words?\" she teased with that amazing smile and another laugh.\n\n\"That's a word!\" Jared told her.\n\n\"Ha! I think we should play Scrabble!\"\n\n\"Wait. Did you just call me stupid?\" Jared asked, keeping it going.\n\n\"Stop! I can't take any more! Let's go run,\" Jaclyn suggested even as she continued laughing.\n\nJared laid the sweatshirt on the back of her couch then told her to 'lead on'.\n\nThey stretched for a minute or so before Jaclyn asked if he was ready.\n\n\"How fast do you run?\" Jared asked rather than answer her question.\n\n\"Let's find out!\" she told him as she took off.\n\nJared was a slow starter but once he was warmed up, he could keep a 6:30-per mile pace going for a very long time. In order to max the run of the Marine Corps Physical Fitness Test or PFT, a Marine had to run three miles in 18 minutes or less. Having run track in high school, Jared had never failed to max the run.\n\nHe caught up to Jaclyn and could tell they were moving along at about seven minutes a mile.\n\n\"Is this fast enough?\" she asked having no idea how strong a runner he was.\n\nBecause he'd be able to talk at this pace he told her it was perfect.\n\nJaclyn actually lived in Port Royal, and they soon passed the Port Royal Elementary School, a veterinarian's office, and then a post office before turning onto Highway 21 which was known as Ribaut Road. It wasn't busy early on Sunday mornings, so it was the only time Jaclyn would run on it.\n\nWhen they hit the three-mile mark, Jared was ready to rock and roll, but he was enjoying the conversation about how Jaclyn got started running and her training regimen. He shared some of his here and there but mostly he was having fun just listening to her and found her enthusiasm infectious.\n\nHighway 21 turned into Boundary Street in the city of Beaufort, and when they got there Jaclyn was showing no signs of tiring or even slowing down. They ended up running a huge loop all around Beaufort and back into Port Royal.\n\nThe last mile Jaclyn tried to outrun him, but when Jared matched her step for step she realized he was the better runner.\n\n\"You've been sandbagging me, Quinn!\" she said as she gasped for air and had to slow down a bit.\n\n\"No way. I've been having the best time I've had in...hours!\" he told her.\n\nJaclyn wanted to laugh but couldn't. Jared let her set the pace the last half mile and stopped when she did.\n\n\"You max the PFT, don't you?\" she asked as she gulped air while she walked it off.\n\n\"No. Just the run and the crunches.\"\n\n\"Okay. No upper body strength, huh?\" she teased as they walked and tried to get back to normal.\n\n\"I get 18,\" he told her, referring to the dead hang pull-ups Marines had to do. It took 20 to get the full 100 points and Jared had only done that twice. Were he allowed to kip, he could do 30 or more, but that wasn't permitted.\n\n\"If it makes you feel any better, I can't even do one,\" Jaclyn told him with a laugh.\n\n\"It doesn't,\" Jared said with a laugh of his own.\n\nWhen the got back inside Jaclyn told him how much she enjoyed the run.\n\n\"And the company.\"\n\n\"Same here,\" Jared told her.\n\n\"Would you maybe like to stay for breakfast?\" she asked as she grabbed a towel and threw one to Jared.\n\n\"Sure, but I'll need to run home and shower first.\"\n\n\"Why? I have a shower here?\" she told him with a little smile that made his body ache.\n\n\"I don't have any other clothes with me.\"\n\n\"You have your sweatshirt and I have a pair of sweats from when I was...heavier.\"\n\n\"I better not look like I'm wearing...\"\n\nHe couldn't think of the word so he said, \"Those short pants women wear.\"\n\n\"Capri pants?\" she replied with another laugh. \"They'll be fine. Trust me.\"\n\nJared narrowed his eyes and slightly tilted his head.\n\n\"You better not be lying to me, missy.\"\n\nJaclyn laughed again and promised she wasn't.\n\n\"Okay, then. I'll stay. So if you want to shower first...\"\n\n\"No. I can wait. You go ahead,\" she told him.\n\n\"You sure?\"\n\n\"Uh-huh. I'm sure. Just let me put another towel out for you, okay?\"\n\nJared was already moving toward the bathroom and Jaclyn was moving toward the other end of the house to grab a towel from the dryer that she hadn't had a chance to fold and put away yet.\n\nBy the time she got to the bathroom the water was running. She knocked but didn't hear anything, so she knocked again. Jared was already under the water and couldn't hear her. After standing there for a few seconds, Jaclyn slowly opened the door and went to set the towel down on the floor.\n\nJust as she did, Jared turned around to wet his back and saw her.\n\n\"Did you want to come in?\" he called out with a laugh.\n\nHe was just kidding, and at first, she felt embarrassed as she nearly jumped out of the bathroom backwards as she slammed the door shut. But the feeling disappeared almost immediately, and Jaclyn saw her hand reaching for the doorknob again. If that wasn't scary enough, she watched it turn the knob then push it back open.\n\n\"Did you change your mind?\" she heard Jared say, his hair soapy with shampoo.\n\nShe didn't want to look, but it was if she was possessed, and her eyes scanned his body from head to toe in an instant. And in that short amount of time, her own body reacted in a way it hadn't in so long it made her tremble. \n\nJared was lean and hard and...very nicely equipped. So while a part of her wanted to undress and step in with him, another part told her that was wrong on every level. But when Jared pulled the glass door back and held out his hand, Jaclyn lost the ability to think.\n\n\"Come here,\" he told her as he pulled on her hand a little.\n\nShe managed to kick her shoes off but was otherwise still wearing everything she'd worn on the run. Jared pushed the sliding glass shut then put his arms around her and kissed her as the water beat down on them both. It no longer mattered that she was still fully clothed as tongues swirled while Jared began solving the matter of her being overdressed for the occasion.\n\nJaclyn lost track of time as heavy, wet items of clothing plopped down on the shower floor next to her as hands groped and squeezed and stroked and held. Fingers and hands delivered pleasure and then, before she knew what was happening, Jaclyn's face was against the glass as she felt him against her back and then...inside her.\n\nIt had been so long since she'd experienced this kind of pleasure that she cried out in ecstasy, moaning and trying to grab onto anything she could find as he took her as deeply as she'd ever been taken before. In a dreamlike state, Jaclyn felt her body spasm so hard she could barely breath as he entered her to the hilt and held it there while pressing his body against hers. She exploded in wave after wave of pleasure as she came so hard it made her scream.\n\nWhen the passion subsided enough for her to think again she asked if he'd 'finished', too. Jared nodded toward the floor where the proof that he had was swirling toward the drain.\n\nJaclyn laughed again then moved closer and put her arms around him and just held him as the water continued to fall. Jared held her back then reached for the bar of soap and began lathering her as he admired how firm and hard every inch of her was. She then returned the favor before they rinsed off and got ready to get out.\n\n\"You uh, you lost your clothes,\" Jared said as they toweled off together.\n\n\"No. I believe someone tore them off of me,\" Jaclyn playfully corrected him.\n\n\"I see. So...are you complaining?\" he asked very seriously as he tried not to laugh.\n\nJaclyn dropped her towel, moved closer, then kissed him.\n\n\"Uh-uh. Just reporting the facts.\"\n\nJared hung up his wet towel then asked where these 'huge sweatpants of hers' were.\n\n\"They're on the bed.\"\n\nSeconds later, Jared was wearing them and realized he needed to pull the drawstring to keep them up.\n\n\"How...big...were you?\" he asked when Jaclyn came out, her towel covering her body.\n\n\"Maybe I'll show you an old photo sometime.\"\n\n\"That big, huh?\"\n\n\"Oh, yeah. That was the darkest time of my life.\"\n\n\"And yet...look at you now,\" he said in a very kind way.\n\n\"You're not...disappointed?\" she asked, the question causing him to shake his head in disbelief.\n\n\"Disappointed? Ha! How could I be disappointed with...\"\n\nHe walked over and undid the towel then smiled.\n\n\"With...perfection.\"\n\nJaclyn felt 'him' though the fabric of the sweats and laughed.\n\n\"Has something...come up?\" she asked as seriously as she could while she put her arms around him.\n\n\"I hate to admit it, but you've had that effect on me from the first time I saw you.\"\n\n\"You should get that looked at,\" she replied just as seriously.\n\nJared smiled at then gently pushed down on her shoulders. When she didn't resist he continued pushing until she was on her knees in front of him.\n\nShe pulled the sweats down over the huge bulge then gave her initial diagnosis.\n\n\"Oh, yes. This looks serious. Very serious!\" \n\n\"Maybe you should have a closer look...nurse.\"\n\nJaclyn laughed then told him she'd love to as she took him in her hand. Just before she pulled him into her mouth she said, \"It's funny, but as much as enjoy lovemaking, I might love doing this even more.\"\n\nJared shook his head in disbelief then groaned deeply when he felt her soft lips wrap around his shaft until another discharge occurred several minutes later.\n\nAs Jaclyn made breakfast for them, Jared noticed the glorious smell of bacon.\n\nHe came up behind her and put his arms around her waist and said, \"You're beautiful, a strong runner, smart, funny, great in...the shower, and you're not a vegan!\"\n\nShe laughed then told him she had her moments.\n\n\"I'll say,\" Jared told her as he nuzzled her neck before a speck of hot grease hit the back of hand.\n\nJaclyn tried not to laugh but couldn't help it because of the way he pulled back so fast.\n\n\"Man that hurt!\" \n\nShe laughed again when she saw him shaking his hand.\n\n\"And I thought you were the smarter one,\" she said without looking his way, a big smile on her face.\n\n\"If you weren't in the 'danger zone' I'd come over there and...\"\n\n\"And what? Get burned again?\" she teased, happier than she'd been in years.\n\n\"Good point,\" Jared admitted before laughing at himself.\n\nThe bacon, eggs, and toast were perfect after the long run and the...fun...they had afterwards together. The only surprise was that Jaclyn didn't eat any bacon.\n\n\"So are you a vegetarian?\" Jared asked.\n\n\"No. Not at all. I just won't eat bacon anymore.\"\n\nShe grabbed her phone, went to 'Photos' then scrolled down a bit before handing him the phone.\n\n\"You were warned,\" she said as she gave it to him.\n\n\"Oh, my...goodness. Jaclyn. Is that really you?\"\n\nShe was wearing the same sweats he had on along with a dumpy looking top. Her hair was a mess and had he not been told there was no chance he'd have recognized her.\n\nShe waited for him to hand the phone back to her then told him she had other pics but didn't want to show them.\n\n\"I think that was my way of trying to keep my ex from ever even trying or wanting to, you know.\"\n\n\"Get frisky?\"\n\n\"Yes. He was drunk so much of the time it disgusted me. So when he drank, I ate.\"\n\nShe hesitated then said, \"A LOT.\"\n\n\"That's truly amazing.\"\n\nShe then showed him a photo from high school and it also blew his mind.\n\n\"You were a babe!\"\n\nHe laughed then said, \"Like you are now.\"\n\n\"Yeah. And yet all three of those were me. Granted, I didn't like Me#2 very much, but it was still me.\"\n\nJared looked at her and said, \"I'm really proud of you, Jaclyn. And may I say you are definitely not a quitter.\"\n\nThat word, as well as his kind words, made her laugh.\n\n\"I'm so glad I discovered running.\"\n\nJared took her hand and told her he was, too, before insisting on clearing the table, something her former husband had never done, not even when they were dating. But Jared did, and as she watched him, she couldn't help but think that she could very easily fall in love with this much-younger man who shared her greatest passion.\n\n\"I really should go home and change,\" he said once the dishes were rinsed off and in the sink.\n\n\"If you must,\" Jaclyn replied with a sweet smile.\n\n\"I'd invite you to come with me, but I have a roommate, and let's just say he's more the um...stereotypical Marine...and leave it at that.\"\n\n\"I've met a few of those,\" Jaclyn said as a reminder.\n\n\"Oh, right. Gee. Duh.\"\n\nJaclyn laughed again and told him she'd had an absolutely wonderful weekend.\n\n\"Me, too. And I wouldn't mind having more of these. A lot more.\"\n\n\"Hmmm. That's interesting because I was thinking the very same thing.\"\n\n\"Yeah?\" Jared said as he moved closer and put his arms around her.\n\n\"Uh-huh.\"\n\nHe gently brushed her hair back and told her again he thought she was amazing.\n\n\"I feel the same way about you, too,\" she said right back.\n\nJared looked into her eyes for several seconds then leaned down a bit and kissed her. The kiss got passionate very quickly and that made him say, \"If we don't stop this, I'm going to want to take you to bed again.\"\n\nJaclyn gave him a coy little smile and said, \"You haven't actually taken me to bed yet.\"\n\n\"Oh, right. Yeah, there was the shower, and then the uh, well, the amazing surprise!\"\n\n\"I'll surprise you again if you'd like stay a little while longer.\"\n\n\"Oh, yeah?\"\n\n\"Uh huh. I honestly do love that.\"\n\n\"Wow. Well, in that case I'd love to stay.\"\n\n\"Then follow me!\" she said playfully as she took his hand and took him to bed.\n\nJared followed her and she did indeed surprise him again. But the nicest surprise came afterward when she lay there in his arms and they just talked. It was now obvious they were compatible in bed. In fact\u2014very compatible. But Jared realized he still knew very little about her. So when Jaclyn asked him his views on politics, he had the opportunity to share them and found that she was right there with him. The same was true with regard to religious beliefs.\n\n\"I hear that money is even more important than sex,\" he mentioned after talking about two of the 'biggies' in any relationship.\n\n\"Oh, right. I've heard that, too. More marriages end over money than sex.\"\n\nJared had become a saver in a big way. He thought that perhaps Jaclyn would be a spender having been kept on such a tight leash for so long, but as it turned out, she was also very much into delayed gratification.\n\n\"I don't need much to be happy,\" she told him. \"In fact, the only thing I've ever really wanted is a loving husband who respects me.\"\n\n\"No kids?\" Jared asked.\n\n\"Oh, yes. Definitely. But I want the loving husband first. I'm obviously no prude when it comes to lovemaking, but I don't ever want to get married again unless I know the guy is as dedicated to making it work as I am.\"\n\n\"Are you some kind of mind reader?\" Jared asked when she echoed another one of his primary tenets on relationships. No, he'd never really had any experience with them, but that didn't mean he hadn't given some thought to what he eventually wanted. And a woman who was willing to compromise and work hard at making things work was huge.\n\n\"No, I'm not a mind reader. But after having failed so miserably the first time around, I don't even want to think about a second failure.\"\n\nShe looked up and saw Jared looking at her in a way that made her ask what he was doing.\n\n\"Sorry. I'm just trying to understand how your former husband could be so...ungrateful.\"\n\nWhen Jaclyn broke eye contact Jared assumed it was because he'd touched a nerve. But the real reason was that, in spite of everything she knew and that others had told her, she still couldn't help but think a lot of the reason her marriage failed was her fault.\n\n\"You're...you're the pearl of great price,\" Jared told her when she didn't say anything for several seconds.\n\n\"What's that?\" she asked, still not looking at him.\n\n\"It's from the Bible. It's a parable, or at least I think it is.\"\n\n\"What does it mean?\"\n\n\"Well, it's about a man who, when he realizes how valuable something is, goes and sells all that he has in exchange for it. In that case, it's a pearl; a pearl of great price.\"\n\nHe kissed the top of her head, pulled her even closer with his right arm then said, \"That's my impression of you so far, Jaclyn. And if I hurt you by mentioning your ex in that regard, I'm really sorry.\"\n\nWhen Jaclyn finally looked up, Jared saw the tears in her eyes and felt terrible.\n\n\"It's not you,\" she told him. \"Or not in any bad way. I...I just wanted to hear those kinds of things for as long as I can remember. Not even necessarily that...poetic. Just some hint of appreciation, you know?\"\n\nHe smiled at her but didn't say anything.\n\n\"And now, here you are, making me feel like I've never felt before.\"\n\n\"So you're not upset with me?\" he asked.\n\n\"Upset? No. Not at all. Just the opposite. I think maybe I'm the one who found this...pearl of great price...and well, I guess I can't help but think that maybe I'll lose it, and...\"\n\n\"Hey. Stop that,\" Jared said very quietly. \n\n\"Sorry. I know I'm insecure, and I hate it.\"\n\n\"I understand,\" he told her. \"How could you not? You've never had anyone make you feel as wonderful and special as you are, let alone stand by you through thick and through thin.\"\n\n\"Maybe you're the mind reader,\" she told him, finally smiling.\n\n\"Or maybe you're an open book that's easy and pleasant to read,\" Jared suggested.\n\nJaclyn looked away again, and as her head rested on his chest she said, \"You're trying to make me fall in love with you, aren't you?\"\n\nShe could tell he was smiling but also knew he wasn't being sarcastic when he asked her, \"Is it working?\"\n\nShe rolled over on top of him, smiled happily then said, \"You probably shouldn't ask me that unless you're ready to hear the answer.\"\n\n\"Oh, okay,\" a very surprised Jared Quinn replied.\n\nHe was surprised because he was hinting around and hoping to hear her say that it was working, and her answer led him to believe that maybe she didn't think it was, and now he was very confused. Then again, they barely knew one another, so perhaps that was the best he could hope for at this stage of their budding relationship.\n\nWhen Jared got back to his place, his roommate was nursing a hangover from the 12-pack he'd put away the night before. He was up and feeling like hell, but he still noticed the baggy sweats and that his fellow sergeant was carrying his PT gear.\n\n\"Did you run into a thrift shop and find some fat-ass's old sweats?\" Bill snarked.\n\nJared chuckled and told him that hadn't happened.\n\n\"So...what did happen?\"\n\n\"We ran the loop around Beaufort and Port Royal for starters.\"\n\n\"Whoa! Are you insane?\" \n\n\"Maybe.\"\n\n\"How far is that?\"\n\n\"I'd tell you, but it'd just make your head hurt even more.\"\n\n\"Good call.\"\n\n\"And we uh, we talked. I mean, we really talked.\"\n\nThrough the pounding in his head, Bill still understood what he was hearing.\n\n\"You're falling this chick, aren't you?\"\n\nJared stood there for several seconds, the damp running clothes still in his hands then said, \"I think maybe I am.\"\n\n\"No! Not you! Not...Jared Quinn. Please tell me that ain't so.\"\n\n\"I would. But only if it was true.\"\n\n\"And it isn't...true, is it?\" Bill asked, his foggy brain trying to understand what was going on.\n\n\"Yeah. I...I think maybe you're right.\"\n\n\"Isn't she a lot older than you?\"\n\n\"I guess. I just don't think it's a big deal.\"\n\n\"How about her? Is she okay dating Bambi?\"\n\nJared laughed then told him she had no problem with it.\n\n\"I'll be damned,\" Bill said with a shake of his head. \"So I take you haven't 'hit that' yet, right?\"\n\n\"Everything in its time, my friend,\" Jared replied with a smile that confused his roomie even more.\n\n\"Well, you better make sure she's good in the sack before you get into this too deep, man.\"",
        "\"Yeah. That's good advice. I'll definitely do that.\"\n\n\"So I'm not as dumb as I look, am I?\" Bill replied with a little smile of his own that made him wince from the pain it caused.\n\nJared laughed again before heading to the bedroom as Bill said, \"I need some more aspirin!\"\n\nHe and Jaclyn texted off and on the rest of the day and finally stopped when she mentioned she had to get up at 5am to go run and still get to work by 8 o'clock.\n\n\"Same here, but I'm taking tomorrow off. Someone ran me into the dirt this morning.\"\n\n\"Ha! I'm the one who got humbled, so that's why I'll be back at it again tomorrow.\"\n\n\"You're pretty amazing, Jaclyn,\" he texted with a smiley emoji.\n\n\"No, that's you, Jared. But you just made me feel amazing\u2014again\u2014by telling me that.\"\n\n\"Goodnight, beautiful.\"\n\n\"Goodnight, handsome!\"\n\nIn spite of being wound up over the new woman in his life, Jared was out in a few minutes and slept like a rock until his alarm went off at zero-six the next morning.\n\nRight after morning formation, the 'top', the name Marines affectionally called their master sergeants (but NEVER their first sergeants the way the Army did) asked him to step into the office.\n\nThe group ordnance officer, and LDO captain with 24 years on active duty, was also sitting there. LDO's were limited duty officers meaning they'd been enlisted Marines for a number of years then become warrant officers. After making chief warrant officer-3, one could apply for the LDO program, and if accepted, be promoted directly to the rank of captain. And that's exactly what this very old captain had done.\n\n\"The cap'n and I have talking, Sgt. Quinn, and we both think you've got enough on the ball to maybe be a warrant officer in a few more years,\" the 'top' said.\n\n\"Wow. That's a real surprise, Top.\"\n\nThe captain chimed in and said, \"I wish someone had taken an interest in me when I was your age. I did okay, all things considered, but who knows? Maybe I'd have made warrant officer earlier or hell, maybe even gotten a degree and become a regular commissioned officer. I'd be a lieutenant colonel now instead of a captain, but that ship has sailed.\"\n\nThe captain paused then said, \"For me.\"\n\nHe hadn't been asked a question, so Sgt. Quinn didn't respond.\n\n\"We know you've got three years of college under your belt, and we wanted to make sure you're aware of all of your options,\" the master sergeant with 22 years in himself, said.\n\n\"I have recently thought about getting out and finishing school and maybe going to OCS,\" Jared replied.\n\n\"Why get out?\" the captain with the gray hair around his temples asked. \"You heard of the MECEP program?\"\n\n\"I have, sir.\"\n\nMECEP stood for Marine Enlisted Commissioning Education Program and while one need not have any college to apply, the more credits one had, the less time the Marine Corps had to pay a Marine to go to college. Those who were accepted were on active duty, drew full pay and allowances, and had their tuition and books paid in full. \n\n\"The application window is opening up soon. You need to go see the career planner and ask how to go about applying. Or just read the order yourself.\"\n\nHe stared at the young sergeant then asked him directly, \"Are you interested?\"\n\nJared had a flurry of thoughts, many of them including Jaclyn, but this wasn't the time or place for them.\n\n\"I am, sir.\"\n\n\"Then get busy,\" the top told him, a little smile forming at the corners of his mouth.\n\n\"Will do, Top.\"\n\n\"Keep me posted, Sgt. Quinn,\" the captain told him.\n\n\"Aye, aye, sir,\" the sergeant responded, waiting for an indication he was dismissed.\n\nWhen he left the office, Bill grabbed him immediately.\n\n\"Wow. Jared Quinn getting his ass chewed first thing Monday morning. What the hell did you do?\"\n\nRather than mention the conversation he'd just had, Jared quietly said, \"You don't want to know.\"\n\n\"That bad, huh?\"\n\nJared smiled but didn't respond before going over to his work station where two lance corporals, the only people he'd ever had work for him, were testing ejection racks. He looked around and saw the staff sergeant he reported to and thought, \"In two more years that'll be me. And then I'll have two sergeants and a half dozen people working for me like he does.\"\n\nThen he saw the 'gunny', an E-7 with 15 years in and realized he'd eventually be him with two staff sergeants and maybe two dozen junior Marines. \n\n\"Then somewhere around 20 I'd be the Top sitting in an office all day doing Lord only knows what.\"\n\nHe knew the top did something, but he rarely left the office and never seemed to get involved in anything going on in the shop. So 20 years and maybe 30 Marines indirectly under him. But as a second lieutenant in the infantry or artillery, he'd have around 40 working directly for him. And as a captain, somewhere around 200 in a rifle company. Or at least that's what he'd been told.\n\nAnd it was those thoughts that convinced him for sure that he wasn't ever going to re-enlist and stay in the ordnance field. But after the pep talk he just had, this whole commissioning thing seemed even more appealing than it had just a few days earlier, and the first person he wanted to talk about it with just happened to be a beautiful, older woman he was sleeping with and maybe even...\n\n\"Jaclyn? Hi. Is it okay if I stop by tonight?\" he asked as soon as she answered the phone that evening.\n\n\"I was beginning to wonder if I'd hear from you,\" she said, trying not to sound overly concerned. But she'd never known a man who kept his promises, so she felt like it wasn't unreasonable to be a little worried.\n\n\"Sorry. I wanted to call or at least text all day, but with you at work, I decided I'd wait.\"\n\n\"No, it's fine. And yes, you can come over.\"\n\nThere was a little pause then Jared heard. \"Anytime.\"\n\n\"I'll be there as soon as I can, okay?\"\n\n\"Okay. See you then.\"\n\nAs he drove to her house Jared realized he'd never felt like this before. When he decided to enlist it was to get away. It wasn't planned or even well thought out. He just wanted out and the military seemed perfect. But now he was...what? 'Excited' was the only word that came to mind. He was excited about actually planning the rest of his life. And as important as a career was, he was even more excited about the possibility of having someone to share his life with.\n\nBy the time he got to her house, he calmed himself down a little and lowered his expectations. Again, he reminded himself he barely knew this woman, and yet the moment she opened the door he found himself feeling like being with her was the most natural thing in the world.\n\n\"Hi,\" he said as he kissed her hello.\n\nJaclyn smiled happily as she also said hello.\n\n\"Would you like a drink?\"\n\n\"No. I don't think so,\" Jared told her. \"I was hoping we could just talk.\"\n\n\"Uh-oh. Already?\" Jaclyn said, trying her best to sound like she was teasing.\n\n\"What?\" a befuddled Jared replied until he caught her drift.\n\n\"Oh. No. It's definitely not that.\"\n\n\"Then yes, we can talk,\" she informed him, now feeling much better.\n\n\"You grew up in a Marine family, right?\" \n\nJared knew that already, but for some reason he was a little nervous.\n\n\"Well, let's see. I was born at the Naval Hospital here in Beaufort and have lived her most of my life, so...\"\n\nJaclyn's easy smile helped as Jared took a deep breath.\n\n\"Did you like it?\"\n\n\"Yes. I actually loved it, and so did my mom.\"\n\nShe realized something was coming and asked why he was suddenly interested.\n\n\"Well, I had an interesting conversation with my OIC and NCOIC this morning.\"\n\nJaclyn knew that meant Officer in Charge and Non-commissioned Officer in Charge, so there was no need to ask what the acronyms meant.\n\n\"What about?\"\n\n\"The MECEP program.\"\n\n\"Sorry. You just stumped me,\" she admitted, hearing one she didn't recognize.\n\nJared told her what it stood for then explained what had been said.\n\n\"So you'd be leaving Beaufort,\" she said, her voice now flat and dry.\n\n\"Yes. But not until mid-August. And I'd be getting out next February regardless.\"\n\nJared could see by the look on her face that Jaclyn was either upset or disappointed...or both.\n\n\"What's wrong?\" he asked.\n\nTrying her best to be supportive, she said, \"Oh. Nothing. I'm...I'm really happy for you.\"\n\n\"I haven't even applied yet. But after hearing what they said, I got pretty excited about the possibility and what it could mean, and...\"\n\n\"No. I...I understand. That's really wonderful, Jared.\"\n\nHer words were meant to convey sincerity, and as much as she really was happy for him, she understood this meant that she wasn't going to be a part of that future. And that realization brought back a huge wave of feelings from her marriage that had her stomach twisted in knots. On one level she knew it was absurd. They'd only just met and he certainly didn't owe her anything. And yet she felt so confident that he really cared about her. That he was...different.\n\nJaclyn wasn't even looking at him now, and although he still wasn't sure, Jared thought he understood.\n\n\"There's a reason I wanted to discuss this with you,\" he said in a calm, quiet voice.\n\n\"Yes. Of course,\" she replied, forcing herself to look at him as she tried to smile.\n\nHe stood up then walked around the coffee table that was separating them and asked if he could sit down.\n\n\"Sure,\" she told him without looking up.\n\nHe did sit, but he immediately pulled one leg up then turned her way.\n\n\"Jaclyn? I'm excited about this, but it's only one of two things I'm excited about.\"\n\nAgain, she made herself look at him, and this time, she saw a kind of compassion she'd never seen before as he stared into her eyes. Without asking, he reached over and took her hand then smiled at her.\n\n\"You're the other thing.\"\n\n\"Me?\"\n\n\"Yes. You.\"\n\n\"I...I don't understand,\" she said as she looked away again.\n\n\"What don't you understand?\"\n\n\"We just, you know, started seeing each other. And...and you're...you'll be leaving in a few months, so I'm not sure why...\"\n\nJared reached out and gently touched her cheek and waited for her to look at him again. When she did, he smiled then continued explaining.\n\n\"You really can't tell that I'm crazy about you?\"\n\nHer heart leapt in spite of the sullen feeling that had taken hold of her.\n\n\"I...I'm not sure.\"\n\nHe softly ran his fingers along her other cheek then said, \"Well, I am. I'm completely smitten with you, Jaclyn Frances. And while I know we just met and we just, you know...\"\n\nFeeling better, Jaclyn finally smiled in that 'yes, I know' kind of way.\n\n\"But I've never felt like this about anyone before.\"\n\nHe waited for her to really look at him then said, \"Ever.\"\n\n\"I feel the same way about you, Jared,\" she told him with a look that explained everything.\n\n\"So I guess what I'm really asking is...if I did, you know, get accepted to go back to school for the last year, would you even consider, you know...\"\n\n\"Going with you?\" Jaclyn said, filling in the blank.\n\n\"Yes. Going with me.\"\n\nShe wanted to launch into a long dissertation about her trust issues and how fragile she felt. She wanted him to know that she was already falling in love with him but still worried sick that she was just another girl to him, and that only made her feel worse about herself. But there was an even stronger feeling; a feeling of wanting and needing to be loved\u2014really loved, and it was that feeling that won out when she answered him.\n\n\"Whither thou goest, I will go,\" she told him, as tears welled up in her eyes. \"If you really want me to.\"\n\n\"I do,\" he told her very quietly before leaning over and kissing her softly. \"Now come here.\"\n\nHe slid closer and pulled her to him then put his arms around her and just held her for a good long while, and that was exactly what she needed.\n\n\"A lot can change in...six months,\" she said, also very quietly.\n\nJared was beginning to understand the depths of her past hurt, and although he'd never met her ex-husband, a part of him hated him for what he'd done to this amazing woman.\n\n\"Yes. Yes, it can,\" he agreed before letting go so he could look at her again.\n\nWhen she did, he said, \"Like us falling deeply into love.\"\n\n\"I love your optimism,\" she said, a little smile forming on her lips.\n\n\"And I love...\"\n\nJaclyn's heart raced for a moment before Jared said, \"So many things about you.\"\n\n\"May I ask you something?\" \n\n\"Of course,\" Jared told her.\n\n\"By the time you finish school and OCS and TBS, do you know that I'll be 40 years old?\"\n\n\"I thought you said you didn't care about the age difference?\" a smiling Jared asked.\n\n\"I don't. At all. But I...I just need to know you've thought about that, and that you're...\"\n\nJared reached up and placed a finger on her soft lips to shush her then leaned her way again and kissed her for several seconds.\n\n\"Does that answer your question?\"\n\n\"Yes. Yes, it does,\" she whispered back.\n\n\"I sense a 'but' coming,\" Jared said playfully.\n\n\"Sorry. I just can't help it.\"\n\n\"Hey. I understand,\" her younger boyfriend assured her.\n\n\"I may need a little reassurance here and there. Along the way.\"\n\n\"I'll give you all the reassurance you need anytime you need it,\" he told her.\n\n\"Is...now a good time?\" Jaclyn asked, a different kind of smile on her pretty face.\n\n\"Oh. You need...that kind...of reassurance.\"\n\n\"Uh-huh. Is that okay?\"\n\n\"I'm a guy. Do you really have to ask?\"\n\nJaclyn finally laughed then said, \"Then come into my parlor!\" as she stood up and took him back to her bedroom where he reassured not once but twice, followed by a long talk about many different things.\n\n\"So where would you go to school?\" she asked.\n\n\"I was thinking back in my home state.\"\n\n\"Washington, right?\"\n\n\"Yes. The University of Washington is going to be my first choice.\"\n\nHe put his forehead on hers until their eyes looked funny and said, \"If that's okay with my beautiful girlfriend.\"\n\n\"As long as her very handsome boyfriend keeps reassuring her like this, she'll be okay with anything.\"\n\nJared laughed then got more serious.\n\n\"So when do I get to meet your parents? And what rank was your father?\"\n\n\"Oh. Well, that could be anytime you like. And my dad was a sergeant major.\"\n\n\"Oh,\" Jared said, knowing how most sergeants major tended to be.\n\n\"He's not like that! I promise,\" Jaclyn told him as she looked at his worried face and smiled.\n\n\"If you say so.\"\n\nJaclyn laughed then said, \"I do say so, and we could go over there for dinner this weekend if you'd like.\"\n\n\"I may need a little reassurance,\" Jared said as seriously as he could.\n\n\"Well, it just so happens that I love this kind of reassurance as much as you do,\" she told him very authoritatively.\n\n\"I uh, I kinda noticed,\" Jared replied in a way that made her ask what he meant by that.\n\n\"Well, you're rather...vocal. And kind of like a...a tiger. Or maybe a...tigress.\"\n\n\"See? I do love reassurance.\"\n\n\"Yes, you do, don't you?\"\n\nJaclyn laughed and now felt even better than she had during their time together in Charleston as she put her arm over his chest and held him as close as she could.\n\n\"I wish I you could have met my parents,\" Jared said, surprising her in a touching way.\n\n\"That makes me so sad for you.\"\n\nRather than feel sorry for himself, Jared changed the subject.\n\n\"But as I said, I do have a roommate.\"\n\n\"I remember. And I want to meet him!\" Jaclyn told him without hesitation.\n\n\"I'm not sure that's such a good idea.\"\n\n\"I'm sure I'll like him.\"\n\n\"Let's see if I survive meeting your dad first, okay?\"\n\n\"Oh, you will. And I promise you're going to like him.\"\n\n\"Well, I do like you. A lot.\"\n\n\"Yeah?\"\n\n\"Uh-huh.\"\n\n\"Well, I just happen to like you\u2014a lot\u2014too,\" Jaclyn told him, loving the playful banter. \"But just to be safe, maybe keep the MECEP thing between us for awhile, okay?\"\n\n\"Ah, okay. Not a big fan of officers. Got it. Forewarned is fair warned, right?\" \n\nJaclyn looked at him then said, \"You are scary smart, Jared Quinn.\"\n\n\"And you are...freaking gorgeous, Jaclyn Frances.\"\n\nJaclyn laid back down on his chest and smiled as she wished this feeling would never end while knowing that it would.\n\nThat Saturday evening, Jared shook hands with the man he'd been dreading meeting and found that he was quiet and well-spoken. In fact, had he not known the man was a retired Marine sergeant major, he'd never have guessed.\n\nAn even bigger surprise was how Dennis Frances didn't try to one-up the young Marine. He let him tell his 'war stories' and rarely came back with, \"Yeah, that reminds of when I was your age or back in Iraq,\" or anything like that.\n\nIt didn't become clear why until much later when Jared realized that the 'Band of Brothers' bond was secondary to his being Jaclyn's father and deeply concerned about her making another huge mistake. And it didn't help that he was so much younger than her. Still, 'the sergeant major' only mentioned it once and when he did it was more of an oblique reference than a direct concern.\n\nWhat wasn't a surprise was how warm and friendly Jaclyn's mother, Nancy, was. She was a petite woman who smiled easily and was as friendly as anyone Jared had ever met. She was also an excellent cook, and Jared was the beneficiary of her expertise as they ate the incredibly delicious rack of lamb she made for dinner.\n\nThey sat and talked for nearly two more hours after dinner, and just before they left, the retired sergeant major asked if he could talk to Jared alone.\n\n\"Of course,\" the younger man replied.\n\n\"I'm sure you can tell that I love my daughter very much.\"\n\n\"I can.\"\n\n\"I have to admit I had reservations about you, Jared. Strong reservations. But I'm a pretty good judge of character, and it's obvious you make my daughter happy.\"\n\nHe smiled then said, \"Happier than I've seen her in...well...since she was in high school.\"\n\nKnowing better than to jump back into the conversation before being asked, Jared continued listening respectfully as Jaclyn's father said the rest of what he had to say.\n\n\"You mentioned staying in.\"\n\n\"Oh, yes. I am thinking about it.\"\n\n\"Well, if you do, you really need to think about being a drill instructor, Jared. It's long, tough hours, but it's the ticket to advancement. So is recruiting duty, but I can't in good conscience recommend it to any hard-charging Marine. Like you.\"\n\nJared smiled but otherwise remained silent.\n\n\"Money isn't everything, but raising a family on a sergeant's pay is...challenging. You do well on the drill field and you'll make staff sergeant guaranteed. I went there as a sergeant already selected for staff sergeant and left a gunnery sergeant. Promoted meritoriously.\"\n\n\"That's incredible,\" Jared said knowing how very few Marine ever made E-7 meritoriously or ahead of their peers.\n\n\"So think about it. I'd be glad to make a call if you think it'd help.\"\n\n\"I appreciate that, Sergeant Major,\" Jared said, calling him by his retired rank for the first time. 'Sir' was out of the question, and 'Dennis' seemed wholly inappropriate.\n\n\"My daughter really likes you, son. Don't hurt her.\"\n\n\"I won't. You have my word.\"\n\nThe older man extended his hand and Jared shook it.\n\n\"Thank you for having me over tonight,\" he said.\n\n\"It was a pleasure meeting you, Jared. And don't forget my advice.\"\n\n\"I won't.\"\n\nAnd with that, he rejoined Jaclyn who was waiting for him while talking with her mother.\n\n\"Thank you dinner, Mrs. Frances. It was truly amazing.\"\n\n\"You're welcome, Jared, and please call me Nancy.\"\n\n\"I will,\" he promised, not able to say her name quite yet.\n\n\"So...what did you think?\" Jaclyn asked once they were in his car.\n\n\"I like both of your parents a lot.\"\n\n\"Did my dad give you a speech or something?\" she asked, dying to know what they talked about.\n\n\"No. Just some advice.\"\n\n\"Can you share?\"\n\n\"He thinks I should become a drill instructor.\"",
        "\"Oh, okay. That makes sense. Well, if you were staying in. As an enlisted Marine.\"\n\n\"I didn't mention the MECEP program. I promise.\"\n\nJaclyn laughed then reached for his hand.\n\n\"My mom really likes you.\"\n\n\"Well, I really like her, too. And your dad. He's not scary at all.\"\n\n\"Told you, right?\" she teased.\n\nJared squeezed her hand and told her she was correct.\n\n\"So when do I get to meet Bill?\" she asked with a smile.\n\n\"Oh, yeah. Bill. Um...soon.\"\n\nJared asked his roommate to join them the following Sunday for dinner at Jaclyn's, and he promised he'd be on his best behavior. And for the most part he was. The only exception was when Jaclyn excused herself for the first time after meeting Bill.\n\n\"She is smokin' hot, man!\" he said a little too loudly.\n\nJaclyn was in the kitchen and heard him, and that made her not only smile but feel good, too.\n\n\"You know who she looks like?\"\n\n\"Uh-oh,\" Jared replied hoping he wouldn't say.\n\n\"No. It's all good. She looks like that hot chick on Grimm. Remember?\"\n\n\"Grim?\"\n\n\"Yeah. Only with two 'm's. The show about...\"\n\nBill stopped and said, \"You've never even heard of Grimm?\"\n\n\"Sorry. No.\"\n\nBill told him what it was about, a show set in Portland, Oregon, where a police detective learns he's from a long line of something called 'Grimms', a people who hunted and killed other people known as 'Wessen'. Wessen, pronounced 'vessen' turned into monster-like creatures when provoked and as the series progressed, more and more types of Wessen were introduced. This police detective fell in love with a beautiful woman named Juliette on the show whose real name is Elizabeth Tulloch.\n\nJared pulled out his phone, searched for her name, and said, \"Wow. She does look like Jaclyn.\"\n\n\"Who looks like me?\" Jaclyn said, waiting for the right moment to come back in as though she hadn't heard anything but that last line.\n\nJared held up the phone and showed her.\n\n\"She's gorgeous!\"\n\n\"So are you!\" Bill blurted out.\n\nA 'tamp-it-down' look from Jared blunted his laughter that followed, but Jaclyn only thanked him.\n\n\"You do look quite a bit alike,\" Jared admitted as he compared them again.\n\n\"Thank you, too,\" she told her younger boyfriend. \"But I definitely don't have her bank account.\"\n\nShe scrolled around and found the police detective whose name was Nick on the show and said, \"Oh, my goodness! This is you, Jared!\"\n\nHis real name was David Giuntoli and he was as hot as his TV girlfriend whom he married in real life.\n\nShe showed him his doppelg\u00e4nger, and Jared was amazed at the resemblance.\n\n\"I forgot all about the dude!\" Bill said. \"But I don't look at dudes like that, so...\"\n\nJaclyn laughed, and Jared returned to her comment about money and told him that was the last thing on his mind where she was concerned.\n\n\"Good thing, because I might have two-hundred dollars in the bank. Maybe.\"\n\n\"That's two hundred more than I've got!\" Bill said, as he drained his third beer in an hour. He needed to belch but managed to hold it down to a dull roar when he let it go.\n\nWhen Bill got up to pee a little later, Jaclyn said, \"He's really sweet.\"\n\n\"Sweet? Bill is...sweet?\"\n\n\"Yes! He's...a very nice guy.\"\n\nJared made a 'huh' sound then said, \"And I thought you were so smart.\"\n\nJaclyn's eyes opened wide in mock surprise as she grabbed a throw pillow and hit her boyfriend with it.\n\n\"Ouch!\" Jared said as he grabbed the pillow and tossed it aside before grabbing her.\n\nThinking Bill was still in the 'head', he pulled her close and kissed her. Jaclyn kissed back and the kiss was still in progress when Bill walked back in.\n\n\"Ahem!\" he said, causing the two lovers to quickly pull apart.\n\n\"Sorry. I didn't know you guys were in a lip lock,\" Bill said.\n\nHe bleached again then added, \"But if I had a girlfriend like that, I'd stay lip-locked with her 24/7.\"\n\nJared gave him another look, and as before, Jaclyn just laughed then thanked him for the 'compliment'.\n\nWhile Jaclyn continued seeing Jared every day and running with him several times a week, the next time she saw Bill was on the 25th of April. That was the day that all Marine ordnance men and women celebrated the beginning of their career field which was established on that day in 1925.\n\nJaclyn joined Jared for the celebration and had a very nice time with him but also really enjoyed meeting several of the Marine wives who were there. Without exception, each one of them told her how beautiful she was before also mentioning something about how attractive her younger boyfriend was.\n\n\"He is pretty gorgeous, huh?\" Jaclyn said several times even when Jared wasn't listening. \n\nShe was also told a couple of times by other women how surprised they were she wasn't older.\n\n\"I heard you were a lot older than Jared, but I'm 35, and you're obviously younger than I am, so I'm not sure how this rumor got so blown out of proportion.\"\n\nJaclyn only thanked her and didn't mention she was going to be 38 in a few weeks.\n\nThe other topic of conversation was Jared's MECEP application.\n\n\"Are you excited about being an officer's wife?\" one of the woman asked.\n\n\"Oh. We...we're not even engaged,\" Jaclyn let her know.\n\n\"Oh. I...I just assumed. I thought...sorry.\"\n\nJared was listening and when the women finished talking said, \"Things change, though,\" as he took his beautiful girlfriend's hand.\n\n\"Yes. Yes, they do,\" Jaclyn agreed just before he gave her a little kiss.\n\nAs soon as he walked into work on the 14th of May, the gruff, LDO captain he worked for handed him a piece of paper and said, \"Congratulations, Sgt. Quinn.\"\n\nJared said, \"Thank you, sir,\" without looking, but as soon as it was okay to do so, he looked down and started reading.\n\nHe was holding a copy of the list of MECEP selectees published via Naval message, and Jared Quinn was one of them. Next to his name was the school he would be attending, and it was all he could do not to holler out when he saw 'The University of Washington' next to it.\n\nHe also had to force himself not to run out of the shop as he grabbed his phone and called Jaclyn at work.\n\n\"Honey? Guess what?\" he blurted out, calling her that for the first time.\n\n\"Did you get it?\" she asked, her heart beating fast from the endearment.\n\n\"Yes! I got accepted and to the U-Dub!\" he told her using the local name for his school of choice.\n\n\"I'm so happy for you!\" she told him. \"We need to celebrate!\"\n\n\"Sure. Yeah. Anytime. I'm just so...pumped!\"\n\n\"I'm so glad you called me.\"\n\n\"And I'm just so lucky I have you in my life,\" he told her, the enthusiasm still there but tempered with genuine feeling.\n\n\"I love being in your life,\" she replied, wanting to call him 'honey', too, but afraid he wouldn't remember saying it to her.\n\n\"I gotta go, but you were the first person I wanted to tell.\"\n\n\"I'm so glad you did, Jared.\"\n\n\"I can't wait to see you, honey.\"\n\nA second time wasn't a mistake, and Jaclyn now had a lump in her throat as she said it back.\n\n\"I'm so proud of you, sweetheart.\"\n\n\"I'll uh, I'll see you tonight, okay?\" Jared said, her endearment going right over his head.\n\n\"Okay. See you then!\"\n\n\"Bye, honey. I love you!\" Jared also blurted out before hanging up prior to Jaclyn being able to reply.\n\n\"You...you what?\" she said very quietly into a dead phone.\n\nIt wasn't until chow time, military speak for lunch, that Jared remembered the date. He'd already picked up a card for Jaclyn and was going to get some flowers before seeing her the next day. But after getting this incredibly good news, he had another idea in mind. One he hoped wouldn't blow her mind.\n\nWhen he showed up that evening, he came in empty-handed. Jaclyn didn't think twice because her birthday wasn't until the next day, and she honestly had no expectations. But she did think twice about dinner and made reservations for them at the nicest place she could afford after looking at her checking account to be sure she could pay the bill.\n\n\"You didn't have to do that,\" Jared told her.\n\n\"Yes I did. There is no way we're not going to celebrate this huge deal!\"\n\nThey were face to face and Jared took her hands in his and looked into her eyes when he said, \"I love you so much.\"\n\nJaclyn's heart nearly burst as she said it back.\n\n\"I love you, too...honey.\"\n\nBoth of them moved to kiss the other and after a few seconds Jaclyn pushed herself away and said, \"If we don't stop right now, we're going to miss our reservations.\"\n\n\"Oh. Right. Yeah, you're um, you're very hard to resist.\"\n\n\"It isn't just me. Trust me,\" she assured him with a smile that said what she didn't say.\n\nThe dinner and the glass of champagne they had were fantastic, but nothing could compare with the way Jared now felt about the beautiful, older woman he knew he loved and was in love with. There wasn't a single thing he didn't love about her, and by the time they got back to her place, he knew he was doing the right thing.\n\nIt was one minute before midnight when he told her he needed to get something from the Jeep. Less than two minutes later he came back in holding a bouquet of red roses, and Jaclyn gasped.\n\n\"Happy birthday, honey.\"\n\n\"Jared! Oh...my...goodness! They're...beautiful! Thank you so much!\"\n\nHe handed them to her along with the card, and when he did, he saw tears welling up in her eyes.\n\n\"Let me help you with those,\" he said as she headed to the kitchen to trim the stems and put them in some water.\n\n\"These are so beautiful,\" she told him again as she trimmed one then handed it to Jared to put in a vase.\n\n\"No. They're just flowers. But you're beautiful,\" he told her.\n\n\"Are you trying to make me cry?\" she asked, pretending like his words were no big deal.\n\n\"No. Of course not.\"\n\nHe saw her use the left sleeve of her blouse to dab an eye then waited for her to look at him. He took that hand then told her something was missing.\n\n\"What? What are you talking about?\" she asked as he held it and looked at it from several different angles.\n\n\"It's...bare.\"\n\n\"Jared Quinn, what in the world are you talking about?\"\n\nHe let go of it, reached into his back pocket, then got down on one knee as he opened a small, velvet box.\n\n\"Oh...my...\" Jaclyn began when she saw the beautiful diamond inside of it.\n\nShe'd gotten a handle on the tears, but this was too much. The welling up became a steady stream as the younger man she loved told her how much she meant to him and that he never wanted to be without her.\n\n\"So...Jaclyn Frances...will you marry me?\"\n\nShe was trying to say 'yes' but couldn't speak. But her head was nodding north and south, and a smiling Jared Quinn slid the ring on her finger then stood up. He took her hand again, looked at it, then said, \"Much better.\"\n\nJaclyn put her arms around him and squeezed him tight and finally found her voice.\n\n\"I love you so much.\"\n\n\"I love you, too, honey.\"\n\nWhen she finally let him go she looked at the ring and smiled.\n\n\"I love it,\" she said before looking at him and saying, \"And I love you, too,\" again.\n\n\"Okay! So...where were we?\" Jared quipped as he pointed to the untrimmed roses.\n\nJaclyn was so happy she laughed at his silliness before grabbing the next flower while never taking her eye off of the beautiful diamond ring she was now wearing.\n\n\"So...how do you feel about being an officer's wife?\" Jared asked, recalling what he'd overheard at the Ordnance Day celebration.\n\nFinding herself, Jaclyn decided it was her turn to do a little teasing.\n\n\"I don't know. I'm engaged to a sergeant who hasn't even graduated from college yet.\"\n\n\"Oh! You!\" Jared said as he turned her his way, lifted her off the ground then spun her around.\n\nOnce they both stopped laughing she put her arms around her fianc\u00e9 and said, \"Things have a way of changing, though.\"\n\n\"Yes. Yes, they do,\" the man she loved replied before kissing her and asking, \"do you need some...reassurance.\"\n\n\"No. I'm no longer in need of that,\" she told him matter of factly.\n\n\"Oh. I see,\" came the somewhat dejected response.\n\n\"But I most definitely would enjoy taking my handsome, officer-to-be fianc\u00e9 to bed so he can...\"\n\nShe put her lips next to his ear then whispered something he'd never heard her say before.\n\n\"Jaclyn Frances! You...you potty mouth, you!\"\n\nShe laughed as she took his hand and said, \"You've never complained about my mouth before.\"\n\n\"Good point. And no one's complaining!\" Jared said immediately. \"Especially not me!\"\n\n*****\n\nIn August, Jaclyn put her house on the market, and it was snapped up in just three days. Since she wasn't married to Jared, they would have to pay to move her to the Seattle area which was one of the most expensive places in the country. The money from the sale of the house along with Jared's pay let them find a very nice apartment they furnished with some of her things, the rest either getting sold or put in storage.\n\nNever more motivated to do anything in his life, Jared approached his final year of college like it was a mission from on high. As a result, he made a perfect 4.0 GPA in every class and graduated on the 6th June with honors which was, of course, D-Day in 1944.\n\nBut more importantly, it was later that evening that Second Lieutenant Jared Quinn married the love of his life who was such a beautiful bride it took his breath away when he saw her in white. Her parents, as well as Staff Sergeant Bill Sampson, flew in for the ceremony, and it was Bill who was the first to salute the new officer after he was commissioned. Jared removed the silver dollar in his pocket and handed it to his former roommate and good friend as tradition demanded.\n\n\"Thank you...sir,\" the new staff sergeant said with genuine sincerity. \n\nThe two men then shook hands before Jared turned around to see a Marine sergeant major in dress blues standing at attention.\n\n\"Congratulations, sir,\" the immaculately-dressed Marine said to his new son-in-law.\n\nJared returned the perfect salute from the older Marine and thanked him.\n\n\"Take care of my girl,\" the sergeant major told him.\n\n\"I will, Sergeant Major. You have my word.\"\n\nAnd with that, Jared took his beautiful wife's and led her the limousine that was waiting for them.\n\nAlone in the limo, other than the driver, Jaclyn looked at her new husband then at the new diamond band on her hand and told him how much she loved him.\n\n\"And I love you, too...Mrs. Quinn.\"\n\nJaclyn smiled then held out her left hand, smiled, then told her husband, \"Things really do change, huh?\"\n\nJared took it, kissed it, then said, \"Yes. Yes, they do,\" as they limo drove off symbolizing the start of their life together as husband and wife.\n\n****\n\nBy the time Lieutenant Quinn reported to Camp Pendleton, California, his beautiful wife was three months pregnant with their first child. Jared was given the platoon of Marines he'd dreamed of leading for the last two years and went on to command a rifle company four years later.\n\nEach time a significant event happened in their lives, either he or Jaclyn would smile and say, \"Things change.\""
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "older woman",
        "younger man",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/things-change-3"
}