{
    "title": "The Professor Ch. 09",
    "pages": [
        "A NOTE TO OUR READERS: Thank you for your kindnesses toward our story. It has been a challenge to relive this. It may take a while to get all of this written out but we will. Drop me an email if you have questions. Several of you have and your encouragement is just that. Thank you all.\n\nWE CONTINUE... \n\nI woke up at 5:30 and ran five miles and came in to take a shower. My older brother Harold was up and moving around when I came into the house through the garage door. He had a smirk on his face as I walked to the sink to fill a glass with water, \"Good morning Hal,\" I smiled to him. \n\n\"What's this I hear that you're dating a 'n----r'?\"\n\nI set the glass on the counter and walked over to him and quietly asked him, \"Have you prayed this morning?\"\n\n\"Hell no!\"\n\nI kicked him in the balls and he went to his knees like a hundred pound sack of rice with a groan, \"If you ever make a desultory remark about Dr. Wright again in my presence or behind my back, I won't warn you -- I will rip your heart out and hand it to you while it's still beating,\" I grabbed his hair and yanked his head back, \"do you understand me?\"\n\nHe groaned something unintelligible.\n\n\"I asked you a question,\" I pressed him hard twisting his hair causing his neck to wrench to the left.\n\nHe hoarsely whispered, \"Y-y-y-es.\"\n\nI shoved him backwards on the floor where I left him there writhing in pain, \"And one more thing I'd better not hear that you're being disrespectful to Dad now that he's sick because I won't give you a chance to make it to your 22nd birthday -- I'll take you out. Do you hear me?\"\n\nHe nodded just as Dad walked in, \"What's happened here Steven?\"\n\n\"Hal used the n-word sir and I kicked him in the balls and told him not to disrespect Dr. Wright -- ever or I'd rip his heart out and hand it to him while it was still beating,\" I answered Dad. \"I'm sorry for doing this in your home Dad but I'm not sorry for what I did. He deserves a whole lot more.\"\n\nDad looked at Hal and pointed his finger at him and hoarsely whispered, \"Get your sorry ass up and out of my house. You'll not disrespect your brother or his girlfriend ever. Do you understand me?\" Dad had clammy sweat all over him as I took his arm and sat him down in a chair at the kitchen table.\n\n\"Where are your pills Dad?\" I asked him.\n\nHe pointed to the table near his recliner, \"Right there Son,\" he barely whispered his directions. I picked up the bottles and gave him the dose listed and filled a glass with some water for him. The coffee was about done perking and I would pour us a cup in a few minutes.\n\nBy now Hal was standing up, bent over with his hands on his knees and he finally straightened up as I assumed a subak position (from Tae Kwon Do) to defend myself. He waved me off -- he'd had enough. I walked away and went to get showered. I met my younger brother in our bedroom he had apparently seen me drop our older brother and he chose the path of non-violence rather than display his stupidity. I was in no mood for their asinine behaviors. \"Good morning George,\" I smiled to him and all he could say was, \"Morning.\" I grudgingly grinned, \"Yep it's morning.\" \n\nI showered and got dressed in a navy pinstripe suit, white shirt and red club tie. I went to the kitchen to have breakfast with Dad and Mom. Mom was puttering around with eggs, sausage and toast. I went over and kissed her, \"Good morning Mom.\"\n\n\"Good morning Son,\" she smiled, \"I really like Phylissia. We're going to do some sewing together.\" She suddenly got quiet, \"Steven I know I've said some pretty hateful things about blacks I just want you to know that Daddy and I support you and Phylissia. She's welcome here anytime Son. We both see how important she is to you and how attentive she is to us -- it's like we've known her all of our lives. Are you two going to church this morning?\"\n\n\"Thank you Momma. I was worried about what you might say to her. You tend to use the n-word when you talk about black folk so thank you for being so kind to Phylissia. And yes we're going to her church this morning.\" I hugged her just to make sure she knew how much I appreciated it.\n\nWe ate breakfast and talked a bit more. She said she was worried about my brothers and their ugly mouths. I told her I wasn't worried about that any longer. Even though she wanted to know why not she let it go. I excused myself from the table to finish getting ready. I came back into the kitchen and kissed Mom and Dad as I was leaving to meet Lissia for church. I needed a slow drive this morning to calm myself down. I had essentially answered ugly with ugly with my brothers and that is a hard thing to carry into church. I made the choice to do what I did so it is my responsibility. I knew it would be a long while before my brothers would come around to my personal beliefs -- if ever. I rode with the windows down and kept my speed under the 75 mph speed limit. I was going to be early to meet Lissia but I don't think she'll mind too much. As I turned up her street I could see another car pulling into her driveway -- it looked like Evie's car. I breathed out a long breath not wanting to ramp up conversation with her again. She interjects herself into life situations rather easily -- Lissia says she's nosey -- she is -- I just don't care for that behavior but she is Lissia's best friend and I will respect that. I pulled into the driveway behind Evie's car just as Lissia opened the door to Evie. Evie turned around and Lissia stepped onto the porch with her -- she was smiling...well they both were...that was a hopeful sign.\n\nI took a deep breath and got out of the car and pulled my suit jacket on, \"Good morning!\"\n\nLissia came down the walk to meet me, \"Hi baby. Don't you look good...ummmh.\"\n\nI hugged her close and kissed her slowly -- I didn't care who saw us, \"Hi sweet baby. How'd you sleep?\"\n\nAs we parted our hug we held our arms around each other and walked to the porch where Evie was standing with her mouth hanging open, \"Close your mouth girl you're gonna catch some flies.\"\n\n\"I got to get me one of those sweet men,\" she teased, \"you're looking fine Steven...mighty fine. Girl I'm gonna freshen up -- don't start without me...\" she cackled.\n\n\"Thank you ladies, I'm a thorn between two roses,\" I winked at Lissia.\n\n\"Sweet talking man,\" Lissia smiled back to me. \"I slept okay. It would have been better if you were here,\" she whispered as I held my hand to her face and lightly kissed her lips. Her breathing quickened, \"Steven I need to say something to you can you come with me a minute?\" She took me by the hand to the kitchen and turned quickly to face me. She was as innocent as a child standing before me -- the little girl from church. She stammered out her words, \"Steven I don't want you to say anything just yet but I need to say this okay baby?\" She had me worried. She slid her hands around my neck and stood closely, \"Steven I know this is quick but you need to know that I am falling in love with you.\"\n\nHer words took my breath away, \"Wow! Lissia my heart is about to explode. I thought it was just me...I mean...oh my gosh.\" My face flushed and my ears were ringing like I'd had too much salt. My heart was pounding -- all I knew to do was hug her.\n\n\"Oh sweet baby,\" she whispered through her tearful, soft sobs, \"I was so worried last night after I told you everything...I just...well...I didn't know what you'd think.\"\n\nWe were both crying like ten year olds, \"I worried about you all the way home. I was still so angry I had to drive slowly so I wouldn't get a ticket. I finally got calmed down by the time I got home, but Lissia my heart was broken for that little girl on her baptism day. Your life story is now part of me and no one else. Dad was sleeping in the den in the air conditioning so he could breathe -- he woke up and we talked for a bit. He and Mom support our relationship and he said he's never seen Momma acting so generous -- he's in shock but happy.\"\n\n\"How was he doing this morning?\" Lissia asked.\n\n\"Just okay. His color is changing a little every day,\" I confessed my hurt and she held me tightly stroking my hair and face. \"Lissia I have to tell you I'm a little scared -- I mean I've never been in love before and we're so real, so fast...please don't let me make a mistake with us? Okay? I'm a real rookie at this...\"\n\nShe put her forefinger on my lips, \"Sweet Steven we'll take this slowly and get it right. Neither one of us needs to be hurt -- ever...okay?\"\n\nI nodded, \"Okay.\" We kissed and it was one of those mind-blowing over-the-top kisses that makes you break into a sweat. We pulled back a bit and smiled to each other her eyes were dilated, her nostrils were flared and a little sweat had popped out on her upper lip. \"You are so beautiful. What are you doing after church?\" I smiled.\n\n\"We're having lunch right here...is that okay? Just the two of us,\" she kissed my lips quickly.\n\nNeither one of us saw Evie standing there and we both turned around to go to the living room and she was standing there at the kitchen door crying. Lissia went to her, \"Oh child why are you crying?\"\n\nEvie was blubbering, \"I just love being around you two -- you don't even know you're black and white do you. Steven do you know that Phyl is a colored girl?\"\n\nI laughed, \"Now you tell me after I've fallen in love with her.\"\n\nLissia turned around to face me...her upper teeth holding onto her bottom lip...tears formed again on her eyelids and then quickly streaked down her beautiful brown face. Her words tumbled out in a fast whisper, \"Oh Steven. Don't play with me.\" \n\nI opened my arms to her and she came quickly to me, \"It's good baby...it really is...we'll take this a little bit at a time. We'll get this right.\" I looked up to see Evie sniffling and wiping her eyes she waved her hand at us and went to the wing chair in the living room and sat down.\n\n\"Steven I know I rushed you like a bum on the corner but I am flabbergasted at how I feel baby...I...I...I\" she stopped and looked at me and rested her forehead on my chest, \"Okay.\" Her innocence was returning in little bits of trust -- we had to go very slowly and I needed to make sure Evie understood that too.\n\nWe went into the living room and sat down for a chat with Evie. She was getting her legs back under her, \"Steven you have cast some kind of spell on that girl. Can you work some magic on me?\"\n\nI laughed, \"One woman is all I can handle if that,\" I confessed. They both laughed at me and Lissia snuggled up to me, \"You can handle me any time,\" she whispered ever so softly.\n\nEvie smiled and patted her chest near her throat, \"My babies y'all are breaking my heart.\"\n\nWe talked about school; the Army; some politics; how the war in Vietnam was heating up and finally bigotry. Racism is an attitude of racial superiority of one race over another and they both made that very clear to me whereas bigotry is when a person acts prejudicially toward another because of a physical attribute such as race or gender. Evie predicted correctly that folks would get the distinction between those two terms wrong. Lissia wondered aloud why it was that folks cannot get along without trying to get an advantage on someone else. We agreed that humans are naturally competitive and they both decided that men are competitive because of our genetic predisposition that is we try hard to win the female that we want against all the other challengers so we can procreate with that one female. So I innocently said, \"But isn't it the female who ultimately decides which male is going to be the father of the children.\" That caused a firestorm that eventually ended with both of the ladies admitting that was 100% their choice that they let us chase them until they were ready for us to catch them.\n\nLissia look at me and blushed, \"Except in my case I took my panties off and waved 'em at you,\" we all started laughing hysterically.\n\nThere was a lull in our conversation so I asked for some help, \"I need y'all to help me this morning when we go to church. I've been to a funeral in an all black church but never a Sunday-go-to-meeting service. I don't want to embarrass either one of you one because I care about what your neighbors think of you; and two because I don't want to insult anyone and lastly I don't want to do anything that will make folks think badly of my parents.\" \n\nEvie got up and sat next to me on my left side and took my left arm; Lissia sat up tightened her arms around my right arm, \"I have to watch the women at church that they don't try and steal you away,\" Lissia voice and demeanor had changed dramatically since last night -- I almost didn't recognize her she was so endearing. \n\nEvie noticed it too, \"Phyl girl you got it bad so I'm gonna have to help you watch over this sweet man-child,\" she patted my arm, \"don't worry Steven you just kept behaving like you been doing and you'll be okay.\"\n\n\"She's right baby, your gentle ways will win a lot of folk over but you know there'll be a few,\" she allowed.\n\n\"Yeah like a few in my house,\" I admitted.\n\nI could feel Lissia's hands tighten on my arm, \"What happened Steven?\"\n\n\"My older brother Hal made a comment to me this morning so I dropped him and made him apologize. Dad came in and saw him cringing in pain on the floor and he wanted to know what happened. So I told and he told my brother to leave his home,\" I told it all.\n\nThere was dead silence in the living room then Lissia, \"How is your Dad handling it?\"\n\nI nodded and turned to face her, taking her sweet face in my hands, \"He said that he and Mom love us that Mom has never been more excited. Mom said she couldn't wait for the two of you to start sewing together,\" my revelation stunned both women into complete silence. \n\nLissia blanched, \"Are you sure?\"\n\nI nodded, \"Yes sweet baby I am. I wouldn't kid you.\"\n\nLissia breathed out heavily, \"My God...who would have thought this?\"\n\nEvie just shook her head, \"Could this really happen? I mean we're not that far from Jim Crow.\"\n\nLissia broke the spell, \"We need to head over to church you two,\" she got us up. We drove my car with Evie in the back seat and Lissia in the front with me. We drove quickly to the New Macedonia Baptist Church about three blocks north on Heights Boulevard. The original had burned to the ground in a suspicious fire in 1956 conveniently around the time of the Supreme Court case Brown vs. the Board of Education. There were sufficient parking places and we were 15 minutes early.\n\nEvie let us know we were way too early, \"Lissia you got to get back to CP time girl there're no school bells ringing here.\"\n\nLissia and I held hands. She was conservatively dressed in a dark blue linen suit, small round hat and dark blue gloves. She had a little perfume on and dark high heels with stockings -- she was dressed like a true Southern woman on Sunday morning. We drew some serious eyeballing as we walked up the front walk. Fortunately her pastor, the Reverend Doctor Alvin Spinney met us at the steps, \"Dr. Wright and Dr. Marshal it is so good to see you fine ladies this morning praise God! And who do you have with you this morning?\" He sounded very reverent and officious.\n\nLissia introduced me, \"This is Steven Edwards Dr. Spinney. Steven and I have been dating and he agreed to come to church with me this morning.\"\n\n\"My, my, my Mr. (with great emphasis on mister) Edwards with so many young, eligible black men here at church our own Dr. Wright decides to date a white man. That's most egalitarian of you,\" his condescension was scathing. Lissia's fingers were squeezing the feeling out of mine.\n\nI extended my hand to him, \"Dr. Spinney it is indeed a pleasure to meet you. I've heard many wonderful things about your preaching sir. I don't know much about being egalitarian, what I know is that God created us man and woman for each other I don't remember Him saying anything about precisely which woman I am permitted to see or date or even marry sir. No man, white or black has the right to judge us for whom we date or love or marry sir. God told us to love one another as he loves us.\"\n\n\"Please forgive me Mister Edwards I guess I need to learn my place,\" he looked down his bespectacled nose with a nasty grin on his face.\n\n\"Dr. Spinney there's enough hatred and bad acting in this world to last three lifetimes -- I'm deeply shocked that God hasn't destroyed this mess for the last time ridding the faithful of the hateful,\" I stared at him with a gentle smile -- never giving him a chance to point out that I was being a 'smart-assed white boy' as I would be called behind my back soon enough.\n\nHe nodded his head and extended his hand, \"I'm sorry Mr. Edwards. I should be showing you hospitality not hostility. Will you forgive me? I understand now why Dr. Wright has found you so appealing -- your courage is befitting a man 20 years your senior and your calmness in the face of my impoliteness is a case in point. Please come in and welcome,\" he was trying to protect his flock but he was right he was rude, inhospitable and hostile.\n\nI hadn't looked at Lissia until we started to go up the steps and then I saw the horror on her face -- she looked as though she wanted to jack-slap her preacher. That was the Lissia I met a couple of days ago -- this could be real fun. It was very apparent I would be the only white person in the sanctuary this morning but I didn't care. We found a pew and I had a bulletin and was handed a funeral parlor fan from Wembley Brothers Mortuary and Crematorium. One side had Jesus knocking on the door and the other had the words and music to \"Precious Lord.\"\n\nWhen worship started it started with a clash, flash and bang and everyone was on their feet. We sang and prayers were offered, there was more singing and there was this wonderful dialogue with the preacher that I had not experienced. Dr. Spinney got around to calling out for the visitors to stand and of course there were very few other than me -- I was the meat offering saved for last. He explained to the congregation who I was and that was met with a lot of 'uh-huh's' and 'no she didn't' and other things that were somewhat unintelligible -- the upshot of which was I would be talked to after worship by a lot of folk who just wanted to lay eyes on me. Lissia held my arm with both of her glove hands, \"Steven my darling man I'm right here,\" while Evie patted my thigh at little too far up the thigh for my comfort. Lissia saw her and slapped her hand and she just impishly grinned and shook while she grinned.\n\nThe service lasted about two hours with folk coming in and out of the service the whole time. Dr. Spinney was expectorating and sweating. He had what appeared to be a checkered table cloth that he had cut down to napkin size to mop his sweating face. He finally had enough and just sat down to a chorus of 'amens' and I don't know if it was enjoined because everyone had be talked to death or they were truly saying so be it. When he sat down the scrawny worship leader hopped up and started gesticulating and dancing around leading the hymn of invitation -- we sang that hymn plus eight choruses waiting for someone to go forward. Finally Evie went forward saying, \"Someone's got to stop this nonsense,\" she grinned and took off running and screaming toward the altar where she was met by three deacons who helped save her from herself. It did bring the service to an abrupt conclusion when she told them she had been dealing with the devil at the University and she needed our prayers. That woman was quite an actress and Lissia just about had a myocardial infarction watching her performance.\n\nAfter church everyone had to come over and shake my hand and pat my back. I got kissed by no fewer than thirty women one of them had snuff on her breath and more than a few smelled like they'd been in the mince pie. Lissia smiled and watched me endure the acceptance greetings and the 'y'all come agains'. I asked her later if they were sincere. We walked to the car and Evie told us she had after church plans with Deacon Roswell so he'd bring her over later to get her car. Lissia rolled her eyes, \"that girl is gonna get knocked up -- you just wait and see.\"",
        "Her statement caused me to begin worrying about Lissia I hadn't used a rubber and I didn't know if she'd used a diaphragm or not. There was so little I knew it was embarrassing just to think about it. We got to the car and as I held the door for Lissia she turned and thanked me for coming then she kissed me and it was what we call a real spit-swapper. I lost my bearings for a minute, \"Whew Lissia! Where'd that come from?\"\n\n\"I don't want you to forget me,\" she winked and stroked my face with her gloved hand, \"sweet baby mine.\"\n\nLissia settled into her seat as I locked her door and she unlocked mine. The drive to her home was quick. We went inside and she took my jacket, \"Let me have your necktie.\" She took my jacket and necktie and hung them in her closet. That was a comfortable feeling. I would learn later never to say anything about comfort and your woman in the same breath -- fortunately this time my tongue remained stuck to the roof of my mouth. She came out barefoot, in a comfortable cotton dress covered with pink flowers -- she was radiant as she came to me and kissed me, \"This is just a little dessert before the main course.\" \n\nWhen we broke our kiss we went to the kitchen and reheated the ham, warmed up the sweet potatoes and pole beans and sat down to tea with lemon. It was just the two of us and it felt so good to enjoy this meal together. She was a wonderful cook -- I could tell this was a home-smoked ham -- the hickory and pecan smoke plus the brown sugar rub just made the meal like manna. As my grandpa would say, 'if you put a small piece of that ham on your forehead your tongue would slap your brains out trying to get at it.' Lissia made some coffee and brought out the pecan pie -- we lived in the land of paper shell pecan trees. I was done. We sipped coffee and talked. \n\n\"Steven? About what happened to me,\" she pondered aloud.\n\n\"Yes baby?\"\n\n\"How do you feel about me now, I mean Evie's gone it's just us -- you can tell me,\" she wasn't smiling.\n\n\"I won't lie to you and tell you that I'm over being angry. But as far as we're concerned Lissia you're my woman and I'm your man like I said for however long that is -- I'm it,\" I held her hand to my lips and kissed it. \"What your cousin and those buddies of his did to you is worth the death penalty. Having said that you have to know how protective I am of you...I'm gonna worry about anyway but knowing what I know now makes me wary of anyone around you who might harm the tiniest hair on your head. You heard me this morning say this morning that I'm falling in love with you...I am,\" I looked into her eyes as they softened and beckoned me. \"Lissia you said that you don't feel threatened by me...well that surprised me when you said it I couldn't imagine why you'd be threatened or afraid of me. I know now why you might feel that way by any man really...\"\n\nThere was a melancholy in her face, \"Oh Steven it has taken me so long to feel this good and I'm scared that it'll disappear and the old haints will come back.\"\n\n\"What are those old haints baby?\" I needed to know.\n\nHer lips tightened and she looked at her barely touched slice of pie, \"That I'm damaged goods unworthy of any man...the other part of this is that I can't have children because of the rape,\" she broke down and cried like a baby.\n\nI quickly got out of my chair and got on one knee next to her, \"Oh Lissia baby...I am so sorry,\" now my heart was really aching for her and in part for me too. She bawled and I scooped her up from the chair -- her arms were around my neck and her face was buried in my chest. I sat us on the sofa where I held her for a very long time letting her cry -- there was no sense in trying to stop her -- I just needed to be a non-anxious presence with her - so I was. \n\nHer tears and sobs subsided and I stroked her beautiful face. She half-smiled, whispering, \"I'm sorry for being such a cry-baby. My students wouldn't know me like this,\" she sort of chuckled.\n\n\"They don't need to know any of this my sweet baby,\" I held her closely.\n\n\"Steven?\"\n\n\"Yes baby?\" I was watching her eyes and kissed her nose.\n\n\"Let's lock the door and take a nap, I need to feel you near me and holding me,\" there was no neediness in her voice just a sweet, natural feel of how life is lived in love. We walked to the door and locked it. \n\nI took her in my arms and kissed her slowly, the kiss of lovers. She entwined herself with me and held tightly to me making purring sounds as we kissed. We broke our kiss and her eyes were misty -- it was surreal as we walked to the bedroom where we undressed one another. The fan whispered the afternoon rhythm as we climbed aboard the big ol' four-poster...she was so beautiful...every richly dark, naked inch of her skin screamed out to be kissed so I complied and ended up at her lips both of us on our side. \n\n\"Why did you stop?\" she looked worried so I kissed her nose.\n\n\"I want to make sure you're okay with this. You know I said I was always going to be worried about you...well this is me worrying Lissia sweet baby,\" I kissed her lips and slid my arm around her waist and firm, round, cheeks. She excited me so much.\n\nShe stroked my face with the backs of her first two fingers and captured my face with both hands, \"Sweet baby mine you are so tender that I'm scared for you. I guess I know why your Momma wanted to make sure you didn't get hurt,\" she kissed my face all over sliding her arm around my neck, our bodies formed to one another perfectly as she rested her face on my neck and chest. She stroked my chest, \"My love is for you alone. You are so sweet and gentle. I love that about you. You've made me feel like it's my first time.\" It was a beautiful afternoon, we drifted off to sleep. I awoke with her watching me. She smiled, \"Hi there handsome.\"\n\nJust seeing her smile made me smile, \"Hi beautiful.\"\n\nI kissed her sweet lips as she snaked her tongue into my mouth. We kissed and writhed against each other the friction of our bodies moving skin against skin was erotic and energizing for us both...my erection was immediate as she throatily whispered, \"Ooooo what is that...mmmm...I think I'd better check this out,\" as she slid off of me and kissed down my chest to my navel and down through my pubic hair right to the base of my dick...she surprised me by bringing her hand up very quickly and wrapping her long, dark fingers around the base of my dick, gently massaging my dick in a long, slow, cow-milking motion...she moved her mouth to my balls and sucked one into her mouth and swirled her tongue around it and then gently let it fall out before moving on the other one doing the same thing all the while stroking and milking my dick. She then turned her complete attention to making me cum by kissing and licking all the way up the shaft of my dick to engulf the head and then inch by inch she suck and swirled and swallowed my dick until she had fully swallowed my turgid shaft. She held both of my balls with one hand against the shaft of my dick and began slowly massaging 'the boys' while sucking my dick with such fiery savor that I was losing control, \"oh gawd Lissia...oh please...you're gonna make me cum...ohhhhh...oh yeah that's it...uh...oh...uh...uh...uh...oh yeah,\" she kept sucking and stroking until she and I felt my balls tighten, \"Oh yeah! Oh gawd...yeahhhhhhhh....oh yeah...yes,\" my cum just kept spurting into her waiting mouth as she swallowed several mouthfuls and made a noisy slurping sound as she kept bobbing up and down the shaft of my dick...\n\n\"That's it baby...hold it right there,\" as she crept up on me and was sitting astride my waist wiggling my dickhead against her slimy, wet slit and suddenly she sat down on my dick and I slid balls deep into her...she slowly...very slowly began rolling her hips and squeezing my dick at the same time the effect was startling...it was as though she was trying everything in her power to be a creative and thorough lover just for us and it worked. I couldn't keep my hips still the skin on my dick was tantalized and stimulated beyond belief, I felt like I couldn't get my breath as we rolled and pitched on the bed the bed springs squeaking, creaking and whining with these new moves that we were teaching them...Lissia's breathing and my breathing began to have a fever tempo with hers in mine out with each stroke getting faster...harder and more powerful she was relentless in her pace...her body began trembling, the sweat was pouring off of me, her sweat was pooling on my chest, \"Oh...gawd...Steven...oh...my...g...a...w...d, oh Stevennnn...oh baby...please take me...uh...oh...oh yessss...STEVEN!!!! I'M CUMMMMMMINNNNGG!!!\" \n\nHer orgasm flooded my dick, my balls and my legs and mine orgasm was building as she tried to slow down...her arms collapsing I rolled her onto her side and lifted her left leg up I long-stroked my dick deep into her sweet, brown belly...she held onto my neck and arm, her nostrils flared, sweat dripping off her nose, my sweat dripping from every pore...there was nothing on her bed that wasn't covered in sweat, cum or pussy juices, my balls tightened as my load blew hard into her waiting womb and kept pumping out of me in such involuntary moves that it felt like my balls and anus were cramping...she leaned her head as far back into the pillows as she could as I rolled in between her legs now and finished ejaculating...my spent cum was squishing out of her like a furious stream of passion's end...our heads were swooning to our erotic, fragrant and intoxicating sexual smells that were being swirled around the room by the slow-moving ceiling fan. I lay on her belly my arms under her back, my hands at her shoulder blades, kissing her neck, chin and finally her sweet lips. She kissed me so sweetly I forgot where I was, her arms slid around the back of my neck and she dreamily stared at me whispering, \"Oh Steven my dearest love you have conquered my heart...no matter what happens you've been the absolute perfect antidote for my aching heart.\"\n\nI pushed up a little and stared into her limpid brown pools that lit up her face...her radiance filled my heart with immeasurable pride and satisfaction. I knew now what it meant to completely give yourself to one person. If I had any doubts about how I felt those were irretrievably gone, \"Phylissia Carole Wright I love you.\" \n\nHer eyes flew open as tears traced quick paths to her ears, \"Steven my baby I dearly love you and want no other man -- do you know that now?\"\n\nI nodded as my heart burned in my chest for this innocent, sweet child whose virginity was stolen from her, whose child-bearing was ripped away like so much detritus, whose fragile, dear heart was suddenly and totally open to me. Her chronological years mattered not in this moment -- her relationship years were where we were together -- a woman-child and a man-child finding each other amid the turmoil of the 60s, a changing society and radically different attitudes toward one another all in the midst of the coming clouds of war and strife. Our island in this eye of the storm gave us a true north reading on our romantic compasses. \n\nThe rest of our afternoon was spent lying on our sides facing one another talking about what it meant for us. Tomorrow would be my first day at school and in love -- the razor's edge that we had to run was treacherous for both of us. She had the risk of violating her contract by dating a student and I was at risk of losing my scholarship for moral turpitude if we didn't handle this correctly. We talked through our plan of attack how we could meet and share coffee or lunch or a few quiet moments in her carrel in the stacks at Cullen. \"Lissia I never expected you,\" I told her quietly.\n\nShe agreed, \"Friday seems so long ago baby. I don't feel like wearing the Dr. Bitch face any longer,\" she looked dead in my eyes.\n\n\"That's good because I can't stand the idea of someone holding you in contempt like that,\" my protector antennae were up on high alert.\n\n\"So baby when can we see each other again?\"\n\nI told her my week's schedule: I had to go to the ROTC Department and fill out the forms and declarations, get my uniforms and give them all of my information; I need to finish two papers and I'll be done for the semester.\n\n\"What is your week like?\" I asked her.\n\n\"Grading papers, final exams and reviewing orals for doctoral students,\" she sighed, \"it's a long week...too long for me now that we've got each other.\"\n\n\"Lissia may I come over here to write while you grade papers?\"\n\nHer face brightened, \"Oh yes! I'd love that but Steven we will have to restrain ourselves so we can get our work done. Can you do that?\"\n\n\"I can try really hard,\" I admitted.\n\n\"I can too,\" she smiled, \"but sweet man you're absolutely irresistible.\"\n\n\"But you're beautiful and sensual and delicious,\" my smile told it all. She could read me like a dime store novel. Our conversation lingered for several hours when finally I asked her, \"How can we marry in Texas?\"\n\nShe sat up, \"What?\"\n\n\"How can we marry in Texas,\" I asked her again.\n\nShe was shaking so hard, \"Steven what are you saying?\"\n\nI stumbled for the right words, \"Lissia I wasn't sure that I loved you, I knew that I liked you and your sweet, loving ways but for me to say that I love someone and I do love you -- love means one thing, I want us to be together as husband and wife forever.\"\n\nShe was crying and seeing her cry started my tears, \"Steven my dear sweet Steven we'll find a way - let's find out what the state laws say. We may have to go to Mexico or to D.C. or even to Maine...we can go somewhere. Steven you've made my life complete...but are you absolutely sure?\"\n\nI nodded with a teary face, \"I am. It's simple. I love you. I want you to be my wife, we can adopt kids -- there are lots of kids who need loving parents and we'll fit that description very easily won't we?\"\n\n********************************\n\nOur week flew by. The ROTC unit commander, LTC Colbert Calwell was a World War II officer who was intent on turning out fine infantry officers. I had interviewed with him when I had my boards for the scholarship. He advised me that I would spend 8-weeks this summer in basic training with other ROTC Candidates at Ft. Benning for which we would be paid the equivalent of a sergeant. That was good news on the financial front but not good news on the Lissia front. He asked my branch preference and I said airborne infantry and his face lit up -- he had been with the 101st Airborne division at Normandy during D-Day. He also advised me that they were working out an opportunity for me to finish a BS and an MS at the same time, the MS would be in mathematics since I had already finished the mathematics BS degree requirements. He said that he would let me know but I had to keep my grades up and take the G.R.E. (Graduate Records Examination). This was moving pretty fast.\n\nI left the ROTC office with a grim face as I walked into Cullen. I was so focused on what the colonel had said that I walked right past Lissia, \"Steven?\" Her voice shook the cobwebs and my face flushed a bright red as she smiled, \"Are you okay?\"\n\nI shook my head, \"Can we talk?\"\n\nShe nodded and pointed to the stairs which led to the stacks on the top floor where her carrel was located. She got there first and went in, I waited a few minutes then opened the door and walked in -- she was waiting, she was almost eye level with those four inch heels, \"What's up baby? You look so preoccupied.\"\n\nI tightened my lips, \"I have to spend eight weeks at Ft. Benning this summer.\"\n\n\"Oh no,\" she moaned as we hugged.\n\n\"I know, I haven't left yet and I'm already missing you,\" I admitted.\n\nThe carrel is small with two chairs and two work surfaces back-to-back. We sat, holding hands and talking. She looked very professorial, hair pulled straight back, pencil stuck in her hair over her right ear, and glasses perched atop her head. \"I heard through the 'grapevine' that you're being considered for the dual degree program at the request of the ROTC Department.\" \n\nShe watched my response, \"It's true.\"\n\n\"Sweetie that is a tribute to your hard work, so don't worry about a few weeks apart, we can get through that,\" she massaged my hand with hers. \n\nHer gentleness in this setting was still so unexpected, \"I worry about you Lissia, not about our physical relationship but about your safety and what you're doing. I just don't want any harm to come to you -- ever.\" I got down on my knee and hugged her to me, it felt so good and so right to have her near me and to hold her in my arms. I sat back down in the chair and we chatted for a while I then reminded her, \"Thursday I need to come over and mow the yard again and I need you to start thinking about what you want those flower beds and planting areas to look like. We need to do these before I leave for basic.\"\n\n\"We can get someone else to do that,\" she smiled, her eyes were soft, her face radiant.\n\n\"No we can't. This is a labor of love baby; it needs to look like someone with a profoundly loving heart lives in that home -- because you are and you do,\" I told her.\n\n\"I won't argue with you, I know that I won't win that fight,\" she chuckled softly.\n\nWe leaned back in our chairs staring at each other our legs one on one, that is, my leg inside hers and touching. It was a nice interlude to a harrowing class schedule for both of us. \"Could I leave my lawn mower and tools in your garage?\"\n\n\"Anything you want is yours,\" she cooed.\n\n\"I don't want to take advantage of you or your kindness...\" she held a finger to my lips.\n\n\"Steven...we've said our intentions to one another, it's we now,\" she whispered.\n\nMy chest swelled and my face flushed, \"I am so happy.\"\n\n\"Me too sweet baby,\" in a voice so compelling and so rich with love. We lingered and she looked at her watch, \"I've got an exam to give.\"\n\nWe stood and kissed our lovers' kiss. I felt like king of the world. I watched her leave the carrel and I sat back down to finish some note taking and writing.\n\nIn about an hour there was a knock on the door. I opened it. \"Dr. Marshal!\"\n\n\"Hello Mr. Edwards,\" she grinned.\n\n\"Come in...have a seat,\" I was cordial.\n\n\"Phyl said you'd be here. I need to make this quick. Have you checked your student mailbox?\"\n\n\"No ma'am,\" I told her.\n\n\"Okay I didn't think so. You have an interview this afternoon with the Graduate Division Committee to determine your fitness for the dual BS -- MS Degree program,\" she smiled.\n\n\"Wow that was fast!\"\n\n\"Not really the colonel should have told you about that,\" she seemed miffed.\n\n\"I don't have a suit up here -- what time is the interview?\" I was worried.\n\n\"Easy Steven, I'm on the committee so are your two faculty advisors but we have some tricky ones on there too. Phyl said not to worry about you that you can handle anything. I believe that forewarned is forearmed,\" she grinned widely.\n\n\"Thank you Doc,\" I breathed out, \"so what time? Do I need to put on a suit and tie?\"\n\n\"No you're dressed perfectly,\" she assured me, \"remain your usually calm self and it will be good! We can do this baby. I'm going now but you run down to your mailbox and get that envelope from the committee there's a document or two that you need to sign,\" with that she hugged me and kissed my cheek.\n\nEvie left and I almost croaked, 'what if I hadn't met Evie?' She did something very nice for me. I was shaking now. I knew Lissia wouldn't believe all this. I got up, closed my books, locking the carrel behind me and headed to the SUB to get my mail. I ran down the five flights of stairs and across to the SUB in anticipation. There was a gaggle of students at the mailboxes so I weaved my way through the crowd. Jackie Ki grabbed my arm, \"Steven where have you been? We've been looking for you to talk about the Numerical Analysis final exam!\" She was always animated. \n\n\"Hey Jackie I am late for an interview may I call you or David later?\" I begged off.",
        "She was flustered by my abruptness but I was rattled at the moment. I finally got my mail and there was the committee envelope. I ran up two flights of stairs and sat on a bench on the quad to read the contents. Evie was right there were two documents to sign. Plus I needed to be there in thirty minutes in the Liberal Arts building -- Room 406. I also needed to calm down. I desperately wanted to see Lissia but she'd still be administering that final. \n\nI blew out a chest full of air trying to calm down when my favorite history professor, Dr. James Hall Hunter came strolling up to the bench where I was, \"Steven! Hail good fellow!\"\n\nHe was a delight to be around, a very literate and kind professor of Medieval European History -- his summer home was in Provence, France. I stood, \"Dr. Hunter it's good to see you sir!\"\n\nHe shook my hand and sat down on the bench and patted it for me to sit, \"Now I'm going to this committee review of your academic record along with Dr. Martin (John Quincy). Since he's your faculty advisor for history; he asked me to join him to vouchsafe your academic bona fides if that is okay with you young man.\"\n\nI breathed out heavily, \"Oh yes sir, I am delighted. I just found out about this meeting and am a bit bumfuzzled sir.\"\n\nHe smiled and patted my arm, \"You have several strong professors in your corner. Drs. Marshal and Wright from Humanities; of course the most important ones are Drs. Hunter and Martin from History; then there's Drs. Calvert and Quinones from mathematics plus the academic dean for undergraduate and for graduate studies -- Dean Woolard and Dean Kaplan. LTC Calwell should be there too,\" he summarized. \"You're a very accomplished young man -- you'll do just fine Steven...just fine. Come on let's walk over toward that Bolshevik building and prepare ourselves for the onslaught of tedium shall we?\" He whistled as we walked, \"By the way my daughter Sandra was in Pino's yesterday, Pino said you were having dinner with a most beautiful young woman. You need to tell me about her real soon. You bring her to dinner with Estelle and me - we want to meet her.\" \n\nMy ears were ringing. Dadgummit Pino had to go and talk -- well it's my fault for picking Pino's.\n\n\"Well what do you think?\" he asked.\n\n\"Wha...oh I'm so sorry Dr. Hunter I guess I'm a bit rattled,\" I choked out my words.\n\n\"Too bad you don't drink, I have some Courvoisier in my desk,\" he grinned his impish little boy grin, \"Wouldn't that make it interesting?\"\n\nWhen we got to room 406 there was a gathering of academic eagles to include Lissia. My heart started pounding as she walked over to where Dr. Hunter and I were standing. She extended her hand to the much revered elder of the history department, \"Dr. Hunter how are you doing. How is your lovely wife Estelle?\"\n\nHe took her extended hand and kissed it, \"Mademoiselle you are too beautiful for a handshake and too charming to be single.\"\n\n\"Dr. Hunter it's you who is too charming,\" she smiled. She turned her attention to me, \"So Mr. Edwards I guess this is D-Day for you isn't it?\" She winked and walked away.\n\nDr. Hunter looked at me, \"Why is your face so red Steven...ohhh maybe this is the mystery woman.\" He was on to something he just didn't know how close he was...\n\nLTC Calwell arrived on the minute, \"Gentlemen, Mr. Edwards if you'll follow us in please?\"\n\nDean Kaplan called everyone to order, \"Okay the reason we're here is to give our decision to Mr. Steven Edwards for his request to continue as a BS -- MS student in the dual degree program here at the university. Mr. Edwards we'll introduce ourselves but you know most of us. We'll each ask you a few questions. After we've had a chance to inquire about you personally; we'll have you leave the room; we'll review our impressions among ourselves and then we'll decide if you will be accepted into the program. Understood?\"\n\n\"Yes sir.\"\n\nEach committee member introduced himself or herself and the questions started with Dr. Kaplan, \"You're very well-dressed. You look like a frat-rat - do you need a scholarship?\"\n\n\"Dean Kaplan I have worked very hard to be here at the university. I take anywhere from 19-21 semester hours each semester; I work three, four sometimes five part-time jobs just to pay for school. My Dad is retired Army who's dying of cancer, my Mom stays home to look after my Dad. The scholarship and the dual degree program will give me an academic advantage sooner rather than later to be productive in society and in the workplace,\" I answered.\n\nThen sarcastically, \"But an ROTC scholarship? You scored 1325 on your SAT and were valedictorian in high school -- why the military -- isn't that the place were people go who can't do anything else?\"\n\n\"Some say that those who can - do and those who can't - teach. My Dad served to save this nation and the world from tyranny. As John Stuart Mill once wrote in \"The Contest in America,\" for Fraser's Magazine, February 1862 that, \"War is an ugly thing, but not the ugliest of things. The decayed and degraded state of moral and patriotic feeling which thinks that nothing is worth war is much worse. The person who has nothing for which he is willing to fight, nothing which is more important than his own personal safety, is a miserable creature and has no chance of being free unless made and kept so by the exertions of better men than himself.\" I stared at him as the room got deathly quiet, \"Would you send your very best and strongest into battle or the second, third or fourth best if your very existence was hanging in the balance sir?\" He nodded and looked to Dean Woolard.\n\n\"Steven if we allow you into this program which MS would you pursue and why?\" he probed.\n\n\"The mathematics degree sir. Understanding history gives us some idea of what the future looks like because of how we act, think and work; given those parameters we can therefore model what our future may be in the economy, in health, in our ability to produce quality goods and services so it fits an entire range of disciples even to the point of actuarial sciences that allows us the strength of forecast ability,\" I told him.\n\n\"But why history?\" he pushed it.\n\n\"The writer of Ecclesiastes tells us that there is nothing new under the sun therefore what we fail to remember in our history we will very likely repeat as mistakes over and over again,\" I told him.\n\nDr. James Hall Hunter, Dr. John Quincy Martin, Dr. Adele Calvert and Dr. Rafael Quinones were professors of mine and when asked by the Deans what questions they had of me they deferred. Dr. Martin, raconteur and instigator of many heated discussions in the 'study of the American West' laughed, \"Dean Kaplan the four of us have had the pleasure of Mr. Edwards as a student, he was never late to class, never absent, never misspelled a word, always participated actively in every discussion and was never satisfied with his work -- his restless enthusiasm to learn is only matched by his persistence in achievement -- I think most of us here have had their lawns mowed and hedges trimmed or barns cleaned out by Mr. Edwards who doesn't find it beneath his dignity to work hard to pay for his education and to get the best education he can. He will challenge you to think away from your normative and set a new baseline for teaching disciplined students.\"\n\nI was watching Evie and Lissia who had yet to speak. Dr. Kaplan turned to Dr. Marshal, \"So Dr. Marshal as a sociologist what do you have to ask Mr. Edwards?\"\n\n\"Hello Mr. Edwards.\"\n\n\"Hello Dr. Marshal.\"\n\n\"Mr. Edwards how do you feel about racism?\" she pushed it hard.\n\n\"Racism by definition is the presumptive superiority held in thought, word and deed, by one race in superiority to another. It is presumptive and self-righteous. God created us equally only God is superior,\" I calmly stated my case. She had thrown me a softball.\n\n\"So Mr. Edwards what is it when a white person acts out of hatred toward a colored person?\" she pushed it again.\n\n\"It's bigotry Dr. Marshal. Hatred is a vile prejudice that is destroying our nation one ugly word or act at a time when we need to one Nation under God,\" I nodded.\n\n\"Mr. Edwards I'm Dr. Wright.\" She spoke brusquely.\n\n\"Good afternoon Dr. Wright,\" I smiled to her watching her eyes carefully.\n\n\"So you believe that you and I are peers?\" she was going to be tricky.\n\n\"Not yet ma'am. Your peers are joining you in my review this afternoon. Maybe one day after I have earned a Ph.D. in mathematics I will be your peer ma'am. But what I am is yet to be determined and that's why this dual education is so important to me,\" I spoke plainly.\n\nShe smiled, her eyes crinkled at the corners. I could feel my heart warming as she smiled so softly to me, \"Thank you Mr. Edwards.\"\n\nI nodded, \"It is my pleasure Dr. Wright.\" I could feel ten pairs of eyes on me. I felt very conspicuous as though everyone in the room knew how I felt about Lissia.\n\nDr. Kaplan interrupted my consciousness, \"Mr. Edwards where do you get your wisdom?\"\n\n\"I listen to my elders, I really don't have their wisdom yet sir,\" I answered.\n\n\"You quoted Mill precisely. Aren't you worried that if you go to war you'll be killed or maimed when there is so much work to do right here to right so many social wrongs?\" Dr. Kaplan pushed his point.\n\n\"Dr. Kaplan our nation has allies, one of which is the government of South Vietnam, whom we have said that we will help. There are young men and women there whom the Bolsheviks do not want to succeed and be productive, learn at the university level, professors like yourselves whom they will murder, doctors, lawyers and religious leaders whose very existence is in jeopardy while we talk among ourselves. Your work is here righting the societal wrongs -- my work is preserving liberty sir wherever it is.\"\n\n\"They haven't known liberty...\"\n\n\"All the more reason that they should then isn't it sir? Thomas Jefferson argued with John Adams during the Constitutional Convention, \"The tree of liberty must be refreshed with the blood of tyrants and patriots,\" I answered.\n\n\"It seems your professors of history have taught you to remember history Mr. Edwards. Thank you. If you'll step outside we'll discuss your circumstance and give you our decision,\" Dr. Kaplan concluded.\n\nI stood, \"Thank you Doctors and colonel.\"\n\nI found a bench down the corridor and took a seat wondering where this was going. They talked for a while about thirty minutes when finally Dr. Hunter came out to get me, \"Steven,\" he waved to me to come to him. He took my arm and patted me on the back. \n\nLissia's beautiful smile was the first thing I saw, I didn't care what happened at that point, my heart just melted as I fumbled my way to my seat while she dropped her eyes so as not to give herself away.\n\n\"Mr. Edwards it wasn't unanimous that you be granted a dual degree opportunity. I don't like sending young men to war so I voted against it but I was outvoted. Clearly you're a great student, well-read and not without courage under close scrutiny. You're approved for the program but it is conditional on your G.R.E. scores. Understood?\"\n\nI was ecstatic, \"Yes sir. I'm scheduled for the G.R.E. in two weeks sir.\"\n\n\"This review is adjourned,\" declared Dr. Kaplan. He came over and shook my hand as did the other professors and my new commander. Evie and Lissia came over , Lissia was beaming as she held her hand to me, \"Congratulations Mr. Edwards you are a very impressive young man and such a credit to your parents.\" Evie rolled her eyes and Dr. Hunter whispered, \"I'm right aren't I?\"\n\nI walked out with him, \"Steven if I had a son in the Army I would want him to serve in your command. Dr. Wright is a beautiful woman isn't she Steven?\"\n\n\"Yes sir she is,\" I confessed.\n\n\"You've never lied to me have you Steven?\"\n\n\"No sir and I don't intend to,\" I admitted.\n\n\"I won't ask you if Dr. Wright is your girlfriend but I am very perceptive and she was watching you with a lover's eyes. I've never know her to be so charitable to an undergrad. If she's not your woman she surely should be son,\" he patted my back and walked away.\n\nMy brain was exhausted and I still had work to do. I heard voices behind me and the familiar clicking of heels and then, \"Mr. Edwards?\" My heart froze. This time it was different I wasn't worried about another verbal attack I really wanted to feel Lissia's arms around me and I wanted to hold her.\n\nI turned around, \"Yes Dr. Wright?\" \n\nEvie was with her as they got closer I could see the devilish look in Evie's eyes, \"I think Dr. Wright need her grass cut.\" She cackled and walked away just howling.\n\nLissia was radiant, \"Oh Steven you were so wonderful in there. You handled Dr. Kaplan like a parent handles an obstreperous child.\" She was standing as closely as she dared, whispering, \"Can you come over this afternoon?\"\n\nYou could cut the heartbeats in mid air our desire for one another was so powerful and provocative, \"What time?\"\n\n\"I'm leaving now,\" she stated quickly.\n\n\"I need to get my things from the carrel. I'll be right behind you,\" I told her.\n\n\"Not too long baby...okay?\" Her words were so softly spoken they felt like a lingering kiss."
    ],
    "authorname": "earlkrementz",
    "tags": [
        "interracial romance",
        "interracial novella",
        "drama",
        "black man",
        "white woman"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-professor-ch-09"
}