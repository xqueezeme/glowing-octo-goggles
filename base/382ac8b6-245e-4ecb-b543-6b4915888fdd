{
    "title": "Christian College Sex Comedy Ch. 29",
    "pages": [
        "*Nymphomania, while enticing to consider, is still utter madness when experienced*\n\n(Frontma delivers yet again)\n\n(Starts off with good sex then tons of 'story' stuff)\n\n(Yes, this tale is supposed to be somewhat humorous and outrageous too. While not always comedic I'd like to think it is mostly a good-natured romp.)\n\n\n\n\nBarbie Lynn gazing down at me...I'm not sure another guy should ever see this because it could break one's heart to see it once and never again. She's built a faint sheen of sweat on her body already and she's looking at me with a definite Zen to fuck. My cock is cocooned deep inside her rectum, rubbing inside as she rotates forward on her hips.\n\nThe distant, dreamy look in her eyes flashes to alertness as she catches me looking at her; 'hi' she whispers. I nod and smile so she inclines into me so that we can start kissing. She leads in with her tongue along my lips. I touch the tip of her tongue with my own, snaking inside her mouth before we are done. She starts murmuring, deepens our kiss, and begins rubbing my nipples.\n\n\"Vivian?\" Valarie says softly. She snuck around the bed to settle behind my guardian.\n\n\"Yes?\" Vivian replies. She is on her side watching Barbie Lynn and I.\n\n\"I \u2013 ummm...\" Valarie moans. \n\nOut of the corner of my eye I catch it as Val's hand brushes Vivian's hair off her neck and her lips start suckling on the exposed flesh. Vivian closes her eyes briefly but doesn't move Valarie away.\n\n\"Oh, Baby,\" Barbie pants with barely an inch separating our lips, \"I know I say this often but I so love this. You tear me up inside and I want it so bad all the time, it scares me.\"\n\n\"Vaginal sex with you scares me,\" I tease back.\n\n\"Will it be even better?\" she draws in an even deeper, breast flaunting breath.\n\n\"You never know, but you are so damn good at everything else, I can't imagine you doing anything but haunting my dreams forever,\" I say, as I coax her movements with my hands on her hips, flanks, and thighs. Barbie shows her appreciation by running her hand through my bangs and pushing my hair back so that she can cover my forehead, eyes and nose with kisses.\n\n\"You like that romantic shit, don't you, Mercy-slut?\" Rio grumbles playfully from the other side.\n\n\"Yes,\" Mercy whispers. I know Rio well enough to know that when a spiteful reply isn't immediately forthcoming, she's dusting off (and unchaining) her Better Angel. Mercy is looking at Barbie Lynn and me, her head facing sideways as she lies on her back. Rio crawls on top of Mercy, prompting Mercy to open her legs, and locks her hands over her head to gaze down on her.\n\n\"Your skin is so pure, your hair so black, and your eyes so full of passion, it breaks my heart to look at you, My Little Whore,\" Rio begins. She leans in and bites Mercy's earlobe, causing her victim to moan and buck up slightly. \"Mercy, you give and give, making me so hot inside that I want to grab you and never let go.\"\n\n\"Really?\" Mercy gasps. \"I \u2013 \"\n\n\"Don't get used to this,\" Rio growls with famished sexual enticement. \"But \u2013 well, I want you to know that I hope all our children look just like you.\" Poor Rio was running out of material. It was terribly uncomfortable for me to show her where to go. I ran my hands over Barbie's body, which is an absolute torture I am forced to struggle through repeatedly.\n\nI start by massaging Barbie Lynn's tits, rotating three fingers over the nipples before rolling up the whole meaty breast in my palms. Barbie Lynn starts pushing back on my cock harder and grunting to the rhythm.\n\n\"Damn, Mercy,\" Rio teases, \"I love these titties.\" She accentuates by sucking the top third of one breast into her mouth and twirling her tongue around it.\n\nVivian gives a visible shiver from her side of the bed; Valarie has done something to her beneath the sheets to turn her on. In the interim while I have been watching Rio and Mercy, Valarie has been working over Vivian, temple to shoulder, with her lips. Now I see Vivian pulling up her left (upper) leg until it is resting snugly against my upper ribs, giving someone easier access to her snatch.\n\nShe's also put her left arm behind her back between herself and Valarie. I'm starting to wonder if there is something in the air filters of my place, some undiscovered aphrodisiac mold, fungi, or spores that turns nice, virtuous girls into promiscuous bi-sexual vixens. To the best of my knowledge and belief, neither Valarie nor Vivian had the slightest lesbian tendencies before they started coming to my room.\n\nI give Barbie Lynn's luscious orbs one final squeeze before migrating my hold down to her ass, giving each cheek a double-slap. Barbie Lynn exhales a huff of ecstatic relief as the impact travels through her. Rio smirks and follows suit, her hand reaching between their thighs, prying Mercy's leg up \u2013 up and up until Mercy's knee is nearly at her breast.\n\n\"Your body is the first female form that I've ever lusted after,\" Rio murmurs as she rubs and pats Mercy's buttocks. \"I think I've always wanted you, to taste you on my tongue, your scent strong in my mind and your sweet, sweet ass under my hand.\" Mercy brings one hand up to stroke Rio's cheek as she gives a strangled sob. No matter how much Mercy fears loving a woman, Rio can chisel that away and get her to love openly and freely.\n\nBarbie Lynn bounces up and slams down on me repeatedly as she is coming to the end of her fuse.\n\n\"Zane...Zane, oh yeah,\" she pants. Vivian chooses this moment to sneak her climax in on the rest of us. I am vaguely aware of her biting her lip, rocking her hips under the sheets, and perspiration beginning to bead on her lower lip.\n\n\"Holy God, Christ, and...my...hot damn...Val...ugh...Oh, God!\" Vivian squeals as Valarie vigorously whips her hand in a tight pattern, cloaked from sight but obvious to the knowledgeable. Vivian's clit, lips, and the gateway to her vagina are all supers-stimulated. Valarie cools her down and holds her with enough strength to stop Vivian from rolling face-first into the sheets.\n\n\"Jesus Loves Me!\" Barbie Lynn screams one last time. Her body bows, her breasts thrust forward and up, bouncing so deliciously while her thighs tremble in climax. Her anal muscles rippling from sphincter toward my cockhead are grinding me toward orgasm. Finally, she collapses against me, still twitching and fighting for breath.\n\nWith my arms wrapped around her, I roll us over toward Mercy and Rio, placing Barbie Lynn on her back. Barbie Lynn has her legs pulling back before I can even move to push them back. While I had never fully pulled out, I was nearly there. I shove my hips forward, forcing my penis back in hard, causing Barbie Lynn to grunt, her mouth to gape open, nostril flaring, as her eyes squeeze shut.\n\n\"Oh, hell, yeah,\" Barbie Lynn gasps, \"hammer me!\"\n\n\"Oh, fuck,\" Valarie moans, \"I am so lonely.\" Vivian is still roaming her hands over Valarie's special place, picking up the pace as she's inspired by Barbie Lynn's passion. Rio expresses her perverse nature by going at Mercy slow while the rest of us are going gangbusters.\n\n\"Here is my baby-smooth, tasty friend,\" Rio says as she kisses Mercy's bald twat. Rio pushes her thighs apart, her leg muscles taught while laying on the bed. Rio's restraint could only last so long. Every lick became more insistent, every nibble elicited a greater yelp, and every hip-thrust by Mercy into Rio's hungry mouth was more desperate.\n\nValarie gives off one long, cavernous growl, then screams in between Vivian's shoulder blades.\n\n\"Damn,\" Vivian whispers, as a sympathetic orgasmic shiver coasts through her body. I'm pushing up on my knuckles, Barbie Lynn's legs between them as I rise up until my bulbous head is fixed in her sphincter; then I slam down once more. She's rocking her hips up to maximize the depths I reach as she cries out, again and again and again.\n\nWhen I finally let go, I feel a volcano of lust, frustration, and fulfillment exploding out all at once. Barbie Lynn's head sways rapidly side to side as she comes unglued.\n\n\"Zane \u2013 Jesus loves me...Jesus Loves Me!\" she howls loud enough to shake the glass panels overhead. Those words ringing in my ears are going to haunt me in whatever church I go to.\n\n\"Ugh...ugh...ugh, Love...right there...feels so good,\" Mercy drags out with shallow breathes. \n\n\"Mmmm...\" Rio gurgles. Mercy has gotten quite wet and visibly aroused. I'm sure Rio has worked a finger or two into the action and in Mercy's butt. Mercy starts bouncing off the sheets as she hisses out the last of her restraint.\n\n\"Motherfuckergoddamn!\" Mercy cries out. Rio growls, slurps, and sucks up Mercy's pussy juice while lapping up and down her slit.\n\n\"That's my baby,\" Rio's fluid-marked face looks up from between Mercy's legs and smiles. \"Was that good for you?\" Rio asks? Mercy nods dreamily. \"Are you a happy little whore?\" Rio teases. Again, Mercy nods with pleasure. \"Did you use the 'L' word, Ass-fuck slut?\" Rio hardens.\n\nThis time Mercy realizes her mistake and shudders. She raises her head and looks into Rio's eyes.\n\n\"Yes. I'm sorry, Rio,\" Mercy mumbles.\n\n\"Sorry isn't going to cut it this time, Bitch,\" Rio sneers. \"Tomorrow morning you are going to get it coming and going...all day long.\" I am actually aware of what that threat means.\n\n\"Okay,\" Vivian sighed, with more contentment than annoyance, \"we've all cum so let's try and get some sleep.\"\n\n\"I haven't gotten off yet,\" Rio chuckled. I knew what I had to do before someone else volunteered my services.\n\n\"Come here, Rio.\" I smile to her and extend a hand. \"Let me get another taste of my best bro.\"\n\n\"I'll clean you up,\" Barbie Lynn grins up at me, as she wiggles her body around my own so she's on top again. She slithers down my torso, waggles my still mostly hard cock against her lips, then begins to take it into her mouth. Barbie Lynn's tongue licks along my shaft as she gobbles up more of my rod.\n\nI expect Rio to come over but Mercy, following along and lying on her belly, her head propped up on her hands and elbows as she watches my blonde angel's skilled fellatio, is a bonus. Rio ends up near my pillow, one hand on my chest and the other resting between Mercy's ass cheeks. Her fingers are definitely sliding in and out of Mercy's cunt. If Mercy is a bit sore, she's smart enough not to complain to her Mistress about it.\n\n\"What do you have in mind, Zane?\" Rio catches my gaze.\n\n\"I want your teeth tearing up the mattress with your ass up in the air as I plow you through the headboard,\" I inform her. I make a focus group assessment of the situation by slipping a finger into her pussy \u2013 she's creaming already.\n\nFor Rio, the greater physicality of the sex, the better it is for her. She'll let me have my foreplay and some good loving, but she goes wild over the raw, brutal act of sex itself.\n\n\"I think you are ready to put that smile on her face,\" Barbie Lynn taunts Rio as she informs me she's finished. \"Come with me,\" Barbie Lynn turns to Mercy. \"My nipples need some attention. Can you do that for me?\"\n\nAfter checking with Rio, Mercy gives a hungry look and lick of the lips at Barbie Lynn. Barbie crawls over Mercy to land on her back on the far side. Mercy twirls around and latches on to Barbie Lynn's left breast with such rapidity, it momentarily causes my visage to blur.\n\n\"I want some of that,\" Valarie suddenly blurts out. \n\nShe makes her own quick trek around Rio and me as we are still positioning ourselves to come swooping down on Barbie Lynn's right side. The right nipple disappears into our school biker girl's mouth with a decidedly audible smacking of the lips. Val's hand starts to stroke the inside of Barbie Lynn's thigh but Mercy's free hand reaches over and starts tweaking Valarie's closest nipple. Yes, I definitely must check the air filters.\n\nRio resumes her sensually crawl my way and I give her a beguiling look to lure her in. I'm on her in a flash once she's close enough for me to make my move. She screeches like an alley cat but I've got a hand on the back of her head and the other on her hip as I slam her face first into the pillow.\n\n\"Bastard,\" she screams through the fabric, but she's not following through with the anger.\n\n\"Give it up, Bitch,\" I snarl back. My cock slides full-throttle all the way into her cunt on the first pass. Her pussy feels like slick, melted butter as I bottom out in her hole. At the same time, I let up on her head a bit.\n\n\"Oh, fucking-A,\" Rio gasps. \"Did someone sneak a gerbil up behind me or is it Needle-dick pretending he's a man?\" I give her another powerful slam. \"Oh, fuck...stop that.\"\n\n\"What? Too much for the bitch whose had it all?\" I tease Rio.\n\n\"I swear...if I spit up...my ovaries,\" she chokes, \"we are...going to have...words.\"\n\n\"Words like I'm the best fuck you've ever had'?\" I taunt Rio between packing her vagina as full and deep as I can. She's squealing and moaning yet thrusting back strongly against me all the way.\n\nI move my hand off Rio's hip and take hold of a breast, squeezing and torturing the nipple. She's snarling like a wounded tigress now. She possesses no acceptance of defeat, no surrender to exhaustion, and no fear of pain; in fact, what we are doing is a turn-on. I'm actually becoming beaten up by all the impact of my hips against Rio's ass. Within ten minutes, her fluids are all over her crotch and mine and she's actually starting to dribble down her thighs and onto the mattress.\n\n\"Zane, don't forget she's your friend,\" Vivian sounds worried.\n\n\"Shut...up,\" gasps Rio, violently and with passion. This is what Rio craves right now, a brutal fucking, and she's not going to be denied by Vivian's compassionate sensibilities. \"Ah, fuck me...fuck me...break me, you bastard,\" Rio pants. \"Hammer me, Bitch!\" she screams, and that's all she can take. She has some sort of seizure, thrashing and pulsating all over the place.\n\nFor the second time tonight I'm shooting my seed into a woman; this time Rio's vagina. I plunder Rio's barely responsive form for several more savage thrusts until I'm spent, collapsing with my full mass on top of her, which is not my normal form but I want Rio to feel warm and encompassed by me at this moment.\n\nI make sure that some of my weight is taken onto my knees and elbows so I don't suffocate my crazy best friend.\n\n\"Zane,\" Rio pants a half-minute later, \"that vice-like bump you were feeling with that horse-cock of yours...\"\n\n\"Yes?\" I respond softly. I pull her hair out of her face as she turns it to the side so she can speak clearly.\n\n\"That was my cervix, dumbass,\" she giggles. \"Next time I want my uterus scrubbed, I'll call a fucking gynecologist.\"\n\n\"Hardy-har-har,\" I chuckle. \"Doing it with a Princess Barbie Pony Action Figure doesn't qualify as bestiality, you bimbo, and it certainly doesn't give you horse-cock experience.\"\n\n\"Rio, you are kind of gross,\" Vivian chastises my buddy.\n\n\"Thank you,\" Rio pants, \"I knew you cared.\"\n\n\n\n\"Behave, Rio, and next time it's going up your ass,\" I murmur into Rio's ear.\n\n\"Oh, that's just cold, Bro,\" Rio pouts as she wiggles her tight butt against my semi-flaccid cock.\n\n\"A person uses the threat of denying anal sex to a girl as a means of enforcing polite behavior,\" Vivian ponders as she flops on her back and stares up at the stars through the glass ceiling. \"Worse, it makes sense to me. What has happened to my life?\"\n\n\"Rio, are you okay?\" Mercy whispered.\n\nRio turns her head the other way to address her lover: \"My vagina is numb, my hips feel dislocated, I'll be pulling pillow fiber out of my teeth for a week, and I think he bruised a nipple \u2013 I feel fucking awesome.\" \n\n\"I'd ask Zane to do it to me again but I know Vivian would choke me out,\" Rio snickers. \"I know what I am going to do, though: In the morning I'm going to have Zane pounding your butt as hard as he fucked me right now so I can hear you cry and scream.\"\n\n\"Um, okay,\" Mercy answered, trying not to sound too anxious.\n\n\"Damn,\" Valarie mutters. \"I hate being a virgin, and I'll pimp slap the first one who suggests anal sex. All I want to do is get laid without the repercussions.\" No one said anything for a minute.\n\n\"I'll help with that,\" Barbie Lynn and I volunteered almost at the same time.\n\n\"Bed,\" Vivian laid down the law. Thankfully, the rest of us were too tired to argue.\n\n\n\nPOWER PLAYFULNESS\n\n\n\nAt our five a.m. wake up, I swept up Valarie into a six-nine, her on top. Barbie quickly got behind Val and began licking my nose, the back of Val's cunt, and teasing her butthole with tiny probes. At first our biker babe resisted and grumbled with her mouth around my cock, but Barbie Lynn was as relentless as she was sensually enticing.\n\nVal returned the surprise by slamming her thighs together as the dam of her sexual frustration burst; she clamped her thighs tightly on my head and bucked so hard she bounced us off the bed as she screamed. There were no words to it; the scream was primal, violent and somewhat frightening. The other remarkable thing was that Barbie Lynn retained her hold on Valarie's ass cheeks and kept tongue-fucking Val's anus.\n\nValarie's mouth had released my cock seconds before orgasm. She gave it an occasional swipe of the tongue until her last orgasmic quivers stopped. I motioned for Barbie to let up and when she did, Valarie collapsed beside me.\n\n\"Oh,\" Valarie panted, \"that was good. That should tide me over until lunch time.\"\n\n\"Showers, everyone,\" Vivian reminded us. There were a few groans but cleanliness was an inevitable bonus for all of us \u2013 and Rio, if we bundled her up and took her squirming, griping form with us. Rio gained a measure of revenge by announcing to my shower buddies that I had an unresolved morning blowjob begging for attention. Brandi elbowed two girls aside to bend over at the waist and take me in.\n\n\n\nOpal was kind enough to stroke Brandi's kitty from behind, getting us off almost at the same time. Opal gave me several finger scoops of Brandi's nectar to slake my sexual thirst. I was busy getting a taste of Opal with a bonus clitoris massage when Iona dragged me away. Outside the showers, I bent down, wrapped my arms beneath Iona's towel-clad posterior, and lifted her up so that she was looking down at me.\n\n\"Thank you,\" I smiled at her. \"You've always got my back.\"\n\n\"You are welcome,\" she beamed happiness back down at me, \"and it is my pleasure, Zane. Do you think we can go motorcycle shopping Thursday?\"\n\n\"Sure, that won't be \u2013 oh fuck, it's Wednesday,\" I gasped. I realized I had confused Iona.\n\n\"I told Erin I would call her Monday and totally lost track...of a woman,\" I blinked. \"I don't think that's ever happened before.\"\n\n\"You have a ton of things going on,\" Iona comforted me while hovering above me still. \"I think she'll understand.\"\n\n\"Thanks again, Iona,\" I sighed as I let her slide down my body.\n\n\"Can I sleep with you tonight?\" she asked.\n\n\"Of course,\" I grinned. \"Are you going to give me your scrumptious behind?\" Iona's smile grew even brighter.\n\n\"You will have to wait and see,\" she teased me before racing off to her room. I made my way up to my room for a short workout and a few minutes meditating. I was peripherally aware of Paige coming into my room and rummaging around (i.e., she wanted me to know she was there without noticeably ruining my concentration).\n\nThe main distraction was Rio and Mercy getting dressed. They had both long since moved all their belongings into my place; that wasn't a problem because of the massive space I had. The problem was, it is insane to put two pseudo-lesbian young lovers who are new to their relationship into a space where they are constantly tantalized by each other's naked or scantily clad bodies.\n\nMercy couldn't resist reaching out shyly and touching Rio's lesser erogenous zones. Rio couldn't resist bending Mercy over the bed, licking her from behind, and/or spanking her \u2013 just a few taps but that hardly helped them get their clothes on. Today, Rio added the extra complication of inserting a vibrating butt plug into Mercy's butt and taping a vibrating egg against her clit.",
        "She was finishing up the work when I felt a glimmer of evil intellect enter my mind.\n\n\"Hey, Rio, why don't you do the same thing?\" I suggested.\n\n\"Are you going to ring my bell?\" she teased me.\n\n\"No. I actually thought you would share with Mercy,\" I clarified.\n\n\"Share what?\" Valarie questioned as she entered the room.\n\n\"They are each going to have a vaginal and anal stimulation device, theoretically with the other having the controlling mechanism,\" Paige stated. She held up two pairs of bra & panties for me to examine \u2013 gossamer peach bow-knot or strawberry crotchless/cupless.\n\n\"I don't know, Babe,\" I mused. \"I'd have to see you naked to make a determination.\"\n\n\"You've seen me naked, my Boy-toy,\" Paige gave a wicked turn of the lip.\n\n\"I \u2013 I have no recollection of it,\" I confessed. \"Maybe it was that blow Rio gave me upside my head. I guess I need to see your nude, nubile form once more.\"\n\n\"Oh, my poor baby,\" Paige pouted. \"Someone as helpless as you cannot afford to lose any of your already inadequate brain power. I really should help you out.\" She was knee crawling up the bed, unbuttoning her shirt. When she was only a few feet in front of me, she sat down and worked her skirt off as well. She wasn't naked; she still had her knee-high socks on.\n\n\"You really ought to cover those little boobies up,\" Rio taunted Paige. \"Someone is going to think Zane has a middle-schooler up here.\" Paige's head turned and I could feel her anger, but before she could spew forth her vitriol, I latched on hungrily to her closest teat and sucked it in on one gulp. Paige gasped and thrust her body against me. Soon her hands were running through my hair as I soaked up her tender flesh and swelling nipple.\n\nI also stroked my hands down her body. My left hand drifted from right below her suckled breast, along her smooth, flat stomach, before dropping south until I cupped her sex. My right hand went down the ribs and around to her ass. I weighed and fondled her small yet firm buttocks, then reached between her cheeks and rubbed over her sphincter without pressuring it.\n\n\"Paige,\" I said quietly as I released her nipple, \"today go with the peach.\"\n\n\"Umm...maybe I will,\" Paige teased me with a nibble to my neck, \"after all, there are a very few things you are good at, and female sexiness is one of them.\"\n\n\"Paige?\" I continued. She was a little more suspicious now. Our relationship had always been rocky.\n\n\"I appreciate you giving me some space the last few days,\" I thanked her. \"It has really helped me get my head on straight.\" Paige's eyes lit up once more. She had sacrificed (in her mind), and I had noticed and was grateful.\n\n\"I'm surprised you noticed,\" she started to say, then abruptly softened. \"You mean a lot to me, you really do.\"\n\nI put my hands on each side of her jaw and pulled her into close face-to-face contact.\n\n\"Paige, bouncy, bouncy,\" I whispered into her ear. Paige gasped slightly and twisted her head to make eye contact, looking somewhat expectant.\n\n\"Meet me for lunch and I'm going break that ass open,\" I taunted her quietly.\n\nRocky the squirrel must have snuck up on me and then clubbed me with Bullwinkle the Moose because her response was,\n\n\"Okay,\" while she looked at me with a mixture of fear and lust.\n\n\"Are you sure?\" I was curious.\n\n\"If that is what you really want,\" Paige responded.\n\n\"Oh, I don't want to do it until you feel ready, Paige. We'll wait,\" I confessed. \"I will have to think of something else to do with you at lunch today.\" All Paige did was grin in a very mysterious way. She held that look until Valarie put a hand on each butt cheek and pulled them apart. This time, someone had snuck up on Paige.\n\n\"Hey!\" Paige gasped. \"What are you doing?\"\n\n\"Encouraging you to get dressed,\" Valarie chuckled. \"Otherwise, Zane and I are going to slip one finger into your pretty little cunt and rub them in and out like a buzz-saw. Then we will smear your juices over your face and force you to go to breakfast smelling like sex.\"\n\nMy girls really need to work on their 'discouraging' speeches.\n\n\"I should get dressed,\" Paige hiccupped with reluctance. \"Peaches \u2013 got it.\" Paige scurried away and began dressing while eyeing Valarie and me.\n\n\"Oh, yeah,\" I joked with Valarie, \"that terrified her.\"\n\n\"Ask her about the party; then it will make sense,\" Valarie snickered. \n\nIn the annals of female migration through my bedroom, Vivian wasn't really sneaking up on anyone, but her presence didn't send up shockwaves of alarm either.\n\n\"Zane, we need to be heading out soon,\" she greeted me. She greeted Valarie by putting a hand on her shoulder and rubbing it.\n\nQuickly enough, Paige got dressed, Rio and Mercy got their acts together, and we gathered up Iona, Barbie Lynn, Brandi and Opal before heading down to join the rest of feminine humanity that constituted my dorm. My old (way back in Chapter 3) buddy Easter Valentine had me rate the top ten Christian Rock bands which was made much more difficult by my utter disbelief that there was actually something called Christian Rock \u2013 color me biased.\n\nBreakfast passed uneventfully, as did Assembly, before things began happening. First off, I touched base with Erin now that she was most likely awake.\n\n\"Hey Erin, this is Zane,\" I started off, \"and I am so sorry that I blanked on my promise to call you. Can I make it up to you and Gerry?\"\n\n\"Oh,um,okay, I guess,\" she drew me out. \"What do you have in mind?\" That was a good question; what was I going to do to make it up to them?\n\n\"Have you ever heard of the SYFY network?\" I asked.\n\n\"Sure \u2013 Eureka, Warehouse 13, Being Human, and Lost Girl,\" she answered.\n\n\"Saturday night they are showing Ice Spiders versus Snow Beast \u2013 I know, great title; right? And I'd like it if you two would come over to my house, get some pizza, and watch it with me,\" I offered.\n\n\"Let me think about it...yeah, we'd be glad to come by and eat something,\" I could feel her grin coming through the airwaves.\n\n\"Okay, one more question; how do you feel about three-ways?\"\n\n\"I've never been part of one but I'm willing to give it a try,\" Erin sighed happily, \"if I must.\"\n\n\"It's a date, then,\" I agreed, and after trading 'goodbye's', I hung up and caught my crew gathering outside. As I made my approach I saw Heaven give me a look and a smile then turn on Rio.\n\n\"Handmaiden's Duty, Rio,\" Heaven beamed maliciously.\n\n\"What do you want, you old cow?\" Rio sneered right back.\n\n\"Give me your controllers.\" Heaven grinned as she held out her hand to Rio. Mercy gulped (the two boxes controlled her vibrators) and Rio looked stunned.  \"Hand them over.\" Technical Mercy would have been immune \u2013 except it was Rio with her controllers.\n\n\"How?\" Rio mumbled. She looked around for support but found some sympathetic eyes, not comrades in arms. She angrily slapped Heaven's palm as she handed them over.\n\nHeaven handed those two small white devices to Hope, then reached out toward Rio once more.\n\n\"Give me the ones Mercy is holding for you, too,\" Heaven snickered. Rio snarled before motioning for Mercy to hand them over to her. In short order, she handed those over to Heaven as well.\n\n\"I'll be expecting those back at ten o'clock (one hour from now),\" Rio growled.\n\n\"Of course,\" Heaven chuckled. \"I'll see you then, Sweet-cheeks.\"\n\n\"God damn it,\" Rio leaned into me and whispered, \"who \u2013 aaahhh...mmm...betrayed me?\" Apparently, someone was playing with her controllers. By the way Mercy developed a little tremble and a blissful smile, someone was having a go at her too.\n\n\"I swear to God, it wasn't me,\" I shrugged.\n\n\"Well, it wasn't Iona \u2013 she'd never do that to Mercy,\" Rio mused, then, \"Paige! That little cunt did this to me.\"\n\n\"I don't know if she did it or not,\" I pleaded, \"but please don't kill her.\" Rio was several seconds in responding as she wobbled slightly and skipped a step.\n\n\"Two fucking vibrators,\" Rio glared at me. \"What were you thinking?\"\n\n\"Liking it?\" I teased.\n\n\"Love it,\" Rio gasped. \"Mercy?\" \n\n\"Mmmphf,\" Mercy gasped. Added to the smile on her lips, I had to see that as an affirmative.\n\nMs. Goodswell's class was good but what came afterwards was far more amusing.\n\n\"What do you mean, you traded them to some random upperclassmen?\" Rio snarled.\n\n\"Oh, I had to explain what they did. When I told them they were inside you, they jumped at the chance,\" Hope nodded serenely to the furious Rio.\n\n\"How am I...oh...oh...oh, yeah...supposed to get them back?\" Rio fumed.\n\n\"Maybe they will run out of power soon,\" Mercy put a positive spin on things.\n\n\"I put long-life batteries in those bitches this morning,\" Rio grumbled. \"They can go for 24 hours of continuous use.\"\n\n\"I insisted that they be returned to Zane at nine this evening,\" Christina said in a detached manner.\n\n\"I swear, I'm going to tie down all you bitches one weekend and then we will see who's so superior,\" Rio seethed; \"Dildos and lube all around. Aaaarrghhhh,\" Rio growled. She staggered over to the closest wall and put her hand against it to stop from falling over. \"Some whore just discovered the '10' setting,\" she gasped.\n\n\"I was going to say something cruel,\" Hope stated, \"but now it would be redundant.\"\n\n\"Rio and Mercy, stay hydrated,\" Chastity suggested. \"I'll pick you up between classes to...decrease your difficulties.\"\n\n\"Thanks, Chastity,\" I patted her arm.\n\n\"Heaven and I will watch after Mercy,\" Christina chimed in; being surprisingly helpful to someone she had shown no interest in before now. Christina was all about responsibility and since this was Heaven's stunt (or so it seemed), she was doing 'the right thing'.\n\n\"Classes everyone,\" Vivian insisted. Thankfully I had one capable adult in my life. I hoped that me turning her into a vibrant bi-sexual didn't change that.\n\nToday I received an hour's warning of my lunch appointment with Dr. Victoria Scarlett, our beloved Vice-Chancellor. I let Paige know that I had to postpone our get-together.\n\n\"It is good to see you...\" she was going to say 'Mr. Braxton' but she was sensitive to my preferences, \"...Zane. How are things going on this first full day of our experiment?\"\n\n\"Well, Dr. Scarlett, let me say that you are even more deftly beautiful than you are deceptively manipulative,\" I countered. \"As to your question, my efforts to corrupt your intentions precede a pace.\" She smiled, shook her head, and walked around the table, stopping when she was in front of my chair-bound form.\n\n\"Come now; the tribal elections have begun. Seven leaders have been named and the rest of the tribes should do the same tonight,\" she informed me. \"What were you able to accomplish yesterday?\" Oh, so that was today's tune. I stood up and cupped her facial cheeks.\n\n\"What do you think you are doing?\" Victoria Scarlett mumbled.\n\nI pressed in and kissed her, leading by example as opposed to words. Her hands pressed against me. She wasn't shoving so I didn't stop. Victoria didn't even make a token effort to keep her mouth shut, though her tongue refused to play an overly active part in my French kiss. My hands didn't wander and my body didn't thrust against her.\n\n\n\n\"I think I'm working out our relationship \u2013 your Kahina to my Pelagius,\" I responded, our faces only inches apart. Victoria rested her hands on my hips so I placed mine on her shoulders.\n\n\"Kahina...have you been reading my works?\" she smiled far too seductively. You would figure that a dedicated, righteous Christian theoretician would have body proximity issues.  Not Victoria, damn it.\n\n\"The only things hotter than smart, sexy chicks are smart, sexy, and sensually lethal chicks,\" I allowed.\n\n\"This could be construed as sexual harassment or inappropriate sexual behavior,\" Dr. Scarlett grinned, all bold and gracious.\n\n\"A 'no' on your part would suffice,\" I assured her.\n\n\"Not you, Zane; me,\" she corrected me. \"You are my student, after all, and my hands are on your hips.\" I arched an eyebrow; she kept smiling so I went back in for a kiss. Three minutes later I had worked over her lips, eyelids, cheeks, jawline, and the left side of her neck...and it was getting me nowhere except closer to a sexual-deprivation induced coma.\n\n\"Damn, you are good,\" I panted.\n\n\"I think this is something we need to work through first before we can constructively move on,\" she related patiently. She was trying to break me with her highly developed self-control. I had to figure out what the hell I was doing wrong. Overt sexual contact \u2013 breasts, buttocks, pubic area \u2013 was off-limits...or was it? Lingerie; why did Scarlett wear racy lingerie?\n\nI slipped my arms around Victoria's waist and pulled her off the desk and into me. I caught a slight, over-confident smirk on her lips. We started kissing again, Scarlett somewhat passively, as always, and me out to disguise my intentions. She didn't protest when my fingers wandered below the beltline or when I traced out the very risqu\u00e9 lines of her panties.\n\nFighting the urge to yank them up and make her squirm, I languidly let my fingers dig into her skirt and hook the bottom elastic of her panties, then slowly wiggled the fabric gently. She gave me a few uninterrupted seconds before I sensed her inner struggle begin; did she stop me and give me this round in the struggle \u2013 a psychological edge over her \u2013 or did she see if she could tough it out. She went with the spiritual resistance.\n\nOnce I had my fingers inside, I could move freely forward and back. I avoided the pussy and the bottom of her ass. I was able to make the bottom of her panties a very tight fit, allowing the thrumming of my tugs to vibrate along her most sensitive spots. Victoria's nostrils flared, her breath caught, and after a daring but futile attempt to distract me with her tongue, she broke our lip embrace and put her head on my shoulder.\n\nI immediately stopped what I was doing and waited for her to speak.\n\n\"Oh, this is not good,\" she muttered to herself. Then after a pause, \"Thank you for stopping. How did you know what to do?\"\n\n\"Where to begin,\" I answered. \"You are beautiful, passionate, and a woman who appreciates fine fabrics on your skin. I stopped because I'll fight you with every tool I can, but I won't violate you,\" I added. Victoria looked up into my eyes.\n\n\"You see me as Kahina?\" she changed the subject.\n\n\"You have this tragic, fervent yet noble character that charges with a burning blade into the face of adversity,\" I waxed romantic. \"The last Christian Queen of the Berbers who, when faced with the inevitability of her defeat, sent her sons to the enemy for their protection while she sought death in battle against the Islamic invaders.\"\n\n\"I'm not very martial,\" she countered.\n\n\"Ah, but in the Greco-Roman culture our faith grew up in, you would be considered a Patrician's daughter, versed in Socrates and Virgil as well as St. Augustine,\" I made my argument. \"Besides, martial valor is in the job of the tribesmen; it is the job of the Queen to provide leadership \u2013 hopefully in the right direction. You are a smart damn cookie so the comparison is apt.\"\n\n\"Thank you.\" She then pursued her agenda. \"What have you been up to?\"\n\n\"I'm creating a democratic system with your tribal leaders as the parliament, a selected group of girls to become judges, and another group to become enforcers of the rule of law,\" I responded. \"Technically, I remain the guy at the top of the pyramid, so that's a victory for you.\"\n\nHer look told me I hadn't made an end-run around her Grand Plan, which was pretty unsettling. I was missing something.\n\n\"Why do you let me put my hands on you?\" I questioned.\n\n\"I can't take pleasure in the mannerisms of a proficient young man?\" she countered.\n\n\"Care to prove that?\" I challenged. I had her in a minor trap of her own connivance.\n\n\"Very well,\" she bowed with a smile on her lips.\n\n\"Turn around and lean over your desk, if you dare?\" I directed. She accepted my orders and did as requested. I knelt down behind her and placed my hands on her ankles before rubbing upward in slow but strong finger-furrows.\n\nI teased my way up to her stocking line, grinding the silk hose into her skin, making her flesh shiver from the stimulation. I had her trembling by the time I migrated upwards to the elastic at the top of the stocking, past the garter, and onto her pliant warm thigh. As I brushed against the tuck of her butt-cheek and thigh, Victoria moaned.\n\n\"Stop,\" she whispered.\n\n\"Do you really want me to stop,\" I inquired, \"or do you want me to stop before you reveal something?\" I ceased my activities, waiting on her reply.\n\n\"You know the answer,\" she panted briefly. I moved off and up, placing my hands on her shoulders and pulling her back up to my chest.\n\n\"Can you promise me to consider the possibility that a woman wants something outside the realm of motherhood and spiritual purity?\" I suggested. Dr. Scarlett turned around while remaining in my grasp.\n\n\"The body may feel a certain way but you must resist those impulses from the Devil,\" she told me. \"Fortunately, you are the only one on campus that can elicit such response.\"\n\n\"Huh? Seriously, I can only imagine the kind of sexual trouble the women on campus can get into \u2013 unless you don't believe in Sapphic impulses either,\" I grinned.\n\n\"Homosexuality is a myth,\" Victoria stated firmly. \"There are misdirected desires and abnormal passions, but men don't lie with men and women don't lie with women, except as a perversion of the normal, natural order of things.\"\n\nOh, here we go again, I groaned.\n\n\"I hate that you would think that way. It stands in opposition to God's Love in my eyes and portrays you as a weak creature given over to the Devil's lure of fearing, hating, and even denying what is mostly a good thing \u2013 namely, compassion for one another,\" I sighed.\n\n\"How can you have compassion for instincts you can hardly understand?\" she posed.\n\n\"I've been with men before,\" I informed her; \"on more than one occasion.\"\n\n\"What?\" Victoria was stunned. She struggled to get away from my arms and I let her. \"You have such a strong ardor for so many female students. How can you be tricked into perverse practices?\"\n\nOn the bright side, I'd finally gotten under her cool exterior; on the downside, I had shaken her faith in me.\n\n\"Can I incite a rational moment, please?\" I said calmly. She was halfway around the desk when she stopped and nodded.\n\n\"Okay,\" the Vice-Chancellor responded with a careful edge.\n\n\"How am I any different than the man you thought me to be two minutes ago?\" I led off. \"I certainly liked your body and you appeared to appreciate the touches I gave you. How does anything I did with anyone else before touching you matter? You are very attractive to me. Am I now repulsive to you?\"\n\n\"Those are multiple questions,\" Victoria seemed suddenly weary. \"You are the same person you were a minute ago, but I had forgotten that you are a boy, not a man, and boys have infatuations with unusual, rebellious ideas. With your Father dead, it seems you were rudderless. You are definitely not repulsive to me. I admire you, but you also reveal yourself to be immature. Would you please leave? I need to reconsider some things.\"\n\n\"No,\" I replied.\n\n\"No? No, you won't leave, or no, I've committed some grievous error?\" she inquired.\n\n\"You believe I'm a boy, you don't believe in homosexuality,\" I answered, though I fondly day-dreamed of Victoria and Barbie Lynn \u2013 or Hudson Lane, the school lawyer \u2013 in a lesbian tryst, \"but I don't want your newfound doubts in me making you change \u2013 specifically how you treat yourself.\"\n\n\"You want me to keep wearing lingerie,\" she sliced to the heart of the matter.\n\n\"It is a simple pleasure you allow yourself, the only one I can detect. I will certainly be a source of displeasure for you in the future; don't let me do you harm over my careless confession,\" I pleaded.\n\n\"My indulgence is a form of weakness,\" she argued.",
        "\"Wrong,\" I fought back. \"It is a 'fuck you' to temptation. It makes you stronger. Dr. Scarlett, I have never had a woman hold out as long as you did this afternoon. If you change the way you dress, then I win and you lose because I've proven you don't have faith in your own convictions.\"\n\nVictoria was contemplative for a moment, frowning, then slowly letting a smile win out.\n\n\"Come here,\" she beckoned. I came up and she kissed me \u2013 not a fevered rush but a smooth, subtle thing, driven by curiosity more than passion. \"You are going to require more work than I imagined,\" she eventually commented.\n\n\"Have you forgiven me?\" I asked. \"Have I returned to being a good boy?\"\n\n\"Yes and yes.\"\n\n\"Does this mean I can cop a feel? Ya know, a freebie?\" I hoped. She kept looking up at me as she studied my features.\n\n\"You are going to be a whole lot of work, Zane,\" she answered, \"and no, no free fondling of my private parts.\" I growled up at the ceiling.\n\n\"Damn it, woman,\" I snarled. \"Stop trying to break me to your will.\"\n\n\"Mr. Braxton,\" she patted me on the cheek, \"I have no idea what you are talking about.\"\n\nYeah, right.\n\n\n\nWE'VE COME SO FAR\n\n\n\nThe Festivities Committee broke up once more. I was helping Mrs. Jaspers to her car since she'd taken a tumble in her home and her ankle was a bit sore. I had to return to the conference room to find my usual crowd of women overstaying the meeting \u2013 Mrs. Sahara Penny, Kendra Bainbridge, and Rochelle Wellington.\n\n\"Hello, Kendra. Those frills around your collar are very enticing to the eye,\" I jibed. \"Did you come tonight with some ulterior motive?\"\n\n\"No!\" she snapped. \"I am not that kind of woman.\"\n\n\"Technically, if you've had children, you are that kind of woman,\" Sahara chimed in.\n\n\"I am not a fornicator,\" Kendra defended herself.\n\n\"No one said you were,\" Rochelle smiled at her rival's discomfort. \"All Zane did was give you a compliment and a gentle teasing.\"\n\n\"After his 'date' with the Reverend's wife, I am not sure any of us can be considered safe from Mr. Braxton's intentions,\" Kendra spat. Sahara's laugh was musical.\n\n\"Yes, Kendra, I was positively scandalized that Zane would approach me with such blasphemous intentions as the Gospel of Judas, Pistis Sophia, and the origins of God's true word,\" Sahara grinned too sweetly.\n\n\"I am sure that is what was on his mind,\" Kendra insinuated. She was probably coming to regret being tricked into talking to the Preacher's wife.\n\n\"What would that be?\" Rochelle prodded. \n\nKendra's mouth gaped. \"Well, we all know what Mr. Braxton is up to at school,\" she rebounded snootily.\n\n\"Oh, so you have seen his website,\" Sahara pointed out. Kendra turned a deep shade of red.\n\n\"Well \u2013 I \u2013 with everything going on,\" she sputtered, \"we need to know how to keep our daughters safe.\"\n\n\"Oh, Kendra, I agree,\" Rochelle smiled my way. \"I think we can all agree that young Ms. Masters (Barbie Lynn) was lucky to escape Zane's clutches.\"\n\n\"Yes,\" Sahara added sternly, \"apparently she's been lucky on a nightly basis.\" Hey, now! Why is everybody picking on me? Half the time she's on top.\n\n\"You make it sound like she enjoys...that \u2013 what he does to her,\" Kendra fought back.\n\n\"Yes,\" sighed Sahara, \"I can understand how horrible it must be to be crying out God's name while having sex.\"\n\n\"Several times a night,\" Rochelle added. \"I have such sympathy for the poor girl.\"\n\n\"You do know that it is plausible Ms. Masters seeks me out for our mutual enjoyment,\" I groused. \"After all, it's my bedroom and my shower we are seen in.\"\n\n\"The Devil is known to be a great seducer,\" Kendra countered. \"You've lured her into debauched behavior.\"\n\n\"Oh, well...Kendra, you are on to me. I guess my deep-seated lust for you will remain unquenched,\" I groaned.\n\n\"That's not fair,\" Rochelle chided me. \"You are neither a tool of the Devil nor prone to give up on anything you desire, so apologize to Kendra for the sarcasm.\"\n\n\"I apologize for making light of your concerns, Mrs. Bainbridge,\" I nodded toward Kendra.\n\n\"Very well,\" Kendra snorted. \"Perhaps counseling with Pastor William would do you some good.\" Oh, like that was going to happen; I was right in ol' Bill's preferred age range and gender. Added to that, I had sort of threatened to have him murdered for threatening Sahara Monday night.\n\n\"I would prefer to be guided by someone I didn't have a desire to toss out of a fast moving aircraft,\" I allowed myself to say. Kendra gasped, Sahara became very still, and Rochelle choked.\n\n\"Wha- \u2013 what makes you say that?\" Sahara asked cautiously.\n\n\"He insulted my Uncle Tim within the hearing of Aunt Jill,\" I answered. \"I really couldn't stand Uncle Tim but would rather put my hand in a garbage disposal than let someone cause her pain. He apologized at that time but I have not forgotten.\"\n\n\"Have you ever worried about being a bit too bloody?\" Rochelle cautioned me.\n\n\"I ask a lot out of life; I risk more than most and I accept that the price I pay may be higher,\" I replied. \"I believe in the Rule of Law and I believe in punishing the wicked who attempt to abuse the rules for their own agenda. If the price is blood, then blood it shall be; if I can get a heartfelt repentance instead, so much the better.\"\n\n\"Aren't you simply forcing your world view on everyone else?\" Rochelle questioned me.\n\n\"Absolutely,\" I admitted. \"My world view is relatively easy to understand; keep to your word, accept that others will be different, and live and let live. I would prefer that my friends and I be left alone. If I have to use physical force to protect my views, I can live with that.\"\n\n\"What of the Christian virtues of forgiveness and 'do no harm'?\" Sahara countered.\n\n\"I make a lousy Christian at times,\" I looked embarrassed.\n\n\"You seem to have very little time for Christ in your life,\" Kendra responded snidely.\n\n\"Really?\" I muse. \"I go to church six days a week, I get quizzed on some sort of Bible lore at least twice a day, and I come to this meeting once a week. I know sin is not a balancing act but I think I do some good.\"\n\n\"Maybe if you gave less energy to carnal pursuits and more to Christian righteousness, you wouldn't have so many sins to balance,\" Kendra pronounced.\n\n\"And here we are, three women of relatively good looks, discussing righteousness and virtue, Kendra,\" Sahara smiled. Kendra gawked at her. \"Yes, I imagine I looked something like you look now when I saw Zane's devious trap Monday night.\"\n\n\"What do you mean? We are talking about Zane's sexual lifestyle,\" Kendra rebutted.\n\n\"No. You are talking about Zane's sex life; the rest of us are talking about sin, forgiveness, and virtue,\" Rochelle smiled in a superior manner.\n\n\"But \u2013 but you...both \u2013\" Kendra stammered.\n\n\"I asked Zane about his world view,\" Rochelle corrected.\n\n\"And I asked him about Christian forgiveness and 'do no harm', as I recall,\" Sahara smiled sedately. Kendra gaped like a fish out of water.\n\n\"Yes, but now that I know about Mrs. Bainbridge's obsession with my bedroom antics, I'll make sure to show her more attention,\" I nodded. \"I mean, there is an attraction that mature women possess that girls cannot equal.\n\nThere was a long silence that followed that statement.\n\n\"Zane, you wouldn't dare do...all...all of those lewd acts to one of us, would you?\" Kendra stuttered.\n\n\"I can't imagine what would make me refuse consensual sex with anyone in this room,\" I grinned at her.\n\n\"But we are married women,\" Rochelle teased me.\n\n\"Thus consensual \u2013 I don't want to break up a happily married couple but I don't like seeing a woman trapped in a relationship solely because she thinks there are no other options,\" I explained. \"Women deserve to be free...and quite frankly, unhappily married women have built up an exciting reservoir of carnal energy.\"\n\n\"Zane, I find it difficult to believe that a young man as kind to this committee as you have been would make us disrobe one article of clothing, run your rough hands over every inch of our bodies, and then force us to perform all kinds of vile sexual acts on and for you,\" Rochelle kept taunting me. My guess was that she was really pissed on learning her husband was having an affair with one of his employees in the Mayor's office.\n\n\"You wouldn't do that to Kendra, would you, Zane?\" Sahara quizzed me.\n\n\"What do you mean?\" I seemed confused. \"She's one of the hottest MILF's in the parish; all the guys in Bible Study say so.\"\n\n\"Wha \u2013 what?\" Kendra gulped.\n\n\"MILF \u2013 Mothers I'd Like to F...ornicate with,\" I told her.\n\n\"I know that!\" Kendra snapped, clearly disoriented and unsure of herself.\n\n\"Certainly you've noticed the men's eyes follow you around the church every Sunday after service?\" I questioned Kendra.\n\n\"No,\" she gasped.\n\n\"Mrs. Bainbridge, I know you don't think much of me or my opinions, but I think you can believe that I have an appreciation of women's physiques. I'm pretty good at determining a woman's attractiveness,\" I said. I find most women to be enticing, but telling Kendra that wouldn't help my case. \"You possess female features men want in a lover. It is not your fault; God made you that way.\"\n\n\"Don't you bend Kendra over this desk and have your way with her after Mrs. Penny and I leave,\" Rochelle threatened me playfully as she stood to go. Sahara made for the door as well.\n\n\"Can I walk you to your car?\" I asked Kendra.\n\n\"No! No, I'll be okay,\" Kendra scurried from the room first.\n\nI stepped out into the hall with Sahara and Rochelle.\n\n\"That was cruel,\" Rochelle stated.\n\n\"I'm sorry,\" I apologized.\n\n\"I was talking to Mrs. Penny,\" Rochelle corrected.\n\n\"Yes, yes it was,\" Sahara smiled at us. What the hell had I created with those two? I had made allies. I'd also talked myself out of sex with Rochelle for the night, but I thought she would survive a few days without my amorous attentions."
    ],
    "authorname": "FinalStand",
    "tags": [
        "college",
        "humor",
        "lesbian",
        "anal sex",
        "albino",
        "cunnilingus",
        "teacher",
        "blowjob",
        "vice-chancellor",
        "vibrator"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/christian-college-sex-comedy-ch-29"
}