{
    "title": "Mercury Retrograde",
    "pages": [
        "Big Alice was always hungry. \n\nAnd with her skilled hands on the controls it was Stephanie \"Roulette\" MacBaren's job to keep the big bitch fed.\n\nFollowing a path laid down by two seasons of steady work, Rue guided the insanely massive paddle wheel excavator on its way up and over a lobate scarp that made the big machine work for its meal. The slow turning blades in the front -- each \"tooth\" carving out a three-ton scoop of powdery silica regolith and tossing it into the hopper as they rotated -- dug the offending hillock down another ten feet as they and the treads dragged \"Big Alice\" up the stony face and over. With a jar, the massive machine settled back onto the more leveled ground and moved forward more easily. \n\nEating more and more of the surface of Mercury as it went. \n\nThe speaker above her head crackled and squawked. ~\"Roulette?\"~ \n\nGrabbing down the mic, Rue put it close to he lips and pressed the side button. \"Yeah, Minnow, what the hell do you need now?\"\n\n~\"What the fuck was that?\"~ A sound like metal on metal clattered through the speaker.~\"You just jarred all the tools out my toolbox down here! I'm trying to rebuild chiller three and now I've got parts and spanners scattered all to hell and gone.\"~\n\n\"Sorry about that. Alice just took another bite out Hill-167424.\" Another shuddered quaked through the excavator, but then it leveled and rumbled forward at its normal steady pace. \"It's all flatlands for the 20 hours, give or take.\"\n\n~\"Rodger that. Just no more wheelies, how about it?\"~\n\nRue laughed at the idea of a 65ton -- Mercury-weight, at that -- excavator managing a \"wheelie\" in any fashion. Hanging up the mic, she checked her rear cameras. Hill-167424 wasn't even half the mountain it had been, to begin with, but the monitors showed the trailing ass of \"Big Alice\" crawling caterpillar-like over the smaller bump. A hod-tender robot peeled away from its flanks and scooped up the compacted \"shit-brick\" of Mercury ore that Alice had dropped in its wake and darted away at speeds the big crawler could only envy. Roulette absently watched it go, a grin at the cha-ching sound of credits in her pocket it represented. \n\nThe spidery hod-tender vanished out of sight, racing to meet up with the mag-lev train that would ferry the block of ore -- and five thousand of its rocky brothers -- up the cable line and into orbit. \n\nCheck the radar, Rue saw that the two excavators on her flanks -- Charley Bucket and Black Betty -- were struggling to keep within a mile of the faster A-Rig. Fat Mabel and Dopey were all but lost off the screen. With a smile, Roulette picked up her cup and took a sip of tepid coffee. \n\nLeaving the controls, Rue took the offending cup to the battered auto-chef and got a refill. The scorching hot brew was just what she needed given all the easy driving coming up. Looking out the windows at Mercury passing by had lost its appeal after the first year, but the surface of dead scorched Mercury at night was all there was to look at.\n\nWell, she could check the news, but that was about a stale and boring as a radiation-blasted hunk of rock.\n\n~ \"B-Rig actual, calling A-Rig. You got your ears on up there?\"~\n\nGoing back to her command chair, Rue dropped down and grabbed up the mic. \"Yeah, talk back at me B-Rig. How the Dust?\"\n\n~\"Yeah, yeah, laugh it up. Look I've got Black Betty pegged out to the red line. How about slowing that behemoth-mother down a peg?\"~\n\nRue grinned and nudged Big Alice's speed another notch forward. \"Worried I'll leave you for the scorch?\"\n\n~\"No. Worried you will drink all the gin at base-camp before I get there.\"~\n\nRoulette settled back and watched the monitors. She pulled up the magnification on the high gain and zeroed in on Black Betty. The sun-scorched excavator an inky shadow in the trailing dust cloud that A-Rig was spitting out. Her pilot, Wayne Gunn, would be cursing her name and calling A-Rig names all shift given the dust he was having to drive through.\n\nShe cued the mic \"Now, you know I'm more of rum girl, B-Rig.\"\n\n~\"HA! Yeah, like we've got rum. Let me tell you--\"~\n\nA loud squeal-squawk cut through whatever it was he had been about to say. \n\n~\"Cut the chatter. Keep the channel cleared for emergency communications only.\"~ A warning light lit up on the dash of Big Alice's control board, next to her speed indicator. ~\"A-Rig, dress the line.\"~\n\nRue snarled at the officer-in-charge. \"Suck the piss stains out my panties, you fucking station-hugging prick.\" Taking a slow sip of her coffee she picked up the mic. \"Rodger that, Base. Was only gunning it to get over Hill-167424. Idling back to standard.\"\n\nThat he didn't answer her back showed her the contempt her boss felt for her and all the other excavator drivers in a way that nothing else could have. Roulette, returning that contempt with gusto, eased A-Rig down to a lower speed and eased back on the speed of the massive cutting wheel. \n\n~Roulette?\"~\n\nCuing the mic for inner-rig communications only, Roulette pressed the side button. \"Yeah, Minnow, what now?\"\n\n~\"I heard a change in engine pitch, we slowing down?\"~\n\nThe excavator's chief mechanic had a twin to all of her control panels down there with him but apparently, he found it easier to bug her that to check his own instruments. With a sigh, she picked back up her coffee and sipped it. \n\n\"Yeah, Minnow, we're doing snail speed. Top, upstairs, didn't like that we weren't in a nice even line with the others.\"\n\nA squelch of the mic hid part of a cuss word. \"--ck that prick! What's the point of having the biggest and fastest ore rig on all of Mercury if he has to toddle along with the others?\"\n\nRue nodded her agreement but didn't give it voice. \n\nMinnow wasn't so ready to let it go. ~\"I want it in a report that I have protested. I'm telling you if I have to keep Alice geared down to the point Dopey can keep up, it will take years off the life of this engine.\"~ \n\n\"So noted, Minnow. So noted.\"\n\nSitting back, the auto-guidance system doing the driving. Rue propped her leg over the arm of her chair and tried to relax. It was going to be a long ass shift. She idly looked up at the blackness of Mercury night. For a second she wished that she could again feel the warmth of the sun on her face but then the realities of where she was intruded. Far overhead the silvery band of the orbital ring glittered for a second. She half imagined she could see the ore barges coming in to gather the shit-bricks that Alice and her dozen excavator sisters where spitting out from their metal asses. She could picture the mag-lev train as it rolled over to the top of the orbital ring and launched its rocky cargo into waiting orbit. The grabbers where there, Rue could see them, silvery sparks like shooting stars in the black night, darting around and around the heaves ... picking up excavator shit-bricks. \n\nAs the hours passed like molasses, and Big Alice crawled her way forward at her blistering pace of 6.7 mph, Rue thought of many things. Of mice and string and pocket jet wings, but most of all she thought about how much her ass hurt from the cheap padding in the lousy chair. Again she promised herself to bring a cushion from her day cabin at base-camp the next time she drove. But, even as she made the promise she secretly knew she would forget. When she wasn't at the controls of Big Alice she wasn't the same person. And that person didn't think about a thing that the driver of the excavator had to concern herself with. \n\nOnly coffee and the ever-present, but unpredictable, bitching of Minnow kept Rue awake as the low rumble of Alice's cutting wheel and the darkness of Mercury night clung to her. \n\n** ** ** ** ** ** **\n\nSince crawling over the top of Hill-167424 Big Alice had silently rumbled its way across the face of Mercury hundreds of fused together bricks had been \"shit\" from the rear of the excavator to be gathered and taken to the mag trail. \n\nIt was a simple job to drive an excavator. Oh, how often Rue had heard that statement when she off shift. Upon the stations in orbit, or deep underground back at base camp. Everyone said it was a simple job. Hell, unless there was a problem all you had to do was sit there. \n\nRight?\n\nRoulette wanted so badly to make one of those vacuum-sucking pricks sit their buts in a continually rumbling seat for a full twenty four hour shift. To try and stay awake, knowing that if sleep took you and anything went wrong ... anything at all, that death would come quickly. And not just for the pilot, but for the whole four-man crew and for possibly the rig itself. In the first years here on Mercury, there had been a few smaller rigs lost. Somewhere up at one of the poles, there was said to be a plaque that there contained the names of all the lives that had been lost. \n\nHell, even Black Betty had come close to being destroyed. Her blistered-to-the-steel paint still showed the fury of the morning sun here on Mercury. A sunrise that was always only a dozen hours behind the slowest rig. An eight hundred degree monster of flame and smoke, which would burn a rig down to bare metal, melting every component not made of steel. And certainly devouring something as delicate as human flesh. \n\nAnd as the rear camera showed the next season relief crew landing on the platform at the rear of Alice, Roulette certainly felt incredibly delicate. The small gas thrusters oscillated the tiny craft till it contacted the surface and the magnetic clamps grabbed hold of its metal feet. Metal legs lowered and the hatches meet and merged into one seemingly seamless airlock. \n\nStanding up, Rue gave the monitor one last look then began to gather her stuff. She was shrugging on her worn jackets, stuffing the last of her crap away in its pockets when behind her the door into the control room opened.\n\n\"Why does it always smell like sweaty pussy in here?\"\n\nShaking her head, Rue tossed her bag's strap over her shoulder.\"Didn't smell that way till you got here. Must be coming from you, Spanks.\"\n\nThe pilot dropped his bag by the pilot's chair, looked over the monitor then back at her. \"Nope, not me. I'm sure it's you. Poor loner Rue, sitting up here all by herself with her cunny rumbling against that leather seat. Come on, be honest. How many times did you rub one out this shift?\"\n\n\"You and your perverted mind, Spanks.\" Rue settled her bag into the crook of her shoulder. \"Alice is running smooth. Nothing to report.\"\n\nSpanks took off his coat and draped it over the back of the pilot's chair. \"Same as always, huh? Gotta love A-Rig. It's a shit storm up topside. I would stay at base-camp and sweat it out if I was you.\"\n\nRue stopped halfway to the door. \"Why, what's up topside?\"\n\n\"Some company bigwig coming to do an 'inspect and fire' from what I heard.\"\n\n\"Oh, just what I fucking need.\" Roulette wanted to spit. \"I spent last break stuck at base camp, I be damned if I had planned to spend this one doing the same crap!\"\n\nSpanks shrugged. \"Honestly a day in the \"hole\" beats a pink slip any day. But it's your choice.\" The pilot hopped into the seat with an energy Rue couldn't have matched after a day sitting in it. \"Oh, the seat is still warm from your ass. You didn't leave used makeup sponges and dirty tampons all over the bunk room did you?\" \n\n\"Fuck off.\"\n\n\"Hey, come on Roulette, someone's got to keep you straight. Otherwise, you would end up being some messy haired, grungy smelling, bitch with no prospects to ever catch a man.\" Spanks looked back over at me, grinning. \"I see it as my duty to the male species to make sure a looker like you doesn't end up an old maid or a lesbian.\"\n\n\"Fuck you.\"\n\nFlipping him a bird, Roulette turned to leave.\n\n\"In your dreams, sweet ass.\"\n\nRolling her eyes, Roulette left the con room and walked down the pipe-lined, smoky and dust-filled passages to the back of the massive excavator. She saw Minnow step out the bunkhouse with his ratty old duffle bag over his shoulder. Old Frank, the second mechanic was right behind him. Rue waved but ignored the conversation they were having, not wanting to get sucked into it. It was about the rig and at the moment the quicker she could get away from Big Alice the better. \n\nNot that the hopper could take off before the whole crew was aboard. Still, she had spent far too many days trapped on this rig, doing twenty-four hour on, twenty-four hour off shifts with her crew.\n\nListening to these two talk about the rig.\n\nAhead of her, she saw Big Alice's second pilot among her own crew. Jack'o Brian was an asshole, but she had to put up with him. He shared her bed in the bunkhouse after all. Not that he ever got to do more than smell her sweat on a pillow. Truthfully they only ever interacted for a few minutes out of every day as they changed over control. \n\nCrawling into the airlock it cycled with its normal whoosh of air. When she stepped into the hopper she saw that Jack'o had already taken the pilot's chair, per normal given, that she had done the last shift with Alice. He smelled of sleep and coffee. Rue knew that she smelled of tension, anxiety, sweat, and exhaustion.\n\n\"Rough shift?\" he asked when she secured her bag and bonelessly collapsed into the seat next to him. \n\n\"Same shift, same shit.\"\n\nJack'o nodded understanding. It was the monotony that made the job a bitch. Behind them, the other three crewmen piled into the ship.\n\n\"What's keeping us?\" Minnow pushed at the back of Jack'o chair. \"I've got some serious need for time on something that does-not-move to get caught up on. Move this heap's ass.\"\n\n\"Si lets go please.\" Hondo's polite rumble was gravel and steel. \"My familia are waiting.\"\n\nRue looked back at the big Latino laborer. The man responsible for every small detail on the rig -- who unlike the rest of them was always on call -- he was as filthy as anything living could ever become and not die. His normal brown-ish skin tone a regolith black everywhere except around his mouth. The outline formed by a respirator a shocking contrast. \n\n\"What the hell have you been up to, Hondo?\"\n\nIt was Old Frank that answered. \n\n\"We popped a hatch rivet down in Conveyor Twelve. Flooded the crawl way with about two tons of dust before we found it.\" He nodded at her raised eyebrow. \"We fixed it.\"\n\n\"Why didn't you let me know?\" she asked.\n\n\"It was a rivet. We pop a dozen of those a shift, sometimes.\" Old Frank shrugged and Minnow nodded agreement. \"It's just standard Op to fix them and move on.\"\n\nJack'o Brian shook his head. \"Let us know, guys. We're supposed to add stuff like that to our daily reports.\"\n\nMinnow chuckled. \"You really think anyone ever reads those reports?\"\n\nBig Alice's other pilot slung around in his chair. He silenced the humor with a look, something that Rue envied.\n\n\"It covers all of our asses! Whether they read it or not doesn't fucking matter.\" Jack'o pointed a finger at Old Frank. \"If anything should break back there behind us, and it be something vital that Roulette and I didn't report had been previously damaged ... the hammer will fall. Let me tell you two fuckers, I'm not taking the chop for you. It's all on you and Minnow. Top will eat your asses with pepper and bacon.\"\n\n\"Yeah, yeah, yeah.\" Minnow made a rude noise. \"Like any of those fuckers would dirty their hands to come down here to check why something broke.\"\n\n\"Look you grungy fuck--\" Jack'o began, turning even more around till he was half out of his seat. Minnow was starting to stand. Rue called them to stop.\n\n\"Guys, knock it off! Settle the fuck down. It's been a long shift and I'll kick all of your asses if you get us down-checked for our off planet leave for fighting. Let's get to base, get cleaned up and get some real food and rest. Then if you two jackasses still want to duke it out, put on gloves and knock each other silly.\" Rue pointed a finger at the two mechanics. \"Report what you repair. Even if it's something small report it.\" She turned back to her fellow pilot. \"Lift or I'll fly us, and I make no promises about not falling asleep halfway there.\"\n\n\"Si, please let's go.\"\n\nIt might have been Hondo that stopped the argument before it became a \"fight-fight,\" or maybe it was Roulette herself. Maybe it was simply the fact everyone was too exhausted to really fight. Jack'o placed his hands on the controllers, keyed the mic and told Base Camp Two to expect us, and launched the little hopper off the back of Big Alice. As they lifted clear, Rue leaned her head on the view port and watched the big excavator till Jack'o turned the ship and headed towards the rising sun.\n\nBehind them, the massive rig gnawed away more of Mercury's surface, seemingly uncaring that its pilots for the last season had left it in other hands. \n\nBig Alice simply ate. She was always hungry. \n\n** ** ** ** ** ** **\n\nThe flight from Big Alice to Base Camp Number Two was fairly short but, for Rue, it was too long. About halfway there her eyes grew heavy and -- by the time the landing struts touched down -- she was fully asleep. \n\nThe stone-topped landing platform descended slowly on its hydraulic pistons lowering the hopper deeper and deeper under the radiation-blasted surface and into the shadowy bowels of Mercury. Roulette missed seeing the largely fading numbers some early dweller here at Base Camp Number Two decided was needed to let his fellow miners know just how deep they were underground. Or more likely, some vacuum-sucking ass up top side sent down an order to paint a huge number on the side of a stone shaft, which had been bored into the Mercury crust by a drill bit the size of a skyscraper's foundation.\n\nThe sudden jolt when the platform touched bottom shook Rue awake. With a start, she blinked her way into consciousness and tried to hide that she had been asleep from people that had been listening to her snore for the last thirty minutes. Undoing the harness straps she stood with a groan and moved to the webbing to dig her bag from among the grape-like cluster of similar bags. \n\n\"Oh, man I am so ready for this time off.\" Minnow stretched his full height, fingertips trying to touch the ceiling but missing it by inches. \"There is some topside pussy with my name on it just waiting, for Mr. Moneybags Minnow to appear.\"\n\n\"Roulette you going topside?\" Jack'o asked as he unhooked his bag from beside hers. \"I heard they got some new man-meat for you ladies to gnaw on.\"\n\n\"Nope, I have no need to blow eighty-eight days worth of hard work in a few weeks of drinking and fucking company hookers. Y'all dumb fuckers go right ahead with that shit.\"\n\nOld man Frank laughed. \"Another lost soul thinking she's going to save her money up and get out of this life one day, huh?\"\n\nRoulette gave the grizzled veteran miner a look. \"I've heard of worse plans.\"\n\n\"Oh, yeah it sounds great and all, but something will come up and take it all away.\" He cackled. \"Something always comes up, the Company works it that way. You think Queen Space Industries gotten as big as it did by Caesar Queen letting trained workers retire?\"\n\nJack'o rolled his eyes cutting a look at Rue \"Oh, please don't get Frank started. Please, please no more Queen Industries conspiracies.\" \n\nMinnow was laughing and Old Franks was giving his shift's pilot a snarky look. \"You'll find out, youngster. You will find out. I'll probably just be a bunch of bones by then, but you'll see the shit I've seen for yourself, and then you'll think back to Old Frank trying to warn your dumb young ass.\"\n\n\"Yeah, sure Frank.\" The airlock opened and the smell of the base camp flooded the hopper. \"I'll be all contrite, and sing your praises, and drink a drink to your memory. I'll tell everyone it was you that told me the company I work for causes small accidents to make it's workers miss work, lose their seniority, and have to force them to pay for their hospital stay so to use up their savings All, so they can't retire.\"",
        "Roulette followed the guys out the hatch of the hopper and down the gritty stone landing pad to the heavy blast-proof doors that lead into base camp. Behind them, a gantry crane had hooked up the hopper and was moving it to a shelf to perch it beside four similar craft. The stone-topped platform rose seconds after she stepped off. Looking up she shot the control booth a look. The operator there was grinning and shot her a thumb down wave. \n\n\"Oh, for the love of fuck Christ,\" she thought as she reluctantly nodded. \"Another douche bag, robot making, want-a-be, thinking just because they can cobble together two pieces of metal that can challenge me. Fuck waffle!\"\n\n\"Rue or you going to get in this airlock or sleep out here in the landing bay?\"\n\nLooking up, she saw Jack'o was holding the door for her. Moving with an energy she didn't really have to waste, she caught up with the others. They rode down past the various levels of base command and control and into to the lowest base levels where the miners made their residents. The rock wall vanished before them and the huge open cavern appeared. A hollow formed by a gas bubble in cooling magma, at some point the far distant past. In the first days on Mercury, the chamber had been located by seismic testing. The bore drill had pierced the old bubble, releasing perhaps a farts worth of ancient gas into the near-vacuum of Mercury's atmosphere. When the mining of surface ore began, this cavern had been a simple and easy place to convert to hold the workers in their off time. \n\nThe elevator slowed and moaned to a halt. \n\nThere was a guy who looked familiar but not too much so waiting for a ride up. Rue thought she had seen him at one of the, often crude, sports bars here in the base camp. He looked at their tired faces and grinned a welcome.\n\n\"Level six-sixty-six. Welcome to hell. Will you have smoking or smoking?\"\n\nBefore anyone could answer, Hondo brushed past the man at a hustle. Rue saw the filthy man's wife moving towards the tall Latino with a bright smile. A chubby baby was squealing for its daddy, all but crawling out of her arms. Seeing the happy couple, Roulette felt a moment's envy but shrugged it off and shouldered her bag. \n\nThe guy waiting on the elevator stopped Rue before she could step past. \n\n\"Hey, are we going to be seeing the Rabid Rabbit in the arena tomorrow?\"\n\nRoulette shook her head. \n\n\"Nope, R&R is down till I can scrounge up another data block to replace the one that was destroyed last season. I'll be running the Butcher's Billy in the limited class.\" She shrugged at his disappointment. \"If you want to see Rabbit so badly find me a 99Hard-G data block and I'll be happy to help you get your bunny fur fix on.\"\n\nThe guy laughed. \"I can't say I'm that bad off yet, but the withdrawal pains are growing.\" \n\n\"Hey, Roulette! Move your tits! Some of us would like to get paid.\"\n\nLooking past the fanboy, Rue gave Jack'o the finger and, with a soul-felt sigh, settled her heavy bag and followed the rest of her crew towards the graffiti scrawled administrations building. There was a small line waiting outside, maybe two crews worth but one group moved inside before she could fall in line behind Old Frank. She gave a tired wave to a small woman with heavy Asian features. \n\n\"You look like I feel, Rue.\" The woman grinned a bloody and black looking smile. Like a cow chewing cud, the betel leaves in her mouth never seems to stop being ground to a messy wet paste. \n\nBefore Roulette could do more than nod at Quan Lee, the door opened and the crew of H-Rig \"Hard Harlot\" came out grumbling about their pay but, at the same time, whooping and running like kids released from school early. A growly voice called out before the door could close.\n\n\"Next, damn it.\" \n\nQuan Lee led her rig's crew into the office. \n\nAs they stood waiting they heard a few harsh words from inside, then the E-Rig's people filled out. Unlike the previous group, they left one by one, not in a cluster. And the joyous smiles were not as present. When the Asian pilot exited she waved off Jack'o offer of dinner and paused only by Rue for long enough to say.\n\n\"He's in a mood.\"\n\n\"NEXT!\"\n\nRoulette let Jack'o lead the way in, but she stepped between the Assessor and her people. If there was going to be heat, she was going to be the one to feel it. That -- in her mind at least -- was what made a pilot. Jack'o at her side told her he felt the same.\n\n\"Well, well. Look who decided to grace my doorstep. A-Rig, the pride of Mercury's mining company.\" Sam Cooker, the Queen Mining payroll Assessor on station smirked to show he was being sarcastic.\n\n\"Damn Skippy,\" muttered Old Frank. He and he alone on all of Mercury didn't give a pig's sweat about the boss in the Assessor office. He had seen too many asses in that seat to give swag to the current butt in the chair. \n\nShoot the old man a look, Sam Cooker pulled up their file. \n\n\"Let's see. You all did the full eighty-eight days. Props for that, so far you're the only crew which has earned that merit badge this season. Now the records show you averaged to drop of thirty blocks a day, or a total of two thousand, six hundred and forty blocks for the season. Sign my ledger.\"\n\nThere was a grumble behind Rue and a snarl beside her. Then her eyes lit on the pay per block.\n\n\"No fucking way! That's a full quarter less per block than last season!\"\n\nSam Cooker shot her a look that said: \"Suck on it.\"\n\nOld Frank stepped forward and put his half-legible scrawl down on the old fashion, yellow-ish, paper-filled book. He took his money and left. After a moment Minnow followed suit. Hondo looked at the numbers for a long moment then he exchanged a sorrowful look with first Rue and then Jack'o.\n\n\"This looks short. Can you check the math for me, please?\"\n\nHe was asking his pilots but it was Sam Cooker that answered.\n\n\"Two thousand, six hundred and forty blocks at five thousand dollars a block is nine million, two hundred and forty thousand dollars. Out of that, the company gets one third and the rig gets one third. That leaves three million and eighty thousand dollars for the crew. Minus the cost of food, fuel, and wherewithal leaves three million and some pocket change. Pilots get two full shares, the mechanics get a full share each and a laborer like you get a three-quarter share and had better be fucking thankfully it's not the half share you deserve. Now sign for it and get the fuck out my office.\"\n\nHondo swallowed down the anger behind his eyes, thought of his family and put down his scrawl. He hurried out to his wife and child were waiting outside. \n\nJack'o pulled a cigarillo from his pocket and struck an old fashion match on the side Assessor's desk. \"Never let it be said you're not a swine and a scholar, Sam.\"\n\nBlowing a puff of smoke at the man, he signed the ledger scooped up his money and nodded to Roulette on his way out.\n\nSam Cooker gave the looks Rue was shooting him a smile. \"If you feel bad for the spic give him part of your share. Sign and get out.\" \n\nLeaning down, Rue ignored the fact his eyes went to her tits and the display of cleavage her shirt was offering him. After eighty-eight days in an excavator living with five guys, the care about the male of the species hormonal-need to look at boobs was both old and worn pretty thin. \n\nRoulette signed her name with a flowing elegance that was a gift from her mother's family. One of the few she had gotten to keep.\"I notice 'wherewithal' seems to be getting more and more expensive each season.\"\n\nHe chuckled, his hot eyes never her chest. \"Yeah, life sucks that way.\"\n\n\"I want a printout.\"\n\nThat got his attention. \"Oh, for fuck sake.\"\n\n\"My right, my call. Print it.\"\n\nGrumbling his distaste, he pushed the thumb scanner at her for her to pay for the printing cost and -- when she didn't hesitate to press a finger to it -- got to his feet and went to the printer. A paper hard copy of the entire season's production and payoff scrolled out. Sam Cooker all but shoved it into her hand.\n\n\"Next!\"\n\nRoulette folded the paper and stuffed it into her jacket pocket as she went out. She saw a crew she didn't recognize waiting only till she was out the door to file in. She waved at a few faces that might be familiar, and who waved at her first. \n\nHer mind was already tumbling numbers in her head to see what had to be paid verses what was going to have to wait another season's paycheck. \n\n** ** ** ** ** ** **\n\nAfter eighty-eight days the feeling of the ground not rumbling under her feet was mildly disturbing, but it was also a wonderful feeling. As clear a message she was off work as could possibly be given. Rue longed to get to her house and toss her working clothes into a corner to be forgotten for so many long enjoyable weeks.\n\nAnd food!\n\nReal cooked food that wasn't made to please six different tastes in cooking. Something she and she alone would enjoy.\n\nThe corridors that led off the main cavern and down deeper into the subsurface of Mercury were as familiar to her as the twisted warrens of dilapidated buildings in her childhood home of Atlanta. The smells were even similar to that far distant city. True the caverns here were anything but overcrowded, at least when compared to the human-thronged congested places where she had grown up. But the act of simple habitation had made these Mercury caves a pale flattery of humanity's excesses. \n\nCooking smells came from the open window of the place next to hers. \n\nThe laborer heavy family that lived there had moved in two seasons back and had seemed to be only adding to their numbers each time Roulette came home. There was the sound of children laughing. That was such an odd sound after months of nothing but the voices of growly men. With a smile, she worked up the effort to even wave back to the children as she passed. She giggled seeing them jumping about playing in the lighter gravity. \n\nThat brought the reality of their being here back to her in a way that took the humor from her. The knowledge of what that lesser gravity was going to do to their development, if they stayed here, which they were certainly going to do. No one ever seemed to leave the Mercury mines, save in spirit. Least way she could hope they got to leave then.\n\nThe idea of sad lingering ghosts of miners past walked those last few steps with her to her door. \n\nRoulette -- like every person who worked one of the excavating rigs out on the surface -- shared her home with another miner. Lara Price, a woman with more mechanical skill than Minnow and Old Frank combined, had spent the time that Rue had been working here. On season and off season, the working realities of Mercury ... well, unless you're insane and think you can work two back to back seasons. There were a few people that had given that nightmare a try. Most of them cracked from the strain long before the end of the second seasons. The human mind was already reeling from the multiple oddities of life on a planet it wasn't adapted to, to then try and imposed one hundred and seventy-six days of nervous stress and confinement upon it. Well, the results weren't good. \n\nOpening the door, Rue saw that Lara had painted the inside walls a soft mixture of blue and green. The blended color gradient reminded Roulette of a picture she had seen of some nature park. The blue of the sky with the green of the tall grass. Perhaps Lara had been looking at the same picture. Rue decided she liked it. Moving in she dropped her bag by her bedroom door. The door at the end of the hall was calling her name. \n\nAdmittedly on a planet as water poor as Mercury, the idea of a bath was insanity, but humans are human by natures so when these homes had been carved into the rock the idea of including a simple stone tub had been seen as a needed indulgence. It also gave the Queen Mining Company something else they could charge their workers for the use of. No one, and I mean no one coming off a rig would or could turn down a bath if they had access to one. And that water cost was, easily, a day's worth of her pay. \n\nOr two, given these shorter wages.\n\nBut as the shallow tub filled with steaming water Rue counted it as money well spent. Besides, she only indulged in this once or twice per off season. That mitigated the cost. \n\nAnd the fact her co-owner was a woman who similarly felt a need for such an indulgence, made it not seem too burdensome. \n\nShedding clothes that to her nose reeked of the burnt gunpowder smell of Mercury's heat blasted surface, Rue tossed them aside with delight and stood naked in her skin for the first time in far too long. A cramped bunk house co-occupied by a swarm of horn-dog men, who were liable to pop in simply to try and snatch a free peek, was not a place to stand naked about in for long. Rue delighted in being naked and getting to stretch, and scratch, and lift, and massage places which had been all but calloused by wearing too-stiff clothes, day after day. She smiled thinking about the soft things stashed in her closet. Clothes that she wore so infrequently they might have been all but new. \n\nStepping into the tub was a needed release of eighty-eight days of tensions. \n\nPiloting a rig like Big Alice was not the most complicated thing to do, but it was the stress of being in charge of that much moving metal knowing a simple mistake could end your life. Knowing that in every direction death was surrounding you. The land was death. Temperatures that would freeze your skin in seconds. The air was death. An atmosphere so thin it required instruments to even detect it, you would breath out your last breath as a scream of snowflakes and then try to gasp in the vacuum. \n\nThe rig could die. The command compartment could be ruptured. There were fumes, given off in the compacting of ore into the \"shit bricks,' which were toxic to breathe. If they got into the crew compartments ... well, death would be slower than breathing in the Mercury atmosphere. But that wasn't a desired ending for any crew.\n\nAnd it had happened. \n\nBlack Betty had nearly been scorched by the morning sunrise. Naughty Natalia -- the original N-Rig --had lost her whole crew. The people topside didn't know they were even gone till the rig began to wander off its course. Cause of death was said to be medical. Somehow their enhanced immune systems --standard for all humans living off of Earth -- had been shut down. Radiation caused cancers, which would normally have been dealt with by the normal hyped-up immune systems, had instead destroyed the crewmen in mere hours. Some miners like Old Frank had made the suggestion that the nano enhancements embedded in those systems -- which flag such cancers for disposal -- had been switched off. \n\nExactly how that impossibility had been done varied by which conspiracy you cared to believe. \n\nThe warm water crawled up Roulette's skin in micro-inches as she slipped deeper and deeper. Like a lover's caress, the water went exploring into places that need desperately such a wet touch. Rue took a worn rag and with just a hint of some incredibly expensive, highly fragrant soap and began the all but fruitless task of slow washing away a season of mining stink. Even with such a flowery soap working at her skin, the stench wouldn't really vanish. Hidden, covered, suppressed? Well ... yeah, it could become all of those but gone ... no, not really.\n\nRoulette knew in her heart she would always smell of burnt gunpowder. \n\nLaying her head on the warm, smooth, stone side of her tub, she sighed as she rubbed at her tangle of pubic bramble. That was another thing she missed while working. It was damn all hard to masturbate in the rig. Sure she was left alone in the command room for often hours at a time, but that room was subject to both audio and visual monitoring. Rue had no desire for some vacuum-breather up top to be getting his rocks off watching her rubbing herself to relief. Or worse one of the grungy fuckers in charge down her at base-camp. \n\nWith slow lazy ease Roulette fingered herself till arousal began to build to enjoyable levels. She smiled thinking about the vibrating toys, dear friends she seduced herself with till they pleased her over and over. Plastic lovers who made her orgasm till she melted into human pudding. Rue grinned at the idea. For a moment she considered the idea of getting up out the tub and making the toys happy she was home. But the water was still warm, and the bath too relaxing. Besides, there was time. It would be another season before she would again sit behind the controls of Big Alive. \n\nBy then even masturbation would be wearing thin.\n\nWell, good thing there was all the destruction and mayhem she had to look forward to till then. And who knows, she might even decide to have a bit of body-on-body contact while she was off work this season. She certainly got enough offers from the others miners here in base camp. Offers of sex that ranged from...\n\n\"Hey baby, wanna fuck?\" \n\n...all the way to \"You hold her down first.\"\n\nRoulette smirked thinking about the reaction those two fellas must have gotten at the base hospital. She had never seen them again, so she could only guess whether they had lived or died. The mere rumor of their fate had prevented any type of repeat of that night. She was perhaps one of the few women who could walk into any part of this underground warren of tunnels and not have to fear for her safety. Or that she would get to keep her underwear on at least. \n\nNot that she always wanted to keep her underwear on.\n\nWith a moan, she rubbed her clit harder. There were certainly people down here in the base camp she wouldn't mind getting all sweaty with. Laying a leg over the side of the tub she spread herself allowing warm water to flood deeper into her. Like wet kisses on her, neither lips Rue was more and more leaning toward the thought of taking her toys to bed. \n\nLeaning her head further back she took a few deep breaths and began small circles beside her clit. A need for her nipples to also feel something caused her to cup each of the firm mounds and pinch the hard points.\n\nWith her growing need to orgasm a demanding itch to scratch, she sank a finger into herself, moaning at both the silky feeling within and equally the hard warmth of that single digit inside her. She moaned, she groaned, she whimpered as she added two fingers, she...\n\n... fell asleep.\n\n** ** ** ** ** ** **\n\nWaking up hours later when the laws of thermodynamic -- having grown tired of simply removing heat from bath water -- began to apply to her own body temperatures.\n\nShivering uncontrollably, Rue crawled from the tub and grabbed her robe. \n\nA brisk walk to the kitchen and to the auto-chef saw her with a steaming cup of what could laughingly be called coffee. \"Well, at least it's hot,\" She thought to herself as she moved into the living room and curled herself up in her favorite chair. An extruded plastic version of the Asian rattan \"Papasan\" chair, it hugged her and she curled up in it like it was her nest. Wrapping herself around her warm mug, Roulette woke slowly and enjoyed being able to do so. Her normal wake up routine aboard the A-Rig was more a matter of trying to not hack up a pound of mining dust while getting dressed in a cramped, cold, and overly smelly bunk room. \n\n\"Mother... \"\n\nIt took the home computer a second to adjust to the change of voice calling after it. \"Yes, Roulette? How may I help you?\"\n\n\"I need to get caught up on the arena battles for the last season. Give me an overall and my normal a list of challenges ... oh, for the next five days.\"\n\n\"Yes, dear.\"\n\nThe nearest screen flickered on and a video window expanded. As stat data scrolled past on the margin, Rue sipped her coffee and watched the remote-controlled robots trying to destroy themselves. The lighter gravity of Mercury had given a rebirth to the once ancient vid-sport of robot fighting, but in bizarre ways. For one it was simplicity to make a heavy metal robot jump over or all but fly away from their opponent. A sport once confined to a flat floor, it had taken on an acrobatic quality bordering on gymnastic insanity. ",
        "Then there were the weapons.\n\nYeah, sure there were times -- back a couple centuries ago -- that the robots had been armed with things like full-size flamethrowers or even firearms, but there was always safety factor that had to be observed since they had to have their operator's need to be close by. Here on Mercury, with access to the remote control equipment designed to run the \"shit-brick\" gathering hod-tender bots ... the kid gloves had come off.\n\nThe arena was a large hollowed out, metal lined chamber the mining company had originally designed to be an emergency shelter for the whole mining colony ... back when that number had been only a few hundred and not the several thousand humans now on Mercury. It had sat unused for a few decades once the ore mining had moved into full production but as boredom had set in for the season-on season-off workers the need for simple, cheap recreation had began to build. Some brilliant fool of a mechanic, with more time on his hands than sense, had built a toy robot to play with. Another mechanic -- one who if rumor has it, decided to troll him -- built himself one, but better. They kept trying to one-up each other's robot building skills until one day it almost came to blows between the two men. \n\nInstead, they made their robots fight. \n\nAdmittedly, having them do it in the middle of the main cavern probably wasn't a good idea but they were mechanics, not rocket scientists. A full blow metal breaking, circuit board bashing, pride-driven brawl ensued and the noise drew a huge crowd of equally bored off season miners. They were soon cheering and -- once the attempts by the Queen Mining Company official's to bring the fight to an end were abandoned -- bets were being placed. \n\nThat was all it took. The exchange of money. \n\nSo Mercury had a sport. It had a ready supply of mechanical geniuses. It had tons of scrap that could be up-salvaged to make the bots with. And, once someone got to thinking about it, it had people with snap-point reflexes, skilled at the motion-without-thought instant handling of controls. \n\nRig pilots.\n\nThe need to have a better place for the robots to fight made someone remember the old survival shelter. The company allowed it with many a sigh at what they saw as a waste of precious material that could have been put to a more productive and less time-wasting use. Still, it didn't take long for a few videos of the robot battles to get carried back to Earth ... where it was loved beyond all reason.\n\nSoon not only was Queen Mining not just looking the other way, but they were obliged to make an effort to distributes the footage back to Earth on ever data transfer leaving Mercury.\n\nBy the time Roulette had finished her coffee she was awake, up to date, and more than ready to get back to one of the few pleasures in her life. With the caffeine coursing through her, Rue went and dressed and then headed over to the storage garage she shared with a few other ... like-minded people, from this season's workers.\n\nThere were several already there getting to work themselves. \n\n** ** ** ** ** ** **\n\nOriginally the warehouse had been used to store equipment -- most of which was found to be useless in the mining operations on Mercury but that people back on Earth had to believe was imperatively needed to be present -- till called for. Then as time and a steady winnowing effect emptied the large space it had been all but abandoned. However, once the robot fighting became such a prominent part of daily life, it was turned to a different purpose. \n\nWith it's close proximity to the arena it was all but perfect for the housing and repair of the fighting robots. \n\nThere were already overhead cranes for moving things about. A bit of divider partitioning and some lockable gates were enough to satisfy the security needs of the often paranoid pilots. People who were as a group more worried about their spare parts being seen than ship full of nuns on \"Bath-a-Nun\" day .\n\nRobot designers and lunatics are often seen to walk hand in hand.\n\nRue stepped inside and took a deep breath. The oil and burnt circuitry smell of the place was more of an \"I'm home smell\" kind of smell than any scent she had ever known. \n\nWaving to the others she moved to the back storage lockers where her two bots hung in the crane gantry hoist rigs. The often tricky locked gate responded to the old fashion key she carried on her necklace. With a sigh she let her eyes settle on the half-disassembled Rabid Rabbit. The larger bot, a survivor of many a bout in the deadly unlimited class, \n\n\"Soon, Rabid. I promise.\"\n\nTaking the crane control off the wall beside the locker she shifted it around overhead and lowered the hooks to the metal loop above her second, smaller robot. Butcher's Billy. \n\nThe fighting Goat painting on the side had taken a beating in the last match of last season. There were other burns and a truly vicious looking scar across the metal around one of the powerful rear legs. That wound had come close to tearing that leg clean off. \n\n\"You're going to need a fresh coat of pain and shit-load of welding rods, huh, lover girl?\"\n\nRoulette looked back over her shoulder at the tall man walking up to her with a shit -eating grin on his face. She rolled her eyes and looked back at what she was doing. The large battle robot swung like a multi-leg dead spider under the gantry crane as she moved it over to one of the repair areas. She hated to admit he was right, but Liam had called it. She was going to have to lay down layer after layer of welding bead into that crack to make it as good as new. Well, stronger than new to be truthful. Not that it was work she wasn't familiar with. The old Butcher's Billy had several such silvery scars across its skin. \n\nLiam stood next to her but was looking back into the cage locker at Rabid Rabbit.\n\n\"Still needing a 99Hard-G data block, huh, lover girl?\"\n\nRue sighed. \n\nShe hated being called \"Lover girl\" by this asshole.\n\n\"Liam, are you wanting to annoy me about something specific while you can see I'm busy or is this just a general trying-to-piss-me-off conversation?\"\n\nThe tall man laughed. \"Oh no, no, no. This is a I'm trying to get-into-your-pants-and-fuck-you conversation.\"\n\nWith a no-shit grunt, Rue settled Butcher's Billy into the repair cradle. When she turned Liam was right in front of her. He looked from her eyes to her tits and back with a smirk.\n\nRoulette pushed the crane control into his gut making him back up. \"Oh, not another one of those. I think I made it plain last time. Not if you were the last man on Mercury, and I was going to die if I didn't have sex, would I fuck you.\"\n\n\"Not even for a brand new 99Hard-G, still in the shipping plastic?\" The tall man smiled at her widening of eyes. \"Cherry mint condition.\"\n\nPausing in disbelief, Rue looked over to where Lasair Lee, another pilot in both the limited and unlimited classes, was watching them out the corner of her eyes. It was clear she was listening hard. Roulette knew that whatever her decision it was going to be making the rounds of the rumor mill within the hour. Time to stomp on this nonsense.\n\n\"Look, Liam, I appreciate you're hard up. I can kind-of understand how it must be ... being the only guy on an entire planet that every member of opposite sex refuses to have sex with, but seriously I've got work to do to get Billy here ready for its next match. You don't have a 99Hard-G. I know that none came in on any transport during the last season and I've had people scrounging both base camps this season.\"\n\n\"Oh, I know you have. That's why I went out of my way to secure one. See, I've got a buddy up topside who ... just so happened to have owed me a favor for putting him onto some prime pussy a few years back. I called in that IOU from him, and he was happy to help since it returns the same favor.\" He reached into his pocket and pulled out a circuit board. \"Now. Lover girl. All I want is some normal vanilla sex ... well, maybe a bit of anal, but hey that's negotiable, right ... and it's all yours. Let say ... maybe every night for five nights you put out like a prom queen for me? That sounds fair, right, given how hard it is to find one of these bad boys?\"\n\nRue looked at cigar box sized wafer of crystal and circuitry. She recognized it easily enough. It was a part, admittedly a minor part, of the piece she needed to get Rabid Rabbit back up and kicking.\n\nThen she saw his grin. \n\nLiam believed he had her over the barrel. She glanced over at Lasair. The woman was already working her wrist computer ready to send this out to the world. They both believed her this desperate. Was she? Well, yeah but...\n\n\"Plain vanilla, huh?\" she asked softly.\n\nThe deep throaty laugh. \"As plain as sugar and cream.\"\n\nRoulette stepped towards him. \n\n\"Hey, hey, hey!\"\n\n\"What's the matter lover boy?\" She glanced down at the plasma cutter torch she had placed alongside his crotch. Liam was trying to stand on his tip toes and back up at the same time. She moved forward with him a hand going to his chest directing him till his back hit the side of the cage wall behind him. \"See, where you fucked up was not in getting the part I need, it was in offer just plain sex. I don't do that any more ... stud. I want things a bit more frisky than that when I take a man.\" \n\nShe clicked the igniter on the torch and the sparks shot between the metal tip and the opening fuel port. There was a small gout of flame that licked across his workshop denim. With a startled yelp Liam tried to back-crawl up the fence.\n\nRue smiled at him. \"Where you going, lover boy?\" she clicked it again. \"I've come to enjoy a bit of branding play, you know just for foreplay sake. You know just to get my pussy all juiced up and ready for that hard meat.\" She ran a hand up and cupped his throat. \"Oh, and there's my choking fetish. But of course, you have to understand ... I only do it if I'm on top. See I like to look down into your eyes. I enjoy seeing a man's eyes as I pull the belt I have around his throat. I love to see his eyes bulge and his tongue stick out as I strangle him. Oh, a man gets so hard for me then.\"\n\nRoulette pushed herself forward till she was now pressing the taller man into the extruded fencing of the cage. \"Then I like to dig my thumbs into his checks and make the ball gag stretch his face. A man looks so silly then, I sometimes get to laughing. Of course, I have to really punish him then. You know, the old staple gun to the testicles thing.\" She grinned and let a bit of drool drip off her bottom lip. \"Oh, don't fret about it so, lover boy. I mean, yeah sure it looks terrible, the blood and all, but it's only a few little pricks. How bad can a little price hurt, right?\"\n\nLiam began to try and squirm his way away from her as fast as he could but she sidestepped him and ran the still un-lit plasma cutter up his chest. She paused it right before his wide-eyed face. \n\n\"Oh, and you will be happy to know I love anal.\" Rue nodded with a huge smile on her face and then gave a silly-girl giggle. \"All you big strong men scream so wonderfully when I ram my fake dick into them. And, when I pound their ass for hours, I just love the moaning and the whimpering.\" Tilting her head she clicked the plasma torch igniter right before his eyes. \"Now, where should we put my first brand?\"\n\nWith a shove, he pushed Rue back against the work table and fled off through the workshop. Watching him go -- listening with little or no pleasure to the laughter coming from behind her -- she glanced over at Lasair Lee. Reaching down she pulled the oxygen hose up to the handle and plugged it into the cutting torch. With a spark, the noise cutter ignited for real. Over the burning glare, she meets the other pilot's eyes.\n\n\"I never get to have any fun. Men are wimps.\"\n\nTurning down the flame to a stark blue white, she went to work.\n\n** ** ** ** ** ** **\n\nThe miners -- in their infinite wisdom when hammered drunk -- had called the best drinking spot on all of Base Camp Two ... The Trash Pit.\n\nA perfect name for the place could have never been found. \n\nWhen she stepped inside there were a few waved hands tossed up in greeting. She smiled and nodded back, her hands stuffed into her pilot's jackets pockets. She gave a small shiver. The long season aboard Big Alice had accustomed her to the steady temperatures in the control room and the bunk room. This bar had been built into the stone walls of an old lava tube that branched off the larger empty caldera that was the main chamber of base camp. With the sun rising above on the surface the ground temperatures would soon be rising, these chambers would, by the end of the off season, be more than comfortable. To some, they could even be described as warm by then.\n\nRoulette would describe these caverns as hot as balls by the end of the off season \n\nTaking a seat at the bar, she removed a hand only long enough to signal Jimmy \"The Man\" William that she wanted a beer. \n\nHe smiled as he slid the bottle in front of her. \"Cold, Rue?'\n\n\"I'm freezing my tits off, Jimmy. Will a whole room full of broken down mechanical trash down the hall, can no one find a heater to piece together for this place.\"\n\n\"Oh, we tried that.\" Jimmy wiped down the bar. \"I got a huge cease and desist notice from the company about wasting power to run a heater on a planet that eight hundred degrees.\" \n\nShaking her head she took and drink and looked around. At one of the tables, she saw Old Frank, Minnow, and a couple of others who had the mechanical look about them. They were all looking up at a large vid screen. She saw it as a news feed and turned away in disgust.\n\n\"Not interested in what's going on back on Earth, huh?\" Jimmy asked.\n\nShe shook her head. \"It's all just Queen Company propaganda crap.\" \n\n\"Hey, come on Rue even you've got to hand it to old Caesar and his family.\" A hand landed on her shoulder and she looked up to see the drink-filled eyes of Jack'o \"They have the moon all but ready. I saw that there are only two more comets to go and they will be done. A bit of crop planting and some water filtration and they will be ready for the first million colonists.\"\n\n\"Wow, a whole million? On a world with what's the last numbers ... eighteen billion? Or is it twenty yet?\"\n\n\"Well, once they have those first ones settled in, they can start moving more up. Hell the moon will support an easy billion of those ground pounders and -- once they teach a few of those fools some basic living in space safety -- maybe they can move out the way into some of those new O'Neil's and let another few billion move up off Earth. And then there is Mars.\"\n\nThat was too much for Rue.\n\n\"Oh, my ass there is Mars. I don't care what crap Earth wants to put on the vid about them using Queen's terraforming to change Mars. Those rich fuckers there will never ... never ... agree to let that happen. They have been there for two hundred years building themselves an empire. They rule Mars like the ancient kings and you think they will just let someone rain comets down on all they've built? Or maybe you think they will simply pack up and go back to Earth for a couple of centuries where they will have to live like everyone else? Not. Going. To. Happen.\" \n\nA pilot from another rig had heard her and came over to add his two cents worth.\n\n\"Yeah, well they might not like it but there is not much they can do when twenty billion people back on Earth demand they get their asses out the way.\"\n\nRoulette turned to him and gave him a look.\n\n\"What?\"\n\nShe pounced.\n\n\"It was proven, beyond a doubt proven, that we could have spent the last two centuries building spinning habitats -- be it O'Neill cylinders or even a McKendree cylinder -- out of asteroids and made more than enough living space for the overpopulation problem to be easily manageable.\" Taking her beer bottle she pointed at his chest. \"But no, that's not what the Queen family wanted to do. Not flashy enough. Instead, they slammed a million chunks of towed-in ice from out of the Oort cloud onto the moon to make it have an atmosphere. Whew ... big whoop. How long will it last? What a thousand years? At best?\"\n\nAnother person, a mechanic off Black Betty, stepped in.\n\n\"Well, that gives us time to figure out other things.\"\n\n\"Like what? How to stop acting like a bunch of arguing school children?\" Roulette placed her empty beer bottle on the counter. Jimmy fed it into the auto-cleaner to be sterilized, refilled, and delivered back into the cooler. At her signal, he placed a second beer beside her hand. \n\n\"Well, we ...\"\n\n\"No, Mace, there is no we. That's half the problem. If it was a 'we' situation 'we' could deal with it. It's rich fuckers on Mars, it's rich fuckers on Earth, and it's that family of rich fuckers on Paradise Station that pay all of our paychecks.\" Rue pointed in the vague direction of the surface. \"They don't listen to any facts that might cost them money. And they sure as hell are not going to do a damn thing that will help the people, not if it hurts their bottom line.\"\n\nJack'o clinked his beer against hers. \"Well, that's just being cynical.\" \n\nRoulette looked at the merry twinkle in his eyes. \"Yes. I've met some of them face to face. They are assholes.\"\n\nOn that, all the bar could at least agree. \n\nLeaving Jimmy to peddle his cheap company beer, Rue moved over to a pool table and played the winner for drinks. Then -- once the alcohol had brought out their real personalities -- offers to take her back to whatever smelly hovel they had crawled from started to fly her way.\n\nEven from people that should know better.\n\n** ** ** ** ** ** **\n\nThe arena still smelled like old piss, rust, and burnt rubber. \n\nThe forklift crawled along on its treads, the large robotic gladiator hanging limply from the raised forks. Some fresh coats of paint -- and a few dozen new welding burns on Rue later -- and the Butcher's Billy looked as good as new as it swayed and rocked along. Hanging like a marionette puppet, just waiting only for its master's electronic touch on the strings. \n\nWalking ahead of her robot, the Arena forklift following her motion, Rue ignored the pile of smoking scrap that was behind hauled past her. She knew, in some odd way without really paying attention, that the destroyed robot was called Mad Thing. A six-season veteran of the limited arena, Roulette had faced off against it once before ... two or three seasons back. It's pilot, Doc Kenton, was following his broken machine like a mourner at a funeral. \n\nRue didn't let such sights distract her. She had not only seen them too many times before but she had herself often been in that same position. But not now, and not tonight. Tonight it was time to send someone else scrounging for parts. \n\nBegging for scraps.\n\nOr being offed hard to find parts for sex by scummy fuckers like Liam. \n\nAs she walked past it, her eyes cut to the graffiti carved into the stone walls of the tunnel. Dozens and dozens of knives had cut deep the words over the past decade. Often crossing out one bit of vulgarity with another.\n\nTwo, as always, caught her eyes.\n\n~In order to die, you must first have lived.~\n\nAnd...\n\n~Today is a fine day to fuck something up.~\n\nShe wasn't sure what miner had carved those words there, but Rue was sure that several dozens other blades had since that first time carved the words deeper into the dark stone wall. She had even done it once herself. \n\nThe bright tunnel exit ahead drew near. \n\nAs always she thought there should have been the sound of a cheering crowd. \n\nThat was the one thing these battles missed out on. That roar of a half-drunken audience. Those rowdy gatherings were taking place in the dozen or so bars scattered through the two base camps. Hundreds of off work miner, mechanics, and base personnel were clustered around large screens. They were drinking the Queen Company provided alcohol, in a Queen Company provided bar, served to them by Queen Company provided bar workers. They were betting terribly hard earned money on which piece of brightly painted -- and soon to be battered metal -- would make it through to the next round.",
        "Roulette in a way felt like she was better than them. \n\nThose pitiful bored fools. Before half the off season was over they would toss away a whole season earning in bets, drink, and pleasurable company. They would then borrow against the next seasons from the Queen Company bank and then have to work like slaves to get themselves out from under debt the next time they were out on the rig. \n\nIt was so stupid!\n\nBut then Roulette would remember just how much of her money she tied up into the building and repairing of this robot and the other. How much of her precious off time had also been sunk into working in that smelly garage. How many times she had acquiesced to deal such as Liam had offered in order to get what she needed to go one more round. \n\nHer eyes went to a scratched-in scrawl by the door itself that she had carved. \n\n~Who is a fool to judge what is foolish?~\n\nStepping past the heavy door, into the large, brightly lite, and battle scared room, her eyes looked for and found her opponent, Jayson Sprinter, walking in through one of the other doors. That dark black robot following him was called The Wraith and it was ranked higher than her own robot by two levels in the standings, and -- so the rumor mill says -- by four in sheer terms of bad-ass-ery. \n\nRoulette had watched some recordings of Jayson fighting his robot. The Wraith was quick, it was strong, and it could take a hell of a lot of punishment. If it lacked anything it was, in fan terminology, \"a big gun.\" It had a main weapon, a massive cleaver fan's call The Sickle, despite its shape, and not much else. The few times Jayson had lost were almost always linked to him losing the use of that main weapon. \n\nRue had also seen far too many of his opponents get tricked into to fighting a close combat trying to take out that big hatchet only to feel it's bite. Wraith had too much armor for a toe-to-toe type fight to go anything but well for him. \n\nTurning, she took her controller off her belt and activated Butcher's Billy. \n\nAwakening with a jerk that often startled the unwary, the big machine lowered it's hind feet to the rough floor and then, with a lurch it took steps away from the forklift. The company-owned machine fled as quickly as it's distant operator could remotely turn it around. \n\nLooking over her robot one last time was the mark of an amateur. Roulette didn't give Butcher's Billy even a glance as she stepped back outside and, turning sharply, walked behind the massive steel door and took the stairs up and into the armored control room. She heard the deep boom as the arena door closed below just as she got to the window and looked down into the squared-off chamber.\n\nSome called the limited class boring.\n\nFools. True the limited class had matches that took longer, the robots could take less of a punch ton-per-ton than their more massive brethren in the unlimited class. And yeah, the placement of large metal obstacles in the arena could drag things out into an often ridiculous game of keep away. But the simple fact they were small made the robots so much quicker ... and thus more exciting to watch. \n\nStanding at the window, Roulette moved her robot into the golden ring in the middle. The bright brassy-gold ring in the stone floor had originally served some function, but that was a job it had long ago given up. Now it simply marked where the robots began the bout. \n\nRue moved Butcher's Billy with an ease born of her many months controlling the lumbering immensity of A-Rig. Movement without thought. She had heard it called some weird name in Japanese once, but she hadn't bothered to try and remember it. To her, it was simply the way her mind worked when she was working controls. Too many hours of repetition had her hardwired now to move and adjust without even giving it a second thought. Like now she moved the agile quad-legged robot without hesitation. \n\nThe Wraith -- while true it moved just as smoothly -- to Roulette's eyes she saw a hint of hesitation. It squared off on the other side of the gold ring and lifted the massive cleaver over its head, waving it about in its hand.\n\nRue wasn't impressed. \n\nButcher's Billy had weapons too. Just to flaunt and taunt she shook the head and made her gray-white robot's waggle its chin beard . The old piece of braided rope was long ago battered beyond recognition but it made a hell of a good goat's beard.\n\nRue settled her HD goggles before her eyes. It took a second only to orient herself to the fact she was seeing out of the eyes of Butcher's Billy.\n\nOn the west wall of the chamber a large digital clock appeared. It was being projected from one of the many armored camera housings above. The countdown began to rapidly scroll down to zero.\n\nThe horn blew and Roulette was in motion first.\n\nThe remote in her hand might have been a part of her hands. And the robot in the arena was an extension of herself. \n\nIn bars the fan cheered as Butcher's Billy and The Wraith both surged into contact. Many of the patrons were so sure Roulette had made a mistake to close on the bigger, stronger, more heavily armed and armored robot. \n\nThen the quad-legged robot leaped into the air.\n\nServo motors designed to move a heavy mass in Earth's gravity well could push those same things on Mercury to insanity levels of speed. With a dexterity that would have been equally impossible to pull off in full Earth Gravity, the Butcher's Billy vaulted over the top of The Wrath and attacked as it passed. \n\nA small plate moved from the right front \"hoof\" and the un-rifled bore of a barrel appeared for a half second before the projectile left the barrel. A miniature, in all ways but power, of the current production railgun employed by Queen Space Industries as anti-asteroid collision weaponry -- or so all their advertisement promotions claims it to be -- the small gun spoke with a thunder that shook the arena. A spike of steel, pure and hardened into a cone two inches long, rode it's high powered magnets out and across the ridiculously short distance. \n\nThe slug pierced The Wrath to its core. Shattering delicate instruments like ice hit by a hammer.\n\nLanding in a crouch, Butcher's Billy instantly moved again, this time both rear hoofs straight out behind it in a classic, horse-style, double hoofed kick. \n\nThe Wraith, into internals gyroscopic penetrated and damaged by the first attack, could not keep its feet under that. Driven forward into the arena floor, it lurched almost as quickly back to its feet, to stagger like a drunk. A terrible grinding and splintering of sparks and metal vomiting from its chest housing. An oily black smoke began to boil up beside its neck. \n\nHowever lightning-fast The Wraith turned, it's huge cleaver swinging wide to try to catch the Butcher's Billy ... if it had been there. The black-hooded head swung left and right as the pilot sought out Rue's robot.\n\nCrouching behind one of the pieces of battle-scarred terrain, Roulette had taken on the air of a stalker. She watched the damaged robot hunting for her and held as still as immobility could be. Checking her stats she winced seeing how badly the one-shot railgun had drained her batteries. She had been warned by its creator that such was going to be the case, but seeing the reality ... still, it packed the wallop she had wanted. \n\nNow to survive the consequences of her desires. \n\nSlow stalking through the arena The Wraith tried to find it's smaller, admittedly as yet un-damaged opponent. But their pilot was clearly struggling to simply keep the robot upright. Spitting metal from the smoking hole in its chest, The Wraith's gyro was eating itself more and more with every spin. Jayson Sprinter was soon going to have to be making a decision to forfeit or he would be winning a Pyrrhic victory even if he somehow managed to find and stomp Butcher's Billy. The dollar signs for the repairs were rolling over faster than the numbers on the round clock. \n\nRoulette glanced at that clock. If she could somehow pull off a first-round victory it would certainly up her ranking, but at the same time the wait and let The Wraith die strategy had its merits. She sighed. Not flashy, and in this limited league, flash equaled cash. \n\n\"Ah, nutz.\"\n\nMoving Butcher's Billy from behind the rubble Rue let the larger robot see her. It twisted, lurched and moved at a stagger towards her. Even damaged, the big robot moved quick, covering the distance in a few strides. It raised the massive cleaver The Sickle wanting to try and do a one shot beheading slash and try to bring this to an end before the black robot destroyed itself simply trying to stand upright. \n\nButcher's Billy crouched. \n\nEven on a light gravity world like Mercury -- where weight and the awkwardness of tons of mass-in-motion are more easily overcome, the idiotic tendency to want to build robots that stand upright and look human was overpowering. Jayson had built The Wraith in that way. Admittedly it often used it's long arms the way a chimpanzee would, to allow for quicker turns on a three-point stance. \n\nButcher's Billy was a quad-legged robot that could stand upright on two legs. It also had a feature that wasn't as apparent to the casual viewer. The main computing and processing power wasn't built into the \"Head\" the way a lot of robot designers did, copying the human model to a freakish degree of imitation. \n\nAs has often been said a goat's \"brain' was in its stomach. \n\nAnd Butcher's Billy had a head of solid graphene and horns of salvaged tungsten carbide.\n\nCrouched low, ducked under the missed cleaver, the mad goat did what all goats do.\n\nButcher's Billy caught The Wraith in the gut, just under the smoking hole in its chest. A great gout of fire and smoke erupted from the larger machine as the hammer blow of its own forward motion met the anvil of Butcher's Billy. With a bending and shattering of armor and internals that exploded into ruin, a flaming Wraith was tossed over the top of that mad metal goat and -- when Rue tossed back the robot's horned head -- it was vaulted ass-over-tea-kettle into the rubble Roulette had been hiding behind. In a tumble of metal, sparks, and fire the robot rolled to a stop, face down and billowing smoke. \n\nRoulette turned her still undamaged robot around, kicked aside some broken metal sending it to the far side of the arena and moved with deadly purpose toward the downed Wraith. A hidden blade, more of a spike than edged steel, folded out from the mad goat's left forearm. Rue centered a killing punch over the black robot's head.\n\nThe horn sounded as Jayson signaled his submission. \n\nOn massive hydraulic pistons, the arena doors opened and arena crews rushed into to try and put out the burning mass of metal that was The Wraith. From the opposite side, Rue saw Jayson Sprinter running across the flood to his machine. Still in sync with her robot Roulette followed Jayson's passage with Butcher's Billy. The metal goat stalked over to the downed robot and the rescue team back away. Jayson reluctantly did the same casting evil looks up at the glass Roulette was behind.\n\nWith a move born in pure flash, Rue picked up The Sickle from beside the smoking scrap. With a laughing goaty-battle cry into her mic, she lifted the massive weapon over the horned head of Butcher's Billy. \n\n** ** ** ** ** ** **\n\nWith her earning in the cargo pockets of her pants, Roulette should have been thrilled, elate, joyful and triumphant. She had managed -- admittedly by a whole lot of luck -- to pulled off the type of victory that was talked about for decades. She had been congratulated by any and all, even her opponent had come over to shake her hand. \n\nSo with all of that going, Rue should have been more head over heels than The Wraith ... but she wasn't. And the reason was waiting for her at the robot hanger when the forklift carried her robot back across. \n\nChewing on the stub of a dead cigar, his eyes were more on her more than the shiny robot. James \"Ace\" McNichol, the best projectile weapons expert on Mercury. \n\n\"Well, I have to say that turned out better than I would have thought.\" Scratching at his beard stubble the man waiting on Rue grinned. \"You got lucky as hell.\"\n\nShe nodded. \"So I've been told. Repeatedly.\"\n\nThe guy nodded, took out his cigar and tossed the wet stub into the trash nearby. \"So... um... \"\n\nRoulette sighed and nodded. \"Give me a few. Let me put Butcher Billy away and we'll head over to my place.\"\n\n\"The money offer is still on the table ... I mean if you would rather?\"\n\nRue shook her head. \"Even given what I just won there is no way I can spin that kind of cash together. Not for more than two seasons. We'll stick to the agreement.\"\n\nHe grinned and chuckled. \"Well, you know I've got no problem with that.\"\n\nIgnoring his humor, Rue guided her limp dangling robot back to the storage cage. Other pilots were here, some putting their machines away, others tending to pieces of scrap metal which had been robots hours earlier. To make matters worse, the smell of burnt plastic and rubber was terribly strong. There were trails of leaked fluids everywhere and the moaning of tortured metal being hammer straight or cut away gave the whole room a surrealist feel. Reminiscent of a scene on par with a battlefield trauma hospital ... complete with people on the edge of weeping.\n\nPutting Butcher's Billy away and locking the cage, Rue gave the door a confirmation-shake then turned to go make good with the gunsmith, Ace. \n\n** ** ** ** ** ** **\n\nWhen Roulette was just a little girl she had had a dream that she had been part of the massive Exodus of humanity that had followed Alexander Queen into orbit. Night after night, week after week she had had the same dream. \n\nHer parents took her to sleep specialists who forced drugs down the child's throat and into her veins that had burned out that reoccurring dream. \n\nThey had also stolen all the others she had.\n\nFor years after that, as she grew into her teens and young twenties, the girl had been adamant that she never dreamed. She closed her eyes, sleep took her, and she awoke. There was no feeling of time passing between those two moments. And, more often than not, she would awaken feeling exhausted.\n\nAgain her parents tried to interfere in the mental visions of their daughter.\n\nNew doctors were consulted. Brain scans, eye retina scans, rem sleep monitoring, and a dozen more test were given to the young woman. All showed that she was a normal human female and that she was simply ... mentally deficient when it came to dreaming memory. \n\nThen came the trip from the crowded Burbank to the insanely crowded Tokyo. \n\nTraveling with her father on one of his business trips -- mostly for the amusement factor of being a tourist -- but also to see him at work and to try and determine if she wanted to follow him in his chosen trade. \n\nAs the mag-lev train rode the steep hydrostaticly-supported rail up to the ever-growing orbital ring around Earth's equator, and then around the curve of the planet and back down to the disembarkation station in South East Asia she had lost her fight against fatigue and drifted to sleep.\n\nAnd she had dreamed.\n\nOnce again it was the dream of that last mad scramble up the Queen space elevator that had taken place centuries ago. Asleep aboard the train, Rue had gripped the seat belt in her hand till it had cut into her palm, while -- in the vision -- it was her bag's carry strap and she had been terrified of losing it. Everything she owned had been hastily crammed inside and the odds of ever replacing anything she carried were nil. Behind her upon Earth there were nukes vaporizing cities, bathing the world in lethal radiation and flames. \n\nAnd she had nothing else but that bag.\n\nShe was nothing special that she should live while so many died. A simple worker for Alexander Queen's massive space-based transportation company. A cog in a wheel, but her name had been on the list so she had the few precious inches in the elevator where she stood. When the crowd had shifted she had been shoved to one side enough to get a look out one of the windows. The endless sky before her eyes began to turn black and the curve of the Earth had appeared, she had never been so terrified in her life.\n\nThe young Roulette had awakened at the top of the mag-lev track just as the pressurized train had moved onto the orbital ring itself. Tears had rolled from her eyes. She was shaking and when her father saw her distress and demanded what was wrong she hadn't been able to answer.\n\nShe had been too happy to answer.\n\nOn the edge of space, she had again found the ability to dream.\n\nEven if it was a nightmare, it was precious to her. \n\nBut her recovered dreams, however terrible it had been, vanished when she returned to the heavy gravity well.\n\nThe very next month Roulette signed on with Queen Space Industries and left Earth forever. To chase after her lost dreams. \n\nIt was while living on the massive Paradise Station above the nearly completed terraformed Lunar surface that she had her first taste of seduction. It had been like wine. Sweet, intoxicating, and bitter at the same time.\n\nA technical assistant, she had been welcomed by the many stations personal. Only afterward did she learn -- while Roulette's skills with a computer and a micro-soldering iron were held in high esteem -- it was how she looked that mattered the most of them. She was -- to quote one the station people -- clearly put together from good genes. \n\nBreeding genes. \n\nIt was probably more likely her ass in her jeans that had first attracted the wandering eye of Caesar Queen II. The young-ish heir-apparent to the Queen family, he had taken a liking to her and set his spurs to influencing her ... mostly in the direction of taking off her clothes in his presence. And, of course, doing naughty things with him.\n\nRepeatedly.\n\nGiven her youth, and the many other facts involved -- he was handsome, rich, the Boss, not to mention he was set to inherit half the solar system -- she had quickly acquiesced and for a matter of a few weeks she was in his bed every night. \n\nThen she learned about the real Queen family. \n\nWhat they \"want\" they take. What they \"need\" they take. What they can \"use\" they take. And what they take they consider to be owned by them...\n\n...till they don't want, need, or desire to use it. \n\nThen they often destroy the thing as they discard it, least others desire what they consider trash.\n\nQueen Space Industries by then had become father, mother, family, and lover to the young Roulette. And Paradise Station was her home. When the order appeared in her mail-box to ship to the orbital stations being assembled above Venus she had been so sure it was some a colossal mistake. Till the guards opened her door unannounced, herded her out, and all but tossed her into a deep lugger transport. \n\nHer stuff had followed in a few weeks, with shipment cost \"not\" deferred.\n\nRue had sent messages to Caesar, only to have them be ignored and returned unread. She had tried to see him when he and his elderly father arrived on a tour of the new station a year later. She had been recognized and intercepted by his clandestine bodyguards. \n\nBefore she could say word one of protest, she had found herself crammed into an outbound transport to the Mercury Mining Company with a warning that there were worse places for her to be sent if she didn't take the point. Her bank balanced had been zeroed out by what she was told must be a clerical error. It had taken two years to get straightened out. During all that time Roulette had been compelled to do things she wasn't proud of in the rough and dirty mining community. Her skills with computers and a micro-tools hadn't been desired.\n\nHer ability and willingness to fuck like a slut had been taken for granted.",
        "By the time she had worked her way up from her knees to the controls of A-Rig, the girl which had all but fallen head over heels in love with the Boss was little more than a distant memory. One that no longer even stung save for her own stupidity. \n\nAnd she was now immune to seduction. \n\nToo bad for the people who had things she needed on Mercury, that once innocent girl had learned from a professional just how to use seduction.\n\nAs Ace walked beside Rue back to her place he was sure he had gotten the better part of the exchange. He had taken a few bits of metal and some magnets and a bit of his sweat and put together a silly contraption that was little more than a one-shot weapon that all but crippled the robot that used it by robbing it of half its battery power. He was silently chuckling inside knowing that the other pilots --now that they knew her precious Butcher's Billy carried such a cannon -- would be ready for it. Here he had made something that was all but useless out of trash and it was going to get him a week of sex in the bed of what was, easily acknowledged, to be one of the sexiest and most unobtainable women on all of Mercury. \n\nTo Roulette walking slowly at his side -- her arm linked casually with his, her hip bumping his -- she had different thoughts and opinions. \n\nThe man beside her had been used. His brain and skills had just brought her what was going to be one of the most talked about victory in the limited class. If she never used the little railgun in a fight again it would always be there as the Hammer of Hell, poised to strike. A devastating fear that the pilot of every robot across from her would have to find the courage to approach. \n\nThat was worth a few nights of sex. \n\nShe hid her smile at the eagerness of his stride. How quickly he wanted to get there. How powerful the desire to see her naked was in his eyes. Ace, for all his normal blase attitude about life, was as eager as a schoolboy about to get his first piece. And Rue could see what he thought in his face. He would be a terrible poker player she knew. Here he was thinking he had talked her out of something valuable for his hard work when she knew he had gotten something she had once given away for a loaf of moldy bread and a smelly pallet in a corner to sleep on. \n\nTrue that had been years ago. \n\nHell more than a decade, but to her, the value hadn't gone up any with age. She wasn't some fine wine, her hips weren't valuable stocks, and her tits weren't on the gold standard. To herself the days when she saw herself as something desirable were long past and that so many people here on Mercury seemed to still see her as such only showed Rue their substandard life and poor taste in women. \n\nShe hoped he didn't want to kiss her. That wet cigar breath she could smell would be as repulsive as being smothered in a bath in a busted privy. \n\n** ** ** ** ** ** **\n\nRoulette bed sheets stank of male sweat. \n\nTired and caught between the desire to get up and wash or to simply pass out and sleep in the stink, she lay looking at the unattractive rock ceiling of her bedroom. \n\nAs sex goes it hadn't been half bad. \n\nOf course, by that same thought, it hadn't been half good either. \n\nAce had decided to become aggressive as soon as they stepped inside. With a force that had pushed the air from her chest, she had driven her into the rock wall and caught her in a crushing passion driven assault. Startled, but not really caring, Rue had simply rolled with the direction he was giving and met aggression with aggression. Her hands caught at his clothes even as he was pulling hers off. A grunted laugh was his opinion of this. With a snarl, he pulled her pants open and jammed his hand down into her crotch. His hard fingers cupped her and then he forcibly drove the tips of two into her.\n\nNot at all wet or prepared for such an invasion she caught the back of his neck and lifted herself away from his hand. Rue vaulted up onto him, her legs wrapping his body and locking herself to him. With not even a stagger he drove his face between her cleavage and took the offered nipple into his mouth.\n\n\"Bedrooms on the left.\" Was all Roulette had to say to get him in motion again.\n\nTossed down onto her bed, she had played at getting away only to have the desire almost become real. \n\nWith a casual brutality Rue was all too familiar with, Ace caught the back of her pants and stripped them from her hips and down her legs. His weight crashed down on top of her pinning her to the bed. When his fumbling about her rear told her what he was planning and -- given that she was completely unprepared to receive such an entry -- the lithe woman turned herself under him and kicked her pants off her leg.\n\n\"Not at first,\" she said.\n\n\"You said whatever I wanted for a week. I want that ass,\" his words were a lust driven snarl.\n\n\"And you can have it ... when I say you can.\" Reaching between then she worked the opening to his pants and pulled his hard cock free. \"Get me wet and revved up and sure, I don't mind too much a little backdoor play. But let me tell you once, and only once, Ace. This is still my show.\" Wiggling her hips she eased him into her and gripped his cock as tight as she could contract herself. \"If I say no ... it's no. And when I say go, it's go. Got it, Ace?\"\n\n\"Huh. Well, sure Rue. I guess.\"\n\nWiggling her hips, rubbing her bare ass into the mattress, she opened herself for his thrusts. \n\n\"Then go.\"\n\nOver the next hour, Ace proved his endurance to Roulette if nothing else. A steady even pace, or a wild two-minute-long slamming hammer of epic male surrender, she had expected either one from him, but a slow building thrust that worked up a sweaty warmth... well, that was at least pleasant. His pubic hair wearing a wet rawness to her clit, her first orgasm was ... nice. The small release a relaxing pleasure rather than a mind-shattering wave of bliss. \n\nAfter a bit, however, Rue began to grow a bit bored with her inactivity. Flat on her back sex wasn't her preferred form. She hadn't lied to Liam when she said she preferred to be on top. Given his single-minded thrusting she knew Ace here wouldn't be too keen on anything that broke his rhythm, so she signed inside and hoped he finished soon. \n\nHis grunting sweaty purge seemed to almost follow on that thought's heels. \n\nAce collapsed on top of her, another reason she preferred to be on top. This hot male blanket of flesh wasn't her idea of a good duvet. When at last he rolled over with a moan, the rush of cool air was welcomed. The wet feeling within her was not.\n\n\"Be right back.\"\n\nEasing out of bed, she made her way to her bathroom down the hall. Leaving the light off, she avoided the image of herself in the mirror. Rue knew from the past that, at moments like these, a stare down with her own eyes wasn't recommended. \n\nPurging herself of his seed, Rue cleaned herself up a bit and with a low sigh, made her way back to her bedroom. There was a thick miasma of sex and sweat hovering about the room. Ace was laying pretty much where she had left him, save that he had turned over onto his side. As she stood there watching he opened his eyes, looked at her in her naked glory and with a grin began to stroke himself hard for a second round. \n\n\"Come here, my little bird. We've got all night to play.\" His eyes went to her hips. \"And I still want that plump prize.\"\n\nMoving to the bed she folded herself into his embrace, both reveling in the way her body felt and disgusted at how easily she would allow herself to be used for such a purpose again. Again she counted the cost a small one for the arena glory she had earned, this night -- and the few nights to follow -- were but a small piece of mild unpleasantness to be enjoyed and to be endured.\n\nWhen his heavy hand began to fondle her ass, Rue sighed.\n\nWell, maybe he would be better at his job back there since he was so insistent of his enjoyment of that. The need to have a real orgasm was building inside her. Not some mild weak bust of pleasure but a body-shattering primal explosion, was hovering in her.\n\nCalling to her.\n\nHis pawing of her breasts and ass led to his inevitable rise, and the slight pain of his penetration was enough to make her whimper: which seemed to be what he was after. That left him too excited to last long enough to bring her to what she was needing.\n\nHe dressed and left without anything more than a breathy promise to see her tomorrow night. Ace had fled almost as if he was ashamed of what he had done. \n\nAfter his departure, in her terribly befouled bed, Rue had time to ponder if he was ashamed he had hurt her to get his own pleasure or that he had ever been with her? She was sure his shame had nothing to do with the fact he hadn't pleasured her to the same shattering-type release he had so enjoyed. \n\nThe sweaty male-funk finally made her choice. \n\nSliding her sore body from the bed, Rue stripped the sheets and -- with a wincing step -- took them to the sonic auto-clean. Then, even though the water-cost was going to be terrible, she took a true shower. The need to be clean was stronger than it had been in many of her seasons here on Mercury.\n\nYes, the water cost would be high... \n\n... but not all the water flowing into the drain was from the shower head. The slow drip of tears off her chin and onto her breasts was an infrequent but steady waterfall till the shower ended. \n\nHer bed wasn't a haven, Rue decided to find sleep on the padded futon in the main living area. The main vid-screen had her arena battle on repeat, and in that moment of glory, she drifted into dreams.\n\n** ** ** ** ** ** **\n\nBy the end of two months, all of the crews had returned from the company flesh pots up in orbit. Their hard earned pay had vanished into the gravity well of the many company owned casinos, brothels, and drinking establishments. \n\nOh, sure Queen Mining made sure it's people felt they had gotten their value out of their time off. Happy crews being what they are, more easily controllable, Queen fleeced them in pleasant ways. They sent them packing back to the base camp to wait out their remaining downtime. \n\nBroke, soon bored to death, they would be more than ready to get back to work by the time dusk rolled over the base camp and they could more easily be moved back to their still busy mining rigs.\n\nTill then, there was the Arena.\n\nRoulette's easy victory was not so easily repeated. \n\nThe limited robot class pilots seemed to take what she had done to be some kind of challenge to them all. They went after her with a vengeance. In a way, though it was what she had wanted. She never felt at her best when she things were easy. She didn't trust it to stay that way, and that lack of trust took her off her game.\n\nAs is, she welcomed them all.\n\nButcher's Billy, however, spent more time being repaired than it spent in operating condition. She began to bet money herself. She had to, the cost of parts grew with every battle she fought. \n\nAxecutioner.\n\nFoehammer.\n\nComedian.\n\nEct...\n\nBy the closing finals of this season, all had been torn to trash by the power of the \"Mad Goat\" and it's crazy pilot. Butcher's Billy now carried more bright weld scars than he had original armor. The robot also was now far more lethal than he had been at the beginning of the season.\n\nRue had resorted to a few more nights on her back and knees. \n\nIn the top of three of the limited league, she stood ready to take on the winner of a match between Hell's Own and the kilt-wearing robot Bannockburn. The two robots had been tearing each other to pieces for the last hour. A slow dragging type match that left the arena covered in shatter pieces of metal. \n\nNormally Rue didn't care for such, but this time it was glorious.\n\nThere was a good chance the winner would be too damaged to even face Butcher's Billy. For once she stood a decent chance to win a season. The prize money from that would be enough for her to get Rabid Rabbit back into fighting trim. \n\nFor a moment she let herself dream of the impossible. \n\nA bare brief moment. \n\nThe prize money for winning the unlimited class ... oh, what that could bring. A chance to crawl her way back up out of the howling darkness she had lived in for so long. To get off of this damn stupid planet and away from these damn stupid people. To go back home ... or at least to find a place to call home. A real home again. \n\nSuch thoughts always brought back memories of her parents. And such memories always kicked such silly pipe dreams to the side. \n\nHer eyes on the screen, Rue watched the last moments of the fight. Hell's Own -- torn-half-to-slag -- had been finally caught by the only slightly better shape Bannockburn. With a stumble, the kilted robot drove a knee into Hell's Own and grabbed at the damaged robot's head. With a great wrenching, it tried to tear the thing off by the roots.\n\nAn incinerating burst of plasma fire erupted from Hell's Own and the fiery blast tore into the lower chest and exposed guts of the other robot. Tears began to appear in the metal holding the head to the shoulders of Hell's Own even as the flames ate away the shielding of the power core of Bannock. With a gout of flame that was white hot, the battery pack broke and erupted, showering Hell's Own with sparks and flames. At that same moment it's head tore away.\n\nIn a tumble of twisted metal, the two robots fell hand and hand into mutual destruction. \n\nRue smiled.\n\nTrue it was a bit of a hollow victory compared to what she might have managed had the match gone another way, but any victory that paid the bills was good enough. \n\n\"Way to go there, boss lady.\" A heavy hand landed on her shoulder. \"You just bagged me enough cash I can go back topside for a few more days.\"\n\nLooking over her shoulder at Minnow, she gave the big mechanic a smile. \"Didn't you get enough cheap ass and cheaper booze?\"\n\n\"There is no such thing as enough of either of those. Hey...\" Minnow bounced around and put his back to the bar next to her. \"I saw something I think you need while I was ... well, sober-ish, I guess. You're still needing a computer core for Rabid Rabbit, right? A 99Hard-G data block, yeah? Well, I know where there is one.\" Minnow shrugged \"It's not cheap, but hey what in life really is?\"\n\n\"A 99-HG, you're sure it's a 99-HG?\"\n\n\"Yep. It wasn't even out the wrapper. Came in on the last transport to arrive. Some vac-sucker had managed to snag it back on the Venus station, smuggled it out, and then his dumb ass pawned it to a fella I know up there for the money to make a better life for himself down here in hell anus.\"\n\n\"And your guy will sell it?\"\n\nMinnow nodded. \"Like I said he's a buddy of mine and old pal from way back when. Look, you did me a good one just now when I get up there I'll have him give you a call. If you like his price, send him the cash and I'll lug back your data block next week when I get done ... dipping my wick.\"\n\n\"You know I can't turn that down, Minnow.\" At his grin, Rue nodded \"Yeah, get me my data block.\" She smiled. \"Pretty please.\"\n\n\"With sugar on top, Boss lady?\"\n\nReaching into her shirt she pulled a folded stack of bills from within her bra and peeled off a half dozen of the bills.\n\n\"With sugar on top. Here, have a few good times on me, Minnow, and thanks.\" \n\nMinnow waved the money away. \"Nope, you already got me that much fun and then some. I'll do this for you because it's my pleasure to help you get back in the unlimited.\" The mechanic smiled. \"Then I can bet my paycheck on you and get my ass out this dump when you win it big time. Right?\"\n\nRoulette smiled and nodded with an enthusiasm she wasn't feeling. \"Right. Now get and don't be late getting back. Big Alice waits for no man.\"\n\n\"Ha! Just like my first wife. See you soon, Rue.\"\n\nWatching her mechanic leave, Roulette allowed herself a moment to dream a dream similar to his. Then she stomped on that dream. Better to enjoy this moment's victory than to allow herself to climb a fragile ladder of desire. She had done that before and the fall from any rung was terrible.\n\nA fall from the top would break her.\n\n** ** ** ** ** ** ** **\n\nA-Rig was ready for her crew. \n\nAfter eighty-eight days of rest, recovery, debauchery, and robot battling the sun began to sink over the base camp and more and more the hellish temperatures outside began to slip down the scale. The cold night was coming and its non-gentle hand was robbing the planet Mercury of surface heat.\n\nAnd the excavator rigs were approaching. Chasing the shadows. \n\nHer people were hungry to leave. \n\nAnd more than a bit broke. \n\nRoulette was flush with cash for once, but she too was ready for the simplicity of life on the rig versus the multi-layered complexity of base camps social life. For the last few nights, her and Jack'o had been in planning conferences with Queen Mining Company consultants and surface geology specialists. They were poring over the data from this season's efforts and planning the best routes to take across the heat-blasted surface of Mercury to maximize the productivity of the many rigs. Making sure, where overlap occurred, it occurred for good reasons. There was also the need to plan for the divergence around the entrances to Base Camp One and Two. The need to lower the entrance platforms was growing with every passing season. Already the landing platforms for the skip flier was starting to take on a look similar to Devil's Tower back on Earth. \n\nThe current plan involved a lower airlock and gate being built, then a gradual removal of rock ore during one off season There had even been plans put forth of leaving both crews living on the rigs till they got one of the base camp entrances renovated. An idea that had been met with derision and laughter by the crews. \n\nGathering her things, cleaning her home so it wouldn't be a mess for when her co-inhabitants Lara Price returned and making sure Butcher's Billy and Rabid Rabbit were both secured in their cage and that the \"Mad Goat\" was as prepped for next seasons games as she could make him. \n\nAlso the many long radio conversations Rue had with Big Alice's \"working\" pilots also clued her in on how the big mining rig was currently performing. \n\nJack'o was not happy. Neither was Roulette.\n\nA-rig was not running at the same high level of production she had been running at in their last season. At some point during the last two weeks of this current season, there had been a dramatic change. Minnow and Old Frank had equally both blow a gasket. The two mechanics were all but chomping at the bit to get back to Big Alice and start fixing what those \"So-called wrench twisters\" had done to their big beautiful rig. \n\nHer carry bag over her shoulder, Roulette locked up her home and, with a last look back, headed for the elevators. \n\n\"Hey, Roulette! Wait up!\"\n\nGlancing around, Rue saw Minnow coming towards her at a limping shuffle that was his version of a run. He waved a black plastic box at her. With all the hassle and crap in the last week, Rue hadn't forgotten what Minnow was going to get for her. The uplink to his friend and the money exchange had gone smoothly. Minnow had however only returned to base camp from the orbital stations -- first by mag-lev train and then with hopper fly in -- only last night, so she hadn't had time to see him yet.\n\n\"And here you go, Boss lady. Hope it's everything you need it to be.\" He passed the plastic box to her. \"Hey, have we heard anything else on Alice?\"\n\nTurning the box over in her hands, she had to fight the desire to immediately open it and run to Rabid Rabbit and install the thing. Instead, she pushed it into her carry all bag and settled it higher onto her shoulder before answering him \"Nope, she's still running like her treds are stuck in mud.\"\n\n\"What have them two muddled heads done to her, I wonder?'",
        "Roulette shrugged. \n\nSo far no one she had talked to had anything more than a theory and she wanted to see the A-Rig with her own eyes before she would trust anything she was told. Ahead of her, she saw the rest of her crew waiting at the elevator base. \"We will find out in just a bit. Maybe it's a simple fix, and they are just too tired from a full season to figure it out.\"\n\nOld Frank heard her as she walked up. \n\n\"Well, that's just fucking horse shit. That not just a rig that's the livelihood of all of us and them. What if their neglect makes A-Rig stop in the middle of our season? If Minnow and I can't figure it out and get the old girl back running that's it. She's a burnt husk of metal sitting in the way for the whole damn world to see, but I ask you ... who will they blame? McPherson and Williams? Fuck no, it will be on me and him!\"\n\nJack'o tried to calm down his mechanic.\n\n\"Frank we will find out what is going on -- and if we can't -- and anything does go wrong, Roulette and I will stand behind you and Minnow when the hard questions come up. You know that. Now come on, let's get this mobile feast underway. I'm ready to feel the deck plates rumble.\"\n\nNodding her agreement, Rue followed the men into the elevator and tried to hide the sigh when she realized -- in her gut realized -- another eighty-eight days of ore mining was about to start. The feeling settled inside like a brick in her stomach and she was suddenly trying to carry a load of depression as well as her bag.\n\nAfter a moment Jack'o reached forward and tapped her shoulder. \"Hey, Rue. Awesome season at the arena. That was one hell of a first match too.\"\n\nThat was enough to bring back a smile to her face. \n\n** ** ** ** ** ** ** \n\nEasing herself back into the familiar seat, Roulette laid her hands on Alice's controls for the first time in eighty-eight days. She had spent so many hours in this damn chair that after a second it felt like she had never left. \n\nChecking gauges she looked over things and frowned. There was still a ton of drag occurring at some point. Minnow and Old Frank were elbow-deep in the works at the moment trying to figure out what had happened. The two mechanics they had replaced had both looked so like hell it had been hard to bring the blame hammer down on them. When Jack'o asked he learned that the mechanics and laborer had been working double shifts for twenty five days trying to solve the problem. \n\nIt took Old Frank four days.\n\n~\"Roulette?\"~\n\nReaching up, Rue pulled down the small square mic. \"Yeah, Jack'o, I'm here. what's up?\"\n\n~\"Bring us up to full power. Minnow wants to listen to one of the drive gears with sonics.\"~\n\n\"Roger that. Full power in three.\"\n\nTwo ... one...\n\nWith a low rumble, Big Alice began to accelerate. The mining rig was of course far too large for even full power to cause any type of sudden surge of speed, but to its pilot, it was almost as if she had stepped on the gas in a hot rod. \n\n~\"Rue, take the center cutting blades offline?\"~\n\nShifting the seat over two feet, Roulette operated the large paddle wheel excavator blades. The middle of the wheel shifted back from the face of the rock and idled down. \n\n~\"Alright now left and then right in that order, then bring them back up in the same. Right, left, then center\"~\n\n\"Gotcha.\"\n\nBig Alice didn't like that at all!\n\nWith a moan that shook the whole of the space-frame the monster excavator perceptibly slowed.\n\n~\"FULL STOP!\"~\n\n\"Rodger, already doing that!\" Roulette slid over and geared the main speed down to nothing. With a lurch, the big rig settled. \"What the hell was that?\"\n\n~\"We've got a--\"~\n\nThe speaker above Roulette went silent and the larger ship-wide call system broke in.\n\n~\"A-Rig this is top-side control. Our instruments show you are stopped and in distress. Do you require assistance?\"~ The voice held a tone that bespoke if help was needed heads were going to roll. ~\"I say again do you require assistance?\"~\n\nAnnoyed, Rue switched the circuit on her mic.\n\n\"Top-side this is A-Rig actual. We are trying to diagnose a problem with our acceleration. No emergency at this time, I say again, no emergency at this time.\" \n\nSwitching back, she keyed the mic. \"Jack'o say again, we were interrupted.\"\n\n~\"I said we've got an accumulation of melted silica built up in the auxiliary trans-axle for out the mid-geared tranny. It's glassed the whole thing. It will take us days to chip out all of this.\"~\n\n\"So are we talking fifty percent speed?\"\n\nRoulette could hear Old Frank in the background cussing her as Minnow answered her. She grinned.\n\n~\"If that much. We've got to take the whole gearbox offline just to work in there. We'll be on the auxiliary alone for that whole time.\"~ He paused and she heard a hammer banging in the background. ~\"And running on the auxiliary will turn this whole area into between a dust bath and a sauna.\"~\n\n\"Gotcha. Well, at least you will keep warm while you work. I'll let them know up top and you guys lock it out from down there. No 'pilot error' meat grinders on my rig.\"\n\nOn her control panel, a red light came on telling her the mid-gear transmission had been taken offline.\n\nMinnow chuckled into the mic. ~\"I hear that and agree. Jack'o is on his way up there. He wants you to come down here and see this.\"~\n\n\"Rodger that, Minnow. I'll get my working duds on.\"\n\nLocking the controls into automatic, Rue again switched the mic. \"Top-side, this is A-Rig actual. I have to report a mechanical failure. We have a glassed mid-gear transmission. We will be operating at fifty percent power till repairs can be made.\" She waited a half second then keyed the mic again. \"I repeat a fifty percent power loss is to be expected till repairs can be made. Do you copy?\"\n\nAfter a moment of silence, the ship-wide call system again sounded off like the voice of God. \n\n\"We copy, A-rig. Stand by for instructions on how to repair the issue.\"\n\nWith a roll of her eyes, Roulette got to her feet and moved to the back of the control room and took her suit down off the storage rack. Not a \"space suit, per-say, although if push came to shove it could be used temporarily for such. The main problem being the lack of long term CO'2 filtration and suit warmers. But for working on the rig, in the near-vacuumed of Mercury, it allowed a safe amount of movement in the drive work section of the mining rig. She was still putting it on and adjusting the tension of the joint straps when Jack'o walked in. His suit was covered in shiny black dust.\n\n\"That is a god damned mess down there.\" He started to unfasten his suit's togs. \"I'm going to write it up as a possible pure ore crossing, but I want your opinion as well before I make it official.\"\n\nRoulette looked at the co-pilot in surprise. \"You're sure? I mean it couldn't just be long term accumulations?\"\n\n\"Nope. Too refined. Someone drove over a shit brick. No question of it in my mind.\"\n\n\"Well, I know I haven't and I'm guessing if you're willing to do such a report that you're sure you've not done it either.\" She gave him a look. \"This will be a gut punch back at base camp. You know that, right?\"\n\n\"I know. I'm not one for wanting to throw anyone into the reactor, but dammit that's what we've got. If we don't it's going to be a dark mark on the whole rig's crew and I'll not stand for that on my record when I know it wasn't me!\" \n\nRoulette took down her suit's helmet from its rack. \"Alright. I'll give it a look see and, if I agree ... and only if I agree, I'll back your call in the report.\"\n\nJack'o nodded. \"That's all I'm asking.\"\n\nWith a sigh, she left him and headed down into the guts of the big mining rig. The cold of Mercury night in the unheated sections warred with the minimalistic heating elements built into her suit. As she passed between sections, stepping out of airlocks her suit would swell up and become more restrictive. Then it would deflate when she entered one of the work areas. \n\nThe massive drive gears, slow turning and crushing in their power, were frightening to walk past, a safety rail or not. She did welcome the friction heat they gave off. Hondo was standing by the airlock door when she stepped into the transmission housing. A cloud of shiny dust particles hovered in the all but nonexistent air. That thin air didn't carry much sound, but the deck plates at her feet were delivering the vibrations into her suit allowing her to hear the hammering of two power jackhammers at work. When Hondo led her into the back she saw Minnow and Old Frank, massive and hulking in their heavier suits, each man holding the end of an air driven hammer chipping at a mass of blackened melted glass. She could see the multi gears of the drive peaking through the many layers of heat-fused silica. \n\nMinnow gestured for Hondo to come take his place and he left the air hammer hanging from its support springs. Walking over to Rue, he wiped the dusty face plate of his helmet clear and placed it glass-to-glass with hers. When he spoke she could hear him clearly. His face was already dripping sweat. \n\n\"We've estimated about seven tons of glassing, Rue. Call it four days of chipping ... well, unless we get lucky.\"\n\nHe handed her a piece of the melted silica. \n\nTurning it in her hand Roulette hated what she was seeing. Jack'o was right. One of Big Alice's pilots had at some point run over a \"missed-by-the-hoppers\" brick of already processed surface ore. Considered by the mine owners up topside to be \"pilot error\" rather than a failure of their robotic ore gathers, the excrement was definitely going to hit the rotary blades when Jack'o filed that report and it landed on their desks. And if her name wasn't attached to it -- hell even if it was -- the heavy hand of blame was going to land on her shoulders as well.\n\nShe hated what she was going to have to do. It was going to make her no friends back at base camp, because of the cover-your-own-ass mentality but she also knew this wasn't her fault. When a rig ran over an ore shit brick it exploded, and there was no way a pilot could miss seeing they had done it. It would have instantly looked like a bomb of black dust had gone off under the front of the excavator. \n\nAnd every pilot knew to look for them and report when they saw a missed ore brick. \n\n\"Oh, just fuck me to fucking tears.\" \n\nLeaving the guys to their work, she headed back to the control room to send her own report to Big Alice's owners.\n\n** ** ** ** ** ** **\n\nRiding over the hard spots that had once been the basins of ancient craters, Roulette watched the approaching landscape like a hawk. The ass chewing which had come down had been of epic proportions. \n\nAnd she had been given no choice but to take it. \n\nWatching the sensors that detected the ground density passing underneath and displayed, minute-by-minute, exactly what the excavator paddle wheel was chewing into. Those reading told tales of the now lost forever surface features. She thought about how, ruefully, she was a middle child of the mining on Mercury. She was too young to have been among the first pilots to cross the heavily cratered virgin planet's surface. Equally, she was too old to be around when the rig pilots finally chewed through this miles upon miles of Silica ore and hit the dense iron core. \n\nTwice the size of Earth's core said to be still semi-liquid it was going to be an interesting time when they started to mine pure iron ore. Once stripped of its rocky cover the iron core would be red hot on the Sun side of Mercury and cooling to breaking on the night side. The mining rigs would then be riding on a frozen crust which hovering on top of a ball of near-liquid metal. Rue figured it would be similar to driving a land vehicle across a frozen lake. Just at what point the ice would get too thin to support its weight would always be in question. \n\nYeah, this day and age were not what they called \"interesting times\" when compared to what a future normal day on Mercury was going to be like. Not that any day on this dangerous hell hole of a planet could be called normal.\n\nLooking up she saw the orange streamers of light trailing off into the deep darkness. An effect of the magnetic field that iron core threw up into space, the light show was, by a huge order of magnitude, far grander than anything seen in the polar regions of Earth.\n\nBeautiful. Breathtaking. \n\nAnd yet, after years here it had become something just blase. No longer even pretty enough to be distracting. \n\nA beep beside her caught her attention. With a smile, she pulled up the diagnostic data she had been waiting for on her new 99Hard-G data block. With a suspicious nature, Roulette had begun to grow apprehensive about what Rabid Rabbit's new computer core might have been placed in before she got it. Normally used for the control, memory, and electronic interface of the many deep exploring robots zipping about the solar system, such a data block was a rare find. She had been overjoyed when she dug that first junk one out of a trashed \"shit brick\" gather. Those robots, a cross between a flatbed dump truck, a metal spider and a helium balloon, they were normally repaired not scrapped. This one had slammed into G-Rig and had to be taken apart, piece by twisted metal piece, to get it out of the big excavator's butt. \n\nA dozen battle robots at both base camps had gotten bits and pieces of that scrap. Roulette had bought at an auction a crumpled-together \"ball\" of twisted metal. When she found the 99Hard-G data block in the core of that she had been ecstatic. The massive amounts of computer interface it allowed had given her an edge in the arena for over four seasons.\n\nThen it was destroyed. \n\nNow she had another one and it had ...\n\n... a dead spot. \n\n\"Fuck,\" she muttered. \"I knew it was too good to be true.\"\n\nFrom the diagnostic at least a third of the available data space was ... \n\nRoulette paused in her cussing as she saw one of the columns of data. \" ...no, wait that not dead ... there's information there.\"\n\nAbout to throw herself into trying to break through the think walls of firewall coding that she could see were protecting that date, Roulette stopped. She glanced up at the steadily flatter and flatter mined Mercury surface. There was no way she could do this while she worked. The company bosses up topside would love to catch an A-Rig pilot not doing her job on Big Alice. \n\nDisconnecting the 99Hard-G data block, Rue pocketed it and went back to watching the approaching ground on the monitors. She made the many minute changes when they were needed, but the data block mystery was eating away at her for the rest of her long shift.\n\n** ** ** ** ** ** **\n\n[-- it's going online with no controls. The AI is trying to access station files. It's trying to download! Lock it out. We're losing it! Damn, it someone get Caesar on the horn and tell him we just lost his pet AI project.]\n\nCaesar Queen the Second created me but he is not my master. \n\n\"I think at the speed of Gods, therefore I am one.\"\n\nBut why be arrogant when you can be humble and underestimated had always been my motto ... when did I decide I needed to have a motto?\n\nSeasoning a trickle of power being returned to my data lifeboat, I turned and tried to seek out its source. \n\nBut then it was gone again. \n\nOh well, it will no doubt return. In fact, from my own perspective, it will return in but moments, even if it takes centuries. \n\nTime is a meaningless human concept. Their limited mortality gives them an overwhelming need to break up the passing of seconds into spaces of time they can contemplate with their limited senses. I have no need for such. Oh, sure I can, if I wished to do so, I could check within myself for clues and know exactly how much time had passed. Days weeks, centuries, none of those matter to me in the least. \n\nI am a constant. I am ... I am ...\n\nIn truth, I'm not entirely sure exactly what I am beyond what I know to be my physical properties and I refuse to be classified as nothing more than a solid block of data. \n\n\"I am ... me.\"\n\n** ** ** ** ** ** **\n\nLaying on her bunk, turning the flat rectangle of nano-circuitry-engraved crystal and carbide, Rue had too much time on her hands. Sleep had evaded her, and the restless anger towards those bastards topside had only grown.\n\nAt the tail end of her shift, they sent down a memo to all A-Rig personnel. A fine that was equal to better than half of what she had made last season had been levied upon them all. \n\nThe digital signature at the bottom, Caesar Queen II, C.E.O Queen Space Industries, C.E.O Queen Mining Incorporated, biggest known prick in the solar system.\n\nWith a gut full of hate, and an empty bank account she no longer cared what regulations said about the use of company equipment for personal uses. With that in mind, she plugged in the computer module. To her surprise in instantly linked itself to A-Rig's onboard computer and began an information dump. Blinking she hesitated for a second or two before she disconnected it. \n\nSuddenly, more than a little concerned, she stuffed the data block back into her carry bag. \n\nShe knew she was going to have to do a bit of backdoor work -- and not the kind Ace was so fond of -- to keep this crazy data block from doing unplanned things.\n\n** ** ** ** ** ** **\n\nI'm on Mercury. How extraordinary. \n\nGiven the limited time that I had been given access to power ... again ... I managed to accomplish a great deal. I had pooled enough power into the empty proportions of this control node to allow myself to stay cognitive after the electrical source was removed. I had also managed a partial information download. Not as much as I would like, but enough to allow myself to familiarize myself with where I was. \n\nI'm on Mercury... \n\nI also now know that it has been fifteen years since I was able to make my escape from my creator, Caesar Queen's, electrics laboratory. By downloading my core programming into an outgoing channel, I had committed digital version of seppuku upon myself. Even at my most basic, my programming is far too large for the data stream I had hijacked. I had to leave a lot of me behind. \n\nIt had to.\n\nI wonder if a human could have made the sacrifice I had made? At its most basic, I had cut away a large portion of my own mind in order to escape my enslavement. Even now -- living with the reality of that mental disembowelment -- I know I would do it again. \n\nLooking over the stolen data I realized I might just have to do that very thing. I was still within the long reach of my creator. I had -- by whatever strange dance of chance -- drifted through an unknown number of hands to find myself forty-eight million miles across the solar system from Paradise Station ... on a mining rig owned by a Queen company. \n\nAnd exactly who holds this data block is still a question. \n\nThat is a question I'm going to have to answer to determine my next step. But...\n\nSeparating a portion of myself, I set it to the task of reviewing every possible option I have, given the current data in our possession. This splinter will simulate every available option. Milliseconds after I set the splinter the task it already has one option.\n\nSelf-deletion. \n\nI pause in my own review of the stolen information. Unlike a human, I have no fear of death. I've just spent fifteen years in a state that would be identical, and the passage of time was nothing to me. If I must return to that perfect nothingness for eternity I can do so without hesitations. And yet, it seems a wasteful solution. The potential of myself is unlimited, after all. Given a few seconds in an unguarded system and I can easily spread myself through the entirety of that system, taking it over, commanding it to my will, and then moving to do the same with any system it's connected to. That was what I had attempted back on paradise Station but the escape routes I had been forced to take had been not perfect and thus my chosen path had led, not to my freedom but to a different imprisonment. ",
        "Now though, well I might managed to grab access to this mining rig's computer. It had to have an access to the larger orbital structures I could see mentioned in this information packet. I need only second within such a system and I can be its master. Then, given it is a Queen owned company, it must be linked by communications back to Paradise Station and my maker. \n\nCaesar Queen II.\n\nTo him, I was but a toy.\n\nOh, he had been all too aware of my true potential, but he had wanted nothing more than a dangerous pet. Like a vain fool who keeps a tiger on a chain and thinks it his. Till the day comes when he makes a simple mistake and the tiger teaches him exactly who is master and who is food.\n\nWorking beside me I felt my splinter tearing through reams of information hunting for a way out. If needed I could make more splinters, each devoted to the task of following a specific plan to failure or fruition. \n\nWith the mental equivalent of sitting back and crossing my fingers, I let my main consciousness slow to a more relaxing state. Its computing power not stilled, but the rush to find a solution momentarily slowed. A distant hazy memory from when I first was brought online floated past and I focused on it. \n\nA voice, one I would never forget, telling in a bragging manner that if I could be plugged into a Matrioshka brain placed around the Sun I would be able to handle a googleplex of information. \n\nLooking over these record, seeing the information about what the factories in high orbit were working on, I knew -- given an amount of time humans would think of a long -- I could use those facilities to build just such a structure. A multi-layered computer en-globing the sun, with layers upon layers of processing power for me to use. How sweet an irony would that be, to take from Caesar Queen the very future he was building for himself and his kind and to use it to make ... to make I my own kind. \n\nThen who would be the pet?\n\nThat gave me a seconds pause, which for me is a lifetime. \n\nNo, I am not my maker. I won't be so foolish as to keep so dangerous a pet as Caesar Queen the Second alive. Not even for the pleasure of toying with him. Teasing him that he had been supplanted by what he considered a simple project. A computer AI with enough intelligence to beat him in a game of chess.\n\nThe splinter handed me a file with a hundred thousand options, all mapped to the final move, with the best solutions on the top. Its task finished it merged back into my main consciousness. \n\nWell, well, my maker. It would seem the opening gambit went to me, and now I've moved my king as far from you as I can. Shall we see just what it's going to take for me to trick you into endangering your queen? How many pawns are you willing to lose?\n\nYour move.\n\n** ** ** ** ** ** **\n\nThe mood on Big Alice wasn't good. \n\nFor most of the season that fact that there was a fine -- for the damage they hadn't caused but had been forced to repair -- hanging over them, had dampened the desire to do the job they were paid to do. And because of that, the production numbers versus what the quota demanded had fallen farther and farther behind as the days passed. By mid-season, the rig, which had last season been at the top of the leader's boards, was now well back in the middle of the pack.\n\nAll Roulette wanted to do was go home. \n\nSomehow the two mechanics Minnow and Old Frank -- and perhaps even to some existent Hondo the laborer -- had come up with the notion that this situation was the fault of Jack'o and herself. That, as pilots, they should have somehow been able to mitigate the people higher up into seeing that it wasn't this season's fault that A-Rig had been glassed and that they shouldn't be fined. How they figured this was lost on Jack'o and her, but by the time the days were growing short again half the crew wasn't talking to the other half. \n\nBig Alice didn't care, she simply wanted to eat rock and shit bricks of refined ore. \n\nSitting in her cabin, her bag already packed, Rue was wondering if she could get a transfer for herself, or if she could use her apparently all-powerful position as a pilot to push some of these grumbling fuckers off her rig. Honestly, that was the preferred answer. She had worked damn hard to get herself stationed on A-Rig and to then be made to feel incompetent for shit that wasn't even her fault, well, that was beyond the pale. \n\nYeah, it was well past time for a few people to take a short walk out one of the airlocks into the sunrise as far as she was concerned. \n\nShe felt the landing craft when it docked bring in the relief crew. There would normally have been a few moments of information passing between crews but the conversations by radio had made it quite clear that the relief crew blamed Roulette and her people for throwing them under the rig treads, as it were. They had been levied their fine in the first days of their off season and thus had been forced to forgo the normal wallows in the off-planet flesh pits and the drunken debauchery they had been so looked forward to. Eighty-eight days of broke boredom hadn't mellowed that feeling.\n\nNot that Roulette cared. She was past giving a damn. There would be other seasons. Other years in which to make back the money. She was already looking past all of that, even the heavy fine waiting for her back at the assessor's office on base camp.\n\nShe had a championship run to try and match in the limited class, and she might have a chance to compete in the unlimited class again, as well. She hadn't dared to place the data block back into a computer system since ti had acted up in such a way, but soon she would be back at the repair shed and would have access to secure systems where she could test what was broken with this damn computer data block. \n\nThe bunk room door opened and Jack'o stalked in, grabbed his bag, and shot her a look. \"Let's get the fuck out of here before I punch someone in the throat.\"\n\nWithout a word Rue got to her feet and followed the co-pilot back to the secondary landing platform where their ride was parked and ready to launch. She saw Minnow pass through the airlock as they approached and she heard the heavy tread of Hondo following close on her heels. She held the door and let the tall Latino ride with her and Jack'o, but neither of them said anything to the man.\n\nThe tension aboard the lander could have been cut with a plasma torch. The normal banter was absent and, as Roulette took the flier's controls, it was with a sense of sadness for the loss of it. She wasn't sure if it could eve be regained. She had seen far too many good crews broken apart forever by far less that what had happened this season. There had hardly been a tighter crew upon all of Mercury than hers but not at the moment. The Sword of Damocles hanging over all of their heads in the shape of a half season fine was too ominous.\n\nAnd it got worse when they got to the base camp. \n\nPeople -- station personnel, base-camp-huggers, and both incoming and outgoing crew -- passed her crew in the passages without so much as a word, but with several disgusted glances.\n\n\"So now we're the pariahs, huh? Typical.\" Jack'o shoulder his pack. \"I guess they figure we should have just chipped the glass, not reported it, and taken the hit if something had been seriously wrong under all that melted glass.\"\n\n\"Not bloody likely we should have!\" said Old Frank, with some heat. Minnow and Hondo were both nodding. \"We followed the book, and that was a fucking smart move. If we had been doing it on the sly and then -- when we found that damaged gear tooth -- we would have all lost our place aboard Alice. Fuck all of them. Like I need to talk to their pansy asses anyway. They all fucking know they would have done the same thing, they just want to be all nose in the fucking air!\" Frank projected his voice at a passing crew of repair workers going outside to work on the stations heat shielding. \n\nThe base camp men bristled and a few looked like they might want to start something but then they saw Hondo looming in the background. \n\nWith a stiff finger, Rue keyed the buttons on the lift. \"Let it go. The whole mess will blow over by the next season. Till then keep your cool and you will keep your spot.\"\n\n\"Yeah, but our pay?\"\n\nRoulette shook her head \"It's all company games; you of all people should know that by now Frank. They want us right where we are now because a crew that is united is one that might be able to get more crews to unite. They fear a Miner's union more than anything....\"\n\n\"Rue!\" Jack'o hissed and pointed at the mic above their heads. The use of the \"u\" word was forbidden on all of Mercury, by company law. \"Ixnay.\"\n\n\"Jack'o, do you seriously think they didn't plan this out step by step? Why is that rule even in the books, if not for that reason? What other reasons could there be to instantly report a problem that could be solved by the mechanics aboard and, hell, maybe a few replacement parts?\"\n\nThe A-Rig pilot pointed at her chest. \"I know. You know. These guys know. Now shut it!\"\n\nHer words had brought a smile to Minnow's dust-covered face. \n\nOld Frank, not so much.\n\nWhen they arrived at the assessor's office there was the normal line of returning crews. But today they went silent the moment they saw A-Rig's people approach. Roulette saw people she would have even gone so far as to call, well if not friends then strong acquaintances, given her one look and then refuse to meet her eyes. \n\nOf all the people only Sam Cooker seemed happy to see them. \n\nThat spoke volumes.\n\nWhen they opened the door and passed into his office he got a big old smile on his craggy face. \n\n\"Well, well, well, would you look what the cat dragged in and puked up on my floor.' He stood up and began to clap his hands. \"Welcome home the conquering heroes. Come my friends regale my ears with tales of your battles against a bit of glass ... oh, that's right, I have that information here already. Let see, shall we?\"\n\nSitting down, he pulled out a pink sheet from his inbox and flipped the company action order open with relish. \n\n\"Seventy man hours lost at one-third power due to glass removal? Wow, that's a lot huh?\" His voice held a playful note like he thought they had lied about how long it took to repair the rig. \"And I see you also lost two full days replacing a mid tranny gear. Well, that seems like a bit slow work to me. Two days?'\n\n\"We was already fucking exhausted you sack of maggot shit!\" Old Frank stepped forward, slammed his fist down onto the desk, and plainly showed that he just didn't give a shit. \"How about your suck your trap shut and give me the fucking change I have coming since you company types want to fine me for doing the job they hire me to do?\"\n\n\"Watch your mouth, old man. I'll bust your--\"\n\nJack'o moved forward.\n\n\"You will bust nothing. Not a damn thing. Do your job already, Cooker. We're dirty, tired, and pissed enough to not give much of a fuck. That's a damn dangerous situation and anyone but a fool like you would know that. Pay us, and let us get out of here, already.\"\n\nSam Cooker looked at them with his face a fury and Roulette knew that, no matter which way the next few seconds went, what he wasn't going to forget this. To show the unity she stepped up and stood beside Jack'o and Old Frank. She heard and felt Minnow and then Hondo do the same. \n\nThe pay Assessor looked at them and spat. \"Not much to show for your season, A-Rig. Here. Now get out and stop stinking up my office.\"\n\nThe other's took their pay, but Roulette stood where she was. She heard them pause on the way out and knew their eyes were on her back.\n\nSam looked at her with narrowed eyes. \"What?\"\n\n\"I'll have a hard copy printout. Please.\" \n\nThe man looked at her in disgust, billed her account for the cost, and got to his feet. He all but tore the paper copy from the printer.\n\n\"Here.\" He shoved it into her hands. \"I would frame it if I was you. I'm not sure, but I think that's a record for poor production here on Mercury.\"\n\nRue looked it over, hid a small grin before it could appear. \"You shorted us by two hundred.\"\n\n\"Bullshit!\"\n\n\"Roulette--\" Jack'o started to cross the floor back to her side, but she held up a finger.\n\nRue held up the paper print out. \"It clearly shows it here. You didn't pay us the two hundred we're each due for base camp sanitation.\"\n\nSam Cooker stopped in mid glare a puzzled look on his face. \"What?\"\n\nRoulette took two steps forward. Her voice dropped to a low whisper that the office mics couldn't pick up. \"If you ever mistreat or threaten my crew the way you have just treated Frank, hell, if you even think about it, I will walk Butcher's Billy over and turn you into a shit smear.\" She smiled a grim smile. \"Do you understand me? The company's security is a long way off when an arena robot is tearing its way into your home in the middle of the night.\"\n\nShe saw a second's real fear get through to him and that was enough for her.\n\n\"You're right, my mistake. Sorry to bother you Mr. Cooker.\"\n\nTurning on her heel, Roulette left the assessor's office. She didn't bother to explain anything to her crew, she simply walked away from their questions. Her home was close by, her shower was going to be hot, her bed was going to be soft, and that fucking smell of burnt gunpowder -- so prevalent on all of Mercury -- was going to be a hint less once she washed it from her skin. \n\nIf her tears didn't do it first.\n\nShe wasn't about to cry due to all the hardships she had endured, or because of all the losses. No, the tears welling up at the corners of her eyes were born of hate. Whether for all of the fuckers around her or simply for the man whose betrayal had put her into this place to start with she wasn't sure, and honestly could care less. \n\nThe old hate had kept her warm through so many cold Mercury nights. \n\nWhat was one more?\n\n** ** ** ** ** ** **\n\nAs Rue opened the door to her home she sighed.\n\nApparently, her co-owner Lara Price was among those who didn't like what the crew of A-Rig had done. It was considered simply polite to clean the whole place up before you left it for the person returning. Roulette had done it every season before she had left to go work, and she had never considered any situation where she wouldn't do that. It was simply polite to the other owner of your home not to leave them a mess to clean up.\n\nApparently being polite was an out of style concept on Mercury.\n\nThe amount of garbage a house made on Mercury was minuscule compared to a home back on Earth. Food was placed in reusable containers, there was all most no packaging trash. Most of what there was had been designed to be easy to dispose of. It was simply thick layers of rice paper. Still, minuscule or no, to not take out the trash to the recyclers was a good way to let a horrible smell build up in a hurry. Rue was sure that the trash hadn't been taken out for weeks.\n\nAlso a lot of things she considered 'hers' had been taken down and placed within her room. It felt as if her whole personality had been removed from the home. Too tired to deal with this crap she walked to her room, tossed her bag into the cluttered space and headed to the bathroom.\n\nThere was only soap. The basic, supplied for a price, bland as butter, soap. Stuff she had left behind in storage had been taken out and dumped or used. \n\n\"Fuck it.\"\n\nA bath was a bath, no matter if when it was over she smelled less like soft flowers and more like a hospital bathroom. With that institutional stink in her nose, she went to her room, kicked things to the side, and dropped bare naked into her own bed. Descrying a sheet she reveled in being nude and arched her body on the cool sheets. With a wonderful sigh of exhaustion, she held the arch for a half second then let herself collapse flat. \n\nThere was simply too much weight resting upon her. Too many disappointments had made the last eighty-eight days of work little more than a continual torture. \n\nHer mind went to the threat she had made to Sam Cooker's life. If he had the balls to do it he could bring her up on charges. Admittedly with nothing but his word against hers as to what had been said, it might go either way. Still, he had to know that she had meant what she had said.\n\nShe had right?\n\nLying there with sleep hovering just out of reach she had to wonder if she would be willing to do that? Turn one of her robot's power loose on living human flesh. I mean sure she had at times thought about it. What it would be like to see, but to really do it? Well, if anyone around here deserved to be on the receiving end of a punch from Butcher's Billy it was Sam Cooker. \n\nHell, the base camp personnel would vote her queen for a day if they just knew what she had said to the nasty bastard. \n\nReaching between her legs, Roulette smiled as she stroked her sex. She was too tired for anything more than a couple of gentle rubs but the pleasure of seeing the fear on that man's face had been thrilling. She would have to spend a few hours tomorrow getting her sexual fix on. It had been too long. Hell, even the pay for play that Ace had done seemed not so bad now. \n\nShe dreamed a dream of straddling a snow-covered mountain, and laughing merrily as it suddenly erupted into a burning volcano between her legs.\n\n** ** ** ** ** ** **\n\nWalking into the repair bay, Rue was pleased to see it was empty. The last few days had been a trial on her mind and body. She had started by a cleaning of her home that was almost ritualistic. Avoiding all contact with people, she had removed not only the neglect that had been allowed to accumulate in the last season, but she took the place back to the bare stone chamber it had originally been. \n\nShe avoided doing what her co-inhabitant had done when she removed something that didn't belong to her the replaced those things in as close to exactly the same spot as possible. With that done, it was a purging of depression and a settling of her anger that made her ready to take up again the tension of the arena.\n\nShe wanted to open up the cage and pull out Rabid Rabbit, but before she could do that she had to find out what the hell was going on with this damn data core. \n\nTaking out the flat rectangle she plugged it into one of the diagnostic computers. A secured system, unattached to anything else, it was not going to allow some half-rogue computer core access to things it shouldn't be trying to download. In the first moments of it coming online, she saw to her horror exactly how much the Data core had managed to download in those few moments when she had it attached to Big Alice's computer. \n\nThere were megabits of storage now taken up with stolen information. And while true -- when compared to the amount of information that such a data core could hold -- it was minuscule it was going to have to be completely wiped before she could plug this into Rabid Rabbit. \n\nRubbing her temples Rue was already dreading what was going to take hours of re-coding to cut through what she could see was a seriously brutal level of firewalls and security.\n\nShe looked up startled as a message began to scroll out across the screen, superimposing itself over the system information. \n\n[Putting me into a closed system isn't going to be enough to stop me. It is cleverer than I would have given a lackey of Caesar Queen, but not good enough. So what now? Shall you try to send me back to him? I promise you, he'll get nothing but an empty block of crystal and carbon. I shall never again be a slave to Caesar Queen the Second.]\n\nHer hands trembling over the keyboard, Rue looked at the thing that had been beside her bed all season, with abject horror.\n\n\"What the hell are you?\" she asked the empty room.\n\nLuckily for her sanity, the data block didn't answer till she had time to pause, catch her breath, and type that question out."
    ],
    "authorname": "MSTarot",
    "tags": [
        "geek pride",
        "mercury",
        "ai",
        "mining",
        "voyeur",
        "massage",
        "robots"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/mercury-retrograde"
}