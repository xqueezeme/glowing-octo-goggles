{
    "title": "Dry, No Lube Ch. 06: Skulduggery",
    "pages": [
        "This is, in some ways, a different sort of Pixy story. It had been marinating in my mind for quite some time, so I finally bit the bullet and set it down. I'd been wondering about the viability of a Juno spinoff, but this story has told me that's not a great plan. But? Once I write something down, published or not, it has \"happened.\" So? Here you go.\n\nIf this is a little darker than Pixy's previous adventures, that's only because her service aboard Desperado has always been a bit tentative. Let's hope for better things in her future! [hint, hint...]\n\nI do hope you enjoy!\n\n* * *\n\nPrologue\n\n* * *\n\nThe unblinking vidcam churned on in its corner, buried in the wall and then hidden behind a translucent paintscreen, completely unnoticed by the writhing men on the bed.\n\nNot that they'd have cared, though. They were being pleasured by the wet lips and expert fingers of Sharaya Suryasta, which meant they were oblivious to everything but what she was making them feel deep in their minds, souls, and balls.\n\nShe was excellent, recruited from the pleasure ships orbiting IV-Kovolev-D and then sent to the Army's best sexual-enhancement training courses, the ones they saved for prospects bound for service with generals and diplomats and people like that. And Warrant Officer Suryasta had been top of her class, as well as top of several men, meaning she'd been sent off to work for the shadowy \"Subcolonel Smith\" and his weirdo aide Captain Corcovado, which might have even been his real name.\n\nNobody in the rest of the Army, once she'd left the school, had heard much about her ever again.\n\nAnd now she knelt above a planetary viceroy and his chief of staff, a noxious little sadist with a small dick that now pushed insistently into Suryasta's eager mouth while his boss, possessed of a significantly larger penis and three mutated testes, watched from his pillow. He's a three-bagger, Smith had cautioned her, so it'll take awhile before he's relaxed enough for you to kill him without danger.\n\nShe'd tossed her long hair, definitely outside of Army regs, and curled a contemptuous lip at the colonel. \"Do I look like I'm worried about emptying as many balls as I need to, sir?\"\n\nHe'd smiled at that, grimly, knowing the value of his woman: WO Suryasta had never, ever failed an assignment, and she didn't intend to fail this one either. She had no clue why she'd been sent to liquidate these two minor functionaries; she didn't really care, though. Maybe Corcovado knew, maybe not; hell, maybe Smith didn't even know. It didn't matter.\n\nThey were soldiers. They followed orders.\n\nThe little chief-of-staff moaned, her hair wrapped tightly around his graceful fingers as her mouth flickered along the base of his head. He'd tasted like sweaty underwear when she'd arrived, but by this point in the evening he mostly just tasted like her: like her spit and pussy, and like his boss' semen from when he'd taken sloppy seconds earlier. He was as hard as he'd ever been, she knew, her tongue curling against the big vein on the top of his shaft, and her brain allowed a tiny moment of satisfaction when she reminded herself that, if she did her job right, he was as hard as he'd ever get.\n\nThe camera, she knew, was watching.\n\nKilling two at a time was a challenge, she reflected as she hummed on his cock, her fingers resting on his hairy thigh. She'd wrapped the other hand firmly around the viceroy's triple nutsack, marveling at its heft. He was her very first three-baller in the Army, though she'd encountered a lot of them back on that squalid Kovolev fuckship. She wondered idly about her batting order; the idea was that you obviously killed the more dangerous one first, but she was having trouble figuring out which one that was.\n\nShe thought it might be the viceroy. He certainly had the power. The chief-of-staff was odious, sure, and quick, but she figured she'd be able to murder him calmly enough once his boss was done.\n\nSometimes it mattered how the killing happened. When she'd first come to work for Smith, he'd sent her on simple, direct assassinations, or as an assistant to more experienced women. Those had usually been done with cautery, or a pistol, but later there'd been times that the thing needed to look less specific: like a suicide, say, or a lover's spat. Other times he'd wanted it extra-gruesome, to serve as an example for the enemy.\n\nOr, at least, for Subcolonel Smith's enemies.\n\nThis was one of those times. \"Go ahead and use the knife, Sharaya,\" he'd advised in his grave, cool manner from behind his desk aboard the Kilven. \"Make it nice and bloody.\" She'd smiled, tight-lipped, accustomed by nature and experience to limit her revelations, and now as she felt the chief-of-staff's balls quiver against her chin she decided he was close enough to cumming that she could get started on his boss.\n\nHer pussy still ached from where the viceroy had pumped into it not five minutes before, his semen still running thick down her inner thigh; her hand on his body felt nothing but total relaxation, complete lassitude. She'd drained him four times now, and she figured she could be quick enough to leap onto him, her hand going for the knife she'd hidden in the headboard, and slash his throat while his chief-of-staff was still ejaculating and wondering where her mouth had gone.\n\nThen, she could deal with him. And once he was incapacitated, she could start carving them both. And the camera would catch the whole thing.\n\nThe hairy little fellow beneath her arched upward, his leg tensing beneath her palm, a strangled moan cracking from his throat as she bore down. Every sense of hers was on alert now, a deer in a shooting gallery, the timing clear in her mind. Her task was well-rehearsed: the moment she knew he'd start to spurt, he'd be completely unable to do anything as she murdered his master.\n\nSo? She got ready.\n\nThe knife was clamptaped along the top of the headboard, four shining inches of titanium, sharpened to a keen edge by her tattooed apprentice Nia, the unit's scum-bitch. The viceroy lay sprawled, his penis amazingly beginning to lurch back into thick, sticky life against her fingertips, but it was too late for him now as the dick in her mouth trembled, firming, launching.\n\nShe was off the chief-of-staff at once, his cum fountaining grandly into the air, her fingers flexing toward the hidden knife while her other hand convulsed hard around two of her target's balls. He was grunting, the breath leaving him even before she knelt on his chest, and he still didn't quite know what was happening as her knife plunged hard into the side of his neck and then ripped across, her arm dragging it from the shoulder as Corcovado had taught her so many months ago.\n\nThe other man's semen hadn't stopped arcing before the viceroy's blood joined it, twin streams pumping like the Imperial Fountains on Hyksos III. She distinctly felt the three-bagged cock give a twitch against her foot as the viceroy started to bleed out, but by then she was already springing off his body and back onto the mattress, squatting, ready to lunge at the chief-of-staff.\n\nWho was twisted off to the side, fumbling for the bedside table with his cunning eyes fixed on her reddened blade and his fingers going for the basket-drawer...\n\nSuryasta did not wait, did not try to gather herself or plan her assault or seek a new position: she attacked at once, driving forward from her sex-strong thighs, her body smacking into his wide-eyed face and bearing him to the floor beneath her, the knife already coming down into his chest as his head struck the deck.\n\n\"Goddammit!\" she grunted, her hand clamping over his mouth as his eyes went wide: she was using a swept-sheepsfoot blade, for slicing, and it didn't want to slide neatly into the man's torso. She angled it further down and forced it in, hard and slow, his breath coming out in strangled gasps between her fingers. The force of her strike drove her hand painfully hard against the hilt. \"Come on,\" she muttered, willing the blade to find something useful behind those ribs.\n\nThe man heaved, almost bucking her off, and in desperation Suryasta bore down on the hilt. Her hand slipped past it, onto the blade, and the tight sting on her palm sent a wave of coldness into her whole arm; she gritted her teeth and persevered, using her other hand to drive the blade, the knife finally penetrating up into a lung.\n\nBy that time she had her other hand, slick now with new blood, on his neck, throttling him as a Plan B. She wasn't sure what finally made him lose consciousness, but it hardly mattered: after awhile he stopped struggling enough for her to adjust her grip on the knife, wrench it back out of him, and sweep it once, hard, across his throat. It all stopped after that, her nude body covered with his blood, cradling her own cut hand as she willed her legs to push her to her feet and turned to make sure of the viceroy.\n\nHe lay on sheets turned crimson, his hand pushed against his neck; the staring eyes he turned on her didn't see much, she knew. He was still alive, on a technicality, but he'd be gone very soon. She ignored the death-rattle from the chief-of-staff as she crossed quickly into the bathroom, shoving her hand into the Portable Surgeon the hotel advertised in every room, then grimacing slightly as the suturing iron within went to work on her hand.\n\nSmith was already talking when she left the bathroom and found her earpiece. \"Report!\"\n\n\"They're away,\" she snapped briefly, controlling her breathing. Every whore knew how to avoid panting like a racehorse when talking to a man. \"Minor damage to my hand. I'll start carving, then do my cleanup and be out in twelve minutes, sir.\"\n\n\"What was in the basket-drawer?\" the man's low, even voice rasped in her ear. \"Was he going for a pistol? Our assessment was that he was unlikely to have a weapon.\" Yep, that was Colonel Smith: always curious about whether their assessments were correct. A data nerd if ever there was one.\n\n\"Standby.\" She stepped over the chief-of-staff on the floor, and by now he wasn't even convulsing much anymore. The bedside table held a tiny injection meter, the prepackaged kind you could buy at the pharmacy already filled. \"Injector,\" she reported briefly.\n\n\"What's on the label?\"\n\nShe frowned down, standing in a blood-puddle. She needed to get to work. \"I can't pronounce it.\"\n\n\"Show the camera, Sharaya.\"\n\n\"Sir.\" She turned, lifting the device up to the corner of the room and holding it until the colonel spoke once more in her ear.\n\n\"Got it. I'll look it up. You get to work.\"\n\nHe had an answer by the time she was done arranging the viceroy's severed limbs into an artful pile by the door. \"It's a coagulant.\"\n\n\"What's that, sir?\" She was attacking her skin with a drywipe, scraping away the sweat and sex and blood. She checked her chrono: still three minutes to get dressed and leave the hotel.\n\nSmith sounded amused as he speculated. \"I suppose he was thinking he could solidify his blood, so that he'd still stay alive after you stabbed him? It's a drug used in field surgery, to keep the body oxygenated for limited periods. Until the patient can get sutured and off to a haemo.\"\n\n\"Mhmm.\" She didn't care much. She rolled her stockings up her legs.\n\n\"Interesting. His decision wasn't to fight back. It was to die, then return.\" Smith often mused about things like that, but Warrant Officer Suryasta had other things to concern herself with. \"Get to the rendezvous, Sharaya. Captain Corcovado is already there with the shuttle. We're still on schedule.\" She nodded, already digging the camera out of the wall.\n\nThe door slid neatly open, letting in fresher air from the hall. Suryasta leaned out, checking her escape route, her bag banging against her leg as she passed from the abattoir she'd turned Suite 239 into. She turned quickly, pulling a stasis gun from the bag and doing something complicated with the lock as she shut the door.\n\nThe right people would find the body and read the message. Smith would make sure of that.\n\nThe night air was a cool, refreshing wall as she walked calmly from the hotel and across the old-school sidewalk. The streets here were still using concrete, looked like; this planet was moving along nicely, but it was still primitive enough to be charming. She wondered idly how the place would do once someone picked a new viceroy.\n\nShe saw the headlights coming straight at her, but she didn't really understand what they meant. WO Suryasta came from the moons of Lestad, advanced enough that nobody had seen an actual automobile in more than three generations. So she stood in the street, frowning uncertainly at the lights as they grew bigger and bigger, the car's speed impossible for her to gauge because she had no idea anything on mere wheels could move so fast. Her eyes caught the lad behind the wheel, head turned, paying no attention to the soldier in the road bracketed by his headlights, and she was still trying to figure out why the vehicle wasn't autostopping when it smashed straight into her at high speed.\n\nSubcolonel Smith had no cameras around to see what happened.\n\nThey found her head six whole meters away, in a patch of shadow that made sure they discovered it too late to get her into a haemodrive. The constable who picked it up, holding it by its lustrous hair, marveled at the look of frustrated confusion she'd died with. Too bad, the man figured.\n\nShe'd been a real hottie.\n\n* * *\n\nPart I: Pfeiffer\n\n* * *\n\nPixy brooded, staring down into the bowl. \"Juno. How long have you been my steward?\"\n\nThe little redhead leaned back from inside the XO's cabin's tiny galley space, where she was disinfecting the dishes. \"What's that? You'll have to speak up, ma'am.\"\n\n\"Fuck off,\" Pixy muttered.\n\n\"What?\"\n\nShe cleared her throat and set down the chopsticks. \"You've been my steward for, like, almost two years. Right?\"\n\nJuno scrunched up her pretty face, the freckles leaping around. She looked about twelve, Pixy reflected, an innocent and na\u00efve waif. But she was anything but. \"About that, ma'am. Since you came aboard.\" She turned off the acid bath and frowned into the dining cubby. \"Out of curiosity, why do you ask? Is this about Payne?\"\n\nPixy snorted. \"Payne is your obsession, not mine.\" She sighed and leaned back in her chair, looking once again at the bowl. \"In all this time, Juno,\" she began patiently, \"you have failed to master the proper method of cooking macaroni and haggis the way I like it.\"\n\n\"Then your palate sucks,\" shrugged the steward. \"I cook like a maniac, ma'am. You just need to climb aboard and enjoy my fucking food.\"\n\n\"I do. Most of it.\" She turned and stared moodily out of the hull, trying to take solace in the stars out there. \"But... mac 'n' hag takes a certain panache. A certain subtlety. You're a good cook, but you just don't seem to be able to figure it out.\"\n\nThe steward blinked, then turned the disinfector back on. \"Make your own. Ma'am.\"\n\nPixy bristled. \"Given the fact that I'm supposed to be using Payne as my steward instead of you,\" she said severely, \"I would think you might want to rein in your saucy fucking mouth a little bit, before I fire you and bring him up here.\"\n\nThe little woman laughed easily. \"You're not going to replace me with Payne. You don't like that nauseating little prick any more than I do.\"\n\n\"It's complicated.\" Pixy prodded mulishly at her food. The crew were beginning to talk, she knew. Sailors could be superstitious, and even when they weren't, they liked things just so. Life aboard a starship at war was a precarious balance, almost a dance. Everyone had a place to be and a job to do. That's the way people liked it, and commanders screwed with that at their peril. Pixy, who'd had plenty of shitty captains herself during her thirteen years in Fleet, knew all this implicitly. \"You know it's not simple, Juno.\"\n\n\"Fuck that.\" The redhead wiped her hands and leaned against the galley partition, petite and self-assured with that air of competence about her, like she had everything planned out. Like she already knew what was going to happen. Pixy hated that, since it was an attitude she'd been trying to cultivate herself for her whole career.\n\nShe suspected Wrae Juno did it better.\n\n\"It is simple, ma'am. I've checked the regs.\" The steward bit into a fresh jarga fruit, just dropped off yesterday from the hydroponic bins aboard Oleander. \"You're not the skipper. You're the acting skipper. Nothing says you need to take on the captain's steward.\" She paused critically. \"Though, your own steward would have no objection to you taking over the captain's actual quarters. Since they're just sitting there, unoccupied.\"\n\n\"Yeah.\"\n\n\"And it's not like Captain Ledecki needs them. She's dead.\" They both reflected on this. The captain was dead, it was true, her spatial needs reduced now to the haemodrive unit that hummed in Doc Borowicz' freezer while her brain in its shattered skull awaited transplant into her clone. Maybe. If her clone could be located and shipped. If the transplant worked. If the bomb that had killed her hadn't damaged the brain, anyway; Borowicz wasn't sure. \"I'd love to be the steward in an actual captain's quarters,\" Juno went on dreamily.\n\n\"Doesn't solve my problem.\" Pixy slurped at her mineral milk. \"Fucking Payne. Captains' stewards are full-timers. They're not like you, with your legal duties. Payne is literally a useless mouth to feed, with no job at all except keeping Ledecki's vacant quarters clean.\" Pixy sighed. \"I should take Payne and give you to Mr. Delmer. Since Fleet seems to have zero sense of urgency about assigning a permanent captain.\"\n\n\"Fuck you.\" Juno spat out the jarga pit. \"I'm not working for Delmer.\"\n\n\"He's the acting XO,\" Pixy pointed out mildly. \"He's entitled to a steward.\"\n\n\"Well then,\" Juno giggled, \"it's a good thing this ship carries an extra steward at the moment. Isn't it.\"\n\nPixy stared. \"You're saying I should give Chonny Delmer, who is merely a lieutenant, a full-time steward to attend to his personal needs?\"\n\n\"Why not?\" Juno swallowed the last of the fruit. \"He's been acting as XO for months. Seems like it's only fair. Besides, he's a promotable lieutenant, so he's almost a commander.\"\n\n\"Subcommander.\"\n\n\"Like you.\" Juno bared feral little teeth. \"Look, whatever. Just don't make me work with Mr Delmer, please? Pretty please?\" Her big eyes took on their usual sly expression. \"If Mr Jeyne needs a steward, however, I'm fully available to meet his every need.\"\n\n\"Fuck off,\" Pixy snarled. Jeyne was Pixy's bedwarmer, and Juno had long been conspiring to get him into bed. \"Over my dead body.\"\n\n\"I can arrange that,\" the steward muttered, staring fixedly at Pixy; yes, she could. She had murdered several officers already, though Pixy had to admit she'd improved the ship in doing so. \"But I won't. Probably.\"\n\n\"Gee,\" Pixy replied, her voice small, \"thanks.\"\n\n\"Staff call at 1400, ma'am,\" Juno announced, lapsing back into steward mode from girl-at-a-teashop mode, \"then you need to endorse that Legal shit I left in your office this morning. And the OOD is due with a report in about...\" she frowned up at the chrono next to Pixy's light-lizard, \"well. Now.\"\n\nOn cue, the hatch slipped open. Pixy still thought it sounded odd, or rather that it didn't sound odd: she'd spent most of her career in the Service Fleet, where the hatches all made anemic grating and squeaking noises. Here, aboard an actual Combat Fleet warship, they whispered smoothly open. Standing in the doorway was Dahlia Wollz, a midshipman Pixy had stolen from one of the Academies. \"Beg to report, ma'am. The Officer of the Deck sent me.\"\n\n\"Go, Ms Vagina.\" Pixy had given Wollz that nickname as soon as the girl had arrived, though she now realized it might be time to stop using it: after all, she'd had Commodore Krynne give the girl a warrant as an acting Junior Lieutenant. Pixy had slotted her as Assistant Fourth Officer, working with SLt Charlatul in Supply. My old job, Pixy mused now.",
        "\"Current course is eighty thousand and four by fourteen-point-nine, integer, velocity at factor two. Mid-beam scope is all clear on friendly bands. We remain in full contact with Risuna, and Mr Charlatul told me to remind you we're conforming with their movements and not vice-versa. Since they're scanning. Daily menu is zhwang in bechamel, ma'am.\"\n\n\"I'm so happy Mr Charlatul felt the need to remind me of anything,\" Pixy hissed. Wollz was an excellent midshipman and Pixy had gladly written her up for a Bronze Cross for helping save the ship during a mutiny, but she needed to be put in her place. \"And if he did feel that need, you dumb bitch, you should have kept your mouth shut about it. That's how the junior OOD supports the OOD. Right?\"\n\n\"Aye aye, ma'am.\" The girl stood tall and stiff, tits jutting. She said nothing more, which was good: part of the reason the Academies sent midshipmen out into the Fleet was so that they'd learn to keep their mouths shut.\n\n\"When's Risuna going to be finished with this scanning run, Vagina?\"\n\nThe girl looked startled, but rallied quickly. \"They were eighty percent done when I left the bridge, ma'am. Standard acoustical scan... if they stay true to form from the last few scanner passes, they should be done in about twenty minutes.\"\n\n\"Cool. Tell Mr Charlatul I'll be up there as soon as the scan ends. I'm sick of poking along at factor two, following that fucking acoustical survey ship like a woman sniffing a man's ass.\" She pursed her lips. \"Have him inform Captain Fustar that we'll be doing evasion drills after this scan.\"\n\n\"Ma'am.\" Fustar was the lieutenant in charge of the little Risuna, which was mostly robotic other than him and a couple other humans. \"I think they'll be setting up for another scan, though, around chow time.\"\n\n\"While the crew eats their zhwang.\" Pixy considered. \"Fine. Whatever. But I want the helm reliefs to go through at least one iteration of a reverse chequer maneuver at full combat speed. Let them know when you go back up there. All the reliefs will do at least one, and so will you.\" She watched closely, but Wollz betrayed no emotion.\n\n\"Aye aye, ma'am.\"\n\n\"They sucked last time. We need to be able to do these doglegs faster. Sharper. No prep.\"\n\n\"No prep. But... then why you want me to warn them, ma'am?\"\n\nPixy gazed levelly at the midshipman. \"Is this a conversation you want to continue, Vagina? Or would you rather just salute and go back to your post?\"\n\nThe girl snapped her hand to her forehead. \"By your leave, ma'am.\"\n\n\"Go.\" Pixy traded a sour glance with Juno as the hatch snicked shut. \"Nobody on this ship can do their job properly,\" she fumed, with a significant glance at her mac'n'hag.\n\n\"Must be the commanding officer's fault, ma'am.\" Juno gave her pointed glance, then stepped back into the galley.\n\n* * *\n\nThe ship settled back down after her latest reverse chequer, with Chief Bar-Lev on the helm and Sublieutenant Charlatul conning. \"That one,\" Pixy declared from her command chair, \"was not that bad.\" She saw grins, traded among the sailors down in the nav pit. \"Just, next time, remember that the vanes can take a lot more torque than you think they can, Mr Charlatul.\"\n\n\"Yes, ma'am. I worry about that starboard one.\"\n\n\"I get that, but remember that if it fails, you can always shunt power from the port thruster and then compensate with the attitude system. Right? There's never a reason why this ship shouldn't be able to keep functioning.\"\n\n\"I get it, ma'am.\" Charlatul looked chagrined, and Pixy decided he'd gotten the wrong message.\n\n\"But. Good job anyway.\" She glanced down at his butt. \"I'm, uh, pleased to see you're fit for duty, Mr Charlatul.\" When he blinked at her, she lowered her voice. \"I heard what you had to do to get those extra Ullmer compensators.\" A major part of a good supply officer's duties was to trade sexual services for extra equipment, a part of the job Charlatul was good at. It helped that he was kinky, but even so, the word was that the Oleander's supply officer had exacted a high price out of young Charlatul's ass yesterday. \"I heard it was a real doozy.\"\n\n\"Well, ma'am,\" he said after a pause, \"you had that duty once upon a time, I believe. You know what it's like.\"\n\n\"I do.\" She pondered. \"I did try to keep things out of my rear thruster, though. You don't have to agree to everything, Mr Charlatul.\"\n\n\"Thank you, ma'am.\" He paused, his hands behind his back with the ceremonial OOD telescope tucked under his arm. \"Still. You should've seen the other guy.\" He looked shocked when Pixy chuckled in reply; it was quite rare to make Pixy Pfeiffer laugh. Charlatul had enough wit to seize the moment, nodding to the helmsman. \"Okay. You're relieved. Chief Kyzzmyk will take the helm, and Ms Wollz?\" He turned to the assistant OOD. \"You've seen the chequer maneuver a couple times now. Why don't you take us through it?\"\n\n\"Aye aye, sir.\" Pixy watched, her chuckle fading, as Vagina took the telescope and put herself behind the helm, the whole bridge shuffling into new positions for the next drill. Her eyes strayed automatically to the big plot-repeater at the front of the bridge, beside the viewport, sweeping over the repeater's representation of this empty little corner of interstellar space: the bright dot well astern was the USS Risuna, its acoustic sensors recalibrating while the two ships journeyed through the stars to the start of the next run. Pixy frowned. \"Nav? What's that planet down on the lower part of the plot?\"\n\n\"Planetoid,\" the tech over there corrected gently. It was Yayler Iliacco, with the biggest set of tits aboard the Desperado. She tucked her chest beneath the scope to study the intensifier. \"It's unnamed. Coded as a macro-comet.\" The woman frowned into the scope hood. \"There's a contact alongside it.\"\n\n\"Yep.\" Pixy hadn't seen it, exactly: the little contact was far too small to show up on the big repeater, but her eyes had caught something fuzzy about the image of the planetoid. Up on the left side of the rounded icon sat a tiny lump of light, now on magnification level 2. \"I see it. Upper left quadrant. Identifty.\" She caught low whispers now, people nodding toward her. It always made the captain look good, to be the one who spotted shit on the scopes, but Pixy had no interest in being discussed. \"Silence on the bridge!\" she grated. She studied the lump on the plot again. \"My conn, OOD.\"\n\n\"Aye aye, ma'am.\"\n\n\"It's a ship, definitely,\" Iliacco frowned. \"I think it's trying not to be seen.\"\n\n\"Call Risuna,\" Pixy snapped, turning toward van Shaughnessy at comms. \"They're a scanning ship. Have them scan that contact, right the fuck now.\" Her leg was shaking, she knew, the excitement building.\n\nThere weren't supposed to be any ships out here. Least of all secret ships, hitching rides in comet tails.\n\nIliacco called out the coordinates, and van Shaughnessy bent toward his mic. Pixy became aware of Charlatul, bending over her left shoulder. \"Um. General quarters, ma'am?\"\n\n\"Mr Charlatul, do you suddenly doubt my ability to command this vessel?\" she hissed. The supply officer drew back, knowing there could only be one possible answer.\n\n\"Beg your pardon, ma'am. I'm a moron.\"\n\n\"You are. If I want battle stations, I'll tell you about it.\" Her mind was racing with possibilities, dredging up the relevant bits of her orders, the standing rules of engagement, their location... \"I think it's likely a friendly. Or at least not an enemy. Mr van Shaughnessy?\" He had a nickname too, and it was Kissass, but she tried not to use it in front of the crew. \"Tell Captain Fustar that once he has Risuna's scanners up, he is to maneuver to our portside and keep at least 20 kilometers away from us. Just in case.\" If she did need to bear down on the new contact, she did not need that valuable little acoustical ship downrange.\n\n\"Ma'am.\"\n\nThen there was nothing to do but wait. Pixy relaxed at once; decisions often made her nervous, but once they were given she didn't care much about them anymore. What would come, would come. \"OOD? Call my steward. Have her bring me some tea.\"\n\n\"Yes, ma'am.\" Pixy smiled deep inside herself. It was good to be in charge, even on an acting basis, and as the blips began moving around on the plot-repeater, she felt less like a chess player than a director of an opera. She'd set the people where she needed them, then told them what to do, and now all she had to do was try to relax and watch them move. And sing.\n\nShe was two slurps into her thick, warm butter-tea when van Shaughnessy's tech twisted around in his seat. \"Ma'am, Risuna's reporting.\" Pixy nodded, waiting, but the man seemed disinclined to say anything more.\n\n\"Well? What the fuck?\"\n\n\"Oh! I beg your pardon, ma'am; I was waiting on their captain to finish up.\"\n\n\"Shit, sailor! You can't leave me hanging like that.\" She watched as the man, swallowing, tapped at a 'slate, getting the details down. \"In your own good time, then,\" she sighed, going back to her tea, and as the steam wormed into her nostrils to calm her brain, the tech finally handed the tabslate to the midshipman.\n\n\"I'll bring it over, ma'am!\" squeaked Kissass, but Pixy chopped him right down.\n\n\"The reason we loudly announce things like this, Mr van Shaughnessy, is to make sure everyone on the bridge has all the same information.\" She forced herself to sit still, every movement calm. \"Just say it so everyone can hear.\"\n\nThe kid's throat lurched again as he swallowed. \"Captain Fustar scanned the ship, and he's certain it's one of ours. It fits the audiogram of a standard diplomatic courier ship.\"\n\n\"What's it doing here,\" Pixy mused, \"and why isn't it moving?\"\n\nThe midshipman blinked. \"Um. Want me to ask, ma'am?\"\n\n\"I certainly want you to establish comms with the motherfucker, yes,\" Pixy nodded. \"Meanwhile, we'll leave him in no doubt that we want to talk to him. Alter course, Mr Charlatul. Lay us alongside that diplo ship.\" She drained her tea bowl and stretched her arms high. \"And try not to bump into that macro-comet, while you're at it. Can you do that, or would you be more comfortable with me on the conn?\"\n\n\"I can do it, ma'am.\" Good. He didn't even hesitate.\n\n\"Fantastic. I'm going to be in my office. If you need anything, call Mr Delmer. Estimated time to target?\"\n\nChief Heller, at the weapons station, was figuring that out. \"Thirty-nine minutes and fourteen seconds, ma'am.\"\n\n\"Okay. I'll be back up here in thirty-eight minutes.\" She stood up and smoothed her utility uniform. \"Carry on, Mr Charlatul.\"\n\n\"Aye aye, ma'am.\"\n\n* * *\n\nThe fuzzy lump at the upper left of the macro-comet had resolved itself into a separate dot by the time Pixy returned to the bridge. Delmer was sitting in her command chair, watching the plot-repeater closely. He was just finishing up with Chief Heller when she kicked the hatch and walked in. \"Bump up the resolution there. We're close enough. Mag factor three.\" His orders came crisply, like always.\n\n\"Not four, sir?\"\n\n\"Nah. We won't gain anything by it, not at the rate we're closing.\" He turned, noticed Pixy, and got quietly out of the command chair. \"CO's on the bridge,\" he announced formally.\n\n\"Carry on,\" was the automatic response, and a quick glance around the place told her that Delmer had things well in hand. She didn't like him, and never would, but she had to admit he knew how to run a ship. She rested her chin in her hands and studied the repeater. \"Chief? Is that an aspect change on the target?\" She glared irritably at the weapons station. \"And why are there no officers on duty with you? Not that you can't handle it.\"\n\n\"I don't know, ma'am.\" Heller's voice was stony, as it usually was: the woman was cold, a killer. \"Mr McZylenko is recovering from an OOD shift, and Mr Smith-Aliyyeva... well.\"\n\n\"...is a midshipman,\" Pixy finished for her. Well, not really; Krynne had made him an acting lieutenant too, just like Vagina, but Pixy had been regretting the promotion ever since. \"In fact, if not in name. Well, carry on then.\" She made a mental note to find him later and kick him in the balls.\n\n\"Aye aye, ma'am, and you're right. Aspect change. Target is turning toward us.\" Heller frowned once more into her scope. \"Target is approaching. Closure velocity is factor ten, now. No, twelve.\"\n\n\"Fuck.\" Delmer was leaning on a rail, staring at the repeater. \"Those diplo ships have some slick acceleration.\"\n\n\"They're usually even faster,\" Pixy mused. She'd had a brief mission aboard a similar scoutship, once, and the only thing more breathtaking than the speed had been how cramped the quarters were. Courier ships were the fastest things humans had ever produced. \"Chief Heller, chart his course for another three minutes; if there's no deviation, we'll just halt and wait. It'll be obvious by then if he's trying to rendezvous.\" It was a cardinal rule of maneuvering that the little ship came to the big ship, not vice-versa. She checked Desperado's own speed. \"Closure ought to be more like twenty. I wonder whether they're damaged.\"\n\n\"Oh. Great.\" Delmer did not sound amused at the thought. Protocol demanded that any Fleet officer render assistance to any ship of the Diplomatic Service, meaning Delmer as XO and Charlatul as Supply Officer were going to have a sleepless night ahead if they needed to help out the diplo shitheads.\n\n\"They must be hurting,\" Pixy nodded to herself, the puzzle falling into place. \"Why else would they be approaching us? Okay, helm, let's halt. Full stop, all engines.\"\n\n\"Full stop aye, ma'am.\"\n\nShe turned to Delmer. \"I guess you and Wollz should probably get ready to take them in tow? Since Charlatul is up here as OOD. If they're really crippled or something, we'll need to get them on their way as soon as we can.\" He rolled his eyes. \"Yeah. I get it. It sucks. Bend over and do it.\"\n\n\"Yes ma'am,\" he said morosely. \"Dry, no lube.\"\n\n\"As always,\" Pixy agreed. She glanced at the commo types. \"Let our friend Risuna know what's up. Maybe he'll care, maybe not.\" She pondered. \"And tell him to standby to come aboard later for a visit. If the diplo guys need anything more than to have their fuel topped off, I'll have to invite their skipper for dinner in Captain Ledecki's quarters...\"\n\n\"Payne will love that,\" Delmer muttered from behind her.\n\n\"He will, in fact. He's good at entertaining.\" She paused. \"Know what? Why don't you go down and tell him all about it. See how the two of you get along. He's not busy; maybe he wants to work with you.\"\n\nDelmer blinked. \"With me? What the fuck?\"\n\n\"You're the acting XO, and it looks like it might be awhile before Fleet decides to send out a new captain.\" She shrugged. \"You're entitled to a steward. So?\"\n\n\"I hadn't thought about that.\"\n\n\"I know. He's a turd. But it is what it is.\" She paused, studying Delmer's crafty face. \"What? Out with it.\"\n\n\"Well, I mean, if you're not planning to use her steward... I mean, are you planning to move into her quarters?\"\n\nPixy glared levelly at him. \"You have work to do, XO. I know you do, because I just tasked you. So why are you still standing here?\"\n\nHe straightened, a smirk curling one side of his mouth. \"Got it, ma'am.\" She watched him go, then spun the chair around to face the plot-repeater; the closure rate was falling as her ship eased to a halt, and it was almost close enough now for opticals.\n\n\"You can put it up on screen, OOD, once you can get a visual.\"\n\n\"Aye aye, ma'am.\" The craft was the long, eager needle she'd expected, just like that scoutship she'd visited a few years ago. Crew of five on that one, though a lot of them carried three. The approaching ship was a blue dart in space, sweeping uncaring against the stars. A long dark smear of scorched metal showed on her port side.\n\n\"Looks like they might have an engine out.\" Charlatul was frowning at the screen. \"That almost looks like a projectile impact.\"\n\n\"What kind of enemy could hit a speeding diplo ship?\" Pixy wondered aloud, but in that moment van Shaughnessy swung his chair around.\n\n\"Got him, ma'am. The diplomatic ship.\" He sounded more excited than he should. \"Claims it's an unlisted flight. He's demanding assistance.\"\n\n\"Put him on the voxbox once he gets within range. I'll talk to him in the wardroom, where I can get some privacy.\" She popped to her feet. \"Just route it down whenever you make the connection; I'll just wait there.\"\n\n\"Ma'am.\"\n\n\"You've got the ship, Mr Charlatul.\" She peered at the chrono. \"For a bit longer, anyway. Update the log and make sure your relief is well-briefed. This shit will be a lot to take in. Who's on duty next?\"\n\n\"Sublieutenant Golightly, ma'am.\"\n\n\"Oh. Fuck. Well, then yes. Make sure everything's well-logged.\" Golightly, the First Assistant Engineer, was not a sharp thinker. He'd just gotten promoted from Junior Lieutenant, which had given him an undue appreciation for his own nonexistent talents. Even though the promotion was usually automatic after a couple years.\n\nShe had just gotten a glass of water in the wardroom when the voxbox by the coding table chirped at her. Pixy made sure the door was locked, then sank into the seat there and picked up the receiver. \"USS Desperado, this is Commander Pfeiffer speaking. Who's this?\"\n\nShe heard three metal clicks in her ear as the person at the other end turned on an encryptor, her table coming to life as it searched for the key. \"Wait.\" The voice on the other end sounded amused, if anything. \"Pixy Pfeiffer?\"\n\nPixy straightened in her chair, eyes darting around while she tried to place the voice. \"Yes. Who is this?\"\n\nThe laugh that came back didn't sound like it was coming from a ship with a damaged engine. \"Well. This is a coincidence.\"\n\n\"Who. The. Fuck. Are. You?\" It was bothering her that she couldn't figure it out. \"Come on. I'm a busy woman. What do you need?\"\n\n\"I'm still waiting on your call, Commander Pfeiffer. To let me interview your steward, Petty Officer Juno.\" He waited patiently while Pixy's blood chilled.\n\n\"Is this... is this Colonel Smith?\" She held her breath, waiting for the answer. She hadn't liked the man at all when he'd come aboard to investigate Desperado's role in the recent mutiny. \"But you had another name...\"\n\n\"No, I gave you another name. Good memory. Well, shit, this is a coincidence. Hold on.\" Pixy waited, sitting very still, listening to a muffled voice on the end of the line. \"My pilot is asking whether he can dock with you. We need a few parts, if you have them.\"\n\n\"My supply officers don't give up parts for free, Colonel Smith.\"\n\n\"Yes,\" he laughed in reply, \"I know. A curious custom. In Fleet, you pay with sex. Well. It so happens that I've got two fully-qualified whores aboard, either or both of whom can make your supply officers quite happy.\"\n\n\"Really!\" Pixy snorted. \"'Fully-qualified?' What the fuck does that mean?\"\n\nSmith's pause sounded quite calculated. \"Trust me, Commander. They're good.\"\n\n\"So's my supply officer.\"\n\n\"Not this good.\"\n\n\"Shit.\" She stood up, tired of this conversation. \"How long will you be here?\"\n\n\"That depends,\" he replied softly.\n\n\"Dammit,\" she grated, \"tell your pilot we'll rig up a hatch.\"\n\n\"He's telling me it'll need to be a ventral one? Our entry boot is on top of the ship.\"\n\n\"Yes,\" she snapped, \"I'm aware your vessel carries a dorsal hatch. Want to tell me what our relative velocity should be to make the capture? Or anything else about my job?\"\n\nHe laughed again, a chilling one. \"I'll see you soon, Commander. It'll be my pleasure.\"\n\nShit. She realized, as she hung up, that some sort of dinner was unavoidable. Socializing. Pleasantries.\n\nPayne.\n\n* * *\n\nShe was down there to watch the docking, in the bowels of the Desperado at the seldom-used ventral hatch. She didn't want to be there, but \"Smith\" was a subcolonel. The only officer aboard the frigate that matched that rank was currently a cerebrum, sitting in a haemodrive in the surgeon's freezer.",
        "So? Protocol demanded the ship's commanding officer greet the Army, and that meant Pixy was down there standing to the right of Golightly, the Boarding Officer. He eyed the docking indicator. \"Blue point,\" he announced. Pixy, veteran of countless shuttle dockings, knew the sequence in her sleep. And yet Golightly insisted on giving color commentary. \"They'll be turning off their gravity now.\"\n\n\"Jesus H Buddha, you dumbshit,\" she sighed in return, leaning against the wall, \"did you not do your research? Diplo couriers only have limited gravity anyway. You need to subtract to get a modified blue point.\" She exchanged a glance with the docking tech, who rolled his eyes. \"You. Weppinger. Do you know what you're doing?\"\n\n\"Yes, ma'am. You let them dock first, then check the equalizing meter, then -- \"\n\n\"Fine. You do this.\" She glared up at Golightly. \"Pay attention to Petty Officer Weppinger. He knows what to do.\" Muffled grinding clangs came through the hull beneath their feet, the impregnated graphene dragging against the diplo's sleek skin, and the tech frowned down at his gauges.\n\nWhen the hatch swung up, Pixy smelled the heady gunpowder aroma of space, a faint hint of sulphur thrown into the tangy gasp of chilliness that drifted up and away, leaving nothing but the smooth blue hull at the other end of the docking boot. \"See, sir, I used the short boot because...\" came the hushed tones of the tech as he taught Golightly, but by that time the little ship's hatch was slithering open to reveal a mustached face gazing curiously up into the corridor.\n\nThis was not the Subcolonel Smith Pixy had met before. This was a captain, which was a much less impressive rank in the Army than it was in Fleet.\n\nShe peered down, their eyes stalemating slightly while the Army guy frowned up like he was expecting something a little bit different. She cleared her throat, then figured it out. \"You're going to need to actually climb out, dude,\" she told him. \"We have gravity here.\"\n\n\"Oh.\" He shrugged, then wormed his way through the hatch; a nod from Pixy sent Golightly in to help him up. \"I'm Captain Corcovado. I'm the driver.\"\n\n\"Great. Where's your boss?\" Pixy demanded, still looking down into the boot.\n\n\"He's right here.\" The face that came looming out of the diplo ship wore the same grim smile it had last time she'd seen it, when he'd been interviewing her in her office after the mutiny against Admiral Shonzey. \"Imagine my surprise, Commander Pfeiffer, when I figured out what ship I was heading toward.\"\n\n\"Colonel... Smith. Yes?\" She watched as he sprang from the ship, ignoring Golightly's outstretched hand. He was in full Army uniform, with a subcolonel's cape and, as she'd assumed before, only about a quarter of whatever medals he was entitled to wear. \"Welcome back aboard, sir. For an Army officer, you spend a suspicious amount of time aboard Fleet ships.\"\n\n\"Your officers look better than ours.\" He stretched his arms and legs high as he clambered to the deck. \"Ahh. Gravity.\" He looked curiously around. \"I've heard the phrase 'bowels of the ship' before, but last time I was aboard I didn't see any. I take it these are they?\"\n\n\"This way, sir,\" she replied primly, gesturing down the corridor. \"I've prepared the Great Cabin for your use while aboard.\" Another glance into the diplo ship showed two more faces gazing up, female ones. Beautiful ones. \"It was the least I could do.\"\n\n\"It's no big sacrifice for you,\" he sighed, amused, \"you're not using it. Because your Fleet hasn't given you a new captain yet.\" He smiled, clearly relishing her shock. \"You forget: I'm quite well-informed.\"\n\n\"Well. Either way, follow me.\" Pixy composed herself and stalked off down the corridor, pulling Corcovado by the elbow. \"I assume you're the one that's going to be able to tell my XO what you need us to help you with, repair-wise.\"\n\n\"Coolant leak.\" The man had a raspy voice. \"Plus superficial damage, which significantly impacts our speed. I'll need new fluids, plus a smoothing crew, and a new installation jig for...\"\n\nPixy brushed back her short hair. \"You missed the part about telling my XO. I don't want to hear it. He's where we're going.\" She kept moving, assuming Smith was following with whoever else he'd had in the little vessel. She could hear footsteps behind her, at least one set of them in heels, but refused to turn. \"And I'm in charge here. I'm a subcommander. You can call me ma'am; that's customary.\"\n\n\"Whatever, ma'am.\" The soldier did not seem to care. He had a loose-striding way about him, and unlike almost every Army guy she'd ever seen aboard a Fleet vessel, he didn't do any rubbernecking.\n\n\"I'm glad to renew acquaintances, Commander Pfeiffer,\" called Smith behind her, and Pixy cursed as she held up to wait for him: protocol. She turned, motioning Golightly forward to lead the way to the captain's quarters. \"I was hoping to mention something to you.\"\n\n\"Yeah?\" She fell in to Smith's left, passing a brief glance across the two women he'd brought aboard: both hot, both dressed in Army green with some sort of rank she hadn't seen before, both more than a little wobbly as they got used to gravity. \"Well, you've got me here.\" She turned to face him, putting on what she assumed was a pleasant smile. \"Go ahead and mention.\"\n\n\"I gave you a name, last time we met. A name you could use to look me up in the Army Directory. I met a great many people while investigating that mutiny, on a great many ships, and you are the only one who failed to search for me.\"\n\nShe laughed out loud. \"There's a leap. What, like your phone vibrates every time anyone looks you up?\" She was still giggling when she realized he wasn't. \"Wait. It does?\"\n\nHe smiled, that same thin-lipped smile from last time, the smile that gave nothing away. \"You were the only one, Commander. I find that interesting.\"\n\n\"I'm an interesting person,\" she blurted, but the truth was that she'd simply forgotten. She'd been exceptionally busy that week. Golightly led them around a corner and into the Ring Hallway, down toward Captain Ledecki's old quarters.\n\n\"It drew my attention,\" he pressed.\n\n\"And you remember, all these months later.\" She arched an eyebrow. \"You've got a good memory.\"\n\n\"My implant is considerably more advanced than yours,\" he sighed. \"The curse of knowledge, you know? I think I have too much programmed in there.\" Pixy, who suspected this odd subcolonel was into some truly bizarre shit, kept her mouth shut.\n\n\"Ladies and gentlemen,\" Golightly piped up. \"Your, um, your quarters. While you're here.\" He was staring hard at the two women behind Pixy, and she reminded herself to kick his ass later. She cleared her throat at him, glaring. \"And how long are you going to be here?\"\n\n\"As long as we need to do our repairs,\" the pilot rasped easily. He stepped through the hatch and stood on the balcony, looking down. \"Whoah. I should have joined Fleet.\"\n\nThe Great Cabin was a big armored blister, warting off the port quarter of the ship down near the thrusters, reached by a set of old-fashioned stairs. Some captains liked luxury, others didn't; Lina Ledecki had been a woman who cared about nothing in life but Parcheesi and a clean deck, which was why a low shelf at the top of the stairs still held a neat rank of her boots, now dusty. \"Nice digs.\"\n\n\"I keep most of the hull transparent, most of the time,\" Pixy explained, \"but obviously, if you need to go opaque, just ask the steward.\" She listened closely down the stairs. \"He should be down there. His name's Payne.\"\n\n\"Very generous of you.\" Subcolonel Smith had swept in behind them in disquieting silence. \"I'm sure we'll be very comfortable.\"\n\n\"Sure.\" Pixy avoided looking at him, nodding instead at Corcovado. \"You'll find my XO down there, Mr Corcovado. Just tell him what you need, and we can all be on our way.\"\n\n\"In time,\" Smith nodded, both of them watching as the pilot descended. \"If you make this place too comfortable, Commander, we may never leave.\"\n\nShe swallowed hard. \"That would be a real shame, sir.\" She turned, feeling vaguely ill at ease with the two women behind her. \"And, I'm sorry, but what are your names?\"\n\nTwo sets of big, sexy eyes regarded her coldly, then slid to Smith for his nod of approval before the shorter of the two answered in a careful voice. \"I'm Warrant Officer Vanzetartt. This is Nia Nerkins, my apprentice.\"\n\n\"Ma'am,\" the taller woman nodded. She was incredibly hot, Pixy thought sourly, if completely bald. Purple flower tattoos crawled up her neck. Better keep these two away from the crew...\n\n\"Nerkins and Vanzetartt are eager to meet your supply officer,\" Smith went on smoothly. His voice had a mocking edge to it. \"Well. Meet might be a euphemism, given how you Fleet people do your equipment swaps.\"\n\nPixy, veteran of hundreds of just those kinds of swaps, rolled her eyes at the women. \"It takes my supply guy awhile to cum,\" she told them flatly. \"If you're in a hurry, you might want to get started sooner rather than later.\"\n\n\"In time,\" Smith said once more. He gestured down the stairs, already in charge here. \"I think I smell food. Zhwang? Or some sort of fish? And a b\u00e9chamel?\" His eyes narrowed. \"And spinach, I think. Something with garlic, anyway.\"\n\n\"Payne loves to entertain. I had him set up a quick dinner.\" Pixy started down the stairs, feeling very out of place in her boots. Always, without fail, she'd gone barefoot here. It was an unexpectedly sharp reminder that Ledicki, useless though she'd generally been, was gone. That Pixy was fully responsible for the ship and everyone aboard.\n\nAnd responsible for getting that probe moving again. Soonest.\n\n\"We'll be joined soon by Lieutenant Fustar, the captain of the acoustical mapping ship we're in company with.\"\n\n\"It's not a mapping ship,\" Smith pointed out airily, sinking into one of Ledicki's sofas. \"My implant tells me that's just a cover story. You're scanning for the best place to plant a picket line.\"\n\n\"Is there anything your implant doesn't know?\" Pixy demanded. Her orders had stressed the secrecy of Fustar's mission, but apparently it wasn't nearly as classified as she'd been led to believe.\n\nSmith shrugged. \"My job is... wide-ranging. It requires me to know a lot of stuff.\" He hesitated, glancing out at the stars while his two whores looked around. Almost as if they were searching the place, Pixy mused. Corcovado and Delmer talked in low tones by the wall, and Payne could be heard clattering around in the kitchen. \"Captain Corcovado believes our repairs are going to take awhile.\"\n\nFuck. \"How long awhile? Not to be rude, but I've got things to do.\" She nodded toward the sofa. \"Have a seat.\"\n\nHe smiled. \"And you'll do them, Commander, no doubt.\" He looked at her with an oddly placid sense of calm, icy and very distant. \"So do I, you see. And it might just be a lucky thing that I found you out here in the trackless void. Such an odd coincidence.\"\n\nShe leaned in toward him abruptly, her voice a savage hiss. \"Look, I didn't like you last time and I like you even less now. What the fuck is going on here? Your hints are pissing me off.\"\n\nHe showed no reaction at all, other than to burrow deeply into the couch. \"I missed gravity,\" he sighed. \"How is your steward, Commander? Wrae Juno, I think her name was.\" He smiled slightly. \"I recall she was very resourceful as well as decisive. I don't think it was ever proven, but she also seemed to be good with a knife?\"\n\n\"That's another hint that's going to piss me off,\" Pixy spat, but by that time Payne had elbowed the dinner gong and she had to put on a fake smile. \"Well. Food's about ready, it seems.\"\n\nSmith watched her rise through dark, squinting eyes.\n\n* * *\n\nThis was Pixy's first time meeting Lieutenant Fustar in person, and she was unimpressed. She was prepared to accept that officers who chose Acoustics as a branch were probably a little weird to begin with, but he definitely had the manner of a fellow who'd spent far too much time with far too few humans. \"Pass the booze, Mr Fustar,\" she prodded him for the third time, trading a quick glance with Delmer.\n\nFrom the look on the acting XO's face, dislike for their guests was one of the few things on which Pixy Pfeiffer and Chonny Delmer could agree.\n\nBut he did pass: some of the last of Lina Ledicki's gin, under the watchful eye of Payne. \"Aye aye, Captain,\" Fustar smiled; as always, Pixy felt herself stiffen at that. She still wasn't really the captain, and felt obscurely as though it was bad luck to call herself that.\n\nPixy waited until Payne disappeared. \"So. How'd it go?\" she asked, elbowing Delmer. He stared back blankly, his mouth full.\n\n\"Huh?\"\n\n\"You and Payne.\" She waggled her eyebrows. \"I could make him your steward, like right now. If you want. Did you guys work well together?\"\n\nDelmer glanced toward the kitchen. \"He doesn't come with the quarters?\"\n\n\"Fuck no.\"\n\n\"Well then, no. In fact, you take him,\" he leered. \"I think I'd prefer Juno.\"\n\nSmith and Fustar glanced over when she guffawed. Corcovado and his Army whores were already down in Supply with Charlatul and Wollz. \"Of course you would. But no fucking way. I'd just revert back to her once Fleet appoints a new skipper. Besides,\" she added, \"she doesn't like you.\"\n\n\"A lot of sailors don't like me,\" Delmer shrugged.\n\n\"Sure. But Wrae Juno has a habit of making officers she doesn't like... disappear,\" she winked.\n\n\"This is true,\" Smith murmured from across the table. \"An interesting person, your Juno.\" He dabbed at his mouth with the old-fashioned napkin. \"I'm wondering, Commander Pfeiffer, whether this meeting of ours might not work out beneficially for both of us. And for Petty Officer Juno, too.\"\n\nShe felt her nostrils flare, instantly on alert. \"I'm not sure,\" she replied evenly, \"that this 'meeting of ours' needs to be anything other than a coolant resupply and some bodywork.\"\n\n\"It doesn't need to be,\" the subcolonel agreed politely, \"but it could be.\" Pixy felt Delmer draw himself up in his chair, responding to the new tone of the conversation. The man was a chauvinist and a boor, but there was nothing wrong with his sense of caution when it came to loaded conversations. \"Without getting into to much... uh, tedious detail, I can tell you that I'm on a critically important mission.\"\n\n\"Yeah?\"\n\n\"Diplomatic priority.\" He nodded meaningfully. \"Real diplomatic priority. No bullshit.\"\n\nFustar made a sour face in the corner. \"Wait...\" he began.\n\n\"The kind of priority that, unfortunately, makes your present mission less needful to the immediate requirements of the war effort,\" Smith went on airily; he nodded at Fustar. \"I'm sure you understand, Lieutenant.\"\n\n\"But... my scan...\"\n\n\"... is of critical importance,\" Smith beamed, nodding sympathetically. \"As it turns out, however, my mission is even more critical.\" Pixy, from across the table, watched avidly. This was beginning to sound mysterious, which meant it was beginning to sound interesting. And nursemaiding Fustar's acoustical probe was not terribly exciting. \"I'm sure you understand.\"\n\nFustar looked across the table, askance. \"Ma'am?\" he bleated.\n\nPixy cocked her head, thinking. \"Colonel,\" she began, \"I assume you've got something in writing that substantiates the importance of your... your business.\"\n\n\"Of course I do.\" He shrugged. \"If you like, I can get a further endorsement via hyperbeam from the Core, if I can make use of your coding table...\"\n\n\"No need.\" Pixy was not someone who lingered over her decisions. \"Mr Fustar,\" she said formally, \"I'm going to have to put our mission on a temporary hold. I'll let Commodore Krynne know about all this, and I'll wait for her word on how to proceed. But... well. You know the rules on Diplomatic Service priority.\"\n\n\"I have a temporary appointment as a consul, too...\" Smith murmured, \"if it's necessary.\"\n\n\"If you were listening, Colonel,\" Pixy went on, \"you'd have heard that it's not necessary.\" Delmer stirred beside her; he transparently did not like her talking to an Army colonel like this. \"I'm agreeing to your commandeering my frigate and crew in accordance with formal diplo priority. I'd love it if I could get another escort for the Risuna, and I'm hopeful the squadron will be able to spare a ship while we're fixing up Colonel Smith's vessel.\" She nodded at Fustar. \"If not?\"\n\n\"I'm not asking you to stop scanning, Lieutenant,\" Smith purred. \"I'm just suggesting you might want to start scanning in a different direction.\" Pixy giggled despite herself.\n\n\"Sir, it doesn't really work that way...\" Fustar began protesting, but Pixy reached over and laid a hand on his arm.\n\n\"Relax, Mr Fustar. The colonel is just trying to be polite.\" She nodded. \"Your mission will be delayed, that's all. It's my responsibility, pursuant to Fleet Guidance.\" She didn't add that whatever the Colonel was involved in would probably be a hell of a whole lot cooler than escorting Fustar through the cosmos; the poor kid was upset. No need to rub nodium in the wound. \"You're scanning ship will fit in our Main Bay; we'll load you aboard presently. You can, you know, take a break. Relax.\"\n\nFustar did not look like the kind of man who relaxed. Ever.\n\nShe turned to Smith. \"How long can we expect your mission to take, sir? Just so I can inform my commodore.\"\n\nHe pursed his lips. \"That depends. I'm working with Nerkins and Vanzetartt, but I'd planned on using three operatives. My third one, Suryasta, went missing on a subsidiary operation.\" He sucked at his lips. \"That was just before we were attacked, before we had to hide out in that comet tail. So all of that has set me way behind, you understand.\"\n\n\"How long?\" she demanded, her voice just shy of impertinent. Smith arched an eyebrow.\n\n\"Well. Suryasta and Vanzetartt, with Nerkins in support, would have been able to get this done in a few days. With just my two? More like a week and a half.\" Fustar groaned. \"Yes. Plus transit time. Thing is,\" he purred, leaning forward over his half-eaten zhwang, \"I think that if my two girls had someone they could train, intensively, for support? Someone quick and resourceful? Someone intelligent and a little bit ruthless?\" He nodded. \"I think we could have your acoustic probes back on-station in a week. Perhaps less.\"\n\nPixy felt her heart thud. \"Last time I got involved in an Army operation, sir, I needed cloned eardrums and destroyed an entire city...\"\n\n\"You, my dear Commander Pfeiffer, were not the quick, resourceful woman I was thinking of.\" Smith sipped at his gin, smiling blandly until Pixy rolled her eyes and sat back.\n\n\"Why the fuck,\" she whined, \"does every male officer in this part of the fucking galaxy seem to think they're entitled to the services of my steward?\"\n\nSmith's smile went sly. \"It had occurred to me,\" he admitted, \"to explore Wrae Juno's suitability as an emergency replacement for my missing soldier.\"\n\n\"Fuck that.\"\n\nSmith's eyes went cold, if indeed they'd ever been warm. \"Diplomatic priority, Commander,\" he said quietly.\n\n\"Oh, that's cute,\" she snapped. \"I'm not sure I know the reg that allows Army people to grab Fleet personnel and make them go off and do risky things without their commanders saying so. Sir.\"\n\nDelmer glanced at the Risuna's skipper. \"Mr Fustar. Might be time for you and I to retire for the evening. I need your advice on how many loading chocks I'll need to put into the Bay so you can set your ship down. I think it'll be a tight fit, which is all the more reason to take care with our planning.\"\n\n\"Um. I'm not done with my dinner...\"\n\n\"Now, Mr Fustar.\" Delmer shot to his feet, glancing at Pixy with that carefully neutral look he had when he disapproved of her in public, but didn't want to get a kicking. \"With your permission, ma'am.\"\n\n\"Carry on, XO. Do me a favor and construct a partial dispatch for the Commodore? I'll finish it and then send it once the Colonel and I finish.\" Delmer nodded over his shoulder. Pixy and Smith held each other's gazes as the two men made their way toward the stairs. Payne had disappeared back into whatever little hole he'd been keeping himself in, and as soon as the hatch clicked shut at the top of the stairs Pixy already had the gin in hand, pouring them both another glass. \"I want to know two things, 'Colonel Smith,'\" she said quietly, mocking him. \"One: how likely are you to get my steward killed? And two?\"",
        "\"What's in it for you?\" She held his gaze, the two of them silently raising their glasses and downing the gin before grimacing their way back into the conversation. \"She had good taste in booze, your captain.\"\n\n\"I never liked gin.\" Pixy sniffed. \"Sure. What's in it for me?\"\n\n\"So transactional, Pixy,\" the colonel chided. \"I guess you can take the girl out of Fleet Supply, but you can't take Fleet Supply out of the girl.\"\n\n\"Fuck you, Smith.\"\n\n\"Do you remember my real name?\" he asked suddenly. \"I told you what it was, months ago. Do you remember it without your implant?\"\n\nPixy scowled. She didn't like the implant. \"Reynolds? Something like that?\"\n\n\"Rennels. Schwick Rennels.\" He poured himself another glass. \"And that is my real name, incidentally, though the Army has it listed as an alias.\" He smiled again, his scarred lip twitching. \"Call me Schwick, Pixy. As long as we're making deals, we might as well not stand on ceremony.\"\n\n\"Deals,\" Pixy scoffed. \"Supply officer-type deals? Is that it? You want me to suck your dick or something?\"\n\n\"I mean, if you're offering, I'm certainly not going to say no,\" he laughed lightly. \"But you're not offering, I can tell. That's okay. I brought my own mouths to feed, as it were. My women really are excellent, sexually.\"\n\n\"Well. Lucky you. A personal harem, all for yourself.\" She shook her head. \"I should have joined the Army.\"\n\n\"You'd have been a general already.\" He showed no sign of mocking her. \"Seriously. We value people like you.\"\n\n\"Yeah.\" Pixy touched her Combat Cross, an Army award extremely rare in Fleet. \"They like me.\"\n\nHe laughed again. \"Value, I said. Not like.\" He eyed her. \"You'd make your share of enemies in my world, but you'd probably make more friends. And that matters. No,\" he sighed, returning to the conversation, \"they're not my harem. They're operatives.\" He stared at her quietly for a moment before dropping the punchline. \"They're assassins.\"\n\nPixy's eyebrows shot up. \"Could've fooled me. Do all your assassins look like prostitutes?\"\n\n\"It's important that they be able to get close to their objectives.\" He shrugged. \"Beautiful women with the ability to get men naked have an easy time killing them, in general.\"\n\n\"Do you have men who do the same thing? To female targets?\" Pixy was curious despite herself.\n\n\"Of course.\" He shrugged. \"I command a unit that does a lot of that kind of thing. Humans and Tygons, mostly, but we'll kill the occasional Korlene or Linder as well.\" He looked toward the galley.\"Korlenes are tough.\"\n\n\"They have telepathy.\"\n\n\"Yes. And they're usually better at sex than my people are. But then? One of my assassins is a Korlene too.\" He chuckled. \"She's very good.\"\n\n\"I'll bet.\" She glanced out into space through the transparent graphene, loving the sight of the passing stars. She sighed. \"Where are we going? My helmsman will need a heading.\"\n\n\"It really is lucky I found you.\"\n\n\"Yeah.\" She sniffed. \"If you say so. Where are we going?\"\n\nHe shrugged. \"There's a power struggle in the Army. We've kept a lid on it so far, and it's been decided that it's time to make that lid permanent.\" He drank. \"That's my task. So I'm posing as a diplomatic vessel in distress.\"\n\n\"Posing?\" Pixy blinked. \"You mean you're not truly damaged?\"\n\n\"Oh, we're damaged. It's just that it was self-inflicted.\" He tutted. \"You know better. Nothing can hit a diplo ship. They're too fast.\"\n\n\"So, what? The plan was to come limping in from out of nowhere?\"\n\nHe toyed with his glass. \"My target is at a conference. High-level, a staff call. Security is extremely tight, and given the Army's current factionalization, nobody from my side of the fence was invited.\"\n\n\"Your side of the fence.\"\n\nHe spread his hands. \"What can I say? It's a power struggle, like I said. We needed a way to infiltrate, and nobody denies a damaged diplo ship.\"\n\nPixy smiled cynically. \"Until next time.\"\n\n\"True.\" He sighed. \"These are delicate days we're living in, Pixy. The War... some are sick of it, some want to win it, some are making money off it.\"\n\n\"Some of us don't care.\"\n\n\"Yes you do.\" He nodded decisively. \"You'd be sad if the war ended. You can admit it to me. Or not; I know the truth of it, anyway. War gives opportunities to people like you.\"\n\nPixy sighed. It was a disturbing and accurate notion. \"I follow orders.\"\n\n\"Sure. But suppose those orders came from a faction within Fleet that wasn't operating in the government's interests. But was in charge of you anyway.\"\n\n\"That's mutiny.\" Pixy slowly brought her eyes back to his face. \"You know my feelings about mutiny.\"\n\n\"It's complicated right now, in the Army.\"\n\n\"So... these people you want to kill...\"\n\n\"No.\" His voice was flat now, precise. \"These people I'm assigned to kill.\"\n\n\"Well. So, they're in favor of what? Peace? Or more war?\" She was getting mad.\n\nHe shrugged. \"Honestly? I'm not even all that sure. But I've got people I'm loyal to, and this is what they need.\"\n\n\"And now I'm embroiled in this bullshit?\" Her voice rose. \"Fuck you.\"\n\n\"No. You're just aiding a diplomatic mission. My priorities are genuine.\" He sighed. \"These are games, Pixy. People play them from safely above your pay grade. But it'll enhance my cover story if I'm getting Fleet help in my plight.\"\n\nShe could see that. \"Still. Fuck you.\"\n\n\"I want your help. Willingly.\"\n\nShe barked a laugh. \"That's going to be a tall order, Colonel.\"\n\nHe nodded. \"What is it you want, Pixy? More than anything?\"\n\nShe cocked her head, suspecting a trap. \"Galactic peace.\"\n\n\"Really. What do you want?\" He smiled. \"You might be surprised at what I can help you with. Though, admittedly, you tend to do just fine on your own...\"\n\n\"I want a captain,\" Pixy snapped suddenly. \"I want another Ledecki, who'll sit in this luxury suite and keep her mouth shut and let me do whatever the fuck I want. I want to run my own show. I want to decide where and when I'll get to fight.\" She sat up, mouth twisting into a grimace. \"You can't get me that.\"\n\nRennels nodded, eyes glittering. \"You don't want that,\" he told her softly.\n\n\"No?\"\n\n\"You want to be the captain.\" He sat back, pouring another gin, letting the silence stretch.\n\nPixy felt her chest was constricted, that she couldn't breathe all of a sudden. When she trusted herself to speak, it came out as a croak. \"You can't make that happen,\" she managed. \"You don't have that kind of pull.\"\n\n\"No,\" he smiled, \"but I've got pull with people who do have that kind of pull.\"\n\n\"I'm a subcommander,\" Pixy frowned. \"I'm not qualified to command the Desperado.\" Even though she'd been doing it, just fine, for months. \"Fuck, Rennels, I'm not even promotable yet. It'll be another two or three years before anyone will think to promote me to commander. And even then, that's the bottom rung of a long ladder, especially for a jumped-up transfer from Service Fleet.\" She made herself stop. These were all her fears, all her doubts, and she hated that she'd blurted them in front of him.\n\n\"You have friends,\" he pointed out gently, \"that you might not even be aware of. People talk about you.\" He nodded. \"Important people.\"\n\n\"Can they promote me?\" she demanded.\n\nHe arched an eyebrow. \"There's a new ship type,\" he began softly, \"I'm sure you've heard of them. They're building them at one of the 114 Basins. Two of them just went into prototype and pulled off a successful raid on some of the Cassavetes moons.\"\n\n\"I heard about that. P/E. The placer/extraction ships.\" She shrugged. \"Big fuckers. Some weird new propellant, OAS, not much maneuverability. Those are slated for full commanders.\"\n\n\"And yet. They're having trouble finding officers who wish to command them.\"\n\n\"Well, big fucking shock there.\" Pixy leaned forward. \"They're not really Fleet ships. They're designed for combined operations with people like you. The Army. The Marines. Lots of shuttles, self-contained fighter ships.\"\n\n\"They're independent,\" he pointed out gently, \"outside the usual Combat structure. That's why so many Combat officers aren't interested in serving in them. Nobody wants to be the Army's ferry.\"\n\n\"They're more than that, though,\" Pixy objected, shaking her head. \"Their own fighters! Think of that.\"\n\nHe was smiling oddly. \"I'm not the one you need to convince. You are.\"\n\nPixy went still, her breath leaving her. \"Wait. You're telling me you can get me a slot on a brand-new K class P/E ship.\" He just stared. \"Bullshit.\"\n\nHis hand swept the table airily. \"I mean, like I said, I have some influence with a lot of the right people. But I do know that a lot of Fleet officers see Placer/Extraction as a dead end, career-wise. No chance to get noticed by an Admiral. No battle problems or large-scale maneuvers. No facetime or networking with other captains.\" He paused. \"Know anyone who might prefer that kind of existence?\"\n\nShe was still short of breath. \"This isn't happening.\"\n\nHe arched an eyebrow. \"Like I said, your help with my mission would be invaluable to its success. I'd make sure the right people knew who was responsible. And the Army's integration into the P/E world will give my recommendation more weight than it might normally have.\" He sipped once more. \"Which brings us to your Petty Officer Juno.\"\n\nPixy frowned. \"I'm not going to fuck around all night with this,\" she muttered, hitting her voxbox. \"Send my steward to the captain's quarters,\" she barked into the device, and then she decided she might as well have more gin while she waited. \"You better be right about all this,\" she warned quietly.\n\n\"You're a woman with combined-arms experience, proven command ability, a demonstrated willingness to act in the absence of higher authority, and a well-known aggressive streak.\" He shrugged. \"I'm not sure I'll need to do much to help you, frankly. But, again, Army recommendations would help. And you'd have them.\"\n\nShe opened her mouth to reply, her head still swimming, but at that point the hatch hissed open at the top of the stairs. \"Ma'am?\" Juno's clear voice rang out. \"Did you change your mind about the quarters? Can I finally move my shit into the steward's berth?\"\n\nPixy smirked at Rennels as Juno hopped lightly down the stairs. \"She shares a number of my qualities,\" she muttered. \"If she agrees to your little plot, she'll be your problem now.\" On a sudden, wondering impulse, Pixy laid her hand on his across the table. \"If you're lying to me about getting me a ship...\"\n\n\"Trying to get you a ship,\" he corrected.\n\n\"Well. If you're lying, I'll kill you.\"\n\nHe nodded at her as Juno crossed toward the table. \"I have zero doubt.\"\n\n\"So!\" The steward plunked her shapely ass in Fustar's seat, immediately starting in on his zhwang. \"What's that, gin? Pass me some of that.\"\n\nThe two officers shared a glance. \"Your problem now,\" Pixy said again.\n\n* * *\n\nPart II: Juno\n\n* * *\n\nThe walk down to the Main Bay seemed longer than it should have been: that's how eager she was to get started. \"Faster,\" she bubbled to the tall, scarred Army colonel.\n\nHe just smiled over at her, like a man with a puppy. \"Relax, Petty Officer. May I call you Wrae?\"\n\n\"You can call me whatever the fuck you want,\" she sang back. \"I'm going to get laid and I get to kill people? On your shekel? You can call me anything.\"\n\nHe nodded. \"Might want to keep your voice down, though. About the killing.\"\n\n\"Shit. It's common knowledge on this ship, what I did to the deputy XO. Mr Welson. The stabbing part, anyway.\" This was true; they'd been talking about it in the crew mess for weeks afterward. How the XO's steward had carved up Lieutenant Welson's kidney with her high-priced Sajusake chef's knife. How she'd saved the XO's life in the process. How she'd jettisoned the man's body out the upper airlock.\n\nThe airlocks had been busy that day, practically choked with dead officers. And Wrae Juno had been standing at the pressurization controls of every one of those airlocks. Not that she publicized that part; she didn't really have to. Everyone knew.\n\nSo did this mysterious colonel. She'd been able to tell right away, way back when Pfeiffer had told her he wanted to meet with her, that he was fully aware of her involvement in the deaths of all those officers. And more, she thought to herself; Wrae had never really found killing all that difficult to do. And the colonel knew that too, which was why he'd sent for her.\n\nAnd now he was saying there was going to be sex, too? Shit! her brain crowed. Sign me up!\n\nShe guided him down the last lift to the Main Bay, where Pixy had told her the colonel's two whores would be \"discussing\" supply matters before grimacing back another gulp of gin and then watching them leave the Great Cabin. \"I'm telling you, sir, I don't disappoint.\"\n\n\"Yes. Commander Pfeiffer was not too happy to agree to let me have you.\"\n\nShe chortled. \"'Have' me.\"\n\n\"Well. Not in that sense,\" he smiled. \"I don't generally fuck enlisted people.\"\n\nWrae sighed lustily, arching her back, letting her little tits do their best. \"The night is still young, Colonel,\" she flirted as the lift came to its rest.\n\n\"I think you'll see you might have some things you can learn once we get off the lift,\" he replied with careful diplomacy, and just then the doors whooshed open to the sight of what might best be termed \"joint Army/Fleet supply negotiations,\" complete with artificial passion resulting in natural insemination.\n\nThis was news to Wrae. The life and training of a Fleet legal specialist did not involve much exposure to accepted Fleet supply-trading practice. And, though of course she was no stranger to the shenanigans that sailors could sometimes get up to, this was her very first time seeing the Army perform sexually. From the amused tone of Colonel Rennels beside her, he saw it all the time. \"Ah. There's my team.\"\n\nShe could barely see Lieutenant Charlatul. He was known to be the hairiest junior officer aboard the whole ship, though, so Wrae had to assume that the bare male legs she saw stretched out toward her, lying on an autopallet, belonged to him. On top of those legs was straddled the gloriously bubbled ass of one of those two Army bitches, the shorter one. Wrae could see her rippling muscles as she rose and fell over Charlatul's cock, squashing his big balls with every powerful heave of her tanned, sweaty thighs. Even here, from the back, the woman's huge breasts could be seen jiggling alongside her upraised arms, her hands buried in her thick hair.\n\nWrae, still in the lift, felt her open mouth curve into a delighted grin as she craned her head around to see what was happening to the lieutenant's face. Which she couldn't, on account of the fact it was being sat upon by a very lithe, very sexy, very heavily inked woman completely devoid of all her hair. Her body was covered almost everywhere with intense floral tattoos, mostly in green and purple. She arched fitfully atop Charlatul's mouth, his bearded chin poking impudently out beneath her gaping red snatch.\n\nThe two women were discussing hockey standings, from the sound of things. The tatted one had some sort of little control device in her hands, too, with which she did various experimental things.\n\n\"Wow.\"\n\n\"My girls,\" Rennels said with satisfaction. \"They'll be training you. They're very dangerous, Wrae.\"\n\n\"I don't know whether Mr Charlatul agrees, sir.\" She heard the huskiness in her own voice, her pussy juicing nicely within her utilities; both women were grinding hard, with precision, and their expertise awed her. \"They're... they're beautiful,\" she managed. The tall one did something with the controller in her hands, leading to a muffled grunt from Charlatul.\n\n\"Ooh. That tickled,\" said the woman with her vagina right over that grunt.\n\n\"Yes, they are.\" She felt him behind her, looming, his hands on her shoulders. They felt good: warm. Strong. Reassuring. \"I really am grateful to Commander Pfeiffer for letting me borrow you, Wrae.\"\n\nShe nodded. He was massive behind her tiny frame, the lewd scene before her dominating her senses. She felt something stir at the top of her ass, in her lower back, and she leaned back against the soldier. She chuckled a nervy little sigh. \"I thought you didn't fuck enlisted people, sir.\"\n\nHe seemed quite unconcerned about his cock hardening against her. \"Generally, I don't. But I can smell your pussy from up here. You're aroused by this spectacle. Is it so strange to think that I would be, too?\"\n\nShe reached back to his uniform, feeling his dick, straightening it in his trousers so that she could settle the cheeks of her ass alongside it. He was quite still. \"That's convenient, Colonel. The two of us standing here, all hot and bothered.\"\n\n\"Look off to the left,\" he whispered to her, his hands creeping along the front of her shoulders. Down toward her breasts. \"You're missing the second show.\"\n\n\"Yeah?\" She turned her head away from those writhing women over their hairy man, following his directions. \"Whoah.\" For she saw, off in a fuel-valve alcove in the forward end of the Bay, none other than Acting Junior Lieutenant Wollz, stripped naked and with her wrists electrotaped to a valve cover, bent over with her long legs spread. Colonel Rennels' pilot stood behind her, looking bored as he systematically plunged into her again and again. \"She, uh, never really seemed like the type to put out like that.\" She settled back against the colonel as his hands came smoothly down to cup her breasts.\n\n\"Look closer,\" he murmured, his breath warm in her ear, and she did; she frowned, concentrating despite the little spurt of dampness between her own legs, squinting at where Corcovado's hips met Wollz'.\n\n\"What?\"\n\n\"I need you to focus, Wrae,\" he insisted softly, his fingers suddenly harsh on her nipples through her loose utilities. Wrae shuddered. \"You need to learn to pay attention to detail, and you need to learn it quickly. My girls will soon have their lives in your hands.\n\n\"Wait.\" She blinked through the distraction of his fingers and her own vagina, her nipples sending out harsh pain signals. \"Is... is he a mutant?\"\n\nThe fingers eased, rubbing in gentle circles around her areolae. \"Captain Corcovado is a mutant. A double.\" She caught her breath, fascinated. \"Most doubles are side-by side; he's top-and-bottom.\"\n\n\"Holy shit.\"\n\nShe heard laughter in Rennels' voice when he replied. \"He's quite popular with the ladies.\"\n\n\"Holy shit.\" It was all she could say, again, her mouth dropping.\n\n\"He's fucking her vaginally and anally at the same time. Two pricks.\" He thrust his own groin gently against her pert ass; she felt how hard he was. \"And look at that midshipman. She's gone. She's not in the same universe we are. She'd tell him anything right now.\" He kissed her neck. \"He has power.\"\n\n\"Like the women do,\" Wrae nodded, \"over Mr Charlatul.\" She was starting to get this now.\n\n\"It's what we do,\" he murmured, his hands tracing her hips. \"We fuck, then we kill. Or interrogate, sometimes. Just one of the many kinds of skullduggery I'm involved in.\" She sighed, pressing her body against his.\n\nIt had been over a week since Wrae Juno had taken a dick.\n\n\"And your supply officer?\" She rolled her head over to take in Charlatul, once again fucking quiescently up into the woman riding his cock, his hands now clamped to the other one's tattooed thighs. \"He'd do whatever they asked. Even without the cattle prod they've shoved into his ass.\" The tall one messed with the controller again, both women giggling as he squirmed. \"Hours of fun. They could disembowel him right now, and I doubt he'd even mind.\"\n\n\"I want to learn this,\" she gasped.\n\n\"Good.\" His roving hands curved slowly around her hips, suddenly cupping her vagina with crushing force. She nearly shrieked as he jerked her toward him, his cock hard against her. \"We'll start now. We'll return to the late Captain Ledecki's quarters.\"",
        "\"Yes sir.\"\n\n\"Walk in front of me. I wish to savor the sight of your ass.\"\n\n\"Yes sir!\"\n\nPayne made himself scarce when they returned to the great cabin. Or maybe he didn't; neither of them noticed at all.\n\n* * *\n\nWrae was still burping up Colonel Rennels' semen when she sat down on Captain Ledicki's sumptuous couch and watched the two whores return down the stairs from the Main Bay.\n\nThey really were hot, she admitted to herself: the short one, Vanzetartt, so gloriously ripe and curvy; the tattooed one, Nerkins, a sinuous wave of powerful sexuality, both moving with unconscious grace as they came down the stairs from the hatch. Neither of them looked like they'd spent the past hour straddling Lieutenant Charlatul. Vanzetartt called down as soon as she spotted Wrae. \"You the new recruit?\"\n\nWrae grinned up. \"That's what I'm told.\"\n\n\"That's what I'm told, ma'am,\" the whore snarled quietly. \"I'm a warrant officer. Get to your fucking feet and show some respect, bitch.\" The two reached the rich carpet at the base of the stairs as Wrae leapt to her feet, quivering at stiff attention. Vanzetartt had cold, calculating eyes now, sweeping Wrae with careful disdain. \"Did the colonel break you in?\"\n\nWrae burped again, her throat raw. \"Yes, ma'am.\"\n\n\"All three holes?\"\n\n\"Um. Two, ma'am.\"\n\n\"Were you too soft to get punched in the ass, or something?\" Nerkins had a soft, calm voice, almost motherly. \"Your weak Fleet sphincter couldn't let his dick in?\"\n\n\"Uh, no ma'am.\" Wrae had to crane her neck at the taller woman. \"He just... didn't fuck me there, ma'am.\"\n\nThey traded a glance. \"How many men have you killed?\"\n\n\"Um, like five. Ma'am.\"\n\n\"Not in combat. I'm talking about murders.\"\n\n\"So am I, ma'am.\" Wrae met Vanzetartt's cold eyes at that one. No wavering. Her victims had all deserved it, one way or another.\n\n\"Guns? Knives?\" the warrant officer pressed.\n\n\"Knives. And... uh, blunt force.\" Some of them had needed persuading to walk out the airlocks, which had always been the only way to reliably get rid of people out here, where the surgeons were good and the clones were waiting. \"Never a gun, ma'am.\"\n\n\"We mostly use knives.\" Vanzetartt nodded at last. Both of them were watching her closely, judging. \"You may sit, scum-bitch. I can tell the Colonel had you spread out for awhile. Might as well make yourself comfortable.\"\n\n\"Actually, before you sit, go clean this.\" Nerkins snickered as she held out the cattle prod. \"That kind of thing is usually my job, as apprentice, but I guess that's you now, you fucking weak-assed Fleet whore.\" Wrae frowned as she took the object, small and bullet-shaped, still warm from Charalatul's anus.\n\n\"Then come on back.\" Vanzetartt's voice was still cold, but at least she didn't sound cruel. \"We'll talk.\"\n\n\"Aye aye, ma'am,\" she nodded, the prod pinched between her fingers as she started for the galley.\n\n\"And, scum-bitch? No more of that 'aye aye' bullshit, either.\" Vanzetartt was smiling now, bleakly. \"You're in the Army now.\"\n\n* * *\n\nDesperado hurtled through space on her new course, the stars elongating and wobbling through the great cabin's transparent hulling, shimmering through the Lerbal waves. Wrae hadn't known quite how to deal with Colonel Rennels when he came back from meeting with Commander Pfeiffer; he'd shocked and thrilled her with the bunched power of his passion once they'd finally found the late Captain Ledecki's pristine bed, taking her as thoroughly as her sprightly little body had ever been taken. \"You'll do,\" he'd muttered viciously while getting dressed, and then he'd left her to discuss his requirements with Pfeiffer.\n\nNow she found herself a little subdued around him. Wrae Juno wasn't used to feeling subdued, ever, though part of it was also the obvious bloodthirsty confidence of Vanzetartt and Nerkins. She stood behind the couch where the two Army women sat, mostly because that's where they'd banished her.\n\n\"Apprentice stands in the rear,\" Vanzetartt had told her in that clipped, impersonal way she had.\n\n\"Yeah. So get your sloppy Fleet cunt off that fucking couch, whore,\" Nerkins had added unnecessarily, the filthy words oddly incongruous in that cool-grandma voice of hers. And so, gritting her teeth, Wrae waited at parade rest while Colonel Rennels set up a classified projector on the late Captain's coffee table. \"And get me a drink, while you're up,\" she'd gone on nastily. Off to the side sat Captain Corcovado, reviewing flight information on a Fleet tabslate Pfeiffer had given him so that he could track their position.\n\nBefore them, the clear hull showed the sleek blue needle of their diplo ship, hanging from the Desperado's ventral boot like a parasite, tiny against the relative immensity of the frigate's asteroid-pocked hulling. Rennels pursed his lips. \"So obviously, we're going to need to change our original plan just because our new apprentice is not as highly-trained as our old. And because, to be blunt, Sergeant Nerkins is not Warrant Officer Suryasta.\" He nodded toward the tattooed whore. \"No disrespect, Nia.\"\n\n\"None taken, sir.\" Nerkins' voice was steady, cold. \"I loved Sharaya. If I find the shithead that did her in, I'll kill him slowly.\"\n\n\"Of course. Well, listen up, Wrae. This will be your first time hearing about all this, and although you won't be going in on the actual kill? You need all the information.\"\n\n\"Yes, sir.\"\n\n\"Good. Well, so we limp into the conference. Giannessa,\" he aid, nodding at Vanzetartt, \"you'll replace Sharaya's role: you'll pose as the Princess-Ambassador. Just talk as little as possible and then get him naked your body will communicate. We'll find some fatigues for Wrae.\"\n\n\"Her disguise won't fit, sir,\" she sighed. \"My tits are a lot bigger than hers were.\"\n\n\"We can sew, sir,\" Wrae spoke up. Everyone turned to her. \"We do rip our uniforms out here. We need to fix them. The ship has a full auto-sewing suite. Small, but complete.\" She nodded down to Vanzetartt. \"Give me your measurements. I'll deal with it.\"\n\n\"Huh.\" The warrant officer gave a single curt nod. \"Very well. Go on, sir.\"\n\n\"Captain Corcovado stays with the ship, making a lot of distracting noise about clearances and repairs. In the process, he sneaks Nia into the conference, to lie in wait. As Plan B, in case Giannessa fails to engage the target.\"\n\n\"And I might. He's slippery, like a wet cock,\" Vanzetartt said quietly. She glanced at Nerkins. \"I've tried to kill this guy once before,\" she pointed out.\n\n\"Standard signals in your implants, to designate success or failure.\" Rennels raised unreadable eyes to meet Wrae's. \"You don't have an implant, and we haven't got an extra. But your skipper assures me you're resourceful and reliable.\"\n\n\"I am. Sir.\"\n\nEyebrows rose.\n\n\"So. You're our plan D, after me as Plan C. Though, to be honest, if it gets to the point where I'm in there myself, everything has already gone to shit and you're probably dead, too.\" He shrugged. \"Fortunes of war, ladies.\"\n\nWrae cleared her throat. \"Where should I be, sir?\"\n\n\"With Nia.\"\n\n\"Welded to my fucking ass, scum-bitch,\" Nerkins added.\n\n\"With Nia,\" Rennels repeated. \"She's the fail-safe. You're there to make sure the fail-safe does not fail.\"\n\nWrae wondered whether she should ask. She badly wanted to know. Something told her that if she tried to ask Nerkins, later, she'd get nothing but scorn, so she took a deep breath. \"Sir? Who's the target?\"\n\nAn uncomfortable silence followed. Even Corcovado, in his corner, glanced up. Rennels put on a fake smile. \"Tell her, Ms Vanzetartt,\" he nodded at last. \"You've tried him before.\"\n\nThe warrant officer nodded, then twisted fluidly on the couch to stare up at Wrae. \"I was an apprentice, under Colonel Rennels' predecessor. Our target is why Colonel Rennels is in charge here. I was the only survivor.\" She shrugged. \"Our target is not a badass. He's just surrounded by people who are badasses. He's a field-marshal who supports a faction of the Army that is not safe.\" She glanced at Rennels. \"And he has a meeting scheduled with the princess-ambassador of Kuygens VII, who was supposed to have been our dearly departed colleague Warrant Officer Suryasta.\"\n\n\"She was actually from there.\" Rennels shifted on his toes. \"The cover was perfect.\"\n\n\"But it's me now, posing as a representative. I'll meet with him. I'll be searched. I'll seduce him. I'll kill him. Then I'll call Sergeant Nerkins forward, and she and I will fight our way back to the ship.\" Her eyes glittered oddly. \"You'll be following us, obviously.\"\n\n\"Captain Corcovado and I cover the retreat, then we all flee into the cosmos.\" Rennels shrugged impatiently. \"The man's name is Field-Marshal Juan Rollstenfenger.\"\n\n\"I've heard of him,\" Wrae blurted. \"He's from Terra.\"\n\n\"Yes, from a family that goes all the way back to Old Terra. At the dawn of time.\" He smiled cynically. \"Or of spaceflight, which amounts to the same thing.\"\n\n\"He's the guy who won the Battle of the Moons of Jericho.\"\n\n\"He's a fucking piece of shit traitor,\" Nerkins growled.\n\n\"He's a formidable target,\" Vanzetartt allowed.\n\n\"He's dangerous,\" Rennels put in loudly. \"Dangerous to us, yes, but much more dangerous to the entire Army. To the war effort. To Fleet,\" he added, nodding at Wrae. \"To... well, to everything. And he commands a great deal of personal loyalty, so his death is necessary.\"\n\n\"And I'm going to do it,\" Vanzetartt finished, her voice low with the rippled silk of danger in its timbre. She glanced again at Wrae. \"So. Is that enough information for you?\"\n\n\"Yes, ma'am.\"\n\n\"Good.\" She glanced at Nerkins, then at Rennels. \"You through initiating the new scum-bitch, sir? She give you enough pussy?\"\n\n\"I found her entirely adequate, Ms Vanzetartt.\"\n\n\"Okay. Then if you gentlemen will excuse us? We ladies have some training to do.\"\n\n* * *\n\nPart III: Pfeiffer\n\n* * *\n\nPixy scraped testily at her bowl, wondering whether it would be worth sending it back again.\n\nRennels had sent Payne up, \"with my compliments!\" as if the fiddly little steward was his property, instead of a member of Pixy's crew. Even though his job had evaporated. \"We don't actually want him down here,\" the Colonel had said more candidly. \"We're discussing highly classified stuff, you see.\"\n\nAnd so Payne was, once again, the commanding officer's steward. Even if that commanding officer was merely acting. He'd accepted the move into her tiny little galley with an air of disapproval, but to be fair he'd probably have had the same reaction if he was appointed to cook for the Fleet Admiral. Which he was certainly qualified for, Pixy thought gloomily as she stared at the roast hare with plum sauce he'd \"thrown together\" for her.\n\nThe man was too good.\n\nStewards were supposed to be good cooks. But Pixy still wasn't used to actually having a steward. Almost nobody in Service Fleet ever got one, even if it was normal for XOs and COs in Combat Fleet. So she'd spent her whole career making do with the slop they served aboard GP Service ships, and now she had preferences to match.\n\nPayne's food was just too good for her. Fucking plum sauce...\n\nShe sighed, staring mulishly out the curving expanse of the hull. She was not a fan of being used for this weirdo cloak-and-dagger bullshit, and she certainly wasn't happy that Rennels wasn't telling her everything she wanted to know. Even though the lying fuck had said he would.\n\nHe'd given her a destination, B-Milistine, a resort asteroid and conference center Pixy's plot repeater had never heard of. It's in Casseopeia Basin D, Rennels had assured her blandly. Just fly there. Corcovado and I will handle the rest. Pixy had scowled, but she'd gone ahead and set the course anyway, with Bar-Lev on the helm watching her curiously. So now there they were, trundling along toward Cassiopeia at velocity factor 13 with an ETA of thirty-four hours and twelve minutes standard, and Pixy still couldn't get Payne to produce a simple grilled cheese sandwich.\n\nNope. With Payne, everything had to be roast hare with plum sauce. Or brush-pigeon in cream. Or matzoh towers with jarga compote.\n\nShe glared testily out at the stars. \"Fucknut. Extinguish.\" Her light-lizard winked out at once, leaving Jeyne to glance over from her bed.\n\n\"Something wrong?\" he threw out casually. He was a good bedwarmer, Pixy reflected: he knew just what to say to calm her down, usually. But sometimes, his attempts at careless banter were a little too careless.\n\n\"The fucking food.\"\n\n\"Again.\"\n\n\"Yes, 'again.' I want my goddamn steward back.\"\n\nPeyne dimmed his tabslate. He'd been studying for his promotion exams. \"You want your impertinent, murderous, independent-minded, insubordinate, sexually voracious, offensive steward back?\"\n\n\"Yes. Like I said,\" Pixy whined.\n\nPeyne laid his head back, hands interlaced behind him. \"It's been nice for me, not having her here. She always undresses me with her eyes.\"\n\n\"Yeah. That's because she wants to fuck you,\" Pixy explained.\n\n\"Well. But it's off-putting.\" He hesitated. \"She and I have other duties, but when we're in this cabin we're here for the same reason, Pixy: to support you. That sometimes puts us at odds.\"\n\n\"You're not at odds.\" Pixy nudged the dish away. \"She just wants to fuck you. You two should probably just get it on once or twice so she can get over it.\"\n\n\"No.\" Peyne was certain. \"She wants to fuck us. Both of us, simultaneously. And you know it.\"\n\nShe sighed. \"Yeah, yeah.\"\n\n\"And yet you miss her.\"\n\nPixy laid her head on her crossed arms. \"Completely.\" She let herself ooze into the chair, the smell of plum sauce sickening her. This was the time she hated the most: some decisions had been made, but most lay ahead... and she had no idea when. Or what. Or whether it would even be she who could make them. She hesitated, mulling one of them. \"You'd fuck her,\" she accused him softly.\n\nJeyne stirred and shrugged, naked on her bed. \"I'm a married man, Commander Pfeiffer,\" he reminded her evenly. His wife Drinella was some sort of doctor back home on one of the Javete moons.\n\n\"Yeah,\" she smirked, eyeing a penis still glistening with her pussy-juice. She'd had time for dinner or a fuck between a cargo inspection and a counseling session for a miscreant engineman, and she'd tried to cram in both. Alas, though his spooge in her vagina had been satisfying enough, dinner would not be. \"You'd fuck her.\"\n\nHe paused, then sighed. \"I'm the second officer aboard a Fleet frigate on one of the least desirable stations in the universe. More to the point?\" He waited until she turned questioning eyes on his. \"I'm the bedwarmer for the acting captain. That makes me monogamous.\"\n\n\"True.\" It was an awkward position for him. There was a reason captains didn't usually take bedwarmers. The risks of favoritism, of perception, of being used, were very high. It was not possible for him to sling his dick around to others; it would endanger her position, and thus the entire ship. \"But. Hypothetically. You'd fuck her.\"\n\n\"Oh, absolutely.\"\n\nPixy sighed. \"I feel bad. I feel like whatever that fucking smarmy Colonel wants her to do, it's going to get her killed.\"\n\n\"Others have tried to kill her,\" he pointed out. \"Usually, she's the one who kills them first.\"\n\n\"Well. But these are really dangerous people.\" She pondered, the decision solidifying. \"I'm thinking... I might send a team to keep track of Colonel... uh, Colonel Smith's movements.\" As little as Rennels had told Pixy, she knew it was a lot more than he'd told anyone else aboard. And she had a finely-tuned sense of security when it came to classified info. \"Just to shadow them. Keep watch.\" She stared levelly at him. \"It's the kind of thing I'd tell a second officer to do.\"\n\nHe nodded, eyes glittering. \"A shuttle.\"\n\n\"Some Marines. Not many.\" Pixy hesitated. \"And a corpsman, a good one. Kimmage.\"\n\n\"How about I just bring Commander Borowicz?\"\n\n\"No.\" Doc Borowicz was a good surgeon, but Pixy doubted his ability to deal with a crisis. \"Kimmage is better. With a full haemo setup in the shuttle, not a portable.\" Her clock chimed softly; time for her to deal with that fucking engineman. \"It would obviously be in your team's best interest to make sure Colonel Smith does not realize he's being observed...\"\n\n\"I'll deal with it.\" He sat up, his thick cock dangling between his strong thighs. \"Trust me, ma'am.\"\n\n\"I do,\" she said at once, a little surprised to find she meant it. \"Just... don't come back without Juno. Whatever happens.\"\n\n\"Aye aye, ma'am.\"\n\n\"No. Really.\" She swept to her feet, feeling her utilities tug themselves into shape. \"That's why you're bringing Marines. I want her back here, and I want you to do whatever it takes to ensure that.\" She stared down at the man in her bed. \"Because you're right. You two are here for the same reason. Comprehend?\"\n\n\"Perfectly.\"\n\n\"Good.\"\n\n* * *\n\nShe was slurping butter-tea on the bridge some 32 hours later, squinting at the little asteroid belt in the forward port. Colonel Rennels stood beside her, looking a little odd in the purple robes of a Diplomatic Service courier. \"Nice disguise,\" she muttered when he appeared.\n\n\"Disguise? Not at all!\" He grinned. \"This is entirely genuine. In addition to my Army rank, I also hold a Diplomatic Commission as a third-level courier.\" He winked. \"You'd be surprised at the number of appointments, warrants, and sinecures I hold, all of them bona-fide. Or at least honorary.\"\n\nShe scowled at him, her tiny nose scrunching. \"Anything in Fleet?\"\n\nHe chuckled. \"Don't worry, Pixy. Not as far as you're concerned.\"\n\nShe glared balefully at him. \"Mind your helm, OOD,\" she grunted to JLt Dwart; she'd felt the ship falling off to port.\n\n\"I'm avoiding a gravity well, ma'am,\" Dwart replied in her deep, sexy voice.\n\n\"Don't give me that bullshit, or I'll kick your jaw off.\" She was feeling waspish. \"Just keep us on course. Navigation!\"\n\n\"Ma'am?\" Delmer glanced up from the nav pit.\n\n\"Magnify and highlight the objective, and lock it at center. Maybe that'll help Ms Dwart maintain a nominal lateral attitude.\" The viewscreen came to life, figures and charting data scrolling down the side as B-Milistine grew larger at the middle of the field, winking out of space's inky blackness like a diamond on velvet. She frowned and consulted her implant, the information the Colonel's pilot had given her spreading into her thoughts. \"So. Officer of the Deck.\"\n\n\"Ma'am.\" Dwart straightened up, quivering pertly.\n\n\"We're going to have to start sending a request for clearance when we're well out of range. It's going to have to look like we've been sending it continuously on all beams.\"\n\n\"Ma'am?\"\n\n\"Our passenger,\" Pixy said quietly, with a wink, \"wants his destination to think we've genuinely rescued a distressed diplo vessel.\"\n\n\"Ah.\" Dwart nodded knowingly. \"Got it, ma'am. But, uh, I think we'll be out of midbeam range for another three hours, at least. I'm off in two.\"\n\n\"Yes,\" Pixy explained, trying to restrain her patience, \"and that is why we have a log. Record my orders so that the next OOD can follow them, please. Or?\"\n\n\"You''ll kick me in the vag, ma'am.\"\n\n\"Exactly. And make sure that both myself and Colonel Smith are called to the bridge the moment those distress calls get a response. Comprehend?\"\n\n\"Aye aye, ma'am.\"\n\n\"Or?\"\n\n\"You'll kick me in the vag, ma'am.\"\n\nPixy smiled warmly up at the woman. \"You're a good officer, Ms Dwart. You're shaping up just fine.\" She stretched and yawned. \"Colonel? Anything to add for my bridge watch to log?\"\n\n\"No indeed.\" He smiled.\n\n\"Good. I've got coding to do. You've got the bridge, Lieutenant Dwart. Carry on.\"\n\nShe clomped down to the wardroom for more stim, feeling surly, and she knew why. She missed Juno. It wasn't just her cooking, either: she missed the woman's cheerful directness, her fearlessness. Juno gave her strength, and Pixy had known it for some time.",
        "Of course, she'd deny any such ludicrousness, if asked. But she knew it in her withered heart.\n\nIt had only been a few days, but life on Fleet ships is so uniquely balanced, so finely tuned, that any change as abrupt as the commanding officer's steward suddenly disappearing into the Great Cabin with the Army was going to have serious effects on said commander, and it was never going to take very long. Pixy was realizing she was addicted to Juno, just as surely as she needed her butter-tea. And an occasional dose of stim, or bump. And dick, sometimes. Juno was that elemental.\n\nShe hoped Jeyne understood that. She thought he must.\n\n* * *\n\nPart IV: Juno\n\n* * *\n\n\"Five minutes 'til release.\"\n\nCorcovado's voice floated laconically over the diplo ship's speaker cones, its deadpan character setting off a deeply chilling vibe in Juno's brain. Corcovado had been her final exam, of sorts, her last bit of hastily contrived training during the two sleepless nights when Vanzetartt and Nerkins had stuffed her full of knowledge of what they called \"the two fundamentals,\" sex and death.\n\nThey'd had to accept that she wouldn't become a master of either, though Vanzetartt had been forced to admit, after watching Juno with Corcovado, that the young steward's sexual chops were well above average. \"You'd be outstanding,\" the warrant officer had growled, \"given about five more months.\"\n\n\"And I'd be kicking your ass every fucking day.\" The lithe sergeant had punctuated her comment with an attempt at stabbing Juno, out of the blue, which she'd been doing for days at that point. Part of your training, she'd laughed after the first day, when she'd sunk the knife deep into Juno's liver; the surgeon had not been pleased, though he'd obeyed once Colonel Rennels told him he wasn't to tell Pixy. Good thing, too: Juno suspected that if Commander Pfeiffer found out her steward had been stabbed, there'd have been hell to pay.\n\nThe wound still ached, but there'd been very few more. Juno was good at blocking.\n\nShe blocked this one, too, her wrist knocking Nerkins' arm up and back while she followed up with a brutal chop to the sergeant's neck. Teeth bared, the two women had faced off until Vanzetartt had told them to stand down. \"Not much of a killer,\" the warrant officer had spat. And that's when Captain Corcovado had made his appearance.\n\n\"The objective,\" Vanzetartt had announced loftily, \"is to make both the captain's cocks ejaculate simultaneously.\" She'd glanced at the man. \"You won't be able to, Juno.\"\n\n\"Fuck you.\"\n\n\"Try your best. This isn't a normal situation; ordinarily, we'd wash you out if you couldn't do this. But then, ordinarily, you'd have had a lot more training by now. So just do what you can. Try to make his orgasms as close together as possible. For simplicity's sake, I'd suggest a handjob at the same time you ride him.\" She'd nodded at Corcovado. \"Sir? You ready?\"\n\nHe'd sprawled in Captain Ledicki's bunk. \"Might as well get this overwith,\" he'd sighed, and as far as Juno could tell, she'd done okay. His first load had bloomed inside her pussy just twenty-seven seconds before his second had slapped her belly, her hands twisting along that upper shaft as she rode the lower. Vanzetartt and Nerkans had traded a veiled glance, but they'd seemed pleased. But Corcovado had taunted her the entire time, that dead voice of his cutting monotonously at her appearance, her technique, the tightness of her pussy, the look in her eyes. The captain had proven to be a man gifted in the many uses of insult. And now his voice grated at her every time she heard it.\n\nFloating in the zero-g bag once occupied by the late Warrant Officer Suryasta, Juno felt the fast ship shake around her as Pfeiffer brought the Desperado into its low orbit over the asteroid where their target waited. She could hear, in the tiny dart of a ship, the bleedover from Captain Corcovado's cockpit up above, where he was monitoring the Desperado radio net: the bridge was requesting orbital clearance from B-Milistine Control, and the voice on the radio didn't sound like Jeyne. Unusual.\n\n\"Remember, scum-bitch,\" Nerkins growled from the next G-sack over, \"welded to me. On my ass. I'll tell you when to do anything.\"\n\n\"Yes, sergeant.\" Her disguise, as an Army tech, hung loosely along her tiny frame. She shifted, queasy as she often was in zero gravity, feeling the knives strapped to her body under the Army greens. They weren't using guns, though the Colonel would wear one openly. He waited upstairs, in the tiny wardroom's selective gravity, finishing up his plan.\n\n\"One minute,\" rasped Corcovado. Desperado's transmissions had stopped now, and everything was in motion. She gulped nervously, then glanced over to see whether the two fearsome Army assassins had noticed. Of course they had, exchanging one of those opaque glances of theirs. And all of a sudden, Wrae Juno felt a stir in her gut that had nothing to do with zero-g. This was different: this was danger. She furrowed her brow and opened her mouth to speak just as the captain's voice slipped one more time out of the cone. \"Releasing... now.\"\n\nShe felt nothing as the little ship thumped free from the frigate's ventral hatch, angling down and zipping toward B-Milistine with nothing more than a slight bob among the bagged women despite the diplo ship's rapid acceleration. She heard the creaking of the control surfaces outside as Corcovado guided them down. \"Eighty seconds,\" he bit out over the cone.\n\n\"Remember,\" Vanzetartt said quietly, barely audible over the rattle of the micro-clobbets along the hull, \"keep it simple. Rollstenfenger's men are fucking psychos, but they're anticipating a complicated operation. Because that's how Rollstenfenger thinks.\" She licked her lips. \"In, out. Done.\"\n\n\"Well,\" Nerkins chortled, \"you'll certainly be doing the in and out.\" The sergeant's eyes shone in a way that was not altogether safe. \"Remember, scum-bitch, we're getting dropped right before the captain lands.\"\n\n\"Right.\" Juno was unnerved that she felt quite so anxious. She never felt anxious. There was something wrong here, she knew, even aside from the obvious. \"Then we hightail it to the target building.\"\n\n\"It's a hotel,\" Vanzetartt's voice was still soft, almost medicated. \"Just call it a hotel, sailor.\"\n\n\"We do, indeed, hightail it,\" Nerkins broke in scornfully. \"Well, I do. It remains to be seen whether you can keep up.\"\n\n\"She can keep up.\" Vanzetartt nodded. \"I think the Colonel chose this woman wisely, Sergeant Nerkins.\" But the warrant officer's nod was cold, a curt bob. Her implant glowed, an almost imperceptible green in the corner of her eye. \"Thirty seconds, ladies.\"\n\nCaptain Corcovado had done this many times before, a quick dip to the surface to disgorge a hit team before taking to the air again to move on, all without being detected by local Control. Vanzetartt had explained to Juno that they often did insertions this way, via rescue bag, so the little steward was ready as the diplo ship tore through the asteroid's thin terraformed atmosphere with the side hatch open, Nerkins in her Army Secretariat disguise squinting forward as the wind whipped at the artificial hair she'd put on. She glanced unreadably back at Juno. \"Now, scum-bitch.\"\n\nAnd then she was out the hatch, disappearing in an eyeblink, with nothing for Juno to do but suck up her nervousness and bundle herself out in the other woman's wake, the gravity hitting her with a shocking abruptness. The ground rushed at her with a suddenness and rapidity she couldn't even process, her eyes taking in the usual peaty ponds that covered most asteroids, the dark sky above her blotted out suddenly as her bags popped open.\n\nEven cocooned within the safety of quadruple-strength safety bags, the landing was a rough ride. Rescue bags were designed to make sure whatever was in the middle survived suborbital impact on low-atmosphere bodies with minimal damage, but not no damage; Juno felt her teeth jar painfully together and found time to be grateful she'd remembered to make sure her tongue wasn't in the way. She felt herself rolling, bouncing across the rough landscape, the vestibular compensators over her ears barely fast enough to keep up with her tossing motion; all the while, the bag deflated slowly, sluggishly, leaving her entombed in billowing fabric right next to a tarn.\n\nNerkins was already tugging at her releases. \"Come on, scum-bitch. Time to show me you can hightail it.\" Juno dragged herself onto the lichen, the sky a weird purplish veil around them with the diplo ship skating far over the horizon and the Desperado high above looking like a child's model. \"Move that ass.\"\n\nJuno moved that ass.\n\n* * *\n\nThey waited in a corner of the subbasement of the hotel employee cafeteria, just a civilian researcher from the Army Secretariat along with her tech, both of them wielding complicated-looking scanners that were ostensibly made for investigating voids in the asteroid's crust. Of course, in reality, their purpose was somewhat simpler: deception. The place was swarming with soldiers loyal to Field-Marshal Rollstenfenger, and even this late at night they needed to be ready to talk their way out of discovery.\n\n\"Something's wrong.\" Sergeant Nerkins glared at her screen, a slice of pizza forgotten in her hand.\n\n\"No shit?\" Juno was pulling security, staring out at the rest of the empty cafeteria. \"Should I set the explosive?\" She hoped she didn't sound too eager. Her rucksack contained a foldable wall charge that, once they clacked the detonator, would open a dusty and very noisy path straight into the subterranean luxury quarters where Vanzetartt's simulacrum of the princess-ambassador of Kuygens VII was currently seducing a traitorous field-marshal.\n\n\"I don't think he's buying it.\" Nerkins frowned at the screen, a closed-loop feed from the little vidcam implanted in a fake mole on Vanzetartt's neck. By this time, the warrant officer should have been well into the process of getting the field-marshal naked. Rollstenfenger's sexual weaknesses were well-known to the people who controlled Colonel Rennels, and he'd trained his team accordingly. \"Blowing the charge will compromise us completely, summon every soldier for miles, and probably guarantee we get killed. But setting it will only take a second if we have to. So wait for my order, scum-bitch.\"\n\nThe insult had no force behind it, though, delivered out of habit, and this above all else scared Juno. Nerkins was freaked the fuck out. \"Okay, sergeant,\" she nodded quietly. She wished she could see the screen; she was dying to find out what was happening with Vanzetartt, but she had her own proximity detectors to manage. \"Scope's clear,\" she muttered, trying to keep her voice neutral.\n\n\"I don't think he's buying it,\" Nerkins repeated quietly, shaking her head. \"I think she's fucked.\"\n\n\"Umm.\" Juno felt her heart thumping. This was not like a Fleet battle. This was odd: deadly peril, coming inexorably on while she waited quietly in a sterile after-hours mess hall eating cold, stolen pizza. \"I'm going to dig out the breaching charge.\" Everything in her brain, in response to that mysterious frown on Nerkins' full lips, told her she should already be blasting her way into the field-marshal's suite. It bothered her greatly that she wasn't in charge here. \"We can't wait, sergeant.\"\n\n\"Fuck you,\" Nerkins snapped, but she was nodding as she squinted into her screen. \"Go ahead and get it ready. I think we're totally screwed here.\" She flung the pizza aside, her fingers tapping out a rapid status report to Colonel Rennels, currently roaming two floors above, pretending to be an aide. She was waiting for the reply when her eyes abruptly widened. \"Shit. They're fighting. Set the charge now.\"\n\n\"Fuck.\" Juno had already unpacked the little red bundle, just like the dummies she'd trained with yesterday. Her hands fumbled with the arming ribbon, and then she whirled to her feet with her prox detector forgotten on the floor.\n\n\"Throw it at the wall, like we trained you on that bitch-ass ship of yours,\" Nerkins grated. She was stepping out of her innocuous civilian coverall, reaching for the big-caliber pistol strapped to her thigh. Juno blinked.\n\n\"Wait. A gun?\"\n\n\"Playtime's over, scum-bitch.\" The sergeant's eyes glinted, feral, her tattoos slithering all along her skin as her muscles moved. \"As soon as it blows, we go. Stay the fuck behind me. Anything in there that's not me or Gianessa needs killing: fair game. So don't get squeamish.\" She watched as the charge sailed from Juno's hand, smacking to the wall with a sound like balls on a taint. \"Let's do this shit.\"\n\nJuno swallowed in a dry throat, her hand closing around her treasured Sajusake Cyclone chef's knife. The girls had supplied her with several choices of blades to carry, but something about that knife felt right. Proper. It sang in her hand as she whipped it out from under her tech disguise, the clacker in her other hand. She was already smacking the detonation code before Nerkins turned and told her to.\n\nJuno felt her blast-dampers bloom in her ear canal as the wall disintegrated before her in a wash of fire. Vanzetartt and Rennels had thought long and hard about the design of this charge: the target diagram had shown three walls and two corridors to blast through, and they'd calculated the explosives to provide exactly the right effect. The fire flashed through the basement, shaking that whole corner of the building, wall after wall melting as Juno watched in disbelief, her hearing safely dulled. The blast was still going on as Nerkins shook her shoulder.\n\n\"Don't fucking wait, scum-bitch. We move,\" she barked, her lips forming words that Juno barley heard, but then the two women were moving without thought into the dusty remains of the subbasement, fire still flaring in their faces as they hurdled piles of rubble. Her dampers subsided suddenly as the last wall echoed down, slagging in a pile on the floor, and then it was all swirling dust and the strangled grunts of two people in the hidden subsurface bedroom, locked in a harsh struggle.\n\nThe smoke drifted away to show Juno a large, powerful-looking man looming naked over Vanzetartt, who crouched on the floor beneath him. His neck bloomed in a raw new wound, already half-closed by the suture-iron he was clamping frantically to his throat even as his other hand lifted a little projectile pistol up from where it had just left a smoking hole in Vanzetartt's chest. \"Fuck,\" Juno bit out, diving desperately aside as the field-marshal turned angry, blood-pitted eyes to face the two women surging through the wall.\n\nNerkins never really had a chance. Where Juno leapt sideways, Nerkins flew up toward the ceiling, her pistol already coming to bear on her desperate target as she gave a triumphant shout. Her finger was tightening on the trigger just as her head smashed into the ceiling, leaving her tumbled on the bed in a sickening heap.\n\nJuno had just rolled into the far corner by the door as the big man stepped forward, his hand still busy at his neck, and clamped his pistol to the side of the dazed Nerkins' head; her face disappeared in a wild scarlet welter of flesh-and-bone splatter that spewed all over the room, leaving her headless body twitching on the bed. Fuck, Juno thought to herself; everything was in slow motion, the big man's legs and ass rippling as he turned back toward Vanzetartt, whose helpless wheezes sounded like the gasps of a whaleshark. Get the fuck up and stab this asshole, Juno commanded herself, her legs gathering under her body.\n\nThe Cyclone knife struck Wrae Juno's favorite target when murdering officers: the kidney, pushing into his flesh all the way to where her sweaty fingers gripped the handle before she sawed it hard toward his spine, the edge eventually hanging up briefly on something deep inside. He gasped and sagged, his whole body shuddering: they all did that when you ripped out their kidney, Juno had noticed, but by then she was pulling the long blade out in a little burp of thick blood and rising up behind him, pulling his clammy body toward her, the knife digging into the junction behind his collarbone, just where his neck started.\n\nHis whole body twitched again. Rollstenfenger was trying desperately to twist his head around for a look at his assailant, but his neck muscles weren't working and besides, the blood was coming in great thick gouts now and he was ceasing to worry about much at all aside from the onset of shock. She stepped back, letting gravity pull him off her knife as he collapsed in a pale, sweaty mass at her feet.\n\n\"Shit.\" She was already wiping the Cyclone off on her borrowed trousers as Vanzetartt worked with cold, clumsy fingers to get the field-marshal's fallen suturing-iron to her wrecked chest. \"How the fuck do we get out?\"\n\n\"The way you came in.\" The warrant officer's voice came faint but lucid, her feet scrambling. \"Fuck. This hurts. Help me. You've got a Portable Surgeon in your rucksack; give it to me and I'll try to hobble out.\" While Juno rummaged, Vanzetartt spat out blood. \"And cut his finger off. Or his ear. The Colonel will need to make a positive ID.\"\n\nDistant shouts drifted through the smoke as the warrant officer fumbled the surgical device over her chest, frowning down at it. \"Won't be able to fix a wound this big,\" she sighed, her skin pale. \"Help me up.\"\n\n\"Just a sec.\" They could hear feet now, a gang working at the rubble while another chiseled at where Vanzetartt had put a stasis bar across the room door. The Sajusake steel hissed through the field-marshal's ear, the dying man scarcely twitching as his consciousness went. She held the severed ear like a truffle over a pan. \"What do I do with this?\"\n\n\"It needs to get back to the colonel. Give it to me.\" The woman groaned loudly as Juno hauled her to her feet, another muffled thump coming from the other side of the door. She tucked the grisly trophy into her belt. The thump turned into screams. \"That's my booby trap. Time to fucking move, sailor.\"\n\n\"What about Nerkins?\" Juno had chosen not to look at the tattooed form on the bed, leaking freely.\n\n\"Nerkins is wasted. We're not. Let's go.\" She reached out her arm, dripping silk from the diaphanous robe the princess-ambassador of Kuygens VII had worn to the meeting. \"I'm glad I got him naked, at least. Easier stab for you.\"\n\n\"Um. Sure.\" Juno took the woman's arm across her shoulders and began to maneuver them toward the dusty breach, Vanzetartt grabbing Nerkins' dropped pistol as they went.\n\nIt wasn't until they'd lurched to the far side of the employee cafeteria that Juno began to think they might actually make it. By then, the Portable Surgeon had begun to do its work on Vanzetartt's wound, diagnosing and burrowing, stabilizing. \"Where do we go now?\" It was slowly dawning on Juno that the girls had never given her any precise details about their withdrawal plan, which was starting to set off vaguely disquieting signals in her brain.\n\n\"The Colonel meets up with us out at the edge of the marsh,\" Vanzetartt panted. \"Azimuth is 223 for about 350 meters. We get there, then he finds us and the captain comes to pick us up.\" She wiped a trickle of blood from her mouth. \"I can just about make it, but make sure I don't pass out. Let's go.\"\n\nJuno was exhausted by the time Vanzetartt's implant told them they'd reached the rendezvous, at the far side of a marshy expanse of slippery rock; she couldn't imagine how wasted the warrant officer must be feeling. They slid gratefully down atop a rock, barely able now to hear anything from a target hotel blazing with lights behind them. \"The colonel's demo charges should be going off any second now.\"\n\n\"Huh?\" Juno's dampers surged back to life, then, as the whole front of the building caved in and then slid down, a pile of burning rubble, the steward gaping at the sight in the low light of the local sun. \"Jesus H Buddha.\" She needed to piss, but the urge faded in the slumped, shattered majesty of the wrecked building.",
        "\"Yeah. That'll buy us time to move before their snoopers can track us.\" Vanzetartt leaned her head back against the rocks. \"Mission accomplished. Almost.\"\n\n\"Almost?\" Juno slipped her eyes sideways and found herself staring into the muzzle of Nerkins' big gun, now pointed squarely at her face. \"What the fuck?\"\n\n\"Sorry, sailor. Orders from the colonel.\" The warrant officer remained pale, her voice feeble, but her hand remained steady on the gun. \"No loose ends. The more people who know about this shit, the worse.\"\n\n\"I fucking killed the target,\" Juno frowned, her brain furrowing with rage. \"Jesus H Buddha, I saved your fucking life...\"\n\n\"Yes. And thank you. You'll get, like, a super-high award for all that.\" Vanzetartt smiled grimly. \"Posthumously. Sorry, kid. There's not much I can do.\"\n\nJuno knew she should feel fear, here on a distant asteroid, surrounded by enemies, betrayed by allies, and needing to pee. Instead, all she felt was a horrid sense of indignation. Even after all this time in Fleet, she was flat-out frustrated by the unfairness of it all. The muzzle of the pistol looked huge. \"What super-high award?\" she asked, dry-throated. Everything around her seemed to have gone still.\n\nThe warrant officer cocked her head. \"Why do you ask?\" Her finger tightened on the trigger, and Juno knew that if she was going to do anything about this, there was no more time to think: it had to be now. Vanzetartt's instincts were too good to keep from shooting her for long.\n\nJuno summoned whatever strength she had left, knowing her opponent had been almost dead a few minutes ago, and still would be but for the little blinking whir coming from the Portable Surgeon. She feinted away from the gun, knowing Vanzetartt would expect that, knowing she'd shoot at once, so she sprang upward instead, muscles protesting.\n\nShe wasn't thinking clearly, instinct making her foot lash out at Vanzetartt's chest, smacking the side of the Portable Surgeon as the gun tracked her, its first shot sizzling through her loose Army pants. But then Vanzetartt was screeching, a truly hideous and breathless shriek of pain and despair, and Juno was falling off-balance to the slippery rocks. She stumbled to a crouch, her eyes tearing toward the warrant officer even as a searing pain sizzled through her thigh.\n\nJuno saw blood, blood everywhere. The little Surgeon had an auto-infuser that churned out new blood cells, pushing them into the delicate links its sensors had made to the patient's vessels, and Juno's kick had severed all those links. Vanzetartt's blood gouted out in a vast, spreading sheet, the Portable on full blast, her skin turning paler by the moment as she shivered.\n\n\"Shit.\" The little steward dragged herself to her feet and looked down at the dying assassin. \"You said I wasn't much of a killer. Guess you didn't know what the fuck you were talking about.\" She crouched again, her holed trousers shoved down, and let out a long, orgasmic piss into the bloody marsh water. She glanced at the furrow Vanzetartt's last shot had made in her leg, and once she'd finished with her business she picked up the Portable Surgeon, tripped the auto-shutoff, flushed it, then smacked it over her own wound. The device was still warm from Vanzetartt's body, but Juno ignored that as she watched the assassin twitch out the last of her life, no longer breathing.\n\nFuck.\n\nEverything was supposed to have calmed right down, dammit: the target was gone, the mission was done, but now everything was complicated. Juno raised her eyes to where Desperado drifted above, looking almost close enough to touch: she felt like she could leap up and just hop aboard, but the frigate might as well have been in another galaxy. There was no way Corcovado would take her back, of course. He'd probably kill her, him and Rennels, and it would happen soon before the colonel took Rollstenfenger's ear from Vanzetartt's corpse and headed back toward civilization, with no one the wiser.\n\nEven Pixy wouldn't know.\n\nShe dragged weary eyes toward the horizon, where a low fast blur told her of the approach of the diplo ship. It ought to be carrying two Army officers with three cocks between them, both men bent on killing her and making an escape. Wearily, she stooped and picked up the abandoned pistol. She knew, now, why the Army hadn't trained her to use it. Now she had little time to learn. She rummaged at the twitching Vanzetartt's belt, knowing now why the warrant officer had demanded the field-marshal's ear.\n\n* * *\n\nPart V: Jeyne\n\n* * *\n\n\"Can you see what's happening?\"\n\n\"Nope.\" Technically, Plovsek was a sergeant, and very subordinate to Desperado's acting second officer. But here, crouched behind the slimy rocks on an asteroid full of oddly-colored atmosphere and vague threat, the platoon sergeant was in charge. And they both knew it. The Marine adjusted her viewer. \"Definite movement, though.\"\n\nJeyne frowned, unsure what he should be doing. \"That... that other woman. Still dead?\"\n\nThe Marine swung her viewer back to Vanzetartt's body, grimacing at the sight of all the blood. \"Probably. If she's not been haemo'd by now, I doubt there's much of a chance.\" She hesitated, glancing at the junked hotel, the little teams of Army troops in the distance, swarming over the wreckage. \"What happened here, sir? And why isn't that diplo ship taking off? And why aren't we taking off?\" Her Marine squad lay on the stones, fanned out behind them, pulling security. \"I'm starting to feel like I'm being hung out to dry here.\" Her tone was that dry accusation Marines often used with Fleet.\n\n\"We take off when Juno's done.\" Jeyne swallowed. \"Those are the orders, Sergeant.\"\n\n\"Ah.\" Plovsek frowned over for a long second. \"Uh huh. So the skipper doesn't trust the Army and wants us to make sure she doesn't die.\" She sniffed, considering. \"Well, with what we just saw there with that dead Army bitch? Looks like Commander Pfeiffer was probably right to be worried. I'm sure she's burning up the mid-beam to the shuttle right now...\"\n\n\"We should move.\" Jeyne licked his lips. He didn't want to think about how he'd been out of comms with the ship. He'd told the Marines they'd only be moving a few klicks from the shuttle, but they were six kilometers away from their landing zone and now he thought they should go further. \"I don't like being this far away from her.\"\n\n\"Relax, sir.\" Plovsek glanced over her shoulder. \"Gomezowicz? Still on target?\"\n\n\"Still on target, sergeant.\" Jeyne looked down at where the Marine waited coolly with his rifle, focusing through his scope. \"I could shoot Juno anytime.\"\n\n\"Meaning,\" Plovsek put in, for Lieutenant Jeyne's benefit, \"he can shoot anyone near Petty Officer Juno, too.\" She adjusted her viewer again. \"On your orders, sir,\" she added solicitously.\n\n\"Yeah.\" Jeyne swallowed. \"I really want to get closer. With Kimmage. In case she needs medevac.\"\n\n\"She's just taken care of her own leg,\" Plovsek reasoned. \"Let it play out, sir.\"\n\n\"Well. I think their diplomatic ship is going to be in sight at any time.\" Jeyne was shocked he couldn't already see it. \"When we spot where it's going to land, it's imperative that Gomezowicz be able to shoot at it.\"\n\n\"No,\" the sergeant muttered firmly, \"it's imperative that all of us be able to shoot at it.\" She gave him an appraising glance. \"Your instincts are on target, sir, but with respect? I know what I'm doing here. I'm fucking this chicken. I just need you to hold the head.\" She went back to her viewer. \"And figure out how to get the shuttle closer. I don't fancy running six klicks back for our exfil, even with gravity this low.\"\n\n\"Already arranged.\" They'd left a Marine back there on guard, uselessly. \"I can remote-pilot it from here, as long as the maneuvers stay simple...\"\n\n\"She's moving.\" Plovsek's clipped tone shut him up. She studied her viewer. \"Heading for that hill? I think?\" She swung her view that way, then paused a moment. \"Yes. There's something coming, low over the horizon.\"\n\n\"Shit.\"\n\n\"Relax, sir.\" She focused the viewer. \"She took the pistol. She's barely even limping. I think she's got this figured out.\"\n\n\"I don't know if I can cover that little hill, sergeant.\" Gomezowicz had been listening. \"Not from down here.\"\n\n\"Okay. Then we do need to displace.\" She nodded and turned to her commo tech. \"You take the viewer, Muckins. The rest of you assholes, get ready to head out.\" Jeyne felt the stir around him, the Marines being quiet, their competence reassuring. \"Take point, Sergeant Jyzzryk. Make sure you find some defilade. We're moving just as soon as we're sure that's the diplo ship.\" She shot Muckins a meaningful look. \"Meaning, keep your eyes fucking peeled.\"\n\nAn awkward few seconds passed. Jeyne squinted, wishing he'd brought his own viewer, watching as the distant Juno pulled herself tiredly over the difficult terrain. Behind her, the smoke from the shattered hotel spread into a shell over the thin atmosphere. \"Got it, sergeant.\" Muckins cleared his throat. \"It's the diplo. Heading straight toward the XO's steward.\"\n\n\"Move out, Sergeant Jyzzryk.\" Plovsek rubbed at her cloned leg. \"Let's do this shit.\"\n\n* * *\n\nPart VI: Juno\n\n* * *\n\nThe blue dart of a ship flared and landed at the backside of the little hill where Juno crouched. It slipped into the boggy ground down there like a needle passing into a vein, its skin shining weirdly in the smoked light. The top hatch was already swinging open as it settled into the marsh, and she caught the flash of Colonel Rennels' teeth as he grinned up at her. \"Jesus Buddha, Petty Officer! Don't you know not to silhouette yourself on hilltops? Come on down here.\"\n\n\"I'm fine up here, sir.\" She'd unhooked the Portable Surgeon halfway up the hill, once its systems had told her her thigh was all fixed up. It still ached, though. She cleared her dry throat. \"Do me a favor and call Commander Pfeiffer? I was hoping she could send me a ride.\"\n\n\"What the fuck are you talking about, Wrae?\" His voice was carefully modulated. He stretched a bit further out of the hatch, squinting up at her. \"The others are dead. We're compromised. We need to get the fuck out of here, sailor. Now.\"\n\n\"No, sir.\"\n\nHe nodded up at her, suddenly quiet, but he didn't duck back inside. She angled Nerkins' pistol from her waist, fairly sure he knew she had it and absolutely sure she couldn't hit him from here anyway. Still, she went ahead and pulled the trigger, feeling the zing of the little gun as it jumped in her hand, exhilarated when she heard the round bounce off the diplo's blue skin.\n\nShe'd expected to miss by a lot more.\n\n\"Ah.\" The colonel nodded now. \"That's how this is, hmm?\" He sighed. \"Nerkins told you why she was killing you.\"\n\n\"No sir. Vanzetartt did.\" Juno brushed her hair from her eyes with trembling fingers. She'd never felt so tired. \"Nerkins didn't get the chance. She died pretty easily, to tell you the truth.\"\n\n\"Well. Not everyone can be as resourceful as you are, Wrae.\" He nodded in admiration. \"Come on down. Now that we both know the score, we can talk more openly. But Rollstenfenger's people are going to be tracking us already.\"\n\n\"Just call Commander Pfeiffer.\" Juno had no idea what she was doing now. Her mind contained no plans, no schemes. All she knew was the tearing need to get back to that ship up there. \"If they catch me, I'll tell them all about you.\"\n\n\"Yes. That's why I can't let you live,\" he shrugged. \"My hands are tied. They're not going to take you alive, Wrae, you know that.\" He spread his arms wide. \"Come on down. Just talk to me.\"\n\n\"You're not even going to try to help her get a command, are you?\" Juno backed off the lip of the hill, to the far side. It hadn't occurred to her that the diplo ship would have guns. She didn't think it did, but she did know Captain Corcovado was... somewhere. And that he most certainly had a gun. Either way, it seemed wiser to put the hill between them. \"You were lying to her, as you lied to me.\"\n\n\"I lie a lot,\" he nodded.\n\n\"And you're going to kill me, regardless.\"\n\n\"There's no way out of this for you, Wrae. Except with me.\"\n\n\"Fuck you.\" She held up Rollstenfenger's ear; only now was it starting to stiffen up. Only an hour ago she'd been waiting in the cafeteria with Nerkins. A whole lifetime had been crammed in between. \"You need this? Come get it.\"\n\n\"Nah. I don't need it.\"\n\n\"Liar.\"\n\n\"Take the chance, then. Come on down and hand it to me.\"\n\n\"Fuck.\" It came out as a whimper to herself. She had no clue what to do. \"Where's Corcovado, sir?\"\n\nHe nodded smugly. \"You'd love to know that.\" Juno licked her lips, eyes darting. Everything around her seemed sunk in grey twilight as the great smoke cloud rose behind her, the land before her formless but for the light leaking from the hatch around Rennels' body.\n\nAnd the lights above. Desperado. Home.\n\n\"Come down, Wrae.\" He sounded so calm, so safe. \"You're valuable to me. We both know that. Come down and let's talk about it.\" He paused. \"Or? I'll lift without you, and use my thrusters to crisp you as I fly away. I'm not waiting.\"\n\n'Where's Corcovado?\"\n\nHe shrugged. \"Ten seconds, Petty Officer Juno. You're right: I need that ear, but not exclusively. There are other ways to prove death. So. Ten seconds, then I'm lifting.\" The silence stretched. Juno heard a buzzing in her ears and, just above it, the distant sound of vehicles revving from the ruined building at her rear. \"Five.\"\n\nThe burst came blatting out of the twilight over the swamp, a fierce and unexpected burp of gunfire, the rounds passing close enough that Juno heard them snap past. She flinched to the side, gasping frantically, then crumpled to the ground in panic as she heard a soft sigh from three feet away. She turned that way to see Captain Corcovado folding like a marionette, half his guts hanging out and the other half... gone, vaporized, a red mist somewhere behind. His face showed dull curiosity from where he'd been crouching with his knife out, ready to spring on her, but now his expression changed slowly and slackly to a dull, stoned look of utter confusion as he slid down into a pool of his own blood.\n\n\"Fuck,\" he sighed, looking down at himself. His eyes roved around a bit before they found Juno's. \"Be nice. Put my brain in a haemodrive. Okay?\"\n\n\"Nope.\" Repulsed by the sight of his slippery guts, she took a step to the side and leveled the pistol. \"Bye.\" She squeezed the trigger button before she could have a second thought, and a neat hole appeared in his forehead like a third eye as the rest of his head whipped away, reminding her of Nerkins.\n\nShe swirled her head back around to where the colonel had whirled in the hatchway, peering behind him into the grey marshes as a faint shout came from about 200 meters away. \"Colonel Smith! This is Sublieutenant Felix Jeyne, from Fleet. We're going to destroy your ship and get you out of here on our shuttle.\" The voice paused. \"Whether you like it or not. Alive or dead, sir, that's your choice.\"\n\n\"Well, fuck me.\" Juno straightened, glaring into the night, the sirens louder behind her. \"I'm here, Mr Jeyne!\" she cried.\n\n\"We got you.\" She caught it then, off in the distance: the shuttle, limping slowly under remote control, scorching across the mosses. \"Decide, Colonel Smith.\" Jeyne did not sound friendly.\n\nShe sank to the ground again beside her third dead soldier of the last hour, looking again at the Desperado above.\n\nRelief.\n\n* * *\n\nEpilogue\n\n* * *\n\nHe was pretty sure Pixy Pfeiffer wasn't going to kill him, but he was less sure about that feral little steward sitting in the corner.\n\nWell, he sighed to himself as he shifted uncomfortably in one of Pfeiffer's office chairs, you fucked this one up royally, Schwick. He hated his first name, but it felt right to torture himself by thinking it. Never had be felt so humiliated. His team obliterated. His plans outfoxed by a bedwarming lieutenant and a bunch of smelly Marines. His mission, completed by an untrained fucking Fleet legal specialist with a kitchen implement.\n\nAnd now here he was, at the mercy of Fleet's most unpredictable officer. He smiled at Pfeiffer, buying time while the stony-faced Sergeant Plovsek waited just behind his chair. He could feel her hostile glare on the back of his scalp. \"I mean, just what is it you plan to do with me, Pixy?\"\n\nThe commander stirred, her chin low in her hand as she glowered over at him. \"I'm not happy with you, sir,\" she pointed out softly. \"You're fresh out of friends. You've gotten me involved in Army politics. You tried to kill my steward, and you lied to me to get me to help you.\" She paused. \"And? Nobody knows you're out here.\"\n\nHe stilled a shudder. He didn't like her tone. \"I didn't lie to you, Pixy.\"\n\n\"You had no intention of helping me with a new assignment,\" she snapped, glancing up at Plovsek. The Marine just stared impassively. \"No means, either. I'm sure, on reflection, that you don't know a soul in Fleet Assignments.\" She tossed her head sideways, short hair bobbing. \"I'm tempted to let Petty Officer Juno conduct a more private debriefing. Near an airlock.\"\n\nHe smiled, fakely. \"I think you'd regret that, Commander. I've made sure certain things would occur if I were to die unexpectedly, things that would probably poison your career. On the other hand?\" He raised his eyebrows. \"I'm resourceful. I'll be highly motivated to find a way to help you, if you let me live.\"\n\n\"Fuck off. Juno has already told me you never intended to hold up your end of the bargain.\"\n\n\"No, I didn't,\" the colonel shrugged, \"but the situation is different now. You know things about me, things which could damage me.\" He allowed himself to laugh. \"Not that you can exploit that effectively. I've got many, many friends in Army High Command.\"\n\nPfeiffer's gaze was steel. \"So did Field-Marshall Rollstenfenger. I'm sure there are people in your hierarchy that would love to know who was responsible for his death.\"\n\nHe was careful not to go pale, or start panting, or anything similarly dramatic. But Pfeiffer's record suggested he was now in danger, grave danger. She was not a woman who shied away from difficult decisions, never had been. \"Don't snarfshit a snarfshitter,\" he said quietly, hoping he projected an air of menace.\n\n\"You know I'm not bluffing.\"\n\nShe's got you by the gonads, Schwick. \"Well. So what's your suggestion, Commander Pfeiffer?\"\n\nPixy glanced again at Plovsek, nodding, and the Marine silently left the room. Outside, the stars drifted endlessly by, infinite and, to Rennels' Army mind, disorienting. Pfeiffer already had Risuna out there, continuing its survey. \"So we can speak frankly,\" Pixy sighed, leaning back in her chair. Rennels glanced at the silent, ominous little Juno, but said nothing. \"The woman you need to speak with is a full Commander named Thajk. First name Cheyra.\" She spelled the name slowly so that Rennels' implant could record it. \"She'll know how to get me a Sword-class P/E command. You just need to convince her, I suspect.\"\n\nHe cocked his head carefully, beginning to see a way out of this. Maybe even a way he could use it to his advantage. \"What sort of leverage does she respond to?\"\n\n\"Rough sex and antique dildoes. But use your imagination, sir; you're very perceptive. No doubt other things will occur to you when you meet with her.\" She yawned. \"Here's the thing, though: no more equivocation. You'd better deliver, sir. Or I'm sure you'll be unhappy, somehow.\"\n\n\"Yes.\" Rennels hoped his relief did not show. He was at least fairly sure, again, that he wouldn't be killed today, though he only felt that way because he was making a determined effort to avoid looking at Juno's eyes. \"I understand, Commander Pfeiffer.\"",
        "\"Yeah.\" Pixy slapped a key on her desk, summoning Sergeant Plovsek back in: the interview was over. \"You can use the coding gun in the wardroom to compose a message asking to meet with Commander Thajk. Other than that, I don't want to see you outside the Great Cabin until I can get you onto a circuit ship for the Hub. Juliet IX, sector headquarters. That's where you're going.\" She looked out at the stars. \"While I stay out here. Doing Fleet's business.\"\n\nThe colonel nodded and rose. \"Thank you, Pixy. I appreciate your candor.\"\n\n\"Here's candor,\" Pfeiffer replied at once, \"get the fuck out of here. Now.\"\n\n* * *\n\nIt was the middle of the Desperado's arbitrary night, the transparent hull showing its endless sidereal backdrop: always changing, always the same. Pixy stirred, reaching out through the stiff blankets on her rack, smiling tiredly when she felt Jeyne's familiar nude skin warming her bed. She let her fingers trace down his spine, but he had the bridge watch in three hours and she knew she'd better let him sleep.\n\nA shape stirred in the corner of the room, near the galley. Pixy squinted sharply into the night, then snapped a hushed order to her light-lizard. \"Soft illumination, Fucknut,\" she whispered harshly, the glimmer swooping through her cabin and, at last, reflecting off the hooded eyes of Wrae Juno, sitting in one of the dining chairs. \"Juno. You okay?\"\n\n\"Not really.\" She sounded glum, unnaturally so, and Pixy sat up instinctively to throw back the blankets.\n\n\"Come. Now.\" Juno had been trying to slip into bed with Pixy and Jeyne for months now, and always she'd been turned aside. But Pixy saw darkness in those eyes tonight, and she knew the woman needed arms around her. \"Snap it up, sailor.\"\n\nThe slim woman darted across the deck and slid quietly into the rack, unwontedly silent as she wedged her body between Pixy's and Jeyne's. The man grumbled in his sleep, shifting, and with only a moment's hesitation Pixy wrapped Juno in her arms and drew her close. \"Off, Fucknut.\"\n\n\"Thank you, ma'am. I just... it's been a tough week or so.\"\n\n\"I know.\" She hadn't heard the real story of what had happened on B-Milistine, and probably never would. But she'd heard enough. \"This is why I stay aboard ships as much as possible. Nothing good happens when you get dirt on your boots. Fleet bends you over and gives it to you dry, no lube, but the Army?\" She brushed the younger woman's hair back off her forehead. \"All three holes. Two cocks each. Still no lube.\"\n\n\"Fuck that, ma'am.\" She paused in the night. \"He's not going to help you get a ship.\"\n\n\"Yeah. I know.\" Pixy, lying there with her arms aroud the trembling Juno, sighed. \"I'm ignoring it.\"\n\n\"You can't fucking trust anyone these days.\"\n\n\"Damn straight.\"\n\n* * *\n\nPixy will return, perhaps sooner than later. Her future is brighter than it might seem, and so is the irrepressible Juno's."
    ],
    "authorname": "Voboy",
    "tags": [
        "space war",
        "spacecraft",
        "spaceship",
        "military",
        "assassination",
        "mutant"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/dry-no-lube-ch-06-skulduggery"
}