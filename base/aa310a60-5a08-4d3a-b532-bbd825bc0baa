{
    "title": "Kiss Me Cate Pt. 05",
    "pages": [
        "I hope you enjoy reading this as much as I did writing it. \n\nI've had a long standing love of Irish lasses. Their eyes, complexion, smiles have always warmed my heart, and a few have broken it.\n\nConstructive criticism as always is welcome in the comments, others will be dealt with in the usual manner.\n\n*****\n\n\"You know, we should spend the night in tonight.\"\n\n\"Oh, why is that?\" I asked.\n\n\"Well between your parents for the weekend, and rushing to the airport and getting to Dublin on Monday, we're not going to have a lot of time to be, umm alone, for a while.\"\n\n\"I like the way you think. Not to worry on my parents behalf though, it's not as if they expect us to be in separate rooms with you bundled against impropriety.\" I said smiling.\n\n\"My parents won't be that bad. I'm not going to disagree with you that you staying elsewhere won't make them breathe a lot easier. Their biggest concern is where I'll be when I'm not at home.\"\n\n\"Even now? You're a world traveling professional business woman and college professor.\"\n\n\"It's a bit of a double-standard isn't it. No matter how old you are, you will always bet their little girl. If it gets to be too much I'll just stay with you and they'll have to deal with it.\" She reached over and took my hand from my lap and put it in hers gripping tightly. \"I may decide to do that anyway.\"\n\nWe did end up staying home, did our best to clean out the fridge, dinner was an odd blend but neither of us cared. We treated it like a picnic. The next day was laundry and packing day, we each put together our case for Ireland and put a small bag together for my folks house since we'd be staying overnight. We went out for a pizza early in the evening.\n\n\"You're going to get me fat making me eat big meals all the time.\"\n\n\"I have a sure fire exercise plan to keep you burning calories.\"\n\nHer eyes went wide and a grin spread across her face. \"If it's the plan I think, I'm sure I'm going to like it.\" She set down her beer. \"I've quizzed you endlessly about your family. What should I expect them to know about me?\"\n\n\"What do you mean? What have I told them about you?\" She nodded. I shrugged. \"They know you're a brunette.\" I said tapping my chin thoughtfully. She raised that right eyebrow a little higher. \"They know you're a professor at the university.\"\n\nShe leaned forward and put her head in her hands. \"They probably think I'm some sort of wanton hussy preying on their innocent children.\"\n\n\"I told them you were formerly a French prostitute named Chloe. Oof!\" I vowed to double check which shoes she was wearing next time I teased her like this. I thought rubbing my shin. I stopped laughing, and I could tell she wasn't mad at me because she still had a lop-sided grin on her face.\n\n\"They don't know you're Irish, like off the boat Irish.\" I said referring to her story when we met. \"They don't realize that a trip to your parents is a seven hour flight from here. Based on what I hope to be positive reviews, she'll probably want to haul my dad there for a vacation next year. The truth is I told them you were a doctoral student and doing some lecture work as an adjunct professor... and that you have the most devastatingly beautiful blue eyes, and an adorable yet slightly lop-sided smile, and that you're tall enough to at least get a try out for a basketball team.\" Her smile widened. \"We bumped into each other last summer and I spent countless hours crying myself to sleep because I didn't get your number at the time. As fate would have it,\" I couldn't help but smile at my choice of words, \"I found you again the first day of school, and that we've been tearing up the sheets like porn stars ever since.\" I swung my legs out from under the table quickly and felt the breeze of a near miss at the other shin. \"I mean that I told them that you and I were now living together.\" I smiled sweetly. She just rolled her eyes at me.\n\nShe was nervously twirling and shredding little bits of her napkin. \"Relax, they really are going to love you.\"\n\n\"What about your brother?\" \n\n\"Jimmy? If his girlfriend Pam is there he'll be a good boy. She keeps him on a tight leash. If she's not, then I'll protect you.\" I smiled. \"What's the matter Cate?\"\n\nShe sighed deeply. \"I don't know. I just hope they like me.\"\n\nI chuckled. \"I'm going to have to beat them away from you with a stick. Dad's going to like you because I love you and he'll recognize that it's mutual pretty quickly.\" I said ticking off the points with my fingers. \"My mother is going to be head over heels for you. You're a smart, successful, beautiful woman from a good background. What more could she want for her little boy.\"\n\n\"Despite being a retired French prostitute named Chloe with webbed feet.\" She responded tartly, completing the movie quote.\n\n\"Despite that. Jimmy is going to love you because he has eyes, and you are drop-dead gorgeous. He has ears so he's going to quickly realize that you're smarter than he is, by a long shot. He unfortunately also has a mouth which isn't always connected to his brain, so he'll ruin the prior good points by being an idiot. Pam is cool, I don't know her very well. I've been away from home a few years and they have their own place. She'll probably be happy to have another girl to dish gossip and run to the ladies room with. Mom likes her so I guess that's good.\"\n\nOur pizza arrived, and I asked for more napkins since I wasn't sure mine was going to survive.\n\n\"I think what's more nerve-racking is that it's the holidays so there's a lot of expectations.\"\n\nI reached across the table and slowly drew the remnants of the shredded napkin from her fingers. \"Eat, and relax. At least you've got it easy, my folks are mellow. You're the one with the giant cop for a father.\" I said exasperated. \"It's noteworthy he's a dad with three daughters, so he probably keeps the gun loaded and ready every time any of you even brought up a guys name.\"\n\n\"He would not.\" She said offended. \"He'd beat you to a pulp barehanded.\" She added with a grin. It was my turn to look wide-eyed. \"Relax, you'll be fine.\" She added with a wink. \n\nShe was right, I just got a quick taste of what she was walking into tomorrow. A common language doesn't wipe away cultural differences.\n\nWe drove out to my parents on Friday afternoon, the plan was to stay until Sunday evening, Christmas day, come home and hit the sheets, and get to the airport early Monday. We're connecting through New York City and have a three hour layover and will get to Dublin on Tuesday early in the morning.\n\nAfter haggling over the portion of Cate's wardrobe that wasn't packed I finally assured her that jeans would be fine for tonight. She fretted looking at what she hadn't packed and flipped hangers back and forth in the closet for a solid fifteen minutes. We had stopped and picked up wine on the way.\n\n\"Hi honey!\" Mom called from somewhere in the house as I announced us at the doorway. I set the half case on the entry way table with a clink. Mom came out of the kitchen and stopped looking up smiling at Cate. \"You weren't kidding she's tall. Hello Cate, I'm Jill.\" She said and opened her arms for a hug. I warned Cate that we're huggers so she wasn't surprised. She came at me right after.\n\n\"You have a lovely home Mrs. Butler.\"\n\n\"Jill, please.\" Mom looked at Cate a moment and cocked her head. \"Are you from Canada Cate? Your accent sounds a bit like someone I knew from Nova Scotia.\"\n\n\"A little further east than that actually. I'm from Ireland, Dublin to be exact.\"\n\n\"Oh how delightful! I hope you don't mind me riddling you with questions this weekend. It's always been one of my dream vacations to go to Ireland.\"\n\n\"Not at all.\" Cate said with a smile and glanced at me with a knowing look.\n\n\"Where did Dad get to?\"\n\n\"Oh I sent him off for last minute supplies, he's probably in a mile long line at the grocery store thinking of ways to get back at me for forgetting stuff this close to Christmas.\" She led us into the living room and waved to the chairs. \"Have a seat please. Cate, Dylan assures me that you won't mind sharing his room. I assure you we don't mind either. If you'd like it to yourself though I can lock him in my office overnight. There's a fold out couch in there.\"\n\nCate's cheeks pinked slightly. \"No I won't mind at all, though the thought of keeping him under lock and key for the night has its appeal too.\"\n\n\"We've been here less than ten minutes and you're already breeding conspiracies against me. Thanks Mom.\"\n\n\"I know you're teasing,\" I said to Cate, \"otherwise I'd make you walk to the airport on Monday.\"\n\n\"Oh my gosh!\" Mom slapped a hand over her mouth. \"You said you were going to Cate's parents, I didn't even stop to realize until just now that means you're going to Ireland!\" She started tapping her feet like an excited child. \"I envy you so much Dylan.\"\n\n\"Told you.\" I said with a laugh looking at Cate.\n\n\"Jimmy and Pam should be here close to dinner. He had to finish up some work since they're closing the office for the week. I guess he's got a lot of work coming up at the beginning of the month. I hope you don't mind, we're going to be very casual tonight, the less work the better. I'm saving myself for tomorrow and Sunday. We're just doing soup and sandwiches, and such.\"\n\n\"That's fine Mom, you know me, I'll eat anything if it isn't moving too fast.\"\n\n\"I wasn't talking to you.\" She waved me off.\n\n\"That sounds wonderful.\" Cate replied to her. \"We've been eating some strange meals the last few days in an effort to clean out the refrigerator before we leave.\"\n\n\"The strawberry and dill pickle omelettes you made were delicious.\"\n\nCate blushed furiously. \"Oh my God. It was a cheese omelette and there were sliced strawberries on the side, and you're the one that started eating pickles from the jar!\" She turned to Mom. \"I may not be a great cook but I know better than that!\"\n\nMom was in stitches. \"Don't worry Cate, I consider the source, and I rarely believe what he says anyway.\"\n\n\"Mom.\" I said gravely. \"Please tell me you made them this year.\"\n\n\"Of course I did. What would Christmas Eve be without them.\" She said grinning. \"Cate do you have any food allergies I should know about?\" Cate shook her head.\n\n\"Thank you Lord.\" I said looking upward and clasped my hands together.\n\n\"He's talking about the pork pies. Though you wouldn't know it from the boys and their fathers names, but they're not all Irish, they've got a little French Canadian in them too. It's an old family tradition to make them for Christmas Eve. The boys can't get enough of them, but the amount of work that goes into them means I keep it a Christmas tradition.\" Mom said with a laugh.\n\n\"Go get your things and get settled. Cate, come into the kitchen and we'll get some refreshments started.\"\n\nI did as I was bade and hauled in our bags and the box of gifts we'd brought. My bedroom had been freshly dusted and vacuumed, there looked to be new sheets on the bed. I hung up the garment bag and set the bags on the end of the bed. I peeked into the shared bath between Jimmy's room and mine and it was spotless and had a pile of fresh towels on the counter. Mom had been busy. I came down the stairs and turned towards the kitchen and stopped.\n\n\"I was clueless. I thought he meant the weather was hot.\" Cate was telling the story of our first meeting. I smiled and kept walking. Cate was sitting at the end of the counter on one of the stools with a wine glass in front of her. Mom was chopping vegetables and dropping them in the pot as she went.\n\n\"That's so funny and quite romantic.\"\n\n\"Dylan, you didn't tell me your mother was a law professor.\"\n\n\"Well I wouldn't call myself a professor,\" Mom cut in, \"I teach at the community college, criminal justice courses, you know for police officers and such. Thanks to all the crime TV shows, everybody wants to be a crime scene investigator these days and it's too bad because there isn't as much work as people think there is in that field, and it's hardly as glamorous as the shows make it out to be. Everybody has a video camera in their pocket these days, half the crime is caught on video so there's really little investigating necessary. Stick to what you're in, so much of the crime going on these days is done with a computer that it's easier to rob a bank with a laptop than it is with a gun.\"\n\n\"That's what we're trying to guard against.\" I said. \"Well that and making sure your soup recipe isn't hijacked from your tablet.\" I poured myself a glass of wine and joined them. \"Need a hand?\"\n\n\"Nope, I had to threaten Cate with a spoon to get her to sit down and relax.\"\n\n\"She did.\" Cate said grinning.\n\n\"Mom, you know there are laws against criminal threatening, shame on you.\" I laughed.\n\n\"If you'll notice, you're on the other side of the counter. You know well enough to keep clear when I'm cooking. See Cate, he is trainable, it may take some repeating but eventually it will sink in.\"\n\n\"Train me for what?\" I said clueless.\n\n\"There's nothing I need to train him for, he's a wonderful gentleman. I guess I have you to thank for that.\"\n\n\"I don't know about that.\" Mom laughed. \"I guess miracles do happen.\"\n\n\"Hey! Give me some credit!\"\n\n\"Go help your father with the bags.\"\n\n\"He's not even here...\" A car door slammed outside the kitchen door. Mom just gave me a look. \"I still don't know how you do that.\" She just grinned and pointed at the door with the spoon she was stirring the pot with. Cate covered her mouth, the grin completely visible.\n\n\"Smart boy, unfortunately he doesn't realize there are a lot of other smart people in the world. We use one of those location apps on our phones, my phone vibrated when he pulled into the driveway.\" She said to Cate who began laughing. \"Don't give away my secret, he thinks I'm some sort of psychic.\"\n\n\"No I missed the game this week. Something came up.\" I said as I closed the door behind me. Dad put his burden on the counter.\n\n\"You must be Cate! I'm Brian this rascals dad.\" He said walking over to where she now stood. She got a hug and buss on the cheek.\n\n\"It's nice to finally meet the man responsible for this rake's good looks and charm.\"\n\nDad busted out laughing. \"That's right, he gets all his best traits from me, the bad ones he gets from his mother. Oww!\" Mom pinched him in the side.\n\n\"You, keep stirring that so it doesn't burn while I put this away and harass your father about what he forgot.\" She said to me. A few minutes of small talk went by. \"Add that garlic sweety, it should be time.\" She said putting more into the already full refrigerator. \"Spread that little container of spices around now. Once they're blended in pour that pitcher of stock in and the beans.\" She was putting up a few boxes in a cupboard. \"Put the lid on and turn it down to low.\"\n\n\"See, I'm a master chef.\" I said to Cate.\n\n\"Well it's no strawberry, dill pickle omelette, but I'm sure it's going to be wonderful.\" I caught Dad's expression out of the corner of my eye and laughed.\n\n\"Don't look at me, that was her concoction.\"\n\n\"Don't listen to them Cate, they'll go on like this for an hour.\" Mom said.\n\n\"Reminds me of a peanut butter, olive spread I made once, it was delicious with a little sauerkraut on it.\" Dad said.\n\n\"We'd better stop before none of us have an appetite. There's too much food in here.\" Mom ordered Cate to wash up, she had work for her now. Cate jumped like she was used to the bark of a drill sergeant. \n\n\"See, she knows how to move. I'm guessing you're from a large family Cate?\"\n\n\"Three girls, and my mother was no different. When she said jump, she didn't expect us to even ask how high, we'd better already be in the air.\" She laughed.\n\n\"It's the best way to keep an unruly mob in line.\" Mom said handing her a couple platters with instructions on how she wanted everything laid out. Cate began building plates with meats and cheeses. Mom kept the bustle going as a buffet formed on the kitchen island. \"Give that a few stirs Dylan so it doesn't stick.\"\n\nThe phone rang and Mom grabbed it and stepped around the doorway to cut down the noise from the kitchen. \"Oh no, that's probably for the best then. We'll see you in the morning. No, no I sent your father out for everything I needed. Yes, he's fine, sitting there with a beer and a silly grin on his face.\" She paused. \"Yes she's here, no Dylan wasn't lying that he had a girlfriend.\" She sighed. \"Yes, he was being honest, she's smart, gorgeous, funny and as tall as a runway model. Tell Pam about her and she won't let you come. Yes, he is a lucky guy.\" I looked at Cate who was still laying out plates, the tell-tale rosy cheeks and the pursed lips from trying to withhold a smile, told me that she'd heard.\n\nMom came back around the corner and hung up the phone after signing off. \"That was your brother. He's still stuck at work and the weather has turned bad over near them so they're going to come tomorrow morning. We can eat when you guys ready.\" Mom finished off the soup a few additions. We proceeded to make our way around the island building plates and sitting at the table. She brought the soup over and ladled out bowls for everyone. Dad opened one of the bottles of wine I'd brought along.\n\n\"This is more food than I've seen since you made me that huge breakfast last month Dylan.\" Cate said laughing and related the story of her being sick with the flu. \"He showed up the next day like he'd robbed a butcher's shop. He'd looked up Irish breakfasts online and brought everything he saw. \"I guess he thought the only way to keep me in bed was to make sure I couldn't stand up from eating so much.\"\n\n\"It worked too.\" I said grinning. \"Well that and the chicken soup.\"\n\nDad had inquired into how she came to be here in the U.S. Cate and I had talked before hand and we weren't going into details about how she lost her job there and what had happened in the past few weeks at school.\n\n\"Luckily the head-hunter that got me into the job had negotiated a contracted exit and I got paid an additional three months salary for their breach of contract. I guess they've been through things like this before even though I hadn't. So that gave me a little nest egg to look around. I didn't want to go back to London at that point. I felt that I wasn't going to let it beat me and I talked to them and they helped me get my teaching certification here. I'd done some student lecturing at my university in Dublin. They helped with the American equivalents. I took a few workshops over the summer and got certified here in New York.\"\n\nMy folks were smart people, and if they knew that I was originally one of Cate's students, and we were now seeing one another, things had happened. They were also considerate enough not to inquire about it. They knew we'd met before school started and that it was an awkward situation we ended up in and worked out on our own. Beyond stuffed we helped clean up and Mom presented a small lemon cake she'd made earlier that day.\n\n\"Oh my that looks delicious but I'm so stuffed.\"\n\n\"We can wait a bit before cutting into it.\" Mom said. \"Would you like coffee?\"\n\nWe both opted to stick with the wine. We migrated to the living room with the fireplace and huge Christmas tree lit with twinkling lights. \"Looks like Santa has already been here.\" Dad said looking at the addition of gifts under the tree.\n\nCate goggled at the site of a stocking hanging from the mantle with her name on it. \"Where did that come from?\" She asked smiling. I just shrugged. Mom smiled knowing full well it wasn't there before I went out to the car and brought our things in.\n\n\"I guess Father Christmas knew you were going to be here.\" I winked.\n\n\"You'll have to give him this for me then.\" She said giving me a kiss on the cheek.\n\n\"That's where I should have put the mistletoe.\" Dad said grinning.\n\n\"Join in, I highly recommend it.\" Cate said. Dad went to step around Mom and she grabbed him by the arm.",
        "\"I don't believe that's what she meant, besides she's obviously taken.\" We all laughed and he bent down and kissed Mom on the cheek. Dad poked up a small fire as we sat and talked. Mom finally getting down to the business of drilling Cate for information about Ireland.\n\n\"Away from the cities, yes it's just like it's portrayed, thatched roof homes and sheep or cattle blocking the roads.\" She said smiling. \"I imagine it's similar out west here. Though the cities are modern. Dublin is home to a few of the big tech giants. So my field of study is definitely a benefit for that. Having my teaching certification is a bonus. It will give me something to fall back on since technology tends to rise and ebb a lot depending on the economy.\"\n\n\"What are your plans for the future?\" Dad asked. Cate smiled nervously. It was a common question of students, but in our case it was a foggy apparition in front of us. Cate and I had touched on the subject a few times but always backed away, unsure of what our responses would mean to each other.\n\n\"I'm not exactly sure. I've worked and studied in a lot of places, Barcelona, Paris, Munich, London, New York, but I haven't found the job that holds me to any of them yet. I've only worked in three fields though so it's not as if I've run the gamut of possibilities yet either.\"\n\n\"You haven't been to Silicon Valley yet, we could try that after graduation.\" I said grinning.\n\n\"With the fog, rain and mild winters it would be a lot like home.\" Mom added.\n\nI could feel Cate relax slightly. My parents question wasn't directed the way she had assumed. \"What are your intentions for our wealthy young boy?\" Wasn't the thought on their minds.\n\n\"I'd love to visit there some day.\" She squeezed my hand, a clear warning that if tickets to San Francisco miraculously appeared there would be consequences. \"The wine country too.\"\n\n\"Well we have a bit of that here too. All you need to do is poke this one on a nice weekend to get you out of town. I don't know about you two but the cake has been in the back of my mind since it came out of the oven this afternoon. I'm going to slice into it.\"\n\n\"I can give you a hand, that's a lot of plates to carry.\" Cate stood and went with her into the kitchen.\n\n\"Wow, you hit the girlfriend lottery.\" Dad said softly. \"She's terrific.\" I smiled.\n\n\"I certainly did.\" I said my gaze lingering on the doorway. \"Take it easy on her though. Yes she knows, and no she doesn't care.\" Dad's eyebrows went up and a smile spread across his face.\n\n\"I didn't doubt. A first year assistant professor doesn't make enough for two airline tickets much less one.\"\n\n\"Yes, and she's already threatened me with bodily harm over it.\"\n\n\"I saw the warning grip when she said she'd like to see San Francisco.\"\n\n\"No matter how old we get, nothing gets by our parents.\" I laughed.\n\n\"Cate,\" Jill started softly, \"I want you to know that I'm aware of what Dylan did for you. To give you a little background, once he sold his software, I insisted he create a will and appoint a power of attorney. He said he wanted me to do it, I wasn't keen on the idea at the time, but until such time as he selects someone else, I know about his finances. I have yet to question his judgement, and that includes what he did recently. I want you to know that it's confidential, only he and I, and his lawyer, who is unrelated to me professionally, know the requirements of the endowment he gave. Even his father doesn't know about it.\"\n\nCate stared at her open mouthed for a moment, then began breathing again with a heavy sigh. \"If I'd known what he was up to I wouldn't have let him do it. I had no idea at the time, and then it was done. I'm not sure that I'm not still angry with him over it.\"\n\n\"I know, and that's why I'm happy to see that his judgement was sound.\" She paused. \"The other thing I hope you understand is that there is no shame in what he did for you. He did it out of love, that's as clear as the nose on your face, freckles and all.\" She added smiling. \"He may only be twenty-three but he's a wise old soul already.\"\n\n\"Jill, I want you to know that I'm not in it for anything but him.\" She held up a hand before Jill could respond. \"We had a long talk last week and I told him it's not fair to me to put me in situations like that. I'm making my way, slowly, and it's confining to have all my decisions made for me like I'm a pawn on a chessboard. We talked about trust and honesty and communication. It felt very liberating to sit on his chest, quite literally, and telling him how I felt. I know I can never repay what he's done for me, and I truly am grateful, but I stated it as plain as this freckled nose on my face that he's not to do anything for me again without discussing it with me first.\" Cate smiled, color rising in her cheeks. \"I warned him if he does anything more than pick up a coffee and danish for me without my knowledge it won't be me that feels emasculated, it will be him.\"\n\n\"Good. I like you Cate. You're the kind of girl to keep him in line and make him think before he acts. It would be too easy for him to allow the power of it to overtake him and think he can do anything without consequence because he can buy his way out of it. We'd better get the cake in there before they start to wonder what conspiracies we're coming up with.\"\n\nOnly scattered crumbs remained as evidence that the cake was ever present. The wine bottle was empty and things had quieted to small talk. Cate telling stories of her home life, and Christmases from her childhood. Mom regaling her with stories of me that I felt necessary to correct at every turn to improve my reputation.\n\nMom stifled a yawn, and said she was done in, and was ready for bed. We wished them a goodnight and Dad gave me the run down on banking the fire and turning off the lights on the tree before following her upstairs. A few minutes of silence past, Cate took a deep breath and blew it out slowly the tension leaving her as she did.\n\nI laughed. \"It wasn't that bad was it?\"\n\nShe laughed too. \"Not at all, that doesn't mean that it's not a bit frazzling to be on display and the focus of all the attention for an evening.\" She rested her head on my shoulder and I wrapped my arm around her and kissed her on the top of the head. \n\n\"Well it's done, now it's my turn to stew about it for the next few days.\" That made her laugh again. \n\n\"Then there's your brother tomorrow.\"\n\n\"You'll do fine, Jimmy will be on his best behavior with Pam here to keep an eye on him.\" I said laughing. \"Otherwise I'd only allow him a handshake or he'd try to steal you away from me.\"\n\n\"I didn't stop to think of those.\" She said lifting her chin towards the stockings. \"Think we might have time to run out and get a few little things?\"\n\n\"We can see what we can find I'm sure, but we'd best be out and back early to be here when they arrive.\" I was quiet for a moment and smiled. \"I remember, oh I think I might have been ten or eleven and there was a shiny new harmonica in my stocking. I drove everybody crazy with it for weeks. It disappeared sometime that winter, and I accused Jimmy of stealing it. Come to find out, years later, my Dad hid the thing. He said that buying it was the worst idea that he'd ever had.\"\n\nCate was shaking with laughter. \"Not a music aficionado then?\"\n\n\"He was, that's why he made it disappear.\" I laughed.\n\n\"Didn't learn any others?\"\n\n\"No, I dabbled with a friends guitar a bit but never really got bitten by the bug.\"\n\n\"Hmm.\"\n\n\"Hmm? Are you a prodigy and I didn't know?\"\n\n\"I wouldn't say prodigy by any stretch. I can play the piano.\"\n\n\"More than just chopsticks?\"\n\n\"Well I'm sure I'm pretty rusty, it's been a while. Mum and Da have a piano, I'll prove myself soon enough.\"\n\n\"I thought it was Shannon was the musician. Did your family have its own band?\"\n\n\"She's the one that pursued it, we all had some music. It's in the blood you know. We've a great tradition, singing, dancing and all.\" I could see the grin on her face.\n\n\"I can't wait.\"\n\nIt was Cate's turn for a jaw-cracking yawn, she barely covered it in time. I stood and banked the fire and closed the little glass doors on the fireplace, turned off the Christmas lights and reached a hand out to Cate, pulling her up off the sofa into my arms. \"I think it's time to put you to bed.\"\n\n\"I like the sound of that.\" She kissed me. \"I'm beat, I could probably sleep until noon.\" She feigned passing out and her head hit my shoulder, with a phony little snore.\n\n\"Don't you worry, I'm sure there will be enough going on that you won't make it past eight.\" I guided Cate, by the dying firelight, to the stairs and led her up to my room.\n\n\"I sort of expected more decoration, posters, banners that sort of thing.\" She said holding a picture of me in a hockey uniform from when I was eleven. \"You said you weren't into sports.\"\n\n\"I wasn't shortly after that. I ended up getting injured the next year, I was in a cast for months. I ended up swimming to build up my strength and balance again. I liked swimming better anyway. I took a lot less beatings.\" I said with a laugh.\n\n\"You were a handsome boy.\" She said putting the picture back on the shelf. She looked over the few books and other things, picking up a baseball and setting it back on its stand.\n\n\"I still am.\" I said wrapping my arms around her and kissing her behind the ear.\n\n\"I'm well aware of that.\" She spun around and kissed me back. She scrunched up her nose a bit. \"You don't mind do you? I am really tired.\"\n\n\"Want me to run you a bath?\"\n\n\"I'd probably slip under the surface and drown.\" She responded with a smile. \"I'll just grab a quick shower.\" She stepped out of her shoes and began undressing.\n\n\"If you want some sleep I'd best not witness this. I'm not sure I can trust myself.\" I said covering my eyes.\n\n\"Okay, but you'll miss the show.\" I spread my fingers just in time to see her unsnap her bra and take a deep breath. She rubbed the marks and stood, reaching into her bag and pulling out a smaller bag with her toiletries and her flannel pajama top. I smiled, she had stopped wearing the bottoms completely saying she stayed plenty warm with me to snuggle up to now. She slid her panties down and I let my hands drop to my sides, she put her hand on my shoulder to steady herself as she lifted them up with her toe. She looked me in the eye with a smile and tossed them over her shoulder onto the bed.\n\nI growled softly. \"If you wanted to sleep unmolested, you're going about it the wrong way Miss Murray.\" I took her in my arms and kissed her. She reached between us and unbuttoned my shirt pulling it free of my jeans with a tug. Things got heated quickly and we fell on the bed. We didn't waste time, I entered her swiftly as she attacked me with her mouth. We were both very aware of each sound and muffled them in each others kiss. I finished arching myself forward into her knowing I'd taken no care of her pleasure and greedily taken my own from her. I gasped, catching my breath. \"I'm so sorry.\"\n\n\"For what?\" She said with a breathy laugh.\n\n\"Well I just, I went hell bent for leather without, well you know, holding off, and well you didn't want to...\" I said guilt dripping from my voice. I rested my head in the hollow of her neck.\n\n\"Yes, you've taken me in manly fashion, but now since I'm not sure I'll be able to stand on my own in the shower, you'll have to come and finish what you started.\" She leaned forward and grazed my ear with her teeth.\n\n\"I like the way you think.\"\n\n\"I had a feeling you might.\" \n\nOur shower lasted longer than necessary as I did my best to completely undo Cate. She was barely able to hold her toothbrush after I was done. We climbed into bed and I turned out the light. Cate snuggled against me like a spoon.\n\n\"You know I was just thinking. This is the first time I've ever had a naked girl in my childhood bed.\"\n\nCate snorted, turned her face into the pillow and began laughing uncontrollably. She finally got herself back together and noted that not only did I have one, I did so with my parents blessing, and they were across the hall at the time. She turned her head toward me.\n\n\"Give me a kiss.\" I did as told. \"Now go to sleep.\" She demanded.\n\n\"I thought that the prince always kissed the princess awake in fairy tales.\"\n\n\"You can gladly do that in the morning.\"\n\nWe made a hasty breakfast with my parents in the morning promising we'd be back well before lunch so as to not miss Jimmy and Pam's arrival. We found ourselves bundled up against the cold and walking amongst the little shops in town. They were doing a brisk business with the last minute shoppers, it being Christmas Eve I was not surprised to see a lot more men than women about. As it would have it, this was not just an American custom, but a human one Cate informed me.\n\n\"The day jewelry stores make a killing.\" I said, we both laughed at that. We stood in front of one now, a small boutique with handmade jewelry laid out in a window display.\n\n\"Have you met Pam? Do you know if she's got pierced ears?\"\n\nI shrugged. \"I didn't notice, but it's hardly uncommon.\"\n\n\"Well it's just that I didn't consider them and figured something like that might work.\" She said pointing at a display of earrings on a velvet stand.\n\n\"What's she look like? Give me a mental picture.\" She said. I did better than that and pulled out my phone and brought up the social media app and showed her. \"Well that answers that.\" She said smiling and we went into the shop. We found a hip flask with the local hockey teams logo for Jimmy. Something I was sure would see some action before the end of the season. Cate found a candy shop, I was beginning to think she had some other-worldly sense as to how to find them, and we bought a big box of chocolates to share later. \n\nWe made it home just after they arrived, greetings completed and people settled down and conversations began. Somehow we got separated and Cate was hauled off to chat with Mom and Pam, who was enamored with Cate already. I'm sure a lot of their talk would revolve around Cate's travels. At first Dad and Jimmy talked shop, the construction business, Jimmy eventually turned to me and asked how I was doing with school.\n\n\"Good, school is fine, I'm working a new program now too, other than that, same old same old.\"\n\nHe looked over my shoulder to where the women had gone. \"Uh huh. Just another day in the neighborhood. How did you pull that off?\"\n\n\"Pull what off?\" I asked innocently. He gave me a look of long suffering and I laughed. \"It was fate Jimmy me boy. I happened to be in the right place at the right time, twice. She couldn't help herself when I turned on my boyish charm.\"\n\n\"Dad, that woman is a cradle-robber. Did you call the cops?\" Jimmy said grinning and mussed my hair. \"She's a beauty Dylan, you're a lucky guy.\"\n\n\"She continually reminds me of that.\" We all laughed. The noise level rose as the ladies came back into the kitchen. Mom started tossing out orders at Jimmy and I to help her out. Cate and Pam both offered to help.\n\n\"Nope, I didn't raise these two to have a girl waiting on them, quite the opposite actually.\" Jimmy and I looked at each other and rolled our eyes eliciting giggles from the ladies. Dad beat feet out of the kitchen saying something about refilling the wood box for tonight. \n\nI pulled my phone out of my pocket and dropped it on the speaker dock on the counter. \"Jimmy, do you feel it? It's in the air.\" Jimmy grinned and nodded. \"Mom? You feel it don't you?\" Mom caught on fast and grinned and nodded. I tapped a few keys and Christmas songs started playing. I adjusted the volume and Jimmy started singing, and I joined in. We were singing like a bad karaoke act. Cate was grinning ear to ear and joined in on the next chorus. Jimmy and I started puttering around the kitchen and saw what Mom had planned, we put the leftover soup back on the back burner, and I started cutting vegetables for a salad as the next song began. Pam stopped laughing long enough to grab her phone and start recording us. Cate came around the counter and started piling the salad ingredients into the bowl.\n\n\"Dude, is this U2?\" Jimmy asked. \"I didn't realize they did a Christmas song.\"\n\nI smiled and leaned over to kiss Cate, she paused long enough for a smooch and kept singing. When \"I saw mommy kissing Santa Claus\" came up in the playlist Dad walked in wearing a Christmas hat.\n\n\"This is so awesome!\" Pam squealed as she backed up to see the song played out. Mom and Dad finally broke apart and he started setting the table. The playlist ended and we were all laughing out of breath.\n\n\"That was fabulous! Do you do this all the time?\" Cate asked me looking around at all the smile.\n\n\"I wish we did.\" I said smiling. Lunch was a lively and animated event.\n\n\"Eat up, dinner is a late affair on Christmas Eve around here.\" I said to Cate, popping a tomato into my mouth.\n\nShe asked softly. \"Do you go to midnight services?\"\n\n\"We can, I haven't been in years. I'd love to take you.\" I said and kissed her nose. We spent the afternoon visiting, moving around the house. We snuck off to wrap the last few items and brought them down stuffing the last of the small items in the stockings while nobody was watching. Jimmy and Pam left for a short while to visit with friends while they were here, promising to be home for dinner. \n\nCate and I went for a walk the light waning even though it was only the middle of the afternoon.\n\n\"Everything is so spread out here. I keep forgetting how big it is.\" She said. \"It must have been hard when you were younger, no neighborhood friends, chums to climb trees with and such.\"\n\n\"There were a few, things are pretty open out here but you'd be surprised how much ground a kid can cover on a bike. We'd come home scratched and bruised and covered in bug bites. We found stuff to keep us occupied. Funny I always thought it would be the end of the world to live in the city, all that concrete, buildings everywhere and no open areas.\"\n\n\"You'll like Dublin then. There are a lot of parks, though this time of the year there won't be much to see.\"\n\n\"Well we'll have to go back in the spring or summer then.\"\n\nShe turned a gimlet eye on me and kept walking. \"I've still got a doctoral thesis to write. Don't forget that.\"\n\n\"I know, but there's going to be time, unless you take summer classes.\" I said shuddering, and not from the cold.\n\nShe laughed. \"What do you in the summer then?\"\n\n\"Well I did intern at a software firm in the city this past summer, it was amazingly boring.\"\n\n\"Not a lot of glamour in thousands of lines of code?\"\n\n\"None at all. I should have started a torrid romance with a beautiful woman.\" I said wistfully. \"Much sooner.\"\n\nCate laughed loudly at that. \"Torrid, hmm? I'll have to find something with a bodice so you can rip it open. Is that it?\"\n\n\"Absolutely! I'm not sure if I should be some kilted savage or a pirate though. Do you have any preference?\"\n\nLaughter still bubbled up. \"Oh, kilted savage of course.\" She leaned in close and with a loud, conspiratorial whisper. \"You know what they wear under a kilt don't you?\"\n\nI gasped in horror. \"Don't they get cold?!\"\n\n\"Takes balls of iron to wear a kilt in weather like this.\" She said shrugging her shoulders against the cold.\n\n\"Imagine the noise they'd make as they clanged together. It would sound like someone banging a horseshoe on an anvil.\" We turned the corner giggling and worked our way back to the house. Hot cocoa and cookies warmed us up as we sat at the kitchen counter.\n\n\"I don't know about you, but with a late night last night, and an expected one tonight, I was thinking a nap might be in order.\"\n\nI looked side long at Cate, a smile spreading across my lips. She rolled her eyes at me. \"I mean to actually sleep.\" She added with a whisper.\n\n\"I know,\" I whispered, \"the look was for the 'late night last night' statement. As if you were the only one up late.\" I chuckled. I cleaned up and led her upstairs to the bedroom.",
        "\"Are you staying?\" She asked, laying down wearing one of my tee shirts.\n\n\"I will until you fall asleep.\" I kicked off my shoes and slid in beside her. She wiggled into place against me and sighed.\n\n\"Do only let me sleep a few hours. Don't make everyone wait for me if I've slipped off into a coma.\" She said with a smile. I leaned down and kissed her behind the ear.\n\n\"I'll wake you in time.\" The tension left her body as she drifted off. She had gripped my arm and tucked my hand up under her chin leaving me unable to move without likely waking her so I decided to stay and slipped off as well.\n\nThere was a soft knock on the bedroom door. I roused first and muzzily noticed I'd fallen asleep with the lamp on, and all of my clothes on too. I pulled up the comforter to keep Cate warm and padded to the door. Dad was there.\n\nHe whispered. \"Your mother was thinking of getting started around seven or so. It's half past six now. I figured you'd like to be there.\" He added with a smile.\n\n\"We would.\" I smiled. \"I didn't plan on a nap but the idea grew on me quickly.\" I looked over my shoulder at the gentle rise of the comforter. \"We'll be down in a bit. Just going to kick the old lady out of bed and splash a little water in my face.\" He grinned and nodded.\n\n\"Old lady huh?\" She said as soon as the door closed.\n\n\"Well looks who's awake from her afternoon nap.\" I said chuckling. I went over to her and gave her a lingering kiss.\n\n\"Don't get your head to close to the sink, it might get dunked.\" She said kissing me again before heaving herself upright. She rubbed her hands up and down her face trying to wake herself up. \"I must look a fright.\"\n\n\"Well you do look like something leftover from Halloween. It could just be the hair though.\" I said smiling.\n\n\"Dunked for sure.\" She said squinting at me. She climbed out of bed and padded to the bathroom and closed the door. We were downstairs in time. Jim and Pam camped on the love seat, Cate and I on the sofa.\n\n\"Tradition dictates, here at least, that we dismantle the stockings first, and then we each open a single gift tonight.\" Dad said, mostly for Cate's benefit. \"This was a small fail safe measure to make sure we got to sleep at least until there was some daylight on Christmas mornings.\" He added with a laugh. \"It gave those two something to play with in the morning while they waited until we got up, not that they didn't make enough noise to wake us up earlier. Truth is we sort of enjoyed making them wait a little longer.\"\n\n\"I knew it!\" Jimmy cried out. \"You're a mean one Dad.\"\n\nHe handed out the stockings to their respective owners, I looked over at Cate whose eyes went wide when she felt that it was full and heavy. Things started getting unwrapped and paper started piling up around our feet. We laughed, and exclaimed as the items were revealed. Jimmy shook his flask and pouted when he found it was empty.\n\nPam made a sudden gasping noise and we all looked at her holding a small velvet box. Jimmy smiled and opened it and proceeded to pop 'the question' on her. The shock on her face was apparent. I was guessing at this point that it was an unexpected surprise.\n\n\"Are you serious?\" She whispered. In an effort to prove it he slid out of his chair and took a knee in front of her.\n\n\"Very serious. Will you marry me Pam?\" There was a charged silence and she exploded out of her chair nearly tackling him to the floor.\n\n\"I think that's a yes.\" I said side-long to Cate. \"But don't quote me on that, wait until she comes up for air to be sure.\" We all started laughing.\n\n\"When you two are through down there, we're a bit curious as to the answer too.\" Dad said.\n\nPam raised her head and yelled, \"Yes!\" before pinning Jimmy to the floor with kisses again.\n\n\"Well good, I'll get the champagne, you get a bucket of ice water to throw on them, will you dear?\" He said to Mom as they went into the kitchen together.\n\nCate leaned into me and smiled. \"Have you hit bottom yet?\" I said nodding at her stocking. She looked at me with her squinty shrewdness and reached into the bottom. A look of absolute horror came across her face as she slowly pulled a small velvet box, just like Pam's, out of the stocking.\n\n\"Tell me you didn't.\" She whispered harshly.\n\n\"Didn't what?\" I asked innocently. She looked at the box as if it were a bomb about to go off. Pam and Jimmy recovered enough to realize other people were still in the room. Pam looked up and gasped.\n\n\"Oh my God!\" She said as she spotted the box.\n\nCate looked at me and at the box, the fear palpable. Jimmy and Pam looked on expectantly. Cate finally reached for the lid, tipping it back to reveal a pair of pearl and sapphire earrings. She sighed, a smile spreading across her face. Pam looked crestfallen. It appears she was hoping for a double-header. Jimmy was chuckling under his breath at some point he got an elbow to the stomach to shut him up. There was no way I'd do something like that to ruin their special day. I also wouldn't put Cate on the spot like that. If and I hoped when the day came she would see it coming far more clearly than that.\n\n\"They're beautiful.\" She said and turned to me and gave me a big kiss. She leaned in closer to my ear. \"You don't realize how close to death you just were.\" I smiled wider.\n\n\"I'm smarter than I look. Though it was fun to ask the jeweler to pack them in a smaller box to see your reaction.\"\n\n\"You scoundrel!\" She whispered harshly into my ear before kissing it.\n\nChampagne was poured and we all wished them a wonderful life together. Eventually Dad started handing out a single gift of his choosing to each person. \"That's it until morning, so you'll have to keep yourselves occupied with them until tomorrow morning.\"\n\nWe all giggled at that. As the newest arrival, Cate was asked to go first. She carefully unwrapped the box and opened it to find a navy cashmere sweater from my folks. She thanked them profusely holding it up against her and stroking the fabric.\n\n\"Pam you're up. I'm not sure you're going to beat the last thing you opened, but we'll see.\"\n\nWe made the rounds, when it got to me, I opened the box after shredding the familiar paper and tag stating it was from Cate. Jimmy had said that maybe I shouldn't open that one in public in case it was lingerie or something.\n\n\"I certainly hope I brought the right box or he's going to look awfully funny trying on that negligee for everyone to see.\" Cate added to uproarious laughter. In the box was a very fine cut dress shirt with the sleeve turned over the front showing the cuff. Inside the neck of the shirt was a smaller velvet box which caused me to look over at Cate sharply.\n\n\"How's that saying go? Turnabout is fair play?\" She looked around innocently not meeting my gaze. I pantomimed the horrified look as I reached for the box carefully.\n\n\"Tell me you didn't!\" I said dramatically.\n\n\"Didn't what?\" She asked smiling. Jimmy and Pam were both laughing hysterically, the folks who hadn't witnessed the exchange were looking on with nervous smiles. I reached carefully for the lid and flipped it back, wincing and shutting both eyes as if defusing a bomb, and waiting for it to go off. Inside were a pair of gold and onyx cufflinks with the initial B engraved on them. I was dumbstruck.\n\n\"They're beautiful.\" I said, all joking aside.\n\n\"Merry Christmas.\" She said and gave me a kiss. \"You can wear it on our first date.\"\n\nPam's mouth dropped open. \"I thought you two were living together?\"\n\nCate looked abashed. \"Well we're not doing things in a traditional way. We're sort of playing it as it happens.\" I grinned and kissed Cate deeply.\n\n\"Well we've been out, the usual pizza and beers. There was that one time you were completely confused and asked me what a burrito was.\" I said, and Cate nodded.\n\n\"Pub food and action flick night.\" She said smiling, bringing up our last night in Geneva.\n\n\"Wine tasting along the lake.\" I said nodding. Everyone had started smiling realizing we hadn't just slipped into bed on our first meeting.\n\n\"Ooh did you bring your parents that ice wine we picked up for them?\"\n\n\"Nice, you spoiled the surprise.\" I said rolling my eyes. \"It's under the tree.\" \n\nCate grinned nervously. \"Sorry.\"\n\nMom announced that the pies should be warmed through in a few minutes. So we started gathering around the kitchen island, food was laid out and Mom set out the pies. The smell was heavenly, Jimmy and I made groaning noises.\n\n\"What are they again?\" Cate whispered. \"You two seem awfully excited.\"\n\n\"Pork pies, Mom has some long handed down recipe from her family and she only makes them for Christmas, mostly because there is absolutely nothing healthy about them. They are so good though I, well we, could eat them every week.\"\n\n\"The family secrets.\" She said rubbing her hands like a criminal.\n\nI laughed. \"I can make them, they're just not the same as when she does.\"\n\n\"More love, less salt next time.\" Mom said patting me on the arm.\n\n\"Teaspoons, tablespoons, who keeps track of these things?\" I said laughing. We cut into them and I put the first slice on a plate handing it to Cate. \"You're about to be blown away.\"\n\n\"That is delicious!\"\n\n\"I don't believe in recipe conspiracies Cate, if you'd like a copy of the recipe I can make you one. Food and traditions are to be shared, not coveted like a squirrel burying nuts.\" Mom said.\n\n\"I would, I'd like to share it with my mother. She'd love it too.\"\n\n\"It's not the healthiest of foods, it's farm country fare, as Dylan said I try to limit making it to once a year. I think it makes it a special treat that way too.\"\n\nWe excused ourselves from the table and went and changed for the midnight mass. I borrowed a jacket and tie from Dad since I didn't want to look like a drudge next to a princess. I had to smile at Cate's foresight to have already washed and ironed my new shirt. I shot the cuffs and affixed the cufflinks fumbling a bit. Dad walked into their bedroom and nodded with a smile. \"Here.\" He pulled open the drawer and pulled a pocket square to match the tie and tucked it in for me. \"You're lucky Dylan, she is one special lady.\"\n\n\"Don't I know it. Sometimes I look at her and I feel like there's nobody else on earth, like everybody else melts away.\" He just gave me a little smile and nodded.\n\n\"I know we haven't really been church goers since you were small, but don't let that make you wonder. We still believe, your mother and I, we just had a few disagreements with the local clergy at the time and decided that we'd teach you two our beliefs, our way. Keep an open mind, for her sake, and yours.\"\n\n\"Cate's said she's the same way. She doesn't like the politics, which is probably why this is the first trip we've made to church since we started seeing each other.\"\n\n\"I like her even more then. She's a smart one.\" He said snugging the tie a bit and centering it. We went back downstairs and he insisted I use his overcoat as well rather than my ski parka over a suit coat. We both turned towards the stairs where Cate descended slowly, her head tilted slightly as she put in her earring. I stood there dumbstruck, she was wearing a dress I hadn't seen before, light gray with a large plaid print which stopped above her knees, she wore dark gray tights and black heels. She looked up at me before she got to the bottom step and stopped. She had pulled her hair back into a pony tail and her face glowed in the dim lighting. Our gaze locked for what seemed like forever. She slowly closed her eyes, her long lashes descending to her cheeks and a little smile played across her lips\n\n\"Wow.\" Somebody whispered behind me. I couldn't agree more. She got to the bottom step and looked up at me again.\n\n\"Are you ready?\" I still hadn't moved and felt a slight nudge in the shoulder which caused a fit of giggles among the observers.\n\n\"Yea, uh yes!\" I said enthusiastically.\n\n\"I remember that look.\" I heard Mom whisper behind me.\n\n\"You should, you saw it often enough.\" Dad replied.\n\nCate turned towards the coat closet and I jumped realizing I still hadn't moved. I got there as she did and took her coat and held it out for her to put on. She turned and wrapped it and began on the buttons.\n\n\"Are you alright?\" She said softly.\n\n\"You are so beautiful.\" I said as softly.\n\n\"Thank you.\" She said leaning forward and kissing me on the cheek. She looked at me for a moment. I had stopped again just to take her in, she had little make up, her lips were slightly shiny but the same color. Her eyes seemed brighter but I wasn't able to tell why, I just floated gently in their warmth. She leaned forward. \"You may want a coat, it's cold outside.\" A chuckle floated from the onlookers who I'd completely forgotten about. I looked over and blushed furiously and reached for the coat dad had pulled out for me.\n\n\"You may want to drive Cate, he seems a little awestruck at the moment.\" Pam said.\n\nJimmy chose that moment to go completely against personality and responded in kind. \"Can you blame him? She looks absolutely stunning.\"\n\n\"Be careful, it may be slippery driving out there. Lock up when you get in.\" Dad said, unable to keep the grin off his face.\n\n\"Thanks.\" I said and reached for the door opening it for Cate. We walked gingerly to the car a mix of salt and ice crunching beneath our feet. I opened the door and helped her in.\n\n\"Is everybody alright in there?\" She asked as I closed the door and started the car.\n\n\"They're fine.\" I said chuckling.\n\n\"What was that all about then?\"\n\n\"You seriously have no idea?\" She shook her head. \"That's what I love about you. You can stun a crowd into awed silence just by walking into the room and you have no idea why. I think Jimmy put it best. You look stunning, and seems that you're oblivious to the fact.\" Her mouth dropped open and she blushed furiously. \"Pam must have agreed, she didn't even scold Jimmy for saying it.\" I said laughing again. We arrived at the little stone church I'd attended as a kid, I parked in the small lot at the back. The air was frosty and we walked quickly around and entered the vestibule. There were some people milling about chatting jovially. Cate stopped and pulled me aside.\n\n\"Give me a moment.\" She reached into her bag and pulled out a small rolled bundle of cream lace. She unfurled it, folding it neatly and draped it over her head and tossed the trailing end over her shoulder. \"Habit I picked up in Spain.\" She wrinkled her nose with a little smile. She walked over to the font and dipped her fingertips in and crossed herself. \"It looks like it may be a full house, we'd better find a seat.\" I crossed myself and we went into the nave. People spoke more quietly but still just as lively inside. An air of anticipation lay over the crowd. The mixed scent of balsam fir, from garlands strung around church, and incense wafted through the air. We found a pew with an opening half way down the aisle. Cate genuflected more gracefully than I and entered the pew.\n\n\"Dylan?\" I heard, and turned to see who was speaking. \"That is you.\"\n\n\"Hi Mister Jackson.\" I said holding my hand out for a shake. \n\n\"How are you doing?\" He asked.\n\n\"Good thanks. May I introduce my girlfriend Catelyn Murray. We're students over at the university.\" They shook.\n\n\"Mister Jackson was unlucky enough to be my high school math teacher for two years. I guess he didn't learn after the first year.\" I said laughing.\n\n\"Don't let him kid you. He was an invaluable asset when they nearly doubled my class size. He took to it like a duck to water. He and his buddy Joe ended up tutoring half of the football team during study hall.\"\n\nWe caught up with our work and schooling. \"That's terrific.\" He said to Cate. \"I'm always happy when I meet women who are actively pursuing study in STEM fields. I wish you good luck on your doctorate.\" Cate smiled broadly and thanked him. Altar boys began milling about and preparing for the processional, the organist began playing as people settled. Everyone stood and turned towards the center aisle as the priest and his entourage made their way up the aisle while someone sang Adeste Fideles from the choir loft. Her voice was clear and strong and it made the hair stand up on the back of my neck. I felt a slight brush against my hip and without looking down took Cate's hand in mine. The service was beautiful, I let go of Cate only when necessary. As the service came to a close the recessional began down the aisle to Ave Maria. We waited for the larger part of the congregation to leave before we tried to go.\n\n\"That was a beautiful service.\" She said, here eyes shining. \"Thank you for bringing me.\" She said and gave me a kiss on the cheek. We said goodbye to the Jacksons, I heard a faint statement from Mrs. Jackson stating that we were a handsome couple. I grinned at that and started to look around and noticed that Cate was the subject of several appreciative glances from the men, and we were in general smiled upon by the ladies of the church. When we got to the vestibule I helped Cate into her coat again. She reached up and gently pulled her veil off and began folding it.\n\n\"Is it common to wear those in Ireland?\"\n\n\"Not really, not any more. It was in Spain, and I kind of liked it. I've worn it a few times at home and nobody really paid it much attention. Most of the older ladies wear bonnets or hats with a bit of lace these days. You can find out next week. Since New Years is on a Sunday I'm sure there will be a big mass. I hope you packed your suit.\" She said with a smile. I had, and not for that reason. Remembering her description of her father as a tall, broad man who I knew I had to make something of a good impression on.\n\nOn the drive home we sat in silence linked by hand and heart in the darkness. Christmas hymns playing softly on the radio. \"Are you excited to be coming home with me?\" There was an odd note in her voice and as I puzzled to work out what it was she continued. \"I mean, are you doing it for me or because of me?\" I lifted her hand and kissed the back gently.\n\nI thought about the question for a moment. If she'd asked me a few weeks ago I would have said because of her, but tonight I realized it was as I'd said all along. It's about us, not her, and not me. \"I'm doing it for us.\" I waited for a moment and I could feel the compulsion radiating from her in waves to explain further. \"Since you're a fan of brutal honesty I guess I should start there.\"\n\n\"Uh oh.\" She said skeptically.\n\n\"No, nothing bad.\" I added with a chuckle. \"What I mean to say is that, well at the beginning, even I would have to admit what I felt was infatuation. When you showed me that you were interested in me as well it all changed. I was ready to be a heart-broken college kid and move on until the day you kissed me.\" I said smiling. \"The morning I made you breakfast, almost in bed. You told me not to take it the wrong way, and I'll be damned if I didn't try, but when a beautiful girl kisses you, reason flees.\"\n\n\"And now?\"\n\n\"Now I realize it wasn't infatuation, it was love. I had no idea I could feel like this, and I never want it to end. I want to immerse myself in it, in you and everything that brought us to this point. I want to see where you grew up, meet your family and learn everything there is to know about you.\"\n\n\"You sound like a stalker.\" She said laughing. I laughed at that knowing that anybody else would hear that and agree with her.\n\n\"Cate, we've only been together a month, and I already feel like I never want the day to come that I'm not waking up to a tangled mess of dark hair in my face and you tucked warmly against me.\" Her other hand came up and clasped mine between hers. \"Truth is, I knew the day you said that when I was with you that you didn't feel alone.\" She lifted my hand and laid it on her cheek. I could feel the damp of tears.\n\n\"When I was sick, you made me take a nap, but didn't leave.\" She said, her voice rough with emotion. \"When I came out of my bedroom and you were there head down of your laptop, the room felt brighter, warmer because you were there.\" I brushed my thumb down her cheek and wiped away the tears. \"You looked up at me, your eyes so big and dark, the warmth, no, the love, just poured out of them and I felt like I was floating in it. I looked hideous, and it didn't matter to you.\"",
        "\"You have never looked hideous, ever.\" I whispered.\n\nWe got to the house, the porch lights glowed in the cold darkness. We walked carefully up the walk and I let her in ahead of me. I turned off the lights and locked up. In the bedroom she sat and removed her shoes, and stood and turned her back to me pulling her ponytail over her shoulder. I leaned forward and kissed the nape of her neck softly before I unhooked her dress. I unzipped it slowly, kissing my way down until it stopped. I stood and placed my hands on her back and pushed the dress off her shoulders, letting it slide down her arms, and her body. She stepped out of it, and I zipped it back up and hung it up. She didn't move and I came back and pushed the little slip off and she stepped free, I laid it over her bag. I reached up and undid her bra and slid it off her shoulders, she shrugged and it came free in my hand and it laid across the slip. She turned to me, her face glowed in the dim light of the lamp. I took her face in my hands and gently kissed her. Her fingers tugged at the knot of my tie, and she began to undress me, as I had her. Our lovemaking was unhurried, soft like the roll of the surf on a moonlit beach. We lay nested together in our warm cocoon of blankets, the quiet so deep that our breathing sounded loud to my ears. A sliver of moonlight peeked between the curtains and left a pale white line across the floor. I was tired but my mind was restless keeping me from drifting off to sleep. Her chest rose and fell slowly, the unlabored breath of slumber.\n\n\"I love you so much.\" I whispered softly. The admission was so real to me. I couldn't imagine a life without her, the fear of simple infatuation was gone, replaced by a tie, a pull so strong that not only did I not want to escape it, I wanted to pull it closer until there was no space between her and I. I believed that she pulled towards me too. I started wondering about our future. Our age, a point she brought up occasionally, was not an issue for me. I didn't know why it was for her but I hoped to overcome that. Our situation, being students and teacher had been overcome, and I hoped that would fade away soon. I had no idea what her plans were after graduation, or for that matter what mine were. I'd envisioned a move out west, maybe Silicon Valley or somewhere nearby and hopefully getting work with one of the technology companies there. Right now, I only wanted to be where Cate was. I smiled and realized that I was willing to give up everything for her, and she'd argue that idea until we were both red-faced. I finally felt myself relaxing and I started to slip off to sleep. The darkness washed over me, warmth surrounded me, and I'd nearly lost consciousness when I thought I heard something, a whisper in the darkness. \n\n\"I would have said yes.\"\n\nI wasn't sure if my mind was playing tricks on me, Cate's chest rose and fell in a slow unbroken rhythm, and I wondered if it was my subconscious playing tricks on me. I closed my eyes and sighed, letting sleep finally overtake me.\n\nCate gazed out into the darkness. She was fairly certain that Dylan was asleep. His grip on her had relaxed, though his arm was tucked up between her breasts over her heart where he usually had it when they slept. She wondered about their future. How her family was going to react. Her sisters would accept him easily, her mother wouldn't be much tougher. He was a handsome, intelligent, hard-working man who loved her without question. He was unlike any boy she'd ever dated. At first there were the usual bounders that thought highly of themselves when she was just starting at uni. Then the attack. She had never elaborated on it until very recently. \"It wasn't rape, he was too drunk for it. I'm sure it would have been had he been able.\" Then she met Samar, he had been the epitome of tall, dark and handsome at the time, but the luster wore off as she got to know him. Just the opposite was happening with Dylan, the more she got to know him, the deeper her feelings became. She whispered softly. \"I would have said yes.\""
    ],
    "authorname": "Member389",
    "tags": [
        "student",
        "teacher",
        "holiday",
        "christmas",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/kiss-me-cate-pt-05"
}