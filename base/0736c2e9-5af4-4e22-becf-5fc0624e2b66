{
    "title": "There and Back Again Ch. 099-100",
    "pages": [
        "Chapter Ninety-Nine: Protest \n\nThe trip back to the estate took longer, though at least I wasn't as grim as I'd been on the way. We took turns half-leading, half-carrying Zevran, but I was just grateful he'd come back with us. I almost hoped Zev would make Aedan beg and crawl for a while before taking him back...until I remembered what they were supposed to be doing the following day. I wasn't sure Aedan would be able to pull off infiltrating Howe's estate without Zevran, especially if he was in as bad a mental state as I expected him to be. \n\nZev finally sagged into unconsciousness; Alistair carried him the last hundred feet to the estate, and we went straight to the barracks, putting the unconscious elf in the bunk he'd been assigned but not used since we'd arrived. I'd insisted Leli and Alistair promise not to tell Aedan where we'd found Zevran and what he'd been doing; there was going to be enough drama over the next few days without Aedan finding out those details. \n\nI went to tell Aedan we'd found the Antivan; as much as the idiot deserved a bit of misery, I couldn't leave him worrying all night. \n\n\"He's in his bunk in the barracks, Aedan. And I expect you to leave him alone there until he comes to you; he needs some rest. If we're lucky, he'll agree to go with you tomorrow. If not, you need to be prepared to go without him.\" \n\n\"I want to see him.\" Aedan looked like hell warmed over, and my irritation with him faded just a little. \n\n\"Maybe he doesn't want to see you? Leave him be. At least until the morning. And I'd suggest a public apology when he wakes up.\" He nodded. \"I'm going for supper. I hope the cook still has something left for us. You coming?\" \n\nHe shook his head miserably. I took pity on him and kissed his cheek. \"Don't screw it up tomorrow, okay?\" \n\nI had a quick supper with Leli and Alistair, everyone else having eaten earlier. Afterwards I couldn't justify sending Alistair to bed alone; I was still a little emotional, and I needed my husband. We went to bed early, not even bothering with the fiction of separate rooms. We spent a couple of hours just cuddling and kissing and talking, before we made love and fell asleep entangled. \n\nI left in the morning only to get clean clothes out of my room; I had no doubt that, by now, the servants had caught on to the fact that we were sleeping together, and by extension, I was sure Erlina knew. I could only hope no one had realised that we were married; the fact that wedding rings weren't a Fereldan custom helped, because both of us had tan lines around our rings that would have been obvious on Earth. \n\nWhen we went to the dining room, Zevran was seated, chatting animatedly with Teagan like nothing had happened; I wondered if it was just the sleep, his innate metabolism, or if Wynne had given him a potion, but he didn't look hungover at all. Aedan hadn't arrived yet, but he came in just behind Alistair and I, and I wondered if it was on purpose. \n\nHands shaking, Aedan ignored the onlookers and approached Zevran; the elf took one look at his face and stood, stepping out into the hallway. He turned back once to see if Aedan was following him; Aedan, whose face was crestfallen when Zevran walked away, rushed to catch up. By unspoken consent, we all stayed at one end of the hallway while the two men headed to the other end; they were far enough away that we couldn't hear what was said, though we could still see. \n\nAedan reached out and took one of Zevran's hands before kneeling in front of him in supplication. Words were exchanged; Aedan shed tears, Zevran pulled away, the conversation became more animated, and finally Aedan stood and pulled the elf to him and kissed him savagely. Zevran responded in kind. There was so much raw pain in the kiss I had to look away; I curled into Alistair's chest, noticing he was also conspicuously not watching. \n\nI looked back just in time to see Zevran wrench himself out of the kiss angrily. They spoke again for a few moments, and then Aedan nodded as Zevran turned and walked away. I rolled my eyes; yet another man trying to make up for stupid mistakes with kissing. At least he didn't try fellatio in the library... \n\nAedan returned and we ate an awkward breakfast together. No one spoke, everyone darting quick, worried looks in my brother's direction before looking away again, embarrassed. Finally finished, he confirmed that he would be taking Zevran, Leliana, Wulf, and Anders with him; the rest of our companions would be going with Eamon and Duncan to the Palace. Our distraction was planned for noon; Aedan hoped to be back at Eamon's estate for supper, Anora in tow. \n\nI worried about what would happen; I didn't want Aedan to end up in Fort Drakon, even though I knew he could get out if he needed to. He'd swallowed a specially prepared lockpick, as well as had one braided into his hair and another tucked inside his cheek, just in case. We'd also made a plan for Alistair and Jowan to break him out if he wasn't back by nightfall \u2013 Leli had somehow acquired a set of uniforms for the Fort Drakon guard, and they were the only two who would fit. \n\nDespite our preparations, I worried. The game faded to black when the Wardens were captured \u2013 had they been beaten? Tortured? Raped? \u2013 and I couldn't help but obsess over those possibilities. And that was without worrying what would happen at Howe's. We would have enough manpower at the Palace, between the soldiers of the nobles involved, the rest of the Wardens and our companions, that Loghain's options would be limited; Aedan would only have himself plus three other rogues and a healer.  \n\nI tried not to be sick as I put on my armour. Red, the colour of blood, I decided morbidly. \n\nI gave Aedan one last desperate hug, before turning and hiding my concern. Zevran approached me and offered me a hug as well; I clung to him, whispering \"Stay safe, and bring him home, okay?\" and the assassin nodded. \n\n\"I won't get the chance to make him squirm, if I don't, yes?\" \n\nI giggled despite my worry and kissed Zevran's cheek in appreciation. \n\nThe rest of our group \u2013 Eamon, Teagan, Alistair, Duncan, Theron, as well as our companions, sixteen of us in all \u2013 formed up with the identifiable targets in the middle, joined up with the group of soldiers accompanying us, and headed towards the Palace. \n\nI couldn't help but worry it would be the last time I saw Aedan. I put that thought out of my head as fast as I was able. Their plan was solid; they'd take out a couple of guards on the grounds with coma-inducing poisons, Leli would fire poisoned arrows at those on the ramparts, and then with the aid of a kind of cross-bow equipped with a grappling hook instead of a bolt \u2013 one of Zevran's acquisitions \u2013 they would scale the ramparts. They'd sneak through the place as much as possible, disabling rather than killing the guards; Leliana had stolen a guard uniform the day before, slipping into the kitchen and poisoning some of the food with something that would incapacitate even more of the guards. \n\nOnce done, they'd confront Howe, kill the mage barricading Anora's door, and escape. I worried about Aedan seeing Howe, as well; I had real concerns that he would lose his head and go berserk, putting himself at risk. I hoped Zevran had his head in the game enough to catch Aedan and pull him back from the brink as he so frequently had before. \n\nI shook my head, trying to bury the worries; I could do nothing to improve the situation, and I was going to need my wits about me at the Palace. I tried to focus on our surroundings, watching for danger at every cross street. Alistair caught my eye at one point and shot me a sympathetic look; I tried to smile reassuringly, and then looked away before I could start worrying again. \n\nThe Palace gate had dozens of people standing around it; I caught sight of Alfstanna, and a man with strawberry-blond, long hair who I assumed to be Arl Bryland. Both were surrounded by a sea of guards who parted to allow Eamon, Teagan, Alistair, and Duncan through. The rest of us tried to stay with them, but had to settle for being distributed throughout the crowd of armed men at the gates. I couldn't get close enough to hear, but the nobles spoke with a smartly-dressed guard, who apparently called for another to come over; after a few minutes, a third arrived. The third guard was wearing a more elaborate uniform than the first two, and I assumed he was a captain. He left after a few minutes of tense discussion; Duncan had had to come forward, and it increased my anxiety to know that now Loghain knew exactly who was at his gate. \n\nMore guards poured out of the Palace, though we still had them greatly outnumbered; soon a tall, dark-haired, severe-looking woman in shining armour pushed her way through. Ser Cauthrien. I almost cheered. She began ordering the guards to form up ranks, then spoke with Eamon for a while. She was visibly agitated when she caught sight of Duncan, and I wondered how much was guilt and how much rationalised anger. I'm curious if she's been able to convince herself that she did the right thing, calling the retreat at Ostagar, or if she knows she left the King to die. \n\nI noticed that Theron had managed to situate himself close to the group of nobles; I only hoped he'd be able to keep his temper regardless of what might be said. I slowly inched towards the centre of the group, and noticed the others doing the same. \n\nAfter probably half an hour of intermittent discussion between Ser Cauthrien and the two Arls and two Banns, there was a disturbance at behind the forces lined up on the opposite side of the gate. A gap was made, and through it walked Teyrn Loghain MacTir himself. \n\nI had never been a fan of Loghain in the game; regardless of his intentions at Ostagar, he'd tried to kill the Grey Wardens, seize the throne, start a civil war, allow any nobles who could stand against him to be killed or poisoned, and tried to sell elves as slaves. He was nothing that Ferelden stood for, in my experience; not anymore. I had read the book about him as a young man during the rebellion; I could not reconcile that Loghain with the man who stood before me. \n\nI knew some people found him attractive; I didn't really get it. His face was all angles, sharp and severe, and his hair was braided in a fashion that I found didn't suit him. His expression was haughty, and I wondered if the young man from the novels would even recognise himself as an adult. There was more than a passing resemblance between him and Cauthrien, actually, and I began wondering if the speculation I'd seen of the forums that he was her father was true. \n\nCauthrien walked up to him before he reached the gate; they talked for a few minutes, while Loghain's eyes roved the crowd in front of the gates. He scowled at Eamon and the other nobles, even more so at Alistair; he looked practically apoplectic when he saw Duncan. I nonchalantly inched even closer, hoping to hear what he would say; unfortunately, so did the rest of the crowd, so it didn't help much. \n\nFinally Loghain approached the gates, voice pitched low enough that I couldn't hear it over the clanking and shifting of the armoured men around me. Eamon replied, and soon Alfstanna, Teagan, and Leonas were all interjecting. Duncan and Alistair stayed quiet, watching, though I saw Alistair's face redden as he tried to hold his temper. \n\nThere was a flash of movement in my peripheral vision, and I turned in time to see an unfamiliar man collapse on the other side of the crowd; blood sprayed out and some of it caught Loghain across the face, which was almost funny until I saw Faren and Bel drag the man into the small clearing near Eamon and throw him down. \n\n\"An assassin,\" asserted Faren, loud enough that everyone could hear him, and I looked at the human on his belly. He had dark hair, was in fact entirely non-descript, and wearing armour without markings, but on second glance, his armour was a lot nicer than most of the soldiers around us, and a wicked-looking barbed dagger \u2013 probably poisoned \u2013 had been knocked from his hand to land on the ground at Loghain's feet. \"Stupid, too \u2013 he assumed no one would notice the knife if he held it down below the waist.\" The dwarf hauled him to his knees, ignoring the pool of blood slowly spreading at his feet. \n\nI could see an entirely inappropriate joke about dwarven height being hilarious later, but at that moment all I could feel was fury. I wondered who the dagger had been meant for. Duncan? Eamon? Alistair? So many targets, so little time. \n\n\"One of yours, Loghain? And you wonder why the Landsmeet is in no hurry to hand you the throne.\" Eamon looked smug, and it occurred to me he might have been hoping for just such an event \u2013 as long as it hadn't succeeded, of course. He spoke loudly enough for his voice to carry over the entire crowd. \n\n\"I've never seen this man before,\" Loghain declared, expression offended. But I thought his eyes lingered a little too long on the bowed head to be entirely believable. Cauthrien blanched, looking between Loghain and the would-be assassin in shock. Not so good at hiding her expressions, that one. The prisoner himself just looked resigned, avoiding making eye contact with anyone. It didn't take much to guess it had been a suicide mission. \n\nEamon gestured at the man. \"Senior Enchanter Wynne, if you would? This man will be taken back to my estate for questioning.\" \n\nThe elderly mage stepped forward, but before she could even start casting, the captured assassin began to convulse, flopping forward onto his face, blood and foam running out of his mouth. Wynne knelt, and began one of her diagnostic scans; her face twisted in an unpleasant scowl. \n\n\"Poison, your Grace. Lethal. He must have cut himself with his dagger.\" She gestured to one outflung arm with its own small pool of blood. \"I'm sorry; there's nothing I can do.\" She stood, dusting off her robes, and melted back into the crowd. After a few horrifying minutes, the assassin stopped thrashing, now just a shell covered in blood and excrement. \n\nEamon spoke, ignoring the corpse at his feet. \"Well, Teyrn Loghain,\" his voice was dripping with scorn, \"unless you'd like us to wait while you arrange another assassination attempt, we demand to speak to Anora, the Dowager Queen of Ferelden.\" \n\nI winced; calling Anora the 'dowager' \u2013 which was tantamount to declaring her rulership entirely illegitimate \u2013 in front of Loghain was carefully calculated to infuriate the man, and it worked. Loghain's face reddened with anger, his mouth working silently as though he was too furious to speak. The silent gasps of almost everyone in the vicinity \u2013 on both sides of the gate \u2013 would be obvious even without sound. \n\nEamon carried on. \"As her regent, it is your duty to produce her when requested by the Landsmeet. Frankly, I'm surprised she's not here already; in fact no one has seen her in weeks.\" \n\nHe gestured grandly, looking around, catching the eye not only of Cauthrien, but also the nearest guards on the opposite side of the gate. \"Teyrn Loghain, where is your daughter?\" \n\nLoghain sputtered and mumbled something, making it obvious he didn't have a good answer to the question; picking up on his discomfort, the other nobles began asking their own questions, followed by shouting as the soldiers around got into it as well. Soon the noise was thunderous, only the odd word \u2013 Queen, or Anora mostly \u2013 intelligible. Loghain's face flushed, and he stepped back from the gate; if there was any reasonable response, no one heard it. \n\nSer Cauthrien spoke excitedly to Loghain for a few moments, gesticulating wildly; I didn't fail to see her pointing at the corpse of the would-be assassin at least once. Loghain shook his head, answering her with his hands raised in a 'calm down' gesture, and finally, reluctantly, she turned. He grabbed her arm, said something that looked harsh in her ear, and her shoulders slumped. \n\nWhen Loghain released her, Cauthrien shouted to the guards formed up on their side of the gate, pulling them to attention; whatever she shouted must have been a command of some sort, because as one, they drew their weapons and readied their shields. Suddenly on the walls above us, a bunch of archers with arrows nocked leaned over the crenellations. \n\nLoghain roared, loud enough to silence the shouting of the crowd, and everyone turned their eyes to his angry face. \n\n\"That's enough! This gathering is unlawful. I suggest you all return to your estates before I instruct the archers to fire.\" \n\n\"We will have a Landsmeet, Loghain! You cannot stop us. And then we shall see who is giving the orders.\" Alfstanna looked livid, her face an ugly almost-purple, as she openly threatened Loghain. Finally, with a lot more grumbling, each of the nobles counted off a handful of soldiers to remain watching the gates, and report back if anything happened, and the rest of us turned and shuffled off the way we'd come. \n\nEamon and Teagan bid goodbye to Alfstanna and Leonas as they peeled off to head to their own estates, and we finally arrived back at Eamon's estate probably three hours after we'd left. I only hoped it was enough time for whatever Aedan was up to. Once we hit the library, I collapsed into the first chair I saw, emotionally more than physically exhausted. \n\nThe rest of the group, minus the soldiers, who scattered back to the barracks, took seats around me, everyone looking as wrung out as I felt. Eamon looked slightly pale, and excused himself to go help the Arlessa pack \u2013 she was leaving with Connor the next morning. I closed my eyes, contemplating sleeping right where I sat. \n\n\"Did you see the look on Ser Cauthrien's face when she saw who that assassin was?\" Alistair sounded incredulous. \"She could use some acting lessons.\" \n\nI snickered. \n\nTeagan sighed. \"Undoubtedly confirmation that he was one of Loghain's. Poor bastard.\" \n\n\"You feel sorry for him?\" I opened one eye to peer at Teagan skeptically. \n\n\"Well, it's not like it would have been his idea,\" Teagan replied defensively. \"And anyway, it was a suicide mission \u2013 either Loghain was blackmailing him somehow, or he was bought with promises \u2013 freedom for his family, perhaps? But he had to die in the attempt so he couldn't be questioned. Did you see the corpse? Whatever that poison was, it dried him up like a giant raisin. If he'd poisoned himself a minute earlier, Cauthrien wouldn't have been able to recognise him.\" \n\n\"I feel like it can only be a good thing that Cauthrien saw the lengths Loghain was willing to go to, that she knows the assassin was one of his.\" Jowan looked nervous, until everyone nodded and he visibly relaxed. \"You said that, by the Landsmeet, she can be reasoned with, at least a little, right? That should help.\" \n\nI nodded, smiling at the blood mage, and then closed my eyes again. \n\n\"Watching Loghain gape like a fish when the Arl demanded he produce the 'dowager queen' was pretty amusing,\" Faren laughed. \"I can see that rumour getting around \u2013 the regent and general of the armies has no idea where the queen is? Perfect.\" \n\nTheron, the only one still wearing his full helmet, gestured and Bel stood to close the door to the library. He pulled off his helmet and grimaced. \"I admit I was sort of hoping you were wrong about where Anora was, Sierra.\" He ran his fingers through his long blond hair sheepishly. \"But I'd say there's no question she's out of Loghain's grasp, and he wasn't happy about it.\" \n\n\"Let's just hope that Aedan and the others accomplished their goal.\" Duncan was practically glowering. \n\n\"I'm impressed you kept your temper, Duncan,\" Teagan responded. \"Not that it was unexpected, but I rather worried that when he accused you of killing Cailan to escape, you'd try to kill him instead.\" \n",
        "\"I have bigger plans for him than a simple death at the end of my sword.\" His tone was incredibly bitter. \"Especially when that would have been followed quickly by my own demise. Loghain will get what is coming to him.\" \n\n\"Karma's a bitch,\" I muttered. \n\n\"Karma?\" Alistair asked. \n\nWe proceeded to change the subject to an in-depth discussion of non-Christian Earth religions; I didn't know that much, but even the concept of reincarnation was highly inflammatory to some of the group, and the lively debate succeeded at keeping me distracted from my worries for a while longer: where is Aedan? \n\nAfter the discussion died down, I excused myself and headed to the room I shared with Solona. The others scattered to their respective spaces, and I wondered if everyone was simply tired or if they were fretting as much as I was. Solona accompanied me, looking almost as nervous as I felt; it occurred to me that Anders was in danger, too. I decided girl talk was as likely to be distracting as the rest I'd probably not get if I tried to sleep, so I sat on the bed with my back to the headboard. \n\n\"So how are things with Anders, anyway?\" \n\nShe blushed prettily, sitting beside me carefully. \"I don't...know.\" She shrugged. \"Your advice \u2013 I'm guessing \u2013 to just be there and try to be a silent helper until I let him back in...it's working, sort of. I'm not as angry every time I see him, anyway.\" \n\n\"When he got injured in that darkspawn ambush, you looked not at all angry, and a lot like some other emotion.\" \n\nShe wrung her hands. \"Of course. It's not like I just stopped caring about him. But...I don't know. How long am I supposed to be angry? Even if I'm not angry, who's to say it will even work out?\" \n\n\"I'll tell you what Zev told me \u2013 what I'll probably have to remind him of, later. There's not a standard amount of harshness in these sorts of situations. All you can do is what you can live with for right now.\" I contemplated my answer, but it felt incomplete. \"But I have to ask \u2013 even if it never works out for the two of you, even if you can't get over your history together...would you be able to live with yourself knowing you didn't even try?\" \n\nHer stricken expression answered my question better than anything she could have said. I put my hand on her shoulder, and she turned towards me, letting a tear fall down one milky-white cheek. \"I don't even know how to start. How do I trust him again?\" \n\nI squeezed her shoulder softly. \"I've no idea. But maybe that's not the way to begin? Clean slates don't exist. He's going to have to earn it. But he can't, if you never give him the chance.\" \n\nShe nodded and wiped the tear angrily before it dripped off her chin. \"What do you suggest?\" \n\nI thought about it. \"What about...a date?\" \n\n\"What date?\" Solona looked confused. \n\nI grinned. \"Dating is something people do on Earth. Two unattached people going out together, doing something, preferably romantic, alone. Like a romantic dinner and then a couple of drinks. Or stargazing. Or...I don't even know. Thedas is a bit of a mystery to me. But spending some time together without everyone else around can't help but be a good thing, right?\" \n\n\"A date,\" she muttered. \"Your Earth terminology is...\" \n\n\"Weird? Yeah. But anyway, think about it.\" \n\n\"Assuming he makes it back in one piece.\" \n\n\"Yes, that.\" \n\n\"I'll consider it.\" \n\nSolona curled up on her side, I assumed to go to sleep \u2013 or at least rest, instead of talking \u2013 but I was still in full armour. I was interrupted as I contemplated changing and doing the same by a knock on our door. \n\n\"My Lady?\" came the voice of one of the servants I'd met earlier, \"Bann Teagan has requested your presence in the main hall. Her Majesty Queen Anora has arrived.\" \n\nChapter One Hundred: Gone awry \n\nBoth Solona and I were on our feet in seconds, charging out the door to catch the servant, but he was gone. Alistair's door ripped open just as I hit the hallway, and wordlessly he held out his hand, which I clutched briefly. Solona didn't even slow as she silently raced down the hallway ahead of me. Alistair and I chased her, careening into the main hall a moment later. \n\nThere was a crowd of people gathered in the hall, and we had to practically climb over our companions to reach the front. One quick look confirmed that Anora was alone; there was no sign of my brother or any of the others he took with him. Eamon wasn't there, though Teagan stood glaring at the woman with his arms crossed on his chest. Theron, in his full helm, stood to one side. Duncan was nowhere to be seen; we had decided we'd wait and see if Anora knew about him before letting her see him. \n\nAnora wore a poor-fitting guard uniform with what I assumed was the Arl of Denerim's coat of arms \u2013 green and white with a many-pointed star \u2013 on the front. She had a bit of hat hair, her braids rumpled with individual hairs sticking out, and she had apparently dropped her helm on the floor when no one offered to take it from her. Despite that, she looked somehow haughty and regal, her shoulders back, drawn up to her full height, her nose ever so slightly in the air as though she smelled something bad. \n\nI didn't hear what was being said as I charged up; when Alistair and I reached her, everyone else seemed to stop and hold their breath. I thought Teagan might take charge, but he looked livid, and I doubted he'd be able to speak without breathing fire. No one else seemed to know exactly what to say either, and finally Alistair bowed slightly, the way Duncan often did, and cleared his throat. \n\n\"Your Majesty,\" his voice was remarkably calm, and I eyed him in surprise, \"where is the Warden? Where are those who rescued you?\" \n\nTheron shifted as Anora's cheeks coloured slightly, whether in anger or embarrassment I couldn't tell. \n\n\"Still at Howe's estate, I imagine. But I doubt this is the appropriate place for this discussion, wouldn't you say?\" \n\nAlistair's jaw clenched, but he stayed calm. \"Of course, your Majesty. Theron, Sierra, with me. Bann Teagan, could you get Arl Eamon and meet us in his study?\" Teagan nodded, and slipped away. \"This way, if you please,\" Alistair continued, and it was my turn to clench my teeth as he offered her his arm. \"I'd appreciate you telling us what has happened before you go get cleaned up, if you don't mind, your Majesty.\" \n\nShe murmured something that must have been agreement, and Theron and I, in full armour, followed them to Eamon's study. \n\nWe'd decided that Alistair should try to appear confident and in-control around Anora, to see how she would respond to a competent-seeming rival for the throne. Aedan would step back and allow it to seem that Alistair was the one calling all the shots. I knew that, knew he had to act the statesman and host, but I wanted to slap those stupid buns right off her head when she placed her hand on Alistair's offered arm, never mind wanting to torture her until she told me what happened to my brother. \n\nIn the study, Alistair ushered Anora to a chair, pulled out a second for me, and then sat behind the big desk, trying not to blush while she studied him. Theron went to stand behind Alistair, helmet still securely in place. \n\n\"Introductions, then, while we wait for the Arl. I am-\" \n\n\"Alistair Theirin, yes I can see that. My father mentioned you were a Grey Warden at Ostagar, and certainly the resemblance to my late husband makes it...obvious that you are Maric's son.\" \n\n\"Yes. And this is Lady Sierra Cousland.\" \n\nAnora raised her eyebrows daintily. \"Cousland? Are you a cousin, then, perhaps?\" \n\nWe'd worked out a cover story on our way to Denerim. \"No, your Majesty.\" I consciously kept the rising anger out of my voice. \"I am the daughter of the late Teyrn and Teyrna. I was raised away from Highever, and encountered my brother by accident after Ostagar.\" \n\nHer expression was hard to read, but skeptical seemed likely. \"Raised away from Highever? Where? The Couslands always opposed fostering their children. Why would they do that?\" \n\n\"Somewhere remote and safe, your Majesty. I'd rather not say, as it would put those who raised me at risk. As for why \u2013 I don't know, and I'm afraid asking them now will be difficult.\" \n\nShe pressed her lips together, obviously not convinced but unable to continue questioning me without appearing rude. \"I am sorry-\" \n\nShe was interrupted in what I assumed was a platitude for the death of my parents by the entrance of Eamon and Teagan. Eamon bowed, Teagan glowered, and I almost laughed. Teagan went to stand by Theron, while Eamon pulled up another chair. I watched Anora's expression turn thoughtful as she noticed Alistair neither stand when Eamon entered, nor give up his seat behind the desk. \n\n\"I hope we didn't miss anything?\" \n\n\"Just introductions, your Grace.\" \n\n\"Oh good, so you've met Lady Cousland, your Majesty.\" To his credit, Eamon managed to keep his usual irritated expression off his face when he looked at me. \n\nAnora nodded. \"Indeed. I would like to hear more about your upbringing sometime, Lady Cousland.\" \n\n\"If you like, your Majesty.\" Bowing my head in assent, trying to look agreeable, took significant willpower. \n\nAlistair saved me from having to say more. \"I hope you don't mind if we wait for those sorts of pleasantries, your Majesty. Please, tell us what happened when Warden Aedan rescued you?\" \n\n\"I don't know what happened before they reached my door, though they were covered in blood. We tried to leave, but we were ambushed. I slipped out during the fighting \u2013 no one stopped me in this disguise \u2013 and came straight here, as Aedan had informed me where he was staying. I don't know much else. I had to sneak here \u2013 I left there probably two hours ago now.\" \n\nI felt my heart drop; it had been expected, but I had hoped they could have avoided it. \"Who were they fighting? Your Majesty,\" I added the honorific as a second thought when she turned a frosty gaze my way. \n\n\"I do not know. No one I recognised.\" \n\n\"Ser Cauthrien wasn't there?\" \n\n\"As I said, no one I recognised. I imagine Ser Cauthrien is at the palace with my father.\" \n\nI tried to hide my sigh of relief; Alistair and I shared a relieved look. Alistair was opening his mouth to ask more questions when a servant rushed into the room. \n\n\"Your Grace, your Majesty,\" the servant practically stuttered, his movements jerky as he appeared to be trying to choose between bowing and kneeling, \"the Warden has returned. They are in the main hall.\" His face was pale, and I'd have thought it was just nerves, but he caught my eye with a barely perceptible grimace. \n\nI didn't wait; I scrambled to my feet and ran down the hallway, back the way we'd come. \n\nThe first person I saw was Anders, alive, but looking...grey. He had a bulky bandage around one arm, and it was soaked through with blood. He was slumped against the wall, clinging to his staff like it was a walking stick, and I thought he might vomit if anyone jiggled him. Solona seemed to have no such concern as she barrelled into him from a side passage, tossing her arms around his neck. I saw surprise on his face, followed by relief; then he buried his face in her pale hair, releasing his staff to pull her closer. He slid down the wall, still holding her, and she followed him down. \n\nA jumble of people obscured my view of the rest of the room, but Alistair cleared a path like an arctic icebreaker, pulling me behind in his wake. I reached the front of the crowd just in time to see my brother, evidently unconscious, being lowered to the floor. I glanced at the others who had accompanied him, to see Leliana looking tired, dried blood streaked from a new barely-healed scar on her forehead; Zevran held Aedan's head in his lap, and an unfamiliar raven-haired man with his back to me was helping to lower my brother to the floor. He had greasy hair tied back with a leather thong, and his clothes were dirty and unkempt, one step from the rag bag. He had scruffy facial hair, not long, but not well-kempt either. Wulf was glowering in the back with another newcomer \u2013 an absolutely filthy female elf, wearing mismatched armour and gripping the former werewolf's arm tightly. \n\nThe dark-haired man looked up at the commotion, and I gasped, windmilling my arms as I screeched to a halt; I'd have fallen, if not for Alistair catching me and setting me back on my feet. \n\n\"Nathaniel? Nathaniel Howe?\" I couldn't have mistaken that face no matter how much facial hair it hid behind. \n\nHe glanced at me, face drawn in confusion; I didn't have time to dwell on it when I noticed a steady trickle of blood coming out of my brother's mouth. I shouted for Wynne and heard a soft reply; while the healer worked her way through the crowd, I threw myself to the ground beside him, grabbing one limp hand and putting my other hand on Zev's shoulder. I looked over at Anders. \n\n\"What happened? Why didn't you heal him?\" \n\n\"Magebane,\" the mage croaked, gesturing to his bandaged shoulder. He looked completely spent. \"One of them got me, and must have coated his blade with it. I don't even have a scrap of mana.\" Solona swore and started pulling at the bandages, her aura flaring as she prepared to pour healing into him. \"I'm fine, love. And you're not much of a healer. I never thought I'd say this, but it's lucky I spent so long in solitary on magebane, otherwise I probably would have had to be carried back too.\" \n\nWynne reached us and sank to her knees beside me, her blue diagnostic scan already running over Aedan's battered body. She clucked in disapproval. \"I'm going to try to stabilise him, but then I'm going to need,\" she glanced at Anders and shook her head, \"Jowan, and Morrigan, and a lot of Lyrium. And somewhere to work.\" \n\nAll three dwarves rushed off to find the necessary people, and Sten stepped forward. \"I will carry him once he's stabilised.\" He nodded to Wynne, who was already weaving healing spells and laying them across Aedan's comatose body. When she drew back, the big man took Aedan into his arms bridal style, far more gently than I'd have thought him capable of, and he headed to Aedan's room. \n\nZevran helped Wynne up, and I stood. \n\nAlistair clapped his hands loudly to get everyone's attention. \"Everyone please, we will meet in the library in two hours to update you. For now, please take care of yourselves, get cleaned up, while we get Aedan healed.\" \n\nI didn't wait for him to finish talking, already turning to follow Sten towards Aedan's room; I heard steps behind me, and I glanced back to see a dejected-looking Zevran, Theron, Teagan, and on Alistair's arm again, Anora. I reached back and took Zevran's hand, pulling him to walk beside me. \n\n\"What happened?\" \n\nThe assassin spared one dirty look for Anora, then turned back. \"We were betrayed, ambushed. We fought. But with Anders unable to heal...Aedan was amazing. Everywhere all at once; I'd never seen him dance like that, yes?\" I nodded encouragement. \"But he jumped in front of a blow meant for me. A large man with a very wicked maul. It should have been me.\" His expression was heartbreaking, and a tear actually escaped one eye. He wiped at it angrily. \"And the last words I said to him were in anger. I am sorry, cara mia. I failed to keep my promise, to keep him safe.\" \n\n\"No, Zev.\" I stopped and pulled the elf into a tight hug; he stiffened at first, but then relaxed and hugged me back. \"He's going to live, and those won't be your last words to him. And I know whose fault it is,\" I wasn't going to be able to avoid glaring at Anora, so I closed my eyes instead, \"and it isn't yours. Let's not lose sight of who is really to blame.\" \n\nIt was an unsubtle warning, and I felt Zevran squeeze in acknowledgement. I didn't trust anyone else to watch Anora as closely as he could. As he would, especially now that Aedan had been injured. The two would still have some things to work out, but it struck me that it would probably be a little easier for Zevran to forgive, after watching Aedan nearly die. I wonder if that would have helped me with Alistair? \n\n\"Howe's dead, though, right?\" \n\n\"Yes.\" His vicious tone surprised me; the man was despicable, but I wondered what set Zevran off. \"Later, bella donna.\" \n\nHolding Zev's hand, I went through the door to Aedan's room to see Sten carefully settle the lifeless-appearing body of my brother on the bed. The blood flow out of his mouth had stopped, but he looked pale, and his breaths were shallow and fast. Sten left us there, and Zevran and I stripped off as much of Aedan's drake scale armour as we could just as Wynne, Jowan, and Morrigan came bustling in, all carrying Lyrium potions. His armour was dented, but there was almost no blood; evidently, all of his injuries were internal. That didn't strike me as a good thing. \n\nAlistair, Teagan, and Anora took up positions against the far wall while Theron played the act of a guard at the door, and I pushed Zevran to sit on the side of the bed, resting my hand on his shoulder with a reassuring squeeze. \n\n\"You know the drill,\" Wynne said, and Morrigan and Jowan nodded. \"I'll direct the flows. Use Lyrium when you need it.\" She turned to the rest of us. \"Be quiet until we're done, or get out.\" \n\nEveryone nodded, and they began. It was interesting, being able to watch the process a little bit more objectively than when I'd been the subject. Wynne's aura flared, and then Morrigan's, and then the two weaved together; Jowan was last, his a familiar greasy sensation to my templar senses, and the three auras melded together seamlessly. It seemed that magic was multiplicative, not additive \u2013 the three together had an aura much larger than the three single auras added together would have accounted for. I glanced at Alistair, whose face was scrunched up in discomfort; I imagined my expression was similar. It felt like there was so much magic gathered, just roiling expectantly around in the air, that I almost thought the roof would blow off. \n\nAnd then it changed, and Wynne began healing. Unlike with my knee, nothing was visible, so we waited with bated breath, unable to assess how well it was working. Each of the three mages took a Lyrium potion, and then a second, and the healing dragged on. Aedan's breathing caught, and then eased, and his complexion slowly returned to a pale normal instead of the sickly grey he'd been. \n\nThe auras finally collapsed, and with collective breaths of relief, the three mages sagged. I looked to Wynne, who sank onto the bed on the opposite side from Zevran. \"He will be fine, I think.\" She sighed. \"He's going to need some time \u2013 his kidneys were damaged, and there are a lot of toxins to clear. When Anders recovers, we'll need to do more healing. His spine...\" She glanced up at my face, which must have looked completely panicked. His spine? What if he's broken it? What if he never walks again? Wynne put her hand out towards me. \"He'll be fine, Sierra. But his recovery will take a little while.\" \n\nI nodded, tears of fear and relief slowly rolling down my face. I leaned down and kissed Aedan's forehead, and then turned and did the same to a stricken-looking Zevran. \n\nAlistair cleared his throat. \"We need to have a meeting.\" He made eye contact with me, and then Zevran. \"We need you there, Zev.\" \n\nThe assassin looked about to shake his head, but Wynne leaned across and touched his arm softly. \"I will take care of him. He will not wake until you return, I promise.\" \n\nHe reluctantly nodded, stood, and faced Alistair. \"As you say, your Majesty.\" No one failed to notice he addressed this to Alistair, not Anora, and her pretty face flushed with anger. \"If it pleases you, may I have ten minutes to wash up first?\" \n\nAlistair didn't comment about the honourific, but his lips twitched, trying to hide a smirk. \"You have an hour, actually. Meet me in the library then.\" \n\nZevran nodded and slipped out, and Alistair turned to Anora. \"Would you like some time to get cleaned up as well, your Majesty? Erlina has already prepared you a room.\" ",
        "She swept out of the room on Alistair's arm, and I had to restrain myself from clawing that smug, self-satisfied expression off her stupid noble face. Alistair looked back once, his gaze understanding, and winked at me. Teagan and Theron followed. I sighed and sat across from Wynne. \n\n\"So that was...bad,\" I ventured. She looked like she was about to deny it, but I interrupted her. \"Templar, remember? I could feel the magic. He doesn't have my resistance, and you still almost weren't successful, were you?\" \n\nShe shook her head. \"You are too perceptive by half, sometimes, for someone usually so oblivious.\" Her smile was fond, and I chuckled. \"That would have been easier with Anders, undoubtedly, but yes \u2013 it was a close thing. He was very near death when they came through that door.\" \n\n\"I think I understand a little why he gets so uptight when I fight.\" The healer and I shared grins, and then I sighed again. \"At least he didn't end up in Fort Drakon. Thank Go- the Maker that Cauthrien was busy at the palace.\" \n\n\"Would one woman really have made such a difference?\" \n\n\"She's...well, in the game, she was one of the hardest enemies to fight. Not Archdemon-bad, obviously, but probably the worst before that point. And she had a bunch of friends with her, to boot. I heard rumours you could defeat her, if you were very clever and well-armed and exceptionally good, but I sure never managed.\" \n\n\"Then I'm glad the plan worked.\" \n\n\"Me too. Listen, should I go get some water and things? We should clean him up, don't you think?\" \n\n\"I will do it, child. But if you could send a servant for water and soap I'd appreciate it. You should go change out of your armour before the meeting.\" \n\nI sighed, squeezing Aedan's hand before standing. \"Send for us right away if anything changes?\" \n\n\"I promise, dear.\" \n\nI walked around the bed and bent down to kiss Wynne's cheek. \"Thanks, mom.\" \n\nAn hour later, wearing a dress \u2013 one of my nicer ones, a grey silk Leliana had purchased somewhere along the way \u2013 I was waiting for everyone else in the library. Alistair was there, and I wanted so badly to crawl into his arms, but I restrained myself. Anora sat regally beside him, and Eamon and Teagan sat on his other side. Theron played guard at the door again. One after the other, our companions trickled in. \n\nWulf came, with the elven woman, now clean and wearing some of the extra Warden armour, still clinging to his arm. She was beautiful, I realised, when she wasn't covered in filth; she had short, pixie-cut auburn hair and startlingly green eyes. But she twitched any time any of the humans spoke, and nearly jumped out of her skin if anyone near her moved; I wondered who she was and what had happened to her. Though considering she was obviously at Howe's estate, maybe I don't want to know. \n\nSolona and Anders came in, not quite touching but clearly together, and I wondered if the events had moved their budding reconciliation along. His arm was no longer bandaged, but his shirt covered the area so I couldn't see a wound or a scar. He didn't look quite as green, and I could feel his magic, weak but present \u2013 the magebane was wearing off. Jowan and Morrigan followed them, and the dwarves came in next, finding seats away from the nobles at the front. Sten glowered silently from the back of the room, one of the few still in armour, with Asala strapped to his back. \n\nLeliana and Zevran were the last two to arrive, escorting a pale, far-too-thin Nathaniel Howe. He'd been wearing baggy clothes earlier, I remembered, but he'd changed into some trousers and a shirt that I guessed might be Zevran's; they were too short, but fit around far less tightly than they should for a man his size. He's been starved for a while. It reminded me of nothing so much as Anders when we rescued him from the Circle. He'd shaved, however, leaving just his signature soul patch below his lip. \n\nI was surprised at the protectiveness shown towards Nathaniel by Leli and Zevran; clearly, this would be an interesting story. Zevran's expression was dangerously mild as he locked gazes with Anora. The Queen gulped softly, but kept her countenance neutral, refusing to show the fear I knew she must be feeling. At least, if she's smart... \n\nOnce all of our companions \u2013 except Wynne, Aedan, and Duncan, for obvious reasons \u2013 were there, Alistair stood. He rubbed at his neck the way Theron always did, and I saw Anora flinch. \"Alright, so, would someone please explain what in the Void happened over there?\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-99-100"
}