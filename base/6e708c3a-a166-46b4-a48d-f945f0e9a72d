{
    "title": "Krampus Night",
    "pages": [
        "\"N-No, I do not wish to anger he of Christmas punishment,\" the woman with a strong German accent tells her friend. Well, I'm assuming the woman she is with is her friend, but for all I know it's just a coworker or something. I'm not even sure she's German, she could be Swedish or something.\n\nWe are all crammed together in a Park and Ride bus, you know the type, where you drive to one of the satellite centers, and get on the bus that drives you into downtown so you don't have to fuck with the traffic.\n\nI've actually seen the German lady before, mainly because of how smoking hot she is. She's the type that is insanely hot but doesn't know it, nor does she dress like it. She always wears some baggy sort of business suit or clothes that hides everything. But I can tell how built she is, and how huge those boobs of hers are.\n\n\"Oh Emma, you are in America now. There's no such thing as Krampus or Christmas Punishment,\" the friend tells her. Despite this, the German chick doesn't seem to care. It's sort of amazing in a way as her face shows a true fear of the legend of Krampus. The only thing I know about Krampus is that horror movie that came out a while ago.\n\nThankfully I'm two seats back from them, so they have no clue I'm watching or listening in. If they did, I'm sure they would think me a creep. Well, they would be right. I am a creep. I'm the sort of guy that does check out any female that gets near me. The type of guy that no female would normally sit next to. The sort that when I sit next to a female, they start to feel trapped, which is how I like it.\n\nFor the next fifteen minutes, the German chick talks about Krampus. At some points, her voice quivers as she speaks, showing just how scared she is of the legend. In my entire life I've never even heard of anyone being so scared of just the mention of something. It'd be like me getting scared of the hook man that broke out of the crazy house the next time I fuck a bitch in my car. It's really quite unbelievable.\n\n\"Krampus will beat you with his many sticks and nothing can stop him. It is for the best you let him do as he came to be, or risk making it worse for nothing can stop him,\" the German chick, or should I say Emma, tells the friend. Hearing this actually makes my cock move a bit as I see the image of me smacking her bare ass with a stick in my head. Oh how I would love that.\n\nHer friend every so often tries to tell her why she is being silly, but I can tell she knows that nothing she can say will change her mind, so it is best to just let her talk. Some people believe some stupid shit and nothing you can say can change that. Just like Emma believes Krampus is a half goat but somehow looks and acts human.\n\n\"But after tomorrow night, all will be safe for December 5<sup>th</sup> is Krampusnacht. For that is when he comes. And after, he will sleep,\" Emma tells her friend.\n\nAt hearing this, an idea pops in my head. A truly horrible and beautiful idea just like the Grinch got. It strikes me so suddenly that my dick gets knocked stiff in an instant. What if Krampus did visit her? I bet she would be so scared that he could do whatever he wanted, like fuck her over and over.\n\nThe bus finally pulls into the Park and Ride Center where everyone's cars are. Most everyone stands now, including Emma, where my cock throbs at looking at her body again. When she reaches to pick up her purse, her top strains against her breasts. Those tits man...they got to be at least D cups. And she's small, but strong, like made of muscle. The sort of body that is built just for fucking. She has to be what, 29? 30? The perfect age where they know all the things they should know, like how to suck a cock, how to take it up the ass, and how to be a good girl.\n\nThe bus empties like normal, only this time I find myself following the pair of women instead of heading to my car. I keep a good distance back so not to be noticed by anyone, especially them. I don't like to brag, but this isn't my first time following someone...nor my first time taking what I wanted from a female.\n\nThe pair separates and I keep following Emma. I follow until she reaches her car, where I copy down the license plate number. Then I notice my own car isn't too far from here, so I hurry get to it. I'm very pleased to discover she hasn't left by the time I get into my car, so I am able to follow behind her.\n\nI follow her home like this, with night falling to make it easier to not be seen. I'm not sure what she does for work, but she must get paid really well because she lives in a house in a very country part of town. Her two-story house sits on like half an acre of land, where you have some serious space between your neighbors. When I see this, I get more and more excited. This means no neighbors to overhear anything or to notice any running or thumping like in an apartment.\n\nA smile forms on my face as I see there are no other cars in her driveway either. I knew she didn't have a wedding ring, but she could always have a boyfriend or kids, but from the look of it, she doesn't. She's all alone. She's the only one in the house.\n\nUnable to help it, I spy on her for a bit. I do this by parking down the street and walking towards her house. I stay in the dark across the street where no one should be able to see me. Here I'm pleased to see that she keeps the curtains open so I can see inside. In fact, there are many windows wide open as well which means easy access inside the house.\n\nFor about two hours I spy on her, watching her workout, then eat, then sit to read a book. As I watch, I think up my plan and what I want to happen. Finally, I leave once I have all the info that I need. And as I drive home, I can't wipe the smile off my face.\n\nThe next day comes like normal. And sure enough, I am on the same bus with her again. Only to my pleasure, she seems more anxious today. Why wouldn't she be? It is Krampus Night after all. When I went home, I read every Google article I could on Krampus so I could figure what he would do and how to do it. And tonight is when Krampus comes along side St. Nick where Nick gives gifts, and Kramp punishes. You would think it would be on Christmas day, but nope.\n\nWhen the bus reaches the Park and Ride, I don't follow her. I don't even look at her. Instead, I get to my car and drive off as fast as I can. Once I get home, I change into my \"costume\" as fast as I can. Generally, it is believed Krampus comes between 7 pm and 2 am, and I want as much time to fuck her as humanly possible, or should I say Krampus-ly possible.\n\nWhen the sun sets I get in my car. I wear a hoodie over myself as to hide as much of myself as possible so any of my apartment neighbors can't see what I'm doing. I've used FX makeup to give myself a darker skin tint on my face, chest and back so that I look evil. I've then put horns on the top of my head using superglue and a reindeer Christmas yard decoration that I stole. Furthermore, I've put on sheepskin pants which I had from an old theme party I went to years ago. I always kept them thinking I would use them for something one day, and how glad I am that I did.\n\nOverall I would say I would pass for Krampus. Well, not really, but to someone that really believed in it? Yeah. I think I look just fine. And to add to this, I have a bag of all that I'll need for tonight.\n\nI drive to her house and park down what looks to be an abandoned driveway that doesn't lead to anywhere just an open lot. From here I wait until the sun fully sets so it'll be harder to see me. But once night falls, I get out and start walking.\n\nBeing excited it takes only a few minutes before I am in front of her house, even if I'm practically walking in the woods/shadows. To my surprise, there are now black crosses on her door and windows that were not there yesterday. And inside the house I can see several candles lit in every different room. I figure all this must be to ward Krampus away.\n\nNot caring, I walk down her driveway being as quiet as I can. When I reach the front door, I get an idea. I pull down the large black cross thinking that maybe she'll believe this is why Krampus got in. That the cross fell to the ground and didn't protect the door. That it was her fault all this happened.\n\nThe windows are shut, unlike yesterday, but this isn't a problem as they are not locked. I planned to enter via the window of her living room whenever she leaves to get something. I'll still do this, but just need to use my knife to force the window open.\n\nAs I move next to the window, my shoe, which I glued a plastic horseshoe to the bottom of so it'll look like a misshapen hoof accidentally presses against one of the dozen flower pots she has on her porch. When I look down after doing this, I see something shine off the dim light; a key.\n\nHaving to stop myself from laughing, I pick it up and then put it in the front door. Sure enough, it's the key as the front door opens. It's like the universe is lining up for me or something. The universe wants me to fuck this chick against her will.\n\nI don't open the door all the way as I know I need to make a grand entrance. That the time is now. I need to burst in all creepy-evil-santa-like and rape the bitch.\n\nTaking a deep breath, I push on the front door, HARD. It swings back and slams against the wall. From here, I storm in, growling in my best animal-growl which I spent hours practicing last night. I make my way to her living room as fast as possible, just in case she decides to try and get a gun or something.\n\nWhen I enter the living room, everything sort of slows down. I see her, standing in her pajamas looking at me as I enter. Her blue eyes lock onto me, where they show terror. Pure, beautiful terror. Her already pale skin becomes even paler as she looks me up and down. And the expression on her face? It's better than a million dollars. It's a look that seems to scream that she knew this would happen\n\nShe begins to frantically talk in German. Her voice is high pitched and loud, showing how scared she is. And as I listen to her, puffing my chest out and growling, I want to smile. She believes it. She really believes that I'm Krampus. Oh how I thought this would fail.\n\nEmma keeps frantically talking to which I have no clue what she is saying. But then she kneels down, putting her hands together in a begging/pleading motion. I have to fight hard not to smile as there's really no fight in her at all. She is that scared of the legend of Krampus.\n\n\"Zieh deine kleidung aus,\" I say in my best growling voice. According to Google, this means 'take off your clothes.' I had to listen to the computer say it over and over like 3 dozen times before I got it. Even then, I'm not sure that's even how you are supposed to say it. I'm not even sure if she is really German.\n\nEmma stops talking and stares at me. Only now do I fear that she sees through what I'm doing. That I'm just some rapist that wants to fuck her instead of a mythical beast here to punish others for not having Christmas spirit or whatever. She doesn't say anything at all as she stares at me, with the long moments starting to feel like hours.\n\nI start to think up what to do if she tries to run. But before I even finish the thought, she stands up. Her hands move to the bottom of her top where she lifts it up so fast and hard, I hear fabric rip. When she does this, those beautiful pale tits come out. And oh, they are even more beautiful than I thought tits could ever be. They are DD's at least.\n\nShe drops her shirt after removing it to become completely topless. Each move she makes, makes those big tits jiggle and shake. It's such a sight that I bet I could become hypnotized by it. It's so powerful that I didn't even see her jerk her pajama bottoms down to expose her pussy as the dirty girl wasn't wearing panties.\n\nEmma is naked in front of me now. Completely naked. And my cock is as hard as possible. The funny thing is that I'm not sure if it's hard because of the fact I'm seeing one fine as hell bitch, or because this stupid plan is actually working. She really thinks that I'm Krampus.\n\nUnable to help it I move towards her, to which she tries to back up. But the silly girl hadn't stepped out of her pajamas yet, so she trips and falls backward, where she plops down on the couch. This gives me the time to get right upon her, to which I grab the pajama bottoms and rip them off her, sending them across the room.\n\nI grab her hair in my fist. On purpose I am very rough when I do this, rougher than I have ever been. I yank up to which she screams and yells something in German. Overpowering her, which is easy as she is so scared, I turn her around and then push so she kneels on the couch with her upper body hanging over the side.\n\nI place my hand on her back hard, letting her know to keep herself bent like this. To keep her bent over with her ass on full view like this. To make it even better, her legs are already nicely spread so I get a wonderful view of that shaved pussy. It's so beautiful that I nearly lose myself in looking at it.\n\nMy hand digs into the bag that is still slung behind my back. It only takes a moment to bring out what I want; a switch. Or in other terms, a somewhat small stick/branch.\n\nHolding her down with my left hand by pushing on her back, I swing the stick with my right hand to swat her right across that huge, white ass of hers. The branch cuts the air and then lands perfectly across her cheeks.\n\nShe cries out at the pain, which I know has to hurt, but she doesn't try to move. She stays bent over like this, knowing what is coming. I almost let out a laugh as I remember her telling her friend how with Krampus it's just best to let him do as he wants, or it'll get worse. So that must be what she is doing as I swing the branch three more times to which she just cries instead of fighting back.\n\nSMACK! I swing the stick again and again over her white ass. Only each time her cries get louder and louder. It makes me worried as even if we are in a house that's far from the neighbors, someone might hear. With this in mind, I look around for something to gag her with.\n\nI try to look for her panties before remembering she wasn't wearing any. Then I pause when I see her coffee table. With a sick smile I then reach out towards her coffee table and grab a handful of the candy canes she has in a small glass.\n\nI lean forward over her bent over body and bring my arm around. With my other arm, I grab a handful of her hair and yank on it to make her cry out again. When she does, I stuff the ends of the candy canes right inside her mouth. Only there are too many candy canes to fit, so I have to play with her mouth some to make sure all go in and that her mouth is forced to stay open.\n\nNow that she is gagged, I move back and resume whipping her ass with the stick. I'm very pleased by how muffled her cries are now, not to mention happy by how stupid she looks with all those candy canes sticking out of her mouth.\n\nI strike her ass over and over. At first I'm not hitting her too hard, but this changes the more that I do it. There's something about her not stopping me that makes me hit her harder and harder, faster and faster. Soon I am getting out my aggressions on her ass, making sure to strike every inch of it so it is all nice and red.\n\nFinally I stop, not because I want to, but because my arm actually is getting tired and I'm out of breath. I take a few steps back, breathing very hard to look at my work. The stupid woman stays bent over her couch naked, only her entire ass is a nice shade of red, which will make sitting down for her feel very painful for a while.\n\nSpeaking on painful...I go to my bag. A long while ago I saw a toy in this porn shop that I sometimes visit. It was unlike any toy I had seen, and to be honest I haven't seen it sold anywhere but that one particular porn shop.\n\nI pull the toy out of the bag and look at the name printed on the box \"The Cock's Cock.\" Being as quiet as I can about it, I pull the thing out of the box. You see, the toy is basically a big fake cock. \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Only you are supposed to slide it onto your own cock to make it bigger for your partner. There's a hole at the base where you slide your cock in, and it'll grip it. And then, you fuck someone with it.\n\nThe packaging says it'll feel nearly the same for a guy as the inside is \"especially designed\" to feel like a pussy. I hope it does but that's not the reason why I'm about to try this as I've held onto this toy for like 6 months without using it. The reason is because I want this bitch to truly think she's been fucked by Krampus. By an evil beast that will be the largest thing she's ever had up her fuck-hole.\n\nIt feels a bit humiliating putting the toy on my stiff manhood. I have to insert my cock into a hole that isn't large enough for nearly anything at the base of the thing. But when I start to push it on my cock, I can feel my cock pressing against the walls tightly, letting me know this thing isn't going to fall off or anything.\n\nSoon enough, my normal 7 inches cock of normal girth has transformed into a 12 inch, fat dildo with bumps and smoothed over spikes all over. I even make it swing back and forth a bit to make sure it isn't coming off.\n\nI move to her again where I lower myself some. With a smirk as she hasn't moved, I take hold of the monster-cock and place it at her opening. The moment I go, she jerks and tries to protest. It's very comical as she tries to talk with all those candy canes in her mouth while not moving from her bent position.\n\nNow I start to push my new large cock in. Her pussy lips have to stretch some to let the thing inside. They don't stretch too much to hurt her or anything, but I know it's more than they've been stretched before. And I go slow too to make sure she feels very little bump on the thing.\n\nShe whimpered at first as I put it at her opening. But when I started to insert it, she straight up protested. Unable to help it, both her arms went behind her as if to try and stop me, but I easily grab both and lift, making it painful for her as arms aren't supposed to bend like this, not to mention her face is pressed against the edge of the couch.\n\nI keep stuffing her with my cock, with it not even half-way in yet. By now she's nearly screaming as she feels it filling up her pussy. Hearing her muffled scream, which is a mix of fear, pain and pleasure, makes my own cock throb even harder.\n\nGrowling in my best animal tone, I keep pushing it inside her until it's all the way in. Oddly once I do it, she stopped moving and screaming. She just goes quiet and still as she takes this violation. I guess knowing that Krampus has his cock in your pussy would break your mind.\n\nI pull back now, making it go out of her slowly. When I am halfway out, I push forward again. I have to do this slow as I can tell how tight she is. Afterall, I know this is a rape, but I'm not trying to seriously injure her or anything. But the more I do this, the more loose I feel her getting and the easier this becomes.\n\nThe smile on my face refuses to leave as I begin to fuck her like this. I still go slow at first, but as I feel her becoming more open, I go faster. From the beginning she moans a high pitch groan each time I thrust as it must be more than she can take. And I get rough too, making sure to slam my hips into her and make it go as far as possible inside of her.\n\nHer screams and groans start to become moans now that I am able to fuck her steady. They become loud too, nearly as loud as the clapping sound of ramming into her. This combined with the fact that I can see myself in a mirror she has on the wall makes me feel like the most powerful man ever. I can't believe I'm fucking her like this.\n\nAnd then to make this just a bit worse for her, I let go of her arms that I've pinned behind her, only to grab each one in one hand. I then pull back on them hard, forcing her upper body to rise. I pull and pull until her body is at a painful angle while I fuck her. I do this not just to make it worse, but now she is able to see herself in that mirror.",
        "Unable to help it, I laugh at her as I fuck her. I laugh as I see her reflection in the mirror and know how humiliating it must be for her to see herself like this. Her fat titties bouncing about while a monster fucks her with his monster cock, which will leave her pussy murdered all while her mouth is stuffed with candy canes. And to add to this I see her eyes dart to the mirror where she gets a clear view of how she looks.\n\nSuddenly she tries to pull her arms out of my grip. Thankfully I'm able to keep holding on so they don't escape. Then I feel her try to move upward but I press forward to pin her hips to the couch and then sort of probone fuck her. She's really trying to escape now. She's downright fighting me. As she tries to escape, she starts to scream again, but much louder than before.\n\nThen I realize she's not trying to escape at all...she's cumming. The bitch is cumming from being fucked like this. And from the way she bucks about and moans, it's an intense orgasm too. To make it even more intense, I try my best to ramp up fucking her by going as fast and hard as I can as I slam into her.\n\nWhen I do this, she starts to let out a single muffled scream. It's so loud and intense that for a moment I get concerned she might be having a medical emergency or something. But I don't stop. I keep fucking her like this, hoping she doesn't pass out.\n\nAfter about 30 seconds of this, she stops screaming. At the same time she stops fighting. She goes back to the somewhat submissive position and lets me keep fucking her. I can only guess this means her orgasm passed and she's somewhat stunned.\n\nFor some reason, this gives me an idea. So I stop fucking her and carefully pull out of her. When I do, I'm surprised just how wet the bitch is. Never seen anyone that wet before. In a way, I'm not sure if that's a good thing or a bad thing.\n\nOnce I am out, I look at her pussy. It makes me smirk again as I see how worn out and beat up it looks. It somewhat stays agape as if waiting for the cock to be shoved in again. If I was a truly asshole, I might beat it with the stick, but I'm not that low yet. But maybe later.\n\nI go back to my bag and use my hand to dig inside while I keep the other hand on her back to make sure she stays bent like this. Then I find what I was looking for; butt plug. I pull out the large plug that is completely black. I didn't really think I would use this as I've never really used one before. But I've never been in this situation before either.\n\nHolding back a laugh at what I'm to do, I move the plug towards her ass. When I press it between her cheeks, she jerks to stand up but I hold her down. This time I have to use some strength to keep her bent over. Then I press the end right against her puckered ass, where I feel her tension and fear.\n\nNow I press it harder against her tight ass. Again, she tenses and wiggles, but I press down hard on her back. When I do, she whimpers, which makes me laugh. Then I press it super hard to let her know this is happening if she wants it to or not.\n\nI keep firm pressure on it until I finally feel it start to give in. When I feel that, I press harder to which I can tell her relaxing oddly. She keeps whimpering as I push the butt plug deeper and deeper. Instead of going slow, I go fast as I want it all the way in. And sure enough it just takes another good shove before it goes all the way, leaving everything inside except the black smiley face that is the end of the plug.\n\nLaughing out loud, I pat her ass as if to say \"good girl.\" When I do, she whimpers louder as I know this must not be enjoyable for her. To have a huge butt plug shoved up your ass can only be humiliating, not to mention having it done right after your pussy was murdered. But damn, it's fun.\n\nExcited more than ever, I look about for the one thing I'm looking for. Then I find it...her bra. I grab it and quickly lean forward. I wrap it around her face, making sure the large bra cup goes right over her eyes. I wrap it around and around her head tight, so tight that I know it hurts. Only I make sure her mouth is freed. She even whimpers and moans in pain at this after I manage to tie the bra to itself so she is effectively blindfolded.\n\nNow I stand up feeling more powerful than ever in my life. Looking down at her, I feel my excitement surge as I see what she's let me do. She stays bent over with her pussy fucked raw and a plug in her ass all because she's scared of me. And as much as she may deny it, I know she is enjoying it. Her skin is so warm to the touch and she's already cummed once, if not more from what I've done.\n\nSlowly I step back and then start to walk around the couch towards her head. I had intended to stay behind her the entire time because the more she looks at me, the more she would figure I'm not really Krampus but a rapist. Especially with all the sweat ruining my makeup. But since she's blindfolded, that's no longer an issue.\n\nI'm now standing in front of her as she keeps whimpering. My smile increases as I see my hard cock inches from her face and she has no idea. I pat her head softly to let her know where I am. At my very touch she whimpers louder and tries to back away some, but I quickly grab a handful of her hair.\n\nI take hold of all the candy canes in her mouth and remove them. When I do, I see many of them are broken from her biting down, not ot mention there is a bunch of drool that comes out. She also takes a lot of deep breaths as if breathing for the first time.\n\nI slap her face. Not hard, but not soft either. When she doesn't open her mouth I slap her face again. The bra covering her face does block some of it but she gets the idea once she opens her mouth. When she does, my cock throbs harder at the power I hold over her.\n\nSlowly I inch my cock closer and closer to her face. She must know what is coming as she keeps her mouth wide open. I then thrust forward and shove my cock as far as I can inside her mouth. And I thrust hard too.\n\nIn a feeling of pure bliss, I feel my cock head actually go past the back of her throat. When I feel this, I hear her gag in surprise but she knows better and keeps her mouth open and not bite. And thus the two of us stay like this for a few seconds, with her the sex toy and me with my cock as far as it can go into her mouth.\n\nI then move my hips back and I shudder as I feel her lips on my cock. She automatically closed her mouth on my cock, knowing exactly what I wanted her to do. And so I slowly move my cock in and out of her mouth, enjoying the feeling of those beautiful lips on my hard cock. It's so rare that a woman does what I want automatically without me having to tell her what to do.\n\nShe is very good at this. She keeps her head in place and lets her lips be firm yet loose to make it as enjoyable for me as possible. Man, if only I could get head from her everyday. That would be heaven. But for now I just keep moving my cock against her lips, savoring this piece of heaven.\n\nI begin to go faster now as I can't help it. After a few moments I grab a handful of her hair again for a better grip. It doesn't take long before I'm thrusting hard and fast into her mouth to properly face-fuck her. And each thrust I hear her moan out a high-pitched pleasurable moan, showing that she is loving this for some reason. I'm not sure if she loves giving head or loves being forced, but I don't care. I just care about fucking her face.\n\nUnable to help it, I too begin to moan as I keep going. In what is a surprising move, she starts to bob her head forward as I thrust, making it feel like my cock is going even deeper. She is actually helping to make it feel better for me instead of just taking it. As if she loves getting fucked by Krampus. It's such a hot and exciting move that I cum unexpectedly.\n\nMy cock seems to explode in her mouth without warning. It's so sudden and shocking that it catches me off guard as if I was a teenager again. So I do the only thing I can think to do which is to shove my cock as far as it can do into her mouth. There I feel my cock throb as it shoots stream after stream of cum down her throat, to which she can't do anything but swallow each load. And each time she swallows, it rubs against my cock, making my orgasm even more intense.\n\nIt is by far the best orgasm I have had in ages. It is truly magical too. In fact, I doubt I'll have anything like it again. Just something about her and the situation makes it, I don't know, surreal.\n\nOnce I finish, I pull my cock out of her mouth. For the first time since I was a teen, I feel like a pile of goo. Never have I had sex that was this hot before. It feels like she sucked all the energy right out of me via my cock. And the worst part is that when I look at her my cock keeps trying to get harder even if it is spent. That I want nothing more than to fuck her all night long.\n\nFor a while I just stand there looking at her, thinking of what to do. My mind is filled with so many thoughts such as what to do with her next, if I should leave and that I might be falling in love with her. It's only after I hear a clock chime that I snap to my senses. I see how much danger I could be in if I hang around.\n\nI quickly fix my clothes to put my cock away. I decide that I really should go as the longer I stay here, the bigger risk I'm taking. Some neighbor might have called the cops because they saw me come in, or maybe someone passing looked in, or maybe even she might have figured that I'm not really an ancient Christmas demon and decide to fight back.\n\nMy plan is to get my bag and leave, but when I reach my bag, I pause. You see, I brought a few things to do a \"big finale\" of how I wanted to leave her. Only I thought it might be a bit much so I wasn't going to do it. It would be a bit too humiliating for her, a bit too big to actually pull off, and a bit too much which might make her actually call the cops after I leave for what I've done. But with a smirk I say \"fuck it\" and decide to do it.\n\nSo I pull a few things out of the bag. The first thing? A cheap vibrator. By cheap I mean that it supposedly has a timer so that every 30 seconds it'll turn off to give a break for about 10 seconds, but it's so cheap I doubt it works. Or if it does, it's very random.\n\nI press the button to turn the vibrator on and damn it vibrates hard. It nearly jumps out of my hand. Then trying to do it quickly, I press it against her worn pussy and insert it. I want to insert it before she really knows what is happening.\n\nI can't help but laugh a little as it easily slides in, like...all the way. I manage to get the entire thing inside of her. Her pussy is still so stretched out and wet that I have no issue getting it inside. And to be a bit evil, I use a finger to push it in as deep as I can so it doesn't fall out.\n\nInstantly she reacts. She starts to squirm and protest. With her mouth not gagged, she starts to talk in German. It sounds like she is pleading with me, but I have no idea what she's saying. All I do know is that I have to grab both of her hands and hold them behind her back as she keeps reaching down to remove the vibrator.\n\nI then grab another item out of my bag, one that makes me laugh. It's a string of Christmas lights. I take one end and wrap them around her wrists, quickly binding them behind her so she can't use them.\n\nWith her pleas getting louder as the vibrations must be driving her crazy, I know someone might hear. I do have a gag in my bag, but I spot something that might be a bit better given the situation. So I move to her tree and take off one of the ornaments. It's a middle-sized plastic ball with a large \"PEACE\" on it.\n\nWith a laugh I grab her hair in one hand and press the ornament with the other against her lips. She at first protests and tries to yell but after a few seconds of me pushing, she just opens her mouth to let the ornament go inside. With it inside, her mouth is forced open, gagging her quite nicely. It does take a moment to push it inside as it is large, but I do get it in.\n\nSo happy that I could skip, I pull upward on her hair. After a moment of her attempting to yell in pain, she gets that I want her to stand. She stands up slowly as her legs look to be wobbly. At one moment I have to grab her before she falls over.\n\nOnce she is more stable, I slap her bare ass to make her start walking. I have her walk to where there is a hook in the ceiling. I'm guessing some sort of a light once hung here, but for all I know, she might be a BDSM freak that gets tied up here. In any case, I stand her under the hook still completely naked.\n\nUsing the rest of the Christmas lights, I start to wrap them around her body starting with her ankles. I make sure to wrap them tight around her ankles and her knees to keep them together so the vibrator can't come out. This is a bit hard as she keeps squirming from the vibrator doing it's thing. In the end I have to physically force her legs together and quickly wrap the lights around them to make her unable to spread them. As I do this, she start to cum again as she starts to moan loudly.\n\nTo be an asshole, I make sure to wrap the lights around each breast tight to make sure this is as embarrassing as possible for her. I will say her tits tied like this looked too good to pass up so I spend about five minutes sucking on the hard nipples. Sucking, flicking even biting on them as she reacts thanks to the vibrator. At one point she cums again, making her nipples extremely hard. Something about them being tied like that and looking swollen makes them look too good to pass up.\n\nTo be an even bigger asshole, I actually wrap the lights around her neck too. Not tight at all but enough that if she ties to move they will choke her. And then I tie the end of the lights to the hook in the ceiling so that she's stuck where she is, vibrator still going. That she's stuck like this, with all the windows showing what I've done to her.\n\nFinished, I step back to look at her. I laugh as she keeps wiggling from the vibrator, clearly about to cum yet again. Even through it is inside of her, I can clearly hear it. Sure the string of lights won't hold for long as she will be able to get out of it, but it'll take her maybe 10 or so minutes depending on how badly she wants to get freed, but it'll feel like hours.\n\nAs I leave through the front door, I hear her moaning yet again as another orgasm explodes over her from the vibrator. I make sure to close the door as I leave, hearing her faintly cum via her gagged.\n\nWhen I reach the other side of the street, I look back to clearly see her via the window. An inhuman crackle does come out of me as I look at her, clearly orgasming yet again, with her knowing she was just fucked by Krampus."
    ],
    "authorname": "creativeboyinspring",
    "tags": [
        "force",
        "spanking",
        "oral",
        "christmas",
        "humiliation",
        "krampus"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/krampus-night"
}