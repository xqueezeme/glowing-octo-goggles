{
    "title": "The Pulse Pt. 02",
    "pages": [
        "Monday back at school was faintly surreal.\n\nSomehow everyone knew that I had gone out with Fiona. And Jamie was so pissed with me.\n\n\"What the fuck man? You have a date and you don't even tell me? Let me rephrase that. You have a date with an older hottie that half of our year had a crush on when she was still here and you didn't tell your best friend who had to hear it second hand from Duncan freakin' Drake!\"\n\n\"Oh shit Jamie, I'm really sorry. It just happened really quickly. We finally figured out that we were both interested in each other at work and we went out that night. I didn't tell anyone else. I suppose someone must have seen us.\"\n\n\"In town? On a Saturday night? Ya think?\"\n\n\"And when I was coming home I was in that stupid accident and...\"\n\n\"Wait. What stupid accident? You mean the bus crash with the fatality and the-loads-of-blood-everywhere accident? That accident?\"\n\nI looked sheepishly at him and nodded.\n\n\"Man!\" He exploded with indignation.\n\n\"Err...and I got my car yesterday too.\"\n\n\"Jesus H Christ and the donkey he rode in on! All it takes is a quick phone call! This much news needs an entire weekend, not five minutes in the hall.\"\n\nAnd then Jamie demonstrated why he was my true friend.\n\n\"Well, congratulations I suppose.\"\n\n\"Thanks Jamie. Look, I'm really sorry - I'll fill you in on the details later OK?\"\n\n\"You'd better or I'll remove your testicles with a blunt instrument resembling some kind of gardening tool and roast them....\"\n\n\"..over a large fire. Yes, I know.\"\n\nI grinned at him as we fell back into insulting one another with quotes from Blackadder. I waved and we headed off to one of our few separate classes. I rounded the corner and Chris Waite and his gaggle of cronies were hanging around. My breath caught in my mouth and I must have gone white but the ape just nodded at me as I went past.\n\nThe surrounding gang looked at him like he'd grown two heads and I walked past dimly aware of the gossamer thin blue thread that still linked him to me.\n\nI found my usual desk at the side of the science lab and was stunned when Jennifer Sawyer put her books down next to me.\n\n\"Hi Jake,\" she smiled at me.\n\n\"I...err...\"\n\n\"Hi..?\" she suggested.\n\nBlushing crimson I nodded and she just grinned as the teacher called everyone to order. Biology was always interesting but with Jennifer beside me I couldn't concentrate. Memories of her perfume, the proximity of her body, her lips...\n\n\"Jake!\"\n\n\"Sorry, sir.\"\n\n\"Well..? Oh, never mind. Martin, perhaps you can enlighten us while Jake goes back to whatever dream he was having.\"\n\nI snapped back into the room and tried to maintain some sort of equilibrium. It was not easy.\n\nWhen the lesson finished, Jennifer started to gather her books together and turned to me.\n\n\"So I heard that you signed up for gymnastics?\"\n\n\"Wow, news travels fast!\"\n\n\"I'm the club secretary, so the application comes to me.\"\n\n\"Oh. Right.\"\n\n\"It'll be great to see you there. Are you coming tonight?\"\n\nImages of me coming all over Jennifer at that moment were hard to put out of my mind but I nodded and tried not to draw attention to my stiffening cock.\n\n\"Yeah, sure. I'm looking forward to it.\"\n\n\"Me too.\"\n\nAnd with that she flicked her hair over her shoulder and headed off to her next class.\n\nBy the end of the day I had been stopped numerous times by people I didn't really know to ask me about the accident and my date with Fiona. I had no idea what the hell had happened but the giant turd magnet appeared to have been removed from my head. Is this what school was like for normal people?\n\nJamie was less than impressed to be heading home alone but he still wished me well as I headed to the gym.\n\nI'd wanted to do gymnastics for a long time but between money troubles at home and a lack of self-confidence I just hadn't got up the nerve to try. I kept myself reasonably trim with a range of exercises but had never really had the money to get full access to a proper facility to find out more about what I could do and what I couldn't.\n\nI quickly got into my gear in the changing room and walked into the main gymnasium in time to see the warm ups about to begin.\n\nThe person running the club was an older guy called Rob Eriksen. He was half Norwegian and looked like a Viking. He was at least six foot four and while he was running to fat now his eyes missed nothing as he organised us all into groups.\n\nI happily settled into the routines and slowly started to fit in with the other people there, most of whom had been doing gymnastics since they were young. I got so lost in the sheer physicality of it all that it was a shock when Rob called a halt and brought us back to the floor mats for stretching exercises.\n\nThere was some good natured banter going on and I felt truly relaxed. My muscles were going to be sore as hell tomorrow though.\n\nRob walked up to my group and then crouched down beside me.\n\n\"Good to have you with us Jake.\"\n\n\"Thanks Rob, this was a lot of fun.\"\n\nHe laughed, \"I hope that you still think that as we ramp things up. Hey, today wasn't bad for a first timer. Just take it easy, OK? Rome wasn't built in a day. Same time on Wednesday?\"\n\n\"I'll be here.\"\n\nHe grinned and then moved on to talk to some of the other club members. The warm down continued and then people slowly got up and broke into groups as the session came to an end.\n\nI saw Jennifer walking over to me smiling.\n\n\"Great to see you here Jake!\"\n\n\"I'm so pleased I've finally been able to join.\"\n\n\"Well you didn't look out of place, which is quite an achievement on your first day.\"\n\n\"Really? Thank you.\" I blushed again, not used to compliments of any kind.\n\n\"How have you been since the...you know?\" I asked her, unsure about how sensitive she was about the attempted burglary.\n\nA slight grimace clouded her face briefly, \"Oh, I've been fine thanks. I can't tell you how much I appreciate you making the time like that for someone you really didn't know too well. Particularly after my mum nearly ran you over.\"\n\nI shrugged, embarrassed.\n\n\"You'd have done the same for me I'm sure.\"\n\n\"Well, I never did get to thank you properly. Why don't you come over after practice on Wednesday? We can have a pizza and we can test each other for the Biology exam.\"\n\nI somehow managed to say, \"That would be great, thank you\" with a dry mouth and many lurid visions of us together circling in my brain.\n\nShe smiled and then walked away, her leotard leaving very little to the imagination, much to my imagination's disappointment.\n\nIt was great to be able to drive home in my awesome little car though the traffic was hell as usual. I should have warmed down more than I did because just changing gears and using the clutch hurt! I dragged myself out of the Mini and headed straight for the hottest bath that I could stand.\n\nAs the water started to cool and my protesting muscles became slightly less reactive I wondered if I could use my powers on myself? I reached for a yellow thread and tried to soothe the abused muscles throughout my body.\n\nPulse.\n\nIt was an astonishing experience. I could feel every fibre of my muscles, just as if we had been studying with a live skinless model in Biology today. The pain was exquisite and yet balanced by the soothing yellow glow as my power rolled through me. I felt the nimbus surrounding me flow over, around and through my muscles, repairing the stresses that I had put them under.\n\nIt also had the unforeseen effect of giving me the biggest erection I'd ever had! I was painfully hard and I couldn't help myself. I soaped myself up and began to slowly and deliberately slide my hand up and down my cock. Pulling the foreskin down and exposing the sensitive glans I felt like I might explode at any moment. I thought of Jennifer's heavenly body and that not-quite-kiss. That was replaced by visions of Mrs Sawyer kneeling on the grass in front of me again and before I knew it I was frantically pounding away, remembering the incredible feel as my penis slid in and out of her wet, warm mouth.\n\nMy orgasm when it came caught me completely by surprise. The sheer power and volume of cum was like nothing I'd ever experienced. It went at least two feet in the air before landing back in the water and still more was coming as the images in my mind changed to a very horny Fiona and the feel of her beautiful breasts in my hands.\n\nI wallowed in an orgasmic haze for a few minutes before slowly coming to my senses. I began to slowly drag myself upright until I slowly realised that I actually felt good. Really good. Not just good, I felt revitalised. I stood up and rinsed myself off in the shower. My muscles felt fresh and I felt fantastic.\n\nI went back to my room and pulled on some clothes. As I settled into my chair I began to feel faintly uncomfortable. I couldn't get my junk into a comfortable position. I checked that they were my jeans and not my Dad's but that wasn't it. I stood up and adjusted myself again but it still felt wrong.\n\nI stepped out of the jeans and went to get a pair of sweatpants to wear when I realised that I had a more pronounced bulge than usual. I peered down into my pants and while it hadn't turned into a twelve inch monster, my dick was comfortably an inch larger than it had been!\n\nI couldn't believe my eyes.\n\nI dropped my pants and started to stroke my willing cock. It was longer and thicker than it had been before. It had heft that it certainly hadn't had up until now. I pictured Mrs Sawyer on her knees in front of me again.\n\nPulse.\n\nThere was a green tint to the pulse as a simulacrum of Mrs Sawyer as I had last seen her appeared in front of me. The Gucci t-shirt, her breasts heaving up and down. My cock sliding in and out of her mouth. It was incredible. It was still very much my hands on my cock and not her mouth but other than that she might as well have been in the room.\n\nMy cock lurched again as I pictured Jennifer as I had last seen her walking away from me in her leotard. I imagined her bending over and the leotard coming apart between her legs. Each outrageously sculpted arse cheek came into view and I moved closer behind this lifelike image of my dream girl's rear end as it waved enticingly in front of me.\n\nI imagined Celia's t-shirt being peeled off and her large tits being on display as I ploughed her mouth. And the simulacrum did exactly that.\n\nI imagined myself transferring my cock into Jennifer's tight little pussy and then Celia crawling over on her hands and knees, her tits swinging beneath her, to suck on Jennifer's pert tits. I then imagined Celia's mouth right next to Jennifer's snatch and I took turns stroking in and out of one and then ploughing into the other.\n\nIt was almost as if they were in the room with me. I was in masturbatory heaven!\n\nDespite coming earlier on it wasn't five minutes before I was set to explode again with my new and improved cock. I was just closing on the vinegar stroke when my mum knocked on the door.\n\n\"Sweetheart? Are you decent?\"\n\nMy cock twitched, right at its peak.\n\n\"Uhhhhhhh.....noooooooooo, Mum, just a minute!\"\n\nAnd I erupted all over the carpet. Rope after rope went all over the place and I nearly collapsed from the sensation.\n\n\"Well, don't be long. It's dinner time.\"\n\nI couldn't speak. I was so out of it. And the simulacrums were still there. Mouth and pussy obscenely on display and awaiting my pleasure. My cock twitched again at the sight.\n\nHurriedly I searched for and found the gossamer green threads and severed them, causing my very own fuck toys to vanish. What if I'd just left them there? Could anyone else see them? What the hell must I have just looked like? Thrusting away into thin air?\n\nWho gives a shit? It was amazing!\n\nI quickly grabbed my clothes and went to get dressed but there was cum over everything. The fucking stuff was everywhere. In desperation I put my uncomfortable jeans on, shoe horned my dick back into place and threw on a clean t-shirt before heading downstairs.\n\n= = = = = = = = = = = = = = = =\n\nThe next day of school was a bit awkward.\n\nWhen I got up most of my school uniform didn't fit me. I knew what had happened but my parents thought I'd had some kind of miracle growth spurt. I was slightly more sculpted, my neck had grown half a size, my chest was set to burst the buttons and my trousers looked like a pair of old fashioned drain pipe trousers. I had filled out!\n\nMy frustrated mother's solution was to give me one of my Dad's white shirts and then force me to wear the school jumper which is the only thing that still fitted me.\n\nSecretly I was delighted but I knew I had to be careful in the future as I knew so little about what I could do and how powerful my powers actually were.\n\nThe weather was picking up as we entered the summer term, so I took Dad's bike in to avoid the traffic madness and managed to meet up with Jamie.\n\n\"No car today then?\"\n\n\"No, it's crazy trying to get through this logjam. I love driving but not in this.\"\n\nI gestured around at the mayhem surrounding me. It might as well have been a city in Italy instead of a sleepy suburb of Basingstoke based on the amount of horns being used and road rage on display.\n\nI got off the bike and we walked the last half a mile and I told him as much as I dared about the bus crash, heavily downplaying my role in the first aid. He was suitably impressed that I'd come out of it unscathed and that two guys had invited me for a drink at the pub on the basis of how I'd handled myself.\n\n\"I'm sure they didn't mean it - you know, just being nice.\"\n\n\"Whatever man. I can't believe your luck. You'll ace this paper today too.\"\n\n\"This what?!?\"\n\n\"Oh come on. It's the first Chemistry paper today. We were revising most of last week. I assumed that's what you did after you got home from gymnastics last night...?\"\n\n\"Shit, shit, shit!\"\n\n\"You're not joking are you?\"\n\n\"No, dammit, I'm not!\"\n\n\"What the hell were you doing last night then?\"\n\n\"I...err...well...\"\n\n\"Come on man, this is me here. What's going on with you?\"\n\nAnd then inspiration struck.\n\n\"My parents are getting a divorce.\"\n\nJamie's tone changed immediately.\n\n\"Shit man, are you OK? Their timing certainly sucks.\"\n\n\"Too right.\"\n\n\"Do you want to come over to mine tonight and get away from it?\"\n\n\"Thanks Jamie but it's been weirdly cool in the house since they told me. It was just a lot to deal with last night.\"\n\nHe continued to commiserate with me all the way into school and I felt like a total fraud. I ought to be able to tell Jamie anything. He was probably the most intelligent guy in the school. He was my best friend. But how the hell could I tell him any of this?\n\nI locked up my bike and headed into the main block forgetting, after a peaceful few days, that this was usually the worst place and time for being bullied.\n\nI walked past some of the rugby morons and without Chris Waite being there they started with their predictable shit, until one of them looked at me and realised that my clothes barely fitted me.\n\n\"Poor Boy doesn't even have enough money for a school uniform!\" shouted Harry Youle pointing and laughing. The rest of them didn't seem to be particularly into it but dutifully laughed along. They always picked their moments like this. No one else was around. No one there but his idiot friends, Jamie and me.\n\n\"Ran out of hand me downs from the charity shop or did your mum not manage to get any trade last night?\"\n\nI looked back at him. At the years of mental and physical abuse that he represented. At this ridiculously cocky shit who knew that I wouldn't do anything no matter how vile he was.\n\nPULSE!\n\nA red rage surrounded me. I covered the five yards between us in the blink of an eye and hit Harry Youle so hard in the solar plexus that he slammed into the wall five feet behind him and crumpled to the floor.\n\nIt was over so quickly that people barely registered that there had been a fight. Well, a punch thrown anyway.\n\nI looked at the surrounding rugby apes, red rage in my eyes and they all backed away. I reached for a blue thread.\n\nPulse.\n\nI sent fear at the other four. Fear of reprisals, fear if they said anything, and a thought that Harry Youle deserved everything he got for being a slimy, bullying fuckwit.\n\nI maintained the links to them as we headed off down the corridor leaving Youle collapsed on the floor struggling to breath.\n\nJamie grabbed my shoulder and dragged me with him away from the scene and took us the long way round to our classroom. As we left the corridor there was a shout for help from the other end. It sounded like one of the teachers had found Youle. We got the hell out of there.\n\nI was still pretty pumped when we got to our classroom. My hand hurt like hell. The teacher got us all to sit down and all I could think of was the satisfaction of hitting Harry Youle. The exam paper landed in front of me and I tried to get my shit together. I was so angry that I could barely see straight and it was ten minutes into the exam before I picked up my pen.\n\nI realised that I could barely hold it as my hand was swollen from the violence of the punch. Thankfully this was a multiple choice paper but that's all that I could give thanks for.\n\nI hadn't been joking with Jamie. Chemistry was my worst subject and I had totally blown off the cramming that I'd planned. I hadn't planned to work that weekend. I hadn't planned to go out on a date or discover mind bending masturbation.\n\nI tried to calm down. Jamie was scribbling away two desks up from me.\n\nPulse.\n\nI reached for a purple thread and then split it in two. And then in two again. And then I pulsed to slowly move my conscious being over Jamie's head to see how he was answering the multiple choice paper.\n\nI tried to write at the same time as focus on what Jamie was doing but it gave me a headache. I tried to memorise what he was doing and then without letting go of the pulse I put down answers that mostly matched his. I then flowed back to look over his shoulder and carried on in a similar vein. I couldn't copy him completely as I'd go from a borderline B student to being a star pupil but by the end of the exam I was in pretty good shape.\n\nAnd I was mentally exhausted. It was the longest sustained use of my powers that I'd experienced and I was almost dizzy with tiredness.\n\nJamie came out of the exam agonising over one of the questions that he might have got wrong and I let him talk it through. I needed something to get me through the rest of the day and I grabbed a coke from the vending machine.\n\nMost of the rest of the day was a blur and I kept going back for sugar hits in an attempt to keep going. I certainly needed the energy and I began to understand the pressures that the Pulse put on my physical body.\n\nI made it to our final lesson but it had been replaced by an emergency assembly. This was really unusual.\n\nAssemblies were usually at the beginning of the day and they usually had a wide range of totally useless information and were delivered by the Deputy Head. A nice enough woman but pretty ineffective. But today the headmaster was there in full mortarboard regalia and a female police officer was with him.\n\nMy heart sank.\n\nA hush went around the main hall as he stood up to speak.\n\n\"Today, there was a cowardly attack on one of the members of our first fifteen rugby team. Harry Youle is in hospital with a concussion, internal bleeding and a punctured lung. Sergeant Tolbert has asked me for this assembly and I would like to assure her of my full cooperation. Sergeant?\"\n\nThe female officer stepped forward.\n\n\"We were notified today of an assault on one of the students of this school. We would like to give you all the opportunity to step forward now and help us with our investigations. If you feel intimidated by whoever did this then I don't blame you. The force used to do this indicates an incredibly powerful blow that is more often associated with a professional boxer than a school age student. Does anyone wish to say anything here and now?\"",
        "There was utter silence in the hall.\n\nThe sergeant sighed.\n\n\"I will be here for the next hour. If you would like to speak to me I will be in the school office. If you would like to talk anonymously then please call our 101 helpline. Thank you.\"\n\nI was aghast. I hated the guy's guts but internal bleeding and a punctured lung? I looked and found the threads to the other rugby players and they were all white as sheets. I reinforced that Youle was nothing but slime and that they all hated him anyway.\n\nJamie led me out of the side door and we got lost in the general rush of students all wondering what and who had happened to Harry Youle.\n\n\"Fuck, Jake! What are you going to do?\"\n\n\"Nothing,\" I said, acting more confident than I felt.\n\n\"Nothing? But those cowards will be over to tell the police it was you in about five seconds flat once no one can see them.\"\n\n\"No they won't. They all hate Youle as much as we do. And even if they did, who's going to believe that it was me? They'll just see the kid that has been bullied all his life and never once stood up to them. It's why Youle won't say a word. It's far too embarrassing. Much easier to make out that it was someone much more mysterious. Maybe a drug thing..?\"\n\n\"Who are you and what have you done with Jake? I mean it man, this isn't you. And how the hell did you hit him that hard? Not that I wouldn't have loved to do exactly the same thing.\"\n\n\"Look. All I'm doing is all I can do. Nothing. I can't change what happened by worrying and I'd do it again in a heartbeat so let's leave it and worry about the next exam.\"\n\nJamie gave me a long look.\n\n\"It was a helluva punch.\"\n\nWe both grinned at each other.\n\n\"Yeah, I'm pretty proud of it myself.\"\n\n\"So. Exams. The next one is Thursday, so cram session at mine on Wednesday night OK?\"\n\n\"Okay...oh! Err...no. I can't.\"\n\n\"You what?\"\n\n\"I...I have a date.\"\n\n\"With Fiona?\"\n\nIn desperation I nodded, feeling myself sinking deeper into my lie. No way in hell would he ever believe that Jennifer Sawyer had asked me over to her place. And how could I tell him why?\n\n\"Wow man. I know you're confident about Biology but I didn't think you were that confident.\"\n\n\"I'll be OK. I have tonight and I did OK on the test papers.\"\n\n\"OK dude. I hope that she's worth it!\"\n\nAnd so the banter continued up the hill until he headed off towards his house and I carried on to the top, barely breathing hard. It must be the gears on Dad's bike making it easier.\n\nThe evening was spent trying to focus on my Biology revision. That all went out the window when I had a knock on my bedroom door. My Mum had a huge grin on her face as she said,\n\n\"There's a Feeeyownna on the phone for you.\" She said it in a sing-song voice and I blushed as I jumped up to get down to the phone.\n\nI hadn't exactly forgotten about Fiona but it had been a busy few days. I really should have called.\n\n\"Hi, Fiona?\"\n\n\"Hi Jake,\" she sounded nervous.\n\n\"It's great to hear from you. Thanks for ringing.\"\n\nHer voice lost a little of its tightness.\n\n\"No problem. It's good to speak to you too. I just wanted to say thank you for a really nice night out on Saturday and to see...if you want to get together again sometime?\"\n\nIt all came out in a rush.\n\n\"You're very welcome. I had a great time. And yes, I'd love to meet up again. Exams have started so I'm having to study quite a bit but there's no reason that we couldn't go out for a drink or something at the weekend?\"\n\n\"I'd like that. Saturday?\"\n\n\"Definitely! Do you want me to pick you up? I finally got my mini sorted out?\"\n\n\"That would be wonderful Jake - I'd love to see it. Where do you want to go?\"\n\n\"Well there's a pub not far from me called The Four Horseshoes. I haven't been there but it's got a good reputation. Unless you'd like to go into town?\"\n\n\"No, the pub sounds great. Is eight o'clock OK?\"\n\n\"I'll be there on the dot.\"\n\n\"Then it's a date. Night Jake.\"\n\n\"Good night Fiona.\"\n\nI put the phone down in the cradle to see both my parents peering round the door from the kitchen.\n\n\"Good night Fiona!\" They chorused together.\n\nI grinned a bit embarrassed but happy inside, \"Oh grow up you two!\"\n\nI went back upstairs and daydreamed a bit before I reminded myself about my upcoming exam and managed to get focused for a couple of hours.\n\n= = = = = = = = = = = = = = = =\n\nWednesday was gymnastics club and then back to Jennifer's house. To say that I was looking forward to it was an understatement. I'd had a good night's studying but I did still worry from time to time about whether Harry Youle would say anything.\n\nBut my Dad's best ever piece of advice kept me sane as it had in the past.\n\nHe'd passed on this nugget soon after I'd started work at the garden centre. I'd made a mistake with the pallet truck and broken some stock. The boss was going to come back the next day and I was stressing madly about it, totally unable to relax. Dad sat me down on the sofa and then crouched down in front of me.\n\n\"Jake. Just stop for a minute.\"\n\n\"I can't Dad! I really might have blown this job and I really need it.\"\n\n\"Listen to me. Is there anything that you can physically do about this right now? I mean anything at all? Can I drive you up there and help you try and fix this thing?\"\n\n\"No,\" this wasn't helping. If anything I felt more despondent.\n\n\"Well if there is literally nothing you can do about it then you have to stop worrying. It's the only way to stay sane, son.\"\n\nAt the time I'd scoffed but ever since then I heard those words and they helped me a lot. I literally couldn't do anything about it. So until the worst happened I was going to carry on with my life.\n\nSo I slept well. Thankfully Mum had been out and bought some new trousers for me from the local outfitters and so I freewheeled down the hill towards school feeling pretty good about life. I met up with Jamie and we bullshitted our way down to school as usual.\n\nI did see some of the rugby guys but they looked like they were avoiding me rather than the other way around. I cannot tell you how much of a relief that is not to be worrying about who is waiting to rub your nose in the dirt every chance they get. People were beginning to treat me like a normal human being and I have to say I could get used to it.\n\nThe day was mostly uneventful until lunch time.\n\nJamie and I were hanging out near the front gates eating our packed lunches and enjoying the sunshine much like we did every day.\n\nTwo girls from our year walked up in our direction. Tina and Susan weren't part of the cool crowd but they certainly weren't at the bottom of the social heap like we were. Tina had been in possession of the largest tits in the school since she was about thirteen and as a result had been the centre of attention for a while. Susan was her best friend and while she wasn't as chesty she was a nice looking girl who had been stuck with ugly braces over her teeth for the last two years. I think they only lived a few streets down from me and we'd often been in similar classes.\n\nHaving seen them heading towards us I went back to chatting to Jamie, assuming that they were headed out of the school to go to the local One Stop for some sweets or a drink. So no one was more shocked than me when they made a beeline for the two of us.\n\n\"Hi Jake.\"\n\n\"Er...Tina. Hi.\"\n\n\"What are you guys doing?\"\n\n\"Just grabbing some lunch and trying to figure out what's going to be in tomorrow's exam.\"\n\n\"Oh right. You do Biology right? The same as Susan?\"\n\n\"Yeah, that's right.\"\n\n\"Cool. Do you guys mind if we join you?\"\n\nJamie's eyes practically bugged out throughout this exchange. As far as the unknown went, this might as well have been brain surgery for the two of us.\n\n\"Err...sure.\"\n\nThe two girls sat down, slightly too close to us. Tina by me and Susan by Jamie. Conversation was a bit stilted for a while but by the end of lunch we began to have a laugh as we all realised we were into similar music and TV shows.\n\nAs we got up to head into the afternoon's lessons we split into couples, with Tina hanging back slightly.\n\n\"So, I've been hoping to get to see Muse in concert. They're coming to the Hexagon in Reading in a couple of weeks. I bought two tickets, really excited to go and Susan's parents won't let her. I know this is a bit forward but I was wondering if you might go with me.\"\n\n\"Wow! That sounds fantastic - I'd love to see Muse. But I am sort of seeing someone.\"\n\n\"Sort of seeing someone..?\"\n\n\"Yeah. It's early days but I'm not sure...\"\n\n\"Hey, it doesn't have to be a date Jake.\" She interrupted, tossing her long hair over her shoulders and making her chest jiggle in so many enticing ways.\n\n\"I've always thought that you were pretty cool but you just didn't seem interested in talking to me. But now that I know you're into some of the same music as me I just hoped you'd come along. I know my parents would never let me go by myself and to be honest with these things,\" and she gestured at her massive mammaries, \"getting the kind of attention that they get, I'd much rather go with a guy so that I don't spend the evening telling drunk guys to piss off instead of enjoying the music.\"\n\n\"Tell you what Tina. Can you remind me of the date of the concert? Then I'll check my work rota and see if I can make it. It would be great to see Muse and if I can help you enjoy the night then that's got to be a win win right?\"\n\nShe smiled warmly and swished off back to class.\n\nJamie and Susan seemed to have been getting along pretty well too and I saw a piece of paper exchanged between the two as I caught up to them.\n\n\"See you later Jamie.\"\n\nAnd Susan trotted off to catch up with Tina. Both of them looking back over their shoulders at us and then giggling to each other as they went round the corner.\n\n\"What just happened to us?\"\n\n\"I think that Tina and Susan just...\"\n\n\"Dude, I know that but since when did hot girls like that come over and talk to us and ask us out on dates? Since the twelfth of never, that's when!\"\n\n\"Maybe she's always liked you?\"\n\n\"Maybe. Maybe the rest of the school always liked us but just hid it fucking well!\"\n\nI laughed. He did have a point.\n\n\"Honestly though, Jake. Doesn't this feel weird to you? I mean, I'm not complaining but after you've been kicked around for long enough like we have, when something like this happens I can't help feeling like it's a setup!\"\n\n\"I know what you mean,\" I said, thinking of Jennifer, and then Fiona and now Tina! What the hell was I going to do?\n\n\"So what did Tina ask you about?\"\n\n\"She wants to go and see Muse in a couple of weeks at The Hexagon.\"\n\n\"Cool. So are you going to go?\"\n\n\"I have no idea. I don't know what Fiona and I have, or if we're definitely an item but I'm seeing her on Saturday.\"\n\n\"I thought you were seeing her tonight?\"\n\n\"No...yeah, I am...err.\"\n\n\"Jake...what's going on?\"\n\n\"Man, you'd never believe me.\"\n\n\"Try me.\"\n\n\"I'm going to Jennifer Sawyer's house tonight for a pizza and to study.\"\n\n\"You're fucking what? How...why...when...?\"\n\nJamie's mouth opened and closed in amazement as he drifted off into unintelligible noises.\n\nI told him how I'd been driving past and on my way to work and seen the police lights and how I'd got dragged into help. Thankfully he believed me but was still incredulous.\n\n\"So you're trying to tell me that you are having interactions with three girls who all want a piece of Jake?\"\n\n\"I'm telling you that the last two weeks have been fucking nuts and I don't fully understand what's going on. But I really like it!\"\n\n\"No wonder you blew me off! Hey, no worries man. If I had a chance to get within arms reach of Jennifer Sawyer you wouldn't see me for dust either.\"\n\nThen his expression changed.\n\n\"We're friends though, right?\"\n\n\"Of course!\"\n\n\"Just, you know...\" and he trailed off. I responded in the only way that made sense.\n\n\"I may look like a monkey who's been put in a suit and strategically shaved but I'm not as thick as Baldrick. We're mates - always will be.\"\n\nHe smiled sheepishly and nodded. We headed off to class, swapping insults. I felt a lot better now that I could actually talk to someone about Jennifer.\n\nGymnastics that evening definitely went up a notch and I found myself dragging at the back after every exercise. I shouldn't have been surprised but I felt thoroughly frustrated having initially done well. Rob was really cool about it though.\n\n\"Jake, you're trying to keep up with people that have been training on this stuff for a long time. You have great potential but it's going to take a while. Don't be so hard on yourself. Now take a break. Ah ah! I know you don't want to but you're going to damage yourself if you keep throwing yourself at the equipment like that.\"\n\nHis grin took the sting out of his words and I ruefully sat back down to catch my breath.\n\nJust then Jennifer walked over, making me feel tongue tied without even trying.\n\n\"So are you still all set for tonight?\"\n\n\"A-Absolutely.\"\n\n\"Great. Mum is picking me up tonight. Whatever thing she usually does is off. Do you want to have a lift?\"\n\nTalk of her mother panicked me and Jennifer must have seen it in my eyes.\n\n\"I'm sure she's not going to hold any grudges about the accident. She was the one that offered when I mentioned that you'd be coming back to study with me.\"\n\n\"But I have my bike with me?\"\n\n\"Oh, I'm sure we can fit it in the back.\"\n\nWith that obviously decided in her mind she turned and headed off to the next piece of apparatus. I used my break to watch her floor routine. She wasn't the best of the gymnasts there but she had rhythm that made the routine flow so much better than the others had. As she bent down for one of her moves I immediately saw her again in my mind's eye and had to stop myself reaching for the Pulse.\n\nHow exactly would I have explained away a nude and dripping version of Jennifer appearing in the middle of the floor routine alongside the real one? My cock was already semi-hard at the prospect.\n\nI stopped myself from staring at her lithe, agile form and went back to work willing my dick to come back under control with only limited success judging by the looks that I got from some of the other female gymnasts.\n\nIt was a relief to get to the warm downs. I paid special attention to stretching out properly and then hit the showers. I'd only brought a tshirt and sweatpants as they were some of the few things that still fitted me. I was going to have to spend some actual money on clothes, and soon.\n\nJennifer met me outside and the familiar Volvo pulled up in the drop off/pick up area outside the school. Celia Sawyer stepped out of the car wearing yoga pants and a tight fitting workout top. She looked unbelievable.\n\n\"Ah there you both are. So Jake, are you getting a lift with us?\"\n\n\"Err...yes, if that's OK?\"\n\n\"Of course it is sweetie. The car is huge - just throw your bike in the back like you did those bags of manure the other day and we'll be on our way.\"\n\nJennifer looked slightly surprised.\n\n\"I helped your Mum load some manure that she'd bought at the garden centre into the car last weekend.\"\n\n\"He was such a help. He even came and helped me unload as well.\"\n\nHer eyes were sparkling as she said it.\n\nI couldn't look at either of them and after a brief awkward silence I put the bike in the boot and started to get in the back.\n\n\"Don't be silly sweetie, you're far too big to fit in the back, come and sit up front.\"\n\nBlushing even redder, I apologised and got in the passenger seat. Jennifer was looking less and less amused, making me wonder whether this wasn't the first time that this sort of thing had played out between them.\n\nWe headed back to their house with Cynthia prattling on about her workout class until Jennifer said,\n\n\"I thought that class was cancelled, which is why you could come and collect me?\"\n\n\"Oh no, dear! You must have been mistaken. They'd just changed the time so I thought that I'd drop by and save you the walk. Particularly after what happened the other week. Who knows who might be walking around the streets?\"\n\nWe got to their huge house and I managed to avoid staring at Mrs Sawyer's significant breasts too much. In truth there was an embarrassment of riches around me and I was having a hard job keeping my cock from springing to attention. I eventually had to think of Baldrick in a dress to get things back under control.\n\nWe went inside their palatial showhome of a house and headed into the kitchen. After much back and forth over the menu we ordered enough pizza to have the delivery driver wheelying most of the way here.\n\n\"How many people are coming over?\" I asked puzzled.\n\n\"Oh, it's just us. Mr Sawyer is away this week and if he's off enjoying himself somewhere then I'm damned if I'm going to cook. We can just have pizza again tomorrow.\"\n\nI nodded, unsure what was going on. It was almost as if Celia was flirting with me. It became more obvious when she stretched her arms up over her head with a sexy smile. It did the most outrageous things to her already impressive tits.\n\n\"I'm heading up for a shower. Does anyone else need one?\"\n\n\"Err...no thanks I showered after gymnastics.\"\n\nJennifer shook her head, obviously biting her tongue until her mother left the room.\n\n\"God I am so sorry about her. I can't believe how embarrassing that was.\"\n\n\"I'm sure she was just being friendly.\"\n\n\"Something like that,\" muttered Jennifer, obviously irritated and embarrassed. \"Why don't we get a drink and go through to the sitting room? Is a coke alright?\"\n\n\"Perfect, thanks.\"\n\nShe fussed around the kitchen and then we headed across the huge hallway and into the opulent sitting room. All the damage had been repaired and it was looking completely spotless. There was a full scale bar at one end with stools around it in a beautiful dark wood. At the other end there was a huge fireplace with three enormous sofas surrounding it with a large coffee table in the middle. I put down my coke on the coffee table and flopped down gracelessly, sinking into the incredible comfort of one of the sofas only to see Jennifer settle onto the adjacent one with the poise of a ballerina.\n\nThere was a slightly awkward pause.\n\n\"You didn't need to thank me with anything, you know.\"\n\n\"I know. But I wanted you to know how much I appreciated it. A lot of people would have seen the lights and just driven on. And they certainly wouldn't have spent their evening helping a traumatised girl get everything together and help her feel safe again.\"\n\nI blushed, as ever, deeply uncomfortable with praise.\n\nShe looked up from her seat on the sofa next to mine and I was shocked to see tears in her eyes.\n\n\"Jennifer, what's wrong?\"\n\n\"I don't have any friends.\"\n\n\"Don't be daft, you're one of the most popular girls in the school.\"\n\n\"It may look like that to you but they're not friends. Being popular is one thing, but I have to watch every word I say around them. Don't think I don't know that you could have spread details of our break-in all around school and made yourself out as a hero. I haven't heard a single thing from anyone and believe me when I say I would have. I had no one I trusted to call for help. Do you know what that's like?\"\n\nShe looked across at me with pleading in her eyes. I thought of Jamie and knew what a rock he was for me. I just shook my head sadly.\n\n\"If you hadn't been there and been nice enough to just check in on me I wouldn't have known who to call. And do you know why? Because it would have been all over the school in seconds with people embellishing it to say that I'd been raped or something.\"\n\nAnd she started to sob.\n\nI quickly moved over to her sofa and wrapped my arms around her and just held her. She cried quietly for a few minutes before her arms started to tighten around me.\n\n\"You give the best hugs,\" she said in a very small voice.",
        "She looked up at me and seemed to be about to kiss me when the doorbell rang.\n\n\"Pizza,\" she said.\n\n\"I know.\" And I leant down and kissed her very deliberately.\n\nThe doorbell rang again and I broke off the kiss, stood up and held out my hands. She quickly wiped her eyes, grabbed my hands and I hauled her to her feet. She rose up on her tiptoes and gave me a quick peck on the lips before rushing out of the room to get the door.\n\nI trailed behind thinking hard of Baldrick in a dress.\n\nShe took the pizzas through to the kitchen and Mrs Sawyer appeared at the top of the stairs wearing a thigh length pleated skirt and lightweight blouse that showed a lot of cleavage. She looked slightly predatory as I moved into the kitchen following Jennifer. I suddenly realised that there was still a gossamer blue thread joining the two of us. I quickly scanned for anything similar between Jennifer and myself but there was nothing there.\n\nI was about to sever the thread but my memory of that blow job was so powerful that I couldn't bring myself to do it.\n\nI found myself subjected to a not so subtle grilling about my parents, where I lived and what my future plans were as Mrs Sawyer got to know a bit more about me. This was stuff that Jennifer and I hadn't talked about and as we finished making a dent in two of the pizzas I felt more relaxed chatting to the two of them together.\n\n\"...so I hope to get the grades to go to Cambridge to study pharmaceutical science.\"\n\n\"Which reminds me,\" said Jennifer, \"we have to study for Biology and I need Jake's help.\"\n\n\"I sincerely doubt that,\" I said.\n\n\"Well before you go off studying I need Jake's expertise in the garden. I want his suggestions for planting in the new area around the pergola.\"\n\n\"Err...OK.\"\n\n\"Go and get your books set up dear, I won't delay your revision for long.\"\n\nJennifer didn't look too impressed but picked up our books and headed back to the sitting room.\n\n\"This way Jake,\" she ordered peremptorily and swinging her hips, her skirt swishing from side to side, she headed across the kitchen. I wasn't sure but I thought that I caught the scent of something musky as she led me out of the back door.\n\nWe went to the far side of the garden where, sure enough, a pergola had been erected to catch the evening sun. It was beautifully shaded by mature trees and a large rhododendron hid it from the house.\n\nWhen we arrived, I was already half-hard in my sweatpants, under no illusions about what she wanted.\n\nShe turned to me as we reached the garden bench under the pergola, and started to undo the buttons on her blouse. She unsnapped her lacy bra using the clasp at the front and her beautiful breasts were bare before me in all their glory.\n\n\"You've been so good to us Jake. I really must make it up to you.\"\n\nHer hands cupped her own breasts, fingers flicking the engorged nipples as she lifted them slightly offering them to me. I didn't need a second invitation and quickly moved over to her and sucked on her nipples. She radiated need and was gasping and sighing as I mauled her full, ripe breasts, sucking and nibbling on her hard nipples.\n\n\"Do you know how wet I've been since Jennifer told me you were coming over Jake? Feel how wet.\"\n\nAnd she grabbed one of my hands and pushed it under her skirt. My hand found her hairless pussy. With no real experience to compare it to, she certainly felt very slippery and she gasped again as I stroked around the entrance and accidentally slipped a finger inside her. Her obvious pleasure encouraged me to push deeper and to begin thrusting in and out.\n\n\"Oh God, yes Jake. But you can do better than that can't you?\"\n\nAnd she lifted my head from her breast and slid to her knees in front of me. My cock was tenting my sweatpants and she quickly pulled them down along with my underwear in one quick movement.\n\n\"My God, Jake! It's even bigger than I remember!\"\n\nAnd she thrust her mouth on to my raging hard on. I was in heaven. But only seconds later she pulled off my cock. I obviously looked slightly uncertain as she got off her knees, turned around and bent forward holding on to the back of the bench.\n\n\"Blowjobs are great I'm sure but don't you want to know what the real thing feels like?\"\n\nWith my trousers round my ankles I shuffled awkwardly into position behind her and lifted her skirt to see her well defined arse, her pink rosebud and swollen pussy lips waiting for me. With my cock already slicked up I started to push it between her folds. Watching my penis slowly sinking into the body of a woman is something that will always be incredibly erotic to me.\n\nSeeing the lips expand to accept my girth. Seeing her stretched as I eased into her body. Hearing her grunt and moan as I pushed further inside her was an unbelievable experience.\n\nThankfully she was incredibly wet and I slowly sank into her until my thighs reached her arse cheeks. I took hold of her hips firmly with my hands. I started to ease back out of her and she hissed at the sensation. I eased back in again a little more firmly. She grunted slightly and quivered as the sensations ran through her body.\n\nThen she started to push back against my cock, fucking herself against me. Her pace increased and I started to match her, the sound of our bodies coming together increasing my pleasure.\n\nAll this time she was looking over her shoulder at me, one hand pinching her nipples, the other stretched out in front holding on to the bench. Her eyes were alight with pleasure and I lost myself in the sweet feel of being inside a woman for the first time.\n\nShe made low grunts every time I thrust into her and these soon turned into moans as I began to pound her body harder. Before I knew it her whole body convulsed sending the most extraordinary sensations up and down my cock inside her.\n\nI used her hips to pull myself almost all the way out of her and then slammed in again with every ounce of power that I had and she convulsed again as I came like a skyrocket deep inside her willing cunt.\n\nShe had her mouth wide open in a sort of extended silent howl, with her eyes unfocused and slightly glazed over. I couldn't resist and pulled out of her sopping wet pussy and moved my cock into her wide open mouth.\n\nShe gagged slightly, gasping in surprise as she came to her senses. But she quickly licked and sucked our juices until my cock was clean. If I'd let her continue I would have been rock hard again but we had already been gone for ten minutes.\n\n\"Mmmm. I needed that so badly. Thank you Jake.\"\n\nI was still faintly stunned and not knowing what to say I pulled up my sweatpants and tucked my cock away again.\n\nMrs Sawyer had settled languidly on to the bench.\n\n\"Thank you for sharing your expertise, I really must make it up to you again sometime. I think I'll just stay here and enjoy the evening if you don't mind.\"\n\n\"Err...of course. Good night Mrs S..I mean Celia.\"\n\nShe didn't reply. Her hand was already dipping into her cunt and as I watched she brought more of our juices out on her fingers and sucked them clean in her mouth. I forced myself to move and headed back up the garden to the back door.\n\nJennifer was waiting in the sitting room, our books spread all over the table, looking a little downcast.\n\n\"Do you really know about plants and garden stuff?\"\n\n\"A fair bit, yes. I've worked at the garden centre for the last couple of years. You've got a great spot down there. Good soil, plenty of scope for climbing roses and some small shrubs.\"\n\n\"I'm sure we have.\"\n\n\"Are you OK, Jennifer?\"\n\n\"I'm fine.\"\n\nI looked at her hard and she had the grace to look slightly embarrassed and a little uncomfortable.\n\n\"It's silly. I'm just a bit jealous that you headed straight off with my mother, that's all.\"\n\n\"Why would you be jealous of her?\"\n\nShe got up and moved close to me, putting her hands on my chest.\n\n\"Well it -was- me that you kissed and not her last time I checked.\"\n\nI wrapped her in my arms and kissed her long and hard. We made out like that until it became obvious that our difference in height was becoming uncomfortable for her. I led her to the sofa and went to sit down beside her but she pushed me down and then straddled my thighs and leant in to kiss me.\n\nThere was no hiding my erection and from the way that she was rubbing herself against me she didn't want me to. I reached for her stunning, firm breasts. I began to cup and tease them through her top and she sighed and moaned as we kissed and made out on the sofa.\n\nI found myself unconsciously comparing them with the larger heavier breasts of her mother, and suddenly wondered what on earth I was turning into. I broke the kiss and Jennifer looked at me nervously, wondering if she'd done something wrong. I suddenly realised that the confident, popular girl that I knew from school was just a shell, hiding an inexperienced, vulnerable and unsure girl behind it.\n\n\"If we keep this up then I'm afraid there's going to be a helluva mess on this sofa.\"\n\nShe grinned, relieved and then flushed slightly as she realised what I was saying. She slowly and oh-so-sexily lifted her leg up and slowly ground her pussy down my cock a final time before settling herself beside me on the sofa. I put an arm round her and held her close.\n\n\"I'm sorry,\" she said.\n\n\"You're sorry?! What for?\"\n\n\"Getting all carried away. I don't know what people say about me but I'm not...experienced,\" that last came out in a rush, her face flushing again with embarrassment.\n\n\"You don't need to be sorry at all. It's not like I'm experienced either. It felt so good to be with you and have you on top of me like that. I was worried that I'd get more than carried away if you know what I mean.\"\n\nShe smiled sexily and caught her bottom lip in her teeth, practically making me come on the spot. I'm sure that I would have come already if not for what had happened with her mother.\n\nAnd there it was again. I was here, making out with my dream girl and I'd just screwed her mother! What was I going to do?\n\nWe both looked at each other and blushed.\n\n\"We should...\"\n\n\"I think...\"\n\nWe tripped over each other's words and smiling, she inclined her head towards the books spread over the table. I took a deep breath, smiling at her and reached for her hand before kneeling down together to try and focus on our Biology exam.\n\nJennifer was a good study partner and I was grateful that she seemed to have a grasp on the areas that I struggled with and vice versa. She was doing Biology as she needed it to study to be a veterinarian. She loved animals but her parents wouldn't hear of having pets as they might make a mess. I wondered what she'd make of our house. She'd probably feel claustrophobic in it.\n\nWe knew that we weren't going to get any further with studying that evening when we started a game of name the body part. She slowly touched different parts of her body, making me name them correctly before I could kiss them, moving slowly up to her lips. She mounted me again and began where we'd left off earlier in the evening.\n\nIt was the creak of the floorboards in the hall that warned us as Mrs Sawyer arrived to tell us that we needed to finish up. I'm sure it was obvious what had been going on but other than a knowing look and a flick of her skirt we were left to gather our things.\n\nBefore we joined her mother in the hall, she stopped me at the door.\n\n\"I really enjoyed our study session tonight.\"\n\n\"Me too.\"\n\n\"Do you think it's something that you could get used to? Being here, with me?\"\n\n\"I'd be happy being anywhere with you.\"\n\nShe kissed me hard again with her eyes shining and then we opened the door and I went to get my bike out of the car to head back home.\n\n\"See you tomorrow!\"\n\n\"You too!\"\n\nShe waved and I waved until I nearly crashed the bike. I headed home elated, horny and despairing all at the same time."
    ],
    "authorname": "golasgil",
    "tags": [
        "mf",
        "blowjob",
        "masturbation",
        "doggystyle",
        "milf"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-pulse-pt-02"
}