{
    "title": "Hadley's Other Cherry Ch. 03",
    "pages": [
        "\"Push, push, push! C'mon, push harder!\"\n\nCoach Snyder walked up and down the length of the gym mat, taking stock of her varsity gymnastics team while they finished up the stretching and conditioning portion of their work-out. Even though their season had already finished, and successfully at that, she wasn't pleased with what she saw.\n\n\"C'mon, girls! Just because you're state champions doesn't mean you get to rest on your laurels! Reach past those feet!\" She perused the front row of girls, all with their legs stretched out in front of them as they folded in half, reaching for their pointed toes. She stopped in front of one gymnast, her wiry arms tense with effort, her head cradled between her knees.\n\n\"Excellent, Hadley,\" Coach Snyder remarked. She always had a soft spot for the little hardworking, redheaded gymnast. She had been her coach for the past six years and she couldn't believe that Hadley Henderson would be graduating in a few short weeks. Time certainly flies, she thought. \"You see how Hadley isn't just reaching for her feet, but past them? You could all learn something from watching her.\" \n\nHadley's freckled cheeks flushed pink with pride and embarrassment. She was glad no one could see her face now. She concentrated on intensifying her stretch as Coach walked further down the line. \n\n\"Good. Better!\" Coach Snyder remarked. \"Okay, straddle stretch! Partner up.\"\n\nAs Hadley sat up and looked for Ginny, she clocked Serena Ackerman staring at her and whispering to another cheerleader across the mat. She raised one eyebrow at Hadley, and then whispered something else to her friend. They both giggled loudly. \n\n\"Serena! Madison! We're exercising our bodies, not our mouths,\" Coach scolded them. Serena smiled contritely at Coach Snyder and then glared at Hadley.\n\n\"Serena Ackerman is such a bitch!\" Ginny whispered to Hadley as she settled behind her and helped her ease forward into a straddle split, \"I hate that we have to share our fucking practice with those stupid cheerleaders!\" It had long been the arrangement that the varsity gymnastics and cheerleading teams at St. Quentin's Prep did joint tumbling and conditioning practice after their regular seasons ended, but it was no secret that both groups of girls did not get along. \n\n\"Everyone knows that cheerleaders are just slutty gymnasts with bad grades,\" Ginny whispered as she pressed on Hadley's back, deepening her stretch. \"I mean, they can't even bother to buy proper leotards for practice. All of them just wear skimpy sports bras and those trashy booty shorts.\" Hadley giggled then shushed her friend.\n\n\"Shhhh, Gin, they'll hear us,\" Hadley whispered, \"We'll get in trouble.\"\n\n\"I don't care if they do hear us,\" Ginny replied, flicking her ponytail off her shoulder indignantly, \"They're bitches. Serena Ackerman has been talking shit about you...\"\n\nHadley felt her heart drop to the pit of her stomach. She had managed to fly under the radar throughout all of middle and high school without incurring the wrath of the popular girls, and she had three weeks left until graduation. She wasn't about to let Serena and her band of airhead followers ruin it now.\n\n\"Serena has no reason to say anything about me, good or bad,\" Hadley reasoned, \"I haven't done anything.\"\n\n\"Wake up, Hads,\" Ginny said, \"you totally stole her boyfriend.\"\n\n\"What?\" Hadley sat up and locked eyes with her friend, \"What do you mean 'stole her boyfriend'?? Colin and I are just going to the prom together. We're not dating,\" Hadley insisted.\n\n\"Oh my God, you can be so clueless,\" Ginny sighed, \"Colin and Serena broke up and then two weeks later he asks you to the prom? You might as well be dating, because Serena doesn't see it any differently...\"\n\n\"Splits, ladies!\" Coach Snyder barked, \"This isn't social hour, Virginia.\" Ginny waited until Coach walked past her until she rolled her eyes.\n\n\"Hey! Who's side are you on?\" Hadley hissed at Ginny, as she slowly sunk into a full split. She tried to concentrate on pointing her toes instead of the sick feeling in the pit of her stomach.\n\n\"Yours, stupid! That's why I have to tell you what I heard. Serena was totally talking about you in the locker room before practice. To anyone who would listen!\" Ginny raised her arms over her head in emphasis.\n\nHadley felt a lump rising in her throat as she studied Serena across the mat. The beautiful cheerleader always wore a full face of makeup to practice, but she had to hand it to her, she was incredibly strong and flexible. Hadley watched as she stretched her long smooth legs into a split, pressing her body into the floor, then raised her arms in the air while flicking her long, perfectly highlighted ponytail over her shoulder triumphantly. Serena was wearing a skimpy but expensive pair of pink booty shorts and a matching sports bra that barely covered her round tits. The pink jewel in her pierced belly button sparkled in the middle of her tanned, toned stomach. She smirked at Hadley. \n\nHadley couldn't tell if it was the intense feeling of the jeweled butt-plug pressing deeper into her asshole as she stretched into a split, or Serena's piercing stare in her direction, but she started to blush red with indignation.\n\n\"Fine,\" she whispered to Ginny, \"After practice. Tell me then.\"\n\n********\n\n\"Okay... here we go...\" Ginny said, placing Hadley's coffee frappe in front of her carefully, trying not to spill her own. They settled into their usual booth at the back of the coffee shop. Hadley stirred her drink with her straw nervously, while Ginny scoped the room to see if anyone they knew was in earshot. When she was satisfied no one would overhear their conversation, she turned back to Hadley. \n\n\"So I was in the locker room bathroom before practice. I got sick of Madison Hayworth flashing her huge tits around, so I went to change in the stall and I overheard Serena talking shit about you... It wasn't nice.\" Her blue eyes flashed angrily.\n\n\"Jesus, Gin, just spill it already,\" Hadley spat out. She barely touched her drink except to keep swirling it with her straw. Her stomach was in knots.\n\n\"Fine. She was telling her band of blond idiots that the only reason Colin asked you to prom was because you begged him. She said that you promised to give him your virginity if he'd take you prom. And then she said some other things I won't repeat.\"\n\n\"What? But that's ludicrous!\" Hadley sputtered, the freckles on her cheeks darkening in anger. \"I'm not even...\" Hadley caught herself just in time. She had managed to keep her 42-year-old lover a secret and she wanted to keep it that way. No one knew that Jack had taken her cherry a month ago. No one, that is, but her and Jack.\n\n\"You're not even what?\" Ginny asked suspiciously.\n\n\"Nothing,\" Hadley replied quickly, becoming very interested in her drink all of a sudden.\n\n\"Okay, I thought you were hiding something, but this is too much,\" Ginny insisted, \"First you go out without me on the weekends, then you want me to cover for you in case your parents call, and you've been totally distracted, checking your cell phone for texts every few minutes, but you seem to care less that the captain of the Football Team is taking you to prom. I've tried to mind my own business but you're clearly not acting like yourself: what the hell is going on with you??\"\n\nHadley averted her gaze and stared at her hands.\n\n\"Hadley, I'm your best friend, but I swear to God, if you don't tell me what's going on right this instant, not only am I not covering for you tomorrow night, but I'm calling and telling your parents that you're out and I don't know where you went.\"\n\n\"Fine! Fine!\" Hadley conceded. \"I'll tell you! But you have to promise, and I mean cross-your-heart-hope-to-die-stick-a-needle-in-your-eye-promise that you will not breathe a word of what I tell you to anyone. Promise me!\"\n\n\"Fine, okay, I promise!\" Ginny agreed, relieved to be finally hearing the truth from her friend. Hadley didn't know where to start.\n\n\"I've... I've been seeing someone.\" Hadley confessed, her gaze on the table.\n\n\"I knew it!\" Ginny hissed, \"Who? A boy from church? ...a public school boy? ... a college boy??\" \n\n\"No, no one like that.\"\n\n\"Well, where did you meet him?\" Ginny probed, \"How come I don't know him?\"\n\n\"He's my Dad's boss.\"\n\nGinny sat in a shocked silence for what felt like minutes. \"What. The. Fuck. Hads. Your Dad's boss?? He's gotta be old... he's gotta be...\"\n\n\"He's forty-two,\" Hadley whispered, \"His name is Jack.\"\n\n\"Oh my God, Hadley, that's sick... he could literally be your father. Is he married??\"\n\n\"No, no... actually, he's divorced.\" Hadley admitted, blushing. \n\n\"Oh Jeez, that's perfect. And what if your parents find out? You're not like... doing it... with this guy, are you??\" Ginny's eyes bulged wide. She couldn't believe her quiet, shy, innocent friend was telling her this. Hadley met her gaze and nodded slowly.\n\n\"Jesus Christ,\" Ginny said, clearly in shock, \"you lost your virginity to your Dad's boss...?? He must be a total sicko...\"\n\n\"It's not like that, Ginny,\" Hadley snapped, \"This is why I didn't want to tell you...\"\n\n\"Fine, fine, I'm sorry...\" Ginny retorted apologetically, \"So he's... nice?\"\n\n\"He's really nice. And he's super sweet to me. It's not like you think... he makes me feel grown up. And he's super charming and handsome and experienced. He's taught me so much...\" Hadley could feel herself blushing, thinking about all the times he's coaxed a toe-curling orgasm from her tiny body, making her shudder and squeal under his expert touch. \n\n\"Wow...\" said Ginny, still absorbing all of this, \"So does he have a nice... you know...?\" Ginny winked and held out her pointer finger to indicate which body part she was referring to. Hadley laughed and slapped her hand away.\n\n\"It's very nice,\" she offered. \n\n\"I can't believe you lost your virginity before me,\" Ginny said mournfully, \"I'm a bit jealous. I always thought I'd be first...\"\n\n\"Me too, Gin,\" Hadley said quietly, \"But you know, it's not a contest...\"\n\n\"I know,\" Ginny sighed, \"God, you're such a dirty bird! Forty-two? I hope he's hot!\" Hadley just smiled to herself. \"For God's sake, Hads, what are you going to do? You're still going to go to the prom with Colin, right?\"\n\n\"I don't know...\" Hadley said, furrowing her brow, \"I don't actually feel like it. Besides, it seems like it's been causing nothing but trouble anyway. Maybe I should just skip prom.\"\n\n\"You can't do that!\" Ginny exclaimed, \"It's too late to back out now, prom's next weekend, the limo's rented, you have your dress... and besides, you'll make Colin super angry if you stand him up! You can't miss prom! We've been planning this for years!\"\n\n\"Fine,\" Hadley agreed, but she was still not entirely convinced this was a good idea. Oh well, she thought to herself, it seems like it means a whole lot more to Ginny than it does to me. I can't let her down. \"So what about you, Ginny? You still thinking about doing it with Ted?\" \n\nGinny nodded as she sipped her drink happily, \"Prom night's the night!\"\n\nIt certainly is, Hadley thought to herself. Inside her panties her stretched rosebud throbbed around the metal plug.\n\n**********\n\nJack was in an amazing mood that day. \n\nHe'd just gotten off the phone with his decorator. He had ordered all new furniture for his brand new apartment and the last of it, a $10,000 white leather headboard he had commissioned for his brand-new bed, had arrived that morning. It was looking like he would finally be checking out of the hotel suite which had been his home for the past 2 months and moving into his new place tonight. He felt like celebrating.\n\n\"Have Marie hold all my calls, Scarlett,\" Jack ducked out of his executive suite and nodded to his young, nubile secretary. \"And come in and take a memo.\"\n\n\"Take a memo\" had long been his code that he wanted to fuck any and all of her tight holes ASAP, and even in the rare case that he actually wanted her to take a memo, he usually found himself craving her lips around his cock afterwards anyway. Scarlett smiled slyly, nodded and walked over to the receptionist before letting herself into his office. \n\nAs soon as she walked through the door, she gasped as Jack gripped her by the back of the neck and bent her over his leather couch. He pushed her tight pencil skirt up past her hips, exposing her juicy heart-shaped ass, her meaty pussy lips barely concealed by a bright green lace g-string. Jack pulled the thong to the side, exposing the brown crinkle of her anus and knelt behind her as began lapping at her backdoor like a hungry dog.\n\nJack got lost in eating her ass and pussy for a few minutes, contented to feel her fleshy ass closing in around his face. Scarlett groaned and moaned and ground her booty into her boss' face, enjoying every second of his thorough tongue-reaming. \n\nSoon Jack's tongue managed to push past the slackening ring of her rosebud and he started fucking her opening with his tongue. She smelled earthy, like soap and sweat and the musky perfume of her juicy snatch and Jack groaned in pleasure, savoring the taste. His prick hardened and grew as he ate her. After a few minutes he pulled away and pulled himself to his feet: he needed to fuck that dirty asshole.\n\nHe straightened up to remove his shirt and tie and turned to lock the door to his executive suite. Scarlett laid back on the couch while Jack walked over to his desk and retrieved the lube. She peeled her panties off and dangled her ass off the edge of the couch, her red-painted toes wiggling in anticipation. \n\nSlowly coating his mammoth cock with lube, Jack stood over Scarlett and examined her exposed pussy and asshole. Ever since Hadley came into his life, he had lost his taste for any other pussy but hers, preferring to take Scarlett's ass when the inclination arose. He didn't even have to ask her anymore, Scarlett just offered her ass to him first. \n\nSure enough, as soon as Jack squirted some lube on his finger Scarlett grabbed her ankles and held them up and back, exposing her brown eye to Jack's ministrations. She pushed out with her muscles, and Jack easily probed her butthole with his lubed fingers, preparing her for the imminent invasion of her ass.\n\nJack withdrew his greasy digits and lined up the bloated head of his fat dick with her open asshole. As soon as he pushed against her brown eye, it gave way, opening itself to his thick tool. Jack clenched his teeth, slowly sinking into the liquid heat of her ass, as it squeezed his cock like a warm, wet fist.\n\nHe grabbed her ankles as he fucked her, pushing them up and back to give himself an unobstructed view of her tight butthole stretched around his shaft. He humped her faster, gaining a steady rhythm, his heavy balls slapping against her as he fucked in and out of her slick chute. Scarlett reached a manicured finger between her glistening pussy lips and played with her swollen clit contentedly while he boned her ass.\n\nAfter a few minutes of solid assfucking, Scarlett came hard, liquid gushing from her empty pussy. It dripped down her meaty lips to her straining bootyhole and onto his pistoning cock, lubing the shaft as he fucked in and out. Scarlett was the only woman he had fucked who could squirt just from anal sex, and to think just six months prior she had been an anal virgin...\n\n\"Hold that ass open,\" he instructed her. She reached down and spread her fleshy cheeks wide from below. Jack pulled out to admire his handiwork. Even without his thick member stretching her open, her asshole gaped wide, a dark \"o\" waiting to be impaled on his dick. \n\nJack inserted his meaty tool again, this time just the tip. He teased her winking anus with the head of his cock for awhile, her tight ring suckling on the bloated tip like a small mouth. Jack reached down and massaged her sticky pussy while he fucked her in earnest, sliding into her slippery rectum again and again.\n\nScarlett's fat nipples pressed against the silk of her blouse, straining against the fabric in two hard points as her huge jugs wobbled back and forth. The bitch isn't even wearing a bra but somehow I feel nothing... Jack thought. He could feel his hard-on waning, and he humped her harder, gritting his teeth in determination. My cock cannot fail me now...\n\nAs had been his habit of late, he closed his eyes and thought about Hadley: her lithe teenage body, her innocent face with the upturned nose dappled with freckles, the lush cherubic mouth, the almond-shaped green cat eyes, the pale creamy skin of her flat tummy, her smooth graceful legs, the chubby lips of her sweet teenaged pussy, her little round ass, and the light pink rosebud between those round cheeks. In just a week that hole would be his for the taking. He imagined sliding his lubed up prick into Hadley's untouched virgin ass...\n\nThe thought was too much to bear. Jack came with a groan, pulling out of his sweaty secretary's butt, and nutting all over her open ass and pussy. Her soaking snatch was bathed in his pearlescent cum as he emptied his balls in a series of short shuddering spasms. Jack squeezed the last drop from the tip of his spent peter and let it drip from his foreskin onto her pink lips and down her ass crack, wetting the already sopping leather below.\n\nHe suddenly felt incredibly uneasy. And guilty.\n\nJack stood up and staggered toward the window to catch his breath. Why was he feeling so guilty?? His whole life, even while he was married, when the opportunity arose to fuck a beautiful woman he took it, and never felt guilty afterwards. What was wrong with him?\n\n\"Thanks, Scarlett...\" Jack whispered hoarsely as he hurriedly put away his shrinking schlong and zipped up his trousers. He grabbed his shirt from the chair and proceeded to dress himself. He turned away from Scarlett as she reached for a box of tissues to stem the flow of his jism onto the upholstery. \n\nGet yourself together, man, he said to himself. He thought about Hadley's trusting face looking up at him and he felt sick. He needed to get out of there, to clear his head.\n\n\"I'm going out for a bit, Scarlett,\" Jack said distractedly, \"Take a long lunch for yourself and I'll be back later.\" Scarlett nodded, studying her handsome boss as he practically rushed out of the room. She sat by herself in his office for a few minutes and cleaned herself up. While she wiped the remainder of his sperm from her abused pooper with a handful of tissues, she couldn't help but wonder: what's up with him? \n\n*******\n\nAfter a long swim, a quick run on the treadmill, fifteen minutes sweating in the sauna, and a cold shower, Jack started to feel more human again. \n\n\"Bye, Mr. Cummings!\" Becky, the blond gym receptionist waved after him, winking slyly at him as he walked past her. \"See you again soon!\" She leaned forward and her fake, tanned tits strained at the fabric of her black sports bra. \n\nShe had been eyeing him since she started working there and Jack finally gave in to her flirtations one day after work a few months ago. Becky had wandered into the men's locker room with some pretense of refilling the towels and caught sight of Jack's huge, flaccid meat in the shower. After she locked the door and joined him under the warm water, she knelt down and fellated him expertly to his full size until he lifted her up and fucked her up against the shower wall. She had cooed and babbled as he rammed into her tight meaty snatch, moaning in his ear how he was the biggest and best dick she'd ever had. \n\nHe immediately felt sick again. He managed to mumble his goodbye and rushed out of the gym, practically slamming into two women entering the gym as he left. He uttered a quick apology and stepped out onto the sidewalk into the blinding sun. He didn't know where he was going but he started walking. \n\nHe didn't know what was wrong with him. He was going to see Hadley tomorrow night and he wanted to be unemotional and in control when he saw her. She wouldn't understand if he behaved this way: she was eighteen, but so innocent in so many ways... He was her first, yes, but she was young, beautiful: she could have any man she wanted. What did she want with an older guy like him anyway? If he betrayed any weakness, she would drop him as fast as he had dropped any number of the women he had been with... Kick him to the curb and move on to someone else...",
        "The realization hit him like a ton of bricks: he was in love with her. \n\nHe wasn't sure how it had happened, things started much in the same way all of his affairs had. Jack was confident, powerful, used to taking what he wanted, but somewhere along the line he had started to genuinely care about Hadley. Not just care about her: love her. He had always told himself he had loved Vivienne, his now ex-wife, but now it dawned on him that he had simply felt the same way towards her as he had felt towards his car, his fancy suits, their house, any of his valuable possessions: pride, satisfaction, attachment, but not actual love. He was never worried about losing her because he knew he could always replace her if need be. Their recent divorce was painful because it wounded his pride and his wallet, but it had been more of an inconvenience than it had been a heartbreak. But Hadley...\n\nHe thought about the way her green eyes sparkled with mischief, the way they watched him, taking in every movement, the way they betrayed so much intelligence and sensitivity and trust... He had no idea how she would react if she knew he fucked other women besides her, but that thought seemed moot now. It seemed that all of a sudden he had lost his taste for other women. Little more than a month ago he barely knew she existed and now he couldn't imagine what he would do without her. \n\nHe was in big trouble.\n\nThis feeling of vulnerability was new to him and he wasn't sure how to handle it. He thought as he walked down the sunny boulevard downtown: when he was pursuing a woman in the past he usually won her over with gifts and attention, at least that's what did it for his ex-wife. What else did he offer besides his big cock, his handsome face and his money? He shook off his sour mood and formulated a plan. \n\nBut first, he would stop and buy that sparkly bracelet he spied in the boutique window in front of him. He felt like he owed Scarlett a present to thank her for putting up with him the past few months. She deserved better and after today he was not going to touch her again.\n\n********\n\nHadley had been in a rotten mood ever since she had gotten home. Even her father had taken note of her sour face, but decided not to say anything. It was unlike his sweet Hadley to scowl her way through dinner but Harvey guessed that teenagers will just be teenagers sometimes and he tiptoed around it while they ate their dinner in silence. His wife didn't get the memo.\n\n\"You excited for prom, dear?\" Tricia asked eagerly, spooning string beans onto everyone's plate. \"That Colin is such a handsome boy...\"\n\n\"Yeah...\" Hadley said absently, pushing food around on her plate with her fork. Colin Flynn was easily the handsomest boy in her class but she had barely talked to him since third grade. The only thing she knew about him was he had been Serena Ackerman's boyfriend for practically all of high school, and they were like teen royalty at St. Quentin's. She was beginning to wonder what he wanted with her. And if it was worth the trouble... Her mother snapped her out of her reverie yet again.\n\n\"I've made an appointment with my hair stylist for you and Virginia for Saturday morning. Then I can pick you both up and bring you home. You two still planning on getting ready here?\" Tricia asked hopefully. She couldn't believe her only child was about to go to her senior prom, and she wanted to document the entire day. It felt like only yesterday she was pushing her little Hadley in the swings at the playground. She felt herself getting a little misty thinking about the fact that her baby was all grown up and headed off to college in the Fall.\n\n\"Yes, I think so,\" Hadley said, sighing. She wasn't behaving like a giddy senior, Tricia thought. Back when she was a senior and dating Harvey Henderson she couldn't stop smiling the whole month of the prom. Times are different, she thought with a shrug.\n\n\"You make sure you finish all that dinner, Hadley Patricia,\" Tricia scolded her, visibly worried. \"I just picked up your dress from the tailor's and he said he's been swamped all week with prom dresses. It's too late to get more alterations done if your gown is swimming on you.\" It wasn't like Hadley not to eat after practice.\n\n\"Can I be excused?\" Hadley asked her father. Harvey slowly nodded. Hadley took her full plate to the kitchen and stalked upstairs. When she was out of earshot, Tricia turned to her husband and sighed.\n\n\"I just don't know what's gotten into her,\" she confided.\n\n\"Now, Tricia, let her be. She must have a lot on her mind. Please pass me some more of those beans, they're delicious, dear.\"\n\nUpstairs in her room, Hadley peeled off her uniform and jumped in the shower. She lathered her tiny breasts and armpits. As she sudsed up her pussy, she couldn't help but graze a finger or two over her plugged backdoor.\n\nShe grunted, bearing down slightly as she pulled the heavy metal plug from her gripping ass. She rinsed it off and set it on the edge of the tub while she finished cleaning herself. When she ran her fingers over her stretched rosebud it felt strange, slightly looser. She shivered in satisfaction and stepped out of the shower. \n\nShe bent over in front of the full-length mirror and pulled her naked butt cheeks apart to inspect the hole between them. It was still small and pink but much to Hadley's satisfaction, it gaped ever so slightly when she pulled her cheeks open. \n\nShe straightened up, fishing a jar of Vaseline out of the medicine cabinet and lubing up her butt plug with it, slowly reinserted it into her tiny asshole. She moaned as she felt it slide into place. \n\nBack in her room, she put on a pair of pink booty shorts and a tank top. As was her habit, she settled herself down on the carpet and stretched again while she did her homework. She opened her legs wide into a straddle split, pointing her toes as she leaned forward and typed on her laptop. \n\nShe quickly entered the parental control password, and then typed in \"tips for having anal sex first time.\" Message boards and advice columns popped up and she perused them greedily. Most of them advocated going slow, using lots of lube and doing a quick rinse of the orifice before engaging in anal play, so as to avoid any unexpected messiness. \n\nThe plug in her ass felt good, as good as her legs felt while she stretched them. Her asshole throbbed thinking about what it would be like to take Jack's big cock up her ass instead. She was no stranger to stretching and training her body to accomplish difficult physical feats, the satisfaction she felt when she accomplished bigger and better tricks was always the reward to her. And in a week all of the training she had spent stretching her asshole would be worth it as she would no longer be an anal virgin...\n\nShe looked up at her prom dress where her mom had put it, hanging from the door jam in a clear plastic garment bag. As soon as Hadley had tried on the floor-length strapless gown she knew it was the one. She remembered begging and begging her Mom to buy it for her until she caved. It was easily the most expensive garment she owned, but as soon as she put it on she had felt like a princess, the way the blush-colored chiffon floated around her when she twirled in the mirror.\n\nHadley smiled to herself. Next Saturday, she would feel like a princess. But not because Colin Flynn was taking her to the prom, and not because she was going to put on that dress. It was because Jack Cummings was going to be taking it off of her.\n\nJust then her phone buzzed with a text message. She went over to retrieve it and smiled at her new message:\n\nSweet Hadley: tomorrow night we christen my new apartment. Meet me at 5pm, 1501 Market Street, Penthouse Apartment. Yours, J\n\n**********\n\nAs Hadley walked through the lush lobby of 1501 Market Street, her breath caught in her throat. As soon as she mentioned the Penthouse, the doorman had waved her past him to a luxurious private elevator. She shivered as the door opened and she stepped inside.\n\nThe whole elevator was covered in mirrors and she studied her face and form as the elevator climbed higher and higher to the top floor. She had changed into a flirty short floral sundress after school and brushed her long straight strawberry blonde hair until it gleamed, shining and falling loose to her tiny waist. \n\nNaughtily, she lifted the back hem of her dress and caught a glimpse of her round ass in her thong. She smiled in satisfaction. \n\nJust then the doors dinged and opened and Hadley quickly dropped the back of her dress and stepped inside the most beautiful apartment she had ever seen. The penthouse was an open-plan duplex with floor-to-ceiling windows looking out onto the downtown skyline. The bottom floor had a living room, kitchen and dining area, and a modern glass and steel staircase led upstairs to the lofted bedroom. The entire apartment was decorated in a clean, modern style, looking simultaneously very opulent and very masculine at once.\n\nJack was waiting for her as she stepped out of the elevator and watched her with delight as her jaw dropped in surprise and awe. He went to her and taking her in his arms, pressed her tiny body against his. He leaned down and kissed her soft lips, which somehow always seemed to taste like strawberries.\n\n\"Hello, sweet thing,\" he whispered into her ear, enjoying the silken feel of her hair under his fingertips. \"Welcome to my new home.\"\n\n\"Jack... I don't know what to say... It's beautiful...\" Hadley looked up at Jack, her green eyes shining in wonder. \n\n\"Thank you, my dear,\" he replied, pleased with her reaction, \"Let me give you the tour...\"\n\nHe took her by the hand and showed her the downstairs, which she cooed over, delighted: the kitchen with its steel counters and modern state-of-the-art appliances, the luxurious leather couches in the living room, the blue-tiled bathroom with the jacuzzi tub, the glittering panoramic view of the city below.\n\n\"...and now for the best part: the bedroom,\" Jack said, winking as he took her hand and led her up the staircase to the loft above. Hadley gasped when she saw it.\n\nThe lofted bedroom was all white, furnished in the most luxurious materials she had ever seen. A soft white fur rug covered the center of the floor, and a modern white chandelier hung from the high ceiling. In the center of the room stood a king-sized bed with a headboard all upholstered in white leather. The luxurious white sheets and soft down comforter gleamed, completing the soft opulence of the room.\n\nHadley was speechless. She walked over to the bed and ran her fingers over the 1000-thread-count Italian sheets and purred in pleasure. Jack came up behind her, hoisting her lower half onto the bed so she was kneeling on all fours. He lifted her sundress and peeled down her thong to expose the object of his desire. \n\nHadley lay her cheek against the soft white comforter and let out a soft gasp as Jack proceeded to eat her pussy from behind. He lapped and slurped audibly as he licked up along the delicious split of her wet labia until he reached her tight plugged asshole. He groaned as he circled the tiny orifice with his tongue.\n\n\"Hadley...\" Jack moaned, his face covered with her sweet teenaged nectar, as he toyed with the plug in her ass, \"you're such a good girl...\" Hadley shuddered and moaned in response. Jack tongue-fucked her wet, pink pussy like a man-possessed. Soon his ministrations sent her over the edge. Hadley cried out as she came, backing her weeping snatch into his face again and again.\n\nSatisfied, Jack stood up and watched her come down from her orgasm. Her cheeks flushed pink with pleasure and her face glowed. He ran a hand over her soft bottom and patted it gently, then held his hand out to help her up. \"Come with me, baby,\" he whispered, \"I have another surprise for you...\"\n\n************\n\nAfter the new mayor had been elected ten years ago, there were only two sex shops left in town: a seedy emporium off the highway that attracted both sketchy types and squealing bachelorettes in equal measure, and an expensive high-end French boutique downtown that specialized in importing both expensive sex toys and fancy lingerie. Sebastien Leclerc owned the latter, and prided himself on the discretion he provided his clientele, most of whom were very wealthy and enjoyed their privacy. As a gay Frenchman in a busy but small American city, Sebastien understood the need for privacy.\n\nJack Cummings had been one of his best clients over the years, and so when he called earlier in the day, asking if he would close the shop for a private viewing, Sebastien agreed, no questions asked. \n\nIf Sebastien was shocked at the age of Jack's young companion he didn't not show it. The well-coiffed and handsome Frenchman didn't betray a reaction as he opened the private entrance for his best client and the very young lady who accompanied him. \n\n\"Bienvenue, Monsieur Cummings... Mademoiselle...\" Sebastien said warmly, nodding his head in welcome, \"Please, come inside.\" \n\nHadley had never noticed this store before, and she certainly would never had guessed what the interior looked like from outside. She stared around her in wonder, the red velvet chaise lounges and glass display cases lit by the glow of the exquisite crystal chandelier in the center of the otherwise dark room.\n\nSebastien nodded to his assistant, Nathalie, and she disappeared behind a curtain to tend to something as Sebastien led Jack and Hadley through a door into a private room. The room was just as opulent as the main shop: the walls were covered in dark, swirling baroque wall paper, flecked with gold accents, the carpet was lush, much like the fur rug in Jack's new bedroom, and in the center of the room was a wine-colored velvet tufted fainting couch. To either side of the couch were ornate wooden end tables and opposite from the couch was what looked like a mirrored changing area with a small velvet stool and fenced in with an ornate carved wooden privacy screen. The whole room was lit with gold and crystal sconces, that let off a dim glow. \n\n\"Sil-vous-plait, Mademoiselle, Monsieur, make yourself at home. Nathalie will be right in with refreshments, and I will return shortly.\" Sebastien turned to go and find his assistant and leave his clients to sit in private for a minute. \n\nAs soon as he left, Hadley turned to Jack. \"Jack, what kind of store is this? I've never seen anything like this before.\" Jack smiled at her innocence and obvious inexperience. \n\n\"It's a high-end sex shop, sweet girl.\" He watched her eyes widen. \"They sell all sorts of delightful toys and clothing all the way from Paris.\"\n\nJust then, Nathalie entered carrying a small tray with delicate chocolates and two Champagne flutes. In one, was champagne, in the other, sparkling pink cider. Nathalie was no fool, and knew this girl could be no older than nineteen, and while she knew that it was perfectly legal for a man in his forties to sleep with a young woman of 18, it wasn't legal to serve her alcohol. Nathalie chuckled to herself thinking about it: in France such moral inconsistencies were seen as idiotic.\n\nSebastien soon joined them, and thanking Nathalie, turned to Jack and asked him in French how he could be of service. Hadley was shocked to hear Jack make his reply in French, but had no idea what he was saying. She smiled as she sipped her drink, feeling slightly self-conscious as Sebastian studied her. Then he nodded to Nathalie.\n\n\"We have some brand-new items from Paris that will be quite suitable,\" he finally replied. He turned to his assistant and instructed her in French, \"Nathalie, please bring out the Coquette Collection from the back store room. She looks to be 72 centimeters in the hips, 56 in the waist. A-cup. Thank you.\" Hadley watched Sebastien wave Nathalie into the other room, and then within minutes she had returned, her arms filled with sheer, lacy lingerie. \n\n\"Follow me, Mademoiselle,\" she said to Hadley, as Jack settled himself on the couch. Hadley followed Nathalie behind the privacy screen, where she watched the woman hang the fancy, expensive lingerie on the wall hooks in a very deliberate, business-like manner. When she finished she turned to Hadley and said, \"Please disrobe, Mademoiselle, I will return momentarily. May I ask, what is your shoe size? You seem to be about a six or a six and a half.\"\n\nHadley was stunned. \"Yes, six and a half... How did you know that?\" \n\nNathalie shrugged and turned to go. \"It is my job to notice these things.\"\n\nBehind the screen, Hadley could see the outline of Jack's form as he sat on the couch. She wondered if he could see hers as she slowly lifted her sundress over her head. She hadn't worn a bra, and she became suddenly self-conscious as she stood there naked except for her thong. When Nathalie returned, she immediately moved to cover her tiny nipples with her arms. \n\n\"No need for modesty, my dear,\" Nathalie said, \"Sebastien and I, we have seen it all. Now please take off your panties and put this on please.\" She held out a tiny flesh-colored g-string, which Hadley bashfully stepped into. If Nathalie noticed the small jeweled butt plug, she didn't say a word. Nathalie immediately pulled the first outfit from the wall and proceeded to help Hadley into it. \n\nThe first outfit was a delicate sheer strapless bra and panty set, made of pale green mesh and lace and trimmed with matching bows. The color of the luxurious lingerie offset the green of her eyes. After she dressed her in the lingerie, Nathalie held out a pair of gold heels for Hadley. \"It helps to display your natural assets,\" Nathalie said with a sly smile, \"Go show him.\"\n\nWhen Hadley had slipped on the shoes, she shyly peeked around the edge of the screen. Her long hair formed a shining barrier, obscuring her young body. She tossed her hair over her shoulder and watched her lover peruse her body. Jack felt his breath catch in the back of his throat.\n\n\"Que pensez-vous, Monsieur?\" Nathalie inquired from behind the screen, already knowing that if he had eyes in his head this would please him greatly.\n\n\"C'est magnifique, Nathalie... Superb,\" Jack replied, not once taking his eyes from her enticing form. \"Do you like it, Hadley?\"\n\nOther than her prom dress, Hadley had never worn anything so fine or expensive. \"Jack, it's the most beautiful thing I've ever seen,\" she whispered.\n\n\"You're the most beautiful thing I've ever seen,\" Jack replied, smiling up at her.\n\n\"If Monsieur likes this set, then I have something that will knock your socks off,\" Nathalie said dryly in her French accent. \"Come here, Mademoiselle, I have another outfit for you to try.\"\n\nHadley disappeared behind the screen with a giggle, and Nathalie quickly disrobed her. Hadley gasped when Nathalie's hands brushed against her sensitive nipples. She felt them stiffening in the cool air and reached up to cover them with her arms. \n\n\"It is nothing, Mademoiselle, do not be shy,\" Nathalie said chuckling wryly, \"As I have said, I have seen everything.\" She turned around to select the next outfit.\n\nSebastien came back inside to check on his client. He placed a hand on Jack's shoulder. \"And how is it going in here, Monsieur?\" he asked him. \"Everything to your liking?\"\n\n\"Just beautiful, thank you, Sebastian,\" Jack replied with a smile. \"You always have the best, my friend.\"\n\n\"Nathalie, try the Harlequin set on the young lady,\" Sebastien called to his assistant behind the screen, \"I think Monsieur will be very pleased to see it.\"\n\n\"You read my mind, exactly,\" Nathalie called back, \"I was just about to try it.\"\n\n\"I'll leave you to it, then,\" Sebastien replied with a smile, \"I see you're in good hands. I'm going to go find the special item you ordered last week and wrap it for you. Let me know if you require anything further.\" Sebastien bowed politely and left the room.",
        "\"Now, Mademoiselle,\" Nathalie said, \"For this set you must take off the modesty underpants.\" Hadley blushed as she slid the tiny g-string down and stepped out of it carefully. Nathalie smiled at her. \"You have a beautiful body, my dear, don't be shy. This will really get him going, I guarantee it.\"\n\nNathalie handed Hadley a pair of pink satin panties trimmed with black mesh and lace. Hadley thought they seemed pretty normal until she noticed a big hole where the crotch should be. Hadley gasped, \"But... but... these have no...they're open...\" she blushed bright pink.\n\n\"Exactement,\" Nathalie replied with a wicked smile, \"Put them on, trust me.\"\n\nHadley gingerly stepped into the panties and pulled them up. She caught sight of herself in the mirror and immediately blushed. The panties seemed fancy and ornate with their lace and satin and bows, but they did nothing to cover her puffy pussy lips, which were left exposed, framed by only a thin strip of black lace. \n\nNathalie then dressed her in the matching bra, a black mesh underwire bra with a bow in the center. The cup part of the bra was so low-cut it went under her small breasts, lifting them slightly but doing nothing to cover her teacup-sized tits or her pointy pink nipples.\n\nAfter she had adjusted the straps, Nathalie stepped out from behind the screen and excused herself. \"I must go help Sebastien with something in the stock room, if you will excuse me. Should you require anything, please ring the intercom and I will return.\" \n\nHadley thought it was odd that Nathalie would be leaving now, but Jack just nodded. He knew Sebastien had trained his employees in the utmost of discretion. She obviously had felt that this outfit might require a private moment for him and his young lover. Jack smiled as Nathalie quietly closed the door behind herself.\n\n\"Are you hiding from me, Hadley?\" Jack called to her behind the screen, amused, \"Come out so I can see you.\"\n\nSlowly, Hadley peered from around the screen. She didn't know why she felt so shy all of a sudden. Jack had seen her naked many times, but somehow this lingerie made her feel more exposed. \n\nThe look on Jack's face when he saw her emboldened her slightly. She lifted her arms over her head and posed for him, showing off her graceful, lithe body for him. The high heels accentuated her petite frame, lifting her tiny tits and round ass. Jack drank in the lush sight of this teenaged goddess exposing her most private parts to his hungry gaze. His cock stiffened immediately in reaction. \n\nHe licked his lips as his eyes traveled up and down her young body: her small perky tits topped with mouth-watering little pink nipples, the milky white skin of her flat stomach, her toned smooth thighs, and the chubby bare pussy lips peeking out of the black mesh panties below. \"Hadley, I'm... speechless,\" Jack told her, smiling. He beckoned to her with his finger, \"Come closer please...\"\n\nHadley giggled and she shyly teetered over to him in her gold heels. When she was about a foot away from him, Jack reached forward and grabbing the pliant flesh of her round bum, pulled her exposed pussy towards his face, planting his own lips on the fleshy split between her legs.\n\nHadley moaned as she felt his tongue snaking between her nether lips, seeking out her clitoris. Jack pulled his head back and studied her sweet teenaged pussy, the lips now wet with his spit. \"So beautiful...\" he moaned, \"So fucking beautiful...\"\n\nHe pulled Hadley to him and she climbed onto his lap, straddling his hips until her pussy was grinding into him. She could feel his thick charger stiffening through the thin fabric of his suit pants. Jack kissed her soft mouth, lifting her slightly so he could free his now hard erection from the confines of his pants. \n\nHolding his fully erect cock upright, he parted her wet lips with the swollen head, using the leaking tip of his rod to tease her little sensitive clit. He kissed and bit at her lips as she wrapped her arms around his shoulders, her long silky hair forming a curtain around them. She helped him remove his clothes as she continued to grind on his fat tool, lubing the head with her juices.\n\nHe growled low in his throat as he wrapped his arms under her thighs and stood, lifting her light body as if she were no heavier than a rag doll. His strong hands palmed the round globes of her ass as he slowly impaled her on his thick erection. \n\nHadley had to bite her lip to keep from crying out, the sensation of his mammoth meat stretching her open and displacing the plug in her asshole was almost too much. She felt light-headed. Jack held Hadley's petite body up against the wall as he bounced her on his cock, his muscular buttocks clenching and unclenching as he thrust into her again and again.\n\n\"Such a sweet... tight... little pussy...\" Jack grunted in her ear, \"So beautiful and so sweet... it feels so amazing wrapped around my cock...You like my big meat stretching your pussy, baby?\"\n\n\"Yes, yes, yes... l love it... I love it... I love it...\" Hadley whispered, practically chanting it over and over again as he held her and fucked her against the wall. \n\nAfter a few minutes, Jack slowly lowered her to her tiptoes, groaning as his slippery fat dick slid out of her wet little cunt with a plop. He took her by the hand and led her over to the full-length mirror. He turned her around so her round little backside was pressed against his erection. He brushed her sweaty hair away from her neck and whispered in her ear, \"Come here, baby. I want you to see how beautiful your sweet pussy looks while I'm fucking you...\"\n\nHe wrapped her arm over his shoulder and lifting her legs up from underneath her thighs, he hoisted her tiny body into the air again. Hadley looked between her splayed legs at her swollen shiny pussy lips in the mirror, framed by the black lace of her crotchless panties, as Jack lined up his glistening knob with her vaginal opening and slowly impaled her on his shaft again.\n\nHadley was mesmerized by the sight of his huge dick, shiny with her juices, splitting her chubby pussy lips open. She watched with pleasure as he sawed in and out of her tiny opening, the fat pink lips stretched taut around his thick, slippery shaft. Jack sucked one of her perky pink nipples into his mouth, and reached around to rub her exposed clit as he bounced her on his cock. Soon Hadley forgot that they were in a store, as she began squealing in orgasm, her tight cunt throbbing and spasming around his pistoning tool. \n\nThat was all he could take: as soon as he felt his princess begin to let go, Jack unloaded what felt like buckets of cum into her wet twat. \n\n\"Oh fuuuuuck, baby,\" Jack moaned, \"I'm cumming... I'm cumming, baby... I'm nutting that tight little pussy... \" Hadley could feel the warm viscous liquid flooding her, filling her up. In the mirror she could actually see his balls spasming as they unleashed their thick seed in her cunny. \n\nSlowly, carefully, Jack lowered them both to the couch, Hadley still impaled on his cock. When she leaned forward onto her hands and knees, his spent prick slid from her open twat and a puddle of thick cum oozed from her stretched hole. It pooled in his belly button as it continued to leak from her body. Jack loved the sight of his creamy load dripping from her juicy teenaged cunt, the glazed, swollen lips and plugged asshole framed by the black lace of those naughty undies.\n\nJack laughed to himself, gently patting her panty-clad ass. \"Well, Hadley,\" he said, \"I guess we're buying you these panties...\" \n\n*************\n\nThe early morning sunlight streamed in through the two-story windows in Jack's penthouse apartment, the light and heat stirring Hadley from her otherwise peaceful sleep. Jack had slung his arm over her as they slept, and now she wiggled her naked body free, careful not to wake her sleeping lover as she crept out of bed and down the glass stairs to the bathroom. \n\nThe fancy lingerie set that Jack had bought her last night was strewn all over the floor along with their clothes. Hadley bit her lip and smiled to herself as she tiptoed over the piles of discarded clothes, remembering how much fun they had had the night before, christening about every surface in his new apartment with their wild sexual gymnastics. \n\nJack had insisted that Hadley wear the satin and lace crotchless panties out of the store and to dinner at a nice restaurant, where Jack had discretely fingered her exposed pussy under the table, her thoroughly-used hole still leaking his sperm, until she left a big wet spot on the leather banquette. He pulled her into his lap during the cab ride home, grinding his throbbing meat against her slick folds, and they barely made it into the elevator in his building before Jack gave into the need to probe her cummy pussy again. He bent her over and fucked her against the mirrored walls in the elevator, their hands leaving sweaty palm prints and her breath fogging up the glass as he pressed into her from behind. His thick ejaculate still coated the inside of her walls, lubing his sudden intrusion into her tight orifice.\n\nAs soon as the elevator doors opened into his apartment, Jack lifted her up again and carried her inside, his erection still buried up her slick cunt. They fucked like animals on every surface they could find: against the glass windows, on the steel kitchen countertops, bending over the dining room table. The memory made Hadley blush with pleasure. \n\nHadley sat on the toilet and relieved her bladder, the steady stream of hot piss stinging her poor, sore pussy. When she was done, she washed her hands and stared at her reflection in the bathroom mirror. She turned around and leaned forward, spreading her asscheeks so she could study the green jeweled plug lodged firmly in her tight asshole, another present from Jack. Last night, after their marathon fuck-fest, Jack presented her with the large green butt plug in a velvet bag. Though it took some coaxing with his fingers and tongue and a lot of spit and lube, Jack finally worked the fat plug up her ass. He was very pleased with her progress, and it took a lot of control for him not to try and fuck her butt then and there. If she practiced with the biggest plug all week, he told her, she would be able to take his big cock in her virgin ass by prom night. \n\nHadley's poor stretched asshole felt very sore but she was determined to keep the plug in a little longer, at least until she got home. She was starting to enjoy the full feeling in her bottom, and after all, she didn't become a championship gymnast by being afraid of a little pain...\n\nHadley tiptoed back across the living room floor, this time retrieving her new panties and bra from the white carpet and setting them on the chair before sneaking back upstairs again.\n\nJack was having the most amazing dream: in it, he and Hadley were making love in a speedboat out on the water, the sun glinting off of their faces as she laughed, delighted, and the ocean sprayed around their naked conjoined bodies. He rolled over slowly and noticed Hadley's place in bed beside him was empty. \n\nHe sat up and immediately saw her: her naked body was framed in the window, the sunlight turning her orange hair into a golden halo as she stood looking out the window at the street below. She gracefully lifted a leg, stretching and humming to herself absentmindedly while she admired the view. She was the most beautiful creature he had ever seen.\n\n\"Good morning, Angel,\" Jack said hoarsely, smiling at her. Hadley smiled and let her leg drop to the floor in one fluid motion. She walked over and stood next to the bed.\n\nHadley always thought Jack was a handsome man, but this was the first time that Hadley had seen him first thing in the morning. The scruff that had grown on his normally clean-shaven face gave him a sleepy, rugged, masculine look. She reached out a hand, brushing it against his rough cheek. Jack gently kissed her small fingers tenderly and smiled. Pulling her down to him in his strong arms, he kissed her sweetly on her soft pink mouth, his probing tongue parting her lips as she sighed and melted into him.\n\nJack usually woke up with a raging hard-on, and today was no exception. As he held Hadley's soft naked body against his, she could feel his thick charger stiffening against her thigh. She needed to taste him. \n\nSlowly, Hadley lowered her head, planting a trail of gentle kisses down Jack's chest, her long downy hair tickling the skin of his chest and stomach. When she arrived at the object of her desire, she grabbed his thick member in her small fist and sucked the swollen tip into her warm wet mouth. Jack groaned as she suckled on the sensitive head of his dick. He gently brushed her hair to the side so he could watch his shiny tool slide in and out between her soft lips. Slowly, he began to grind his hips upward, fucking her face gently from below.\n\nShe cupped his balls with her hand, tugging gently on the heavy sac while she hummed and slurped contentedly on his meaty cock. Jack needed to slow down or he was going to blow his load in no time. Though it pained him to stop her, he gently lifted her head off his swollen prick. A thin string of saliva stretched from the tip of his tool to her wet mouth. She looked up at him, her lips swollen and her green eyes glazed with lust.\n\n\"Come here, baby,\" Jack whispered to her, patting the bed next to him as she crawled up his body, \"Come lie here. I'm going to make you feel so good...\"\n\nHe kissed her flushed cheeks and the freckled bridge of her nose again and again as he ran his hand down her lithe body until his fingers reached the chubby split between her thighs. He gently parted her nether lips and teased her swollen clitoris with the tip of his finger. When he felt her liquids seeping out of her tiny opening, he eased two of his fingers inside. Hadley whimpered and tensed her small body against him.\n\n\"Does that hurt you, Hadley? Are you sore?\" Hadley winced and nodded slightly. Jack hated to admit it but they might have overdone it last night. But he couldn't help it: he couldn't get enough of her. \"Here, baby, I'll be so gentle...\"\n\nJack lowered his head to her swollen pussy and gently lapped at her wet split with his tongue. Hadley ran her hands through his hair as she moaned and shivered in pleasure. \n\nAfter a few minutes eating her sweet pussy, Jack withdrew his fingers from her drooling twat and ran them down her crack until they found the fat metal plug lodged in her little, pink asshole. He tugged on the plug while he sucked her clit, and Hadley groaned in response, squeezing his head between her small thighs. Slowly he worked the plug in and out of her ass until it slid slowly from her tiny body. Hadley suddenly felt very empty. \n\n\"F-f-fuck me, Jack,\" she moaned, shivering. Jack looked up at her. Her eyes were shining as she nodded her permission. \"Please, Jack... I want you inside me.\"\n\nThat was all the encouragement he needed. \n\n\"Turn over, baby,\" Jack said to her, \"Get on your hands and knees for me.\" Hadley rolled over onto her tummy and raised her tiny tush into the air. Jack grabbed her slim hips in his large hands, holding her steady while he knelt behind her. Holding his heavy cock in his hand, he slowly fed his pulsating dick into her snug pussy. Hadley groaned as he filled her full. \n\nGripping her smooth flanks, Jack pushed in and out of her widening passage, each time he pulled out slightly, the hot walls of her teenaged cunt clung to his pistoning shaft like a warm fist. \n\nOf all of the positions Jack fucked her in, doggystyle was by far her favorite, and Hadley moaned and wailed as he humped her, his huge dick felt like it was fucking her inside out. She reached underneath and feverishly diddled her clit as she took the pounding, until her pussy dripped and juiced, lubricating his passage. \n\nAs Jack steadily quickened his pace, he palmed her round booty, enjoying the feeling of the firm flesh in his hands, her tight cunt throbbing and squeezing around him like it was milking his prick. He spread her cheeks apart and studied her asshole as he fucked her. The tight pink balloon knot had stretched open slightly, gaping ever so slightly into an inviting hole about the size of a dime, clear lubricant still glistening around the rim.\n\nHadley felt Jack's fingertips brush across her sensitive anus and she shivered in response. Still thrusting into her small body, Jack sucked two of his fingers into his mouth and then slid the slick digits into her open backdoor. Jack finger-fucked her bootyhole as he continued to hump her, sawing the thick digits in and out in counterpoint to the thrusts of his cock. \n\nThe intense sensation of being fucked in both of her holes proved to be too much for Hadley. She came in a screaming orgasm, her small fists gripping the white bedspread as her tiny body almost came off the bed. Jack rode out her orgasm but soon he was cumming too, pulling out as he sprayed her teenaged cunt with his sperm, and then pushed back inside her for a few shallow thrusts, his churning balls erupting into her juicy pussy.\n\nHe came with such force that when he pulled out of her, some of his load squirted out of her still-spasming pussy and onto his deflating prick, the rest making a small puddle of their combined juices on the comforter below them. \n\n\"I guess we've officially christened the bed, sweet thing,\" he murmured in her ear, pulling her petite body against him and wrapping her in her arms. She giggled in response, her eyelids heavy with pleasure and exhaustion. He kissed her face and stroked her hair as they both came down from their intense orgasms.\n\nAfter they lay there contented for a few minutes, Jack said, \"I'm very proud of you, my dear. Not that I'm surprised, but you've been incredibly diligent about your anal training. This bodes well for next weekend...\" Hadley sighed deeply and burrowed into his chest. Jack sensed something was worrying her. \n\n\"Are you nervous, Hadley?\" Jack looked down at her small, worried face as she drummed her slender fingers against his chest.\n\n\"No, not nervous. Just frustrated, I guess,\" Hadley offered. Jack felt his stomach tense: was she frustrated with him?\n\n\"Why, whatever is frustrating you? Please tell me and I'll make it better.\" He stroked her silky strawberry blond hair and studied her furrowed brow intently. After a few minutes she responded.\n\n\"I guess I don't know what to do about prom,\" she replied. Jack's relief was palpable when he realized he wasn't the cause of her angst. He listened quietly as she explained the situation: how she and Ginny had been planning their perfect senior prom since Junior High, about the beautiful dress she had begged her mother to buy for her, how Colin's flattering invite to the prom made her the envy of every girl in school, and the target of Serena Ackerman's jealous wrath. \"And now it feels like it would be less trouble if I just didn't go,\" Hadley concluded, \"Besides I'd rather spend my Saturday with you.\"\n\nWhile Jack was genuinely touched by Hadley's honest admission, he admitted to himself that he couldn't let her sacrifice her senior prom for his sake. \"Hadley, I would love nothing more than to spend next Saturday night with you, and every Saturday night this month for that matter. But it would be unforgivably selfish of me to deprive you of your prom. Prom is a special night, and it's the last time you get to have one, and I don't want you to regret missing it.\"\n\n\"I know but...\" Hadley protested.\n\n\"I'll tell you what: let's make a deal. You go and enjoy your prom. Have fun, dress up, enjoy your limo ride, go dancing with your friends. And if, for whatever reason, you aren't having a good time you can always call me, no questions asked, and I will come get you. Is it a deal?\" He held out his hand to her. \n\nShe searched his face silently for a few seconds and then offered her hand to him. She smiled.",
        "\"It's a deal.\"\n\n*****************\n\n\"C'mon... just give me one more kiss, baby...\" Ted whispered not so secretly to Ginny as he pressed her against the lockers. It was Monday lunch period and the couple had been attached at the lips since the bell rang that morning.\n\n\"Te-ed!\" Ginny exclaimed, pushing him away, \"Stop it, we'll get in trouble!\" Her protests dissolved into throaty giggles as Ted kissed and licked up and down her shivering neck. \"Seriously! Ted: I have to get to class!\"\n\nColin Flynn rolled his eyes at Ginny and Ted and leaned against the lockers. The canoodling couple had been saying goodbye for at least the past fifteen minutes and it was clear they couldn't keep their hands off of each other. Colin sighed and perused the hallway, looking at all of the students leaving the lunchroom. He wasn't used to being the third wheel and he didn't like it one bit.\n\nFinally, Ginny managed to pull herself free from Ted, and sauntered off to class, straightening up her mussed uniform skirt and blouse as she went. Ted turned to his friend with a sheepish grin. \"Sorry, Col, just couldn't say goodbye, right?\" He punched his shoulder playfully and winked.\n\n\"Jeeez, Ted,\" Colin said, rolling his eyes again, \"I hope you're getting some pussy for all that effort...\" \n\n\"Prom night, man,\" Ted said with a wink, \"I'm getting an all you can eat pussy buffet...\" Ted butted Colin with his shoulder and laughed. \"We'll be lucky if we make it to the bedroom...\"\n\nJust then, Serena and a few of her cheerleading friends walked out of the lunch room. She glared at Colin as she walked past, flipping her long blond hair haughtily. He studied her tanned legs as she swished down the hallway. Her uniform kilt was so short it almost showed her underpants, that is... if she was wearing any. He sighed.\n\n\"What a bitch...\" Colin said to himself. He had to remind himself why he finally broke up with her in the first place: Serena Ackerman was beautiful but she was mean. You cross her once and she'll make your life hell. But then she had that round bubble butt... He got lost in his reverie as he remembered the time she let him fuck her slutty ass in the locker room after school...\n\n\"Man,\" Ted said quietly, noticing the quick change in his friend, \"Chill: you're past her.\"\n\n\"Easy for you to say!\" Colin retorted, \"You've got a girlfriend now, and as soon as Ginny lets you bone her on prom night, you're gonna be getting pussy on the regular.\"\n\nTed couldn't help but smile at that fact. \"Hey, Col! Wake up! You're taking Hadley Henderson to prom. Hadley Henderson. You know how many guys in this school, shit, in this town, would kill to have a shot at that? She hasn't given a single dude in school the light of day except for you. You asked her to the prom, she said yes! Besides, all of these little virgins are going to be dying to give it away on prom night...\"\n\nAs if on cue, Hadley walked past carrying some books to her locker. \"Hey, Hadley,\" Colin said, turning on a smile for her. \n\n\"Hi, Colin... Ted,\" Hadley nodded politely, smiling at the two boys. She opened her locker, reached up on her tiptoes to put the books on the top shelf and then waved goodbye. Colin had to admit, her round ass in the uniform kilt was pretty tempting. And he liked the way her long red ponytail hung down her back as she walked away...\n\n\"See ya soon!\" Ted waved after her. Hadley turned and waved at them. \"See, man! She totally likes you! And think about that virgin puss... She's a gymnast, so you know that shit's gotta be hella tight... I can barely get two fingers into Ginny's. I'm telling you: that shit is untouched.\"\n\nColin's mood began to lighten. \"Hey you think Hadley Henderson shaves her snatch?\" He tried to picture her tiny ginger pussy but all he could imagine was Serena's shaved one, the big clit with it's sparkly clit piercing and long lips protruding from her tiny shaved labia. He liked how Serena's pussy managed to look as slutty and lewd as she was...\n\n\"Well, Ginny does, so...\" Ted said with a grin. He held up his fingers in a \"fingers crossed\" gesture, \"I guess you'll find out on Saturday...\"\n\nColin smiled: he liked the thought of that.\n\n**********\n\nHadley eased her tired naked body into the warm water and sighed. Normally she didn't take the time to take baths but Wednesday afternoon practice had been extremely exhausting and her muscles ached. She leaned forward and turned on the hand-held sprayer so she could wash her back. \n\nHadley squeezed some strawberry-scented bath gel onto her sponge and scrubbed her skin until it was pink. Then she rinsed the soap from her body. When she got to her pussy she remembered the plug in her ass. She tugged on it gently and the fat metal plug gave way and slid from her slick anus. A few trapped air bubbles escaped from her asshole and bubbled up to the surface of the water... Hadley giggled. She put the plug on the counter and continued rinsing her body. \n\nAs she sprayed the water over her belly button, a naughty thought occurred to her. She quickly pulled the plug from the drain and aimed the sprayer over her open labia, letting the warm water stimulate her. She parted the chubby labia with her fingers and let the water throb over her swollen clit. A tiny moan escaped from her lips. \n\nShe thought about the amazing weekend she had with Jack, \"christening\" his new apartment, and her thoughts wandered to losing her anal virginity... She wondered what position they would do it in... Would he do her ass doggy style? Or would it be more tender, spooning her and kissing her? Doggystyle was normally her favorite position, but it might prove to be too much her first time. Knowing Jack, it would probably be all of the above, she thought, smiling to herself.\n\nShe thought about his thick shaft entering her virgin ass and blushed. But she couldn't help but reach under her and insert two of her slim fingers into her stretched asshole. They entered without too much of an effort. Hadley smiled, pleased at her progress. \n\nThe warm water massaged her throbbing clit and she began sliding her fingers in and out of her slippery booty, finger-fucking herself in the slowly draining tub. She closed her eyes, enjoying the sensation and imagining that instead of her fingers Jack's big dick was fucking her ass. She knew it might be two, three, maybe even four times the size of her tiny fingers but for now she just enjoyed the fantasy...\n\nIn no time at all, her small body bucked and came, thrashing in the damp empty bathtub. She sighed with pleasure. A little more than a month ago, Hadley could barely fit a cock in her pussy let alone her ass, and now in just three days, Jack would be taking her virgin backdoor. \n\nShe couldn't wait.\n\n**************\n\nIt had long been the tradition for the prom at St. Quentin Prep to take place on the third Saturday in May, at 3pm. The PTA chose this arrangement ten years ago because they thought that if they started the prom early enough it would discourage any late-night wild partying and debauchery. In reality, it just gave the kids less time to get ready and ample hours for the after-party. \n\nMost of the kids who went to St. Quentin's came from fairly affluent families and it wasn't uncommon for celebrating seniors to bring the party over to someone's lake house, and continue the late-night drinking and wild partying until early the next morning. In fact, the parents in Hadley's school had developed a very surprising \"Don't Ask, Don't Tell\" policy when it came to prom night. Ted's parents had a lake house and this year, he spread the word among his closest friends that the after party was at his place. There, he could let his friends entertain themselves while he and Ginny got it on in the upstairs bedroom.\n\nBecause of the early start to prom, Hadley's mother had made 8 am appointments for Ginny and Hadley at her regular salon downtown. Ginny was bleary-eyed and grumpy when she met Hadley and her mom at the salon. She sank into the barber chair groaning and rubbing her eyes.\n\n\"Morning, sleepyhead,\" Hadley teased her friend. Her mother, who had been hovering around her all morning, had convinced Hadley to get a small trim and Hadley sat there patiently while the stylist snipped at the ends of her hair.\n\n\"Ugh, early afternoon prom is the worst...\" Ginny groaned. \n\n\"Late night?\" Hadley asked.\n\n\"Maybe...\" Ginny said cryptically. She didn't want to talk in front of the stylist. \"I'll tell you later,\" she promised.\n\nAfter the girls left the salon, Tricia had treated them to lunch downtown and then whisked them back to their house to get ready. She parked the car in the driveway and Ginny took her prom dress out of the trunk. She slung the sparkly short aqua blue dress over her shoulder and followed Hadley to the front door. \n\nTricia was the one who found the pink gift-wrapped box sitting on the front step. \"Hadley!\" she called out, \"There's a gift here for you!\"\n\n\"For me?\" Hadley, asked confused. \n\n\"It must be from Colin,\" Tricia squealed, \"Oh how very sweet and thoughtful!\"\n\nGinny raised her eyebrows at Hadley. Colin Flynn was definitely popular, hot, athletic and rich, but \"sweet and thoughtful\" were not accurate descriptors.\n\n\"Aren't you going to open it, dear?\" Tricia asked hopefully.\n\n\"Um, not yet,\" Hadley said, \"I want to wait until I'm dressed.\" \n\nIt was a feeble lie but her mother seemed to buy it. Tricia nodded and headed to the kitchen. \"I'm going to fix some refreshments for when the boys get here!\" she called back to them, \"You girls let me know if you need anything!\"\n\nThe girls didn't need to be told twice: they had been with Hadley's mom all day and they were dying for some privacy. Hadley grabbed the box and Ginny grabbed her dress and they ran upstairs to Hadley's room and shut the door.\n\nGinny watched excitedly as Hadley unwrapped the gift. As soon as she opened the lid, she knew it was from Jack. She recognized the tissue paper from the lingerie store and carefully folded away the paper to see what was inside. Arranged delicately inside the box was the pale green matching bra and panty set she had tried on for him. Laying on top of it was a plain note card that read:\n\nSo I can be close to your body all night. Have fun, Princess. J\n\n\"Let's see, let's see!\" Ginny chanted, practically jumping on the bed. Hadley lifted the delicate lingerie out of the box. \"Oh... my God... Hads, are these from him?\" Hadley nodded. \"Holy crap, these must cost a fortune! You didn't tell me he was loaded too!\" \n\n\"Ted doesn't buy you expensive lingerie?\" Ginny teased her friend. \n\nGinny snorted in response. \"Fat chance! Those wouldn't last 2 seconds on me! The only thing Ted cares about panties is how fast he can get them off of me. That's why I've stopped wearing them...\" Ginny pulled down the edge of her shorts and flashed Hadley her bare ass. Hadley laughed and slapped at her playfully.\n\n\"So you going to wear them tonight?\" Ginny asked. Hadley nodded. \"Oooh put them on, put them on!\"\n\nHadley peeled her jean shorts and panties off in one go, until she was standing there naked from the waist down. She picked up the green lacy panties and tried to remember which way faced forward. She decided the bow went in the front and then stepped into them carefully. \"What do you think?\" she asked Ginny, who was staring at her crotch intently.\n\n\"Honest opinion?\" Ginny asked. \"I think they would look better if you shaved.\"\n\n\"Really?\" Hadley asked, checking herself out in the mirror. The cheeky panties were low cut but rose enticingly high on her rounded ass. The material was green mesh and lace and very sheer all over. Hadley didn't grow much hair on her pussy, and what she did have grew in a small patch above her lips. Sure enough, she could see the darkened outline of her tiny bush through the panties. \n\n\"You should do it, Hadley! Guys love it. Trust me.\" Ginny winked at her. \"Ted says Colin likes it shaved...\"\n\n\"Ew! Ginny, gross. Why would Ted tell you something like that? Besides, Colin is not seeing my pussy so it doesn't matter.\"\n\nGinny shrugged. She didn't know Hadley's older boyfriend, and while she was sure he was great and all, she hadn't given up hope that Hadley and Colin would get together. Colin and Ted were best friends and then they could go on double dates...\n\n\"Well, I need to shave mine,\" Ginny said, grabbing her toiletries case from her overnight bag. \"I want to be smooth as a baby tonight. I'll help you shave yours if you like...\"\n\n\"I don't know...\" Hadley said. \"Doesn't it grow back all scratchy and stuff?\"\n\n\"Nope!\" Ginny said, \"It's awesome. Come on, I'll show you.\"\n\nHadley followed Ginny into the bathroom. Ginny stripped naked from the waist down and then climbed into the tub, turning on the warm water and fishing her razor out of her bag. \"Come on in!\" she called to her.\n\nHadley carefully removed her panties and climbed into the tub with her friend. They were teammates so they were used to seeing each other naked, but something about this situation felt slightly awkward to her. She shyly covered her pussy with her hands.\n\n\"Hadley, chillax: I've seen your pussy like a million times,\" Ginny stated, \"Now take some of this gel and rub it in wherever you have hair.\" Hadley sat on the edge of the tub, ran her cupped hand under the water and then sudsed up her pubic area.\n\n\"Ready?\" Ginny asked, brandishing her razor.\n\n\"Careful with that thing,\" Hadley begged her. \n\n\"I will!\" Ginny said kneeling down in front of her friend, \"Here we go...\" Carefully, with the concentration of a surgeon, Ginny stroked the edge of the razor up one of Hadley's lips, removing the hair in small gentle swipes. Every couple of strokes she rinsed the razor under running water, washing the wispy blonde hairs down the drain, before returning to her work.\n\n\"Hey, open your legs a little wider,\" she commanded Hadley, \"You got an innie and I want to make sure I got it all.\"\n\n\"I got a what?\" Hadley asked.\n\n\"An innie pussy. Ted told me. That's what you call it when your pussy lips are all closed like yours, because everything's on the inside. He said I have an outie, see?\" Ginny stood to show her the difference. Hadley noticed that Ginny's inner lips and clitoris protruded out from her small labia. Ginny bent down to study her handiwork again. \"Innie pussies are cute but they're a lot harder to shave...\"\n\nWhen Ginny was satisfied with the job she rinsed Hadley off with the water and handed her a small mirror. \"Check it out,\" she said.\n\nHadley held the mirror down to see her bare pussy and while it didn't look too different, the whole area looked smooth and clean and the skin on her chubby labia felt very soft.\n\n\"Okay, my turn,\" Ginny stated, lathering up her pubic area and handing Hadley the razor. \"Now you help me.\"\n\nHadley knelt down and shaved her friend, carefully avoiding the clitoral hood and sensitive labia that rested between her pussy lips. When she was satisfied with her work, she rinsed off Ginny's pussy, grabbed a towel and stepped out of the tub. \n\n\"Thanks, Hads! And I'm sure Ted thanks you too...\" Ginny said with a wink. \n\nGinny happily chattered away to her friend about Ted, the amazing time they spent in his hot tub last night, and their plans for tonight. The girls zipped each other into their dresses and sat side by side at Hadley's vanity applying jewelry, make-up, and other finishing touches. Hadley was content to let her friend do most of the talking. She suddenly felt like she had butterflies in her stomach and she wasn't sure why. \n\nSoon Hadley heard the doorbell and her Dad calling upstairs to them, \"Hadley, Ginny... the boys are here!\" \n\n\"One second!\" Hadley called out to her Dad. Ginny was clapping and squealing while she tried to catch a glimpse of the limo out the window. \"Gimme one sec,\" Hadley said to Ginny, \"I just need to use the bathroom.\"\n\nHadley entered the bathroom, closing the door behind her and exhaled, enjoying the brief moment of privacy. She fished a small box from the bottom of the basket under her sink and took out her green butt plug and a small bottle of lube. She applied the lube to the plug like Jack had taught her and then carefully lifted the long hem of her gown and pulled down her underpants slightly. She pushed the plug against the tight knot of her back door for a few seconds, breathing deeply, until the ring gave way and the plug sank deep inside. It felt so good, Hadley couldn't help but pull on the jeweled end teasingly for a few seconds before making sure it was firmly lodged inside her. Then she pulled up her green lacy panties and let the hem of her dress fall back into place. \n\nThe girls looked beautiful as they walked downstairs, Harvey Henderson thought to himself. Ginny was wearing a short aqua blue dress, the asymmetrical bodice had one strap and was dotted with sparkling beads, and the full tulle skirt flounced as she walked down the stairs, teetering precariously on a pair of outrageously high heels. Her normally straight brown hair was styled in a sophisticated up-do, and though she wore too much make-up for his and his wife's liking, he had to admit she looked wonderful. But as lovely as Ginny looked, Hadley was another matter altogether. \n\nHis daughter seemed to be glowing as she walked down the stairs. The light pink strapless gown she wore was trimmed with tiny delicate fabric flowers and the elegant shape of the dress complimented her slim body perfectly. She wore her hair in loose curls around her shoulders, fixed in place with a delicate, sparkling jeweled headband. \n\nTricia squeezed Harvey's hand as their only daughter walked gracefully down the stairs in her prom dress. She quickly wiped away the tears and began snapping as many photos as she could of the darling couples: Colin presenting Hadley with a delicate pink wrist corsage, the two girls smiling on the lawn, the couples standing next to the limo... She didn't say a word when she saw Ted kissing Ginny outside by the limo, but she was relieved that she had such a cool-headed sensible daughter. Hadley would be responsible tonight, she was sure.\n\nFinally it was time to go. The two couples piled into the limo and waved out the window to Mr. & Mrs. Henderson. \"Bye, Mom!\" Hadley called, \"Bye, Dad! See you guys tomorrow!\" \n\n\"Bye, Mr. and Mrs. H!\" Colin added, \"I'll take good care of her!\" He rolled the window up as they drove off. \n\nTed and Ginny immediately started making out, which left Colin and Hadley little choice but to talk to each other. \n\n\"You look super pretty, Hadley,\" Colin said to his date, \"I'm glad the pink corsage I got matched your dress okay.\"\n\n\"Yeah, thanks,\" she replied shyly, \"It's really nice.\" \n\nTed and Ginny came up for air. \"Both of you girls look banging!\" Ted added, \"We are going to the prom with the foxiest girls in school!\" Ginny giggled and grabbed him by the face. As they kissed again, Hadley tried not to notice Ted snaking his fingers under Ginny's dress. \n\nHadley noted that Colin looked really handsome in his tuxedo, but other than how they looked, they had very little to talk about. They sat in awkward silence for a few minutes. Hadley was trying to ignore Ted and Ginny, who were practically dry-humping at the other end of the limo, when she felt Colin drape his arm over her shoulder. She looked up at his handsome face, confused. He smiled a sexy smile at her. \"So did you buy the dress especially?\" he murmured.\n\n\"Yes, I did,\" Hadley said matter-of-factly, trying to wiggle free from his intense hold on her. \n\n\"Well, it looks beautiful on you,\" Colin smiled, then leaned close, to whisper in her ear, \"And I bet it looks beautiful off of you as well...\"\n\nHadley was taken aback by his overtly sexual remark. It had taken exactly three minutes before her date had gotten totally skeevy and Hadley did not like it. She scooched away from him and tried to concentrate on looking out the window. ",
        "\"Don't be shy, Hadley,\" Colin said smoothly, \"We're just getting to know each other.\"\n\n\"I'm not shy,\" Hadley stated coolly, \"And since you don't know me very well, I don't think you appreciate just how uncomfortable you're making me feel.\"\n\n\"Okay, okay,\" Colin gave in, \"I'm sorry. I just wanted to tell you how beautiful you looked.\"\n\n\"That's okay...\" Hadley whispered. \n\n\"We're here!\" Ted yelled, interrupting the frosty mood, \"Whoooooo! Yeah, prom!\" The limo pulled up in front of the country club as Ted passed his flask around. Ginny took a sip of the strong-tasting liquor and cringed. She passed the flask to Hadley and shrugging, she accepted the small bottle. She took a quick sip and the alcohol burned her throat. \n\n\"Whoooooo, party!\" Colin shouted. She passed the bottle to him. Anything, she thought, to make this evening less awkward.\n\n****************\n\nProm was a nightmare. The second Hadley walked in with Colin, she could feel everyone staring at them. She wasn't sure if they were staring in malice or admiration, but either way, the extra unwanted attention put her on edge. \n\nAs soon as they found their table, Ted and Colin excused themselves to go off to the bathroom to do God knows what. Ginny waved to a girl from her French class and wobbled over to talk to her on her precariously tall heels.\n\nHadley felt confused and lost at sea. A month ago all of this would have been exciting to her but now it all seemed so far away and stupid. She watched Ginny across the room. She was nodding excitedly in a group of their dolled-up friends, all of the girls admiring each others' dresses. She was just turning to join them when she felt someone tap her on the shoulder. \n\nShe whirled around just as Serena Ackerman dumped a full glass of bright red punch down the front of her light pink dress. \"Oh, whoops... sorry.\" Serena smirked, \"Looks like your dress isn't a virgin anymore...\" She was surrounded by a group of her followers, who all snickered at Serena's daring move. Hadley could feel the tears welling up in her eyes as Serena and her crowd sauntered away.\n\nDetermined not to let anyone see her cry, Hadley rushed from the ballroom and locked herself in the handicapped bathroom down the hall. In the harsh florescent light, Hadley surveyed the damage. A large reddish stain dotted the front of her dress, and the punch had soaked her hair and made her skin sticky where it was drying. She dampened a paper towel in the sink and blotted at her dress and skin, trying to wipe away the stain. \n\nWhen she had done the best that she could, she studied the stain in the mirror. It was still obvious. Her hair was sticky and clumping in places. A lump grew at the back of her throat. \"Don't you dare cry,\" she told herself, \"Don't give her the satisfaction.\" She took a few deep breaths to steady herself and then opened the bathroom door. \n\nShe walked down the dimly lit hallway and ducked into the stairwell to give herself a moment to think. As she sat there on the steps in her stained dress she heard familiar voices talking. Colin and Ted were sitting under the stairs, sharing a joint and chatting, oblivious to Hadley sitting on the stairs above them.\n\n\"I don't know, man,\" Colin was saying to his friend, \"She doesn't like me...\"\n\n\"That's not true, Colin,\" Ted assured him, \"All the chicks want you, she's just shy.\"\n\n\"Fucking virgins...\" Colin muttered, inhaling the joint, \"I don't care how tight her little twat is, I doubt it's worth the trouble.\"\n\n***********\n\nJack was sitting at home, enjoying his third glass of Scotch, and trying to read a magazine, but a very bad feeling gnawed at him.. He had felt uneasy all day after he had Hadley's present covertly delivered to her house. He knew he had done the right thing by insisting she go to prom, and even though such a thing would be impossible, he couldn't help but secretly wish that he was the one taking her. \n\nJack's own prom was about twenty-five years ago, and the whole affair remained an inebriated blur. He had taken Joanne Marshall as his date but the two of them barely made it to the prom itself, preferring to fuck in the bushes outside of the school and again in the bathroom of the teacher's lounge, and finally in the backseat of his beat-up Chevy. She had the most marvelous champagne-glass tits and she squealed like a bitch in heat when he sucked on her sensitive dangling nipples. The memory made him furrow his brow. He knew Hadley was a good girl, much better than him, in fact. But still he worried about what she was doing... and who she was doing it with.\n\nJack knew Rick Flynn, Colin Flynn's father, and he didn't like him. He owned the Mercedes dealership in town, and Jack and he had played squash together a few times. Jack found him to be a puffed-up conceited man who would brag to anyone who would listen that his son was a star quarterback with a full ride to Notre Dame. Of course, Jack didn't know Colin, so when Hadley told him that he was taking her to prom, he kept his unfavorable opinion of his father to himself. But now that he was on his third Scotch of the evening, he wasn't so sure that was the best idea...\n\nThe sound of his phone ringing snapped him out of his reverie. He quickly lunged across the room to retrieve his phone from the hall table. He recognized the number immediately.\n\n\"Hadley? Is everything okay?\"\n\nShe didn't say anything but Jack could hear her sobbing at the other end of the phone. \n\n\"Stay right where you are, sweet girl. I'm coming for you.\"\n\n*******************\n\nHadley sat on the darkened curb in front of the country club, still crying, clutching her shoes and purse in her hands. Her feet were sore as she was unaccustomed to wearing heels and her dress was already ruined, so she figured a little dirt hardly mattered at this point. She sniffled, drying her eyes on the hem of her dress as her sobs turned to hiccups. \n\nJust then a dark town car pulled up to the curb and a kindly-looking older man rolled down the window. \"Are you Hadley?\" the man asked. Hadley nodded. He got out of the car and walked around, holding the door open for her. Holding her heels in one hand and her purse in the other she climbed into the leather backseat. When he had made sure that all of her limbs and dress were tucked safely inside the car, he closed the door, and drove her downtown.\n\nJack had rationalized that between sobering up, getting dressed and calling down to the garage, sending a car for Hadley would be faster and safer than driving himself. But as he waited for her to arrive his worry intensified. He came down to the lobby, and paced as he waited with the doorman for the car to drive up. \n\nAs soon as he saw the town car pull up in front of the building, he rushed outside and went to open the door to the back seat. Hadley's tear-stained face looked up at him. \"Hi honey,\" he whispered and he reached down, wrapping her arms around his neck and lifted her out of the car. The driver, Wallace, handed her shoes and bag to the doorman, who held the door open for them. \"That's everything, Mr. Jack,\" he said.\n\n\"Thank you, Wallace,\" Jack replied, and carried Hadley inside the building.\n\nHe continued to hold her shivering body against him in the elevator, rocking her gently in his arms while whispering into her hair, \"Shhh you're safe now, baby... Jack's here...\" \n\nAs soon as the elevator doors opened he carried her into his apartment and lowered her to the couch, still holding her in his lap. He stroked her hair and studied her face, brushing away the tears until they stopped. \"You don't have to tell me what happened, honey, I just want to know if you're okay,\" he said, his handsome brow furrowed in concern.\n\n\"I'm okay now,\" Hadley smiled softly up at him, then reached up to kiss him. He held her in his arms and kissed her again and again, brushing his lips tenderly across her eyelids and nose and cheeks, down her neck and back up to her lips again. \n\n\"I'm going to draw you a bath, sweet girl,\" he said, leaving her on the couch as he went to set things up in the bathroom. He turned on the faucet, making sure the water was hot but not scalding. When he looked up, Hadley was standing in the doorway, smiling at him. \n\nHer hair was a wild, tangled mess, her face and eyes were still swollen and tear-stained, her bare feet were sore and filthy, and a big red stain splattered the front her rumpled pink gown. Jack couldn't help it: he began to laugh.\n\n\"What's so funny?\" Hadley asked, smiling, \"Why are you laughing?\"\n\nJack looked at her as he stood up next to the tub, his eyes shining with laughter. \"Oh Hadley,\" he said, chuckling, \"You are an absolute mess and somehow you've managed to still remain the most gorgeous creature I've ever seen.\"\n\nHadley rushed into his arms and hugged him. Jack rested his chin on her head as he held her close. \"I love you, Jack,\" Hadley whispered. Jack could feel a small lump rising in his throat.\n\n\"I love you too,\" he whispered back.\n\nCarefully, he helped her take off her clothing and jewelry, and then lifted her naked body into the tub. As she settled herself in the warm soapy water, Jack quickly disrobed and climbed into the bathtub to join her, not wanting to be apart from her for a single moment. He tenderly washed her tangled hair, running his fingers through her shining wet strands, and when he finally rinsed the last of the suds from her hair, she turned around and lay back into his body, sighing deeply as she rested on his chest.\n\nThey lay in the warm bath together for a while, Jack running his fingers absentmindedly up and down her spine. She shivered against him. \n\n\"Jack?\" she asked, looking up at him.\n\n\"Yes, love,\" he replied.\n\n\"I want you to take my ass.\" Her serious face studied his intently.\n\n\"No, not tonight,\" Jack said, \"You're too tired.\"\n\n\"Yes, tonight,\" Hadley answered him, \"Please. I want to.\"\n\n\"But... you've had such an exhausting day, sweet girl, it will be too much... We can wait until tomorrow.\"\n\n\"I don't want to wait until tomorrow,\" Hadley stated, \"Please, Jack.\"\n\nJack brushed her hair out of her eyes and looked into her face. \"I'm afraid I'll hurt you... Baby, I couldn't bear it if I did anything to hurt you.\" The truth of his own confession shook him more than it shook her. \n\n\"You won't hurt me, Jack,\" she replied, smiling, \"Please, I've been waiting all week...\" She pouted at him and ground her soft little ass into his lap with a laugh. Jack growled low in his throat and pulled her tiny body into his. \n\n\"You naughty little devil...\" he whispered in her ear. \n\nHe continued biting and kissing her earlobe then traveled down the column of her neck, kissing and licking her as she writhed and wiggled against him. He traced his fingers down her spine stopping when he arrived at the green jewel lodged in the cleft of her soft ass.\n\nStill kissing her sweet mouth, he wiggled the plug free and rested it on the edge of the tub. Slowly, he slid his thumb into her backdoor, the warm, tight passage sucked his digit inside without resistance. He groaned at the sensation of her snug bumhole squeezing his thumb, and his tool hardened as he continued to finger and play with her ass. She wrapped her arms around his neck and gave into the intense sensations.\n\nAfter a few minutes he pulled his thumb from her asshole and still balancing her in his lap, he held his slippery mushroom tip against the entrance of her bum, the head leaking pre-cum. Hadley gasped and tensed immediately when she felt the thick head of his prick poking into her open anus. Jack pulled back and holding the thick shaft in his fist, massaged the small opening with just the tip.They bit and kissed each other's lips for awhile as the head of his cock teased the opening of her warm, wet butthole. \n\nAfter many minutes of teasing her sensitive rosebud, Jack could feel Hadley hunching against him, trying to work the tip of his swollen tool inside her greedy little butthole. He knew this could only go so far in the bath before they needed to stop, so he lifted her off of his lap, opened the drain and wrapping her naked body in a towel, carried her up the stairs to his bed.\n\nLaying her down on the bed, he unwrapped the towel and climbed on top of her, covering her naked body with his own. She wrapped her lean legs around his waist and continued to grind her wet pussy and open asshole into his erection. Jack groaned in response. \n\nHe broke away from the embrace and leaned over to fish the bottle of lube out of the bedside table. Hadley snaked a small finger between her naked nether lips as she watched him. \n\n\"Don't think I didn't notice that shaved pussy...\" Jack said wryly.\n\n\"Do you like it?\" Hadley asked.\n\n\"Hadley, you could have neon pink pubic hair and I'd still like it,\" he replied with a wink, \"Now scoot your ass towards me, baby... that's a girl.\"\n\nShe scooched forward on her back to the edge of the bed, and without being told, Hadley bent her knees and grabbed her ankles, exposing her pink crinkled opening for him. Jack squirted a liberal amount of lube onto his finger and then applied it to her anus. Working his fingers in and out of her tight chute, he spread the lube around, making sure the inside of her ass was coated with it. When he was thoroughly satisfied that she was greased enough to take his cock, he squeezed some more lube in his palm and began stroking his long shaft with it.\n\nHadley watched him slowly lubricate his swollen dick until it was shiny and wet, then he lay back on the bed and motioned for Hadley to squat over him. The only way he knew to guarantee he wouldn't hurt her was to put her in control. \n\nJack held his slippery tool upright as Hadley squatted on her haunches, facing his feet. He guided her bottom backward until the head of his dick was lined up with her wet anus, then held her cheeks apart as she slowly lowered her tiny asshole onto his cock. \n\n\"That's my baby... that's a good girl...just work it in like you do with your plug...\" he encouraged her. He watched her sleek flanks flex as she began to work the tip of his dick into her tiny tailhole. \n\nAfter a few minutes of patient exertion, Jack felt the tight ring of her sphincter give way. Hadley grunted as his swollen mushroom tip slowly stretched her wet pooper open and then popped into her slippery butthole. She could feel the ridge of his fat cockhead pushing against the walls of her bowels as it slid in further, disappearing up her tight bum. Perspiration appeared on Hadley's upper lip... she'd never felt anything so intense.\n\n\"Good girl...\" he purred, \"Open that ass, baby... Open that ass for daddy...\" \n\nHadley beared down, pushing out with her muscles as she continued to lower herself on his shaft until about four inches of his huge dick were buried in her rectum. Jack groaned at the sight of her virgin asshole stretched tight around his girth. I could die happy, just like this, Jack thought.\n\nSatisfied that Hadley had worked enough of his shaft inside her without hurting herself, Jack could now take over. Pulling her back against him, he rolled them both over onto their side. Spooning her small body, he lifted her leg to get access to her ass. \n\nHis cock had slipped out slightly during the change in positions, and now only the head remained tightly lodged in her backdoor. Lifting her leg high in the air, he pushed into her slippery bottom, sliding in with less effort this time, burying about four inches in her tight butthole. \n\n\"Unnnggghhhh...\" Hadley grunted, as she felt his huge meat slide into her rectum. She reached back and gripped his arm with her small fingers. \n\n\"You okay, baby?\" he whispered to her, concerned. \n\nHer eyes were clenched shut and her brow was furrowed in concentration. She nodded. \"It's just super intense... oh my God...\" \n\nJack could feel her tight hole struggle to accommodate his girth. Her virgin o-ring was clamping down on his thick shaft like a vice grip. He was amazed at her bravery but hated to see her uncomfortable. \"Hold on, baby... daddy's gonna fix it for you...\"\n\nSlowly, carefully, Jack pulled out of her warm butthole. If he hadn't had a few drinks earlier the intense friction of her clinging back passage on his prick would have sent him over the edge. Gently lowering her leg, he reached for the lube bottle and popped the cap open with his teeth. Her small stretched tailhole gaped open for a second, exposing the pink slick interior of her rectum, then fluttered closed and open again, trying to regain its former shape. \n\nHadley pulled her legs up to her chest and lay there in a curled ball. Quickly, before her asshole could close up again, Jack pressed the lube bottle against her winking bumhole, and squeezed a large dollop of the thick clear lubricant into her open ass. He tossed the bottle on the bed next to him, and using the head of his cock to push the lube inside her, he slowly sank back into her greased hole, pleased at how easy it was to enter her back door this time. It felt like his prick was sinking into hot wet quicksand.\n\nThe extra lube had eased his passage significantly, and this time when Jack entered her slippery chute, he could fit about six inches of his mammoth shaft inside her slippery ass. Hadley felt a deep pleasurable sensation as he slid past her tight ring. Jack wrapped his arms around her small body and held her while she adjusted to the sensation.\n\n\"That's right, baby,\" Jack encouraged her through gritted teeth, \"Just keep breathing...\" He watched her breathe in deeply through her nose and exhale sharply, blowing air through her mouth. He brushed the sweaty damp hair away from her face, teasing her earlobe with his teeth, until he saw her face relax slightly into a smile.\n\n\"You like that, baby?\" he whispered into the side of her neck, smiling as he kissed and licked her neck. \"Why don't you play with that little pussy for me?\" He lifted her leg again to give her better access to her soft pink pussy mound. She was so flexible that her lean thigh pressed against her torso with almost no resistance.\n\nHadley reached down and started toying with her swollen clit. The combination of the comforting friction on her pussy and the intense stretching of her asshole felt amazing. She sighed and wiggled her ass against him slightly as she played with herself.\n\nJack could feel almost the exact moment that her tight ring relaxed and released its vice-grip on his tool. It was still a tight fit, no way that it couldn't be, but suddenly Jack felt he had a little room to manoeuvre in her hot slick back passage. Jack firmly gripped the underside of her leg and pulled out of her lubed ass slightly, before gently sliding back in. Hadley moaned and shivered in response. He rocked her on his cock slowly like this for a few minutes, fucking her butt with only an inch or so at a time.\n\nWhile still gently humping her ass, he ran his fingers down the underside of her flexed thigh until his fingers met hers. He danced his fingers over hers and tickled her bald pussy lips, now wet with her juices, and then ran his fingers back to where their bodies joined. He could feel his slippery dick as it slid in and out of her slick chute, the tight ring clinging to his shaft on every stroke. \n\n\"You feel daddy fucking that little asshole? I opened that virgin hole right up...\" Jack loved talking dirty to her while he rocked her on his cock. Hadley smiled and giggled as he whispered in her ear, \"So good, princess... keep working that ass... take that big cock deep inside... that's it... that's a girl...\"\n\nSoon he found he was sliding in and out of her ass with hardly any resistance. He couldn't push in all the way, but he was long-stroking her with about six inches of dick without a problem. \"You're doing so good, baby... \" Jack murmured, \"You gonna cum for daddy? Come on, I want to see you cum for me, baby... Cum with Daddy's cock in your ass...\"",
        "That was all the encouragement she needed: Hadley's orgasm bubbled over and she found herself moaning and shaking, her pussy throbbing as her asshole contracted around his fat log. She could barely catch her breath, her orgasm was so intense, and Jack cooed and stroked her hair, whispering praise into her ear until the spasms subsided, the whole time still fucking her slippery butthole. \n\nAs soon as she had come down from her intense climax, Jack slowly pulled out of her stretched tailhole. Her tiny pink butthole was now gaping wide as he rolled her onto her back and got on his knees in front of her. Grabbing her delicate ankles, he pushed her legs up and back, exposing her open asshole and impaling her on his greasy prick in one motion. \n\nHadley gasped at the intense, pleasurable sensation. She had gotten used to the intense stretching of her ass and now wanted to see how far she could push it. She looked up at him from between her legs. \"Fuck my butt, Jack,\" she whispered.\n\nThat was all the encouragement he needed. He pulled back so that only the head of his cock remained in her slippery anus and then he pushed back inside, her tight chute hungriily swallowing most of his giant tool in one go. The sight was incredible.\n\n\"Oh fuuuck... \" Jack moaned, \"Look at that greedy little butthole.\" \n\n\"Fuck me, fuck me, fuck me...\" Hadley chanted, hugging her knees to her chest and loving every second of his big cock fucking her ass.\n\nJack fucked her tight chute like this for awhile, admiring the view of his fat log sliding in and out of her stretched hole and watching her play with her swollen chubby pussy lips. With her knees practically resting by her ears, Hadley had easy access to her wet little puss and swollen clit. In this position she made herself cum again, howling as Jack pumped her tight butt and clung to her shaking legs.\n\nFinally, Jack could feel his heavy balls ready to boil over. \"Baby... I'm gonna cum...\" Jack moaned.\n\n\"Cum in my ass,\" Hadley begged, her eyes glazed with lust. The thought of creaming in Hadley's tight butthole sent him crashing over the edge. \n\n\"Oh God, I'm cumming... I'm cumming...\" Jack moaned, \"Oh fuck, here it comes...\" \n\nJack groaned as his churning balls emptied jet after jet of warm cream inside of Hadley's thoroughly fucked butt. When he was finished shooting his massive load, he pulled his wet shaft out of her slimy chute. A large dollop of thick white cum oozed from her stretched pink hole and started to slowly drip down her ass crack.\n\nJack ran his finger over the creamy hole, admiring the amazing sight, as more of his spunk bubbled out of her abused asshole and dripped onto the sheets. \n\n\"Roll over, baby,\" he told her, and Hadley rolled over onto her tummy. He pulled her to her knees, raising her creampied ass in the air. Some of his thick load dripped down her puffy pussy, glazing her chubby lips like a fresh donut.\n\nOccasionally, not as often as when he was younger, Jack was so aroused that he could shoot a load without going soft, and he was thrilled to discover that tonight was such an occasion. Slowly, he eased his tip back into her slimy butt, and using his own jism for lube, began fucking her sweet asshole from behind.\n\n\"Hunh... hunh... hunh...\" Hadley grunted as Jack picked up speed, his hips slapping into her ass as he fucked her.\n\nGrabbing her slim hips he pumped into her tender ass again and again, as Hadley grunted and writhed beneath him. His thick shaft was smeared with cum as he fucked her butt, and when he pulled out some trapped air bubbles escaped with a tiny fart, squirting more of his white jism out of her butthole and spraying it onto his tool. Hadley giggled.\n\nJack gave her pale cheeks a playful slap as he mounted her again, this time standing on the bed and crouching behind her as he fucked her butt doggystyle. \n\nHadley reached a hand back between her legs to play with her pussy while he boned her ass, and she could feel his heavy balls bouncing off of her pussy with every stroke. \n\nJack was in heaven. He gripped her tiny tush, playing with her pliant butt cheeks as he fucked her, spanking them lightly and then pulling them apart so he could watch his meat slide in and out of her stretched tailhole. A scant hour ago his sweet Hadley was an anal virgin and now she was taking his massive cock in her tiny asshole without a problem.\n\nHe pulled out again and groaned at the gorgeous sight of her wet gaping butthole. \"Come here, baby,\" he said to her as he sat on the edge of the bed, and pulled her into his lap. She leaned forward, straddling him and resting her feet on the floor, as Jack lined his swollen prick up with her creamy pink bunghole, then he lowered her light body onto his shaft. He watched her asshole swallow his entire cock until she was balls deep, grinding her soft pale cheeks against his groin. \n\nThey both moaned at the intense sensation. Jack leaned back, and Hadley leaned against his chest, his dick firmly lodged in her ass. Holding her legs up, Jack bounced her on his lap, her tight bootyhole impaled on his greased-up dick. She reached down and fondled his heavy balls, fascinated with the sensation of feeling his slick pole fucking in and out of her open ass. \n\nJack groaned, feeling himself close to cumming again, and reached between her open legs to find her clit. His fingers slid between her slippery lips, rubbing her swollen bud until Hadley came again, shaking and shuddering against him, her greasy ring throbbing around his prick.\n\nAs soon as she found her release, he let himself have his. The sensation in his balls was almost painful as he unloaded his hot cum inside Hadley's backdoor for the second time that night. Hadley groaned as she felt his warm goo filling her ass. \n\nWithout pulling out, Jack rolled them both over onto their sides, Hadley curled in a tight ball, still impaled on his shrinking tool and he held her and stroked her hair. After a few minutes, his softening dick slipped out of her sore bum. A little stream of warm spunk trickled out of her used rosebud, dripping onto Jack's flaccid cock. He held her tight against his body. \n\nAfter all of that exertion, Hadley fell asleep immediately, wrapped in his arms, her creamy anus pressed against the junction of his thighs.\n\nJack kissed her freckled shoulder and nuzzled her neck as he held her sleeping body. He had never loved anyone the way he loved her.\n\nJack loved her alright, but she was young. She had her whole life in front of her. Who knew how long he could enjoy her before she went her own way? And who could blame her? She should be free. But until that moment came, Jack was going to enjoy every moment he got to spend with her. \n\nAnd besides, he thought, having a small laugh to himself, whoever gets her after me, might be thrilled to discover quite a surprise below that sweet, innocent exterior..."
    ],
    "authorname": "TotalKnockout",
    "tags": [
        "18-year-old",
        "butt plug",
        "prom night",
        "shaved pussy",
        "creampie",
        "teenager",
        "older man",
        "gymnast",
        "first time",
        "huge cock"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/hadleys-other-cherry-ch-03"
}