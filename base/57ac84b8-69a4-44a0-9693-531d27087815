{
    "title": "Nothing as Sexy as a Man in a Skirt Pt. 01",
    "pages": [
        "Flogging Molly. Dropkick Murphys. Enter The Haggis. Young Dubliners.\n\nJust some of my favorite Celtic Rock Bands. I got this idea when my wife and I were at a concert in Morganton, N.C., listening to my favorite local Celtic Rock band, Uncle Hamish and The Hooligans. It was three years ago, so I don't know if they're still playing. If they are, look them up, maybe you'll become part of the Kilted Horde.\n\nAnd thanks to the fortyish man in the camo kilt and the attractive young black woman in the short dress with him who sat beside us during the concert. They were obviously in love, and it made me feel good watching them. The main characters are patterned after them.\n\nThis is the first of three parts, in case you want to wait until they're all posted before you start.\n\nThis is for the girl in the black bikini.\n\n..................................................\n\nShe got me good.\n\nShe had obviously been planning it for a while, and had gotten lots of advice. I truly never saw it coming.\n\nHer timing was perfect. I had just completed twenty years with my company, had gotten a bonus of one months' pay, plus my regular two-week paycheck. The next day she cleaned out all the accounts, had me served, claimed I was abusive and had a restraining order in place. She had her lover moved in the next day.\n\nTo make it worse, he worked where I did as a supervisor in a different department. He grinned at me the next day and it took three people to 'persuade' me to keep it away from work.\n\nIt hadn't been love at first sight with Kim. She was one of those women who had been told they were pretty all their life, and had begun to believe her press. She was arrogant, egotistical and racist. We grew up and lived just outside Raleigh, North Carolina, and though she expected to live well, she had no clear plan on how to achieve it.\n\nI met her at the company picnic. My boss was a bit of an odd duck, and invited many of his business associates as a mild thank you. His picnics were famous for their food and door prizes, and were very well attended. Kim worked for his accounting firm as a secretary and general helper. Her dad had called in a favor to get her the job. She actually had to take some courses at the community college before she was offered a permanent position. She wasn't happy, expecting her life to be different.\n\nPeople ate, and socialized, and generally had a good time, waiting for the prizes. Vendors had donated some, but he looked at projected attendance and bought enough prizes to ensure everyone would win something.\n\nThe four top prizes, the ones that would go last, were a twenty four bottle wine cooler in stainless steel with a glass front, a really nice gas grill, a day at a full service day spa for two, and a thousand dollars, cash.\n\nPeople groaned at their prizes while their friends laughed, then laughed when they got something just as goofy. Many of the small prizes were selected with the laughter value in mind. As the small prizes disappeared, and the prizes got bigger, the laughter stopped.\n\nIt came down to me, Kim, a black girl named Sophie, and a guy from our legal firm.\n\nThe lawyer won the trip to the spa, and Kim won the gas grill. \n\nShe really wanted the wine cooler, and was complaining loudly. It was obvious she had made several trips to the free bar.\n\nSophie won the wine cooler, and that meant I won the thousand. As I was picking up the envelope I could hear Kim.\n\n\"What's a nig...\" was all she got out before her friend stamped on her foot.\n\n\"Ow! That hurt! But seriously, does she look like a wine drinker? Mad Dog, maybe. Everything else would be lost on her.\"\n\nPeople were staring and Sophie looked like she wanted to disappear. I knew her, knew she lived with her mom and her two small kids. No husband, no child support, money was tight.\n\nI walked up and hugged her.\n\n\"Congratulations, Sophie. If you ever want to sell it, I'll give you five hundred for it.\"\n\nShe grinned instantly, grabbed my hand and shook it.\n\n\"Deal!\"\n\nI handed her five of the hundred dollar bills. Turning to the lawyer, I offered him two hundred for the spa trip. He laughed.\n\n\"My wife has a standing appointment there, so it wouldn't be a thrill for her. It really is a nice place, but I think she would like the money better.\"\n\nHis wife was standing beside him. Her prize had been a dozen golf balls.\n\n\"Deal!\" she said. \"I'll donate this money in his name to the literacy council we help sponsor. I'll even give you the golf balls as a thank you. But truthfully, you don't look like a spa type to me.\"\n\n\"Oh, I'm not. But I have a friend who could use a little pampering.\" I turned and handed the certificate to Sophie.\n\n\"Here. You deserve this. Take your mother; I'm sure she'd enjoy it. I'll even watch your kids if you need me to.\"\n\nSophie was crying, and she and her mom gave me several nice hugs. I looked over at Kim.\n\n\"Ah, Miss Morris still want the cooler? I don't need it, I have the twelve bottle model at home. If you want to trade, I don't have a gas grill.\"\n\nShe looked hard at me.\n\n\"You've shamed me, sir, something hard to accomplish. I accept your kind offer, IF you invite me over for a meal. I'll even bring the wine.\"\n\nShe sounded sincere, so I accepted. She also congratulated Sophie, wishing her a pleasant trip to the spa.\n\n..............................................\n\nShe came over, and complimented my cooking after we'd enjoyed a good meal. We drank one bottle of the wine she brought. I showed her my wines, and she was amazed at the volume.\n\n\"I got hooked on wine while I lived in Europe. Spent time in France, Germany, Portugal, and Italy touring the wine regions. A few of these bottles are from vineyards I had actually visited.\"\n\n\"How long did you live overseas? What part did you live in while were you there? I've never been out of the country; I'm so jealous.\"\n\nI had loved living there, had quite a few fond memories, and some unpleasant ones.\n\n\"I lived in Scotland and England for three and a half years while I was in service. I took advantage of leave time to visit as many places as I could.\"\n\nI didn't elaborate, and she changed the subject.\n\nIt was nice enough spending time with her that I asked her out. She accepted, and the rest, as they say, was history. We married. I hinted around about children, but she said she couldn't bear children. I concentrated on her, spoiling her.\n\nThe sad thing about spoiling someone is that if you do it long enough they become rotten.\n\nA fact that occurred to me while I read the divorce papers.\n\n................................................\n\nI was reeling, not making good decisions. It got worse, all three of our vehicles were in her name, because I was always working and she had time to do the paperwork, and she threatened to have me arrested if I didn't give my truck to her. She was pushing hard for me to sign some papers, telling me she would see I was treated fairly, that I would get what she called a 'good deal' if I just let the divorce go through on her terms.\n\nI finally recovered enough to get a lawyer. I had a good friend, a lot older, that helped me out of my funk.\n\n\"Snap out of it boy. She fucked you over pretty good. Now, are you gonna roll over like a good little bitch, or are you gonna finally remember you got a set of balls?\"\n\nI was coming out of my shock. Up until it happened I loved her deeply. Now I couldn't wait to burn the bitch to the ground. I told him so.\n\n\"Good\" he said, handing me a card. \"Three o'clock Monday. Don't be late.\"\n\nI looked at the card. Donovan, Harris, and McGill. THE divorce lawyers in this part of the state. Maggie McGill, the woman seeing me was supposedly a shark walking on two legs.\n\n.............................................\n\nI showed up on time; and was ushered into a nice office, impressive with understated elegance. It said money with taste.\n\nShe was not what I was expecting. A third generation lawyer, granddaughter of one of the founders, she was twenty nine, tall, slender, with blue eyes and red hair that harkened to her heritage.\n\n\"Pleased to meet you, Mr. MacLough, I just wish we had met under more pleasant circumstances. Uncle Will speaks highly of you, and he doesn't do that for many people.\"\n\nWell, that explained how I happened to be here. She asked me to tell her the whole story before we planned our response.\n\n\"It was a surprise. We weren't fighting, had a good social life. No kids, I guess now that was a good thing. We made love as often as we always did. She was never a bitch, never cut me off, never insulted me more than is normal in a marriage. We fussed, but nothing major. Five years, shot to hell.\"\n\nShe looked at me.\n\n\"Your wife must have been a hell of an actress. When did she have time to cheat? I see by your job that you don't take business trips. She works too, doesn't she?\"\n\n\"Yes, she's a secretary at an accounting firm. Been there for years. We had to have two incomes to afford the house she wanted. I work ten hour shifts, so she's alone about three hours in the afternoons. Plus I work on my hobby business Fridays, but I'm usually home by five. She has a girls night out on Thursdays, but she is usually home by ten. I bowl in a league during the winter, usually Mondays and Wednesdays. I'm home by nine thirty. Not a big window of opportunity, although her lover works an eight hour shift.\"\n\nShe sighed.\n\n\"You'd be surprised. Unfortunately, I've seen it all. If they want too, spouses will always find a way. If you don't suspect anything, they can almost do it in front of you and you wouldn't notice.\"\n\nI looked at her hand, noticing what can only be described as a rock on her finger. She saw me look and smiled.\n\n\"Yes, I'm married. Four years now. My last name is actually Stewart; I only use my maiden name in court, because of the family connection. Believe it or not, he's a family law specialist too. He's a firm believer in arbitration, and I love courtroom battles, the drama and intrigue. Between us, we've faced about every situation you could imagine, so we know all the pitfalls. Plus, we have an ironclad prenuptual, it would be very, very expensive and embarrassing to divorce, if you're the cheater. And we never take our work home.\"\n\n\"Now, what do you want? Any love left?\"\n\nIt was my turn to sigh.\n\n\"None. I'm over the shock and grieving, and mostly over wanting to kill her. Now I just want shut of her and to get on with my life. Plus, I want my fair share of what we've accumulated together. I don't want the house, but I want my share of the value. I want my share of the vehicles too, but I don't want any of them. And everything else I can get.\"\n\nSo for ninety minutes we went over my finances and options, and formed a plan. I felt better when it was over.\n\n\"All right, we'll counter with adultery. It won't mean anything except in the court of public opinion, but some judges take it into consideration. You can also sue him for alienation of affection in this state if you want. You won't get anything, but it'll cost him in lawyer fees and public embarrassment. We could use it for leverage. She has no proof of cruelty, so we can get the restraining order dropped. Anything of personal value you feel like you need to get out of the house now?\"\n\nThis had really been bothering me.\n\n\"Yes, I need some clothes, and I'd like to get my tools, weapons, and most of all my musical instruments.\"\n\nShe looked at me and grinned.\n\n\"Man toys. What do you have?\"\n\nI grinned back.\n\n\"My guitars, my tin whistles and flute, my accordions, and my pipes.\"\n\n\"Pipes?\"\n\n\"Bagpipes. Nae for nougth be me name MacLough.\" I said in my best brogue.\n\nShe smiled.\n\n\"Part of my fee will be you playing for me sometime. I'll start the paperwork, get you in the house by tomorrow. That work for you?\"\n\nFor the first time I felt good about my situation. \"That would be great. Thank you so much. Now, who do I give this to?\"\n\nI had a cashiers check for twenty five hundred for her. She seemed surprised.\n\n\"Can you afford this? This is kind of a favor for my Uncle, and I know she emptied your accounts.\"\n\nI smiled.\n\n\"She wasn't as clever as she thought. That hobby I mentioned? I'm a wood carver. Not like a professional artist, just whimsical stuff. I get hardwood scraps from a furniture factory, and pine and spruce pieces from a local mobile home plant. Plus your Uncle lets me cruise his woods for usable pieces. I have two craft shops up in the mountains that sell my stuff on consignment. I've kept that money in a separate account. Ninety eight hundred, so far. I was gonna use it to take her on a nice vacation for our ten year anniversary. Don't think that's gonna happen.\"\n\n\"All right, I'll take it, but she started this, so I'll try my best to make our fees payable by her. If it works we'll refund the money.\"\n\nI left feeling a lot better.\n\n.................................................\n\nMy wife was in for a set of shocks.\n\nI met Maggie, Kim's lawyer, and a deputy sheriff at ten the next morning. Kim was there, along with the asshole, and she was fit to be tied. She made it plain he was there for her protection. The lawyers and the deputy sheriff just looked at each other and shrugged. I laughed.\n\nI loaded my clothes, then things got interesting. The lock was broken on my gun case, and both pistols and one shotgun was missing.\n\n\"Kim, where's my weapons?\"\n\nShe smiled. \"Oops. We had a break in a few days ago. They were stolen.\"\n\nMaggie and the cop just looked at her. The cop was pissed. I don't think her lawyer knew about it either. \"Did you report the theft?\"\n\nShe looked at the cop.\n\n\"Hadn't got around to it yet.\"\n\nHis eyes narrowed. \"Anything else missing?\"\n\n\"Just a few more things. His guitars and the rest of his instruments, some tools. I'll make a list and report it soon, I promise.\"\n\nMaggie was furious and looked over at her lawyer. \"Have a long talk with her, Bob. Tell her it would be in her best interests if those items could be recovered, quickly.\"\n\nKim nearly had a fit when she found out how valuable everything was. The guns were around two thousand, the tools a few hundred, but the instruments were worth over ten grand.\n\nI had everything on computer, including serial numbers, for insurance purposes. The cop filled out a report, and gave me a copy. I remarked it would be really interesting to see what our home owners insurance had to say when the claim was filed. \n\nShe had miscalculated when she didn't clean off the computer, and threw a fit when I took it. I pulled the receipt out of our file cabinet showing I had bought it, so she had no choice.\n\n\"I need to move some stuff to my laptop first\" she said, looking desperate.\n\n\"I'll see everything is emailed to you\" said Maggie, with a smile.\n\n\"It's personal and private.\"\n\n\"Then it shouldn't have been on HIS computer. If it makes you feel better, we'll set it up at my office. Bring your laptop, and we'll transfer anything you want. Call me when you're ready. And if the court decides it's community property, we'll give you half the value.\"\n\nWe left, and I followed her back to her office. Her lawyer stayed behind, saying he needed to consult with his client.\n\nMaggie was almost giddy. \"I hope you didn't have anything embarrassing on your hard drive, I'm gonna have a guy take it to pieces.\"\n\n\"Well, it's just what you'll find on any normal guy's computer. A little porn. And I do spend some time reading stories on a site called Literotica and another, SOL. I always thought that stuff was just made up until a few weeks ago.\"\n\nNext, although all the vehicles were in her name, the insurance was in mine. I canceled the insurance on the two that were paid for, but kept it on the one we still owed on, and instructed the insurance company that when it came due in two months she was responsible for the bill. I neglected to tell her, and two weeks later the state sent a trooper to seize the tags. Kim almost got arrested, especially when he told her it was a hundred dollar fine and a two month penalty period before she could get her tags back.\n\nI had bought a little Ford Ranger from Will. It had been for sale before my troubles started, and knowing my circumstances he gave me a really good deal. It was almost twenty years old, but was in pretty good shape, mechanically and cosmetically. I actually enjoyed driving it.\n\nAll that was legal for her to drive was the truck, and it had a manual transmission, and she didn't know how to drive a stick. I recorded the screaming, profanity laced tirade I got from her on my phone.\n\nMaggie had her experts take apart the computer, and it sank Kim.\n\nHer whole affair was revealed in detail through emails. Her lawyer tried to prove we had invaded her privacy, but the computer was my property. She had sold my musical instruments on Ebay, and I got them all back in three months. The guy who bought my pipes really didn't want to give them up, but was looking at charges of receiving stolen goods if he didn't. Never got my weapons back, but she had to pay me the retail value. My tools turned up at a pawnshop two towns over, and surprise, surprise, they were traced back to her lovers' brother. Another bargaining chip for me.\n\nI could have charged her with theft and selling stolen goods, but agreed not to for more favorable terms in the divorce. \n\nWhen the smoke cleared, she lost big time.\n\nI didn't want the house, so she and her lover had to buy me out or agree to sell it. They couldn't afford it, so it was listed. She was living in it until it sold, something she didn't think would happen soon. The real estate company actually managed to sell it pretty quick at almost the asking price. Kim tried to stall but had to sign the papers. \n\nI got my choice of the vehicles, so I took her SUV and left her the truck(and the payment)and the Mustang. Returning half the money she had taken out of our accounts made her ill. She even had to pay my attorney fees, which she complained about bitterly. The free and easy lifestyle she and her lover conspired to have me finance evaporated, and they had to struggle to pay the bills.\n\nWas I happy? No. I felt good about the divorce, but not that I had to have one. Reading her emails, how she belittled me, the scorn she felt for me, didn't help at all. Apparently, I was just another dumb redneck with no ambition. I still didn't understand, and she was damn sure not going to tell me.\n\nI stayed in a funk for a few months. I got out, went to bars and parties, but stayed depressed.\n\nI was in my woodworking shop, an old garage I had rented from Will, playing a dirge on my pipes when my friend Tony stopped by. He was behind me when I played, and I didn't see him for a couple of minutes. I let the pipe drain of air.\n\n\"Damn, that was depressing. What was that?\"\n\nI grinned. \"A dirge. Fittingly, it's called 'Maclough Comes No More'.\"\n\nHe picked up my Martin, and we played a few reels, upbeat, happy stuff. When we stopped I was grinning. He grinned back.\n\n\"You know what? I think it's time for Mad Tam to return.\"\n\nMad Tam was my alter ego, a persona I had developed when I played in a band with Tony and some friends years ago. I had quit before I got married, after six years. Mostly good times, as I remembered.\n\n\"That was a different world. I'm forty now, I'd look kind of silly.\"\n\n\"You're a well preserved forty. You could still rock an audience if you felt like it.\"\n\nI thought about it. He pushed.\n\n\"Tell you what, dude; bring your stuff over to Dave's barn this Saturday. We're cooking out, and we could jam some, just for fun. What else you got to do?\"\n\nThe short answer was nothing, so Saturday at six, I was parked in their driveway. Dave was another old band mate. I had lost contact, and heard he got married.\n\nWe were all around forty, except for Dave's wife, a cute little dynamo of thirty four, and a young couple, her nephew and his wife. We ate, socialized and had a few beers, before Dave ushered us into his barn. He had knocked out the stall walls, leaving a big open space. There was even a little band stand on one end.",
        "It was fun. Seems the nephew could play drums, and his wife was a damn fine fiddle player and singer.\n\nWe had played mostly traditional songs, and during a break Robbie, the drummer, bitched.\n\n\"Could we play something that I can actually stay awake for all the way through?\"\n\nI put down my pipes and picked up my accordion, whispering to Dave and Tony. I asked Molly(how Irish is that? She even had red hair)if she knew the piece. She instantly lit up.\n\n\"Count it off, Robbie.\"\n\nSalty Dog, by Flogging Molly. It was fast, loud, and a ball to play. We were a little rough at first, but by the third time we ran through it we were almost perfect. Then we went off into the Young Dubliners, Waxie Dargle. My tin whistle and her fiddle complimented each other.\n\nDave's wife, Amy, was a killer keyboard player, and after an hour it was like we had been playing together forever. We didn't run out of steam until after one in the morning.\n\nThe older couples were grinning, but Robbie and Molly were walking on air.\n\n\"We gotta do this again!\" he gushed, while Molly laughed and step-danced across the floor. I surprised her by getting up, with my pipes, and doing a little sword dancing, and finishing with the hornpipe while Molly played her fiddle.\n\n\"Where did you learn that?\" she said, after we finished.\n\n\"From my grandfathers, Fergus and Ewen MacLough, may their souls rest in peace. And from some friends I met while I was in service. Where did you learn step dancing?\"\n\n\"My mom teaches. I'm first generation Irish American, she came from County Dare when she was seventeen and never went back, except for her honeymoon and her twenty year anniversary.\"\n\nIt was late; everyone had a bit of a buzz, so Dave put us all up for the night. I got an air mattress in the barn, but slept surprisingly well. Amy and Molly fed us all a big breakfast before sending us home with a solemn promise to come back the next Friday. \n\nI was in a great mood all week. Many of my friends commented, saying they were glad I was back. I actually saw Asshole twice, and grinned at him both times. Word of what happened had gotten back to the owner of the company, and her lovers' chances of advancement evaporated. Everyone knew his days were numbered; the owner liked me and hated cheaters, especially ones in his employ. Hearing they were having to live tight to afford the new house made me smile.\n\nI had landed in a nice apartment, one of several duplexes owned by Uncle Will. With my new-found freedom I had very few bills, and could actually work in my shop at night without guilt. My pieces were selling well, and the two shops kept urging me to do more. I did, for a little while, before I backed off to my old level. It was getting to be more of a job than a hobby.\n\nFriday nights at the barn occurred every other week, and more and more people were starting to attend. One night they had a little ceremony and presented me with a new tam. Molly had seen old pictures of me with one on and had ordered it for my forty-first birthday. I had let my hair grow longer than I had in years, and it looked good with it. At least the girls thought so.\n\nIt had been eight months since Kim had dropped the bomb on me, and I was surprised at how little I missed her now. I had no trouble recalling her deceit and treachery, but our married life seemed to fade into fuzzy memories that just didn't seem real. Maybe I hadn't loved her as much as I thought, or maybe she had managed to kill that love so completely it had no meaning in my memories. Regardless, I had seen her once or twice and it didn't really bother me. As long as she lived in her world and left me alone, I was fine.\n\nMolly and Robbie were friends with the owners of a pub/dance hall called O'Douls who were thinking about bringing in some Celtic inspired bands to pick up more business on Fridays and Saturdays. They had invited them out to the barn to listen to us play, and before the night was over we were committed to the following Saturday.\n\nWe held a short meeting. Dave, Tony and I had been down this road before, so we knew what we were getting into. For Molly, Robbie, and Amy it was a new adventure.\n\n\"All right\" I said, \"if we do this, let's do it right. This can be a lot of fun, but I really mean this, the first time it becomes a job, or you don't feel like playing, it's over, at least for me. I've discovered life is too short to do things you don't enjoy. Agreed?\"\n\nThey all nodded assent.\n\n\"Right then, let's decide. What kind of band do we want to be?\"\n\nI saw confusion in the three who hadn't done this before. I explained.\n\n\"Do we want to do just rock tinged pieces? Do we want to do some traditionals, some acoustic sets? My suggestion, do them all. It'll give us a broader base, and more opportunities to play.\"\n\n\"And we need to develop a show. Any fool can stand there and sing while they play an instrument, but if that's all they do, they might as well be furniture. They'll be forgotten by the time the patrons get home. If you put on a show, add some humor, develop a hook that people will remember, they'll talk about it. That way, the next time they decide to go out, and see us advertised in the entertainment section of the paper or the internet site of the bar, chances are that we'll be the ones they come out for. That will make the bar owners happy, which will mean we get more bookings, and more money.\"\n\nI paused. \"And it probably wouldn't hurt if we had a name.\"\n\nThis led to a long debate. Celtic and Gaelic names were discussed, but we opted for something simpler, something easy to remember. \n\nRobbie came up with the winning name. In the late nineties a British party band called Chumbawamba had a hit with a song called Tubthumping. I really liked it, and had played it once for him and he had looked them up, adding it to his favorites.\n\n\"How about The Tub Thumpers? It's a party sounding name, while sounding old fashioned at the same time. It's catchy, and easy to remember.\"\n\nWe all agreed it was great.\n\nWe talked about a hook, and Tony and Dale suggested I wear one of my kilts.\n\nIt'll be unusual, and it'll get attention\" Molly giggled, \"after all, what's sexier than a man in a skirt, playing the accordion?\"\n\nThey broke up laughing but talked me into it.\n\n................................................\n\nShow time. It was a brand new experience for three of us, and it had been a long time for the rest. I held a pep talk before we went out.\n\n\"I won't tell you to relax, or not be nervous. That's natural, the first few times. I will tell you to remember we're getting paid to be on that stage, so be professional, and do your best. Ready to rock these people?\"\n\nThey were.\n\nWe came out, all but me. They started out playing, and I strutted onto the stage in full dress, kilt, sash, white shirt, vest, knee socks, and a sporran. And of course, my tam. The only thing nontraditional was my black Rocky combat boots.\n\nWe did a rocked out version of Scotland the Brave, probably the most recognized bagpipe piece in the world. In a few minutes they were clapping and some were dancing. When it ended a few just stared at me. I mugged for the crowd.\n\n\"What? Is me slip showing?\" I said, using my best brogue.\n\nThat brought a round of laughs. I put down the pipes and strapped my accordion on.\n\n\"Flogging Molly\" I said, and we ripped into an extended version of Salty Dog. The crowd was getting into it, dancing, clapping. trying to jig along.\n\nWe switched and did a Corrs song, Angel, with Molly and Amy singing in harmony. I played my tin whistle as a counterpoint to Molly's fiddle. The crowd was actually cheering. We did a few traditional jigs and reels, fast paced and fun, before doing a slow ballad. We finished up the set with All Around My Hat, an old Steeleye Span song, with tight harmonies and a blasting rock guitar. By then we were soaked in sweat and breathing hard. The fifteen minutes were appreciated.\n\nI was too wired to sit down, so I worked the crowd. One girl, already a little tipsy, asked what the standard garb under a kilt was.\n\n\"Nothing\" I said, looking her in the eye. \"Where do you think 'going commando' comes from?\"\n\nI left her with her mouth hanging open and her friends laughing as I jumped back on stage.\n\nWe finished the show with a Dropkick Murphys song, Going Out In Style, about an Irish wake. We rocked it, and the crowd soon figured out the words and sang along.\n\nWe got handshakes, hugs, our backs patted, and questions about where the songs came from. I had gone over this with them all, be nice, answer questions if you can, engage them in conversation for a bit. Word of mouth advertising was priceless.\n\nThe owners were ecstatic. We were booked again for two weeks out, they already had another group scheduled for the next.\n\nWe rehearsed, adding new songs, fine-tuning others. Added a few comedy bits, worked on some acoustic stuff.\n\nThe place was packed when we played again. The managers had posted pictures on their Facebook account, and comments from customers. We tried not to disappoint them.\n\n................................................\n\nI let my hair continue to grow, and had started sporting a handlebar mustache, something I had always wanted to do. Like Molly, I was a redhead.\n\nWe were getting really good responses when we played. The entertainment editor for the local paper heard us one night, and they did a spread on us the next week.\n\nAlternative to rock, in the best possible way.\n\n\"The Tub Thumpers are a high energy group, mixing bagpipes, accordions, rock guitars, Celtic fiddling, thundering drums, excellent keyboard work, and a driving bass line into something better than the individual parts, and a whole lot of fun. Definitely worth seeing, if you're out and about. They'll be at O'Douls this Saturday and the Irish Rose Pub next Friday. If you're looking for a fun night, look no farther.\" \n\nWe could have played three or four nights a week, if we had wanted. We decided not to, early. Dave and Amy had two kids, and Tony was divorced, with a daughter, and he made it absolutely clear the weekends he got with her were the most important thing in his life, so we only played every other week end, sometimes squeezing in an extra Friday.\n\nWe had been doing it for about five months, refining, getting better, until we were a well oiled machine, almost flawless. Tony and I were the only singles in the band, so we got hit on a lot. It was fun for a little while, and we were careful, no marrieds, always with protection. It was no strings attached sports sex, fine if that's what you wanted, but we both realized how silly it was for forty somethings to act like teens, and we both slacked off.\n\nMolly and I had become close, and she had adopted me as a second father, a role unusual for me. I was kind of glad Kim and I hadn't had children, knowing how rough divorce was on them. Still, deep inside, I wished I'd had a chance to experience fatherhood. I tried to make up for it with Molly.\n\nIt was street festival time in our area, local towns having them on successive weekends to avoid competition. We played several, some acoustically, some as a full on band. We were something different from the usual fare, and were pretty well received. We even got booked into a couple of county fairs, and played for some pretty big audiences.\n\nAmy and Molly had found a site on the internet that sold custom-made kilts, and surprised us one night, coming on stage in matching kilts. Not traditional kilts, they were pink with little white poodles. Not to be outdone, Robbie ordered one that was black with little skulls and crossbones. Tony and Dave gave in and ordered ones in camo print.\n\nWe knew we had a following when people asked where we got them, and started showing up at our shows wearing them. One guy even set up a website for our fans, calling it \"Clan MacThumper\". We even had a couple of YouTube videos out, professionally made, to advertise for new business.\n\nI had arrived early for practice, and was noodling on one of my accordions, loosening my fingers. I had just seen Annie Get Your Gun the night before on AMC, part of a Howard Keel marathon. I had seen them all before, my grandmother was a huge fan.\n\nWithout thinking, I was playing 'Anything You Can Do I Can Do Better'. Molly had come in without me noticing, and suddenly she played counterpoint on her fiddle. I looked up and grinned, singing the first line. Amazingly, she knew the lyrics, and we did the whole thing. When we stopped, laughing, the rest of the guys broke into applause, having come in while we were playing.\n\n\"We gotta put that in our set somehow, maybe as a comedy point\" gushed Amy.\n\nWe all agreed and we worked with it until we thought we had a workable version.\n\nThe Starlight Room was a little more upscale than the pub type places we usually played, but they wanted us, and were willing to pay us a little extra. It was frequented by a more highbrow clientele, professionals like lawyers, doctors, upper-management country club types.\n\nThey were a bit stiff during the first set, but had loosened up the second. At the start of the third I went onstage alone, with my accordion, and started playing 'Anything You Can Do'. Molly joined me and did counterpoint, and we got into a little mock argument while the rest of the band took their places. We got progressively louder until Amy interjected.\n\n\"Guys, Guys, stop!\"\n\nShe paused, looking over the crowd.\n\n\"I tell you what. We'll let the audience decide. I'll take a microphone and go around the room. We'll ask both guys and gals to say something their sex can do better than the other. The one with the best answer gets a free round of drinks for their table. Is that all right with you guys?\"\n\nThe crowd got into it, laughing and cheering. We started playing the song, stopping when she did to hear what they said.\n\nIt went from the expected to the obscure. Working on cars for the guys, domestic stuff for the girls. Most answers were booed. One guy, obviously an architect, shouted out \"Design things!\" \n\nMolly spoke up, surprising us.\n\n\"Eileen Gray, Art Deco style.\"\n\nApparently there was a large contingent of architects in the bar, because names flew fast and furious.\n\n\"Kazuyo Sejima!\" \"A.T. Mann!\" \"Frank Lloyd Wright!\"\n\nIt would have gone on but we declared it a draw and moved on. \n\n\"Keep a secret\" was also declared a draw.\n\n\"Better cooks\" said a woman. This time I jumped in.\n\n\"Rick Bayless, Jacques Pepin, the Deen Brothers,\" I named a few more before I ran out. Okay, so I watch a lot of PBS.\n\nAmy answered for the women. \"Paula Deen, who do you think taught those boys? Rachel Ray, Lydia Bastianich, JULIA CHILD!\"\n\nAnother draw, but the crowd was having fun.\n\n\"Time for one more. I'll make it easy, just for the women. Name one thing that there is no doubt women can do better than men.\"\n\nThere were a few tries, but nothing major. There was a woman waving, trying to get our attention. I pointed her out to Amy.\n\nI had noticed her before, it was hard to miss a woman of such beauty. She had long black curly hair that hung halfway down her back, skin a light cream color that spoke of non white ancestry. A great body, and full sensuous lips. Oddly she was with a group of women. I couldn't see a man alive not wanting to claim her. Ladies night out, I guess.\n\nShe stood, looked right at me, and smiled brightly.\n\n\"Fake an orgasm,\" she said in an upper crust British accent. The crowd roared in laughter, as the air drained out of my accordion.\n\n\"Men, we stand defeated,\" I said into the microphone, \"give our winner a round of applause.\"\n\nAmy jumped back onstage, and we played an upbeat, rousing set of reels and jigs.\n\nWe had fooled around with some old Van Morrison stuff. I didn't get to sing much because of my pipes, just when I had the accordion or a guitar, but they let me sing this one. I looked right at the woman who had won the contest while I sang 'Brown Eyed Girl'. An odd look came on her face, then a little smile. I think she enjoyed it.\n\nAfter the show I saw her talking to Amy and Molly. Molly rode back with me from the club, grinning at me.\n\n\"What?\" I said, finally.\n\n\"Somebody likes you!\" she said in a little singsong voice. It made her sound like she was ten years old.\n\nI couldn't help grinning. \"Now who would be interested in an old broken down bagpipe player?\"\n\nShe punched my arm. \"You're not old! And you're a fine looking man. I've often thought your ex-wife was an idiot to let you go.\"\n\n\"I have to say I agree with you there, baby. Now, which one of those geriatric goddesses was interested in me?\"\n\nI couldn't keep the humor out of my voice. It had to be the cougar at the club, fifty if she was a day. Still looking good after some very expensive work, probably courtesy of an ex. She was definitely prowling. I shot her down gently, and noticed her at closing time on the arm of a very drunk twenty something, smirking like crazy as he latched down on one of her store bought boobs.\n\nMolly laughed. \n\n\"Not them. This one is younger than you and very pretty. She was asking all kinds of questions about you while we packed up, most noticeably if you were attached. I was very happy to report your single status. I'd bet my fiddle she makes a run at you tomorrow.\"\n\n\"Did this dream woman have a name? Will I recognize her?\"\n\n\"As much as you were staring at her tonight, I don't think you'll have any trouble. She was the contest winner. Her name is Amanda Abasi.\"\n\nMy hands tightened on the steering wheel. \"You're kidding right? She's way out of my league. And I'd bet my life she's under thirty.\"\n\nMolly giggled. \"You're probably right on both counts. Still doesn't stop her from being interested.\"\n\nShe leaned back against the seat and was asleep instantly. Molly sleeps like a rock, and it took me and Robbie both to get her out of the truck. He was grinning.\n\n\"What'd you think?\"\n\n\"About what?\"\n\n\"About Amanda. Personally, I think she needs glasses. Or she might have been drunk. Maybe she has a redhead fetish.\"\n\nHe was enjoying this way too much.\n\n\"What I think is it's not nice to tease an old man about something he could never have. Goodnight, Robbie.\"\n\nWe were playing there again the next night, a rare thing for us. I thought about it as I fell asleep.\n\n.........................................\n\nTrue to what Molly said, she was back the next night, with just one girlfriend. She smiled, talked to us on breaks, told us how much she enjoyed our music.\n\nThe ice finally broke while we doing our 'upskirt' skit.\n\nMolly, Tony, and I were on stools with acoustic instruments, doing some slow ballads, when Molly started giggling on cue. We stopped playing.\n\n\"Anything wrong?\"\n\n\"No, no, let's keep playing.\"\n\nTwo minutes later she was giggling again.\n\n\"For heavens sake girl! What is wrong with you?\"\n\nShe giggled once more and pointed at Amanda and her friend. \"They're trying to look up your kilt!\"\n\nI dropped my tin whistle, grabbed a mike, and jumped off the stage, charging them. \"Is that true, young lassies? Trying to get a cheap thrill off a poor, hard-working musician? Shame on you.\"\n\nHer friend was almost crawling under the table in embarrassment, while Amanda just grinned. I kept ranting. \"I have feelings you know. I'm not just a piece of meat. Well, answer me! And I'm up here, stop staring!\"\n\nAmanda just grinned and shouted out so the microphone picked up.\n\n\"You all think so. I admit it, I was staring. Just what DO you have on under that kilt?\"\n\nI played it up for all I was worth.\n\n\"So this is what it's about. You want a peek at me knickers? Pervert. Well, go on then, have a good look, ye shameless hussy!\"\n\nI turned my back and bent over, sticking my rear in her face. This is usually the part where they glow red and stutter. She just reached over and flipped up my kilt, exposing the black Speedo I wore when we did this, just in case. Like I said, I work out a lot, and I'm proud to say I'm in pretty good shape.",
        "Before I could move she reached up and slapped my ass. \"Ooh! Nice and firm! Just how I like them.\"\n\nThe crowd roared and I played it to the hilt. I stood and started blustering.\n\n\"Well I never...you cheeky girl! Ye've seen me knickers! Now we have to marry to save my virtue.\"\n\n\"I'll have to see a lot more than your knickers before I consent to marriage, just to make sure you measure up. And I'd bet your virtue is long past rescuing.\"\n\nPeople were laughing so hard they had tears in their eyes. I surprised her by jumping into her lap.\n\n\"You silver tongued temptress! Kiss me!\" I was batting my eyes, trying to look sultry. I think no one was more surprised than I was when she grabbed my head with both hands and gave me a hard kiss. No peck on the lips, but a full on kiss that lasted long enough for her tongue to slide across my lips, asking permission to enter. I was just starting to kiss her back when she stopped. By the look on her face she was as amazed as I was.\n\nI jumped off her lap. She patted my bottom twice before I could get out of reach, giggling.\n\nHopping back on stage, I yelled at the crowd. \"Miss Amanda Abasi, ladies and gentlemen. Give her and her friend a big hand!\"\n\nShe seemed surprised I knew her name, but waved when the spotlight hit her.\n\n..................................................\n\nShe came up as we were packing our equipment, chatting with Molly and Amy. Her friend was nowhere to be found.\n\nShe smiled at me and batted her eyes, while Molly giggled. \"Seems I'm stranded. Would my future husband consider taking me home? After all, we're not strangers now are we? Maybe we could stop somewhere first, fancy a coffee?\"\n\nI could listen to her talk all night. Her voice brought back some very pleasant memories, and a few painful ones.\n\nI stuttered before I could get out that I'd love a coffee. Molly and Amy gave me a push.\n\n\"Well, off with you then. We'll finish packing up. Bye, Manda.\"\n\nShe took my hand and led me out, giggling when she saw my little truck.\n\n\"Oh, bit of a redneck, are we?\"\n\nI just grinned, dropping my brogue.\n\n\"Yes I am, darlin'\"\n\nWe stopped at a Denny's, about the only place open at that time. Amanda surprised me by ordering a full breakfast. I just had coffee. She filled me in on her history between bites.\n\nBorn in England, to a British mother and a Kenyan father. She was white, he was half white, which explained her skin tone. She paused.\n\n\"Any problem with that? The biracial aspect, I mean?\"\n\n\"Not in the least. It gives you quite the exotic look. I like it.\"\n\nShe flushed a little before continuing.\n\nRaised in Kenya, her parents divorced when she was twelve, and she moved back to London. Studied at Edinburgh before coming to the states to get her medical degree at Duke, she had a year and a half of residency to go before she was done. She started university late, and she was twenty nine. I got the feeling her parents had money. Young, beautiful, rich, a doctor, way out of my league.\n\nShe pried until I told her I was forty-one. She seemed surprised, thinking I was mid-thirties. I told her I had been pretty much raised by my grandparents after my parents died, that I had been in the military, that I was a simple factory worker, part time musician and woodcarver. She already knew I was divorced.\n\n\"Whose fault?\" she asked, with what I found to be her usual directness.\n\n\"I don't really know. She threw me out, if that matters. Already had my replacement lined up. Never gave an indication she was unhappy, never gave us a chance to fix things. She won't talk about it, and I don't care enough anymore to try and find out.\"\n\nIt was almost four before I got her back to her apartment. She had roommates, so I didn't go in. She gave me several very nice kisses, to the point the windows were steamed, before she jumped out.\n\n\"See you next week,\" she cried, as she rushed to her door.\n\nHuh? When? I didn't even get a number.\n\n...............................................\n\nDespite the heavy ribbing I got from the guys, I had pretty much forgotten about it. I wrote it off as just another little rich girl walking on the wild side, slumming a little.\n\nImagine my surprise when she showed up at the barn while we were loading our equipment the next Saturday. We were playing back-to-back weekends, something rare for us. Tonys' daughter was off at band camp so he was available. It was close to vacation time, and everyone wanted to make a little extra money, so we decided to work. We were getting more money as our popularity grew, to the point that we were making more doing this than at our regular jobs.\n\nShe sat at the band table, making it plain she was with me. I got hit on by a very drunk woman, and she didn't like it at all, telling her in no uncertain terms I wasn't available. I got a little glimpse of her temper, filing the information away. I still couldn't see her attraction to me.\n\nI took her home again, stopping for breakfast. We chatted some before I hit her with the question that had been on my mind all night.\n\n\"Manda, what's going on here? You're young, obviously well off, and very beautiful. I'm an average guy, twelve years older, a factory worker. I don't see this going anywhere.\"\n\nShe sat up straight, a slight flush on her face. \"Direct and to the point. I like that in a man. I'm attracted to you, for a combination of reasons. Maybe I like older men. Maybe I've got that redhead fetish Robbie talks about. Maybe I like your gentleness and unassuming style. Most of the men I've dated are doctors, lawyers, businessmen. Most are alpha types with bloated opinions of their self-worth. They're more worried about how I'd look on their arms at social events than what kind of mother I'd make. Let's get to know each other. If it goes nowhere then so be it. All right?\"\n\nI still didn't see a future, but was so charmed by her I agreed to a date the next Friday.\n\nOf course I caught hell from the band, and Amy and Molly lectured me several times.\n\nDon't be late. Make sure my SUV was clean and shiny. Bring her flowers. Take her somewhere nice for dinner.\n\nWhen I had enough I stopped them.\n\n\"Enough! Molly, I was dating when you were in diapers and Amy was in middle school. I think I can handle one night with a beautiful woman.\"\n\nThat didn't even slow them down. Finally Friday came.\n\nI had trimmed my hair, waxed my mustache, put on a nice suit. I had made reservations at an upscale steak house for dinner. She had on a simple, knee length red dress that set her complexion and hair off perfectly. She was a walking dream.\n\nWe complimented each other on our looks and went off to dinner. I was surprised when she ordered the sixteen-ounce T-bone. The baked potato that came with it must have weighed two pounds. There was nothing on her plate when she was finished. Then she ordered dessert and coffee.\n\n\"How much do you weigh?\" I blurted out.\n\nShe flushed slightly. \"You're old enough to know that's something you should never ask a woman, but around one fifteen. Why?\"\n\n\"Where do you put it all?\"\n\nShe grinned. \"I've always had a high metabolism, plus I hit the gym four days a week, minimum. You?\"\n\n\"Same. More when I have the time. And my metabolism isn't nearly as good. Age and heritage, I guess.\"\n\nI did share her dessert.\n\nI had made no plans for after dinner, and asked what she'd like to do.\n\n\"Do you dance?\"\n\n\"A little\" I said, thinking back to my grandparents. My grandmother ran a dance studio, and my grandfathers taught me traditional Highland dances. Dancing had been part of my life since I was six years old.\n\nWe hit a club she liked. I felt a little out of place, age wise, but I'm proud to say I didn't embarrass her. In fact, as soon as her friends we sat with saw what I could do, I lived on the dance floor for an hour. Amanda finally grabbed my arm when a slow tune came on and we swirled out onto the floor.\n\nHer lips were a little tight, her eyes narrowed down. \"Remember me? Your date?\"\n\n\"Sorry honey. They're your friends. You didn't seem to mind dancing with others, I saw that little bump and grind exhibition.\"\n\nHer face flushed.\n\n\"That guy was an ass! If you stayed with me he wouldn't have had an opportunity. No more dances except with each other, agreed?\"\n\nI held her a little tighter. \"Agreed.\"\n\nThe guy that did the grind asked her to dance when we sat one out. She declined. He insisted.\n\n\"She's with me, and she said no. Go away.\" I could probably been a little more polite.\n\nAlcohol may have dimmed his perception of reality, or maybe it just made him stupid.\n\n\"What? You gonna stop me?\"\n\nHe was leaning over the table now, smirking. I stood, my six one overshadowing his five nine or ten. It's hard to tell how tall someone is while they're sitting down.\n\n\"Maybe,\" I said. He shrank back.\n\nAmanda stood, taking my arm. The one that had the fist at the end of it. \"Now honey, you promised me you'd stop beating up every asshole that hit on me. The last one spent three days in the hospital, and I think you made him sterile when you kicked his equipment to mush. You'd have been in a world of trouble if he hadn't thrown the first punch. Let's dance.\"\n\nJust before we left the table she looked the guy up and down.\"I suggest you leave. The club, not just the table. Next time I won't stop him.\"\n\nHe scurried off.\n\n\"Would you have hit him?,\" she asked as we twirled across the floor, snuggled together.\n\n\"I don't know. Maybe. I can't abide rudeness in any form, part of my nature and upbringing, I guess. And you were with me, and he knew it. Does it matter?\"\n\n\"Yes. If you're violent or overly jealous, this isn't going to go far.\"\n\n\"I apologize. He was about to say something rude about you, I could tell. I won't have someone with me disrespected. I admit being a little jealous, but I'm not a violent person. If you're uncomfortable, I'll take you home and bother you no more.\"\n\nShe snuggled a little closer. \n\n\"I believe you. Just don't let the caveman out too often, please. And I'm glad you feel enough to fight for me. But it is late, and I have to work tomorrow. Last dance, all right?\"\n\nSince it was the last dance, I made the most of it, snuggling her closer, until I felt myself getting aroused. I tried to pull back but she giggled and held me tighter.\n\nWe steamed up the windows again before I walked her to her door.\n\n\"Next week?\" she said, hopefully.\n\n\"Sorry, love. We're working both nights.\"\n\n\"Where? Do I need to ride with you, or should I meet you there?\"\n\nThat little speech made me warm and fuzzy.\n\n\"Meet us at the barn at five; we usually have an early dinner together before we pack up.\"\n\nI smiled all the next week. We talked every night, sometimes just a minute or two, once for an hour and a half. I admit it, she stirred something in me. Still didn't see a future, but was happy to get what I could.\n\n...............................................\n\nShe was at the house when I got there, helping with dinner. I've never seen anyone make an apron look sexy before, at least with the rest of their clothes on. I eased up behind her, grabbing her and twirling her around while she screamed.\n\n\"Arsehole! You could give a girl a heart attack!\"\n\nShe took the sting out of her words by smiling, and giving me a nice little kiss, while the band just grinned. She served me, over my objections, saying a good African woman always took care of her man first. I reminded her she was in America, and here we served each other as equals.\n\n\"I'll remember that the next time I need pampered,\" she said with a grin.\n\nWe played the gig, to a receptive crowd. Our fame was spreading.\n\nThe next night we were into our second set, when SHE walked in. Kim, my ex. I don't know who was more surprised. She was there with a group from her office, and two girls from my plant. Asshole wasn't in attendance. Tony saw me grimace, looked where I was staring, and saw her. Of course, he told everyone at the table during break. Amanda was extremely interested, even getting up and walking past her table to get a good look.\n\nShe had a strange look in her eyes when she came back. I grabbed her, plopped her on my lap, and gave her a big kiss.\n\n\"Showing off in front of the ex?\"\n\nShe was a little stiff.\n\n\"Damn right. I want her to get a good look at you. You're younger, a lot prettier, and better educated, and all round a much better person than she would ever be if she lived to be a thousand. Even if there's nothing between us, I can't help rubbing you in her face. If it makes you uncomfortable, I'll stop.\"\n\nShe had started smiling until I got to the last. She frowned a little, then leaned in and gave me a big kiss.\n\n\"A show it'll be then,\" she said. Her smile made me nervous.\n\nWe changed the playlist a little, in honor of Kim. We started off with the song we had taken our name from. Tubthumping. Molly and I took wireless mikes and walked out into the crowd, singing, the whole band joining in.\n\n\"I get no doubt, when I get up again, nobody's gonna keep me down.\"\n\nWe sang it standing right in front of her table. The crowd had heard us do it many times before, and were singing along. She was definitely looking uncomfortable. Amanda had disappeared, and before I could wonder where she came up to me, a mike in her hand. There is very little singing in the song, mostly repetitive rhyming. She had changed into a kilt, in the national colors of Kenya. It looked great on her.\n\nAt the end of the song she and Molly were draped on me like they were extra appendages. The look on Kim's face would have soured milk. She left shortly after the end of the set. The girls were grinning like mad.\n\nShe was quiet on the ride back to the barn. After the equipment was unpacked and stored, we left.\n\n\"Breakfast?\" I asked, expecting her to say yes.\n\n\"Yes, if we can have it at your apartment when we wake up tomorrow. I think it's time I found out what's really under that kilt. You show me yours; I'll show you mine.\"\n\nI was like a deer caught in headlights. She laughed, taking my hand.\n\n\"That is, if you really want to.\"\n\nI probably set a land speed record for a twenty- year-old truck getting home. I was in a hurry, but she slowed me.\n\n\"Easy honey. We've all night and a long future, I hope. We can shag later. Right now I really need you to make love to me.\"\n\nSo I did, peeling every piece of clothing off her like I was unwrapping the best present ever. Thoroughly kissed every inch of skin as it was exposed. When I dropped her kilt, I was surprised to see nothing under it. She saw my stare and smiled.\n\n\"Commando. Do you like it?\"\n\nI answered by dropping to my knees, kissing my way up her thighs. I nibbled, kissed, licked, brought her to her very first orgasm with me, standing up. She fell into me, and I picked her up, putting her gently onto my bed.\n\nShe grabbed me, pulling me on top of her. I could feel her hard nipples rubbing over my chest. She tried to swallow my tongue for a minute or two before she pulled off me. There was actually a popping sound as we came apart.\n\n\"Remember me asking you to take it slow? Forget that. Give me a proper shagging, man of mine. Now's when the caveman needs to come out.\"\n\nI did my best. She was dripping wet, so I slid all the way in in one motion as she gasped. The situation didn't call for finesse, so I pounded her hard. Missionary, doggie, bent over the bed. I don't know how long it lasted, but it seemed like forever. I was pretty sure she had at least three more orgasms before I finally couldn't hold back. It felt like a gallon when I let loose. There was a massive wet spot on the bed.\n\nAs we snuggled afterwards, I told her we'd change the sheets before we slept.\n\n\"Why? I expect to add to it before we're done. I think I earned the right to sleep on them if I want.\"\n\nWe rested for a few minutes before her hands found me. I figured it would be a while before I was ready, but she had me hard as a rock again in less than ten minutes.\n\n\"My turn to drive,\" she said, sinking down on me.\n\nShe rode me for a bit, then turned. As soon as she was in position she started slamming up and down, hard. When I felt myself getting close, I twirled her around and entered her in a missionary position, so I could see her beautiful face. \n\n................................................\n\nI woke to sunlight streaming through my blinds, wondering why I was so happy. Then I felt her move, and remembered. She was spooned in to me, her mane of hair obscuring her face. I stroked it softly, and she mumbled something I couldn't understand, snuggling deeper. I didn't want to move, ever, but nature wouldn't be denied. I eased out of her embrace, pleased to see her frown a little.\n\nI took care of my needs, and started a shower. Just as I got under the spray she stumbled in, gloriously naked. Unselfconsciously she plopped down, relieved herself, and then joined me.\n\n\"Ooh, nice and warm. Will you scrub my back, honey?\"\n\nHow could I refuse an offer like that? I ended up washing her whole body, and she returned the favor. After we were convinced we were completely cleaned, she led me back to the bed by my erection.\n\n\"I'm a little sore, my darling, but it was more than worth it. Let me do this for you, I owe you from last night.\"\n\nShe must have worked on me for thirty minutes, but it felt like hours. It took her five minutes to get me all the way in. Then she would back off until just the head was in her mouth, tongue twirling, before she plunged back down. I warned her when I got close, and she sped up. I erupted with a groan, and she never slowed down. After a few more minutes of slow bobbing, she slid off. \n\nI think it surprised her when I pulled her up for a long kiss. She finally fell back onto my chest, sighing.\n\nShe mumbled softly, again something I didn't understand.\n\n\"What did you say?\"\n\nShe smiled. \n\n\"I'm sorry, just something in Masai. If we stay together I'll tell you. Right now, be happy I said it, even if you don't know what it is.\"\n\nShe refused to say more. Changing the subject, I asked her about the tattoo she had on that cute little butt.\n\n\"It's a Masai shield over crossed spears. It's the same design as the one on our national flag. What does yours mean?\" she said, tracing the outline on my bicep.\n\n\"When I know you better I'll tell you. It's a symbol of some personal history.\"\n\nShe smiled. \"Fair enough. Let's strike a deal. The day I explain what I said, you give me the history of your tattoo. Deal?\"\n\n\"Deal.\" I said, kissing her to seal it.\n\n................................................\n\nWe dated for another three months, growing more and more in love. I really wasn't surprised when I got home and found a note on my door.\n\n\"Needed to move something, love. Borrowed your truck. Be home by seven.\"\n\nShe had keys to my apartment, and while unusual, it didn't bother me much that she had taken the truck, until I remembered she didn't drive.\n\nI got my answers when she showed up with Molly at the wheel. The truck was packed to the gills, as was Amy's minivan. The girls piled out and started unpacking.\n\n\"What's going on?\"\n\nAmy just grinned, Molly actually laughed.\n\n\"She's moving in, dumbass. Why is beyond me. Close your mouth and use those muscles for more than lifting weights for a change. Oh, and she said your couch has to go. Can't blame her on that one; that thing's hideous.\"\n\nAmanda was standing back, going from one foot to the other, trying to gauge my reaction. I let her wonder for a minute before I grinned.\n\n\"I liked that couch! But on the other hand, I don't love it, I love you, so I guess I'll just deal with it.\"\n\nIt was the first time I had ever said I love you to her. She went pale, then jumped on me, wrapping those great legs around me while she tried to kiss my lips off. Amy and Molly just watched for a minute.",
        "\"If I turn the hose on and squirt them, reckon we can get them apart? I need to get home. Robbie might try to cook supper again. That ended badly the last time.\"\n\nAmy just laughed. \"Help me empty the van. We'll leave it to them to sort everything.\"\n\nWe broke apart and helped, getting it all inside. She told me she didn't work the next day and she would sort everything out then. I was glad, I didn't think she'd get half her clothes in my, er, our closet. She ordered pizza, opened a bottle of wine, and took me to bed to begin what I hoped would be the rest of our lives together.\n\n................................................\n\nWe had been together for four months, settling quickly into a domestic routine. Her time off varied wildly, so we spent as much time as we could together when it happened. She assured me in a little over a year she would have a more normal schedule.\n\n\"We need to house hunt, honey. This apartment isn't big enough.\"\n\nShe was snuggled to me after a bout of lovemaking. She had learned if she wanted something, this was the best time to ask for it.\n\n\"Big enough for what?\" I asked idly, stroking her nipple. She pushed my hand away.\n\n\"Don't distract me. Children. This apartment is not big enough to raise our kids in.\"\n\nI think I may have passed out. I know I went blank, because when I returned to my senses she was propped on her elbows, her hair falling onto my chest, while she looked at me with anxious eyes.\n\n\"Ewan, Ewan! Are you all right? I didn't mean to say that out loud. Forget about it.\"\n\nI think she was shocked when I pulled her into me tightly, feeling the tears on her cheek.\n\nWhen I calmed down, I kissed her with as much passion as I could muster.\n\n\"You're wrong, love of my life. We WILL be talking about it, very soon. Let me process it, all right?\"\n\nShe agreed, happy I wasn't angry, and snuggled back down.\n\n..................................................\n\nI took Amy and Molly with me, swearing to quit the band if they told. Four jewelry stores before I found the right one. They were amazed.\n\n\"It's beautiful!\" said Molly, admiring it on her finger. Amy had to have a turn, and I almost didn't get it back.\n\n\"It's so expensive!\" she said, as I slid it off her finger, \"Can you afford it?\"\n\n\"I'm a Scot. We're a thrifty lot. Yes, I can afford it.\"\n\nThat Saturday, they were both grinning, looking at Manda. She noticed.\n\n\"What?\" she said, \"what are you up to?\"\n\nThey put on innocent faces.\n\n\"Nothing. Just looking forward to tonight.\"\n\nLuckily, she let it drop.\n\nI waited until the second set. I was playing a slow tune on my accordion, solo. Stopping, I looked out over the crowd.\n\n\"Ladies and gentlemen, let me ask you something. Do you know what luck is? Maybe providence would be a better word. It's when you get something, something you don't deserve, something you're not worthy of, but it becomes yours anyway. When that happens, if you have any integrity, you treasure it. You keep it safe from harm. You keep reminding yourself that you don't deserve it, and it's your responsibility to try to prove your worth to it the rest of your lives.\"\n\nThe bar had gone quiet, even the heavy drinkers were listening. It was as if they instinctively knew something important was about to happen. \n\n\"I've had some misfortune in my life. Lost my parents when I was very young. Lost my grandparents, who raised me lovingly. I was in the military, lost friends, people I had grown to love as only a comrade in arms can.\n\n\"My marriage failed, unexpectedly. For me, anyway. Then something happened, something so wonderful I still have a hard time believing it.\"\n\nAmy had come up and helped remove the accordion, and Amanda found herself propelled onto the stage, the whole band pushing her. Her eyes grew wide, as I introduced her.\n\n\"This is Amanda Abasi. This is the wonderful thing I'm talking about. For unknown reasons that flies in the face of all I've come to expect, she loves me. \"\n\nI dropped to one knee, watching her dusky skin pale.\n\n\"And I love her, more than I could ever believe it possible to love someone. Amanda, honey, will you marry me, please?\"\n\nI held out the ring, watching her eyes glow as she slipped it on her fingers. Amy held a microphone to her lips.\n\n\"Yes,\" she said in a whisper, as she collapsed beside me.\n\nThe crowd erupted in cheers. Some of the women, including Amy and Molly, were crying. The guys took their places and started playing, while we stayed on our knees, kissing. I think I sat out three songs before I could recover enough to get back onstage.\n\nWe had a video crew filming our sets for a new audition DVD, so I got the whole thing on tape. I didn't know it, but they released it on YouTube as a prelude to a song. It got three hundred thousand hits, which I thought incredible, and made the Tub Thumpers well known.\n\n...............................................\n\nOne of her friends back in Cardiff saw it, and told her mother.\n\nTo paraphrase the Queen, we were not amused. It was a pretty hot conversation.\n\n\"Amanda! What are you thinking? A Scot?\"\n\nShe laughed. \"It's worse than that, Mother. He's a Yank.\"\n\nShe couldn't talk for a second. \"Really? Is he a doctor, too?\"\n\n\"No, Mum. He works in a factory.\"\n\n\"A common factory worker? I forbid this. Amanda, you need to come home, get over this foolishness.\"\n\nAmanda had thought it was pretty funny up until that. \"Mum!\" she said sharply, \"I am home. I'll understand if you don't need to be at the wedding. Maybe I'll send you pictures. I'm going now. Goodbye, Mother.\"\n\nYou can't slam a cell phone, but it sure looked like she wanted too. I cuddled her.\n\n\"Don't worry, I'm sure she'll come around. Want me to talk to her?\"\n\n\"No. Mum has always been a bit of a social climber. She had her heart set on me marrying a royal, you know Knight, Earl, that sort of thing.\"\n\nI grinned into her hair, glad she couldn't see me.\n\n\"Maybe you will, someday.\"\n\nShe giggled. \"I did get a Knight. Sir Ewan of North Carolina, who makes me feel like a Queen.\"\n\nHer father came for a visit. He was a small man, five six or seven, maybe. I always thought the Masai were tall. Mandy was taller, five ten, and when she wore her four-inch heels she was exactly eye level with me. I liked that, a lot.\n\nI don't think he liked me at first, but he didn't actually dislike me either. I found out where Amanda got her directness from, and wicked sense of humor.\n\n\"Are you going to be a good husband?\" he asked, out of the blue.\n\n\"I'll do my best.\"\n\nHe tried to keep a straight face. \"You better. I'm not giving the bride price back.\"\n\nAmanda was watching us. In a tradition Masai wedding, the groom must gift the father with a black bull and two black cows, along with a ram and ewe. The ram is slaughtered for the wedding feast, and the rest of the livestock added to the family herds. You were also supposed to give the parents gifts of alcohol. I arranged to send her mother three cases, Scotch, of course. She never acknowledged the gift. Amanda and her Dad thought it was hilarious.\n\nI did a little research, found out what top of the line cattle and sheep were going for, and presented him with a check. He was surprised when I did it, even more surprised I had taken the time to learn a little of their customs.\n\nIt was symbolic of course, he ran a successful business, and lived in a tenth floor condo.\n\nHe turned to his daughter.\n\n\"Daughter, I think you need to complete your necklace.\"\n\nA Masai tradition, the bride must weave her own necklace, using materials important to her personally, and the tribe as a whole. I looked them up; they tended to be quite large.\n\nShe smiled, both shyly and proudly.\n\n\"I've been working on it since our first date, my father.\"\n\nI don't know which of us was more surprised.\n\nShe asked me after he left what he meant when he said I was a senior warrior, the third highest rank in Masai culture, lower only to junior and senior elders. I told her I would explain every thing before the wedding.\n\n...............................................\n\nI had to admit, I couldn't understand why she chose me. Had a lot of sleepless nights, wondering if she would come to her senses one day and leave me. She was beautiful, young, obviously intelligent. I'd attended a few hospital functions with her, and while I'm not a toad, I still saw the looks from her friends and coworkers occasionally.\n\nIt led me to want to be more for her, so I sat down with the owner of my company.\n\nJames was a good man. He served three tours in Vietnam, and would have been a career man, but he got wounded badly at the end of his last tour. He was a strong supporter of vets, he even helped talk me into joining the National Guard at eighteen. His policies were very liberal, if you got called up, you could return with full seniority, and your service counted towards retirement. Over half his employees were vets.\n\n\"What can I do for you, son?\"\n\n\"You know I'm getting married, right?\"\n\n\"Of course I do. Anne and I expected to be seated on the grooms' side of the church.\"\n\n\"You will, sir. Right up front, but the reason I needed to talk to you isn't about that. I don't know if you know, but she's a doctor, almost done with residency. I know I don't deserve her, so I want to be able to prove myself worthy. If the offer is still open, I'd like to get into the management training program.\"\n\nHe'd been trying to get me into management for years. I never wanted to, before now.\n\nHe grinned. \"Finally met someone who got you off your ass, huh? Good. Let me make a call.\"\n\nHe called HR. \"Julie, I need you to change the salary structure for Ewan. He goes off hourly Monday. He'll be the manager trainee in finishing. Mark can actually retire now. I'll send him along in a bit, so you can explain the perks and expectations to him. Start him at the top of the trainee scale, all right? Yes I'll tell him. Thanks.\"\n\nHe looked at me and grinned at my expression.\n\n\"Well, go on then, she's waiting, and take tomorrow off, I'll make sure you get paid for it, a gift for finally making the right decision. Take your sweetie out, show her a good time. Don't be late, Monday.\"\n\nI tried to thank him but he shooed me out, laughing.\n\n.................................................\n\nI followed his advice, surprising Manda by sweeping her into my arms and straight into the bedroom when I got home. Forty minutes later, when I thought I'd have to learn to walk again, I asked her what she wanted to do, because I was taking her out.\n\n\"Dance!\" she said, happily.\n\n\"You got it, honey.\" I said, groaning inwardly.\n\nWe showered together, and she tried to play. \"We can go out, or we can stay home and play. Your choice.\"\n\nShe smirked and said both, dancing first.\n\nI was never so happy. We went to the club she favored, found some of her friends, and had a great time. I was getting our drinks at the bar, watching her move with grace as she danced together with her friends, when a man I didn't know slid in beside me, ordering a drink.\n\n\"You and Amanda are together, right? I'm Dr. Krall, her supervisor at the hospital.\"\n\nHe had an accent I couldn't place, I found out later he was from South Africa.\n\n\"Yes, we are.\" I said shaking his hand. I instantly disliked him, and wondered why.\n\n\"Well she's a beauty, to be a kaffer.\"\n\n\"She's Masai,\" I said, not understanding.\n\nHe laughed.\n\n\"No, kaffer means black, you know, a darky. I'm surprised a Southern man like you would go out with her, knowing your heritage. She is quite attractive,though, I wouldn't mind a few discreet encounters with her, myself. What's the word you people use again? Nig...\"\n\nThat was all he got out before I slammed his head into the bar, and shoved him into a corner. I held him up, my face in his.\n\n\"If you ever talk about my future wife like that again, I'll kick your ass all the way back to where you come from. If I hear about any blow back from this little conversation, you'll need your own team of doctors. Get the fuck out of here, before I start now.\"\n\nHe stumbled out holding his nose. I may have broken it.\n\nI came back with her drink just as the song ended. She took one look at my face and her smile died. \n\n\"What's wrong, love?\"\n\n\"I just ran into something disagreeable, but I'm fine now.\"\n\nI gave her a big kiss while her friends giggled. When I let her come up for air, she said: \"Home! Now, you caveman.\"\n\nThe girls heard her, and when I grabbed her and threw her over my shoulder, they howled.\n\nWe spent a very pleasant night.\n\n...............................................\n\nShe gave me the evil eye when she got home the next day, mumbling in Masai. I'm pretty sure I didn't want a translation.\n\n\"Honey, have I ever introduced you to my boss?\"\n\n\"I don't think you have, love. Why?\" It was the truth, SHE had never introduced us.\n\n\"Because I was on the sixth floor, showing my ring to the nurses at the station, and mentioned your name. There was a crash behind me, and when I turned around Dr. Krall was standing behind me. I helped him pick up his clipboard and laptop. When we stood up, I was stunned. He had a big bruise on his nose and both his eyes were black. I asked what happened, and he said he'd run into something. Any comment?\"\n\n\"Only that as long as we are together I'll never allow you to be treated with disrespect or cruelty.\"\n\nShe sighed.\n\n\"He's my boss. If you piss him off, he could make things difficult for me. He controls the schedule; he can find out your hours and make mine the exact opposite. Do you want that? I don't. So if the occasion arises and you are in his company, behave.\"\n\n\"I'll be as polite as the situation calls for,\" I promised faithfully.\n\nShe gave me a flat stare before she smirked. \"I must admit, his raccoon imitation was quite amusing to the staff. He's not very popular.\"\n\nThat was all that was ever said about that.\n\n.................................................\n\n\"Ewan, old boy. How are you? I'm in New York, business you know. Dreadfully boring. I'd like to see you. Shall I come down, or make transportation arrangements?\"\n\n\"Colonel, excuse me, Lord MacLiesh, how are you? I'm afraid I can't get away, but I'd like to see you. I've become engaged, and I'd like you to meet her.\"\n\nLord Archibald MacLeish, Earl of Ferth, old friend, comrade in arms, and my commanding officer for four and a half years.\n\n\"Come Ewan, I'll always be just Colonel to you lads. So, a lassie has finally captured your heart. I hope she's better than your last. Dreadful girl, really; I never liked her, but didn't want to interfere. Good riddance.\"\n\nThat was the Colonel, right to the point.\n\n\"Oh, I think you'll like her. You've always fancied the pretty ones.\"\n\nWe talked for awhile, setting times. I'm sure Amanda will be impressed. He could be quite charming, if the mood struck him.\n\n\"Does she know our history?\"\n\n\"No, Colonel. I'd like to tell her at the right time, so please don't bring it up.\"\n\nHe smiled.\n\n\"You Americans, so modest. All right, me lad, we'll do it your way; but you need to tell her before the wedding. As soon as I tell Fergus and Colin, they'll want to come to the wedding, and you know how loose their tongues can be when they're in their cups.\"\n\n\"I will, sir. I promise.\"\n\nWe talked for a few more moments before he rang off.\n\n................................................\n\n\"Amanda, honey, I have an old Army friend coming by. I really want you to meet him, he means a lot to me. I'm sure he and his wife will be at the wedding.\"\n\n\"Finally,\" she giggled, \"someone to tell me about your sordid past. I can't wait.\"\n\nShe was definitely impressed when she met him. He was only five five, and weighed no more than one thirty; but he had what can only be described as a 'commanding' presence. It was all I could do not to snap to attention. He was about fifty-seven, but he was anything but a mild little man.\n\nHis family had been in service to the Crown since there was a Crown. They had been at Waterloo, on the high seas, every skirmish and action possible all the way up to and including both world wars, and everything since, including the Falklands, Iraq and Afghanistan. One of his ancestors had even been military governor there in the eighteen seventies.\n\nDespite having to walk with a cane, his bearing was still military. \n\nHe took us out to dinner, telling her in general terms that we had served together in the Middle East and Scotland, and that I was a loyal and trusted friend. He had her charmed after the first hour, making her promise to visit him in Ferth as soon as possible.\n\nShe snuggled up to me as we drove away from dropping him at the airport. She knew me too well.\n\n\"Well, he dropped enough hints to pique my curiosity. When are you going to tell me the real history between you? He made it seem like an interesting tale.\"\n\nI tightened a bit.\n\n\"Very soon, love. Before the wedding, I promise.\"\n\nI sat in thought after she went to sleep. Wonder what she'd think of my tale?\n\n................................................\n\nAs always, thank you for your time. There will be two more parts to this story, both already finished, so there won't be much of a wait.\n\nQ"
    ],
    "authorname": "qhml1",
    "tags": [],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/nothing-as-sexy-as-a-man-in-a-skirt-pt-01"
}