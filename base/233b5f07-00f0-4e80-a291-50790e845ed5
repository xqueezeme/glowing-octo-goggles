{
    "title": "Lilith's Emporium Pt. 01: Night w/Nessira Ch. 01",
    "pages": [
        "Hello all, many of you have asked for me to reorganize the stories, well I am taking the main plot stories and re uploading them with numbers so you can read them in order.\n\n*\n\nIt was a slow day at the shop and Nessira was bored out if her mind. She could usually sense people who needed something of a sexual nature and the shop would send out a spell compelling them to stop so she could give them something to help with whatever problem they had. Whether or not it was what the customer really wanted or was a wild card of a chance but Nessira loved to play the game with peoples lives. \n\nShe began to walk around and look at all of her products. There was Fairy dust which was something simple and used to get someone turned on but she often found that boring, using too much of it had some interesting side effects though. She looked at many of the other statues she had of different beings begging to be released. She had a soft spot for them as she had been in their position before. She looked at the different spell books and incense, all the types of products that could be smoked or rubbed into your skin. A bottle of Essence of Succubus caught her eye.\n\n\"I wonder whatever happened to Samantha?\" She said to herself looking at the bottle.\n\n\"Hello?\"\n\n\"What the hell?\" Nessira yelled as she was not expecting to hear a voice anywhere near her and did not know anyone had walked into the shop.\n\n\"Oh, I am so sorry, I have quiet steps.\" He said.\n\n\"Where did you come from?\" She said looking at the young man whom she couldn't but notice how attractive he was.\n\n\"I just strolled in, I was curious about... wait, Jenny?\"\n\n\"Excuse me?\"\n\n\"Oh my God, Jenny how have you been, god its been years.\"\n\nNessira suddenly realized he recognized the body she had possessed when she was pulled from Victoria. She remained silent for a moment as she wasn't sure how to handle the current situation but didn't want to miss an opportunity to satisfy a customer.\n\n\"I'm sorry, who is Jenny? My name is Nessira.\"\n\n\"Oh, but I...\" he said as he was sure it was her but something about seemed different. \"I am so sorry, you look just like this girl I used to... never mind.\" He said as he turned to walk away almost seeming depressed.\n\n\"Now wait a minute, I can still show you around the store if you want, maybe I can find something for you?\"\n\n\"That's okay, but what kind of place is this anyway, I saw the sign but it almost looks like one of those incense stores at the mall that sells swords too.\"\n\n\"At Lilith's, we deal in, well sex.\"\n\n\"What? Sorry I um, I don't...\"\n\n\"Not like that, these are all items to help with one's sex life, we don't sell sex exactly.\"\n\n\"Oh, well that's neat, I guess, like what do you sell then?\"\n\n\"Well these statues here, they are said to hold the souls of sexual beings like demons and Succubi.\"\n\n\"So what good does that do?\"\n\n\"They are like fertility idols in a sense, they fill a home with sexual energy.\"\n\n\"Okay?\"\n\n\"Well how about this here, this is fairy bone powder.\"\n\n\"Fairy?\"\n\n\"Yeah, you smoke it and it gives you an amazing high and very erotic visions.\"\n\n\"So drugs basically?\"\n\n\"Ugh, you just aren't getting it.\"\n\n\"Sorry it just seems a little odd, succubi, fairies, you actually believe in that stuff?\"\n\nNessira eyes began to flash a bit of red as this guy started to annoy her a little but tried to keep her calm. She was still curious as to why she could not sense him coming and could not read his sexual desires at all.\n\n\"You mean to tell me you don't believe in the supernatural?\" She said with a grin.\n\n\"Well, I mean no disrespect, I just have never seen anything to make me believe in any of this.\"\n\n\"I see, well maybe I need to make a believer out of you then.\" She said with a smile before she turned to show him something else.\n\n\"How about over dinner?\"\n\n\"Wait, what?\" She said spinning back around with a shocked look on her face.\n\n\"Yeah, you can tell me all about this stuff.\"\n\n\"Um... sorry no.\"\n\n\"Oh, it was worth a shot, not every day you meet a beautiful woman who wants to talk about mythical creatures and such.\"\n\n\"Ha...\" She said giggling a little until she saw the look on his face. \"Oh sorry, I didn't mean to... \" she stopped and thought to herself a moment thinking to herself \"Sorry? I'm sorry? What the fuck was that about?\"\n\n\"It's alright, well thank you for your time.\"\n\n\"No wait, I um... you really think I'm... hold on a moment.\" She said walking behind the counter and grabbing what looked like a DVD. \"Here.\" She said handing it to him.\n\n\"What's this?\" He asked reading the front that said \"A Night with Nessira.\"\n\n\"It's a little movie that will tell you everything you need to know about the supernatural.\"\n\n\"I was hoping to hear more about it from you.\"\n\n\"It's narrated by me silly, I'm Nessira remember!\"\n\n\"Oh, right, sorry.\"\n\n\"I'll tell you what, watch this tonight and maybe if you can survive it,\" she said with a smile and a wink \"then we can talk about dinner.\"\n\n\"Um, well that's a better answer than No, alright I'll take a look at it.\"\n\n\"I promise you won't be disappointed.\"\n\n\"Well if it has you in it, then you're probably right, have a nice day Nessira.\" He said before he walked out the door. \n\nShe watched him get into his car and leave feeling good about herself when she said: \"Well he wanted to join me for dinner, too bad he's the main course!\"\n\n-------------\n\nLater that night Patrick was laying down watching TV thinking about Nessira and his trip to Lilith's earlier. He could have sworn she was Jenny the girl he used to have a date back in school but when she said her name was Nessira he got confused. The more he talked to her he realized that she looked like Jenny but there was something very different about her. She seemed very, sexual was the only word he could think of to describe her but he couldn't get her out of his head. \n\nHe looked over at the Dvd she had given him earlier about the supernatural. He read the cover that said \"A Night with Nessira.\" But that was all it said as the rest of the case was black with no other writing on it at all. Confused he placed the DVD in the player and turned it on waiting for what he expected to be a documentary to start.\n\n\"Not the night with Nessira I was hoping for but I'll take what I can get.\n\nIt was a black screen for a while until he saw Nessira's face appear. She was in a room with red curtains behind her and he couldn't see too much as it was like she was using a webcam or something.\n\n\"Hello, welcome to A Night with Nessira, I am your host and I will be taking you on an amazing journey.\"\n\n\"What the hell?\" He said confused by what he was seeing.\n\n\"First thing I need you to do is relax, get comfortable and just relax your body for me.\"\n\nPatrick wasn't sure what to make of this but he got comfortable as he watched. He waited for further instruction as he was starting to get turned on thinking about what this could actually be.\n\n\"No, look into my eyes.\" She said as her eyes turned blood red all of a sudden.\n\n\"Ha, cool effects.\" He said before he stared and started to feel a little strange all of a sudden.\n\nHis eyes began to feel heavy and he was feeling dizzy all of a sudden. He tried to grab the remote but could not reach it as he shut his eyes trying to get the room to stop spinning which wasn't helping at first. After a few moments it had passed and he opened his eyes again but something was very wrong. As he looked around he was no longer in his bedroom anymore. He was in a room with red curtains similar to the one in the video covering the walls and he was on a large round bed with red sheets. He rubbed his eyes making sure he wasn't just seeing things but he then realized he was wearing nothing but his boxer shorts.\n\n\"What the fuck.\" He said.\n\n\"I told you to relax.\" A woman's voice said as Nessira suddenly stepped through part of the curtain wearing nothing but a red almost see through nighty and walked towards the bed.\n\n\"Nessira?\"\n\n\"I told you it was a Night with Nessira.\"\n\n\"Am I dreaming?\"\n\n\"Does it matter, if you are that means you fell asleep during my DVD.\"\n\n\"Sorry.\"\n\n\"Don't be, this is what you wanted isn't it?\"\n\n\"Well, yeah I guess.\"\n\n\"You guess? Do you not want me?\" She said crawling on to the bed before she began to rub herself sensually seeing his reaction through his shorts.\n\n\"No, I mean yes, I mean...\"\n\n\"You are a very confused young man.\"\n\n\"You look amazing, and yes, of course, I want you, who wouldn't want you, you are just so...\"\n\n\"Sexy, alluring, arousing, seductive?\" She said sliding her hands over her breasts and biting her bottom lip.\n\n\"I was going to say beautiful.\"\n\nNessira stopped for a moment and stared at him as he used that word again. Men usually didn't call her that, she has been called sexy, hot, breathtaking and many other things like that by men who just wanted to take her for a ride but never beautiful.\n\n\"Well, anyway, let us begin.\" She said crawling on all fours towards him as he sat up.\n\nShe placed her hand on his chest gently pushing him back down on the mattress before she ran her finger along the elastic band of his shorts. She slid them off slowly seeing his erect cock bobbing there a bit larger than she expected.\n\n\"Is that for me? Wow you are a big boy aren't you?\" Patrick wasn't sure what to say so Nessira just said \"It's okay. I leave men speechless all the time, now let's see what we can do here.\" She said as she traced her finger along his shaft giving him goosebumps. \"You like that, good, how about this?\" She said before she began to caress his balls with her other hand while still teasing his shaft with her finger.\n\n\"Oh shit!\"\n\n\"There, just enjoy it, you may not survive what I have in store for you.\"\n\n\"Wait, what do you mean?\" He asked but before she could answer she smiled at him and engulfed his cock with her mouth. \"Oh FUCK!\"\n\nNessira worked his shaft giving him slow wet sucks while stroking him a little with one hand and still caressing his balls with the other. Patrick had never felt pleasure like this before and it was amazing. He didn't want it to end and she didn't seem ready to quit anytime soon as she continued to rub her lips along his throbbing member. She lifted her head and started to lick his shaft like a popsicle. He noticed her tongue almost didn't seem human as it was long and seemed to come to a point as she wrapped it around his cock and started massaging it that way.\n\n\"Holy fuck, this feels so...\"\n\nShe finally released his cock letting it bob there covered in spit before she smiled at him and said: \"are you ready for me?\"\n\n\"I um, yes but first let me uh..\" he said sitting up and grabbing her laying her down on the bed.\n\n\"What are you doing?\" She asked as men usually didn't manhandle her like this.\n\n\"Returning the favor.\" He said as he spread her legs and lowered his head between them.\n\n\"Ha,\" she said not expecting much but figured she'd let him try his best. \"Give it your best shot honey.\" \n\nNessira laid there waiting for him to finish his attempt to satisfy her. No man was ever able to please her except for one so she wasn't expecting too much but then she found herself actually enjoying it. His tongue massaged her clit very gently to the point she wanted more but the light tease was getting her very turned in. His tongue continued to pole and prod her pussy sending chills through her body as she tilted her head back enjoying the attention. He was good, very good. She wasn't sure how or why but she wanted more from him. He shoved his tongue deeper inside her like he knew how to please her, like he knew exactly what she liked and what her body needed and she was loving every second of it \n\nShe began to moan and even shout out as she placed her legs up on his shoulders and arching her back. He began to suck on her clit which made her shout out enjoying every second of it. She could feel herself getting ready to cum but she didn't want him to stop.\n\n\"Don't stop, of fuck don't stop!\" She said grabbing his hair and squeezing his head between her legs. \"OH Fuck!!\" She shouted as her juices came flowing out of here and down his chin making her whole body shake as she rubbed her hands across her tits enjoying every part of this.\n\n\"Wow, so I guess you liked it?\" He said pulling his head away as she laid there catching her breath.\n\n\"I um...\" she said confused by this man who stumbled into her shop and was able to make her cum with ease. \"Dammit.\"\n\n\"What, what's wrong?\" He asked confused.\n\n\"Here, put this on.\" She said handing him a small foil package that looked like a condom wrapper.\n\n\"What the, a condom? I thought this was a dream?\"\n\nShe pushed him down on the mattress as her eyes turned red and said: \"put the fucking condom on!\"\n\n\"Yes, Ma'am.\" He said struggling to open it and slide it along his cock.\n\nIt was solid black and slid on with ease but what was strange was it began to tingle a little. It started to feel warm and almost uncomfortable but when he looked down seconds later and he watched it dissolve and disappear leaving his cock out in the open like he never put it on.\n\n\"Wait, it just...\"\n\n\"Don't worry about it.\" She said as she climbed on top of him and pressed her lips to his shoving her tongue in his mouth.\n\nNessira spread her legs and let his cock slide inside her as she let out a moan of approval. Patrick wasn't sure where he nighty had gone but she was naked now on top of him as she began to bounce in his lap yelling out her pleasure. Her pussy tightened around his cock which felt nice but almost didn't feel human as she milked the hell out of him. She wrapped her arms around his head as she road his cock pressing his face into her breasts. He slid his hands up cupping then in his hands as he began to kiss the skin on her chest.\n\nNessira's eyes turned red and her wings sprouted from her back as she felt the pleasure surged through her body. She wanted to fuck him like she was going to absorb everything from him even though she had already prevented that from happening but she didn't care. There was something about this man and she wanted him. She wanted him inside her, he wanted his mouth all over her skin on every part of her body, she wanted his hands squeezing her breasts and her ass and she didn't want him to stop.\n\n\"Oh fuck, Fuck me, mortal, fuck me!!\"\n\nPatrick wasn't sure what she meant by mortal but he looked up and saw her red eyes and large wings sprouted behind her. She had two small horns sticking out of her head from under her hair. It was almost frightening to see but she still looked incredible as she bounced on top of him. He could feel her juices soaking his cock as they ran down into his lap keeping him well lubricated as he prepared to cum.\n\nPatrick began to feel something stranger as something was coiling around his cock. He looked down and also noticed she had a tail which she had wrapped around his member squeezing it which only enhanced his pleasure as she was fucking him and jerking him off with her tail at the same time. He slid his hands under her ass squeezing it as she seemed to jump a little at his touch smiling down at him before pressing her lips to his.\n\nHe couldn't hold in much longer as she removed her lips from his and sprouted sharpened fangs. He focused back on her breasts sucking in her nipples and even biting them a little. She suddenly let out a shriek that sounded like a scream mixed with a thousand bats chirping in the night as his cock erupted inside her. She tightened her arms around his head squeezing his face against her amazing breasts as she continued to scream like a banshee. Her pussy tightened and moved like it was milking him of every last drop of cum he had to give making his orgasm last unnaturally long until he opened his eyes and sat up.\n\nHe was alone and back in his bedroom. The tv was a blue screen like the DVD player had turned off hours ago. He was covered in sweat and soaked through his pants with cum. Not sure what had just happened he got up and headed to the bathroom to get cleaned up when he noticed a sharp.pain in his back. He turned to look in the mirror and saw claw marks on his back.\n\n\"What the fuck?\"\n\n--------------\n\nOn the second floor above Lilith's shop Nessira sat in her room that looked exactly like the one in the dream. She was covered in sweat and other juices as she was curled up in her bed with her wings wrapped around her as she was still reeling from the experience. No human was ever able to make her cum like that. The only one who ever came close was Rick but this was different. She wanted more from him which is why she used the succubus condom so she could now fuck him as much as she wanted without feeding off of him.\n\n\"Oh Patrick, you and I are going to get to know each other very well.\"\n\nShe curled up and got comfortable before she went to sleep enjoying the bliss she was in. She knew Patrick would be back with questions and she would be waiting for him eager to answer them and more. She began to think maybe he could replace Rick as her partner in crime or at least become her sex slave. Either way was fine with her, or at least all she would admit to herself."
    ],
    "authorname": "maestro84",
    "tags": [
        "horror",
        "erotic dream",
        "succubus",
        "blowjob",
        "eat pussy",
        "milking cock",
        "transformation",
        "dvd",
        "suck clit",
        "squeeze breasts"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/liliths-emporium-night-w-nessira"
}