{
    "title": "What The Cat Dragged In Ch. 20",
    "pages": [
        "Hi Everyone!\n\nI have to say that this was an incredibly difficult chapter to write. I knew what had to happen, but it was really hard putting characters I like through this. \n\nJust in case I wasn't clear in previous chapters...Kelly knows Victor has a healing factor. She doesn't really know the extent to which it works, so she makes a logical assumption. \n\nThank you reviewers and 'followers'! You guys are the best bunch of readers in the fanfic world!\n\npsyche b.\n\n20. In The Presence of Mine Enemies\n\nThe first thing Kelly became aware of was the rocking of a vehicle. It was a motion rather like floating in that she had no sensation of pressure against her body. For a split second, she thought she was simply waking up after too little sleep and an exhausting day. Rough, unfamiliar voices shattered that illusion. Icy fear settled like a rock in her chest.\n\n\"Goddamn it, can't you sit still?\"\n\n\"Just shut the fuck up and drive.\"\n\nLaughter, coarse and mean, came from a number of different sources. None seemed to be facing toward her, but she wouldn't have bet her life on that.\n\n\"Aww, still trying to hide the fact that the little bitch damn near broke your leg?\"\n\n\"The cunt got in a lucky shot. Could've happened to anybody.\" There was a forced off-handedness to his comments. Even in her groggy state Kelly could hear the anger in his words.\n\n\"Didn't happen to anybody, it happened to you.\" Someone countered.\n\nAnother round of laughter.\n\nKelly was starting to connect with her body again. Her hands were cuffed behind her back, the metal cutting into her wrists, her shoulders protesting the angle. The shoulder the drug had been injected into was protesting the loudest. Her ankles were shackled. The circulation there suffered too. She was certain she'd have raw spots from where the tight cuff forced her socks to rub against her skin.\n\n\"Look on the bright side,\" One of them said. \"In a few hours we'll be on the plane and you'll be able to put your feet up.\"\n\n\"Sure. Put your feet up, get out your crocheting-\"\n\n\"You either shut the fuck up or I swear I'll-\"\n\n\"You ain't gonna do much without a head start.\"\n\nMore laughter. Kelly used the moment to try and move her fingers, hoping they would be too distracted to notice the weak movement. She had no idea how she was going to get out of the cuffs, or out of whatever vehicle she was in. She knew she had to have everything moving when she got the opportunity though. \n\nThe first movement was no more than a barely controlled twitch. When the banter continued she took a chance and flexed her wrists. Pain hit her and she winced. The side of her face felt tight, as if it were covered in dried-\n\nThe vision exploded behind her closed eyes. Victor turning, the shot tearing away flesh and bone and brain. Sending a thick mist of blood and tissue into her face. The sound his body made as it hit the truck and then the ground. The spreading puddle of gore, the twitches that racked his body before he went still. His vivid eyes going dull. Healing factor or not, he couldn't have survived.\n\nKelly squeezed her eyes shut against the memory. Either there would be time to grieve later, or they'd kill her before she could. She wasn't sure which prospect was preferable. Life without him was an unbearable idea, but to simply give up went against everything she was. She forced herself to stop thinking. Thinking was an agonizing distraction. She lay as still as she could while flexing her muscles, restoring sensation and blood flow while she listened to the conversation going on in the front of the vehicle.\n\n\"Where the hell are we goin'?\"\n\n\"Airport.\"\n\n\"What kind of an airport is all the way out here in the middle of goddamn nowhere?\"\n\n\"A private one, asshole.\" \n\n\"What? You thought we were just gonna carry her onto a commercial flight? 'Scuse us, we're just your average hard-working kidnappers and we need to get this bitch from point A to point B. She's completely unconscious so she won't be needing headphones or drinks or any of them little bags of peanuts.' I don't see any problem with that, do you, Clay?\"\n\n\"Course not.\" Clay had a lisp. Kelly filed that little fact away.\n\nLaughter. At least the conversation was proceeding unchecked by her efforts. Judging from the way the sound reached her, she assumed that she was in the cargo area of some kind of SUV. At least that afforded her some small measure of privacy. Only a very small measure, but if they were interested in each other and she were careful she might have half a chance. Now all she needed was a way to get out of the cuffs and plan for what to do after she did.\n\nShe could feel blood flow returning now, bringing pain with it. Kelly forced herself to stay silent, keep moving and focus on the conversation.\n\n\"Aw c'mon guys, it's his first real 'away from home' job.\" A different voice. Deeper than the others, and further away.\n\n\"So what?\" Clay lisped.\n\n\"So, I'm sure he wants to tell his mommy what a good job he did.\"\n\nThere was a moment of silence and then more laughter. Kelly only half paid attention to the substance of the conversation. It was little more than barbs and anger directed at one target or another. Listening allowed here to put names with two more of the voices. She didn't know if that would help, but she filed it away anyway. Luther had the deeper voice. He didn't say much, but when he did the others listened. King, the one she'd kicked, spoke in the harsh tones of New York City. There was one more, but the others didn't use his name.\n\nThe road had become rougher. Each time she bounced against the floor her shoulder and hip hurt even more. She held back the groans and whimpers, but the tears were another matter. She hoped none of her abductors were feral. Victor could always smell her tears-\n\nHer heart contracted painfully. She forced that thought away and focused on her present situation. She doubted she'd be able to get away, but she might be able to raise enough of a fuss to call attention to herself. Or maybe they'd just kill her. Either way, she would only have one shot. Kelly started to use the jostling of the vehicle to try and work her hands down around her feet so that they would at least be cuffed in front of her.\n\nIt seemed to take forever, her body protesting ever little movement. Eventually though, she succeeded. She had to work at controlling her breathing. They thought she was still unconscious or they would have checked on her. Giving up her one miniscule advantage was unthinkable, so she forced herself to stay in roughly the same position they'd put her in. Thankfully, she didn't have to wait long. \n\nThe vehicle took a sharp right onto an even worse road. The talk shifted to private planes. When the vehicle slowed, Kelly readied herself. Finally, they stopped.\n\n\"You need help?\" Luther asked.\n\n\"Nah, I got it,\" King said.\n\n\"Course he has. She's unconscious, she can't kick anymore,\" Clay said.\n\n\"You ought to be a fucking comedian,\" King said.\n\nKelly heard four doors slam shut, one right after the other, and the four men continue to talk. Three of the voices sounded like they were moving away, the fourth sounded close by. In the tinted glass of the rear window Kelly could see that King was watching the others. She shifted quickly so that she was on her back, her body tightly curled, feet pointed toward King. When the door raised high enough, she slammed both feet into him. One in his stomach, one lower. He was stunned into silence and doubled over, his shocked eyes on hers. She kicked again, catching him squarely in the face. \n\n\"HELP ME!\" She screamed at the empty airfield. The groaning man tried to grab her, but she hit his arm with both her clasped fists. He let go just long enough for her to get past him. She started to trot across the asphalt as fast as her shackled legs could move. The whole time screaming for help, trying to ignore the sound of men running after her. No one else at the airfield seemed to notice or to care. \n\nKelly kept screaming until she felt someone hit her from behind. The short chain between her ankles meant she fell easily. The one who tackled her had her arms pinned to her sides. Her forehead slammed into the pavement. Stars exploded behind her eyes.\n\n\"Thought you were pretty smart, didn't you cunt?\" She recognized Clay's lisp. He slammed her head into the ground again. This time, the world went to a fuzzy gray.\n\nShe struggled, trying to shake his grip.\n\n\"Still feel like fighting with me? Woulda thought spending all that time with that asshole Creed would've taken some of the fight outta you.\" He pulled her head back again.\n\n\"Goddammit Clay! The deal was she gets there in one piece. Her corpse and a jar full of brains ain't gonna cut it.\"\n\n\"Then why the fuck didn't you give her enough of that shit to start with?\"\n\n\"I did,\" Luther said. \n\nA needle jabbed into the back of Kelly's thigh. The drug burned as he pushed it into the muscle. \"For all we know Creed's been keeping her dru-...\" Blackness enveloped her again.\n\n*~*~*~*~*~*\n\nIn the beginning, limbo was simply an absence. An absence of light and darkness, of sight and scent, of touch and sensation. The absence of those ordinary things troubled him. In the beginning, he had no idea why they were gone. There was something familiar in the not knowing, something that told him to wait. The knowledge of why would be back, and probably sooner than he wanted.\n\nThe memory of scents came first. Danger. Fear. Injury. Blood. Death. They were the first because they were the ones he knew best. They formed the fabric that all the others were embroidered into. At least, so he thought. Eventually another scent came that was separate from the others. A sweet scent. Clean. Like sugar and vanilla. Female. Even in this place of drifting, the memory of the scent calmed him and drew his focus. \n\nThe complete palette of scents bloomed in his memory. Injury, blood and fear were still there, but they were of a variety unique to her. There was also calm, arousal, orgasm, relaxation and his scent mingling through hers. Almost becoming part of it.  \n\nMine. Whoever she was, she belonged to him.\n\nThe memory of sensations came next. All the pain that he'd experienced and the pain that he'd inflicted. The way warm blood felt on his skin and how that feeling changed as it cooled and dried. Apart from all of that, in the place inside him reserved for the sweet scents, the feeling of soft skin pressed against his. Small hands that pulled him closer. \n\nA soft laugh. The sound of his name spoken with a smile in her voice. Eyes the shade of blue-green sea glass, sparkling as she looked at him. Smiling at him. As if he were a man and not a monster. The rest of the sights and sounds that danced through his drifting mind were less important.\n\nHis frail. His Kelly. His-\n\nThe pain hit hard and he arched against the bed, his own roar filling his ears. Limbo and dreams were replaced by explosive, bottomless agony. It was a state he was familiar with, but that didn't make it any easier to bear. \n\n*~*~*~*~*~*\n\nKelly woke up on a narrow cot in a small, steel room. Everything hurt. Her mouth felt as though it had been packed with sawdust. Moving seemed like too much of an effort, so she closed her unfocused eyes again, hoping for the escape of sleep. When it didn't come she opened her eyes and forced herself to sit up. At least the handcuffs and shackles had been taken off. Someone had taken her shoes away too.\n\nWhen her vision cleared, she started to take in more of her surroundings. The room was little more than a metal box. On the left wall there was a toilet/sink combination. On the right wall there was a narrow table that seemed to be made out of the same piece of steel as the wall. A single stool sprouted from the metal floor, like an angular mushroom. The seam around the door was the only indication that she wasn't sealed in completely. A small window was covered from the outside. A slot large enough to fit a food tray through was the only other break in the door, but it was covered with its own solid door. Something seemed wrong about that. Someone had to be watching her, didn't they?\n\nShe scanned the room again and noticed a vent in the ceiling. It looked out of place amid the other smooth surfaces.\n\n\"Who's out there?\" Her voice cracked, her face was turned up toward the vent. \n\nHer question was met with silence. She hadn't really expected anything else, but she'd had to try. Kelly sighed and decided she had to try and banish the dry feeling from her mouth. She got up slowly and used the wall for support on the few steps to the sink. She turned on the cold water, made a cup out of her hand and swallowed as much as she could. \n\nAfter her mouth felt better, she stood up and caught her reflection in the small mirror. One side of her face was splashed with dark blood. Victor's blood. Her tears had formed trails in it. The other side was caked with thick rivulets of blood from the bruised and swollen cut on her forehead. All of it made her stomach turn. She cleaned the blood and gore from her face and neck as best she could. Kelly looked at herself in the mirror again. \n\nVictor had called her a survivor, but at that moment Kelly wasn't at all sure that's what she wanted to be. Surviving would mean being without him and that was something she just couldn't envision. She made her way back to the hard cot, curled up and went back to sleep.\n\n*~*~*~*~*~*\n\nKelly stared up at the smooth metal ceiling. She could see the indistinct shape of herself reflected in the steel, staring down at her. Her body ached from all the time she'd spent on the thinly padded metal bench and the various bruises she'd acquired either from the rough transit or her unsuccessful escape attempt. She'd been given what she presumed was food in brown paper bags, but she hadn't bothered to investigate. After awhile -- she had no way of knowing how long -- the squeaky food port would open again and the bag would be taken away. \n\nVictor would have hated that, but Victor was gone. She forced herself to stop thinking about that. Grief wouldn't serve her now, but numbness would. \n\nKelly knew better than to think that there would be a miraculous rescue this time. Conlon might have survived the attack, but he would have no obligation to her now. No one was coming for her. She held no illusions about getting out alive. Whoever had set this up was likely to have more security than she could contemplate. The best she could hope for was to give her captors exactly nothing they could use. Maybe they would decide it was a waste of time and kill her.\n\nShe sat up and stretched before taking the few steps to the sink for a drink of water. Absently, she wondered if they could shut it off from somewhere outside the cell. She supposed she would eventually find out. She glanced in the mirror. The bruise on her forehead was still gaining color and size. That told her she'd been there a day, maybe two at most. \n\nShe turned back toward the bed when the door opened quickly. She turned, but before the shock could wear off, three men rushed in. Something was jammed into her ribs, and then blinding pain of an electrical shock sent her to the floor. Still reeling from the pain, her hands were cuffed behind her, and her feet shackled together again. They half carried, half dragged her down a dimly lit cinderblock hallway to a small room at the end. It was painted an institutional white and tiled in white linoleum. There was a metal chair in the center and she was secured to it. A man in a dark suit waited with his back to the door. All but one of her 'escorts' left, locking the door behind themselves. Her head had cleared, but she wasn't going to be the first to speak.\n\n\"You are a great deal more trouble than we expected, Miss Demmer.\" He was still facing the wall, but the voice was cultured, calm. He had the hint of an accent she couldn't readily identify.\n\n\"Good.\" Her eyes were fixed on his back, drinking in details. He was slim and balding. What hair he had was graying and cut close to his scalp.\n\nThe hint of a chuckle. \"You assume this has to be an adversarial process.\" He still hadn't turned to face her.\n\n\"Excuse me, I must have been confused by being shot at, drugged, handcuffed, kidnapped, locked in a cell and shocked.\" She turned her head to glance at the other man. He stared at the wall impassively.\n\nThe man in the suit turned to face her, a cold smile on his thin lips. \"Some invitations take a bit more effort to deliver.\" A gold watch chain sparkled against the black vest he wore. A long, jagged scar ran from the corner of his right eye to the corner of his mouth. \"Let me begin with introductions. I'm Bern M\u00fcller.\"\n\n\"And him?\" Kelly tilted her head.\n\n\"He's irrelevant. Of course, it's up to you whether or not he stays that way.\" The words were polished, oily almost.\n\n\"Of course.\" Kelly couldn't keep the sarcasm out of her voice.\n\nM\u00fcller's thin eyebrows rose. \"You sound as if you don't believe me.\"\n\n\"You really expect me to trust you?\"\n\nA little nod. \"We've only just met, Miss Demmer. I could make your stay here considerably more pleasant, if you answer my questions honestly.\" He began to walk and gesture with one finely manicured hand.\n\n\"More pleasant how?\" She looked at him curiously.\n\nA broad smile, this time it reached his light blue eyes. \"That's the spirit. Well, in the beginning, small things. For instance, I can see to it that the light in your cell is dimmed at night. All you have to do is answer one question I already know the answer to.\"\n\n\"Then why have me tell you?\"\n\n\"Let's just say, it's a way for us to begin to build confidence in each other.\"\n\n\"What's the question?\"\n\nHe stopped in front of her, his eyes on hers. \"Who was the feral mutant you were traveling with?\"\n\nKelly's eyes were locked on his, anger rose in her chest. \"What mutant?\" The words were deliberate.\n\nHe stood straighter, his eyes appraising. \"There is nothing to be gained by being obstinate, Miss Demmer.\" An insincere smile. \"Since this is our very first meeting though, I'll give you one more chance to reconsider. Who was the feral mutant you were traveling with?\" The question held a sharper tone this time.\n\nKelly took a breath, but he interrupted before she could answer.\n\n\"Please, bear in mind that there will be consequences for your answer this time.\"\n\nKelly looked at him, letting the silence stretch until she saw the corner of his mouth quiver with impatience. \n\n\"What mutant?\" She asked.\n\nM\u00fcller sighed. \"You leave me no choice.\" He made a small gesture to the other man.\n\nKelly only had a moment to study the sadistic grin on his face before the back of a hard fist crashed into her left cheek. Her head snapped to the side. Pain exploded along with stars. His fist came down again, this time catching her eye. \n\n\"Enough.\" M\u00fcller's voice was quiet, but commanding. \n\nKelly saw through her swelling, watering eye that M\u00fcller's henchman was poised to deliver another blow. Instead he retreated somewhere behind her.\n\nHe studied the side of her face closely. \"I dislike using such brutal tactics, Miss Demmer.\"\n\n\"But you're not above doing it.\"\n\n\"We all do what we must.\" A sad little smile. His eyes were as hard as ever. M\u00fcller walked away to study the wall again. Kelly was fairly certain that he was waiting for the pain of the fresh injuries to subside before they continued. Fear and anger fought for dominance. Kelly fought to clamp down on both.\n\nM\u00fcller began to speak, his face still toward the wall. \"Let me explain how this will work, Miss Demmer. \" He turned and began to pace slowly in front of her. The heels of his dress shoes made sharp, threatening contact with the tile on each step. \"You have some information that concerns my employer.\"\n\n\"Your employer?\"\n",
        "He looked at her sharply. \"The one who pays me. Surely you've heard that word before.\"\n\n\"Who-\"\n\n\"Each day, we will speak. If you answer my questions truthfully, you'll be rewarded. If you lie to me, or if you refuse to answer,\" he turned to look at her. \"Well, you've had a small taste of what my assistant is capable of. Do you understand?\"\n\nKelly clenched her teeth. \"I don't know anything.\"\n\n\"We know that isn't true.\" Another smile. \"Now, allow me to show you that I am a man of my word when I say you'll be rewarded. Tell me the name of the feral mutant you were traveling with and I'll dim the light in your cell tonight.\"\n\nKelly's eyes narrowed as she looked at him. She opened her mouth to speak, but again he interrupted before she could. \n\n\"I can understand that you might feel as though you're betraying him, but I can assure you that you're not. You saw him die in a rather graphic way from what I've been told. There's no longer anyone to betray.\" \n\nKelly closed her eyes and forced herself to hold back the tears that threatened to fall. When she opened her one good eye, the corner of M\u00fcller's mouth was twitching again. \n\n\"What mutant?\" Her eyes were locked on his.\n\n\"You do tend to make things difficult for yourself, don't you Miss Demmer?\" He retreated to the wall and a hard fist crashed into the other side of her face.\n\nM\u00fcller asked the question two more times. Each time she gave the same answer and each time the beating she got for her defiance got worse. When she was hauled back to her cell, she was drifting in and out of consciousness. That didn't stop them from shocking her again to take the cuffs and shackles off. There were moments in the middle of the last beating that the pain seemed unbearable. The idea of giving in was even more repellant. \n\nFor awhile, she stayed curled up on the floor. Eventually, she managed to get up and wash the blood off her bruised face. She leaned heavily on the wall to get back to the narrow bench.\n\n*~*~*~*~*~*\n\nCreed sat straight up and looked around, the crushing pain kept his senses on full alert. He'd expected a cell or a lab, instead he found himself inside the same shabby cabin where he'd spent his last night with the frail. A pile of bloody bedding was in the corner. He was clutching one of the frail's blouses. Conlon lingered in a corner of the room, his eyes wide.\n\nHe growled, his claws extended. \"The fuck'er you starin' at?\" He got up.\n\nConlon pointed to his temple. \"Your head is still...not healed.\"\n\n\"Think I don't know that?\" He found the cooler and rifled through it. A couple of beers and what looked like a stock of takeout boxes from the bar up the road. It had been shitty when it was hot. Cold it was worse but his healing factor need the fuel. He started eating cold burger and fries. \"Where's the frail?\"\n\nConlon shifted and looked away.\n\nA low, dangerous growl. \"Conlon-\"\n\n\"She was gone before I could recover enough to use my mutation.\"\n\nHe roared. \"GONE?\" He grabbed the smaller man by the throat and lifted him off his feet. \"Gone meaning what, exactly?\"\n\n\"Taken.\" The word had a strangled sound. \n\nThe word hit him harder than the bullet had. He tightened his grip on Conlon's throat, his claws digging in, drawing blood. \"You better give me a goddamn good reason to keep you alive.\" He eased the pressure just enough to let Conlon draw a breath.\n\n\"Think I know who has her.\" \n\nCreed dropped the smaller man. \"You know where?\"\n\n\"If I'm right, yes.\" Conlon coughed and rubbed at his bruised throat.\n\n\"Then what the fuck are we still doing here?\" \n\n\"It took some time to get the information I needed without being too obvious about it.\" The smaller mutant got up slowly. \"Besides, half your head was gone. I figured if I was going to go riding around with someone who looked like he belonged in Zombieland, I ought to have a good idea of where the hell I was headed.\"\n\nConlon started to cough. Creed ignored him and looked at himself in the mirror. Wet, red flesh was just beginning to encroach on newly grown white bone. \"It's just ugly and it hurts like a motherfucker. Get your shit together. \"\n\n*~*~*~*~*~*\n\nCreed had an amorphous memory of the incident. He remembered the frail screaming his name and the impact on the side of his head. After that, fucking space aliens could have abducted her for all he knew. It was more than he usually remembered after being shot in the head. It still wasn't enough.\n\n\"Well?\" He had just about finished off the last of the takeout. Even without looking he knew that flesh had nearly covered bone again. For the moment, he let Conlon drive.\n\nIt didn't take long to fill in the blanks on the incident itself. The whole thing lasted less than two minutes.\n\n\"CoH?\" Creed asked.\n\n\"No. This was too organized. I thought FoH at first, then I recognized the sniper as one of Cavallo's 'exclusive' guys.\"\n\nCreed looked over at him. \"You were the only other person who knew where we were going.\"\n\n\"Not the only person who saw you once you got there.\"\n\n\"The old man?\"\n\nConlon nodded. \"I recovered enough to fry the sniper before he could take off the other side of your head. Kelly and the others were gone already. Took me a little longer to recover enough to start trying to figure out how they found her in the first place. I figured if someone had seen you on the road they'd have followed you and you'd have noticed that. The only one who might have seen you and her was the old man at the motel.\"\n\nCreed growled. \"You're trying to tell me he was hooked up with Cavallo?\" The idea was ridiculous.\n\n\"No. Once I was moving again he and I had a little...discussion. I found out that he's CoH. He saw Kelly sitting in the truck. He'd missed the whole death announcement, so he called Stan's hotline. I'm guessing Stan doesn't really believe she's dead either and he contacted Cavallo. I can't be sure, but I don't know how else that part would have gone.\"\n\nNervousness put a sharp tang in the air around the other mutant, but Creed couldn't detect any deception. \"You kill him?\"\n\nConlon shrugged. \"What would you have done with him?\"\n\nCreed nodded. \"Find out anything afterward?\"\n\n\"Nah. Lots of CoH 'literature', but other than that, no phone, no TV, no family photographs. We were the first guests in at least six months. Only letter I could find was from a lawyer letting him know that he inherited the place from a brother. If he's got other family, they don't keep in touch.\"\n\nCreed nodded. It pissed him off that he hadn't been the one to make the old man pay. Conlon could manage a simple kill and probably a good bit of fear, but he was certain the old bastard got off easy. \"How long was I out?\"\n\nConlon glanced at him. \"Three days.\"\n\n\"Three-\" Creed felt sick to his stomach. \"She's fucking dead.\" His voice was flat.\n\n\"Not if I'm right and Cavallo has her.\" He turned off the main highway.\n\n\"He's got a generous streak?\" The angry growl came through. He glanced at the road and decided it didn't really matter where they were going if there was a corpse at the other end. She didn't feel dead though. That was fucking stupid. He knew it. Didn't change the feeling. He looked over at Conlon. \"Well? Does he?\"\n\nConlon gripped the wheel tighter. \"I wouldn't exactly call it generosity.\"\n\n\"Playing twenty fucking questions is only going to piss me off more than I already am.\"\n\n\"Cavallo...\" He took a deep breath. Creed could almost hear him trying to figure out which version of the truth he wanted to tell. \"He figures just killing someone who might know too much is missing an opportunity. 'Underestimating the extent of the person's knowledge' is how his soldiers always put it. He'll keep her alive until....until he doesn't think she can tell him anything else.\"\n\n\"Until he's broken her.\" Creed supplied. \"Where would he take her?\"\n\n\"Home territory, New York State. He built himself a private prison bunker a few years back. Six pre-fab cells an interrogation room and basic support facilities, all wired with video and audio.\"\n\n\"He doesn't give a shit about what she knows. He just likes to watch.\" He growled and dug his claws into the door, his anger barely controlled.\n\nConlon shifted uncomfortably. \"Either way, it's not in his interest to kill her right away. She's a fighter-\"\n\n\"She's a frail.\" A frail who isn't even twenty and who weighs about a hundred pounds soaking wet, he thought. \"We need to get to an airport.\"\n\n\"That's where we're going. Be there in twenty minutes. The plane should be waiting. Figured under the circumstances you wouldn't want to go commercial.\"\n\n\"Fucking right.\" Creed stared straight ahead. He rubbed the silk blouse between his fingers. \"Where'd I get her blouse?\" He'd only put it down long enough to get dressed.\n\nHe caught the sidelong glance Conlon gave him. \"You were...agitated.\"\n\n\"Yeah, well, regenerating half a brain will do that to a guy.\"\n\n\"You were...\" Conlon kept his eyes away from Creed's. \"I thought the scent of her...\" His hands tightened around the wheel. \"I figured you'd heal faster if you were calm.\"\n\nCreed didn't want to know what he'd said or done. He didn't put the blouse down either. He held onto it as if it were his anchor in a sea of rage. Some of it was directed at Stan and Cavallo, most of it was directed at himself. He'd fucked up and now she was paying for it. He wondered how long he'd be able to stand the ache he felt in his chest, and how much worse it would get if he didn't get to her in time.\n\n*~*~*~*~*~*\n\nKelly's second meeting with M\u00fcller lasted longer. The chair had been moved into the corner of the room along with a small table. The chain of the handcuffs was attached to a hook dangling from the ceiling. The shackle chain was secured to the floor, forcing Kelly to stand on her tiptoes. The position itself was painful. \n\n\"I realize you're uncomfortable there,\" M\u00fcller said. \"But, it does provide my assistant with more options.\" An oily smile. \"Not that I think we'll need them today.\"\n\nM\u00fcller spent a good portion of the time reading to her from a thick file. The people Victor had killed, the ones he'd tortured, the women he'd raped and mutilated and either left for dead or killed outright. Each act was described with a detached brutality and delivered with the force of a punch to the gut. \n\nThe pain in her arms and shoulders gave her something else to focus on. Kelly no longer had any illusions about what Victor had been. He'd dispelled most of those himself, whether directly or indirectly. The fact that he was gone had no bearing on the fact that in her heart she was Victor's and would remain so for as long as she lived.\n\n\"Miss Demmer?\" He asked. Kelly realized that he'd been silent for awhile.\n\n\"He's dead, right?\" Her voice was flat.\n\nHe nodded. \"You can tell me his name without fear of retribution.\"\n\nThe corner of Kelly's mouth twitched into a little smile. \"Whose name?\"\n\nAn electric bolt of pain shot through her. Before she'd fully recovered from it, a second one followed.\n\n*~*~*~*~*~*\n\nCreed crouched in the snow, Conlon at his side. The smaller mutant was shivering, but he didn't feel the cold. His attention was focused on what appeared to be a small shack at the edge of a clearing. A single guard had worn an icy trench in the snow as he paced, gun slung haphazardly over his shoulder. \n\n\"He it?\" Creed didn't take his eyes off the single man.\n\n\"Out here. Inside there should be eight more, plus one interrogator.\"\n\nCreed figured sixteen plus two, just to be on the safe side. \"For one frail?\"\n\n\"You'd want to commute here?\" Conlon looked over at him; Creed's eyes were fixed on the doorway and the bored man in front of it. \n\n\"What's beyond the door?\" \n\n\"Elevator. Last I knew it took a key to operate, but the guard has one. If he's upped his security-\"\n\nCreed growled. \"We get in anyway.\"\n\n\"We might be able to get in, but as soon as those doors open they've got us. There are cameras in the elevator. One of them will be watching the monitors.\"\n\n\"You can't cook 'em through the walls?\"\n\n\"Not very efficiently.\" Conlon shifted nervously.\n\n\"I don't give a shit about efficient, I just need a few seconds.\" Creed glanced at the other mutant. He was still useful for the moment. When he stopped being useful, Creed wasn't entirely sure what he was going to do with him. \"How'd you end up working for Cavallo anyway? I heard he don't hire mutants.\"\n\nConlon shrugged. \"He doesn't usually. He doesn't like people to know his daughter is associated with him though, so I guess he figured going against his usual rules would contribute to that. Once I was in, I got to know one of the guys who helped design and build the place.\"\n\nCreed glanced at him, his eyes narrow. \"How'd you manage that?\"\n\n\"Giada was fucking him.\"\n\nCreed knew he was telling the truth. He checked his watch. He needed to be in there. The frail might be a scrappy little thing, but she was still so fucking fragile. Something told him to wait. He crouched there for nearly an hour more. The lengthening shadows of evening gave way to true darkness and finally there was an unfamiliar movement at the small building. The guard's replacement emerged. \n\nCreed moved silently and swiftly around the clearing until he reached the closest point of concealment. Conlon followed more slowly. Creed nodded to him and saw Conlon concentrate. A moment later he could smell a faint whiff of burning flesh and one of the two men grabbed his chest in silent panic. Creed took the other one. He sliced cleanly through his throat. Crimson blood sprayed across the snow. Conlon could have done it all, but this was personal. Creed needed to get his claws bloody. He dropped the twitching corpse like the garbage it was and looked at it with disgust.\n\n\"Find the goddamn keys. They'll be expecting someone to go back down now.\" He started to search through pockets. \n\n*~*~*~*~*~*\n\nKelly drifted in and out of consciousness on the floor of her cell. She vaguely remembered losing consciousness when she was still suspended, but at some point she woke up with the cool steel against her cheek. The cold was almost comforting. She was sure she had never endured so much pain. Stan had liked to hit her, but he had been as lazy about that as he was about almost everything else. Dawes had put more gusto into his beatings, but his age was against him in both strength and stamina. \n\nM\u00fcller's 'assistant' was neither aged nor lazy. She knew her ribs were broken on the left side, probably the right too. Her stomach was blackened with bruises, and the pain of every breath extended down the front of her body. Kelly hadn't looked for them, but she knew there were small round burns on her sides and arms from the stun gun they liked to use on her. The cuffs had cut into her wrists sending trickles of blood down over her arms. \n\nShe turned her head so that the other side of her swollen face rested against the cold floor. The small movement made her head spin. For a moment, the pain and pressure there increased. Either it subsided, or she became accustomed to the shift in agony. Kelly kept telling herself that either they would give her time to recover, or M\u00fcller wouldn't be able to get any information out of her. That fact alone almost made Kelly smile. \n\nShe began to try and make her way toward the cot, but her muscles were too sore and weak to cooperate. Just the effort brought tears to her eyes. Kelly stayed where she was and worked on retreating through the pain into her warmest memories of Victor. The times just before they fell asleep when she could hear his heart beat, when his claws teased through her hair and then down over her neck. That always made her shiver and then relax. As long as she could hide from the pain in that pleasant construction, she thought she might be able to tolerate the process of dying.\n\nBefore she could sink fully into those warm memories, the door slammed open again. Kelly moaned and braced herself for the painful blast of electricity. She cried out when they pulled roughly on her shoulders, dragging her down that hallway again. The terror of it was almost too much to bear. She struggled weakly and one of them slammed the side of her head into the cinderblock wall. Kelly could feel the flow of blood start again.\n\nThey dropped her in the middle of the room, her hands secured to the floor. This time all three of them stayed.\n\n\"I see you're more awake now, Miss Demmer. Shall we continue?\" M\u00fcller smiled his cold little smile.\n\n\"Sure. You can kill me before I give you anything. What would your employer think of that?\" She started to cough. Agony ratcheted up in her broken ribs. A mixture of blood and saliva spattered the floor in front of her.\n\nM\u00fcller gave a little shrug. \"My employer wants many things; information is only one of them. Besides, I've been doing this a long time. Letting yourself be beaten to death isn't as simple as it might sound. The human survival instinct is a difficult thing to overcome, even if you want to.\" He sat down again. \"I must say though, the level of your defiance has surprised me. I'm willing to sweeten the pot a bit. If you truthfully answer the question I ask, I'll see that your wounds are treated and that you receive pain medication. I'll also suspend these sessions for the next three days.\"\n\nShe lifted her eyes. \"Whatever will you do with yourself?\"\n\n\"I started reading David Copperfield just before I got this assignment, I might return to that.\" M\u00fcller gave that maddening little smile again. He turned the pages of the file. \"Now, we were discussing your mutant's sexual proclivities. Maybe you're not shocked because he's raped you as well.\"\n\nKelly kept her head down. Her eyes darted from M\u00fcller's polished dress shoes to the three pairs of scuffed black boots. The mood in the room shifted to something even more terrifying than the threat of bruises and broken bones.\n\n\"Perhaps not.\" M\u00fcller said. \"Perhaps that's why you're not shocked; you don't fully understand the horror of it.\"\n\nKelly was certain the terror that gripped her would stop her heart completely. She raised terrified eyes to M\u00fcller.\n\nThere was a sadistic glimmer in his eye. \"Ah, a reaction at last. Perhaps we should take advantage of it to expand Miss Demmer's education.\" He motioned to her three escorts. \"Gentlemen, if you please.\"\n\nRough hands started tearing at her clothing. Kelly started to scream and fight with every ounce of strength she had left.\n\n*~*~*~*~*~*\n\nCreed could smell her blood in the elevator. She'd been here and she'd been hurt. The raging animal in him came to the surface. He didn't even try to hold it back. \n\nWhen the doors opened, there was no welcoming party waiting for them. To the right was a locked metal door, they went to the left. Creed and Conlon moved silently into a spartan galley where three men were playing poker. Before any of them could fumble for a weapon or raise an alarm, Creed snapped one's neck and tore another's throat out. Conlon cooked the other. When he was satisfied there were no others in the small barracks, he went back to the metal door and tried one of the keys from the ring he'd taken off the guard. \n\nThe scent of her blood was thick in the dim, gray passage. He walked by similar steel doors. All were closed except for one on the right. That one stood half open. His nose told him that the blood smeared over the steel floor of the cell was hers. \n\nScreams cut through the quiet air. He ran to the door at the end of the passage. When none of the keys worked, he hit it with his shoulder until he broke it out of the frame.\n\n*~*~*~*~*~*\n\nKelly fought as best she could, but nothing stopped the grasping hands or taunting grins. Her clothing was ripped away piece by piece. Finally they turned her over onto her stomach. One held her shoulders; one started forcing her legs apart. That's when the pounding on the door started. For a moment, everything stopped.",
        "M\u00fcller got up. \"Keep going.\" The order was delivered sharply.\n\nThe door crashed inward before he could reach it. Kelly was sure she heard Victor's roar. That was impossible, but the rough hands had left her body. She shifted as far away as she could and curled up tightly, her hands protecting her head. She heard screaming and the sickening sound of bodies hitting the floor and bones breaking. M\u00fcller started to scream for help. She heard something that sounded like melon splitting against the ground and then there was silence.\n\nShe ventured a glance. Her vision was blurred with tears, pain and fear, but she could make out someone walking toward her. She had no strength left to fight. She started to whimper and squirm away.\n\n\"Frail?\"\n\nIt sounded like Victor, but it had to be a trick, either one they were playing or one from her own mind. A clawed hand stroked the outside of her thigh. It was the first time she'd been gently touched in what seemed like ages. A soft purring growl vibrated the air around her. Kelly lowered her arms slowly. Her vision was blurred, but she could make out the familiar, hulking shape above her.\n\n\"Victor?\" The word gurgled in her throat. She started to shiver.\n\n\"It's me, kitten.\" She heard his voice crack.\n\nKelly moved closer and groaned. Her muscles trembling. \"Thought you were dead.\" She started to cough again.\n\n\"Didn't take.\" He unlocked her wrists first. Kelly knew he was being careful, but when he pulled the metal bars out of the wounds they'd created, she couldn't help but cry. \"Told you nobody's figured out how to kill me yet.\" He put his coat over her and moved down to her ankles.\n\n*~*~*~*~*~*\n\nShe was dying. Creed could fucking smell it starting to gather around her. Her hair was matted with blood, both of her eyes nearly swollen shut. What little he could see of her right eye was completely red from burst blood vessels. From the quality of the bruises on her torso he suspected she was bleeding internally too. The other cuts and bruises were too numerous to list, but some of them were infected already. He'd delivered fatal beatings that left less severe injuries. \n\nCreed heard someone walking down the hall. He turned quickly. \n\n\"All the video is on live feed-\" Conlon stopped in the doorway. \"Jesus Christ.\"\n\n\"Get the fuck out. Get back to the truck and start it.\"\n\nShe looked up at him with unfocused eyes. \"Where-\" \n\n\"Taking you to a hospital, just hold on.\"\n\n\"Can't walk.\" She was barely conscious.\n\n\"Think I don't know that?\" He fought to keep his tone normal. Upsetting her wasn't going to do a goddamn bit of good. He moved his arms under her and lifted as he stood. \n\nShe cried out in pain. The bullet that had torn through his head had hurt less. He moved as fast as he dared through the claustrophobic complex. When they emerged into the frigid night, he held the frail closer to his chest. She started to shiver anyway. He kept up a soothing growl and supported her head as best he could. When he got back to the rented SUV, Conlon was waiting. He got into the back, the frail cradled in his lap.\n\n\"Hospital.\"\n\nConlon drove out of the secluded turn-off and onto the main road. \"Fifteen minutes.\" He said.\n\n\"Fifteen-?\" The frail was mostly unconscious. She was trembling; her breathing was shallow and irregular. He scanned the countryside. \"That ain't gonna cut it. Take the next right.\"\n\n\"But that's-\"\n\n\"I know where it goes. Just take the fucking right.\" His voice was low, dangerous. He shifted carefully and pulled the phone off of his belt. He searched through the directory until he found the number he wanted. He dialed.\n\nEach time it rang unanswered, Creed felt the pain his chest increase.\n\nIn the middle of the fourth ring, the phone was answered. \"Charles Xavier.\""
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "victor creed",
        "human",
        "injury",
        "recovery",
        "mystery"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-20"
}