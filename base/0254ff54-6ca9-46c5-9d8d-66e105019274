{
    "title": "Trilogy of Tits and Terror Ch. 01",
    "pages": [
        "This story is posted on the Literotica website. Do not repost anywhere else without the author's consent. For fans of my stories, they know what kinds of things to expect. This story deals with similar themes as the stories by wannabeboytoy, seducedHylas, and Dark Betrayal, namely cheating, betrayal, and heartbreak. If stuff like that isn't your cup of tea, then you probably shouldn't bother reading it. I do not condone any of these actions in real life. This is just a story. Enjoy.\n\n************\n\nThe bound nun awoke with a fright.\n\nPanting with fear and confusion, she took a moment to figure out her current predicament. Still clad in her habit, she was bound to a heavy wooden chair; her legs were tied to the chair's legs with thick and heavy ropes. Those same ropes bound her wrists to the arms of the chair, wrapped around them over and over again. She wasn't going anywhere.\n\nHer eyes rose, trying to figure out where she was. The room was dark, lit mostly by candles hanging on the walls. It was hard to pick out many details of the room in the dim light, but it seemed large and kinda fancy. And it seemed old as well. Very old.\n\nFrom far away, through the walls, she could hear loud screaming, from multiple directions, making her shiver with fear.\n\nHer gaze was drawn to the center of the room, which glowed from the light of a fire from a built in fire pit. Above it was a heavy, black, cast iron cauldron, supported by metal posts. And next to it was a woman, studying its contents. As soon as the nun looked up, the woman's gaze met hers.\n\n\"You're awake,\" the woman announced, standing up.\n\nAs she stepped forward, carrying a candle, her heels clicking on the wooden floor, the nun got the chance to study her for the first time. She looked older, maybe in her forties, elegant and posh looking. Her skin was very pale, which contrasted with her dark black hair, interrupted only by a streak of grey, the same grey as her cool, calm eyes. She was clad in a nice, ornate, black dress, which highlighted her voluptuous frame. Long, firm legs, a full round ass, and very large breasts. \n\nBut there was something about her that cast a pall of dread within the nun, and it wasn't just that the fact that she was tied up to a chair, at this woman's mercy. Something about her was off. Something about her seemed to pulse with darkness.\n\nPulling over a smaller chair, the older woman gave the bound nun a cool smile before sitting down next to her.\n\n\"What is this?\" the nun asked, terrified, straining to escape her bindings. \n\n\"Do you remember how you got here?\" the woman asked. The nun searched her memories. Even though her thoughts were fuzzy, she could remember what happened. Driving her small car at night, in the rain. A car zooming up behind her, forcing her off the road, into a ditch. Then... blackness.\n\n\"Did... was it you? Did you run me off the road?\" the nun asked.\n\n\"Well... not me, personally, but... one of my followers,\" the woman said calmly.\n\n\"Followers?\" the nun asked. The woman smiled.\n\n\"Do you know who I am?\" she asked. Studying the older woman, the nun tried to figure it out. The other nuns at the church had been very concerned lately about a group rising up, a cult, a coven of very powerful and very ruthless witches, led by the most powerful of them all. A Queen witch, a woman who ruled over the rest, who was leading the charge in a war against the Church. A woman who looked exactly liked the woman seated next to her.\n\n\"Madeline...\" the nun said, terrified to be in the presence of someone, if the stories were to be believed, deeply and truly evil. \"Madeline Crow.\"\n\n\"That's right...\" Madeline said, a small smile crossing her plump lips. \"I'm sure all your Sisters have all sorts of stories about me.\"\n\n\"Listen... I don't know what you want!\" the nun cried. \"But they don't tell me anything! I'm not a part of any of that stuff. I can't speak for them. But I believe in the work, in the good message helping people see the light. I just... I just keep my head down and work.\" The witch looked away for a moment before smiling.\n\n\"I know, dear,\" Madeline said. \"You might be surprised, but we've had our eye on you for some time. I know that you've been in the church for years, well before this new sect took over. You stayed at the church, going along with their radical changes, despite recognizing the blatant corruption of both the old guard and the new. You do love the work, but it gets harder and harder to do that work being surrounded by all those corrupt, sinful sluts.\"\n\nIt was true. All of it. She had dreamed of joining the seminary since she was young, loving the church and the message it spread. She gave up on all the spoils of life to be a nun. That's how committed she was. She truly was one of the good ones. There were some things she didn't love about the church at that point, but her belief in the good book was so strong that she looked past that stuff, vowing to spread the message. \n\nThen the new sect swept quickly, a group of aggressive and clever women, nuns, like her, but they were the farthest thing from her really. These women, every last one of them, looked like bikini models wearing sexy nun Halloween costumes. As crazy as it looked, they were apparently the real deal. And admittedly, most of them came across as being quite intelligent and ambitious, but their overly sexual message made her uncomfortable. The way they made their habits hug their bodies, showing off all their curves. The open and progressive way these women discussed lewd sexual acts. And while she never saw anything for certain, she just knew her fellow nuns were out there, using their bodies for sin, fornicating and copulating at every opportunity. That was the culture these new nuns created.\n\nWhile their predecessors seemed to spend too much time focusing on endeavors outside of the church, like business sponsorships and other money making plans, this new group, this group of women, they were even worse. They had nuns out there, spreading the word, and no doubt other things, bringing back money and connections from powerful men. They weren't even subtle about it. Some of them talked openly about their sinful behavior, like it was all some big game. It was like they were all social climbers, in the guise of the Church, looking to rise on the social ladder by any means necessary.\n\nBut there was something going on beyond that stuff, something far more serious. Something only discussed among the nuns of the highest order. She had heard rumors and whispers of a war brewing, with these evil and dangerous witches. Poking around, she learned a bit more, including seeing pictures of Madeline, but she was smart enough to keep her head down and just stay out of it.\n\n\"What do you want from me, then?\" the nun asked, beads of sweat sliding down her exposed forehead.\n\n\"It's simple...\" Madeline began. \"I'm gonna convince you to leave the Church.\" The nun's eyes twisted in confusion.\n\n\"What?\" she said, confused. \"No... I might not love the people I work with, but I love the work. I love the message. I love the Church!\" Madeline laughed to herself.\n\n\"Even though they laugh at you?\" Madeline said. \"Even though you are not one of them? Even though they send you on all the shit jobs just so they don't have to break a nail? They take advantage of your good nature, dear. They put you in danger... and you don't even know it!\"\n\nSadly, these words rang true. Being at this new church was just like being in high school, with the popular girls ruling the roost, laughing and making fun of her right to her face, under the fa\u00e7ade of being friendly and supportive.\n\n\"They might not be the greatest people, but...\" the nun said. \"That's not enough to make me leave the Church! Our message is stronger than any small, petty disagreements.\" Madeline looked at her, shaking her head slightly, almost condescendingly.\n\n\"I brought you here because I wanted to tell you some stories, dear,\" Madeline began. \"And by the end, when I'm finished with these tales, you will have a choice. That choice being... whether to stay in the Church, or leave them, join our side, and end the Church's corruption once and for all. How does that sound?\"\n\nThe nun shook her head, puzzled, but she didn't have time to say anything before Madeline began telling her story.\n\n*************\n\n\"Mirror Fear\"\n\n*************\n\nTess had been intrigued by the mirror from the start.\n\nThe 22-year-old and her husband, AJ, had just moved into a new house. Freshly married, these two were seeking out a new, fresh start, far from home. Both had come from a small very conservative town and very religious families. Both Tess and AJ had never bought in as much to all that Church stuff, and the time both chose to rebel and stop going to church was also around the same time they started dating, back near the end of high school. Their skeptical natures were something they bonded over. Needless to say, neither family approved of this pairing and did their best to get their respective child to end things and get back on the good path. Their families did their best to force their beliefs on them and drive them apart, and when they were younger, even though they had been scared off at moments from dating each other, they always came back together. Their bond was that strong.\n\nThey weren't evil or anything. They were both actually quite nice and kind and friendly. They were both just not overly religious. But in their neck of the woods, rejecting the church went hand-in-hand with, like, murder, so they were shunned by those closest to them. They were steadfast in their relationship though, trying to make it work, but the response of people in town became more insidious. Nasty rumors began to spread about them both, calling her a slut and he a heathen. People would literally come up to them and tell them they were going to Hell, and that they needed the salvation of the church. It was insane. Both worked locally, and even their friends began to turn against them, believing in some of the more ridiculous rumors about the supposedly evil things they had gotten involved in. Eventually, the town just became too toxic for them both, and at a moment when their folks were both out, they quickly packed a van with as much of their stuff as they could and just left. They drove away, eager to escape, eager to get a fresh start with more open-minded people. And on their way out, they got hitched at the courthouse.\n\nTheir honeymoon wasn't anything special. Just a long drive, getting far away from home. But despite that neither had ever been happier.\n\nThey lived out of their van for a bit, saving cash as they made their way towards the city. Both of them had begun putting away money as they planned out their escape from home, so they had accrued a bit of a nest egg. Nothing much, but enough for the fresh start they needed. \n\nEventually, they made their way close to their goal, the big city, a place more open-minded and accepting of all kinds of people. Her family had always warned her about the city, saying it was a haven of sinners. That if the devil lived anywhere, it was there. So, being ever rebellious, that made the city a place she always really wanted to go to. For their first few weeks there, they spent most of their time looking for a place to live. Naturally, most housing in these parts was well beyond their means, so they had to be flexible.\n\nThen, they found a place.\n\nIt was a big house, two-stories with an attic, large and spacious. An old, almost Victorian-looking home. Sure, it was old, and rundown, the weeds overgrown in the lawn and the inside was dusty and not very modern. But it was shockingly affordable. Neither of them needed anything too crazy in terms of a place to live, and both found themselves charmed by the old fashioned design. Finding the place too good of a deal to pass up they ended up taking it, moving in shortly after. \n\nThe place was mostly unfurnished. There were some nice lighting fixtures, very old-fashioned and fancy looking. There were a few older, cute looking pieces of furniture. But what caught Tess's attention most was the mirror.\n\nStanding in the bedroom, it would stand out anywhere. Taller than her, standing on two thick feet, the large reflective pane was built on a frame of gold colored, impressively molded and designed metal, surrounding it on all sides and holding the mirror in place. The two thick and girthy feet were made of the same metal. The whole thing looked heavy as well, as if whoever had been here last couldn't move it due to its sheer size and weight, so they just left it there. It looked old, judging by the dust on it, the dulled sheen of the gold colored metal, and the intricate designs adorning the frame. People these days wouldn't put in the time to make a mirror look this impressive.\n\nThat being said, it was a bit of a headache, simply due to the fact that it was so heavy it couldn't be moved more than a few inches. It was in their bedroom, and it didn't want to leave, so they had to simply work with it, building up their bedroom around it.\n\nBut this wasn't the reason Tess was so intrigued by the mirror.\n\nThere was just something... weird... about it. A strange vibe coming from it that she couldn't quite place. And when working around it, it felt like the mirror was watching her, in a manner she couldn't really put into words. There were no human-like features on it, so it wasn't like it was one of those paintings where the eyes followed you. It was just a tall, ornate, antique mirror. But it felt... alive. It felt like it was standing there, thinking.\n\nObviously, this sounded crazy, and Tess realized that. She was probably just a little nervous about all these recent life changes. These feelings were just that, feelings, and those could be written off. But it was what she saw with her own eyes that made her most unnerved. \n\nThe shadow.\n\nIt wasn't the shadow from the mirror itself, but something... within the mirror. Every time she turned to glance at the mirror, it was like there was... a shadow... leaping out of sight before she could fully look at it, hiding out of view. It was a shadow... a darkness. It was hard to explain, and she hoped it was a trick of the light, but she would see it again and again, every time she glanced over. Something in the mirror, leaping out of view, hiding from her.\n\nThe whole thing unnerved her, quite frankly. Of course, AJ never noticed a thing. He joked about it, laughing her off for being freaked out by a mirror. She was never too specific about what she thought she saw, as she didn't want to let her new husband think she had gone crazy. But her husband accepted that she was a little freaked out by the mirror, and offered to move it. However, despite all his manly strength, he was unable to life the mirror's shockingly heavy weight. So they had to relent and leave it in place.\n\nTess was the type of girl who liked to confront her fears, so instead of walking around it, giving the creepy mirror the side-eye, she opted to confront it, moving to stand in front of it as they reached the end of their second day of moving in and unpacking.\n\nShe appraised the mirror. It was well made, despite being creepy. Nice solid metal, built to last. The mirrored surface was smooth and even, with few pockmarks or signs of age. Staring at it meant staring at her reflection for a few moments.\n\nTess was a thin, willowy brunette. She was quite pretty, but she played down her looks, preferring to go with little make-up and more comfortable clothing. She was a bit of a tomboy. And even though she didn't play it up, she still looked mighty cute. Big friendly eyes, a cute smile, nice smooth brunette hair, often tied up in a simple pony tail. And while she had a naturally darker complexion, even she had to admit she could probably spend a bit more time in the sun to really make her skin pop. She had on a heavy flannel over a thin t-shirt, hugging her slim chest. While she wasn't the most busty girl in the world, her B-cups worked for her frame. She was tall, for sure, but she had always been a bit too thin, admittedly, meaning she didn't have much of a butt, and her legs seemed a bit too skinny. But her look worked for her. \n\nAJ certainly liked it.\n\nHe'd been a bit of a standout back in high school, a fit, handsome athlete, a guy that plenty of girls pined for. But deep down, he had a bit of an artist's soul, and it was when they sat next to each other in art class junior year that they began to bond. Next to her, his art began to blossom, proving him to be truly, naturally talented. It was around this time they started dating. Some of the other girls would snarl that he was only faking his art interest because he, for some reason, had a crush on little, simple, mousy Tess. But his and her feelings felt genuine, going both ways, and love blossomed between them. \n\nHe was still every bit as handsome as he was when she first met him. Tall, and mouth-wateringly fit, nice dark hair and a cute boyish smile. Her attraction towards him was refreshed every time she saw him. Of course, not long after they began dating, she let him take her v-card. She wasn't stupid. A guy like him doesn't come along every day, and despite her shyness, inexperience and her religious upbringing, she knew when to strike. They had so much in common, with art, and hobbies, and religion, and politics. Their connection felt beyond a typical high school romance. She was sure every other person in a high school romance thought the same way, but she was aware enough to know that this felt real in a way beyond all those other ones. It was together that they fell in love, it was together that they left behind their conservative families and toxic hometown. It was together that they started this new journey together.\n\nThey were truly in this together.\n\nHe had already secured a job with an ad agency, looking to use his art to give them a good life while having the opportunity to excel in his own pursuits when he got the chance. She had interviewed at a few places while they were still looking around for a place, and had gotten a job at a small art school at the local girls' college. It wasn't much, but it was something that brought her joy, so she looked forward to it.\n\nAs she stood, staring at the mirror, she was happy with what she saw. She had never been body conscious or anything like that, and looking at herself never made her overly critical. Sure, living on the road for a bit gave her belly a little pooch thanks to all the fast food she'd had. She usually hit the gym at points like this, which was a struggle, as her and exercise weren't always the greatest mix, but she had kept herself in good shape in general.\n\nGetting back to the point of why she was looking at it, the mirror itself seemed to be in good condition. The pane seemed smooth and thick, and it wasn't like a fun house mirror, distorting her body in weird ways. The reflection was normal. The only thing she noticed was that the reflection seemed a bit dim. Tess reached forward to run her finger along the pane, testing for dust or grime. Sliding her finger across the smooth mirror, nothing came off the glassy pane. But somehow, despite it being smooth, she must have slid her soft fingertip across some sort of invisible crack, because something caught her finger, a sharp prick. She yanked her finger back with a start, looking down at it as a bead of thick blood appeared there.\n\n\"Asshole!\" Tess called out, glancing up at the mirror in annoyance as she sucked the blood off her finger. As she did, the spot of blood she left behind on the pane seemingly disappeared into it. At the same moment, it seemed as if the dimness of the reflection disappeared, the reflection on the pane now crystal clear. Tess's eyes narrowed in confusion. Were her eyes playing tricks on her?",
        "\"Hope you're not talking to me?\" AJ joked, walking in behind her, carrying a box full of clothes. \n\n\"No, it's this... mirror. It cut me.\" she said, annoyed, kicking the base of it before wincing in pane from the hard metal. \n\n\"Be careful... that mirror's kicking your butt,\" AJ said, setting down the box to walk up behind her. \"Here, let me see...\" he said and she held out her cut finger. Seeing the small prick on her fingertip, he smiled. \"Only you could cut your finger on a smooth mirror, Tess...\" he joked. She could be a bit of a klutz sometimes, so this type of thing wasn't outside the realm of possibility. \n\n\"Hey, there's a... crack... or something,\" she said, pointing at the mirror. He glanced at the mirror and ran his fingers over the smooth surface, before holding up his unharmed fingers and grinning. Slapping him lightly on the side, she marched over to the bathroom to grab a band-aid. It wasn't much of a wound, just a little pin prick, so it wouldn't take long to heal.\n\nHow wrong she was...\n\nBy the end of the day, she started to feel a little sick. She was sweating like she was overheating, and her blood felt like it was boiling. On top of that, she felt tired, not just sleepy tired, but whole body tired, exhausted. And she could barely keep going, taking herself to bed early. \n\nSleep was restless and strange. It felt like her mind never truly turned off. Her thoughts were swirling images, bathed in red, shifting as if it were a movie playing behind a fog, making everything strange and indecipherable, forgotten as soon as she awoke. The one thing that made it through was the sounds. At first, yelling and screaming, followed by repetitive grunting and moaning, followed by angry blood-curdling screams. And, through it all, hidden slightly in the background, was a calm, crisp female voice, speaking another language, a language Tess couldn't recognize. But it sounded wrong. It sounded scary. This voice was there throughout the dream, speaking in a hypnotic timbre.\n\nIt was a pretty creepy dream, and what made it worse was the fact that she had the same dream two nights in a row. The exact same dream, beat for beat, causing her to wake up in a terrified sweat. And in between these dreams was a full day of misery. Tess's symptoms were in full bloom, and she barely left the bed the whole next day. Whenever she woke up, still in a daze, AJ was there for her, waiting to help in any way he could. He brought her water and soup, doing the best he could to keep her going. She was sore and exhausted and feverish. Not enough to have to go the hospital, but enough to lay her out on her ass for a good day.\n\nWhen she woke up the next morning, after having that same dream again, she immediately realized she was through the worst of it. Her exhaustion seemed mostly gone, as did her fever. She still felt a little weird, but that was to be expected after such a sudden severe illness. \n\nPadding downstairs in her pajamas, she slowly moved into the kitchen where her husband was busy cooking up breakfast.\n\n\"Hey, Tess... you're up!\" he said with warmth. \"You feeling better?\"\n\n\"A little...\" she said, nodding at him with one eye closed, still groggy. \n\n\"You hungry?\" AJ asked. Tess suddenly realized how hungry she was. She had barely eaten anything the day before, so she was starved.\n\n\"Yeah,\" she said firmly, with a nod. Her husband opened the fridge. \n\n\"Well, I'll cook you up something real good,\" he began. \"But first... let me give you some vitamin c. My grandma swore by it. She always said it made me feel better.\" He pulled out a jug of orange juice and filled a glass for her. He picked it up and carried over to his wife. Seeing this gesture, Tess spoke up.\n\n\"I don't need vitamin C right now, I need vitamin dick!\" she announced.\n\n\"What!?\" AJ said with a laugh, so stunned he almost dropped the glass.\n\nTess was a little caught off guard herself. Where did that come from? She didn't mean to say that, but she had said those words... weird. And it was only as she said this that she realized that, despite still being groggy from sickness, she was shockingly horny, to the point where she was dripping down her leg. Where did this come from?\n\n\"I, uh...\" Tess suddenly stammered, suddenly embarrassed. But just as before, words and actions came to her before she could think about it. \"You heard me...\" she said, stepping forward, placing her open palm against her husband's pants-covered bulge, stunning him. While he wasn't hard at the moment, due to her grip, that began to change. \n\n\"What are you doing?\" he asked with a laugh. He and Tess had a good sex life. He was a good lover, taking his time with her. She was shy and was less experienced than he was, meaning that he had to work at her level, taking his time, being gentle and deliberate, and not just slamming away blindly. Their lovemaking was truly that: lovemaking. It was nice and sweet and it felt good. With all that being taken into account, it was shocking to see her act like this. She was never this forward and aggressive. \n\nAgain, Tess couldn't fully explain her actions. But the driving need coming from her pussy spurred her to go along with these strange events. But what really drove her crazy was that small flash of lust that went across her husband's face, just for a fleeting moment, before being hidden by that boyish smile of his. Her husband liked this side of her, but he was trying to hide it. Seeing that AJ was enjoying this, she continued.\n\n\"Let's wait on breakfast for a bit... and have some fun first,\" she teased, these words coming from her without thinking.\n\n\"Are...\" he began, his prick swelling between her fingers. \"Are you sure you're feeling better?\" he asked with a raised eyebrow.\n\n\"Yeah...\" she sighed softly, stepping in close to him. \"I'm sure.\"\n\nTen minutes later, the married couple was getting hot and heavy in their bed. She was normally a missionary kinda girl, but this time, she was spurred into changing it up. That led her to riding her husband energetically, her pussy taking more of his sizable nine inches of cock than ever before. She wasn't exactly riding him hard, but this change in position was more than enough to drive him crazy. \n\n\"Fuck... this is good,\" AJ sighed from beneath her, reaching up and resting his hands against her small, cute breasts, squeezing them lightly. Just feeling her husband's touch was always enough to drive her crazy, but in this energized encounter, it made her moan.\n\n\"Oh God!\" she moaned out, still bouncing lightly on AJ's dick. His hands slid down to her hips, grabbing them and holding on as she bounced on him.\n\n\"Oh my God... oh my God... I'm gonna cum...\" AJ warned his wife as her ministrations were enough to take him over the edge. Biting her lip in pleasure, she lowered herself onto him as his cock exploded inside her. Getting married put them past the point of using condoms, so she was on the pill, meaning they could have sex without fear of her getting pregnant. They weren't at that point where children were an option for them. Not even close.\n\nTwo minutes later, both of the young lovers were on their back, panting for breath. Feeling her husband's seed inside her filled her with love and warmth for him. She had never felt better. \n\n\"Where did that come from?\" AJ said with a still shocked grin.\n\n\"I don't know,\" she replied truthfully. Where had that come from? Was it some weird side-effect of her illness, making her super horny and aggressive? She didn't know. \"Did you like it?\" she asked, looking back at him. He studied her for a moment, not sure how he should respond. Opting for honesty, he answered.\n\n\"Uh, yeah, I liked it,\" he stated. \"Did you?\" Knowing that what they had done made him happy was enough for her.\n\n\"Yeah... I liked it,\" she said, rolling over, smiling at him, curled up in the bedsheet, her lower half covered. \"We should do it like that more often...\" she said. He smiled at her and nodded in agreement.\n\n\"I'd like that,\" he said warmly. Tess leaned over and gave him a kiss.\n\nShe couldn't be more content.\n\n**************\n\nTess's condition improved over the next few days. She still felt a little weird in the head, her thoughts still rapid in moments, and every so often she would find herself saying things without thinking, like before. And she was still dreaming those same freaky dreams, and they weren't getting much clearer. But other than that, she was happy.\n\nStill having a little bit of time before her job started, she used the free time to catch up on things. Tess still had that bit of pooch in her belly, so she found a gym nearby to get back in the habit of working out. But she found herself struggling to get into it, finding herself to still be a bit low-energy after her illness. She did what she could even though it was far less than what she could do at her best. \n\nBut the weird thing was... it was working.\n\nUsually, she'd have to bust her butt until the pounds started coming off. She had a good metabolism, but she still had to put in the work to take off the pounds. But this time, she barely put in any work, and the pounds were just melting off. \n\nStanding in front of that mirror naked one morning, she couldn't help but admire herself. Where her belly was a bit soft mere days prior, it was now hard and taut. Being so fit and slim also made her boobs look a little bigger too, which was always a plus. But what really jumped out to her at this point was her butt.\n\nShe actually had a butt!\n\nShe turned her back to the mirror and looked over her shoulder. Before, her butt was small and flat and relatively shapeless, now... it was the opposite. Each cheek was full and round and shapely, standing out like a shelf from her slim frame. Where once there was nothing, now stood a juicy, perky, heart-shaped ass, raised up and standing proud. \n\n\"Oh my God...\" she said to herself, studying her own bare ass. \"Where did this come from?\" Like, really, where did this come from? She had done so much more work before without ever getting a butt like this. And now... just...\n\n\"Whoa...\" AJ said, entering the room from the bathroom, having just come out of the shower, wearing only a towel. His eyes were glued on his wife's rear, which was facing him. \n\n\"I know, right?\" Tess said, equally as impressed as AJ.\n\n\"I'm... wow,\" AJ said, unable to pull his eyes from her butt.\n\n\"Yeah... done a bit of working out... how do I look?\" she asked, the words coming from her without thinking.\n\n\"You, uh... you look amazing...\" he sighed, moving towards the bed. He was unable to stop staring, his cock forming a tent in his towel.\n\n\"You like my ass?\" she asked, her voice a soft purr. Again, the words were coming from her without a thought.\n\n\"Yeah...\" he croaked out, biting his lip. He was never this nakedly lustful towards her. The look he was giving her was making the young wife melt with excitement. Reaching back, she squeezed one of her exposed butt-cheeks, toying with the smooth, firm flesh. She looked up at AJ as he gulped.\n\nWithin minutes, Tess was bent forward, hands against the mirror, her husband behind her, a picture of raw lust as he hammered her from behind. He wasn't normally like this, but he had been driven to this by her body. Driven to pure, animalistic lust. His body was tensed as he drilled her, stealing glances at her ripe behind as he fucked harder than he ever had before, and she simply took it, moaning in pleasure.\n\nAgain, she didn't know how she got an ass like this, but she liked it. She liked how sexy she looked. She liked how her husband looked at her. So, she didn't ask many questions. She didn't think too much as to how she could speak to him like she had, speaking without thought, saying things and not knowing where they came from. All that mattered was how good it felt.\n\nAnd when that climax came, she was looking forward, looking into her own eyes through her reflection. And when that wave of pleasure hit, she looked at herself, and for a moment, for a millisecond of time, the image she saw wasn't her. It was something else. Something she didn't recognize.\n\nBut she didn't think about it long. She couldn't. A wave of pleasure hit her as her husband exploded inside her, and she passed out from the overwhelming pleasure.\n\n*************\n\nThat night, Tess had the dream again. But this time, the images within were suddenly clear.\n\nPeople, all around her. Surrounding her. Angry people, angry men and women in old-looking cloth coverings, coming at her with torches and sharp objects. She was in the middle, kneeling in the sand, and looking past this angry mob, she swore she could see pyramids in the distance. Soon, everything became bathed with flame. \n\nAs this happened, a voice emerged... that firm, crisp, female voice, speaking that other language, some unrecognizable dialect. The words she spoke flowed into each other and cast a strange, otherworldly pall throughout the entirety of this dream.\n\nSuddenly, through the background of flame, as if a flash of memory of the events that preceded this, two bodies emerged. Naked bodies in sexual union. On her back was a woman, and the man above was on his knees, driving himself into her, fucking her. In the haze of the dream, their faces couldn't be seen, only their bodies. Two fit, attractive bodies. The woman had massive, smooth breasts, bouncing roughly as the man drilled her. She screamed out in pleasure as he moaned in a lustful growl. He reached forward and groped at her big boobs lustfully.\n\nThe flames overtook them both, and the screams of pleasure transformed into screams of pain and agony from all sides, waves of heat and fury. And through it all, that same voice, still talking. With a flourish, she spoke a few words louder, and suddenly, the image changed.\n\nShe was suddenly in grassy village, a community with small huts. No one else could see her. No one suspected a thing as she walked towards the largest hut in the village.\n\nIn a flash, Tess was watching the action from the side, a large, well-built man behind another voluptuous, hot-bodied woman, the same woman's whose body Tess was in at the start, drilling her roughly, reaching around her to grope her massive breasts savagely, their moans as loud as their colliding bodies.\n\nIn the next part of the dream, Tess was back at the center of the action again. And once again, people surrounding her, yelling at her, backing her towards a river, with torches and heavy rocks. She fell backwards into the water, never rising again.\n\nThe flames returned, overwhelming her, the burning fury and the agony of pain, the loud screams devastating her. And again, that voice, muttering its strange phrases, until she rose from this hell again.\n\nSuddenly, she was back on the surface. And the cycle continued. She entered the large entrance room of a huge, imposing castle, catching the King's attention. Flash to that evening in the King's quarters, Tess again watching from the side as the bulky King drilled this wench like the whore she was, her juicy body more than enough to drive him into sin. But this could not be. The kingdom could not be brought down by some whore! An executioner's blade was the next thing Tess saw coming towards her before returning to the fires again.\n\nOver and over, Tess experienced this cycle. Nasty sex in different settings, with her watching from the side. Followed by people finding out, casting her to death in various cruel ways. Then, to the fires, surrounded by flame until she rose once more, repeating the cycle.\n\nLiving on a big fancy boat, hooking up with the captain, being thrown into sea, back to Hell. A small, Italian village, flowing with life and creativity. A hookup with a priest, a collision with church goons, before being cast into a cell for the rest of her days. Then, back to the fires, starting again. A small puritan village. Sex with the leader of the colony. Burned on the cross. Then, Hell, before returning to the world again. Rising up in the royal court in France. Hooking up with the noble local governor. And then... slice. She experienced the guillotine first hand. A small European village during a great war. A hookup with a powerful commander, who gives up all sorts of information in exchange for the rough sex she can provide. The information leak is discovered, and she is put to the firing squad. And then, back to Hell... waiting for a new time to rise.\n\nAnd through it all, that same voice, chanting in her strange language.\n\nBut this time, there was no rise. Cloaked, hidden figures came to her through the flames, figures that conjured deep fear, even in her. Chained to stone, facing the final penalty for her misdeeds. Facing the penalty of rising and falling so many times. Her luck had run out. Her time was up. Far above her was a source of bright, brilliant light, the light of life. The light of the mortal world, so tantalizingly close, torturing her with its proximity, but so very far away. The light was so bright and crystal clear in this fiery, smoky darkness that she could almost see her own reflection in it.\n\nHeld tightly against this rock, she looked up to the light far above her, reaching up with thin, dark, feminine, scaly fingers, with razor sharp nails. Reaching up to the light. Reaching up for freedom. Just one more time. Just one more chance. And the words in the background, the strange incantations... they started to fade as the voice used up the last of her energy, finding one last loophole, one last path to life...\n\nThat's when Tess would wake up.\n\nWithin minutes, a lot of these details would fade from her conscious mind, but each detail was carved into stone deep in her subconscious. Into a place where she would never forget, in a way that would never allow her to forget. Becoming permanently imprinted, changing her in ways that couldn't be explained.\n\nAnd through it all, Tess would go about her normal day, not knowing how these dreams were affecting her.\n\n****************\n\nThings began to settle into a groove. Both AJ and Tess started up at their jobs. They got their house established and fell into a good rhythm. This was the first time either of them had lived with anyone but their parents, and both were naturals, settling into a good, mature daily married life. \n\nAnd they were having a lot of sex. \n\nBefore moving there, they had sex when they could, but they didn't have the time or space or privacy to get it on at a regular basis. When they did, it was great, their lovemaking was amazing. But now, in this new place, on their own and married, and spurred on by this sudden change in behavior in Tess... they were going at it all the time. \n\nTess could tell AJ was a bit unsure at first. Not that he didn't want it, but he wasn't sure about this change in her. He wasn't sure if this was some game, or if she would regret it once it happened. But no... she needed it as bad as he did. Soon, he was all over her, spurred on by lust, a far cry from the smart sensitive artist he was. That side of him would return once they were finished. He was still the man she married, of course. But now, when lust took over, he would embrace it.\n\nHe couldn't help it though. Tess's body was slowly getting more and more mouth-watering. Not only had her ass filled out and grown more shapely and juicy, her legs got more firm and lithe. Her belly had gotten fit and taut. Her skin seemed smoother. Her tan was better. Her brunette hair was longer and shinier.\n\nAnd then there were her boobs...\n\nAt first, her boobs getting bigger appeared to be a symptom of slimming down a bit. So, the initial jump in size seemed to be perfectly explainable.\n\nBut then they kept growing.\n\nSomehow, someway, they just kept getting bigger. She had started with small B-cups, and within a few weeks, she had large C-cups, slowly verging on D's.\n\nObviously, this was pretty awesome. For the first time, Tess had genuine cleavage, and she took every opportunity to show it off. Her husband certainly enjoyed it, unable to pull his eyes away from her boobs whenever she wore something low cut. He had never expressed any special interest in boobs, but as soon as she sprouted a nice pair, he could not stop staring. Tess loved driving her husband crazy like this.",
        "When they had sex, he couldn't take his hands off of them. Feeling them. Squeezing them. Playing with her nipples, with both his fingers and his mouth. He loved them.\n\nBut as great as this was, as fun as this was, Tess started to ask a few questions.\n\nWhy was this happening? Was this some delayed growth spurt? No... it couldn't be, could it? There was nothing to explain what was happening to her. She thought about going to the hospital and getting checked out, but nothing really felt wrong. And she knew she wasn't pregnant, so she had run out of options. It was just unexplainable. It couldn't go back to that weird illness, right? No... impossible. Sure, she still had those dreams. And sure, her mind got a little rapid sometimes. And yeah, when she got carried away in sex, she seemed to spout language she didn't even know. \n\nBut nothing was wrong with her... right?\n\n*************\n\n\"Fuck me! FUCK ME! FUCK ME!\" Tess snarled. Lost in pleasure, AJ was on top of her, face tucked into the crook of her shoulder, eyes closed in bliss. His hips drove down into her, filling her with his girthy weapon at a far more lusty pace than they ever had previously. But this newfound lust and need inside her brought it out in him. Her arms were wrapped around him, hands rubbing his back as her legs clutched him tight. Her slightly larger breasts were pressed against his chest, jiggling slightly as they fucked.\n\nIt was the best sex of their lives, more passionate and lustful than ever. This wasn't making love, like they had always done before. No, this was verging on hard fucking! They were not quite there yet, but with the way her desires were going, they would get there soon. And if it felt as good as this, she couldn't wait.\n\nShe had never really craved this kind of intense sex before, but ever since she moved into this house, it was all she could think about. And with her improving body, and the desire it inspired in AJ, this kind of sex became more and more fun.\n\nMinutes later, when the deed was done, after AJ had spilled his seed inside her once again, Tess curled up to her husband, both still naked, her head on his chest. This moment couldn't be more perfect. It was everything she could ever ask for and more. Nothing could compare to this one beautiful moment.\n\nTess fell asleep like this, basking in bliss. She couldn't be happier.\n\n**************\n\nTess woke up with a dick in her mouth.\n\nGroggy from sleep, she was completely disoriented as she regained consciousness. As she regained her bearings, she realized she was bobbing up and down on AJ's engorged morning wood.\n\n\"Tess, you're insane...\" he moaned out, his voice gravelly, having just woken up himself. His hand rested lightly on top of his wife's head as she hungrily swallowed his swollen pole. Up and down, over and over again.\n\nHe wasn't forcing her into this. She was doing this to him. But she didn't do it upon waking up. No, when she woke up, she was already doing it. Was she doing it in her sleep somehow? She had never sucked him like this. She had never taken so much of his cock down her throat. Yet, in some way, she was taking his thick penis into her small throat without any problem. And it was only now, as she thought about it, that she felt the discomfort of having something so large jammed down her throat, so she moved to lift her mouth from his pulsing dick.\n\nBut she couldn't.\n\nNo, her mouth kept bobbing on her husband's aching pole, going up and down hungrily. What the hell? She tried again, but her body disobeyed her, continuing on in pleasuring her husband. Her eyes looked up at her husband's face as he smiled in pleasure. Her eyes twinkled in mischief as she kept sucking her husband off. \n\nWhat was going on??\n\nHer body kept going on with this heated blowjob, making her husband squirm in delight. Her eager mouth was taking his pole easily, lips wrapped around his girth, her tongue against the underside of his shaft. Her fingers massaged his nuts lightly, putting on just the right amount of pressure. He was loving what his wife was doing to him.\n\nBut it wasn't her.\n\nTess wasn't in control of her actions. She couldn't stop herself from sucking his dick. She couldn't move her hands, or her legs, or her eyes, or anything. Some other force was at play here, moving her limbs. Moving her body, controlling it like a puppet. \n\nAs Tess looked out her own eyes, she realized that she felt set back slightly, a distance away from her own gaze, as if looking out a window and seeing the frame around it. \n\n'What's going on?!' she screamed out, but the words never left her mouth. They bounced around the inside of her head, echoing there, descending into nothingness.\n\nBut someone replied.\n\n'Hello, there...' a crisp, calm female voice replied, in her own head.\n\n'What the... who are you?' Tess called out. \n\n'I think you know who I am...' the voice replied calmly, with an almost condescending lilt. Tess tried to place the voice, and it did sound familiar. But... from where? \n\nWait... the dream!\n\n'You... you're from the dream! That voice... the weird, like... language and enchantments...' Tess stated.\n\n'Hahaha... very good,' the voice stated. She then recited some of those same, familiar enchantments, like an echo from that nightmare, in that crazy unrecognizable language. For a second, there was silence between them, as Tess's mouth continued sucking her husband's dick.\n\n'What is this?' Tess asked. 'Is this a dream?'\n\n'Hahaha, no honey, this is no dream. This is all real. This is everything I've been working towards,' the voice said. Sensing the woman's confusion, the voice continued. 'So na\u00efve... you're given all these sudden gifts, and you don't really question them? You lose that belly fat, get nice and fit. Your ass is suddenly round and full and perfect. You suddenly have real tits. You get all of this with no explanation, and use them to your great advantage, and you don't ever wonder what's going on? You never stop and consider the consequences... that something else is going on here...'\n\n'What is going on here?' Tess asked.\n\n'I'll give you a hint... think back... think back to when something changed... when something happened to you... when something could have got inside you...' the voice teased. Tess paused. What was she talking about?\n\nAs she thought this over, voices hit her ears.\n\n\"Oh my God! Yes!\" AJ moaned.\n\n\"You like how I suck your dick?\" Tess's voice said, pulling her mouth from his cock. But this wasn't Tess talking. It was this thing inside her.\n\nBut what could she be? She thought back... the inciting incident to all this was the sickness. It was only after that that she had all these physical and mental changes. But what could have caused that? The only thing that happened before that was when she cut her finger on... wait... the mirror!\n\n'You... I knew it! You were in the mirror! You were that thing in that mirror!' Tess said excitedly.\n\n'Very good!' the voice said, still mockingly condescending.\n\n'Then what are you?' Tess asked. 'A ghost?'\n\n'No... not exactly,' the voice said.\n\n'A... demon?' Tess asked. \n\n'Close... but, I don't exactly play by their rules...' the voice stated.\n\n'A... I don't know... a witch?' Tess asked.\n\n'Well... let's just say I'm a little bit of everything,' the voice replied. 'As you've probably surmised from that dream, I've been around for a long, long time. I lived, I died, I rose, and I did it all again. And again. And again. And again. And to do that, I had to bend a few rules, and the folks down there don't like that. There's an order to Hell, surprisingly enough, and they don't like me breaking the rules. But I don't like following the rules. So... I found a little loophole. And instead of rising fully formed, I put my spirit into a very impressive ornate mirror. All I had to do was wait until the right people came along, and have some sorry na\u00efve fool get too close...'\n\n'I... I... I...' Tess stammered. She was still avidly sucking her husband's dick, at least her mouth was, but her spirit inside was beyond confused. 'What do you want from me?'\n\n'The loophole I found kept my spirit alive, but it left me without a body,' the voice said. 'So that's what I want... a body. Your body. Even though it was quite unimpressive on first sight... I think I can fill it out just fine.'\n\n'What?' Tess asked, still confused.\n\n'Oh, you poor girl... how do you not understand? I'm stealing your body, and making it my own. Haven't you seen how having me inside you has affected you? It's changed you, honey. Put curves where there were none before, curves that are not yours, but mine. That's my butt that drove your husband crazy. Those are my tits that your husband was gawking at. It's my slutty cunt that he can't get enough of. This body will only get better and better the longer I stay in here, and your husband will only fall further under my spell,' the voice said with lusty excitement.\n\n'Your spell?' Tess questioned.\n\n'I was weak when I first entered you. If you had been strong... and smart... you could have fought me off. But you... you got greedy. What gives me life... what gives me strength... is sex. Hot, sweaty, filthy sex!' the voice stated, voice dripping with lust. 'I love sex! I love having sex! I like seducing men to have sex with me! It's my favorite thing in the whole wide universe, and not even death itself can stop me from feeding my hunger. And my appetite... it affected you. I changed your body to better reflect my own. My lust... it became yours. You couldn't stop yourself. You pulled your husband down with you in your hunger, and every time you two fucked, it made me stronger. As you two got nastier and nastier, my strength grew. I exerted my influence on you when I could, small flashes of control, guiding you along, coercing you two into bed. And after last night, I was strong enough to take over. To take complete control of you as the sex gets dirtier and dirtier. It's time for a real woman to take over and show your husband the good stuff. Stuff you don't know about. Me and him will keep going, and get nastier and nastier, and my control will become complete. This body will truly be mine, and mine alone.'\n\n'And what would happen to me?' Tess asked, fear entering her voice. There was a long pause.\n\n'I lived a very limited existence for a very long time waiting for someone like you and him to show up,' the voice said. 'It was a hell I wouldn't wish on anyone. So quiet... so alone. Nothingness. So if my plan works, then, well... I'll be living your existence, taking over your life... and you... you'll be living mine,' the voice warned.\n\nA dull silence hung between them. Tess couldn't fully contemplate her vague warning. She couldn't make heads or tails of any of this. But it sounded really, really bad. Like, her life as she knew it being altered severely. How could this be real? How could this be really happening?\n\n'But...' the voice stated. 'You're not without hope. Your husband's a smart man. Handsome too. And that cock of his... mmm, mmm... yummy. But my point is... it's your husband that gives me strength. Every time we fuck, every bit I corrupt him, and turn him into a fucking animal... I get stronger. But if he sees the changes inside you, if he sees me for what I truly am... my strength will weaken. And you'll regain control. I'll get pushed farther and farther down, till I'm back in that fucking mirror again. Your husband... he's your only hope. If your bond is strong enough, if his spirit is true... you will be back in full control shortly. But if he doesn't... if he falls completely under my spell... then, well... you lose.'\n\nTess was strengthened by this. AJ was her true love. Her soulmate. He would sense something was off. He would figure it out. He would be her hero.\n\n\"Oh fuck, I'm gonna cum in your mouth!\" AJ growled, holding her head down just as his cock jolted and jet after jet of thick cum burst into her gasping mouth. But her mouth, well... the thing controlling her mouth, eagerly gulped down mouthfuls of cum as his swollen nuts emptied themselves inside her waiting maw. He was in pure bliss, and in that instant Tess's heart sank slightly seeing her husband momentarily lost in pleasure. And for a moment, she wondered if she was wrong. If this thing had a chance of drawing AJ into her web fully.\n\nWhen AJ was done, Tess's gaze met his as she licked her lips and said, \"Yummy!\" He smiled in response to this, a crooked smile of impressed lust and attraction towards his wife. \n\nTess's body marched out of bed, padding nude towards the bathroom, giving her husband a show as she marched her naked body in front of him proudly. \n\nTess, inside her own head, couldn't see the being controlling her own body. But if she could, Tess would bet that bitch was smiling.\n\n**************\n\nLuckily for Tess, AJ wasn't blind to the changes in her.\n\nAt first, it was great. Like... what husband wouldn't enjoy having his wife suddenly get, like, three times hotter? What husband wouldn't enjoy having his wife suddenly get insatiable in bed? It should be awesome, right?\n\nBut something seemed off. At first, all these physical changes could be attributed to exercise and diet. She started out slim already, but her working out made any excess weight melt off, leaving her body lithe and fit and toned. And, as this happened, her butt really began to really fill out, standing out from her slim body, gaining a juicy, round shape. Her butt was once flat and shapeless, now it jutted out, proud and firm, popping up and out in any outfit she wore. It looked great clothed, and even better bare. Each round cheek was suddenly perfectly smooth and immaculately round and dense, arresting his gaze every time she walked away from him. Her ass crack became well defined as her ass filled out into heart-shaped perfection.\n\nAJ would find himself gawking at his wife's improved butt with awe. Like, seriously, mere weeks prior, her butt was small and flat and cute, barely a handful. Now... her ass was fucking mouth-watering, enough to make any man drool. \n\nHer exercise routine was really working for her. Her legs seemed more firm and toned. Her belly gained some sexy flatness as her abdominals started to become ever so delicately defined. And, seemingly due to this slight loss of weight, her boobs got slightly bigger.\n\nShe had never exactly been busty, and AJ was never the type of guy to need such a thing from a girl he liked. He liked her no matter how she looked. He always enjoyed her delicate, subtle femininity. Her cute, small ass. Her small, gentle breasts. To him, she was always a flower that needed to be handled gently. And he loved that about her. But now, that gentleness was going away, replaced by taut firmness and softness. Whereas before, her body let you know you had to handle her tenderly, now, it was seemingly inviting itself to be handled roughly.\n\nSo as her body toned up, her boobs appeared to get larger. As if that small amount of extra weight went straight to her chest. They appeared to almost double in size, making them eye-catching to the young husband. Obviously, he knew her body well, so it didn't take long for him to notice the difference. And as with her ass, the change wasn't severe enough to raise any eyebrows.\n\nAt least at first.\n\nFor a while, this increase of cup size made enough sense to him to not ask many questions. The logic of her losing weight making her boobs look bigger made sense.\n\nBut they kept getting bigger.\n\nThey started out as small B-cups, and losing weight made them go up to a C-cup. But they just kept getting bigger, standing out from her chest even more. Getting rounder, and fuller, and bouncier. Expanding in size it seemed, going from C-cup to a full D-cup. They went from small and cute, to surprisingly big, to legitimately large.\n\nThis caught AJ's attention.\n\nObviously, he had a certain, raw, physical reaction to his wife's suddenly noticeable rack. And it had become a true rack. Large and round and smooth and perky, standing proud on her slim chest. They jutted out against her tops and AJ couldn't help but react to her boobs when they became exposed to him. He couldn't help touching them. Feeling them. Squeezing them between his fingers. Like... what guy wouldn't enjoy boobs like those? He liked them, and she liked having him touch her like this, but... something about them was wrong.\n\nLike, her breasts appearing slightly bigger was fine, but this was beyond that. They were legit expanding in size. And sure, his wife having bigger boobs was great, but how was this happening? This wasn't how boobs worked. Something was off here, and he didn't know how to explain it.\n\nAnd although her ever expanding cup size was the tipping point, what really worried him was the change in behavior in her. She was like a different person. Now, he still recognized most of her, but this new side of her, this sexually insatiable side, while fun, was completely opposite to the Tess he knew. She had her sexual side, but she was very laid back and loving, certainly a bit submissive. Now... she was aggressive. She craved sex. She needed constant loving attention. And again, it was very fun, but this wasn't really her. This side of her was unrecognizable. He wasn't used to being thrown down and ridden like an animal, but that's what was happening lately. She was all over him. And as big of an appetite as a virile young man in his 20's like him had, she was wearing him out. \n\nAll he could think about was that strange sudden sickness Tess had a few weeks prior. It was out of nowhere, and severe, but it went through her fast. No real explanation as to what it was, and how she got it. And ever since then, she had been different. She had all these physical and behavioral changes just after being sick, and that couldn't just be a coincidence... right? Maybe whatever she caught messed up something inside her, messed with her brain chemistry, sending hormones flowing through her body, changing her body and inflaming her desires.\n\nIt made logical sense to him, but he was afraid to bring it up to Tess for a couple reasons. First, he didn't want to offend her by talking about how different she was acting lately. And he didn't want to offend her by how concerned he was by all her sudden physical changes, as if insulting her for working out and staying fit. He had to approach her just right and not make her freak out.\n\n\"You doing okay, honey?\" AJ asked as he washed some dishes after dinner.\n\n\"Yeah,\" she stated, as she walked past him packing the leftovers away. She had started buying new clothes to highlight her improved figure: tighter, slimmer jeans and snug, body-hugging tops. Her butt looked perfect in the tight pants, and the full, round shape of her now large breasts was only further showcased. \"Why?\"\n\n\"Well, uh... I don't know, you've, uh...\" he stammered, looking for the right words. \"You've been a bit different lately.\"\n\n\"Like how?\" she asked, turning to face him, shutting the fridge door. Her top was slightly low cut, showing off a good amount of cleavage. He couldn't stop himself from glancing down, an act that made her smile.\n\n\"It's just... you've been kinda all over me lately.\" he admitted coyly. She smiled.\n\n\"You don't like it?\" she asked with a raised eyebrow. God, she even looked prettier now. Her skin, despite the recent overcast weather, was glowing with a healthy tan. Her eyes looked sharper, her lips softer, and her delicate features were now undeniably stunning. Even her hair looked longer, shinier, and smoother, plus a hue darker than her normal chestnut tresses.\n\n\"No... no... I like it, but... it's different than what we've always done before. Like... what's changed?\" Tess gave him a quizzical look before approaching him.\n\n\"I'll tell you what changed,\" she began, stepping in close and wrapping her arms around his back. She looked up at him and smiled warmly. \"We got married. We ran off together, just you and me. You're the only man that's ever stuck his neck out for me. And I love you for it. And I want to reward you for it... every moment of every day.\" AJ smiled in embarrassment at having questioned his wife. She stepped in close, pushing her soft breasts into his chest and leaned up to kiss him, a gesture which he returned. ",
        "\"I'm sorry,\" he stated. \"You've just... you've just been so insatiable lately.\"\n\n\"Hon... I've always felt like this,\" she admitted. \"I just... I just didn't want to scare you off. Now that we're married... I feel like I can be open with you about what I want... what I need. Is that a problem?\" she asked, holding his gaze, staring him down with a smile on her face. Blushing slightly, he smiled.\n\n\"No... not a problem,\" he stated as he leaned down to kiss her again. The kiss quickly got deeper as she slid her tongue into his mouth. \n\nFive minutes later, AJ was railing Tess on the kitchen counter, driving up into her roughly as her hot bare ass rested on the hard surface. AJ's pants and boxers were stretched between his knees as he pumped his large cock inside his wife's pussy. His shirt had been pulled apart, and hers had been pulled up to her neck, allowing him to slide his face against her large, naked breasts. She clutched him into her tits as he stretched her pussy with his pulsing cock. She was moaning out obscenities as his mouth attacked her breasts.\n\n\"Yes! YES! Fuck me! FUCK ME!\" she moaned out loudly. She pulled her husband up from her saliva coated tits, looking at his slightly mussed features. \"Please, baby! Call me a slut!\"\n\n\"What?\" he asked, confusion breaking through the haze of pleasure.\n\n\"Please! Call me a slut! I need to hear you say it so bad!\" she begged, seething with pleasure. She never really talked like this before, so he was taken aback, but with his judgment clouded by her grasping pussy, he couldn't deny her wish.\n\n\"You're... you're a slut!\" he said, the words like fire on his tongue. \n\n\"YYYEEESSSS!\" she squealed loudly, leaning back, arms around his neck, as she screamed out to the heavens, her pussy squeezing around him. He felt uncomfortable saying words like this, especially to his wife, but she clearly seemed to enjoy it.\n\n\"Yes, fuck! You're a slut!\" he repeated, driving up into her a little harder as the pace picked up.\n\n\"Am I your slut? Please! I want it so bad! Please tell me I'm your dirty little slut!\" she begged, her pussy quivering with need.\n\n\"Ughh! Fuck... you're a slut! You're my dirty fucking slut!\" he said, his eyes momentarily flashing with excitement.\n\n\"UGH! GGGGGODDDDDDD!\" she moaned out loudly. His hands rested against her sides, but as she jerked with pleasure, he couldn't stop himself from squeezing her bouncing tits, feeling their perfect softness in his fingers. Seeing she enjoyed his dirty talk, he kept at it.\n\n\"You're my fucking nasty whore!\" he added.\n\n\"YES!\" she screamed.\n\n\"Fucking tramp!\"\n\n\"FUCK!\"\n\n\"My nasty, filthy, amazing slut!\"\n\n\"YES! YES! YES! OH GOD! YES!\" Tess screamed. \"I'M CUMMING! YYYEEEEESSSSSSSSSSS!\" she squealed, her pussy squeezing around his cock as a huge orgasm hit her. And it was enough to set him off.\n\n\"UGGHHH! GUHHHHH! FFFUUUUCCCCKKKKKK!\" he groaned, his prick exploding jet after jet of thick cum deep inside her again. For minutes, they jerked and flexed as they came against each other, until they finally came back to Earth.\n\nAs his wife leapt off the counter, AJ stepped back. He felt odd. Almost, slightly... used. Like... he had come to this ready to confront her about how different she was acting, and like, minutes later, they were fucking on the kitchen counter. And she was spurring him into saying things he didn't feel totally comfortable saying. He felt dirty in a way he wasn't totally cool with.\n\nBut clearly, Tess was unbothered. Picking up her discarded pants and underwear, she looked back at him with a teasing smirk as she sauntered out of the kitchen.\n\nThis was kind of how things went for a bit. Like, that very night, he didn't sleep much, uncomfortable with how things had gone. He kept going over it in his mind. He suspected something was wrong with her, and she seduced him until he stopped asking questions. \n\nIn the morning, he steeled himself up again, ready to speak out and get to the bottom of what was going on. Tess curled up next to him, pushing her large breasts into his side. As she did, the sheet slid down, exposing a large smooth breast to his gaze. And as always, he couldn't help but gaze, a fact she noticed.\n\n\"You can't stop staring at them...\" she remarked, looking up at him with a warm, loving smile.\n\n\"They're... they're just so big!\" he remarked, sounding awed, but he had a point to this. \"Like, um... like seriously, how are they THAT big? This can't be just from you working out. Right?\"\n\n\"Well...\" she began, again studying his face. \"This, uh... this trainer at the gym gave me some supplement. Supposed to help with, uh... stamina, when I work out. One of the side effects is apparently breast enlargement.\"\n\n\"Oh yeah?\" he said, unable to hide his skepticism.\n\n\"Yeah! Why do you ask? Are you complaining?\" She said with a laugh. \"Are you gonna be the first man to ever complain about his wife's breasts being too big?\"\n\n\"No, it's just... a big... sudden change,\" he stated.\n\n\"You like them...\" she stated with a smirk, sliding them against him deliberately. He stared at them, and the way the soft, smooth flesh oozed against his fit chest.\n\n\"Uh... yeah, I guess...\" he said.\n\n\"So why all the questions lately?\" she asked, smiling wickedly as she slid her hand under the sheet, grasping his morning wood.\n\n\"I... uh, uh...\" he said, jerking slightly as his wife began stroking his swollen prick. \"I, uh... just, concerned about you... ugh... fuck... just making sure you're okay. Fuck!\" \n\n\"Never better!\" she said with a laugh, jerking his cock faster as he got fully hard. \"I love my new body, baby! I love it so much! And I'm glad you like it too. I know it's so much sexier than it was before... right? I appreciate your concern, but... would it make you feel better if you came all over my tits, honey?\" she asked with a wicked smirk.\n\n\"OH FUCK!\" AJ groaned, his hips leaping off of the bed in excitement, despite himself. He looked down at his wife, his response all the answer she needed.\n\nMoments later, the bed sheets were cast aside as Tess furiously stroked his tumescent, saliva-soaked pole. Any concerns he had, any questions he had, they were all cast aside again, dying on his lips as his head fell back in pleasure. And sure enough, not soon after, at her gentle, loving urging, his cock exploded, firing off thick geysers of cum all over her smooth, soft, succulent tits, again and again. As he came down from his high, his lidded eyes glanced up at her, smiling down at him with her D-cups coated with his creamy sperm.\n\nAnd in that moment, all his concerns were forgotten.\n\n*************\n\n'You see, Tess?' the Bitch said smugly to her hostage. Tess didn't know what fucking being was in control of her, or what her name was, so she had just started referring to her as 'The Bitch'.\n\n'Fuck off!' Tess said, frustrated. For days on end, it had been like this. It was torturous. She had no control of her body. Nothing. She could still feel things, but in a removed, distant manner. She was trapped inside herself, and there was nothing she could do about it at the moment. And, on top of that, she had to deal with this smug bitch possessing her body at every moment, doing all this nasty stuff with her husband and rubbing it in her face.\n\n'Oh, don't feel bad,' the Bitch stated. 'You really can't blame him. All my best features are shining through, and he loves them.'\n\n'No! He loves me!' Tess affirmed.\n\n'I think all that fucking cum all over my tits tells me otherwise,' the Bitch affirmed. Tess stewed for a while before the evil bitch spoke up again.\n\n'Have you ever heard of the parable of the sock?' the Bitch asked, and Tess's silence was her answer. 'A man has his favorite sock, but he gets a hole in it, so he patches it up. Then he gets another hole, and he patches that up. And soon enough, the entire sock is just patches. All the original material is gone. So... you have to ask yourself... is it still the same sock? If it's not, when did it stop being the original sock?' Tess was still silent as 'The Bitch' explained this. 'This is something you should be thinking about, dear...'\n\n'I don't care! I don't care about you! I don't care about a fucking sock! I care about AJ! And he cares about me! And he's catching on! He's noticed that I'm different!' Tess replied.\n\n'True... but it won't matter. He likes my body too much to care about such trivial things. When he starts asking questions, all I have to do is shake my ass, or show off my big tits, and he crumbles. A bit more of this, and he'll stop asking questions. He'll be mine for good!' the Bitch announced.\n\n'No! He's stronger than that! He'll stop you! I swear it!' Tess stated.\n\n'We'll see, hahaha...\" the Bitch laughed. \n\n***************\n\nAJ enjoyed the hot sex with Tess. Every time. But... it almost seemed like she was using that against him. Using her appeal to get him to stop him from asking any questions. But he still had all these questions. What had spurred these changes in her? How had she changed so much in such a short time?\n\nAnd these changes... they weren't stopping.\n\nHer ass got even more pronounced and more juicy and sexy, every passing day. Despite himself, he could not stop staring at it. And, unbelievably, every day, it still seemed like her breasts were getting bigger and bigger! Like, he had checked out one of her bras, and they had already moved past DD's. They were fucking EE-cups now! What was going on?\n\nOn top of all that, it seemed like every day, she was going out shopping, buying new clothes, clothes that hugged her voluptuous features. Tighter pants. Shorter skirts. Low cut, figure hugging tops. Tiny, sexy underwear. A far cry from the tomboy she used to be. Not only the girl she was when they first met, but like, who she was mere weeks prior. \n\nAt times, it almost felt like she was a different person. Part of him considered that she was, like, reinventing herself, now that she was living away from home, but this seemed deeper than that. There were times where AJ would bring up stuff from the past, moments they had shared, and it almost seemed like she didn't remember any of it, saying 'yeah' or 'uh-huh' and then just changing the subject quickly. It was like she had forgotten all of it, all those great times they had had together.\n\nSomething was seriously off with her.\n\nHe searched online for any answers, searching her symptoms, but he found nothing that would cause these changes in his wife. Once his search results reached the point where he was scrolling past silly porn stories and people going on and on about demonic possession, he rolled his eyes and ended his search. \n\nBut he did confirm one thing. There was no supplement known to man that would cause the insane expansion of her formerly small breasts. Nothing even close to that. Tess was lying to him, and he knew it. \n\nIt was time to finally confront her. It was time to have it out and get some answers. It was time to get to the bottom of this.\n\nA few hours passed before she returned home, late in the afternoon. Looking up at her, he realized that, at this point, he barely recognized her. Wearing skin-tight, fashionably faded jeans, her feet in high-heeled sandals, she strutted into the room, heels clicking on the wood floor. On top, she wore a thin red top, hugging her upper half, leaving most of her arms and her midriff exposed. Her uncovered, tanned skin was glowing and smooth. And her breasts... man, her breasts... they looked absolutely huge in this tight top. Just enormous, jiggling with every step she made. \n\nAJ was about to speak up to her when she bent over to set her bag down, and as she did, her top pulled up along her back revealing the hot pink g-string threaded between her ass cheeks, the straps rising above her jeans, forming a shockingly explicit whale-tail. Needless to say, this was a far cry from the more practical underwear she used to wear. For a moment, his words died on his lips, but that lasted for just a moment. He could do this.\n\n\"Can we talk?\" he began, trying to stay strong.\n\n\"Uh, yeah, of course,\" she said, standing up straight, turning to face him. As she did, she tugged down her top, smoothing it across her tits, which were seemingly vaulting off her chest. The top was so thin he could see the lace from her matching, hot pink bra beneath her top. \"What's up?\"\n\n\"Uhh... I was looking up things online, about, um...\" he paused, before nodding towards her chest. She looked at him oddly, curious at where this was going. \"What was the, uh, supplement that, uh, caused... that?\"\n\nTess's eyes narrowed at him for a moment, not replying.\n\n***************\n\n'Ha! You see bitch!?' Tess called out to 'The Bitch' in her own head. 'He's onto you! It's over!'\n\n'Very well,' the Bitch said angrily. 'But don't worry... I have a plan. It's time to take this to the next level.'\n\nTess was brimming with excitement. This was it. This was her husband coming to rescue her. She was so happy. But, strangely enough, despite how positive she felt, the windows in her head, the ones she was looking out through, they felt like they were getting slightly smaller, as if she was getting farther away from her goal of escape.\n\nNo... no. She'd be fine. AJ was gonna save her.\n\n***************\n\n\"Why do you keep asking all these questions?\" Tess said to AJ, unable to hide her displeasure, making AJ squirm. \"Why do you keep trying to ruin a good thing?\"\n\n\"Tess...\" AJ began, standing strong. \"Something's off with you. I... barely recognize you anymore. Something's going on with you, and I think you know what it is, and I feel like you're trying to hide it from me!\" \n\nTess put her hands on her hips, her eyes appraising him. Finally, coming to a decision, she turned around, moving to walk out of the room.\n\n\"Come with me...\" she called back to him, and he complied, unsure where this was going. Despite himself, he couldn't stop staring at his wife's ass, round and full and juicy, bouncing side to side as she walked, the tight denim clinging to her delightful rear. A surge went through his cock, despite his concern for his wife. Tess led him into the bathroom, and she reached down and grabbed the small garbage bin there, sifting through the trash, looking for something.\n\n\"I don't know why you can't just enjoy this...\" Tess said, angrily, still searching for something. \"Any other man would kill to be as lucky as you are. You have a wife with a perfect ass, and huge tits, who can't get enough hot nasty sex, and you can't stop bitching about it.\"\n\n\"Because this isn't who I married,\" he replied. \"Ever since we moved in here, you've changed. You behave differently. You look different. I don't know if you feel like you need to do this to keep me happy, but you don't. I was happy before. I don't need all this! I just want you... the real you!\"\n\nInside her, the real Tess was glowing, already beginning to feel stronger as her husband fought for her. But 'The Bitch' wasn't done just yet. Finding what she was looking for, she grabbed it and turned to face AJ.\n\n\"I just think you're afraid to admit the truth,\" she stated, fingers toying with the item in her hand. \"You just don't want to look bad. You don't want to admit that you love the new me way more than the old me! That you love my hot ass and big tits more than you ever loved the old me. And I can prove it!\" \n\nTess then held out an empty pill container towards her AJ. Studying it, confused, his eyes opened wide.\n\nHer birth control pills.\n\n\"What is this?\" he called out, baffled. \n\n\"I know what will solve all our problems,\" she stated, still dropping the pills into the water. \"I made the decision a few weeks ago, and I wanted it to be a surprise, but I figure I should just bring it up now. I think it's time for us to take our relationship to the next level. It's time for us to have a baby!\"\n\n\"What?\" AJ called out, stunned.\n\n'What!?' Tess called out to 'The Bitch' inside her own head.\n\n'Oh, I've been planning this for a while,' the Bitch said. 'I timed it out perfectly. Today's the big day!'\n\nWhat? How had she not caught on to this? Sometimes, being in this position, she kinda zoned out, but still. She should have noticed something.\n\n'You can't be serious.' Tess muttered.\n\n\"You can't be serious,\" AJ said. \"We... we've talked about this. We've not even close to being ready for that.\"\n\n.\"I know, but... so much has changed since then,\" she said.\n\n\"We talked about it, like, two months ago!\" AJ called out.\n\n\"I know, but, like I said, things have changed,\" she said, bringing her arms together, making her huge boobs bulge outward, the smooth, luscious flesh trying to escape her tight top. \"With the amount of sex we've been having lately, I figure we should make it count.\"\n\n\"I... This is crazy, Tess!\" AJ called out. What was going on here? Although, thinking back, this did explain something. A few weeks back, he had stumbled on her in the bathroom, with the door open, whistling to herself while dropping some pills into the toilet. Were these those pills? Her birth control pills? They had to be. \n\nGrabbing the empty container out of his hands, she tossed the container in the garbage and began stalking towards him.\n\n\"You can't deny it, babe,\" she purred, her voice dripping with bad intentions. \"You might be confused, you might not recognize the new me, but you can't deny that you've been LOVING the sex we've been having.\" As she said approached him, she reached down to undo her pants, pulling apart the button and lowering the zipper. \n\n\"I... I... I... wait,\" he stammered, backing up, but she kept coming, her big luscious tits jiggling with every step. As the back of his legs hit his bed, she stopped a few feet in front of him, pulling the front of her pants apart, revealing a hint of that hot, pink lace.\n\n\"This is the real me,\" she purred, lowering her pants down to her thighs, fully showcasing the small, lacy, hot pink underwear she was wearing. It was scooped low, barely covering her nether regions, and the thin lace allowed him to see her thin little landing strip. Whereas before, the old Tess preferred to let things be more natural, the new Tess took care of things down there. Admittedly, in this sense, even though he would never admit it to her, he preferred the new Tess. Stepping out of her high heels and tight jeans, she spoke up again. \"I've always been this way. Now... it's just coming to the surface.\"\n\nShe spun around to show off the back, showcasing the tiny pink g-string bisecting her ass. The tiny string disappeared between the full cheeks, and the tiny garment showed off her round, full, juicy, shelf-like ass, each cheek jutting out, arresting his gaze again.\n\n\"You see?\" she said with a raised eyebrow. \"You love my ass! You can't stop staring at it! Every day, I feel you staring holes into my ass! I think you're obsessed with it!\"\n\n\"I... wha,\" AJ stammered, unable to pull his eyes from her butt. His legs felt like jelly... he couldn't move away.\n\n\"But not as obsessed as you are with my big tits!\" she announced, turning to face him, her boobs bouncing in their tight constraints. With his eyes widening, she grabbed the bottom of her top and lifted it up, revealing the full expanse of her taut belly, before finally, with a firm tug, she pulled her tight red top over her tits, lifting it up and off, tossing it aside. \n\nShe now stood in front of him in only her underwear. The hot pink lace really popped when contrasted with her golden tanned skin. Standing here like this, AJ couldn't stop gazing at her. Her tits looked absolutely massive! Bigger than he had ever seen. Mere weeks ago, they were little cute boobies, and now, they were massive fucking tits! They were perfectly round and mouth-wateringly soft, the skin smooth and perfect. Her round melons had filled out to an immense size, forming a natural cavern of cleavage between them. And they were so damn perky that they rippled and bounced with every small move she made. They were perfect.",
        "The tight pink bra looked very new, but even so, her smooth sexy boobs were pouring over the edges, barely contained. The lace kept them in place while also showcasing pretty much everything, her rigid, pulsing nipples clearly visible through the material.\n\n\"You see?\" she purred, stepping up to him. \"You love my new body... and you love me... right?\" Still taken aback, all he could do was nod in agreement. Smiling at this, she leaned forward and gave him a soft peck on the lips. \"Then why are you getting so upset? Why can't you just enjoy this?\" He panted a few times before answering.\n\n\"I... I just want to know you're okay,\" he stated, ever the good husband. \"I just want to know what's going on with you.\" She looked at him, her expression curious, before smiling.\n\n\"You have all these questions,\" she began. \"And I promise I'll answer them, but first... I need to get fucked, and so do you, and this is a conversation that needs to happen with a clear head.\" She reached forward, grabbing his straining prick through his pants.\n\n\"Wait... stop...\" he panted as his wife squeezed his aching bulge. \"You always do this... every time I ask questions, we just end up fucking.\"\n\n\"I promise...\" she assured him, and her ministrations on his eager cock was clouding his judgment. Eliminating any fight. Nodding ever so slightly, he allowed her to pull him again, sliding her eager tongue into his mouth.\n\nHusband and wife began making out deeply again.\n\n*************\n\n'You were saying?' the Bitch called out mockingly to her captive.\n\nTess's happiness was tempered as she watched her husband again fall back into this bitch's web. She could still feel her husband pressed against her front, his straining cock pressed into her tummy. He was very excited. And she understood that. Her appeal was obvious, and her husband couldn't stop himself. If he knew what was happening, if he knew where those huge tits and that perfect ass came from, he would of course stop. But since he didn't fully understand what had happened to his wife, that there was something inside her, taking her over, he didn't know what he was dealing with. He just thought his wife had gotten super hot and super slutty, so he took advantage. He didn't know the danger he was in, and didn't know how much trouble Tess was in. She wanted to warn him, but she was still removed from the action, still trapped within herself, watching from afar as this bitch still controlled her body. It was insanely frustrating.\n\n'No... he's still strong. He still knows something's wrong.' Tess asserted, her voice a little less assured than it was before.\n\n'True,' the Bitch said, her voice sounding firm and confident. 'That's why I'll have to break him.'\n\nA cold chill went through Tess.\n\n************\n\nA warm jolt of pleasure went through AJ as he and his wife fell back to the bed, her on top, assaulting him with soft kisses. Her eager cunt ground against him through their clothes as they kissed fiercely. She pulled his shirt up and off, tossing it aside as she pulled her lips from him, sitting on top of him, smirking. \n\n\"I got this new slutty bra, just for you,\" she said, smiling, reaching back to undo it. \"But it looks better on the floor, doesn't it?\" With a flourish, she pulled her bra off and tossed it away, revealing her massive tits to her husband.\n\nEvery time he saw them, they got bigger, and this time they really took the cake. They looked absolutely enormous on her chest, like fucking watermelons. Jiggling perfectly. Bouncing lusciously. His mouth watered staring at them. They had the same smooth, golden tan as the rest of her, and her round pink areolas arrested his vision, her stiff, aching nipples calling to him.\n\n\"These are fucking 36EE cups, baby!\" she boasted, cupping her giant breasts in her palms, squeezing them greedily. She then grabbed his wrists and brought them up to her, forcing his hands to squeeze them.\n\n\"Oh my God!\" he moaned out, embracing her jugs between his fingers. Despite everything, despite his concerns for his wife, he couldn't get over how fucking soft her big tits were. Jesus, they felt so fucking good. He squeezed them again, over and over, not getting enough of their softness. Where before, he could barely get a grip on her boobs, now... they overfilled his palms. It was incredible.\n\n\"Here, baby, suck them... suck my big tits!\" Tess urged him, before leaning down, smothering her husband's face in her big, soft breasts. Scrubbing his face into her tits, AJ's eyes closed in pleasure, basking in the softness. He opened his mouth and took in one of her hard nipples, sucking it hard. \"Ohhh!\" Tess sighed, feeling that delightful tug from her nipple as her hubby sucked away.\n\nTaking advantage, she reached down to his pants, pulling the zipper apart and tugging it down as best she could from her angle. She stroked AJ's dick through his boxers, but she was quickly eager to move beyond this to the next level.\n\nPulling her tits from his hungry mouth, she crawled down the bed and forcefully tugged his pants and boxers down and off, revealing his thick, swollen pole.\n\n\"There it is!\" she said with a grin, gazing at her husband's ready prick. \"You always get so worked up and upset about my hot body, but all you ever really need is my loving touch. Here... let me make you feel better.\" His body tensed up in pleasure, his cock as hard as steel. He watched as she deftly pulled her thong down and threw it to the side, leaving her as naked as he was. Crawling over him and grasping his prick, she pointed it up at her waiting pussy. Looking down at her small, cute pussy, marked by that trim, sexy landing strip, he watched as Tess lowered herself onto him, eagerly taking his fat, engorged prick inside her.\n\n\"Ahhh!\" AJ sighed, head falling back. She smoothly lowered her pussy around him till her butt rested on his thighs. Ever since this evolution in his wife occurred, her pussy had gotten tighter and tighter. And now, it's tight, gripping walls massaged every inch of his swollen meat to perfection. Tighter than ever before. \"Fuck! Oh my God!\" he panted out.\n\n\"You like that?\" Tess moaned out, fingers clawing into his chest. \"You like your wife's slutty cunt!?\" Hearing her talking like this was getting more and more common, and despite himself, it always sent a jolt though his cock. \n\n\"Fuck!\" he moaned out, head rolling in pleasure. He reached up and cupped her big boobs again, squeezing them firmly. Feeling her husband's hands on her, she was spurred into action, beginning to bounce on his throbbing cock.\n\n\"Oh God!\" she sighed in pleasure. \"Baby... I can't get enough of your big, fat cock! YES! I could ride it all fucking day!\"\n\nAgain, this wasn't at all how Tess used to talk. But in the moment, all it did was turn AJ on.\n\n\"Jeez... fuck!\" he sighed in pleasure, feeling her tight, grasping cunt swallow his entire cock and message every inch of it. He looked down and admired how tight her pussy's grip was on him, stretching around it, clutching it hard, not wanting to let go. \n\n\"God! You're so big! I love your dick! It feels so good inside me!\" she sighed. \"Do you love it!? Tell me... do you love your wife's tight cunt?\" Her saying this again sent another jolt of pleasure through him, spurring him to respond.\n\n\"Yes!\" he moaned out. \"I love your fucking cunt!\" he growled.\n\n\"Yes! HAHA! YES!\" she screamed out. \"I love hearing you talk like that! You like fucking your slutty wife's tight cunt!?\"\n\n\"Fuck! FUCK! Yes!\" he sighed, her tight cunt squeezing his pole. She stopped bouncing and ground down against his cock with it fully inside her, making him squirm beneath her. \n\n\"That's all I am, baby...\" she sighed, resuming her bouncing. \"That's all I've ever been. A dirty, nasty slut! I always acted sweet and nice and kind, but this is what I've always needed! What I've always craved! Yes!\" she said, her butt slamming into his thighs.\n\n\"Oh...\" he moaned, squirming beneath her, sliding his hands down to rest on her hips as she rode him. This freed up her tits to really bounce, jiggling lusciously as she fucked him into the bed. \n\n\"It's true! Fuck!\" she sighed. \"I always kept that side of me at bay... shit... but it's always been there.\"\n\n\"What?' he sighed, confused, despite the pleasure he was feeling.\n\n\"Fuck... now that we're married, I don't have to pretend anymore. I don't have to keep acting like boring old Tess... I get to be a proud, aggressive, dirty fucking slut. YES!\"\n\nAJ listened to this admission. Was this true? Had she always been keeping this side of her at bay? He never suspected her having this side, if anything, he thought she was a bit of delicate flower sexually. He never saw a hint of this. But that would explain this sudden change in her. \n\nMaybe it was true.\n\n***************\n\n'You bitch!' Tess called out.\n\n'I thought it was an inspired bit of fiction,' the Bitch admitted.\n\nTess figuratively stamped her feet. She didn't like being trapped inside herself, obviously, and she didn't like how 'The Bitch' was spinning her web of deceit, furthering the deception of AJ. She had lured him into bed again, and was now luring him deeper into her madness.\n\nTess could only hope he would figure it out.\n\n**************\n\nTess's body was now riding AJ like a total whore, grunting savagely as she bounced on his cock. She leaned forward so her belly was pressed against his, and as she bounced back and forth, her big, soft tits slid against his upper chest and face.\n\n\"Yes! YES! FUCK!\" she groaned loudly, riding him hard. \"Please, baby! Call me a slut! Please! I'm your little slut, and I want you to admit it. Ughh! Fuck! Call me a slut so I can cum! Please!\"\n\n\"Ugh!\" AJ groaned out. He wasn't sure he fully understood the depth of her desire, but he was too lost in the moment to think too much on it. \"Yes! Fuck! Please fuck me! Fuck me... you... fucking slut!\"\n\n\"UGGHHHH! GOD! YES!\" she screamed out, her cunt quivering. \"Again!\"\n\n\"Yes... baby, fuck me!\" he groaned out, arms wrapped around her, hands palming her ass, helping her drive down into him as he drove up into her.\n\n\"GOD! YES! YES! Yes baby... please! More!\" she seethed, crazed with need.\n\n\"Fuck my big cock with your slut pussy, baby!\" he begged.\n\n\"Ohhhhhh Ggggggodddddddd! Yes! YES! YES! FFFFFUUUCCCKKKKKKK YYYEEESSSSSSS!\" she squealed, her cunt spasming around his bloated prick as she came. Her hips were a blur as she fucked him through her orgasm, fully riding it out, letting her husband feel her pleasure. \"Fuck! FUCK! FUCK! YES!\" she screamed out loudly as she came on his dick, her juices squirting from her cunt around his dick. \n\nThrough it all, so lost in the moment, he was past coherent thought, just driving up into her, fucking her throughout her orgasm. The spasms of her cunt were driving him crazy, and it was about to take him over the edge himself. His cock swelled up and shuddered, ready to blow. He was so close. Three... two... one... and then...\n\nShe lifted her pussy off of him completely, just at the moment he was about to blow.\n\n\"Oh! Uhh! Wait...\" he panted, hips driving upward, looking to slide his cock back home into his wife's pussy. Searching out the bliss that was so indescribably close. His cock pulsed and swelled, but there was nothing there to take him over the edge. Using her arms to hold him down, Tess withheld the pleasure from him.\n\n\"It's okay, baby, I'm here...\" she cooed in his ear, leaning upward, giving him some solace by squishing her boobs against his face. But she wouldn't drop back down. She wouldn't take his needy dick back inside her. She wouldn't give him the pleasure he so needed. \"Ride it out... trust me...\" she whispered to her hubby, near belligerent with need. So close to climax, he was more beast than man, and she talked to him like a pet. \"I know it's hard, but trust me... the wait will be worth it,\" she cooed, talking him down from the edge. Finally, his hips fell back to the bed, the pressure fought off for now.\n\nEven though he hadn't cum, his entire body was tensed, panting as he fought off that climax. His balls were boiling and his cock was diamond hard. But Tess was still on top of him, and in his weakened state, he was at her beck and call. \n\n\"Here baby, let me do something...\" she whispered, sliding up the bed, sliding her massive breasts over his face, resting there as she reached towards her bedside table. Once she found what she was looking for, she moved towards him and grabbed his wrist, doing something to it, before moving towards the other, giving it the same treatment. Finally, she backed away, and it was only then that AJ's mind cleared enough to realize what she had done.\n\nHe was tied by his wrists to the bed. \n\nTugging at his constraints, testing the bindings of the thick but smooth rope binding him to the bed. Somehow, without noticing it, he had been tied up tight, unable to free himself. \n\nHe was at her mercy.\n\n\"What?\" he groaned, confused.\n\n\"I'm sorry, baby...\" Tess began, rubbing his chest, trying to soothe him. \"But it has to be this way. You've asked so many questions, and the only way I can respond is to take you to the edge. To take you to your fucking limits. Only then, you'll understand. And when you cum... you won't have any other questions...\"\n\n\"What... what are you gonna do?\" he asked.\n\n\"Oh, honey...\" she said with an evil smirk. \"We're just gonna keep fucking. But you don't get to cum till I tell you to. How does that sound?\"\n\n\"Wait, what...\" he began before she crawled over him and sank back down on his still standing prick, taking him back inside her. \"Ahhh... fuck!\"\n\nHe wasn't on edge anymore, so he was able to take this without blowing his load immediately. She resumed bouncing on him with her tight, grasping pussy. \n\n\"Fuck, that's nice!\" she sighed as she rode him. \n\n\"Oh...\" he groaned, head rising and falling in pleasure as she worked him up again. \n\n\"You're the best, honey...\" she said, leaning forward. \"Fuck! I love it! I love you so much, babe!\" she said, grabbing his chin between her fingers affectionately. She leaned down and kissed him, sliding her tongue into his mouth as her ass rose and fell, fucking him hard. Pulling her mouth from him, she moved her lips to his ear, her huge tits sliding against his fit chest. \n\n\"Honey...\" she began, whispering. \"This is exactly what I wanted. I LOVE that you let me control you like this! I love it! This is what I want! I love being your dirty little slut, but even more than that, I want you to be mine. I want you to belong to me. I want you to need me! I want you to do whatever I ask you to. I want you to be my fucking sex slave! Fuck! Yes!\" she moaned out, her cunt squeezing his bloated cock.\n\n\"Huh?\" he said, still dazed with pleasure. What did she mean? Her sex slave? Playing around was fun and all, but how would that help things?\n\n\"Only then will you understand what's happened to me. If you take your place as my sex slave, all your questions will be answered,\" she assured him as her pussy massaged his aching cock, making his nuts boil. \n\n\"Honey, I...\" he began, knowing better, but she stopped him again, kissing him roughly. This went on for a bit before she pulled her swollen lips from his and smiled wickedly.\n\n\"Don't fight this, baby...\" she cackled, bouncing more fully on his dick, taking every inch on every bounce. \"The sooner you give in, the sooner you can cum. If you try to fight this, I will drive you fucking insane! Till you can't fucking take it and you BEG me to cum! Till you beg me to be my slave! Ughh! Fuck!\" The thought was so hot for Tess that she quivered with lust, bouncing on his dick faster and faster.\n\nSo lost with pleasure, AJ could barely say anything. Her words were sounding more and more insane, but he barely had the strength to say anything. And her pussy felt so Goddamn good! He just lied back and took it.\n\nSo intoxicatingly hot was the thought of turning her own husband into her sex slave, she began to really pick up the pace, her eager cunt swallowing his full length and squeezing it hard. And with her leaning forward, that meant his rock hard dick was hitting her in all the right places.\n\n\"Oh my GOD!\" she moaned loudly, a jolt going through her system. \"I think I'm gonna cum again!\"\n\n\"Honey... please!\" AJ begged beneath her, aching for release, but she wasn't ready to give him that just yet. But that didn't mean she couldn't cum. She'd cum enough for both of them. Her cunt quivered around him, sending him towards the edge, but she was gonna get there first.\n\n\"Yes! YES! YES! YES! AHHHHH! FFFUUUCCCKKKK!\" she squealed, lifting her cunt from his needy pole just before he came. As it swelled and pulsed with need, her pussy hovered above it. Reaching down, she strummed her clit in fervor. \"AHHHHHHHHHHHHHHHH!\" she screamed out as another hard orgasm hit her, her juices squirting out of her cunt, splashing everywhere, coating his bone stiff prick in her heated girl-cum, having an orgasm all over him while denying him that same pleasure.\n\nShe collapsed, panting, her body falling on top of her husband as she gasped for breath. He humped upward, desperately seeking pleasure, but she didn't allow him to make any contact.\n\n\"GRRRRRGHHHH! Please!\" he growled out angrily, but she only lifted herself up and smiled down at him, her grin deliciously wicked, brimming with unhidden malice.\n\n\"Oh honey...\" she panted, still coming down from her high. \"We're just getting started.\"\n\n*************\n\nFor AJ, it felt like an eternity.\n\nWith him tied up, Tess teased and tortured him with incredible pleasure. Driving him up to the edge, over and over again, but never taking him over. \n\nShe languidly sucked his dick, using her tongue to give his aching prick divine, precision pleasure, her hands working his swollen nuts, massaging them. She could feel them get larger in her hands, swelling with thick, bubbling cum, desperate to burst out from his swollen sack.\n\nAnd that desperation allowed her to do her work. \n\nWhen she sucked his cock, her tongue teasing the head, driving him right to the edge, his cock straining for release, she pulled back, denying him again. She then sat on his face, making him eat her pussy as she slowly and confidently stroked his cock, feeling the steel hard member between her fingers. She jacked him immaculately, using her hands to tease him as he was forced face first into her cunt, his tongue at work, teasing her clit, hoping that his good work there would be rewarded. But when another hard orgasm gushed through her, her nimble fingers left his cock, again denying him.\n\nAnd when he cooled down, she curled up next to him, giving him some solace by letting him suck her big tits as she jacked him off again. Again, she drove him right up to the edge before pulling her hand from his cock with a flourish.\n\n\"Why... what do you want?\" he begged, almost in pain the need coming from his groin was so great. His cock could cut glass at this point, and it felt like it had been swollen for so long it had lengthened another inch. And his balls felt twice as large, flooded with cum. He was so god damn close... he needed to cum badly.\n\n\"Do you still want to know why I grew these tits?\" she asked, kneeling over him, looking down at him, watching him squirm. \n\n\"Wha...\" he panted, near drunk with need.\n\n\"Do you still want to know how I got this ass?\" she asked with a raised eyebrow.\n\n\"I don't care!\" he growled out, looking up at his wife, looking devilish in the dimming light. \"Just please! Let me cum!\" At this, her eyes flashed in joy.\n\n\"Exactly!\" she said excitedly. \"That's why I'm doing this!\" At that, she kneeled down and took his throbbing cock between her fingers, gripping it, but not stroking it. \"I can do so much for you! I can carry you to bliss... something no one else can give you. This predicament might seem difficult now, but trust me... you will never forget this. You will come to crave this more than anything! And only I can give it to you! But... if you keep asking stupid questions, then, well... you might never get this type of pleasure again! You will spend the rest of your life searching out a pleasure that you will never be able to find again! Only I can do this to you, your true love... your soul mate.\" she warned, giving his cock a cursory stroke.",
        "\"Ahhh!\" he groaned, desperate. His strong, fit arms were straining to snap the ropes holding him down, but it was futile. \n\n\"You need to know what I can drive you to. You need to know the pleasure I can give you,\" she stated, lazily stoking his cock, keeping him on edge. \"But to have this kind of pleasure every day of your fucking life, I need to know I can trust you to stop asking questions you don't need to know the answer to,\" she stated firmly, with a raised eyebrow, her face dead serious. \"I can drive you insane like this, baby... I can keep you like this for as long as I want to...\" she threatened. \"Wouldn't it be SO much easier to give in? To do as I say...\"\n\n\"Tess... please!\" AJ begged.\n\n\"Don't talk to me like I'm just your wife!\" she growled angrily, gripping his cock roughly. The pressure was almost enough to take him over the edge, but not quite. \"I'm your slut!\" she whispered hotly, before moving down to lick his chest, tasting his sweat. \n\n\"Fine, please! Yes, you fucking slut, yes... please! I'll do anything!\" AJ begged. \n\n\"Will you be your own wife's sex slave? Will you put sex with me above everything else? All your buddies out on the town, chasing girls, and you'll go home to your wife every night, bending to her iron will...\" Tess stated.\n\n\"Yes! Please... God... anything...\" he begged as she stroked him delicately, ready to make him pop.\n\n\"Admit that you want to give me a baby,\" she demanded. \"You've been doubting me, questioning me, but you've never wanted to make a bitch pregnant more than you want to with me right now! Don't you!\" \n\n\"Yes! YES!\" he cried out. \"I want to get you pregnant! I want to knock you up so bad!\"\n\n\"You'd do anything for me, wouldn't you?\" she asked.\n\n\"Anything, fuck... anything!\" he groaned.\n\n\"And... most importantly... will you stop asking stupid questions?\" she asked firmly. \"Will you promise me that you will stop asking about my tits and my ass and just accept me at my word? Me... your own wife. The woman you pledged to trust and obey over anything?\"\n\nAJ was gone at this point. Driven to insanity by the lust incited in him by Tess. He was driven by base animal instinct at this stage. She had proven her point... she was able to carry him to pure, indescribable bliss, taking him to the precipice of world-shaking, rapturous pleasure. Pleasure, like she said only she could provide. With her good looks... her mouth-watering tits... her perfect ass. Wasn't she right? Wouldn't it be so much easier to just ignore all those fussy questions and just go along with this? Why mess with a good thing, right?\n\n\"Hon... if you just give in to me, I'll take such good care of you,\" she cooed, her voice softer. \"We'll have sex every day and every night. And through it all, my ass will only get rounder and juicer. And my tits... trust me, they'll only get bigger and better. And they are all yours. You can squeeze them. You can suck them. You can fuck them and hose them down with cum every time you want! My body is yours. I'll give you everything you want. Everything you need. I'll carry all your babies, again and again, as many as you want. And all... you have... to do... is... give in.\" At this, she gave him a soft, loving kiss. Looking down into his eyes, in his strained, crazed mind, he could only notice one thing.\n\nWere her eyes a different color?\n\nBut such things didn't matter. When it came down to it, such trivial things, like how she got her new huge tits and her round juicy ass... it all meant little, especially faced with what she could offer him. When all she offered him felt so fucking good... why try to fight it?\n\nWhy not just give in?\n\n\"Yes! I give in! Please! Anything!\" he cried out, on the edge of bliss, willing to do anything.\n\n\"You'll be my slave?\" she asked.\n\n\"Yes! Anything! I'll be your fucking slave! I'll do anything! I want you to be my slut! Please!\" he begged, his hips rising off the bed, his cock still in her hand. \n\n\"And all these questions you keep asking?\" she inquired.\n\n\"Never again! I won't say a thing! Please! Just... fuck... I'll do whatever you say! I won't think about it again! I trust you! I'll do whatever you say. I'll just fuck you! I'll fuck you ever day and every night and never question a thing! I'll make you scream! I'll give you every drop of cum! I'll give you whatever you want! Please!\" AJ begged.\n\nLooking down at him, studying him for honesty, she smiled.\n\nAJ had been broken, once and for all. \n\nSmiling sinfully, she released his cock from her grip, crawling up the bed. Moving to the knots on the bedposts, she deftly untied him. Tossing them aside, she smirked as she looked down at AJ, his hands now freed.\n\nHis eyes met hers, pure fire behind them. He was unrecognizable. Gone was the sweet, kind, soft spoken artist. And in its place?\n\nA beast.\n\nQuick as a flash, he sat up, grabbed Tess, and tossed her onto her back, her tits bouncing like crazy. Moving like an animal, he crawled up on top of her, driven by the pure, instinctual need to fuck. She spread her legs, welcoming her pet into her embrace. And he willingly crawled into her web. Quickly, and firmly, with little grace or mercy, he slid his bulging, swollen cock inside her again, all the way up to the nuts. And, driven by instinct, he began to drive his cock in and out of her, quickly working up to a furious speed.\n\n\"YES! YES! YES!\" Tess squealed.\n\n\"Ugh! Guh!\" he growled in pleasure, conscious thought replaced by throbbing need.\n\n\"Fuck me, baby! Fuck me! Yes! Yes!\" she screamed out, legs wrapped tight around his butt, her hands sliding over his back, soothing the fires inside him.\n\nHe fucked her harder than he ever thought possible, but at this point, this wasn't a marathon. This was a sprint to the finish. And he was oh so close to crossing the finish line. \n\n\"UGHHH! FUCK!\" he growled, feeling his nuts twist, prepping for blessed release.\n\n\"Do it! Do it, baby, do it! Fill my tight cunt! Fill my slut cunt with cum, honey! Fill my tight cunt with sperm, honey! Fuck me hard and give me a baby! Yes! YES! YES! YES! FUCK! YES! YES!\" she squealed, ready for one last hard orgasm.\n\n\"Uhhh! UHHHH! UGHHHH! OHHHH!\" he grunted, beyond words. Her balls were boiling. He could feel it coming. He pumped again and again and again, until finally, his cock tingling with delight, and with Tess there beneath him, her tight cunt ready to carry him over the edge, he finally fell from the precipice.\n\nAJ's cock exploded.\n\nWith an almost inhuman tug, his body jerked forward as the first jet of cum burst out of him, driving down into her, his cock buried in her cunt as he fucked her into the bed. A thick, gooey band of sperm rocketed out of him, directly into Tess's womb. Again, and again, and again, this happened, his cock exploding with what felt like a gallon of highly pressurized cum.\n\n\"GUUUHHHH! FFFFUUUUUCCCKKKKKK!\" he groaned, his body tensed, looking like pure swollen muscle right then. \n\n\"YES! YES! FUCK! YYYEEEEESSSSSSSSSS!\" Tess screamed out, cumming herself, her spasming cunt only coaxing more seed from her husband into her waiting cunt. \n\nAgain and again, his body jerked and flexed, a seemingly unending stream of cum firing from his overfilled nuts. This went on for a few minutes but it felt like forever, his cock cumming like a cannon, filling up her womb. \n\nHe humped against her, her clutching cunt pulling sperm from his bloated nuts. His eyes were closed as he rode out the high of pure bliss, and when it almost seemed over, his nuts fired off one last thick strand of cum. His body twisted in ecstasy and a jolt of pleasure shot through him, making his back arch as he hit the last peak of his orgasm.\n\n\"AAHHHHHHHHHHHH!\" he groaned, his entire body racked with tension. His eyes opened, but he couldn't see the woman beneath him. He couldn't make out any discernable shapes at all. All he saw was light. Brilliant, red, blazing light! It was everywhere. It was inescapable. As if he was drowning in a sea of red, unable to escape, unable to reach the surface. \n\nHe was too far gone now.\n\nFinally, with this last rocket of jizz leaving him, he collapsed on top of his wife, nearly unconscious by the time skin met skin.\n\nAnd beneath him, Tess smiled in contentment, giving AJ the chance to recover. His eyes were lidding over and in his daze, a question bubbled to the surface. A question at the root of everything. A question that hit closer to the truth than any of his others.\n\n\"Who are you?\" he gasped out, not recognizing his wife in the woman in front of him. Even though she had warned him not to ask any more questions, this one was far too delicious to ignore.\n\n\"I'm Tess!\" she chirped with a bright smile. Spurred into action, she made a move. She wasn't done. Not yet.\n\nRolling him off of her, his consciousness was fading as he was about to get that much needed rest. But Tess's lust was insatiable, and she was ready to show AJ what he was capable of now.\n\n\"Wha...\" he sighed as Tess took his softening prick between her fingers. \"No, Tess... I think I'm done.\"\n\n\"Uh-uh, I don't think so,\" she replied with a wicked grin, stroking him firmly. \"Why do you think I just did what I did? Why do you think I put you through all that? I have one demand of my men... when you're around me, your cock does not stay soft. I need this cock to get hard and stay hard whenever I need it. And honey... I always need hard cock! So... I just trained your cock and balls for my own use. I trained your system to expect so much action that your nut sack needs fucking gallons of cum, ready to go, at every moment of every day. Your cock will be always be pulsing with need, bursting with cum, and it will all be for me. As soon as you lay eyes upon your perfect sexy wife, your cock will throb, and all you will be able to think about is having sex with me. Fucking my brains out, and making me happy. You see?\"\n\nStill a bit stunned, he lifted his head from the bed, only to reveal the truth of her words. His cock was standing proud, hard as a rock, dripping with cum. His gaze drifted up to his wife's knowing look, just in time for her to engulf his aching prick with her hungry mouth, all the way down to the balls. \n\nFor a moment, his head fell back to the bed, but he couldn't help but look down at Tess again, voraciously sucking his meaty pole. He had been drifting off just minutes prior, but now the pleasure coming from his swollen prick kept him anchored to the world of the conscious. \n\nAs Tess sucked him off, she was staring up at him, holding his eyes with her own. And even though she had warned him against asking questions, some doubts still bubbled to the surface in his head.\n\nHer eyes... a dark, smooth hazel, compared to the green eyes he recognized so well. Not only was the color different, but the shape was too. Her eyes used to be wide and bright, but now they were a little more angular, striking and arresting in a way they never were before. But minutes later, when his nuts flexed and unloaded another huge load down Tess's eager throat, the high of pleasure made him realize that her eyes were so much sexier this way.\n\nAnd this time, his cock stayed hard.\n\nMinutes later, when Tess was riding his cock like a complete fucking whore, moaning and screaming above him, all he could think about were her dark, sensuous locks sliding over his face as her head hung down above his. Before, her brown hair was nice, but she never really focused on it, usually keeping it tied up on her head. Now, it hung down in waves, perfectly curled and styled like a model's. And it was so smooth too. Plus... it smelled great. A nice clean and girly scent. He loved it. And when she was riding him, her dark hair quivered hypnotically, driving him crazy. His balls quivered and jerked as he came again, blowing another load into her waiting cunt, cumming so hard he couldn't even remember how her hair used to look. \n\nTwenty minutes later, when Tess was on all fours, eagerly urging him along to fuck her tight cunt hard, all he could focus on was her hot body. Her long, lithe, firm back, her skin a perfect golden tan, a far cry from her formerly pale flesh. And of course, her ass. Her now incredibly hot, sexy ass. Holy fuck! Yeah, it used to be flat and formless, unimpressive even in the best of times. But now, each firm cheek was large and round. It really stood out in this position, bent over, butt pointed up as she took it hard. Each firm cheek jiggled hypnotically, erasing any doubts in his mind. This was her butt now... no point thinking of the inferior, unsexy ass she used to have. Her ass was perfect at this moment, and that's all that mattered. Spanking the smooth, bouncy cheeks hard, he came again inside her, filling her womb with even more of his virile seed. \n\nAnd of course, there were her tits. Those perfect, mouth-watering, massive tits, jutting out from her body, looking huge on her now extra slim and fit frame. Diving in face first, feeling their smooth, soft flesh against him. Then, sliding his still bloated prick into her cleavage, smothered by her mammoth jugs as she squeezed them around his swollen cock, looking up at him with mischief in those perfect hazel eyes. Didn't she used to have flat, unimpressive, pathetic little boobies? He could barely remember at this point. But he couldn't imagine this beautiful woman on her knees in front of him, this perfect, gorgeous creature, having anything less than absolutely massive tits. Her tits were big and round and jiggly and perfect. And that was all that really mattered.\n\nThat's why he came all over them.\n\nThe night was a marathon of sex. Every time he thought he was done, she coaxed him right back to full hardness. This was what she had conjured in him with her vigorous training, this almost god-like stamina. Small doubts would still rise to his brain, but then he would just cum, again and again, and by the time he was through, his questions were forgotten.\n\nHer face, now ten times better looking, was making her way sexier than she used to be?\n\nWho cares that she used to look so different? He blew another volley of sticky cream inside her until he couldn't remember what she used to look like. Till it didn't matter what she used to look like, and all that mattered was how sexy she was right now.\n\nHer taut, firm body, now fit and sexy in a way it never was before?\n\nBy the time he fired off another load deep inside her, with her urging him to knock up her slut pussy, he couldn't remember her body any other way.\n\nHe just kept fucking and fucking, and she was right there by his side, urging him on with almost manic glee. The longer this went on, the more he enjoyed it. The more he became addicted to it. As soon as he came, he felt the undeniable urge to do it again. He needed it and he couldn't stop himself.\n\nNot fully understanding how he was physically able to carry out this kind of marathon fucking, the pleasure was so overwhelming that these questions sort of drifted away into oblivion. Eventually, he wasn't even really thinking at all, fucking Tess roughly without thought, only acting on pure, base animal instinct. His body was spent to the point of physical exhaustion, but his muscles were coursing with enough sexual energy to drive him onward, fucking mindlessly and roughly, like a beast. To the point where thoughts and feelings, concerns and doubts... none of that mattered.\n\nShe was too fucking gorgeous. Her tits were so unbelievably huge. Her ass was firm and juicy and perfect. Her boobs were so fucking soft and firm. Her body was so fit and taut. And again, and most importantly... those tits... just so unbelievably massive and bouncy. He couldn't get enough.\n\nAJ didn't stop. He couldn't stop. Fucking away into oblivion, ignoring his doubts, fucking his mind away till his addled brain was turned into mush, sealing his own fate.\n\nAnd all that mattered was pleasure...\n\n**************\n\nTess was crushed.\n\nShe watched everything from within her own body. She watched how 'The Bitch', in her own terms, broke AJ. She tied him down... drove him insane with pleasure... until he was an animal. Driven by need. Driven by instinct. \n\nHe had been unrecognizable, fucking like a monster. \n\nIt had been pretty... rough to watch. The fucking was brutal and rough and disgusting, and both 'The Bitch' and AJ reveled in it the filth. And it had gone on and on, to the point where everything became a blur of sweaty limbs and curse words and every disgusting act you can imagine. Tess eventually had to turn away and stop watching, ignoring the moans and screams until they were finally silenced after hours and hours of intense fucking.\n\nWhen this first started, when Tess was first trapped her own body, looking out through her own eyes, it was like looking through windows, only she could see the frame. And now, by the time 'The Bitch' was done with AJ, the windows looked smaller, further away, the darkness around it encroaching.\n\nTess had never doubted AJ. Not once. She never doubted he would come to her rescue. Even after that night. Even after she broke him. She was hoping that, in the morning, with his head clear, he could fight back against this bitch one last time. Fight for Tess's freedom.\n\nWhen 'The Bitch' opened Tess's eyes in the morning, she was alone in the bed. Taking in her surroundings, Tess, looking out through her eyes, was disgusted, but the being controlling her... she was delighted. The bed was soaked with their combined juices, as was her body. She stretched her arms on the bed, posing gracefully as she reawakened her exhausted muscles. The only thing missing from the bed was her husband.\n\nAJ was gone, and for a moment, Tess's hopes rose. But 'The Bitch' seemed unconcerned. Hearing AJ's presence in the bathroom, she got up on the bed and kneeled down on all fours, her ass facing the bathroom. When the door opened and AJ entered, his expression was vague as he gaped at what he saw.\n\n\"Hon...\" the Bitch began. \"You can either go to work, or you can split my tight ass with that cock of yours,\" she purred, eagerly urging him along to fuck her tight ass hard, an act Tess had never been interested in before and had actively expressed disgust in. She then smiled and turned away.\n\nTess had hope. She had belief that her husband was still good and true and would fight for her. He knew that she found the expectation of this act demeaning to women, and if there was anything that would signal that this wasn't his wife anymore, it was this. Despite everything that had happened the night before, Tess still had faith in him; that at the last minute, his mind would be clear, and he would come to her rescue.\n\nAnd then AJ started pushing his cock up her ass.\n\nTess felt the discomfort of having a large slab of meet jammed up her ass, but 'The Bitch'...\n\n\"OH FUCK! YES! YES! I LOVE IT! Split that ass open, baby! Do it to me rough!\" she seethed in pleasure.\n\nAt that moment, the flicker of hope in Tess began to die. She watched her nice, sweet, loving husband pound her ass like an animal, no hesitation, no resistance, and his face didn't dissuade her from that comparison. His handsome features were twisted up, looking like a beast. He was unrecognizable.\n\nThose windows Tess was staring out of... they got even smaller.\n\nTess watched AJ and 'The Bitch' going at it like fucking porn stars day after day. Her husband was changed, going along with 'The Bitch's every vile whim without any hesitation. And he lived up to his word. He never questioned her again. He never questioned her about the changes in her body. He never questioned anything ever again.\n\nHe had been broken and molded by her will and sexual power.\n\nAt first, she tortured Tess with her words, bragging about how much more AJ loves her more than Tess. And it was hard to disagree now. He was so different. He was as driven by lust as 'The Bitch' was. He was on her tits every chance he got, taking every opportunity to fool around with her. His loving hands groped her tits and ass. And as things got rougher, he did too, spanking her roughly, grabbing her hair, treating her like the slut she was. And 'The Bitch' loved it.",
        "The final nail came when she burst into the bedroom and announced the big news. \n\nShe was pregnant.\n\nThey consummated this news with another round of intense, sweaty sex, and as this happened, 'The Bitch' spoke to Tess directly.\n\n'I wonder...' she began. 'I know it started that way, but this body is barely yours anymore. It's mine. So you have to ask yourself... will the baby even be yours? Will it have any trace of you? Think about that, Tess...'\n\nThe flame in Tess was getting smaller as hope left her, and the windows she could see the world through were getting smaller. She was getting farther removed from that world, and there would be no escape. Her consciousness passed out then.\n\nWhen she woke up, she immediately noticed something was different. Firstly, her view was much better, almost crystal clear. Looking around, she realized she was standing in her bedroom, but she couldn't move. She was seemingly in place. But as she looked at the bed, she had a startling revelation.\n\nThere were two figures in the bed. AJ... and her. But it wasn't Tess. It was her body, but Tess wasn't in it anymore. She was watching from the side. Then where was Tess? With a sudden wave of dread, she realized her answer.\n\nShe was in the mirror.\n\nThat fucking creepy mirror that started this whole thing. Tess was trapped inside it now, and 'The Bitch' had taken her place. Stolen her body and her man. And Tess... she was trapped with nothing.\n\nWhen the happy couple awoke, Tess watched them from afar. She watched them be intimate, be overjoyed with each other. Peaceful, domestic bliss. Tess was filled with fury. AJ didn't even glance at the mirror, but Tess doubted she would see much of the man she knew. 'The Bitch' had changed him so much by this point. And after she had stolen everything from Tess, all she could deign to do was give the mirror a small, evil smile, letting Tess know that she was well aware of her predicament. \n\nTess watched them fuck, over and over again. 'The Bitch' no doubt loved doing this, knowing Tess had to watch, making her watch as her husband avail himself in her luscious body. Tess was filled with a fury of hatred and jealousy, but it was impotent. There was nothing she could do. No signal she could send. She had no idea how to escape the prison she was in. All she could do was watch, trapped within the mirror, unable to look at anything beyond the parameters of the reflection.\n\nSo, she got very familiar with every infuriating curve on what used to be her own body, but not anymore. She stared at her long, dark, perfect hair. Her fit belly. Her firm legs. Her juicy, mouth-watering ass. Her fucking obscenely huge tits. She stared at all of her, and while part of her was filled with jealousy, part of her couldn't help but understand why he was seduced by her.\n\nTess watched them go at it all the fucking time. She watched her husband get fucking nasty, fucking 'The Bitch' in every hole, savagely, like an animal. He was never like that with Tess. He was gentle and loving with her. But with that bitch ... he was so different.\n\nTime became a blur for Tess. She watched as 'The Bitch's belly got bigger with child, which didn't stop the couple from going at it. And suddenly, the baby had been born, a beautiful baby girl, who looked just like her mother and nothing like Tess. And before long, they got to work on another one. \n\nShe tried to see a bit of the AJ she knew, but he had fallen truly under 'The Bitch's spell. He didn't question her at all anymore. Because he didn't say one thing about the fact that she wasn't Tess anymore. There was no veil or pretending. She had truly taken over, and it didn't seem like there was any bit of Tess left. She looked nothing like the woman he married. She was, in all measurable ways, a completely different woman. Zero percent Tess. One-hundred percent Bitch. But AJ was so far gone at this point he didn't say a thing. \n\nThe true form of 'The Bitch' was, of course, naturally gorgeous. Deep tan skin. Long, black hair. Stunning, almost model-like features. Plump full lips, which formed a natural sneer, a delicate nose, and eyes that twinkled with barely veiled dark intentions. And her body kept up with her face. Long, firm legs. That upturned, round, full, heart-shaped ass, now without any vestiges of Tess's shapeless rear. And her tits... holy fuck, they were fucking blimps on her chest. Infuriatingly massive. Unreasonably perky. Perennially hard nipples. God, this bitch was infuriating.\n\nAnd AJ loved it. He didn't mind that this wasn't his wife anymore. 'The Bitch' had been proven right. He truly did love that body more than Tess completely. He had made his choice, and Tess had been left behind when compared to her.\n\nThere was an added twist of the knife with the fact that she had her own body stolen from her by this crazy, twisted creature, this thing that had entered her life and systematically tore it apart, through it all Tess didn't even know her name or what she truly was. \n\nFucking bitch.\n\nTess searched for any way to communicate to her husband. To send a message, and maybe get through to AJ in any way. And then, on a cool dewy morning, she found an opportunity. The couple was distracted as they awoke and got going for the day. Tess's view was distorted by condensation on the mirror, she reached out, and in whatever incorporeal form she was currently in, reaching out to place her fingers against the pane of the mirror dividing her from the world. Touching it, she realized the condensation on the mirror cleared where she made contact. Suddenly excited, she wrote as quickly as she could, writing a message that AJ could read.\n\n\"AJ, HELP! It's Tess! I'm trapped in the mirror!\"\n\nFor a moment, the couple continued on without noticing her message.\n\n\"Please, please, please!\" Tess said to herself, hoping her husband would notice before that bitch did. Then... he looked.\n\n\"Oh my God!\" Tess said, feeling a pang of hope. Only in his boxers, AJ approached the mirror, eyes narrowed. He moved in close, his eyes looking at the mirror, his expression unreadable as he looked right at the message Tess had written. Did he notice? Did he see something? His eyes stared into the mirror. Straight at Tess? Could he see her?\n\nBut before he could say or do anything, 'The Bitch' stepped forward, sliding in between AJ and the mirror. Putting her hands on the pane, bending over, and looking over her shoulder, all she had to do was raise her eyebrow. Within seconds, AJ's cock was buried up her ass as he pumped into her roughly, his face a mask of sexual fury.\n\nTess never knew if he saw the message. He had to have, right? He had to have read it and suspect something was up. But if he did see it, he didn't care. He didn't pay it the slightest bit of mind. He just fucked 'The Bitch' roughly and vigorously. And for a moment, 'The Bitch' looked forward into the mirror, eyes blazing with fury. Seeing the message Tess had written, she slid her body forward, wiping her words away with her massive boobs. Any hope she had was pushed away by this slut's huge tits. The message was erased, and if it left any doubts in AJ's mind, he gave no sign of it. By the time the sex was done, he didn't look back at the mirror. He didn't pay it any mind whatsoever.\n\nTess knew then that any semblance of the man he used to be was gone, driven out of him by 'The Bitch' and her seductive whiles.\n\nBut that wasn't the worst part, not even close. One day, AJ had received some sort of plaque from work, a reflective plate type thing, a reward for his success. He had set it on his dresser, and later that night, he and 'The Bitch', naturally, started fucking. Tess was numb to it at this point, at least until she glanced to the side. From this angle, the plaque was reflective, and it was reflecting the image of the couple on the bed. And it was only through this reflection that Tess could see 'The Bitch's true form. For AJ, he could see the perfect, luscious outer shell, but Tess could see her rotten core. The nasty, crazy, slut-beast from Hell that had stolen her husband. \n\nWhat Tess saw she couldn't really put into words. All she remembered was the dark leather wings coming out of her back. This... this creature, this is what had invaded her life. Enslaving Tess and seducing AJ, changing him forever. This was something beyond which she could ever understand, and ever hope to fight against. It was at that point she faded into unconsciousness for a good, long while.\n\nMore time passed, enough for 'The Bitch's belly to swell up with more babies, and she gave birth once again, this time to twins. Tess watched them be the perfect, loving family Tess always dreamed of having. AJ looked to be such a good father, ever attentive. Tess watched these perfect family moments, like setting their babies in the crib, watching them play. Despite her hatred of 'The Bitch', it was clear she was crazy about her babies. She was always there for them, and Tess was always watching, even in the intimate parental moments, like when she breast fed the babies. Of course, this was followed by her breastfeeding AJ, who eagerly sucked down breastmilk from her huge, swollen breasts, corrupting any purity in the image they were to project. Yeah, Tess had trouble watching that, watching her husband gulp down milk from that slut's big tits. And through all of this, neither member of the happy couple really paid the mirror much mind, until one fateful day, when 'The Bitch' stood right in front of it.\n\nTess had no doubt 'The Bitch' could see her somehow, even though she was invisible to AJ. Standing only in thin, black, lacy underwear, showing off her body once again to Tess, she appraised the mirror. The last time she had really looked this closely was when Tess tried sending her message AJ, and ever since then whenever she glanced at it, Tess could see the anger in her eyes due to her little stunt.\n\n\"Baby...\" the Bitch called out, her voice not resembling Tess's in the least. It was far smoother and more sensuous. Tess knew it well. It was the same voice that had haunted her dreams, and humiliated her with her words. The voice of 'The Bitch'. The voice that made AJ's dick hard. \n\nAJ approached from the other room and pushed himself up against her back.\n\n\"What's up?\" he growled, reaching around to hold her close. As he did, Tess saw the tattoo on his arm, a weird, dark symbol that she couldn't quite explain. 'The Bitch' had a matching tattoo on her lower back.\n\n\"Can we move this dusty old thing out of here?\" she asked, smiling into the mirror insidiously. \"I've always hated it.\"\n\n\"No! Wait!\" Tess called out, but her warnings were unheard. AJ stepped forward and easily lifted the once heavy mirror. It was as if the power of 'The Bitch's spirit weighed it down, and her own spirit was lighter and far less consequential. \n\nAs he lifted the mirror, 'The Bitch' looked right at it, staring right at Tess. She winked at the trapped woman and delicately waved her fingers at her, saying goodbye. That was it. No grand speech about how she had stolen her husband and made him hers. No arrogant bitchy comments. No, all Tess was worthy of was a small, disdainful, smug little wave. A casual dismissal from her own life and body. \n\nBitch.\n\nTess screamed out to her husband, desperate for him to hear her, to remember her. Anything. But no... there was nothing. No response. AJ carried the mirror up to the attic, leaving it there, alongside boxes, and other things just thrown to the side.\n\nTess could only see what could reach the mirror, so she could only see this dark, dim and dusty room. Nothing more. She could hear voices and loud moans from afar, but that was the extent of her human contact for a long, long time.\n\nTime became a blur. Meaningless. Days and weeks passed, and Tess was so forgotten that her mind just sort of drifted away for long periods of time. Days, months, years, passed in the blink of an eye. One day, the boxes all around her were gone, as were the voices. Tess hadn't even noticed.\n\nThe mirror stood there, forgotten, for a long, long time. The only hope Tess had would be for someone to come along and free her from her prison, but who would even notice her at this point? No one was looking for her. No one knew where she was. Tess believed in hope once, and it had failed her.\n\nShe wouldn't make the same mistake again.\n\n******************************\n\nMadeline finished speaking, letting the story sink in.\n\nAdmittedly, for the nun, the story sounded pretty terrifying. This poor woman, who did nothing wrong, only to have her body taken over by this beast from Hell. This evil seductress who stole her body, her husband, and her life, leaving her trapped in a mirror. \n\n\"Like you said, I don't expect you to leave the Church just because you don't like your fellow sisters,\" Madeline said. \"What I'm trying to show you is that the war your Church is fighting is a futile one. You will lose. All of you. And the penalty will be... severe. Like it was for Tess.\"\n\n\"I'm not part of anything! I'm just... a simple nun, doing her job! I live a life of service! That's it!\" the nun cried out. Madeline only smiled. \n\n\"There's evil around you, and you know it!\" Madeline said sharply. \"In your work, you've no doubt seen it. This world has sin oozing from its pores. My side... we embrace it. We swim in it. We don't deny human nature. And your side... they're the cause of it. They deny its existence and lead the world to doom under the guise of a higher purpose. But it's a losing battle! The sin will rise, and they will drown in it. My side will rise to the top, victorious, and there is nothing you can do to stop it.\"\n\n\"No...\" the nun said, shaking her head, trying to suppress the nervous feelings Madeline's words gave her.\n\n\"Look at Tess...\" Madeline began. \"She trusted and believed in the purity of her husband, but the corruption was too strong. He gave in, and she lost everything, because she believed in a fairy tale. She believed she was right and good, but that couldn't save her. This world is dripping with sin, and you either bathe in it, or drown. AJ opted to swim. Tess let herself drown. You, my dear, you fill your head with lies, even though the world is too far gone. Take a stand now, and you'll be better for it. You don't have to sink.\"\n\n\"No...\" the nun said again.\n\n\"Nassia T'Eleggarouth Tasini,\" Madeline said, her words sounding like gibberish. \"That was her name, by the way, the being that stole young Miss Tess's body,\" Madeline explained. \"She's been around a long, long time, far longer than me. But... much like myself, even though she was born long ago, she is built for this time. A time where corruption flows down the streets. A bitch like Nassia is built for thongs and bikinis and evil. Being a girl like that in this point in time... you can become a queen! She is a truly powerful being, able to reject death over and over again. Capable of great power, things you can barely comprehend, and true delicious cruelty. Just imagine what she did to that poor wife. That kind of power... the power of possession, stealing another woman's body completely, trapping her within herself till not a bit of her was left, trapping her spirit outside her own body. Imagine that kind of hell, honey. That... that's what you're fighting against. That's our power. You see what she did? That evil, twisted bitch... she's on my side. That's what our side is capable of. Your side can't do that. Your side doesn't have beings like that, but my side does. We have plenty of them. And if death itself can't stop us, then how can you defeat us? How can you hope to deny our power?\"\n\nThe nun was silent. Madeline's words tapped into her deepest fears. A part of the nun's mind wondered if the witch was telling the truth, that her philosophy was the correct one. That the nun was fighting a losing battle against an enemy that could never be defeated. No... No! She couldn't think like that.\n\n\"You lie... about everything,\" the nun asserted. \"There is good in this world. Our side might not be perfect, but our message is true. That story, with the mirror... it's probably made up anyway!\"\n\nMadeline smirked, before standing up. Walking away calmly, shaking her butt as she did so, she spoke up again.\n\n\"I figured you'd doubt me,\" she said, sauntering behind the boiling cauldron. Lighting up the area near her with the candle she was still carrying, she approached a tall, black shrouded object. Looking back at the seated woman with a smirk, Madeline reached forward and tugged the dark covering down.\n\nUnderneath it stood a tall, golden, ornate mirror.\n\nIt looked exactly the way the nun imagined it. Large. Heavy looking. Fancy designs adorning it. The pane of the mirror, smooth and glossy. The nun's eyes widened.\n\nMaking sure the nun was paying attention, she snapped her fingers.\n\nThen, suddenly, from within the mirror...\n\n\"HELP ME PLEASE!\"\n\nMadeline snapped her fingers again, and the voice disappeared. \n\nThe nun's eyes widened. Looking at her reflection in the mirror, she saw the fear there.\n\nThe story of the mirror... it was true.\n\n*************"
    ],
    "authorname": "TheTalkMan",
    "tags": [
        "cheating",
        "big tits",
        "reluctance",
        "betrayal",
        "temptation",
        "teasing",
        "evil",
        "seduction",
        "body change",
        "rough sex"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/trilogy-of-tits-and-terror-ch-01"
}