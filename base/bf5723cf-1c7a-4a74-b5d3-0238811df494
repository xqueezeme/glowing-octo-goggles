{
    "title": "The Girl in the Mirror",
    "pages": [
        "The dark gray sky belched rain onto the floor-to-ceiling glass of Joe Harper's high-rise office. The noise was loud enough to be distracting, but Joe had long ago mastered the art of tuning out everything else in the world when he was working on a new project. This could be the one that put his name on a nice, oak-paneled office in the executive leadership wing, and he was determined to make sure this acquisition went off without a hitch.\n\nHis phone began to flash and ring on his desk. Joe glanced at it; irritation etched on his features.\n\n\"I told you no calls, Janet...\" he grumbled under his breath as he picked up the phone.\n\n\"Mr. Harper. I have an urgent call for you,\" came the clipped, professional sounding voice of his secretary.\n\n\"I told you I didn't want to be disturbed.\"\n\n\"I'm sorry, Sir, but the gentleman was quite insistent and said you would be upset if this call didn't go through.\"\n\n\"Who is calling, Janet?\"\n\n\"He said his name was Billy Walker?\"\n\nJoe sat up straighter in his chair.\n\n\"Billy...\" he breathed quietly.\n\nBilly Walker, it was a name he hadn't heard in over twenty years, one that brought back a flood of memories. \n\n\"I'll take the call.\"\n\nHis secretary dropped off the line, and there was a momentary delay before the new call was connected.\n\n\"Hello? Joe?\"\n\n\"Billy?\"\n\n\"Crazy Joe Harper! It's been a long time.\"\n\nJoe winced at his old nickname, but hearing it again made a picture pop into his head. He could see them all as clear as day. Billy Walker, Frank Palmer, Tess Julewski, Bonnie North, and himself standing in a circle outside the locker pod, planning their next big escapade, laughing at the chaos their last one had caused. They had been the practical jokers of Harmon High School, and he had been the ring leader.\n\n\"It has been a long time,\" agreed Joe, \"It's good to hear your voice again. Jesus, Billy, what's it been?\"\n\n\"Twenty years, give or take. I guess none of us were very good at keeping in touch.\"\n\n\"Yeah...How have you been?\"\n\n\"Keeping busy. I just opened a restaurant here in San Francisco last year that's doing pretty well. It offers kind of a fusion of Jamaican and South American foods.\"\n\n\"Sounds spicy.\"\n\n\"It can be, \" chuckled Billy.\n\n\"You were a tough man to track down. Fortunately, my dad still talks to yours, and he clued me in on where to find you. So, big time investment guy now, huh? Leveraged buyouts, corporate take-overs? I would never have figured you for the suit and tie type.\"\n\n\"Figured I was going to join a rock band and spend my hours playing seedy clubs, right?\"\n\n\"It would have fit your M.O. better than corner offices and power lunches. Who would have thought Crazy Joe Harper would ever grow up?\"\n\n\"It happens to the best of us.\"\n\n\"Still, it's hard to reconcile it with the guy who hot-wired the vice-principals car and parked it in the middle of the football field before homecoming, or the guy who bought a weather balloon, filled it with cheap perfume and blew it up in the coaches office so that it blocked the door.\"\n\n\"I had forgotten about all that. Man, when they popped that thing, it made the whole place smell like a French whore house for weeks.\"\n\n\"You never did tell me how you even got in his office?\"\n\n\"Lifted the keys from the head janitor. I used my dad's air pump to inflate it. Damn thing nearly filled that shitty little office.\"\n\n\"So, I'm guessing you don't drop M80's in the toilets these days.\"\n\n\"No. I'm a nice, respectable businessman now.\"\n\n\"We missed you at the twenty-year reunion. Heck, we missed you at the ten-year.\"\n\n\"I meant to go. I think I even sent an R.S.V.P. for the twenty, but things got busy here...\"\n\n\"Tess would never have believed you missed either one for business meetings. She figured you were passed out at an Iron Maiden concert or on the run from drug dealers.\"\n\nJoe had a fleeting image of Tess Julewski appear in his mind's eye. A saucy red-head, with sweet legs who was fond of leather boots and short skirts. Tess had something of a reputation as an easy girl that was not undeserved. \n\n\"You still talk to Tess?\"\n\n\"On occasion. Get this, she married an architect and has three kids. Can you believe it?\"\n\n\"That's hard to imagine. Tess was such a party girl I could never picture her settled down with anyone.\"\n\n\"As you say, 'It happens to the best of us.'\"\n\n\"What about Frank? You still hear anything from him?\"\n\n\"Frank got forced into the Navy by his parents after he flunked out of like three colleges. It worked out o.k. for him. He learned all kinds of technical stuff in the service and turned it into a job as a Cyber-Security consultant. He works in Dallas and is married himself. I don't think he ever had kids, though.\"\n\n\"Wow! I can't even picture Frank doing anything complicated like computers. This was a guy that wore slip-on tennis shoes when we were freshmen because he still hadn't mastered how to tie his shoelaces.\"\n\n\"Don't I know it. I was the one who tied his shoes for him all through middle school.\"\n\n\"I suppose that just leaves, Bonnie,\" said Joe, not able to hide a tremor in his voice as he said that name.\n\nBonnie North had been his on and off girlfriend through all four years of high school. He had lost track of how many times they had broken up and gotten back together again by graduation. A petite blond with a little rocket body and blue eyes the color of an August sky, she had been the one thing he truly missed when he had fled his home town. They had tried to get serious for a while after high school, but Joe wasn't ready to settle down, and Bonnie was growing tired of his immature attitude. She had kicked him to the curb, throwing him out of the crappy little one-bedroom apartment they were sharing at the time. He had hit the road and not looked back but never stopped thinking about her. Eventually, Joe came to realize the party couldn't last forever, and he had gone back to college and applied himself. It took a few tries, but he had gotten his degree and started his slow crawl up the corporate ladder, shedding his shoulder-length dark-brown hair and most of his sense of humor along the way.\n\nThrough the years, Joe had been in and out of several relationships, almost marrying once back when he was in his early thirties. Somehow with every girl he met, he ended up comparing how he felt with them to how he had felt with Bonnie, and it always came up short. He had picked up the phone a few times, thought about tracking her down, but held back for fear of what he would find on the other end of that call.\n\nWhat if she didn't feel that way about him anymore?\n\nWhat if she never had?\n\n\"Yeah...Bonnie...That was actually why I was trying to find you.\"\n\nJoe had a sinking feeling in his stomach, and he gripped the phone tighter.\n\n\"Really? This call has to do with her?\"\n\n\"Yeah, Joe. Look, I'm just going to come out and say it. There was an accident. Bonnie was on a white water rafting trip in Colorado, and her boat overturned. She...She drowned, Joe.\"\n\nSilence followed this pronouncement. Joe stared at the far wall of his office, but he didn't see the award plaques or photos of him with various clients that adorned the plain surface. He looked much further away, across a vast gap of years seeing a girl with curly blond hair and a radiant smile, one who had tolerated his impish sense of humor with an eye roll and a shake of her gorgeous head. The same girl who had taken his virginity in a parked car a month after his eighteenth birthday. The girl who had come to every practice his mediocre Metal band had ever had. The one who had made him sober up and go to school on the mornings where all he wanted to do was lay in bed. The girl who had deserved his love, his loyalty, and yet the same girl he had hurt multiple times. You could chalk it up to immaturity, but at the end of the day Joe Harper knew one thing with perfect clarity, Bonnie should have been the one, and he had no one but himself to blame that he had fucked it up.\n\n\"She's gone...\" he whispered.\n\n\"I'm sorry, Joe. It's a damn shame. Bonnie was one of the good ones.\"\n\n\"How did you find out?\"\n\n\"Her daughter called me.\"\n\nJoe's brow furrowed, the shocks of this conversation coming too fast to keep up with, and he struggled to slow his racing thoughts.\n\n\"Bonnie had a daughter?\"\n\n\"She got pregnant a couple of years after you split town. It was a one-night stand, apparently with unexpected consequences. Her daughter is all grown up now, twenty-two, and a chip off the block from what I hear. I've never met her personally. Marta is her name, Marta North.\"\n\nThis was almost too much. Bonnie had a daughter? \n\n\"So anyway, Joe. The reason for this call was to invite you to the funeral. Marta said her mom had left specific instructions that in the event of her death, certain people should get an invite, and every one of the old gang was on there, including you.\"  \n\n\"Me? I...I'm a little surprised. Bonnie and I didn't part under the best of circumstances, and we haven't spoken in all this time.\"\n\n\"Bonnie was never one to hold a grudge. She very specifically asked for all of us, but most of all you.\"\n\n\"Huh?\"\n\n\"Marta said your name was at the top of the list.\"\n\n\"Wow. I don't know what to say to that.\"\n\n\"Will you come? The funeral is this weekend, and everyone will be there. I know the circumstances suck, but it's a chance to see the old gang together again. What do you say?\"\n\n\"I'll have to rearrange some things, but...yeah...I'll be there, Billy. Thanks for letting me know.\"\n\n\"O.K. I guess I will see you this weekend. It was good to hear your voice, Joe. It's been too long.\"\n\nHe put the phone back in the cradle, then picked it right back up, pressing the button for his secretary.\n\n\"Janet? I need you to book me a flight to Phoenix for tomorrow. This is a personal expense, so bill it to my credit card. Thanks.\"\n\nThe elevator deposited him on the ninth floor, five above his own. Joe could have done this with a phone call, but given his current circumstance, he figured he should deliver the news in person. A man in line for a promotion didn't rock the boat.\n\n\"Clarisse. Is the boss in?\" he asked the aging secretary who guarded the heavy, oak door.\n\n\"Yes, Mr. Harper. I'll let him know you want to see him.\"\n\nJoe waited patiently, loitering by the giant fish tank that stood against one wall. The strange collection of exotic creatures was his boss's passion. Joe knew that he had an even more impressive menagerie at his home in a tank twice the size of this one. \n\n\"He's ready for you, Mr. Harper.\"\n\nThe door opened to reveal an office twice the size of Joe's, complete with mini-bar on one side of the room and a long leather couch on the other. Rumor had it that the cushions of that couch had seen more than their fair share of action over the years, but Joe didn't let himself speculate on the sexual habits of Tim Rothchild.\n\n\"Come in, Joe! It's good to see you. I'm sorry I haven't been down since I got back from Paris, but things are always crazy this time of year. Am I right?\"\n\nTim Rothchild was an imposing man, though not in stature. He was barely five-foot-eight-inches in height coming in well below Joe's taller six-foot frame, but his eyes, cold and calculating, made him seem much more significant.\n\n\"I should be apologizing for just barging in on you,\" said Joe deferentially.\n\n\"Not at all. What can I do for you?\"\n\n\"I have to leave town for a few days on a personal matter, and I just wanted to give you a heads up.\"\n\nTim eyed him for several long seconds, making him feel more than a little uncomfortable.\n\n\"A personal matter...You haven't taken a vacation in five years, let alone a personal day. I suppose I would be quite the ogre to stop you.\"\n\n\"Thanks, I...\"\n\n\"Then again,\" cut in Tim, \"you are in the middle of the Hopkin's/Lerner deal. This would be a critical time to leave.\"\n\n\"I understand, but it would only be for a few days. A...A friend of mine passed away, and I want to attend the funeral.\"\n\n\"Trying to play on my sympathies, Joe? You know I don't have any,\" chuckled Tim. It was difficult to tell if he was joking or not. \n\n\"Sure...but trust me, pulling on your heartstrings is the last thing I would try to do. Assuming I could find your heart.\"\n\nTim gave him a stern look, but then burst out laughing, \"You couldn't. I keep it locked in the same vault with my conscience.\"\n\n\"Still, I do need the time away. I promise this won't compromise the deal.\"\n\nTim rose from his desk, coming around to put his arm on Joe's shoulder.\n\n\"I want you to keep your eye on the ball here, Joe. You're so close to the brass ring. We wouldn't want you to fuck it up now.\"\n\n\"I won't. Don't worry.\"\n\n\"Oh, I'm not worried, Joe. You blow this, and I can find three more kiss asses just like you waiting in the wings.\"\n\nThere was another awkward pause, and then once again, Tim was laughing, but in such an odd way that Joe was still not sure if he was joking or not.\n\n\"Right...I'll call you when I get back.\"\n\n\"Sure, sure. My condolences on the passing of your friend.\"\n\nHis boss almost managed to sound human when he said it.\n\nThe rain was coming down even harder as Joe pulled into the parking garage of his building. The high rise where he lived catered to the young urban professional types, and he didn't see so much as a kid or anything resembling a family on his way up. \n\nHe had been on so many trips packing was second nature, and he could have done it blind-folded. While digging in the back of his closet, his foot banged up against a long, heavy box on the floor. It had lain there for years, and it had been at least two since the last time Joe had examined the contents inside. \n\nHe paused, lifting the lid to reveal the shiny wood of his old Stratocaster. \n\nThe guitar felt strange in his hands. It had been so long since he had played it last that he wondered if he would even remember how, but muscle memory was a powerful thing. The chords came back to him like distant memories rising from the depths of his conscious, and he plucked the beginnings of an old love song he had written as a teenager. A song he had written for Bonnie.\n\nSuddenly, he was back on a park bench, the sun beating down on his shoulders. Bonnie was next to him, listening, her head cocked to one side.\n\n\"That's all I've got so far...\" he admitted.\n\n\"It's beautiful. What are you going to call it?\"\n\n\"I was...uh...Thinking about calling it,'Bonnie's Song.'\"\n\nShe could have laughed, it would have mortified him if she had, but he half expected her too. \n\n\"That would be so sweet of you. Will you play it someday when you're big and famous then afterward have to tell the story to some journalist about the girl who inspired this amazing piece of music?\" \n\n\"That's the idea. Assuming I ever get big and famous.\"\n\n\"You will,\" she said, reaching over to touch his hand.\n\n\"I think you have more confidence in me than I have in myself.\"\n\n\"You're going to be someone someday, Joe. I can see that plain as day.\"\n\n\"Plain as day...\" mumbled Joe back in his closet, the memory fading fast.\n\nHe hadn't become the musical legend he had imagined he would be, and what was left of that legacy now sat on his floor: a worn-out old guitar, some old CD's, and a notebook filled with unfinished songs.\n\nThere was one other thing, too, and he lifted the small photo album out blowing the dust off it. They were mostly pictures that Bonnie had taken of him at various gigs over the years. He hardly recognized the long-haired youth in the photos. In one, he was standing in front of some nameless bar, ripped jeans and Queen concert shirt adorning his slender body, cowboy hat on his head, and a diamond stud in one ear.\n\n\"Yeah. I was a real talent...\" he said, shaking his head and tossing the album back in the box.\n\nThe apartment where he lived was spartan in its decoration, nothing like the poster covered walls of his room as a kid. The most interesting thing in it was his old guitar, and he kept that tucked away. He sat on the couch, sipping on an imported beer, absently flipping T.V. channels on a big screen that practically owned one wall.\n\n\"Five hundred fucking channels and never shit on,\" he said in disgust, tossing the remote aside.\n\nA girl he had brought back here once had told him it looked like no one lived here like it was a display model or something. Joe could see what she meant now as his eyes wandered around the apartment.\n\nThis place, like his life, seemed drained of color. \n\n\"Fuck! I'm getting maudlin in my old age,\" he groaned, getting up to toss the beer bottle in the recycling and head to his bedroom for some sleep. A quick shower helped relax him for bed. He stood in front of the mirror, toweling himself off, proud that at forty-two, he was still in good shape, slender, well-muscled with just a hint of gray around the temples.\n\nThe alarm clocks dull orange glow was the only light in the room after he switched off the ones in the ceiling. Settling into bed, Joe closed his eyes and hoped to fall asleep quickly.\n\nHe had a long way to go.\n\nHOMEWARD -\n\nThe flight into Phoenix was just as bumpy as he remembered thanks to updrafts coming off the mountains that surrounded the valley below. Joe clung to his seat arms and kept his eyes closed the whole way down. In his youth, he had loved to fly, but there was something about passing forty that made a man more aware of his mortality. He was damn grateful when the wheels of his aircraft hit the tarmac, and he could finally relax. \n\nThe airport, Sky Harbor, as it was known locally, had changed radically from what he remembered. The place looked more like a high-end shopping mall now than an airport with rows of storefronts on either side of the concourse. He arrived at the baggage claim area and grabbed his suitcase off the twisting conveyor.\n\nBilly had offered to pick him up, figuring they could share the cost of the rental car, so he made his way outside to stand by the curb. The minute the glass doors slid back, Joe was slammed by a blast of dry heat that made it feel like he had just dove headfirst into an oven.\n\n\"Damn! Now I remember why I left. Why didn't they just build this city in the mouth of a volcano?\"\n\nJoe fished his cellphone out of his pocket, planning to call Billy when a blue sedan pulled up right in front of him.\n\n\"I knew I would recognize you, Joe, you've hardly changed except for the hair,\" said Billy Walker as he exited the driver's side.\n\nJoe couldn't say the same thing. The Billy Walker he had known in high school had been a tall, slender youth with a thick mane of blond hair. This Billy was something altogether different, and it was apparent that he had taken advantage of the perks of running a restaurant.\n\n\"It's good to see you, Billy,\" he replied, putting his arms as far around Billy's rotund body as he could.\n\n\"Wow! Joe Harper! I can hardly believe I'm looking at you.\"\n\n\"You too.\"\n\n\"Let's get out of this heat. I got the air conditioner set on full in the car,\" suggested Billy.\n\nJoe slung his suitcase and carry-on into the back seat before jumping in on the passenger's side.\n\n\"Shit! Was it always this hot?\"\n\n\"Probably. I think we were just too drunk to notice most of the time. I swear I saw a dog burst into flames on the sidewalk on the drive over.\"\n\nJoe chuckled as they pulled away from the curb.\n\n\"I told Tess we would drop our bags at the hotel and meet up at her place,\" advised Billy.\n\n\"Is Frank going to be there as well?\"\n\n\"Yep. He flew in last night.\"\n\n\"What about the funeral arrangements?\"\n\n\"They have a visitation tomorrow at 10:00 a.m. with the funeral immediately following.\"\n\nJoe nodded while looking out the window at the distant mountains. The red rock head of \"Camelback\" mountain brought back memories of hiking to the summit to look out on the city. He and Bonnie had been up there many times and once joked that they had joined the \"half-mile club\" by having sex near the top.",
        "\"You ever miss this place?\"\n\nBilly shrugged as he merged onto the freeway.\n\n\"It has its charms, but I like the milder climate in Northern California better. We had some good times here, though, didn't we? Remember that one time...\"\n\nThe pair spent the next twenty-minutes rehashing a story that they both knew well about the time they snuck a Garter snake into their biology class and turned it loose. The sight of old Ms. Thornwell, who was afraid of snakes, climbing up on her desk while cursing loud enough to wake the dead, left them in stitches for weeks. They arrived at their hotel, still laughing about it.\n\n\"Frank texted me he would be waiting in the bar,\" commented Billy after Joe rejoined him.\n\nFrank Palmer had been the kind of kid no one noticed. This, along with his quiet, studious personality had made him the perfect point man for the many jokes he and his friends had played in school. Back in the day, he had been a boy of medium height and build with rather dull-looking brown hair combed into bangs on his narrow forehead. The years hadn't changed him as much as Billy, but Joe noted that he had filled out and let his hair grow a bit, parting it in the middle now. The look in his green eyes hadn't changed though, a glint of mischief that hinted at more going on beneath the surface than presented itself to the world.\n\nHe had his back to the two of them when they entered while holding a beer poised to his lips, but when he spotted them in the mirror behind the bar, his mouth split into a grin.\n\n\"Son of a bitch! Crazy Joe Harper and Billy the Kid!\"\n\nBilly and Joe caught their old buddy in an awkward three-way hug as he launched himself off the stool toward them.\n\n\"Hey there, Frank,\" laughed Joe patting him on the back.\n\n\"Easy, Pal! If you knock me down, I doubt the two of you could get me back up!\" cried Billy jokingly.\n\n\"Wow...I can hardly believe we're standing here,\" replied Frank after collecting himself and backing off a step.\n\n\"I know what you mean. I wish the circumstances were happier ones,\" replied Billy.\n\n\"Yeah...Can I buy you guys a drink?\"\n\nThey each settled on a barstool, and Frank ordered another round of beers. When their drinks arrived, they raised a toast to their wild and crazy high school days.\n\n\"Man...I don't remember it being this hot,\" commented Frank leading to Billy and Joe sharing a look and a laugh.\n\n\"I hadn't noticed,\" deadpanned Joe.\n\n\"I guess only the girls could take the heat since Bonnie and Tess were the ones who stayed behind.\"\n\nBilly rubbed his jaw in thought, \"Bonnie's family have lived in the valley for three generations, so I'm not surprised she never left. I figured Tess would hit the road the first chance she got, but then she met Dale, and I guess that changed her mind.\"\n\n\"I still can't get over the idea of Tess Julewski being a mother of three.\"\n\n\"Four,\" corrected Frank.\n\n\"What?\"\n\n\"I had dinner with her last night since I came in early. She's five months along with her fourth kid. I think Dale might be Catholic or something.\"\n\n\"Holy shit! Four kids! That's a handful for sure.\"\n\n\"This I gotta see for myself. Let's finish up, gentlemen,\" suggested Joe.\n\nThe drive wasn't long, and within a short time, Billy pulled up in front of a charming looking two-story home in an affluent neighborhood. Joe rang the doorbell, and a few seconds later, the door swung open as if moved by an invisible force. It took a moment for the three men to look down and spot the real reason for it. \n\nStanding barely as tall as Billy's ample stomach, a dark-haired child of perhaps five looked up at the assembled men with a frown.\n\n\"Are you selling stuff? Daddy doesn't like people who do that...\"\n\n\"No, we aren't salesmen. We're friends of your moms. Is she around?\"\n\n\"Francis! I told you not to answer the door without me!\" came Tess's voice as she took the stairs as fast as her pregnant body would allow.\n\nShe hit the tiled floor coming to a brief halt to straighten her dress and run a hand through the thick, red curls on top of her head. Joe spotted a tattoo of a falcon on her upper arm before it vanished back into the sleeve of her blouse.\n\n\"Well...Well...Crazy Joe Harper and his band of misfits.\"\n\n\"Of which you were a member in good standing, Tess Julewski. If it wasn't for you distracting that security guard...What was his name?\"\n\n\"Martin. Toby Martin,\" she supplied.\n\n\"That was it! If you hadn't distracted him with your feminine wiles, I would never have been able to get into the faculty lot to swipe the vice-principals car.\"\n\n\"Oh! How I remember! Toby Martin had breath like a dog that had been licking its rear non-stop for a week,\" laughed Tess.\n\n\"He had a thing for you, though. The boy thought he was in love.\"\n\n\"What wasn't to love back then?\"\n\nThat was true enough. Tess Julewski had been one of the hottest girls at their high school. Petite, with a round face that contained a cute, upturned nose, large dark-brown eyes, and a generous mouth, Tess turned heads easily when she walked down the hall. Her beautiful face had been equally complemented by a smoking body that included a sweet pair of huge and very firm breasts. Things were not quite as firm as they had been, but three kids will do that to a woman. \n\nThe Tess Julewski that stood before her friends now was a much rounder, more matronly looking woman, but she was still stunning in the face.\n\n\"Come here, you hooligans!\" she shouted suddenly, darting forward to be engulfed by them all in a four-way hug.\n\nHer son looked on with his frown only getting bigger while a bunch of strangers mauled his mom.\n\nThey moved as a group into a sunken living room that was decorated with bulky oak furnishings that lent it an old-world feel. Just outside the sliding glass doors that led into her backyard, Tess's other two children, both boys that looked to be quite a few years older than Francis, threw a ball back and forth between them.\n\n\"This is a beautiful house, Tess, and clearly, motherhood agrees with you,\" commented Joe.\n\n\"I can hear the surprise in your voice. I never thought I was the settling down type, but life never quite works out the way you think it will.\"\n\n\"I know that all too well,\" thought Joe.\n\n\"Take you, for instance. I fully expected to see your name on a concert billboard one day.\"\n\nJo gave a wane smile, shaking his head.\n\n\"I was never that good.\"\n\n\"Bonnie thought you were.\"\n\nA heavy silence followed the mention of their deceased friend.\n\n\"I was good for around here, but things get a lot harder when you start competing out in the real world. Anyway, I'm happy where I'm at.\"\n\n\"King of the financial world?\" suggested Billy sounding less than convinced.\n\n\"Well, maybe not king, but working my way up.\"\n\nTess watched his face with a look of motherly concern that was different from any expression that Joe had ever seen on her pretty features. It seemed almost alien to him. She smiled after a moment and shrugged.\n\n\"I'm not criticizing, Joe. If you say you're happy, who are we to pass judgment? It just seems an odd fit for you compared to the Joe Harper we use to know. Then again, who would have seen Frank here as a tech guru?\"\n\n\"I wasn't completely hopeless back in school!\" laughed Frank with fake anger.\n\n\"Sure, you weren't. Did you notice that your shoe is untied?\" said Billy with a raised eyebrow.\n\n\"I can do it myself...\" shot back Frank with a wink, bending over to secure the offending laces.\n\n\"Right over left, my friend.\"\n\n\"Screw you, Billy.\"\n\n\"Guys! Language!\" snapped Tess.\n\n\"Sorry, Tess. Though I seem to recall you cursing like a sailor back in the day.\"\n\n\"I have no fucking clue what you're talking about.\"\n\n\"Mommie!\" yelled Francis from the kitchen.\n\n\"Go play in your room, Francis...and Mommies sorry,\" she called, \"Little bastard has ears like an elephant...\"\n\nThey all laughed.\n\n\"When does the old ball and chain get home? I'm looking forward to meeting the man that could tame the 'Wild Thing.'\" asked Billy, referring to Tess's nickname in high school.\n\n\"Sadly, Dale had to leave on a business trip this morning.\"\n\n\"That's too bad. I bet he would have some stories to tell.\"\n\nBefore Tess could comment, Frank broke in, \"Does this mean we're eating in tonight?\"\n\n\"Feeling hungry, Frank?\" \n\n\"I could eat. I overslept and missed breakfast, so I'm down a meal today.\"\n\n\"I think Billy could stand to be down a meal,\" chuckled Joe.\n\n\"Hey, now! I'm on a diet. These things take time.\"\n\n\"Don't worry, Guys. My next-door neighbor is going to watch the kids while we get some adult food. We just need to wait for our last guest.\"\n\n\"Someone else is coming?\" asked Joe.\n\n\"Marta North is going to have dinner with us. I offered as a courtesy, and I admit she surprised me by accepting. I figured with the funeral tomorrow, she would be caught up in all that mess, but I guess not.\"\n\n\"Do you know her well?\" questioned Billy.\n\n\"Not really. Bonnie and I may have lived in the same town, but we drifted apart after high school. I did bump into her occasionally, but we weren't close socially. She ran in a different circle. I think I've seen Marta half-a-dozen times over the years. I'll say this much the apple didn't fall far from the tree.\"\n\nAs if on cue, the front doorbell rang, and Tess ponderously pulled herself up from the couch to answer it. Joe watched her leave the room, his heart picking up speed in his chest. Oddly, he felt very nervous at the prospect of meeting Bonnie's daughter. \n\nThe front door opened and shut, and he could hear the women's voices in the hallway. Tess's he knew well enough, and the other had a gravely quality to it like Stevie Nicks. Bonnie's voice had always been clear as a church bell, so he wondered what other differences her daughter would display. It turned out that looks weren't one of them.\n\nThe minute Marta North entered the room, Joe froze, not able to take his eyes off her. It was almost like seeing a ghost, and for just a second, he thought Bonnie had returned from the grave only twenty years younger. Then the young woman stepped out of the shadows of the entryway, and the differences started to become more apparent, but not in a bad way.\n\nThe apple had, indeed, not fallen far from the tree at first glance. Marta had light blond hair like her mother, but less curly hanging like a mane around her face. Her eyes were the same hauntingly beautiful shade of bright blue the exact color of a summer sky. The shape of her mouth mirrored her moms, but Marta's lips were even more full and sweet looking sitting beneath a slightly upturned nose. As she stepped down into the living room, it dawned on Joe that she was quite a bit taller than Bonnie had been, maybe two or three inches making her closer to five-foot-seven or eight. Her body was slender, skin darkened by time spent in the sun, with perky but not overly large breasts exposed in the low cut green dress she was wearing.\n\nAll eyes were on Marta as she came to a halt. \n\n\"Um...Hi...Frank Palmer. I was a friend of your moms,\" said Frank awkwardly, introducing himself first since he was the closest.\n\nMarta turned her gaze on him, and he fidgeted like a grade school kid caught sneaking candy out of his desk. Her look had an almost palatable intensity too it leaving Frank uncertain of what to say next. Then a radiant smile lit her face, and all that intensity seemed to vanish.\n\n\"Mr. Palmer. It's a pleasure to meet you. My mother always spoke very fondly of you.\"\n\nJoe looked on as Marta shook hands with Frank, slipping one long-nailed hand into his. Then she moved on to Billy, who bravely went in for a hug, which she graciously returned. When his turn came, Marta marched right over to him, and he stuck out a hand.\n\n\"Hey. I'm Joe Harper I...\" he started to say, but the words died when Marta marched right past him, ignoring his hand and instead walked around him in a tight circle. He kept his eyes on her as best he could while she circumnavigated her way back in front of him again.\n\n\"Uh...Is something wrong?\" he asked, not sure of what to make of her behavior.\n\n\"Sorry. I was checking for wings. After all the stories I've heard about you, I just assumed you could fly.\"\n\nJoe had no idea how to answer that, but Marta killed the tension in the air by breaking out into a staccato laugh while taking his still extended hand in hers.\n\n\"It's nice to meet you, Joe Harper. Or should I call you, 'Crazy Joe,'?\"\n\n\"Joe is fine. I think my crazy days are long behind me.\"\n\n\"That's too bad,\" she replied, still holding his hand. Hers was warm, the skin silky and smooth. The look she was giving him now was back to the intense scrutiny she had displayed when she first came in, and it disconcerted him greatly.\n\n\"I might need that hand later,\" he said jokingly.\n\n\"Of course...\" she said, laughing again as she released her grip.\n\n\"We were all very sorry to hear about your mother,\" said Billy from behind.\n\nMarta turned her head and nodded back at him, \"Thank you. I'm glad that you could all come. It would have made my mother very happy to know that you took time out of your busy work schedules to be here to celebrate her life.\"\n\n\"It was the least we could do. It may have been quite a few years, but your mom was a very important part of all our lives,\" offered Joe.\n\n\"Some more than others...\" Marta said when she turned back toward him, in a voice so quiet he doubted the others heard.\n\nJoe shifted nervously in place, wondering how much Bonnie had told her daughter about their relationship.\n\n\"We were just talking about getting some dinner,\" said Frank.\n\n\"I made reservations at a Chinese place if that's o.k. with everyone?\" \n\nTess eyed the group and waited.\n\n\"I'm starved,\" said Marta simply, pivoting on one heel and walking back the way she had come.\n\nJoe found he could breathe again when her eyes weren't on him, but his feelings of discomfort returned when he was forced to abdicate the front passenger seat to Tess. This maneuver put him in the back where he was pressed very close to Marta, who, in turn, was wedged in between himself and Frank. In the tight confines of the car, her perfume was very noticeable and very alluring. Joe tried, without success, not to stare at her perfectly sculpted bare legs that jutted out the bottom of her dress. \n\n\"So, Marta. You seem to have the advantage here. You know something about us, but we know very little about you,\" remarked Billy. \n\n\"There isn't much to know. I graduated from Arizona State last fall with a degree in biology. I recently started a job with the state studying the effects of last year's wildfires on the wildlife in the Coconino national forest.\"\n\n\"You must like being outdoors.\"\n\n\"I thought the tan gave it away,\" joked Marta.\n\n\"In this city? I'm guessing people here turn brown in ten minutes or less like meat on a spit,\" commented Frank.\n\n\"It's cooler up north where I spend a lot of my time.\" \n\n\"You're your mother's daughter. She loved the outdoors. Hiking was her thing.\"\n\nMarta turned her head toward Joe, smiling so much like her mother that he was taken back twenty-five years.\n\n\"Mom gave me a love of the outdoors and rock music. She used to tell me tales of your band.\"\n\n\"Bonnie, your mom, she was very tolerant of what I optimistically called music back in the day.\"\n\n\"Oh...I think you're selling yourself short. Mom played me some recordings she had of your stuff. It was terrific.\"\n\n\"Bonnie, kept recordings of my music?\"\n\n\"You sound surprised?\"\n\nJoe looked out the window, trying to hide just how surprised he really was by this revelation.\n\n\"I just didn't know any still existed, that's all.\"\n\n\"Maybe it's not too late to go for that album deal, Joe?\" said Billy from the front seat.\n\n\"I believe that ship has sailed.\"\n\nJoe felt a hand on his leg, and he turned away from his perusal of the passing scenery to look once again into Marta's pretty blue eyes.\n\n\"My mom always said once the music is in you, it never goes away.\"\n\nThe words flowed over him, said with such conviction that for a moment, he wanted to believe it was true. Marta's eyes were hypnotizing and try as he might he couldn't stop starring into them. The truth was even as much as Marta resembled her mother, her looks improved on those inherited characteristics in every way. She was so beautiful it was almost intimidating, and the strength of her personality made her even more alluring. Joe's mouth was suddenly dry, and he finally tore his eyes away from hers with an effort.\n\n\"What's a matter with me? I should be ashamed for even thinking about Bonnie's daughter,\" he thought.\n\nMarta removed her hand from his leg, and he was grateful for that given the effect that just her presence was having on him. \n\nThe interior of the car seemed just as hot as the desert air outside to Joe, and he felt a sense of profound relief when Billy turned into the busy parking lot of a Chinese restaurant called, \"The Flying Dragon.\"\n\nHe held the door for Marta while she exited the car and fell in behind her and Tess as they walked to the door. The two women were talking, but he couldn't quite hear what they were saying over the sounds of cars driving on by them. Marta threw a look at him over her shoulder at one point, and he nearly stumbled while stepping up onto the sidewalk with his attention distracted by her flashing blue eyes.\n\n\"You used to be the athletic one,\" chided Frank when he reached out to steady Joe.\n\n\"Right...I guess I'm getting old,\" he replied.\n\nFrank smirked at him and patted him on one shoulder before walking away.\n\nJoe could have never explained the real reason for his unsteady feet. It would have seemed so inappropriate, and it did even to him, but he realized he was reacting to Marta the same way he had to her mother so many years ago. Then it had been the freshmen mixer at school, and he had run into a young Bonnie North at the punch bowl. He had been wearing a vintage Pink Floyd t-shirt, and they had struck up a conversation about the band. From the get-go, he had been haunted by her eyes and the way she smiled at him. It had been a miracle that he had made it through their chat without passing out. Afterward, he had fled back to his friends, and that might have been the end of it if his buddy, Terry, hadn't noticed Bonnie and made noises that he was going to asked her to dance. In a panic at the thought of losing her attention to Toby Fleischman, Joe had plucked up his courage and asked her to the dance floor himself. He had no idea at the time how that one dance was going to change the next five-plus years of his life.\n\n\"You know they don't serve food out here on the sidewalk?\"\n\nJoe was jerked back to reality, and it dawned on him that he had been standing alone daydreaming while the rest of the group had entered the restaurant. Billy had come back for him and looked at him with almost brotherly concern.\n\n\"Is everything o.k.?\"\n\n\"Sure...I guess I was just a little thrown at meeting Marta.\"\n\n\"I know. It is ghostly. In the right light, she's the spitting image of Bonnie.\"\n\nPerhaps that was what was throwing him as well? That maybe he was having flashbacks to his feelings for Bonnie, but it seemed like something more. Whatever it was, Joe resolved to shake off these odd feelings and try to enjoy his dinner.\n\n\"Come on. Let's eat,\" he said, throwing an arm around Billy and leading him toward the entrance.\n\nTess had made a good choice. The food was excellent, and despite the somber occasion, conversation flowed smoothly around the table. Marta constantly laughed as the old friends regaled her with tales of their more outrageous exploits in high school, many of which prominently featured her mother.\n\n\"Seriously? She mooned a bus full of football players?\"\n\n\"It was a homecoming, and they were our biggest rivals,\" explained Joe with a grin.\n\n\"She hung it proudly out the window of Joe's Mustang,\" said Tess laughing.",
        "\"Don't get me started on the night she and Tess tried to toilet paper Rhonda Beckett's car at the 'Golf and Fun,'\" threw out Frank.\n\n\"'Golf and Fun.' That brings back memories. If I had a dime for every night we spent at that place,\" said Billy.\n\n\"Except nobody ever called it 'Golf and Fun,' it was always 'The Castle,' back in those days.\"\n\nTess nodded at Joe.\n\n\"It's still called that today by the kids since that's exactly what it looks like.\"\n\n\"Wait! Golf and Fun is still a thing?\"\n\n\"Yep. I think it's changed owners and names a half-dozen times, but it still exists. I even take my kids miniature golfing there every once in a while.\"\n\n\"Guys! We have to go. For old times sake,\" said Frank excitedly.\n\n\"Um...I don't know if that is a good idea,\" commented Joe while looking at Marta. It seemed to him a bit insensitive to be going on a nostalgic miniature golfing trip the night before her mother's funeral.\n\n\"Oh, don't mind me. I love a good game of miniature golf,\" said Marta calmly, around a bite of her sesame chicken.\n\n\"Then it's decided,\" crowed Frank sitting back in his chair.\n\nJoe picked up the tab for dinner over the protests of his friends, and in no time he was back in the car with Marta trying to keep his attention focused out the window this time. He spotted the bright lights of the mixed entertainment center his friends had always called, \"The Castle,\" long before the exit off of the freeway came up. The place did look nothing more than like a faux-medieval castle complete with turrets and a large wooden draw bridge that led over a shallow pond/moat and into the main entrance. The inside was two circular stories of video games and pinball machines with pool tables and air hockey tables in the middle of the lower floor. Outside, three separate miniature golf courses surrounded most of the establishment with a go-kart track off to one side. \n\nThe place was crowded on a Friday night, and it took some time for them to secure clubs and balls. Joe stopped at the restroom running into Marta, who was exiting the ladies' room as he walked back up the short hallway. They stood waiting patiently for Frank and Billy to get out of line.\n\n\"I'm fine,\" she blurted.\n\nJoe resisted the temptation to say, \"You sure are...\" It was the kind of joke her mother would have rolled her eyes at but still laughed. \n\n\"I beg your pardon?\"\n\n\"You keep looking at me funny. I was thinking you must be wondering why I'm not sitting home, crying my eyes out, having just lost my mother.\"\n\n\"Oh...I...Well, I figure everyone deals with grief in their own way,\" said Joe while thinking that his looks had nothing to do with any expectations of Marta's grief.\n\n\"My mom taught me that getting upset about inevitable things like death is a waste of time. It comes for us all sooner or later. I think she would have been unhappy at the thought of me making a fuss over her, but I do admit I did my fair share of crying at the outset. I think now I'm just ready to remember the fun things I always loved about her, and you guys are giving me another wonderful outlet to do that.\"\n\nThat sounded like vintage Bonnie. She had always been the pragmatic one of the group.\n\n\"So, from what you said in the car, I gather you don't still play guitar?\"\n\n\"No...I still have one, but my job keeps me busy. I haven't picked it up in years.\"\n\n\"The way my mom talked about you, I pictured a guy with long hair and tattoo's adorning his arms. A rocker with a heart of gold type.\"\n\nJoe laughed, shaking his head, \"I think your mom's memories of me are just that. I'm not that guy anymore.\"\n\n\"The 'Crazy Joe Harper,' she knew is long gone?\"\n\n\"I put that guy to rest many years ago. I would have imagined that Bonnie would have been happy to hear it. She was on me to grow up at the end.\"\n\n\"Grow up, maybe, but not give up. The way Mom described you, I think she wanted to see you embrace your talent but do it maturely.\"\n\n\"Did she...ever say anything about me?\"\n\nIt was a question he had been dying to ask but equally afraid to voice. \n\nMarta seemed lost in thought for a moment and then started to answer, but before she could, Frank and Billy returned with Tess in tow.\n\n\"Time to see if you still have that magic stroke, Harper!\" said Billy tossing a club to Joe.\n\nRegretfully, Joe moved off stealing one last glance at Marta and hoping they could continue this conversation some other time.\n\nFUNERAL FOR A FRIEND -\n\nThe following morning, Joe had awoken early and gone down to breakfast alone, wanting to have a little quiet time to get his thoughts together before the funeral. The night before had been surprisingly fun. He and his old friends had fallen right back into the same playful banter that had characterized their high school years together, and Marta had proven to have just as sharp a wit as her mother more than holding her own. The five of them had played a tightly contested round of miniature golf with Joe winning over Frank by a single stroke. Afterward, they had all gotten ice cream together at a shop next door just as they would have as kids. It was a nostalgic night that had left him with a happy feeling laced with just a bit of melancholy.\n\nAt the end of the evening, he had walked Marta back to her car when they had returned to Tess's house. He was not at all surprised to find out the gorgeous young lady drove a vintage 1972 Mustang Mach 1.\n\n\"It was my mom's. She said it was like the car she lost her virginity in.\"\n\nJoe had blushed bright red at that recalling that it was he who had taken it.\n\n\"You don't say...Uh...It's a beauty for sure...\" said Joe stumbling over his words.\n\nMarta fumbled around in her purse for her keys before looking back up.\n\n\"You were asking me earlier about my mom...about whether she talked about you. I'm guessing you want to know how she felt about where you left things?\"\n\n\"We didn't part on the best of terms...\" admitted Joe.\n\nMarta smiled, \"Rest easy, Joe Harper. She never held a grudge. I think deep down she wished things had worked out better between you, but life doesn't always go the way we expect.\"\n\nHe blushed at her words and even more so at her scrutiny as she looked him up and down.\n\n\"Mom always told me you were a handsome fellow. I can see she didn't exaggerate.\"\n\nJoe looked away, laughing nervously.\n\n\"Yeah, well, you should have seen me back in the day before I got old.\"\n\n\"You don't look so old to me.\"\n\nHer flirty words hung in the air, and Joe swallowed hard, trying to calm his racing heart. This was starting to edge into bizarre territory. Was she flirting with him, or was it just wishful thinking on his part? Even if she were, wouldn't pursuing it be morally questionable? This was the daughter of his ex-girlfriend, and for that matter, how much of the attraction he was feeling had to do with her resemblance to her mother? It certainly wouldn't be fair to her if the only reason he felt this way were due to some transference of affection or just nostalgia for the woman that got away.\n\nThe thoughts whirled around inside his head, making him feel dizzy and disoriented.\n\n\"It's getting late. You drive safe in that firecracker. No speeding!\" he admonished with a wag of his finger.\n\nShe laughed at his concern before getting into her car. \n\n\"It was nice to meet you, Joe. I hope to see you again before you leave.\"\n\n\"Sure...\"\n\nMarta had started her car that roared to life like some enraged dinosaur before rumbling off into the night.\n\nJoe had struggled to get to sleep when he got back to his hotel. His dreams had been filled with images of Bonnie in her youth that culminated with her morphing into Marta at the end. They had been on a quiet stretch of beach holding hands.\n\n\"This seems like a bad idea,\" he had said to her.\n\n\"You're worried that you're thinking about my mother,\" she had said.\n\nHe nodded.\n\n\"It's o.k., Joe. I am my mother, but I'm so much more...Is there anything wrong with falling for us both?\"\n\n\"I don't know. It just seems wrong.\"\n\n\"Don't overthink things...You want to kiss me, don't you?\"\n\nHer full lips parted, and he felt himself moving toward her despite a sinking feeling of guilt that burned in his stomach. \n\n\"Marta...\" he breathed as their mouths started to come together.\n\nThen, suddenly, his arms were empty, and she was gone, vanished. He turned wildly around, but he was alone on the beach with just the crashing waves. A deep sense of loss overwhelmed him, and he fell to his knees, crying and making fists in the loose sand. \n\nThe dream had left him feeling supremely unsettled.\n\nWhat was it supposed to mean? That he missed, Bonnie? That he was afraid, his life had turned out all wrong because she hadn't been a part of it? Maybe that he had lost some part of himself when he had turned his back on being a musician?\n\n\"Or am I just feeling guilty because I got all hot and bothered by her daughter last night...\" he thought, running a spoon angrily around the inside of his coffee cup.\n\n\"What did that coffee ever do to you?\" asked Billy, sitting down across from him.\n\nJoe ignored the comment dropping his spoon onto a napkin.\n\n\"Where's Frank?\"\n\n\"I don't think he's a morning person. I wouldn't worry. I'm sure he will be ready for the funeral.\"\n\nBilly ordered a plate full of food and sipped his cup of coffee while he waited.\n\n\"Can I say that you look a little rough this morning? Didn't you sleep last night?\"\n\n\"I can never sleep well in hotel room beds. They don't feel right,\" lied Joe.\n\n\"Me, I love 'em. Especially with the right woman between the sheets with you. Did you see that maid out in the hallway this morning?\"\n\nBilly launched into a story about how he had spent a wild night with a Hispanic house-keeping lady at a restaurant trade show in Dallas that left little to the imagination. It was a tale made more embarrassing by the fact that he kept right on telling it even when the female waitress came back to freshen his coffee.\n\nFrank finally joined them just as Billy shoveled in the last morsel from his plate.\n\n\"Do you want us to wait while you order?\" asked Joe.\n\nFrank barely stifled a yawn, not at his best yet.\n\n\"Nah...I don't mind eating alone. You two should get ready. I'll probably get some fruit or something.\"\n\nJoe ended up finishing well ahead of his friends and waited impatiently in the lobby for them to show up.\n\n\"Sorry...Frank couldn't find his tie...\" explained Billy throwing him an irritated look.\n\n\"My wife organizes my stuff,\" he apologized with a shrug.\n\n\"Does she tie your shoes too?\"\n\n\"Obviously not...\" mumbled Frank, but he glanced down to make sure they hadn't come undone, making Joe roll his eyes toward the ceiling.\n\n\"Come on, you two. It's impolite to be late for a funeral.\"\n\nThe church was filled with people Joe didn't recognize, and it occurred to him that as much as he felt like he knew Bonnie, he had been only a small part of her journey. The number of friends and acquaintances in attendance must have been close to two-hundred. Upfront, he spotted Marta standing near a large portrait of her mother, shaking hands and trading hugs with people as they stopped to express their condolences. He drew closer and saw that there were two portraits arrayed side by side; one had been hidden by Marta. The first portrayed the girl he remembered, all curly-haired and smiling tolerantly at the world as if quietly amused at everyone's antics. The other was of a much older woman that he had never known whose cares were etched into each line on her face. \n\nBilly took the lead, followed by Frank and Tess. They each stopped and said a few words of support before backing away and leaving Joe as last up to bat.\n\n\"Marta. How are you holding up?\"\n\nShe had been looking sad and melancholy when he had walked up, but as soon as she was hidden from the rest of the church, she favored him with a slight smile.\n\n\"I think most of these folks are here for themselves. They say all the right words, but I can tell they would rather be someplace else, and it bothers them that I'm not a crying mess on the floor.\"\n\n\"At least they came. I'm impressed with how many people your mother knew,\" he admitted thinking he had virtually no real friends in New York and wondering just who would bother to show up at his funeral when he eventually had one.\n\n\"You know, Mom, social butterfly...I honestly can't wait for this to be over. I should have thrown a wake that would have been more Mom's style, but my grandmother would have had kittens,\" she said, indicating a frail-looking woman in the front row.\n\nJoe nodded at Beatrice North, but she refused even to acknowledge him. He wasn't surprised she hadn't exactly been his biggest fan when he and Bonnie had been together.\n\n\"Hang in there. When it blows over, you are welcome to come to hang out with us misfits.\"\n\nShe smiled again and leaned up for a hug.\n\nLooking over Marta's shoulder, he noticed for the first time there was no casket.\n\n\"I had mom cremated straight away. It was what she wanted,\" explained Marta.\n\n\"Right...very sensible...\" \n\nJoe went and sat with his friends and waited for the service to start.\n\nIt was a typical Methodist service, straight to the point and without a lot of ceremonies. He thought Bonnie would have appreciated something with more pizazz for her memorial. This was much too somber, in his opinion. \n\nThe piano music had barely faded when he found himself standing on the front lawn of the church secretly wishing for a cigarette. He had kicked the habit ten years before, but in times of stress, the urge came back with a vengeance.\n\n\"Did you notice how close we are to the old campus?\" asked Billy walking up to him and kicking at a clod of dirt on the ground.\n\n\"Yeah. My bus used to take me right by this church every morning my freshmen year.\"\n\n\"We should stop by and see what it looks like now,\" suggested Frank.\n\nTess and Marta exited together and came over to the three loitering men.\n\n\"Frank and Billy were pointing out that we are close to the high school. Want to check it out?\" \n\nTess shrugged, but Marta was willing to go anywhere as long as she didn't have to listen to feigned grief from any more distant relatives.\n\nThey piled back into the rental car and drove just five blocks away parking across the street from their old campus.\n\n\"Harmon High School...Was it always this small?\"\n\n\"I think it's the same size, Billy. You got bigger.\" \n\nBilly chuckled, \"Fat jokes...Sure, go for the easy laugh.\"\n\nThey stopped under the flag pole that marked the exact center of the vast lawn in front of the three-story-tall main building. \n\n\"I can see my homeroom from here. Ms. Bigsby's first period U.S. history the highlight of my senior year. What a boring way to start the day,\" said Frank.\n\n\"It could have been worse. You could have been in economics first period with me...Uggg,\" said Joe with a fake shudder.\n\n\"You know what I want to see? Whether my old locker is still there,\" threw out Tess starting in the direction of what had then been known as the senior \"locker pod,\" a collection of rows of steel lockers inside an open-air, brick structure with a metal roof that made a God awful noise when it rained. Everyone else followed along behind, but they never made it. \n\nThe group had only covered about half the distance passing the main building and turning into the gap between that one and the two-story building behind it that housed the old science classrooms when a strange whirring noise like an electric car reached their ears. From down the sidewalk, they all turned to stare dumb-founded at a man with a bike helmet riding a Segway and trying to look deadly serious as he closed the distance. \n\n\"It can't be...\" said Billy.\n\n\"I'm pretty sure it is...Tess?\"\n\n\"I see him. Toby Martin. I can't believe he still works here.\"\n\n\"It looks like he changed out his moped for an even more ridiculous looking ride,\" pointed out Frank, reminding them all how their security guard nemesis from the past had patrolled the campus on the back of a rickety-looking moped scooter.\n\nHe swooped past them, struggling to control his more advanced transport, finally managing to turn around and halt a few steps away.\n\n\"You people are trespassing on school property. What's your business here?\" said Toby trying to conjure a voice of authority.\n\nJoe was so taken aback by the sudden appearance of this specter from his past he couldn't answer at first. The years had not been kind to Toby. His hair, thinning even back in his twenties, was almost non-existent now just a few wispy looking blond strands jutting out from under his helmet. He had gained considerable weight most of it in his gut, and his face had the florid complexion of a man who drank far more than was good for him.\n\n\"Relax, Toby. Were taking a trip down memory lane,\" said Billy.\n\n\"Do I know you, Mister?\"\n\n\"It's Billy Walker. I used to go to school here back in the day. I'm sure you must remember me,\" replied Billy with a glint in his eye.\n\n\"Walker...Walker...You were that smart ass kid that stole the spark plugs out of my moped and then chained it to the bike racks.\"\n\n\"Ah! You do remember. I'm touched.\"\n\n\"Do you remember me, Toby. Joe Harper.\"\n\nToby looked Joe up and down, a faint flicker of recognition in his eyes.\n\n\"I remember you a bit. You were even worse than Walker, as I recall. Didn't I send you to the principal's office a dozen or more times?\"\n\n\"Not sure...I lost count, but you have the right guy.\"\n\n\"I don't care who you are. This campus is off-limits without a guest pass from the office and an escort. I don't see no escort, so I'm guessing it's safe to assume you ain't got no pass neither.\"\n\n\"Look, Toby. We were checking out the old campus. We won't hang around long,\" said Frank.\n\n\"You won't hang out at all. If you're not off this property in five-minutes, I'm calling the police.\"\n\n\"Easy there, Deputy Dog, we aren't here to cause any trouble,\" laughed Billy, his voice dripping with sarcasm.\n\nToby's face clouded over, \"Make that three minutes...\"\n\n\"Toby...We are just here to look around and leave,\" said Tess stepping to the front.\n\n\"I don't give two shits what you think you're doing. It's now two-minutes.\"\n\n\"There is no call to be rude to the lady,\" said Frank in an angry tone.\n\n\"One minute...\" said Toby, reaching to pull a cell phone from his pocket.\n\n\"Okay...Okay! You win! Everyone back to the car!\" said Joe in exasperation.\n\nThey beat a hasty retreat back toward their car with Toby trailing behind them, making sure they left. \n\n\"Wow...What an asshole. Was he always this way?\" asked Marta.\n\n\"Sadly...Yes, and the years have not mellowed him a bit,\" replied Joe as they got in the car.\n\nBilly watched the old security guard out the window while Joe turned the car around and headed back toward the church.\n\n\"You know we always said we were going to steal his moped and hoist it up the flagpole. I bet that Segway would be even easier...\"\n\nHe let his voice trail off while looking at Joe intently.\n\nIt didn't take long for him to pick up on the mischievous look in his old friend's eyes.\n\n\"No, Billy. Absolutely not...\"\n\n\"Come on, Joe. One last prank. This could be the final chance for us to put one over on old Toby.\"\n\n\"We aren't kids anymore, Billy. We could get in serious trouble if we get caught.\"\n\n\"Since when did Crazy Joe Harper worry about getting caught? What happened to the boy with balls of steel?\"\n\n\"He grew up and got a life,\" said Joe.\n\n\"I think Billy's right,\" said Frank from the back.\n\n\"You parroting Billy, some things never change...\"\n\n\"I hate to sound like I'm jumping on the bandwagon, Joe, but...when did you become such a pussy?\"\n\n\"Jesus! Tess! You too? Give me some help here, Marta. Talk sense to these clowns.\"\n\n\"Actually, I've always been a little jealous I didn't get to be involved with one of my mom's capers.\"",
        "\"You have got to be kidding me? All of you want to do this thing?\"\n\nJoe pulled the car over to the side of the road turning in the seat to take in the group as a whole.\n\n\"Seriously? You want to pull a prank like when we were kids?\"\n\nThere was a general outpouring of affirmations from everyone. \n\nJoe shook his head, hardly able to believe he was even contemplating this thing, but it was put over the top when he saw the excitement in Marta's eyes at the prospect. It reminded him of those rare times when Bonnie would get fired up about one of his schemes and jump in enthusiastically to help.\n\n\"Fine...You guys are nuts! But, fine, I'm in.\"\n\n\"That's the Joe Harper that I remember!\" said Billy slapping him on the shoulder.\n\n\"Right...First, we need a plan. I'm guessing that he probably keeps that contraption locked up in the same place he used to keep his moped, next to the security office.\"\n\n\"Can you still pick a lock?\" asked Frank.\n\n\"Maybe...but I don't have any tools.\"\n\n\"I have a set of lock picks at my house,\" commented Tess.\n\n\"Really?\"\n\nShe shrugged, \"Souvenir from a misspent youth.\"\n\n\"Then all we need is some steel cable to hang that thing and a distraction.\"\n\n\"Frank and I can get the cable from a hardware store,\" offered Billy.\n\n\"How about it, Tess?\"\n\n\"Oh! Sure! I could see by the way Toby was looking at me older pregnant ladies aren't his thing guys.\"\n\n\"Well...We do have one other asset available,\" reasoned Joe.\n\nEvery head in the car swiveled to look at Marta.\n\n\"Uh...I'm not exactly dressed for distraction.\"\n\n\"You couldn't change into something more...uh...distracting?\"\n\n\"I didn't exactly come to town for a funeral with my travel bag stuffed with slut clothes, but I could run and buy something that would work.\"\n\n\"Okay, here's the deal. We split up with Frank and Billy getting the cable and then taking Tess back to her place to grab the lock picks while Marta and I pick her up and outfit, and I fill her in on Toby's weak spots. We meet back at the church parking lot in two hours for final planning. Sound good?\"\n\n\"I so want to play the Mission Impossible theme right now!\" joked Frank.\n\n\"Let's hope we don't get caught. I didn't come all this way to get my butt thrown in jail.\"\n\nJoe drove back to the church and turned the keys to the rental over to Billy, who gave him a high five and drove off with Frank and Tess. He joined Marta in her souped-up Mustang, the whole thing shaking when she turned the key.\n\n\"Is it wrong that I'm so excited my hands are shaking?\" said Marta with a grin.\n\n\"Keep holding on to that enthusiasm. You'll need it if this goes sideways.\"\n\n\"I'm not worried. I have Crazy Joe Harper on my team!\"\n\n\"Your confidence in me may be misplaced. I'm very out of practice.\"\n\n\"I'm sure it's like falling off a bike.\"\n\n\"That isn't reassuring at all, but thanks for trying.\"\n\nMarta drove them over to a department store at a nearby mall, and Joe followed her inside. Their arrival in the women's department brought back unexpected memories. Back in the day, he had often joined Bonnie on her shopping trips, trying to make up for her having to sit through his gigs by keeping her company while she tried on clothes. It was pretty dull for him, though occasionally he was treated to seeing her in something at least a little sexy or revealing. \n\nIn this particular instance, with Marta, that was guaranteed to be true.\n\nHe waited patiently while she ran through the racks looking at this and that before vanishing into a changing room. There were some seats by the triple mirrors where women could come out to check their look, and he took one, idly going through the messages on his phone.\n\n\"Crap! I need to call Tim back...\" he grumbled, noticing he had missed several calls from his boss with his phone off for the funeral.\n\n\"What about this one?\" asked Marta.\n\n\"Hm...\" said Joe glancing up.\n\nHis eyes bugged out at the sight in front of him. \n\nMarta had chosen a very low cut and slinky black party dress whose V-neck plunged almost to her belly button, revealing more than a little of her tanned skin and the sides of her perky breasts. The bottom of the outfit stopped well above her knees, showing plenty of her legs.\n\n\"Uh...Yeah...That would do the trick,\" gasped Joe.\n\n\"Think so? Could you zip me up? I want to make sure it fits across my shoulders.\"\n\nNervously, Joe stood from his chair and came over to where Marta was standing surrounded by mirrors on three sides. He came up behind her just as he had her mother on more than one occasion doing precisely as he was now, and with trembling hands, he just managed to find the zipper and move it to the top. Marta took a half step back, admiring her reflection. It hit Joe that the first time he had asked Bonnie out had been on one of these clothing trips when they had still just been friends. \n\nMarta's perfume wafted up his nose, making it even harder to think straight.\n\n\"Are you sure this works? Does it seem too tight?\"\n\n\"That's part of what makes it work. You look stunning in it. No man could take his eyes off you.\"\n\nMarta smiled at him in the mirror, looking so gorgeous it took his breath away. \n\n\"So if you were Toby, you would be well and truly distracted?\" she asked, leaning back even more, so that she made contact with Joe's chest. He barely resisted the urge to slip his arms around her slender waist and instead coughed uncomfortably, feeling more than a little arousal heating up inside him. \n\n\"Trust me. You've got the part nailed. We...we should probably go,\" he said, his voice cracking like a pre-pubescent teen.\n\nMarta seemed to sense his nervousness, and she turned around to face him.\n\n\"Help me with my zipper?\" she asked while her smile took on an even more serious edge.\n\nJoe could have asked her to turn around, but it occurred to him that wasn't what she wanted. Taking a deep breath, he sidled up close enough to get his arms around her, finding the zipper and sliding it down while her body pressed to his chest, and her perfect lips hovered just inches below his own.\n\n\"Is this your way of practicing your role? I honestly think you won't need to get this close to Toby, and if you do, it will probably give him a heart attack,\" observed Joe.\n\nMarta cocked her head to one side, not laughing at his attempt to lighten the mood.\n\n\"I'm making you uncomfortable.\"\n\n\"I'm just not quite sure what's happening. If I didn't know better, I would think you were...well...coming on to me?\"\n\nHe meant to express it as an observation, but the seeming absurdity of the statement made the words come out more like a question.\n\n\"Do you want me to come on to you?\" she said with a wicked little smile that made his stomach fill with butterflies.\n\n\"You're just like your mother. Always answering a question with another question.\"\n\n\"Is that the problem. You can't look at me and not see my mother?\"\n\n\"It's disconcerting,\" admitted Joe, this moment they were having bringing back the memory of his dream from the night before with startling clarity.\n\nMarta frowned, \"I can't help how I look. I also can't help that I felt an attraction for you the minute I saw you back at Tess's house. I don't know...maybe, my mom, and I share the same taste in men?\"\n\nJoe passed a shaking hand through his hair, utterly unsure of how to process this situation. \n\n\"I have no idea what to say to that.\"\n\n\"I understand if this is too strange for you. It would be a shame. I like you, Joe...I think, maybe, you like me too? I might have noticed a stare or two.\"\n\nA blush colored Joe's features.\n\n\"Yeah...I might have been staring at you.\"\n\n\"Just because I look like my mother?\"\n\n\"No...because, you're beautiful,\" he said without thinking.\n\nHer frown vanished, and the dazzling smile was back.\n\n\"There...you do see me after all. So what's the problem?\"\n\n\"Wow, Marta. Where do I start? You're twenty years younger than me, my ex-girlfriend's daughter...\"\n\n\"You hadn't seen my mom since before I was born. I hardly think that counts as something to worry about.\"\n\n\"It doesn't!\" he said incredulously, \"Look, I just think...\"\n\n\"Maybe you should stop thinking so much. You want to kiss me right now, don't you?\"\n\nThe world seemed to grind to a halt, time slowing around them. Joe stared into Marta's gorgeous face, her lips parted and shining in the bright store lights. It was the dream all over again, a jarring confluence of reality and his fantasy that left him shaken but drawn to her like a magnet at the same time. His hands reached out to grip her slender arms, and he started forward, head dipping down, not able to resist the temptation. \n\n\"Excuse me! Are you people going to hog the mirror all night?\"\n\nJoe and Marta jumped back, startled out of their near kiss by an older woman in a dress that looked a size to small for her.\n\n\"Sorry...We didn't mean to be rude,\" said Joe.\n\n\"This is a department store, not your private bedroom,\" snapped the woman.\n\nMarta giggled, which just pissed off the other woman even more, her scowl deepening on her craggy old face.\n\n\"We were just going,\" said Joe, hastily shoving Marta toward the dressing room.\n\n\"You're as bad as your mother at stirring up trouble,\" he whispered in her ear.\n\n\"I'll take that as a compliment,\" said Marta, moving into the dressing room with a provocative shake of her tight ass.\n\n\"I have no idea what I'm getting into...\" mumbled Joe as she passed from sight.\n\nMarta returned in short order, and they paid for her outfit, which she changed back into in a public restroom. They drove to the rendezvous where the rest of Joe's friends waited.\n\n\"Damn...distraction is right!\" whistled Billy when Marta climbed out of her car.\n\n\"Did you guys get what we needed?\" asked Joe trying to ignore the way Frank and Billy were leering at Marta like love-struck teens. It made him feel oddly jealous.\n\n\"No problem,\" replied Tess handing him a leather zipper case with the lock picks.\n\n\"Okay, since Tess is not going to be able to move very fast, you are going to be our getaway driver and lookout. If any cops show up unexpectedly, honk the horn three times, and that will be our signal to break off and meet you up the street. Marta will distract Toby while we get the Segway, and then we run it up the flag pole. Easy.\"\n\nJoe wished he felt as confident as he sounded.\n\n\"Simple plan. I like it, less to go wrong,\" said Billy with a nod.\n\n\"Let's hope so...Are you ready? Marta?\"\n\n\"Ready as I'll ever be, I guess. Let's go.\"\n\nThe school's basic layout hadn't changed much in the intervening years. There had been expansion certainly, but the areas around the main building were still familiar. The security office was a separate small affair just to the left of the main building. It had a fenced-in area on one side where the security personnel locked up their vehicles when they weren't patrolling. These included at the moment two golf carts and one Segway. Through the glass front window, they could see Toby Martin, his feet up on his desk, eating a donut and staring at a small television.\n\nJoe, Billy, and Frank made their way around to the side where the fenced-in area was careful to keep out of sight behind a low wall while Marta marched with as much confidence as she could muster right up to the front door.\n\n\"Here we go...\" whispered Billy.\n\nJoe looked on filled suddenly with the kind of nervous excitement he hadn't felt since he was a kid. Truth be told, he felt more alive than he had in years.\n\nToby jumped from his chair with a frown when Marta knocked.\n\nThe door swung open, and the men in hiding could make out his voice as Marta stepped back, drawing him out into the semi-darkness in front of the office. She maneuvered herself carefully so that Toby would have his back to her accomplices. \n\n\"Uh...You're not supposed to be here,\" stammered Toby, thrown for a loop by the appearance of this beautiful and very scantily clad woman on his doorstep.\n\n\"I'm sorry to bother you, Sir. I was here earlier with that group you ran off and...I just felt so bad about their behavior that I thought I should apologize.\"\n\n\"Oh...Well...No harm done, I suppose. I mean, those guys were assholes when they were younger, so I guess I shouldn't be surprised they haven't changed,\" said Toby while he looked Marta up and down like a judge at a wet t-shirt contest.\n\n\"Asshole? I'll show you whose an asshole...\" grumbled Billy under his breath.\n\n\"Eyes on the prize, Billy,\" reminded Joe.\n\nHe nodded at his companions and then stood and stepped over the wall making his way forward as silently as possible while sticking to the shadows. \n\n\"I know it must be such a thankless job protecting this property, and you don't deserve to be disrespected by a bunch of immature men.\"\n\nToby grinned, appreciating her understanding of his burdens.\n\n\"You know, people don't realize just how stressful this job can sometimes be. Why just the other day there was this raccoon in the trash bins by the gymnasium...\"\n\nJoe cut across the open space of the courtyard behind Toby, making his way toward the locked gate that led into the fenced security storage area. Billy and Frank followed in his wake. They made the fence while Toby yammered on about his run-in with the dangerous predatory raccoon.\n\n\"I bet he fucked the damn thing before he turned it over to Animal Control,\" joked Billy.\n\n\"Gross, Billy...\" said Joe quietly as he worked the lock, casting an occasional nervous glance over at Marta and Toby.\n\n\"Hurry...\" urged Frank.\n\n\"It's been a while...\" said Joe as he tried to focus.\n\nFortunately, the padlock was an ancient model, possibly the same one that had been on this gate since he had been a student there. The old movements came back to him, and the lock sprung open so abruptly it nearly surprised him into dropping it on the ground. Instead, he laid it aside and carefully opened the gate that thankfully was well-oiled and made little noise. He motioned the other two men to follow, and they quickly located the Segway and together managed to lift it with Frank and Joe taking the heavy end. \n\nThis was the most dangerous part, having to take the weight of the awkward contraption and carry it passed Toby without drawing his attention. If he turned around, they were cooked.\n\n\"Wow! It sounds like you were lucky to take care of that situation without being hurt,\" said Marta, managing to feign awe at Toby's critter catching prowess.\n\n\"You know it's chilly for that...um...outfit...Maybe you would like to continue this conversation in my office?\" offered Toby with a smile that only a female predator could love.\n\nJust then, Billy's hands slipped on the handle of the Segway, and the rapidly shifting weight caused all three to grunt with the effort of keep it from hitting the ground.\n\nToby made a face and started to turn.\n\n\"That is so gentlemanly of you!\" said Marta loudly, taking a step closer to him and reaching up to push her hair back while licking her lips. \n\n\"Huh? Oh...No trouble...I have some milk in the fridge too. It does a body good, don't you know?\" he said, his attention drawn back to Marta. \n\nShe pleaded with her eyes for Joe and the others to hurry while she giggled at Toby's lame joke.\n\nJoe shot Billy a look, but he just shrugged while they redoubled their efforts to get their purloined vehicle over the wall and out of sight. There were a few sweaty moments of panic, but at last, they were done, and Joe waved at Marta to wrap it up.\n\n\"That is a lovely offer, but it's late, and I have to be up early in the morning. Thanks for being so understanding.\"\n\nTo keep him off balance and forestall further conversation, Marta went so far as to hug the scruffy-looking security guard holding her breath to tolerate his body odor.\n\n\"Holy Mother! When was the last time this guy showered...\" she thought, wrinkling her nose.\n\nThe move worked because Toby was too flummoxed even to speak as she beat a hasty retreat and circled back to the parking lot. By the time she arrived, the boys had used the steel cable Frank, and Billy had brought to reinforce the flag pole rope, and they stood at mock attention as Joe hoisted the Segway into the night sky.\n\n\"I wish we could see the look on Toby's face,\" said Billy smiling.\n\n\"Right now, I think we should get away and count ourselves lucky we pulled this off,\" said Joe.\n\nTess gunned the engine as the others piled in, as soon as they were away from the school the carload of conspirators burst into loud, raucous laughter.\n\n\"Oh! My God! I almost shit when you guys looked like you were going to drop it!\" said Marta excitedly while trying to catch her breath.\n\n\"Tell me about it! Thanks for the near heart attack, Billy!\" added Joe.\n\n\"Sorry, guys. I guess my conditioning could use some work.\"\n\n\"You need to get in shape, my friend,\" observed Frank.\n\n\"Rounds a shape,\" offered Billy.\n\n\"How about you, Mata Hari?\" asked Tess looking at Marta in the rearview mirror.\n\n\"You would have been proud of her, Tess, she had Toby eating out of her hand,\" said Joe.\n\nMarta smiled shyly from the back seat, \"I was just trying to do my mother proud.\"\n\n\"I think this calls for a celebratory meal, and we all know what that means. I.H.O.P pancakes!\" called out Frank.\n\n\"You do know we're adults and don't have to eat at the cheapest shit places on the planet?\"\n\n\"Come on, Billy! It's a tradition. After a successful caper, we always went to I.H.O.P.\"\n\n\"He's got you there, Billy. If this is going to be the last one, we owe to ourselves to go out the way we came in, and that includes a pancake celebration!\" said Tess.\n\n\"Fine...I'm outvoted. I.H.O.P it is...\"\n\nThey sat around a table a few hours later, still reminiscing about their adventure and patting their full stomaches.\n\n\"This has been some day. I woke up this morning, thinking it was going to be nothing but terrible. Thanks to you guys, I feel like I got to touch a piece of my mother's life I never knew and say goodbye to her in a much better way than sitting in a church with a bunch of strangers.\"\n\n\"Bonnie would have loved seeing you twist old Toby around your finger. I'm glad we could be here for you,\" said Billy.\n\n\"Yeah. It was the one to go out on,\" agreed Tess.\n\n\"There is one more thing I would like to ask of you guys if it's okay?\"\n\n\"Shoot,\" said Joe leaning forward.\n\n\"My mom's last request was to scatter some of her ashes near her favorite hiking spot outside of Prescott. I was hoping you all might accompany me there tomorrow. I think it would be fitting.\"\n\n\"I think I can speak for all of us when I say it would be our pleasure,\" Joe said sincerely.\n\n\"Amen,\" added Frank.\n\n\"Awesome! I was planning on leaving after lunch, so no hurry.\"\n\n\"Good, because Frank isn't exactly a morning person.\"\n\n\"I'm pacing myself, Joe. We'll see which of us lives longer!\"\n\nThings finally broke up after that, Tess needed to get back to her kids, and everyone else was coming down from the adrenaline rush of the last several hours. They dropped Marta back off at her car, and then took Tess home before returning to the hotel. In the aftermath, Joe tossed restlessly in the bed, trying to sleep. His mind kept conjuring images of Marta in the mirror at the dress shop, multiple, beautiful copies of her staring back at him. \n\nIn the darkness, his cellphone rang, and he sat up, hoping perhaps that it was the object of his ruminations.\n\nHe wasn't that lucky.\n\n\"Hey, Tim. I meant to call you earlier but got caught up in the funeral and all.\"\n\n\"You should have called. I left you several messages,\" came his bosses curt reply.\n\n\"Sorry about that...\" said Joe trying to control his temper.\n\n\"I was only at a funeral for fucks sake,\" he thought angrily.\n\n\"There has been a complication with the merger. You are still going to be back tomorrow?\"\n\n\"Actually, Tim, I still have a few things to take care of here. I'll probably not fly back until early Monday morning. I'm sure whatever is going on, I can make a few calls...\"",
        "\"Unacceptable. I need you back here tomorrow.\"\n\nGone was any hint of the camaraderie from their last conversation. Tim's words couldn't have been shorter and more to the point.\n\n\"What's the problem exactly?\"\n\n\"Lerner's getting cold feet again. You know him best, and he trusts you.\"\n\n\"He does, but this isn't the first time during this process he's started to get shaky. I'm sure I can handle this with one phone call.\"\n\n\"I think face to face would be better, Joe. He's agreed to come to the office tomorrow even though it's a Sunday.\"\n\n\"You arranged that without me? This is still my deal, Tim.\"\n\n\"One you're not here to handle, so someone had to pick up the slack.\"\n\n\"That's hardly fair, and as I said, I've dealt with this kind of thing before I don't think it's as serious as you believe.\"\n\n\"You know, Joe, I'm starting to question your commitment to this project. It's such a stepping stone for your next move. I can't believe you're not putting more importance on it.\"\n\nJoe's hand started to shake, and he clenched his teeth, trying not to say something he would regret.\n\n\"You don't have to threaten me, Tim. I'm just saying I can handle this without being in the office. You've trusted my judgment before, and I've always come through for you. I'm just asking for the same consideration now.\"\n\n\"Okay, Joe. Have it your way, but I promise you if Lerner backs out because you weren't here to fix it, you can kiss that promotion goodbye.\"\n\nTim hung up before Joe could say anything else, which was just as well. \n\n\"Mother fucker...I've made this firm so much cash they should be kissing my ass not threatening to roast it over hot coals,\" grumbled Joe.\n\nHe slapped down the phone next to the alarm clock and sat back to stew on this unhappy turn of events. It would be a dangerous game to play not jumping back on a plane straight away, but he felt like this was something he had to do, one last piece of closure that he needed. \n\n\"I hope I don't live to regret this...\" he whispered, turning over and searching for that elusive sleep that didn't seem to want to claim him.\n\nTHE AIR IS BETTER UP THERE -\n\nJoe hadn't been up in the mountains of central Arizona since he was a kid. He had forgotten how much cleaner it felt to breathe, the air seemingly much crisper than down in the Valley. Marta had asked him to ride with her and keep her company. She wasn't coming back since her job was up here, and she would have to be there on Monday anyway. The rest of the gang was following behind them in the rental with Billy at the wheel.\n\n\"It's beautiful...\" he remarked as the scrubby bushes and cactus gave way to thick forests of Ponderosa pines.\n\n\"I was starting to wonder if you were alive over there.\"\n\n\"Sorry,\" he said sheepishly, looking back at Marta, \"I guess I haven't been very good company.\"\n\n\"Is everything alright? You're not still upset about the dress shop, are you?\"\n\n\"What? No...this has nothing to do with you and I. I got into it with my boss last night. He wanted me back in New York today.\"\n\n\"On the day after your friend's funeral, and a Sunday no less? Was it that serious?\"\n\n\"It wasn't anything I couldn't handle over the phone. I already took care of it this morning, but they don't think that way at my firm. It's always a crisis with them, and they expect everyone to drop what they're doing when duty calls.\"\n\n\"I can't imagine dealing with that all the time. I prefer a more low-stress environment.\"\n\n\"Not all of us have that luxury,\" he commented.\n\n\"A smart guy like you, Joe? I have a feeling you could do whatever you wanted. You made a choice to pursue money as your main goal.\"\n\n\"You think I should have chosen differently?\"\n\n\"Would you have been happier if you had?\"\n\n\"There you go again. Answering a question with a question. Anyway, the whole thing is moot now. I have too many responsibilities at this point to change course.\"\n\nMarta shook her head, a gentle smile on her pretty lips, \"What responsibilities? You're not married. You don't have any kids unless you're keeping a secret from me? I would think you could make any change in your life you wanted.\"\n\n\"I put a lot of work in getting to where I am,\" he said back, as if that should end the discussion.\n\n\"Does it matter if you're not happy? Besides, I'm not saying to quit chasing the almighty dollar entirely and become a folk singer or something. I'm saying make room in life for more than just the singular focus you have now. I'm saying be the best Joe Harper that you can.\"\n\n\"The best Joe Harper...\" he said back to himself, echoing her words under his breath. He wasn't sure he knew who that was anymore.\n\n\"What was that?\"\n\n\"Nothing...\"\n\nThe rode for several more minutes in silence.\n\n\"I remember this area...There's a turn off up on the left. I brought your mom up here after the first snow one year. She wanted to have a snowball fight, and we just took off in the middle of the night and ended up pulling off and getting out to pelt each other and then made snow angels.\"\n\n\"You know, I was going to go further north, but this is probably a more appropriate choice...\" said Marta taking the next dirt road they came too and leaving the blacktop behind. Billy slowed and followed as both vehicles bounced over the unpaved stretch in front of them. Marta drove a short distance further, pulling to the side in front of a trail that led off into the woods.\n\nShe exited the car, reaching through the back window to lift a small, carved wood box off the back seat.\n\n\"I thought we were headed north of Prescott?\" asked Billy as he helped Tess out of the car.\n\n\"Change of plans,\" said Marta without elaborating.\n\nBilly shot a look at Joe, who just shrugged.\n\n\"I need to stretch my legs anyway,\" said Frank, pulling himself from the back seat.\n\nThe group followed Marta as she led the way up the trail. The going was easy, thankfully, since Tess couldn't have dealt with a steep climb. The path stayed mostly flat with just an occasional slope to contend with as they made their way forward. They reached a clearing that Joe was almost sure marked the spot where he and Bonnie had stopped to have their impromptu snowball fight all those years ago. Marta pushed on picking up the trail again on the other side and following its winding course before it abruptly ended at a cliff's edge. Spread out in front of them was a narrow, tree-filled valley that twisted its way between two rocky peaks before vanishing into a hazy fog off in the distance. A gentle breeze was wafting through the trees, making the branches above them sway back and forth.\n\n\"This is it,\" said Marta, stepping close to the edge and looking down.\n\nThe others bunched up around her though Frank kept further back from the edge than the others. He wasn't exactly a fan of heights.\n\n\"Would anyone like to say anything?\" \n\nAll eyes went to Joe, and he cleared his throat, not sure what words would be appropriate. \n\n\"I...I imagine Bonnie wouldn't have wanted us to belabor things too much. We might not have spent a long time together compared to all the years we've spent apart, but Bonnie left her mark on all of us. I know that my life was the better for having known her, and I'm just sorry I didn't try to reconnect with her along the way...I don't think I realized until this trip how much I missed the friendships I left behind.\"\n\nBilly smiled and patted Joe on the shoulder while Tess slipped an arm around his waist and hugged him from the other side.\n\n\"I know that wherever she is now, Bonnie is making it an even happier place for everyone,\" he finished, fighting back the tears that threatened to cloud his vision.\n\nMarta leaned out over the edge and opened the box letting its contents get picked up on the wind and spread out into the valley below.\n\n\"Goodbye, Mom. Safe journey until we meet again, and thanks for reminding me to invite your old friends. They have made this experience a lot easier for me.\"\n\n\"Now I am going to cry,\" said Tess wiping at her eyes.\n\n\"What now?\" asked Frank.\n\n\"I don't know about the rest of you folks, but I'm starving,\" said Billy.\n\n\"There's a shock...\"\n\n\"Don't worry. I know a great bar in town that serves the best barbecue,\" offered Marta.\n\n\"Wonderful words to my ears!\" shot back, Billy.\n\n\"If not your backside,\" said Frank.\n\n\"For that, you can pick up the tab, Palmer!\" \n\nThe food was just as Marta had promised, and the beer even better. So much so that after dinner, they began to drink in earnest with only Tess abstaining out of respect for her current state. They toasted one another and continued to relate stories of their high school escapades while getting louder as they went. The party atmosphere was kicked up a notch when the bar owner took to a small stage in the corner to announce that it was amateur night, and anyone who wanted to try a hand at entertaining the crowd was welcome to get up and do their best.\n\n\"Hey, Joe! How about a song, Man? One last tune...\" slurred Billy.\n\n\"Nah...I don't think so...I haven't played in front of anyone in years.\"\n\n\"Come on, Joe. Don't be a wimp!\" said Frank swaying precariously back into his chair after trying to stand up to make his point.\n\n\"I hate to pile on, but I, for one, would love to hear you play live,\" said Marta.\n\nHer piercing stare made his mouth go dry, and he tried to divert attention from the idea by jumping up from the table and saying he needed to use the restroom.\n\n\"I'll be back. Someone order me another beer.\"\n\nIn the lavatory, Joe threw water into his face and wiped it with a towel from the dispenser on the wall. He looked at himself in the mirror. In the lowlight, and squinting hard, he could almost see the young man he had been years ago. He drew a breath trying to recall the feeling he used to get right before a gig, that nervous tightness in his chest that usually went away after the first song.\n\n\"Fuck...What am I thinking? I don't have it in me anymore,\" he said to his reflection, half expecting it to answer and back him up.\n\nTossing the towel into a receptacle, Joe threw open the door and stepped into the short hallway that led back to the bar room only to be stopped by the presence of Marta leaning up against the wall.\n\n\"If you're in line for the ladies, you're in the wrong place,\" joked Joe.\n\nMarta returned his smile, uncrossing her arms and stepping closer.\n\n\"Are we going to get to hear you play or what?\"\n\n\"Marta...I can't...I'm not even sure I remember how and it's been years since the last time I...Mmmmphhmm...\"\n\nThat was as far as Joe got in his counterargument before Marta calmly reached up and pulled his mouth to hers. In an instant, every thought fled from his brain, washed out by the shock of Marta's perfect lips covering his in a smoldering kiss that made his legs shake. He reacted on instinct, slipping his arms around her slender waist and mashing his lips tight to hers, thoroughly enjoying the slick, full softness like flower petals rubbing and sliding sensually all around. A light-headed feeling quickly followed, and Joe's heart raced in his chest. When she parted from him, at last, he couldn't recall what he was even doing in the hallway.\n\n\"What were you saying?\" she asked with a sly smile.\n\n\"Uh...I don't remember...\"\n\n\"Play for me, Joe. I want to hear you,\" she said, leaning up to kiss him again, quickly but firmly before turning and walking away.\n\n\"Shit...\" murmured Joe as he wiped a hand through his hair and headed for the stage.\n\nHe told the bar owner his name, and the man announced him as \"Joe from New York,\" which brought some polite applause and a few catcalls about \"Snowbirds.\" He picked up the battered old acoustic guitar that sat by the corner of the stage, looking at it with bewilderment for a moment like he had no idea what it was before taking a seat on the barstool by the microphone. His fingers picked at the strings, and without thinking, he made some adjustments to the tuning, years worth of playing coming back to him in an instant. A quick strumming of a few chords told him he had it where it needed to be, but he stopped again, realizing he had no idea what to play.\n\n\"Sometime today, New York!\" shouted a man from the back of the bar.\n\n\"I think he fell asleep,\" laughed a large breasted woman from the foot of the stage.\n\nJoe certainly seemed like he was in his own world, not looking out at the audience but staring at the instrument in his lap, a dazed expression on his face. Things were starting to get embarrassing when he finally looked up and locked eyes with Marta sitting two tables away. His hands began to move, and for the first time since he had conceived it all those years ago, the music of \"Bonnie's Song\" flowed out over a crowd. \n\nHe had never gotten around to writing lyrics for it, but the tune spoke for itself, haunting and lonely at the start, but growing into a happier, more vibrant tune as it went. A story told in musical notes that anyone could recognize, and more than a few folks in the bar began tapping a toe and nodding along. Joe may have started rusty, but the old motions returned to him, and by the end, he was hitting every string perfectly, creating a melody that hung in the air and seemed to drive any darkness in the room away. When he finally finished, it was too much more enthusiastic applause and many smiling faces in the audience.\n\n\"Joe from New York, folks...\" said the bar owner with a wave.\n\n\"Damn, Dude! You were on fire!\" said Billy loudly, smacking him so hard on the back it hurt.\n\n\"Yeah...thanks...\" winced Joe, wishing he could reach far enough back to rub the injured spot.\n\n\"That was beautiful, Joe. What was it?\" asked Tess.\n\n\"It...doesn't have a name. Just something I wrote a long time ago and never got around to playing,\" lied Joe.\n\nMarta sipped her drink, looking at him with an expression that said she knew he was lying and why, but she didn't press him about it.\n\nThe night wore on, and in the end, Tess decided she didn't feel like driving a carload of drunks all the back to Phoenix.\n\n\"The singing alone will drive me insane,\" she said to Marta rolling her eyes.\n\nJoe offered to book rooms for them at a local inn on his dime, and they readily accepted. Frank took Billy in tow, and the two of them lurched toward their rooms, stopping so that Billy could heave over the railing.\n\n\"I hope to God nobody is down there...\" thought Joe. \n\nMarta and Tess decided to share a room to cut the cost, and they vanished from sight after a quick hug.\n\n\"Goodnight, Joe. Hell of a performance. Bonnie would have loved it,\" said Tess kissing him on the cheek.\n\n\"Yeah...Thanks...I hope so,\" he said.\n\nMarta hugged him even tighter and added her soft kiss to his cheek.\n\n\"You still got it...\" she whispered in his ear before leaving him alone.\n\nJoe went in and took a shower, the last dregs of the beer in his stomach, giving him a pleasant, warm high as he got ready for bed. He didn't bother to set the alarm figuring someone would wake him in the morning. For the first time since his arrival, he felt like he might get a good night's sleep.\n\nThen came the knock at his door.\n\nHe wasn't sure how long he had been laying on the crisp, white sheets, but it turned out to be longer than he had imagined. A good hour had passed since he had exited the shower, and it was close to one in the morning. \n\nThe door had an eye hole, but he didn't bother to use it. Half expecting one of his drunk friends, he was surprised to find Marta standing on the welcome mat and looking up at him.\n\n\"Can I come in?\"\n\n\"Um...Yes...sure...\" said Joe stumbling back from the door.\n\n\"It occurred to me that I might not see you in the morning. I have to leave early for work, and you guys look to me like you're going to sleep late.\"\n\n\"Oh...I see.\"\n\n\"It's been quite a little adventure. I have to say you've lived up to your reputation, Joe Harper. Every story my mom told me growing up, and there were some truly outlandish ones, I can believe they're all true.\"\n\nJoe felt a blush coming on and fought it down.\n\n\"I'm glad I got to meet you as well, Marta North. You're a chip off the old block and then some. You would have made a fine addition to this bunch of rubes back in the day.\"\n\n\"I consider that high praise indeed,\" she said, grinning.\n\nMarta had stopped just short of the bed, and to his dismay she reached down and started to unbutton her blouse.\n\n\"Um...What are you doing?\"\n\n\"Getting ready for bed...What does it look like?\"\n\n\"In here!\"\n\nMarta looked around the room.\n\n\"Would you rather I slept on the floor? It would be a lot less fun for both of us. I can assure you.\"\n\n\"Well...It's just I...Uh...\" \n\nJoe was having a hard time putting his thoughts together as her shirt hit the ground, exposing her perky, round tits in a lacy black bra. Her skin, tanned and silky looking in the low light, was an unbroken expanse of light brown to the top of her jeans. She started to unbuckle her belt, and Joe's eyes grew wider as she removed her pants, kicking them off into a corner. The black thong she wore barely covered her shaved vagina, thick, juicy looking labia separated by a thin cloth. She started to walk toward him, and a dozen or more arguments about why this was a lousy idea ran through his mind and just as quickly faded away as she drew near.\n\n\"You've been looking at me with those hungry eyes ever since I first saw you, Joe. Aren't you tired of just looking?\"\n\nHe sure couldn't argue with that.\n\n\"Damn...Marta...\"\n\nThere was no hesitation in his movements. He swept her into his arms, a wave of desire so profound sweeping through him it left him trembling, clinging to her half-naked body like a lifeline. Their mouths found each others in an instant, and they began to kiss frantically, desperately, with a need that burned like a fire inside them both. Marta's lips pasted to his, her tongue swirling and sliding all over while shivers and tingles ran down his spine. He couldn't recall ever being so turned on so fast. \n\nJoe held her to him, returning her kisses with his own, pressing his tongue to hers in a sensual ballet of flesh that left them both panting. She moaned softly into his mouth as he rubbed at her back, squeezed one of her tight ass cheeks in his free hand. They stumbled back toward the bed, kissing, sharing hot, deep French kisses. His experienced fingers encountered the clasp holding her bra in place, and with a single flick, he sent it falling away from her body. She slipped her arms up around his neck, still bringing her full, creamy lips to his while her bare breasts slid warmly up against his chest hairs. \n\n\"I want you, Joe...\" she whispered.\n\nHe lifted her onto the bed, seeing her almost fully naked for the first time, and she took his breath away. Her body was a flawless expanse of youthful perfection; no tan lines marred its surface, not a wrinkle or a blemish. Her breasts were sun-kissed with dark brown nipples that were swollen into perky knots on her chest. She smiled and slid off her thong, showing off her equally magnificent lower body, unbroken brown skin, and a pussy that gleamed with dew. \n\n\"Someone tans naked,\" observed Joe almost reverently.\n\n\"I like being unfettered when I'm outside. It makes me feel closer to nature.\"\n\nThe thought of Marta running naked through the woods like some fairy or nymph made Joe's cock swell even larger in his boxers.\n\nHe lowered his briefs to the ground, and Marta raised an eyebrow.\n\nThough not a freak, Joe Harper certainly had nothing to be ashamed of in the male sex organ department. His thick, uncircumcised cock sprouted from between his legs, pointing at Marta, almost beckoning her forward, and she didn't disappoint. A deep, soft groan escaped her lips as she reversed direction and moved head first to the edge of the bed, stopping just inches from the tip of Joe's stiff pole. While he drew in a sharp breath, she took him in her petite hand, stroking the flesh back away from his cock head so that it appeared from beneath its hood. Then she licked it all the way around, making him gasp.",
        "\"Good...God...Marta.\"\n\nShe smiled, encouraged by his palpable excitement, and proceeded to slide her sweet, wet lips around his cock. The head slid across her rough palate, and she held it there for a moment, bobbing her head quickly before letting it move past into her throat. Joe let out a louder moan, reaching down to touch the side of her head. Marta hummed gently while allowing the shaft to slide just a bit back and forth, not enough to escape her mouth, but enough to build up some friction on his sensitive frenulum. \n\n\"Fuck! That feels so good...\" he moaned.\n\nThe sounds of his breathing grew louder with each passing minute. Marta's arousal rose, and she slid a hand between her legs, massaging her slippery, dripping pussy while pressing her mouth faster on Joe's cock, taking it deep and letting it almost slip free before pushing down its length again. The skin was quickly covered in her shiny spit, and Joe bit his lower lip, trying to hold back the urge to lose his semen too soon. The sloshing sounds of his penis inside her mouth became audible in the room, her moans joining his while her fingers worked between her legs teasing her clitoris into a stiff nub.\n\n\"I...I can't take it anymore, Marta! Shit! It's too much!\" he whimpered.\n\nJoe pulled himself free and pushed Marta back onto the bed, spreading her legs and plunging his tongue into her soaking love hole. She arched her back off the sheets, crying out with each flick of his tongue that lashed at her clit and swirled in and out of her pussy.\n\n\"Oh...Oh...Yes! Yes, Joe! Ahhh...Fuck! You are so good! Eating my pussy so good, Baby! AHH! God Dammit! Joe! Right there! Right there! Ah! My God! That's it! AH! FUCK ME! That's it, Joe! Ah! Shittttt!\" \n\nShe made fists in the sheets, throwing back her head and gasping, quivering with each deep lick. Joe played her young body perfectly, torturing her with his tongue, bringing her to the edge and backing down. \n\n\"Oh! FUCK! You're such a God Damn tease, Joe!\" said Marta with a wicked smile as he nearly made her cum but once again let her fall back.\n\n\"What do you want, Marta?\" he asked slyly from between her legs.\n\n\"Get up here and fuck me!\" she demanded.\n\nHe kissed his way across her flat, firm stomach running his tongue up over the hill of her ribs and right into the valley between her upthrust mounds. There, he stopped to play with her sweet breasts, squeezing them in his strong hands and making her dark nipples jut out toward him. When he caressed one hard nip with his lips, Marta groaned, and when he sucked that same nipple fully into his mouth, she grabbed at the sheets again a breath exploding from between her lips.\n\n\"Ah! GOD! I love to have my tits sucked!\" she cried.\n\nJoe smiled, realizing he had hit a sensitive spot, and he began to toy with her stiff nipples the same way he had toyed with her clit. Marta writhed on the bed, moaning and whimpering with each hard bite, each wet, hot lick as Joe made her nipples scream. \n\n\"Please...Joe...I can't take anymore...I want to fuck! I want to fuck so bad you have no fucking idea! Ah! Just...Just fuck me! Fuck me, Baby, please...Please, Joe!\"\n\nThe bed creaked slightly, with Joe's weight coming to rest entirely on top of Marta. He had never seen a woman look more ready, more gorgeous. Her face was surrounded in a sea of blond, eyes shining with lust and mouth parted, breathing in quick, frantic gasps with her chest all flushed with blood. \n\n\"I wanted you the first time I saw you,\" he whispered.\n\n\"I wanted you, Joe. Don't make me wait any longer...\"\n\nThen he was there like her words had conjured him, and he plunged inside her without warning, all those thick, hard inches of his throbbing cock. Marta nearly screamed the roof down as she dug her nails into his back, biting his shoulder to counteract the pain of taking so much cock so violently into her pussy all at once. God! He was so big and hard. Her pussy had never felt so full. \n\nHe moved inside her, pressing deeper, his penis engulfed by the warm cocoon of her juicy flesh. Marta was so tight he could feel the walls of her vagina squeezing his throbbing shaft. \n\nThey began to fall into a slowly building motion. Joe was pushing into Marta with hard thrusts of his hips, his foreskin bunching up against her clitoris and stimulating her more and more. She, in turn, met his rough movements pressing her cunt further onto his cock, taking him as far into her body as she could. They kissed, touched, grabbed onto one another, and filled the room with their cries and moans.\n\n\"Ah! Marta! You're so beautiful...Pussy feels so good! So tight! Ahhh! Jesus! I can't get enough!\"\n\n\"Don't stop! Please...Please don't stop! Give it to me! Harder! Harder! Joe! Ohhh...God! I'm so close...\"\n\nMarta's blue eyes grew wider, sensations rippling across her body, a feeling like she was falling from a great height suffusing her from head to toe. \n\n\"Oh, my God! Oh...OH! Joe! Joe! It's too much...I...I'm...going to...going to...cum...Going to CUM! Ahhh! Yessssss! Ahhhh! Joeeee!\" she cried, digging her nails into his back as her body was wracked by multiple hard, violent orgasms that left her quivering beneath him.\n\n\"Damn, Marta. You look so beautiful when you cum,\" teased Joe leaning down to kiss her neck.\n\nShe held his head, running her fingers through his hair while his lips tingled against her pounding jugular.\n\n\"Let me on top,\" she whispered.\n\nJoe gratefully rolled onto his back, looking up into Marta's smiling face.\n\nHer fingers gently caressed his slippery, juice-covered penis stopping to squeeze the fat head, making Joe draw in a breath.\n\n\"My turn...\" she said, climbing on top of his muscular body and guiding him back into her steamy, moist love tunnel.\n\nThe velvet-smooth walls of her vagina slid down over his cock. Marta placed her hands on his hairy chest and began to roll her hips, grinding her pussy on the base of his shaft. Joe closed his eyes at first, content to enjoy the feeling of Marta's tight body riding him, the wet heat of her pussy massaging every inch of his pole. When she started to moan and gasp, he opened his eyes to admire just how incredibly gorgeous this young siren looked when she fucked, and it was a heart-stopping sight. \n\nMarta's head lolled from side to side, licking her lips, biting her lower one, eyes shut, her nipples like chocolate knots on her chest. Joe grasped her hips, driving himself upward in time to her movements.\n\nShe threw her head back, groaning louder, breath coming faster.\n\n\"Feels so good...so good to fuck you! Ah! Shit! Joe! Your cock is filling me up! Ahhh! God! Baby!\"\n\nA strong surge hit his scrotum, a contraction that he felt from there to the tip of his cock. \n\n\"Uh! Marta! I...don't think I can hold it back anymore!\"\n\n\"It's okay...Cum in me...I want to feel it...I want to feel you cum, Joe!\" she begged.\n\nShe doubled down on her movement, pussy sliding faster up and down his straining prick, the end was inevitable and came with a jerk so hard Marta felt it all the way up through her stomach. Joe's back arched up off the bed, and he exploded inside her, pearly jets of semen blasting from the end of his penis and coating her womb with his seed.\n\n\"Shit! Marta! Ahhh! Martaaaaaaa!\" he moaned.\n\n\"That's it! Cum for me, Joe! Fill me! Oh! Joe! YES!\" \n\nThey held tight to one another, still pressing their bodies together as the ripples of Joe's orgasm slowed and faded. He lay panting, reaching up to touch one side of Marta's face.\n\n\"That was amazing...You're amazing...\"\n\nShe took his fingers, kissing them before lowering herself into his arms, finding his lips with hers.\n\n\"I agree, I'm amazing...\"\n\n\"Misses Smart Ass,\" he replied, smacking her ass lightly with one hand.\n\n\"Eww...I didn't know you were into the kinky stuff. We can do that too if you want...\" she purred.\n\nJoe wasn't sure whether to take her at her word or assume she was pulling his chain; either way, it looked to be a long night.\n\nIn the morning, Joe awoke slowly, throwing an arm over his eyes to protect them from the sun's rays that blazed through his window. The previous night had left him worn out, but very satisfied. Frankly, it had been the best sex he had enjoyed in years. A smile played on his lips at the thought of Marta riding him like a bronco busting cowboy, something she had done with excellent technique. He rolled over, wondering if there was any chance she might want to start the day off with a bang and was disappointed when he realized he was in bed alone.\n\nSitting up, he looked around the room, but there was no sign of Marta. Her clothes were gone from the floor, seeming to indicate she had fled at some point while he still slept. Joe leaned back against the headboard rubbing the sleep from his eyes. It wasn't until he took a second glance at her side of the bed that he noticed the white sheet of paper tucked partly under the pillow.\n\n\"Joe, I did need to leave early, and you were sleeping so soundly it seemed a shame to wake you. Last night was, as you already pointed out, amazing. I won't take all the credit. I think you did your part ;) \n\nI'm glad I got to know you even if it was just for a short time. I can see that all the things my mom used to say about you are right. You're more special than you know, other people sense it, gravitate to you, and you don't even realize it. The one thing that worries me is that you don't seem happy in this role you've cast for yourself. I wouldn't presume to tell you how to lead your life, but maybe the next time you have to decide what you want that life to be, you should think back to how you felt on that stage. \n\nHope to see you again. I'm leaving my phone number at the bottom. You better call!\"\n\nJoe chuckled to himself, folding up the note and placing it on the end table by his head. He could hear so much of Bonnie in her daughter's note, but it didn't seem so strange to him now. Perhaps, this was her way of reaching out to him from the afterlife and trying to steer him back on course. He wasn't sure, but there was no doubt in his mind that he had been lucky to know not just one, but two such special women in his lifetime.\n\nHOME IS WHERE THE HEART IS -\n\nThe airport was just as busy if not more so than when he had landed on Friday, and Joe shouldered his carry on while using his free arm to hold a sobbing Tess.\n\n\"You better not drop off the face of the Earth this time, Joe Harper,\" she said, sniffling into a tissue.\n\n\"I won't. I promise that I'll keep in touch, and we are going to make it a point to get together, right?\"\n\n\"Absolutely!\" said Frank.\n\n\"You guys are all welcome to come to San Francisco and try my restaurant anytime you like,\" offered Billy.\n\n\"On the house, right?\" asked Frank.\n\n\"Well...A restaurant owner never got rich giving away the food,\" replied Billy with a serious expression that quickly dissolved into a grin, \"but for you guys, I'll make an exception.\"\n\n\"Flight 202 to New York boarding at gate 15,\" came a mechanical sounding voice over the P.A. system.\n\n\"That's me. It was good to see you guys again. I missed you all more than I can say,\" said Joe, not able to keep his voice from catching when he spoke.\n\nThey hugged as a group, just as they had done countless times after pulling a successful prank in school.\n\n\"Stay gold, Ponyboy...\" intoned Billy, quoting his favorite book.\n\nJoe couldn't fight down the tears this time, and he broke from his friends before they saw him crying, making his way down the corridor toward the departure gates.\n\nHe managed to get a hold of himself by the time he took his seat on the aircraft, stowing away his luggage in the compartment over his head. While he settled into his seat, a kindly looking older woman next to him smiled and asked him about his trip.\n\n\"Coming or going?\"\n\n\"On my way home,\" he said though he wasn't sure if that were true any longer.\n\n\"Did you have a nice trip?\"\n\nJoe looked out the window at the desert landscape and the buildings of the city that lay beyond.\n\n\"It wasn't what I expected, but an old friend of mine would have said that only a fool thinks you can't go home. It never really changes, only we do.\"\n\n\"That's quite profound.\"\n\n\"She was like that, always with the wise sayings.\"\n\n\"I guess from your tone. You're going to miss her.\"\n\nJoe cocked his head and laughed, \"Actually, I don't think she will be as far away as I thought.\"\n\nThe woman looked puzzled at his comment as they taxied away and took off into the sky.\n\nThe traffic was lighter than it would have been if he had been facing rush hour, and after a quick drive to his apartment to change clothes, he made it to the office by lunchtime. Janet dutifully read off a list of the essential calls he had missed since being gone, but only one interested him. \n\n\"I'm going up to see Mr. Rothchild. I'll be back shortly,\" he said.\n\nTim's secretary waved him right on in, and he stopped just inside the door, shutting it behind him. \n\n\"I'm glad to hear it, Mr. Lerner. Yes, of course, we'll have the contracts ready for your signature this afternoon. I'm looking forward to seeing you again. No, thank you, Sir.\"\n\nHe hung up the phone steepling his hands together and looking over at Joe with a bemused expression.\n\n\"Good news?\" asked Joe.\n\n\"I suspect you know already, but, yes, good news. It appears the merger is going to go through as planned. I suppose congratulations are in order.\"\n\nTim said it grudgingly, still clearly not happy at the way things had played out.\n\n\"I told you to trust my judgment.\"\n\n\"So, you did. It was a risk, though, one that didn't need to be taken. I feel as your mentor, I should point that out to you. At the end of the day, it's best to err on the side of caution when this much money is at stake.\"\n\n\"Does this mean you're having second thoughts about the promotion?\"\n\nJoe's boss stood up from behind his desk and walked over to the mini-bar in the corner, pouring some whiskey into a glass.\n\n\"I've given this a lot of thought, Joe. You've done good work for this company, but sometimes your arrogance can be as much a problem as a strength.\"\n\nJoe stood impassive, watching the older man's face as he twirled the amber liquid around in the glass before taking a large swallow.\n\n\"Still, you did close the deal. I guess I would be remiss in not rewarding you. Welcome to the executive floor, Joe.\"\n\nTim poured another glass; his face all smiles now as he handed it over.\n\n\"Everything alright? I was expected more of a reaction from you.\"\n\nJoe took a drink frowning into his glass as the alcohol burned its way down his throat.\n\n\"It's nothing. I was thinking about a friend.\"\n\n\"The one you lost?\" said Tim, trying to sound sincerely interested but coming up well short.\n\n\"I should be getting back to work. I've got some catching up to do. Thanks for the drink, and I'm excited to be moving up. I know I have you to thank for it,\" he replied, ignoring the question but making an attempt at showing enthusiasm for his new position. \n\n\"I'll call you, and we can set up a meeting later this week to discuss your new responsibilities,\" Tim called to Joe's retreating form.\n\n\"Sure. Looking forward to it,\" Joe said over his shoulder while sounding anything but.\n\nStanding in the elevator afterward, he rubbed his palms together, staring off into space. This was the culmination of years of work and sacrifice, so why did it seem to mean so little to him now? He kept thinking about Marta's note, and her words echoed inside his head.\n\n\"Think about how you felt on that stage...\" he mused.\n\nJanet was gone to lunch when he returned, and he decided to go out and grab a bite himself rather than get a quick sandwich in the basement deli like he usually did. The sidewalk was crowded with people as Joe walked away from the building, hands shoved down in his pockets. A brisk breeze stirred the air reminding him of the wind he had felt on his face outside Prescott while standing on the cliff rim. The similarity ended there, though, since this breeze carried with it the stink of car exhaust and the smell of cooked hot dogs from a street vendor on the corner.\n\nHe turned up the next block, passing several sandwich shops and small restaurants, not sure what he wanted. At the end of the block, he started past an old bar that he vaguely recalled getting a beer in on his birthday, maybe four years earlier. A battered sign hung off the front of the brick building labeling it, \"The Easy Street Bar,\" and even at mid-day, he could see a few patrons sitting on stools near the window. \n\nJoe paused, noticing a pair of small signs taped to the bottom corner of the window.\n\n- Help Wanted- \n\nLooking for bartender for part-time work on weekends - experience necessary.\n\nNeeded - Guitar/Piano player for Friday/Saturday nights - Salary plus tips.\n\nThe door swung back silently on well-oiled hinges, and Joe walked straight over to the bar where a man close to his age was drying a glass with a white towel.\n\n\"What can I get you, Pal?\"\n\n\"I just noticed your sign in the window.\"\n\nThe bartender put down the glass looking Joe up and down.\n\n\"You don't look like a bartender to me, Fella. The ones I know don't wear suits that cost more than my car.\"\n\n\"That wasn't the sign I was referring too,\" said Joe with a smile.\n\nTHREE WEEKS LATER -\n\nJoe stood back from the living room wall of his apartment to admire his handy work. The vintage poster of Jimmie Hendrix he had found in a memorabilia store uptown was the perfect mate to the framed one of Eric Clapton that was next to it. He looked around the room and smiled. No one could say that his home lacked for character now. Gone were the spartan furnishings and bare walls replaced with more dramatic pieces and photos of his heroes. The old Fender Stratocaster that had seen him through his rebellious youth now had a prominent place in the room on a stand next to the couch. There were several more guitars mounted on wall hangers near the door to his bedroom, including the acoustic that he planned to use to write new material.\n\nThe gig at the \"The Easy Street,\" he hoped, would be the beginning. Once he had the rust knocked off, he planned to look into ads online for bands that needed a guitarist. It wasn't a career change he was planning, not really, but it felt good to put a toe back into the world he had thought he left behind.\n\nThe buzzing of his cellphone pulled him away from thoughts of music, and he picked it up from the coffee table by his leg.\n\n\"You got my message?\"\n\n\"I did. I'm glad you called. I'm sorry I didn't get back to you sooner, I've been out in the woods for a while, and cellphone reception was terrible,\" said Marta.\n\n\"It's okay. I've had a lot going on here anyway. Some changes.\"\n\n\"Changes?\"\n\nJoe sat down, shifting the phone to his other hand.\n\n\"Yeah...I was going to get a big promotion at work, one that would have meant even more long hours, but...I turned it down.\"\n\n\"Really? Why?\"\n\n\"I thought about what you said, and it occurred to me that I want my life to be about more than just making big money. I mean don't get me wrong, money is important, but it was starting to rule my every decision, and I guess I missed music more than I realized. I resigned and took a job at a company with more flexible working hours. I might not get rich, but now I have free time for other things.\"\n\n\"You sound happier than when we spoke last. I can hear the excitement in your voice. I'm thrilled for you, Joe. I think you're making the right decision.\"\n\n\"I'm glad to hear you say that because a part of me is still scared I'm making a mistake.\"\n\n\"Change is always scary at first, but at the risk of sounding condescending, I'm proud of you, Joe.\"\n\n\"There was something I wanted to ask you,\" he said.\n\n\"Sure.\"\n\n\"I was hoping that you would come for a visit next week. I've been playing at this bar near my old work, and someone there saw me and offered me a gig at a bigger club. It's just one night, but it's the biggest crowd I've played for since high school, and, frankly, I'm nervous.\"",
        "\"You want me to come hold your hand?\"\n\nJoe laughed, reminded of how Bonnie would have said the same thing to him before a gig.\n\n\"A little moral support wouldn't hurt. I would be happy to send you a ticket and...you know...if you wanted to stay for a few days I could show you the city.\"\n\n\"I could think of a lot of things you could show me...\" she said in a seductive whisper.\n\n\"I just bet you could.\"\n\n\"You've sold me! How could I turn down the chance to see the launch of a future rock legend?\"\n\n\"Let's not get ahead of ourselves. It's one gig.\"\n\n\"I tell you what...How about I bring that outfit I wore for Toby to wear to the show?\"\n\nJoe swallowed hard, remembering how smoking hot she had looked in it.\n\n\"You might distract me from focusing on the show, but I'm willing to take that risk,\" he replied.\n\n\"It's so great to hear your voice, Joe. I can't wait to see you.\"\n\n\"Me too. I'll send you the details straight away.\"\n\n\"Awesome! Take care until then. Bye.\"\n\nJoe lay his phone back down, feeling the kind of youthful energy he hadn't felt in years. Crossing the room, he took down his acoustic guitar and returned to the couch sitting and absently plucking at the strings before a tune started to take shape inside his head. He hummed to himself while strumming away, chords and progressions occurring to him as he went. There was song hiding in there, he was sure of it.\n\n\"Maybe I'll call this one, Marta's song...\" he whispered as the music flowed."
    ],
    "authorname": "darkoverlord6",
    "tags": [
        "mature",
        "mature romance",
        "older man",
        "oral sex",
        "sexy college girl",
        "younger woman",
        "romance",
        "romantic"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-girl-in-the-mirror-5"
}