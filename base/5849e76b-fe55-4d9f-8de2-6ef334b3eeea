{
    "title": "Double Helix Ch. 18",
    "pages": [
        "Norm\n\nMy breath fogged in the February chill as I watched the hulking yellow and black earthmover bite deeper into the ground. The shovel carved out a clod of moist earth and swung its arm up and to the left to drop into the waiting dump truck. I felt tense, coiled like a spring, waiting for one of a dozen different disasters to happen: the side of the pit to collapse, the excavator to tip over, the shovel hitting some buried trunk cable not on the city's map, or simply a breakdown of the equipment. We had only budgeted to rent the vehicles for a couple of days, so delay was its own kind of calamity.\n\nI saw Stan watching me as he swung the shovel back towards the pit, so I forced a smile and gave him a thumbs up. The pit was a sixty-by-forty foot rectangle set back sixty feet from the west side of the house, opposite the driveway. It was currently about six feet deep, except for the new section that Stan was working on and had started to dig a few feet deeper. \n\nI checked my phone messages again for at least the twentieth time. Nothing had changed. The last message I had received confirmed that Andy would deliver our building materials later that day. The greenhouse project was much larger in sheer size, but the equipment needed to erect it had been more rudimentary and the construction a lot less dangerous.\n\nMy radio crackled to life and Nock's voice came over it. \"Bates, Bates, Bruce here. I've got a vehicle approaching from the highway. Black sedan. Might be Daniel's car. Over.\"\n\n\"Thanks, Bruce. Keep an eye out. Let me know if anything looks suspicious. Over.\"\n\nWe had stationed Nock up on top of the barn where he could easily spot any vehicles approaching from the main road. We had all agreed that it was very unlikely that anyone would be around to even see what we were doing, let alone take any interest in it or notify the authorities, but it didn't hurt to be careful. Daniel had phoned me earlier to say that he had some news that he wanted to deliver in person, so this visit was expected.\n\nI had been slowly circling the construction site as I watched Stan work. While I had been out of sight of the house, behind the excavator, Stansy had appeared, looking a little frantic. She spotted me and started away immediately, coming around the pit at a dead run. I picked up my own pace, but she closed the distance so quickly that it hardly mattered.\n\n\"Hey,\" she huffed, only slightly winded, her cheeks and nose red from the cold. \"Daniel's here.\"\n\n\"Yeah,\" I said. \"Nock saw him coming up. Did he tell you what's up?\"\n\nHer voice had an edge as she spoke. \"He says the government...they're starting to round up former genemods. People who've already been reverted.\"\n\nI stared at her. \"What? What possible reason could they have to do that?\"\n\nShe spread her hands. \"I have no idea. Why don't you come talk to him?\"\n\nI knew why Stansy was upset. Her son was a half who had undergone reversion. I considered bringing Stan in as well, but we simply couldn't afford the delay. Besides, I wanted to find out if Daniel's story checked out before involving more people than necessary.\n\nI found Daniel in the den standing at Tilly's shoulder, both of them staring at the terminal. As soon as we entered the room, she waved us over. She was talking in a low voice, and I looked for and saw the table microphone in front of her.\n\n\"I cannot tell you anything for certain if this claim about reverted genemods is true,\" a man with a crisp tenor voice said over the terminal's little speakers. \"But I've been following Renault for about a year now. I have read and evaluated comprehensive listings of his claims and predictions, and other than some obvious disinformation he puts out, I would say that there is compelling evidence that he knows what he is talking about. My theory is that he is either inside the DOJ or is getting information directly from someone who is. He warned last year about the move on the Agency's smuggling operations two months in advance. That's what got my attention.\"\n\n\"Hold on,\" I said, motioning for Tilly to key the mike as I approached. \"You're saying there's a guy out there that knew in advance about the biggest blow the Agency has ever had?\"\n\n\"Oh, uh, hello,\" the voice said. \"Yes, that is what I am saying.\"\n\nTilly broke in. \"Ed, that was Norm. He's part of our group here, an important part. Norm, this is Ed from node 238, an agency safe house. I asked on the darknet forums if there was anything like an expert on this Renault character that Daniel gets his information from. Ed here came back with an answer in under a minute, so I got a voice chat going.\"\n\nI didn't need to ask what kind of genemod he was. The Agency customarily gave Eidetics the name of Ed, Edie, Eddy, or some close variation.\n\nI pushed the talk button. \"Nice to meet you, Ed-238. So, two questions. If this guy works for the US government, why isn't he already locked up? And why haven't we heard much on him before now? Daniel mentioned him to us several months ago, but...\" I turned to Daniel. \"Pardon me for saying it, but I didn't know if this were just some garden-variety conspiracy theorist.\"\n\n\"No offense taken,\" Daniel said quickly. \"There are plenty of wackos out there.\"\n\nEd spoke up. \"As I said, he could be getting this information from a source, and resides in a part of the world where he cannot be extradited to the United States. But he is also very careful, using foreign-owned and operated message boards. Everything he writes and posts is encrypted with a public/private key, to ensure that someone else cannot impersonate him. Any attempts to trace him have, to my knowledge, failed. As for why he is not mainstream news, I offer two reasons. One, our news is tightly-controlled, and even a smear piece is going to bring attention to him. Two, the disinformation I mentioned earlier. Renault's supposed explanation for the Rot is an alien plot to destroy the human race. He mentions is regularly. Follow him for any length of time, though, and you'll see little hints that indicate that this is a deception. It ensures that most do not take him seriously.\"\n\n\"Oh,\" Daniel said, and I pushed the talk button again, \"you don't think the aliens are real?\" He looked both disappointed and embarrassed.\n\n\"Not in the slightest,\" Ed said. \"And neither does Renault. You can bet on that.\"\n\n\"But despite that,\" I said, \"you think he's real and that he gives accurate information. Shouldn't we be disseminating everything he says throughout the Agency?\"\n\n\"I tried to get them interested, but like most, they saw 'aliens' and gave it a pass.\"\n\n\"So we bypass them,\" Tilly said. \"We post his feed directly to the darknet. Ed, how would you feel about editorializing those? You could give your opinions on which information is true and accurate and which to ignore, and tie it in to the larger context.\"\n\n\"I would be happy to. I have little to fill my time here. I could start by summarizing all of the important points. There are a lot of events that I could point to that even the casual observer would have to admit are too improbable to be coincidence.\"\n\nNissi had come in while was speaking, nodded greeting to the rest of us, and walked over to stand next to Tilly, on the other side from Daniel.\n\n\"I think that's a great idea,\" I said. \"And we need to go over everything you have to say. What about contacting this Renault directly?\"\n\n\"Not likely,\" Ed said. \"He will occasionally answer questions left by his followers on message boards, but has never left any contact information that I've ever seen.\"\n\nNissi suddenly spoke up. \"Stansy, your son.\"\n\nShe nodded. \"That's what I'm worried about. I get emails from him about once a week, and the last one came on Tuesday, just two days ago, so I'm trying not to freak out too much, but this has me scared. Can we look at what this Renault has to say about the topic in full?\"\n\nI relayed the request to Ed and he sent back a node address. \"You'll find his latest stuff there. He hops around a bit, but it's not that hard to find him again. If you want to see an example of disinformation, look at last week's drop. It's all about how the 'Grays' developed the Rot on their secret base on the dark side of the moon and delivered it to the Earth on one of their saucer-shaped spacecraft. Like I said, you've got to read past that stuff.\"\n\nTilly called up the node and a plain text document appeared onscreen. \n\nI've got some unfortunate news to relay today. McCain just ordered our esteemed FBI director to compile a list of former genemods and begin detaining them in secret. We know that there are at least a quarter million reverted genemods still living in the country, so this is a huge undertaking. You might be asking, why the secrecy? And what purpose does this new action serve?\n\nThe reason for secrecy is two-fold. The existing population of reverted genemods is large compared to the number of FBI agents in the field. Even if local law enforcement is enlisted to aid them, it will take a considerable amount of time and resources to find and apprehend that many people. By targeting a few at a time and simply \"disappearing\" them, they fade easily into the statistics of the thousands of people that vanish every year. It might take several years, but with as dispersed as the population of reverts is, this could be done without alerting them all of the danger.\n\nThe second reason is the possible public outcry. Offering genemods reversion was seen as a compassionate act by many in the populace, a means of allowing them to return to the human race, as it were. Reneging on that could further inflame negative sentiment against the McCain administration. As I have mentioned elsewhere, the president's announced crackdown on genemods last year dropped his approval rating to 28%, lower than at any time since 2009. I think that it was a trial balloon of sorts, to find out how much public sympathy still lies with genemods. That, in turn, has informed the shift to more covert tactics.\n\nAs to why McCain is going after reverts, that is anyone's guess. I have documented in prior drops the over four hundred genemods that briefly appeared in public records when they turned themselves into local law enforcement during the amnesty period. Every last one then disappeared, no mention of reversion treatment and release, a trial, nothing. Until we know more about why genemods are simply vanishing, rather than being reverted and released, we can only speculate, but my guess is that the two are related. Maybe they are simply being killed, or maybe they are now being viewed as some kind of resource that the administration can exploit.\n\nIn any case, watch for this topic to recur in future drops. I will attempt to document these disappearances as they occur. Any help that my followers can offer in this area is, as always appreciated.\n\nRenault\n\n\"It does read like conspiracy theory,\" Nissi said, frowning.\n\nTilly reached up and touched her shoulder. No one had transmitted the comment, and she kept her next comment private as well. \"That doesn't mean that it is. Think of the world we live in now, how far off the rails we've run in the last ten years. I want to have a look at what Ed comes up with before I decide anything.\" She keyed the mike again, thanked Ed, and told him we would be in touch.\n\n\"And if this Renault is legitimate,\" Stansy said. \"Then it is just a matter of time before they take my son.\"\n\n\"Maybe,\" I said. \"He didn't say anything about reverted halfs.\"\n\n\"Ever the optimist,\" she scoffed.\n\n\"What about your sister?\" Tilly said, turning to me.\n\nI nodded and sighed heavily. \"Yeah, that's been on my mind since the moment Stansy told me. I should try to get word to her. She's a drug addict, probably the perfect candidate to vanish without anyone getting terribly suspicious.\"\n\n\"Can the Agency help her?\" Nissi asked.\n\n\"That would be the obvious choice,\" I said, \"if they believe her to be in any danger. If Ed can make a good case, they might start taking reverts in all over, though it will really strain their resources. I think the harder part is going to be convincing Sharon-that's my sister-to go along with it. I don't think she'll listen to our parents. She had a bad break with them when they found out she was using, threw her out of the house.\"\n\n\"Have Nock talk to the Agency,\" Nissi suggested. \"He's formed some good contacts there.\"\n\n\"Good idea,\" I said. \"I will. Though I'll wait for Ed's summation first. I have a feeling that Nock is going to want to dismiss this whole thing as nonsense.\" I nodded at Daniel. \"Thanks for bringing this to us.\"\n\nDaniel looked a little overwhelmed. \"Sure, sure. I had no idea the kind of resources you have access to with this darknet.\"\n\n\"You about done here, hon'?\" Nissi asked. \"I wanted to run some ideas past the GS board about Nonna's treatment.\"\n\nTilly stood and gave Nissi a quick kiss. I politely averted my gaze. \"Yeah, think so. Any progress yesterday?\"\n\nNissi sighed. \"Still the same.\"\n\n\"Where are we with that, exactly?\" I asked.\n\nNissi crossed her arms as she addressed me. \"Well, our treatment to fix her faulty DNA will work. We can target all of the problem sequences with a retrovirus, basically just snip them out and replace them. But that leaves all of those plaques sitting in her brain, slowly killing it. We can dissolve those at a rate that will prevent further damage to her brain, but the toxins generated from that will give a nasty shock to her system. If we try very small doses, we can't reach the concentration we need to have an effect. The sims are only giving her about a 30% chance of survival. A younger person would probably be fine, but she's almost seventy.\"\n\n\"I see,\" I said, \"thanks.\"\n\nNissi took a seat at the terminal, and I started to head out to see how Stan was doing, but a thought occurred to me, and I turned back. \"What about that big data dump that SamIAm gave us?\"\n\nNissi's eyes went wide. \"Holy shit!\" Her lips slowly drew back in a grin. \"I never thought of that. It's...it's crazy, but it's brilliant. Those treatments are supposed to reverse all of the physical effects of aging, right down to restoring telomeres and repairing DNA transcription errors. It could be just what we need to make this treatment work.\"\n\n\"Unless I'm misunderstanding,\" Tilly said slowly, \"we would be making her physically younger. Are we sure she even wants that?\"\n\n\"Right,\" I said, \"she needs to fully consent to what we're considering. She's still lucid some of the time. We should have Wendy talk to her. If anyone can get her to understand, it's her.\"\n\n\"Have her write out a consent letter and sign it,\" Stansy suggested. She put up her hand when Nissi looked at her sharply, and said, \"Shut up, it's not because I'm a lawyer. What I'm saying is that if she can put into words what we want to do, then she really understands it. We'll know this is what she wants.\"\n\n\"I'll tweak the sim and see what pops out,\" Nissi said. \"Thanks, Norm.\"\n\nI shrugged. \"It's nothing. Just trying to help.\"\n\nStansy followed me outside. Stan had made progress without me, deepening the entire pit by a few more feet. \"Hubby's pretty good at this,\" she remarked.\n\nI laughed. \"Husband? Did I miss something?\"\n\nShe tilted her head, brushing back a long strand of blond hair. \"There's no common law in Oregon, but we'll make it official someday. We're into our second year now, and I can't imagine being with anyone else.\"\n\nShe fell silent for a time, and we watched Stan work. \"I'm getting my son back,\" she said. Her tone was iron. \"I don't know what I'm going to do, but I have to do something.\"\n\nI closed my eyes. I could imagine how she must feel, knowing that her son could be taken at any moment. It was unreasonable, but understandable. Logic told me that, even if Renault was correct, it was very improbable that her son was in any immediate danger. But family sentiment tended to override logic, as I knew very well. She needed to know he was safe.\n\n\"Have you written him?\" I said at last.\n\n\"I'm going to. I'm not sure if I should tell him the whole story.\"\n\n\"He's fourteen, you said?\"\n\n\"Fifteen now. And according to him, he's kept my contacting him a secret from his father all this time. Are you saying you think he can handle the whole truth?\"\n\n\"You're talking about him leaving his father and coming to live with a mother he hasn't seen since he was seven. Shouldn't that be his decision?\"\n\nStansy frowned, shaking her head slightly. \"You're right. It is his decision.\"\n\n\"And if he decides not to come?\" I asked. \"You'll respect that choice. One thing he must know is that there is no going back. If he comes here, he stays. I won't let you bring him here if there is any doubt of that.\"\n\nHer eyes narrowed, and I was reminded of an old saying about the fierceness of a mother protecting her young. After a moment to consider, though, she nodded. \"Right, I understand. Once he knows about this place, he can never leave.\"\n\nI made sure I had Stansy's undivided attention for my next statement. \"Stansy, this is very important. If he wants to come here, we'll talk about our next steps, but under no circumstances are you to tell him how to get here, or give him enough clues to figure it out on his own. Is that clear?\"\n\n\"Perfectly,\" she said. \"I'll tell him about the president's order and let him know I can offer him protection, nothing more. I'll let you know what he says. Thanks, Norm.\" She looked at the dump truck. \"Looks like it's almost full. Guess I'm up.\"\n\nI watched her trot over to the truck, pop the door open and lithely swing herself up into the cab. Most of the dirt moved would just get added to the berm fronting the greenhouse, and some would need to be dumped back over top of the lab once we were finished building it.\n\nThe radio crackled, \"Hey, boss. Got a second to talk?\"\n\nI resisted the urge to chastise Nock for his lapse in radio protocol. \"Sure, Bruce. What is it? Over.\"\n\n\"Have you heard anything about impeachment? I forgot to check the news this morning.\"\n\n\"No,\" I admitted. \"Though I haven't been following it much lately. Over.\"\n\nCongress had come back into session in early January, and for a couple of weeks, we had all been practically glued to the television and the news feeds, watching for an announcement of impeachment proceedings brought against McCain. As the days went by, though, we began to grow more and more discouraged. All of the rhetoric coming out of the Democratic Party was about supporting the president in this time of ongoing crisis while renewing their pledge to Americans to ensure that critical federal programs such as food distribution continued to operate.\n\n\"Yeah,\" Nock said. \"I understand. Even I got sucked in, thinking things were about to change. I guess we just gotta stay focused on our own little slice of paradise.\" I could have argued that we had already been having an effect on the wider world through the darknet, but I didn't see the need to belabor the point.\n\nWe broke for lunch a few hours later, Nissi taking overwatch so that Nock could eat. She had been training with the .308 rifle, and while she couldn't come close to Nock in terms of accuracy, she was better than the rest of us with the possible exception of Stan. The main point, though, was that she could use the gun's scope to scan the road and alert us over the radio if she saw anything unusual.\n\nAn hour later, we were back on the job. The work slowed down a bit in the afternoon as we neared our target depth of sixteen feet. Tilly helped me with that, basically eyeballing the distances and angles and spitting out measurements that she claimed were accurate to within an inch. We would use lighter tools to shrink that margin further. Next up was digging a trench from the edge of the pit up to within a few feet of the house. With that complete, we had to wait about an hour for Andy to arrive. ",
        "He drove up after four in a semi-truck and flatbed trailer loaded with prefabricated reinforced concrete columns, supports, and wall panels. His wife arrived just after him with another truck hauling a crane. Each piece of concrete had to be chained up and lifted one-at-a-time to a staging area off to one side, so all of the genemods except Wendy pitched in to help. It was hard work, and well after dark by the time we had finished.\n\nI lacked the endurance and resilience of my gene-modded housemates, so I was ready to curl into a ball and pass out from exhaustion by the time we got the last piece of concrete off the truck and Andy and Abby drove back to the road, heading for Portland. Everyone ate double helpings of the vegetable and rice dish that Wendy had prepared.\n\nTilly sat to my right at the big dining room table, and Nissi on the other side of her. I had noticed that they tended to touch frequently, often clasping hands as they were doing now, and it made me feel the need to put my own hand on Tilly. I ate with my left hand so that I could caress her back with my right, and she turned an adoring smile on me that sent chills down my body. I loved her so much that I practically ached to hold her.\n\n\"So how did the sims you were going to run go?\" I asked, catching Nissi in the middle of laughing at something Wendy said.\n\nShe settled herself and nodded excitedly. \"Better than I could have hoped. If we run the full battery of aging treatments first, it gives us the highest chance of avoiding complications.\"\n\n\"Wendy said this,\" Nonna said from the end of the table. \"How young will I be?\"\n\nNissi stared into the distance for a moment before she spoke. \"We're not entirely sure. The documents we have only talk about the effects on tissues, though they mention renewed cognitive ability. If I had to guess, you'll be back in the prime of life, the way you were in your twenties or early thirties, though some tissues, your bones, for example, would take more time to regenerate than others.\"\n\nNonna looked pensive. \"Is much to...\" she frowned, \"to con...see...der.\" She said the word slowly, as though it were unfamiliar to her.\n\n\"You would have your mind back,\" Nissi said.\n\n\"And maybe another lifetime to live,\" Wendy put in.\n\nNonna just frowned and resumed eating, so the conversation drifted elsewhere. It was a minute or two later that she said, suddenly. \"I do this.\"\n\nNissi stopped mid-sentence and turned to her. \"The treatment? Treatments? You want to go ahead with them?\"\n\n\"I write this down, as the lawyer say. I know is risk. I want this.\"\n\n\"That's great,\" Nissi said. \"I'll let the team know. We can get started once the lab is fully operational.\"\n\nI finished quickly and excused myself from the dinner table, heading for the den. Sitting down behind the desk, I brought up a text editor and typed out a single line, \"Dear Mom and Dad.\" There I stopped, my hands hovering over the keys.\n\n\"Oh, hey,\" Nissi said, pausing at the doorway to the den. \"I can come back later.\"\n\n\"I should only be a minute,\" I said, my eyes returning quickly to the screen. Composing this message should be a simple task, but nearly two years had passed since my parents had heard anything from me. I couldn't leave a long message, but I felt the need to explain myself.\n\nMy fingers finally began to move. \"I realize that you probably thought I was dead by now, but things have been complicated. Please open the attached self-installing application tomorrow, Friday, between 9am and 11am. It will encrypt your web traffic and connect you to a hidden network where we can talk without putting any of us in danger. I love you both, \n\nMartin.\"\n\nI packaged the text using an application that Tilly had developed, tagged the email with a longtime church friend of my mother's and sent. It would travel through the darknet to a node halfway around the world, then exit to the public internet and make its way to Minnesota. The VPN it would connect to was a temporary, miniature version of our darknet.\n\n\"All yours,\" I said, standing and nodding politely at Nissi. \"Please keep me informed about Nonna's treatment.\"\n\n\"Of course,\" she said, sitting and flipping her hair out of the way of the chair back.\n\nTilly met me as I returned to the living room. \"You're really sore,\" she said. \"Let's get you a hot bath.\"\n\nI rolled my shoulders, feeling the ache in my back that I had been ignoring even as it slowly crept in. \"That sounds nice.\"\n\nI sat on the toilet seat as Tilly ran my bath, adding a generous helping of Epsom salt to the water. \"I wish I had enhanced muscle tissue,\" I said wistfully. \"You were out there working twice as hard as I was, and you don't feel it at all, do you?\"\n\nTilly studied me. \"What's gotten into you, Norm?\" Then her puzzlement turned abruptly to realization. \"It's your sister, isn't it?\"\n\nI shook my head. \"It's almost creepy how you do that. Yeah, I guess I've had her on my mind today.\"\n\n\"It's ready,\" she said, flicking the water from her fingers from checking the temperature. She shut off the water and helped me to undress and stagger to the tub. \"You were starting to lock up a bit. This should feel really good.\"\n\nI sank into the languid heat, just at the brink of being uncomfortable, and felt my tortured muscles immediately begin to unclench. \"Oh, that's...that's very good,\" I sighed. \"I love you, Tilly.\"\n\nShe smiled at me, then knelt next to the tub and leaned over to kiss me. I let her take the lead, her tongue moving playing slowly over mine as her fingers stroked sensually through my hair. Her other hand trailed down my body and found me fully erect beneath the surface of the water. Her fingers closed lightly around it and stroked gently, never breaking the kiss. She hummed in pleasure as I moaned into her mouth.\n\nWhen she finally let me go, I slumped against the back of the tub. \"God damn, girl,\" I said. \"Have you been taking lessons?\"\n\nShe looked away, a mischievous sparkle in her eyes. \"Well, I may have tried a variation of that little move a few nights ago.\"\n\nI rolled my eyes, \"Of course.\" I submerged my head and came up so that she could shampoo my hair.\n\nI had thought that sharing Tilly with Nissi would be awkward and uncomfortable, and it had, at first. It had taken me a few weeks to start to relax and truly accept that nothing substantial had changed between the two of us. Tilly loved me just as she had before. I had grown comfortable enough with the idea that I even got a little voyeuristic thrill hearing about some of the things the two of them got up to. Besides that, Nissi had apparently put the brakes on after that first night, and the time they spent together was more in getting to know each other better. They shared a lot of touching and kisses, but as far as I could tell, they hadn't had a repeat of the wild sex they had experienced on Christmas night.\n\nAfter a few more minutes soaking, I got out and toweled off, still bone-weary but a lot less sore. Tilly kissed me again. \"I'll be with you shortly,\" she said, and began stripping to take a shower.\n\nI padded down the hall to our bedroom and fell onto the bed on my back with an \"Oof\" before realizing that I hadn't peeled back the covers. Grumbling at myself, I somehow managed to do that without getting out of bed, flailing my arms and lifting my body in a way that probably took more effort than simply getting back up would have done.\n\nI struggled to keep my eyes from closing, and as it was, I had to force them open when the bedroom door creaked open. Tilly came in with a towel around her body and another wrapping up her hair. Humming to herself, she put the first towel over one shoulder immediately and moved about the room in the nude. She paused at the dresser and removed the matching opal necklace and earrings that she often wore, items left by one of Stansy's relatives. Then she used the towel to get the remaining patches of water she had missed, casting quick glances my way.\n\n\"Scanning\" she called that, when she took in a person's appearance to update her mental model of their emotional state. She knew exactly what her seemingly innocuous display was having on me. I was nearly at full mast again. Women crave the attention they got from displaying their bodies, but Tilly was the only woman who got instant feedback of just how much of an effect they were having. Her bending at the waist to apparently dry her ankle, presenting the smooth round globes of her ass framing that perfect little pussy, was calculated to send my arousal into overdrive.\n\nShe turned to me, her lips curling into a predator's smile upon feeling the full force of my reaction. She uncoiled the towel from her hair, shook it and brushed it out with her fingers, and came straight for me. She threw back the covers, exposing my hard cock, and climbed in, straddling me. Holding my gaze with her own, she maneuvered slowly back and down, finding the head of my cock unerringly with her pussy. \"Oh, Norm,\" she sighed, biting her lip as the tip slipped inside. She settled her body over mine, the warmth of her a balm to the pain and weariness of the day.\n\nShe moved slowly, sinking my cock deeper into her until our bodies fetched up together. Groaning, I rocked my hips, but she somehow managed to match my movements almost perfectly, holding me steady inside her. I tried maybe four thrusts, but stopped when it brought me only the smallest stimulation. \"What are you doing?\" I asked, more curious than anything.\n\n\"I want you to relax and be perfectly still,\" she said. \"Let me make love to you. Just close your eyes and feel. Okay?\"\n\n\"Okay,\" I said, and closed my eyes. I trusted her completely and a shiver of anticipation went over me as I awaited whatever she had planned for me.\n\nTilly shifted slightly, sending a brief but delicious pulse of pleasure out from where our bodies connected, and then I felt a warm, wet touch at my nipple. I jerked slightly in surprise and she paused, her tongue held still against me, but I quickly relaxed again. The few times a lover had tried this on me, the results had been less than inspiring, but I knew that she would figure things out for herself.\n\nRather than backing off and trying something different, though, she continued to probe and caress it with her tongue. She moved her body, too, not a forward and back thrusting, though, but an odd twisting of her hips. The sensation was mild, but like nothing I had felt before, and I sighed, luxuriating in it.\n\nIt was only after a minute or two of this subtle stimulation that I felt something new. She had begun to switch back and forth between my nipples, adding little nibbles using the barest pressure with her teeth. It was like something dormant had awoken. What before had been a bland sensation, devoid of sexuality, now sent little jolts of pleasure right down to my cock each time she touched one of my nipples with her tongue or gently squeezed with her lips or teeth. And each time, she gave that little twist, spiking the sensation even higher.\n\n\"How did you do that?\" I asked, grinning in wonder at this new discovery.\n\nShe paused in her attentions to kiss me. \"I didn't do much,\" she said. \"You've always been able to feel this. Your mind just never quite made the connection until now.\"\n\nShe began to move her hips, adding a little thrust to the movement, as she returned to pleasuring my nipples. Staying still was getting harder to do. I decided to test her with a quick counter-thrust against her movement, but she must have anticipated the motion somehow, as she canceled it with her own hips, riding me perfectly even as I thrust several more times, each one harder and faster than before. \"Oh no,\" she said with a little chuckle. \"I've got you now. You can't get away. You might as well lie there and enjoy it.\"\n\nHer playful words, delivered in a smoky tone of confidence, somehow made my whole predicament even hotter. I swear my cock grew even harder inside her. I groaned in deliciously frustrated need, but relented, surrendering myself to her control. This reversal of roles had happened to me once before, with Nissi, but that had been different. That had been fueled by desperate arousal.\n\nThis was calculated and yet deeply intimate. It was about discovery and pushing boundaries. As she had said, I was well and truly caught, and would go wherever she took me. I focused on breathing deeply and relaxing, letting her do as she wished and simply feeling. The urgency gradually relented as I relaxed still further, accepting what she gave and demanding nothing.\n\nHeady sensation trickled from the gentle friction of her body against mine. Time drifted. For all I knew, it might have been an hour or only a few minutes that I basked in that warm, peaceful glow when something began to change. Tilly's steady breathing became more ragged. She stopped abruptly and let herself melt into me, letting me take the full weight of her for the first time since she had begun. Her breathing came shorter and faster even as she held perfectly still. \"I can't...stop it,\" she whimpered, her voice edged with frustration.\n\n\"Just let it happen, Tilly,\" I said putting my arms around her to pull tightly against me. I knew that sometimes she could catch herself and hold off from orgasm, but it was hit or miss.\n\nI felt a quivering at the base of my cock as she gave a cry, and then she was squeezing me hard along its length, as her body rocked in spasms. Suddenly I was catapulting towards my own climax. I began to thrust my hips without thinking, driving my cock in and out.\n\n\"No,\" she moaned through gritted teeth, \"Norm.\"\n\nIt took a massive effort of will not to keep going, but I somehow managed to halt my movements even as her orgasm began to subside. I had been right at the edge, still was, as her pussy gently gripped and relaxed. I remained motionless as she came down.\n\nFinally, she took a deep breath and lifted her weight off of me, still keeping me inside her. \"I almost ruined it,\" she said. \"I was so focused on what you were feeling. I didn't realize I was so close.\"\n\n\"Almost ruined what?\" I asked. I glanced at the clock on the nightstand. She had been at this for at least thirty minutes.\n\n\"You'll see,\" she said with a ghost of a smile.\n\nShe waited another minute for my arousal to subside before moving again. This time, she lifted off of me. I felt my cock withdrawing from her pussy until just the very tip remained inside her. She abruptly reversed, but instead of letting me sink all the way inside, she stopped again once the lips of her pussy had closed around the head of my cock, withdrew to the very tip, then back in.\n\nThis new stimulation was much more intense than what she had done before, but still not enough to drive me firmly towards orgasm. She teased me like this a few minutes before slowly sliding my cock back into her depths and resuming her earlier motions. Her lips returned to my nipples and we were back to where we were before. I realized now, though, that she had been building me up the whole time, moving me closer and closer to climax, so slowly that I couldn't tell.\n\nNow she alternated with that tip-teasing move, which I was quickly learning to enjoy immensely. She played my body like a finely-tuned instrument, and this time I sensed my own approaching climax. Just when I felt myself reaching the point of inevitability, she stopped all motion.\n\n\"Oh, God, Tilly,\" I said. I was hanging right at the edge. Pleasure swam over me. My cock twitched inside of her, but I did not go over. She moved ever so slightly, holding me there for a long moment. When I began to feel myself pulling back from the edge, she plunged a bit farther up and down my shaft, bringing me right back again. This time, I hung there a bit longer, the pleasure pooling in my thighs before ebbing. Muscles in my legs and arms twitched involuntarily.\n\n\"Like that?\" she asked, riding me up to the edge a third time. For answer, I lifted my head and kissed her, pouring my love into her. She tensed for a moment, but then relaxed. I knew the reason a moment later as she moaned into the kiss and her pussy squeezed my cock. She cried out in sudden ecstasy. \n\nThat sent me sailing over the edge as well. The pleasure was blindingly intense, the long build-up and then the maddeningly pleasurable tease and denial multiplying the force of my climax. \"Fuck! Oh, fuck, Tilly!\" I cried, as I crested. As I began to shoot inside her, she screamed in answer. Her pussy quivered up my length and then clamped down even harder than before. I smiled to myself as my pleasure faded, my cock still pumping semen into her in ever-weaker pulses.\n\nIn contrast, she was just getting started, the steady grip and release of her sheath down the length of me signaling her body's total commitment to giving her pleasure. I eased my cock out of her before it had a chance to become too sensitive. I held her as her mind shut down completely, and a babble of words tumbled out of her. \"Norm. Fuck. Please. God. Fuck.\" I always found it amusing that only when she was in the grip of these orgasmic fugues did she lose control so completely that she would sometimes spout profanity, and she wouldn't remember it later.\n\nI held her and stroked her back as she rode out the orgasm, enjoying the weight and warmth of her body on mine. I even got hard again after a few minutes and considered, as I had many times before, thrusting my cock back inside her while she was deep under. As always, I decided to wait it out, enjoying the sight, sound and feel of a woman lost completely to sexual pleasure.\n\nI was beginning to doze off when Tilly stirred. She rose to her knees and reached to turn off the lamp switch, but came right back, resting her head on my shoulder. \"I hadn't planned for that to happen. Nissi says I have a hair trigger wired up to a bombshell.\"\n\n\"I'm not complaining. It was good. Really good.\"\n\nShe made a happy noise and snuggled in tighter against me. I stroked my fingers through her hair and down her back, and she fell asleep in seconds.\n\nNock woke us all the next morning to start work. Wendy had agreed to monitor the terminal and let me know if my parents connected to the VPN that Tilly had created for me. After an early breakfast and three pots of coffee, we headed out to start the day. Daniel was bringing a cement truck from Corvallis in the afternoon, but we needed to get a base down first to ensure that the foundation didn't settle and crack.\n\nThe six of us, working together, put the base down in layers, wetting and compacting as we went, until we had it a foot thick from end-to-end. Once that was done, we set up the rebar cage over the next few hours, forming a lattice structure that would greatly strengthen the foundation.\n\nI kept checking the time, and when the deadline I had given my parents approached, I excused myself, climbing an extension ladder to get back to the surface and hurrying inside. I found Wendy sitting at the terminal reading a book, her cat seated in her lap, tail twitching as she purred loudly.\n\n\"Oh, hey,\" she said, looking up at my entrance. \"I've been checking every minute or so, but nothing so far. When we got past 11, I wasn't sure if I should go get you or keep watching for them. It looks like they didn't go for it. I'm sorry.\"\n\n\"You did fine,\" I said. \"I wasn't sure if they were actually going to show. They might not know what to think. Their son suddenly shows up out of nowhere asking them to install and run software on their terminal? I don't blame them for being suspicious.\"\n\n\"How are you going to get word to them?\" Wendy asked. \"Send another email explaining everything?\"\n\nI shook my head. \"I don't know. I don't want them trying to send a message back. They might be surveilled, especially since there's a possibility that someone has connected the man responsible for that police officer's death in Seattle to the guy volunteering with an Agency safe house who slipped away from them in LA.\"",
        "The application I had used to package the email acted much like a virus, and we used it to contact people that we suspected might have their email intercepted. Upon the email being opened, the code would trigger and extract my message along with the VPN software, sending it straight the terminal's tiny memory. That would only happen if the correct hardware node address on the accessing terminal were detected by the application. If someone else tried to open the email, the application would delete itself, making it appear that the file of the picture being sent had arrived corrupted. It would also dispatch a message back to me through another circuitous route that entered the darknet. That's how it was explained to me, anyway.\n\nSince I hadn't gotten a message to indicate that the email had been intercepted, I could only assume that either my mother had not read it yet, or she had looked at it and decided not to contact me.\n\n\"Wendy,\" I said, sighing. \"You don't need to stay here. I can check the logs later and see if they connected.\"\n\n\"Oh, I'm fine. This chair's actually pretty comfy.\"\n\nI reached over to pet Ingrid's head a few times, and she turned to try to bite me.\n\n\"Careful, she's a little shithead,\" Wendy said. I noticed that the stupid cat didn't try to bite her.\n\n\"I can see that,\" I said. \"Thanks, Wendy.\"\n\nShe turned the page in her book. \"Don't thank me. You get to go work in the dirt and the cold.\"\n\n\"Right,\" I said with a laugh. \"Guess I better get back to it.\"\n\nWe finished the rebar and broke for lunch. When Daniel arrived with the concrete mixer truck, we all converged back on the work site to pour and work the concrete. Once the stuff covered the bottom of the pit to the proper depth and had been worked smooth, that phase of the job came to an abrupt end. We then turned our attention to another part of the project, the access tunnel.\n\nMy design for the lab included an exit to the surface at the far side, but once the structure was completed, it would only be used in an emergency. A pair of metal doors would open upward against the weight of about six inches of gravel and dirt, aided by counterweights that would lift the doors if a pin were pulled. For ordinary access, the lab connected to the cellar of the house through a long tunnel. Stan had dug a trench for the tunnel to within a few feet of the house, and now he and Nock dropped into the trench to work with a pick and shovel.\n\nThe roof of the cellar was at surface level, so the tunnel needed to descend about eight feet for its floor to be on level with the lab's floor. I had decided to place stairs at the house side of the tunnel so that most of the structure would be safely underground. Stan and Nock carved dirt away in an upward slope at the indicated point as myself and Nissi dug out the trench from the top. Stansy was keeping watch on top of the barn.\n\nMeanwhile, the steady thump of metal on concrete came out faintly from the side of the house as Tilly carefully broke apart the cinder blocks lining the cellar wall with a sledgehammer. There were no load-bearing structures there, but the blocks acted as a retaining wall, so we wanted only to take out as much as we needed to. Nissi, working nearest the house, jumped back as one of the blocks exposed by her digging suddenly cracked. Another blow vibrated through the wall and part of that block crumbled, leaving a hole a few inches across that opened into deep darkness. \"Hey there,\" came Tilly's voice from the hole.\n\n\"Don't worry, babe,\" Nissi said. \"We'll get you out of there.\" Tilly's chuckle echoed out of the hole and the hammering started up again as we resumed digging.\n\nA few more hours and we had a six foot trench that sloped down to fourteen feet, then ran straight to the big pit where the lab's foundation was curing. From there, we proceeded in stages, adding base for the tunnel, then rebar, and then concrete to form the floor. We built the stairs by placing stringers made for the purpose on either side of the sloped part of the trench and attaching stringer forms to hold the concrete's shape as it was poured. By the time we stopped for the night, we had concrete curing along the entire floor of the pit and the trench. Then we took two days off to allow it to set.\n\nThe Ed we had spoken to a few days prior had put together his timeline and notations of Renault's postings very quickly, and Tilly and I introduced Nock to it, explaining how we needed his help to convince the agency that what sometimes looked like unhinged rants contained a significant amount of truth. Nock told us we were both off our rocker, but agreed to study it carefully before making conclusions. He worked through the night, apparently cross-checking Ed's work with Renault's original postings and other sources of information. By morning, he grudgingly admitted that there was too much truth for it to just be coincidence, but warned us that the Agency was going to be a lot harder to convince than he was.\n\nThe remaining construction took several weeks. While most of us worked on the lab, Alice and her kids took care of the greenhouse crops, with an occasional assist from Tilly or Stansy. We had decided to delay a couple of plantings to devote more labor to the lab, but we already had plenty from our first few harvests to carry us through and even continue to sell up north.\n\nWith the foundation dry enough to resume, the construction work suddenly became a lot more dangerous. Working as a team, we lowered the precast columns by crane, each of them over a ton in weight, into the pit and maneuvered the rebar jutting from their ends into holes made by inserting metal cylinders into the concrete as we had poured it. The holes were then filled with more concrete, sealing the columns in place as it dried. The exterior walls went in too, a series of four-inch thick panels that were slotted into the foundation in much the same manner as the columns, and the joints between them sealed against moisture. When complete, the walls stopped a few feet short of the surface.\n\nConcrete support beams then went in on top of the columns across the long dimension of the room out to the walls. Finally, we cast the roof ourselves using forms and rebar to create a single, solid piece of concrete, which would have better strength than precast panels.\n\n\"Are we sure this thing won't collapse under its own weight?\" Nock yelled over the roar of the concrete mixer, as Stan helped me to direct the slurry of wet concrete from a vertically-hung hose onto the wooden structure. I looked his way and caught his good-natured grin. He, Stansy and Nissi were waiting for us to move on to a new section so that they could begin leveling and smoothing.\n\n\"The bathroom worked, didn't it?\" I called back, referring back to a time that seemed like ages ago. \"This is just a slightly larger scale.\"\n\n\"Bathrooms don't kill you if the walls fall down,\" Stan said with a grin of his own. \"Just saying, boss.\"\n\n\"It'll hold,\" I said seriously. \"Everything's rated for four times the weight we're loading it with. I wouldn't try driving the excavator over the top of this thing when it's done, but it would probably take it.\" I felt only a bit less confident than my words made it sound.\n\nI followed Nock's sudden glance over his shoulder and spotted Wendy running our way from the house. I'm not sure how he knew she was coming, since he had been facing the wrong way and the concrete mixer was a loud and constant drone.\n\n\"Take it, Nock,\" I yelled, stepping aside as he grabbed the other side of the thick hose. I hurried to meet Wendy away from the equipment where we could talk easier.\n\nShe literally skidded to a stop in front of me on the loose soil. \"Hey, Norm,\" she said, \"I'm here to get Stansy.\"\n\nI turned and waved her over. \"What's up?\" she said.\n\n\"You said to come get you if you got an email for your son,\" Wendy said.\n\n\"Oh,\" Stansy said. \"Excuse me.\"\n\nI looked after her for a moment before deciding to follow her inside. Stansy was seated at the terminal and looked up when I walked in. \"So?\" I asked. \"What's the verdict?\"\n\n\"He doesn't want to come,\" she said, staring at the screen. \"He doesn't think they'll go after him, because he's a half.\" Her lips pressed together and she looked up, blinking. \"I tried to make him understand, Norm. Why doesn't he get it?\"\n\nI considered my words carefully before answering. \"I know you tried, but it's his choice.\" She shook her head slightly and suddenly I realized there was more to it than that. \"You were hoping he would choose you over his dad, weren't you?\"\n\nShe gave me a venomous look and stood up. \"Fuck you, Norm.\"\n\nShe stalked out and I flinched as she slammed the back door.\n\n\"What did I do?\" I asked. I was about to follow her out, but had another thought. I sat down behind the terminal, opened a text editor and began typing.\n\nMom,\n\nI understand if you're reluctant to talk to me, or if you didn't trust the email I sent, but I need to get a message to Sharon. The government has started taking reverts like her. If you know a way to contact her, you need to warn her. Please.\n\nMartin.\n\nI sat back with a long exhale. I had to hope that it would be enough.\n\nThe back door opened and Nissi called. \"Hey Norm, we need you out here!\"\n\nI quickly ran the software to package the message and send it, but she called me again before I had finished. \"Jesus!\" I yelled back. \"You guys can't hold it together for five minutes?\" \n\nNissi appeared at the doorway. \"It's been fifteen minutes, you dope. Nock and Stan are fighting over how to pour the concrete for the next section, we're done working the first section and nothing's getting done.\"\n\nI laughed. \"Typical. I'm done here, let's go.\"\n\nNock looked up as I approached. \"Alright, here he is. Boss, would you tell this rank amateur here that he's doing it all wrong?\"\n\nStan rounded on him. \"Amateur? Who's been running all the big machinery while you've spent most of your time hanging out on top of the barn?\"\n\n\"Guys!\" I said. They both looked at me. \"Shut up! Stan, start up the flow on the concrete again. Nock, get over here and help me direct this hose.\"\n\n\"Alright!\" Nock said, clapping his hands together. \"Let's do this.\"\n\nIt took a few more days to pour the walls for the tunnel and finish up with the roof. While that was curing, we ran underground conduit from the house to the lab to carry electricity from the house, and pipes to carry water from the well. We then had to wait while the poured parts of the structure cured, but in the interim, took delivery on the equipment, which we stored in the barn until the lab was ready.\n\nWith the end of March approaching, we installed the wiring and plumbing inside the lab and erected the interior walls and the drop ceiling. The actual lab was a forty by forty foot square starting at the side farthest from the house. The remaining twenty by forty rectangle, nearest the house, was built as living quarters, complete with bathroom, kitchenette, bunks, and food storage.\n\nI had decided, shortly after reworking the lab as an underground structure, to design the space to double as a shelter. It might not help if we were raided by the feds, but if officials from the Department of Agriculture showed up for an inspection, we could all pile into the cellar, and from there enter the lab. The door to the access tunnel was built to blend perfectly into the cinder blocks around it and could be locked quite securely from the inside, and the ventilation ducts that supplied the lab with fresh air came up beneath the house's small wooden porch. We had installed hidden cameras all over inside and outside, and even a solar-powered wireless model clipped to the southern fence, watching the road.\n\nThe greenhouse would still be a problem in that scenario, but Tilly was working on that. She had already added a radio switch to trigger the collapse of the walls remotely, and was drafting a design to cover the whole area afterward, including the solar farm, something to do with using a huge sheet of canvas covered in soil that could be pulled over the whole thing after it had collapsed, using cables and winches. I wasn't sure how she was going to get an entire acre of canvas together, but that was for her to work out.\n\nIn any case, our shelter was stocked with enough food to last us all two weeks, and we would have air and water as long as the electricity stayed on. That was probably the weakest point, but there was little we could do about it. As a bonus, it gave us a bit of extra living space if the house ever started to feel cramped.\n\nOnce the walls were up and the lighting, air conditioning, power outlets and water fixtures had been installed and connected to their various sources, we used the emergency exit to bring the lab equipment inside. By that time, the whole structure had finished curing, and we were ready to finally bury it completely. That was a relatively simple process of hauling in dirt we had previously excavated to pile on top of the concrete roof until it reached the level at the surface, compact it, then pile on more until it matched the level and density of the soil around it. The emergency exit was likewise covered in dirt, but only to a depth of a few inches. We would need to watch the erosion to ensure that it didn't become exposed.\n\nThe interior of the lab had enough space for six or eight people to work comfortably without getting in each other's way. Partly that was due to the different equipment and workspaces needed, but we had also tentatively discussed the possibility of bringing more people here to work. I didn't yet know how we would manage that, but we would figure it out.\n\nIn addition to the equipment for observing, replicating and manipulating DNA strands, the lab was equipped with a new computer server, a rack-mounted Korean model that Stan claimed would run circles around Sasha's MC in terms of processing power and storage capacity, and four terminals. I anticipated that Nissi would be spending a very large proportion of her time down here, so had painted the walls in the living quarters in pleasant, cool colors and had hung a few of Stansy's paintings of nature scenes on the walls. She had continued to produce them at a slow but steady rate since moving to the farm.\n\nWe had everything finally set up, facilities and equipment assembled, calibrated and ready for use, by the end of March. We held a little celebration down in the lab that night, broadcasting audio over the darknet for anyone who cared to tune in and listen, which turned out to be a lot of people, more than three hundred. Nissi's project had become common knowledge not just among the researchers and engineers in the universities, and thousands of users, many of them simply refugees still in hiding in safe houses, but with a thirst for something inspiring to follow.\n\nSince the very beginning of the darknet, we had kept our location a secret, in case word got out from about our activities. Everyone referred to us either as Node 1 or simply The Farm. That second name had taken on a kind of mystery on the darknet, and one of us would sometimes find idle speculation on the message boards about the meaning of the name, and if there were some kind of sinister implications to it. One thing that was difficult to mask and easy to figure out from context was that our geographic location was somewhere within the borders of the United States.\n\nThe next day, Nissi started her work, though in reality it had started months ago. We were able to stream video live to the rest of the team, in addition to the results she uploaded, so she got plenty of feedback from members of the team that were more experienced in lab work in general and genetic engineering in particular. I also put in some time as her lab assistant, being no stranger to that environment.\n\nHer first task was to validate the results from the multiple anti-aging clinical trials, using Nonna's own cell cultures. We applied each of the treatments separately so that we could observe the effects in isolation. The enzyme treatment that would break down non-metabolized cellular waste products showed early results as the cells' lysosomes began to work more efficiently. Restoring the telomeres, the end caps of DNA that protected it from errors when her cells divided, took much more time to evaluate, since we needed to test the DNA over multiple generations to know if the treated cells suffered fewer errors than the cells in the control sample.\n\nIn another sample, all of the treatments had been applied simultaneously, so that we could evaluate whether there was any danger in doing so. None of the trials had attempted that, and it was Nissi's theory that they had all been conducted independently of one another for some reason.\n\nThis last sample showed the fastest and most efficacious improvement. After only a few weeks, those cell cultures had begun to resemble tissues taken from a young adult, rather than a septuagenarian. \"This is going to change the world,\" I said, watching on a terminal the video display from a microscope Nissi was operating. If these treatments were as effective as they appeared, no one ever needed to die of old age again.\n\n\"It's certainly encouraging,\" Nissi said, head still down on the microscope. \"We're still evaluating all of the data, but I think we might be ready to start the actual treatments on Nonna in a few weeks. Restoring healthy cell function will improve her overall health and improve the chances that the viral vectors we use for the genetic treatments would reach the cell nuclei to deliver their payloads.\" She straightened and turned to me. \"Next, we're going to snip the Alzheimer's right out of her DNA. At the same time, we'll fix her telomeres and restore mitochondrial function. We'll monitor her for a time, and then we'll stimulate the creation of stem cells to replace lost tissues. If it all works out like we hope, then she'll be ready for the treatment to remove the plaques.\"\n\n\"If not for the Rot and the Ban,\" I said, \"her disease might have been cured years ago. Medical science was right on the verge of making us all immortal. The timing seems awfully inconvenient.\"\n\nNissi shook her head. \"Improbable events happen all the time, Norm. Look, the chances of any one Uranium-238 atom decaying is very small, even over a very long time frame. Give it 4.5 billion years and you only get a fifty-fifty chance. But put a gram of Uranium atoms together and you get thousands of them decaying every second. It's just that there are a whole lot more of them sitting there not decaying.\" I didn't buy that explanation, but I just nodded along.\n\nWe planned to Nonna's treatment the first week of May. I had been paying closer attention to her behavior the last six months, and it was painful to watch her slow decline happening before my eyes. Some nights, she seemed almost normal, able to carry on a conversation about current events. At other times, she was hopelessly confused, shouting angrily at us in Russian. We kept her pistol locked in the gun cabinet in the den, and had placed all the knives in the kitchen up high in a cabinet that most of us could only reach with a step ladder. Sometimes it was all that Nock and Wendy could do to get her to calm down.\n\nStill other times, she would stare at nothing, as if lost inside herself. These last were the rarest, but they seemed to be getting more common as time went on. And once, Nock had heard the front door open and close in the middle of the night and had run outside to catch her as she tottered aimlessly down the dirt road in her bare feet and nightgown, oblivious to the cold.\n\nOn the appointed day, Wendy and Nock arrived with Nonna, who kept arguing with Nock. Nissi had curtained off one corner of the lab and set up a padded table with basic hospital equipment. Wendy tugged on her hand, pulling the old woman towards it, but she balked and shook her head, saying something in Russian that sounded terrified and defiant.",
        "\"Maybe we should sedate her,\" I suggested.\n\n\"I would rather not,\" Nissi said. \"I would like to be able to get her verbal feedback during the procedure, and it will just make her confusion about the whole process worse.\"\n\n\"She thinks she's going to the dentist,\" Nock said. \"Apparently dentistry isn't so good where she came from. I also think she's regressed to a pre-teen girl.\"\n\nI could see that, now that he had described it. Her protests resembled those of a fearful child. I crouched slightly, so that I was more on her level, and patted her shoulder. \"It's going to be okay,\" I said, hoping to reassure her with my tone more than anything else. She turned to me, replying in Russian but sounding more hopeful. Nock looked at me and nodded, speaking a few sentences softly and slowly in Russian. She still seemed doubtful, but Wendy moved on ahead and Nonna, after a moment, followed tentatively.\n\n\"Okay,\" Nissi said. \"Crisis averted. Now we just hope she doesn't freak out when I put the IV in her arm.\"\n\nThere ended up being a lot of prep that Nissi needed to do first, so Nonna was asleep by the time she got to that part. I volunteered to put the needle in, and fortunately got the vein on the first try. Nonna stirred and pawed at her arm as though reacting to an insect bite, but settled down again and I was able to get it taped down and the tubing attached. \"All yours,\" I said.\n\nNissi started ta clear fluid flowing into Nonna's veins. It would carry the enzymes that would restore her cells' healthy functioning. It only took a few minutes for the fluid in the bag to drain away, but Nissi kept her a few more hours to make sure that Nonna didn't have some kind of reaction.\n\nWe all observed her carefully in the following weeks, keeping a log to track changes in her behavior. Her health seemed better almost immediately, reflecting the improved health of her cells. She had more energy and even her overall cognition improved slightly. The treatment to repair damaged DNA and restore her telomeres followed.\n\nFor that step, we injected her with a host of tailored viruses that invaded her cells, but instead of hijacking the cells' machinery to replicate themselves, these inserted healthy DNA into her chromosomes to replace damaged gene sequences. In addition to replacing the alleles that caused her Alzheimer's with healthier versions of the gene, we targeted common transcription errors that had accumulated as her cells divided, restoring function to them and reducing her risk of developing cancer.\n\nBy the end of the first month, her skin was becoming smoother, thicker, and more elastic. Her hair had darkened at the roots as the follicles returned to their former levels of melanin production. The next treatment stimulated some of her existing cells to switch to stem cells, regrowing muscle and bone tissues that had atrophied. Nonna regressed through middle age before our eyes, heading ever younger.\n\nOnce the lab had been completed, Tilly had her own projects to see to. In the field to the north, she mapped out squares a few yards across on the barren ground with stakes and twine, creating a grid. In each square, she placed a healthy potato plant taken from the greenhouse after conditioning the soil in various ways. Along with her control group, there were about ninety plants in her plot.\n\nI visited her in the field one day, a few weeks after her initial planting. The bright green leaves and stems of the potato plants looked healthy to me, and I said so, but Tilly urged me to look closer.\n\n\"See the bottom of this leaf here?\" she said, pointing.\n\nI bent down and lifted the leaf to look. \"It looks like tiny white hairs,\" I said.\n\n\"Those are the aerial spores. The Rot infects the roots of the plant initially, but it migrates to the leaves to produce its spores. Those can then bud off and get carried away on the wind, for miles if there's a steady breeze. If they land in moist soil, the spores shed their outer layer and swim around until they find a suitable host plant. They infect that plant and the process starts all over again. This plant is heading into the necrotrophic phase.\"\n\n\"That sounds bad,\" I said.\n\n\"It is. That's the point where the oomycete switches from living off the plant, stealing some of its nutrients and reproducing, to killing it. Here, I'll show you.\"\n\nShe squatted low, grabbed a trowel and carefully dug around the plant to loosen the tuber, which had grown roots out in every direction. She pulled the potato to the surface, and I could see discolorations on its brown skin. She cut into it with a knife, showing a deep spot of mushy black that smelled faintly foul. \"This one is from my control group. Those spots will continue to spread over the leaves for a few more days, pumping out spores by the tens of thousands. Then the rot we see here in the root system will begin to overwhelm it, and the leaves will start to wilt. Within a week, give or take, this thing would be just a black, dead mass.\" She flipped the uprooted plant into a nearby wheelbarrow.\n\n\"Poor potato,\" I said.\n\n\"I know,\" she said with a little smile. \"And poor us, who eat those potatoes. Most of my controls are in as bad a shape as that fellow.\"\n\n\"Any that aren't doing poorly in your test group?\"\n\n\"Most are already at or near the same place as that one. I was hopeful that a high soil pH might be key. Most water molds need neutral or acidic soil. If Rot followed that pattern, all of the plants from here,\" she pointed near the middle of one of the rows of plants, \"to here,\" and she moved her finger to the end of the row, \"would be free of the disease. But look at the leaves of that first plant.\"\n\nI moved to the one she had pointed to, just right of the center of the row. \"Spores,\" I said, grimacing at the white filaments.\n\n\"And you'll see the same on the one next to it. Those plants are sitting in a soil pH of 7.25 and 7.5. That should be too high for oomycetes to survive. Above 7.5 we start to see some slowdown in the progression of the disease.\"\n\n\"Slowdown?\" I asked. \"So the pH does affect it?\"\n\n\"Yes, but not as much as I had hoped. The plant on the end there is in 8.5 soil but it's just at an earlier stage of infection. The big problem is that most of the plants that we eat tend to favor acidic or neutral soil, in the range of about 4.5 to 6.5, though some thrive in slightly alkaline soil. Potatoes can actually grow in a pretty wide range of soil types, though most farmers keep them at a lower pH because you start to see a disease called scab. No use preventing Rot if they just die off from something else.\"\n\n\"Still, that's promising. If Rot is inhibited by high pH, maybe we can use that against it.\"\n\n\"Maybe, but either way, it's a data point that we can use to help figure out how it works.\" She pointed to the next line of plants. \"Dry and sandy soil also inhibit its growth, which is great if we wanted to farm cactus, but that's another data point, too.\"\n\n\"How about temperature, atmospheric pressure? Do you have any way to test those?\"\n\nShe stood up straight and shrugged. \"I guess we could plant up in the Cascades. What I really want to do is run these same tests with different species. As many as possible, in fact. But that will take a lot of time and labor. Stansy and Wendy have time to help me when I ask, but I still have obligations with the darknet and other projects I haven't even started. Have you thought any more about Nock's proposal?\"\n\nI ran a finger through my beard absently. \"You mean bringing people here from outside.\"\n\n\"Nock has over a dozen candidates with training in the disciplines I need. If I just had three such people, I could get ten times the work done, and not just my Rot research. I still want to build that aquaponics facility. The fish alone would bring in so much money for us.\"\n\nShe had described to me how aquaponics worked. It basically combined hydroponics, growing plants in nutrient-rich water, with aquaculture, the farming of aquatic animals. The whole system was symbiotic and very energy-efficient. We would be able to further increase our vegetable crop yield, as well as producing fish, some species of which might sell for a hundred dollars a pound or more. And Tilly was talking about producing thousands of pounds of fish every month in a space that was smaller than our greenhouse. I could do the math, and those numbers, especially when you stuck a dollar sign in front of them, defied belief.\n\nVarious governments and corporations had been trying to make aquaponics work for years, but farms based on the technology tended to fail even more disastrously than industrial greenhouses, since oomycetes could swim through the water to quickly infect every single plant in the system. Tilly thought that she could solve that problem the same way she had with our greenhouse, by intensive filtering and sterilization, combined with isolation of the plants and fish into smaller enclosures than seemed intuitively practical.\n\n\"I'm tempted to put this project on hold to work on that instead,\" she said. \"If I can't scale this thing up and work more quickly, we're not going to see results on it for a long time, maybe years.\"\n\n\"Okay,\" I said with a sigh. \"Message received. What are we going to do to vet these people? And are we planning on sourcing them from Agency safe houses?\"\n\n\"I'll interview them,\" she said, \"to verify their expertise. And yes, we'll bring them from safe houses. We'll request records from the Agency, or talk to the host of each house if we need to, to ensure that they are reliable, even-tempered and overall a good fit for our community.\"\n\n\"That's an interesting word,\" I said. \"Community? Aren't we more of a family?\"\n\n\"Let me get my aquaponics farm up and running and we'll be able to feed hundreds of people, Norm. Don't you see? We're building something special here, something the world needs, and the more people we can leverage to achieve our goals, the better. Even if our biggest contribution is to set an example for others, we're showing how some ingenuity, determination and willingness to break the rules can yield enormous positive results. You're the one who taught us that.\"\n\n\"I didn't do much...\" I said, shaking my head.\n\n\"You did,\" she said, meeting my gaze. She closed the distance between us and thrust her lips against mine, the kind of kiss that made my knees turn to butter. After a long moment, she pulled back, staring into my eyes once more. She tapped the side of her head with a finger. \"Whatever new ideas this brain comes up with, it's only possible because you took the time to help me, when everyone else thought I was hopeless. Whatever I accomplish is your accomplishment too.\"\n\nWords failed me, so I kissed her again, and this time she was the one that nearly swooned. Once she was finished observing and cataloging all of the changes in her plants, I took her back to our bedroom and we demonstrated our love and appreciation in a much more raw and intimate fashion. We took a shower together afterward and I made my decision. \"Alright,\" I said. \"Let's get you some help.\" I went straight down to Nock to arrange it, and he told me it was all ready to go. They had just needed my approval.\n\nAt two months into her treatments, Nonna's physical appearance made it difficult to guess her age. The crow's feet around her eyes had disappeared, her cheeks had filled out, and the skin on her neck no longer hung loosely from her chin. Her hips had tightened and her arms and legs showed muscle definition. It was apparent that Nonna had been a rather attractive woman even in middle age. The improvement in her cognition had plateaued, so she still suffered frequent bouts of confusion, but we were confident that would change very soon. With her physical age matching that of a woman in her mid-thirties, Nissi began the enzyme treatments that would clear the amyloid beta plaques from her brain.\n\nTwo days later, Nonna was confined to her bed, suffering from frequent vomiting and a low-grade fever. It cleared after a few more days, and a few days after that, the next round began. We monitored her condition very carefully during this process, but the buildup of toxins that would have been life-threatening to her before the other treatments now just left her feeling intensely ill. Six such cycles in all were required to completely clear the plaques from her brain, and a portable MRI donated by the university in Copenhagen allowed us to track her progress.\n\nAs this went on, she appeared to lose even more years. Her hair grew in a deep black, contrasting strikingly with her hazel eyes. Her skin took on a radiant and rosy hue indicative of vibrant youth. The regression finally stopped when she reached an apparent age of about twenty-five, and it would have been as difficult for anyone to guess her true age as it was for Wendy. Strangely, the physical change did not seem to worsen her confusion. If anything, she seemed quite comfortable with her new body, and the dissonance came for the rest of us, as Nonna's mental faculties and mannerisms could be described as either that of an old woman or a young girl, neither of which matched up to her appearance.\n\nThe final treatment would attempt to restore cognitive function, by using stem cells to regrow the brain cells that she had lost due to the disease. This phase took two months to complete. For the first month, it appeared that the treatments had no effect or even slightly negative effect, despite the growth of brain tissue that the MRI showed. The brief periods of lucidity and deeper thought that she had exhibited before beginning the treatment seemed to be lost, and she went about her day in a haze, often barely recognizing any of us. I worried that we had started her treatments too late for them to make any difference.\n\nIt was in July of that year that Congress passed the bipartisan Safe Firearms Act, a piece of legislation that, back during my more innocent days, I might have cheered on. The act established new federal rules for gun licensing and a national gun registry, overriding existing state laws. It was retroactive, so existing gun owners had to register weapons purchased before the law went into effect. All gun owners had to pass extensive background checks and training courses, with much higher requirements for concealed carry. Long waiting periods had been mandated for the purchase of any gun. Finally, a large sales tax had been added and any owner of a gun must now purchase liability insurance to cover accidental death or injury. In essence, both the cost and hassle of buying a gun had been increased by a factor of at least ten. Bucking precedent for a republican, McCain had promised to sign the bill once it hit his desk.\n\nNock's assessment summed up how most of us felt. \"I think this congress just told us what they got in exchange for not impeaching the president.\"\n\nTilly's three recruits arrived during this time. The first was a Standard Upgrade who had been an economist working for a right-wing think tank. He had advanced degrees in statistics and economics, and five years of experience working in his field. An Agency representative brought him to meet Tilly and me in Eugene, a city about forty miles south of us. We pulled into a parking lot behind a high-school football field, deserted now since school was still out for summer, and surrounded on three sides by trees. The Agency car was the only one in the lot, a red sedan with Utah plates. I suspected that there was another driver in town who had scouted ahead for them. That was the only way they could have come so far without serious risk of being caught by a random checkpoint. If I had been paying more attention at the time they moved me from California, I might have realized why my own driver kept taking very short phone calls.\n\nTilly put her truck in park a few rows over and I made a phone call to my Agency contact, telling her we had arrived and giving the license plate of the other car. About a minute after she hung up, both doors opened on the car across from us and two men stepped out. Our guy was an imposing figure, over six-and-a-half feet of broad shoulder and muscle, with light skin but features that looked Hispanic.\n\n\"He's hot,\" Tilly said, but she laughed when I gave her an \"Oh, really?\" look.\n\nWe got out and approached the pair, who had remained just in front of the car. \"Hello,\" I said, and put out my hand. \"I'm Norm.\"\n\nThe agency rep, a short, slight man with glasses, kept his hands folded behind his back, but our recruit put out his hand and shook mine with a grip that was just short of crushing. \"I've been going by Stan, but I hear you've got one of those already. I guess that makes me Stanley.\"\n\n\"And this is Tilly,\" I said, gesturing to her.\n\n\"So good to meet you at last,\" he said, taking her hand in both of hers. \"I've been eager to start working with you on The Farm.\" You could almost hear the capitalization of the word when he said it. \"But what is a Tilly? I've been wondering that for a while. I've never heard that moniker before I started seeing your name on the darknet.\"\n\nTilly smiled and shrugged her shoulders. \"It's just my name. A long story, but I'll tell you on the trip up.\"\n\nI put my arm around Tilly, very conscious of how that looked and not caring. \"We're thrilled to have you aboard, Stanley. Do you have any bags with you?\"\n\nStanley evidently got the message loud and clear, because he released Tilly's hand and tipped his head towards me in the barely noticeable nod. \"Yeah, everything I own is in here.\" He thumped the top of the car's trunk. We retrieved Stanley's bags, and once we were clear, the Agency rep nodded to us, got in his car, and drove quickly away.\n\n\"Not a very talkative guy,\" I said, watching the car accelerate down the street as we stowed Stanley's belongings in the bed of the truck. Tilly got in the rear of the quad cab, giving Stanley the front seat, where he could stretch his legs.\n\n\"Try traveling 800 miles with him,\" he said, as I started the engine. \"I think he said three-no-four sentences the whole trip. Probably just nerves. I would hate to have to drive one of us an entire day with the way things are out here. Damned weird for me, too. I haven't been outside in almost three years.\"\n\n\"Better get used to it,\" Tilly said. \"I picked you primarily to crunch numbers, but I expect you to put in time out in the field, too.\"\n\nStanley grinned. \"Oh, believe me, I'm not complaining. I heard you guys have a greenhouse, too. And don't worry, I'll pull my weight. It really is an honor to be working with you.\" He shook his head in disbelief. \"Norm and Tilly from node 1, the genesis of the darknet. And Nissi, Stan and Nock, too. You guys are legendary.\"\n\nI had to admit that I was enjoying the hero worship, even if it made me feel a bit awkward. \"Got any family?\" I asked.\n\n\"Yeah,\" he said. \"Oh, yeah, so I have a sister and a brother, right? We're all Stans. We hid out together for a while, then when we heard about the Agency, we went in together. But they sent us all in different directions. I hadn't seen or heard from either of them in six years. Then a few months back, someone started a registry where you could put in your model, home zip code and darknet node, to try to find friends and family. My sis' is at node 19863 and my brother makes his home at 7644. I get to chat with them all the time now.\"\n\nI checked in over the radio with Alice, who was running scout for us, and she confirmed that the next ten miles of highway were clear, so I went back to chatting up our new recruit. Stanley struck me as being younger than most of my housemates, closer to Tilly's age than my own. He must have fast-tracked through school. In any event, he showed his worth later that when he took the data that Tilly had collected and ran extensive analysis of it, quantifying each factor that had inhibited the Rot.",
        "\"I could use more data,\" he told us. \"Lots more. Finer degrees of the factors we've identified so far, soil alkalinity and moisture, with a greater sample size. I wonder if we push the pH up to 9.0 if the trend line will continue. It might be enough to halt the plant's life cycle completely. That's not really my area of expertise, though.\"\n\n\"We've got that covered soon,\" Tilly said. \"Ed will be here in a few more days.\"\n\nIn fact, we picked up two new people from Eugene at once. In a strange twist of fate, Ed and Dawn, the agronomist and microbiologist that Tilly had selected, lived on opposite sides of the San Francisco Bay, about a hundred miles apart. Ed had worked on his family's large farming operation in California's Sacramento Valley, while Dawn had been a research scientist for an agricultural biotech firm in Palo Alto named Foodtech.\n\nEd gushed over the greenhouse operation as we gave them a tour of the farm. \"You've been operating it for ten months without a single incidence of Rot?\" He was an Eidetic who looked perfectly ordinary other than being more attractive than the average, courtesy of routine embryonic genetic cleansing. His enhancement gave him perfect recall, and his knowledge of crop characteristics and farming methods was encyclopedic.\n\n\"We've been lucky,\" Tilly said. \"I'm thinking we'll lose about one crop a year on average, but as long as all of the protocols are followed, it shouldn't spread to the other compartments, so the damage will be minimal. Then we just sterilize the soil and any surfaces that might have been contaminated. I'm actually looking forward to our first infection as a stress test for the system.\"\n\nDawn was not at all what I had expected. A cute blonde about my height, which was shorter than average for a genemod, and classically bookish in appearance and manner, lacking only glasses to complete the portrait. Like Ed, she exhibited no obvious physical genemod characteristics. Hedonics like herself had enhancements to their limbic, endocrine, and peripheral nervous systems. She had been genetic engineering's very literal answer to parents who said, \"I just want my child to be happy.\" Hedonics experienced pleasure nearly constantly and in a way that was almost spiritual in its depth and intensity. Those I had met had been bubbly, always smiling and touching others, and optimistic almost to the point of parody.\n\nDawn was not bubbly, and if she was optimistic, she didn't show it. On arriving at the genetics lab, she had made the rounds, inspecting the equipment up close, even to the point of getting an annoyed look from Nissi when she peeked into the refrigerator and checked over the contents of the containers inside. \"It'll do,\" was all she said.\n\nBy the end of that week, Tilly's research project had grown in size many times, incorporating six different plant types, including two crops that were known to grow well in slightly alkaline soil. They would be pushing the limit on those to see if they could find a point where the Rot wouldn't take hold, but the plants would still survive and grow.\n\nEd spent the majority of his time either tending to and observing the testing plots, or in the greenhouse tending our crops. His reverence for the engineering work that Tilly had achieved began to give way to his own practical expertise, and he started to suggest ways to pull even greater yields from our limited growing space. \n\nDawn and Stanley split their time between the test field and the lab and seemed to have a great professional rapport. Dawn suggested that we run experiments on the Rot itself, tracking and observing its lifecycle in controlled lab conditions. All of the data they collected was fed through the darknet to other experts in Agency safe houses and in foreign universities. Some characteristics of Rot were well-known by most people in the civilized world. Its cross-species virulence, for example, and its ability to produce encysted spores that would saturate soil and remained in a state of suspended animation in harsh conditions. As Tilly had discovered, the depth of information that you would expect to be gathered and analyzed by experts was strangely missing. They sought to close those gaps.\n\nThe three of them slept in the lab's living quarters, but as I had done for Alice, and with help from my housemates, I worked on renovating the farmhouse to the west, seated on a farm on the other side of the orchard. Fees from Agora and donated money continued to come in at a rate of several thousand dollars a month, and I used a chunk of that money to buy solar panels and batteries to provide their home with power generation and power storage.\n\nOne morning I spotted Dawn working alone out in the test field. The research team had gone through several generations of plants, recording their infection, decline, and death. The closest thing to a success had been a batch of asparagus that had avoided Rot infection only by virtue of being planted in highly alkaline soil. The only problem was that alkaline soil inhibits the solubility of the soil, reducing the amount of nutrients available. Those plants had stopped growing and had eventually sickened and died because of it.\n\nShe looked up as I approached and went right back to her clipboard. \"I'm busy right now, so if you need something, it'll probably need to wait.\"\n\nI didn't let her curt tone dissuade me. \"I noticed you were alone and thought you could use some help.\"\n\nShe looked at me as if genuinely surprised by the question. \"Oh. Well, I suppose I have something for you to do.\" She flipped through the pages on the clipboard and extracted a sheet. \"Go to the plants indicated on the grid and dig them up. Be careful not to harm their root systems if you can. You can use that wheelbarrow if you want.\"\n\n\"Doing a post-mortem?\" I asked, taking the sheet from her.\n\n\"Something like that,\" she said, her expression never changing.\n\n\"Okay, I can do that.\" I said. I looked at the sheet, which had a string of letter-number combinations separated by commas. \"Um...\"\n\nDawn laughed. \"Letter for column, number for row. Left to right, top to bottom, top is north.\"\n\nI turned 90 degrees to face north. \"Oh, that makes sense.\" I went to A4 and knelt, digging carefully with a trowel. \"You know you don't do that very often.\"\n\n\"What?\" she said impatiently.\n\n\"Laugh. I've known some genemods of your model, but you're kind of an outlier.\"\n\n\"Yeah, it took a lot of effort,\" she said.\n\nI carefully extracted the potato plant and its roots, which had deep pockets of black on its surface and felt slightly squishy. The leaves had turned brown and started to fall off, and the stem was spotted black. \"Nasty,\" I said, wrinkling my nose at the fetid smell. \"What are you going to do with this poor soldier?\"\n\nShe frowned, obviously annoyed that I was distracting her from her work. \"We're going to take samples of the oomycete and look for genetic polymorphism by comparing it with the samples from other plants. Most water molds specialize in targeting one species of plant, and they do that by deceiving or otherwise neutralizing that particular plant's natural defense against pathogens. This thing acts like the Swiss army knife of plant pathogens. One way to do that is for it to adapt somehow on the fly to the plant it encounters to overcome its natural defenses. That's the dominant theory, and it's stupid. Evolution is driven by environmental pressures. Nothing in nature could pressure these little bugs to suddenly find a way to attack everything in sight.\"\n\n\"And your theory?\"\n\n\"I think that the adaptation might be random or semi-random. I think that the parasite puts out many different versions of itself, perhaps hundreds of variations, and that each one is adapted to a particular species. If that's the case, it rules out Rot being a natural occurrence. It means that someone modeled the genome in multiple dimensions, perhaps incorporating recursive or even fractal principles into the design.\"\n\n\"What did Tilly say when you told her?\"\n\nDawn shrugged. \"She's the one who suggested higher dimensions. When I started to picture it that way, I could see the elegance of it. I'll tell you right out that I'm intelligent, very intelligent, but she is exceedingly brilliant. It's too bad we didn't see more G's born before genemodding was outlawed. They would have changed the world.\"\n\n\"My sister was a Gena,\" I said. \"She was just like that: on a whole different level from the rest of us.\" Before Dawn could ask, I added, \"She was reverted.\"\n\n\"Wow, that sucks,\" she said, the forcefulness in her tone commensurate with someone witnessing the destruction of a priceless piece of art. \"I'm sorry.\"\n\n\"So am I,\" I said. I realized that I was neglecting the work, so I moved on to the next potato plant. \"What did you mean a minute ago, about having to work at it?\"\n\n\"What? Oh, that. It's simple, really. How many Dons have you known?\"\n\nI thought for a moment. \"I've met three before you.\"\n\n\"How successful were they? Any of them wealthy or famous?\"\n\n\"Well, no, I don't think so.\"\n\n\"Uh huh,\" she said, \"And that's the problem. No drive. We're wired to be happy, no matter what life throws at us. When I was younger, I might get excited about some project, but it wasn't enough for sustained work. It's a bit like having ADD. What's worse is that other people tend not to take us seriously when we have a hard time staying serious about anything.\"\n\n\"So...what? You worked at being unhappy?\"\n\nShe rolled her eyes. \"Not exactly.\" She paused, frowning. \"Okay, I guess you could say that. I have to constantly reframe to take the positive spin off of new events. I had to train myself to repress my excitement over new stimuli and focus on the negative consequences of failure to stay focused. I do it reflexively now.\"\n\nIt was crazy, like the inverse of every self-help book ever written. Think negatively. \"Well, you don't have to worry about the people here taking not you seriously. You can relax and enjoy yourself more if you want to.\"\n\nShe chuckled wryly. \"They warned me about you, you know. Wendy and Nock, anyway. They said you like to fix people.\"\n\n\"And I just got you to laugh again,\" I said.\n\nShe shook her head. \"It's not like I don't know how to enjoy myself. I just keep a lid on it, for the sake of the work I want to accomplish.\"\n\n\"If you say so,\" I said.\n\n\"I do. Now you volunteered to help, so quit goofing off and get back to work.\"\n\nI knew that I might be starting down a slippery slope when I agreed to allow Tilly's assistants to join us. Within days of the news that we had accepted Stanley, Dawn, and Ed, we began to get inundated with requests from more genemods who wanted to come to the farm, offering their help. Nock took care of those, thanking petitioners for their interest, but informing them that we were not taking applicants at this time.\n\nI was working on the house that the new recruits would be moving into when Stan came to talk to me. He found me upstairs installing the cabinetry for the master bath. \"Looks like it's coming right along,\" he said, stepping over the pieces of water-damaged cabinets that I had ripped out and left on the bedroom floor. I was standing in the bathroom behind the new set of cabinets I had constructed.\n\nI laughed ruefully. \"After this is done, I get to replace all of the moldy carpet in the upstairs bedrooms and rip out a bunch of corroded wiring. Then there's the drywall ceilings.\"\n\n\"What happened to this place?\"\n\n\"Mostly water damage from the leaking roof,\" I said. \"That was the first thing I fixed.\"\n\n\"Good call,\" he said. \"Hey, I had an idea that I need to run by you.\"\n\n\"Sure,\" I said, smiling, \"but since you're here, you've gotta give me a hand with this. Hand me that drill there, will you?\"\n\nStan passed the tool to me. \"You know how Tilly's been so busy working on the new aquaponics thing and her Rot research. I'm still working on the next phase of the darknet and I thought-\"\n\n\"You want to recruit someone to replace Tilly,\" I finished for him. I spun up the drill and drove a couple of holes into the wall, biting into the stud, before he could respond.\n\n\"Uh, yeah,\" he said once I stopped and the noise had died. \"Two people, actually.\"\n\nI shook my head. \"That's five people total. Do you know how many bedrooms we have in this house?\"\n\n\"Four,\" he said drily.\n\n\"Yep,\" I said, and drilled two more holes. \"Have you talked to Tilly about our greenhouse production? How much will that dig into our excess output?\"\n\n\"No, I hadn't mentioned it to her.\"\n\n\"Do that,\" I said. \"And get back to me. Now give me a hand with this.\"\n\nStan helped me maneuver the cabinet against the wall so that I could anchor it. I was giving him a hard time, but I was serious about the food production. Every new person we brought to the farm cut into our supply and the amount of excess we could sell through Andy.\n\nStan returned a couple of hours later with Tilly. \"All five together cuts our income from Andy by three thousand a month,\" she said, \"but I think it's worth it, and we should get our first aquaponics facilities up and running in January or February of next year. Stan's working on a mesh network architecture that can remove us from the internet completely. I can remain in an advisory role, but I just don't have time to sit down and hack code, and we can't just leave things how they are. Don't forget we were almost hacked on Christmas day last year. We still don't know who did it or why.\"\n\n\"SamIAm seems to know,\" I groused. \"He just doesn't feel like telling us without speaking in riddles. Anyway, you say it's worth it and won't make us starve. Let's do it. Have you picked your people yet?\"\n\nStan nodded. \"Yeah, there's two that are very interested. Sterling credentials. MIT and Berkeley graduates. One of them wrote an excellent postdoctoral paper on mesh networks.\"\n\n\"Sounds good,\" I said. \"If you think they'll be a good fit, bring 'em aboard. Just make sure they know that one of them is going to have to sleep in the lab building for the time being. The next group we allow in might have to be a construction crew.\"\n\nA few weeks later, in late September, Stan and Stansy went to meet our new people at the usual spot in Eugene, with Alice on scouting duty. I made sure to be back at the house when they pulled up in our spare truck, the one that had belonged to Jack, Alice's husband. Nock was there waiting as well. He had helped vet these two, so had spoken to them frequently.\n\nStan stepped out and released the seat to slide forward. A man climbed out and dropped to the ground, landing in a powerful and graceful crouch. He looked Japanese, with black hair down to his shoulders, but was nearly as tall as Stan. The other passenger had gotten out on Stansy's side, and I had seen a flash of blond hair as she stepped down.\n\n\"This is Stanford,\" Stan said, shrugging. The ubiquity of Standard Upgrade meant we were going to run out of names soon. Maybe it was time to start thinking about a change to that policy.\n\n\"Not my first choice of name,\" the new recruit said. I had heard about Berkeley and Stanford universities' long-running rivalry. \"You must be Norm. I've heard a lot about you.\"\n\n\"I'm sure you have,\" I said. \"But I'm really not that bad once you get to know me.\"\n\nStanford laughed and extended a hand. I started to do the same but froze when I saw who had just come around the front of the car. Pale blue eyes stared back at me, and her expression must have mirrored my own.\n\n\"And this is Gena,\" Stan said.\n\nThe young woman had stumbled to a stop when she saw me, and we stared at each other for several seconds. \"Martin?\" she said softly, her eyes narrowed. \"How can you be here?\"\n\nFear, disbelief and rage battled for control of my senses. \"I belong here, Sharon. What the hell are you doing here?\"\n\n\"You two know each other?\" Stan asked incredulously.\n\nI crossed my arms in front of me. \"Yeah, you could say that. That's my sister.\" I looked straight at her, letting my anger speak for me. \"She's a meth addict, an opportunist, and a traitor.\"\n\nNock looked between us and then smirked. \"Well, what can I say? I guess she left a few details off of her resume.\""
    ],
    "authorname": "FelHarper",
    "tags": [
        "dystopia",
        "genetics",
        "alternate timeline",
        "orgasm denial"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/double-helix-ch-18"
}