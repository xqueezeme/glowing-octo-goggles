{
    "title": "There and Back Again Ch. 025-026",
    "pages": [
        "Chapter Twenty-Five: Deals and Dragons\n\nThat became the new pattern for us for a couple of days. Walk until almost supper, spar with Aedan -- badly -- and then work on meditation with Alistair. I'd gotten to the point where, when necessary, I could ignore the movements, shouts, pokes, and tickles of those around me, and maintain my focus regardless. One evening, still sitting with my eyes closed, but having decided I was done for the night, I suddenly could feel eyes on me. I waited, listening and feeling, trying to determine if it was hostile or not. Near me I could hear only Alistair's soft breathing as he too meditated; further away I could hear talking and laughing, and was able to account for the whereabouts of Wynne, Leliana, Sten, Shale, Aedan, Prince, and Morrigan. Zevran then. I tensed, suddenly vaguely worried that while the assassin would develop respect and friendship with the rest of the group, that he saw me as a threat. I heard the softest whisper of leather sliding against leather behind me, and realised he was closer than I thought.\n\nI broke the silence. \"Hey, Zev. How's it going?\" I heard Alistair jump and curse, and opened my eyes, turning to see Zev standing less than two feet away. His hands were empty, though I knew that meant nothing, but the expression on his face was mischievous, not malicious, and I relaxed. \"Let me guess. You were going to help me learn to focus by blowing in my ear or something as a distraction.\"\n\nThe redness in his cheeks demonstrated the truth to my guess, and I grinned. Alistair grumbled and walked away towards our firepit.\n\n\"Well, bella donna, I am glad to see that with all this...focusing...you are doing, you still pay attention to your surroundings. I am here to watch everyone's backs, but it will make it that much easier if you are also watching your own.\"\n\n\"Thanks Zev,\" I replied drily. \"I'm so relieved to hear about your concern for my safety.\"\n\n\"You wound me, cara mia. And here you told Aedan that you trust me.\"\n\n\"Just because I trust you, amico mio, does not mean I stop 'paying attention'.\" He smiled proudly. \"And by the way, you can quit with the Antivan endearments. I don't speak Antivan other than the bits you taught me, but I'm familiar with your seductive side, sweet pea. Save that for someone who doesn't know you better than you know yourself. And Wynne, because secretly she likes it.\"\n\n\"My heart cannot take it, my lady. It bleeds for-\"\n\n\"Can it Zev. Hey, wait. I'll make you a deal.\"\n\n\"Oh? Now this I must hear.\"\n\n\"How's this. You agree not to try to seduce me, flatter me needlessly, or in any other fashion try to wiggle your way into my small clothes, for...let's say one month. Get to know me, a little, without innuendo thrown in. At the end of that time, if you still wish to lay with me, you tell me and I will explain why I don't think we should ever be together. After that I promise to be open-minded and give you a fair chance to change my mind. But if you break this agreement, if you try to charm your way into my tent before then, the deal's off. I will never sleep with you, nor will I tell you why. Do we have a deal?\"\n\nHe thought for a moment. \"One stipulation: if you come to me during that month, the deal still stands.\"\n\n\"Agreed.\" We actually shook hands, solemnly, and the odd look on his face cracked me up. It seemed he didn't know what to talk to me about without sexual innuendo as an icebreaker. I giggled and left him there, sitting down near Aedan by the fire.\n\nIn our tent, later, Aedan whispered conspiratorially. \"What was that tonight with Zevran?\"\n\nI told him our agreement, and Aedan peered closely at the smug grin on my face.\n\n\"You wouldn't be planning to mess with the emotions of one of our companions, would you, sweet sister? I know damn well you'll never change your mind, and I know why. Why the tease?\"\n\n\"I'm not messing with him. Not detrimentally, at least, I promise. Actually, I'm hoping it will prevent any weirdness later. Zev is equal opportunity when it comes to the gender of his lovers, but he has that typical male weakness for damsels in distress. I'm trying to make sure he doesn't see me as a damsel. I'm hoping that a month of not thinking about me and sex in the same sentence means he'll become your problem, or Morrigan's or Leli's. Not mine.\" Aedan laughed, but I saw something dark pass over his eyes as he considered Zev being his problem. I reached out and squeezed his hand.\n\n\"You're thinking of Rory.\" He hesitated briefly, then nodded miserably. \"It's maybe too soon, honey, but...eventually, you need to consider letting yourself off the hook for that, Aedan. He gave his life to protect you, so you could live, not be a broken shell who never loves again. He would not want you to be alone forever, to live your life lonely. Don't make a farce of his sacrifice.\"\n\nUnable to speak, he had one tear leaking down his cheek, and I squeezed his hands softly. He gripped my hands with all his strength, nodded, and then curled up on his bedroll. I didn't let go of his hand until it was my turn to stand watch. I kissed his head softly before crawling out of the tent to sit quietly by the fire. Alistair gave me a look I couldn't interpret as I emerged, but simply stumbled off to his own tent to sleep.\n\nA couple more days of walking put us just outside of Haven, according to Duncan's map. The road we had been following was little more than a dirt game trail, and had gradually become snowier as we approached, and I wondered how the Brother had found it. We decided to call it an early night and camp, rather than wander into Haven just before dark. We spent a bit of time huddled around the fire going over my notes - the layout of the town, the merchant with a dead Redcliffe knight in the back room, the location of the Chantry up the hill, Father Eirik. Then the temple full of insane cultists, ash wraiths, and dragonlings. And then, of course, the High Dragon. Sten admitted to knowing how to skin a drake to obtain scales, and I briefly grinned as I wondered when we'd finally get to meet Wade and Herren.\n\nAedan and Alistair wanted to leave me behind at the entrance to the temple with Brother Genitivi, but I was nervous about disappearing and finding myself lost or separated from them. We decided not to decide until we got there. Because of the earlier night, I was able to start sparring with Aedan earlier than normal, though the snow gave me some difficulty. After a few minutes, Zevran stepped up, pausing us for a moment.\n\n\"You do this so you can learn the art, yes?\" I nodded. \"Would you allow me to offer some suggestions then?\" I nodded again, and his posture changed from the arrogant swagger I was used to, to a purely professional one. He stepped up behind me, and I realised he wasn't quite as short as I'd predicted - he was maybe an inch taller than me. His height was perfect for what he was about to do. And I was impressed - he stopped, perhaps half an inch between our bodies, as if waiting for permission to touch me. I rolled my eyes, huffing impatiently. He chuckled and closed the distance, hands reaching out to grasp my forearms, hips against mine.\n\n\"First you need to learn how to move like a dancer. Close your eyes, and feel the movement.\" I complied, and despite the intimacy of his touch, I was able to immediately feel the difference between how I was holding myself and how he wanted me to. I adjusted, and realised it changed my centre of gravity so I felt more stable on my feet.\n\nHe was almost whispering in my ear, and it must have looked very intimate, though I noted he was careful to stick to the letter of our agreement - he did not use Antivan, did not use endearments, and kept his language completely neutral - while completely violating the spirit of it. His hands caressed my arms more sensuously than they needed to, his hips clung to mine more firmly, which pressed a bulge beneath his leathers into the curve of my ass. I had been expecting this, and chuckled darkly; I ignored his intended temptation, and just tried to learn from him. Even unconsciously, with his mind on a very different prize, I knew his stance and footwork would be without reproach.\n\nWhen it seemed he was done teaching, I decided that two could play his game: I 'accidentally' ground my ass into his groin, enough to feel him twitch slightly, at the same time as twisting to thank him, and rubbing my breasts over the inside of his arm. Smirking at his slight intake of breath, I straightened, tossed my pretend daggers into the woodpile, and then took Aedan's arm and walked away. It's going to take more than demonstrating the existence of a penis to get to me, buddy. Aedan rolled his eyes at me, and I smirked.\n\nWe ate together, as usual, and I was thankful for the stew we were eating -- it was getting cold. Supper times were some of my favourites, sitting around the campfire listening to my companions laugh and tease each other and tell stories, though I noticed Alistair was unusually quiet that night. I didn't think much of it, distracted by Wynne trying, unsuccessfully, to rid herself of an amorous elf. I swear I'm going to end up with an aneurysm trying not to laugh when I overhear companion chatter!\n\nAfter supper, Alistair had recruited Wynne for further templar training. He had her casting very small, useless spells, like the balls of fire Tanar had used, and just wanted to see how well I could sense them. We warned Wynne to use the minimum possible mana and snuff the spell if anything happened, asking the rest of the group to try not to startle me. As we'd realised previously, my ability to detect the use of magic in my vicinity was much greater than Alistair's, and we spent some time discussing the differences in what we experienced. I was able to accurately describe Wynne's visualised spells before she actually cast them, but only when she did go ahead and cast it. Apparently just imagining it wasn't enough, there had to be intent. When I described what I could see, Alistair was also able to see it, as though there was a blindfold that I was holding back. It was odd.\n\nWhen Alistair had me close my eyes and focus, like he'd been teaching me, I thought I could actually see, in my mind, the flow of mana into the spell. Following that back, I could see it surrounding Wynne, even when she wasn't casting. Once, anyway - I was so surprised I lost my concentration and couldn't get it back, much to the mage's amusement. Maybe I can learn to be a templar some day!\n\nSleep was elusive for most of us, with the spectres of a crazy cult and a high dragon hanging over us as they did. I spent half the night sitting up at the campfire, and it seemed that so did everyone else in turns.\n\nHaven turned out to be just as creepy as advertised, and wasn't even much bigger than in the game. There were very few people about, other than a surly guard who tried to bar us entrance to the town, and seemed quite unimpressed when Aedan just ignored him and we entered anyway. We went to the merchant to ask a few questions, discovered the body, and had to kill the merchant. The smell of death in the little house was overpowering, and I stumbled outside, retching, while the rest of the group searched for supplies. I really hate being a wuss. Zevran had followed, curiously, but stayed at a distance while I vomited. I briefly wondered what he thought about my evident weakness, but decided not to ask.\n\nIt occurred to me at some point that I had no idea how much coin we had now, or whether I should keep trying to bring handfuls over when I popped back and forth, and resolved to ask Aedan later. Thinking about other things, especially things which didn't involve blood or gore, helped and I was able to pull myself together by the time everyone else left the building.\n\nAfter they emerged, Leliana showing off some new arrows they had found, we avoided the rest of the townspeople we saw and headed straight for the Chantry. To everyone's relief, the vast majority of the populace fled when we entered, and we only had to kill a few of the reavers and of course Father Eirik. I still threw up after, or dry heaved anyway, since my stomach was empty, and saw Zevran eyeing me oddly. Whatever. Brother Genitivi had been tortured, but was alive, and in mostly okay shape. Wynne cast a couple of spells for healing and rejuvenation, and he was quite energetic after that. He agreed to lead us up the mountain to the temple he had learned about, but instead of one short loading screen, it took half a day of hiking, all uphill, and all cold. Aedan had liberated some warm clothing from the merchant, and between those and my cloak I wasn't in too bad shape, but I was still wishing earnestly for a warm fire.\n\nZevran walked with me as we climbed.\n\n\"Sierra? Are you unwell?\"\n\n\"I'm fine, Zev. Why?\"\n\n\"You...\" he mimed gagging. \"I thought perhaps you were suffering an illness.\"\n\n\"No, no. I'm fine.\"\n\n\"Perhaps you are with child? Some of the whores where I was raised would become very ill at certain smells...\"\n\n\"I'm not pregnant!\" I gave the assassin a dirty look. \"I just don't like killing. Blood. Violence.\"\n\n\"You think we were wrong to kill those men?\"\n\n\"No, Zev. It was necessary. But necessary doesn't mean it isn't regrettable. Or disgusting. I just wish there was another way.\"\n\n\"Such as...?\" He truly looked confused.\n\nI sighed. \"I just wish it wasn't necessary. That people weren't evil, that everyone could get along.\"\n\n\"You are...very strange, Sierra.\"\n\n\"You have no idea, amico mio. None at all.\"\n\nIt was a little bit warmer once inside the temple, despite the cave-ins and snowdrifts. I was feeling quite freaked out, for some reason, and almost hyperventilated when Aedan again tried to convince me to stay at the entrance with Brother Genitivi. The sheer panic on my face must finally have won, and he agreed to bring me with them. I was happy to promise to stay back when they entered each room; I had no desire to take part in violently ending this cult's existence, no matter how necessary. And I figured there was only so many times I'd be able to throw up before I injured myself...no, staying back won't be a problem. Aedan instructed Prince to stay near me and guard me, which he woofed at and moved to stand by me.\n\nThe map of the temple that I carried in my head was nothing like the map from the game, so the group had to basically randomly clear hallways and rooms. I stayed well back, not looking at the gore, and when it couldn't be avoided I rushed through the rooms, climbing over broken furniture, trying to avoid stepping in blood puddles, with held breath and tunnel vision. Despite my best efforts, I couldn't help but see the odd amputated body part, or meet the unseeing gaze of a corpse. Shale continuously talked about squishing people and enjoying feeling their innards squirt out, I think just to bait me. I'd heard worse on the news back home - discussing it, even understanding it wasn't the problem. The problem was seeing it. Smelling it. Without that, I'd have been fine. So I ignored her, and eventually she quit.\n\nThe place smelled largely like shit, which with a few dozen, cooped-up crazy people wasn't all that surprising. It didn't entirely cover the coppery smell of blood from each room they cleared, however, and I was starting to desperately wish for a nose clip or something. I kept forgetting to breathe through my mouth, not that tasting it was much better.\n\nWe found the key to the locked room, and eventually the one that led to the main cultist hideout. The people were as crazy as you might believe wacked out, blood frenzied nut jobs could be, at least from the stuff I could hear them yelling down the hall. Aedan kept trying to talk them down, for which I was grateful, even if none of them ever took him up on it. Finally we reached the area where dragonlings started appearing, and we were back to being surrounded by the little lizards. I kept my daggers out and killed a couple, again watching with disgust as Sten just stomped them with his boots, and Shale started mimicking him. Prince largely chased them around, barking joyfully. Apparently dragonlings are amusing if you're a mabari. It was disgusting. The drakes were a new experience - I understood the theory behind breath weapons, but having one aimed at you is very different than the theory. I got burnt a couple of times, miraculously healed by Wynne each time, and came out of it unscathed with the exception of a bit of singed hair. I wondered what the doctors and nurses were making of burns that showed up for only moments then disappeared. I briefly prayed not to end up disappearing to go back home any time soon.\n\nSten skinning the drakes actually bothered me less than watching Leli or Aedan skin a rabbit - apparently, anything with fur is infinitely cuter and therefore more deserving of life - and soon we were the proud owners of six trimmed and cleaned drake scales. A few twisting hallways later and we found ourselves fighting Kolgrim and his pack of extra-nutty lunatics. I huddled in the back, trying to make myself a small target, until it was over. I was still struggling with guilt over my inability to help them, though I managed to keep my concerns to myself. Most of them seemed unbothered by it; Morrigan thought it was ridiculous, but felt since I wasn't much help anyway it didn't matter. Leliana, as usual, tried to shelter me from it and seemed to delight in my innocence. Zevran still looked confused, but refrained from comment. Everyone else just seemed to accept it as another eccentric part of my personality, like not wanting to know what sort of meat the jerky was made up of, and if anything, had seemed irritated by my apologies in the past.\n\nWe tried to creep across the mountaintop past the high dragon, but either the game lied about the ability to bypass that, or it didn't like the smell of someone from Earth, because the moment we went outside it flew down to land and attacked. The beast was majestic, I'd have to give it that. Probably eight feet tall at the shoulder, it was a deep purple on top, with a lighter, more red underbelly, and entirely covered in overlapping scale plates. The wind it stirred as it landed was intense, blowing snow and ice crystals into everyone's faces, and deafening us.\n\nAlistair, Sten, and Shale took turns keeping its attention, while Leliana picked shots from a nearby boulder, Wynne healed, Morrigan kept blasting it with ice and something that must have weakened it, and the rogues and Prince darted under legs or over its tail, slashing with daggers and teeth. Its fire breath stank like brimstone, and every time it roared a small avalanche of snow and rocks started from one of the nearby cliffs. The air was frigid, and it seemed to amplify even the softest sounds, which caused echoes to ricochet through the mountain pass.\n\nPersonally, I was so scared, I sank to my knees just outside the door and stared. When the thing finally went down, it was like one of those slow-motion shots from the game - Alistair dropped his shield, leapt up and grabbed a horn at the back of its head, pulling himself up, and then drove his sword with both hands into the soft spot just behind the heavy scales protecting the brain. He tumbled down again, somehow unhurt, landing near me with a grunt.\n\nSten went to work again with the skinning, but Alistair, seeing my pale face, rushed over and sat me down, head between my knees, rubbing my back awkwardly with his heavy gauntlets.\n\n\"Sierra?\" Aedan approached, dropping to his knees beside me and pulling me into an awkward hug.\n\n\"That was a dragon. A real fucking dragon.\"\n\nAedan chuckled drily. \"You were the one who warned us, remember?\"\n\n\"Yeah, but...you don't understand. Dragons don't exist. They can't. It's just not...it's not okay for there to be dragons.\" I was near hysteria, I realised. \"I guess I thought they were joking. Exaggerating. Something.\"",
        "I could feel Aedan looking around, probably looking for help. No one offered any, and I pulled my shit together with pure willpower. Everyone looked a bit peaked, but I guessed that knowing dragons existed for your whole life made a big difference to your outlook upon encountering one. Morrigan made a few caustic comments about the accuracy of my information, given that I thought the encounter could have been avoided, but I just ignored it.\n\n\"I'm okay. Let's just...let's just go. Get this done.\" I pushed away from Aedan, stood, and started walking towards the door to the gauntlet. My steps steadied after the first few, and I heard the rustle and clank that meant the rest of the group was following along.\n\nDespite their enormous size, the doors swung open easily, leading into a huge foyer. The Guardian stood, apparently unmoving for centuries from the dust and debris in the room. I had warned everyone what questions they were going to be asked by the guardian, and as a group we all sort of braced ourselves and approached.\n\nHis question for Aedan led to the obvious conclusion that he regretted leaving his parents behind to die. Duh. Wynne admitted she sometimes felt uncertain, had doubts occasionally. Also duh. Morrigan refused to answer, Zevran said 'yes' before even hearing the entire question, and he largely ignored Prince and Shale. Sten admitted that killing a family in a blind panic for a very stupid reason was, well, stupid. I almost called the Guardian 'Captain Obvious', but managed to stifle the flippant remark. Leliana denied that she was using her visions to get attention. I gave him a dirty look for that - I may not have been very religious on Earth, nevermind in Ferelden, but any idiot could see she believed.\n\nWhen he moved on to Alistair, I was expecting a question that would bother him less than game canon would imply, but I was surprised. I guess the Guardian knew about Duncan surviving, because instead his question left me standing with my mouth open in shock.\n\n\"Alistair, former templar, you have learned that your templar abilities are very underdeveloped compared to some, but Sierra's rival the most powerful of templars without having undergone the training and the suffering you did to get yours. Do you resent her abilities? Do you feel angry that you weren't granted those abilities instead?\"\n\nAlistair turned to look at me, and paused thoughtfully before answering.\n\n\"I did, at first. Before I knew her, before I understood. But she has no more choice than I have, and while her abilities are impressive, they are unreliable, uncontrolled. She is no more advanced than I am, we are just different. We have much to teach each other, and I do not resent that. Besides, I don't know the details, but I get the impression that Sierra has seen her share of suffering.\"\n\nI smiled brilliantly at him, and he blushed in return. I held my breath as the Guardian turned to me.\n\n\"Sierra, you live in a place where you have nothing and no one. No one misses you, no one notices that you are gone. No one will care if you die, and no one will come to your funeral. Do you believe that you are, indeed, mentally unstable? Did you dream up this world, these people, and that you are a part of it, just to feel important? To have your life feel like it means something? Are you, in fact, insane?\"\n\nI expected this question, had thought about it at length, and still had no answer to give.\n\n\"I...don't know. I hope not.\" I closed my eyes, not wanting anyone to see me like that. Feeble I could handle; unsure of my own sanity? Hell no. I opened them again in surprise when each of my hands was gripped by another; I looked around and realised I was in a circle of friends, all of whom looked at me with a mixture of affection, sadness, and understanding. Aedan and Leliana held my hands, but Alistair, Wynne, Zevran, and even Morrigan stood around me offering silent emotional support. Sanity or no, this was my family and it was where I wanted to be. I closed my eyes again, offering a silent prayer of thanks to any deity that would listen, and then with a nod, we moved on.\n\nChapter Twenty-Six: History and Lice\n\nThe riddles in the next room posed no serious difficulty, even without me knowing the answers, and when the door swung open to show Bryce Cousland, Aedan let out a shout and took off at a run, Prince at his heels. I held back, giving him some privacy to talk with his father. I looked curiously at him from my vantage - he may not have raised me, but if Aedan was my brother, this man was my father also. He had a kind smile, and those wrinkles around his eyes that make men look distinguished (and women seek Botox). His hair was salt-and-pepper, his body trim and fit for an older guy. Though as I thought about it, older in this universe wasn't necessarily the same as at home - he was probably in his forties or fifties.\n\nAedan hugged him, and I looked around briefly to see if everyone was as heartwarmed by it as I was, only to realise I was alone. All of the others had disappeared. There was nowhere they could have hidden, and I'd have heard at least Shale and Alistair as they walked away, so it had to be magic of some sort. I decided to wait until I could discuss it with Aedan before panicking.\n\nAedan and Bryce talked for a minute, and I expected Bryce to fade away, but after a bit, Aedan turned and gestured to me to approach. Nervously I walked closer, and saw Bryce's face light up. He pulled me into a tight hug before I could even greet him, and I awkwardly returned it. Releasing me, he brushed my hair out of my face and gently cupped my cheek.\n\n\"Sierra, my daughter. I am so happy to see you! Your mother will be beside herself. I only have a moment, but I want you to know. I am so, so sorry darling. We didn't know what happened, only that when you were born, you were breathing, your heart was beating, but...you weren't there. We took you to healers, seers, midwives and mages; no one knew what was wrong with you. We tried everything, but...you sickened. We didn't want Aedan to live in the shadow of the sister he had lost so we didn't tell anyone. We loved you so much, and missed getting to know you every day.\n\n\"Pup, you must protect your sister.\" Aedan swore he would, and I grinned at him. \"And Sierra - you belong here, my darling. Stop questioning it, and just believe. For me?\"\n\nI felt tears trickling down my face. He called me daughter. And with that, I finally allowed myself to hope that maybe this really was where I belonged. \"Papa?\" I just couldn't call him dad. Or father. \"I will try.\"\n\n\"I must go. I love you so much, my children. Your mother and I both do. Take care of each other...\"\n\nI almost screamed when he disappeared. I clapped my hands over my mouth, holding it in, and collapsed into Aedan's arms. We clung to each other, and I could tell I wasn't the only one crying. Prince stuck his nose into the first opening he found, and for the first time, I was part of a family.\n\nThe rest of the group slowly approached, all looking shaken to one degree or another, but none of them were as feeble as I was, and the pressure to move on became noticeable. Aedan managed to pull himself together, but I was still a right mess. Aedan pulled out my notebook to check on the next fight rather than disturb me where I sat. Realising we were headed for a nasty one, he again instructed Prince to guard me. When the doors swung open, there we all were, facing ourselves, nine combatants and a weak little girl. I stayed curled on the floor, cuddling Prince with all my might, refusing to watch who took the final blow on my doppelganger. I heard Morrigan curse, Sten grunt, Alistair shout something unintelligible, and it was done. Aedan came over and pulled me to my feet, and I held his arm as he half-dragged, half-carried me past our own corpses. Morrigan was whining about templars, and I guessed that evil-Sierra or evil-Alistair had whammied her. Oops.\n\nIn the next room, the combination to the puzzle wasn't even close to that from the game, and I was forced to collect myself to help out. Apparently the puzzle knew how many of us there were, as it required all of us working together to open the doors. Or perhaps they only let in groups of ten. Either way.\n\nAnd then, we were in the room, crossed by a massive wall of fire, leading up to an altar. And it occurred to me that somehow I had completely suppressed the realisation that we were all going to have to get naked. Together.\n\nIt wasn't that I was a prude. I'd seen naked men before, and I wasn't a virgin, but there was just something weird about getting naked with a co-ed group. I'd make a terrible orgy participant. And every time I even thought about Alistair naked I ended up in hysterics, or drooling, or both. This ought to be fun.\n\nAedan pragmatically just began shucking armour. Leli, Wynne, Zevran, Sten, and even Morrigan followed suit, looking unconcerned. We had decided to have Shale and Prince remain on this side of the fire, which left just Alistair and I, both looking panicked. I met his eyes just long enough to be suddenly even more embarrassed, and finally had a choice between curling back up on the floor with Prince or getting on with it.\n\n\"Oh for the love of God. I can't believe I'm doing this.\" I stripped as quickly as I could, and swore to myself that when I looked back up, I wouldn't stare. Much.\n\nEveryone hesitated at the edge of the fire, and finally deciding that if I went first I wouldn't have to see everyone else's expressions (or their nakedness), I stepped through. It sort of...tickled, strangely. The fire didn't crackle, like a normal fire, and there wasn't any smoke to speak of. Aedan let out a cry, but I passed through untouched. I kept resolutely looking straight forward until I could hear the rest of them behind me.\n\nWynne and Leliana were in raptures over the altar, the statuary, and the urn itself. Even Aedan and Alistair approached with hushed voices full of awe. I supposed it was rather beautiful, though not being raised religious, and definitely not Andrastian, it didn't hit me quite as hard. Aedan approached the Urn, taking a pinch of the ashes and placing it into a little pouch he carried.\n\nI briefly wondered if I could convince Aedan and Alistair to use a pinch of the ashes each to cure their Taint, but knew they'd object. I'd tried bringing it up before reaching Haven, and got nothing but dirty looks. But if I was going to attempt to stay in Thedas, to accept that I belonged there, I wasn't looking forward to losing my brother in thirty years when his Calling came. My suggestion died on my tongue when I caught Aedan's eye -- he obviously guessed what I was going to say, and shook his head once, firmly. I sighed. I had also considered taking a pinch to bring to Avernus in Soldier's Peak, and ruled that out too. He may have been a Grey Warden once, but he was a madman too. We didn't need him curing his own Taint or creating something even worse.\n\nAs it turned out I was able to escape with only a glance at each of my nude companions. The girls didn't bother me, though Zevran was right about Wynne's magical bosom - it didn't sag in the least. Aedan I got just a glimpse of, enough to realise he was as fit as he seemed in armour. Zevran the same, though the hip thrust when he thought anyone was looking just about made me choke with laughter. Sten was even more imposing nude - yikes! I can't un-see that! I tried to avoid looking at Alistair - it was one of the harder things I'd ever tried to do - but couldn't help getting a quick flash of bronze skin and rippling muscles. Blushing furiously I hurried back across the fire wall, shrugging into my armour quickly and studiously ignoring everyone else as they dressed.\n\nOnce finished, we left the temple. We all agreed that no matter how exhausted we were, it would seem somehow sacrilegious to sleep inside the shrine, and we didn't want to spend an extra second in the temple full of cultist corpses than we absolutely had to. I kept my eye out for the easy shortcut back to the entrance, but apparently that was only a convenience for game purposes. Damn!\n\nFortunately Zevran was good with directions, and we all followed him blindly. Aedan had his arm around me, and I barely even looked up from the floor as I walked, mind reeling. I stumbled a few times, vaguely overheard Alistair offer to carry me, but even in my fugue I could hear the insincerity of the offer, and Aedan politely declined on my behalf. Even Shale finally fell silent, keeping her comments about the weakness of flesh-creatures to herself.\n\nWe found Brother Genitivi, and limped down the mountainside in the dark, realising once we arrived that we had no more desire to stay in Haven than we did in the temple. We kept going until the creepy little town was out of sight, and then collapsed into the first clearing we came across. We passed around some dried fruit and jerky, and basically all fell asleep where we sat. I woke some time later, with the sun just barely peeking above the hill behind us. I was curled in my brother's arms - I have a real brother! - and decided I wasn't moving until I had no other choice. I spent some time thinking about suddenly having an actual family, until trying to figure out how in God's name I crossed the barrier between universes repeatedly threatened to break my brain and I quit.\n\nEveryone else was starting to come around, and after some breakfast that resembled our supper very closely, we set off. We found Bodahn at the camp in the afternoon, and still tired, chose to rest there for the night. We were all quieter than normal at camp, but the normalcy of setting up tents, cooking, and washing took over and restored things a little. No one brought up their visions when we were all separated inside the temple. I was intensely curious, but kept it to myself. I don't want to talk about it either.\n\nI spent a while thinking about what Bryce had said to me about belonging in Thedas, and learning to accept that. Do I even want to stay in Thedas? There were definitely pros and cons. I missed indoor plumbing and supermarkets. I missed security and my fancy memory foam mattress. But I didn't miss the lonely evenings and weekends, the nearly paralyzing inability to make friends and meet people, the countless hours of video games. And no one there missed me. I guess...maybe I do want to stay. Now to figure out if I even can. And what will happen to me when the blight is over and my knowledge is no longer useful...I need to do more training.\n\nAedan and I sparred before supper, and Zevran joined us again. He watched us, stopping us frequently to readjust my position, stance, or hold on my weapons. Each time he did, he would step into me from behind, pressing himself against me, hands stroking whatever part they wanted to change, using his hips to alter my posture. When I was in the position he wanted, he would practically purr in my ear, and it was almost impossible for me not to laugh. I supposed that in Ferelden, this was quite provocative behaviour - the number of orders who required vows of chastity alone was an indication of the prudish morality - but where I came from, this was about equivalent to the level of intimacy expected when dancing in a nightclub. Not that I did a lot of clubbing, but I wasn't nearly innocent enough to be thrown by Zevran. And knowing what to expect helped too.\n\nWhen we were done, Zev's hands lingered on my waist, and I playfully slapped them away, finally able to laugh again, even if it somehow felt inappropriate. I headed back to the fire, planning to offer help with supper, when I heard an indignant squawk from the direction of the tent Leliana shared with Wynne. Everyone jumped, and I wandered over to investigate. I found Leliana jumping around, pulling at her hair like a crazy person, and I watched for a few moments, amused, before finally asking.\n\n\"Leli? Whatcha doing?\"\n\n\"There was...something...in my hair.\"\n\n\"After what we've just been through, I imagine there's a lot of things in your hair.\"\n\n\"No! Something moved. I swear, if your dog gave me fleas...\"\n\nPrince whined and I laughed. \"Sit down, let me look. Stop jumping around, woman! Hold still.\"\n\nI ran my fingers through her hair, and caught sight of something. Looking closer, I sifted through the strands closer to her scalp and swore.\n\n\"What is it? Is it fleas?\"\n\n\"No, Leli, it's worse, I'm afraid. I don't know how to tell you this, but...you've got lice.\" Her horrified look almost set off the giggles. \"It's not exactly life-threatening, you know.\"\n\n\"Lice?\" Her tone was a hoarse, mortified whisper. \"Are you sure?\"\n\n\"Leli, what's wrong? I was just teasing about it being worse than fleas. Lice aren't a big deal.\"\n\n\"Sierra, I...feel very vain, saying this, but...I don't want to shave my head. I think I'd look terrible bald.\"\n\nI cracked up, reaching out to grab her hand in apology. \"Is that what's got you worried? Oh, dear. No, you won't have to shave your head. Don't worry. We can fix this. It'd be easier if I could get some medicine from home, but even without it isn't a big deal. Promise.\"\n\n\"How in Andraste's name did I get lice?\"\n\n\"I very much doubt Andraste had anything to do with it, Leli. I'm going to guess one of us borrowed a hat at some point...\" I trailed off, thinking. \"Like me, blast it. That damn templar helm. Lice spread like wildfire among close contacts. Not to mention blankets and things. We're all going to need treatment. And I only have one comb! Ah well. I guess we'd better let everyone else know so I can get started.\"\n\n\"Started doing what?\"\n\nI sighed theatrically. \"Nit picking.\"\n\nEveryone else accepted the news of our likely widespread lice problem with less despair than Leliana, though they all seemed happy that I had a possible cure. I explained how lice worked, as far as I could remember, and how the life cycle required new eggs to hatch new lice. If one could get rid of all the eggs over a two week period, the lice would be gone. The bigger issue was the need for all of us to either scour our helms with something like bleach, or acquire new ones. And leather helms don't scour well, so at the very least four of us required new head gear.\n\nI insisted everyone wash their hair as well as possible, and used up most of my shampoo to make sure it happened. I grabbed what I needed from my tent, set up a log to sit on near the fire, and gestured to Leliana to sit in front of me. While Aedan and Zev bickered over making supper, I began methodically combing through Leliana's damp hair. Picking nits is slow, annoying work, but I was no stranger to the problem. I chatted with Leli while I worked, and she closed her eyes and just enjoyed me playing with her hair, once I reassured her yet again that this would work.\n\n\"Sierra?\"\n\n\"Yeah?\"\n\n\"How do you know how to do this?\"\n\n\"I spent hours doing it when I was a kid.\"\n\n\"Maker's breath, why?\"\n\n\"Well, there were always a lot of children around. Lice were rampant where I grew up, and if someone didn't get rid of them, we'd have infected half of the country. The social workers wouldn't let us go to school if we were known to have lice, so...I picked.\"\n\nEveryone had gathered around the fire, and most were apparently quietly listening to me. I flushed, but had come to the realisation inside the temple that if I was going to act like this was my family, they deserved to know a bit about my background, so I just kept talking. It was a struggle, but I managed to keep my voice emotionless, my face neutral, like I was talking about someone else. I didn't want attention, or God-forbid, pity, for this.\n\n\"I was found, as a baby, by a homeless woman. No one knows where I came from, or who my parents were. They apparently had some problems with abandoned babies, back then, so they set up places where you could drop off an unwanted baby and they'd be taken care of. So the homeless woman who found me took me there. I was apparently still damp, like I'd just barely been born.",
        "\"Back home...you can't be adopted unless your parents sign some papers. So since no one knew who mine were, I couldn't be put up for adoption. Instead, there's a system in place to take care of unwanted kids like me. It's the same system that will take kids away from parents who beat them or whatever. So there's quite a few homeless children floating around. Someone decided, I don't know who, that orphanages were cruel and impersonal, so they came up with another plan. It's called the foster system.\n\n\"The government...the crown, I suppose is the closest thing, will pay families to take care of unwanted children. So virtually anyone can apply, and they try to check to make sure you're not some pervert who would hurt kids, and then they stick one or two (or rarely, several) kids into these homes and pay for their upkeep. The families are called 'foster'. Foster-mother, foster-father, foster-home, foster-child. Some of those homes are really good people, who just want to help. Most of them are people who are desperate for coin, and try to take advantage. They take the upkeep pay and refuse to use it on the child, keeping it for themselves. The kids are neglected, or even abused, and no one believes children when they complain about stuff like that, so they rarely get caught. A very few of the foster-parents are actually pedophiles. People who sexually abuse kids.\"\n\nI was speaking quietly, but the horror on the faces of everyone around me told me that it was loud enough. Aedan looked like he would be sick.\n\n\"So anyway, once you're in the system, you tend to get moved around a lot. Some of the families aren't very stable, and lose their approval to be foster-families. Sometimes they decide they don't like you, because you complain too much or you're too noisy or whatever, and they send you back. So every few years, at least, and more often every few months, you get taken from one foster-home and put in another. It gets worse as you get older, too - at least the little ones are cute, and they don't know any better so they don't get families in trouble if they forget to feed them or treat them cruelly.\n\n\"I was raised by fifteen different foster-families, until I was old enough to escape the system. At sixteen, I applied to be considered an adult and moved out on my own. I was lucky - I never ended up in the families where the kids were sexually abused - but I only had one foster-home where they cared about me as anything more than an income source.\"\n\nMy stomach was rebelling, by this point, and the odd ache in my chest that I'd always felt whenever I thought of family was raging. I hoped that, from years of public speaking, nothing would show on the outside.\n\n\"In the foster-homes, I often had little foster brothers and sisters, and if I was the oldest, it would be my job to take care of them. And they frequently got lice. There's a medicine at home that makes it easy to get rid of lice, but it's expensive so usually the parents wouldn't buy it. So I learned how to do this.\"\n\nAlistair cleared his throat. \"Does this have something to do with your nightmare? From the Fade?\"\n\nI nodded. \"Not the lice, but the rest, yes. That...place was a mental institution. A place they stick people who are too crazy to be out in the world, where healers can take care of them. Since all this started, I've been afraid someone there would decide that I was insane and put me in one of those places. And then, I have always been lonely, I suppose. And I suspect every orphan or adopted kid out there wonders if they have a family somewhere that they don't know about. So they played on both things - my fear of being locked up, and my desire to have a family. In the nightmare, I was crazy and had forgotten I had a family; Aedan and Leliana were my siblings, and Theron was my husband, and they were trying to convince me that everything I could remember wasn't real. And you were the healer who locked me in there.\" His eyes were shadowed, and I knew my own pain was on display a little too visibly. I rubbed my face, cleared my throat, and changed the subject.\n\nI had finished with Leliana's hair, and I explained that we would have to do it every couple of days for two weeks to be sure they were gone. She nodded, then reached down and squeezed my hand before heading to the cookpot.\n\n\"Next!\" I called, and Aedan approached. I gestured for him to sit, but he surprised me by kneeling in front of me and hugging me to his chest. His voice was hoarse with emotion, when he pulled away, and he told me he loved me before kissing my forehead. Tears threatened, but I managed to stave them off.\n\nHis shorter hair was easier, and it only took me a few minutes to finish. I tried convincing Leli to watch what I was doing, so she could continue if I disappeared, but she was totally disgusted and couldn't bear it. Wynne was completely disinterested in watching, to my surprise, and seemed to prefer reading her book to helping out. Zevran ended up sitting beside me and agreeing instead.\n\n\"Ah, I wish I had known this when I was back in the whorehouse in Antiva! Every time lice went through there, we all had to shave our heads and the whores wore wigs until it grew back in.\"\n\n\"I bet it was the wigs that the lice were living in.\"\n\n\"No doubt! We shall have to spread news of this miraculous cure.\"\n\n\"Unfortunately it won't work very well here. I've never seen a fine enough comb for it.\" I showed him the closely spaced teeth on my plastic comb. \"I'm going to have to start importing combs every time I go back. The metal ones are even better, actually.\"\n\n\"I'm assuming you need this treatment as well.\" He gestured to the comb. \"May I?\"\n\nI agreed and he went to work. It takes at least an hour to do it well on long hair, and as the person being treated, it's actually quite relaxing. I closed my eyes and just enjoyed it, even though he did seem to brush my neck, ears, and cheeks more often than strictly necessary. Once he was done, he returned my comb and took his place in front of me.\n\nHis hair was soft and silky, and a joy to play with. I meticulously combed through it, making sure to give him the same treatment he gave me - 'accidentally' stroking the tips of his pointed ears, or leaning forward so that the curve of my breast nudged his shoulder. By the time I was done, I was quite certain I knew which of us had been more affected, and it wasn't me. When I declared myself finished, he sighed softly, stood, thanked me, and walked off into the bush. I giggled to myself and then motioned Morrigan over.\n\n\"Next!\"\n\nLong before I finished everyone, my arms were too tired to continue and Zevran had to take over. I was thus saved from having to do Alistair's, to my relief. Alistair seemed less pleased, but he held his tongue and submitted. To Zev's credit, he waited until he was finished with Alistair before making any suggestive comments.\n\nI also had everyone air out their blankets, using sticks to beat them and try to delouse them as well as possible. I knew we would need to wash them in hot water, and sooner rather than later, but as we had no extras it would have to wait a bit. Bodahn mentioned he knew of a hotspring on the way back to Redcliffe where the water was too hot to bathe, and actually warmed the air around it - if we camped close enough to it, we should be able to wash our blankets and still be warm enough to allow them to dry overnight.\n\nThat evening I pulled Zev aside at one point when no one was looking.\n\n\"Will...will you do me a favour?\"\n\n\"If it is within my power, then yes.\"\n\n\"Do you have your tattoo needles?\" Zevran's eyebrows rose and he smirked.\n\n\"You wish me to mark you?\"\n\n\"Yes.\"\n\n\"You know it is painful, yes?\" I nodded.\n\n\"I've had one before.\" This definitely got his attention. I tucked the hem of the pants of my armour to show him my tiny rose, only to have my jaw drop -- it wasn't there. I smacked myself in the forehead; of course it wasn't -- this body didn't get a tattoo. I shrugged, embarrassed and uncertain how to explain it; he just raised an eyebrow.\n\n\"What is it you'd like to have done?\"\n\nI described what I was looking for. I wanted it small enough to hide, large enough to see the detail, and on my back where no one would see it unless I was naked. I sketched a rough design out into the dirt with a stick, and he nodded. He asked a few questions about colours and shading, which I declined.\n\n\"Will you tell me why?\"\n\n\"No. At least, not right now.\" He studied my face for a few moments, and finally agreed.\n\nI followed him to his tent, crawling in and unlacing my leathers enough that he could get at my back. He prepped the skin with some sort of oil and began, freehand. I was intensely curious, but resolved to trust in his artistic ability. It was painful, but my meditation practice with Alistair came in handy and I was able to tune it out, clearing my mind and thinking of nothing. How long we sat like that, I wasn't sure, but it must have been hours. As the light waned, he lit a couple of candles, and I vaguely wondered if he would have enough light to see. He didn't complain, so I decided to trust him.\n\nWhen he was done, we used a crude mirror that he carried along with the small compact mirror I had brought so he could show me. It was perfect. In stark black outline, a griffon and a dragon were squaring off, only the outline of their profiles, in the centre of a Chantry starburst. The dragon was breathing fire, and the griffon appeared to be squawking in defiance. And I swore I saw what looked like the letters A and S in the swirls of the fire. I pointed them out and raised an eyebrow. Zevran kept his face impassive, but his eyes sparkled as he lied to me.\n\n\"Purely random. If you see letters, it is because you see what you want to see.\" I didn't believe him. \"Do you wish me to change it?\"\n\nI stared a little bit longer. \"No, Zev. It's perfect. Thank you.\" My smile was warm and he returned it, seeming very pleased with himself. I chose to ignore it. He handed me a by-now familiar small red vial, instructing me to drink a few drops four times a day to promote healing and prevent infection. Apparently using a poultice or drinking too much could ruin the dye. It was only slightly sore before, and I could barely feel it after drinking the potion. Too bad they didn't have these potions on Earth when I got my rose! I recalled the dressing changes and vitamin E cream applications with amusement. Zevran told me I didn't need to protect it much or keep it covered as long as I drank my drops.\n\nI slept heavily, again ignoring the veiled looks from Alistair and Wynne as I climbed into and out of Aedan's tent. I knew I could have cleared it up - explained how Aedan and I felt about each other, what Bryce Cousland had said to me inside the temple - but I wasn't ready to talk about it, and Aedan seemed content to let me choose how much to say.\n\nWe packed up for the two week trek back to Redcliffe. I spent some time riding the cart, dealing with Bodahn's and Sandal's hair, and chatting with the talkative dwarves. I also spent some time teaching Leliana more songs from home, though only when no one else was listening. I spent the rest of the long days on foot circulating through talking to everyone. I was back to our usual evening routine of sparring with Aedan (with Zevran 'helping', and more often flirting), followed by supper and templar training with Alistair. For the first couple of days the tattoo was slightly tender, and I was grateful for Bodahn's cart to hold our gear. By the time I'd finished my little red vial, I couldn't even feel it anymore, though when I had Zevran check he told me it was still puffy and would take a few weeks to be perfect again.\n\nZevran and Aedan started sparring with each other while I did templar training. The difference between their skill level and mine was incredible, and a few times before or after my templar practice I watched in awe as they danced around each other with deadly grace. They started spending time comparing styles, weapons, and armour, and I grinned to see Aedan looking so relaxed. Some of the grief that had been almost palpable the past few weeks had been replaced with an easy smile and a ready joke, and I couldn't have been happier.\n\nOn the fourth night I sat with Alistair, for once alone (instead of with Wynne or Morrigan) practicing some focused visualisation that I wasn't having much luck with. We were outside of camp, as distraction wasn't really the point, and once I had fumbled my way through it and finally given up with a headache, I stood to go back to camp. Alistair seemed irritable, and had made a couple of sarcastic comments about my lack of progress, which was quite unlike him. Deciding that I didn't want to deal with a cranky Alistair, I was sort of rushed about leaving the little clearing we'd been sitting in.\n\n\"Oh, wow, not even going to hide it tonight, hey?\"\n\n\"Uh...what?\" I turned back, brow furrowed in confusion.\n\n\"Don't mind me. Go ahead and rush back to Aedan. Or is it Zevran now? I can't keep track.\"\n\n\"Excuse me?\" He either didn't notice or chose to ignore the heat in my face, and continued blithely on.\n\n\"Well there's been such a parade, I'm having a hard time keeping them all organised. I mean, between sharing a tent with Duncan, and the way Cailan and Teagan look at you, and then into Aedan's tent, and now the way Zevran touches you? I can't figure out whether you're looking to find the best protector, or just like the variety. But don't let me stand in your way, they're probably back there waiting to vie for your attention.\"\n\nI had hit my limit. That, of all the people I had met in Ferelden, the one I cared about most could look at me that way, could assume what he had, was too much. My temper was well and truly lost, somewhere, and with a shriek I reached out and grabbed the offending bastard by his ear. I dragged him, cursing and hobbling along, over to the campfire, finally letting go with a shove to Alistair's posterior that sent him reeling over to stand near where everyone else was sitting and chatting, rubbing his ear. Everyone stopped what they were doing and stared up at me in shock.\n\n\"The very next person to call me a whore, to even imply it, is going to find out the hard way whether I've learned to use this shiny dagger I carry around with me.\" I flourished the dagger ostentatiously and then slipped it back into its sheath. My face was deadly serious, and I must have looked incredibly angry because everyone stared at me, open-mouthed in shock. \"Now all of you listen to me, because I'm only going to say this once.\n\n\"I have never had sex with Duncan, nor will I. Same goes for Theron and Teagan. I have not had sex with him,\" I pointed to Aedan, \"him, her, her, him or her,\" pointing to Zevran, Leliana, Morrigan, Sten, and Wynne in sequence. \"If you don't believe me, because why would you if you think I'm such a slut? Ask each of them. I have no intention of having sex with any of them, and if I decide to change my mind, I'll be sure to submit a request for your approval in triplicate, Your Majesty.\" This last was spit in Alistair's direction, and my face must have looked truly frightful because he paled slightly. \"Now I'm going over there, if anyone needs me. And Alistair? Stay the hell away from me.\"\n\nI turned to walk away, and saw Zevran's shocked expression morph into one of bemusement as he opened his mouth to make some sort of smart comment. Before he said a word, I had the dagger out of its sheath and threw it across the small clearing to thunk into the wood of the small stump he sat on, right between his legs. I was amazed -- I'd never thought to throw a dagger before, and doubted I could repeat that shot if my life depended on it. To his credit, Zevran didn't jump or tumble back in surprise, but instead schooled his expression, cleared his throat slightly, pulled the knife out of the wood, and said \"So, uh, should we get a start on supper?\" I smirked in grim satisfaction, collecting my dagger and stalking off through our small camp to go sit by myself on the far side of Bodahn's wagon. The dwarf took one look at my face as I walked by, grabbed Sandal by the arm and marched him away to leave me in peace.\n\nI sat for probably half an hour shaking with rage, before the hurt finally broke through. The first couple of tears had just fallen when Aedan, with impeccable timing as usual, crept up and slid down beside me. He didn't say anything, just put his arm around me and pulled me against him. I cracked, shuddering through heaving sobs as he just held me. Finally when I settled, he cleared his throat.\n\n\"Sierra, I realise this doesn't help right now, but he's only asking out of jealousy.\"\n\n\"Doesn't make him less of an asshole.\"\n\n\"Agreed. Completely. Believe me, I'm not defending him; although, actually I do feel a bit sorry for him with the way everyone jumped on him after you left. I don't imagine Leliana, Wynne, or even Morrigan have left much of him unbruised, to be honest.\" I smiled, grateful yet again to have true friends for the first time in my life. \"I'd have killed him myself if I didn't know what was going on. All I was trying to say is that he wouldn't care which tent you slept in unless he cared about you.\"\n\nI jumped slightly. \"You think he cares? Why would he, if he assumes I've slept with everyone who isn't him?\"\n\n\"He doesn't think you have, Sierra. He's scared that you have. And big macho men don't tend to handle being scared or jealous very well. Add that to you avoiding him...\"\n\n\"I don't avoid him. I've been training with him every evening for weeks!\"\n\n\"But you don't talk to him. Not like you do with the rest of us. You don't joke, or tease, or touch him. He notices.\"\n\n\"I can't, Aedan. I...he...we can't be together, not ever. And it hurts too much to talk to him knowing that.\"\n\n\"If you love him, sweet sister, then at least tell him that. He's hurt and doesn't know what to make of you. Can you blame him? You smile at him like he's your personal sunshine one minute, then refuse to look at him or answer a direct question the next. You tell him that in your nightmare, he's the one locking you up. And then you flirt with Zev and share a tent with me... the poor guy is completely confused, not that it gives him an excuse to imply you're a whore, I realise. Just tell him. Give him a chance to keep his heart in one piece.\"\n\n\"I can't risk it. I...if he tried to convince me...Aedan, with five minutes concerted effort he'd be in my bed, consequences be damned. I can't give him the chance to change my mind. Although perhaps now would be the time - I think I'd rather stab him than look at him right now.\"\n\nAedan shook his head. \"And would it be the worst thing that could happen, if he convinced you to give him a chance? If you're going to accept that you're from here, that you belong here, perhaps it's not so unreasonable for you to consider a relationship here.\" He sighed. \"I can't force you. But I think you're being more than a little unfair to him, don't you?\" He left me, then, and the grief took me again. I stayed alone, far from the only people I knew in the entire world, and wallowed in my own misery until I finally crawled into the tent Aedan and I shared and slept."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-25-26"
}