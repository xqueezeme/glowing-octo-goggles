{
    "title": "Road Trip Pt. 03",
    "pages": [
        "... continuing from Part 02 ... \n\nChapter 12\n\nMichigan\n\nJust north of the Ohio-Michigan border is the Coldwater Lake State Park, an undeveloped piece of land with a few trails on a modest size lake. I'd set this as my travel goal because I left Greenville, Ohio, so late in the morning. I pulled into the small park, and took advantage of the fact that my motorcycle could follow a well-trod foot trail to get to a better campsite than those along the road through the park. I setup camp beside the lake, and had an easy dinner from some of my supplies. \n\nAfter dinner, I meditated for an hour, trying to cleanse my mind of all my confused thinking and the nearly unanswerable questions rolling around in my head. My focus dwelled on the sounds in the park as my eyes glazed over in my elevated state - birds, insects, the leaves in the rustling wind, the water lapping at the shore, and even a jet high overhead.\n\nWhen I'd finished meditating, I reflected on all the crazy things going on in my head: Karen's secrets, falling in love with multiple women, the near overload of sex I'd been enjoying, my guilt about my grief fading, my incestuous thoughts about my sister, the feeling of angst over what I felt were changes to my fundamental values around relationships and sex, and my newfound fascination with group sex. There were more, and I let them all scramble my brain for a few minutes, not reaching any conclusion other than I could stew about them all day. Instead, I decided to focus on 'gratitude.' I started to list some of the big things I could be grateful for.\n\nI started with Karen's death - it had been painless for her, just a slow erosion of her strength and life; there are many worse ways to go. I thought of all our friends and their outpouring of condolences to me and the rest of her family who attended the memorial service we held. There was much love expressed in those tragic moments.\n\nI thanked the Universe for Anna for staying with me after Karen's passing to be sure I could function. My gratitude also went to her idea to ride the motorcycle across the country. I thought of my father, and the joy he briefly had with the Harley Davidson motorcycle before he died; I thanked the Universe for the skills I had to renovate his bike after the years of neglect. I thanked my mother for always being there for me when I was growing up. \n\nI moved on in my thanks to Lauren and the outpouring of love and passion she shared with me. I discovered how in tune the two of us had been for the entire time I'd known her sister. Lauren launched me into my trip with an open and willing mind for new relationships. Each time I saw Lauren I was struck by her appearance; she looked so much like my late wife. Increasingly, I found the memories easier to deal with.\n\nI expressed my thanks for the friends I'd found in the Circle of Love in Pennsylvania, particularly June - one of the women in the Circle that took me under her wing and who became one of my lovers with the other two women in the Circle. She also introduced me to her sister Kim who became my confidant, mentor, and lover. \n\nI thanked the forces in the Universe for having me in the right place at the right time to rescue a farmer from burning barn, and some young children in a tough situation as their small boat drifted far from shore. I felt fortunate to abort a rape by four men against a pretty woman in Alabama.\n\nI expressed my thanks for the help and affection by Attorney Lacie Landers and her daughter Lindy in Louisiana, and then Pat Peyton at her diner in Arkansas. I felt accomplishment in helping the police stop a rash of robberies there too.\n\nMy expression of thanks and my enthusiasm grew as I remembered the synchronicity of events leading me to Crystal and into country music in a way I couldn't have dreamed, and then how we extended the love we shared to her sister. I felt glad that I could provide some entertainment for so many people though my music and concerts, hoping that I might lighten the load of someone grieving in the way I had been for months.\n\nLastly, I thanked the cosmos for Summer - the wife of a long-time friend, and sometime, months from now, the mother of our child. I had left her bed only hours earlier, and in my mind I was sure, as she was, that we'd succeeded in our goal of insemination. Maybe this would be the child Karen and I would have had if she'd lived, manifesting in another way. Thank you Universe!\n\nI prayed, not for salvation or for some 'thing,' but for guidance and willingness to follow the path the Universe revealed to me each day. When I finished, darkness had fully enclosed the park and my campsite. Only my small fire lighted the surrounding area, one small light in the darkness. I hoped I gave a thousand fold as much light to the women I had encountered and loved along my travels. They were slowly transforming me.\n\nMy focus on the many things I had to be grateful for helped ease my continuing sorrow for Karen's loss and clear my befuddled mind sufficiently so I could sleep. I would deal with my questions at another time.\n\n* * * * *\n\nI emailed Pete Krakowski. In a day or so I expected to drop in on him on Mackinac Island - a small tourist island between the upper and lower peninsulas of Michigan.\n\nI took a pretty straight shot north, right up the middle of the Lower Michigan Peninsula, varying east or west slightly to stay off the Interstate highways. Gradually, the scene shifted from mostly industrial and residential, to more agricultural, and then to sections of dense forest. The further north I went, the narrower and less maintained the roads were. I felt as though I were fleeing civilization.\n\nI pulled into Mackinaw City about four o'clock. My only stops had been for gasoline and lunch. I found the Star Line Ferry, and booked a seat on the boat. The pretty clerk told me where I could safely leave my motorcycle and rent a locker for my gear. An hour later, on foot, I walked aboard the Joliet - a ferry resembling a sleek looking luxury yacht. I carried my saddlebags from the motorcycle that hooked together to make a passable backpack. About a hundred other passengers boarded with me. Exactly at five o'clock, the boat pulled away from the dock and soon skated across the lake leaving a high plumb of water behind the hydro-jet ferry. Not too far away, the Mackinaw Bridge spanned the water between Lake Michigan and Lake Huron connecting the two parts of the state. The ferry trip to Mackinac Island took only a few minutes.\n\nThe resort town on Mackinac Island is small, with most of the town within a short walk of the ferry dock. No automobiles or motorcycles are allowed on the island. I got my bearings and walked along the narrow pedestrian street to the Mackinac Inn and Spa. This was the place my friend Pete Krakowski managed and partly owned with his family.\n\nAt the front desk, a pert and efficient young woman informed me that Peter had reserved a top-of-the-line room for me. She also handed me a note in an envelope; I opened it and read: \"Welcome - Meet me in the bar at six. Dress code requires a jacket and tie - left them in your room. Ciao. Pete.\" I maneuvered up two floors and out to the end of one wing. The room was spectacular - a king-size bed, pleasant sitting area, and a view over the Main Street and harbor that seemed unparalleled. I felt well treated by my friend.\n\nPete had left a blue blazer and rep tie on the bed. I chuckled, because he assumed I had an adequate shirt. It was only because of Crystal and our entertaining that I did have a nice western-style shirt, although it had been well crushed in my backpack. A search of the room revealed an ironing board and iron; one problem solved. I had to assume blue jeans would be passable, along with my new western boots.\n\nI shaved, showered, dressed, and decided I looked natty as I checked myself in a large mirror on my way out the door. I did notice I'd started to look more like a raccoon from wearing my sunglasses so much in the sun; plus I had a helmet line across my forehead. On the other hand, I had a deep tan and more of a ruddy complexion than I'd had with the pasty tones left by the previous winter in New England and my desk job.\n\nI got noticed as I sauntered into the hotel bar. I'm not sure all the male heads turned in my direction, but I was certain that every female head did - teenager to a grand dame seated in the one chair in the room resembling a throne, her doting family around her. Several women smiled and nodded in my direction; I nodded back with a smile. I made a mental note to myself to dress this way more often.\n\nI heard a shout from behind the bar, \"Jim. Jim, down here. I saved a seat for you.\"\n\nPete came out from behind the bar, and we did the mandatory backslapping and shoulder buffs that old male friends do when they haven't seen each other for several years. Pete and I had been fraternity brothers together in Delta Tau Delta on the University of Delaware campus. \n\nPete explained he was tending the bar to make up for an unexpected absence of an employee. He ran down some of the stats about the Inn: ninety-six suites or rooms, full dining room doing three meals a day for near eight hundred meals a day, full service bar, pool, full spa, and about one hundred fifty employees - a mix of part-time and full-time. He explained about the short season from Memorial Day to the middle of October, just after the colorful foliage had fled the trees - it was then the whole island closed down. In the winter, a caretaker or two ensured security of the buildings; however, the only visitors were the intrepid snowmobilers that visited the island by coming across the frozen water.\n\nPete expressed his condolences again over Karen's death, and then we moved on to more pleasant topics. He had seen the issue of People magazine with Crystal and my picture on the cover, so that became a major topic of conversation. He saw several people in the large lounge keep looking in my direction; and thought that I'd been recognized as a celebrity. Personally, I didn't think people recognized me as a celebrity. I thought it was more that I stood out from the others with my deep tan and rugged appearance, and the mix of the jacket and tie with the boots and jeans.\n\nAs we talked, Pete offered me dinner at the bar. He joined me in a small steak and Caesar salad. Along with the wine, this proved to be the perfect dinner. Pete kept working the bar, but as the dinner hour passed, things slowed down, and we could talk with fewer interruptions. Many of the staff would rush in, toss a question at him, get an answer, and fly away. He seemed to know everything going on in the inn.\n\nDuring a lull in activity, I asked, \"Are you having fun?\"\n\nHe laughed and said, \"Hell, yes. I wouldn't trade what I'm doing for anything. This hits me right where I live - constant change, challenge every minute, problems calling for fast creative solutions, beautiful people from all walks of life - working here or as guests, an opportunity to improve my leadership skills, and good money. Now and then I even get to apply my skills as the resident psychologist when some interpersonal problem arises. The rest of the year, I teach at a small college down the peninsula, and do the planning and logistics to keep this place running.\"\n\nPete got me talking about my cross-country trip, where I'd been and where I might go in the remaining states. Eventually, we got around to women, and I allowed him to slowly pull from me some of the events and liaisons of the past couple of months. As a bachelor, Pete looked in amazement at me; \"You're my new idol, not because you can sing, but because you've laid about every woman from Vermont to Florida, and back up here to Michigan.\" He paused, with a grin, and added, \"Oh, wait! You haven't gotten laid in Michigan yet ... well, we'll have to see what we can do about that.\" We laughed and jested at each other for another hour or so.\n\nI yawned a few times as the evening slid by; apparently my posture also started to sag. I'd been up a good part of the night two nights ago making love with Summer and had risen early for my ride to the Island. Pete finally observed, \"Jim, you are falling asleep in your cups. Why don't you turn in? I'll be working the front desk tomorrow morning, so find me there. I'm about ready to close up here; if you haven't noticed, business falls off rapidly after nine o'clock.\"\n\nI nodded at his wisdom, and slid out of the bar, up to my room, and found the bed all too comfortable. I slept like a baby.\n\n* * * * *\n\nIn the morning, I woke up before most of the small town. I took a brisk walk, stopping by the pretty harbor and letting a small envelope of Karen's ashes empty into the waters of the lake. I meditated along the shore as the sun started to break above some of the trees in the distance. Sometimes, during or immediately after a meditation, I sensed messages left for me by the Universe ... or maybe Karen. Today, I got a couple of messages: exercise, be more open, offer help and friendship, and don't forget past friends. As I walked back to the hotel, I analyzed each 'message,' and thought about what it meant. I developed a 'to do' list based on my thoughts.\n\nAt the hotel, I found the exercise room. I did a workout, but again carefully stretched or compressed my left side where the bullet wound still healed. I did weights and Nautilus, a chance to really workout some of the specific muscles that had been dormant for a few weeks.\n\nI went back to the room, showered and dressed in casual clothes, and then set off to eat and find Pete. A pretty young waitress served me in the dining room. I could tell she recognized me, and finally she asked, \"Are you Jim Mellon ... the country singer?\"\n\nI shook my head, laughed, and said, \"People tell me I look like him all the time, especially since he appeared on the cover of People magazine.\"\n\n\"Oh!\" she exclaimed with a smile but a hint of disappointment in her voice. Her name tag said, 'Julia.' \n\nI said, \"Julia, let's have some fun. Don't tell anyone you think I'm that Jim guy, but you can call me by that name when no one else is around. OK? I think I might enjoy it too.\" I gave her a conspiratorial grin.\n\nShe managed a big smile: \"That'd be fun. I can pretend I'm waiting on the famous singer, and you really do look like him. I like to play games anyway so this'll be fun.\"\n\nI thought this could get interesting. She never asked for my real name, and I didn't volunteer.\n\nJulia went back to waitressing, but with a new friend - 'Jim.' After I'd eaten, I scribbled my name and room number on the chit along with a big tip. The message I'd received during my meditation that morning said to be 'open' so by giving Julia my room number I was be open and hopeful. I smiled to myself.\n\nPete was in the final stages of checking out a young couple with a four-year old. All seemed to go well, and I could hear the adults promising to come back next year about this time. In Pete's business, I knew repeat customers were important.\n\nPete saw me approaching the desk as the family left. \"Oh, man, am I glad to see you.\"\n\nI said hello, and raised a brow to respond to his statement.\n\nPete said, \"I've had a couple of no-shows by staff today, including my trainer. Do you think you could bluff your way through a day as a trainer and masseur? I'll pay you!\"\n\nI suggested he tell me a little more, and Pete launched into a crisp description of the duties. The trainer would coach an individual customer or family through some exercises and make suggestions for what they might continue later. The masseur gave massages that were booked by the front desk. There was a special massage room near the pool and spa, and some of the massages were given in a guest's room on a portable table that I'd have to lug up there and use, then fold up and return to the spa. \n\nI recalled in happy detail the massage I'd gotten at the spa near Kim's home in Florida. If I could replicate that for someone, I knew they would leave a happy customer. As for being a trainer, I still recalled the physical fitness regime I'd gone through as part of the Special Ops team for almost eight years. I warned Pete of my limitation beyond these experiences.\n\nPete said, \"Just make it up as you go along, and if you act as though you know what you're doing, no one will know you aren't the real McCoy.\" He waved a key under my nose, \"This is the key to the spa to use outside posted hours. You'll find the massage table down there, as well as some sport shorts and a collection of sneakers and shirts with the Inn's logo on them.\" He checked a separate ledger book, and came back to me, \"Your first appointment is at eleven; a couple needs a trainer. You also have appointments for massages at one, three, four, and five o'clock. Sometimes I get a request for an after-dinner session too. Check back with me later this afternoon about that time slot. You're a life saver.\"\n\nI found the spa, suited up in the official Inn training outfit, found the massage table, and some oils, and had time to think about what a trainer might do with a couple wanting to get in shape on a short vacation.\n\nNorm and Vilma Ketso came into the spa a few minutes before eleven. I rose and greeted them. We talked for a few minutes about their training goals and what they hoped might come out of my session with them. I had each of them do some squats, lunges, push-ups, tilts, and turns, to sense their agility and current state. Both were seriously overweight and out of shape.\n\nAn hour later, the Ketsos left the spa exercise room sweating profusely, and probably sore. Both commended my 'toughen up' attitude with each of them, and they promised they'd stick with the program I suggested for them after they left the island. The program followed some of the Army's basic training.\n\nPete and I had lunch together. Julia waited on us, and we gave each other knowing glances. Pete saw the subtle interaction and said, \"You've already had a piece of that haven't you?\" He sat back, as though in utter disgust. However, he was laughing at the possibility.\n\nI politely said, \"A gentlemen never tells, but in this case I assure you that your staff's virginity remains in tact - barely. I almost took her on the breakfast table this morning, but she worried what the other guests in the dining room might think of her.\" Pete smiled. I followed Julia's trim body towards the kitchen; she deserved special attention.\n\nWe went over my afternoon schedule. The four o'clock had cancelled while I'd been with the Ketsos. During our discussion, I learned that all my afternoon customers were women ... and, according to Pete, damn fine looking ones too. He'd also booked me for one evening massage in a guest's room. His final words to me were, \"Well, since you don't work here I can't fire you, but try to leave the reputation of the Inn unsullied as you slave away on those luscious female bodies all afternoon.\"\n\n* * * * *\n\nPam Saunders from Chicago was my one o'clock. She arrived in the spa, and my jaw dropped open - she was drop-dead gorgeous; about my age, she wore a short tennis skirt that accentuated her long shapely legs, and a matching top that snugly revealed significant breasts. I suggested she make herself comfortable in whatever she would like to wear while I worked on her, and then lay on the table. I told her I'd excuse myself for a few minutes while she undressed; I gave her two towels to use as a cover ups. I felt a surge of lust and resolved to control my emotion during her massage.\n\nI left the room to get the warm oils and lotion. When I came back Pam was lying on her stomach on the table with her head in a 'doughnut.' A small white towel had been delicately arranged over her butt, yet I could immediately tell that she was naked. Why had I ever gotten into computers when I could have been giving massages to women like this?",
        "I dimmed the lights, put on some soothing music, and said a few professional words about how I would proceed for the next fifty minutes. I started on Pam's feet, working scented oils carefully into each foot and toe, around her ankle, and lower leg, and further up her calves - confining my rubbing and kneading to below mid-thigh. Next, I changed ends, working on her shoulders, and then her back and lower back, spending significant time kneading each muscle group and the surrounding ligaments.\n\nPam squirmed occasionally on the massage table, her hips grinding into the sheet covering the table. I tried to ignore the potentially sexual nature of her writhing. I shifted to her spinal column and the back of her arms.\n\nAs I got near her hips, Pam reached back and pulled the towel away from her buttocks. God blessed a few women in the universe with fine asses; Pam's was one of them with a shapely and tight curvy set of cheeks. She said in a husky voice, \"Don't forget my ass and thighs. I'd like you to do me ... all over.\"\n\nI think I muttered some acknowledgement. I took more oil and used both hands to knead the slippery liquid into her cheeks, pulling each way, and pushing deep into her gluteus maximus. Pam moaned some more to express her pleasure. I extended to her upper thighs as well, feeling the tight muscles relax as I kneaded them.\n\nI suggested that she roll over so I could reach other muscles and parts of her body. I offered her the towel, but she rejected the tender. I kept silently repeating to myself, \"I am a professional. I will not step out of bounds.\" Pam rolled over, her bare pussy fully exposed to my feasting eyes. She watched me take in her nakedness and smiled up at me. We maintained eye contact for several extra seconds, and in that time I knew we'd have a fun fuck in the very near future.\n\nI did Pam's scalp, face, and neck, carefully massaging various muscles as I worked my way over her upper body. I did both arms, focusing on each hand right down to her fingertips. Next, I worked on the front of her legs from high-thigh to each foot. \n\nPam said softly, \"You've forgotten the middle - don't miss anywhere.\"\n\nI repeated my silent mantra about being a professional as I got more oil. I dribbled some oil from my hands onto Pam's flat stomach. I got a smile, although her eyes remained shut. I worked from just below her breasts to just above her pubes, doing the sides and hips as I moved around her body.\n\nPam said, \"You've forgotten my breasts and ... my pussy. Please.\" Her voice had a pleading tone to it. \n\nI dribbled warm oil over her two luscious breasts. As I started to rub the oil into her skin, I noted the large areolas and the rising nipples on each mound. I wondered if Pam had an augmentation, and decided she hadn't because I couldn't detect any scars or marks of surgery. The more I massaged, the more Pam writhed and hummed in happiness.\n\nAfter a few minutes, I felt her hand reach out and grab my inflated cock through the thin athletic slacks the inn had provided. I nearly exploded, but resisted that urge. Pam said, \"Now, you've saved the best for last ... my hot pussy.\"\n\nI asked, \"Are you sure?\"\n\nPam's eyes opened and engaged mine, \"Oh, most definitely yes. I want the full treatment.\" She started to masturbate me through my nylon pants. I hardened in response to her touch, and that only seemed to encourage her.\n\nWith a copious supply of oil, I rubbed her pubes. Pam spread her legs far apart, giving me complete access to her nether region. I rubbed oil into all the places I'd missed. I didn't want to move; lest I change the way she could reach my cock. With one hand I massaged the oil into her labial lips, often running my finger through the entire slit in a way I knew would touch her clitoris. When I did that, Pam would jerk and moan. I thought she might have had a small orgasm at one point, but couldn't be sure.\n\nPam made eye contact with me in the dim light and said in a happy but slurred voice, \"I want you to ... to massage my G-spot. I assume you know how to do that.\"\n\nI thrust two fingers into her cunt, getting an immediate moan for my efforts. Pam's midsection rose to meet my fingers as I started to massage her inner body. I rapidly oscillated them in and out of her pussy before I focused on finding the place inside her where she practically floated off the table. Again, I thought Pam had a small spasm.\n\nPam muttered, \"Eat me. I want a cunny attack by your tongue.\" After a pause, she added, \"Your hands and fingers are wonderful too.\"\n\nI used a damp washcloth to warm the area and wipe some of the oil away before I ran my tongue into her again; I knew the lotions would have ruined her natural taste. I stroked down her body with both hands, and moved so I knelt between her legs. I put one leg over each shoulder, lapped at her cunt, and tasted her for the first time. My fingers kept working on the subtle spot inside her that she reacted most too. A few minutes later, I could feel her vaginal muscles spasm around my entrenched fingers; she came again. \n\nShe spoke again in a sexy voice, \"Why don't you get undressed. I want an internal massage with this.\" By 'this' she meant my erection that she'd managed to work up to full strength.\n\nI said something dumb like, \"That's sort of outside the policy of the establishment.\"\n\nPam chuckled and said, \"Well, fuck the policy, fuck the establishment, and fuck me - now get busy up here with that beautiful shaft. I want to see it and suck on you.\"\n\nSeconds later, I had complied with her wish. She had a marvelously adept mouth and throat, taking me completely inside. I almost came, but resisted. After a few seconds, Pam asked for me to put what I had inside her cunt; I did.\n\nWe had a long lovely fuck: soft music playing, the aromas of the various oils filling the air - now mixed with the sexual odors of our juices and bodies. I maneuvered around, pretending to myself that I was merely continuing the massage with another part of my body in another part of hers. Pam moaned a lot. I kept massaging her, only now emphasizing her breasts and other erogenous zones.\n\nAfter a while, I lifted Pam. She held onto my neck, her legs around me, and her large breasts pushed into my chest. I bounced her on my cock, as we stood in the massage room. Next, I had her stand and lean against the table as I pounded into her from the rear. After that, I lay on the table, and Pam mounted me, taking pleasure from delivering to my mouth each of her breasts. I ignored the taste of the flavored oils and sucked hard on her nipples. \n\nWe changed positions a few more times; I was glad I didn't have an immediate appointment after Pam's time slot as we were running over her allotted time. \n\n\"How should I end?\" I asked. I stood holding Pam's hips, pulling her onto my cock, as she reclined on the massage table.\n\n\"Deep inside. I'm on the pill ... and I want something to remember you by for the rest of the day.\" I could tell by the tone of her gasped words she was near.\n\nFrom deep within me, I could feel the telltale microscopic spasms starting to signal my own release if I allowed. I warned Pam, \"Well, here it comes, you beautiful woman.\" I leaned in, and we kissed again; her erect nipples raked across my chest again. In the next few seconds, I swear I could have plotted the journey through my body the semen took - the spasms inside my testes, the explosion through my vas deferens as my juices flowed through my body collecting the heavier seminal fluid, and then the race through my prostate and my penis into Pam's gorgeous cunt.\n\nI jetted shot after shot of my fluid deep into Pam. She lay back on the table as her own climax arrived - a long loud wail of pleasure escaping from her throat. We were joined in the paroxysm of bliss for those few seconds. Nothing else in the universe existed; there were only the two of us - joined in this act of union and communion.\n\nAs both our spasms ceased; we kissed again. Pam said, \"Oh, wow! THAT was the best massage I've ever had.\" She paused and added, \"And, THAT was the best fuck I've ever had too. You are fabulous!\" She pulled me to her, and we kissed some more.\n\nI delicately disengaged, and kissed her. I said with a touch of humor, \"Well, Ms. Saunders, you're a good lay yourself.\" I kissed her again. We laughed in humorous relief at our own intense feelings. \n\nI said, \"I suggest you shower. There's a private shower through that door ... and I'll join you, if you don't mind.\" She sat up fully, we kissed some more, and then the two of us walked across the room to the shower. She looked so great without any clothes on.\n\nPam disappeared after our shower. She slipped on a robe and walked through the inn carrying the rest of her clothes. I thought she had that 'just fucked' looked, but then so did I.\n\n* * * * *\n\nMy three o'clock appointment was with Tina Devoe, a studious looking but shapely dirty blonde about fifty years old. She wore those dark frame rectangular eyeglasses, carefully styled to give a sexy appearance to her eyes. Tina spoke with an English accent, and as I did my introductory spiel, I learned she was from a small town outside Manchester and that she'd recently moved to the United States, although she was a little vague as to why. This weekend trip with a friend was her first 'time off' since she'd started working in the U.S. a year earlier.\n\nI left the room, ostensibly to get the oils and lotions I'd need for the massage, but actually to give a few minutes of 'private time' while the man or woman prepared themselves for the massage. When I returned to the room, Tina was naked, sitting on the table waiting for me. The modesty towel I'd left for her sat unused at the end of the bed. \n\nI got aroused instantly although I struggled to forget her nakedness - and how sexy and fuckable she looked. I reminded myself that I'd just had an unforgettable fuck with Pam, but that didn't seem to help.\n\nI got into the massage of Tina, repeating the steps and actions that I'd found pleasure from in massages I'd had and what I'd just done with Pam. I worked carefully and professionally over Tina's lily-white skin. Soon, she too started to moan and writhe around on the table although I'd done nothing sexually overt to her.\n\nWhen Tina rolled over for me to do her front side, there was no pretext by her about the massage. She wanted me. Before I even reached for the oils, she directed me to eat her pussy. \"I want a tongue massage ... down there;\" she pointed at her widespread pussy, the pink lips of her labia and the dark hole of her vagina inviting my attention. \"... and up here on my breasts.\"\n\nI did what I'd been directed to do, and Tina writhed into my every move with some moves of her own. Soon, I was naked - again. And, soon too, my cock was embedded deep into Tina's tight pussy. \n\nI applied all the Tantric techniques Kim had taught me weeks earlier, plus generated a few of my own that seemed to bring pleasure to the two of us. I thought of the quote from Anais Nin's diary, \"What everyone forgets is that passion is not merely a heightened sensual fusion, but a way of life that produces, as in the mystics, an ecstatic awareness of the whole of life.\" Our senses raised, our whispered words inspiring the erotic nature of the other, and our organs grinding together in joy and happiness.\n\nSeveral orgasms later, I ejaculated the conclusion to our time together deep into Tina's cunt. She in turn flooded the two of us with her girl juice. \n\nWe showered together, and Tina left as Pam had: nary a care in the world, naked beneath her short hotel robe, and carrying the few other clothes she'd arrived with. She allowed as how she wished she could sign up the following day but that she had to leave and travel back to her job in California. I would miss a repeat performance with her.\n\n* * * * *\n\nDaisy Wheaton came into the spa at five o'clock. She'd already been in the sauna for a stint, so had a rosy appearance to her skin. When I touched her, I could feel the heat radiating from her skin. Daisy had never had a massage before though she looked older than I was. She said a friend she'd met at the Inn had insisted and paid for her experience. Because she was new to all this, I took extra time to explain the protocols and steps I'd go through. She listened with rapt attention, and when I was done she appeared eager to proceed. \n\nI left to 'get the oils and lotions' while Daisy prepared herself as I'd suggested. When I came back she was face down on the table, still clad in her thong with the towel over her derriere. I initially sensed some relief that I wouldn't have to 'perform' sexually as I had with Pam and Tina. I'd treat the thong like a chastity belt.\n\nInstead, however, my magic touch again produced a horny woman who wouldn't take no for an answer. We started fucking only about ten minutes into the massage session. Daisy explained that I had touched her in all the 'right' places, and that was all it took. We went another hour before I enjoyed my own climax. Daisy had about a dozen orgasms in that time, and I set a record for the longest time I'd eaten pussy.\n\nAfter our showers, Daisy dressed and left. I went to find Pete where he was tending the bar. I wanted some soothing wine to come to grips with what had happened that afternoon. As I entered the lounge area, I saw Pete light up with a smile when he saw me. He gestured me over, and by the time I got to the bar he tended he had a Chardonnay on ice waiting for me.\n\nBefore I could say anything, Pete spoke, \"I don't know what you did to our massage clients this afternoon, but they were all raving about you. The two that will still be here signed up again - but only if you are the masseur. I assume from their requests that things went well with each of them.\"\n\nI just sort of nodded. Pete suddenly got that look of sudden realization - the eyes widen, the head moves back slightly, and the mouth opens into more of a gape. He stared at me, and then spoke again, \"Oh, shit. Jim, you had sex with one of them.\" He watched my reaction before he added, \"Two of them ... oh, fuck; you had sex with ALL of them?\" His words were as much a statement as a question.\n\nI just nodded with a slight smile of contentment as I sipped my wine and looked out across the bar to the dining room. I didn't regret anything either; I wondered if I should have some reservations about fucking three women I didn't know. Well, I knew them pretty well now. The experience with each of them had been pleasant, just not rewarding on any level other than the satisfaction of mutual lust. If I'd started the afternoon horny, I surely wasn't now.\n\nI recalled my visit to Pennsylvania. Hadn't I had sexual relations with June, Jan, and Trish, although I hadn't known two of them before my visit? Trish I barely knew from her marriage to my friend Bob. Was this afternoon with Pam, Tina, and Daisy so different? This would be something to think about later.\n\nPete stammered and stuttered, trying to get a few words out. I guess he was amazed as much as horrified in some way that I'd screwed some of his inn's guests.\n\nFinally, Pete got his wits about him. \"Do you know who those women are?\" The question had a certain punch to it, so I knew they weren't just casual guests.\n\n\"No, please tell me.\"\n\nPete said, \"Tina Devoe is some big wheel in Sony Music from the west coast - LA. Daisy Wheaton is a socialite from Gross Point; she has more money than God, supports aspiring artists including many names you'd know, and is a big wheel in a couple of national charities. Your first appointment was Pam Saunders - she's the CEO of an outfit that now goes by CCC - it used to be the Chicago Consulting Company, but as they grew they changed to just the initials; they're big in media and marketing - billion dollar big. She and Tina probably know each other.\" He thought for a minute and added, \"In fact, all three of them probably travel in the same circle - important women having a high impact on the world.\"\n\nAfter another pause, Pete said, \"I sure hope you're going to be around tomorrow. We do like to please our customers. I'm jealous as all hell, but you apparently made three women very happy - and I don't know how you did it. Mr. Stamina, that's what I'll call you from now on.\"\n\nJust then, I saw Tina coming towards me in the mirror behind the bar. She could have won the Best Dressed In The Country award at that moment; she was beautiful. She'd intentionally come out of her way from the dining room to talk to me. When she arrived she ran one finger across my back and neck in a sexy way. I saw Pete gape. I turned and got a thousand watt smile and a brief kiss. She said, \"I just wanted to thank you for the beautiful ... massage ... this afternoon. I hate to leave, so I'll miss another session tomorrow - a great deal; maybe we could book a special session when you're in my neighborhood.\" She looked hopeful.\n\nThe next words from her shocked me; \"Meanwhile, here's my business card. Call me,\" she smiled and added, \"Or have your agent call me - Terry Ross, isn't it? We'd like to do a record deal with you ... and Crystal too. I got good reports about what the two of you did in concert in Louisville and Indianapolis. Nashville Records is good, but we can do better up at the corporate level with you two. We can build on what you've done in ways you wouldn't believe.\" As an afterthought she added, \"And, we can be very generous.\"\n\nI nodded numbly and smiled back. She'd never given any indication that she'd recognized me - or knew of my new celebrity identity. \n\nI said a few words acknowledging her request, we kissed again - this time with a little tongue, and she sashayed away with an extra wiggle in her walk. Pete just stared between the departing high-class ass in tight designer jeans and high heels, and me. Tina knew how to flaunt it.\n\nI looked at Pete with an obvious question on my face. He said, \"I didn't tell her.\" He held up a hand as though taking an oath, \"I swear.\" I knew he was telling the truth. Tina knew her celebrities.\n\nPete and I settled down to drink a little, and have dinner served at the bar while he worked. About eight-thirty he leapt up and said, \"Oh, shit. We almost forgot your evening massage appointment. It's complementary, 'on the house' so to speak. You've already met her, so it won't be that much of a surprise. I owe her, and this is what she asked for this evening.\"\n\nI looked at Pete waiting for him to reveal the name. He grinned back, and clearly would not tell me a thing more, except it was at nine o'clock in Room 443. I wondered a little, since this was on the top floor, and I'd learned some of the staff had rooms up there.\n\nA half hour later, I knocked on the door of room 443, my trusty massage table beside me. To my surprise, Julia, my cute waitress from the past couple of days, opened the door. She wore cutoffs that showed off her long sexy legs, and a white shirt tied off in a revealing manner beneath her bare breasts. I got a smile. She said in a sexy voice, \"Oh, Jim Mellon, the answer to my dreams. Please come in.\"\n\nI wasn't quite sure how to proceed, but I brought the table into her room and leaned it against the wall. \"Julia, this is a surprise. Pete said you had complementary massage coming.\" I started by playing it straight.\n\nJulia came up close, inside my personal space. She put both arms around my neck, and leaned up and kissed me on the lips. I automatically held her hips and kissed back. She said, \"I've always wanted a massage from a celebrity; so this was a rare opportunity. I mortgaged my soul to Peter for this hour, and he's a good guy so I might even let him collect.\" She gave me a sly look.\n\nI could tell she had no doubt about my real identity. We weren't game playing about my celebrity status any further. I wondered whether everyone on this small island knew I was hanging out up here - out of the limelight. I asked how she knew.",
        "Julia smiled and said, \"I'm a big fan of country music and People magazine.\" She kissed me again and then backed away. \"I studied the photos in the magazine after I met you at breakfast, and I did some homework about what the entertainment websites said might be your next destination. Northern Michigan seemed an obvious conclusion, although nothing I read said that.\"\n\nI set up the table in the room's open space as I gave Julia the same spiel about how to prepare for the massage. She just stood there barefoot and slowly started to untie her shirt with very deliberate moves, each move revealing more and more of her buxom body. I turned on the bedside radio to some dreamy music, and dimmed the room's lights. When I turned back to focus on Julia, she was nude. She came up to me and kissed me again; I kissed back. I had an idea where this evening would end up.\n\nI did give a credible massage before we made love, but then Julia was massaging parts of my body too. Julia had the enthusiasm of youth on her side. I was driven by curiosity about what she'd be like.\n\nAfter we had sex, we lay on Julia's bed panting after our sexual exertions. She said, \"Thank you, Jim Mellon. I can go to my grave knowing that the best fuck in my life also came from someone famous. I don't know how you know what you know about women, but ... well, you should patent that stuff - all those techniques. Every single move you make turned me on, lifted me higher, and sent me to some other universe where the only important thing seemed to be how long I could make my orgasm last, and boy did you know how to make them last. Every woman in the country will want to get fucked by you.\"\n\nI must have looked pained from her remarks, because she continued, \"Oh, Jim. Don't worry, I won't blow your cover or talk to the tabloids. I did tell Pete I knew about you being a celeb. I have my own aspirations to get into the movie industry, so maybe I'll join you someday. If you can ever point me in that direction I'd appreciate it, but no obligation.\" She squirmed a little beneath me to heighten the effect of our still joined genitals. She rolled her eyes in physical happiness.\n\nAs our breath came back, our hands started to fondle and pet our exposed erogenous zones. Julia said, \"I asked Pete why you'd ended up here - at the Inn - being a substitute trainer and masseur. He said you'd tell me more than the People magazine article did.\"\n\nAnd so I did. We lay there, and I gave Julia the fifteen-minute version of my life story and the road trip. An hour later, we had sex again. I surprised myself being able to respond a fifth time in the same day; however, Julia was young, vibrant, and luscious, and she knew which of my buttons to push to get me going again. Some of the buttons involved the talented use of her mouth. After we finished round two, we went to sleep with Julia happily cradled in my arms. She purred.\n\n* * * * *\n\nSunday was similar to the day before. Somehow, I'd restored my sexual prowess and gotten horny again overnight. Pam and Daisy showed up for their extended afternoon appointments with large smiles and high expectations for an erotic two hours. In their comments, I learned they knew each other and Tina as well; the day before, Pam had told the other two about her fabulous fuck, and then I was really in demand. One other woman came in for a 'straight' massage.\n\nJulia had made a date with me for the evening, knowing as she did that I'd have had at least two fucks earlier in the day. I did not disappoint any of them. That day, I took time to learn a little more from each woman about how they liked to be treated in their love making: rough, loud, tender, oral, kinky, sex stories, dirty talk, fantasies, and more. I drew out of each woman her preferences. We had fun - and I learned a few things to try in the future on other women: places to touch, the right pressure to use, whether to hold or rub, and whether to use fingers, hand, or tongue.\n\nPam and Daisy left Monday morning, but not before finding me to say goodbye in some intimate way. Each gave me their business card, asked that I look them up in their hometown, and gave me a conspiratorial wink. Clearly, they both knew my celebrity status, and that being a masseur was not my real profession. Now, I really worried about the tabloids. I had to stop screwing every woman I met ... didn't I?\n\nJulia brought me to a complete stop that evening with a simple question: \"Did you like fucking my mother as much as me?\"\n\n\"Huh?\" My jaw must have been hanging down to the floor.\n\nJulia looked surprised. \"Oh, I thought she told you. Daisy Wheaton is my mother. We're pretty open with each other, so I knew you'd given her the best fuck of her life before we got together that first night. You came with high recommendations, including rave reviews from her friends Tina and Pam.\"\n\nBefore I could stop myself, I blurted out, \"Pete said your mother was loaded. What are you doing working here?\"\n\nJulia snorted, \"My Mom and Dad are teaching me the value of work and money, or so they think. I have to make it on my own before they'll help.\" She paused and added, \"I've been a bit of a leech up until this summer. I don't think they liked the direction I'd been headed.\"\n\nI just nodded.\n\nJulia continued, \"I moved out after last summer - well, my parents sort of forced me out on my own. I had a girlfriend in Montana, so went to live with her. I worked over the winter at a ski slope near Helena and did a little waitressing nearby, and then landed this job for the summer. I'd been here as a guest years ago. I guess I'm shaping up in Mom's eyes; this trip we felt closer to each other than since I turned fourteen, and even started sharing some of our intimate encounters with each other.\"\n\nOh, my God, I'd found another mother-daughter pairing who I'd made love to. Did I have some kind of a sign painted on my forehead that drew these people to me? True, they were both outstanding women and a pleasure to make love with, but I didn't expect any behind the scenes relationships.\n\nMy fourth day on the island, I played the tourist, prowling through each shop, taking a hundred photos, and mailing a few postcards to friends and loved ones including some of the women I'd met along my road trip. As I sat at the bar Monday night having a drink with Pete, Julia came by after the dining room closed. She gave me a little smile to indicate she wanted my amorous attention yet again. I nodded, and we set a time for her to come to my room in an hour.\n\n* * * * *\n\nTuesday morning, Julia had me autograph each of her breasts with a Sharpie before she dressed in the morning - Jim on her right breast, just below the nipple, and Mellon on the left. \"I want it to last more than a few hours,\" she explained regarding the indelible Sharpie. She also had me take a picture of my handiwork with her cell phone. I wondered whom she'd share it with. She again promised not to talk to the tabloids. Just to be sure, I had scribbled my signature.\n\nJulia also kissed me goodbye in a passionate way, but with tears in her eyes. She told me, \"Jim Mellon, I hope our paths cross again. You are easy to fall for, and I'd hate to think I wasted all the psychic energy I've spent on you the past few days. I want you as a long-time friend ... and fuck-buddy.\" She tucked her regular, off-island address and cell phone number in my pocket. After a kiss, she left for her waitress job in the Inn's dining room. I put her data on my phone before I lost the piece of paper.\n\nPete and I lingered over a cup of coffee out on the veranda of the Inn. The horse drawn carriages were already out on the streets carting the tourists around the small island. I thought the place was picturesque enough to come back to someday, maybe even on a honeymoon. Pete thought I should come back and bring all the women I felt an attraction for at one time - he wanted to see the resulting orgy and volunteered to help orchestrate things.\n\nPete helped me carry my gear down to the ferry dock. I boarded the ferry for the mainland, and soon waved goodbye to him across a widening gap between boat and shore. As I waved, Julia came running down to the dock to join Pete in waving goodbye. The two of them stood there looking happy together. The last I saw of them that day was the two of them walking back to the Inn with their arms around each other. Now that was an unexpected ending; something was going on there I hadn't been privy to. I wondered why Pete orchestrated my time with Julia if the two of them had something going on between them: more questions without answers.\n\nI retrieved my motorcycle and the rest of my gear from my locker, repacked things for traveling, and headed across the Mackinaw Bridge to Upper Michigan - the longest suspension bridge in the Western hemisphere. The day was warm and sunny, traffic was light, the Universe felt friendly, and I was happy. \n\nChapter 13\n\nWisconsin\n\nIn late morning, I crossed the Mackinaw Bridge and hugged the shore of Lake Michigan for the rest of the day. With the late start after my midnight escapades on Mackinac Island with Julia, a stop for lunch, and my resolution to take it slow and enjoy the scenery; I got only part way across the Upper Peninsula. \n\nI camped overnight at a state forest. The temperature dropped to around fifty degrees. My sleeping bag did its magic in keeping me at just the right temperature; but getting up in the morning proved to be an onerous chore. I didn't bounce out of bed the way I did on warmer days. I'd become soft in the middle.\n\nJust after dawn, I took a long slow run for an hour along trails through the forest; that warmed me up. I got in a meditative trance while running. Due to my gunshot, this was my first long run in many weeks. Back at the campsite, I built a fire, and did some other exercises, trying not stress my left side. I prepared some breakfast from my collection of freeze-dried food, and dressed warmly when the time came to start riding on the motorcycle.\n\nI started to sing my widening repertoire of country songs for which I knew all the words. I sang into the facemask of my helmet, so I could actually hear myself over the rush of the wind and the rumbling sound of the Harley Davidson. I liked the whole idea of being a country music singer. The entertainment industry had always fascinated me, and now I had an open door. I wondered if I'd been led to this door by some unusual force in the universe, and maybe by an angel named Karen.\n\nI tested how important finishing my ride across the forty-eight lower states was to me, and decided I still needed to complete the trip. This trip would give me closure about Karen's death and allow me to have accomplished something 'big' in my life, not that the sudden stardom wasn't also big. Here was this country music career that I could ride for a while. Maybe I would try to do more music or concerts during my trip; despite my fear of singing in front of a large audience, I did have fun singing with Crystal.\n\nI got to Green Bay about four o'clock in the afternoon, just as the sun broke out and the temperature started to rise again. The most obvious attribute of the city was their unrivaled support of their NFL football team. Green and yellow banners were everywhere along my route with the 'G' logo of the team. I rode by Lambeau Field stadium, just so I could say I'd seen it. Later in my stop in Green Bay, I learned that the stadium held about 60,000 people - this in a city with a population of about 100,000. I guessed they had a lot of visitors for home games. The number of motels around suggested that as well.\n\nAfter a stop to get directions on my iPhone, I found Lloyd's Guitars where I splurged and became the owner of a used Blackbird Rider steel string travel guitar, case, extras, and a 'how to' book. The travel guitar was a fraction of the size of a regular acoustic guitar with a shortened neck and a much smaller body - a carefully crafted sound box to render close to normal guitar sounds but with a fraction of the size. I had big plans for the next phase of my country music career. I wanted to be able to play the guitar the way Crystal did.\n\nI chose an early dinner at a restaurant that had Wi-Fi. After ordering, I used my laptop to check my emails. One email from Kim Hume stood out above all the rest and made my heart soar.\n\n<blockquote>To: JBM38@kenseltelcom.net \n\nFrom: KHume@tsi.com\n\nSubject: Want to see you\n\nSent from my iPhone\n\nHardly a minute goes by that I haven't thought of you since you left, particularly with your new career in country music. I'm so proud of you.\n\nI have this weekend free, and I am hoping that you'll have some time for me, and will be some place where we can see each other. Wherever you are, I can fly to you Friday afternoon but have to leave early Monday. Where are you? Ron gives his blessing to my trip and says hello; he has to be in Washington over the weekend. \n\nCall me if this works for you. Leave message if I don't answer. I'm in meetings all day.\n\nI Love You,\n\nKim</blockquote>\n\nI couldn't get my cell phone out of my pocket fast enough. My call to Kim went into voicemail, but I left an enthusiastic message for her to fly to Milwaukee, and that I'd meet her there if she gave me details about her arrival.\n\nJust before I got on my bike, my cell phone vibrated indicating I had another email. I read the screen and my heart started to beat a lot faster.\n\n<blockquote>To: JBM38@kenseltelcom.net \n\nFrom: KHume@tsi.com\n\nSubject: Want to see you\n\nSent from my iPhone\n\nGot your voice mail. I am in a meeting that looks as though it will never end - strategic planning for my company so I have to be here ... probably will go until ten tonight.\n\nBUT, I am so excited I can hardly stand still because we can see each other tomorrow. Just hearing your voice made me wet! You know what that means.\n\nI will be at the general aviation side of the Milwaukee airport about 4:30 p.m. I'll have the jet, so you can watch me land if you're there. If OK with you, I'll arrange downtown hotel - I have plans for us!\n\nDid I mention how excited I am to see you again!!\n\nI Love You A Lot!\n\nKim</blockquote>\n\nNow, that's the kind of email that makes a guy feel all warm and mushy inside, and that's exactly how I felt. I broke into a big smile. I wanted to tell someone how happy I felt, but there was no one around.\n\nAfter my early dinner, I rode southwest out of Green Bay for an hour to the shore of Lake Winnebago. In the camping area, I avoided the RV sites and hunted for a remote spot that was picturesque and quiet. The campsite I settled on after riding around in the dusk appeared to be near a snowmobile trail and away from the roads and parking areas. The wooded site had a small clearing with a picnic table and sat about two hundred feet from the lake. A half-dozen ice fishing huts also had been stowed nearby for when they could be towed out on the frozen lake. This time of year the place was not on the normal trail system for the park; I expected no one would find me there.\n\nI set up my tent, built a fire in a fire pit and enjoyed the warmth as the temperatures dropped. As the sunset, I took an envelope of Karen's ashes down to the lakeshore. A breeze from behind me carried the ashes into the lake where they became lost in the sparkling ripples. I sat and meditated by the lake, looking at the pink clouds reflected in the lake. The ripples soon hypnotized me and carried me to a place of thoughtless peace. The inner stillness remained until the color in the clouds disappeared and night really began to fall. \n\nSunset came early by the clock in Wisconsin - seven thirty; the state is on the eastern edge of the central time zone. The night before when I'd been only a short distance to the east in another time zone, I had an eight-thirty sunset. I tinkered with my new guitar a little to get used to the feel and how it tuned. Later, I stoked the fire and then lay abed listening to the wind in the trees and watching the clouds slide across a sky lit by a rising gibbous moon.\n\n* * * * *\n\nI lay in a state of half-sleep in a new state I'd never been in before. Until I'd heard from Kim I thought the likelihood of my having sex in Wisconsin approached zero. Now, I was horny again - horny for her - and filled with feelings of love for her. I had all these questions and confusions I wanted to talk to her about. Kim would know how to think about these things.\n\nMy mind flitted to June - Kim's sister, and that line of thinking led me to my sister. Maybe because I was having sexual thoughts about Kim, when Anna came to mind, it was in an erotic way. \n\nI recalled a summer trip when I'd been home from college and Anna had just finished high school. Anna pleaded with me to drive her to the beach. The day was one of those sparkling summer days, warm and without a cloud in the sky. I caved in to my reluctance about spending the day with my sister. She made us a picnic lunch, and made sure we had drinks, a blanket, and even a portable radio. I borrowed mom's car, and we headed off to Plum Island Beach.\n\nTo my surprise, Anna behaved as though she were on a date with me. We held hands, and she even cuddled up to me on our beach blanket. I felt puzzled by what was going on, but she seemed certain of her actions so I let things ride and enjoyed her closeness. \n\nAnna wore a two-piece bathing suit that I'm sure mom wouldn't have approved of if she'd seen her in it. Anna had a nice body - very nice; so nice that a few times during the day I had to roll over on my stomach to hide my arousal. I'm sure Anna saw my lump a few times, but I only caught her smiling at the bulge in my swimsuit once.\n\nIn close and intimate conversation with our heads close together, Anna got me talking about the future, and how I thought about a thousand different things: dating, love, sex, family, God, hobbies, my career, what we'd be like as adults, what our relationship as brother and sister would be like in the future, and life in general. The conversation wasn't one sided. I asked questions of Anna too, and she gave me frank and honest answers. In hindsight, I realized that in that one afternoon we got closer to each other than we'd ever been in our lives. Except for a few brief visits, we'd been physically apart for years from the time I left for college up to Karen's final illness and death, but we'd never been far apart in our understanding and love for each other. Looking back, I couldn't imagine what our lives would have been like without that day together on the beach.\n\nAt the end of the afternoon, Anna cuddled even closer and put her head on my shoulder for a long time. I wrapped my arm around her and held her close, very conscious of her breasts pushing against me. She looked up at me, gave me a tender kiss, and whispered, \"Jim, I will always love you - will always be in love with you. Never forget that. I know we're not supposed to have these feelings and talk about it like this, but I mean it - forever and ever, I love you.\" She gave me a hug, and then we separated, packed up our beach gear, and went home. \n\nI wanted to make love to my sister that afternoon on the crowded beach. I could tell by her looks she wanted me. We repressed those feelings, those looks, and our touches after that, particularly when our parents were around. \n\nI fell asleep with erotic dreams divided between Crystal, Ellen, Kim, and Anna.\n\n* * * * *\n\nFirst thing in the morning, I took a long, hard run shortly after sunrise. I pushed myself harder than I had since I'd been shot, testing the entry and exit wounds to see whether they could take the stress of an hour's worth of eight-minute miles. I could feel how out of shape I'd gotten aerobically. I did some exercises near my tent, and this time I really tested the wounds since I did about a hundred sit-ups that used many of the muscles the bullet had ripped through. As I cooled down, I did a careful analysis of what I felt near the wounds, even probing the wound sites with my fingers. I didn't have a single twinge. ",
        "The sunny morning was a complete change from a few days earlier; the temperature had already reached the mid-seventies and promised to go into the eighties in the afternoon. I went down to the lake for a quick bath before I suited up for the next leg of my trip. The lake water was chilly, so my ablutions were short and to the point - get wet, soap up, and rinse fast. I also washed out my running shorts, ankle socks, and singlet. Since no one was around this part of the park, I bathed in the nude, only wrapping a towel around me to head back to camp carrying my damp exercise clothes so I could dry them by my morning campfire. \n\nAs I walked up the wooded bank and neared my camp, I heard voices and a laugh - a man and a woman. I stopped and listened, however, they didn't seem to be moving. They were in the clearing where my tent was pitched, and where my motorcycle stood. \n\nIn another fifty feet, I could see the couple through the brush. I paused. They stood face to face near the clearing's picnic table, oblivious to my active camp fifty feet from them. The couple was in their thirties; they were trim and tanned, but dressed in what I'd come to call business casual attire. As I watched to see what they would do, the couple started to make out. There was a lot of pent up passion each of them showed for the other - raw, sexual lust and energy.\n\nI froze, wondering whether to announce my arrival someway. In the few seconds while I pondered what to do, the man lifted the girl's summer dress from her body in one smooth move. She cooperated fully, raising her arms over her head with a smile. Her beautiful full breasts emerged into view; she hadn't been wearing a bra. Even from my distance, I could see the ripeness of her globes, the dark areolas, and the pointed and excited nipples. The man instantly leaned in and suckled her nearest tit. She held his head and spoke words of encouragement, as her head looked skyward in enjoyment of his attentions.\n\nMaking normal walking sounds - twigs snapping and leaves rustling, I continued on the path another twenty feet or so taking small steps to give warning, until I could be clearly seen at the edge of the clearing with no intervening foliage. I stood still again, but shuffled my feet. I really couldn't get to my tent - and my dry clothes - without walking within ten feet of the amorous couple.\n\nThe man sucked and lapped at both breasts like a starving man finding food. I could hear the sucking noises he made, and her moans of delight. Although it appeared awkward, the girl started to unbutton the man's shirt. At one point, he broke lock on her breasts and rapidly pulled the shirt off, tossing it on the bench seat of the picnic table next to them. She fumbled with his belt, and in seconds, after kicking off his loafers, his pants, and boxers had joined the pile of clothes. His erect cock bounced proudly in front of him.\n\nI silently chuckled to myself. I had come so close to them I was sure that when I got spotted one of them would shriek in surprise, and there'd be a frantic scramble to cover improperly displayed body parts. I hoped neither of them opted for violence or called the police.\n\nThat thought had no sooner left my mind than the naked man slowly pulled the girl's white thong down her long and shapely legs with her obvious willingness, leaving her nude except for three-inch spike heels - incongruous here in the woods. He lapped at her cunt for a few seconds before he stood. He then fingered her cleft as they kissed again - lips and tongues rapidly moving in and around each other's mouths. She moaned so loud; I could hear clearly. \n\nThe pretty brunette dropped to her knees - even spreading her legs apart in her kneeling position so her pussy was in full view. She pulled his inflating cock to her. Holding him with one hand, she inhaled his swollen member, and her head started bobbing back and forth as she fellated him - using her hand to masturbate him when he was mostly out of her mouth. The man instantly closed his eyes and looked to heaven as he savored the experience. \n\nNow, I stood transfixed by the scene in front of me. My towel had tented from my own erection at the eroticism of the lusty couple. I reached through the fold in the towel at my front and touched myself, not to masturbate but to protect my penis from a roughness on an edge of my towel. I remember thinking I'd have to jack off after the couple left. \n\nAnd then, the girl saw me. I could tell the instant she became aware of my presence; her eyes enlarged and they looked straight at me - studied me: Threat? Voyeur? Participant? She paused in the blowjob she administered, but continued to hold his cock in her mouth. Instead of yelling or taking some action to cover her nakedness, she repositioned so we could see each other better, and she spread her legs wider to me. She continued her ministrations on the young man as she watched me - no doubt continuing her evaluation. I tried to look harmless and horny.\n\nShe obviously wanted to please her partner - plus now I realized she had started performing for me as well. Her actions became more contrived, more pornographic and X-rated. She slurped and made an event out of finding some pre-cum on his cock. She started to use both hands to milk his cock. The man moaned often, but remained oblivious to my presence.\n\nSeveral minutes after she became aware of my presence, I heard the girl say to him, \"We're being watched. I don't care. In fact, I like it. Now, fuck me. Show him what you do to me.\"\n\nThe man spun and saw me. I held my fully erect cock in one hand, my tactic having shifted from the thought I'd had a few minutes earlier. Between the live sex show the couple had presented me with so far and my dreams the night before, I wanted ... no needed relief soon. \n\nThe man smiled at me, and turned back to his girlfriend as she sat on the picnic table, lay back slightly, and pulled her legs up so he could penetrate her pussy with his now engorged cock. From my angle, I could see him slowly slide into her hairy pussy. The table was at the perfect height for him to deeply penetrate her. He reached forward and pawed at her breasts, kneading and twisting her tits. First, he pumped slowly into her body, but then his pace increased. He glanced back at me several times; one time even holding her leg down and making sure I could see his cock entering and leaving her body.\n\nThe pretext of having the towel around me had passed. I dropped the towel and my wet clothes to focus on the couple. As the couple continued to fuck, the man looked over his shoulder at me and said, \"Come closer. Take a better look. She'd love to suck on you,\" he looked at her and continued, \"Wouldn't you?\"\n\nThe girl gestured with one hand for me to come closer, and she said to me, \"Yes. Come closer, watch us while you jerk off next to me - hell, let me help.\" I walked closer, and she reached out to fondle my exposed rod. She shifted on the table so I could stand beside her as she got fucked. She smiled at me to indicate what she would do was fine with her; she said, \"I like this. I've wanted a threesome - so you're fulfilling a fantasy. You look like a nice person.\" She grasped me and masturbated me for thirty seconds before pulling my shaft to her open mouth. \n\nTo my surprise, her first inhalation of my cock resulted in her taking the entire shaft down her throat in one erotic gesture. Without gagging, she started to pull me to and fro into her mouth; often urging me to fully engage with her so her nose hit my pubes. She had a talented approach to a blowjob using lips, hands, teeth, and tongue. \n\nAs we did this, the man continued to fuck her, even increasing the pace and intensity of his thrusts into her cunt. He watched her fellating me, and nodded his approval through his physical strain. He was giving her all he had to bring this woman off.  \n\nI watched every nuance of the dogging act from my vantage point, drawing further stimulation to my own sexual act. He nodded to me more positively than before, a sign I took that he not only approved, but also was about to cum. Seconds later, I heard him start to pant, grunt, and moan as his orgasm approached. He moaned at his moment of ecstasy. My own climax arrived only a few seconds after his, triggered by the combined actions of the couple in their orgasms. My God, I thought, what an unexpected experience. \n\nI erupted into her mouth, having warned her of my imminent orgasm. She chose to catch and swallow most of my cum, allowing a portion to drip over her chin and cheek from the way she had her head tilted. She looked so hardcore. I knew the display of my juice around her mouth was an attempt to turn on the man and me even more.\n\nI pulled away as my orgasm ended, and the jets of cum stopped. She lapped at me for a few seconds, cleaning my shaft. I moved to the side, giving the couple room, and the man stepped into the position I'd had and presented his cock for her to clean, and clean she did with great enthusiasm. Meanwhile, I looked at her exposed pussy and found further stimulation in the rivulet of milky white sperm that oozed from her vagina.\n\nI moved to a large nearby rock to catch my breath, my cock slowly deflating. I sat. The lust I'd carried into the day from the night before felt partly sated. I recalled a term Pete had used about the sex I'd had only a few miles away in Michigan when I'd played masseur and fucked each of the good looking women who were my massage clients. A 'zipless fuck' he called it. An expressive term, to be sure.\n\nA few feet away, the man helped the girl sit up on the tabletop. Both of them were panting from their energetic efforts to please each other. The girl smiled and spoke with me without a trace of modesty; \"I'm Val; this is Kevin.\"\n\nI volunteered with a silly grin, \"And, I'm Jim. A pleasure to meet you both ... a real pleasure in every sense of the word.\" They laughed. I asked, \"And, to what do I owe the honor of this occasion?\"\n\nVal laughed and said, \"Well, we're having an affair - have been having one for four months. Neither of our spouses is as horny as we are, so we decided to ... to, you know, get together every morning to start each day off on the right foot. We've been using this spot a lot this summer. I'm surprised you found it; it's well hidden.\"\n\nLooking around, I raised my eyebrows in neither approval nor disapproval. I asked, \"How'd you get here?\" I gestured over my shoulder to my motorcycle and tent.\n\nKevin tossed his head in one direction, \"We walked in a couple of hundred yards from where we can run our cars off the road so they won't be seen.\" He added, \"When cold weather comes, we'll have to find some other way ... some other place to ... to get together.\" He looked endearingly at Val.\n\nI said, \"You surely started my morning off the right way. Do you do this often - I mean with others?\"\n\nVal responded, \"I did a threesome once a long time ago, but with a guy I knew real well. You're the first stranger I've done. You could fuck me if you want. I'd really like that, and so would Kevin. He'd like to watch me get fucked. You're nice, and you taste good too.\"\n\n\"No, I'm fine. You give a superb blowjob. That'll last me all day ... maybe all week. I'm grateful, but I don't need to go further.\" I thought I might be weird about turning her down. She was a pretty girl, thin in the middle with breasts that equaled a hand full. She had gorgeous hips, and as I studied her leaking pussy, a rather attractive slit. I was sure that most guys would already be humping away at the suggestion of the offer Val had made.\n\nKevin started to kiss her neck and pinch her breasts; she moaned a little as he hit her hot buttons. She kept looking at me, hoping I'd change my mind and fuck her. Kevin asked her, \"Got time to go another round?\" He turned and winked at me. \n\nVal looked between the two of us - Kevin with a partial erection as he stood beside her, and me with nearly a full erection again sitting on a rock only a few feet from her. She said, \"Yes. Yes, let's repeat that again ... only this time, let's go a little slower and savor all the tastes and feelings in our fuck ... and my suck on Jim's cock.\"\n\nI rose, and went to the other side of the table from where Kevin stood. I latched my mouth onto one of Val's nipples as Kevin did the other. I kneaded the mound of flesh with my hand, deeply massaging her mammary. Val moaned.\n\nI ran a finger from her nipple down to her cunt, circling back and forth with a light touch as I crossed her tummy. When I reached the small tuft of pubic hair, I tousled the hair, and then plunged two fingers into Val's sopping cunt. I gave her a rapid and rough finger fuck, which got her attention and made her groan in pleasure into a kiss she shared with Kevin.\n\nKevin brought his fingers down, and the two of us each put two fingers into Val's sodden pussy. We massaged, and prodded, tested, and fucked with our hands. Val popped off a couple of orgasms as we played for several minutes. I found her G-spot, and focused on that as Kevin moved inside her elsewhere.\n\nVal sat up from her supine position, looked at Kevin, and gasped, \"Go to the spot Jim's touching inside me and memorize that fucking location. From now on when you finger fuck me, I want you on that spot - a lot.\" She panted a little and added, \"And ... oh shit ... Jim, you're making me cum again ... ooooooooooooh!\"\n\nI'm sure both Kevin and I could feel the spasms of Val's vaginal muscles. After she came down a little from her climax, I taught Kevin how to find Val's G-spot. Val helped too, by arching her back in a near convulsion when he found the place. Val then had another climax.\n\nI turned down a second offer to fuck her, but did accept another fabulous blowjob. Kevin fucked her long and hard a second time, much to Val's delight. When we were through, Val produced a couple of washcloths and towels from her large purse, and the three of us walked naked down the short trail to the lake. Val had a cute bubble ass to watch. The two of them washed up the smelly parts, I went swimming again, and we walked back to the campsite.\n\nKevin and Val dressed. I noted that Val produced a brassiere this time from her oversize shoulder bag. They asked whether I judged them presentable, and I told them I did. Kevin explained that the two of them worked in the same office about ten miles away. He pondered the fact that they'd both be late - again, and hoped no one would be too suspicious.\n\nThey bid me goodbye with a handshake and from Val a kiss - a really passionate kiss. The pair hiked away as I pulled on my shorts. \n\nWhat a great way to start the morning. After they left, I realized I didn't know their last names.\n\n* * * * *\n\nI dressed and fixed myself breakfast, taking advantage of the permanent grill at the campsite. I ate on the picnic table where Val's lover had twice plowed into her pussy, and where simultaneously I'd gotten two erotic blowjobs. To one side as I ate there lay a small puddle of cum that had leaked from Val's pussy.\n\nAfter packing, I reflected back on the surprise sexual encounter earlier in the morning with the couple at my campsite. Val and Kevin seemed so relaxed and accepting of their infidelity with their spouses, as well as their exhibitionist behavior at a public picnic area - and clearly one populated by a camper. I wondered if Kevin's wife and Val's husband were secretly carrying on another affair at the other end of the same campground. I actually laughed aloud at that thought, my sound annoying a squirrel high above me.\n\nI was close to Milwaukee, so had plenty of time before Kim arrived. I pulled out my new guitar, the miniature version of a full guitar using a new pitch pipe, and reviewed the few chords I vaguely remembered from some guitar lessons a girlfriend in college had tried to teach me. G, C, D7, Em, Am, and F came back readily. \n\nI opened the 'how to' book and started from scratch, learning the strings, the notes, fingering, and a couple of other chords. By the end of an hour, I could play and sing the song '500 Miles' with passable accuracy. The ends of the fingers on my left hand stung where they had fingered the steel strings. I stopped, realizing it would take many sessions and days for me to build up calluses at those points. If I were going to be a country music singer, then I figured I'd better know how to play the guitar. The few times I'd watched Crystal play, her skill seemed so natural for her. I knew the only way I'd reach that same plateau was with many hours of practice.\n\nI pulled out my computer and wrote in my journal too, filling in details from the past couple of weeks and adding to my feelings and reactions to various situations including the 'zipless fuck blowjob' Val had given me as Kevin fucked her on the very table my computer rested on. I also composed emails to Lauren, Anna, Ellen, and Crystal. Lauren, Crystal, and Ellen wanted all the lurid and sex-filled details of every liaison I had in my travels, writing to them made me horny. I edited a version of their email for Anna, although I had begun to believe she might like the unexpurgated version as well.\n\nWith Crystal, I also mentioned Tina Devoe specifically, the woman executive with Sony that wanted a 'serious deal' with the two of us. I asked Crystal to share the information with Terry, our agent, and see what he thought. I didn't know what ties and obligations she - or I for that matter - had to the Nashville Records that we had just done the recordings for.\n\nI walked around the campground after I'd prepared all the emails, until I found a Wi-Fi spot near the park headquarters. I sent off the emails and picked up a couple of my own, nothing of note. I also checked the weather for the next week along various parts of the routes I thought I'd take.\n\nThe longer I thought about Crystal; the more I missed her. I got really down on myself too, wondering just who I was to think I could have a girlfriend who was as pretty as Crystal, and a country music star. My self-confidence plummeted as I thought about all the talent that Crystal had. I questioned whether I had a good enough voice, or musical ability, or the \u00e9lan to give a good concert performance.\n\nThe record company had said that the 'Texas Dawn' album would come out about two months later, but, in my down mood, I wondered whether anyone would like the single 'Texas Dawn' enough to release the recording, even as a single.\n\nAn hour later, my cellphone rang. To my joy, it was Crystal. She started our conversation with some special words that turned my whole day around, \"Jim, I miss you like crazy. When are you going to be in one place long enough for us to get together?\"\n\nI told her I missed her, where I was, and where I planned to go over the next week or so. \n\nCrystal interrupted, \"I've got to tell you some important stuff. First, I got your email, and I talked right away to Terry about Tina Devoe and Sony. He's over the moon, and wants all of us to talk together really soon. Just so you know, after the 'Texas Dawn' album comes out on Nashville Records, we have no further obligation to them - so we're free agents, but, get this, it probably won't matter because they are a subsidiary of Sony Entertainment! So, your connection with Tina is a big break for us; it can move us from a minor label to the big time if she likes us. I hope you treated her well, and left her hungry for more!\" Crystal laughed.\n\nShe went on, \"The bigger news ... are you ready for this ... they released the single of 'Texas Dawn' the day you left Nashville. I didn't even know about it until two days later. It went up on iTunes, Amazon, and at least a dozen other music download sites. They also did a splash to the various country music radio stations across the U.S. Well, everyone likes it ... better than likes it; they love it. We're a hit! We're the number one download at most sites. If you don't have it, get it on your computer. They decided to use our third version of the song.\"",
        "I stammered and stuttered my shock and happiness over the news. I assured her it was her name, popularity, and great voice that had carried the song.\n\nCrystal said, \"Bullshit. Stop putting yourself down. To the contrary, your star continues to rise. Everyone loves your voice. Terry told me that the record company is scrambling to put an album together that is mostly you singing. They're thinking it'll go 'platinum' in record time - do you know what that means? It means they expect to sell a million albums by download or CD - a friggin' million; that's a very big number in this business. You, My Darling Lover, are a star.\"\n\nI was speechless. The insecurities I'd had moments ago evaporated. I mumbled a few words to Crystal to that effect. She laughed in a nice way about my innocence and lack of confidence in the music industry and in my own musical skills. She told me a few other good things about my singing, how much she liked singing with me, how she wanted to do more, and how she just wanted to be with me. \n\nCrystal finally asked, \"Hey, I've got commitments until Monday - public appearances, but after that can I come and join you for the rest of next week? Can I ride with you? I'll go anywhere you're going and then catch a flight back from there.\"\n\nI blurted out, \"Why, I'd love that. Yes, I really want you with me. I've thought about you so much since I left you in Indianapolis.\"\n\nI figured before she came I'd better tell her about Kim; I knew this was a big risk, but I believed in our openness and hoped she wouldn't get so mad she'd hang up and never see me again. I mumbled, \"Errr, Crystal, this is delicate, ... but I'm spending the weekend ... with Kim in Milwaukee. I just figured I'd better say ...\"\n\nCrystal interrupted, \"Oh, Jim, that's so wonderful. I know how dear she is to you. I'm so glad. I hope to meet her someday, particularly because she's so special for you. Have fun - make love like crazy, but save a little energy for me on Monday because I'm going to arrive into your arms horny and sex crazed.\" She laughed gaily.\n\nNow that was not at all the response I'd been expecting. I was speechless. Crystal didn't seem the least bit upset that I'd be spending time with another woman, and seemed to even encourage the connection.\n\n\"Jim? Jim, are you still there?\"\n\n\"Oh, yeah. Thanks ... I'll be ready for you, and I can't wait to see you. I really miss you.\"\n\nCrystal said in a more business-like tone, \"Let me do some checking about flights and all. I'll text you within the hour when I arrange flights, and just to be sure, you could pick me up midday on Monday at O'Hare? Let's head south along your planned route and see what we find. When the time comes, I'll break off and come back home from wherever we are.\"\n\n\"That works for me. If you're up for it, we could camp out a night or two.\"\n\n\"Great. Oh, Ellen says hello too; she wishes she were coming with me, and she said to tell you she loves your sexy emails. Later, I'll email you my exact flight times ... since I figure you'll be in bed all weekend!\" Big laugh. \"I love you. See you Monday.\" She broke into another round of laughter and we rang off.\n\n* * * * *\n\nKim's sleek white Cessna Citation floated down the runway to a smooth flawless landing as I watched from behind a fence at the general aviation terminal in Milwaukee. I watched as the jet taxied back towards me, and then turned into the parking ramp. A young man with two red batons directed her to a parking location near where I stood. The jet turned, parked, and almost immediately the jet's engines started to spool down from their high pitched whine. The line boy put chocks under the front tire.\n\nI could see Kim in the cockpit throwing switches and shutting down the aircraft. Two minutes went by, and then the side door on the aircraft opened and steps unfolded. Kim stepped through with a large purse, a briefcase, and a pull-along suitcase. At the bottom of the staircase, she opened a panel on the aircraft, pushed a few buttons, and the stairway folded up into the aircraft and the door apparently locked.\n\nKim turned, and this time I waved and caught her attention. She ran over to me with the happiest look on her face. Over the low fence, Kim and I hugged and kissed. I hoisted her suitcase and briefcase over the fence, but wondered what we'd do with all her bags on the motorcycle. \n\nKim read my perplexed look; \"Darling, I rented a car. If you want you can leave your bike here, or you can follow me to the Pfister Hotel downtown. I hope you like it; I've been there once before, and I loved it. We can walk to a million different things ... when we're not in bed.\" She gave me a foxy grin.\n\nI looked over my shoulder at my heavily laden motorcycle. I made a snap decision that it would probably be safer in some hanger at the airport than in a parking garage downtown. I told Kim.\n\nAn hour later, Kim and I stood alone surrounded by our luggage in an exclusive clubroom suite on the twenty-first floor in the new wing of a restored turn of the century hotel. I felt seriously underdressed for the occasion, particularly compared to the sharp business suit that Kim wore.\n\nKim came into my arms as soon as the bellhop closed the door. She grabbed ahold of my shirt and started to undo the buttons. \"Now, you are seriously overdressed for what I have planned for us for the next hour or two ... hell, for the whole weekend.\"\n\nI grinned, and helped her off with the stylish jacket that went with her suit. Beneath the jacket, she had a gorgeous white silk blouse that showed a modest amount of her cleavage. I carefully unbuttoned her blouse as she did my shirt. We both finished about the same time, and shrugged off our layer of clothing. The lacy bra Kim wore disappeared to the pile of clothing, and then we brought our naked chests together as our tongues found each other's mouths in our most passionate kiss of the day.\n\nAfter that kiss there was flurry of pants, nylons, panties, jeans, boots, socks, and briefs that flew in every direction. We studied each other, taking in our nude bodies with lurid pleasure. Kim was stunning, and I visibly hardened just looking at her beauty and sexuality.\n\nI picked Kim up and carried her to the huge bed in the suite. In seconds, we were at each other; unable to do all the things or to say all the words we wanted to fast enough. Kim spread her legs to reveal her moist pussy to me. I'm not sure I ever felt such hunger for anyone as I did in that instant. My fingertips inched their way up her leg, breaking off just before her pussy. I moved my hand to her other leg and repeated the slow stroke. This time I stroked her slit from ass to clit, and then slipped two fingers into her folds. Kim lurched forward and clutched at my arm as though it was a life preserver in a turbulent sea. She moaned and came just from that simple touch.\n\nI moved in front of her, stood close to the bed, ran my dick up and down her slit, and then with the slowest of motions sank into her a millimeter at a time. Our eyes locked onto each other with the palpable intensity of lust and love. I could feel the walls of Kim's warm tunnel clenching and releasing me as I moved forward into her. As our groins touched, I gripped Kim's hips and for her pleasure somehow forced still more of myself inside her. I swelled with lust.\n\nMy mind soared with pleasure and my heart soared with the love I felt for Kim. Oh, this felt so right - so perfect in every way. I never wanted the feeling I had in those few seconds to end; I wanted to freeze them in time and live in them forever.\n\nKim rocketed to a thunderous climax, her eyes becoming slits of pleasure as the wave swept over her. Her legs hooked behind me and pulled me into her. I resisted the spasms and my own need for release. When Kim's bucking slowed, I began moving inside her at a fast and hard pace, pulling out until only the barest of our bodies touched, and then surging inward with passion until I filled her cavity again.\n\nKim moved higher and higher in her passion. She couldn't get enough of me - of my cock. Our bodies slapped together, filling the room with the sound of our lovemaking - wet flesh slapping against wet flesh. Kim's juices and lubrication flooded our junction ... flooded the bed.\n\nI reached down and with my thumb I stroked her clit. \n\nKim looked at me and gasped out, \"Not fair.\" But, she made no move to stop me. A minute later, she eked out, \"I ... am ... about ... to ... explode. You'd ... better ... come ... this ... time.\"\n\nMy thrusts got faster and harder, my cock had become the consistency of granite, yet I could feel minute sensations from deep inside her body along my shaft I'd never felt before from anyone. My throbbing started, and I passed the point of no return.\n\n\"Oh, God, Kim, I love you so. I LOVE YOU.\" I blasted my seed deep into her cunt with surge after surge of pleasure, of love, of lust, of spiritual connection. Beneath me, Kim's body arched and pushed into me with wild uncontrollable spasms from her cuntal muscles. I couldn't stop pumping. I filled her with my life and my soul. Kim grasped my arms with Herculean strength, but I loved her strong touch.\n\nFor a few minutes time did stand still, and then I carefully lowered myself to Kim, and we rolled to our sides. Kim and I were both crying from our love and passion. I couldn't think of the last time I said 'I love you' to someone - Karen. I had wanted to say them to Lauren, maybe to June, and to Kim the first time we met; however, I'd held back because I had a rigid definition of what love meant. Maybe as I'd started to open my thinking, I was also opening to a broader definition of the term.\n\nKim whispered, \"Oh, Jim. I love you. I have never ...\" I kissed the tears on her cheeks, as she wiped my own from my face. We held each other for a long time in the very special post-coital silence only a few special lovers ever know - a bliss so joyful it is indescribable, unshareable outside the space surrounding the two lovers, and with a rapture common man will never know or understand.\n\n* * * * *\n\nI found a men's store a block from the hotel and bought a sport shirt, tie, and a western cut dress jacket. I carried my swag back to the hotel, and dressed as Kim watched my transformation from motorcycle rider to western gentleman. I dressed the same way I had at Pete's hotel in Michigan - natty. \n\nKim looked at me with such love in her eyes the whole night, and I know I poured my heart out to her with every glance. Kim and I had a romantic late dinner in the steak restaurant in the hotel. I had the ma\u00eetre d' put a single candle on our table in the dimly lit booth. I think several people might have recognized me, a point Kim took great delight in acknowledging. We were so romantic, touching and holding hands across the table, and our legs tangled together beneath.\n\nBack in our room, we shed our clothing as fast as we could and then merged our naked bodies together again, this time without the rush to orgasm. Once coupled, we moved just enough to sustain my erection and keep Kim's juices flowing. We stroked and petted each other's chests, breasts, necks, faces, and ... everywhere.\n\nKim giggled a little and asked, \"OK, now tell me about your most recent sexual encounter.\"\n\nI smiled and started, \"Well, this morning, as I came out from a quick swim in a lake ...\" I told her the story of Val and Kevin, and my surprise blowjobs. Kim thought that outrageous and highly stimulating; so much of the latter that as I rubbed her clit she popped off an orgasm and ended clutching my shoulder for dear life. \n\nIn her afterglow, we kissed, and then Kim said with a smile, \"And the encounter before that? Michigan?\"\n\nI regaled Kim with vivid descriptions of the four women I'd massaged in Michigan. Kim probed for details, and then even got me to withdraw from her pussy and massage her body the way I had Pam, Tina, Daisy, and Julia. I also demonstrated my improved oral skills on her until Kim had two more orgasms and made me stop the cunnilingus because of over stimulation. She pulled my member back inside her body's warmth.\n\nAfter that, I told Kim about George and Summer, and becoming a father in a the middle of an odd relationship. Kim just glowed. She said, \"Jim, I am so proud of you for reaching out and helping that couple ... and for making love with Summer. That's so important for both of you. I know you'll have a peculiar family status there, but you guys will work it out. Oh, I love you just more for doing that.\"\n\nWhen we were comfortably propped up in bed, Kim asked, \"Now, tell me about Crystal and Ellen, and the others since you left me.\"\n\nI first told her about Betty Sue, the rape, and my shooting. I'd sent her the link to a newspaper account of the event, but telling her was different and more detailed. Kim tenderly kissed the ugly scars that remained from the bullet wound. \n\nI described my fling with the Louisiana lawyers, and then Pat at the diner. \n\nI guess the tone of my voice changed as I started to talk about Crystal. I didn't notice it, but Kim did. After telling her about meeting Crystal, my entry onto the music scene, the magazine articles, and then our romance, and Ellen joining us, Kim stopped me. She said, \"Crystal is the most special woman in your life right now, isn't she?\"\n\nI paused and sincerely said, \"Except for you.\"\n\nKim said, \"I'm glad for you, and I'm glad I'm high on your list too. Does Crystal know about me?\"\n\n\"Yes. I share everything with her too... also Lauren ... and somewhat with my sister.\"\n\nKim said knowingly, \"Start sharing everything with your sister. My intuition tells me that this is the right thing to do - for the two of you. She won't think less of you; it'll bring you closer together, and you need her.\"\n\nI nodded in understanding. I needed a woman's point of view.\n\nWe started to move our bodies together in a languid manner. Kim pumped her hips into me a few times. She pulled me over her into the missionary position with a look of lust in her eyes. \"Jim, all this talk about my favorite subject has me all worked up again. Let's get down to business.\" \n\nAnd, so, we did.\n\n* * * * *\n\nIn the morning we made love, had a room service breakfast, walked to Veteran's Park, visited the art museum, strolled for a couple of miles, and then rented a paddle boat for two.\n\nAs we walked, we talked about some of the things that were bothering me. I guess she could read me like a book, and could tell I'd been stewing about some things; Kim called it 'cracking my egg open.' As she put it, \"I can tell you've got a lot on your mind ... that things are bothering you. Are you still brooding about Karen's death and her secrets?\"\n\nI shot a look of amazement. \"Yes ... and no. I think my grief is mitigating, but I feel guilty about that. There's a whole bunch of other stuff that keeps racing through my head about her. Lauren told me that her sister would go pick up guys and fuck their brains out just for kicks, that on top of her group living arrangement before we got married and her bi-sexuality and incest. Secrets! Bah! I end up kicking myself around for being such a prude that she couldn't tell me stuff like that. I must have come across as so judgmental to her; I probably was.\"\n\nI took a breath and went on, \"And, then knowing what I know now, I realize what a boring guy I was sexually - Mr. Plain Vanilla. God, Karen must have laughed at me behind my back because I was so na\u00efve, inexperienced, and unadventurous in the bedroom. Even my job was boring - a software programmer. For most of our marriage, we were so in a rut, as though we were programmed like the computers I worked on. She'd been with all these other people - even fucking strangers - and her sister implies she was daring and sophisticated in her sexual skills, and much more liberal than I ever was. I bet she wanted to go fuck other people instead of me.\"\n\n\"Last about Karen and almost in another direction, is that I keep weighing the things I do in the shadow of the question, 'What would Karen think?' So, I think of being with her sister, you, and the others I've met, and I feel guilty - just one of my sources of guilt. I guess I'm into that.\"\n\nKim stopped us and came around in front of me. She kissed me, and I knew I would get some 'tough love.' I even smiled at the thought.\n\nShe firmly asked, \"First, were you good at your job - your computer work?\"\n\n\"Yes.\"\n\n\"Did Karen say you were boring?\"\n\n\"No.\"\n\nKim smiled, \"So, lose the self pity! You had a good job, provided your share of your marriage economically, and added stability and reliability to your combined existence - being in a rut has its positive side. I bet before Karen met you, she had none of that. Now, you have this great new career in front of you that offers unlimited potential. Don't blow it by wallowing in a lot of 'what if's' about the past. Stuff like this is only 'boring' if you label it so. Don't make value judgments like this about your life when no one else does. For what it's worth, I thought you were anything but boring when we met, and now you're a country music star who can make my body sing you're so sexy. All that, plus you're a damned nice man. You, my love, are an exciting man in every way.\"\n\nShe went on, \"As for Karen's pre-marriage behavior, forget it. It's old news. She apparently didn't bring it with her when she married you, and even if she did, so what? What she did was experiment. She was finding her limits and boundaries; she even lived at those borders a while. What she learned led her to you and into your marriage. She loved you, silly. She chose you over one-night stands, over staying in her group arrangement, and over a long-term lesbian relationship. You won! Appreciate it, savor it, and move on. As for playing around with her sister, think of it as the two of them finding a beautiful way to tell each other 'I love you.' Weren't they fortunate to be able to do that? It didn't take anything away from you. If they'd pursued the idea of the threesome with you that you mentioned, you might have found yourself closer and more loving to the two of them, but that's in the past. Forget it.\"\n\nKim said, \"You say you were unreceptive and a prude about her secret stuff so she didn't feel she could tell you about her past. First off, there are probably more secrets, but so what? Stop caring. She's dead, and the only thing hearing about her other activities will do is pull you back to a time you no longer live in, and it'll make you sad or mad or remorseful. You don't need that. What's past is past. Live in the 'Now.' If Lauren brings up some other secret about your wife, blow it off; don't let the past run your life today or ruin your life today. You can reprogram yourself; hell, you are reprogramming yourself more than anybody I know. The fact that you can see that about yourself tells me you've moved on from those days. Don't beat yourself up for the way you used to be or for lost opportunities. You can't go back in time knowing what you know today. Instead, I'd be spending my time figuring out how I want to be in the future and making the necessary changes - reprogramming myself; that's more productive.\"\n\n\"As for your having been Mr. Plain Vanilla, well that's a great flavor, and I love vanilla. You didn't have to give Karen a million orgasms a day or make love hanging from the chandelier. I'd bet you two had a comfortable sex life, maybe not as either of you would have liked, but no one - no one - has exactly what they want except for a minute or two here and there. So, forget all that stuff.\"\n\n\"You say you worry about 'What would Karen think?' Well, wake up. She's not here in these dimensions we live in to worry about anything you do. She doesn't get a vote about your behavior anymore, and if she does you'll never know about it. Let her go. When you raise a question like 'What would Karen think?' all you do is create hurt and anxiety for yourself. You start to act like a victim, and that's not you.\"",
        "Kim continued, \"Last, you worry about your fading grief and you feel guilty about it. Let me ask you, what do you want your grief and memories to look like a year from now?\"\n\nI stammered, \"I don't know ... less grief or none, but that I haven't forgotten Karen and our good times together.\"\n\nKim said softly, \"I didn't know Mindy - Ron's wife before she died. I know he thinks of her every day, sometime a lot. I know he sometimes measures something I do by her yardstick. I can't change that, but I love Ron, and that makes it OK. He doesn't lord it over me, thank heavens. He never even mentions her, but I know. You will always remember Karen, and little things will happen to remind you of her a thousand times a day for a long time - maybe forever. For certain, when you're not thinking of her, you don't have to feel guilty. Your grief is supposed to fade unless you go out of your way to hang onto it. Life makes it that way; you don't want to carry the grief you felt right after she died for the rest of your life. Put her death in perspective and move on. Live! I'd bet she told you that before she died.\"\n\n\"She did.\"\n\n\"So, move on. You are moving on. Look at all the new friendships you've built just this far in your trip - people that love you and that you care for deeply. People I know that you care about. That's not bad, that's wonderful. Allow them to flourish. It's reason to celebrate not feel guilty.\"\n\nTears came to my eyes, \"But some days it's so hard.\" I choked out the last words.\n\n\"Sure, but it'll get easier as the weeks go by, as you meet interesting people and do things that divert your attention from the tragedy of Karen's death at so young an age. When you have one of those 'downer' thoughts about her death, could you do me a favor?\"\n\n\"What?\"\n\n\"Think of something good that you shared with Karen: something she did, a personality trait that you particularly liked, or things the two of you did together that were fun and that made you both happy. Please don't go back into the shadows about other stuff you could wallow in. Let that rest with Karen.\"\n\n* * * * *\n\nWe walked a half-mile before either of us said anything again. Kim and I had our arms around each other, and she held me tightly to her side. She was sending me messages of love and support.\n\nEventually, I said, \"You ready for the next crack in my egg?\"\n\nKim nodded.\n\n\"This concerns Anna. I don't know how to say this any other way, but for a long time I've had incestuous thoughts about her. I'm just realizing how strong some of them have been, and even how close we've come to that boundary a few times. She's done some things and said a few things that make me think she's like-minded ... but then, I'm not sure. I do love her. I'm sure I could love her physically as well. I also find myself evaluating my new relationships and behaviors also in terms of 'What would Anna think?' just the way I've been doing with Karen.\"\n\nKim chuckled. \"You're talking about incest with someone who has an incestuous relationship with her sister, and whose husband has too - plus I've been with the others in the Circle in their presence. You know June and I have a loving physical relationship, so I don't know whether my suggestions in this area will be unbiased.\"\n\nShe looked up at me, \"My take is that you are both consenting adults, and far beyond your teenage years where you might do things to satisfy your curiosity or in some daring experiment. If you find love in each other's arms, I'd say go for it. I don't think I'd have children together, I think there are worries there. You need to sit with her and level with her about your feelings. Even if she's not of a like mind, she'll still love you for being open; I promise. It'll bring the two of you closer together.\"\n\n\"As for 'What Anna thinks?' I wouldn't worry about it. She won't withdraw her love because you misbehave according to some yardstick she has. She might think some of your preferences and actions weird or kinky, she might tell you or not, but again, keep an avenue of communication open with her so you can talk about this kind of stuff if she's willing. You might be in danger of learning something about yourself ... and about her. I think it's sweet that you feel this way about Anna. It makes me love you more that you even consider the option. I support the two of you getting together. And, oh, you told me you sent racy emails to Lauren, Crystal, and Ellen; well start sharing them with Anna and see where it leads. If she doesn't like them, she'll let you know - and I want on that explicit details email list too! I'm as horny right now as all of them put together and I love you heaps.\"\n\nKim's last comment surprised me. She even gave me a little squeeze to reinforce her comment.\n\nKim laughed at her taunt and said, \"Next area?\"\n\nI thoughtfully said, \"OK, next. I think I fall in love too easily; I worry I'm just bouncing around in some kind of rebound situation after Karen's death and my marriage ended. I mean I saw Lauren and felt all gooey about her right away - and the feeling was mutual; then I did the same with your sister and you; not so much with the others in the Circle, or Betty Sue, Lacie, Lindy, and Pat, but now I'm all gushing and palpitating about Crystal and Ellen, and then Summer, and even some of the women I met in Michigan. I don't know whether I'm unbelievably fickle or a man-slut or what. Moreover, I hate to leave almost every one of them, yet I feel driven to complete this trip. Aaaargh!\" I threw my hands up in the air in a gesture of frustration.\n\nKim laughed and pulled me back to her side, \"You are a beautiful sensitive man who empathizes with other people, particularly women. Of course, you hate to stir up emotions and then leave the scene, but let's go back little. For whatever reason, you came out of your marriage with an inferiority complex - low self-worth. When a woman finds you 'worthy' you perk up. Come around to the point of view that 'You are worthy,' and start your thinking from that premise. Personally, I'm glad you fell in love with me. You are a bright light in my life, second only to my husband. I think a lot about you every day, and I know you think about me. I love that.\"\n\nI said, \"I do love you, but I'm not sure what thinking I'm worthy does for me?\"\n\n\"Well, try this, love is hard to find, but amazingly you keep finding it or it keeps finding you. For you, love is easy to find. A billion people would trade places with you in a flash, and I can introduce you to a couple of hundred of them that I know personally. As for loving and leaving them, you have a model about relationships that whispers in your ear that relationships have to last a long time - surely more than a few days or nights or a one-night stand. Where'd you get that model from?\"\n\nI shrugged.\n\nKim probed, \"Do all relationships have to last a long time?\"\n\n\"No.\" I thought of how my relationship with Karen was supposed to last forever, but it ended after such a short period of time.\n\nKim went on, \"Then, meeting an interesting woman, spending a little time with her, and then continuing with your life without her is OK. She may have a different model or rule about relationships, but that's why people 'talk' in the early part of their pairing - to make sure they're on the same page.\"\n\nAfter digesting that, I said, \"I guess. It just feels funny, and I don't want to hurt any of the women. I don't want them to feel that I'm deserting them.\"\n\nKim said, \"It's 'funny' because someone 'programmed' you to think that if you found someone you liked that you had to stay with them for a long time, maybe even forever.\" She said with a chuckle, \"As for your fickle-man-slut comment, the same kind of thinking applies. I'm guessing you have a little voice in your head that is telling you that it's not all right to make love to many women in a short period of time.\"\n\n\"Hmmmm. I think you're right.\"\n\n\"So, where'd that rule come from? Is it true for everyone?\"\n\n\"I guess it came from society in some way, and it's not true for everyone.\"\n\nKim chuckled, \"Of course, there's a double standard for men and women about this, because if a guy does what you've done he's a stud; if a woman did it she's a slut. What about adopting a new rule that says, 'Consenting adults have the right to do whatever they want to do about sex'?\"\n\nI laughed, \"I guess there'd be a lot of people having sex right on that lawn right over there.\" I gestured to where several dozen couples were spread out in different areas of the park having picnics or just basking in the sun together.\n\nI thought for a minute and said, \"I had trouble getting into the threesome with you and Ron, but not as much yesterday with that couple north of here. Then there was Lacie and Lindy, and then Crystal, Ellen, and even Lauren when the four of us had sex together.\"\n\nKim responded, \"Somewhere you picked up a rule that a sexual union has to be between two people - a man and a woman. Does it? It seems to me you're getting past that rule.\"\n\n\"No, apparently not.\"\n\nKim said, \"So we're back to our new rule: 'Consenting adults have the right to do whatever they want to do about sex.' I like that rule better than the others.\"\n\nI sought confirmation, \"So, bisexual threesomes, foursomes, and orgies would be all right with you per that rule?\"\n\n\"So long as everyone agrees and is of legal age.\" Kim grinned at me. \"Some of those combinations sound like fun. Maybe we should try them.\" She poked me in the ribs.\n\nAs an afterthought Kim added, \"Jim, allow yourself to have fun with your sexuality. Be open to experimentation or at least considering some of these things. I'm not advocating anything other than open-mindedness. Everyone has different boundaries; I just want to see you set them consciously rather than see you buy into some idea or rule that someone else planted in your head. Most of those rules are untruths, but we treat them as sacred and unbreakable rules. When we do that we become victims of some virus of the mind that someone else put there. Go to your boundaries consciously, look at what's beyond them, explore, test, experiment, think, and then make a conscious decision.\"\n\nI felt like I'd been talking to the wisest guru on the planet. I said to Kim, \"You are amazing. How'd you get to be so smart and so full of wisdom?\"\n\nKim smiled graciously, \"A good set of parents I hope you'll get to meet someday. They didn't buy into things just because somebody told them they had to, and they taught June and me to think and challenge - critical thinking. I run my business this way: think, challenge, experiment, explore. The people I work with love the approach, and so far it seems to be working there too.\"\n\n\"What do your parents think about June and the Circle?\"\n\nKim said, \"Oh, they support her a hundred percent, because they know she went into it with her eyes open, with clear thinking about the situation, and with a view on the options. Think of the rules that June disobeyed by helping create the Circle: you can only love one person at a time, monogamous marriage, only the two parents raise a child, sex outside marriage is a sin, the definition of family unit, never enjoy physical love with your sister or brother in law, and many others. They're all artificial rules someone made up to impose on someone else. You can break them if you wish. Sure, there may be consequences, but that's what critical analysis is all about - analyzing the situation before you make the decision.\n\nKim asked, \"You said Crystal knew about us getting together. What'd she think about us?\"\n\n\"She encouraged me. She was happy that we could see each other because she knows how important you are to me.\"\n\n\"Was that what you expected?\"\n\n\"No, I expected her to get mad ... maybe not see me again.\"\n\nKim said, \"So you expected to find a boundary there, but didn't. You expected she'd exercise the infamous 'Monogamous Dating Rule,' but clearly she doesn't buy into that rule or doesn't care about it. Instead, she's happy to see you be happy. That's a much better situation.\"\n\nI asked, \"How do you know where to look for a boundary or rule?\"\n\nKim said, \"When you find yourself in some situation saying it's too difficult or risky or time-consuming or lonely, or when you feel you don't deserve something, or you're too busy or scared to proceed, or when you feel you can't do something you want to do - that you could do, but just have a feeling you shouldn't.\"\n\nWe were silent again for a while. I gave Kim an appreciative smile and said, \"You really are an awesome mentor.\"\n\n\"Well you better take me back to our hotel room so I can mentor you some more on that big bed.\" Kim gave me a lecherous grin that indicated we'd walked and talked enough, and it was time to make love.\n\n* * * * *\n\nSunday afternoon, Kim and I lay on the luxurious carpeting of the suite we were in, basking in the sunlight pouring in the windows that overlooked Lake Michigan. With laughter, we had disobeyed the rule that states that sex must be conducted in bed. We'd made love on every piece of furniture in the suite. The warm fuzzy feeling of afterglow surrounded the two of us and the room wreaked of sex - really good loving sex.\n\nI mumbled, \"Wow! It keeps getting better and better. You keep making it better and better.\"\n\nKim whispered, \"That's because we fall deeper and deeper in love.\" She leaned in and kissed me again; \"And, you're improvising - and I really like that.\" She giggled, \"You're a great student ... and a great lover. You're the best lover I've ever had.\"\n\nI thought of the implications of her last statement. I laughed, \"I should thank Ron for giving you up this weekend. I hope he wasn't too lonely.\"\n\nKim smiled, \"Oh, he wasn't lonely. He has Barbara with him.\"\n\n\"Barbara?\"\n\n\"Yes. She's a congressional aide to one of the senators that support solar technology. She's very nice. I've met her a few times.\"\n\n\"Do the two of you ...?\"\n\nKim chortled, \"No, just Barbara and Ron. I just never felt the right chemistry with her to suggest we go any further than polite social contact. Ron and she clicked; we didn't. Different strokes for different folks.\"\n\n\"Does she know she has your 'permission,' so to speak?\"\n\n\"Ron told her I knew about their relationship. He said it took her by surprise, but she's a smart woman and has seen other unusual marital arrangements; so, she adapted. I've seen her a couple of times since, and she's been gracious and warm to me and the overall situation, even warmer than when she thought I didn't know.\"\n\nI said, \"That situation breaks a few more rules doesn't it?\"\n\nKim nodded.\n\nI speculated, \"I wonder what you'd think about Crystal and Ellen, or some of the other women I've met - whether you'd find them attractive in a bisexual way. I'm realizing I get turned on thinking about those situations ... particularly if I'm involved.\"\n\nKim stroked my chest, \"For me, it's the chemistry. I think I can tell in the first thirty seconds, and I bet whomever it is can too. Affection and words have to follow as well. I'm open to whatever comes.\"\n\nKim thought a minute and said, \"I'd really like to meet Crystal and the others important in your life - Ellen, Lauren, and Anna, for instance.\" She smiled and pushed her lithe body against mine, \"Who knows where it might lead. Because I feel such a strong bond with you, I'd wager our chemistry would be quite nice, and we could make fireworks together. But, just so you know, I'm not evaluating every woman I meet or see on the basis of whether I want to make love to her or not.\"\n\nI retorted, \"Oh, I didn't think of you that way! Pat told me I had pheromones that sent her signals I was desirable and lovable; she reacted to me accordingly. Somewhere, I also read about 'auras' that people have - the atmosphere around each of us that can wordlessly communicate everything about us - in those first thirty seconds, or maybe earlier. Some people think they extend quite a distance from each person - a hundred feet or more.\"\n\nKim speculated, \"So, two people's auras rub together, and they know the chemistry is there or it isn't?\"\n\n\"That's the idea. They signal the other person that they're available, willing, lovable, and lots more about themselves, even things they may not want them to know.\"\n\nKim surmised, \"Maybe that's why I knew you had a whole lot going on inside you that you needed to talk about this weekend. I sensed that in your aura.\"\n\nI said, \"Probably. What else do you sense?\"\n\nKim reached down to my flaccid cock, surrounded the flesh with her hand in an erotic way, and said in a sexy voice, \"Well, I sense ... that we should rub our auras together again, Lover.\"\n\n\"And so we did.\"\n\nChapter 14\n\nIllinois\n\nI watched Kim's Cessna Citation soar into the sky with Kim behind the controls, the jet's wheels folding into the wings and belly just after liftoff. Kim had given me a lot to think about, really new ways to think about the world. The whole idea of 'rules' that artificially became 'facts' and 'shoulds' about how we had to behave or about how the world worked made me realize how imprinted I'd been growing up with the beliefs of my parents, teachers, ministers, and my surrounding culture. I'd just accepted them all as fact, truth, the only way, and the one right way. Kim told me they were 'memes' - ideas planted in my head from another head.\n\nI thought of the rules or memes around someone dying who's dear to you. We're taught to grieve, experience pain, take a long time to recover, dispose of the body one way or another, do some kind of memorial service, deal with friends or relatives and their sympathies, and on and on. If we get any of it 'wrong' in some way - violate the meme or rule - we feel guilt and remorse, and friends or relatives will let us know we stepped outside some boundary.\n\nAs I rode from the Milwaukee airport to O'Hare International, I chuckled: what if the family gathered around the dying person in the hospital, they died, and the family just walked away after the person died - no one claimed the body, no last rites, no services, no visitations, or anything; everybody just goes back to whatever they were doing before the person got sick? There'd be no coffins, hearses, services, visitations, cemeteries, or religious mumbo-jumbo. Just a short 'goodbye while the loved one was alive and their goodbyes could matter.'\n\nWith Anna's help, I'd done everything I'd been 'taught' when Karen died. In the end, it didn't make any difference. She was gone, the pain persisted, and overtime my mind would cover the pain with scar tissue and it would slowly ebb - just like the pain from my bullet wounds.\n\nSo, as I rode to Chicago, I thought about the rules I was breaking on this day. I'd just left one girlfriend I loved dearly to immediately see another I felt the same way about. Both women knew about the other, and encouraged the alternate romance besides the one I had with them. Girlfriend #1 was married ... and had her husband's blessing to spend romantic and sexual time and emotional energy on me; he also had a dear friend he had a sexual and emotional interest in. Girlfriend #2 was bisexual (so was Girlfriend #1), and had really liked the sexual fun we had with (a) her sister, and (b) my sister-in-law; she'd also described herself as 'modestly experienced' with men, a term she laughingly told me sounded considerably better than 'slut.' Those were a few broken rules I could be thankful for.\n\nCrystal got away earlier than expected, so I found her waiting for me when I got to the sprawling airport, and found my way to the right curbside location. After using a dozen bungee cords, we got her two duffle bags strapped to the motorcycle, and then she sat happily behind me on my motorcycle hugging me in a way that let me know that she loved me more than anything in the world. I'd been hoping no one would identify us as celebrities, but that idea evaporated when a few paparazzi spotted us at O'Hare and attempted to chase us on foot as we pulled away from the curbside. Crystal laughed gaily at having frustrated them. She waved back at them.",
        "Leaving O'Hare, we headed southwest, going through Beloit, and then south deeper into Illinois. We stopped in Rockford for a cozy lunch at a caf\u00e9 we spotted on a side street. I'd kept a careful look in the rearview mirror and was certain we'd left the paparazzi behind; it was almost a game of hide and seek. As we lingered over lunch, we talked about what we'd like to do the next few days. Accordingly, I pulled my laptop and did some research for places to stay ... places that had big comfortable beds as Crystal suggested.\n\nThe two of us were so happy to be with one another, and I noticed our happiness was contagious. People we talked to cheered up and smiled more. The two of us just beamed at each other. We both knew this relationship was going somewhere special, and we'd just started to enjoy the journey as opposed to trying to rush to some destination.\n\n* * * * *\n\nThe place we chose to stay was the Sheffield Lodge, a beautifully restored nineteenth century inn well off the beaten path in a town of the same name. The large bed and breakfast inn sat in the middle of several acres of trees that in turn sat in the middle of wide-open farmland dotted along the horizon with homes, barns, and silos. The pretty nearby town had a population under a thousand and had obviously suffered decades earlier when its primary mission as a coaling station for the railroads went away with the change to diesel locomotives. \n\nThe lower rooms in the inn comprised the owner's apartment, a kitchen, a spacious dining room, a large living room with an extensive library, and a foyer with a highly polished banister and wide carpeted stairs leading to the upper floors where several well-outfitted and modern bedroom suites had been laid out.\n\nAs we checked in, Paul Binford, the young owner-manager of the inn told us there was one large business in town that made wooden doors and shutters, but not much else. Paul was a good-looking young man about thirty with black hair and a square jaw; he had that freshly scrubbed and newly minted look to him. In our opening conversation, we discovered that Paul and his wife Tori had done most of the renovations on the old inn over the past two years.\n\nTen minutes after checking in at the inn, Crystal and I were making love in our room. The gear from the motorcycle and our clothes lay scattered around the large second-floor suite. Since I'd picked her up in Chicago, we never spoke explicitly about what we wanted to do; we knew, it was obvious, and we did it. Like my initial hookup with Kim, neither of us wanted to prolong our first fuck after we hadn't been together in over two weeks. Ten minutes after we started, I lay on my back with Crystal straddling me - our genitals still joined after our orgasms.\n\n\"Oh, I am so happy to be with you,\" Crystal crooned to me as she came down from her high and lay across my body, her hard nipples trying to carve her initials in my chest.\n\nI responded, \"Me too. I've thought about you a lot every day since I left Indianapolis. I'm so glad you could get away.\" I looked down at where our bodies remained joined; \"I'd be content to stay like this way for the rest of your time with me.\"\n\nCrystal laughed and then got a little serious, \"Before tonight, I'd love to find a drug store. There are a few things I need. I did travel light, but I realized I should have brought a few girly things - other cosmetics.\" \n\nWe pulled apart, cleaned up, and redressed. On our way out of the inn, I met Tori Binford and Crystal asked where she could buy what she needed, and where we could dine. Tori was a pretty, young woman who wore sexy glasses and had a friendly demeanor and sparkling personality. She gave Crystal directions to a small strip mall that had an all-purpose drug store. A surprise to us, Tori also invited us to join the two of them for a pot roast dinner she was preparing - compliments of the inn. We accepted, and it looked as though it would be a pleasant evening chatting with the couple. Obviously, neither Paul nor Tori had identified us as well-known country music stars.\n\nWe found the store, and Crystal shopped while I roamed around outside getting a feel for the small town. As Crystal was putting on her motorcycle helmet, she said, \"We've got to get a couple of bottles of fine wine for the couple that run the inn. They didn't have to invite us to dinner. I really like them; they're cute.\"\n\nI agreed. After asking for directions, we found a liquor store a couple of miles out of town, bought a nice Pinot Noir and a Chardonnay, packed them in my saddlebags, and headed back to the inn.\n\nTori and Paul Binford met us as we came in from parking the motorcycle. I got more of a chance to talk to Tori this time; she was in her late twenties, seemed eager to please and excited about having us as guests. They liked our company, and the feeling was mutual. I helped Paul set the dining room table, and he commented that we were the only guests at the inn that night and probably for the next few nights. We presented them with the wine, and excused ourselves to freshen up before dinner.\n\nA half hour and a crowded shower later, we joined Tori and Paul. Over cocktails, we had a lot of conversation about the inn, its history, their renovation projects, and how the two of them happened to end up in this small town in north central Illinois. Neither was from the area; they'd pooled their savings when they wed and bought the inn as a business they could partner in and as an investment.\n\nTori's bubbly personality came through as she talked to us. I thought she must have been a cheerleader in school she was so vibrant. Over dinner, she posed the obvious question: \"What do the two of you do?\"\n\nSomehow, neither Crystal nor I had anticipated that question. I jumped in and gave an evasive answer: \"I'm on a cross-country trip to my sister's home in California - San Diego, actually. I thought I'd try to go through each of the lower forty-eight states, usually staying off Interstates and with a few exceptions avoiding big cities, and that's how we found you. Crystal is my girlfriend who decided to join me for part of the trip.\" Crystal looked relieved at my creative and evasive answer.\n\nThere was some back and forth discussion when I revealed my background in computers and music, although I admitted to doing little with the latter in a professional vein during my overall career. Crystal started to laugh and almost blew our cover. A coughing fit by her redirected the moment. When the subject came back to her, she said she had tended bar and sung 'here and there' on stage to earn a few bucks. Everything we told them was true, just things had moved much further along and more rapidly than we indicated.\n\nWe shifted the conversation to what it was like running a B&B - a bed and breakfast inn. The two of them took turns talking about their venture, a risky one that ate up all their cash and had the pair in debt up to their ears. I shuddered at their financial exposure; I was more conservative in that regard. Crystal also expressed her conservative stance. There seemed to be little rationale for having the inn in Sheffield, except the purchase price of the old building had been in range of something they could afford. Now, they were paying the price with more empty rooms than they counted on.\n\nThe more we talked, the more it became apparent that Tori and Paul had divergent views on money management and many other things revolving around the inn: marketing costs and approaches, their roles around the establishment, and going back in time even the selection of Sheffield as a location for their purchase. Paul was the saver and realist, and Tori the spender, and optimist; she had a list a mile long of projects the inn needed. They each had different priorities for managing the inn. I even caught some scowls by one or the other of them over some of the things the other said about the inn and their approach to running it.\n\nTori produced a fabulous dinner that clearly displayed her skills as a chef. Crystal and I offered to help with clean up, but our offers were rebuffed. Over coffee, we did keep the pair company as they bussed the dishes and put things away. Afterwards, we expressed out thanks and excused ourselves. We went to our suite in the inn, and not surprisingly slipped into some fun lovemaking.\n\n* * * * *\n\nAn hour later, Crystal and I lay naked on the large bed, panting from our intensive sexual loving. We'd both pleased each other in many ways. I held Crystal in my arms. The room smelled of sex and the fluids and odors we'd emitted.\n\nCrystal asked with a snicker, \"Now's the time to tell me the details about Ohio, Michigan, and Wisconsin - the stuff you didn't cover in your emails. I know you fucked your way through each of those states before you picked me up, but I want the nitty-gritty.\"\n\nI laughed, and quickly promised to be entirely open and revealing to Crystal. If she didn't like what I'd been doing, I guess I'd have to make other choices if I wanted to preserve our relationship.\n\nI began by telling her about my friends in Ohio - George and his wife Summer. Crystal sat up and listened intently as I told her more about George's war injury, his infertility, and their request to me to impregnate Summer. She pushed me into revealing some of the details about Summer and my time together, as well as the deep loving feelings we developed for each other. As I talked, I watched her carefully; she relished the stories and seemed to enjoy my sexual adventures secondhand, even slowly humping her mons along my leg.\n\nBefore we continued, Crystal and I had a revealing discussion about my own and her own hypothetical situations. Would we take similar steps to have a family if I was infertile? How did I think about long-distance fatherhood? Did I want my own family? What role did I want with the child Summer and I would have? How soon did I want kids of my own? How many? We even talked about about having a wife with a serious career, and what family priorities might be in such a situation. We were both feeling each other out around some important issues and moving things to the next level. The questions led us to talking about Karen, my late wife, and some of the dreams for a family that we'd had. Crystal was sympathetic without being maudlin over the way fate redirected my plans. \n\nEventually, she led the conversation back to my trip into Michigan. I described how I'd succumbed to lust with four women on my second day there - three on the massage table, and one giving a massage to a hotel waitress who turned out to be an heiress. With glee, Crystal approved of my exploits, and expressed amazement at my ability to please so many so fast. She made me promise to give her a full massage the next day after we bought some lotions and oils.\n\nOur conversation shifted to my exploits in Wisconsin, and I told her about coming up from my morning bath in Lake Winnebago, only to find a couple romantically and sexually christening the picnic table by my campsite. I told her how I'd been invited to join in, getting two extraordinary blowjobs before the couple rushed off to work, and then related the time Kim and I had spent both making love and having deep conversations about the areas in my life that had been perplexing me. Again, Crystal milked every detail of the encounters from me as she used one hand to toy with my cock.\n\nAbout that time, the two of us joined again in a lazy fuck with Crystal on top of my prone form. We made novel use of fingers, hands, and mouths. We kissed a lot, and I sensed that after our discussion, our relationship had taken a turn for the better. The whole concept of 'girlfriend' came back to me. I wanted Crystal as a serious long-term girlfriend and probably more.\n\n* * * * *\n\nA crash from downstairs rapidly brought Crystal and me out of our combined reverie. Then, we heard the raised voices of Tori and Paul yelling epithets and slurs at each other. Another crash like the first could be clearly identified as glassware of some kind shattering against the dining room wall right beneath our suite. \n\nThe yelling moved off towards the kitchen of the inn, so the words were less distinct, but the volume and angry tenor of the words were hard to miss.\n\nI said, \"The two of them seemed pretty happy with each other over dinner; I wonder what happened?\"\n\nCrystal said in a concerned voice, \"I think we should intervene, offer support to the two of them, and to try to stop them throwing of things. Someone might get hurt.\"\n\nI thought a moment about that idea, and then agreed as we heard something else break against a downstairs wall and Tori's voice raging in anger at her husband.\n\nI slid on my shorts and my boots, mindful of the broken glass we'd find downstairs. Crystal slipped on my long t-shirt over her sexy body and stepped into her shoes. We boldly walked downstairs following the noise coming from the arguing couple, and hoping the sounds of our arrival would end the argument they were having. \n\nAs we got closer, we could more clearly hear some of the words being said. First, Tori yelled, \"You never help around here - you think I'm nothing but a servant. Well, you didn't want a wife or partner, you wanted a chambermaid you could fuck - and fuck around on.\" Then Paul responded, \"Yeah, well, I didn't think my chambermaid would flirt with every male who came in the door - who knows, maybe you've fucked them all, you slut.\"\n\n\"Ahem!\" I said loudly as we stood at the door to the kitchen looking at the pair. Crystal came up beside me and put her arms around me. Tori and Paul stopped in the middle of their argument and looked at the two of us sheepishly with their mouths open, obviously ashamed that their guests had caught them arguing so vehemently.\n\nI went on, \"We couldn't help hearing part of your argument ... and a few things breaking. We thought we should come down and see whether we could cool things down a bit between the two of you. There are more constructive ways of arguing, you know.\"\n\nI was surprised at my assertiveness in this marital situation. I'd been anything but a marriage counselor during my own marriage; usually caving into whatever Karen wanted us to do. Fortunately, she had remained sensitive to our relationship, so I seldom felt put upon by what she decided.\n\nPaul and Tori both started to talk at once, arguing their positions to Crystal and me. We could hear nothing substantial as a result.\n\nWith the command voice I'd learned as a Green Beret, I said loudly, \"TORI! Go with Crystal, and talk to her. She'll help you. I'll stay here with Paul, and we'll talk about what's going on. After things have cooled down, we'll get the two of you back together.\" My instructions left little room for argument, and the two automatically nodded in agreement like good Army recruits would have done in the presence of such strong commands. I nodded to Crystal and whispered some additional suggestions to her. She left the room with Tori.\n\nPaul shook his head in disgust. He muttered, \"Shit. I hate arguing with her.\" I maneuvered him into a sitting position at the kitchen table. I continued to stand near him in a power position.\n\nI asked, \"Do you know for certain she's sleeping around?\" I asked in a strong tone that would have been confrontational if I had a stake in the answer. I didn't.\n\nHe thought a moment and said, \"No, not really. She just flirts with everyone - as she did with you at the dinner table. I bet somewhere along the line she's screwing around on me.\"\n\nI told him, \"Paul, just so you know, I didn't think there was any flirting going on today. Your wife has a bubbly personality - she's friendly. That's good, and as a guest at an inn I found it refreshing and delightful - both of you are that way. As for your speculations, what does she say?\"\n\n\"She denies that anything has ever happened since we got engaged three years ago and got married shortly after.\"\n\n\"But you don't believe or trust her?\" I paused and asked, \"Why don't you leave - pack up and move on down the road and divorce her?\"\n\nPaul looked a little shocked. I'd read him correctly. He looked up at me and studied me. He stammered a bit, trying to find the right words. \"I know I should trust her ... hell, I don't trust myself. And, I don't want to leave her ... I love her. When I raise the issue, she accuses me of the same thing, but I haven't messed around with anyone although I've been tempted after some of our big fights.\"\n\n\"So throwing plates around the house is a demonstration of that love?\"\n\nHe softened, \"No, I guess not. She was doing the throwing anyway... but I guess I provoked her with my name calling.\"\n\nI asked, \"Why did the first plate get thrown?\"\n\nPaul launched into a discussion that sounded remarkably like an angrier version of the divergent opinions about the management of the inn we'd heard over part of dinner: money and division of labor around the inn issues. Ultimately, he'd sparked off her anger, and she overreacted.\n\nI pushed harder, \"Why are your divergent views on money worth fighting about?\"\n\nPaul shrugged. He didn't have a ready answer to that question. Without much conviction he mumbled some words about Tori spending too much money and putting them into debt as a result. I could tell he didn't really believe that it was all Tori's fault. He knew he shared responsibility for their current financial situation.\n\nI asked, \"What else do you fight about? Sex? Having a family? Relatives? Friends?\"\n\nMostly Paul shook his head. He said in a quiet voice, \"We fight a lot about money. That takes a good sex life off the table, as well as willingness by either of us to start the family we both want. Neither of us has family nearby, nor do we have any close friends. We're too new to the area.\"\n\nI asked, \"Can you name five things that you'd like to see happen about your financial situation?\"\n\nHe thought for a moment: \"First, I'd like to build reserves so if we have a crisis we have some dough saved to deal with it. I think five thousand would be good for starters. Next, I'd like to figure out how to control our spending - we don't do well at this; we just use the credit cards without a care until the bills come in. We're building a debt that we've got to payoff - the interest payments on our card balances are killing us. So I guess paying off all that would be my third thing.\"\n\nI waited patiently for him to think of two more things.\n\nA minute or so later, Paul said, \"Fourth, I think we both need allowances so we can each have our own mad money.\" He thought for a while and admitted, \"And fifth, we do need to market ourselves the way Tori wants us to do, particularly in Chicago - it's not that far away. We could be a getaway weekend or something; we've talked about it, but haven't done anything yet.\"\n\n\"Do you have a budget and an accountant?\"\n\n\"No on both counts.\"\n\n\"Do you think one of each could help you?\"\n\n\"Yeah, I guess. At least, we'd know where we were overspending and why.\" He thought for a moment and added; \"I don't know that we could afford an accountant right now. We've almost maxed out our Visa card; we've got to pay that down. We're right on the ragged edge ... it keeps me awake at night.\"\n\nWithout thought I said, \"What if I offered to pay for you to visit with an accountant for a few visits, so you could get a 'system' in place ... one you both agree on and one that you can follow.\"\n\nPaul looked up at me in disbelief, \"You'd do that? You barely know us.\"\n\n\"Yeah, I like saving marriages. I miss my own. My guess is that you'd miss yours too, if you two split.\"\n\nHe nodded, \"What happened to your marriage?\" My widower status had not been raised at the dinner table.\n\n\"My wife died about eight months ago.\"\n\n\"But, Crystal ... she's ...\"\n\n\"A girlfriend. We're just at the start of something interesting - very interesting that I hope lasts a long, long time.\"",
        "I paused a minute and asked a telling question, \"Paul, if you had to choose between Tori and the inn, which would you choose?\"\n\nPaul again jerked his head up to look at me. He said immediately, \"No doubt. It'd be Tori. I love her more than anything in the world ... I just wish life was easier and that we wouldn't fight.\"\n\n* * * * *\n\nFrom the doorway, Crystal interrupted with a loving smile, \"Can we join you again?\" She'd clearly heard the last few sentences. I got an approving look from her.\n\nI asked, \"Did you do as I suggested?\"\n\nCrystal nodded. \"Yes, we stood in the hallway and listened to the two of you.\" Paul looked surprised. He started to protest, but I gave him a glare that would melt the polar ice cap, so he shut his mouth.\n\n\"And?\" I posited in a friendly tone, trying to take the heat out of the moment.\n\nTori quietly spoke after a nod from Crystal, \"I love Paul more than this place any day, and, I agree with Paul ... and you. We need outside help - help for both managing our money and working on our marriage. We don't argue well; we end up fighting and then we're pissed off at each other for a week or more. We rarely have sex because we're either so tired from the work we do on this place, or too mad or peeved at each other. Before we bought this place, our making love was so important to us.\"\n\nI turned to Paul and said, \"And what happens then?\"\n\nHis answer was blunt but truthful; \"I get cut off until I get tired of using my right hand, then I apologize just so I can get back in our conjugal bed and have makeup sex. The next day we have another fight and the cycle starts again.\"\n\nI laughed. Crystal laughed. And gradually, Tori and Paul started to laugh. Crystal asked through her chuckle, \"So the only time when you have sex is after one of you apologizes after a fight? Personally, I'd never fight.\" She gave me an obvious wink that made the pair smile slightly at the irony of their situation.\n\nI said, \"That seems a shame. You both say you love each other, and making love is supposed to be a part of the expression of that love ... along with constructive disagreement when it exists. I don't think you really 'make love' enough. I bet you're using sex just to satisfy your lust, not as an expression of love in all its dimensions.\"\n\nTori said softly, \"You're right. We stopped 'making love' shortly after we bought this place two years ago.\" She gestured to the building around us. \n\nI blurted out, \"So, why not sell it and get back on an even keel? Your money arguments center on this inn; without it, you'd remove the big source of discord in your lives and marriage. Of course, you'd have to find other ways to earn a living.\"\n\nPaul looked pensive at that idea. Apparently, the idea of selling the inn had already crossed his mind.\n\nTori said, \"But you two are together and don't fight.\"\n\nCrystal came and hugged me, \"That's because we're new lovers. Everything is intense and exciting, especially the sex - even when it's with someone else.\"\n\nI wondered why Crystal had tossed in the last part of her remark. Paul's head jerked up so fast at the remark I thought he'd thrown his neck out of joint; he wanted to see my reaction to what Crystal had just said. Tori too looked at each of us.\n\nTori spoke first for the two of them, \"What do you mean by that - 'when it's with someone else?'\"\n\nUnabashed, Crystal responded, \"Oh, we mess around ... with other people. Jim's slept with a few others since we met three weeks ago, even spent last night with another one of his lovers - except she's married. He's told me about his adventures - they really turn me on - turn us on in the retelling. You should know, I'm no angel either, and I urge him on.\"\n\nBoth Paul and Tori looked at me and spoke in unison in disbelief: \"Your adventures?\" Their tone of voice revealed in part their inexperience.\n\nI decided two could play that game, so I just nodded and tossed in, \"Crystal got off hearing about the six women I've had sex with last two weeks, and there were quite a few before that as well, even one I rescued, but got shot for helping.\"\n\nPaul and Tori again croaked in unison, \"Six? You got shot?\"\n\nI spoke defensively, \"Well, I didn't expect there to be any. I just met some interesting women; they thought I was interesting, and one thing led to another. Oh, the gunshot - a minor wound - happened when I stopped a pretty gal from getting raped; one of the four men accosting her had a gun. They're all in jail or dead.\"\n\nTori and Paul looked shocked and suddenly wary of me.\n\nCrystal eagerly interjected, \"The gunshot wound was not minor ... and I find the whole thing about Jim hooking up 'hot.' I mean wouldn't you, if you knew each other were having a good time and you approved of the situation? Just think, while you were apart you'd fantasize about how the other was being romanced and sexed. It'd get you all hot and bothered - horny.\" She paused and clearly had everyone's attention so she went on, \"You'd think about the foreplay, the way hands would touch your spouse in intimate places, the whispered words, the way they'd kiss, how the pair would look as their clothing came off one piece at a time, and the anticipation, and then what each other would do with their partner.\"\n\nI decided to jump into Crystal's erotic game. I said in a sexy voice, \"Think about how hot you can make someone with your mouth and tongue - kissing and oral sex, or a light touch in an erotic place in a sexy massage. Think about their partner lying on a massage table as warm exotic oil got rubbed in all over their nude bodies. Imagine watching their fingers caress a breast, and a nipple being sucked into a lustful mouth. Imagine fingers finding your partner's shaft or cleft, and starting to massage their sex in a most stimulating way.\"\n\nCrystal added to my comment, her voice still carrying a touch of enthusiasm, \"Jim has a special way of kissing someone with liqueur - what he did drove me mad the first time we were together. I bet my sexual temperature rose ten thousand degrees. I've never been so horny or so ready to fall into bed with someone. I couldn't get us naked fast enough.\"\n\nI nodded. When I looked at Paul and Tori, they had each started to lick their lips and pant a little at our lurid descriptions and the sexual talk we'd suddenly launched into. I also noticed Paul checking out Crystal who obviously only wore my t-shirt.\n\nPaul looked at me and almost pleaded with me, \"Would you teach me whatever it was that you did to Crystal? Show me? Show us?\" He had the look of a pupil pleading with a teacher for a good grade.\n\nI nodded my head 'Yes.' I added in a humorous tone, \"But, I won't kiss you. I'm not that kind of guy.\" Paul looked horrified, and then laughed. Even Tori laughed. I could tell the anger we'd heard earlier had completely left the room and been replaced with other emotions.\n\nCrystal ignored my humor and continued in her own little erotic world. I could tell she was still horny from our session upstairs. She said, \"After some of that delightful foreplay, you can imagine things getting even more interesting. You'd think of how your lover's skin would feel to someone else. How their lover would touch it with their hands, mouth, lips, and tongue ... and then, sex organs - breasts, pussies, and cocks, and how they'd come together to make love.\" She rubbed my shoulders with one hand, except the gesture could only be interpreted as intimate and sexual given the dialogue of the last couple of minutes.\n\nI looked between Paul and Tori trying to detect any awkwardness or lack of acceptance with the descriptions Crystal and I were making. We were being exceptionally open about foreplay and sex with a couple we'd just met, and whom I detected was pretty na\u00efve. I thought the descriptive words were increasingly turning all of us on.\n\nCrystal was on a roll now, talking as much for her own eroticism as to excite Tori and Paul. She continued, \"And then imagine the sex ... first the oral sex - mouth on genitals, fingers prowling the same area, blowing hot air and cool, and the gentle touch of one's tongue and mouth. As you imagine this for each other you can feel your body temperature rise; you want to fuck so badly but you want to watch, to see your lover pleasured by someone else or to imagine it while they're away with that lover. You know when your lover returns you'll share the same pleasures with them, getting to the same point where you don't want the oral stimulation to change or end because you're getting such rich pleasure from your lover's tongue and fingers.\"\n\nIn a voice dripping with innocence, Tori whispered just loud enough for us to hear, \"We don't do oral sex. But, the way you talk about it ... it sounds so nice.\"\n\nI responded, \"Oh, it's not just good ... it's heavenly; it's a spiritual experience for both the man or the woman. Crystal can deep throat my shaft - just swallow my entire hard shaft; it takes me to another dimension - one of pleasure, joy, and happiness. The head of my cock gets a unique kind of stimulation when she does that. I love it almost as much as her driving my tongue into her body. When I return the favor, I sink my tongue deep in her dripping pussy. I use fingers too - on her G-spot deep inside her. She exudes a nectar that even the Greek gods couldn't have imagined - pure ambrosia; I hate to stop - I could lap at her sexual juices all day she tastes so good. And, then her orgasms start; I feel so rewarded because I can get her in a place where they seem to go on nonstop back-to-back, and I know I'm giving her great pleasure. Sometimes she'll have a dozen or more in an hour.\"\n\n* * * * *\n\nBoth Tori and Paul were licking their lips a lot as our titillating descriptions continued. Neither had raised any objection to the direction our talk had taken; they both seemed to be absorbed in it. Crystal and I were having fun softening up the couple. We'd left any discussion of their finances or the coaching they needed about the inn far behind. I could see the arc the four of us were on for the evening; I hoped they had the fortitude to say 'no' if they didn't want to follow the path we were on.\n\nCrystal swayed slightly and surreptitiously rubbed one of her generous breasts through the material of the thin t-shirt, although both Paul and Tori saw her do it. Her nipple immediately poked through the material. She spoke softly, \"When Jim finds my clit or G-spot he makes it seem so easy, but I've had other lovers and even if they care, they just can't seem to get it right. He knows all the places - erogenous zones - places where he can make a woman leave the planet in pure pleasure. He just seems to use them automatically, as if he's been programmed to bring joy to me.\"\n\nTori crossed her legs, rubbing them tightly together in a clandestine and sexual way. She put one arm across her body and pressed into her breasts. She mumbled, \"Paul wouldn't know a clit if it smacked him across the forehead.\" Paul looked embarrassed at the slight.\n\nI said quietly so I didn't break the mood, \"You have to teach him or get someone to show him what a clitoris is and how to find it - the same with the G-spot and all the other erogenous zones you have. It takes communication and practice, and then he could pleasure you morning, noon, and night - actually giving you hundreds of mind-blowing orgasms a day.\"\n\nCrystal closed her eyes as she swayed next to me; her head tilted upwards as she fantasized the next part of her vocal dream: \"And then, you'd imagine your lover having intercourse with their lover - a hard and beautiful fuck. Cock pushes deep in cunt; velvet sheath tightens around the steel shaft, fucking starts slowly, and then speeds up - the pace varies. Positions between lovers would change frequently so they could explore the different ways to bring pleasure to each other. You're so worked up thinking about it, you can barely stand it. You know your time will come when they return to your bed. Then, it's the two of you about to culminate in the pleasure you bring each other. You share the sexy events you had with someone else, and those heighten the pleasure you will have. You've waited for this moment, even dreamed about it, and even masturbated thinking about it. It's the ultimate mixture of love and lust, of personal greed for pleasure and the overwhelming desire to please your partner. You know an orgasm is the goal for each of you - you each care about the quality of that event when it finally arrives. That supreme pleasure transports you to some other dimension of time and space, warping your head in pure hedonistic desire.\"\n\nI added, \"Good sex is wet and messy. Body fluids are emitted, tasted, swapped, and smeared around everywhere. When you actually start fucking, your initial intent is to have that orgasm as soon as possible. For the woman, that's great; she can have another in thirty seconds and thirty seconds after that - and then they'd come in one continuous and consuming mind-blowing feeling of joy - a union of mind, body, emotions, and spirit.\"\n\nCrystal opened her eyes, kissed me in a sensuous manner on the lips and visibly drove her tongue into my mouth. She then continued: \"Jim knows a woman's body so well, and he knows how to make our intimate time last indefinitely. Before dinner, he made love to me for over an hour - and I mean we were having serious sex the whole time. He made me feel so warm and wonderful, and so cared for.\" Crystal reached down to her Mons with one hand and rubbed the outside of her t-shirt over the swell; the move made the thin material cling to her body, leaving little about her body to the imagination.\n\nAgain, Paul and Tori spoke in unison, \"An hour!\" There was a tone of awe in their exclamations. Paul ogled Crystal's t-shirt and the absence of clothing beneath it.\n\nPaul continued defensively, \"I can only go a couple of minutes.\"\n\nI turned to him and said softly, \"There are techniques you can learn how to control that. I had a lover in Florida a couple of months ago - the one I was with last night - who taught me her version of 'Tantric sex.' It's amazing. In many ways it's a spiritual communion with your lover. You learn to control your ejaculations and your orgasms - as a man, you can have the latter without the former. I think I had six orgasms this afternoon before I ejaculated inside Crystal.\" I closed my eyes as I savored the memory.\n\nCrystal stroked my chest; she added to my comment, \"I had about a dozen or more climaxes - one every five minutes or so. We built up to a really big one at the end. That's when Jim really let himself go.\"\n\nPaul looked at me in awe.\n\nCrystal blew him away with her next comments: \"When Jim and I had two other women with us, he kept us all satisfied in every way possible. My sister even showed us how he could have intercourse with three of us simultaneously. The first time we were together he also did that for an hour; we girls rotated positions over him.\" Crystal kissed me again - a really serious kiss loaded with tongue, invitation, and promise. As she stood on tiptoe to kiss me and I held her the rear of the t-shirt rose and intentionally exposed her. Over her shoulder, I watched Paul's eyes bug out of his head as Crystal's beautiful ass came into view in all its splendor.\n\nTori asked, \"How can we ...\" She looked to Paul and the two of them exchanged glances. She turned to Crystal, \"Would you teach us? You're so ... advanced. I feel like I'm in grade school compared to what you just told us ... what you know.\"\n\nCrystal walked the three paces to Tori, took her face in her hands, and kissed her on the lips. I thought I heard a crackling and sizzle in the night air, the kind you hear just before or after a lightning stroke. Crystal and Tori raced to the same erotic place, particularly when the two obviously shifted to a French kiss with their tongues flailing away in and out of each other's mouths. Tori's hands moved to Crystal's breasts atop the thin t-shirt she wore.\n\nPaul watched the erotic interaction between his wife and Crystal; he uttered, \"Wow. That's unbelievably hot.\"\n\nAfter a couple of minutes of the sapphic kisses, Crystal moved to Paul and repeated the erotic and arousing kisses. She sat in his lap, held his face in her hands, and ran her tongue up his neck. Their first French kiss lit up the sky. Paul gently wrapped his arms around Crystal's lithe body, and soon the two were fully engaged in more hot kisses. Paul's hands wandered lightly over Crystal's ass even pulling up the t-shirt to expose her buns, and then one of his hands started to mold to one of her large breasts, the nipple digging into his palm. Tori watched in abject fascination; the same way Paul had watched her with Crystal. I knew there was at least one further test to the evening.\n\nAs Paul and Crystal separated and they came up for air, Paul looked so happy, and for that matter Tori looked amazed but happy as well. I moved to Tori, taking her in my arms, kissing her tenderly, and making sure Paul could see our interaction. She kissed back with a passion and lust that far exceeded my expectations, and soon we were into pure soul kisses with our tongues dueling with the passions we felt. Paul watched carefully. From the corner of my eye, I saw him smile in acceptance and anticipation.\n\n* * * * *\n\nOn the sideboard in the kitchen sat a bottle of Grand Marnier we'd been offered as an after-dinner liqueur. I poured two small glasses of the liquid gold, and passed one to Crystal. We winked at each other. We simultaneously took sips of our drinks and moved to our new partners: Crystal to Paul, and me to Tori. I moved to kiss Tori again. She looked puzzled, but accepted my kiss, even opening her mouth for the French kiss she felt me offering. I jetted the rich liqueur from my mouth into Tori's mouth, and she continued our French kiss with a lot of tongue, wildly thrusting back and forth into my mouth.\n\nTori's moan of pleasure could be heard by all of us. She drove her body into mine as our kiss expanded. I had a raging hard-on that couldn't be hidden under my thin nylon shorts, and in the press of our bodies together there could be no doubt that I wanted her and that she wanted me. She pushed her groin in my pubes, ground against me, and wove back and forth to increase the stimulation for herself.\n\nAs our kiss stopped we turned to Crystal and Paul. They'd just had the same experience we'd shared. Paul looked at Tori, locked eyes with her, and said softly, \"Could we ... could we try ... things ... with new partners?\" He gestured with his eyes to Crystal and me, and added, \"If they'll have us.\"\n\nTori nodded enthusiastically, as she squeezed my body and pressed herself into me again, her mons pressing against my erection. Crystal caught my eye, and I saw that devilish gleam I was starting to identify more readily. She wanted this too. The vote was unanimous.\n\nI whispered to Tori, \"What we do tonight ... you and me ... you have to promise to teach anything new you like to Paul. We don't want to be the cause of an even newer friction between the two of you. Paul will do the same with anything he learns from Crystal that he likes.\"\n\nI turned, and Paul nodded enthusiastic agreement.\n\nTori said, \"Don't worry. We're stronger than we appeared a little while ago. We don't only want this; we need the two of you.\" She kissed me and ran her hands up my bare chest. After a long kiss, she said, \"Now give me another sip of the Grand Marnier ... your special way. When you did that, I almost climaxed. I bet I've flooded out my panties. That liquid kiss is the sexiest thing I've ever experienced.\"\n\nI kissed her again, taking it slower this time. Even when she knew it was coming, she moaned again. Beside us, I heard Crystal moan as Paul gave her a liquid kiss. I thought maybe I should get a patent on this technique.\n",
        "I told Tori in a soft loving tone, \"Tonight is about you. So as I romance you, don't even think about reciprocating. You enjoy. Milk this for all its worth in terms of your own pleasure.\" Over my shoulder, I heard Crystal saying much the same thing to Paul, as well as confirming that our foursome was a desirable result to the evening. I also explained that much of what I showed her were things we only did occasionally in our lovemaking; it was rare that we used everything together every time we made love. She understood, and with a little nudge urged me to start on her body.\n\n* * * * *\n\nCrystal and I became the tutors to the young couple. We moved into the inn's living room. Initially, we both showed Paul and Tori how to remove each other's clothes, carefully disrobing the pair and allowing them to ply the new skills on us, although Crystal and I each only had on one item of clothing. Tori and Paul found fascination in Crystal's shaved pussy, gently feeling her outer lips at Crystal's invitation. I found Tori's trimmed bush inviting.\n\nWhen all of us were nude, Crystal demonstrated the perfect blowjob on Paul, as Tori and I looked on. Tori watched in amazement as Crystal swallowed every inch of Paul's hard shaft. After a few moments, Tori knelt in front of me and only a few feet from her husband applied the techniques to my steel rod. It took her a while to feel she'd mastered each technique Crystal had shown us.\n\nAfter making sure those lessons were cemented in place, I lay Tori back on the sofa and knelt in front of her. I pulled her panties off and moved her knees apart to fully expose the luscious moist lips of her pussy. Much the way Kim had with me, Crystal and I gave Paul a quick anatomy lesson, and talked softly to the pair about cunnilingus. As I touched and fingered Tori during the lesson, she would jerk and writhe and moan her pleasure as my finger touched her in various places. My tongue and fingers soon were buried in Tori's gorgeous snatch. Indeed, Tori's fluids were nectar. Tori squirmed and groaned in wild pleasure beneath my mouth. When I reached deep into her with three fingers to stroke her G-spot, she climaxed in a series of loud moans that even made Crystal blink with wide eyes.\n\nPaul repeated the process on Crystal, getting into the act as Tori and I watched, and Crystal gently nudged him to one spot or another around or in her pussy. Occasionally, one of us would make a constructive addition to his approach. Crystal instructed Paul about how to find her G-spot, and soon popped off a small orgasm much to Paul's obvious delight. Tori stroked my hard shaft as we watched the pair from our own end of the long sofa. I suggested he come and find his wife's erotic spot. He looked surprised at my request, but moved in front of his wife and gently inserted a couple of fingers into her soaking vagina. Tori closed her eyes, but directed his fingers with a word or two until she too groaned her way into another climax.\n\nWhile Paul had fingered his wife to a climax, Tori had continued to stroke my cock. Crystal had sat next to Tori and sucked on one of her engorged breasts. Before she started, the nipples were erect. After her ministrations, the tits were white hot with passion and desire.\n\nAfter Tori's pleasure, Crystal pulled Paul down onto the plush Oriental rug on the floor. She lay back and spread her legs, inviting him to come to her. He moved to penetrate however, Crystal teased him, grabbing his long shaft and rubbing it around her labial lips and even masturbating him over her pussy. As she did, she described a tit fuck, talking about the techniques for lubrication, and then how the woman should hold her breasts together to form an artificial vagina for the man to fuck. Her description raised the temperature of the room to something that would make the sun appear chilly. Tori was busty and paid rapt attention to Crystal's instructions. I could see she'd want to try that soon.\n\nPaul went to mount Crystal, but she pushed him away. \"Uh-huh. I want you to go down on me. I love cunnilingus - being eaten. I want you to show me how good you are with your tongue and fingers now that you've watched Jim and Tori. I expect at least a dozen orgasms before you get you long tool in my tight little pussy.\"\n\nPaul backed up and lunged so quickly at Crystal's pussy with his mouth that Tori and I both laughed. I whispered to her, \"I think he really wants to fuck Crystal badly.\" Tori nodded with a silly grin of acceptance.\n\nI lay Tori down beside Crystal, and lay in front of her so I could eat her out some more. Crystal and Tori held hands, and sometimes kissed soulfully with lots of tongue. Soon, Paul and I were each giving the women beautiful little pop-off orgasms every minute or two. I suggested a few mid-course corrections for him here and there.\n\nWhen Paul finally sank his shaft into Crystal, I moved to repeat the gesture on his wife - spearing her with my cock. Tori was so worked up; she came almost instantly. She looked pleadingly into my eyes and begged for me to fuck her again at top speed. Tori liked sex.\n\nI shook my head, and explained that a half-hour from now she would understand why I planned to extend things out. She nodded in reluctant acceptance. I started to slowly saw in and out of her pussy, moving to a position where I was sure my cock often dragged across Tori's erect clitoris, or the head of my swollen member scraped across her G-spot. When I felt myself getting near orgasm, I backed off in different ways: stopping in place, pulling out and applying my tongue to her cunt, changing our positions, changing my speed, mind control, or pointing out some element of technique to her husband and Crystal. \n\nTori came in a fit of gasping and moaning. \"Oh, fuck. Oh, fuck. Oh, fuck. I've ... I've never had a vaginal orgasm like this. I mean Paul's gotten me off, but usually when he's finger-fucking me.\"\n\nI described to Paul what I was doing, and how I was sensitive to his wife's clit, the surrounding area, her breasts, other erogenous zones, and to my vocalizations about how lovely she was - comments I genuinely meant. I tutored him in holding off his own ejaculation, watching the surprised look on his face when he had his first orgasm without ejaculation.\n\nAs I restarted my Tantric intercourse with Tori, I heard Crystal coaching her pupil about his technique. I noted how careful she was in her comments to ensure his ego and manhood were unbruised, yet motivating him to attend to her pleasure. She came repeatedly after that. \n\nI showed Paul a series of erotic positions describing how he could stimulate his wife in different ways and bring her more pleasure. As I demonstrated on Tori, she reached that wonderful place that some women never experience where life becomes one continuous peak orgasmic experience. She became a moaning machine and relished her orgasmic state as we continued to fuck in many different ways. \n\nCrystal also reached a pretty hot zone herself. As I'd discovered when Ellen joined us in bed, Crystal found group sex a huge turn on. She whispered to me, \"Will you guys do me at the same time. I'd really love that.\"\n\nI explained about anal sex to Tori, and she looked most worried. As I stroked into her in the doggie position, I gently pushed a finger into her ass to her gasps around a hard orgasm. She returned to her peak state, but protested that she wasn't ready for anything as robust as my large cock. I told her about getting an anal plug, lubrication, and 'practicing.' \n\nCrystal magically produced some body oil Paul had retrieved from their bathroom. She lubed up my cock in front of the pair, and then I slowly sank into her ass. The tightness of that sheath amazed me. I'd lost my anal virginity only weeks earlier when Kim had shown me how to pleasure a woman with that addition to my lovemaking repertoire.\n\nAfter she was sufficiently flexible in her rear, Crystal repositioned, and backed onto me. She lay back on me, and invited Paul to push his cock into her pussy. Seconds later, she was impaled on our two cocks. Paul and I could feel each other's hardness through her perineum as we stroked into her. I worried they'd hear Crystal's shrieks of pleasure in Chicago. I was sure I felt some significant contractions indicating she started cumming over and over. Tori watched the three of us with a look of amazement on her face, particularly at how Crystal relished the double assault on her gorgeous body.\n\nThe three of us could only sustain the double fuck for a couple of minutes. I know I've seen porn flicks where the \"DP\" seems to go on indefinitely, and I realized once again how easily the medium of film can fool us. After we broke apart, we cleaned up, and went back to the partners we started with: Crystal with Paul, and Tori with me.\n\nTori said to me, \"I wonder if I'll ever be up for a double fuck. I know you all got really hot doing it, but ... well, you know, having two penises in me at once ... it's sort of daunting.\"\n\nCrystal sighed from the other end of the sofa, \"Babe, they're cocks, and you should at least try it once ... if you do I guarantee you'll do it again and again. Having two cocks in you simultaneously touches every single erotic nerve ending in and near your cunt, and it blows your mind in the nicest way every time. Even in that short time period, I think I had a dozen climaxes. You'll find that the pleasure rapidly overtakes any anxiety or discomfort you may experience.\"\n\nI kissed Tori and told her not to feel she had to do anything. I explained that she always had a safe word, \"No,\" and that she could use it at anytime and with anybody. I could see that point made her relax a little.\n\nTori and I went back to more traditional fucking. I found myself aroused not only by having a new sex partner, but also by watching as Crystal coached Paul into pleasing her. I found watching my love object being happily fucked by another man didn't put me off in the least; I found it exceptionally arousing. Paul followed Crystal's directions and found extra pleasure in how long he could sustain intercourse without the need to ejaculate.\n\nI realized that the women in my life weren't the only ones who would enjoy hearing about our sexual escapades. I wanted to hear Crystal talk about her adventures with other guys. While Crystal knew about my love life, particularly on the road trip, I'd not heard much about hers. I felt torn for a moment. Would I get hot hearing about her with other guys, or would I find some jealous streak? I tested this thought by envisioning Crystal having sex with some handsome stud, and decided that I felt aroused at the idea and not the least bit jealous. Another of my rules bit the dust. When we were alone, I'd ask Crystal to start on her stories.\n\nThe four of us played on the sofa for another half hour. Fortunately, no one felt shy in terms of performing for the others. We took turns watching each other fuck, suck, and fondle. \n\nI decided to bring my session with Tori to a crescendo with our own 'big' orgasms. After additional foreplay, my pace accelerated - the sound of my body slapping against Tori became a steady rapid beat filling the room with the exciting sounds of our lovemaking. Tori got on the same page and started to pump her hips up to meet my inward thrusts, making happy little shrieking noises with every thrust. \n\nI reached forward to Tori's neck, and gently wrapped one hand around her, even stroking her erogenous zone with several fingers. With the other, I pawed each breast, squeeze her nipples in the way Kim taught me, stroked under her right breast, and pushed into her body at that place along her rib cage. Meanwhile, I directed my cock onto her G-spot.\n\nTori's entire body elevated off the sofa as a massive climax started to erupt from deep inside her body. She arched up into me just as I started to blast a small ocean of cum inside her. I know she felt the first three warm jets inside her. Tori's eyes rolled up in her head just after her peak, and she blacked out, falling back onto the Oriental rug into a near lifeless heap of quaking flesh. \n\nPaul looked worried, but before he could move Crystal stopped him. \"Darling, she's fine. She just had an extraordinary experience. The French call it La Petite Mort - the small death. She fainted from the pleasure, and that's good. She'll come to in a minute or two, and remember she just had the greatest orgasm of her life.\"\n\nI checked Tori, and indeed she was in dreamland. I nodded to Paul. I slowly extracted myself from Tori's quim, and gathered her limp body into my arms so that when she awoke, she'd be in someone's loving care. Two minutes went by, and then Tori's eyes fluttered open, and she gave me a bright smile.\n\nTori said, \"Wow! Did you really just do that to me? Did I pass out?\"\n\n\"Yes, and yes, you did, to answer your questions in order, and I got a 'Wow' out of lovely fuck too. Want to go another round?\"\n\nTori shook her head, \"Give me a few minutes to recover.\" After a pause she added, \"I've never cum like that in my life. Can you always make a girl do that?\"\n\n\"Not always, but there are some places on a woman's body that tend to put her over the top when they're used in just the right way. You're the first person who actually blacked out on me.\"\n\n\"You guys were wonderful. What an inspiration!\" Paul exclaimed with a grin. He reached over and stroked one of Tori's breasts. She gave him a loving smile from within my arms.\n\nCrystal said, \"Now, it's our turn.\" She straddled Paul's hips in a reverse cowgirl position and started to bounce up and down on his shaft, stopping her withdrawal only a fraction of an inch before he would have fallen completely from her nest. On her down stroke, she soaked up every inch of his cock. Her pace accelerated until her hips were a blur, and her eyes were mere slits as the pleasure she felt permeated her body. Paul started to flex his hips to meet every downward thrusts Crystal made. \n\nAmid cries of pleasure, Paul and Crystal came. Paul had stored up torrents of semen, partly due to the erotic scene his wife and I had displayed, so as Crystal's eyes started to open from her pleasure, Tori and I watched Paul's white man juice leaked from where his cock remained buried in Crystal's cunt. \n\nTori said suddenly, \"Oh, wait. Stay together. I'll get towels. You guys really left a lot of fluid in us. Paul always has a lot of cum.\"\n\nBefore Tori could rise from beneath me, Crystal jerked herself from Paul's cock, stood and held her hand over her pussy. She moved to our end of the sofa, and instructed Tori to lay back. When she did, Crystal was on her in a flash, her tongue and lips sucking my juices from Tori's vagina. Paul's eyes got as big as saucers.\n\nTori looked amazed. She asked, \"Crystal, doesn't that taste ... kind of yucky?\"\n\nCrystal looked up at her with a dollop of my cum dripping from her mouth; she said, \"No way, it's good - sometimes great. Salty and a bit like tasty egg whites. Guys can do some things to make it taste better to a woman. Jim will eat me out after he's cum in me; it's a super turn-on.\"\n\nTori asked innocently, \"What changes the taste to make it better?\"\n\nCrystal said, \"Eating fruits, bananas, and honey are a few foods that help the taste, plus drinking lots of water. However, guys that smoke, eat a lot of red meat or protein, drink a lot of beer, or eat onions and garlic can make some stuff that's not as good to taste. After you swallow the cum, it doesn't make any difference and the guys really get off on it ... don't you?\" She looked over at me sitting beside Tori, and I made a vigorous nod of affirmation. Crystal leaned over and cleaned off my shaft, and then went back to eating Tori's pussy. Tori shut her eyes for a couple of minutes as Crystal ate her out. No one talked; we just watched the erotic sapphic act. \n\nWhen Crystal finished and pulled away, Tori enthusiastically said, \"Can I try it on you?\" Crystal reclined on the sofa with her head in Paul's lap and with her pussy hanging out over the edge of the seat. Tori dove into her cunt. A couple of rivulets of Paul's cum already had started down Crystal's legs, and Tori licked at those first before delving into her shaven quim. Crystal groaned and came again as Tori's tongue worked her over. Paul toyed with Crystal's nipples, turning and twisting the erect toys. Tori was a fast study, and quite adept at cunnilingus. Paul looked agape at what a sexual wildcat his plain-Jane wife had suddenly become.\n\nTori broke away for a moment and said, \"Until tonight, I'd never done anything with a woman. I liked kissing you earlier, and now ... this is so exciting, plus what you did to me.\" She turned to her husband, \"Paul, we need to add another woman to our lovemaking once in a while. It's special, and I can see you certainly enjoy it.\" Tori went back to lapping up her husband's cum.\n\nJust as Tori finished, her mouth still carrying some of Paul's semen, Crystal stopped her, told her not to swallow, rose to meet her, and started to French kiss with her, swapping the cum back and forth between them. Paul and I both got hard immediately. After she was through, Tori looked at Paul and said, \"You taste pretty good. I guess the pot roast hasn't had a chance to screw up your flavor yet.\" We all chuckled. \n\nAs we came down from our sexual highs, I talked about 'after-play' and it's importance in lovemaking: just like foreplay only it's afterwards. Using Tori as my subject, I showed them a couple of fine things to do to your partner that helped bring you even closer together and lock in the memory of the erotic lovemaking you'd just shared. \n\nI pulled Tori to me, and we started kissing again. As I'd been taught, I just ignored the after-taste of Paul's cum on her mouth. I held Tori close, stroked her body in the special ways Kim had shown me, and whispered words of affection to her. \n\nWe cuddled with our partners and talked about what had happened between the four of us. Crystal and I didn't want to leave behind a couple in any distress or prone to restart their argument. The two were amazed at what they'd done, and felt as though they were soaring into a joyful new dimension of life together. I insisted that Paul and Tori make love together when we left, and talk openly about the sexual things that had happened and how they felt about watching their partner with someone else. We set a time to gather for breakfast.\n\nCrystal picked up her t-shirt and boots from the floor and sashayed out of the living room and up the stairs to our room. I followed in a similar state of undress, watching her sexy ass sway in front of me. My cock was already getting hard again. From how the two of them lunged for each other, I felt that the Binfords were going to make love on the sofa almost immediately.\n\nAfter we got to our room, I talked to Crystal about revealing ourselves to the young couple. She agreed, so I retrieved a copy of the People magazine that had the article about Crystal and me from my saddlebags. Still nude, I snuck down the stairs to the kitchen; I left the magazine in a prominent place on the kitchen table. \n\nI couldn't help sneak a peek at the two of them as they made love in the living room. Tori had straddled Paul; he was sucking on her breasts while his cock moved slowly in and out of her cunt. The couple oozed love and sex appeal simultaneously. I stroked myself a few times at the hard core-pornographic scene and the memory of what had transpired over the past two hours. I went to our room to made love to Crystal.\n\n* * * * *\n\nIn the morning, Crystal and I arose, dressed, and went down to the kitchen. Tori had apparently been up for hours. She came and kissed us both with passionate embraces. She bubbled over with enthusiasm, \"Last night was so wonderful. Thank you both. I feel ... reborn ... that's it. I feel as though someone exploded the bubble that had been limiting me, and now I'm feeling freer than I've ever been in my life. Thank you. Thank you. Thank you.\" She hugged and kissed the two of us again."
    ],
    "authorname": "TLCgiver",
    "tags": [
        "romance",
        "incest",
        "group",
        "threesome",
        "polyamory",
        "love",
        "motorcycle trip",
        "harley",
        "cross-country",
        "hero"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/road-trip-pt-03"
}