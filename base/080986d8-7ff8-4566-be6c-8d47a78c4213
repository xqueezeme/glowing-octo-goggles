{
    "title": "Duty",
    "pages": [
        "This is an autobiographical story, with just a few name changes, and maybe a few slight memory errors, as it has been a decade. The subject matter is decidedly dark, even by my standards, so you have been warned. I decided to put this down after a discussion in a comments forum. This is deliberately in present tense because that is the appropriate voice here. Special thanks to sbrooks103x and Crkcppr for editing and beta reading it for me. Any remaining errors are entirely mine - probably added after their assistance. And thanks again to everyone for the encouragement and support. \n\n***** \n\nDUTY \n\n*** \n\n\"You don't have to do this.\" \n\nShe doesn't mean that. Not really. This is something we both know has to be done. I have a duty here. \n\nI carefully scrape the last of my mustache off with the razor and rinse it off. It's a straight razor, old school, but when you take off facial hair like mine, it's a lot better choice than one of those Schick whatever-the-hell-they-are-calling-them-now with the five blades. I've been on relaxed grooming standards for almost a year, so the long, hooked, Winnfield mustache was pretty thick. Can't have that in dress uniform though. \n\n\"Yeah. I know.\" \n\nShe shifts against the doorframe where she's standing, watching. There's a little suppressed fear in her face. She doesn't want to think about this, she hates thinking about this. \n\n\"It'll be fine.\" \n\nShe looks away. This is harder on her than it is on me, I think. \n\n\"It will be, I'll be back this evening and we'll get dinner.\" \n\nShe gives a weak smile as she follows me into the bedroom. \"How about if we just get pizza, the kids would love that.\" She's trying to be positive and upbeat, but it's not easy. \n\n\"That will work.\" \n\nShe watches transfixed while I pull on my shirt and tie, then my jacket. Then she walks over to her dresser and picks up a small silk sack. It's just a little over an inch by two inches; it's edged in black ribbon and has a tiny black silk drawstring. She sewed it last night, by hand. This isn't something you use a machine to make. \n\nHer breath catches as she hands it to me. She obviously can't think of anything to say that won't make things worse. \n\nWe make small talk, but it's just filler until I see the black car pull up out front, and I have to leave. She hands me three brand new, precisely folded, starkly white handkerchiefs to tuck in my inside jacket pocket as I walk out. \n\nPrivate Malone is just sliding out of the driver's seat when I come down the steps. He barely has time to stand up before I open the passenger door. \n\n\"Morning Private.\" \n\n\"Morning Sergeant.\" \n\nI see her staring out the window as we pull away. I pretend not to see her, she pretends to believe I don't. There's a bit of silence before he starts talking. \"We're meeting the van at the church. I figured you'd want to get there ahead of time to take a look.\" \n\n\"That works. Is the van on schedule?\" \n\n\"Sergeant Callahan said to tell you he has everything locked and cocked over there.\" \n\nI nod. If Callahan says he has it, he has it. \n\nIt's damn near a two hour drive to the church and Private Malone can't make it that far without talking. \"The Sergeant Major said you didn't have to do this.\" \n\n\"We all have to do this. It's part of it.\" \n\nMaybe he'll understand. If he does, it will make him a better Soldier. \n\n\"But he said you volunteered.\" \n\n\"Not really.\" I don't want to make myself out to be better than I am. I didn't seek this. I just didn't hide from it. \"They asked if I was willing to do it, and I don't have anything more important.\" \n\nActually, there isn't much that qualifies as \"more important.\" \n\nThe conversation dies after that. Even he can't find anything to talk about. For a guy who can talk for 20 minutes about the various cures for ice cream headaches, that's saying something. \n\nAs we get closer to the church, I can see the neighborhoods grow bleaker and greyer. I wonder for a minute if it's my imagination, but from the graffiti, it pretty clearly isn't. We're on the outskirts of New York City, in a particularly run down area. Everything seems grey and dark, even though, against all the oppressive weight of the day, the sun is shining. \n\nAs we roll to a stop in front of the church, I realize it's even worse than it looked. \n\nThe church is a small square structure topped by a slightly askew steeple, with peeling white paint and steep steps leading to a narrow cracked door. Surrounded by an eight foot fence topped with barbed wire. It looks like all it needs is a machine gun nest. \n\n\"Stay here.\" \n\nMalone looks around and gets out to stand by the front of the car. There's no reason to ask why I want him there. It'd be tough to drive the car back without wheels. \n\nThere's a damn electric pole right in front of the gate, if the gap were any closer I'd have to turn sideways to slide past it into the church. That will be a problem. \n\nI walk up the uneven steps to the front door and walk in. It's just one big room, all decorated with black ribbon and dark purple flowers. A balding middle aged black man in a black suit is doing something at the altar and turns to watch me walk up. The wooden floor feels unsteady, sort of soft under my steps. \n\nThe Preacher eyes my uniform critically for a moment. I'll get no credit from him for doing this. Like me, he sees it as my duty. He doesn't waste time on introductions. \n\n\"You see the electric pole?\" \n\n\"We can get by it, it won't look pretty, but we can.\" \n\n\"Can't ask for more.\" He goes on to point out the arrangement, where the casket will have to be set. I notice an alcove off to the side of the altar with a saxophone leaning in the corner. He follows my gaze. \n\n\"We don't have a piano, but his Uncle Charlie said he'd come play. He's pretty good, used to play in the clubs.\" \n\nI want to say something pleasant, something helpful, but all that comes out is, \"That will do.\" \n\nHe stops for a second, thinking. \"Do you need him to play 'Taps'?\" \n\n\"No, we have a bugler, he'll be waiting graveside with the firing party.\" \n\nI can tell by his face he doesn't like the words \"firing party.\" I can sense that he really is a man of peace. Besides, it's a reminder of how it all happened. \n\n\"Oh, yeah, I guess you would.\" \n\nWe finalize the last few details of how this is going to be done before I head back out. \n\nMalone is talking to an older gray-haired black man in a black suit. He's obviously here for the funeral, but he has a red and black brocade vest on under his suit jacket. From my days in band in junior high school I recognize the smell of valve oil. \n\n\"You must be Uncle Charlie.\" \n\nHe grins and extends a firm, calloused grip. \"The Private here said you were the man.\" \n\n\"I am for now, anyway.\" \n\n\"I was telling your Private here that the car will be fine out here today.\" He paused, shaking his head with a slight smile. \"Wouldn't try it tomorrow, but today? It'll be fine.\" He glances over at a small grocery across the street where a large man is sitting in chair. He wasn't there earlier, I'd have noticed. There's an axe handle leaning against the wall behind him. \n\n\"Thank you, Sir. I appreciate it.\" There's something about him, the way he looks at my uniform. \"You served?\" \n\n\"1967 to 1968. Pleiku in 'Nam.\" His face darkens. \"Different shithole, same shit.\" He eyes my ribbon rack critically. \"Guess you've seen a few shitholes.\" \n\n\"A few.\" \n\nHe nods toward Malone. \"He said you didn't have to do this.\" \n\n\"Like I told him. We all have to do this.\" \n\nA terse, joyless smile. \"Thanks anyway. You have a bugler?\" \n\n\"He's already at the graveside.\" \n\nHe nods and I can't tell if he's relieved or disappointed. Maybe a bit of both. \n\nWe wait silently, until the van shows up with my casket detail; I get them arranged and we go over the issues. None of them are happy about the electric pole, but we'll do the best we can. \n\nFamily members and friends begin to pour in, funeral black clothing is the order of the day, a few sparks of color in pins or necklaces, but not much. My detail is waiting in the van, but I'm standing near the gate. A reminder of everything. A few of them stare curiously, especially the kids, but not just them. It's hard to believe this many people will fit in there. I wonder if the Preacher will remember to keep the first pew on the left clear for us. If not, we'll adapt. \n\nAfter the stream of people stops, Uncle Charlie and I just stand together. He glances over at me with a raised eyebrow. \"Don't mind the stares, they don't see many Soldiers around here. Or white people. You're probably used to it.\" \n\nI smile at that myself. \"Pretty much.\" \n\nWe stand for a bit longer, watching a thin veil of clouds sliding over the sun, leaving it shining bleak and pale. The world seems to have finally figured out what kind of day this is. My assistant brings the detail over from the van, pulling on their white gloves. They form up and we wait about five minutes more. Right on schedule. \n\nThe hearse rolls to a stop in the perfect place. We have to wait for the immediate family to get organized. A couple of Aunts have the two kids in hand, but the Widow is shaky at best. Captain Keisha Parrish catches my eye and shakes her head just a little. She's the Casualty Assistance Officer and she's telling me the Widow isn't handling this well at all. After hearing the story, I didn't expect her to. A wizened, dignified woman notices the exchange between us, and moves to help the Captain get the Widow up the steps. \n\nThere's supposed to be an OIC here, a Brigadier General from what I've been told, but he isn't here and I can only wait so long before we start. Bringing the flag-draped casket past the electric pole and up the steps is less of fiasco than I'd expected. The hard part will be taking it out. \n\nAs the NCOIC, I trail the casket into the gloom of the church. Technically I'm there to give orders, but I don't say a word. We've drilled over the last few days and the detail is following the cues of my assistant in the front. We're moving at \"Slow March,\" half the speed of a standard march. There's a dreamlike quality to it all. As if it's taking place under water. It'd all be silent except for the floor; it groans with a soft dying sound with every step of the detail. I know without thinking that this sound will stay with us. Every man and woman on the detail will remember it forever. \n\nWith the casket placed and Honors rendered, my detail and I slide into the empty pew. The Preacher remembered it after all. \n\nIt's a sea of black faces. The Soldiers of my detail are the only white faces here. I'm the darkest one of us, and that's mostly sun blasted tan. \n\nOut of the corner of my eye, I can see the Widow. Despite her family, despite Captain Parrish, she is as alone as it is possible to get. Even the family seems to unconsciously lean away from her, as if they are afraid to catch something. \n\nI study the pictures of the Soldier to either side of the casket. I don't know him, I've never seen him. Neither has any of my detail. But then, that's why we're here. That's why the family shrinks from the Widow. That's why the pall over this funeral is even darker. \n\n*** \n\nHe was a Sergeant First Class on his second tour in Iraq, unexpectedly extended with no notice. Stationed up by Mosul. A real hellhole. \n\nI learned the rest from Captain Parrish, it had all spilled from the Widow in a horrible instant in her living room. Keisha wasn't supposed to talk about it with anyone, but some burdens are too heavy to bear alone, and we'd served together in other places. \n\nShe'd been angry, alone, and scared. The last time her husband had deployed, three of his squad had been killed and she'd seen their families crushed by the loss. It ate at her. She irrationally blamed him for the feelings. They tried to talk when they could, but every talk ended in an argument. He was too distracted to care about her. That's how it felt anyway. \n\nHe was probably too concerned with surviving the next day. \n\nShe was angry, alone, and scared. Maybe if she'd talked to a chaplain or a counselor things would have been different. But she hadn't. And it wasn't \n\nIt started at, of all things, a church picnic. A charming guy; funny, a good listener. He was harmless, until he wasn't. She met him for a couple lunches and he fed her compliments. Eventually, of course, it happened. She wasn't thinking clearly, because she did the one thing she'd always thought she would never do. And as disappointed in herself as she was, she was still angry and fearful, though she didn't feel so alone. So began months of surreptitious meetings, though she certainly wasn't as discreet as she thought. She was as angry at herself as she was at her husband, and decided she needed to have it out with him. She wrote a letter, written entirely in one drunken evening, blaming him for everything, revealing the affair. \n\nWhen her husband finally managed to reach a phone and call, it all boiled over. Over his protests, she exploded at him, demanding a divorce and slamming the phone down in fury. \n\nShe regretted it almost instantly, but there was no way to take it back, no way to even call back and try to talk calmly. \n\nAcross the world, an oddly calm Sergeant First Class walked to a reeking brown and white porta-jon, sat down inside, stuck the muzzle of his M4 in his mouth and pulled the trigger. \n\nThey can't afford to ship new porta-jons in when this kind of thing happens so they take them away, clean them up and quietly slip them in somewhere else. Next time you're in a porta-jon in a warzone, look up, if there's a small hole in the top - probably near the back third of the roof, you'll know. Sometimes you'll find two. \n\nThe Widow, not knowing she was one, waited for him to call, so they could talk, maybe figure something out. Instead, a Colonel in his dress uniform appeared at her door; along with a Chaplain. \n\nI don't know how the details got out - maybe he had a friend in the unit, maybe people just pieced the suicide together with her not-so-discreet activities. It doesn't really matter. In the end word got out. \n\nPeople knew. The guy? He got in his car and headed out. I never found out what happened to him. \n\nThat's why we're here. Units don't bury their own suicides. Suicide is contagious within a unit, less so outside. I don't think anyone really knows why. Maybe it's the kind words, maybe the imagery of the funeral. I don't know for sure, but it's true. So units ask other units to perform the last Honors for their suicides. That's how we ended up here. \n\n*** \n\nI listen to the saxophone for a bit. Uncle Charlie really is good, better than I'd expected. The female Soldier sitting next to me is shaking - we're crammed in here shoulder-to-shoulder, so there is no hiding it. There are tears tracing down her face. Without saying anything, I reach into my jacket and pull out one of the brand new handkerchiefs and hand it to her. \n\nHalfway through the service, the Brigadier General arrives and slips in. He tries to do it without causing any problems, but he's given away by the creaking of the floor. \n\nAs soon as I see him, I know we have a real problem. Somebody, probably at some protocol office decided that a black officer is the best choice. They probably figure that he has something in common, or at least that he looks like the family. And that's the problem. He's damn near an exact match for those pictures up front. \n\nCaptain Parrish notices it too, but so does the Widow, who looks at him with horrified fascination. She spends the rest of the service shooting looks at him. \n\nThe procession out goes well. Captain Parrish blocks out the Brigadier as well as she can, forcing her way between them and preventing him from talking to the Widow. \n\nWe manage to take the casket out under a now iron-grey sky in a dignified manner, despite the electric pole, and load it into the hearse for the all too short ride to the cemetery. \n\nStaff Sergeant Callahan meets me there while the details self-organize. We've all put on sunglasses despite the clouds. His firing party and the National Guard Bugler are at the right distance, posed like statues. \n\nI hand him the silk bag my wife made and he carefully puts the three polished brass rounds into it, closes it and hands it to me. It will be placed inside the folded flag. It'd be nice if the rounds were from the Salute, but there's no realistic way to do that in a timely manner. \n\nThe family arrives with the hearse and the Brigadier. In this slightly better light, the resemblance between her husband and the Brigadier isn't as clear, but it is too late for the Widow. She's made the connection in her mind and it won't go away. \n\nI can finally hear the Brigadier speak. Somebody upstairs made a serious error in judgment; his voice is cultured, the result of expensive schools and growing up with money. His skin color might be right by somebody's standard, but he has far less in common with the people here than I do. He's probably never even seen a food stamp. And the family clearly senses that, and resents it. A rift has opened that only seems to widen with every step. \n\nThe graveside military service is pretty simple on the surface. The Preacher speaks for a bit, then there's the firing party Salute, followed by 'Taps,' then the folding and presentation of the Flag. \n\nIt's also one of the hardest things in the world to do. \n\nI can't even hear the Preacher. He's facing away from me and I'm too busy watching the Widow fall apart. \n\nWhen the Preacher is done, we step up and render Honors. My detail holds the Flag suspended tightly over the casket while I hold the hand Salute. \n\nI can hear Callahan commanding the firing party. \n\nThe first shot rings out and I watch the Widow flinch and cringe. The second shot jolts her as if she's the target. When the third rings out, I know. \n\nShe isn't hearing the Salute of the firing party. She's hearing the plastic-muffled sound of a single M4 shot in a latrine half a world away. Again and again. \n\nShe fights to recover herself all through the playing of Taps, but she's only partly successful. \n\nMy detail folds the Flag perfectly, and the black silk bag with three polished rounds is slipped under the last fold. After I receive the colors, I step over to transfer them to the Brigadier, and realize he isn't handling this well either. He looks lost, and I quietly have to remind him of the procedure. Render Honors, accept the Flag, and allow me time to render Honors, then step to the Widow. \n\nHe falters but gets it together and manages until the Widow recoils from him, almost falling out of her chair. He steps closer and she starts shaking almost uncontrollably. He's supposed to move to the next relative in line, but he seems to have forgotten that, and stays where he is. \n\nCaptain Parrish shoots me a pleading look, but I'm already stepping up, rigidly, stiffly. \n\n\"Sir.\" \n\nHe looks at me. \n\nI manage to get him to transfer the Flag back to me and I turn back, expecting to move down the line. As the Brigadier steps back, the Widow straightens up and reaches for the Flag. I look nothing like her lost husband and that makes all the difference. \n\nI pass the Flag to her, with the Words. \n\n\"Ma'am, this flag is presented on behalf of a grateful nation as an expression of appreciation for the honorable and faithful service rendered by your loved one.\" \n\nAfter my final, glacial Salute, things finally go smoothly and the funeral finally, mercifully, comes to an end. \n\nThe Brigadier practically runs to his vehicle and driver, with the merest scattering of sympathetic words. The Bugler, a National Guard Master Sergeant, has come up, gripping his ornate silver trumpet, and we watch in distaste, removing our gloves. A small, slightly stooped figure walks up on my other side, lips pursed, head shaking. We aren't the only ones looking, most of the crowd is and this is the kind of thing that leaves a bad impression. ",
        "The old woman straightens herself up and looks me in the eye. \"So. Does your group have to go now too? We're having a small reception in the basement of the church. We have chicken and biscuits, and sweet potato pie.\" She's a bit formal, concerned maybe, that I don't understand what's going on, that I can't feel the slow anger and resentment building. \n\nWe're supposed to head back - it's a two hour drive and schedules need to be met. Callahan has to go - the rifles need to get back to the Arms room. \n\nI glance over at the Bugler. \"If you said sweet potato pie, I believe we have some time.\" \n\nShe smiles a genuine smile. \"Althea. Great Aunt.\" \n\n\"Todd Doerhing. Please allow me to walk you to your car.\" I extend my arm and she takes it graciously. \n\n\"A gentleman.\" \n\n\"Not really. I'm not an Officer, just an NCO.\" \n\nShe looks at my left hand. \"Too bad you're married.\" \n\n\"It is at that. I imagine you're serious case of trouble.\" \n\nShe chuckled softly, wickedly. \"I was thinking of a certain great granddaughter of mine. But I was hell on wheels at one time. And I just might have had a taste for white boys on occasion.\" \n\nThe reception is much more pleasant that I could ever expect. Uncle Charlie and the Bugler apparently managed to find a drummer somewhere and the resulting blues and jazz are quite remarkable. We stay a little over three hours, and Private Malone ends up with the phone number of a certain great granddaughter. The sweet potato pie is unbelievable. \n\nBut the Widow stays in the shadows, hollow-eyed and silent, despite all the efforts of Captain Parrish. \n\n*** \n\nJust as I reach the top step, my wife opens the door. Her eyes are a little red, but she'll never admit to crying. I hand her one of my two handkerchiefs anyway. \n\nShe been my \"with your shield or on it\" girl for twenty years. We made a pact: I promised to never get taken alive, she promised to never cry in front of cameras if I die. She's sworn to wait until she is sure she has a live feed and call on every Soldier to get revenge for me. \n\nThe funerals hurt though. She's used to me disappearing to some corner of the world, used to me coming back without telling her what's happened. But the funerals are constant reminders that I'm human too, that I could be the one that isn't fast enough, sure enough, or lucky enough. \n\n\"Everything go okay?\" \n\nI explain about the funeral, the Widow, the Brigadier, even Althea. She smiles at that; she has an Aunt exactly like her. \n\nLater, after pizza, after the kids are asleep, we seek each other out, trying desperately to remind each other how we feel, how we've always felt. \n\n*** \n\nTwo weeks later. A frantic pounding at the door. My wife opens it and walks Keisha in. She doesn't really care for Keisha much - she isn't jealous in the traditional sense, she's just jealous of the time we have together. But she has her arm around Keisha and it takes me a second to register a gasping, quavering sound. \n\nMy wife gets her set down on the couch and we wait until she catches her breath. \n\n\"She's... she's dead. I went down to visit and they told me.\" \n\nUnlike me, unlike everyone else, the Casualty Assistance Officer stays on the case, keeps on helping the survivor. \n\n\"She seemed better just yesterday. She was talking about the future, talking about the kids.\" \n\nMy wife calms her and nods her head toward the entryway closet. My dress blues are in there. I go and pull the last pristine handkerchief out and hand it to her to give to Keisha. \n\n\"She sent her kids over to her sister's so she could clean, she said. Then she took all the pills she could find at her house, and drank most of a bottle of vodka.\" \n\nKeisha stays on the couch for the night and my wife and I sleep in the giant easy chair next to her. It isn't the most restful place. But sometimes there are more important things to worry about than sleep. \n\n*** \n\nPost Production Notes: This is why I have a low tolerance for cheaters and why I hate the sound of a creaking wood floor. I know that a sister took the kids in, but I never heard what happened to the snake who triggered all of it. I'd like to think Karma caught up with him. But I don't know. \n\nI had other funerals to deal with, and in the worst of them, I found myself handing a folded Flag to a nine year old boy, because his mother couldn't handle it. The boy could, perhaps realizing he was now the man of the house. \n\nA sharp contrast, I think, between that boy and the \"man\" who destroyed a family. \n\nI tried this story in standard past tense, but it lost much of the feel, lost much of the impact."
    ],
    "authorname": "Todd172",
    "tags": [
        "cheating",
        "consequences",
        "military",
        "funeral"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/duty-2"
}