{
    "title": "The Freebie",
    "pages": [
        "Authors Note, huge thanks to AwkwardMD for all of her support and editing on this story. Without her none of this would have been possible.\n\nAlso, please, creating in a vacuum is hard. If you like (Or hate :) ) anything in this story then please let me know. I would love to hear from you and hear your thoughts. Emails or comments very welcome.\n\nMaria April, 2020.\n\nThe Freebie.\n\nI looked down in awe as my rock hard cock pulled back out of Rebecca's asshole. Her low moan was a cross between pleasure and pain. So erotic. The entire length of my cock was coated in lube, the same thick lube which was smeared around the bottom of her ass crack, her pussy and some of her muscled buttocks.\n\n\"Are-are you sure this is okay?\" I gasped, trying my hardest to concentrate and not just cum straight away.\n\n\"Mmhmmm,\" Rebecca said beneath me.\n\n\"Have you done this before?\" I asked again, still slowly withdrawing my glistening length from her ass.\n\n\"Once or twice, I'm not sure. Never on a first date, though,\" she said looking back at me with an expectant smile. The smile was so pretty, even given her prominent nose, that I had to lean forward to kiss her. The motion of leaning forward pushed my wide cock further into her asshole, and she closed her eyes as pain flashed across her face. I kissed her anyway, and after a moment of delay her tongue met mine.\n\n\"Oh, was this a date?\" I asked, with my teasing smile.\n\n\"I-I guess not,\" she said, looking forward. Then she added, \"Maybe next time,\" and rested her head down on the pillow.\n\n\"Next time? Are you asking me out on a date?\"\n\n\"Mmhmmm,\" she said, her eyes closed, her face impassive.\n\n\"I thought freebies were supposed to be one-offs?\"\n\n\"Do you always talk this much? And, what happened to not kissing me?\" Rebecca asked, in almost a whisper.\n\n\"You looked too pretty not to kiss.\"\n\nShe smiled, then winced and hissed out, \"Fuck, you are way too big for this. Your girlfriend was right.\"\n\n\"I know! Nobody lets me do this,\" I said.\n\n\"I can see why,\" she groaned.\n\n\"Ready to go again?\" I asked softly.\n\nShe nodded, then hissed, \"Fuuck,\" through gritted teeth as I pressed myself inside her bowels once more. \"Oh fuck, fuck, fuck, fuck!\"\n\nRebbeca's hands gripped the pillow, digging her long fingers into the soft material and clenching. Then she reached for the small tube of lube that I'd bought. She squeezed a huge dollop onto her hand and reached back to her ass.\n\n\"Pull out?\" she asked, looking back at me with her beautiful blue eyes.\n\nI did as she asked, slowly. Not wanting to overload myself and cum too soon. Her hand found my shaft and wrapped itself around me.\n\n\"All the way?\" I asked.\n\n\"No, keep the tip in, I can't wanna go through the first bit again.\" She closed her eyes again. \"Shit, I can't believe I'm doing this.\" she said, as she worked her lubed hand up and down my exposed length.\n\n\"What? Fucking a fan?\" I said, before I could catch myself.\n\nShe smiled weakly, then her eyes became distant and then looked forward at the pillow. \"You aren't a fan. What do you know about swimming?\" Her voice was unfocused. \"My ex-husband was a fan, and that was a disaster.\"\n\n\"What am I then?\" I asked.\n\nDespite her detached body language, her hand was still working up and down my length. \"Not sure.\" she said. Then looking back at me she smiled. \"Very lucky.\"\n\n\"Lucky?\" I repeated, with a laugh.\n\n\"Who gets to fuck the number one on their freebie list?\" Rebecca asked.\n\n\"Ass fuck, you mean,\" I corrected.\n\nShe closed her eyes and moaned. \"I want to taste you.\"\n\n\"Lets see if you can take it all the way in first.\"\n\nRebecca moaned, and when her hand slid away she brought it to her mouth and sucked her index finger into her mouth. Then her middle finger. Then she must have realised I was watching and stopped.\n\n\"I'm not like this normally,\" she said looking back at me, the finger no longer by her mouth.\n\n\"I'm in no position to judge,\" I said softly, as I started pushing myself back inside Rebecca's anus.\n\nIt was so hard to keep control of myself, she was so fucking tight. It was as if she was crushing me in her lubed fist. Despite that tightness, my cock was sliding in steadily thanks to the vast amounts of lube Rebecca was putting on me. But it wasn't just about the sensations, this was proper anal sex, with a proper beautiful woman, with the lights on. The kind of sex that only exists in porn. There was also the fact that this was Rebecca Harringdon, an Olympic Medalist, and we'd only met three hours ago.\n\nYet it was real. Rebecca wasn't perfect. The bottom of her whole ass crack had already been an angry red before I'd even touched her. She must have been sore, but she didn't comment or mention it. Perhaps she always got that way after a night of dancing. Her pussy was pink, puffy and messy. Before it had looked so much bigger than her ass, but now it seemed to have shrunk. The inner lips of her labia formed a messy hole that seemed to be begging to be fucked in place of her ass.\n\nDespite how tall and broad she was, the width of my cock dwarfed the size of her ass. I reached down and parted her buttocks. I couldn't see her asshole or her ring, just the angry red of the depths of her ass crack and then the glorious glistening length of my cock.\n\nX\n\n\"You're Rebecca Harringdon!\" I said, as she approached the VIP rope at the entrance to the club. She was teetering on jeweled high heels, the tops of which were just covered by the flared legs of her white jumpsuit. The jumpsuit, with its lace panels covering her upper body, made her look enormous. Not in any way fat but tall and broad-shouldered, looking every bit the Olympic-caliber athlete that she was.\n\nRebecca turned to her three friends, one older woman and one younger along with a handsome young man with a very of-the-moment haircut. All three were much shorter, and far more traditionally beautiful than her, with her famously prominent nose and features. Her friends looked impressed that I'd recognised Rebecca, and then there was something else; a look in their eyes that said they were both annoyed and relieved that I hadn't recognised them.\n\nMy head doorman leaned over my shoulder and whispered, \"He plays for city.\" I looked at my doorman, then at the boy, and then back at Rebecca who'd moved closer to me ahead of the other three, and I realised she was a good two inches taller than me, which made her around six foot two.\n\n\"I never get recognised,\" Rebbeca said, with a huge giggly smile. \"Are you a swimming fan?\" Her eyes moved over me, I assumed to see if I had the distinctive swimmers physique.\n\nI smiled and let her look. In my dark, three-piece, pinstripe suit, I knew I was well dressed, though in that moment I regretted not ironing my shirt. \"No, you were top of my freebie list,\" I said, directly to her. Wondering how she'd react. Wondering if she'd slap me, or turn and leave, or laugh.\n\n\"What?\" she said, looking at me her head tilted to one side as she tried to think. Her three friends broke into smiles and brief laughter, which caused Rebecca to look back at them and repeat, \"What?\"\n\nI laughed. \"You've never heard of a freebie list?\" I said. I looked at my doorman. \"She's never heard of a freebie list.\"\n\nThe head doorman chucked playfully, as this was the kind of customer interaction that we both lived for. \"I thought everyone knew what a freebie list was. It was on Friends and everything,\" he said. \"Anyway, I can't believe you had her on there.\"\n\nI grinned. \"Top of the list,\" I said to him, at the same time as I made eye contact with her.\n\n\"What's a freebie list, then?\" she said, smiling and putting her hands on her hips. \"What am I top of?\"\n\n\"I can't believe you've never heard of one,\" I said with a grin, \"Its a list of celebrities that you are allowed to sleep with, and your girlfriend can't get mad.\"\n\n\"Oh god,\" she said, and then folded down into herself in an embarrassed giggle.\n\nThe older woman, a beautiful brunette, who was at least a foot shorter than Rebecca came up and smiled at me. \"Seeing as you have Rebecca as top of your fuck list,\" she said, \"how about you get us all in for free?\"\n\nI looked at Rebecca, whose blushes seemed to be even deeper, and she giggled again.\n\n\"Sure. You can have a booth, and some drinks.\" I said.\n\n\"And champagne?\" the brunette asked.\n\nI grinned.\n\n\"I said she used to be on my freebie list,\" I fired back.\n\n\"What changed?\" the brunette added.\n\nI laughed. \"The London Olympics were a long time ago.\" Rebecca looked slightly offended by that, so I added, \"Seeing you in that outfit puts you back in the running, though... do you count as a celebrity anymore?\" My smile and my eye contact let her know I was teasing playfully with her.\n\n\"I do TV commentary,\" she said, standing taller again.\n\n\"There you go! That counts! Back to the top!\"\n\n\"Champagne then?\" the brunette interrupted.\n\n\"I'd need a kiss off Rebecca first before we could do champagne.\" I teased.\n\nRebecca turned bright red again and giggled.\n\n\"How about a kiss from me?\" the brunette asked.\n\n\"I'm afraid you aren't on my list,\" I said, playfully.\n\nBefore I could say anything else, Rebecca stepped forward and kissed me full on the mouth. Her hands cupping both of my cheeks, and her tongue forced itself into mine hungrily. I was shocked, and it took me a moment to respond, but as soon as my tongue found hers she pulled away.\n\nI was almost blushing as Rebecca looked at me. She had an almost-fearful look on her face. Her big blue eyes seemed to be looking for any sign of rejection or revulsion, but I just smiled.\n\n\"Champagne it is,\" I said to the brunette.\n\nI keyed my radio, \"Laura, could you come to the front door and take some VIPs through to booth five? They haven't booked.\"\n\nX\n\n\"Oh fuck, is it all the way in?\" Rebecca said through gritted teeth. She looked back at me, with those big eyes almost pleading for the answer to be yes.\n\n\"About half way,\" I said, honestly.\n\n<br >\"Fuck, I am going to be ruined!\" She moaned and put her head back into the pillow. I reached up, grabbed one of her hands, and moved it under herself to her pussy.\n\nShe got the idea and rubbed over herself.\n\n\"My pussy feels totally different, like so much smaller,\" she said to herself as her fingers explored her folds. \"Like you've crushed my pussy.\" She moaned. \"How can some girls take a cock in their ass and pussy at the same time?\"\n\nShe slid one finger along the entrance of her pussy. It looked as if she was going to sink it in, but she resisted.\n\n\"I can't believe you are doing this,\" I moaned, running my hands up her back. It was amazing how toned her body still was. How much muscle was on her shoulders. Her femininity forever exchanged for her olympic medals.\n\n\"Neither can I,\" she said, and looked back at me. \"Kiss me again.\"\n\nI leaned forward and did as she asked. The act of leaning forward pushed me deeper inside her. She winced and then closed her eyes for a moment. When she opened them again, they were bright and sparkling.\n\n\"We can't have long left,\" she said, just before my lips met hers and our tongues encircled each other. She broke the kiss after a moment and pressed her forehead against mine. \"Push all the way in.\"\n\n\"Seriously?\" I asked, looking her in the eyes trying to see if she was serious.\n\nShe smiled and nodded. \"I'm a big girl.\"\n\nSo I did. Her reaction was every bit as good as the sensations of pressing in. She managed to kiss me for maybe the first inch, then her mouth sort of hung open in a silent cry of pain. I thought about stopping, but I brought up my hand and turned her head back to me and kissed her instead.\n\n\"Owww,\" she said, in a weak wimper.\n\nI touched her cheek gently, \"Shhh,\" I said soothing her. Then kissed her again.\n\n\"Ow,\" she said, in that same wimper.\n\n\"It's okay,\" I said. \"Almost there.\"\n\nShe arched her back, taking her head away from me, and then she came back and kissed me hard, then biting my lip hard until I was fully inside her.\n\nX\n\n\"Hey, where are you going? I said, with a playful tilt of my head at Rebecca. \"Surely you don't smoke.\"\n\nThe entrance to the smoking area was the same as the entrance to the club, and the queue ran along the edge of the smoking enclosure. Whilst my doorman and I were standing on the front door, we were also able to manage both the smoking area and the queue.\n\n\"Nah, just fresh air. It's hot in there.\" Rebecca smiled, and she looked fairly red-faced to back it up.\n\n\"Yeah, the aircon is due a clean next week,\" I said with a grin, still not quite believing Rebecca Harringdon was in my nightclub.\n\nI saw people coming towards me from the corner of my eye, so I turned my back on her as I greeted them. They had come to the VIP entry and, finding out that they didn't have any booking, I sent them around to the queue, which by now was across our unit and the next frontage as well.\n\nI turned around and she was still standing there, taller than me, maybe even broader; a vision in white.\n\n\"Having fun?\" I asked. \"You seem more sober than when you came in.\"\n\n\"Yeah, champagne isn't my thing, and Chris took the vodka. I danced until my feet hurt, then I was going to take my shoes off when one of your bouncers came over and said I couldn't.\"\n\nI smiled. \"Yeah, it's a health and safety thing.\"\n\nShe smiled. \"No I get it. It's just my feet are really starting to hurt.\"\n\n\"Worth it though. Those are some pretty sexy shoes.\" I said.\n\nHer smile brightened and she stuck out her leg. The flared end of her jumpsuit fell away to reveal the four inch spike of her jeweled heels.\n\n\"Yep, that is some pretty good shoe porn right there.\"\n\nShe blushed again and giggled, but kept her foot pointed out. \"I don't normally wear shoes this high, but these were stunning.\"\n\nI smiled. \"They look great, but you know where they'd look better?\"\n\nShe looked at me, her foot down, her grin ready. \"Go on,\" she said, playfully.\n\n\"On my bedroom floor,,\" I said with a laugh. This was a lot of fun.\n\n\"Ha,\" Rebecca snorted,\" You don't think your girlfriend would mind?\"\n\n\"You are number one on the freebie list! She can't mind.\"\n\n\"You said I was on the list but not any more,\" she reminded me.\n\n\"The list can be updated.\" I said with a smile.\n\n\"I can't see your girlfriend being happy with you claiming your freebie in your bedroom.\" Rebecca teased.\n\n\"Well, yeah, good point.\" I said with a grin. \"Okay, they'd look better on your hotel room floor.\"\n\n\"Ha,\" she laughed, clearly enjoying my flirting, \"I'm sharing with Victoria, and I don't think she'd want to share our room with you especially seeing as you didn't know who she was.\"\n\n\"Victoria? Your brunette friend? Was she put out about that?\"\n\n\"Yeah, just a bit. She's always the one people know,\" Rebecca said.\n\n\"And you aren't?\" I asked. \"I'm not sure I believe that.\"\n\nShe smiled and laughed. \"She's the pretty one. I'm like the ugly giant compared to her.\" She grinned. \"No one really ever knew me outside of sports circles.\"\n\n\"What brings you to my little club, anyway?\" I asked, changing the subject.\n\n\"It was on the way back to the hotel,\" she said. Leaning on the barrier and looking up the street.\n\nWIth her eyes distracted, I checked out her small breasts. Her nipples were hardened in the night air, and I could see just how small they were on her breasts. I'd always marvelled at how out-of-proportion her breasts had looked compared to her broad chest and back, and thought it was perhaps a cruel curse. In person, though, she looked perfect.\n\n\"Way back from where?\" I asked\n\n\"Oh, an awards dinner. We were booked as guest speakers.\" Rebecca said.\n\nJust then Victoria, the brunette, burst out of the club.\n\n\"There you are, flirting with Mr Freebie again?\" she said to Rebecca. Then she turned to me and said, \"Can we have more champagne, please, Mr Handsome Manager man?\"\n\nI smiled at her, and back at Rebecca. \"I'd need another kiss.\"\n\nRebecca blushed and then stepped towards me.\n\n\"I'm just teasing, one kiss was more than enough,\" I said, using my radio to ask Laura to get them more champagne. As I did I saw a brief flash of disappointment, which turned to rejection, on Rebecca's face. That was a surprise.\n\n\"Come on then,\" the brunette said.\n\n\"Give me a minute,\" Rebecca said.\n\n\"Oh really,\" the brunette said with a laugh, \"Okay, then! Have fun you two!\"\n\nI was about to turn to Rebecca when one of the doormen came out, red-faced and angry. He came straight up to me and the head doorman moved over.\n\n\"That's it, that shirt-filler is a fucking joke,\" the doorman exploded. \"He's on his phone again. You have to sort him out. We can't have him doing that in there, he's a liability!\"\n\nBoth I and the head doorman turned to deal with this new situation, and out of the corner of my eye I saw Rebecca slink back inside the club, trying, despite her height, to be as invisible as it felt like she wished she was.\n\nX\n\n\"Fuck, you are gaping!\" I gasped in awe as my cock pulled out of her ass all the way, and just for a moment her asshole remained open. It was a pink mess of muscles, surrounded by the darker skin of her ass, and in the middle was an angry red opening into her body. It was dark and deep. Rebecca's gape had no symmetry, wider than it was longer. Just outside of the muscles were the tiny, wispy dark hairs I'd noticed before. Now there seemed more of them, probably because the wet lube had made them clump together.\n\n\"Am I?\" she said in surprise, and brought her hand from her pussy around to feel it. By the time she'd gotten her finger in place she'd closed back up.\n\n\"Missed it,\" I said.\n\n\"I never thought I could do that! I thought it was just in porn.\"\n\n\"Well you did.\" I said.\n\n\"I'd love to see.\"<br >\n\n\"I'll take a picture if you like,\" I grinned.\n\n\"Give me my handbag.\"\n\nI reached for her white handbag, and she found her phone almost instantly, an iPhone XR with a white case. She unlocked it, threw it on the bed, and then lowered her head to my lube-covered cock.\n\n\"Did you want me to wipe it first?\" I asked down at her.\n\nShe looked up at me with those big blue eyes and, holding my attention she lowered her head and sucked my tip into her mouth. Then she moaned and closed her eyes, and took more of me in her mouth at the same time she brought her free hand to the base of my cock and pumped.\n\nFor a moment I was stunned, watching Rebecca Harringdon performing ass to mouth.\n\nThen, waking up, I pulled up her phone and hit video, and filmed her sucking me.\n\nWhen she saw I was filming she instantly closed her eyes again. A long drawn-out moan then came from her very core.\n\nI grinned and filmed as her mouth and hands worked her magic on my length. I was happy to have the filming to concentrate on, as it made it possible to control my coming orgasm. Without that distraction, I'm certain I would have exploded with the force of a fire hose into her mouth as she performed ass to mouth.\n\nI never thought I'd see anyone do this, let alone an Olympic medalist. It was all I could do to stop my free hand from forcing her head down onto my cock and holding it there.\n\nX\n\n\"Leaving so soon?\" I said as I saw her coming out.\n\n\"Well, Victoria is all over some guy,\" Rebecca said, with more than a hint of frustration and side eye. \"His mates are all getting grabby on me, all of whom are gross, and Chris and his girlfriend are eating each other's faces off.\"\n\n\"Do you want me to get them thrown out?\"\n\n\"Chris and his girlfriend?\" Rebecca said.\n\n\"No, the grabby guys,\" I said.\n\n\"Nah, just boys being boys isn't it,\" she said.\n\n\"We have a zero tolerance of it, so if you want them out I can get them out right now.\" I said seriously.\n\n\"Honestly it's fine, they weren't that bad.\"\n\n\"If you are sure,\" I asked.",
        "\"It's fine.\" she said. \"It was nice in a way to get some attention.\"\n\n\"I'm sorry you are leaving so soon.\" I said, meaning it.\n\n\"You are busy,\" she said, looking at the queue and the people in the smoking area.\n\n\"Not so busy that I can't walk you to your hotel room,\" I said.\n\n\"Mine and Victoria's hotel room,\" she reminded me.\n\n\"That too.\"\n\n\"Sure your girlfriend won't mind?\"\n\n\"She can't mind! You are on the freebie list.\"\n\nRebecca laughed.\n\nX\n\n\"Fuck,\" I moaned, as I plunged all the way inside Rebecca's ass in one move. One hand aiming my cock, the other holding her phone and filming. One of her hands was parting her ass, holding apart one of her firm buttocks and the other was dancing over her unfucked pussy.\n\nHer eyes were closed tight and her head rested on the pillow, ass up in the air. I moved the camera up to cover her face, to see the look of bliss as I plunged down, and then immediately pulled all the way out. I moved the camera to cover her ugly gaping anus. Then, before it could close up, I slammed back down fast.\n\nShe looked up at me, deep into my eyes and for a moment I could no longer move.\n\n\"This.. is... incredible... I never dreamed I could do this,\" she said dreamily. As soon as she finished, I plunged all the way in again. \"That anyone would want to do that to me.\"\n\n\"Fuuuuck,\" she exhaled. She closed her eyes and held them tightly shut.\n\n\"I think I can go deeper if we move,\" I gasped, as I remembered something I'd seen on Youporn.\n\n\"I'm not sure I want you any deeper,\" she said, with concern suddenly showing behind her smile.\n\nI ended the recording, quickly hitting airdrop to send the video file to my own phone. Then, before she noticed, hit accept on my apple watch.\n\n\"Okay, move on your side,\" I said moving her back down so that she was flat on the bed and out of the doggy position she'd been in.\n\n\"Fuck,\" she gasped, moving her hand to the small of her back.\n\n\"Okay?\" I said, with genuine concern.\n\n\"Just stiff,\" she said. \"Been a while since I've been in this position.\"\n\nI grinned, and turned her so that she was on her side. Then I moved up her legs.\n\n\"What, what do you want?\" she asked.\n\n\"Curl up,\" I said.\n\n\"Like fetal?\" she asked.\n\n\"Like a wounded animal,\" I grinned.\n\n\"That feels about right. Fuck, my ass stings. It feels like it's like burning or something,\" she said, moving her fingers along the rim of her asshole with their tips becoming coated in the lube.\n\nRather than sliding in behind her, like she might have imagined, I stayed above her. Moving my knees to either side of her ass. One at the small of her back and one at the back of her thighs.\n\nShe was so tall, and broad that she looked big even curled up in a ball. There was such a hot juxtaposition in having such a powerful woman in such an obviously submissive position.\n\n\"Curl up tighter,\" I said.\n\nShe looked at me, studied me for a moment, then, confused, did as I asked; hunching her back and pulling her knees up against her chest.\n\nHer shoulders looked even bigger now, her legs even longer. She was almost fully compacted.\n\n\"Tighter?\" I said.\n\n\"Mmmm,\" she said and pulled her knees in with her arm. \"I must look like a little girl. Should I suck my thumb?\" <br >\n\nI grinned and pressed down on the top of her ass, twisting her hips and opening her buttocks at the expensive of her lower back.\n\nShe rewarded me with a hiss of pain, which made me pick up her phone and hit record as fast as I could. I didn't want to miss any of this. Then I pressed my tip into her ass. One of her hands moved around to press on my thigh, ready to tell me to pause if she needed, while the other reached between her closed legs.\n\nRebecca looked up at me, saw her phone, and closed her eyes tight.\n\n\"MMMM,\" she moaned emphatically, and then sped up the speed of her finger as it danced it's dance on her clit. \"I've got my own sex tape now.\"\n\nI focused on her hands for a moment and then I moved the camera down to my broad, glistening tip. I filmed it as it pressed against her body, zoomed as I pressed harder, and then captured the moment it popped inside. I sped up my invasion once that moment was passed.\n\nI zoomed out as my cock descended into her, and panned up to capture her face. Her mouth was hanging open, and the hand that had been on my thigh had now moved to cuddle her stomach. As if she was in pain.\n\n\"Fuck,\" I moaned. \"We have to do this again. This can't be a one-off.\"\n\nShe closed her eyes even tighter and let out another low moan which sounded like, \"Yessss.\"\n\nI lifted up my hips and began fucking in and out of her ass. I was pressing the top of her ass down so that her hips were at almost right angles to her torso and legs. I kept waiting for her to stop me, but she never did.\n\nI pulled the camera zoom back, to get a full body shot of her all curled up and completely, still and taking as much of my cock as I could force in her. My breath caught at the sight.\n\nX\n\n\"Are you coming up to my room as well?\" Rebecca asked as we reached the lobby of her hotel. The hotel was an old Victorian one, with ornate tile floors, and a high ceiling. I was surprised she hadn't been booked into a more expensive hotel, but then she was also sharing so clearly cost had been an issue for someone.\n\n\"Is that an invitation?\" I said with a smile.\n\nShe looked at me for a moment, saying nothing but clearly thinking about something. \"No,\" she said finally. \"I was just wondering why you didn't leave me outside.\"\n\n\"Well I had to make sure you were safe, big famous star like yourself.\" I teased.\n\nShe punched my arm playfully, then looked at the lift and back at me. She bit her lip. \"What time does your club close?\" she asked.\n\n\"Three,\" I asked, confused. I looked at my watch. \"So... two hours from now.\"\n\n\"How long can you be away from work?\"\n\n\"Do you need me to keep you safe until your friend gets back?\" I asked, with a smile.\n\n\"Yeah. Maybe?\" she said. \"Yeah, I think so.\"\n\n\"Isn't that a bit like asking the wolf to guard the sheep?\" I asked.\n\nShe tilted her head, not following.\n\nI grinned. \"Don't worry.\"\n\nThe elevator pinged open. We stepped in, and it closed behind us.\n\n<br >\"So, like, did you agree on things you could do with me when you agreed your freebie list? Is that something you even thought about?\" she asked suddenly, her eyes more alive than I'd ever seen them.\n\nShe caught me by surprise and I stammered for a moment, which made her smile.\n\n\"Anal. Lots of anal sex.\" I said.\n\nShe seemed shocked for a moment, then smiled. \"Anal?\" she repeated. \"Wow! Just anal?\"\n\n\"Is that a problem?\"\n\n\"Did you and your girlfriend think I was the kind of girl that would be okay with anal sex?\"\n\n\"That's not a no.\" I said with a playful grin.\n\nShe sighed, a long sigh and looked at me with a long look. \"Why anal?\"\n\n\"Cause apparently if I want to do that, then I've got to do it with someone else.\" I said.\n\n\"You mean your girlfriend won't let you have anal sex?\"\n\n\"Nope,\" I said with a grin, \"She says I'm too big.\"\n\n\"How big are you?\"\n\n\"I don't want to boast.\" I said.\n\n\"And what makes you think I can take it?\" she asked, tilting her head again.\n\nI almost said it was because of how big she was, but I managed to stop myself just in time. \"We can only try,\" I said instead.\n\n\"I'm not much of an expert at anal sex,\" she said with a little embarresement.\n\n\"It's okay, neither am I,\" I said honestly.\n\n\"Fuck,\" she said running her hand through her hair. The lift door opened. She looked at me, smiled, took my hand and then led me into the corridor.\n\nX\n\n\"Oh my fucking god,\" Rebecca gasped. \"Fuck, I'm going to cum. I'm going to fucking cum. I'm going to cum from anal.\" She was getting louder. \"Fuck, shit, oh my god. I've got a stranger's cock in my ass and I'm going to cum!\"\n\nI groaned deep. I moved the camera so it was on her face. Getting ready. Her body began to spasm, and I wanted to be ready.\n\n\"Choke me,\" she suddenly said. \"Grab my throat.\"\n\nI did as she asked, quickly, with my free hand.\n\n\"Harder,\" she croaked. \"I'm your anal whore. Fucking choke me.\"\n\nI could feel her orgasm coming, so I tightened my grip on her throat and I increased my thrusts in her ass. They were deep, fast thrusts, pistoning into her asshole. More and more of the lube seemed to bubble around my cock as I pumped in and back out of her ass.\n\nThen I felt her tense, and her teeth clench and I knew she was cuming. A real nasty dirty anal come.\n\n\"Oh fuck,\" she squeaked, obviously trying to be loud but muffled by my grip.\n\nThat was when I moved.\n\nAs she was clenching tight I switched the phone into selfie mode, then held it in front of her face at the same time as I lay down on the bed spooning her. That meant I could go deeper.\n\nWith Rebecca lost in a world of her dirty orgasm, her body locked down tight around the half of my cock I already had in her. Without mercy, I pressed my whole length deep into her guts.\n\nThe noise she made almost made me cum there and then.\n\n\"Ohhhh... ohhhhhhhh...\"\n\nIt was a deep guttural noise, like a dying animal, but it came from deep within her. Her arms wrapped around her stomach protecting herself. Her face was distorted by the ravaging ecstasy. Rebecca's orgasm seemed to hit a second level, as if for a moment she became a quivering zombie, blank eyes seeing nothing. Her body quivering around my invading cock, and I captured it all on the camera. When she started lying still, I stopped the recording and hit airdrop to send this second, longer video to myself.\n\n\"Fuck,\" she said, finally coming alive. My length was still impaled in her, but staying completely still.\n\n\"Fuck, that was... intense,\" she said, and rubbed her neck. She looked embarrassed, and avoided looking at me for a moment, as if I'd seen part of her she didn't want me to have seen. She slowly stretched out ,moving off me. Then she noticed I was still hard.\n\n\"You didn't cum?\" she said.\n\n\"Not yet.\" I said with a grin.\n\n\"Fuck..\" she moaned. \"I thought you came when I did.\"\n\n\"Why?\" I grinned.\n\n\"The way you pushed in, I just, assumed, you know.\" she said, losing confidence.\n\n\"I'm not done yet.\" I said lifting her head and kissing her, trying to let her know it was all okay.\n\n\"How long do we have left?\" she asked.\n\n\"Thirty minutes,\" I said, looking at my apple watch and marvelling at how low my heart rate was already. That was some good recovery.\n\n\"Lie back,\" she said.\n\nI looked at her for a moment, then did as she said.\n\n\"So, I took you all, didn't I?\" she said. \"And I came. Big time. And your girlfriend won't even let you do this.\"\n\n\"Yeah, you did,\" I said looking up at her, \"Fuck, there is no way this can just be a one-off.\"\n\nShe grinned at me, picking up her phone and turning it on me. \"I'll give you my number,\" she said. \"Isn't a freebie just a one-off thing.\"\n\n\"Yeah, this so isn't going to be okay with her next time.\" I said.\n\n\"Is that okay with you,\" she asked quietly.\n\n\"Fuck yeah,\" I said, grinning up at her. \"I just ass fucked Rebecca Harringdon and watched her cum.\"\n\nShe smiled and moved so she was sitting astride me. She put herself up on her powerful legs, and then used her hand to move my cock head past her unfucked pussy and to the slippery entrance to her bowels.\n\n\"Ready?\" she said and started to lower herself on my cock. Her face was partially obscured by the phone, but for the first time I could see her magnificent body; her perfect little breasts, with their neat nipples, and her toned stomach. I would never have guessed it had been five years since her Olympic peak.\n\n\"Fuck,\" I moaned.\n\n\"Let me know when you are close to cumming,\" she said.\n\n\"What makes you think you can make me cum,\" I said, in as steady a voice as I could manage.\n\nShe smiled. \"I'm pretty sure.\"\n\n\"Why?\" I asked.\n\n\"This,\" she said, then she bit her lip and in one fast motion, she sat down fully on me and impaled her ass on my cock. Her jaw hung open.\n\n\"Fuckk,\" I hissed.\n\n\"Just let me know,\" she moaned.\n\nX\n\n\"Are we really going to do this?\" Rebecca asked as she closed the door to her room behind us. The room was not much past the two double beds. One was neat, and one had a messy pile of clothes on it. When Rebecca swept the pile of clothes on to the floor I knew that her's was the messy one.\n\n\"Can you think of a good reason not to?\" I said quickly.\n\n\"I can think of more good reasons not to than to actually do it.\" she replied.\n\n\"Yeah, but I don't think that is going to stop us,\" I said, not feeling anywhere as sure as my words made me sound.\n\n\"Does it have to be anal?\" she asked.\n\n\"Are you Rebecca Harringdon? The Olympic swimmer?\" I asked.\n\nShe nodded clearly confused. \"You know I am.\"\n\n\"Then it has to be anal sex.\" I said.\n\n\"But why?\" she almost whined.\n\n\"Those are the rules,\" I teased.\n\n\"What rules?\"\n\n\"My list, my rules.\" I said, knowing I was running out of talk and would soon be walking back to work.\n\nRebecca looked at me for a moment as she worked something out, and then she nodded. \"Okay, give me a second.\" she said, and then she left me as she went into the small bathroom and locked the door.\n\nShe was gone just over ten minutes, not the one second she had claimed. The first couple of minutes had been fine, but then I started to think she was hiding in the bathroom, and I sat on the edge of her bed, thumbing through my phone and checking out how things were going back in the club. By the time she reappeared, I'd just about convinced myself that she was going to come out and tell me to leave. It would have been disappointing, but I wasn't going to complain.\n\n\"You need to go and buy some lube,\" she said, sticking her head out of the door, and as if she'd read my thoughts she added, \"Take the key card thingy.\"\n\nI ran to the small corner shop, and the asian man behind the counter smiled at me when I grabbed the bottle. I assumed he thought I was gay. That was a fair assumption, in my smart three-piece suit. It was much more likely I was gay rather than the truth. Who would have guessed that I was going back to the hotel to ass fuck an Olympic medalist, especially a female one. I wasn't even sure I believed it myself.\n\nI found Rebecca lying on her bed, completely naked apart from her high, jeweled heels. It was an incredibly slutty touch.\n\nShe blushed when she saw me. I held up the lube.\n\n\"I'm so glad you came back,\" she said, \"I was worried you wouldn't. I'd have felt so stupid lying here and waiting. So much for feeling sexy.\"\n\nShe sat up on her elbows, slightly awkwardly, looking all long legs and arms. She looked too big for the bed, and it crossed my mind, looking at her, that the bed might have been smaller than a normal hotel bed.\n\n\"You look incredible,\" I said, tactfully. \"Very sexy.\" I sat down on the bed next to her.\n\nShe gave me an unconvinced look, but she didn't say anything. I handed her the tube, and she squeezed out a huge dollop of lube on her palm while I started taking off my clothes.\n\nShe sat, the lube cuped in her palm and she watched me, staring with no sense of self-consciousness. I decided to leave my shirt on. This whole thing had a feeling of being in a porn, so keeping the shirt on felt right.\n\n\"Do your rules allow you to kiss me?\" she said.\n\n\"Can I say no?\" I said smiling at her, standing before her. Pleased that my cock was already rock hard and ready just from the sight of her.\n\n\"If you want to make me feel like a prostitute,\" she said with a smile.\n\n\"Okay, no then.\" I teased.\n\n\"Fuck,\" she said biting her lip and closing her eyes.\n\nI smiled and picked up the tube of lube.\n\nShe smiled. \"How should I be?\"\n\n\"I guess on your front, doggy style?\"\n\n\"Like this?\" she asked, moving to the middle of the bed, putting her ass high on the bed, the top of her legs dead straight, her back bent so that her tits were squashed into the bed. She grabbed a pillow for her head.\n\n\"Perfect,\" I said, and it was.\n\nShe looked back and smiled and put her hand underneath her stomach and pressed the thick lube between her legs . Most of it went over her pussy. Her ass, perhaps being an unfamiliar play area for her, remained mostly uncoated. I took a moment to look at her most private holes. Her pussy was completely shaved, but her lips were puffy and pink, as was some of the skin around. It crossed my mind that perhaps the ten minutes in the bathroom had been spent shaving herself clean. She'd missed a few dark whisps of hair around her asshole. The sight was real, and erotic.\n\nI smiled and squeezed a load on to my fingers.\n\n\"Put your hands like this?\" I said putting them one at a time on her muscled buttocks.\n\n\"This feels so wrong,\" she said.\n\n\"I think it can only get worse from here,\" I said.\n\nI reached forward tentatively, not knowing how she'd react. Maybe she'd freak out, or maybe this would all turn out to be a big joke. My fingers touched the red skin at the bottom of her ass, and I began sliding them the short distance to the small indentation that marked her asshole. It was neat, and clean, and perfectly closed.\n\nI smeared the lube over the entrance and I felt it clench tighter in response to my touch.\n\n\"Let me do it first,\" Rebecca said. Her hand moved from her butt cheek while my hand replaced hers, holding the muscled cheeks apart.\n\nShe pressed her index finger inside herself. I looked from her ass, up to her face. Her features were lost in concentration and she was biting her lip.\n\n\"Okay, this feels...weird.\"\n\n\"I thought you were going to say tight,\" I commented.\n\n\"Yeah, that too. Fuck, I have no idea how we are going to do this.\"\n\nX\n\n\"Oh fuck, oh fuck, oh fuck, I'm cumming,\" I said as I felt the rising swell of the orgasm sweep through me. I could feel it deep down within me, starting at my testicles as it threatened to explode through me. \"I... can't hold it.\"\n\nRebecca smiled the biggest, happiest, most un-self-conscious smile that I'd seen from her. It made her look even prettier, as she bounced her ass up and down along my thick shaft.\n\n\"Good,\" she said, then she aimed the camera at her face, at the same time as she tilted the camera down her body and leaned back.\n\nI saw her stomach bulge in the shape of my cock as she bent backwards the opposite direction to my cock. And she forced herself as far onto my cock as she could, impaling herself totally.\n\n\"Oh...\" she managed, before her face distorted in pain. Then the smile came back, and she moaned, \"Mmmm.\"\n\nAnd like that I came. I was as deep as I could be inside her ass. My perfect, pure seed vanished deep inside into the dark dirty colon of the olympic medalist. She was so tight that I could feel every spurt as it travelled the whole length of my cock.\n\n\"Put down the phone and kiss me, Rebecca,\" I just managed to gasp.\n\nShe did exactly as she was told. The phone left her hands, and she bent forward and kissed me hard on the lips as the last of my cum shot into her.\n\nI wanted to stay locked like that forever, deep inside her, but it wouldn't be long until Victoria came back and so I let myself slide from her asshole. A flood of fluid came out behind my cock, and slid down over my cock and testicals.\n\nRebecca looked at the mess, and bit her lip without even realising she'd done it\n\n\"Go on,\" I said with a wicked smile on my lips. I was still painfully hard, with cum still oozing out of my tip. It must have been trapped by the tightness of her guts to have stayed inside me.\n\nShe looked up at me, seeming momentarily confused. I started to sit up, then moved to my knees bringing my glazed cock towards her mouth.\n\n\"I don't even know your name,\" Rebecca said, as her mouth engulfed my cock without even a brief inspection. It had been as deep as it could possibly go inside her. It was impossible that it could be completely clean. Even without anything else, that amount of lube, flavoured or not, would turn even the strongest of stomach.",
        "\"I know, how awesome is that,\" I gasped, as her mouth felt amazing sucking my tip. Then she went to town, licking the rest of my cock clean.\n\nI looked down at her, I grabbed my phone and I hit record and began filming this, something I'd never thought I'd see; Rebecca cleaning my filthy cock. She looked so big and tall, even bent double. There was so much of her unmistakable broad back, all stretched out. She was like a girl Goliath feasting on David's cock.\n\nI couldn't help myself. I reached over her and down her back, and sank two fingers into her asshole. They went in easily, so I pressed a third in.\n\nHer eyes flicked, like they were going to open, but she just moaned and kept them closed.\n\nI hooked my three fingers and scooped out fluid, cum, lube, and who knew what else. My fingers were dripping with it, and a small amount of it stayed pooled between my digits.\n\nI aimed my phone lens at the fingers, and kept focus on them as I brought them up her back. The fluid dripped all the way, creating a dark line from her ass all the way up her broad back. Then, with a twist, to avoid her styled blonde hair, I brought them to her mouth.\n\nShe opened her eyes, looking right into the camera, then at the fingers, then back at the camera. She bit her lip. I wondered if she'd notice or care that I was using my phone now.\n\n\"I really shouldn't do this,\" she said directly, into my phone and then she opened her mouth and my fingers slid into Rebecca's mouth in one of the most erotic moments I'd ever seen.\n\nThen the sound of the door opening filled the room.\n\nHer eyes flew wide and I turned off the phone and threw it to the bed.\n\n\"Fuck....\" Rebecca said throwing me off with a huge amount of strength and pulling the covers over herself and me in the process. We turned, just in time to see Victoria standing at the bottom of the bed.\n\n\"Looks like you paid for more than two just bottles of champagne in the end,\" Victoria said with a wink. Then she blew Rebecca a kiss and went into the bathroom.\n\nX\n\n\"I don't want Victoria to catch me,\" Rebecca said biting her lip, before asking, \"Okay is that the second finger.\"<br >\n\n\"No, just one,\" I said with awe, as I pressed the tip of my finger slowly into her ass. She was right; it was incredibly tight. I wasn't even convinced she'd be able to open enough to take me properly.\n\n\"Fuck,\" she sighed, and moved her hand back to her ass as if to check I was telling the truth. \"It felt like two.\" she said.\n\n\"That was just where my finger gets wider.\" I said. Then I checked my apple watch. \"We have about an hour and a half before the club closes.\"\n\n\"Good,\" Rebecca said. \"She thinks I'm a good girl... and I guess I usually am.\" She sounded dreamy, looking off into the distance.\n\n\"You aren't tonight.\" I smiled and then nudged the tip of my middle finger alongside the index finger already buried in her.\n\nShe tensed up instantly, her ass tightening around my finger.\n\n\"You are going to need to relax,\" I said softly.\n\n\"I know, it's just hard, you know. Like this isn't natural.\" She sighed. \"It doesn't help that I keep thinking I'm hearing Victoria at the door.\"\n\n\"I think you are obsessing about her too much,\" I teased. Gently easing my middle finger in, and pushing in firmly past her closed muscles.\n\n\"Ohhhh, ahhhhh, fuck...\" she said almost in pain. \"What, what do you mean?\"\n\n\"I dunno, just like it maybe feels like you want her to come in,\" I said, and ignoring her noises I pressed the second of my fingers inside.\n\n\"Oh god...that feels so, so, urm, wrong.\" She gasped. I watched as her hands dug into the muscles of her ass.\n\n\"My finger, or Victoria catching you,\" I said quickly smiling down at her, thinking that if she ended this now, it would still have been an incredible once in a lifetime experience.\n\n\"The finger,\" she gasped.\n\n\"So Victoria seeing you would be okay?\"\n\n\"Shhhh,\" she said, closing her eyes.\n\nI chuckled and pressed my two fingers deeper into her ass. She felt so hot. She looked back at me, blue eyes alive and dancing.\n\n\"It would be bad enough Victoria seeing me at the best of times, but damn... her seeing me like this?\" she said, \"With what you are about to do to me?\"\n\nAs she spoke she closed her eyes, as if loving the thought.\n\nI grinned and slid my second finger back out of her ass, then I scooped up some of the excess lube on her pussy on my thumb, I pressed the tip of my thumb alongside my index finger.\n\n\"Fuck. is that your cock?\" she said.\n\n\"My thumb,\" I corrected.\n\n\"Fuck.\" She sighed while exhaling \"Girls like Victoria aren't usually friends with me,\" she said, musing to herself.\n\nI thought of how pretty Victoria had looked next to Rebecca outside the club and I smiled. Then slid out my index finger and replaced it with my other thumb. Both of my thumbs were now just inside her ass.\n\nI groaned and I pulled the two apart, opening her just a little. I was taking it slowly so as not to hurt her.\n\nFor the first time I looked into the depth of Rebecca's bright red anus and right then I knew I wouldn't choose to be anywhere else in the whole wide world. This, gazing into the ass of this Olympic medal-owning ex-swimmer, felt like the happiest place I could ever be. I had found my home, a place I didn't even know I was looking for.\n\nEND"
    ],
    "authorname": "Maria_McGeorge",
    "tags": [
        "anal",
        "athlete",
        "small tits",
        "swimmer",
        "tall girl"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-freebie"
}