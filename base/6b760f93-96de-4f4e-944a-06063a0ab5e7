{
    "title": "\u00c6gir's Wife Ch. 03",
    "pages": [
        "The cold fingers of the wind seeped through even the careful layers that she pulled tighter about her, hardening nipples that were already aching with need for their touch. Once more the waters of the fjord were as turbulent as the emotions blowing inside her mind, tossing and rolling waves lapped at the sides of the boat. Kirsty stilled herself for whatever lay on board, be it welcoming warmth of fires raging in the hearth or the icy winter peaks that loomed all around her forming a fortress as impregnable as his heart.\n\nOver three months. Three months and the man had not touched her. She was almost certain he had not spoken more than a couple hundred words to her in all that time either. And most of those were 'Unnskyld m\u00e6'...excuse me. Sure, when he thought she was not looking, she sometimes caught him staring her, but his face held no clue as to what he was thinking, any more than the ice-capped mountains that surrounded them. \n\nShe though had spent days perhaps even weeks thinking about him. Trying to come to terms with all that had happened between them. Her mind rebelled vehemently against that word which Mikael and Bjorn especially insisted upon using. It was not rape, of that much she was certain. He had not even violated her consent. Just lost control...and honestly, some part of her liked the fact that she could make Atlas, Mister Cool loss that composure. No, what had bothered her most was not the way he had taken her ass that first time. \n\nIt was what had happened afterwards. The only hard limit she was truly certain she had...besides the obvious illegal and disgusting ones of course...was humiliation. And being dragged naked into the hall way like that, watching them argue and even come to blows over her was damned close to it. That she was still having trouble coming to terms with. The obvious reason was simple, because no matter what had happened she still cared for Sven. And his rejection that night and since hurt. She hated how much it bothered her. \n\nWith Bjorn and Mikael's loving support, Petrine's and Olaf's too, she had almost totally settled happily into her new life here. It was odd how London where she had lived her whole life had simply faded into a memory so quickly. How could this place feel so much like home after such a short time? \n\nSo why was she procrastinating? Delaying the inevitable? Her previous supervisor had retired and her friend Roz had taken her place. Kirsty had received two emails from her already asking about her plans. \n\nShe frowned as she approached the boat that was already docked and tied off at the pier. Usually it was bustling with all of them working to unload and secure things off, but not today. That worried her a bit. Had something gone wrong? Surely Bjorn or Mikael would have told her if it had. \n\nWas that part of it? Kirsty readily admitted that these frequent trips not only left her lonely but worried. Even though Bjorn and Mikael had both explained how lucrative this winter fishing season was to them, it was still hard to put the stories of Lars and Stig from her mind. The thought of the dangers that they faced kept her awake in that bed more often than the aching need between her thighs. \n\nShe smiled...her husbands came up with increasingly inventive and sometimes devious ways to make certain that she never felt lack of either their control, her orgasms or even Mikael's pain. Of course, it was never quite the same as it was when they shared her bed...and increasingly it had truly been 'they.' \n\nEspecially on nights like this one, where after days or weeks without the touch of their bodies on hers, there was no way humanly possible that she could choose between the men she loved. Not that it was easy. Well, not on them anyway. Bjorn had more than once cringed when he saw first-hand the depth of her masochist. \n\nShe chuckled as she remembered the time that Mikael had brought back a special surprise for her. He and Bjorn had each taken a breast, kneading and sometimes even crushing the full globes in their hands, tweaking the nipples until they hardened like the rubbers that she had used in school, until at last each bent their heads and took a turgid peak into his mouth. \n\nShe had actually come then as she watched their heads so close to one another. Bjorn's light blonde long hair woven about her even lighter skin as he suckled and blew across the tip. Mikael's darker, almost brown hair, shorter as it tickled her other breasts, but his teeth bit and scored her flesh. The contrast and perfect complement of her husbands had sent her body spiralling unexpectedly out of control. \n\nWithout permission. Which of course meant one thing...punishment. Oh, what punishment though. Mikael had once more taken the tawse to her bare and very wet cunt. She had tried very hard not to look at the dark and worried expression on Bjorn's face as she counted out twenty strikes with the stiff leather straps, thanking Mikael after each. \n\nBut it was her dark Loki's punishment that hurt far worse than the delicious sting on her clit and cunt. On number eighteen as she felt her need rising, knowing that Mikael always commanded her to come upon the final blow, Bjorn's handsome face had filled her field of vision. His smile was as devious as any that his sadist brother ever made as he whispered, \"You do NOT have permission to come, our naughty, needy little slut wife.\"\n\nWhen Mikael bent for his 'takk, min herre' kiss for her pain, his smile matched his brothers. Together they had made her pay the ultimate price for her disobedience, torturing her for hours with the prefect mix of pain and pleasure, including Mikael's special gift...a new set of nipple clamps with a nasty set of teeth that made her first cringe in fear then smile in anticipation. \n\nBjorn had once more frowned at her quick intake of breath as Mikael began to slowly turn the screws until she felt the bite of it into her sensitive and tender flesh. But her pain slut was not to be deterred as she sighed in satisfaction at the feeling. He repeated the process on the other nipple. Then tightened them both one more turn. He stepped back to inspect them, but that was not enough either as he reached out and firmly tugged the chain that was secured to both. She still was not sure how she had managed not to orgasm then too. \n\nThankfully she had not though. As it was her punishment was bad enough. Hours of mixed pain and pleasure. Even the two of them taking turns fucking her, still they had not allowed her to orgasm. She had finally broken down crying, begging and pleading like a little child to be allowed to come. That was the moment she realized who the real sadist was. As Mikael and Bjorn looked at one another, it was her light/dark angel, who had shaken his head 'no.' \n\nIt was Mikael's turn to frown darkly as Bjorn swept her into his strong arms, kissing away her tears as he whispered, \"My beloved angel, I know this lesson is hard on you. On us too. But you must learn, who controls that beautifully complicated mind of yours. If you cannot surrender that control to us when we hold you in our arms, how can you possibly when we are nothing more than video illusions, voices in your head or inadequate words upon a screen?\"\n\nShe shook her head, not fully understanding the importance of that lesson in the depths of need that bit worse than the clamps, Herm\u00f3\u00f0ur or even the tawse upon her wet cunt. It was not until the next morning when they had shown her mercy. If you call repeated orgasming upon command as each took turns whispering, \"Come for me, my sweet Freya,\" into her ears. \n\nShe sighed, so why was she doing this now, keeping something from them? From them all. Keeping a secret like this.\n\nShe swallowed hard as she climbed abroad \u00c6gir's Captive. There could be no doubt now...she was not their captive. She was no longer certain she ever really had been. From the moment his hand had gripped her elbow and drawn her through that turnstile at the train station, she had been theirs. She shook her head as her frown deepened, perhaps even from the moment she opened his first message on that site. \n\nShe felt the bite of the wind upon her cheek, like icy fingers gripping her mind. Her eyes clouded over as she stepped fully upon the deck. She reached up to rub them clear and was surprised to see the moisture of tears on the tips of her gloves. No, the truth was that she had walked on this ship of her own free will as much that day as this. They might have thought she was their captive, but she knew the truth...she was destined for more, she was their wife. \n\nAnd only one thing marred that perfection. Him. Sven. The man, who had begun it all. The man, whose photograph had entranced her enough not to hit the block button for the first time ever. The man whose stern stare even in that grainy photograph had sent butterflies to flight in her tummy and wetness in her knickers. The one whose first touch had been all it took to both frighten her and draw her into their web. The one whose voice had caressed her mind and entranced her like a sorcerer's spell. The one who had taken her...but never more than she was willing to give. \n\nThe only one she could not reach. The one that she had failed. And that was the problem. That was what made her so fucking reluctant to hit the send button on the email resignation that she had written weeks ago, even before Roz's first email. How could this place be home, how could they be her family, how could their love ever be enough...without his? The man she had first fallen in love with...probably even before she stepped on the train that day. \n\nShe swallowed the lump in her throat. She had to find a way...somehow. Because she knew that she did not belong back there. That was never really an option. Not since the morning that Bjorn had handed her the unlocked tablet. Not since their mother offered to buy her a ticket back and put her on the plane herself. \n\nShe loved them...these rough fishermen that were anything but simple. She loved the family that enveloped and adopted her, filling voids that not even she had really understood their depths. She belonged here...in this place. It called to her and felt like home in some unexplainable way. \n\nThe only thing that remained was to figure out how...how to live so fucking, impossibly close to a man you loved and could never really have. She came back full circle...why did that hurt so fucking much...more than the goddess damned clamps or tawse? Why could she not just be happy with Bjorn's and Mikael's love? Most women had to settle for the love of one man. She had two. But still his distance ate at the core of her happiness like that worm buried deep within the bright shiny red apple, rotting it from within. \n\nShe frowned as she slipped below deck. The boat was quiet. Too quiet. Maybe she had missed them in passing somehow. Maybe they were already at the Holding, though how that was possible she could not fathom. She checked their room and the galley, but no sign of either Mikael or Bjorn. Not even Sven. \n\nShe debated turning around and going back to the house certain that she must have miscalculated how long it took her to make it back from her favorite perch near the top of the mountain. Obviously they had finished quicker than usual and were already laughing and chatting back at the house next to the warm fire. Well, Mikael and Bjorn anyway. Sven would be sitting silently in his chair with his pipe. With Olaf, Petrine and Monika in town she should head back, make them something to eat. \n\nThen she saw the light filtering through the crack of his door at the end of the hallway. She should definitely go back to the house. So why were her feet moving her forward? Closer to him. Towards the danger and pain that festered like an open wound in her heart. Still she could not make her feet turn around and flee. She did not even bother knocking as she pushed back the door just a bit.\n\nDespite the cold, he stood by the foot of the bed as he wrapped rope about his forearm. Why did it have to be rope of all things, she thought, as she felt the wetness drip down her inner thighs. He was naked from the waist up, his feet bare against the rough wood floor that she had knelt upon more than once. \n\nHis more mature body might not be the defined muscular beauty of Bjorn's, but it was lithe, honed by his work and stunning enough to turn any woman's head. She rubbed her palms against the wool of her skirt because they itched to reach out and once more run across the coarse hair that covered his chest and arrowed down provocatively into those tight jeans that hugged his thighs. \n\nHer eyes could not help but stray to the front of those jeans as she licked her bottom lip. She sucked in a breath to calm herself. She could almost remember the taste of him, the feel of that thickness buried deep in her throat. Though it was her needy cunt that throbbed and leaked even more sweetness down the inside of her thighs as she turned to go. \n\nThis had been a mistake. A bad one, she thought as she turned to flee back the way she had come. Until one word stopped her, \"Kirsten?\"\n\nFuck him. Fuck this man who still could melt her insides with a single word said in that too fucking sexy accent. She willed herself not to turn around. She commanded her feet to move, one in front of the other. Fast. Flee him. Seek safety in the arms of the ones who did love her. Who did want her. So why the fuck was she still glued to the same spot?\n\n***\n\nSven reached for her. Simply because he thought she was a mirage. When his hand touched solid, real bone and muscles on her elbow, his cock hardened instantly. Just as it had that first day when he had drawn her through the turnstile. How could she do that? No other woman ever had. Fuck it...the fact was he actually loved this woman. \n\nWhen? When had it happened? Certainly he had been attracted to her na\u00efve innocence from the beginning. He enjoyed training subs, he always had. But this one was different than the married women that snuck around behind their husbands' backs to taste a bit of the kink he could offer them. For one thing, none of them had ever been as truly submissive as Kirsten was. \n\nShe bordered on the edge of slave in her desire to please and need for submission. The only difference was that unlike a traditional slave, she had a strength of will that made it impossible to actually crush her, to truly enslave her. He shook his head. No, she was not the one enslaved. He was. He and his brothers. And hell yes, that still bothered him. \n\nFor the first time in over three months, he was touching her. And even through the damned layers of her coat and sweater, he would swear he could feel the warmth of her too fucking soft skin. He shook his head and willed his heart that was racing to slow its pace. Sweet Freya, how he wanted to strip those clothes from her body and take her to his bed...just as he had that first day.\n\nWhen she finally turned and looked up at him with those big blue eyes of hers, he felt the burn of oxygen trapped in lungs that no longer could function. The only part of his body that seemed capable of working at that moment was the hard, throbbing flesh between his legs that begged to bury itself inside her warm, welcoming wetness until all was lost. \n\nThen she dropped those eyes, staring at the wood floor as she spoke, \"I'm sorry,\" she stammered. \"I didn't mean to disturb you. I was just looking for...\"\n\nHe dropped her elbow as the knife sunk deeper into the heart he had never thought he had until he first heard this woman's sweet laughter in that caf\u00e9 that chilly autumn day in Tilbury. \"Bjorn. Mikael. My brothers. You were looking for them, of course.\"\n\nHe turned his back. He would not let her know. He willed his feet to take the steps necessary to put the distance of his cabin between them, just as he had tried so fucking hard to put emotional distance between them these past few months. But it seemed when it came to this woman, his feet did not obey any better than his heart and mind. \n\nThen he felt the cool of her fingers on his shoulder, \"No, wait, Sven. Please, please don't go.\" Her voice was breathy as he felt the warmth of it on the bare skin of his back. \"I'm sorry.\"\n\nHe turned and grabbed her hands, he could not let her keep touching him. Didn't the woman know by now what that did to him? Every fucking time she did, he lost control. The one thing he had prided himself upon, the one thing that every fucking Dom should possess, and a simple touch from her could still fucking strip it away in the space of a heartbeat. \"Damn you to Helveti.\"\n\nThose blue eyes sparked as she rose up to her full height, which was impressive for a woman, but still far shorter than he was. \"You already have,\" she spat as she began to struggle to break free of his grip. \n\nHe pulled her closer, wrapped his arms like steel bars about her waist as she began to shove and pummel his bare chest. \"Feeling is mutual, wife,\" he breathed against her warm, soft lips just before capturing them in a kiss that sought to extinguish the fires of M\u00faspellsheimr. But each taste of her sweetness, each soft moan and whimper that he captured at the back of her throat, drove him closer to Ragnar\u00f6k, \"the end of the world.\" \n\nJust as it had that first day, she felt so fucking good in his arms, so gods be damned right. But it was not. He had to remind himself of that fact. He had made a promise to his brother...to himself. He would step away. She belonged to them now. His brothers. And as much as he wanted...fuck, almost needed...this, it was not right. She was no longer his. \n\nHe broke the kiss then, released her as he turned and this time by some miracle of all the gods in Asgard managed to put the space of his cabin between them. Still he was wise enough to keep his back to her as he spoke, \"Mikael and Bjorn remained in town with my uncle and mother. I am sure they will be here shortly though. Wait for them at the Holding.\" \n\nThe room was silent. He thought she had obeyed him...fled back to the safety of the house and his brothers. Then he felt it...hands, surprisingly warm and so fucking soft as they ran lightly across his shoulders and upper back, trailing slowly lower and lower. He almost came undone when he felt the wetness of her tongue along his spine. But she was not finished with the torture as the heat of her breath fanned across it as she spoke, \"I've missed you.\"\n\nThree simple words. Three fucking words. And Sven felt the floor beneath him opening up, he was drowning. Drowning in her. Her touch. Her tender kisses and licks. And those words that so fucking echoed how he felt, but could never tell her. He swallowed it all back though as he fought back the raging need to take her. Take your wife, his mind screamed. He shook his head and tried to remind himself that she was not...not his...not anymore. So why the hell did it still feel so good, so right? \"Please, Kirsten, please just go,\" he pleaded through gritted teeth.\n\nHer hands found his waist and turned him. Why he allowed her to was beyond him in that moment. Especially when he looked into those striking blue eyes that never could hide her feelings. He swallowed hard and tried to suck air into his oxygen starved lungs but the sound came out as a moan when her hand began to fumble with the button on his jeans. \"No, Kirsten, we can't,\" he pleaded. \n\nWhat happened next was truly shocking as much because for once those eyes did not telegraph her intents as she shoved him back onto his bed. Before he could utter a single word, she was on top of him. Her fingers made surprisingly quick work of the button and zipper on his jeans. He closed his eyes and groaned when those soft hands wrapped around the steel length of his cock. But they flew open a moment later when he felt the warm, wetness of something else wrapping around its head. \"Kirsten,\" he half pleaded and half growled.",
        "Her eyes sparkled as she slid down the full length until his cock was fully seated inside of her, she rubbed against him in a slow circle that tested his limits almost to the point of breaking. \"Shut up, Sven. Shut up and just fucking feel for once,\" she said as her hands began to rip the coat open. \n\nHe laughed as he arched up into her. She threw back her head and shut her eyes as she cried out in her first orgasm. His hands joined hers, pushing and pulling until the damned coat was tossed to the floor somewhere. She gave up then as her hands planted themselves firmly on his chest. He knew she could feel the way his heart was racing, pounding so hard that he almost swore it would explode any moment...and for once he did not give a damn. \n\nHis own hands though had other ideas as he pushed the soft wool sweater up over the top of her breasts. Any other time he might have actually appreciated the contrast of the deep purple lace confection against her alabaster skin sprinkled with enticing freckles, but in that moment all he felt was frustration that it stood in between his lips and the turgid peaks that he saw straining against it. He did not have the patience then as his mouth captured them through the lace.\n\nShe screamed aloud. One of those ear splitting ones that he loved and loathed so fucking much as he felt her tight cunt contract around his throbbing cock. He was not certain how, but by some miracle of the gods and goddess, he managed to hold out even though her orgasm milked at his cock in perfect time with each deep thrust. \"Not yet, not quite yet, my sweet Freya,\" he groaned as he arched up burying his full length deep, deep inside her.\n\nAnd the whole fucking universe exploded in a big bang as her scream became louder, more desperate. Something fucking stellar gripped him as her always tight cunt spasmed and gripped him, sucking his cock into a black hole, a spiralling vortex of need that he was utterly powerless to ignore. He cursed in every language he knew as he erupted inside her. Over three months of need. Three long fucking months of wanting and desiring this woman. The only one he had wanted...and he had tried more than once to divert his attention to other subs. \n\nOver three months of the only relief being his own hand when he got so completely desperate he could not avoid it anymore. Three months of coming to fantasies of her...none of them half as fucking good as this moment as her hands on his chest pressed him deep into the mattress and her thighs wrapped about his squeezed and sucked, drawing him so deep as he came in her that he swore he could never leave again.\n\nIt seemed to go on forever their combined orgasm. But it was over way too quickly as she collapsed atop him, her face buried in his shoulder as he wrapped his arm about her waist and held her tightly against his body. He turned his head and kissed her nose as he chuckled, \"I don't think I have to guess what trigger baby brother used do I, my swe...\"\n\nHer fingers covered his lips, \"Don't you fucking dare. I don't think I could survive another one like that,\" she giggled. \n\nHe was the one questioning whether he would survive as her laughter plunged his still hard cock deeper inside of her. \"\u00c6 \u00e6lske d\u00e6,\" the words were out before he could even think them. They just escaped before his brain could even filter them. He sucked in a deep breath and prepared for her questions. He knew she would have them...whether she had learned those words or not. \n\nBut it was not be as they heard the loud echo of boots coming down the hall and heard Bjorn call out for her. He tried to push her off, but she sat up and shook her head. \"No, Sven. No hiding. I will deal with him. But I am not fucking being made to choose...not by any of you again. So Bjorn can learn that as much as you can.\" \n\nShe bent and kissed his lips lightly as the door swung open, \"What the fuck!\" his baby brother cursed from the doorway. But her body blocked his full view of his brother's face. He would bet that she intended it to. \n\nShe lifted her head slowly and smiled at his brother, \"God dag, Master.\" \n\nSven frowned at that word. Even as he recognized their wife's innate wisdom in using it at this moment, he still was less than pleased to hear her call his baby brother 'Master,' a title that he had never desired himself...at least not with the temporary subs upon which he had wasted a lifetime. But it rankled like hell hearing her call Bjorn that. As much as the 'M' that shouted at him from the top of her breast, just inches from his face above the purple lace. He reached up and tugged her sweater down to cover it and her.\n\nThe fucking hard truth was that both of his brothers had staked their claims solidly on her mind, body and especially her heart. Question was...what was he going to do about it? He had sworn he would leave them to it. And endured three fucking months of living hell, a high price to pay for stupidity. Even if he was behind the game with her, today had shown that there was still hope. Hope he had to take. \n\nHe turned his head and faced his baby brother, eye to eye, man to man. But it was their wife, who did the talking, \"It was my choice, Bjorn. Just as it usually is. So I will tell you both right now, this night I am not fucking choosing between you. It will be all three of you in my bed or...none of you.\"\n\nSven stared at his warrior woman with a shocked surprise as she bent and kissed him. He felt his cock slip from her cunt and her hands slip between them tucking his erection back inside his jeans as much as she could anyway before she rose off him. Her skirt flowed about her legs but he could imagine his seed leaking slowly down her inner thigh.\n\nShe bent and picked up her coat, tossing it over her arm as she walked across the room and stood on tip toe. Her hand caressed his brother's smooth cheek tenderly and his chest tightened. She stood on her tip toes to kiss the damned giant. Just as softly as she had him a moment before. \n\nThen she stepped back and looked back and forth between them, \"I will talk to Mikael myself. Though I doubt he will give me the trouble that the two of you will. Oh...and the only damned bruises I expect to see in that bed tonight are on me. So if you thought you could 'talk' this out in the 'fighting' field think again. Petrine and I both think that place has been fertilized enough with the blood of brothers.\"\n\nShe giggled and toss back her head, \"So if your autistic niece can learn to use her words, I am sure the two of you can too. Otherwise...my door is closed to all of you until you do. Your choice.\" \n\nWithout another word, she walked down the hall, wrapping her coat about her as she went. Never once did she look back at them, though both watched as she climbed the steps to the deck.\n\nThen they turned to stare at one another. Sven shook his head and laughed, \"Why the fuck 'my sweet Freya'?\"\n\n***\n\nBjorn tried his damnedest to breath as he turned off the shower and wrapped the towel about his waist. He knew he was fucking procrastinating. But he was still trying to come to terms with what was to happen this night. After Kirsty had left the boat, he and Sven had talked...as much as they could anyway. Bjorn had never been as close to his older brother as he was to Mikael. The man was more a boss, an acquaintance or familiar stranger than a brother. \n\nBut she had given them no choice. Well, not really. Either they came together to her bed...or not at all. Any of them. And he at least had tried to dissuade her. That afternoon he had found her alone with Monika on the playground. When he had wrapped his arms about her waist, she had melded her body to his, leaning into him...and his hopes had soared.\n\nHe had spent a couple of moments simply kissing her cheek and working his way around to her ear where he nibbled on the lobe. Only when she smiled and sighed that perfect exclamation of contentment did he whisper, \"You can't force us, you know.\"\n\nHe was prepared for an argument, had rehearsed his logic carefully, determined to win this battle of the wills. If he could not assert his will in this one, what kind of Master was he truly? He was not though prepared for her soft laughter as she turned in his arms and looked up at him with those incredible eyes, \"I am not 'forcing' you to do anything, Master. I am merely exercising the control that I do have, Bjorn.\"\n\nShe had kissed his lips gently, \"Do I need to remind you that you are the one that dragged Mikael and Sven into this marriage?\"\n\nHe had shaken his head and skipped all others weapons in his arsenal, going straight for the jugular, \"That was before Sven ra...\"\n\nHer fingers covered his lips as she shook her head, \"No, I never used that word. You and Mikael did. I won't deny that what happened...\" She paused and inhaled, looking across the field to make certain that his niece was well occupied, \"It was not as much what happened when Sven...\" \n\nHe loved the way that after all their dirty talk, even the over the top crap that Mikael used with her, still she blushed as she continued, \"It was not what happened in my bed that got inside my head as much as what happened afterwards. The way he...the way Sven...\"\n\n\"Dragged you naked into the hall like a common whore? Threw you at me and told me to handle you that he had had enough?\" he accused a bit too loudly.\n\nShe had shaken her head and placed her fingers over his lips, \"You are so fucking innocent sometimes, my love.\"\n\nBjorn had felt anger welling inside of him, something he never thought himself capable of...not with her. He hated his anger. He had fought so long, a lifetime, to control the monster that lurked just inside him. \"DON'T!\" was all he trusted himself to say to the woman he loved, the woman he never wanted to hurt, but knew he was impossibly close to doing just then.\n\nShe shook her head and caressed his shoulder lightly, working her hands around to the knots in his neck, \"Not like that. Not in a bad way, sweetheart. You are an idealist, an optimist, a true romantic. And I love all of that. I love you, Bjorn,\" she caressed his cheek and a tiny bit of the beast was shackled once more though it still fought at its chains.\n\n\"But it is not that easy for your brothers. The pain of Greta's betrayal ate at Mikael, left him questioning his own manhood. And Sven?\" Bjorn was shocked to see tears brimming in her eyes then, \"You had sixteen years here with Petrine before you finally went to sea. When you were still playing in your fort, your brother was already at sea. Doing a man's job and then studying his lessons at night.\"\n\n\"That was his choice,\" he argued, unswayed by her words. \"He was the one that begged and pleaded until my father gave in...against our mother's wishes. I'm not sure she ever forgave him for it either.\"\n\nShe shook her head as her fingers caressed his lips tenderly, \"There was a lot more standing between your mother and father than that one decision, Bjorn. But one thing I do know, I am not repeating their history. I am not allowing pride and jealousy to stand between us and the happiness we could all have.\"\n\n\"You know I love your mind more than I lust for your body, as much as I crave and need your control. So let me challenge you with this one...how much choice do any of us really have in this life? Whether it is your gods in Asgard, the ancient Greek ones that your mother teaches, the Christian one of my parents or just fucking Fate, the truth is that life throws crap at us every fucking day. And all we can really do is react to it,\" she wrapped her arms about his waist and held him tightly as she continued.\n\n\"I have lived here long enough, watched the sadness in your mother's eyes when she thinks no one is looking, the regrets of a lifetime, my beloved best friend and Master. I will not lose any of you to Njord and Ran without knowing that you take my love into Valhalla like a mighty shield. That is my choice to make with the cards that Fate has dealt me. But I cannot make your choice for you, my love. Only you can do that.\"\n\nShe had kissed him slowly and tenderly for a long moment until he would have sworn his toes curled inside his boots as she drew back, \"Know this, darling, whatever you decide it will not change my love for you. Any more than your brother's mistakes changed my love for him.\" \n\nBjorn would have argued more, tried to convince her though he knew it was futile, but Monika had had enough of the adults in her world ignoring her and had propelled her tiny form at his legs, demanding his attention as well as her new mother's. \n\nHe stared into the mirror as he contemplated shaving. Damn it, he hated it when she got inside his head like this. She had been his choice because of her brilliant mind, quick wit and big heart, so why the fuck were those the very things that he battled now? \"Fuck it,\" he cursed as he dropped the can of shaving foam...more for his niece, he chuckled as he opened the bathroom door and stepped into the hall where his brothers already waited outside her room.\n\n***\n\nMikael sighed and forced a smile as Bjorn stepped into the hall, looking sheepishly at the floor. \"Bless V\u00f6r, brother. I was beginning to believe I was going to have to come in there and 'convince' you.\"\n\nBjorn shook his head and chuckled, \"She said no bruises, remember?\"\n\n\"I'm a sadist, remember? All good sadists know how to inflict pain without leaving a single mark,\" he smiled.\n\nSven shifted from bare foot to foot on the cold wood floor as he looked from one brother to the other, \"So are we doing this or not?\"\n\nMikael held his breath as both of them met their youngest brother's eyes for a long moment. He shrugged slowly and shook his head, \"Do we really have any fucking choice? I don't know about you two but after ten days at sea and looking forward to coming home to her welcoming arms I am willing...if reluctant,\" he added.\n\nMikael turned to Sven then, \"And you, big brother? Ready to join the ranks of the Toffelhj\u00e4lten?\"\n\nSven frowned at him and growled, but then all three burst out laughing as the door to her room opened. She poked her head around the corner and smiled as she looked from one to the other of them. \n\n\"Do we pass inspection, brat?\" Mikael met her eye to eye with the challenge.\n\nShe shrugged with a slow smile and opened the door wider, \"If you all promise to be good.\"\n\n\"No such promises, lilla gumman. You know it takes a bad boy to handle your brat,\" he joked as he slapped her bare bottom playfully, the first one to step through the door. \n\nBjorn drug his feet as he entered but bent and kissed her lips, \"No more brat tonight, please.\"\n\nShe winked at him, \"What? You don't want to watch as Mikael works over my bare cunt with the tawse again, Master?\"\n\nMikael chuckled at the groan from his baby brother and the raised eyebrows from his older. \"What, old man? She don't bite, I promise. Though she does have a set of claws on her, but only if she is willing to risk the punishment that comes with using them.\"\n\nHe knew he was pushing both of his brothers. Perhaps they would both call him on it later, but for now he and his humor were the only ones capable of taking the lead and breaking the ice this night. And for her, he would willing pay the price later.\n\nWhen his older brother did finally step through the door, she closed it behind him and dropped flawlessly to the floor on her knees between them. He stepped forward and stroked her hair with her head and eyes cast to the floor, \"Good girl, elskling.\"\n\n\"Flenk Pia,\" Sven whispered as he lifted her chin and bent to kiss her lips. \n\nBjorn frowned a bit and Mikael held his breath. He really did understand his baby brother. As the middle child, he could remember both sides of the coin when it came to their parents' unusual relationship. \n\nHe had more than one memory of his mother throwing things at his father and uncles and of the bruises and broken bones that made his and Sven midnight rendezvous in the 'fighting field' look like a Wednesday night prayer meeting at the local church. Bjorn had never seen any of that though. So he had grown up with an idealized and unrealistic view of this whole damned tradition.\n\nNot that Mikael was all that enamoured with the way things were after his baby brother's birth. In some ways it was worse. His mother's year-long battle with depression had left its scars on them all. Those dark days when all she did was lock herself in this bedroom with Bjorn, sew her quilts and pound away on the old type writer throughout most of the night until Stig or his father commanded her obedience to sleep. \n\nAfter that they had all treated her with kid gloves. And though Petrine might have outwardly appeared stronger than Rachel had been, they all knew...knew it was just a mask she wore as much for her own sanity as for them. \n\nBecause he had never seen Rachel, it was easier for Bjorn to see only what he wanted to...the strength of Petrine, the tense peace between her husbands for her sake and the children's. A happy family that was not as happy as it appeared, except through the innocent eyes of a child. In some ways, Bjorn was still that child. \n\nHaving lived through the hell and pain of disappointment and failure, Mikael hoped like hell his little brother stayed that way. And as he had when it came to dirty diapers and ramshackle forts, it was his job to have his little brother's back right now. To help him as he had on those first short fishing trips to find his sea legs here too. \n\nMikael broke the ice once more and got things moving, \"Lilla gumman, you know how much we all love seeing you naked like this,\" he shook his head at how quickly she blushed and even opened her mouth to deny it until Sven gave her one of those sterns looks that he used to control them all. \"But this night I think you maybe just a tad too naked,\" he said as he reached into his back pocket for the present he had bought just for her. \n\nHer eyes went incredibly wide and her mouth fell open as she shook her head from side to side at the sight of the clover clamps. He smiled, as much as his little pain slut might fear them now he would bet any of them that by the end of the night she was begging and pleading him for more of her new favorite toy. \n\nKirsty's tits were magnificent to begin with. Her nipples were sensitive to the lightest touch but able to take a great deal of intense pain too. He had spent plenty of time nibbling, chewing and even biting them. While she might not be used to the sudden and powerful pain of the spring loaded clovers, he had used a couple of other sets of clamps on the beauties, including some rather nasty looking teeth that left the prettiest patterns in her pale pink flesh. His cock hardened at the memory. \n\n\"But I could use some help getting those sweet tits ready for these, don't you think little brother?\" Though he knew that Bjorn still had difficulty with his sadist side especially when they shared her like this, his brother was beginning to accept that it was a part of the dynamic between him and their wife, something that she craved that Bjorn could not give her. So he was pleased to see him nod his head slowly.\n\n\"First though I think our little present needs wrapping nice and tight, what do you think, Sven?\" \n\nHis big brother smiled as he laced his fingers through her hair and tilted her head back to look up at him, \"Ja, Kirsten. I think perhaps standing at the foot of the bed.\" \n\nMikael loved those eyes even more when they widened as she nodded, \"Ja, herre.\"\n\nSven tugged gently at her hair as he and Bjorn \n\nstepped forward to take her hands and lift her to her feet. Mikael left her to their care as he rummaged through the toy box for the things he knew she would enjoy most. One thing he was certain of...if each of them focused upon her pleasure and on giving her what only he could then they just might make it through this night without killing one another. ",
        "He first grabbed several lengths of rope and tossed them to both his brothers as they spread her arms wide between the wooden posts at the foot of the bed. They repeated the process at her feet. He smiled as he listened to their friendly debate about whether or not ones about her waist would be necessary. \n\nHe laughed and called over his shoulder, \"Who cares if it is necessary? Feel her cunt and you'll have the only answer you need.\" Laughter echoed off the dark wooden walls as they each wrapped rope about her waist and cinched it too to the bed posts. \n\nHe selected the things that he thought they would need most and arranged them on the 'throne.' By the time he joined them, his confidence was rising as he handed Bjorn the large, thuddy flogger that he had learned bore the name Thor. \"Get her butt warmed up with this. While Sven and I handle her front.\" \n\nHe nodded his head and Sven followed him to the bed. Each of them approached her from one side of the bed. Mikael smiled at her as the first blow from the flogger landed on her bare bottom. \"Feels good, doesn't it, elskling?\"\n\n***\n\nKirsty knew she was in trouble. Big trouble. Trouble times three. Delicious trouble. She sighed as she looked into the eyes of the man she knew was her ally in all this. \"So fucking good, Sir.\"\n\nShe chuckled as Sven's brows knight together, \"Language, young lady.\"\n\nMikael chuckled as he bent his darker head and captured her right nipple between his teeth. Her beloved sadist never did anything slow and easy as he bit down on the peak. She moaned and arched her back, a move that caused her bottom to jut out making the impact of Thor across its cheeks all the stronger. \"Ohhhh...\" she moaned as she closed her eyes. \n\n\"Nei, Kirsten,\" his voice was firm as she felt her other nipple pinched between thumb and finger. \n\nShe opened her eyes and turned to head to look up into his blue eyes, \"Ja, Herre.\"\n\nMikael bit her nipple harder as he gave her that sexy sadist smile and managed somehow to speak without letting it go, \"Not only are you talking too fucking much, lilla gumman, you are managing to do it two languages.\" He sucked it deeper into his mouth then released it with a loud pop as he sat back on his heels to admire his handy work. Before she even knew what was to come the shiny silver clamp sprang to life over her nipple and she screamed out at the instant, burning pain of the clovers. \n\nHe smiled as he passed the one on the other end of chain to Sven. \"That's better, much better, elskling. Baby brother, don't you think her butt is warmed up enough. Time for something with a bit more bite maybe?\"\n\nIf the look that Sven gave Mikael was any indication, she was damned glad she could not see Bjorn's. While she and Mikael often played to this depth with pain games when they were alone, they had never gone this far in front of Bjorn...and now Sven was added to the mix. But rather than concern her, it only heightened her need...for pain as well as them. But it was up to her to make them understand that. \"Please, Master. Yes, please, Herm\u00f3\u00f0ur.\" \n\nShe felt Bjorn's nails run lightly across her bottom and moaned again at the intense feeling as Sven bent his head and suckled her nipple into his mouth at the same time. Her pussy was on fire already, she could feel the sticky wetness leaking down her thigh like molten lava flowing from Kilauea. And damned them for the ropes about her waist that stilled her movements and kept her from being able to rub against him even more. \"Arghhhh...\"\n\nMikael chuckled, \"That's the language I love most, lilla gumman.\" He kissed her lips tenderly as Bjorn's nails scraped over the heated flesh of her bottom and Sven's teeth worried her turgid nipple. \"See how wet she is, Bjorn?\"\n\nWhen his thick fingers trailed slowly down the crack of her ass and between her indecently splayed thighs, she strained as far as she could against the ropes, trying to draw them inside her. But rather than being rewarded with the thickness filling her, it was a solid stinging blow to her ass that caused her to jump. \n\n\"No, sweetheart. You will come only when we give you permission.\" She felt Bjorn breath the words into her ears as he gave in and slipped Freya only knew how many fingers inside her. She cried out as he whispered, \"You do NOT have permission to come, our beautiful slutty wife.\"\n\nShe turned her head to look into his Kelly greens eyes, prepared to beg and plead for misery. Until she saw that look...Bjorn's sadist may not enjoy giving her physical pain, but this was worse...so fucking much worse. Still she had to try, \"Please, Master, oh please...I need to come so bad.\"\n\n\"Badly,\" he smiled as he corrected her English. \n\nBut she was beyond caring, unable to intelligently communicate in any language. \n\n\"Please, v\u00e6r s\u00e5 snill, s'il vous plait,\" she begged.\n\nHe shook his head as the light blond lengths shook about his broad shoulders, \"Not even if you manage to say it in German, Russian, Italian, Spanish and Mandarin. The answer is still no...nei...nein...nyet...m\u00e9iy\u01d2u.\" \n\nShe whimpered as she stared into the resolve in his eyes as he bent to capture her lips in a gentle kiss that only made the aching need between her thighs and the sweet torture of Sven's lips, tongue and teeth on her nipple all the worse. \n\nBut nothing prepared her for the shocking pain as Sven released her nipple from his mouth and popped the other clamp onto it. She screamed into Bjorn's mouth as she fought with everything inside of her not to come from her favorite mixture of pleasure and pain. She did not want to go through another night of denied orgasms...not with all three of them finally in her bed. \n\nNot after having waited for months for this moment. She was not going to spoil it...well, for her anyway. At least two of her sadistically loving husbands would probably enjoy it very much. And somehow, by some miracle, she managed it. Just barely though. \n\nBjorn withdrew his fingers as he broke the kiss. He smiled as he stepped back just enough that their bodies no longer touched. He brought his fingers to her lips, but it was his oldest brother's voice that growled, \"Good girls clean up their messes, Kirsten.\" \n\nShe looked back and forth between them with a smile as she sucked two of Bjorn's fingers deep into her mouth. She took turns meeting each of their gazes as she toyed and licked all four of his fingers completely clean. If she was going to be in trouble, she was determined they would be too as she teased them with the image of something other than fingers between her lips. \n\nMikael leaned forward and laced his fingers through her hair, tugging her head back until she stared only into his silvery depths, \"Enough, my delightful brat. Enough with your teasing.\" He bent and kissed her cheek as he whispered, \"All for you, elskling. Just for you because we love you. We all love you.\"\n\nThe tears in her eyes as Mikael drew back had very little to do with the fact that her beloved bad boy thought it appropriate to offset his sweet words with a massive dose of endorphins of another kind as he tugged on the chain between the clovers ratcheting the constant but bearable pain to blinding hot flames that licked from her nipples straight up to consume her whole brain.\n\nOnce more he leaned back on his hunches as he looked over her shoulder to Bjorn, \"Warm her upper back and shoulders with the damned flogger until you raise red welts on it.\"\n\nShe turned enough to see Bjorn frown until she nodded her head and bit her lower lip, \"Please, Bjorn.\"\n\nHe nodded and walked across the room to where Mikael must have set out the toys on that damned throne. She could not see everything that was on it, but she watched as Bjorn laid Thor across the arm of it, carefully shaking and combing out the falls. She sucked in a deep breath as he picked up Herm\u00f3\u00f0ur. \n\n\"If you are a very good girl for baby brother, I think there might be a special surprise for you, lilla gumman,\" she turned back to watch Mikael as that smile split his handsome face. Oh, she was in such trouble here. As he turned to Sven, \"Have you shown her your specialty?\"\n\nSven shook his head as he smiled at her, \"Nei.\"\n\nMikael caressed her cheek as she felt the first stingy blow of Herm\u00f3\u00f0ur land across her shoulders. \"If Bjorn is sought after in the clubs for his skills with floggers, Sven is equally or more so for his...with the whip, elskling.\"\n\nHer head swam at those words as another blow of the flogger connected and more of her juices slid down her thigh. She had never thought to try a whip. She chuckled and both Sven and Mikael gave her a stern stare as Bjorn landed an even more powerful blow with Herm\u00f3\u00f0ur. \"What do you find funny, lilla gumman?\" Mikael frowned as he caged her jaw with his fingers. \n\nShe dropped her eyes like a good submissive before she replied, \"I was just thinking about all those hard limits that I once thought were too much for me, Sir.\"\n\nThey all laughed and the deep, rich song echoed around the dark walls of the dungeon cum bedroom. \"Our sweet, lovable wife, how many times must I tell you...what kind of Doms would we be if we did not push your limits, try your boundaries?\" \n\nShe nodded and closed her eyes, rubbing like a kitten against Mikael's fingers as another blow fell across her shoulder. \"Yes, Sir. And I have such selfless Doms,\" she chuckled.\n\n\"And don't you...\" Bjorn said as a blow landed across her shoulders. \"Fucking,\" another fell on the other one. \"Forget it,\" he said as another landed exactly in the middle. \n\nShe moaned as she once more fought back another orgasm. It was getting harder and harder not to come. Mikael released her chin and she opened her eyes to see him move off the bed to join his younger brother behind her. She could not see what he was doing or hear what they said but she truly had to fight the need to come as she felt the cold, sharp steel begin to trace along the sensitive skin of her back. \n\n\"Beautiful as always, baby brother. Come see, Sven. I think he has managed to warm her up very nicely for you.\"\n\nSven smiled at her and caressed her cheek as he challenged, \"We shall see.\" Then he too joined them behind her and she was left to stare at the intricate red patterns of interlocking circles that she had learned from Petrine was called the wedding ring pattern. \n\nShe smiled, though she knew that society and especially her mother might never understand or accept the bond that she shared with these men. She might never be able to actually stand in a church in front of god and everyone and proclaim her undying love for them. That did not matter. In her heart where it counted most of all, she knew...she was married to each of them...all of them. And this was her true wedding night.\n\nThen it was Bjorn and Mikael who came to kneel in front of her on the bed, who caressed her face and took turns as they did turning her face, kissing her deeply until her head swam with confusion. Then she felt it...the first sting of a whip landed squarely between her shoulder blades. \n\n\"Look at us, lilla gumman. Watch us as our brother uses his whip on that soft, white skin of yours,\" Mikael whispered.\n\n\"You will wear our marks for days, sweetheart. Herm\u00f3\u00f0ur's, the whip, Mikael's knife. Your sweaters will rub against them sometimes...and you will remember this night,\" Bjorn purred.\n\nShe smiled up at them with tears cascading down her cheeks, \"I will remember this night always, my loves.\"\n\nThey smiled and each kissed a tear from her cheeks. \"So will we,\" said Mikael as the impossibly loud crack of the whip warned her a fraction of a second before she felt the stinging blow. \n\nBjorn leaned in and whispered, \"Come for us, our sweet Freya.\" \n\nAnd the whole fucking world went black as she screamed out and her body spasmed in the truly most earth shattering orgasm she had ever felt that combined perfectly with the pain of Sven's whip and their gentle kisses and caresses as the ropes strained and their arms wrapped about her to keep her standing. She felt warm liquid gush and squirt, flooding the floor and likely wetting the quilt at the end of the bed as well as it went on and on and fucking on...forever. \n\n***\n\nSven chuckled as he began to loosen the bindings on her arms as his brothers held her semi-conscious and very spacey body up. \"Changed my mind on your mind control crap, baby brother.\"\n\nMikael laughed as he slapped Bjorn on the back, \"Damned straight, that was awesome.\"\n\nSven wrapped one arm over each of their shoulders and allowed his brothers to massage blood back into her extremities as he made quick work of ropes about her waist. He laughed as he bent to work on the ones around her ankles. \"Damn, I think I might have to let her pass this once on good girls clean up their messes.\" He looked up at Bjorn, \"Toss me your towel.\"\n\nHis brother scowled darkly, but again it was Mikael, who kept things light as he reached over and yanked it from Bjorn's waist. \"Don't go all shy on us now, baby brother. In about two minutes we're all going to be holding her naked in this bed. And once we bring her out of subspace we're going to give new meaning to brotherly love.\" \n\nSven shook his head as he used the towel to clean up the floor as Mikael bore her full weight for a moment as Bjorn got off the bed and scoped her into his arms and carried her back to it. The two of them sandwiched her between their bodies as they began to caress and kiss her back to reality. He just stood there...feeling decidedly out of place, reminded that the two of them had been doing this for months, sharing her and this bed, working as a team to care for the wife that he had abandoned. \n\nFor a moment, he thought perhaps to just slip from the room while they were occupied with her. After all that had happened, did he really have any right to be here? Then Mikael caught his gaze and shook his head, \"Don't you fucking dare. Not now, big brother.\" He rose from the bed, \"You take over here, and I'll go downstairs for a few more things.\"\n\nSven shook his head, \"No, it's is all right. I will get them.\"\n\n\"No, no, you won't. So get over here before she starts to come out of it and wonders where you are,\" he tossed Bjorn a stern look. \"And you...play nice with our toy for two minutes while I am gone.\"\n\nBjorn chuckled as he drew one of her fingers into his mouth and smiled around it, \"Or what? You'll tie me up and throw me in fjord? I'm not five anymore, I can hold my own these days.\"\n\nSven laughed as he took Mikael's place behind her. He unbuttoned his jean, which had been too fucking tight from the moment she fell to her knees on the floor between them. \"Against us both?\"\n\n\"No fighting,\" she whispered into his brother's neck as he wrapped his arm about her waist and nestled his hard cock between the cheeks of her ass. \n\n\"Subs do not give orders, Kirsten. How many times must I tell you that?\" he purred against her neck.\n\nShe turned her head and half smiled through what he could tell was a lazy haze that was still skirting the edges of subspace. \"No, but wives do. Especially shieldmaiden ones...so fucking get used to it, old man.\"\n\nMikael bent over his shoulder and kissed her forehead, \"And you be nice, brat, or you will feel fifty with the tawse on the bare cunt.\"\n\n\"And another twenty on your ass with the cane,\" Sven added.\n\n\"And three days of denial and edging, brat,\" whispered Bjorn with his golden head between her tits.\n\n\"Damn, baby brother, and I thought I was the fucking sadist,\" Mikael said as he turned and walked to the doorway.\n\nKirsty roused herself enough to smile at him as she wrapped one arm about Bjorn's head holding him in place as he nursed on first on and then the other of her nipples. She entwined the other with Sven's about her waist, their fingers laced and locked tightly together until his breath caught and froze like the icy fjord on the coldest, and darkest winter's night. \n\nHis heart stopped beating in his chest. It was an intimacy he had never shared with anyone. A depth of connection he would have avoided at all cost with any other subs. But one that felt incredibly right with her. He lifted her hand and brought it to his lips as those words raced once more through his mind, he only barely managed to hold them back. Not here. Not with his brothers around. \n\nBut soon... Very soon. He and their wife needed to have a talk. A real talk. And he had a very good idea how to get it stared. Something he had had his eye on for months. Though why he would ever have been looking at collars was beyond him. But time and time again, he had found himself visiting the same profile on the site where they met. A sub that crafted the most beautiful collars that could easily pass for a simple necklace unless you looked closely to notice the charms that were handcuffs, whips, floggers and keys among others. Yes, maybe it was about time they all made this thing official."
    ],
    "authorname": "Tara Cox",
    "tags": [
        "whip",
        "flogger",
        "knife play",
        "submission",
        "domination",
        "rope",
        "master",
        "group sex",
        "brothers",
        "polyandry"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ashgirs-wife-ch-03"
}