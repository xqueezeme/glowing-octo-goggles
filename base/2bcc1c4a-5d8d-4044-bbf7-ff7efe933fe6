{
    "title": "Back to You Ch. 08",
    "pages": [
        "Hey Guys! Here's the eighth chapter of Back to You. I have one last chapter in store for Matt and Ollie, so look out for that in the coming weeks. I also had this idea for another series I'd like to work on, as well as toying around with reviving an old one- so check back to see which one writes itself first. Hope you guys like it. Please let me know what you think- I really appreciate it. \n\nChapter 8: A second chance at that old life \n\nMatt had been sitting in the driver's seat of his Four Runner for the past ten minutes. The car was off, keys out of the ignition and yet he sat there, hearing only his subtle breath as if waiting for some sign that the coast was clear. He knew he had to face the world today, and as he looked at his watch that read, 7:45, he knew that his time avoiding it all was running down. Building up the courage to open the door, he heard a knock against the passenger seat window. He looked to find Oliver, standing there with a shit eating grin, as if he just walked in on Matt touching himself. He felt equally embarrassed at his sign of weakness- the entire student body of James Monroe High School. \n\nOpening the door, Ollie sat beside him, \"Nervous?\" he asked. \n\nMatt nodded as he gripped the steering wheel. He barely looked at Oliver, keeping his sight straight ahead at the cluster of trees just past the parking lot. He didn't need a visual. Just knowing Ollie was next to him did wonders to set his mind at ease. \"It took me twenty minutes to get dressed this morning- every shirt I tried on just screamed, 'notice me.\" \n\nOliver reached over and slipped his right hand between Matty's and the steering wheel. Leaning in closer, he placed his palm on Matt's face and turned the boy towards him. Face to face for the first time that morning, Oliver pulled him in for a kiss as he ran his finger along the boy's jaw. He could feel Matt's trembling lips stop dead in their tracks as he pressed in. Both of their tongues stayed well in their mouths, each set of hands restrained in places deemed 'PG' and yet the two were able to share an embrace as passionate and as intense as what they did behind closed doors. \n\nAs they pulled away, Matt breathed out, shaking off the tension that stockpiled inside him. He finally smiled, asking, \"How are you so calm about all this?\"\n\nOllie simply shrugged his shoulders, \"The way I see it, Stevens. I'm crazy about you and now there's nothing stopping us from being together. Nothing we have to hide, no one we can't tell, just you and me, kid.\"\n\nNodding, Matt exhaled, \"I think I'm ready to go in.\" The two got out of Matt's car and stepped into the bright sun. Matt adjusted the straps on his backpack until they were tight on his shoulders, like he was about to embark on some expedition. Oliver came around the car and saw that Matty was beaming from end to end. \n\nMatt pointed out, \"I just noticed that you're wearing my sweater. Out of everything, why that?\" Oliver adjusted the sleeves with his fingers, \"It's OUR sweater, lover boy. And even though no one else but you knows that, I wanted it to be a reminder.\" Ollie covered the bottom of his face, feeling slightly embarrassed. With the sleeves right under his nose, he inhaled the black cotton. It smelled like him. Like Matty was somehow stitched into the fabric even though he only wore it for a few hours. He'd make sure that he wouldn't dirty it, hoping he'd never have to wash it ever again. \n\nAs they walked towards the main building and through the maze of parked cars and bustling students, Matt reached over and took Oliver's hand in his. He interlocked his fingers too, so their palms were perfectly pressed against each other, transferring heat. Oliver turned slightly, so not to react too heavily. \"We don't have to-\"\n\nMatt cut him off and instead, squeezed tighter, \"I want to, Ollie. You always seem to take away the nerves. \" Oliver nodded and held on. He looked to Matt as if he was a different person- like the scared and insecure boy was fighting a losing battle against himself. If Matt Stevens was able to push past his fears and hold his hand at school, Oliver knew he'd do anything he had to in order to make sure that boy knew he was just as invested. \n\nThe boys made their way through the front doors and through the sea of students, moving their way around each other like every other day of the school year. They stopped for a second, looking around as if checking their surroundings for potential threats. But other than the few confused looks and steady stream of knowing faces, everything seemed normal. Despite Matt's fears, the world didn't implode around them. \n\n***\n\nIt was sometime after his third class that Oliver found himself at his locker, swapping out books and gathering his things. He was met by a familiar voice calling out, \"There he is, ladies and gentlemen, the talk of the town.\"\n\nHe turned to find Peter Kline, beelining through the crowd towards him. Peter always had this eccentric quality to him, like everything about the world was exciting and worth celebration. He'd liked Peter from the get-go and even considered him a good friend. But with everything that happened with Bryce and the revelation of how he treated Matty all those years, Oliver just didn't know who to trust anymore. As he got close, Ollie saw he was trailed by Jess, yet another one of his friends and Peter's girlfriend. She wore a pensive smile along with her bright blue top and Oliver wondered which of the two stood out more. \n\nShoving the last of his books inside, Ollie called out, \"Hey Pete, Jess.\" \n\nJess stood there with her feet firmly planted. Crossing her arms, she raised an eyebrow, \"Wanna explain why I had to hear from Abby Winters that my friend was not only dating someone, but a guy nonetheless.\" \n\nOliver swung his backpack over his shoulder, \"Don't give me that, Jess. I don't need to take shit from you two right now.\" He pushed past the two of them, ready to storm off in a rage that felt all too familiar. But he felt a firm hand on his forearm, pulling him back.\n\n\"Stop, dude.\" Ollie shrugged, trying to shake the other boy off, but he was equally matched. Sighing, Oliver turned back with an expression on his face that read, \"talk before I kick your ass.\"\n\nPeter softened his voice, \"What Jess was trying to say is that: we don't care that you're gay, Oliver. Or that you're dating someone.\" He shrugged his shoulders and released the boy's arm, \"We just hoped you would have come to us first before it turned into the latest school gossip.\" He returned a warm smile on his face, the kind that held no threats or false pretenses. \n\nOliver shook his head, nervously running his palms along the front of his jeans, \"I'm sorry- I just, I guess I didn't want to make a big deal out of it. I like Matt and he likes me, and we want to be together. It's simple.\" He looked up to find eyes fixed on his blushing face. He turned to Jess, \"When you and Pete got together, there wasn't a big declaration or an announcement of any kind, it sort of just happened. Why should it be any different for me and Matt?\" He looked back after letting all of his thoughts roll off his tongue. He knew the answer to his own question. Things were different because they simply were. And yet, among that, he longed for a sense of normalcy. \n\nJess reached out and placed her hand on Oliver's shoulder, \"You're right, it shouldn't be any different. It just came as a shock, you know.\"\n\nThe three turned their heads up, hearing the bell ringing throughout the halls. Oliver closed his locker as the groups of people around them started shifting like the tides. Before heading off to class, Jess felt she had one more thing to say. \"Next time something big happens in your life, don't shut us out cause you think we won't understand.\" \n\nPeter chimed in, swinging an arm over Oliver's shoulder, \"Who knows, we might just surprise you.\"\n\n***\n\nOliver stepped onto the soft grass and headed straight towards the trees. There, in the lone picnic table, draped in the shadows of the overcast sky, he saw Matty. The boy looked determined as he carefully turned the page on the textbook he was reading, while twirling a ball point pen in his finger. He could see the boy's eyes, focused on the blocks of text before him as he stuck his tongue out the side of his mouth. \n\nOllie managed to creep his way towards Matt without being noticed. Then, easing onto the bench, he reached over and nearly closed the book on the boy's face. He spoke, \"I think it's just about time you took a break.\"\n\nMatt shook his head as he scribbled the last remaining notes, \"I have a Chem test next period and considering I spent the entire weekend at your house, I need all the help I can get,\"\n\nReaching around, Oliver snaked his arm at Matt's lower back. Pulling the boy in closer, he offered, \"And what a great weekend it was.\" The boys exchanged a quick glance, each undoubtedly undressing each other with their eyes. \n\nIn an effort to break that sexual tension before it bubbled over, Matt added, \"Now if I fail this quiz, you definitely owe me big time.\" \n\nOliver was just about to reply with some witty comment when he heard rustling in the grass followed by a familiar voice, \"There you guys are!\" \n\nThe two looked over to find Jess and Peter, making their way towards them, both carrying trays of food fit to feed the entire soccer team. They eased into the bench opposite the two boys, while Matty tried his best to hide the confused look on his face. He'd seen both of them around school and hanging out with Oliver from time to time, but they'd never spoken to him.\n\nAs if reading his mind, Jess extended her hand, \"You must be Matt. I'm Jess and this here is my boyfriend Peter.\" Matty looked over to the other boy and exchanged a quick handshake. Turning back to Jess, she went on, \"We're friends with Oliver....\"\n\nPeter jumped in, \"His mom pays us a hundred bucks a month to talk to him.\" \n\nRolling her eyes, Jess continued as the boys shared a quick laugh, \"Now that you two are dating, we'd also like to be friends. \n\nOliver kept quiet, not at all phased by the forward nature that was Jessica Mills. She was a firecracker as much as she was a sweetheart. And truth be told, she was the one out of the two he was most worried to tell. He looked over to see Matt's face softening. The boy's walls- the ones he erected to keep everyone out in fear, were slowly coming down. \n\nMatt added, \"Well, it' always nice to meet new friends.\" \n\nAfter a round of nods, Peter spoke up, \"Well now that we got all the sappy stuff out of the way, let's eat!\" He reached over and pushed the trays of fries and wings towards the other boys as Jess handed out bottles of Coke. \"I think we got enough food, but considering how Oliver practically inhales his meals, we may need to restock\", he said just as Ollie had stuffed a hand full of fries into his mouth. \n\nAs Oliver powered through his burger, Jess asked, \"So what'd you guys do this weekend? I mean other than throwing Abby for a loop.\" She made a face that practically mirrored the shock that Abby wore that day, the one that complimented her skimpy outfit all too well. Matt nearly choked on his soda at the sight as Oliver patted his back. \n\n\"Mostly just hung out. My mom was out of town so I invited Matt over\", Ollie said, nonchalant.\n\nPeter raised an eyebrow, \"Ah, I see. So I'm guessing most of this hanging out happened horizontally? That was totally us the first weekend we had to ourselves.\"\n\nJess shouted out, \"Peter!\" as she slapped him harder than expected from someone of her size. He sat there, rubbing against his shoulder blade, barely protected by the thin shirt he was wearing. \n\nShrugging his shoulders, Peter replied, \"What! It's true! I remember we were supposed to meet up with Oliver one time and totally flaked because we got carried away.\" \n\nOliver pointed towards himself as he turned to Matt, \"I had to sit through the latest Fast and the Furious movie by myself and I didn't even like any of the first ones!\" He looked back at Peter and Jess who were both blushed beyond comparison. He finished, \"You could have at least texted.\" \n\nPeter put a hand on Oliver's shoulder, explaining, \"Well, like I told you that night last year.\" He raised an eyebrow, \"Something came up.\"\n\nAfter a round of laughter and a steady stream of high fives all around. Matt took a second to enjoy the moment. It had been years that he'd been surrounded by people who genuinely wanted to be friends, let alone sit next to the boy who meant the most to him. He breathed in, feeling that autumn breeze mix together with the aroma of French fries and stale soda. For the first time at this school, he found acceptance. \n\n***\n\nSometime after Jess and Peter left, Ollie looked at his watch to see that they still had a good half hour before their next class. He stood up, quickly shoving Matt's books into his bags and crumpling all the papers in the process. Matt looked up, confused, as he tried to straighten out his research paper against the edge of the picnic bench. He asked, \"Dude, what's the rush? We still have plenty of time before American Lit.\"\n\nOliver nodded, making quick work of clearing the table, \"Exactly why we need to get going!\" \n\nMatt rolled his eyes, knowing better than to question him. When Oliver had an idea planted so deep into his head, there was no way anyone could convince him otherwise. Instead he zipped up his bag and swung it over his shoulders, \"Fine. Lead the way, speedy.\"\n\nOliver dashed through the halls like a man on a mission, leading a winded Matt trailing behind him, almost sure he could see the dust form at Oliver's feet. He weaved through the halls, keeping watch of the olive green backpack as it twisted and turned through the school. Catching up, he followed Oliver's lead as he slipped into a nearby classroom after looking in all directions to ensure they weren't seen. \n\nStepping inside, Matt started, still out of breath from the quick run, \"Okay what gives, we don't have class for another thirty minutes-\"\n\nOliver shut the boy up by pressing his lips against Matt's almost as strong as he pushed the his body against the wall. Licking the surface the boy's pouted mouth, he found the satisfaction he'd been searching for all day. Matt tasted like spearmint mixed with a flavor that could only be described as addictive. And better yet, Matt tasted like his. He continued to peck along the boys mouth before slipping off, but not without biting on the boy's lower lip as he pulled away. \n\nHe nearly growled, \"I've been dying to taste you all day.\"\n\nMatt cradled the boy's face in his hands, still trembling from the urgency, \"But what if someone comes in?\"\n\nOliver turned slightly to kiss the bottom of Matt's palm as it grazed his cheeks, \"Mrs. Porter advises Mock Trial practice during lunch. So it's just you and me, kid.\" He plunged back to Matt's lips as if being restrained from the boy's taste for an eternity. Matt writhed beneath him, rubbing his back against the chalkboard wall and most certainly erasing whatever contents it once held. Ollie smiled to himself, as he saw Matt's dark grey shirt dusted in chalk all along the back, but he'd be damned if he'd let that stop him. That would simply have to wait.\n\nRunning his hand down, Oliver found the indent between Matt's chest. He swiped down, annoyed at the thin piece of fabric that separated his touch with his boyfriend's bare skin. He could almost feel the hairs along his chest, bristling through the shirt as if begging for air. Still moving down, he eventually ran his knuckle over Matt's hard prick. The boy's skinny jeans did nothing for the bulge that he had. Matt could be dressed in a bright pink halter top with stilettos and hoop earrings, yet that magnificent bulge would certainly be the most noticeable thing about him.\n\nTeasing for a bit, he heard the slight whimper from Matt's closed lips, dying to be touched. He grabbed at the boy's jeans, asking, \"What am I going to do with this?\"\n\nMatt didn't have the strength to play Oliver's little game. He'd been denying himself satisfaction since he left Ollie's house yesterday and after the weekend they'd had, a mere 15 hours seemed like an eternity. He cut through that shit eating grin with a voice that oozed assertion, \"No more teasing babe. Please just suck me already!\" \n\nNot waiting for an answer, Matt undid his own jeans and slid them down to his thighs. His cock almost smacked Oliver square in the face but the boy was quick, grabbing onto it as it flung out of the waistband. He rubbed his thumb against the wet slit, feeling the embodiment of Matty's anticipation. He slowly drew his slick fingers to his lips, coating the surface like chapstick. Slipping his tongue out, he tasted Matt, all the while looking up to see a fixed gaze staring down on him. Matt could feel his body clench with Oliver just inches away, but the boy simply wasn't moving fast enough. \n\nMatt growled out, \"I swear to God, Ollie if you don't-\"\n\nBut Matt never got to finish that sentence. Oliver had been drawing out his act, waiting for Matt to break. The boy had a tendency to get so bound up in himself that he loved when Matt threw caution to the wind and vocalized everything he wanted. At that moment, he sunk down on the boy's cock nearly taking it entirely. Two measly inches kept the distance between his pouted lips and the boy's nearly trimmed bush. He could smell sex on his boy's skin- the way guys their age douse their bodies in cheap cologne.\n\nThe growl in Matt's voice turned to that of a high pitched whimper. It was comical how quickly Ollie's mouth could turn that boy from domineering to needy. But there Matt was, holding onto Oliver's shoulders- the only support that kept him from falling face first on the vinyl tile before him. Oliver sucked on the boy's cock with determination, hell bent on making Matt cum so hard, they could hear his moans across the campus. \n\nAs time progressed, the two boys became nothing but a series of motions: from the rummaging of Matt's antsy fingers through the other boy's silken hair, to the long movements of Oliver's mouth as he continually pushed Matt's cock down his throat. The boys didn't even speak- apart from the slurping sounds and moans alike. Matt was sure he blanked out a few times- the only thing that kept him from cumming whenever he felt the back of Oliver's throat massaging his head. Each time, he could hear the rustling of footsteps just outside along with the feint ticks of the old fashioned clock just above their heads. Their time was limited. Oliver has become quite the cocksucker since he first started weeks ago. By now, his mouth had memorized Matt's overgrown cock and the two continued a long a drawn out dance that would soon come to an end. \n\nMatt knew he was on borrowed time as he slid his fingers down, anchoring them on Oliver's jaw. The boy looked up, not breaking his movements as he bobbed his head back and forth. He had been the object of his affection for years and he still felt the need to pinch himself every time Ollie reciprocated. But between the confidence he had given him and the safety he now secured himself with, there was no denying how much he meant to him. Matt was soon brought back to reality as he felt the gentle tug on his balls. He forced himself not to look down, instead channeling the pressure of Oliver's fingers as they kneaded his balls, as if getting them warmed up for the end. Matt pressed into the chalkboard, cupping Ollie's head in his hands and grazing his finger along the boy's temple. \n\nThe build up was always his favorite part. It was those few moments when he could feel the orgasm surging through him, ready to explode at any moment; the feeling of his balls so worked up that the slightest uncalculated touch could have them emptying themselves in seconds. That moment was something Matt tried to hold onto for as long as he could, but Oliver's expert tongue wasn't helping the situation. After a long and strained moan, he looked down to find Oliver staring straight at him: eyes full of lust and the makings of a smile that formed at the corners of his full mouth. Big mistake, Stevens. ",
        "The sight of his lover was enough to send him over the edge. He raised his hand to his mouth and, biting down on his fingers, started to shoot his load deep into Oliver's mouth with a strained whimper. The ticking of the old clock above their head that once filled the room was now replaced by Matt's muffled screams and the strong sounds of cum blasting into Ollie. The boy pulled back so he could rest Matt's slit along his tongue, lapping up all of the his juice as it shot into him. Oliver kept the boy's cum in his mouth, making a show as it trickled all along his tongue, nearly dripping out the sides of his lips. He waited for Matt to compose himself as his body stopped shaking. Still a trembling and frazzled mess, Matty looked down to see Oliver swallow all of his load in one shot. \n\nUnable to hold back, Matt pulled Oliver up and pressed his lips against his. Their tongues clashed with Matt fighting for control. He could taste his cum on Ollie's tongue- a fact so erotic, he could feel himself desperately trying to get hard once more. It was Oliver who broke the kiss, pulling away enough so he could speak, \"You don't know how good you taste Stevens.\"\n\nMatt stuck out his tongue and ran it along the boy's wet lips, \"Actually, I do\", he said with a chuckle. \n\nAfter a few pecks along Ollie's cheeks, Matt moaned as he slowly sunk down to his knees. He'd wanted to give the boy as much pleasure as he received. At this point, he didn't even care if Mrs. Emily Porter herself were to walk through the door. He felt the cold floor through his jeans, \"Now it's your turn to cum for me.\" \n\nOliver scratched his back and replied, \"Uh, Matty you kinda did already.\" \n\nMatt shot back with a confused look, \"What do you mean?\" He looked to see Oliver's crotch still hard before him. \n\nOllie shrugged his shoulders, trying to hide the ten shades of red that swept across his milky face, \"When you shot in my mouth, it was so intense that I came without touching myself.\" Ollie reached to scratch his back, masking the embarrassment that oozed out his pores- soaking his skin the soiled boxers he wore. \n\nA huge grin came over Matt's face as he pulled Ollie's hands out from his back pockets, \"Wait are you serious?\"\n\nChoosing to show rather than tell, Oliver undid the button of his jeans and pulled them down. Matty bit down on his bottom lip as he caught sight of the pronounced wet spot that nearly covered half the boy's thin boxers. He beamed with pride, knowing he was able to make Oliver Morrison cum without even touching him. Matty licked his lips, anticipating the taste of his boy as he pulled the wet boxers down, trying not to wipe up any more of Ollie's cum. \n\nOliver breathed out, \"Wha-what are you doing?\n\nMatt raised an eyebrow, responding simply, \"Cleaning you up.\" He looked up to Ollie and winked, \"We can't have you going the rest of the day like this, can we?\"\n\nOliver's eyes widened as Matty leaned forward and licked the drops of wet cum still clinging to his skin, \"No we can't.\" \n\nHe watched as his boy swept his tongue across his crotch, lapping up every ounce of cum as it collected on his tongue. He felt his cock stir being so close to Matt's puckering lips, his bright pink head flaring out of his foreskin as it grazed Matty's cheeks. The boy grabbed at the shaft and gently slapped the head along his tongue to get every last bit out. Oliver let out a long moan as he felt his head being wrapped by Matt's lips as the boy sucked him for good measure. \n\nAfter a few minutes of clean-up, Oliver eased back into the chalkboard just as Matty resorted to sucking the residual moisture from the boy's boxers. He looked up, satisfied yet still hungry- a combination that Oliver knew he'd never go tired of trying to fill. Ollie reached for the boy's shoulders and pulled him up for a series of soft and passionate kisses. \n\nMatty smirked, \"Not even a whole day as an official couple and we've already swapped cum.\"\n\nOliver shot back, \"Can you blame me? You look so good today and I wanted to show you how much I wanted you.\" He leaned into Matt's ear, \"Tasted good too.\" \n\nLeaning in for one last kiss, Matty looked down at his watch to see they only had a few minutes before the classroom would soon be full of students. He stuck his unwavering hard cock back into his jeans, \"Let's get dressed before everyone finds out just how much of a couple we are.\" Oliver nodded, dusting the chalk off Matt's back as he zipped up his pants. \n\nMatt could resist reaching out and squeezing the boy's crotch once more, \"Just three more hours and we can go for round two.\" \n\n***\n\nOliver knocked on the bright red door of Matt's house a little after three. The two boys had only been separated for a half hour since school got out- essentially the time it took for them to drive home and Ollie to drop his stuff off and get changed. Still, Oliver felt the same butterflies filling his gut as the door slowly opened. He hoped those feelings for Matty would never go away. \n\nMatt let out a laugh as he opened the door to find Oliver clothed in a white tee shirt and khaki shorts- an outfit nearly identical to his own, right down to the pure white shoes Matty had in his bedroom. \n\nGiving him a once over, Ollie crooked his neck. \"Okay, one of us has to change, and it's not going to be me\", he said as he stepped inside and slipped off his shoes. \n\nMatt raised his hands, \"Why does it have to be me?\" \n\nOliver rolled his eyes, \"Because you're the one with clothes upstairs, genius.\" He smirked as the boy crossed his arms and feigned irritation. \n\nLeaning in towards the shorter boy, Matt added, \"I swear, you're always trying to get me out of my clothes.\" His breath so warm that Oliver could feel it traveling down his spine, like a wash of humidity over his body. If given different circumstances, he'd be unable to hold himself back from pushing Matt over towards the couch and devouring him with reckless abandon. \n\nBut instead he sighed, lowering his voice to match, \"Looks like you're a genius after all.\" His mouth was so close to Matt's ear that he could feel the sweet nothings slip off his tongue with every quiver of his breath. He made a laundry list of all dirty things he could whisper into Matt's ear. \n\nAll of that came to a crashing holt at the sound of a high pitched, \"Ollieeeee!\", followed by a stampede of tiny feet. He loved that little girl, but she sure had the worst timing. Katie came crashing through in under two seconds flat, running towards Oliver who stretched out his arms, ready to pick her up in a move that would make the cast of Dirty Dancing jealous. \n\n\"Hey there Katie! How's my favorite soon to be seven year old?\" Oliver asked as he tossed her into the air a few times. \n\nKatie managed to control her giggling enough to answer, \"Good! Mommy's just about to take me to dance practice, we have a big recital coming up!\" \n\nOliver's eyes grew big as he put on his best excited tone, \"Wow! Do I get to come?\" \n\nKatie nodded as she fixed the loose hair that came undone in the jump, \"Sure! You can go with Matty so he has someone to sit with.\"\n\nMatt laughed first, unable to handle the cuteness that his little sister exuded. Oliver put Katie down and squatted so they were eye to eye. \"And then after the show, Matty and I can take you for ice cream like we did after the park.\"\n\nRaising her hands in excitement, Katie let out a scream so high it could break glass, \"Yay! I'm gonna tell Mommy that you're coming!\" She started to run off, but not before looking back at the tall teens looking back at her, \"I love having two big brothers!\" \n\nMatt swore he could see Oliver choke up in that moment. He blinked a few times, trying to remove any tears that may have formed under his brown eyes. Just as he cleared his throat, Matt swung his arm over the boy's muscled shoulder, pulling him into a one armed hug. \n\nHe turned to Ollie, trying to ease the boy's emotions. Oliver had always been a rock for everyone around him, even when they were just kids. Matt knew that life had hit that poor boy hard these past few years, leaving him with no choice but to be strong. But every now and then, Ollie gave in to weakness, cracking at the surface of the composed exterior he worked so hard to build. This was one of those times.\n\n\"You know, if you keep this up, she'll start liking you better than me.\" He looked up to see a smile forming at Oliver's mouth, \"And we can't have that.\" \n\nOliver breathed out any lasting remnants of melancholy and changed his tone. \"Too late, Stevens. I'm clearly Katie's favorite,\" he said as he stuck out his tongue. \n\nMatt squeezed the boy's body against his, \"Mine too.\" \n\n***\n\nAfter Matt's mom and Katie left for dance practice, the boys forced themselves to actually do some work before each of them could play. The two worked like a well-oiled machine for the next hour and a half. Matty rested at the headboard of his bed with Ollie lying next to him on his stomach. They were just now starting the project Trevino assigned to them three weeks ago and while everyone else was knee deep in research, Matt and Oliver had just decided on a topic. \n\nAfter fumbling through chapters of their History book, Matt stumbled on one about Japanese Internment Camps in World War II- a topic he'd known very little about. Ollie was immediately hooked, reflecting back on his own experiences as a second generation immigrant, and everything his mother had to go through when she moved to the States for college. Soon the boys were reduced to Google Chrome tabs and Post-It Notes that bookmarked every relevant chapter on Asian assimilation into Western Culture. \n\nSometime later, Matt let out a deep breath as he jotted down one last online source onto his growing stack of flashcards. He closed his laptop, setting it down on the nightstand, \"I think it's time for a break, don't you?\"\n\nOllie nodded as he carefully closed the book and all it's contents. He moved up towards Matt and rested his head along the boy's chest. Even clothed, he could feel the small hairs of Matt's pecs on the back of his neck. He eased in as Matt threw an arm over the boy, gently rubbing against Ollie's flat stomach and feeling the dips in his fingers as they moved between abs. \n\nChoosing this moment, Matt asked out in a soft voice that matched the muted intensity in the room, \"This afternoon when Katie called you her big brother, what made you choke up?\" Ollie moved slightly, keeping Matt's outstretched arm over his body as he looked back, \"I didn't think you noticed that.\" He paused for a second, \"I guess it was just a lot to take in.\"\n\nMatt looked back at him, trying to decipher the boy's eyes for some indication of emotion. Was he distraught? Was he upset? He could feel all of the possible responses flooding his mind as if trying to find some way to salvage the situation. Maybe Katie was too young to understand, or she didn't know what she was talking about. Maybe Oliver was freaking out because everything was moving so fast, too fast. That last one scared Matty to death- hoping it was anything but that. He stopped himself before getting too deep into his thoughts and remembered what Ollie had told him about opening up. \n\n\"What do you mean by that?\", the boy asked as he cautiously waited for a response. \n\nOllie chose action, squeezing the boy's hand tight as he rolled over so they were facing each other. He opened his mouth, letting the hard exterior crack before Matt's eyes, \"When my dad died and you still weren't talking to me, I felt like I lost everything.\" Matt gulped down, tasting the bitterness as it slid down his throat. Ollie went on, \"My mom chose to let herself feel. At night, I could hear her sobbing from my room until eventually I'd fall asleep. Then the next morning, she'd cook breakfast like everything was fine. I didn't think I had that choice. I needed to be strong. Eventually, mom dove herself back into work to keep her mind off things.\"\n\n\"And what did you dive into?\", Matt asked softly. \n\nOliver made a face, \"My thoughts mostly. I thought a lot about you. And what happened between us.\"\n\nThe silence surrounding the room was deafening that Matt could hear his integrity shatter into a million jagged little pieces. He'd always felt an internalized guilt for abandoning Ollie, but this was the first time he understood the full gravity of what he did. He pulled Oliver in, beyond relieved that the boy didn't recoil in his arms. He waited until Oliver looked at him, \"Ollie, I am so deeply and truly sorry that I wasn't there for you. I just didn't know how to suddenly be a part of your life again after I completely shut you out.\" Matt's voice cracked as he pushed on, \"Your dad was a great man who loved you with every fiber in his being, and I can't imagine what you went through in losing him. I just need you to know if I could go back, I would never have shut you out.\"\n\nOliver refrained from talking immediately. He eased into Matt's body, feeling the boy's warmth despite the cold and frigid emotions that ate through his flesh like frostbite. After letting those words sink into his core and warm his bones, he looked over to Matty. The boy was petrified, wearing a red-eyed expression with quivering lips that seemed to be searching for the words to say. He spoke instead, offering, \"We both went through our own version of Hell. We were just too stupid to think we could do it without each other.\" \n\nMatt squeezed Oliver's frame tight against his, and with those reassuring words, the ice between them started to melt. \"Never again\", he promised, keeping his eyes fixed on the boy as if trying to penetrate into his body. \n\nOllie shivered in that moment, knowing it to be true, \"Being with you was like a second chance at that old life. And god knows how badly I've wanted it back. This family- with you, your parents, my mom and Katie, it doesn't feel incomplete anymore.\"\n\nCrawling back up towards the headboard, Oliver and Matt rested their heads on the pillows. Matt came up from behind, encircling Oliver's body in his arms before locking his fingers tight. This was different from their usual configurations, yet Matt knew it was just what the moment called for. As Oliver's jet black hair moved closer, he could smell the boy just under his nose. A clean scent washed over him as Matt left small kisses along the boy's hair, so gentle that they were barely felt at the scalp. Oliver crossed his arms over Matt's, adding an extra layer of protection and security as he rubbed against the boy's furred biceps. \n\nThat afternoon, Oliver felt a wave of vulnerability crash through the tough exterior he erected all those years ago. Slowly, he watched it erode under Matt's touch. That boy was a catalyst for some of the hardest moments in his life, yet now as they lie intertwined with no ability to discern one body from the other, Oliver truly started to let all of those transgressions blow away with every bated breath. Matt may have been the one to tear him down, but he's the only person who could lift him back up again; a bridge rebuilt after being burned down to the core. \n\nHe listened intently to the taller boy's heartbeat, gently pounding against his ears like a drumroll. He spoke softly, wanting the intensity of his words to make up for the volume. \"I love you, you know that?\" He said as he gripped the boy's wrists. \n\nMatt muffled a gasp as he woke up from the dreamlike state he was in. He asked out, \"What did you just say?\", blinking several times to ensure he was conscious. \n\nOliver turned so they were face to face, \"I love you, Matt Stevens. I have for weeks now and I was just too scared to be that vulnerable again with anybody. But I'm not scared anymore.\" The boy's dark brown eyes melted into two pools of warmth and sincerity. \n\nMatt choked up, sniffling as he tried to find the words. He breathed out, shaking the inner demons that once haunted his self-deprecated mind. He looked at Ollie with a child-like smile, \"You don't know how long I've waited to hear you say those words.\" \n\nNeeding to close the gap between them, Matt pressed his forehead against Ollie's, \"I've loved you for most of my life, Oliver- probably before I could even understand who I was. You don't know how happy you've made me in just these past weeks alone.\"\n\nOllie cradled the boy's jaw, \"It's like free-falling out of the sky, but knowing you'll never have to touch the ground.\" \n\nMatt nodded, feeling the butterflies in his stomach as their bodies cut through the winds like paper airplanes. He'd never been able to put his love for Ollie into words, yet the other knew exactly how he felt. The boys leaned in at the same exact moment, twisting their heads at their respective angles. Their noses brushed together with eyes fixed on the other. A pair of cold blues and warm browns, mixing into each other like paint. Lips quivering without so much as an ounce of hesitation. They kissed. Their lips pressed against each other, spilling out 'I love you' with every motion. And it was perfect."
    ],
    "authorname": "thealphamale",
    "tags": [
        "gay romance",
        "romance",
        "young",
        "blowjob",
        "cum",
        "swallow",
        "muscle",
        "18-year-old",
        "cum eating"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/back-to-you-ch-08"
}