{
    "title": "The Steamy Chase Ch. 05",
    "pages": [
        "Comments, critiques and tips are welcome. \n\nDean Broody vs. Kayla Cooper\n\n***\n\n\"Fuck!\" Dean swore and threw the bunched up drawing sheet angrily across the room. \n\n\"Wow, wow! Someone is in a bad mood.\" Josh Broody, Dean's eldest brother drawled from the doorway, looking at the number of bunched up drawing paper scattered across the room. \"What crawled up your arse, little bro?\"\n\n\"Nothing.\" Dean muttered rising up from behind his huge desk to meet his brother in the middle of the room, with his hand stretched out to take the envelope his brother was holding.\n\n\"Nothing my arse.\" Josh said taking in Dean's dark expression. \"You have a problem, you talk to me kiddo. Now let's hear it?\" Josh said, throwing the envelope onto the closest table and folding his arms across his broad chest.\n\nDean stared at his big brother and sighed. As the eldest brother, Josh took his duties to another level, always making sure he helped his siblings solve whatever problems they had. And Dean would be the first person to acknowledge that Josh always made sure problems go away. If it wasn't for Josh and his penchant for solving problems, Dean didn't know where he would be right now.\n\nDean signed and run his fingers through his hair in frustration. Then he looked up at Josh with so much worry and confusion in his eyes, his big brother just drew him into his arms, holding him tight. Dean sighed and relaxed into Josh's embrace, allowing all the tension of the past weeks to drain out of him...even if it was for some few minutes. \n\nAfter a while Dean stepped back from Josh muttering, \"thanks, I needed that.\"\n\n\"Welcome. Now are you going to tell me what the problem is?\" Josh asked, looking at his brother. \n\n\"Where's Jake's drawin...\"\n\n\"Jake's drawing can wait. Come and sit down and talk to me Dean.\" Josh said moving to sit in the plush couch at the seating area of Dean's insanely huge office.\n\nDean actually needed the space for the type of work that he did. The office was so uniquely well-designed that anyone who walked into it appreciated the skill and planning that had been put into it. Besides the elegant seating area, there was another desk where he did his manual drawings and sketches whenever he felt like it. He however used his main desk more often as most of the time, he used his computer to design and create technical drawings. There was a well-stocked bar, and a 102-inch screen projected on the wall, that was currently showing a documentary on the National Geographic channel. \n\nDean fell into the couch beside his brother with a groan. \"Josh really, it's nothing you have to worry yourself over.\"\n\n\"Let me be the judge of that kiddo. Besides, your face shows whatever it is, is really eating you up. Let's hear it.\"\n\n\"It's about a girl.\" Dean murmured.\n\n\"What?\" Josh bellowed, making Dean wince. \"You're mooning over a girl?\"\n\n\"It's not like that. I'm jus...\"\n\n\"Who are you? And what the fuck have you done to my brother?\"\n\n\"Fuck off Josh.\" Dean gave Josh an angry look.\n\n\"Sorry bro, but put yourself in my shoes. You? Having female trouble? No!\" Josh finished, shaking his head.\n\n\"I'm crazy about her Josh.\" Dean muttered.\n\nJosh looked at his brother incredulously, wondering whether he had heard Dean right. \"Listen kiddo, if you want her, just go for her. What is stopping you?\" Dean had girls throwing themselves at him all the time so Josh couldn't understand why...\"Unless of course she...\"\n\n\"She doesn't what me Josh.\" Dean finished dejectedly and promptly groaned when Josh burst into uproarious laughter. \"Now you see why I didn't wanna tell you?\"\n\n\"I'm so...sorry bro.\" Josh said trying to bring his laughter under control. \"Sorry. Why doesn't she want you? Are you losing your touch? And why must her not wanting you bother you anyway? You are Dean Broody. Just move on to another chic. What is this girl? Gold?\"\n\n\"Just a thought of her and BAM...I want to have her. Problem is, I can't stop thinking about her, Josh. See my problem?\"\n\nJosh grinned. \"So...you're in lust with her. All you...\"\n\n\"It's more than that.\" Dean said heatedly, cutting Josh off. \"I have all these feeling inside me...I don't understand it Josh. I'm totally confused.\"\n\n\"Do you know anyone the girl is close with? What's her name by the way?\"\n\n\"She's Kayla. And she's close with Cole.\"\n\n\"Cole? Has he hit it already? Are you guys...\"\n\n\"No nothing like that. She's his personal assistant but they are really close. He sees her as his kid sister.\"\n\n\"Oh now I get it. You don't want Cole to know you have the hots for his PA, who he protects as though she were his sister. 'Cause if I were Cole and I knew this, I'd kill you.\"\n\n\"Thanks a lot bro. And for your information, Cole knows.\" \n\n\"And what is he saying about it?\"\n\n\"That's just it Josh. He hasn't said a word.\"\n\n\"How did he find out?\"\n\nDean remained quiet for a while, remembering Kayla's words. \"Kayla told him. More like, he drilled it out of her.\"\n\n\"Like I'm doing now huh?\"\n\n\"A-huh.\"\n\n\"So she told you she's told Cole about you two and you didn't think it was necessary to talk to Cole?\" Josh asked with raised brows. \"Am I missing something here?\"\n\n\"What am I supposed to say Josh? Hey I fucked your PA and I want her to be mine...\"\n\n\"You fucked her?\" Josh looked incredulous. \"And what did you just say? You want her to be yours? Dude, she's not a toy.\"\n\n\"Don't you think I know that?\" Dean snapped.\n\n\"Great. I was going to suggest you get someone close to her to link you guys up, fuck her and get her out of your system. But it looks like...\"\n\n\"Been there, done that.\" Dean drawled. \n\n\"And that make this more serious and complicated. Talk to Cole, Dean. That's your best bet. Trust me. As for this chic, I need to meet her.\" Josh grinned.\n\n\"You really think I should talk to Cole?\" Dean asked quietly.\n\n\"Yep. Maybe you should take Kyle along when you're going to talk to him. He looks like the only sensible person amongst you lot.\"\n\n\"Don't you mean the most quiet?\" Dean drawled. \"Don't let the idiot fool you. He's only moody because of his brother's illness.\"\n\n\"Okay, Chris then. Just someone who'll have the sense to hold Cole back when he starts throwing punches.\"\n\n\"And you think Chris would stop him? Thanks but I'll take my chances. I'll talk to the idiot. And if he makes one violent move, I'll beat him to a pulp.\"\n\n\"Settle down Tyson. You want his 'sister'. It will be better if you pretend you can't make a fist to save your own life. Go have that talk and keep me posted. Jake's stuff is on the table. Call him directly if there's anything to discuss. I don't have time for your bullshit.\" Josh said, heading for the door. His son wanted his quarters done in a certain way which he had sketched for his Uncle Dean to work on.\n\nDean leaned his head on the back of the couch and closed his eyes, thinking back to that fateful evening a week ago, when Kayla had crushed his hopes.\n\n***\n\nShe was mouth-wateringly exquisite. Her head rested on his chest as he stroked her back, loving the softness of her skin. Dean loved the feel of Kayla against him, her head on his chest, the way her nude body was snuggled tightly against him, the delectable curve of her body...he couldn't stop pressing gentle kisses on her damp hair. He could get used to this, Dean thought. But instantly, panic flared through him, swelling in his chest. Could he do this? Could he get serious about Kayla and not hurt her? Could he... \n\n\"Dean?\" Dean heard Kayla call his name softly.\n\n\"Yes Kay.\" Dean took a deep breath, trying to bring his erratic heartbeat under control. \n\n\"We need to talk.\" She stated simply.\n\nEven as Dean wondered whether Kayla had felt his panic, he felt his heart sinking. \"What?\" He whispered, looking down into beautiful green eyes.\n\n\"I'll be right back.\" Kayla said, getting off the couch and heading towards her room, her succulent arse on display. \n\nDean gulped, willing his dick to stop taking notice. Kayla probably wanted to look decent for whatever she was going to talk about, which Dean had a feeling was not in his favour. Shit! He stood up and zipped up his pants, bringing a semblance of order to his disheveled state. \n\nKayla came back into the living room, looking cool in black leggings and a long body-hugging grey t-shirt. Dean stared. No matter what Kayla wore, she looked hot. Dean however wished he could take that hot outfit right off that body. He felt his cock jerk inside his pants and groaned low in his throat. If there was one thing he was sure of, it was that he wanted to worship that body till the end of time. Oh shit! He was in big trouble.\n\nKayla sat in the chair opposite the couch Dean was sitting on, and cleared her throat. \"Dean, this must not happen again...\"\n\n\"Kay...\" Dean begun but stopped when Kayla raised her hand for silence.\n\n\"No Dean, hear me out. We both enjoy the sex but we have to be real here...\"\n\n\"Fuck Kay, this is...\"\n\n\"Dean please. Allow me to finish.\" She looked at Dean till he leaned back in the couch with his arms folded across his chest. Then she calmly continued. \"Thank you. Listen, one of us has to act sensibly to avoid future problems. It's not like I don't want you. You know I do. These past weeks have been hell Dean. I've craved your touch. All the time actually. You're that good. But of course you already knew that. All those girls must have already told you how great you are.\" Dean's lips tightened but he didn't say anything.\n\n\"But I'm not that kind of girl Dean. Contrary to what you might think due to how I threw myself at you on the Island...and how I allowed you to have your way with me tonight, I'm not into casual sex. Hell, I wouldn't have been a 'Mary' at twenty-four if I were.\" Kayla said, giving the word quotations. She smiled when Dean groaned.\n\n\"We've known each other for years Dean.\" She continued. \"So I think I know you well enough. You are not my kind of man, neither am I your kind of woman. We both want different things and have totally different perception on life. This, between us, is a waste of our time and it stops today. That's all I wanted to say to you.\"\n\nDean sat quietly for a while and stood up, watching as Kayla stood as well. \"What was that you said about Cole?\" He asked quietly, raising an eyebrow when he saw Kayla flush.\n\n\"It was nothing.\" Kayla muttered.\n\n\"Hey, just tell me. I want to know please.\"\n\n\"Well...he must have picked up on my mood and asked me...what was bothering me. I told him. I'm sorry.\" Kayla whispered.\n\nDean shook his head. \"Don't be. It's okay.\"\n\n\"For what it's worth, I told him I threw myself at you.\" Kayla added in a small voice, making Dean smile. How he wanted to hug her, feel that body against his, feel those boobs rubbing...\n\n\"You shouldn't have but thanks.\" Dean's voice had turned husky. \"Listen...\" Dean tugged his left hand into his back pocket and squeezed his eyes with the thumb and forefinger of his right hand. \"...what will it take? What can I do to convince you that, this is different? This is not just about sex. Yes I want you. I wish I could have you in my bed twenty-four-seven.\" Dean smiled when he saw Kayla's blush. \"Fuck you till you can't walk.\"\n\nDean heard Kayla moan softly in her throat and watched her eyes glaze over. At least the feeling was mutual, Dean thought. They both wanted to fuck the hell out of each other.\n\n\"Yes, I want that. But what I'm feeling is more than sex Kay. I want you to be mine. So tell me...what will it take to convince you that I'm serious?\"\n\nDean watched as Kayla slowly shook her head. \"Nothing.\" She whispered. \"I know you Dean. I've seen what you've done to other girls and I'm not going to allow you to do same to me no matter how much I want you. I just can't.\"\n\nDean was dying inside. \"Nothing at all?\" His voice was quiet.\n\n\"No.\" Just one word, but it sounded so final.\n\nDean sighed and stepped towards Kayla. \n\n\"Dean...\" Kayla whispered, taking a step back.\n\n\"I just want a hug. I'm not going to do anything more. Promise.\" Dean said opening his arms to Kayla.\n\nAfter a slight hesitation, Kayla walked into his arm and wound her arms around his waist. She was stiff initially but relaxed eventually and laid her head on Dean's chest. Dean buried his face in Kayla's hair and inhaled. \n\n\"I'm not going to give up Kay. If I have to move heaven and earth, to convince you that my intentions are honourable, I'm going to do it. I swear!\" Dean's voice sounded muffled but he knew Kayla heard every word.\n\nWith an effort, especially so when he saw the tears on Kayla's face, Dean headed for the door.\n\n***\n\nDean groaned, the feeling of loss that never failed to flash through him anytime he recalled his last conversation with Kayla, whirling through him. He looked up at the clock. It was almost seven p.m. He knew the boys were not going to meet today as Chris, Damon and Matt were out of town, Michael was on call at the hospital and Kyle had his hands full with his brother, Ken, who had refused to undergo any more chemotherapy. Dean reached for his phone, remembering Cole saying Briana was writing her end of semester exams. That would mean she was in school and Cole was home alone. \n\nCole picked up on the first ring. \"Hey.\" Cole's voice sounded like he was doing something.\n\n\"Hey. Busy?\" Dean asked.\n\n\"Just packing some boxes. Sup?\"\n\n\"Can I come see you?\" Dean asked quietly.\n\nAfter a slight pause, Cole's voice came back on. \"Sure. Get some pizza on the way. Pepperoni and cheese for me.\" Then he hanged up.\n\n\"Asshole.\" Dean muttered. It was obvious Cole knew why he wanted to see him and the idiot was having fun.\n\nDean grabbed his keys and headed for the door. What's the worst that could happen?\n\n***\n\n\"You dick!\" Was Cole's first words when he opened the door. Then he took the pizza from Dean and headed for the den, which the called the 'boyz ghetto'. \n\nThe 'boyz ghetto' was where the guys had fun whenever it was Cole's turn to entertain on Saturdays. It was a big plush game room. It had Massaging recliners, home theatre, stereo, video games, dartboard, pool table, wet bar, and, through a set of French doors, an enormous rooftop balcony complete with hot tub and a BBQ setup. \n\nDean closed and locked the door and followed Cole into the den. He removed his shoes and took off his shirt, leaving his undershirt. Cole was already seated in front of the huge LED TV and opening one of the pizza boxes. Dean went to the fridge in the corner and got out some beers, throwing one to Cole, who promptly opened it and took a long swallow. Dean sat and opened his and took a much slower swallow, staring at the TV the whole time.\n\n\"Hey, eat.\" Cole said, pushing the pizza towards Dean. \"You need your strength for what I'm about to do to you.\"\n\n\"Cole...\"\n\n\"Relax. She told me she ambushed you. Actually, that's the only reason you're not in the hospital right now dude. That was Kayla for goodness sake. What the hell were you thinking?\"\n\n\"I wasn't.\" Dean muttered reaching for a slice of pizza.\n\n\"Oh you were thinking alright. With your dick. Jeez.\" Cole muttered.\n\nThey ate in silence, the only sound the low voice of the newscaster on CNN. \n\n\"So what now?\" Dean eventually broke the silence. \"What do I do?\"\n\n\"What do you want exactly Dean?\" Cole asked turning to look at his friend. He looked so defeated, Cole felt sorry for him.\n\n\"I want her Cole.\"\n\n\"Of course any hot-blooded male would want her. How do you want her Dean? And don't tell me on her back with you buried deep inside her or I swear to God, I'll punch you.\" Cole said looking at Dean.\n\nDean shook his head slowly and turned to look at Cole. \"I want her for real. To be mine. I want exclusive with her.\" \n\n\"You see, that's just it. She knows you. And she knows you're not serious about any woman. You just use them and discard them. Kayla is too smart to allow herself to be treated like that. She doesn't trust you dude. Hell, I don't trust you when it comes to women. And I'm a guy.\"\n\n\"Then I'm going to make her if it's the last thing I do.\" Dean said heatedly.\n\n\"Tell me, why do you want her?\"\n\nA look of pure desire appeared on Dean's face. \"She's beautiful, funny and smart. And she has an arse that is so sexy that I struggle to even understand it.\"\n\n\"You wanna crochet that into a pillow and send it to her grandmother?\"\n\n\"Her grandmother is dead asshole.\"\n\n\"And so will you be if you don't stop talking about her arse. I'm sure Kay is lovely and all that but there are a million girls out there. You could take your pick. 'Cause if you fuck Kayla up, you're not going to lose just her. You're going to lose me too.\" Cole sounded dead serious.\n\n\"I want romance with her. I want...\"\n\n\"Dude, when it comes to you and romance, something always happens. Much as I love you, something always happens.\"\n\n\"I resent that you jerk. I've had some relationships that were successful.\" Dean growled.\n\n\"Before they went absolutely nowhere.\" Cole retorted and immediately regretted it at the hurt look on Dean's face. \"I'm sorry I didn't mean that.\"\n\n\"Yes you did. I know I'm an asshole but...\"\n\n\"You don't want to hear the word commitment. We all didn't. But when the right person comes along, it's like being hit by a tornado. You don't even notice till you're swept away.\" Cole said staring off into space.\n\n\"I've never felt this way about anyone Cole. I don't know what she did to me but all I do is think about her. She's the first thing I think about when I wake up and the last thing I think about when I'm going to sleep. I want her in my arms all the frigging time...just to hold her. And when I see her...my heart beats so fast and hard I fear I'm going to have a heart attack. As for my dick, I don't even want to talk about it. She's like liquor running through my veins ...\"\n\n\"I'll be damned!\" Cole whispered but Dean didn't even hear him. He was lost in his own world, talking about Kayla. Cole just knew his friend had fallen for Kayla but didn't even know it. Well he wasn't going to say anything about that. What he was going to do, was help Dean convince Kayla that he was serious about her. That Dean wasn't just lusting after her body, but wanted a real relationship with her.\n\n\"Are you listening to me dude?\" Dean asked Cole who seemed lost in thought.\n\n\"I heard you. And we're going to convince Kayla, that neither are you after sex, nor do you want to add her to your conquest list. So help me God, if you go fucking this up by hitting that pussy again...\"\n\n\"I swear I'm not gonna touch her if that's what it'll take to convince her. Wait...what if she asks me to?\"\n\n\"Especially when she asks Dean. No matter how much she pleads, don't fuck her.\" That's the only way you can convince her that you're not doing all the chasing because of sex.\"\n\n\"No matter how much she begs me to fuck her, I won't.\" But Dean knew even as he spoke, that there was no way he could resist an aroused Kayla. It was going to be a real challenge.\n\n\"Dude, we're going to try to make a point so work with me here. No sex.\"\n\n\"No sex.\" Dean repeated.\n\n\"Good. The chase is on!\" \n\n***\n\n\"Kay, could you please come in here for a sec.\" Kayla heard Cole say through the intercom.\n\n\"Certainly Cole.\" Kayla snapped out of her thoughts and got up from behind her desk.\n\nIt was a Monday, two weeks after telling Dean it wasn't going to work between them right after having the most amazing sexual encounter of her life. But then, every encounter with Dean made their previous encounters seem like a joke. When he ate her out on the Island, she thought nothing could be that good, till he had fucked her. Then she thought there was nothing as amazing as having Dean inside her. But their last encounter had been simply mind blowing. She had lost count of the number of orgasms she'd had. Kayla was getting wet just by recalling that explosive experience. She kept asking herself whether she had done the right thing by cutting Dean off. But she knew it was for the best. That didn't however stop her from wishing and lusting after that hot specimen of a man. Dean was like an addiction to her. The more she told herself to stay away from him, the more she wanted him. Unfortunately, school was out so she didn't have any other thing, besides her job, to keep her occupied. That meant all she did at her free time and at home was think about Dean. She needed help...and fast!",
        "Taking a deep breath, Kayla put a smile on her face and entered Cole's office. She made it a point to look happy whenever she had to face Cole as she didn't want another third degree.\n\n\"Kay, I would like you to do something for me.\" Cole said, looking up at Kayla.\n\n\"Name it Boss.\" She promptly replied.\n\n\"We have a new client in Dubai, who wants us there to go over some stuff and close some deals for him. Meetings will be held on Sunday and Monday...\"\n\n\"Cole, you can't be there on Monday. The \n\nAnnual General Meeting...\"\n\n\"I know.\" Cole said nodding his head. \"That's why I want you to go.\"\n\nKayla stared at Cole as if he had grown horns. \"Cole...\" She begun but Cole stood up and walked to where Kayla stood.\n\n\"Kayla, it's just like the MacNamara case. You handled it perfectly. I want you there by Thursday. You will use Friday and Saturday to go over the documents. Then you will sign and close the deal after the meetings on Monday. Piece of cake.\" Cole grinned at Kayla.\n\n\"But Cole the ideal thing to do is use one of the junior lawyers. Besides, MacNamara was not a new client. This one is. I don't think they will be okay with me...\"\n\n\"Hey, you can do a better job than any of the junior lawyers. Like I said, it will be a piece of cake. I'll be with you every step of the way.\"\n\n\"Okay.\" Kayla said softly. \"And thanks.\" Kayla sighed. \"I do need something to occupy me now \n\nthat school is out.\" She muttered.\n\n\"I know. Come here.\" Cole drew Kayla into his arms and gave her a tight hug. \"Don't think too much. Take whatever happens to you in your stride and make yourself happy. I know the unknown is scary but sometimes, if you take a leap of faith, things go so well you look back and ask yourself...why did I waste time being negative? Everything works for the best. Believe!\" Cole said, dropping a kiss on Kayla's forehead. \"Now get to Human Resource. They have to start working on your visa.\" \n\nHe escorted a confused looking Kayla out of his office and firmly closed the door behind her, leaving her confused as to what exactly Cole was referring to. The trip to Dubai or her relationship with Dean. \n\n***\n\n\"Seventeen frigging hours and ten minutes? Cole my legs are not going to function by the time I land.\" Kayla wailed following Cole onto the tarmac.\n\nCole cracked up laughing. \"Trust me, they will.\" \n\n\"Okay for you to say. You're not the one going to be scooped in for almost eighteen hours.\"\n\n\"It will be more fun since you'll be flying on a private jet. You will enjoy the experience.\" Cole said with a twinkle in his eyes. \"That's the plane right there.\" Cole said pointing to a plane with the inscription, D.B-001.\n\n\"Oh my God, it's big. D-B-0-0-1, is that someone's initials or a name of a company?\" Kayla asked, wide-eyed.\n\n\"I think it's a name of a company. Come on, let's stroll to the plane. We don't need the car. A little exercise won't kill us.\" Cole drawled taking hold of Kayla's hand and walking with her towards the plane.\n\n\"Are you sure this Andrew guy is not some rich old sheikh?\" Kayla looked up at Cole.\n\nCole burst into uproarious laughter. \"I didn't know there were sheikhs called Andrew. Maybe he's a young sheikh or a prince who's going to sweep you off your feet and make you forget all your woes.\n\n\"Prince Charming? Yeah right. I wish.\" Kayla said. \n\nBy the time the two got to the plane, Cole had gone over all the things Kayla was to look out for. And from the look on her face, Kayla was looking forward to the trip.\n\n\"Have a safe trip Kay. And have fun. That's very important girl. Let yourself go and have fun okay?\"\n\n\"Cole?\" Kayla looked up at Cole with a slight frown on her beautiful face.\n\n\"Yes?\"\n\n\"Is there something you're not telling me?\"\n\nCole looked at Kayla quietly for a while, then asked in a smooth voice. \"Do you trust me Kay?\"\n\n\"Yes.\" Kayla answered without hesitating.\n\n\"Good. I've told you all you need to know.\" Cole said pushing a strand of hair away from Kayla's eye.\n\n\"Okay.\" Kayla said smiling up at Cole.\n\n\"And like I said, if you need more money, just let me know. But I can bet my last cent you're probably not even going to use what you have on you. Your host will take good care of you. I trust him.\" Cole leaned down to kiss Kayla on both cheeks, then giving her a final hug, turned her towards the airstairs.\n\n***\n\nAs Kayla sipped her drink, waiting for take-off, she took in her surroundings and acknowledged the fact that the plane was indeed a very luxurious one. The interior screamed luxury. The owner must be really rich she thought. She was yet to meet him. The pilot had come to say hello when she had gotten on board. Kayla thought he was a nice man. The hostess, Anna, was also a really nice lady. \n\nThe plane eventually took off and soon after, the pilot announced that they could feel free to move about the cabin. Kayla unbuckled her belt, snorting at the announcement. She was amused because the announcement made it sound as though there were lots of people on board, when in fact, she was the only passenger as far as she was concerned. The owner had still not made an appearance. Either he was a lazy bum who was sleeping his life away somewhere on the plane, or he was a workaholic and was busily working. That's what rich people did right? Work! Kayla knew he would show his face at a point as he was supposed to be her host in Dubai as well. \n\nAndrew! Cole said he was a dean in one of the universities in Dubai. She had a feeling Cole was not disclosing something but he seemed to have a lot of faith in the man. He said they were very good friends and he was a good guy. She hadn't known Cole had such a close pal in Dubai. Anyway, once Cole trusted the guy, Kayla knew she was in good hands. And she was still grateful that he had allowed her to enjoy his luxury plane.\n\n\"May I get you anything Madam?\" Anna, the hostess asked Kayla with a smile.\n\n\"Oh no. I'm okay for now thanks.\" She said.\n\nKayla picked up her handbag from the mini compartment beside her seat and took out her book to read. But just as she was about to open it, she heard a voice that made her heart nearly jump out of her chest.\n\n\"Mind if I sit with you?\"\n\nWith a gasp, Kayla looked up into gorgeous dark blue eyes that had been hunting her dreams for...years. \n\n\"Dean.\" She breathed."
    ],
    "authorname": "adjoaq",
    "tags": [
        "plane",
        "surprise",
        "set-up"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-steamy-chase-ch-05"
}