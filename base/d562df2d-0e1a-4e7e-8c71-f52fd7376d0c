{
    "title": "First Time with a Guy",
    "pages": [
        "[All characters in this story are aged 18 or older.]\n\nI recently posted a story of the first time I saw another girl masturbate. This is the story of the first time seeing a guy.\n\nOne summer, my cousin's family came out to California for like three weeks. His parents stayed in a local hotel, but instead of having to pay for another room, we offered our spare bedroom to Dustin who was only a couple of years younger than me. We lived close to the beach, so it was going to be a fun summer for everyone.\n\nI introduced Dustin to my friends, and we would all hang out at the beach or the mall. Most of my friends thought he was pretty cute, but he had a serious girlfriend back home, so he didn't hook up with anyone while here. At some point, it was driving him crazy. By the second week, and after spending so much time together, we got super close and could talk about most stuff. In fact, we started to talk about sex. I don't have a brother and only have a sister, so it was really cool to get a guy's perspective on stuff. Also, given that Dustin is an only-child, he doesn't have a sister to get the lowdown from.\n\nOne thing led to another, and toward the end of his stay, we were talking about sex and masturbation. He asked if girls did it as much as guys. I told him no, but was thinking to myself that I really didn't know. I loved to masturbate, and didn't really know how often guys did it. So I asked. When he told me that he liked to do it every day if he could, I about fainted. \"No, I don't think girls do it every day, Dustin. In fact, there are probably a lot of girls that don't even do it at all.\"\n\n\"Well, you do it, don't you?\"\n\n\"What makes you think I do it?\"\n\n\"C'mon, Chelsea, I know you do it. You are a good looking girl who knows her way around. I guarantee you do it. So I'm just asking how often.\"\n\nMy blushing gave away the answer that I did actually self-indulge, but I tried to avoid answering how often. \"Well, I'll admit that, yes, I have done it, and occasionally do it still. But that's it. The rest is a girl's little secret.\"\n\nHe then got super excited and began asking a ton of questions about how I do it, where I do it, have I ever done it at school, in public, does it leave a mess, or can people tell if I do it -- all sorts of endless questions. They were pretty fun to talk about, so we took turns asking each other personal questions. I wanted to know has he ever been caught, how much usually comes out when he cums, what does he do with his mess, etc. He seemed pretty truthful, and I learned a lot. I was also getting crazy turned on. The questions started to get more and more detailed and personal, and then he asked, \"What's the quickest it's ever taken to have an orgasm?\"\n\n\"Well, if I'm really excited, I can do it in a couple of minutes. How about you?\"\n\n\"Well, if I were to start jacking it right now, I would blow in less than a minute!\"\n\n\"Less than a minute? You've got to be crazy. You can do it that fast?\"\n\n\"Do you want me to show you?\" Dink...you could hear a pin drop. Did he really just offer to jack off right in front of me? What in the hell should I do? I'm not going to have a sexual encounter with my cousin! But then again, it would be awesome to see a guy jack off and cum right in front of me. I couldn't decide what to say, so I just sat there not saying anything and looking dumb.\n\n\"I'm sorry, I didn't mean to creep you out. I crossed the line, I know. Sorry, Chels. I wasn't trying to come on to you, I promise.\"\n\n\"I know, Dusty. I'm not taking it that way. Actually, I was really considering it. I think it might be very cool to see that, actually, but I didn't want to give you the wrong impression, either. I love you, but I love you like a cousin.\"\n\n\"I know, I know. Me, too. I'm not trying to change this at all.\"\n\n\"Ok, how about you let me think about it. I've never done anything like this before and just want to think about it.\"\n\n\"Sounds good. Sorry again. I really wasn't trying to make this weird or anything.\"\n\n\"I know. Get some sleep, and we'll see each other in the morning.\"\n\nThe next day, my friend Becca came over with Starbucks. We ended up swimming and laying out most of the morning. Dustin wasn't up yet, so I was getting to think that the opportunity to pick up where we left off was probably gone. Becca and I are very close and talk about everything. So it didn't take long before I told her about last night's tell-all session with Dusty.\n\nShe about had a heart attack when I told her about \"his offer.\" She couldn't believe that I turned him down. She told me that I probably embarrassed him and that is why he hasn't come out of his room yet today. She was pissed, making me feel like he opened himself up to me, and then I shot him down. That wasn't how I looked at it at all. I told her that I was thinking of actually doing it, but wanted to make sure that I wasn't suggesting anything else to him by saying yes. She sort of understood that, but was still yelling at me for not taking him up on it. \"Fine,\" I said. \"You want to do it so bad, then I'll tell him that you'll do it with him. You can tell me all about it.\"\n\n\"Really? You think he'd do it for me?\" My god, she was taking me seriously. She was out of control. \"Becca, c'mon, really? You really think I would tell him to do it for you? I was joking, just to make a point.\"\n\n\"But what if you did tell him? Do you think he'd do it in front of me, too? C'mon, Chels. Just ask him.\"\n\nI didn't know. That sounded weird. Dusty and I had developed a very personal relationship, and by asking to bring in Becca, it made it sound sort of cheap. \"C'mon, Chels. Please?\"\n\n\"I don't know. Maybe.\" \n\nThen I got up and jumped into the pool. All of this talk had made me sort of get a little moist between the thighs, and I didn't want any wet spots to form on my bikini, so I jumped into the water. Also, the water cooled me down from the hot sun, and hot talk.\n\nAwhile later, Dustin came out in his bathing suit. The three of us just hung out and then had some lunch, talking about what we should do that afternoon and any parties we might go to that evening. After a couple of hours, Becca finally said out loud for everyone to hear, \"Ok, Chels, go ahead and ask him.\"\n\n\"Ask me what?\" Dustin said, trying to figure out what we were talking about.\n\n\"Nothing,\" I said, trying to get out of this while giving Becca a dirty look.\n\n\"C'mon, Chels. Dusty, Chelsea has something she wants to ask you,\" Becca said and then turned to me. \"Go ahead and ask him.\"\n\nI just shut my eyes and couldn't think of a way to get out of this. \"Ask me what,\" Dustin said again. \"What is it?\"\n\nThen Becca couldn't control herself any longer and just blurted out, \"Chelsea said that you might show her and me something special. Something...you know,\" and then she blushed.\n\n\"Chelsea!\" Dustin cried. \"What the hell? Is nothing secret with you?\"\n\n\"Don't blame her, Dustin. I forced it out of her. She is my best friend and we share everything. I could tell that something was really on her mind, so I forced it out of her. It's not her fault.\"\n\nThis allowed Dustin to calm down a bit, and we all began talking again. Then Becca steered the conversation back to where she wanted, and said, \"Well, what do you think? You show us yours, and we'll show you ours?\"\n\n\"No, that wasn't the deal,\" I said. \"Becca, it wasn't like that. There was no back-and-forth showing going on.\"\n\n\"Wait a minute,\" Dustin said. \"I didn't know it was show-and-show. I'll do that. I will show you both, if you both show me. That's fair.\"\n\n\"Ok,\" Becca screamed. \"Great. What exactly are we showing?\"\n\n\"I didn't sign up for any of this,\" I said while standing up. \"I didn't agree to anything like...\"\n\n\"Sit down, Chelsea, you prude. We're just having a conversation. Sit down for a second, girl.\" I stood there looking at both. It appeared that Dusty wasn't pissed anymore and even wanted to explore the idea. He patted the ground, so I sat back down.\n\n\"Ok, I'll show you girls how a guy jacks off, but you have to show me the same.\"\n\n\"Nope\" I said. \"Won't do it.\"\n\n\"C'mon, Chelsea. It's not a big deal. We're all in this together. Dustin leaves in a few days and he's not going to tell anybody.\" Becca was really trying to make this happen.\n\n\"Won't do it,\" I said, for like the tenth time.\n\n\"Ok, how about you guys don't have to masturbate, but you have to be naked. If so, and both of you I'm talking about, then I'll show you how a guy masturbates. Fair?\"\n\n\"Ok,\" Becca was the first to respond.\n\nI didn't want to lose my second opportunity to see him pleasure his manhood, so I thought about it for a second, and then agreed. \"Ok. I'll do it, too.\"\n\nAll three of us jumped up and walked back into the house and then into the garage. Nobody was home, but if anyone did come home, we didn't want to be caught in a bedroom upstairs. Our garage has a bunch of stuff in it, and is never opened from the outside, so it was a safe place to do our experiment.\n\nWe stepped down into the garage and then sort of stopped and just looked at each other. \"Now what?\" was the look on each of our faces. None wanted to be the first one to talk. Well, until Becca did. \"Ok, so how should we do this?\"\n\n\"We could sit in a circle,\" Dustin suggested. It was amazing. We could already see a bulge forming in his bathing suit. I couldn't believe it, and I was already beginning to get turned on myself.\n\n\"Ok,\" Becca agreed, and sat down. Dusty sat about 5 feet from her, and then I sat down sort of between them, forming a sort of triangle. Becca's nipples were pointing through her top, and I saw Dusty staring at them. Becca had nice boobs, and I knew Dusty would get what he bargained for when she took off her top. \"Ok, drop the drawers, dude,\" Becca shot out at Dusty. Let's see that thing already.\"\n\n\"You guys have to get naked, too. Remember the deal.\"\n\n\"Ok, how about we all pull down our bottoms at the same time? Does that work?\" Becca suggested.\n\nDustin looked at me, and I gave a sort of approving shrug. He nodded, and then we all stood back up. Becca counted it out, \"One, two, three,\" and then pulled her bikini bottoms down to her ankles. Dustin was just a half second behind her, and I was dead last. Both of them were naked from the waist down as I was just pulling them down off my hips. I closed my eyes, and just pulled. When I felt them hit my ankles, I opened my eyes again. I first looked at Becca for support, and her face looked paralyzed with eyes as big as ping pong balls. She was staring at Dusty. I then turned my head to Dusty and saw this huge hard on. I was amazed. It was so big I no idea how he even walked around with that thing. The end of it was almost purple and the skin looked so stretched, that it looked like it hurt. It was bobbing up and down like it was its own living being. This was my first real life look at a cock, and I LOVED it!\n\n\"Ok, now you guys have to take off your tops, too. That was the deal,\" Dustin said, bringing us back to reality. Becca slipped her hand around her waist and untied her bikini top. Within a couple of seconds it was in her hand and on the floor next to her bottoms. Mine took a bit longer as it had a clasp, but eventually got there. I couldn't believe I was naked with a boy, and that boy had a huge hard on. I looked at Becca, and she was still staring at his dick. I looked at Dusty, and he was looking back and forth at me and Becca, however, it was no surprise that Becca's tits were one of the highlights.\n\n\"Does it hurt,\" Becca asked. I was glad she did, because I was thinking the same thing. It looked like it was going to explode.\n\n\"No, it feels really good, actually. It's never seen naked girls before, so it is extra hard, if that makes sense.\" We both nodded.\n\n\"Ok, let's see you do...you know...what you do,\" Becca said and then sort of mumbled. It was definitely awkward. I looked at Dusty's eyes and they were looking at my pussy. I shave, but leave a little hair down there, and I was thankful that it had only been a day since I last shaved. I then looked back down at his throbbing penis, and I could see liquid coming out of the tip. I now know what that stuff is, but at the time, I thought that he was so excited looking at my pussy, that he was already starting to cum. So na\u00efve.\n\n\"Ok, here it goes,\" he said, and wrapped his right hand around the shaft of his penis. He stroked it a couple of times, and then squeezed it all the way up to the tip, and a bunch of that liquid came out. He caught it with his fingers, and then wiped it all over the tip of his penis. It glistened with the moisture while he then stroked it with more purpose. I looked over at Becca, and her look was priceless. Her mouth was open and it looked like she was paralyzed, for real.\n\nI looked back at Dusty, remembering what he said about being able to cum within a minute, and there was no way I was going to miss the show. I could feel myself get wet, and my pussy lips start to swell. I don't think Dusty could see, because we were all still standing up, but he could totally see that our nipples were hard. I felt the urge to touch mine, but of course, held back.\n\nThis went on for maybe a few minutes, but I have an hour's worth of memories. I watched while his hand pulled back on his penis, and then the head would stick out from his fist, and then go back inside his hand, over and over. The amount of wetness on his dick kept increasing, and you could now hear a sloshing sound with every stroke. I saw him close his eyes a couple of times almost involuntarily, and saw his body sort of shake like with mini convulsions. I knew from my own experiences, that his orgasm was coming on. I was so turned on and even more excited to see him actually cum. I knew for sure that my pussy was dripping juices, but I didn't care. I just wanted to see him shoot his sperm. I knew he was getting close, and I was ready, and then...he stopped. He just stopped!\n\n\"What are you doing,\" Becca screamed when Dustin bent over to pick up his swim trunks. \"What in the heck? Are you done?\"\n\n\"Yea, I'm done. If I keep going, then I'm going to cum. I got pretty close, so I had to stop.\"\n\n\"Stop? What in the hell are you talking about? That's the whole idea.\"\n\n\"No, the idea was that if you got naked, I would jerk off, and I just did.\"\n\n\"No, no, no...\" it was my turn to chime in. That wasn't the deal at all. You made us get naked, and then you said you would jerk off. You never said you'll play with it for a couple of minutes and then stop. I never would have agreed. This is bullshit. You lied.\"\n\n\"Hold on, Chels, I didn't lie. I told you guys I would jack off in front of you if you did the same. You guys said no way, so I then said that I would play with myself if you at least got naked, and you agreed. Well, that's exactly what just happened. I didn't lie --\"\n\n\"That's crap. You totally lied to us, just to see us naked. Here I am believing you, only to --\"\n\n\"Hey, now, wait a minute,\" he said trying to calm things down. \"My original offer still stands. If you guys play with yourselves, just a little bit, then I will show you what it's like for me to cum. I've very close as you guys have probably guessed.\"\n\n\"No, way. I'm not getting tricked into --\"\n\n\"Wait a minute, Chels,\" Becca said. \"We're already naked. Dusty, you just want us to rub our pussy's for a minute while you cum? If so, I'm in. I'll do it.\" And with that, she looked right at me. \"C'mon, Chels. We're already naked. And it's not going to take him but a minute to finish off, especially if we're fingering along with him. God knows I'm already tingling and could use a hand, if you know what I mean,\" and then she laughed.\n\nI was so freaking turned on, I would probably cum myself if I just touched my throbbing clit. But I didn't want Dustin to have a visual of me playing with myself. Hell, I didn't want Becca to see me playing with myself. That was something private, and I meant to keep it private.\n\n\"What do you say?\" Dustin asked as he pulled again on his shaft and squeezed a bunch of clear liquid from the tip, rubbing it all around the head. It'll only take me a minute, I swear.\"\n\n\"I'm in, even if Chelsea's not,\" Becca said.\n\n\"Nope, I need both of you to agree, or no show.\"\n\nMy sexual desires took over. Damn, I hate when that happens (wouldn't be the last time). \"Ok, but only for a minute. You better cum quick, Dusty, or our show is over, too.\"\n\nHis smile was worth a million bucks. He had probably planned this all along and played us perfectly. Becca's hand was already down between her legs, and I slowly moved my right hand down to my burning, dripping sex. \"You'll have to lay down, so I can see. Otherwise I won't be able to tell if you're really doing anything or not.\"\n\n\"You've got to be kidding me. No way,\" I said. \"You're pushing yourself, Dusty. You totally are.\" However, Becca was already down with her bare ass on the garage floor with her legs spread and her hand working her clit. Dusty's dick was now at her eye level, and she was staring straight at it. He looked down between her legs and started stroking once again. I had my fingers just over my lips, but couldn't resist. I pressed my middle finger inside of me and it glided right in. I was SO wet. I moved it in and out a few times, and then brought it up along my slit to my clit. It was so ready. I smeared my juices all around and took in the sexual pleasure I was already bringing to myself.\n\nDusty was watching me love myself, and then he looked down at Becca who was rubbing her clit faster and faster. She wasn't doing this for him at all at this point, she was doing it for herself. She wanted to cum. And she wanted to cum now. It was very hot to watch, and made me even more turned on. She began to moan a bit, which combined with the sloshing sounds each of the three of us was making, was almost enough to cause me to do the same.\n\nBecca's moans were then quickly drowned out by Dusty's grunts. \"Huh, huh, huuuuuh, I'm gonna cum...I'm gonna...I'm coming!\" he screamed and his body went rigid while out shot a stream of what looked like Elmer's glue. He then stroked his hand hard a couple of more times, when stiff again, and then shot another stream, this time it went farther and landed as far as Becca's foot, hitting her on her ankle. And then another. I was amazed. He must have shot five or six loads of cum on the garage floor. After he was done, he looked like he had just jogged ten miles. He hunched over and tried to catch his breath.\n\nBecca, however, was not done. The burning hot sperm that hit her ankle sent her to another level, and she was rubbing and moaning louder than ever. \"Awwwwwww,\" she screamed as she threw herself into her own orgasm of exctasy. \"Yessss, Mmmmmmm, yessss...\" \n\nMy fingers were still rubbing my own clit, but I forced myself to slow down so I didn't peak. I still didn't want anybody to see me make myself cum. As I look back now, I wish I would have as that was such a hot and erotic situation, but at the time, I was too reserved, I guess.\n\nDustin pulled on his penis a couple of more times and big drops of sperm dripped out of the end, falling on the garage floor which was now a mess. The sperm was no longer white, but looked like thick water. I reached down and touched some of it. It was thicker than it looked, and was slimy as I rubbed it between my fingers. I looked up at Dustin, and he looked down at me and smiled. I smiled back, and said, \"I can't believe we just did that.\"\n\n\"Yea, it was pretty cool. I'm glad we did.\"\n\nBecca was still sitting on the floor and analyzing the sperm that was on her leg. \"I'm glad, too. That was incredible.\"\n\n\"Yea, me, too,\" I said, and looked back at Dustin. He was just standing there with a huge grin. His dick was smaller, but still seemed way bigger than I ever would have guessed. \"I think we need to clean this up.\" I grabbed my bikini bottoms and then pulled them up. I grabbed my top and then went inside to grab a towel.",
        "When I came back out to the garage, both Becca and Dusty had their bathing suits back on. \"That was awesome,\" Becca said. \"When can we do it again?\""
    ],
    "authorname": "hblocalgrl",
    "tags": [
        "mutual masturbation",
        "voyeur",
        "watching",
        "masturbation"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/first-time-with-a-guy-5"
}