{
    "title": "Group Discount",
    "pages": [
        "Grant finds comfort from his friends with benefits\n\nThanks for the kind comments. This story follows characters and action from Group Project, but is able to stand alone.\n\nChapter 1\n\nIf there was a sexual encounter meter, Grant's had gone from zero to redline in two weeks. During Katie's illness and then death, sex never entered his mind. But months later, his three co-workers had reawakened his interest. Now, the seal was broken, and the flood gates opened. Grant had to admit that once you had sex, what you wanted was more sex.\n\nCreating his online dating profile was the start, but the real action happened when Jennifer talked him into jerking himself off in the car. The tall, dark-haired, curvaceous beauty was trying to help her work friend. Taking pity on a sexually-frustrated widower, she'd crossed a line. Although slightly inebriated, she was not drunk enough to forget she had a husband and two children. She had stayed physically faithful, while encouraging him to the point where he shot a geyser of sperm over his steering wheel onto the dashboard. Never before had a woman watched him masturbate. The act would have felt perverse, except that she instructed him to do it.\n\nGrant struggled not to think about Jennifer. He enjoyed her wit and bawdy sense of humor. She was fun to be around, and he was more fun and more alive when he was with her. Jennifer was responsible for organizing his cheering section of co-workers. These included the equally tall and lovely Claire. She was blonde and more taciturn. Yet the night of her birthday party had revealed a wild side that Grant would replay in his fantasies until he died. And then there was Bethany. While both Jennifer and Claire were in their mid-thirties, Bethany was in her early twenties. Though average in height, she seemed small when standing next to her Amazon-sized co-workers.\n\nForever emblazoned in Grant's mind was the sexual tableau of last weekend. Bethany's ponytail swinging wildly as she brought Claire to a violent climax with her tongue. Claire's first lesbian experience would undoubtedly not be her last. Seeing Claire spread-eagled in front of him, with another pretty young woman eating her out, was beyond stimulating. But there had been so much more. Bethany's naked backside had wiggled in the air invitingly as she perched on her hands and knees over the arm chair. Her tight, toned ass was as artistically beautiful as it was sexually provocative. When Bethany directed him to fuck her from behind, he eagerly obeyed the order. Despite the nearly thirty-year age difference, Bethany seemed to have no qualms about sliding his mature, average-sized penis into her young, glistening vagina.\n\nAgain, all of that was more than tantalizing. But Jennifer was also in the middle of the mesmerizing mix. She touched no one, other than holding Clair's right leg. Inexplicably more alluring than Claire's wide open pussy, incomprehensibly more enticing than Bethany's tight box, were Jennifer's incredible tits. They were on full display that night. Something about the pendulous breasts with saucer-sized areolas, triggered his lust. It wasn't just the body parts. They were attached to a person and personality he couldn't get enough of. Meanwhile, Jennifer's libido was powerful enough to cause her to finger herself while watching her co-workers fuck. Her dark pubic hair plastered to her thighs, revealed swollen lips, as her fingers slid in and out of the slick hole. He knew that image would never leave his mind. And though Grant's penis was in Bethany's wonderful cunt that night, his eyes and mind were fucking Jennifer. And he felt she was eye-fucking him in return.\n\nWhen it was over, the four of them had interacted normally enough. Normal is hard to gauge when you are naked, sweaty, and wiping wet spots off the furniture. However, returning to the office felt awkward, to Grant at least. Most of Monday went by without seeing any of the three women. He wasn't avoiding them. It just didn't happen. Then, late in the afternoon, he encountered Bethany in the copy room and felt his face flush. Was he embarrassed or excited? He wasn't sure.\n\n\"Nice to see you, Grant,\" she said and leaned closer to whisper, \"even with your clothes on.\"\n\nHe swallowed hard before responding quietly, \"Did I ever say thank you?\"\n\n\"Only about six times,\" she smiled. \"You've been very grateful. And I think it's sweet.\"\n\n\"I thought my life was complete before...but now I could definitely die a happy man.\"\n\n\"Again, that's sweet, but please don't die any time soon. You have more chapters to write.\" She winked at him, and Grant found the subtle act intoxicating. He wanted to say more. He was even going to ask if he could take the three women out to lunch one day this week. But just as Grant summoned the courage, Michael came in.\n\n\"Hi guys. Is there a line?\"\n\n\"Hi Michael. Grant was behind me, but I'm finished, so you can get behind Grant.\" After saying this, Bethany snickered and winked at Grant. It took Grant a second to catch the double-entendre. Michael seemed not to notice.\n\nIt was a couple hours later, on the way home, that the loneliness hit him. Grant realized that the longing for connection had disappeared over the previous two weeks. All the attention from his three co-workers, and the night with Issa...\n\nHe had put Issa out of his mind. Meeting her through dating app had been exciting. Then their only one-on-one real date had ended with hot sex at her place. But maybe the sex hadn't been so great after all. For Issa at least. Grant had thoroughly and completely enjoyed himself. Divorced, with a son in college, the self-assured woman was close to his age. Her thick thighs and generous backside, combined with a confident attitude and aggressive sensuality to produce a memorable night. But in the days after, Issa didn't seem responsive. He'd decided to leave the ball in her court. It was still there.\n\nThat incident made him realize Issa was his first and only connection through the dating app. Even as a newbie to online dating, Grant was certain that his immediate success was unusual if not unbelievable. Number 1, a woman responded to him; Number 2, she was real; Number 3, she was desirable; Number 4, she was willing to meet; Number 5, she asked him to fuck her on the first date. Grant began to wonder if it had actually even happened. Since that night in the 420 Bar, when Issa joined Grant and his three co-workers for a drink, he had never since even checked the app. Curious, he pulled out his phone. Apparently, he'd turned off notifications, because when he opened the app there were a dozen messages for TakeMe4Grant.\n\nHe was momentarily excited by the first, until he realized it had to be a bot. The glamor model looks in the pic and the bold invitation for sex were too obvious, even for him. The second and third were similar, and he ignored them. The fourth read:\n\nDear TakeMe4Grant, I think your sexy. Maybe you think Im sexy to. Lets chat and see what happens? FlirtyFitForty\n\nWhatever else triple F had going for her, Grant doubted he could get past the bad grammar. Moving on to the next message, it was a girl who was apparently searching for a sugar daddy. The sixth message was an invitation to an OnlyFans site where more entertainment awaited. He also quickly dismissed numbers seven through eleven.\n\nIt was number twelve that gave him pause.\n\nDear TakeMe4Grant, you describe yourself as a silver fox. Do you have a silver tongue? I'm such a sucker for smooth talkers, I'd settle for bronze. Tryouts are open now. Hit me up if you would like to enter the medal round. TinkerBell71\n\nHe liked the attitude in the profile and the smile he saw in the pic enough to write back.\n\nDear TinkerBell71, Even though I've been training for the gold, my goal is never to finish first. Perhaps we could train together. Team Grant is willing to venture into Never Never Land to find out. TakeMe4Grant\n\nClosing down the app, Grant went to bed. As he drifted off to sleep, he remembered a Disney trip, years before. One night, he and Katie stood on a crowded sidewalk to watch the light parade of Disney characters. On one of the last floats was \"Tinkerbell.\" Something about the fairy outfit, her cute face, enthusiastic smile, and wave had gotten to him. When she seemed to look directly his way, he was hooked. He knew she was just doing her job, but Grant couldn't help the attraction. Strange the things that stick in your mind and tangle themselves into your heart. He realized that it was probably just the name that made him respond to TinkerBell71.\n\nChapter Two\n\n\"Is the Grantster in?\" It was Jennifer's voice.\n\nHe stood up to see both her and Claire approaching his cubicle. Grant's heart thumped as they stepped toward him. Having seen both women naked, a tangle bare flesh, he couldn't unsee it, and didn't want to. One blonde, one brunette, both nearly six feet tall. He'd not had sex with either of them, but was in the room where it happened. Grant felt close to them in one way, and a million miles apart in another.\n\n\"The runway models convention is two doors down,\" he said with a confidence he didn't possess.\n\n\"You are a charmer,\" Jennifer said with a wink. \"What do you make of this guy, Claire?\"\n\nClaire's cheeks appeared to blush. Grant felt a little embarrassed for her. The last time the three of them had been together, the golden down of Claire's glorious bush was fully exposed. Her long legs spread wide, and Grant had stared at her, just as he was doing now, trying to imagine how she felt.\n\n\"Any guy willing to host my birthday party is ok in my book,\" Claire said smiling. \"I won't forget it.\"\n\n\"Neither will I,\" added Jennifer, \"and it wasn't even my birthday.\"\n\nTalking about that night, even in coded language, eased Grant's mind.\n\n\"Can I take you ladies to lunch?\"\n\n\"Sure,\" responded Claire quickly. Then looking at her partner said, \"Unless you can't make it Jen.\"\n\n\"Aren't you the eager one,\" Jennifer smirked. \"I'm in. Any meal I don't have to pull together is my favorite.\"\n\n\"Bethany's welcome too. Can you ask her? And where would you like to go?\"\n\n\"We'll check on Beth,\" Jennifer agreed. \"How about Mario's?\"\n\n\"Sounds good. I'll drive. Meet you in the lobby at noon?\"\n\nIt ended up being just the three of them. Bethany couldn't get away. Jennifer rode shotgun. Seeing her in the same seat she was in the night he exploded like a bottle rocket, made him hard. His eyes flicked up to the dashboard where a jet of his sperm had landed. No sign remained. Grant had cleaned up that night when he got home, making sure to retrieve the wad of tissues he'd thrown in the back seat. He glanced in the rearview mirror to make sure Claire was comfortable. Jennifer had described her jerk off instructions for Grant to the other two girls. Grant wondered if Claire realized they were visiting the scene of the crime.\n\nHe looked over at Jennifer and smiled. She stared back at him as she reached over her shoulder, grasped her seatbelt, and blindly clicked it into place. Grant had no idea safety could be so sexy. She bit her lip, raised her eyebrows, then said, \"Let's go, G man.\"\n\nThe conversation was comfortable enough. Grant was funny. Claire laughed a lot. Jennifer mostly rolled her eyes at his comments, when she wasn't making cracks of her own. She had a Caesar salad with chicken. Claire got a panini. Grant had a burger with a side salad instead of fries. They were halfway through lunch, when Grant mentioned his dating app.\n\n\"What?\" Jennifer said with mock outrage. \"You're still looking for a date?\" She leaned forward and with a wicked smile whispered, \"Aren't we enough for you?\"\n\nHe raised his eyebrows and shrugged. \"But I don't have you. Besides, you guys got me up and running on that site. Apparently, you see my pity game as strong.\"\n\n\"Oh, you've got game, Grant-daddy,\" Jennifer cooed. \"I've witnessed it.\"\n\nClaire said nothing. Grant didn't know how to respond. Jennifer was married. Bethany was almost thirty years younger. And Claire, though recently single, was also his junior, maybe by fifteen years. Claire was attractive, but he sensed she saw him more like a big brother. All three of them were desirable. But all three were out of his reach, for different reasons.\n\n\"Well, since you've got to get your hedges clipped every so often,\" Jennifer said while shaking her head, \"I guess we'll have to let you outsource the job.\"\n\nClaire made a slight nod of agreement, but still said nothing.\n\n\"Speaking of previous trim jobs,\" Jennifer added, \"still no word from Issa?\"\n\n\"Nope. And I took your advice not to reach out.\"\n\nJennifer nodded. \"That was a little odd. She seemed nice, and normalish. Not the type to fuck and run. You didn't blurt out that you loved her while you were boinking did you?\"\n\n\"I was grateful and satiated, but no vows were exchanged.\"\n\n\"Just bodily fluids?\"\n\nGrant sighed, and squirmed in his seat. Jennifer's comments still made him uncomfortable. He looked around to make sure no one could hear.\n\n\"Yeah, there was definitely some of that.\"\n\n\"You've been a veritable fountain of fluid in recent days, G man. I don't want you to hit a dry spell. You could probably hit up Issa for a booty call if nothing else turns up first.\"\n\n\"Maybe Grant's looking for more than easy sex,\" Claire spouted.\n\n\"Is that true?\" Jennifer asked. \"Do you want more than 'insert post A into slot B'?\"\n\n\"Maybe,\" Grant said thoughtfully. \"It was so great to have sex again. I think that distracted me. I mean, I saw things the other night that were beyond a fantasy.\" He looked from one woman to the other. \"But I guess I'm looking for connection, not just satisfaction.\"\n\n\"Very adult of you, Grantster. And by the way Claire,\" she said turning to the other woman, \"Sex is never easy. It might happen easily when you're single. But it comes enmeshed with all sorts of complications. Married sex isn't easy either. It's great when it can happen. But time, weariness, and routine get in the way.\"\n\n\"I get that, Jen. And for the record, it hasn't even happened easily for me. The other night was the first...release I've had in a long time. I don't feel any regrets. But I'm also not sure what's next.\"\n\n\"Work, for one thing,\" Grant said grabbing the check.\n\nChapter 3\n\nThat night he tried to message Issa. It took several tries.\n\n\"You up?\" sounded like a booty call. [Delete]\n\n\"You ok?\" seemed desperate. [Delete]\n\n\"How are you?\" felt pathetic. [Delete]\n\n\"What's up? Juvenile, but he sent it.\n\nThere were dots.\n\nHe waited.\n\n\"Nice to hear from you.\"\n\nIt was non-committal, but it felt like a good response to Grant.\n\nHe took a chance. \"How about a drink sometime?\"\n\n\"Sure. How about tonight?\"\n\nThis was sounding better.\n\n\"We could meet at the 420 again,\" he texted, but really hoping she suggested her place.\n\n\"Works for me. 7:30?\"\n\n\"See you there then.\"\n\nGrant decided to shower. Never hurt to be fresh. He put on a blue and white checked dress shirt, and dark blue slacks. He turned up the shirt cuffs to look casual. He dabbed on a little cologne, careful not to put on too much. He felt strangely nervous. The fact that he had previously buried his face in Issa's backside, given her at least one orgasm, penetrated her, and spilled his seed all over her chest, should have made him more confident. Instead he felt uncertain, unsure of where he stood. Maybe he would find out tonight.\n\nHe arrived first. The bar was busy, but most of the tables empty. He picked one farthest from the bar, and kept his eye on the door. When Issa entered, he almost jumped out of the chair, but caught himself. This time, instead of a dress, she wore a print blouse, jeans that hugged her generous curves, and cowboy boots. He rose to meet her, kissed her cheek and pulled out her chair.\n\n\"Always the gentleman,\" her voice was silky, and sent shivers down his spine.\n\nHe didn't know what to say.\n\n\"What would you like to drink?\"\n\n\"Champagne cocktail sounds good.\"\n\nHe ordered that, and a bourbon.\n\n\"It's been a couple weeks, hasn't it?\" Grant hoped it didn't sound like he knew exactly how long it had been since their night together.\n\n\"Thanks for giving me some space.\"\n\n\"I wasn't sure if you wanted to see me again, so I didn't push it.\"\n\nIssa smiled and said, \"This is where one might say, 'It wasn't you, it was me,' but in this case it was you.\"\n\nGrant felt like the wind was knocked out of him. He had done something wrong, but he had no idea what. She touched his arm.\n\n\"Sorry, that sounded mean. Our time together was completely enjoyable. I loved every second of it.\" She looked around before adding, \"You had me going and coming, so to speak.\"\n\n\"I found the experience quite enjoyable too. But I hear a but...\"\n\n\"Just a precautionary but,\" she said with a shrug. \"After the thrills subsided, I realized that our sexy time was your first rodeo since your wife died. I figured you would have one of two reactions. Either regret, that would cause you to run for the hills; or eternal gratitude, which might make you get immediately fixated on little ole me.\"\n\nAs he sipped his drink, Grant realized she wasn't wrong. His gratitude had overwhelmed any regret. And there had been a feeling of attachment, maybe even a longing to cling.\n\n\"Yeah, I could have easily followed you around like a puppy dog. I hadn't had any sex in a long time. And then to have that kind of exciting, mind-blowing sex, with an incredible woman...\"\n\n\"That's sweet, Grant,\" she touched his arm again. \"I guess I prefer that reaction to a dash for the exits. But since I'm not ready for any real attachments yet, I didn't want to encourage you otherwise. I've enjoyed dating different guys since my divorce. Even though none of them have been the kind of man you are, no sense in rushing things.\"\n\n\"What kind of man am I?\" He couldn't hide his curiosity.\n\n\"Giving. Considerate. But still a man. One I wanted to fuck.\"\n\n\"Don't put up a sign. There'll be lines around the block.\"\n\nShe laughed. It was musical. He decided to take it a step further.\n\n\"So maybe I can call you once in a while? You know, like a date when you've got nothing better to do?\"\n\n\"I'd like that. I'm just not ready for your toothbrush in my bathroom,\" and she whispered, \"You've been in my house. You've been in my bed. Hell, you've been in my pussy.\"\n\nGrant liked where the conversation was going, but was determined that it not go beyond talk. At least not tonight. They lingered over a second drink, and among other things, discovered a mutual love of tennis. He hadn't played in a couple of years, but Issa played in a league twice a week. They made tentative plans to hit around on Sunday. Grant had courts in his community that were seldom used. He promised to bring the balls.\n\nHe paid the bill and walked her to the car. He wasn't tentative when he pulled her close for a kiss. It wasn't a friendly good night kiss. He pressed himself into her warmth. His lips engulfed hers. Their mouths were hungry. The eagerness grew. His hardness sprung up between them. His right hand slipped down to cup her ass, and he pulled her tightly into his erection. She moaned into his mouth, and that was when he broke away.\n\nGrinning, he said, \"I'm resisting the urge to eat you up.\"\n\n\"I'm about to let you,\" Issa said, breathing hard. \"Grinding on each other in the parking lot seems like high school all over again.\"\n\n\"Oral sex in the backseat is high school.\" Wanting to sound like he was in control, he added, \"But I won't let that happen tonight.\"\n\nIssa froze for a second, then looked away.\n\n\"What is it?\"\n\n\"Nothing. I just...\" she stopped.\n\n\"What? You can tell me.\"\n\n\"Well, I guess you should know now.\"\n\n\"You didn't go to high school?\"\n\nShe pushed his shoulder and smiled.\n\n\"No. I went alright. It's just that, I don't really enjoy...\"\n\nGrant waited a couple beats, but couldn't keep his mouth shut. \"Rap music?\"",
        "\"I don't enjoy...giving...you know...\"\n\n\"To charity?\"\n\n\"Stop. You're making this harder for me.\"\n\nGrant cupped her face in his hands, looked her in the eyes, and said, \"I'll shut up. Tell me.\"\n\nIssa sighed. \"Because of some bad experiences. I just don't enjoy...giving blowjobs.\"\n\nWhatever Grant expected, it wasn't that. His hands involuntarily dropped from her face, but he recovered by hugging her again.\n\n\"But I...\" he paused.\n\n\"Yes, you licked me in all the right places. That's all good. But when I try to return the favor, at least in certain situations, it usually triggers bad memories.\"\n\n\"That's understandable. And not a problem,\" he said, trying not to sound disappointed. \"Do you want to talk about it?\"\n\n\"No. Not now anyways.\" She looked away from him. \"When we were together that night, because we were in my house, I felt in control, and I was able to put you in my mouth for a bit. I was horny and it wasn't long.\"\n\n\"Well, I might not be the biggest guy in the world, but to say it wasn't long...\"\n\nShe smiled and shook her head. \"You know what I mean. This has nothing to do with penis length. You men are so obsessed with the size of your package. No, I just didn't want you to expect something that I can't promise to give. I'm sure it's something I'll get past eventually.\"\n\nHe hugged her tightly. They leaned against her car, and held each other in silence. After a moment, she whispered into his ear. \"But putting your hard cock into my wet pussy is not a problem.\"\n\nWith that she kissed his cheek, pushed him back, and opened her car door.\n\n\"Thanks for the drinks,\" she said as she started the engine.\n\n\"The pleasure was all mine,\" he replied, and shut the door.\n\nChapter 4\n\nSomething hit the wood floor as he moved the easy chair. Grant put the chair down and saw what looked like a chain. It was very delicate and gold. He noticed small cutout gold letters attached to the chain. There was a \"B\" and a \"T\". It had to be Bethany's necklace. She had directed the unplanned threesome that night. She had used this chair to position herself between Claire's legs, and to put her gorgeous backside at the right height for Grant to enter her. Every time Grant thought about it, the memory made him instantly hard.\n\nStudying the clasp of the necklace, he could see it was open, or broken. He also noticed that the letters or initials, hung asymmetrically on the side of the chain, not at the bottom. Grant didn't remember seeing Bethany or anyone else wearing it. But paying attention to those kind of details was not his forte. If someone wore the same clothes three or four days in a row, he might catch on, otherwise no, unless it was something unusual or sexy.\n\nHe realized that he didn't have Bethany's number, so he couldn't text. In fact, he didn't have numbers for Jennifer or Claire either. That felt odd, and underscored his sense of isolation and loneliness. Maybe he shouldn't have Jennifer's number because she was married. But there was no reason he shouldn't be able to reach out to his other two friends. That was how he saw them. Despite their differences in age or interests or life circumstances, they were friends. Friends with a brief history of benefits. FWABHOB.\n\nGrant emailed Bethany. Quicker than sending a telegram through Western Union, but it felt as ancient. The email included a picture of the necklace, how and where he found it, and his cell number. He finished moving the furniture back to where it had been before the night of the party. He'd left it that way for days because of the memories. Not just of the party, but of the wild sexual encounter that ended the night. A threesome had not been on his bucket list, and now it was already checked off. In some respects, it had been a foursome. Jennifer's open masturbation as the other three of them had sex, made her a distant but integral part of the action.\n\nGrant was sipping a very hoppy IPA and watching the Olympics, when his phone buzzed. It wasn't marked as spam risk, and it was a local number, so he answered.\n\n\"Hello.\"\n\n\"Hey Grant, it's Bethany. Got your email.\"\n\n\"I didn't expect you to see that so fast.\"\n\n\"I check email regularly. Teresa sends me work at all hours. She's a good boss, but she never stops.\"\n\n\"So is this necklace yours?\"\n\n\"Yep. I didn't even realize it was missing. I was a reluctant party goer that night, if you remember. Then when things ended up so crazy...\"\n\n\"Indeed. Well, I can bring it with me to work.\"\n\n\"Would it be ok if I stopped by tonight? I'm on my way to the gym and it's not far from your place.\"\n\n\"Sure. I've got nothing going on.\"\n\nBethany arrived 15 minutes later. Grant opened the door with a smile. She was wearing yoga pants and a tank top. Inviting her in, he couldn't help but stare at her ass as she moved by him.\n\n\"Have a seat,\" he said gesturing at the sectional where the bacchanalia had broken out a few nights before. \"Can I get you a drink?\"\n\n\"If you've got sparkling water.\"\n\n\"Sure do,\" he said turning to the kitchen. \"The necklace is in the envelope on the coffee table.\"\n\nWhen he returned with her drink, Bethany was fingering the chain as she held it in the palm of her other hand. He sat in the chair opposite her.\n\n\"He gave this to me.\"\n\n\"The 'he' who's your guy and an idiot?\"\n\n\"That's the one.\" Bethany's boyfriend since college was in grad school. They only saw each other on occasional weekends. On the night of Claire's party, he chose to do other things, and lie about it. Bethany had felt hurt, maybe angry, and it contributed to her drinking, and to her leading role in the sexual adventure that followed.\n\nShe sipped her sparkling water. Grant took a swallow of beer.\n\nAfter a moment, she said, \"The clasp isn't really broken, it just opens up when stressed, much like our relationship.\"\n\n\"Sorry for your hurt. I don't know this guy, but you deserve better than how he's treating you.\"\n\n\"You always say the nicest things. You're so mature.\"\n\n\"You mean I'm old.\"\n\nShe laughed. \"No. I mean, yes, you are old, but that's not what I meant.\"\n\nGrant grabbed at his heart. \"You cut me deep.\"\n\n\"It's not the age, it's the attitude,\" she said solemnly.\n\n\"It's not the years, honey, it's the mileage.\"\n\n\"So are you just going to quote lines from old movies?\"\n\n\"If they're so old, how do you know them?\"\n\n\"Memes.\"\n\n\"Unless you're talking about wordless French entertainers, I don't know what that is.\"\n\n\"Never mind. We're off topic. I just wanted you to know how much I appreciate that you are kind, gentle, and thoughtful.\" Then she added, \"That why I let you cum in me.\"\n\n\"That was a hell of a present, by the way.\" Grant felt his hardness growing. \"And it wasn't even my birthday. My present came early.\"\n\n\"I think you came right on time,\" she leered.\n\n\"I'll take that as a compliment,\" he said as he shifted in his seat. \"Your comments are appreciated.\" His eyes flickered down to her legs, splayed apart, but covered in Lycra, spandex or some other heavenly material.\n\n\"Like my yoga pants?\" Her hand ran down her leg and back again.\n\n\"You could say that.\"\n\n\"Say it, Grant-daddy.\"\n\nGrant decided it wouldn't hurt to shoot his shot.\n\n\"I love them actually. The only way they could be better, is if I could pull them down to your ankles.\"\n\n\"Fair enough,\" she said. \"Why don't you come sit over here so we can discuss it.\"\n\nGrant sat next to Bethany, and put his arm around her. She leaned her head on his shoulder. He felt a little paternal and protective, but also carnal and aroused. He kissed the top of her head.\n\n\"Mmmm,\" she murmured. \"You make me feel safe, and...like...loved.\"\n\n\"That's good. I do want to keep you safe. And I adore you. One reason is because you don't make me feel like a predatory creep for lusting after you.\"\n\n\"You lust after me?\"\n\n\"Once I got to know you. At first, I wouldn't have allowed thoughts like that in my mind. You were a fresh out of university, na\u00efve kid.\"\n\nShe raised her head off his shoulder to look him in the eyes. \"Really?\"\n\n\"Well it didn't take me long to see that you weren't na\u00efve. I was. It took me a few decades to get as much life experience as you have. I quickly saw you, not as a girl, but as a sexy woman, who knew what she wanted, and could handle whatever situation confronted her. But...\"\n\n\"But what?\"\n\n\"I still would have never dreamed of coming on to you. An old dude like me has trouble imagining that women Claire's age would give him a chance...let alone you.\"\n\n\"Yeah, if you'd asked me out or something right away, I would have probably felt that was icky. But as the four of us got acquainted, and I got to see how you are, the age thing melted away.\"\n\n\"It melted away? You're kidding.\"\n\n\"Don't get me wrong. I still know you're old. Like old enough to be my father. But truthfully, I've got some daddy issues, and you fit the bill.\"\n\nHe kissed her forehead tenderly. \"Lucky me.\"\n\n\"By the way,\" Bethany continued, \"What's wrong with Claire? You should ask her out. I can tell she likes you.\"\n\n\"You're kidding!\" Grant couldn't hide his shock.\n\n\"She hasn't said it in words, but I'm pretty sure. Just like I can tell you have the hots for Jennifer.\"\n\n\"Yeah, well, I guess I have the hots for all three of you. And it's not like I would screw any willing female I encountered. All three of you are fun to be around, and sexy as hell.\"\n\nShe put her hand on his chest. \"While I don't find hell to be particularly attractive, I'll take it as a compliment.\"\n\n\"It was meant to be,\" he said, kissing her forehead again. He moved the kiss to the tip of her nose. He traced her lips with a finger, then lifted her chin, and kissed her mouth. She returned the favor. It was soft and tender, but not fatherly. The kisses grew in intensity. Her hand massaged his chest. He returned the favor.\n\nGrant gently kneaded each breast and felt the nipples stiffen, even through the tank top and bra. The action became more feverish, until he reached down and began pulling the tank top over her head. The sports bra was something he was less familiar with, and struggled to find a way to unhook it. She pushed his hands away and peeled it off her body. Her breasts were bigger than he expected. Once they were freed from all constraints he eagerly fondled them, covering them with kisses. He sucked each of the taut nipples, then buried his face between her breasts. She held him around the neck, pulling him tightly into her. After a few seconds of smothering, he began kissing the valley between her tits, moving upward. She leaned her head back and he kissed slowly up her breastbone and around her neck. He licked and kissed and nuzzled while she made appreciative sounds.\n\nHis hand moved between her legs. He felt the Lycra-covered mound of her sex. Heat radiated from her, and she spread her legs wider, lifting one leg up to rest on his thigh. With fingers on each side of her fabric-covered pussy lips, his middle finger found the gap in between. He could feel the wetness seeping through. He rubbed her slowly, but firmly. Bethany groaned, and pushed her hips forward into his hand.\n\n\"Bethany,\" his voice was husky with desire. \"What can I do to make you happy?\"\n\n\"You're doing it, Grant daddy. And you can call me B.\"\n\nGrant immediately thought of Jennifer's description of 'insert post A into slot B' and smiled. She felt his smile on her neck, shivered and giggled. Her hand found the tent made in his pants, and she caressed him through the fabric. It felt glorious, but he was in no hurry to rush whatever was going to happen. The kissing and rubbing continued. His lips found hers again, and his tongue pushed between them and explored her mouth. He added another finger between the lips of her cunt. The wetness soaked her crotch. His fingers slid up and down in the sopping, slick material. Then he concentrated on the area he guessed her clit would be. His motions became circular, targeting that spot. Bethany's breathing came faster and faster. Her hand stopped moving on his cock. Sensing an orgasm building, his massages continued purposefully, and his kisses more passionate.\n\nPulling away from her mouth, he commanded, \"Cum for me B. Do you feel my fingers?\" It was an inane question, but he could tell that anything he said pushed her closer to the edge.\n\nShe nodded in reply and pressed her hand over top his.\n\n\"You are my sweet, sexy girl, and I want to make you cum. I love touching your pussy B. You make me so hard and hungry for you.\"\n\nShe ground her hips forward and pressed harder into his hand. Then the spasms started. With one arm still around her shoulders, he held her tightly. Her whole body shuddered and jerked with pleasure.\n\n\"Oh God,\" she moaned. \"Oh, fuck!\" She reflexively pulled her legs together, squeezing his hand between her thighs. He kept still, holding her as she gasped and writhed.\n\nShe opened her eyes and smiled.\n\n\"That really got my motor running,\" she said, and put her teeth on his lower lip and gently pulled. When she let him go, he returned his attention to her nipples. She ran her fingers through his hair.\n\n\"We're not done big boy. Not by a long shot.\"\n\n\"I'm not going anywhere. I just want to enjoy all of you.\"\n\n\"Your selflessness is commendable,\" she said as she pulled at his zipper.\n\nWithin seconds his pants were undone, and he lifted off the couch far enough to slip out of them, underwear included. His cock stood at attention between them.\n\n\"Look what we have here,\" Bethany licked her lips. \"Something to suck on.\"\n\nShe lowered her head, kissing the tip of his penis, sending shivers up his spine. Then she engulfed him, forcing her head down his shaft. She paused at the bottom, and he felt her tongue explore around the base of his cock. She pulled up, leaving him glistening with saliva. She went down again, slower, longer, and then back up.\n\n\"Oh, B...your mouth feels so good.\"\n\nIt was on the third time down that Grant thought of what Issa had confessed. He didn't want Bethany doing something she didn't enjoy. She came up again, he pulled her face toward his.\n\n\"Are you okay with this? You don't have to.\"\n\n\"Why...am I doing it wrong?\"\n\n\"No. You're doing it great. I just don't want you to do anything you don't want to do.\"\n\n\"Oh, I want this G Man. Having you helpless between my lips is a turn on.\" She paused and went all the way down on him again, and back up before continuing. \"You can even cum in my mouth if you want, but we might prolong the fun if we wait until you slide into my pussy.\"\n\nHe liked that plan. And managed to nod in agreement. She enveloped him in her mouth once more, then pulled away with a pop.\n\n\"Let me know how much you like it,\" she whispered, and winked.\n\nWhen she sucked him into her mouth this time, he put one hand on the back of her head and urged her down.\n\n\"B, I love having you suck my dick,\" he said pushing down, and holding her in place. \"This feels amazing!\" He grabbed her pony tail and pulled her up, then pushed her back down. His hips pushed up into her and she made a choking sound, so he let her up quickly. He had no desire to make her gag. She looked up and smiled at him, a string of saliva hung from her lips to the purple head of his cock.\n\n\"I love sucking your dick, and I'm going to do it some more.\"\n\nHe let her continue, but he could feel the pressure building in his balls. After another minute he raised her head, and gave her a look of warning.\n\n\"I need to slow down a little.\" He stood up, wearing only his blue and white checked shirt. He pulled her up to stand next to him. Then he peeled off her yoga pants. He did it slowly, enjoying every inch of flesh as it was exposed.\n\nShe stepped out of them, and kicked them to the side. He lowered her back to the couch, and knelt between her legs. Hooking his arms underneath her legs, he scooted her to the edge, and gently pulled her legs farther apart. He looked into her eyes as he kissed the inside of her left knee. Slowly he moved the kisses up the inside of her left leg, until his cheek brushed against her closely trimmed pubic hair. His last kiss felt the heat of her inner thigh. Then he backed up and kissed the inside of her right knee, and repeated the process all the way up her right thigh.\n\nHe sat back again, shifting his gaze from her eyes to her pubic mound. The lips were glistening with the juices of her arousal. He took it all in, and smiled.\n\n\"You are unbelievably beautiful.\"\n\n\"Glad you think so,\" she said, as she caressed a breast with one hand, and the other slid down between her open legs. He watched attentively as her fingers splayed her swollen labia. She moved to the hood of her sex and rubbed a finger over it. Then she inserted a finger into her cunt, pushing it in deeply, and then slowly removing it. Grant could see the inviting wet opening left behind. He took her hand, and put the finger that had been inside her into his mouth. He tasted her musky wetness as he stared into her eyes. Not breaking eye contact, he leaned forward to kiss her glistening mound. He kissed and licked her pussy lips, before sticking his tongue inside her as far as he was able.\n\nHe began to tongue fuck her, covering her mound with saliva. Her hands went to the back of his head again, pressing him close. He found the nub of her clit, and after licking it, sucked it into his mouth. He listened to the sounds she made, and repeated everything that brought a response. He was patient and unpredictable. As his mouth and tongue focused on her clitoris, he inserted his middle finger into her opening. He curved the finger upward and felt a fleshy protrusion. Methodically, he massaged it with his finger as she gasped and groaned. Seconds later, juices seemed to flow from her pussy, coating his face and fingers, as she orgasmed a second time. She was quieter, but it seemed more intense than her first.\n\nCatching her breath, Bethany leaned back on the couch. She expelled a long sigh and laughed.\n\n\"That was so good. It seems like you've done this before. Maybe once or twice?\"\n\n\"Maybe. But I can't say I've ever had this much fun doing it.\" He wiped his mouth with the back of his hand.\n\n\"Well I want you to have a little more fun,\" Bethany replied. \"Right now, I want you to fuck me. Last time I was busy eating out Claire while you hit me from behind. This time, I want to see your face when you fuck me. And I want to say fuck as much as possible.\"\n\n\"I aim to please. As much as I love staring at your lovely ass, your face is even more beautiful.\"\n\n\"Here I am,\" she said, opening her legs wide. \"I'm fucking wet and ready to be fucked.\"\n\nGrant leveraged himself between her legs. She gripped his stiffness, guiding him inside her. He braced himself, planting his hands on the couch, on either side of her body. He no longer felt the need to be slow and gentle. He pistoned into her welcoming silky slit. He was rock hard again. Within three thrusts he was ready to explode, but he held back. The sound of their thighs slapping together was magnificent. His balls hit against her ass for a few strokes, but then contracted as he continued to approach the point of no return. He glanced between her ecstatic face and the union of their bodies. The sight of his cock plunging into this most intimate part of her body made him frantic with excitement. He ravaged her and she welcomed it.\n\n\"I'm fucking your pussy,\" he said redundantly.\n\n\"Yes, fuck me harder,\" she responded. \"Shoot your sperm in me. Cum in my fucking pussy.\"\n\nThat was all Grant could take. With a muffled groan he erupted inside her. After the initial ejaculation, he pressed himself into her, their loins conjoined. Holding still, his member pulsated, gripped tightly by her vaginal walls. Finally spent, he fell beside her, his softening wet cock flopping against her leg. He eyed her beautiful body.\n\n\"I'm glad I found that necklace,\" Grant remarked between deep breaths.",
        "Bethany rubbed her hand across his chest. \"I'm glad I put it there.\"\n\nChapter 5\n\nTinkerBell71 messaged him back after several days. They had a couple of brief but flirtatious messages, until Grant shared his cell number. Hearing her voice raised the level of interest. They had a long phone conversation. She was originally from Puerto Rico, and as a result, fluently bilingual. Her name was Valentina. She taught Spanish at the local high school. They found a common interest in John Steinbeck. \"East of Eden\" was her favorite. He favored \"Cannery Row,\" \"Sweet Thursday,\" and \"To a God Unknown.\"\n\nThey made plans to meet for dinner the following week. Grant had to start writing dates in a calendar. His social life was picking up, and he didn't want to miss any appointments. He scribbled things like \"tennis with Issa\" and \"dinner with Val\" in the little squares of the calendar on his kitchen table. Looking at his cramped and barely legible scrawl, he realized there was a better way to do this digitally. This was the way his mother kept track of her life. This juxtaposition of old timey behavior with a reinvigorated sex life was odd, but acceptable.\n\nHe got his three co-workers together for lunch that Friday. The first time they had all been together since Claire's party turned threesome plus one.\n\n\"I think Michael wonders why you don't invite him to join us for lunch,\" Claire remarked.\n\n\"It hadn't crossed my mind,\" admitted Grant. \"I like him, but at this point it might inhibit our conversation.\"\n\n\"I'm sure Michael would be fine with a little sex talk,\" Jennifer said, \"but I think he would be competing for your attention, and not ours.\"\n\n\"Grant's not his type,\" Bethany said with a knowing look. \"I've seen him ogling the kid, Julio, I think is his name. He's about 5'9\", dark, fit, put together, and young.\"\n\n\"Yep, none of those things describe me. I'm the old silver fox.\"\n\nThat comment turned the conversation to his dating life. Grant filled them in on his tennis plans with Issa, and his new connection with Valentina.\n\n\"We cracked open your shell and now you're trampling it to pieces,\" Jennifer said with mock indignation.\n\n\"I'm out there, Jenny, and I'm loving every minute of it!\" cracked Grant, with a bad impersonation of Kramer.\n\n\"Oh, you've been out there, and in there,\" said Bethany mysteriously.\n\nClaire gave her a look.\n\n\"Are you implying something Beth?\" Jennifer asked.\n\nGrant shifted uncomfortably, wondering how much, if anything, Bethany would tell them.\n\n\"The other night, he found a necklace I...misplaced during the...party,\" she said with a wicked grin. \"And so I stopped by to pick it up.\"\n\n\"And...?\" Claire asked.\n\n\"And, one thing led to another, and this kind gentleman provided me with a couple of great orgasms.\"\n\nClaire stared at Bethany, then turned to Grant, and finally looked at Jennifer. \"How did one thing lead to another? What does that even mean?\"\n\nIgnoring the questions, Jennifer spoke up first. \"I knew you had a thing for the distinguished type. In the absence of a gentleman caller, you called on the gentleman.\"\n\n\"If you must know, there was mutual admiration. He admired me really, really well, and more than once. Then I admired him, until he couldn't take it anymore.\"\n\nJennifer laughed with delight. Claire smiled weakly. Grant thought it wisest not to speak.\n\n\"I'm a little jealous,\" Jennifer said, cocking her head to one side. \"You and Grant-daddy get to knock boots, while hubby and I are home threatening the children to stay in bed.\"\n\n\"Sorry you weren't there to witness it this time, Jen,\" replied Bethany. \"Being able to just focus on one person at a time has its benefits. Although our little group party had a lot to commend itself.\"\n\n\"Hubby and I have a little Netflix and coma planned for tonight. We'll be unconscious before finishing an episode of anything,\" Jennifer admitted. \"But why don't the three of you spend time together this evening? That is, unless you have someone else lined up already, Grant.\"\n\n\"No I don't,\" answered Grant, feeling it was safe to talk. \"But even if I did, I'd cancel it to hang out with two of my favorite people.\"\n\n\"Oh, still Mr. Smooth, I see,\" Jennifer snorted. \"I'm feeling jealous again.\"\n\n\"Don't be,\" Grant said hurriedly. \"You are an integral part of this group. I would desperately love to have you join us, but we'll make do.\"\n\n\"I'll bet you will,\" retorted Jennifer.\n\nThey settled on an Italian place. They were the only ones there with three at a table. Most were couples, while several tables had foursomes. Assuming that no one thought he was there with his daughters, or a wife and daughter, Grant felt proud to be seen with the two lovely women. The food was good, but the wine was even better. Soon, they were making a little too much noise, and getting glances from nearby tables. Managing to be that raucous without Jennifer was surprising. But the three them enjoyed each other's company, and Grant found it easy to make them laugh.\n\nThey all agreed it would be fun to see a movie, but theaters weren't fully operational yet. Grant offered his place, where they could find something to stream. The girls said yes, and everyone pretended as if nothing else could possibly happen other than movie watching.\n\nHe ended up picking a series that was on the trending list. It was supposed to be romantic and sexy. Grant found the first episode a little tedious and had trouble feigning interest. The girls seemed to like it enough to keep watching. He was between them on the couch, because what were the other options?\n\nHe had an arm around each of them, and within 30 minutes they were both snuggled against him. When that happened, Grant lost track of the plot completely. He breathed in the fragrances of Claire's shampoo, since being the taller of the two women, her head was closest to his.\n\nGrant felt Bethany's arm snake around him, and watched her reach for Claire's leg. Her fingers trailed up and down the jean-covered thigh. He felt Claire stir slightly, but little other reaction.\n\n\"Claire?\" Bethany's voice was soft.\n\nHe felt Claire's head turn and the heat of her breath on his chest. \"Mm-hmm?\"\n\n\"Would you do something for me?\"\n\n\"Uh-huh.\"\n\nBethany lifted her hand from Claire's leg and raised it to her face.\n\n\"Come-ere,\" she said leaning across Grant's chest as she drew Claire's face toward her.\n\nHe saw Beth part her lips as she closed the distance between them, to kiss her blonde friend.\n\nClaire hesitated ever so slightly, but met the kiss, and responded. Her lips yielded to Beth's. The tenderness between them had an immediate effect on Grant. Blocked by the heads of the two women, he couldn't see his stiff erection, but he felt it. He could see the kisses continue tenderly, yet with increasing passion. Bethany stopped first, a smile played across her wet lips.\n\n\"Claire, with your help, we're going to put on a show.\"\n\nThe blonde nodded slightly. Her eyes had a dreamlike look.\n\n\"I want you to do things, Claire. But I want you to want to do those things. There are several acts in our little show,\" Beth continued. \"This was Act One. And as you can see, our audience is appreciative.\" She looked toward Grant's crotch. While he couldn't see, he knew that Bethany observed the bulge in his pants. When Claire turned slightly to look, his erection throbbed painfully.\n\n\"Act One is going to go on a little longer, but Act Two will quickly follow. Do you want to know what going to happen then, Claire?\"\n\nClaire nodded again, swallowed hard, and breathed out \"Yes.\"\n\n\"Well I'm going to stand up and start taking off my clothes. Right in front of both of you. I'm going to expose my tits, and then I'm going to pull off my panties, and I'll be stark naked. Would that be ok Claire? I'm not going to ask Grant what he thinks, because I know he likes me naked. But what about you, Claire? Can you handle seeing me in the flesh?\"\n\nClaire roused from her daze. \"Of course. I've seen you naked. You've seen me naked. You licked my pussy...while Grant fucked you. Of course I can handle it. But what happens after that?\"\n\n\"Ah, that would be Act Three. And you're going to have to wait.\" And with that, Bethany returned to kissing Claire. Grant could see their tongues touching and probing each other's mouth. He felt a hand squeeze his penis through his pants. Then another hand joined. Grant tried to relax and enjoy the entertainment, anxious for the next Act to begin.\n\nMoments later, Bethany stood and began to strip, slowly and seductively. She kept her eyes on Claire as she undressed. Claire stared back. Her hand rested on Grant's bulge, gently massaging him. Although Grant had fucked B on two previous occasions, he eagerly watched as she unveiled her body in front of them. Every movement was protracted and deliberate just in removing her top. Leaving her bra intact, she was unhurried in wriggling out of her jeans. The moment when the denim revealed her round ass still covered by white panties, the pressure of Claire's hand on his cock noticeably increased. Grant felt like he knew that beautiful backside well, but was anxious to increase his familiarity.\n\nB turned her back to them, and looked seductively over her shoulder, strictly at Claire. She unclasped her bra, again with great deliberation. Once off of her body, B held it out to the side with one hand, then dropped it to the floor. She turned to face them with her hands cupped over her breasts. Then B moved so that her fingers covered only her nipples and areolas, leaving the swell of her tits in plain view. She slowly turned away from them again, stretched her arms out to her sides, and looked back. Grant was desperate to see her tits. B was swaying, almost dancing. His eyes travelled down her bare back, to her waist, and the white panties covering the swell of her ass. The panties were pulled tightly against her skin, with each globe delectably on display. Her legs were slightly apart as she shifted from side to side, and he could see the muscles in her calves. He remembered the feel of those legs resting on his arms as he knelt between them.\n\nB rotated again, and covered her nipples when she faced them. She was enjoying this. And Grant could feel from Claire's ragged breaths, and how she continued to fondle his manhood through his pants, that she was too. This time, B's smile widened as she pulled her hands away, exposing her tits. Though smaller than either of her co-workers, B's were a perky handful. Her pink nipples were erect. Just as Grant envisioned sucking one into his mouth, she spun around again. Grant felt the act was turning from tantalizing to frustrating.\n\nThis time when her back was turned, B widened her stance, and slowly bent forward. In a moment, she was peering at them from between her legs. Grant could see the outline of her pussy under the white panties. B reached underneath herself and drew her hand over her cloth-covered pubic area. She repeated the movement, and each time she did, more of her panties were pulled into the cleft of her ass. She bent lower still and the crotch of her panties was now translucent with her juices.\n\nB raised herself upright, whirled around and stepped in front of them. She sucked her lower lip into her mouth, raised her eyebrows as she looked at Claire's hand kneading Grant's cock. Then B bent forward, placed her hand over Claire's, and began kissing her. Claire eagerly returned the kiss. The pressure of two hands leaning on his cock was more uncomfortable than pleasurable, but watching them kiss made up for it. After a moment, B pulled her lips away, turned her back to them yet again, and presented her backside to Claire.\n\nWith B a foot away from his face, Grant could feel her body heat and the aroma of sex. It was all he could do not to grab her. Claire's hand was no longer in his lap. She slowly reached up and placed a hand on each globe of B's ass. Claire massaged the flesh. She spread the cheeks apart, and released them. The panties were now more like a thong. Claire delicately kissed one cheek and then the other. B groaned appreciatively, and pushed backward into the kisses. Claire's lips moved in between, her nose nuzzled the sodden crack.\n\nB wiggled her ass in Claire's face wantonly as the kisses became firmer and wetter. Suddenly, Claire grasped the panties and tugged them off B's hips. As she pulled them over Bethany's ass, the soaked crotch of the panties made a slight sucking sound as they detached from the cleft between her legs. B bent lower still, and using her own hands, spread her cheeks farther apart. Grant could see the pucker of her anus. It contracted and seemed to wink at them. Claire's hands joined B's as she leaned in and planted a kiss directly on the glistening vagina. She licked the slit and B moaned.\n\nReluctantly, Bethany pulled away and announced, \"Time for Act Three. But I've decided to change the program.\"\n\n\"The usher didn't hand me one on the way in,\" Grant commented. \"Make sure you don't skip anything. I've been able to follow the plot so far.\"\n\nB didn't smile at him. She took Claire by the hand and got her to stand up.\n\n\"Are you ready for Act Three Claire? Grant is just going to watch.\" She wagged a finger at him and said, \"Stay right there.\"\n\nGrant remained on the couch, fully clothed. The two women stood before him. The younger one was completely nude, her ponytail hung over her shoulder. The blonde seemed to tower over her. Nearly half a foot taller to begin with, Claire was still fully clothed and wearing boots with a heel. Bethany held both of Claire's hands in hers, and looked up into her eyes. Standing on her tiptoes, she gently kissed Claire's lips.\n\n\"Before anything else happens, you need to take off your clothes. Grant and I need to see all of you, don't we Grant?\" Neither B or Claire even looked at him, but he nodded in agreement anyway.\n\n\"We need to see those long legs, your firm ass, and that silky pussy that I devoured, your flat, toned belly, and those gorgeous tits. We can't do anything else until you get naked. Are you going to show us Claire?\"\n\nThe blonde didn't respond with words. She simply began to strip off her clothes. Mimicking B's striptease, she fixed her gaze on the woman in front of her, and removed items one piece at a time. Grant strained to take it all in. The women were different, in size, coloring, and shape. But both were beautiful. Seeing their bodies sent an electrical charge through him. They stood facing each other, giving Grant a side view. From the side, their breasts looked large. Claire was more well-endowed than B, but both seemed bigger than he remembered. Hands entwined, the women were so close to each other, their erect nipples brushed together. The first touch seemed accidental, but B made the next intentional, lightly swaying her breasts so that their nipples grazed each other three times.\n\nGrant had never been to a strip club, sex show, or anything of the sort. But this must be what it was like. He was sitting, fully clothed, watching two beautiful, naked women perform in front of him. He would have gladly given everything in his bank account for this private viewing, and yet it was freely his, without asking.\n\n\"Claire,\" B's voice was commanding, but not demanding. \"Did you like it when I licked your pussy?\"\n\nClaire nodded. Grant could see her breasts rise and fall as her breathing deepened.\n\n\"Well Claire. I enjoyed tasting you. I put my tongue in you and sucked on your clit, and made you cum. It made me so horny, that I let Grant fuck me from behind, and then cum inside me. I'm sure you remember that, don't you Claire?\"\n\nAgain she nodded. This time her eyes flickered over to Grant. She licked her lips. She shifted from one foot to the other, and pressed her legs together. Grant wanted to strip his clothes off, and satiate himself by ravaging both women. But he didn't move.\n\n\"Well Claire, before we can move on to Act Four, I want you to return the favor. You don't have to. But I'm going to sit down next to Grant, spread my legs, and invite you to eat my pussy. I don't think you've ever done that to a woman before, have you Claire?\"\n\nBethany didn't really wait for or expect an answer. She stopped holding Claire's hands and seized her tits instead. She pressed them together and rolled them under her palms. Claire's head rolled back. B leaned forward and kissed Claire's exposed neck while continuing to fondle her breasts.\n\nBetween kisses, B kept giving instructions.\n\n\"When I sit down and expose my pussy, it's going to be your job to take care of me. Do to me what you like done to you. Grant's going to watch. It's not his turn. Not yet anyway.\"\n\nWith that, B moved to the couch. Her dripping snatch was lowered on to the cushion next to him, but Grant kept his hands to himself. She perched on the edge of the furniture, lasciviously spread her legs, and looked up into Claire's eyes expectantly.\n\nThe blonde beauty dropped to her knees without hesitation. She ran her hands up B's inner thighs. Her caresses continued up to B's perky tits. Claire squeezed them, pulling and pinching the nipples as she lowered her head to B's belly. She kissed all around her middle and licked B's navel. She began to thrust her tongue into the belly button. Grant could see trails of saliva as her mouth worked feverishly. Bethany began to squirm, whether in discomfort or passion, he couldn't tell.\n\nClaire continued manipulating B's breasts and nipples. She seemed to be twisting and treating them roughly. B's hips raised off the couch and tried to grind into any part of Claire's body. She only managed to reach the breasts hanging between her legs, smearing herself across them without relief. Claire seemed to ignore the attention Bethany was seeking. She alternated between licking, biting, and kissing all around B's mid-section and upper chest.\n\nBethany finally grabbed Claire's head and pressed it down between her thighs. Claire did not hesitate, but gave herself completely to B's pussy. She opened her mouth widely, covering the entire mound, and began sucking. The slurping sound of suction was evidence of the vigor Claire was applying. B grasped the blonde head even more tightly and pushed it to her center. B whimpered and moaned.\n\nClaire kept her mouth sealed over B's pussy. She reached under herself and stuck a finger in her own sopping cunt. Withdrawing it, she found B's puckered anal opening, and circled it with her coated finger. Slowly inserting, she pushed past the gripping muscle with the tip. Bethany groan and twisted her hips in response. Leaving the fingertip in B's anus, Claire began lapping the soaking slit. As her tongue traversed from top to bottom, it sunk in more deeply with each pass.\n\n\"You're tongue-fucking me,\" shrieked B. \"Your fucking tongue is making me crazy.\"\n\nClaire pushed her tongue inside as far as it could reach. She wriggled her finger more deeply into B's ass hole, impaling her right up to the knuckle.\n\n\"I'm going to cum,\" B moaned. \"I'm cumming right on your pretty face!\"\n\nClaire turned all her attention on the swollen clit in front of her. She sucked and licked and made mewing sounds, as her finger pressed farther into B's anus.\n\n\"Oh my God!\" B was almost shouting. \"Oh fuck!\" She began to thrash, her body contorting with pleasure. B shuddered and quivered, and Claire stopped using her tongue, but left her finger in the tight, hot, pulsating bung hole.\n\n\"Oh my God, Claire!\" B gasped for air, as she pulled the blonde head upward. \"I want to taste me on your lips,\" she said, mashing their mouths together. As Claire's body moved forward, Grant could see her pussy was dripping, and decided to act. Although he had seen Claire's body on full display on a previous occasion, he had never made any sexual contact with her. That drought ended as his hand glided over the slick wetness between her legs. Claire's knees almost buckled. Although her head turned back toward him, her eyes were closed, and her face displayed a look of utter arousal. Granted parted her pussy lips with his fingers, savoring the feel of wet silky creases of flesh. He was about to insert fingers inside her when B announced \"Act Four.\"",
        "Her directions were simple. It was Grant's turn to get naked. He didn't stand on ceremony. He didn't do a seductive strip. In seconds, the only thing on his body was the drop of pre-cum hanging from his stiff penis. He was locked in the upright position. Bethany captured the drip on one finger and sucked it into her mouth. Then she pulled Grant's face toward her and kissed him passionately. Breaking away from the kiss, she gave him an order.\n\n\"Now kiss her.\"\n\nStanding almost eye to eye with the statuesque blonde, Grant encircled her waist with one arm and pulled her close. Claire's naked flesh melted into him. His cock was trapped between them, and her breasts molded into his chest, the stiffness of her nipples against his skin. His other arm dropped to Claire's ass. Their loins met together as he stared deeply into her eyes. This moment had seemed so long in coming. He had been in such close proximity to this beautiful woman in their first threesome encounter. In open-mouthed wonder, he had watched her legs spread wide to receive oral sex from Bethany. He had admired every feature of her face, every expression of ecstasy, every aspect of her body, and done nothing. Even tonight, so much had happened, and he had not been part of it. But now he was. All of that longing and hunger was in that kiss. Their bodies rubbed together, mingled with sweat and desire. Grant could have kept on in the tight embrace and kiss.\n\nBut B had other ideas. She took each of them by the hand and led them into Grant's bedroom. His king sized bed had a six-foot-tall headboard. There was a sitting area to the left of the bed with two upholstered chairs. To the right of the bed was the entrance to the bathroom. There were end tables on each side of the bed, with matching lamps. Bethany turned one lamp on, then crawled across the bed to turn on the other. She gestured to Grant to lay down on the bed after she stripped off the comforter. In doing so, it was apparent that he was not quite as hard as he had been a few moments earlier, and had a questioning look on his face.\n\n\"Don't you worry, G Man,\" she said in answer to the unspoken query, \"You are in for the time of your life.\"\n\nShe stood next to Claire, touched her cheek, and then kissed her on the lips.\n\n\"Do you trust me Claire? Are you ready for Act Four?\"\n\nClaire had yet to experience any release. Her body hungered for it.\n\n\"Yes,\" she whispered. \"Oh God, yessss.\"\n\n\"Straddle him,\" B commanded. \"Face toward him, with your knees on either side. But don't let him penetrate you.\"\n\nClaire immediately moved to follow the instructions. As she lifted one leg over him, Grant saw the golden down between her legs, still lubricated with desire. She settled herself on him, her wet pubic hair brushing against his now raging erection. B joined them on the bed. She lay down between Grant's legs.\n\n\"Claire,\" she explained. \"I'm going to suck Grant's cock. He's hard, but I want him in my mouth. Then when he's all slick, I'm going to guide him into your cunt. Are you on board with that plan Claire?\"\n\nThe blonde squirmed, looked deeply into Grant's eyes and responded, \"Oh, fuck yes!\"\n\nA second later, Grant felt B's lips on the tip of his cock. She nibbled, and tongued around the engorged helmet. Then she took him all the way in her mouth, swallowing him whole. After a moment, her mouth returned to focus on the head, and she wrapped a hand around his penis, and stroked his saliva covered member. Grant struggled not to cum as he fervently began to grope and suckle the tits hanging in front of his face. He felt Claire grind and slide her pussy on his belly, and seconds later she orgasmed. Grant studied her face as it went through such beautiful agony. She opened her eyes, looked at him, and smiled, as his cock was attended to by B. Her stroking and sucking slowed and then stopped.\n\n\"Claire, I'm going to stick him in you now. Raise up and impale yourself his cock.\"\n\nClaire raised her ass in the air and hovered over him. He felt the guiding force of B's hand pointing him to the core of Claire's wet receptacle. B rubbed the head back and forth over Claire's pussy. Finally, the top of his cock entered her vagina. She let out a sigh, but didn't descend on him. She held that position for seconds before sliding him a little farther into her slick opening. Then she raised up until his penis almost entirely emerged from the sopping safety of her sex. Grant could feel B's hot breath on his glistening member while it was exposed. Just as suddenly, Claire thrust downward again, taking more of him inside of her than before. She repeated this multiple times, teasing him, until finally she slammed all the way down, fully engulfing him.\n\nGrant tried to think of other things. B made it impossible as she handled and kissed his balls. Claire was now simply riding him, slowly meshing their genitals together. He reached between them and attempted to find and massage her clit, but with limited success. Still he could see an increase in Claire's desire. He could feel B's tongue moving from his balls to his shaft, flicking around the space encased by Claire. The tongue moved upward, and from the groan that Claire emitted, he could tell that some intimate parts were being explored. Claire lifted her ass until his cock was completely released. Grant could hear B ravaging Claire's pussy, while stroking him with her hand. He reveled in the sounds of B mouth fucking Claire, while his penis was being caressed. B eventually moved her mouth from Claire, to once again consume his engorged cock. After recoating him with saliva, she guided him into Claire's cunt for re-entry.\n\n\"Grant, I want you to fuck her now. Ream your beautiful cock into her swollen pussy.\"\n\nHe started to do just that, thrusting upward, deeply into Claire's sopping vagina.\n\n\"Claire, I love watching you get fucked. I've got an incredible view of him sliding in and out of your cunt.\"\n\nHe could feel B's hot breath on his scrotum as she talked. Her hand encircled his testicles and squeezed. This brought Grant to the brink.\n\n\"I'm going to cum Claire.\" It was part declaration and part warning.\n\n\"Cum in my pussy Grant! I want you to coat my insides with your sperm.\"\n\n\"Shoot your fucking cum in her Grant,\" B shouted. \"I want to see you fucking fill her cunt.\"\n\nThat was all Grant could take. With a animalistic groan, he ejaculated into Claire. Jet after jet of sperm left his body, and was injected into hers.\n\nThe pair clutched each other tightly, sweaty, conjoined, gasping.\n\n\"Fuck, I'm going to cum.\" It was B. Peering around Claire's body, he could see B frantically strumming her clitoris.\n\n\"Oh God, watching you two fuck is making me cum. FUUUUUCk!\"\n\nWith that, her body convulsed in orgasm.\n\nWhen it was over, the three laid side by side in Grant's bed. They snuggled together, still naked, but covered with a sheet.\n\n\"Every time I think something can't get better, it does,\" he said with a woman curled up on each side of him.\n\n\"Bethany, you're going to make a hell of a supervisor someday,\" observed Clair. \"You had a plan and we followed your every direction.\"\n\n\"It was even better than I imagined it would be,\" Bethany replied. \"Thanks for playing along...\"\n\n\"I've got a couple of things to say,\" interjected Grant. \"First, I think I need a new couch. That one has a lot of memories, but even more stains. Second, as much as I would love to put Acts One through Four on repeat...I'd like us to consider expanding the cast for Act Five.\""
    ],
    "authorname": "LexicalFantasy",
    "tags": [
        "threesome",
        "erotic coupling",
        "oral",
        "ffm",
        "oral sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/group-discount"
}