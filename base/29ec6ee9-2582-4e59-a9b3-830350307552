{
    "title": "Cabin Fever",
    "pages": [
        "1975, Southeastern United States\n\nTravis lived in an old log cabin a few hundred yards from the point where the creek flowed into the big river. His father had bought two acres for next to nothing and built the place one log at a time in the late nineteen-fifties and they had used it as a hunting and fishing getaway. When he was young Travis had always looked forward to coming there with his Dad and older brother Eddie to fish out in the river and in-season would hunt for deer and rabbits.\n\nThe cabin was pretty crude from the get-go. His father installed a septic tank and drilled a well, but the water was full of sulphur and other minerals and it smelled and tasted bad. The cabin was a few miles from the small town up the creek, so there was no electricity either until the mid-sixties. As the town slowly expanded in the direction of the big river his father, who happened to be a supervisor at the electric company, managed to get a power line run out to the point. Stay ahead of the growth, he'd said, and one of the bigwigs had agreed and approved it. The cabin still had no heat or air conditioning, but at least it had power for lights, fans, a fridge and a stove.\n\nEddie was drafted in '67 and was soon sent off to Vietnam and Travis followed him fifteen months later. Eddie was killed in combat when Travis was in Boot Camp. Travis went to war too and nine months later was sent home with his left leg full of shrapnel and three of his toes blown off. He would walk with a wobbly limp for the rest of his life. When he got home he found out his girlfriend had moved in with another guy. Then he got sick as a dog and became delirious with high fever. He went to the doctor. The doctor put him in the hospital immediately; he had malaria. Over the following half-year his father died of a heart attack, and then his mother passed away shortly thereafter. She hadn't been sick; Travis assumed she'd died of a broken heart.\n\nTravis was their sole heir. He hired a lawyer to sort everything out, get rid of all the personal property and sell the house. Then he packed all his stuff into his pickup and hitched the boat and trailer to the rear and drove to the cabin. That was all he wanted. He'd been there ever since.\n\nAfter the estate sale, selling the house and receiving the life insurance Travis netted a little over $31,000. He insisted on cash; he no longer trusted his government and he wasn't trusting any banks. The lawyer thought it was a peculiar request but he didn't pry and had the cash waiting for him when he came to pick it up. Then Travis drove to the small town up the creek where he had a post office box and picked up his monthly disability check. He cashed it at the bank and drove to his cabin. He opened a floor board under the rug in the bedroom and stashed the money in the steel box hidden there.\n\nFor many months, all Travis did was go fishing in the mornings and work around the cabin the rest of the day, fixing it up. He and his pickup became a familiar sight in town, the 'loner from the point' they called him, coming and going, buying tools and materials, ordering supplies, always paying cash. He painted. He built a front porch the length of the cabin. He rebuilt the bulkhead and dock. He replaced the old shingled roof with metal and installed gutters all around, which flowed into two huge cisterns he installed at the back of the cabin, one for the kitchen and one for the bathroom and indoor and outdoor showers. In a southern, subtropical climate that received fifty-some inches of rainfall per year the tanks stayed well-filled most of the time. The well water was just used for the commode, cleaning fish and washing down the truck and boat.\n\nHe built himself a desk. Because at night Travis tried to write. He'd always been a writer, and had sent many short stories out to magazines, and had had two published, earning twenty-five dollars for each. But now he was trying to write something big, something special. About the war and the shit he'd seen and the pain he'd endured and the brother he'd lost and his anger and the hatred he felt for the assholes who had sent him there and how everybody now looked at him like he was some kind of freak ever since he'd come home. But the writing wasn't happening. He ripped sheet after sheet of paper out of his typewriter and threw them in the trash.\n\n--\n\nTravis fished nearly everyday and found that he was not only good at it, but that it could be profitable. He'd stock his fridge and freezer and then sell the rest to the market in town or to a market in the town across the river. Mostly trout and cat. With his monthly check and the money he had coming in from fishing he made more than enough to live on and each month he would stash more cash into his steel box.\n\nOne afternoon after a very prodigious day out on the river, Travis was cleaning fish on his dock when he noticed a skiff full of black kids coming his way from town heading toward the river. There was an older, good-looking girl sitting back with her hand on the tiller of an old, small outboard motor that sounded like it was about to kick the bucket at any moment. In front of her were three young children, two boys and a girl.\n\n\"Hi, Mister!\" one of the little boys called, as the boat neared his dock. It slowed and eased closer.\n\n\"Hi. How're y'all doing today?\" Travis asked.\n\n\"Good! Going for a boat ride,\" the boy said.\n\n\"Where are you all going? This here's the end of the creek. You better turn around. You don't want to get out in the river!\"\n\n\"Why not?\" \n\n\"Number one that little motor isn't going to help you much, it's pretty rough out there, the current's too strong. Plus, where are your life jackets?\"\n\n\"We're not going in the river,\" the older girl said. \"Just to the mouth, then we was gonna turn back.\"\n\n\"Good,\" Travis said. \"Why don't you tie up, take a break?\"\n\nThey secured the skiff and climbed up on the dock.\n\nThe young girl looked to be about ten, the boys a little older. Travis could see that the older girl was actually a young lady, and an attractive one at that. She looked to be about nineteen or twenty, was thin and barefoot and wore blue jean cutoffs and a white t-shirt. Her breasts were small and bra-less, her nipples slightly aroused inside her damp shirt. Her hair was a wind-blown, kinky black mop but her toned arms and legs were smooth as chocolate milk.\n\n\"What ya doin' Mister?\" the boy said.\n\n\"Cleaning fish. Catfish. This here's a big one too, I'd bet thirty pounds or close to it. Y'all like catfish?\"\n\nThey got talking about catfish. They all loved catfish. Mama fried it up every chance she got, the older girl said.\n\nThey talked as Travis cut and cleaned. He learned where they lived. It was on the other side of the creek a couple miles closer to town in the Black section. Their Dad was a truck driver and was away a lot. Their Mom raised chickens and tended garden and cleaned houses in town. He learned their names. The boys were Nathan and Roy, the little girl was Joy. Mom was Jolene, Dad was Robert.\n\nThe older girl was Bettina. She was nineteen. She helped Mom with the kids and the chickens and the garden and worked at the drug store to help with the bills. Travis had a hard time looking away from her slim, trim body, her cute butt and her dark satiny skin. But he caught himself, shook it off. This was the south.\n\n\"How many of you are there living in your house?\" Travis asked.\n\n\"Seven,\" Bettina said. \"Our grandmother lives with us too.\"\n\nTravis cut several long, thick pieces, about three pounds, and wrapped them up in parchment paper. He handed it to Bettina.\n\n\"There now,\" he said. \"Take that home with you. Fry it up. That will be a tasty dinner for your family.\"\n\n\"Oh, you don't have to do that, Mister Travis.\"\n\n\"I know that, Bettina. But I want to. Just being a good neighbor, that's all. And enough of that Mister stuff. Just call me Travis.\"\n\n\"Okay. Travis. Thank you. And I'm sure my Momma thanks you too,\" Bettina said.\n\n\"We're gonna have a good supper tonight!\" Nathan said enthusiastically.\n\nTravis finished up his work and squirted off the table and washed the guts and remains into the creek.\n\n\"Now you all do me a favor,\" Travis said. \"Don't go any closer to that river. It's dangerous. You turn that boat around and head back home, you hear?\"\n\nThe kids uttered a chorus of okays and Bettina said they would. She would take care of them.\n\n\"Okay good. Now I have to head into town. And I don't want to hear about a boat sinking in the creek with four young people and three pounds of catfish in it!\"\n\nThey all laughed and got back into the skiff. They said goodbye and Bettina got the motor started on the third pull. All four were waving back at Travis as they headed off in the direction from which they'd come.\n\nTravis grabbed his cooler and put it in the bed of his truck and drove to town to sell his fish.\n\n--\n\nTravis had become a loner, but he wasn't antisocial. If a situation presented itself he could be friendly and sociable, but he wasn't naturally outgoing. Not any more. In high school he'd played trumpet in the band and starred on the football and baseball teams, he was tall, handsome and popular and had had a lot of friends. But now he'd lost touch with his old friends and the only times he played trumpet was when sometimes late at night he'd sit on his porch and improvise mellow mournful melodies. And somewhere out on the river was a sax player who'd sometimes answer him back with dirges of his own.\n\nThe damn war had taken so much from him. In less than a year his personal life had gone from being young and enthusiastic about the future to a hellish nightmare. First his brother went home in a body bag. Then he went over there. As soon as the door of the plane opened after landing in southeast Asia he knew instantly he was in Hell. It was like walking into a blast furnace; he didn't think anyplace on Earth got that fucking hot. Six days later he saw a soldier killed, the first of many he'd witness over the following months. The gore, the guts, the lacerated limbs. Then a mortar blew off part of his foot and ripped into his leg with sharp, hot metal, like razors. They sent him home a few weeks later to a place he barely recognized, and everything he saw was fogged by what he'd seen, by what had happened to his brother, and to himself, and by his fury and hatred and pain. And he also knew in his heart that the deaths of his parents were not unrelated to the war, either. The war had killed them too, residually. \n\nSo Travis was depressed. Angry, pissed, tired, anxious and depressed. That's where the cabin came in. Get as far away from the nightmare as he could. Fish, hunt, sit on the porch and stare at the water and the shorebirds, play his trumpet. \n\nAnd write. But the writing hadn't been going so well. He knew he had a story to tell and knew that writing it would be his catharsis, his therapy. It would be the only way he could heal.\n\nThere was another thing that bothered him. It bothered him a lot. And he blamed the war for that too.\n\nTravis was impotent. Never was before, but was now. He couldn't remember exactly when he'd last had a hard-on, but it was sometime after he saw his first platoonmate perish before his eyes and sometime before he'd almost had his own leg blown off.\n\nHe'd tried many times since to get hard and jerk off, but without success. He'd about given up.\n\n--\n\nA few days later Travis was sitting on his porch drinking an Orange Crush. It was late afternoon and he was resting. He had just returned from town and was taking a rest before whipping up some supper. \n\nHe heard a familiar sound. It was the same putt-putt-putt of the outboard motor he'd heard a few days earlier when he'd had his visitors. As the sound got louder he saw the same skiff come into view. Bettina was alone this time. She aimed the bow at the dock and Travis walked down to greet her.\n\nTravis secured the skiff and then took Bettina's hand and helped her up onto the dock. It was the first time they'd touched and her hand felt small inside his own. When she stood close beside him after hoisting her up he realized she was taller than he remembered, maybe five-seven or -eight. She looked much more woman than child, he thought.\n\nShe had a basket with her. \"For you,\" she said. \"From Momma and the family. As thanks for the great supper we had eating that catfish. We all enjoyed it. It was delicious!\"\n\n\"I'm glad to hear that,\" Travis said. \"But this wasn't necessary.\"\n\n\"Just bein' a good neighbor, that's all. Right?\"\n\n\"Right.\"\n\nHe peeled back the towel and there were a crate of a dozen eggs, two huge red ripe tomatoes, a cucumber, a zucchini and a yellow squash.\n\n\"Oh, wow! Thank you.\"\n\n\"All from our own garden and our own chickens!\" Bettina said.\n\n\"These look great. Now I know what I'm having for supper. You care to join me, Bettina?\"\n\n\"Oh, I can't, Travis. I tole Momma I'd be back directly. I gotta watch the kids tonight.\"\n\n\"Oh okay, uh, maybe some other time.\"\n\n\"That would be fine,\" she said.\n\nThey stood there for a moment frozen in silence. \n\n\"Let me put these inside and I can give you back this basket.\"\n\n\"Okay.\"\n\nBettina didn't mind staying a couple extra minutes. She followed Travis up to the porch. Travis put the eggs and vegetables on the table and handed the basket and towel to her.\n\n\"Now you be sure to thank your Mom and Dad for this. I surely appreciate it.\"\n\n\"I will,\" she said, looking around the porch and inside the open door. \"You live here by yourself?\"\n\n\"Yep, just me.\"\n\n\"Don't it get lonely?\"\n\n\"Sometimes, I guess. But I've learned to like the solitude. Been thinking about getting a dog, though. Be nice having a dog around. To talk to, take fishing, ride in the truck.\"\n\n\"We got a dog, a big ole terrier mix. Good dog, but he's feisty. Gotta keep him away from the chickens.\"\n\nThere was another silence as they stood looking each other in the eyes, fairly close. Travis felt like she was looking right through him. He wanted to touch her but knew he shouldn't. Bettina felt the same way.\n\n\"Well, I better git going,\" she said and turned to walk down to the dock.\n\nTravis followed and helped her down into her skiff. He held her hand again and thought she had a pretty solid grip for a string bean. She started the motor and he tossed her lines into the boat. They waved and he watched her until she disappeared around the bend.\n\n--\n\nBettina knew Travis's schedule so she stopped by the cabin a number of times. She'd just drop by innocently, usually in the skiff, but a couple times she rode her bicycle all the way from town. They would sit in the rockers on the porch or on the sofa inside with a soft drink and talk. Travis was relieved and surprised by how easy she was to talk to and he enjoyed her visits. It was almost as if she could pull the diffidence out of him and he found himself slowly opening up, like coming out of a shell one hairline crack at a time.\n\nShe asked him personal questions, questions that used to make him shrivel up and turn away. But with Bettina somehow, he talked.\n\n'Why you limp?' she asked, and he told her all about the war, seeing so much bloodshed and being sent home after almost getting his leg blown off.\n\n'Where's your family?' she asked, and he told her about their deaths, and the circumstances.\n\n'You play trumpet at night, don't you?' she asked, after seeing the instrument sitting bell-down on a table in the corner. He nodded and she said, 'I know, I listen'.\n\nTravis would stop in at the drug store when he was in town selling his fish or running errands. He'd sit on one of the red-cushioned stools at the fountain and get a soda and hope to see Bettina. She was often there and they would chat a little, share a smile or two, maybe even flirt a bit, and the camaraderie did not go unnoticed by shoppers and employees. Travis soon noticed people eyeing him in a new, different way as he made his way around to the market, the hardware store, the post office and the bank. Bettina heard the whispers too.\n\nBettina's parents got wind of it, and were none too happy about it. But Bettina didn't care, she was almost twenty years old and she had found a new friend, and he wasn't some stuck-up prig from this Podunk southern town, and she liked him, and she didn't care what color he was or what the neighbors thought.\n\n--\n\nBettina went to the market on a Friday after work. There was a bulletin board in the front of the store where people tacked up posters and notices of all kinds. Bettina saw one that said 'FREE DOG'. She called the number.\n\nThe woman who answered the phone said that they were getting ready to move to the city and they couldn't take their dog. They hated to give her up but if they couldn't find it a good home in the next few days, she would have to call the pound.\n\n\"What kind of dog is it?\" Bettina asked.\n\n\"A Beagle-Corgi mix. She's beautiful! Two years old, about twenty pounds, sweet as she can be and housebroken too.\"\n\n\"And you're giving her away?\"\n\n\"Yes, just so she goes to a good home.\"\n\n\"Can I see her?\" Bettina asked.\n\n\"Of course, Dear.\"\n\nBettina went straight over and fell in love immediately. Bella was her name and she was a big mushball, licking and kissing her all over her face and forehead and ears.\n\n\"She's wonderful,\" Bettina said. \"I'd love to have her. Can I pick her up tomorrow?\"\n\nThe lady said yes, it felt right, yes she could. \n\nBettina thanked the woman profusely and promised her Bella was going to have a very happy home.\n\nThe next day Bettina had to work in the morning until the afternoon. She got off work and went to the market and bought some dog food. She was hoping the lady would give her Bella's collar and leash.\n\nThe lady was almost in tears as she said goodbye to Bella. Bettina thanked her over and over, and felt sad for her. But she felt good as she walked home with Bella on the leash, heeling on her left.\n\n--\n\nLate afternoon, Bettina and Bella were in the skiff together, puttering down the creek toward Travis's cabin. Both were wearing life jackets (she knew Travis would get a kick out of that), and their cargo included a sack of dog chow and a metal bucket filled with toys, accessories and Bella's tennis ball. \n\nTravis was outside chopping wood when he heard the familiar outboard approaching. He put down his axe and hobbled toward his dock. His face broke into a wide grin when he saw Bettina and the dog approach, both with orange life vests around their necks.\n\n\"Brought you your new roommate,\" Bettina said, as the boat slipped up against the dock. \"Her name's Bella. She's a sweetie.\" She tossed a line to Travis.\n\n\"Really?\" he said, as he secured the boat. \"For me?\"\n\nShe handed the bucket and dog chow up to Travis. Bella jumped up onto the dock and immediately into Travis's arms. He took the life jacket off.\n\n\"Yep, for you,\" Bettina said. \"You need somebody to take care of you.\"\n\n\"You're a great dog, aren't you, Bella?\" Travis said as he hugged her. \"Friendly and pretty too, aren't you?\"\n\nTravis picked up the tennis ball and threw it toward the house. Bella took off after it and immediately returned and dropped it at his feet. He threw it again, same result.\n\n\"A family was moving away and couldn't take her,\" Bettina said. \"She was free to a good home. I told the lady I knew the best home for her.\"\n\n\"You sure did, thank you. She's beautiful. Thank you so much!\" \n\nHe hugged Bettina and held her in his arms for a moment and felt the warmth of her body against his. He kissed her on her temple. He felt her arms around him, briefly. It was the first time. It felt overdue, and it felt good.\n\nThey walked up to the cabin. Travis filled a big bowl with fresh water and another bowl with chow and put them on the kitchen floor. Bella dove right in to both.\n\n\"The lady said Bella's all house-trained, too.\"",
        "\"Good,\" said Travis. \"That makes two of us.\"\n\nThey sat on the rockers and talked about Bella as the dog chased the tennis ball across the yard every time Travis would throw it.\n\n\"I better be going,\" Bettina finally said. \"I want to get that boat back before dark.\"\n\nAt the dock Travis faced her and said, \"Thank you, Bettina. This is the nicest thing anybody's ever done for me. And I love her name. Bella. Bettina and Bella. The two B's: for the two women in my life.\"\n\nThey stood in silence for a moment. Bettina looked up into his eyes and squinted into the lowered sun.\n\n\"I like that,\" she said, and rose on her toes and kissed Travis on the corner of his mouth.\n\nTravis then took her into his arms and put his lips directly on hers and kissed her, and she kissed him. Her mouth opened for him and his tongue did not waste the opportunity. He felt the softness of her lips and tasted her for the very first time and her sinewy tongue danced with his. The kiss lingered, neither in a hurry to end it.\n\n\"That was nice,\" Bettina said. \"I better go.\"\n\nTravis held her hand as she got into the skiff. He had a tear sliding down his cheek as she started the motor and headed off.\n\nBettina felt an elated relief as she motored home. Travis thought, maybe hoped, he wasn't sure, he'd felt a heated tingle in his loins.\n\n--\n\nA couple days later Travis was in town and stopped at the pharmacy. He didn't see Bettina right away, but he was anxious to talk to her. It was after lunchtime but there were three other people eating at the counter.\n\n\"She's not here,\" said the snotty white woman behind the counter. \n\n\"Oh,\" said Travis, taken by surprise. \"Will she be back?\"\n\n\"Should be before long. She went to see the doctor with her Mom. What'll you have?\"\n\nTravis ordered a cheeseburger, fries and a Coke. He hadn't eaten since early morning so he decided to hang out a little while and hopefully Bettina would show up. He was just about finished eating when she returned.\n\nBettina came in through the back, put her uniform on and entered the store. She saw him immediately and approached him with a grin on her face.\n\n\"Hi Travis!\" she said enthusiastically. \"How are you?\"\n\n\"I'm good, came in for some lunch. How about you? Everything okay at the doctor's?\"\n\n\"I'm fine, but I took my Momma in for some tests. She been feeling funny lately, short of breath. Hopefully she's fine. Should know in a few days. How's Bella?\"\n\n\"She's really doing well, what a great dog. And she seems to love it there. She chases rabbits and squirrels and I bet I've thrown that tennis ball a thousand times. Thanks again for her, that was so thoughtful. She makes me happy. She even sleeps with me.\"\n\n\"Lucky dog,\" Bettina said.\n\nThere was a silence between them, neither spoke for a few seconds.\n\n\"I want to kiss you,\" Travis said softly, \"But I know I can't.\"\n\n\"Right. Not in the store,\" she said. \"Let's kiss goodbye out by your truck. Give everybody something to talk about.\" She winked at him. He laughed nervously when he realized she wasn't kidding.\n\nTravis left to go gas up his truck. He drove back to the drug store and parked in front. He got out of the truck, closed the driver door and leaned against it. A minute later Bettina came out of the store and walked over to him. She walked directly into his arms and kissed his lips, gave him tongue, and held it for a couple seconds so everybody on the street could get a good look.\n\n\"There, that should do the trick,\" she said, knowing the town gossip mill would start turning in no time and she'd be hearing about it from her Momma. \n\n--\n\nThe writing at night had taken a turn for the better. Travis would sit at his desk and the words were now pouring out of him. The tone had lightened. Large sections were dumped. What had begun as his catharsis-a pissed-off rant about the government and the war, his memoir of terror-had morphed into a horror story about redemption, rebirth and forgiveness.\n\nThat night after kissing Bettina goodbye on Main Street in town, Travis had a dream. He was standing on his dock and Bettina was standing in her skiff and he was telling her not to go. She had to go, she said, but would be back. He was kissing her goodbye when the skiff started drifting away from the dock in the current headed toward the river. No!, he called, Don't! He jumped into the creek and started swimming toward her when a half dozen Water Moccasins appeared in front of him, their necks erect and elevated above the water, rendering him helpless as Bettina was carried away toward the river and its strong currents.\n\nTravis awoke in his bed, disoriented for a minute, then relieved. Bella was snoring beside him. His throat was arid and there was a thin coat of sweat on his brow. He turned to the nightstand and reached for the cup of water. He felt something big and heavy between his crotch and the bed sheet.\n\nIt was his cock. Long, hard and hot. \n\nHe lay back and felt it, traced it with his fingers from his balls to its tip resting atop his navel, gently, like greeting an old friend. He took its girth into his hand and stroked it. It stayed hard, maybe even became harder. He stroked it faster, but not too fast, he didn't want to break anything. Little by little, faster and faster.\n\nHe masturbated for the first time in years. It felt good too, and when he reached his climax his dick exploded with cum. It jettisoned out of him, all over his stomach and chest, even a string dangled on his chin.\n\nHe didn't even clean it up. Travis was spent, his legs like jelly, and he cried himself to sleep.\n\nIn the morning he woke up with another hard-on, just like the good old days. He put it to good use and giggled after he caught five or six shots of semen with his hand.\n\nHe got up and put Bella out and then made coffee. He was singing to himself, and thinking. He was thinking about how he had been dreading telling Bettina about his problem. And hoping that now maybe he wouldn't have to.\n\n--\n\nTravis was leaving the market after selling his catch when he was approached by a large black woman.\n\n\"You Mister Travis?\" she said.\n\n\"Yes, my name is Travis.\"\n\n\"Well lookee here. I'm Jolene, Bettina's momma. And me and my husband have heard all the gossip and scuttlebutt about you two, and we'd like you to stay away from our daughter. Bettina should be out findin' a nice black boy her own age and you should go find a white woman your own age.\"\n\nTravis looked around at the people nearby, black and white, who were overhearing their chat.\n\n\"There's only a few years between us. And we're friends. Close friends.\"\n\n\"Friends is fine, but she's spending way too much time out at your place, and you all makin' a spectacle of yourselves kissin' on the Main Street. It's best if you both moved on. She doesn't need to be wastin' her youth with a half-crippled white man.\"\n\nThere was low, collective gasp among the folks in the gallery. Travis bit his lip.\n\n\"I'm sorry to hear you say such a mean, hateful thing. And I'm not a cripple, Mrs. Jolene. I was wounded in Vietnam fighting for my...our...country. No disrespect, but the only way I am going to stop seeing Bettina is if it's her own decision, not yours. I happen to care for her. And I would hope that maybe you would care a little more about your daughter's wishes and happiness, and less about your own racist agenda.\"\n\nTravis spun on his heels before the situation got any worse. He walked to his truck, got in and fired up the engine. He petted Bella on her head and tickled her ears. He drove out of town and headed to the cabin. He had planned on dropping into the drug store for a soda but decided against it.\n\n--\n\nBettina hadn't witnessed the altercation between Travis and her mother, of course, but she heard all about it. The rumors and whispers were flying through the air of the town like migrating geese. She was proud when she learned that Travis had stood his ground and by what he'd said.\n\nShe didn't see Travis in town for a few days after that. At first she thought he was just staying away while things cooled off a little but then she became concerned that maybe something was wrong. After work she headed out to the cabin to check on him. The miles seemed long as she rode her bike westward into the evening sun.\n\nWhen she reached the cabin all was still. The pickup was parked in its usual spot and the boat was docked. She approached the cabin and called out for Travis. Immediately she heard Bella barking from inside. She climbed the steps to the porch and entered. \n\nBella greeted her with two swift barks and a french kiss, then led her through the dim room to the bedroom. Travis was lying on his back in his bed. She walked to the bed. He looked like he'd just woke up.\n\n\"Travis, you okay?\" she said with alarm.\n\n\"Not really,\" he rasped.\n\n\"What's the matter?\" She touched his hand, cold with sweat. His forehead was hot to the touch.\n\n\"Malaria,\" he croaked. \"I caught it overseas. I relapse sometimes. Had a couple pills left, I took them.\"\n\nBettina picked up the pill bottle on the night stand; it was empty. The label said to take them for fourteen days.\n\n\"I need to get you more pills,\" she said.\n\n\"Could you? That's an old prescription.\"\n\n\"Can I borrow your truck?\" Travis didn't have a phone.\n\nHe nodded and feebly reached for the cup of water on the table. Bettina handed it to him and he sipped.\n\nThe bed sheets were soaked from his sweat.\n\n\"I'm going to change these linens and then get to town before the drug store closes,\" she said. \"Can you get up?\"\n\nClad only in his underpants, he got up with her help and sat on a chair she'd dragged next to the bed. He watched as Bettina changed his sheets. He got back in the bed and continued to watch her. She put some ice in a wet towel and placed it on his forehead, let Bella out for a pee and filled her bowls with food and fresh water, and brought more cool water for Travis.\n\n\"Sleep if you can, and drink. I'm going to town and will be back soon. And just so you know, I heard about you and my Momma going at it, and thank you for what you said.\"\n\nShe kissed his lips, grabbed the pill bottle and the truck keys and bounded out the door.\n\n--\n\nBettina sped into town and fortunately her boss, the pharmacist, had not left yet. He listened as she excitedly explained the situation. He started filling the prescription as he called the doctor on the phone. Then Bettina purchased a few toiletries and called home to say she might not be home for a few days.\n\nDoc Jones, whose office was in his home two blocks away, followed Bettina out to the cabin. It was getting dark when the car and truck barreled into the drive and Bella barked her welcome. \n\nTravis had chills and the sheet over him was already damp from sweat. Doc immediately fed him a couple pills with water and took all of his vital signs. His temperature was very high.\n\n\"We need to get you to the hospital,\" Doc said.\n\n\"No hospitals,\" Travis croaked.\n\n\"But son, this is serious. Your situation needs to be monitored, you...\"\n\n\"I've been through it before Doc, I know the drill. Stay cool, drink fluids, rest, take my medicine. Hurry up and get better.\"\n\n\"I don't know...\"\n\n\"I'm not going to the hospital. They'll kill me in there. It will be easier to get better here.\"\n\n\"I'll stay with him,\" Bettina said. \"I'll take care of him.\"\n\nDoc looked at Travis, then at Bettina, then back at Travis.\n\n\"I feel better already,\" Travis rasped with a tired smile.\n\nDoc sagged slightly, shrugged his shoulders, and started packing up his black bag. He knew he would be wasting his breath so he didn't push the point. At least he's not delirious, he thought. He gave instructions to Bettina and told her to call him if they needed anything. She didn't tell him they had no phone.\n\n\"Thanks Doc,\" Travis said as Doc was leaving the room.\n\nBettina walked Doc to the door. She told him she'd stop by his office to pick up the bill the next time she was back in town.\n\n--\n\nBettina fetched Travis a dry sheet and freshened the towel on his forehead. She daubed his face and neck with a cold, wet cloth. She heated some soup for dinner and spoon-fed him some broth.\n\nAs he slept she busied herself around the cabin. She swept the wood floors of the cabin and mudroom and scrubbed the kitchen clean, washed the dishes. She did some laundry and hung it out to dry.\n\nIt was getting late and Bettina was tired. Travis stirred briefly so she gave him another of his pills. She went to the bathroom and brushed her teeth as she sat on the toilet taking a pee. She grabbed a blanket from a closet and went to sleep on the couch.\n\n--\n\nSometime in the night Bettina was awakened by Travis talking in his sleep. She couldn't understand what he was saying, it was all slurred, but he was having some sort of dream. She walked over and sat down beside him. There was just enough radiant light from the stars outside to see that Travis had shaken free from the sheet on top of him, and he was naked except for his boxer shorts. She felt his forehead; his fever had abated some. She felt his neck, clammy, and traced her long fingers over his chest.\n\n\"Hi,\" Travis said softly in a scratchy voice.\n\n\"Hello,\" Bettina said. \"You were talking in your sleep. Were you having a bad dream?\"\n\n\"No. It was a good dream. You were in it.\"\n\n\"Really?\"\n\n\"Yeah,\" Travis said.\n\nHe took Bettina's hand and moved it to his groin and placed it on his cock. It was hard. She could feel its stiff heat through the dampness of his cotton shorts.\n\n\"See?\"\n\n\"I see,\" she said.\n\nBettina opened the slit on the front of his shorts and snaked his cock through the opening. She stroked it gently and Travis sighed with pleasure. It was the first time in years he'd felt such a touch.\n\nWithout another word Bettina shifted her body and bent over and took his cock into her mouth. Travis moaned as she sucked him and flicked her tongue around the tip. He sunk his fingers into her kinky hair.\n\nIt felt long and hot in her mouth, like a baked potato that hadn't cooled off. It was good-sized too, she thought, which would be good for when he put it inside her, which she hoped would be soon. She'd had a couple larger, black cocks before, but this one was feeling just right. She held his hip and cupped his balls and sucked him with a passion, with a powered force aimed at sucking the disease, the infection, the poison, whatever it was, right out of him. She wanted to please him, make him feel good, and forget his illness for a few minutes. She wanted to taste him, to fill her mouth and her stomach with his sperm, wanted him to mark his spot inside her.\n\nTravis's fingers were enmeshed in Bettina's kinky locks. He watched the silhouette of her afro'd head bob up and down in the dusky light, and he gently swung his crotch in time with her movements. Her mouth was large, and most of his cock slid easily in and out. He treasured their synced unity and slowly felt his cum rise and build toward ejaculation.\n\nWhen he came his torso jerked like a donkey kick. His semen shot into Bettina's mouth and onto her face. Five separate spurts, if she counted right, the first one mighty, the ones after less and less. She licked his dick clean and teased his pee-hole with her tongue. She rose up and dislodged Travis's fingers from her hair. She held his hand as she gently kissed his lips. Bella was snoring and missed the whole thing.\n\n\"There,\" she said. \"Maybe that will help to suck the sickness out of you. Now you get some more sleep, and I'll see you in the morning.\"\n\nShe started to get up but Travis held onto her hand. He wouldn't let go until they'd kissed again.\n\n--\n\nBettina rose early and took a shower, then put water on the stove for tea. Travis was due for another pill but he was sleeping peacefully so she decided to wait until he woke up to give it to him. She was sitting on a chair watching him when he stirred.\n\n\"Good morning,\" she said, and rose from her chair. Bella woke up too so she put her out.\n\n\"How are you feeling?\" she said, as she sat beside him on the bed and squeezed his hand. He swallowed his pill.\n\n\"I feel better,\" he said softly. \"Thanks to you. What you did...last night. That was...really good.\"\n\n\"Glad you liked it. Need to suck that sickness out of you. I'll do it again too when yo' ready.\"\n\nBettina pulled back the sheet. It was slightly damp, but not as bad as before. She put her hand on the front of his boxers. He was hard again, a morning boner, just like the good old days.\n\n\"Damn, you're ready already, aren't you,\" she said, and without hesitation pulled his shorts down onto his thighs. She hefted his heated meat in her hand. \"Nice cock,\" she added, and went down on him.\n\nIt was warm in her mouth, not as hot as the night before, a good sign she thought. She sucked it for a minute, then kissed the tip, then licked it from the bottom up, and massaged his tender nuts in her mouth. She again felt Travis's fingers on her scalp and took his member back into her mouth, kneaded his balls and sucked with a fiery fervor.\n\nTravis guided her head with his hand in her hair and in the morning light he watched her, and marveled as his thankfully-hard white cock cruised in and out of her black head. It was sexy as hell, he thought.\n\nHe swayed his groin, gently fucking her beautiful mouth. He groaned with glee when she sucked him harder and fingered his tightening balls. Ugh...ugh...ugh...he grunted with each poke of her head, urging his cum to pay them another visit. It wouldn't take long. He raised his groin over and over and deeper, pushing his cock into her mouth, reaching for her throat, and soon he felt his kettle boil and another spout from his years of frustration poured out.\n\nBettina groaned when Travis's body buckled and she felt his first hot blast explode into the back of her throat. She started to gag but held on. She kept her mouth clamped to his testy cock as his cum surged into her mouth and his body oscillated beneath her. She wanted all of it; she knew she was sucking that damn malaria right out of him.\n\nWhen he had no more to give Bettina removed the dick from her mouth and licked the tip. Travis pulled her head up to his and he kissed her, and rammed his tongue into her jizzum-coated mouth. He hugged her tight, and she hugged him, and she was soon lying beside him with Travis's hands roving over her back and her ass.\n\n\"That was so good,\" he said. \"You are so sexy.\"\n\n\"I want to make you feel good,\" she whispered.\n\n\"You do, Bettina. You do.\"\n\n\"Good. Now you gotta get better so you can fuck me,\" she said, matter-of-factly.\n\nShe kissed him again and pushed herself out of the bed. \n\n\"I'm gonna make us some breakfast,\" she said. \"If you feel good enough for blowjobs, you should feel good enough to eat.\" \n\n\"You look good enough to eat,\" Travis said.\n\n\"That too,\" she said. \"When we fuck. You want my pussy, don't you?\"\n\n\"Oh, yeah. I want all of you.\"\n\n\"Good. Now the sooner you get better, the sooner we can get to fuckin'. We're way overdue. The whole town thinks we've been doin' it anyhow, so we might as well get to it.\"\n\nTravis laughed to himself and watched her leave the bedroom. He nodded off while listening to her rummage around in the kitchen.\n\n--\n\nOver the next several days Bettina used Travis's truck to drive the few miles to and from town. She would go to work and drive back on her lunch time to check on him, fix him some soup or do whatever needed doing and then head back into town. Her momma gave her some shit when she went home to pack a bunch of her clothes, but she just ignored her for the most part. 'He's sick, he's all by himself, he needs me', was all she said, and left.\n\nBy the third day Travis was feeling much better. He was still tired and weak, but the fever had subsided and he was up and around. Bettina reminded him when she left for work that it was her day to work late, and that she would be getting back to the cabin at a little after eight instead of a little after five. 'Keep taking your pills!' she reminded him when she left.",
        "When Bettina drove up to the cabin that evening, Bella ran to the truck to greet her. At first she thought, Oh no, the dog's on the loose, something's wrong, but she soon saw Travis sitting on the porch rocker drinking a can of beer, waiting on her. She knew right away he was feeling better and getting back to normal.\n\nTravis rose as Bettina climbed the steps onto the porch. They kissed, and she grabbed the can of beer from his hand and took a healthy swig.\n\n\"You feelin' better, it looks like,\" she said. \"What smells so good?\"\n\n\"I cooked us supper,\" Travis said. \"Venison steaks, greens and corn, bread and butter.\"\n\n\"Sounds like quite a feast.\"\n\n\"Yep. We'll need the energy for what I'm going to do to you. You've been taking care of me, now I'm going to take care of you.\"\n\n\"Yeah? What you gonna do?\"\n\n\"I'm gonna do you.\"\n\n\"God, it's about time,\" Bettina said, and slipped her hand between his legs.\n\n\"Uh uh,\" he said, taking her hand, and leading her inside. \"First we eat.\"\n\nThe table was set. There were two candles burning and a bottle of wine chilling on the table. The food was cooked and warming, so they dished up their plates and sat down. Travis made a toast. He thanked Bettina for being there to help him and called her the bright light at the end of his long tunnel. They ate and drank and talked, first about her day at the drug store, then about Travis's plans to get back to fishing and writing now that he was feeling better. He knew that in a few days he'd have his strength back to a hundred percent.\n\nThey cleaned up together as they finished off the bottle. Travis had no sooner hung the towel up to dry when Bettina spun him toward her and into her arms. They kissed and their tongues did flip-flops in their mouths. They squeezed each other tight and rain started banging on the tin roof as their bodies blended. They kissed long and their fingers wandered over their bodies and cock and nipples became hard-pressed between them.\n\n\"Make me your woman,\" Bettina whispered.\n\nTravis led her to the bedroom. The bed had been freshly made, so he sat her down on the edge and knelt before her. He unbuttoned and removed her blouse, then her bra, unleashing her smallish but hard-nippled breasts. He lay her back, unzipped her skirt and pulled it off and hung it on a chair. He took a moment to admire his lady, dark from head to toe except for her white panties. Then he stood and undressed before her.\n\nHe got into bed with her, his body naked against her for the first time. They resumed kissing and feeling each other up. His cock was hard but he wanted to take his time, make it beautiful. He traced his hands all over her, her back, her front, her neck and shoulders, her butt. And inside her panties, where he felt her pussy, already wet with anticipation. Bettina pushed her panties down onto her thighs with her fingers, then got them all the way off with her toes. Travis squeezed her ass in his hands, and she moaned when he sucked her nipple into his mouth.\n\nBettina sifted her long black fingers through Travis's light brown hair as his lips and tongue blazed a trail over her upper body and worked his way down. He licked her stomach, slim and flat, and she giggled when he jammed his tongue into her concave belly button. But she didn't giggle when he licked her pussy for the first time.\n\nShe hissed like a cobra, wrapped her legs around his neck and pushed her twat into his face. He licked the insides of her open lips and tasted her soulful zest. It smelled clean and funky at the same time, and she pushed it against his face, and groaned when it forced his tongue inside her. She tightened her cunt around his tongue and squeezed.\n\n\"Eat me, Baby,\" Bettina said.\n\nHer crotch and his face became a machine with two parts, working in tandem with the help of Bettina's hands and legs locked around his head. With his tongue being chomped on by Bettina's busy beaver, Travis buzzed her turgid, rubbery clit as best he could with his upper lip. This was his first-ever black pussy, but he knew already it was the best he'd ever had.\n\nBettina squealed and her body shimmied and her cunt loosened. Travis took her clit into his mouth and sucked it like a straw. She bellowed a low aaahhh and Travis felt a warm, wet flow meet his face. Her salty, vinegary cum was in his mouth and in his nose and on his chin and reminded him of the smell of french fries at the beach when he was a kid. When her cum and shakes had stopped, Travis lifted his head with a smile on his face.\n\n\"You taste good,\" he said.\n\n\"Let me taste,\" she said, and pulled his head up to hers and buried her tongue into his mouth. They kissed deeply and she licked her cum off of his chin.\n\n\"Fuck me,\" she said.\n\nTravis was more than ready, his dick was patiently cocked and loaded.\n\n\"Are you sure it's okay?\" he asked.\n\n\"Yup. I've been on birth control since the day after we first kissed.\"\n\nShe'd been waiting for this. She grabbed his swollen cock and pulled it into her. Then she clenched her legs around him and sucked his cock with her cunt.\n\nTravis started slowly, but that didn't last long. They quickly fell into a steady pulse, gradually with more quickness and force, and they both grunted with each mighty jolt. The bed was soon rocking and Bella left the room to give them their noisy privacy. My first time with this woman, Travis thought, and she's the best fuck of my life. \n\nThe rain banged harder on the roof and they banged harder in the bed. Travis was slamming Bettina hard, but she was giving it right back to him. Her long, wiry body was amazingly limber and her arms and legs were wrapped around him like black snakes as their groins pounded away. Bettina was not a quiet lover, she was full of grunts and groans as she drilled her body onto his. Her cunt gripped his cock with an assertive suction, like she was trying to syphon his cum up from his toes. \n\nAs they fucked, Travis had a brief vision flash into his head: The day when he first met Bettina, when she had boated up to his dock with her little brothers and sister. How young and innocent she'd looked, the big sister, the babysitter. And how he'd never imagined at the time that he'd have her in his bed, that his cock would be hard and full, and that he would be ramming it into her tasty, black twat. He never would have guessed what he was learning now: This girl was born to fuck.\n\nTravis was sweating now, but it wasn't from the fever. Bettina was sweating too, but she didn't slow down any. They had a steady beat going and they were playing each other. Over and over they hammered each other, and their mouth-fucking kisses were deep and wet and long.\n\n\"God, this is good,\" Travis said hoarsely, without slowing down.\n\n\"We fuck good,\" Bettina said. \"I knew we would.\"\n\nTravis could feel his semen stir and knew he wouldn't be able to hold it in much longer.\n\n\"I'm going to come,\" he squeaked.\n\n\"Good,\" she said, and clamped her legs even tighter around him and squeezed his buttocks as hard as she could with both hands.\n\nThe rush rose up through Travis's steeled cock and crackled on its way out. His body vibrated as he released a heavy load, and pumped spurts of his cum into Bettina's pussy for the first, of which he already knew, would be many times.\n\n\"God, that's good,\" he said. \n\n\"Here I come again,\" Bettina said.\n\n\"I want to feel it.\"\n\nTravis gently pushed his tender cock to and fro inside her and they were smiling at each other when he felt her wet warmth flow, surrounding his cock and seeping out of her and dripping onto his balls. Travis collapsed beside her and put his arms around her. They were laughing softly for a moment before they kissed, and their tongues started doing a slow fuck of their own.\n\n--\n\nEarly the next morning they awoke and immediately started laughing. Had it really been that good? Yes, it had. Then Bettina promptly noticed the big erection between Travis's legs, so she went down on him, sucked that thing, and started her day with a mouthful of his cum. Then she fucked him.\n\nBettina pretty much moved in after that. She wanted to sleep with him and fuck him as much as possible, and Travis felt the same. She still went home to help out with her younger siblings sometimes, but things were a little strained around there with her parents, so she didn't hang around much. \n\nTravis bought an old Volkswagen Bug for four hundred dollars so Bettina could get to and from town without having to bike it or take the truck. While Bettina went to work, Travis's routine was fishing in the morning, going to town in the afternoon to sell his catch and run his errands, and then go home and write.\n\nThe writing had taken off. It had turned into a story instead of a sermon. He kept the first part about going to war and the atrocities he'd witnessed, but it turned into something quite different from what he'd envisioned when he started. And it was good. He knew it was good and he had submitted a couple excerpts to various magazines, hoping to get them published.\n\nAt night, if he was really on a roll, Travis would write into the night, and Bettina would wait in bed, reading and listening to his typewriter bang away in the other room. When the typewriter was put to bed for the night, Travis would go to his bed and bang Bettina. He had to, he was so keyed up, it would be the only way he could get to sleep afterward. He needed her. It was expected and Bettina looked forward to it. She wanted him inside her all the time. And in the mornings, Travis always woke up with a massive hard-on, so she would take it into her mouth and suck him until he came.\n\n--\n\nOne Sunday morning they were in bed naked, holding each other. They had just concluded a hot session of oral sex, going down on each other in a pleasurable, intense sixty-nine which ended in explosive orgasms. Travis loved eating Bettina's pussy; he thought it was so sexy that her black hole was pink inside, the contrast excited him. And Bettina loved sucking his white cock. She did so every morning.\n\n\"Will you do me a favor?\" Bettina asked.\n\n\"Of course,\" Travis said. \"What?\"\n\n\"Fuck me in the ass,\" she said.\n\n\"What? Really? You want that?\"\n\n\"Yeah.\"\n\n\"You like it that way?\"\n\n\"I think I will. I want you to have all of me.\" \n\nShe got up and walked to the dresser drawer where she kept some of her clothes. She lay back on the bed face-down and handed Travis a tube of KY jelly. She wiggled her ass and spread her cheeks for him and Travis was impressed when he saw her asshole dilate wide open and close a couple times.\n\n\"Ooh, looks like somebody's ready,\" he said, as he was screwing the cap off of the tube.\n\nHe squeezed a big glob into the crack of her ass and he knew right away it was much more than was needed. He pushed a healthy dose into her asshole with his finger and wiggled it around in there a few times.\n\n\"Ah, that's nice,\" Bettina sighed.\n\nHe slathered his cock with the stuff from its tip to his nuts. There was plenty left over so he rubbed it all over her butt. Her whole ass was glistening with the stuff.\n\n\"There. A nice, shiny black ass,\" he said.\n\nBettina rolled over on her back and shove two pillows under her ass. She raised her legs so they were pretty near wrapped around the back of her head.\n\n\"I want to see your face,\" she said.\n\nShe put her hands on her slick buttocks and pulled them apart. Her asshole was ready for him. He placed the head of his dick against her opening and held it there for a moment, his sensitive nose cone resting against her rubbery flange. Then he pushed it inward.\n\nBettina gasped as it entered her. She felt it reach into her, stretching her, then back off, then in a little more, then back, then again, and again, slowly, gently reaming her. When Travis had about half of his cock into her he picked up the pace. She was grunting with each push, and it felt to her like a log was being rammed up her ass, but it was gliding in and out seamlessly, and the more it slid in and out of her, the more she liked it. She felt proud she could take that whole big thing up there. Before long Travis was fucking her pretty hard.\n\n\"God, this feels fucking good,\" he said.\n\n\"You got all of me, now. Take it,\" Bettina said sharply, staring into his eyes. \"Now you've fucked all of me. I'm yours now.\"\n\nThat made Travis fuck her even harder. His eyes were darting back and forth from Bettina's eyes to her asshole, where he was mesmerized at the sight of his white rod disappearing into and reappearing from her black ass.\n\n\"This feels so fucking good!\" Travis almost shouted.\n\n\"Yeah, you like fuckin' my ass. You own my ass now. I'm all yours now.\"\n\nTravis was banging her like he was post hole digger. They were both groaning with each thrust and Travis wouldn't have imagined that he ever would stick his whole dick up Bettina's ass, but he was, all the way in, then out, then all the way in again, over and over. Then an odd idea popped into his head. He stopped for a moment with the length of his cock embedded into her.\n\n\"What's the matter?\" Bettina asked.\n\n\"Nothing's the matter,\" Travis said. \"Just had a thought, that's all.\"\n\n\"What thought?\"\n\n\"I just happened to think, what if your Momma could see us now?\"\n\nBettina burst out laughing and her body shook, and Travis could feel her asshole quaking around his cock. Travis grinned and soon both of them were shaking with laughter.\n\n\"She'd pray for me, I guess,\" Bettina finally said, and they had another laugh.\n\nTravis slowly started swaying his cock in and out again, and gradually picked up speed.\n\n\"Damn, this feels so fucking good,\" he said again.\n\n\"You better hurry up and come. Come in my ass.\"\n\nTravis pounded away and within a minute he let out a belching roar and his hot cum climbed its way up through his shaft like a flame thrower. Ropes of his cum ripped their way out, deep into the sweet spot of Bettina's ass. He sighed loudly as he pulled out and he watched her sphincter, wide as a silver dollar, slowly close and return to its sexy pucker. He collapsed beside her.\n\n\"That was so fucking good,\" Travis said. \"You okay?\"\n\n\"Oh yeah,\" she said. \"My ass is yours now.\"\n\n\"Let me see my new ass,\" Travis said. \n\nHe rolled her over on her stomach. He traced his fingers over her butt and along her crack and fingered her asshole, then he did the same with his tongue.\n\n\"Such a nice ass,\" he said. \"It looks like a heart.\"\n\n\"What?\" Bettina said, raising and turning her head.\n\n\"It does. Like an upside-down heart. You know how a heart has two round parts at the top and a point at the bottom? Your ass has two round cheeks at the bottom, and your crack points right up to the point between your legs.\"\n\nBettina giggled as he circled her butt cheeks with his fingers and then slipped a hand between her legs and fingered her pussy.\n\nThey kissed gently as Travis caressed her butt and her crack and her hole.\n\n--\n\nThe following week Travis didn't go fishing as much. He stepped up his writing and had outlined the last few chapters and wanted to get it all down on paper while it was fresh in his mind and the words were flowing. First of the week he did take a drive to a jewelry store in the small city across the river, and made a return trip at the end of the week. Bettina's twentieth birthday was coming the next weekend and he wanted to get her something nice.\n\nBettina worked at the drug store and helped out at home in the evenings. Her mother wasn't feeling well and was overwhelmed. But she never failed to go home to the cabin at night, no matter how late. She'd get there and Travis would be at his desk and she would try to get him into bed. A couple times he wasn't quite ready so she fucked him right there in his chair. She liked sleeping with him, holding him, waking up with him. She liked having the fresh memory of his cock inside her as she went about her day.\n\nTravis picked up his mail on Friday and there was a letter from a national magazine to which he'd submitted an excerpt of his book. It would be published in an upcoming issue and his check would be sent when they went to press.\n\nOn Saturday evening Travis took Bettina to dinner across the river. They dressed up a little, but not too much, and got a prominent table overlooking the river. The white patrons couldn't help stealing glances at the obviously-entranced salt-and-pepper odd couple sharing smiles and lobsters in front of the large windows. The black servants seemed to enjoy the floor show too.\n\nWith dinner over, Travis gave Bettina her birthday gift. It was a flat box wrapped in yellow paper with red ribbon. She tore it open and put her hand over her mouth and gasped when she saw what it was: a white gold chain attached to an upside-down gold heart with a diamond in the middle.\n\nShe started crying and said, \"It's beautiful!\"\n\n\"Happy Birthday, Bettina,\" Travis said. \"I had it custom-made especially for you.\"\n\nHe slid closer and clasped it around her neck. The gold chain and heart and diamond sparkled like a beacon against her ebony skin.\n\n\"I'm falling in love with you, you know that don't you?\" he said.\n\nBettina nodded up and down emphatically with watery cheeks and Travis kissed her and tasted the salt of her tears.\n\n\"I love you too,\" she said softly.\n\nThe waiter brought out a small cake and some of the staff sang 'Happy Birthday' to her, and the customers gave them a round of applause. Bettina blew out the candle and they each had several bites of cake as they held hands.\n\n\"Let's go home and make love,\" Bettina whispered.\n\nTravis left plenty of cash on the table and they got up to leave. They received another round of applause as they walk/limped out of the room.\n\n--\n\nOn the ride home Bettina had a hard time keeping her hands off of him. Travis told her to stop, move over before she caused an accident.\n\n\"I want you to come in all my holes tonight,\" she said.\n\n\"Okay, but let's get home first.\"\n\n\"I love my necklace.\"\n\n\"I do too.\"\n\n\"I'm never taking it off.\"\n\nThey talked about different things to take her mind off his penis. She talked about her job and her family and her mother's health. She asked about how his book writing was coming along.\n\n\"It had been going really, really well the last few weeks, and I had the last few chapters all mapped out,\" Travis said. \"But now I'm almost done, just a couple chapters to go, but just I can't seem to finish it.\"\n\nThere was a silence for a moment or two.\n\n\"Maybe you are finished,\" Bettina said.\n\nThose words hung in the air and there was quiet while Travis thought about what she'd said. Maybe she was right.\n\nThey got back to the cabin. Bella greeted them and ran and did her business and followed them inside. Travis's dick was hard and Bettina's pussy was wet so they undressed each other in a frenzy...except for her necklace, of course...and he took his woman to bed. \n\nHis cock slipped into her with smooth grace and they were fucking in an instant, perfectly in tune. He kissed her neck and licked her upside-down heart and fingered her ass and fucked her mouth with his tongue. It was only a few minutes before they both reached orgasm together.\n\nAs he ejaculated Travis realized that Bettina was right. He WAS finished. The book was finished, the ending just needed to be tightened up. I AM finished, he thought. \n\nI'M NOT IN PAIN OR PISSED-OFF ANYMORE.\n\n--\n\nTravis worked hard on his book over the next few days. He had edited it over and over as he'd been writing and rewriting it, so it was pretty much ready for submission, other than for the last chapter. He rewrote the chapter, simplifying and and resolving things as best he could. Then he typed like a madman for a few days. He had contact information for five publishers that looked like a good fit for the book. He typed five copies with carbons and mailed the originals with a cover letter that named the popular national magazine in which an excerpt was already scheduled for publication. He mailed all five packages out first class from the post office in town. Then he got back to fishing.",
        "Bettina was busier than ever too. She worked full-time at the drug store and part-time helping her mother and grandmother at home. But she never failed to go back to the cabin at night, against her mother's wishes, to sleep, fuck and wake up with Travis.\n\nAfter a couple of weeks Travis started checking his P.O. box more often hoping for a letter from a publisher. He thought maybe he should get a phone installed but nixed the idea. It would probably be expensive for the phone company to run a line out to his cabin, plus the only person he'd want to call lived with him.\n\nThe first correspondence he received back from a publisher was a form letter saying thanks, but no thanks. It wasn't what they were looking for. Then a couple weeks after that he got a letter from another publisher saying they had received his manuscript but they were currently backlogged and would be in touch if they thought it was something they'd like to pursue. After that, another Dear John letter from a third publisher. \n\nFinally, on a Wednesday a few weeks later, a fourth letter was delivered to his mailbox that was a little different. It had a sense of urgency, they were interested. It asked that Travis call at his earliest convenience. Travis walked over to the bank and bought a roll of dimes and then found a pay phone in the lobby of the hotel.\n\nSomehow Travis's manuscript had landed on the desk of an editor named Ed Wright who loved the book and also happened to know an editor at the magazine that was planning to publish the excerpt. They spoke and were both enthusiastic about the work and exchanged ideas about promotion and perhaps allowing the magazine to run several excerpts and perhaps an interview in consecutive issues if Ed's firm published the book. \n\nTravis inserted two dimes and dialed the long-distance number and an operator came on the line and told him how many more dimes to put into the slot for the first three minutes. A woman with a pleasant voice answered and he told her he wanted to talk to Ed Wright, and that Ed was expecting his call.\n\nThree minutes came and went while he was still on hold. He was dropping more coins into the slot when Ed came on the line.\n\n\"Hello, Travis, this is Ed Wright, how are-,\" he said. And then: \"Are you calling from a pay phone?\"\n\n\"Yessir, Mr. Wright. I don't have a home phone.\"\n\n\"Goodness gracious. Does that phone have a number on it?\"\n\n\"Yessir,\" Travis said, and gave him the number.\n\n\"Okay, Travis, don't move. I'm going to call you right back. We need to talk without you having to put coins in the phone.\"\n\n\"Thank you, Mr. Wright.\"\n\n\"Call me Ed. Talk to you in half a minute.\"\n\nIt didn't take that long, and Travis picked up instantly. Ed told him that he loved his book and the story and the passion with which it was written, and a couple other editors had also read it and think we can sell it. He said he felt like he'd been to war with him. He'd wanted to cry tears of pain in the first part but tears of joy at the end. He said he knew people at the magazine too, and they'd already discussed cross-promotion. He had a good feeling about this.\n\n\"We have to get you up here to New York, to meet our team and talk about publishing this book. How soon can you come up here? I'll send you a round trip plane ticket and we'll pick you up at the airport and put you up in a nice hotel for a couple of days.\"\n\n\"I could come up next week,\" Travis said. \"But I'd rather not fly. Could I maybe take the train? There's a depot not too far from where I live. An airport is hours away.\"\n\n\"Of course, Travis, whatever you're comfortable with. I'll get working on this right away. I'll send you the train ticket express mail. We'll plan on meeting next Wednesday and Thursday, would that work?\"\n\nTravis said it would. Ed told him to check his mailbox on Friday and he should have the ticket, if not sooner. Travis walked on air, as nonchalantly as he could, back to his truck.\n\n--\n\nTravis couldn't wait to tell Bettina the good news. He bought champagne and put it on ice and packed a picnic basket with bread and cheese and meat and fruit and other eats. He stowed them in the boat along with a quilt and a couple blankets.\n\nWhen Bettina got home Travis and Bella were sitting on the porch waiting for her. There were two glasses of champagne on the table. She sat down beside him and asked what was up.\n\n\"A toast,\" Travis said, handing her a glass. \"To this maybe-author maybe getting his book published.\"\n\nHer eyes grew big as saucers. \"Really?\"\n\nTravis shrugged. He told her about the letter and his phone call with the editor and his upcoming trip to New York.\n\n\"Oh, my god that's wonderful! I can't believe it. They're going to publish your book!\"\n\n\"Maybe.\"\n\n\"They will, I know it,\" she said, and stood up, whooped and hollered and danced around before hugging and kissing him. They tapped glasses and drank with her sitting on his lap.\n\n\"Will you take care of Bella while I'm gone?\" he asked.\n\nShe gave him an are-you-crazy look and said yes, of course, that was a dumb question.\n\nThey all three got in the boat and Travis took them out on the river to a quiet, private cove. They ate their dinner and drank champagne to celebrate and then spread the blankets and made love under the stars while the boat bobbed in the gentle tide and Bella kept watch.\n\n--\n\nThe afterglow of good news did not shimmer for long.\n\nOn Friday afternoon Travis went to town to pick up his mail. He was pleased to see he had received the envelope from the publisher. It included a round-trip train ticket, an itinerary, and a brochure about the publisher with Ed Wright's business card attached. He would board the train Monday midday and would arrive at Penn Station in New York City twenty-seven hours later. A driver would greet him and take him to his hotel. The schedule showed that the train would go through many towns on the trip north.\n\nHe shopped at the market and then visited the hardware for some supplies. He was planning to stop at the drug store but he didn't see the VW parked in the side lot where Bettina usually parked it. Travis figured she was out making a delivery. The pharmacy had customers they delivered prescriptions to and the employees made the deliveries. Bettina had mentioned a few times how nice it was to have the bug and not have to ride her bike.\n\nHe and Bella rode back to the cabin together. He wanted to wash the truck and the boat before supper.\n\nWhen the chores were done Travis grabbed a cold beer and sat on the porch to wait for Bettina. In between throws of the tennis ball he was thinking to himself, looking forward to the weekend just beginning. He was getting hard thinking about Bettina, and the next three nights of lovemaking they would share before he left on Monday for five days.\n\nFinally Bettina drove up, got out of the car and walked toward the porch. Travis could tell immediately by her stride and the look on her face that something was terribly wrong. When she stepped up onto the porch he could tell she'd been crying. She sat down beside him without even saying hi.\n\n\"Bettina, what's the matter?\" he asked.\n\nShe instantly burst into tears. Travis took her hand in his and she squeezed him tight. Then he took her in his arms until the sobs had abated some. She took a tissue from her pocket and dabbed at her eyes.\n\n\"It's Momma,\" she said. \"It's really bad.\"\n\n\"What is it? Tell me.\"\n\n\"She's a lot sicker than we thought. For weeks and weeks she's been going to doctors and specialists and labs and taking tests and having x-rays, and been bounced around to so many offices, running up bills. Over a thousand dollars already, and my parents don't have good insurance, and don't have the money to pay.\"\n\nBettina blew her nose into her saturated tissue. Travis got up and quickly returned with a handkerchief and handed it to her.\n\n\"Go on,\" he said.\n\n\"Well, they found a tumor. In her lung. The doctor thinks it's malignant. So far it hasn't spread to any other organs, but he said it's aggressive and probably would if they don't go in and get it out.\n\n\"But it's expensive. We already owe so much and they want another fifteen hundred dollars just to agree to do the operation, and that's not all it will cost with any complications and recovery and follow-up and who-knows-what. Oh Travis, what are we going to do?\"\n\nShe broke down into tears again. Travis held her and kissed her face and forehead.\n\n\"How's the rest of your family?\"\n\n\"Daddy's a wreck. He doesn't want to leave her side but he knows he's gotta work. And I gotta be there to help out, with the kids, the house, the cooking, the chickens, even though I'd rather be with you...\"\n\n\"I understand,\" Travis said, patting her back and hugging her tightly. \"Of course you need to be with them. They need you.\"\n\nBella knew something was wrong. She quit playing ball and rested her muzzle in Bettina's lap. Bettina stroked her ears and smiled through her pain.\n\n\"You wait here, Baby. I'll be right back,\" Travis said.\n\nHe went into the cabin and walked to his desk. He took a large envelope out of the hutch and walked to his bedroom. He moved the rug, lifted up the floor board, and pulled out the steel box. He opened it and pulled out three rubber-banded bundles of a thousand dollars each and put them in the envelope. He replaced the box, floor board and rug and walked back out on the porch.\n\nHe sat back down beside her, took her hand and kissed it. He handed her the envelope.\n\n\"Here's three thousand dollars,\" he said. \"Pay her bills first thing Monday morning, and then pay the doctor for the surgery. Schedule the operation as soon as is possible, don't wait, the sooner he can get it out the sooner your Momma can heal up.\"\n\n\"Three thousand dollars? Oh My God!\" Bettina said, holding the envelope like it was radioactive. \"How did you get...\"\n\n\"Don't worry, it's my money. I didn't rob a bank or anything. I don't spend a lot of money, so I save it.\"\n\nBettina looked like she was in a trance. \"Travis, I can't accept this. Plus I don't know when they could ever pay you back.\"\n\n\"Let's not worry about that. I love you, and it's your Momma, and you love her. Take it, it's for a good cause, don't you think? It's the right thing to do.\"\n\n\"I can't believe this. And after the way she spoke to you...\"\n\n\"I'm doing it for you.\"\n\n\"Travis, I don't know what to say.\"\n\n\"How about, 'I love you' and 'Goodbye'? I would love to throw you across the bed and make love to you right now, but your family needs you. I'll be waiting, as long as it takes. Just remember I'll be gone Monday through Friday this coming week, and don't forget about Bella.\"\n\nBettina kissed Bella on the top of her head and then kissed Travis on his mouth.\n\n\"God, I love you,\" she said.\n\n\"I love you too. Now you better get going. Your family needs you.\"\n\nTravis spanked her on the rump as she left the porch. He watched her drive off and then threw the tennis ball across the yard and watched Bella tear after it. He picked up his can of beer and took a sip. It was warm as piss so he went inside to get a cold one.\n\n--\n\nThe following week was a whirlwind for Travis. He couldn't sleep on the train so by the time he reached New York on Tuesday afternoon he was dead-tired. At the station there was a guy standing on the platform holding up a sign with his name on it and they walked to a waiting car and the chauffeur dropped him off at his hotel. He ate something and went straight to bed and slept all the way through till morning.\n\nWednesday and Thursday Travis was like a blind man in a maze. Tours, meetings, lunches, dinner, demonstrations, a non-stop overload of information, planning and sales pitches. When they dropped him off at the train station Thursday afternoon he was tired and confused and looking forward to being alone on the train with no one to talk to. He had a signed contract in his hand. It was the standard contract for new authors and he would receive a fifteen hundred dollar advance. It sounded good to him.\n\nWhen he got back to his cabin Friday night the place was dark and empty but there was a note from Bettina. It read:\n\nDear Author,\n\nWelcome home! \n\nWhen you read this please go out to the dock and play your trumpet for a few minutes. Play something happy, I'll be listening. Then me and Bella will be here in 15 minutes.\n\nLove,\n\nBettina\n\nP.S. Can't wait to get you in bed!\n\nTravis took his horn down to the dock. He blew what he thought was a rather swinging version of 'Chattanooga Choo-Choo' out into the night. It seemed appropriate after spending twenty-seven hours on a train.\n\n--\n\nWhen Bettina and Bella showed up a few minutes later there was a semi-menage a trois on the front porch with hugs and kisses all around. Bettina had brought fried chicken and collards and potatoes and while they ate they filled each other in on what had happened that week. Travis told her about his trip and having signed a publishing deal and Bettina told him all about her week too.\n\nHer parents were flabbergasted that Travis would loan them the money, especially after the way she had spoken to him. They swore they'd find a way to pay him back someday. Momma is very appreciative and very sorry, and wants you to know that. They paid their outstanding bills on Monday. They paid the surgeon as well, and the operation was scheduled for the following week. Momma and Daddy seem to be better because some of the worry is lifted. \n\n\"You made it all possible, Travis. Thank you,\" Bettina said.\n\n\"You're welcome,\" he said. \"But now it's payback time. I'm gonna take it out in trade.\"\n\nShe giggled. \"What you gonna do?\"\n\n\"You're gonna be sore all over by the time you leave here, girl.\"\n\n\"That sounds good.\"\n\nHe stood up and walked behind her chair. He bent over and kissed her neck and fondled her breasts.\n\n\"How you want it first?\" he asked.\n\n\"In my mouth,\" she said, and turned her head to kiss his lips. \"Then vertical.\"\n\nBettina loved to fuck standing up or against the wall or facing Travis as he sat on a chair or the bed. She loved to control her movements up and down because she could slam her cunt down and grind it on his cock and feel it being shoved up deep inside her.\n\nThey went to the bed and undressed as they kissed. It had been over a week and they were starved for each other. Once Travis's shirt was off Bettina tore at his pants. His cock was hard and it sprung upward as she pulled off his boxers and she sucked it into her mouth with a slurp. \n\nBella spread out on the rug and took it all in stride. She was used to the sounds of her Mom and Dad fucking and sucking.\n\n--\n\nThe next few months were very busy. \n\nBettina had her job at the drug store, and even though she had moved in with Travis, she had her additional responsibilities at her parents' house. Along with her grandmother, she had to look after the younger kids, cook and tend to the garden and animals. Her mother's operation had been successful but her convalescence would take time. But even after her long days Bettina always made it back to the cabin to go to bed with Travis. The girl loved to fuck.\n\nTravis traveled back and forth to New York several times while his book was being readied for publication. He had to meet with his editor, approve the jacket cover and blurbs, and read every single word of the galley to be sure it was mistake-free. There were interviews to do, which he loathed. The magazine had published the excerpt to positive reviews and it would be publishing a second excerpt and then an interview in the next two issues. Despite the thrill he was getting from being published and watching his book take shape, he was always anxious to get back to the cabin, and to his two girls. Especially Bettina, because he knew she'd be ready to fuck his brains out. He'd had plenty of girlfriends in the past, but none had ever wanted sex as much as Bettina. Every which way.\n\nHe'd gotten back on a Saturday evening after a few days in New York and Bettina and Bella met him in town. They went to a little barbecue place that had seating outside under an awning surrounded by pine trees. They ate ribs and drank beer while Bella lay beside them and was the happy recipient of occasional, intentional pork droppings. They didn't get the funny looks they used to get; townspeople had become accustomed to the mixed couple, the local black girl and the white loner from the point.\n\nThe small town talk had made the rounds and everybody had found out where the money for Jolene's medical bills had come from. And they knew that Travis had gotten himself a book deal and an excerpt had been published in a prominent national magazine, and that particular issue had promptly sold out everywhere in town. Their little town was suddenly on the map.\n\nAfter the ribs they went home and they were barely inside the front door of the cabin before Bettina was removing her clothes and leading Travis to their bedroom. They were no sooner naked in the bed before she had his dick in her mouth.\n\nThey stayed naked for the next fifteen hours. They only got up to piss, get a drink or brush their teeth. And they put Bella out one time. They would both look back on it as the longest and most intense session of crazy sex they'd ever had. There was cock sucking and pussy eating and cunt fucking and ass licking and butt fucking and screaming orgasms. Bettina got it up against the wall and sitting on Travis's cock while he bounced her up and down like a Pogo stick. They did sleep a few hours but then on Sunday morning they did it all again.\n\nIt was early afternoon before they hauled their asses out of bed. Travis had just ejaculated into Bettina's asshole for the second time and collapsed on top of her. They were both tired, sweaty and very hungry. Bettina jumped out of bed and threw on one of Travis's t-shirts, and went to the kitchen to whip up some breakfast. Travis put on a pair of pants and a sweatshirt. Soon the aroma of eggs and sausage cooking filled the cabin.\n\nTravis put Bella out to take care of business, but after a couple minutes she hadn't returned to the door. She was outside barking. He looked out of the window to see a wood-paneled station wagon pulling up to the cabin.\n\n\"You better go put some clothes on, girl,\" Travis called to Bettina. \"Your Momma's here.\"\n\nBettina ran to the window. \"Oh God, she brought the whole family,\" she said, and hustled into the bedroom and pulled on a pair of jeans. Then she turned off the stove and they walked out on the porch. Travis stood with his arm around her. Bella sat beside them, the sentinel.\n\nBettina's father was behind the wheel and her mother was in the passenger seat, with the little girl between them. Grandma and the two boys were in the back.\n\nBettina's father Robert was a large man. He got out and walked around and assisted his wife out of the car. Both were dressed in their Sunday best. Jolene held onto her husband and they walked a few steps closer to the porch.\n\n\"Good morning, Momma. Good morning, Daddy,\" Bettina said.\n\n\"More like afternoon, ain't it?\" Jolene said. \"See you missed church again, too.\"\n\n\"Would you like to come inside?\"\n\n\"No, we'll just be a minute,\" she said, and took a step closer. \"I come to see you, Mr. Travis. I wanted to come sooner but I'm just now getting back to feeling better and getting around.\"\n\nJolene took a deep breath before she continued.\n\n\"I come to thank you and tell you how sorry I am. I pray that you can find a way to accept my sincerest apology. I feel so bad and was so wrong. I don't know how you found it in your heart to loan us that money after the way I spoke to you. It was mean-spirited and uncalled-for, and I'm ashamed. Sometimes a part of me comes up from deep inside and I have no idea where it came from. Robert and I feel truly blessed that Bettina has found a man like you. We'll find a way to repay you somehow. So thank you and please forgive me.\"",
        "Robert hugged his wife tightly. Bettina hugged Travis tightly too and looked up to him. It was his turn to speak.\n\n\"Thank you for saying that, Miss Jolene,\" Travis said. \"Of course I forgive you. You're Bettina's Momma, that's good enough for me. You all couldn't have had a daughter as fine as Bettina if you weren't good parents. I think from time to time, we all say things we wish we hadn't. And I'm glad you're feeling better.\"\n\nTears started flowing down Jolene's cheeks. \"Can I give you a hug?\" she asked.\n\nTravis and Bettina walked down the steps and Travis stepped into Jolene's arms. They hugged each other tightly and Travis could feel her big, loose jugs pressing against his chest.\n\nBettina hugged her parents and Travis shook Robert's hand. Jolene said they'd like to have them over for dinner sometime.\n\n\"Thanks, Mr. Travis!\" the boy yelled out of the backseat window as they got back in the car.\n\n\"You're welcome, Nathan!\" Travis called.\n\nThey watched the car drive off.\n\n\"That was not easy for her,\" Bettina said. \"I can't remember her ever apologizing to anybody. And I know my family, we've always just gotten by. Honestly, I don't know how they'll ever pay you back.\"\n\n\"It's okay if they mean to pay it back. It probably makes them feel better. But when I gave you the money it was intended as a gift.\"\n\nThey went inside and finished making breakfast.\n\n--\n\nSome time later, Travis was picking up his mail at the post office and there was an envelope from his publisher. He opened it to find a fifteen hundred dollar check for his advance. He walked down the street to the bank.\n\nWhen he entered the bank he intended to cash it as usual. But while he was waiting in line for the teller he changed his mind. He walked to fancy-suited bald man at a desk and told him he'd like to open an account. The man asked him to have a seat.\n\nTravis sat down and put the check on the man's desk and sighed with pleasure. His recent life flashed through his mind. Unexpectedly he had met a woman he loved and trusted, he was no longer impotent, he found a talented editor to champion his work, he'd been published in a national magazine and had a book contract. An amazing chain of events. He decided then and there that after all he'd been through, if he could trust himself, his woman, his editor, his publisher and his cock, then damn it, he could trust this bank.\n\nHe had them make him a copy of the check before he deposited it.\n\n--\n\nWhen the book was released, and a couple days before Travis would have to leave for a number of appearances and book signings, he took Bettina on a day trip to a medium-sized city about two hours away. It was a clear Friday, a day off for Bettina. It was a nice day for a drive, and they packed a picnic basket. Bella rode in the back, protecting lunch.\n\n\"Why do we have to drive so far for a picnic?\" Bettina asked.\n\n\"You'll see,\" Travis said.\n\nFinally they drove into the outskirts of the town, what appeared to be the trendy suburb, and pulled into the lot of a shopping mall. Travis could have qualified for a handicapped tag, but he had never wanted to. He parked out in the lot like everybody else. Bella waited in the truck. Travis took Bettina's hand and they walked into the mall. They caught plenty of eyes as they walked hand-in-hand past the many storefronts and shoppers.\n\nThey had to walk almost to the other end of the mall to find the bookstore. Walden's. They walked inside and Travis led them to the shelves of the new releases, right near the front. There were many to choose from. They stood there for almost a minute before Bettina spotted it.\n\nThere it was: Travis's book. The cover was a wavy American flag, charred along the edge and beneath it was a toy soldier broken in half and a gold chain attached to a broken heart. The title was 'Tunnel of Distrust'. And right below it was Travis's name. It called itself a novel.\n\nBettina took a copy off the shelf and looked inside. She scanned the inside jacket describing the story. She had discussed the book with Travis a few times and had read the excerpts, but for the most part didn't pry. She knew how personal it was for him. She looked at the back flap and saw Travis's photo. A publicity shot.\n\n\"Cute little devil,\" she said, pointing at his picture.\n\n\"Turn to the dedication page up front,\" Travis said.\n\nBettina did, and read the short sentence: 'For Bettina, My Love, My Muse and My Light at the end of the tunnel'. \n\n\"I love you,\" he said, and kissed her as tears dripped on her cheeks. \"I'll be right back.\"\n\nHe went to locate the manager to introduce himself. He returned shortly with a felt-tipped marker and signed the books on the shelves. Then they went on their picnic.\n\n--\n\nTravis took them to a perfect place for the picnic. A secluded spot he'd first visited as a kid. He drove about a half hour back toward home and then left the highway and followed a narrow lane for a few miles until it dead-ended by a babbling brook. Travis took the picnic basket out of the truck bed and the three of them set off on foot down a trail that bordered the stream.\n\nAfter about a quarter mile they could hear the rush of water getting louder and found a flat, grassy spot to lay their blanket. They ate hard salami and cheese sandwiches and pickles and fruit and drank cold sweet tea from a thermos. Bella got a sandwich too.\n\nAfter lunch they cleaned and packed up and lay back and relaxed on the blanket for a while, looking up at the trees.\n\n\"Ready for dessert?\" Travis asked.\n\n\"What you got in mind?\" Bettina laughed. \"There's no dessert in that basket.\"\n\n\"Let's go skinny-dipping.\"\n\n\"Skinny-dipping? You crazy?\" Bettina asked, thinking what might happen if some redneck stumbled along and saw a naked white boy and a naked black girl swimming together.\n\n\"Come with me,\" he said. He took her hand and pulled her up, and led her down the trail.\n\nBarely a hundred feet away was a waterfall where the water tumbled over an edge and fell about ten feet down with a crash into a wide pool of roiling water. Travis started unbuttoning his shirt.\n\n\"You sure about this, Travis?\" Bettina said nervously. \"What if somebody comes along?\"\n\n\"Don't have to worry, we have the sentinel. Right, Bella?\"\n\nBella barked her approval.\n\n\"Don't make me rip your clothes off!\" he said.\n\nBettina laughed and unzipped her jeans. They folded their clothes and placed them in a neat pile on the bank. Travis took her hand and they waded in. It was deeper than she expected, up to her neck in the middle.\n\n\"It's cold!\" she said.\n\n\"You'll get used to it pretty quick,\" he said, then grabbed her and pulled her under.\n\nTravis swam around a little. They played in the water and splashed each other. \n\n\"You look so sexy when you're all wet,\" he said, and took her in his arms and kissed her.\n\n\"Now you're getting all amorous on me,\" she said, and slipped her hand down around his shriveled penis. \"How you gonna get a boner in this freezin' water?\"\n\n\"Let me show you something,\" Travis said.\n\nHe led her to the far side of the falls and up the bank. A couple feet behind the falls, and about halfway up was a ledge, wide enough to sit or lie on. It was level, smooth rock. He climbed up and pulled Bettina up beside him and they sat with their legs dangling over the edge. The water was cascading down right in front of them, all they could see was water, but they were hidden from the world.\n\nTravis put an arm around her and kissed her mouth. Their tongues came alive and their hands drifted to their genitals. He kneaded her swollen nipples between his fingers. His water-withered penis showed signs of life.\n\n\"Let's see what we can do about that boner,\" Bettina said, and she repositioned herself, bent her supple body down and took it into her mouth.\n\nHis cock rose to the occasion. His fingers were locked in her soaked, coiled hair and his hand rode her head as it yo-yoed up and down. Within a minute his cock was strong and long.\n\n\"Good spot for a vertical, don't you think?\" Travis said into Bettina's ear.\n\nShe sat up. \"Ooh, that sounds good. But don't you drop me!\"\n\n\"If you go, I'm going with you,\" he said. \"My cock will be like an eight inch screw drilled into you.\"\n\nTravis scooted his butt back a little on the ledge and Bettina pivoted her body around the front of him and straddled him. She stared into his eyes as she guided his cock into her and dropped her weight upon him. He loved the feeling as she mashed her cunt down around him. He put his hands on her hips and she started bouncing up and down, and assisted with her upward-downward motions as she reamed herself on his cock. She squealed as she fucked and grunted as she pounded him with her pussy.\n\nTravis was fucking his lover on a beautiful day behind a wondrous waterfall. Was there a better feeling possible? He was getting close to orgasm when a strange thought popped into his head. This feels so fucking good, he thought. Almost too good. He thought of all the pain and anger and anguish he'd gone through to finally get to this point, and how it had resulted in his first book, a good one.\n\nBut how can I write another book when I feel this good? When I'm this happy? How will I ever get pissed-off enough to write another one?\n\nThen he felt his cum rising up from deep within and with a shudder he decided to save his worries for another day.\n\n*************************"
    ],
    "authorname": "Swampcooler",
    "tags": [
        "anal",
        "black woman white man",
        "erotica",
        "oral sex",
        "interracial",
        "anal sex",
        "oral"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/cabin-fever-47"
}