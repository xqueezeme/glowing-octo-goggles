{
    "title": "The Arctic Ch. 05",
    "pages": [
        "Nicholas paced the tent while Tyrst and a few other trusted men were all huddled over a map, all arguing over their next plan of attack. He hadn't wanted to split up, when Tyrst had brought it up he had laughed the idea off. But the more he thought about it, the better it sounded. \n\n\"You sure you saw them get away safely?\" he asked again. Tyrst sighed, pinching the bridge of his nose in frustration. \n\n\"I would have never sent the two of them away if I did not believe they would return to us, Nicholas. I have been training Astrid since she could stand on her own two feet.\" Nicholas let out a shaky breath.\n\n\"They were supposed to arrive three days ago,\" he protested. He had finally gotten Eira back into his life, he couldn't stomach the thought of her suddenly ripped away from him again. He felt like he was going crazy as multiple scenarios ran through his head. She had already been hurt by his people once. Eira had been right in that sense, he was a fool; a damn fool. He had been arrogant to think he could simply show up, married to the very Royal they had ordered him to kill. \n\nIt had been no coincidence that Arlen and Bard had found their way into his room. Nicholas may be a fool, but he was not an idiot. His fists clenched as he remembered the sight of her bound to the ground, covered in wolfblood; her clothes torn, face bruised. She had looked so broken. He had promised her she would be safe among them, and they had made him a liar.\n\n\"They will be here, have faith that the Gods are on our side.\" Nicholas nodded as he turned his attention back to the maps. A row of rocks marked the location of the barrier; the only thing that kept their land free from Ogres and Giants. The dark colored rocks represented where the weak spots were, the places they had been positioning themselves and fighting back any of the monsters that managed to get through. They were a dwindling clan, they had tried requesting more help but Olaf had refused to and insisted that every wolf he sent personally to investigate had come back telling him there was nothing wrong.\n\nSuddenly the tent flap burst open and someone stuck their head in, breathless from having to run to deliver the message. \n\n\"Sir, we have a situation.\" Nicholas's heart pounded in his chest as he turned to face the young wolf.\n\n\"Well, what is it?\" He glanced between them, only making Nichlas grow more nervous by the second. \n\n\"Astrid and the Queen have arrived, but...\" Nicholas was on him within seconds, shaking the man.\n\n\"Spit it out!\" \n\n\"They are both covered in blood. Queen Eira was unconscious...they are with the healers now.\" Nicholas took off before he was able to finish his sentence and he took off, nose raised in the air as hunted for her. \n\nHis primal instincts took over and he tracked her down, pushing past others; there were no manners, no excuses, just a growl as a warning to move or be moved. When he finally found her she was sprawled across a long table, smears of dried blood everywhere, her hair was short and darker than he remembered. A small blonde woman stood beside her, hands stretched out, hovering above Eira as beautiful golden light shone brightly from underneath. Nicholas froze at the sight, a wide range of emotions ran through him. Astrid stood beside her mother, Thora, a hand on the smaller woman's shoulders. Astrid turned, instantly alert, a small dagger in one hand before she realized who it was and relaxed.\n\n\"What happened?\" he demanded. \n\n\"Can we wait for my father? I really do not want to have to repeat it.\" But she didn't need a verbal reply, the look on his face told her all she needed to know. \n\n\"The White Skulls, they found us after we left the city. I managed to kill a few before challenging Ash to a duel and she..well...she incinerated them.\" It wasn't that he didn't quite understand the word itself, it was more that the concept didn't seem to make any sense.\n\n\"She...she did what now?\" \n\n\"She incinerated them all...including Ash.\" \n\n\"But she wears the collar of a slave,\" he argued. His mind refusing to comprehend that such a thing was even possible. He had seen the most powerful of Elves taken down by the collars, having relied on their magic for so many centuries. \n\n\"I am aware of that, and yet she somehow managed the feat.\"\n\n\"It would help if she wasn't wearing this atrocity,\" Thora snapped. Nicholas reached into the small pouch on his belt and pulled out a small glass vial, pulling the cork with his teeth.\n\n\"I can fix that.\" Her chest rose and fell in slow shallow breaths, if she hadn't been covered in blood it would almost appear as though she was sleeping.\n\n\"But you need the blood of the one who sealed it,\" Astrid objected. Had that been why Nicholas had been elsewhere during their escape? They had put their lives on the line for is Queen, and he had been nowhere in sight. \n\n\"I am aware of that,\" Nicholas growled. He dipped his finger into the blood, writing the Rune of Cen, the Rune of openings and as the blood magic made the metal glow brightly, it just as quickly faded and popped open. Nicholas was gentle as he lifted her head and removed the collar. He tossed it aside as he brushed the hair from her face. Thora approached, hands spread out again as she got back to work. Tyrst joined them only moments later, pausing in the doorway. Relief washed over his face when his saw Astrid alive, wiping the sweat from her mother's brow. She was covered in blood, but Tyrst could tell from the smell that none of it belonged to her. \n\n\"You're late!\" he barked at his second.\n\n\"The White Skulls caught up with us after we left the city. They must have rode ahead and waited for us. All those conflicting smells they could have stood next to us and I wouldn't have smelled them.\"\n\n\"Well, I see that you held your own.\" She looked away, a strange look passing her eyes but she instead nodded to Eira.\n\n\"She's the one who saved us; Ash would have killed me.\" He could tell the ordeal had shaken her a little, she was so used to being the best, and the strongest of so many that she had underestimated Ash's power and skill. \n\n\"What's wrong with her?\"\n\n\"The burst of uncontrolled power, plus fighting through the blood magic...if Astrid hadn't been there, I'm not sure she would have made it back. I am going to need more magic,\" Thora confessed. Astrid wiped her mother's brow one last time and took off out the tent to fetch a few more healers. Nicholas leaned in, and kissed Eira's forehead. It had been close...too close.\n\n\"The Gods do not get to claim you quite yet, snowflake. You must come back to me.\" He pulled off his shirt, and pulled the dagger from his belt. In one swift motion he stabbed a third of the blades tip deep into his left shoulder blade, roaring in pain as he grit his teeth, blood pouring down freely. He slowly dragged it over the Rune of Isa that had been burned into his flesh many years ago. \n\nNicholas felt the connection break, his magic sliding back into him, filling him an electric chill he'd long tried to forget. There was no point in hiding anymore; he had known the moment he left the Thing and helped Eira to escape there could be no going back for him; any of them. Once he pulled the blade out the wound began to slowly knit itself back together, leaving nothing but trails of blood down his backside. Nicholas stood and rested his hand on Thora's shoulder, and she shivered beneath his icy cool touch. \n\n\"Go ahead, take as much as you need.\"\n\n~~~~~~~\n\nShe was weightless.Floating somewhere between existing and not existing. She could feel something tugging on the edge of her consciousness. She resisted the pull, not wanting to leave the warm bliss. She didn't have to think, she could simply be. But the tugging got stronger, more insistent. Eira tried to shake free but it spread, consuming her, pulling her away from paradise. Then the pain started, it was only a taste at first; but soon sharp pins and needles seemed to be stabbing from every direction and she screamed. The sound causing fresh pain to ripple through her. Hands restrained her, the pins and needles got sharper and her back arched as the healers struggled to hold her down. \n\nBy the time she finished, Thora nearly collapsed, drained and exhausted. Nicholas stumbled, but leaned against the table for support as he took Eira's hands into his own. Tyrst scooped Thora into his arms, evaluating her state before nodding to Nicholas and heading out to get his wife some rest and food. Tyrst had first captured his wife on his way home from a raid. She too, had been branded. But anyone could see the love on their faces when they looked at one another now. Nicholas still didn't know the whole story, but the there was nothing that could be changed about the past. They had to look to the future, to the things they did have control over changing. \n\nHe looked back down at Eira as he brought the wet cloth to her face and began to gently scrub away the dried blood. There was so much left to be said between them, and he wasn't sure if any of it was going to make a difference. The way she had looked at him in that dining hall, her eyes so empty and defeated; so broken. He wondered which version would greet him when she opened her eyes.\n\nEira groaned, her entire body was heavy and lethargic, her body throbbed with a persistent dull ache and when she finally opened her eyes she felt immediately dizzy.\n\n\"Whoa, just lay back down Eira. You are in no condition to be getting up quite yet.\" She felt someone tip the edge of a wooden cup to her lips and she took a tentative sip of what turned out to be cold refreshing water. \n\n\"Thank you,\" she managed to rasp. She tried opening her eyes again, more slowly this time and she found herself staring into his grey-blue eyes. She studied him, he had bags beneath his eyes that told her he hadn't been sleeping well. And she realized he was shirtless, his tan muscles tense as he watched her.\n\n\"What...what happened?\" she asked softly, adjusting to the sight of the room she was now in. It was a tent, she was resting on top of the bed, still wearing the clothes she had been given by Astrid.\n\n\"What do you last remember?\" She closed her eyes a moment to concentrate, flashes of memories coming to her all at once and she winced.\n\n\"Not alot,\" she admitted.\n\n\"According to Astrid, you managed to use your magic through the Rune and stopped Ash from killing her.\" She frowned as she could suddenly hear the sound of swords, the smell of blood. A final scream.\n\n\"How?\" she demanded, although she already suspected the answer. \n\n\"You incinerated them.\" More lives gone because of her; she looked away as tears rolled down her face.\n\n\"It wasn't your fault Eira, you were protecting Astrid and yourself. How could you possibly know that you could use magic through the Rune?\" She jerked her hand free from his and glared. He didn't understand, she had been filled with such anger and hate that she had wanted them dead. And the Gods answered her prayers.\n\n\"They were going to hurt you,\" he argued. But he could tell in the stubborn way she set her chin that she was not going to see it from his point of view no matter how much he argued with her. No matter how ridiculous she was being.\n\n\"When did the collar come off?\" She had felt the familiar thrum of magic swirling deep within her before she opened her eyes. \n\n\"Minutes after you arrived.\"\n\n\"How did you take it off?\" She asked as she studied him, waiting for an answer and he knew she was watching to see if he was going to tell her the truth or not.\n\n\"I used Arlen's blood.\" The truth, but not all of it. And she stared into his pale grey-blue eyes and it dawned on her.\n\n\"That means he's dead, doesn't it?\" Nicholas did not look away, he had nothing to feel guilty for and he wasn't going to allow her to try and argue about Arlen's death too.\n\n\"He hurt you.\" Three simple words he spoke, as though they explained everything; and for Nicholas, they did. That was all the reason he needed; word would spread and other wolves would think twice before even looking at his wife.\n\n\"That doesn't answer my question.\"\n\n\"Yes, Arlen is dead. Much too quickly if you ask me. I wanted to take my time with him...\" his voice dropped low and she shivered, his eyes turned dark and cold. A thin layer of frost spread across the comforter closest to his hands and she gasped, bringing his attention back to the present.\n\n\"He said...he said that you gave him the key.\" A brisk cold swept the room and she could see her breath forming clouds before her. Suddenly his hands were grabbing her face, palms so cold they almost burned and he made her look into his eyes.\n\n\"Please tell me you did not believe him.\" He pleaded. Eira looked away but not before he saw the look in her eyes, a look that told him everything he needed to know. Even though it had only been briefly, the thought had passed her mind that he quite possibly had given them the keys. \n\n\"I do not understand why you sound so offended; what else would you have me believe? I had never once thought you were capable of a lot of things, but you have proven over these last few weeks that you are efficient in doing a lot of repulsive things.\" The pain of her words faded into anger as he leaned close.\n\n\"And now, my Queen, so have you.\" Without another word he turned and left the tent before he said another word he'd regret. How did she always manage to make his blood boil? His pulse raced and the ground crunched beneath his boots. He took a minute to reign his power in, having gone so many years without it, it was almost overwhelming to have it back again. When he finally felt back in control he continued walking without so much as a backwards glance.\n\n~~~~~~~\n\nShe had been cruel, had chosen the words carefully that she knew would get the biggest reaction. But Eira had not expected his retort and was even more angry that he had a point. What right did she have to judge when she had killed several men in less than a week? Astrid cleared her throat as she entered the doorway and Eira found herself actually glad to see the girl.\n\n\"I see you are finally awake. I tried telling them you just wanted the extra nap, but nobody would believe me.\"\n\n\"I see you fared much better than I did.\"\n\n\"I also didn't try to summon the power of the Sun.\" \n\n\"That is true. I am just glad that you are alright.\" Eira admitted. If something had happened to Astrid because of her she was sure she'd never be able to forgive herself. \n\n\"My mother is one hell of a healer.\" As if summoned by the very mention of her name, Thora entered the room. She was maybe a few inches shorter than Astrid, petite, long blonde hair she wore braided and pinned up. She had on the traditional robes from the Temple of Eir, gold and white, although Thora's looked to have been specially designed with several pockets. \n\n\"I am Thora, wife of Tyrst, Alpha of the Northstar Clan; it was I and a few others who healed you.\" \n\n\"I am in your debt, could you please thank the others?\" Thora and Astrid exchanged glances.\n\n\"What?\"\n\n\"It was Nicholas who offered his power that helped to heal you.\" Thora replied. Of course it was, Eira thought to herself. \n\n\"I will have to think him, but surely you can thank the others?\" Astrid nodded and Thora approached, her short height making her seem younger than her eyes said she was. \n\n\"How are you feeling? Anymore pain? Weakness? Nausea?\" \n\n\"My head hurts a little, but I will be alright otherwise. I am rather hungry though.\" Thora nodded and promised to be right back once. Eira turned her attention back to Astrid\n\n\"So...you are half Elf...\" Astrid glared.\n\n\"My mother is an Elf; I am Wolf. It is the side I chose.\"\n\n\"What do you mean the side you chose?\"\n\n\"We do not fully become Wolf until we complete the Trial of Divine Ruin. And only then can we accept the Wolf's Spirit into ourselves and become one.\"\n\nWhen Astrid saw that she had no clue what she was talking about she pulled a chair up and made herself comfortable.\n\n\"There are 12 clans among the Wolves, as I am sure you counted at the Thing. Well 5 clans are descendants of Hati, another 5 are the descendants of Skoll, and the last two clans are descendants of Fenrir himself. You already met the White Skulls, the other Fenrir clan is the Crimson Jackal Clan. Each Wolf God has a different trial that must be completed before we are worthy of accepting the Wolf's Spirit. The clans of Hati complete the Trial of Divine Ruin. We must prove we are clever, strong and courageous enough to deserve being blessed through a series of tasks.\"\n\n\"And if you don't complete the Trial?\" \n\n\"I was unaware there had ever been another option.\" Astrid confessed. For her, there hadn't been; she had trained her whole life for that Trial. It would have been unacceptable to lose. \"It was my choice to let my grandfather cut my ears and brand me with the Rune of Isa. It was the only way he would allow me to compete and claim my birthright. He did not think I would pass.\" Her smile was genuine, because it was obvious she had succeeded, considering her father was now the Alpha and she was his second.\n\n\"What about your magic?\"\n\n\"The brands were very effective for their time, but my mother discovered if you cut deep enough, you can simply disrupt the Rune and our magic comes right back. Its why they use those collars mixed with blood magic now.\" Eira hands reached for a collar that was no longer there and she hugged herself. \n\n\"What happens if you can't get the blood of the person who activated it?\"\n\n\"You use the blood of their Kin, but only wolf magic activates the runes; it was made to discourage the slaves from killing their owners and risk losing their magic forever. Just enough hope to keep them from giving up.\" Her words sounded bitter at the end but before Eira could ask her anything further, Thora entered, a tray of good in her hands and Eira's stomach growled in response to the sight and smell of it. Once the tray was in her lap, manners were quickly forgotten as she dug into the food, not even bothering with utensils. Thora had brought her some bread, salted pork and fruit. She shoveled the food down, doing her best to pace herself but all she could think about was how hungry she was. When she finished Astrid took the tray back, leaving Eira and Thora alone. It was the first time she had been alone with the healer.\n\n\"I am going to help you walk around a little, get some of those muscles moving again.\" Eira nodded and together they managed to get her onto her feet and balancing. Pain radiated up her legs as she took a few steps, Thora holding onto her as she did. Despite her small size the woman was impressively strong, supporting nearly half of Eira's weight as she took a few more tentative steps around the tent. Thora declared them finished after a while and helped Eira settle back into bed where she dozed off once more.\n\n~~~~~~~\n\nEira took her time as continued walking through the small village, only a few dozen homes, rest of it consisted of tents. As she passed more and more people she noticed it truly was a mixed clan. It was strange to see Wolves and Elves live among one another, eat together, fight together, even to see their children play together. It was unheard of. Until Nicholas, Eira had never even known that Elves could have children with wolves. Her father had always spoke of them as if they were demons, but here she was seeing it with her own two eyes. \n\n\"Where are you off to?\" She scowled as she turned to face Nicholas. He had been smart and kept his distance since their last conversation. But she should have known that wouldn't last forever.\n\n\"What do you want?\" she demanded.\n\n\"I already have what I want,\" he replied as he stared her down. Even if she wanted a divorce she would never be granted one. Their vows were magically binding, that is why Elves did not enter into the bonds of marriage so lightly. Why they had such extensive contracts between families. ",
        "She knew he spoke of her as being the object he desired.\n\n\"I want to to fight,\" she announced boldly, eyes watching the children chase one another in a nearby yard.\n\n\"No.\" His response was immediate, not even a second of thought. Dark red flames blazed along her fingertips and she clenched her fists, trying to remember her breathing. In addition to the healing, Thora had given her a few techniques for trying to keep better control of her immense amount of magic. Since her magic had gone haywire the most when she was emotional, she was trying her best to control the ones that triggered the internal inferno. \n\n\"You are under the impression that was a question; perhaps I should clarify. I WILL fight, Nicholas. Whether I am trained enough or not, will depend on you; but I am not going to stand back and let everyone else fight for me.\" \n\n\"I will not risk it!\" he argued, and the flames in her hands expanded, engulfing up to her elbow. They licked along her flesh, burning brighter, hotter; but she felt none of it.\n\n\"You do not get to make those decisions for me!\" she growled in return. He stood closer, unafraid as his skin coated itself in a thick coat of ice.\n\n\"Our souls are forever connected Eira, you cannot burn me no more than you can burn yourself.\" \n\n\"I will fight and you cannot stop me! I will not allow myself to be weak to your kind ever again!\" Maybe it was the way she said them, or perhaps the very words themselves, but Nicholas stopped, anger dwindling. \n\nShe had finally stuck a chord deep within him, and he took a deep shuddering breath, more than aware of the gathering audience they were attracting. He grabbed her hands gently, a loud hiss hit the air as fire met ice, the ice melting until just their hands were touching and both their powers seemed to calm, if only for the moment.\n\n\"Alright, you will start training first thing in the morning. It is not going to be easy,\" he cautioned. She glanced around as more Wolves exited their homes and she suddenly felt a little self conscious.\n\n\"Swear it!\" she demanded. He scoffed but once he saw she was dead serious he sighed and nodded. He had not earned her trust yet, he understood her hesitation; so he gave her his oath.\n\n\"You have my word that I, Nicholas of the Arctic Wolf Clan, will start training Eira, Queen of Thirann, at first light tomorrow.\" Excitement rushed through her and she couldn't help but break into a big smile. Finally something was going her way! He had given her his word, and she knew he never did so lightly. Breaking your word was considered very dishonorable.\n\n\"Now, do you wanna reign this in?\" He lifted her hands and she realized she was still call ablaze. She closed her eyes and took a few deep breaths, focusing on pulling her magic towards her and shoving it back down inside herself. When she opened them again the flames were gone and it was just his hands holding hers. His thumb caressed her knuckles, his eyes staring deep into hers and she felt her cheeks burn before she pulled her hands free; scolding herself for allowing him to affect her this way? Why did she always seem to melt when he touched her? How was it he was able to make her feel this way with just a simple touch and a look? They had been apart for over a decade, she had changed from the young lady she had once been. Although clearly not as much as Nicholas had. And yet whenever he looked at her that way, she was suddenly an Elfling, falling in love all over again.\n\nBefore she could respond, the sky suddenly began turning dark, as though a dark cloud had swept in but when Eira looked up to the sky she saw instead the start of an eclipse. A loud blaring horn sounded, one after the other and everyone scrambled. Nicholas's eyes went wide and before she could object, he grabbed her hand and pulled her towards the origin of the sound. The roads cleared, chores abandoned as all able bodied men and women grabbed their weapons and rushed to the sound of the horn. Eira heard screams followed by the sound of clashing metal and Nicholas stopped, turning to face her.\n\n\"You need to go back to our tent and wait for me,\" he instructed. He shoved a small blade from his belt into her hands and pulled her close, locking her into a kiss that left her weak in the knees. She watched him disappear and traveled back to where she knew her tent was. Once inside she began to pace, the small knife still in her hand. She didn't know what the horns meant and Nicholas hadn't exactly taken the time to explain it to her either. What if it was more White Skulls? What if they were here for her? She heard the sound of fighting as it was getting closer and she began to feel nauseous. She wanted to help but she was afraid she would just end up getting in the way or taken hostage. It was a depressing realization and she briefly wondered if perhaps she could repeat what Astrid had said she had done to Ash and his men. She tossed the knife aside and conjured forth her magic and it blazed to life, surrounding her hand in flames, yet her skin felt not a lick of heat. She knew Astrid had been telling the truth because her powers had never felt like this before. She had unlocked something inside herself and now she felt like she had to learn to wield magic all over again.\n\nShe closed her eyes, focusing on drawing that magic back into her body, as though her very pores were drinking in the flames. She repeated the task, flexing her strength as she tried to let a little more magic out each time. It wasn't difficult to do either, all she had to do was think of something that made her angry; and plenty of things had made her angry over the past few weeks. She paced endlessly, stomach in knots as she waited for someone to tell her what the hell was going on. She didn't want to just wait around for them to fight her. When the tent opened she jumped, knife ready and a hefty blaze in one palm; but it was Astrid.\n\n\"What is it? What's wrong?\"\n\n\"My mother has requested your help.\"\n\n\"Nicholas told me to stay here.\" Astrid scoffed and shook her head.\n\n\"And since when did you start listening to him?\" \n\n\"Alright, let's go.\" Astrid had been willing to die for her, she had at least earned enough trust that she was willing to risk Nicholas's wrath. They were only a few feet from the tent when she heard a loud roar.\n\n\"Jotunn,\" Astrid gasped. The monstrosity was the size of nearly 4 men, its giant limbs crashing through the trees, snapping the branches and tops off, littering the villagers with debris. Eira's knees felt weak and Astrid had to jerk her forward by her arm as wolves leapt onto the giant, arrows shooting into his flesh while others hacked away at its legs; all the while the sunlight was slowly fading away, torches were lit, fires started. The sound of men's bones crunching had her stomach in her throat but she followed Astrid and found Thora in the healer's tent, working by candlelight. She was bent over a soldier, her hands glowing brightly. She wore a few weapons strapped to her waist and Astrid pulled Eira closer.\n\n\"How can I help?\"\n\n\"I need more magic.\" Eira nodded and settled her hand on the sweaty shoulder of the healer. She could feel the pull instantly as Thora began siphoning her magic, her hands glowed even brighter and slowly the wolve's wounds began to knit themselves shut. They moved from bed to bed, healing the worst of them while other healers managed the minor injuries.\n\nEira wasn't sure how long they spent healing people, some of them had run straight back into battle only to end right back in the tent. But nobody argued, as long as they were physically able, they would fight until the death. When Eira started seeing double Thora forced her to rest and went about healing others. She closed her eyes as the ceiling of the tent started spinning until eventually it all faded into the distance as unconsciousness claimed her.\n\nWhen Eira opened her eyes she came face to face with Nicholas. He sat beside her on the couch, holding her hand in his. They were back in their tent, she was stretched out atop the coers.\n\n\"That was really stupid of you.\" he growled.\n\n\"Leaving the tent or helping Thora?\" He glanced around, his voice lowered.\n\n\"Both, I told you to wait in the tent and I expected you to be there when I returned. Why do you insist on rebelling against me?\"\n\n\"She needed my help, I gave her more magic; I will be alright,\" she insisted, waving the matter away with her hand.\n\n\"It was careless.\"\n\n\"What happened to the Jotunn?\" \n\n\"It's dead, do not try and change the topic. You are still recovering Eira from unleashing enough magic that you incinerated several people; you could have hurt yourself!\" He was angry, but underneath all that anger she heard the concern, the fear.\n\n\"It would have been better if I had.\" He grabbed her so quickly she gasped and he shook her as he stared deep into her eyes.\n\n\"Do not let me ever hear you say those words again. Why would you think that?\" Eira looked away; there had been so many people, so many injuries and that had been all fighting just one single Jotunn. If the barrier were to truly collapse, hundreds possibly thousands of Jotunn would be able to come through. She had helped by giving Thora her magic, but she had been dragged here with everyone expecting her to fix it and she didn't have the first clue about her magic from Sol. She had no answers, only endless amounts of questions. Tears flowed down her pale cheeks and she wrapped her arms around herself in a tight hug as she tried to control the overwhelming hopelessness she felt at the situation. Nicholas pulled her against his chest and held her there, his arms firm, strong and comforting. She leaned her head on his shoulder, mouth facing away as she confessed,\n\n\"I-I...I can't fix the barrier.\" He pulled her away so that they were facing one another again.\n\n\"What do you mean you can't fix it? It is made from your magic, Eira! You are the only one who can fix it.\"\n\n\"I don't know how,\" she admitted, sobs slipped their way out. She had come with the intention of simply learning to fight so that she could flee home. How could she flee to her Kingdom knowing what she did now?\n\n\"How can you not know how to use your own magic?\" \n\n\"My mother died young and you killed my father before he could tell me. Everyone wants me to perform some miracle that I am not capable of and we are all going to die because of it.\" His hand cupped her chin and he kissed her fiercely.\n\n\"It's gonna be okay snowflake, we will figure this out, together. If we do not have the answers we will find the answers. I am sure the Elders will know, those old bats have existed since the beginning of time.\" Eira couldn't help it, she broke into a smile and he wiped a tear from her cheek.\n\n\"See, it is not quite Ragnarok yet snowflake. I am sorry that you are suffering from the loss of your father, but I am not sorry for killing him. There are things about him you don't know, and I would rather not taint the memories you have left of him. I will talk with Tyrst, when you are well, we will start training, and when the snow melts we will head back to the Elders.\"\n\n\"What about the barrier? Will it hold?\"\n\n\"At the rate it has been weakening we have two summers before we are in any serious danger. The weakening only occurs when the moon covers the sun. We have plenty time before it happens again; it is going to be okay.\"\n\n\"What things do you know about my father?\" She asked after she breathed a sigh of relief. So the Ragnarok was still approaching, just not as quickly as she had been led to believe. \n\n\"I told you, I would rather not taint the memories you have left of him.\"\n\n\"I will find out one way or another eventually, Nicholas...and I would rather hear it from you,\" she confessed. Despite their coarse past, he really did know her better than anyone else and of all the people in the world, it was his lips she wanted the secrets to spill from. Nicholas held her hands in his now as he took a deep breath as he tried to figure out the best way to tell her.\n\n\"It was your father who brought back the fighting pits.\" Short, simple and truth. Even as he uttered them, she didn't want to hear anymore. It was a barbaric tradition that her people had started hundreds of years ago; the rounded up wolves and forced them to fight like wild dogs. They were treated very much like the animals they turned into, even going as far as to breed them like horses. It had been banned by her Great Grandfather because of how inhumane it was, the idea that her father had been the one to bring them back was horrifying. When she looked up back to Nicholas she knew he wasn't finished.\n\n\"I wasn't 'banished' like your father would have you believe, further down the road I was ambushed and I woke up as one of his newest pets.\" His jaw was tense, and Eira couldn't believe what she was hearing. Nicholas lifted his shirt to reveal his \n\n\"Is that what the scars are from?\" She had noticed them, several thick dark scars. The biggest of them ran from the right side of his ribcage down towards his hip before stopping. She had hardly noticed them before, she had been too intent on her hatred. Her finger reached out to trace the skin before she realized what she was doing and pulled her hand back.\n\n\"When we refused to shift they would heat hot iron and burn us until we shifted anyways.\" The heat had stopped the skin from healing properly, which suited him just fine. He wanted a reminder of the torture he had suffered at the hands of her father. The pain he had witnessed of his people, both his people.\n\n\"I don't understand...why would he do this?\"\n\n\"You underestimate your father's hatred of wolves, snowflake. The night I shifted, I no longer became the young man your father watched grow up. To him I was nothing more than a savage animal.\" Eira felt the sharp pang in her chest, those were the same words she often used when she wanted to insult him. \n\n\"Why didn't you tell me this before?\"\n\n\"To be honest, I thought you already knew. Kris told me...well it doesn't matter because none of it was true.\" \n\n\"If I had known...I feel like I grew up in an entirely different world Nicholas.\"\n\n\"It's a lot to adjust to, but it gets easier.\" Eira realized how selfish she sounded, Nicholas had already been through this. He had gone from a noble Elf to a fighting Pit. Tortured by his own King, thought to be scorned by his own betrothed. How had he managed to not break entirely?\n\n\"When?\" she demanded. Not a single day had gone by since this entire ordeal happened that she had been able to say she slept well or wasn't constantly on high alert for the next person or creature who wanted her dead. Nicholas sat back down beside her, his light blue hair had darkened from the blood of his enemies, his grey-blue eyes were calming.\n\n\"You are not alone in this, snowflake.\" \n\n\"How can you even stand the sight of me?\" \n\n\"I was angry for many years, Eira; and for awhile the very thought of you would send me into a rage. But when I finally saw you again, after all these years...one look in your eyes and I knew that he had lied.\"\n\n\"What did you see when you looked at me?\" \n\n\"Relief, grief, anger, confusion and...love.\" Her heart beat responded to his words, and Eira looked away.\n\n\"Is that why you were so cruel to me on our wedding night?\" His eyes were sorrowful as he looked away with guilt.\n\n\"In part, yes. Partly being Wolf means sometimes I don't have control over my more primal instincts. The very sight of you, the smell of you...knowing you were mine.\" His voice took on more of a growl to it and she shivered; not from his wintry powers. It was heat that emitted from his half naked body, and she stopped him with one hand against his chest and he shook his head, pulling back.\n\n\"It is hard to keep my head when I am around you; I'm sorry,\" he admitted. She looked deep into his grey blue eyes and saw regret and sincerity.\n\n\"I can't lose you Eira. These last few days were torture and when I thought you were dead...your ability is not the only reason I married you Eira. I love you, I have loved you for over a decade, and I will continue to love you into the afterlife.\" And for the moment she believed him, she needed to \n\nbelieve him. Eira leaned forward and locked him into a passionate kiss. He was taken by surprise but the moment her lips touched his all reservations died. He groaned her hand coiled around her neck, cupping the back of her skull as he kissed her back. Their tongues met and he leaned against the headboard as she moved across the bed on her knees. He pulled away from her, breathless.\n\n\"Wait...are you sure about this snowflake? I don't want there to be any doubt,\" he whispered, lust glowing in his eyes as he searched hers. \n\n\"Right this moment, it is the only thing I am certain about.\" Desire seemed to flood her senses, and she didn't protest when he pulled her closer so that she straddled his lap. She could feel his arousal straining against his pants and she ground her rocked her hips against his. The need swept through her body and she didn't bother to fight it. After everything she had recently gone through, she needed this. His hands slid their way up her shirt, pulling it off over her head and tossing it to the floor, with her breasts free he reached up and began to massage them. Kneading the soft globes of flesh while his thumb rubbed circles around her nipple causing a moan past her lips. Her hands began to caress his bare chest, fingers softly tracing the raised darkened flesh of his scars. They didn't diminish his looks, if anything they made him appear stronger. To see the pain he had endured and come out from was a whole other experience.\n\n\"I want you so badly,\" he breathed. Eira could feel the pressure growing between her legs and she squeezed her thighs tighter around him, pressing down harder, trying to satisfy the ache.\n\n\"Those need to come off,\" he announced, nodding to her pants. Her fingers fumbled with the drawstring and as she quickly pulled them down he grabbed his waistband, lifted his hips and pulled his down with practiced ease. She blushed as stood over him completely naked, his waiting member stood proudly, his hand wrapped loosely around it, stroking it as he stared up at her. Eira straddled his legs, hovering just inches above him as she reached down to line him up with her entrance. His hands gripped her hips as he guided her down with ease, his eyes closing in rapture at the feel of his throbbing cock sinking inside her. Her hands shook a little as she placed them on his shoulders for leverage as she started to ride him. Her hips lifted before slowly sinking back down and she discovered the new angles he reached in this position. His hands returned to her breasts, but he caught one with his mouth, using just the edges of his teeth, eliciting sweet noises as she continued bouncing up and down, her fingers digging into the muscles of his arms as she brought herself down harder and faster with each movement. \n\nAn urgency had take over and she arched her back as his teeth sank into the soft flesh of breast. She felt a slow tingling warmth spreading from the tips of her toes, up her legs and stopping low in her body. She could feel it building there, rising higher and higher; a fullness filled her as electricity traveled up her spine. And it ended in an explosion of hot white light that left her spent and twitching. Nicholas leaned his head against her chest, nuzzling her bosom as they both came down from their post climactic bliss. As reasoning slowly returned Eira finally looked at him, his cock slowly turning flaccid as evidence of their copulation slowly leaked from her body. Nicholas remained unbothered as he brushed her hair from her face, pulling her in for one last kiss before giving her a satisfied grin. Eira was astonished with her own boldness, she had never been the one in charge before and the power of it was exhilarating. She inspected her breast to find the faint imprint of his teeth but nothing that broke the skin and he smiled sheepishly.",
        "\"Apologies, I tried to not get so carried away.\" She beamed at the sight of his cheeks flushing. She shrugged, head in a daze of euphoria. It had felt amazing, nothing like the pleasure she had felt before. Not that it had been bad, just different. She pulled away and sat down beside him, resting her head back against the headboard as he legs quivered from the strenuous activity. \n\n\"Do you truly love me?\" she finally asked. He turned and kissed her chin as he muttered the phrase. Again and again, with each kiss, he told her repeatedly just how much he loved her until she fell back against the bed in surrender. As the postcoital bliss slowly evaporated she looked looked up at him.\n\n\"I am afraid to let myself love you again,\" she confessed, feeling utterly vulnerable. \n\n\"You do not need to say it back unless it is how you feel from the bottom of your soul. And if that is not today, then perhaps someday. I will show you that I am a man worth loving again,\" he vowed."
    ],
    "authorname": "jadewinchester",
    "tags": [
        "violence",
        "elves",
        "vikings",
        "wolves",
        "norse",
        "non-consent",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-arctic-ch-05"
}