{
    "title": "Fling Maybe? Ch. 02",
    "pages": [
        "Her\n\nWe had breakfast in this cozy little caf\u00e9 next door to the hotel. We obviously built up a healthy appetite because we ordered half the menu. After breakfast, we headed to the Loop. It was busy with traffic and people enjoying this beautiful sunny day in downtown Chicago.\n\nWe walked through the Cultural Center. We stayed there to listen to a couple of scores of live classical music. The architecture of the Opera House and Harold Washington Library left me speechless. Greg was an excellent tour guide and very knowledgeable. I hung onto every word he said. He was in his element as he told me some well-known facts as well as some unknown ones. We strolled through Grant Park.\n\n\"Your friends were a riot last night. I haven't laughed that much in a long time.\"\n\n\"Well they really liked you.\"\n\n\"Yeah? They didn't mind having a girl intrude on your boy's night?\"\n\n\"No. They actually insisted I bring you along. You fit right in with us. And you beating Ryan in darts was the highlight of the night.\" He laughed.\n\n\"Aw Ryan is sweet.\"\n\n\"And a little handsy. I'm sorry about that.\"\n\n\"Don't worry about it. He meant no harm. He just had one too many. I can handle guys like him.\"\n\n\"Still it was a little disrespectful. I was about to break his hand if kept touching you.\" He voice was tense.\n\nI could see the vein in his neck throb. Much like last night when Ryan unexpectedly grabbed me around my waist and started to grind up on me.\n\nI stopped walking and touched his arm. \"Calm down Thor. I'm a big girl. I can protect myself.\"\n\nHe looked down at me. He had a wrinkle between his brows.\n\n\"But you shouldn't have to.\"\n\n\"I've been doing it this long what's another night?\"\n\nHe touched my bare shoulder. I looked up at him.\n\n\"Mo, you deserve to be protected and made secure. Any man who doesn't understand that doesn't need to be in your presence. You are too smart, too beautiful and too good of a woman to accept anything less.\"\n\nI felt tears well up in my eyes. I willed them back. Thank God, I had on sunglasses. Why was I so emotional today? I looked around to find anything to change the subject.\n\n\"You mind if we sit down for a while?\"\n\nGreg stared at me and then looked up. \"Sure, over there.\"\n\nWe walked a short distance to a shaded area lined with picnic table and benches. We chose a bench underneath a big oak. I slipped my sandals off. The cool grass felt good on sore feet. We walked at least six miles already and I'm starting to feel it.\n\n\"Feet hurt?\"\n\n\"Yeah a little.\"\n\n\"Here.\" He patted his thigh.\n\nI swung my legs in his lap.\n\n\"I never turn down a free foot massage.\"\n\n\"Who said it was for free?\"\n\nI bit my lip to suppress a moan as he went to work on my right foot. My size nines looked tiny in his hands.\n\n\"I told you to wear comfortable shoes because we would be doing a lot of walking.\"\n\n\"I know, but they matched my dress.\" I whined.\n\n\"So, fashion over comfort.\"\n\n\"Exactly! Now you know what we women go through to look good for you.\"\n\n\"Oh, so this is for me?\" He raised an eyebrow. \n\nDammit I didn't mean to say that.\n\n\"Maybe.\" I flirted back.\n\nHis hand travel up the back of my calf and I had a flashback to this morning when he devoured me so deliciously. Then took me so gently in the shower that my climax was euphoric. It was a high I never been on before. When I came down from it I couldn't control the emotions that spilled from me. I wanted it to last forever. It was everything. He was everything. He made me feel like I was his. His body pleaded with mine begging for me. All of me. Then reality hit. And it hit hard. He isn't my man and I didn't belong to him.\n\n\"Monette, I should really be upset with you.\" He began to massage my left foot bringing me back to the present.\n\n\"Why?\" I was confused.\n\n\"You've called me a lot of names today.\"\n\n\"Have I?\"\n\n\"Yes. Let's see you've called me a monster, the devil, jerk, asshole but my favorite was Thor. That one I don't mind. He's my favorite avenger.\"\n\nI smirked. \"I meant every one of them at the moment.\" I pulled my feet from his lap and sat up on my knees beside him. I leaned and whispered into his ear. \"But I've also called you baby, honey and my personal favorite, Greggy ooh.\" I purred into his ear low and sweet before scraping his earlobe with my teeth. I relished in his choppy breathing.\n\nHe pulled me down into his lap. I could feel him hardening under my ass. I yanked his beard down and pecked his lips softly a couple of times, but that wasn't enough for him, so he held me in place as his teased my mouth with his viscous tongue before sliding it between my lips. I tried to latch onto it, but he quickly removed it and licked the corners of my mouth and sucked on my bottom lip. I groaned. He darted between my lips again. I twirled my tongue around it. He removed it again. I searched after it as I deepened the kiss, yet it evaded my urgent need to capture it. So, I did something that shocked him.\n\n\"Fuck.\" He growled. I had bitten into his bottom lip. I soothe it with by running my tongue over it. I met his eyes and he sucked his injured bottom lip.\n\n\"Who's being naughty now?\"\n\nI shrugged climbing out of his lap and straightened my dress. \"I'm hungry. What's good to eat around here?\"\n\nHe looked at me as if I lost my mind. \"What?\"\n\n\"Seriously?\" He motioned towards his lap where his dick strained against khaki shorts. I slipped my shoes on.\n\n\"We'll handle that later. Let's go.\" I began walking up the path we came from. Putting an extra swing in my hips because I knew he would be watching.\n\nHe took a minute, probably trying to will his hard on to go down, he finally caught up with me. Seizing me from behind. I spun around in his arms laughing.\n\n\"You're an evil woman.\"\n\n\"Now you know not to tease me.\"\n\n\"But the teasing is the best part.\"\n\n\"Ask your bottom lip does it feel the same way.\"\n\n\"Actually, I kind of liked it.\"\n\n\"Freak.\"\n\n\"See there's that name calling again. I have to do something about that pretty mouth of yours.\"\n\n\"Like what?\"\n\n\"I have some ideas. How about we order room service at the hotel and get to that other exercise.\" He winked at me.\n\n\"Goodness Gregory Is there a reason you've been so insatiable lately? You've been like a horny teenage boy the last couple of days. Fucking me into a stupor every chance you get. Not that I'm complaining. I've enjoyed it immensely.\" He smiled. \"I just never been with a man with a sexual appetite like yours.\"\n\n\"I don't know, it seems like I have this obsession with making you cum as much and as hard as possible.\"\n\nWith Darren, my ex, I was lucky to even cum once when we made love. If you can call it that. Which was like two maybe three times a month. I thought that was normal for a married couple, but with Greg I've become multi orgasmic squirting mad woman. I squirted one time with Darren and he made me feel so bad about it. Saying it was a turn off, so I suppressed that part of me. But Greg forces it out of me and he doesn't run away from it. He plays in the rain. \n\nI felt my cheeks warm. I slipped my hand in his. \"Let's go back to the hotel.\"\n\nWe made it to the parking garage in no time. Greg's hand stayed on my thigh as he maneuvered easily through the busy downtown streets.\n\nHe fished his ringing phone out his pocket. He smiled when he looked at the display.\n\n\"D\u00eda dult Mahathir.\" He spoke in his native language. \n\nI leaned back to my side to give him some privacy. I listened closely even though I didn't know a lick of Irish. I heard the high squeal of a woman's voice. I couldn't make out a word she was saying, but by the big smile on his face I knew whoever she has made him extremely happy. \n\n\"Mar sin go bhfuil tu sa bhaile?\"\n\nHe glanced in my direction a couple of times as he spoke. Whoever he was on the phone with was giving him an ear full.\n\n\"Yes.\" He sighed. \"I love you too.\" He switched back to English.\n\nWas I jealous?\n\nHis hand went back to my thigh. \"I'm sorry about that.\"\n\n\"That's okay. Your voice is so different when you speak Irish. Is that a dialect thing?\"\n\n\"Yeah I tend to speak in a higher octave when I speak my native language.\"\n\n\"Interesting. So, was that a friend of yours?\" As soon as I said it I felt stupid. I hope I didn't sound insecure.\n\nHe looked over at me and smiled. \"Um you can say that.\"\n\n\"Oh.\"\n\nThere was silence before he said, \"That was my mother. Apparently, someone has told her that I been parading around town with a beautiful mystery woman. She said she wasn't aware I had been dating anyone. I told her we were just friends, but she wanted to hear none of it.\" He laughed.\n\nIt kind of annoyed me when he said, \"just friends\". I don't know why, it just did. But I was relieved it wasn't an 'old friend'.\n\n\"I thought they were visiting your grandma in the UK until the end of the month.\"\n\n\"They were, but they missed their own home. Nona can be a bit of a handful sometimes. I think my mother had all she could take. She has invited us to a late lunch at their home. She wants to meet you. I told her I would ask you.\"\n\n\"It's fine with me.\"\n\n\"You sure? I would understand if you don't want to.\"\n\n\"I would love to meet them. Is there a reason I should decline the invitation?\"\n\nGreg beamed. \"Not one I can think of.\" He patted my thigh. \"I'm excited to show you where I grew up.\"\n\nWe drove just outside of the city to a little suburb called Wheaton.\n\nThere were beautifully manicured lawns and paved driveways. A large park seemed to be a main attraction, it was littered with families and pets enjoying the sunshine. A real family town. We pulled into to a yellow and white ranch-style home with a circle driveway lined with red and yellow flowers. There were two other cars in the driveway.\n\nGreg cut the engine off.\n\n\"Great everyone is here.\" He said with a bit of sarcasm.\n\n\"Who's everybody?\"\n\n\"My brothers.\"\n\n\"Okay what's wrong with that?\"\n\n\"You'll see. I do have to warn you my mother can be a little aggressive and very blunt. She may ask a lot of questions, but she means well I promise. My father on the other hand is chill and quiet guy.\"\n\nHe was a little fidgety as he brushed invisible dust off his clothes before he knocked on the door. I never seen him like this before and it took everything in me not to let out a chuckle.\n\nThis little freckled faced red headed woman swung open the door.\n\n\"Ah my sweet boy is home.\" She squealed her accent very pronounced.\n\nHe bent down to scoop her maybe 5'2 body up in a hug. \"Hi mom.\"\n\nAfter a while she let him go and focused her attention on me.\n\n\"You must be the lovely lady that has stolen my youngest attention all weekend.\"\n\nI extended my hand to her. \"Hello Ms. O'Brien. I'm Monette.\"\n\nShe looked at my hand as if it was foreign. I was instantly uncomfortable, so I put my hand down.\n\nYikes. Well so much for introductions.\n\n\"My dear we do not shake hands in this family. We hug. Come here.\" She smiled opening her arms wide.\n\nWe hugged. I sighed.\n\n\"You had me worried there for a second Ms. O'Brien.\"\n\n\"Don't mind me love. I'm sure my boy has already warned you about me. I can be a bit of a bitch sometimes.\"\n\nI nearly choked on my spit when she said that.\n\n\"Mother!\"\n\n\"Oh, hush Gregory. He still so easily embarrassed by the things I say. Oh, and deary please call me Catherine or Cat. I'm not into all that formal shit. Calling me Ms. O'Brien reminds of my mother in-law and I'm certainly not that hag.. Now come lunch is almost done and the other chaps are in the kitchen.\"\n\nShe linked her arm with mine and escorted us into the house. I looked back at Greg he just smirked and shook his head. We entered the kitchen and three sets of eyes were on us and I got a little nervous.\n\n\"Well don't just stare at the lass. Introduce yourselves.\"\n\nI met his two older twin brothers Vincent and Joshua. They were Identical from the thick red hair on their heads to their fit 6'5 stature. How on earth did that little woman carry these big boys in her belly for nine months. Their father Richard was the odd man out. The only thing he had in common with his sons was their height. His hair was graying dirty blond and he had a large beer gut.\n\nThey were very warm and inviting. Joshua and Vincent teased Greg mercilessly. Telling me stories about when he took ballet classes in high school. Picturing Greg's big muscular body in a leotard had me crying real tears.\n\n\"It was for soccer.\" Greg said for the fifth time.\n\nI tried to hold back my chuckle once I noticed how annoyed he was becoming. I knew the feeling. Being the youngest too, I knew how obnoxious older siblings can be.\n\n\"Aw baby it's alright. I bet you were really cute in your spandex.\" I touched his hand, swallowing down my laughter.\n\n\"You're no good Mo.\" He grinned.\n\n\"Sorry I tried.\" I cracked up.\n\n\"Monette do you work at the university with my son?\" Richard asked.\n\n\"No. I'm actually a dancer.\"\n\n\"Exotic?\" Cat asked excitedly.\n\n\"Mom!\" All three sons said at the same time.\n\n\"What? I'm not judging her. Stripping is a lucrative profession. And with a body like yours I'm sure you would be a top earner.\"\n\n\"Thanks, but no I'm not a stripper. I'm a choreographer. I've done a couple of plays and music videos. I also teach ballet and jazz to the youth in my community. I'll actually be flying out to Dubai next week to be a guest instructor for their dance academy for a year. Possibly longer if they will allow me.\"\n\n\"Wow that's amazing. I heard Dubai is beautiful. Congratulations.\" Richard said.\n\n\"Thank you.\"\n\n\"How did you two meet?\" Cat asked.\n\n\"It's quite funny. My ex-husband and his ex-wife worked for the same accounting firm. They introduced us at the company's holiday party. That was about three years ago.\" I looked at Greg he nodded. \"I attended a seminar he was teaching at the university back in February. He helped me start the process of opening my own studio. I'm renting a room at a rec center and it's getting too cramped. Thanks to Gregory my dream has become a reality. He's been a really great friend. And we've been kind of inseparable ever since we reconnected.\" \n\n\"Seems fated eh?\" Cat said.\n\nThere was a faint cry coming from the other room.\n\n\"Joel is awake. He should be hungry now.\"\n\n\"No one told me JoJo was here.\"\n\n\"You didn't ask loser.\" Joshua flicked Greg's ear when he got up.\n\nI leaned over to Greg. \"Who's JoJo?\"\n\n\"My nephew. Josh's son.\"\n\nJoshua came back in the kitchen bouncing a fussy chubby little red headed little boy. Greg reached out for him. Once the little boy recognized who Greg was his little green eyes lit up.\n\n\"Hi buddy.\"\n\nJoJo jumped excitedly in his lap cooing and drooling.\n\n\"Aw he's adorable. How old is he?\"\n\n\"He'll be one next month.\" Joshua said placing a bowl of mash potatoes in front of him.\n\n\"Wow your big boy.\" I touched his hand.\n\nHe smiled at me showing off his two bottom to teeth. He reached for me. I picked him up.\n\n\"And your handsome.\" I nuzzled his belly. He giggled. He hugged me around my neck and gave me a kiss on the forehead melting my heart.\n\n\"Uh oh little brother you better step your game up Jojo is trying to steal your girl. I mean your friend.\" Vincent teased. I rolled my eyes.\n\nWe finished lunch, talked and laughed. It was like I known them for years. \n\nHim\n\nMy brothers , father and I were in the den watching the end of a soccer match while my mother and Monette were in the kitchen talking and baking cookies. They seemed to be really hitting it off. I was a bit nervous because I knew how abrasive my mother could be.\n\nVincent punched me in the arm. \"You idiot.\" \n\n\"What's your problem man?\" I rubbed my arm.\n\n\"How do you call a woman like that a friend? You better snatch her up before I do.\"\n\n\"Right she's fuckin' amazing man. She's beautiful, funny, smart and obviously blind if she finds interest in you...\" Joshua chimed in handing me a beer.\n\n\"Best of all mom has taken a liken to her. You know she hated every girl you've brought home. She despised Gemma.\"\n\n\"We all despised Gemma...\" Joshua mumbled. \n\n\"She brought you down man.\"\n\n\"Straight up ice princess.\"\n\n\"Monette is the total opposite of Gemma. Don't think we missed how she couldn't keep her hands off you.\" Vincent smirked.\n\n\"And She seems real comfortable with calling baby.\"\n\n\"I peeped the way you looked at her while she talked. I haven't seen you smile so much in a long time. I thought your face was going to shatter into a million pieces.\"\n\nI watched these fools speak about me like I wasn't sitting right next to them. In all honesty what they were saying I already knew, but I refused to put myself out there like that. \n\n\"Alright stop teasing him. Son I can tell you really like her. Does she know how you feel?\"\n\n\"I don't know what your talking about.\" I feigned ignorance.\n\n\"Oh hell, Pop this chaocha is in love. It's .\" Vincent laughed.\n\n\"Gregory?\"\n\nThree pairs of eyes were on me.\n\n\"Fine I like Monette a lot, but it doesn't matter. She just finalized her divorce five months ago. She's not looking for a relationship. At least nothing serious. I don't want to be her rebound guy. Plus she's going to Dubai for a year or more. How would that even work? \"\n\n\"All I'm saying she seems like a good one and it would be an absolute travesty to let her get away without knowing if she feels the same about you.\" Joshua said seriously.\n\n\"I agree.\" Pop said.\n\n\"Me too.\" Vincent nodded.\n\n\"Even if it ruins our friendship?\"\n\n\"I say take your shot man if she's worth it.\" Vincent finished his beer.\n\n\"I wouldn't mind having her as a daughter in law.\" Pop's shrugged.\n\nWe watched the rest of the match. When it was over returned to the kitchen and the site before me made my heart melt and laughter erupt from all of us.\n\n\"What are you two doing?\"\n\n\"What?\" My mother put her hands on her hips. \"She was teaching me some dance moves. I love this one.\" She swung her arms in a circular motion in front of her. \"Mo calls it a Milly Rock.\" She was dead serious.\n\nMore laughter echoed around the kitchen.\n\n\"Don't hurt yourself honey.\" My dad said trying to hold in his laugh. \n\n\"Cat, they're just hatin' . You're doing great.\"\n\n\"Mo is the expert here, so if she says I'm doing great than I am. You wouldn't lie to me right?\"\n\n\"Of course not.\" Mo smiles at her. \n\n\"Mom I hate to cut our visit short, but we have to get going.\"\n\n\"Why so soon?\"\n\n\"We fly back to Philly early in the morning. We have some packing to do and some rest to catch up on.\" \n\n\"I bet.\" She wiggled her eyebrows at me suggestively.\n\n\"Inappropriate mom.\" I shook my head. \n\nMonette found humor in it though. \"Cat you're too much. It's been more than a pleasure meeting you. All of you.\"\n\n\"Same here. Don't be a stranger. You now have a place to visit when you're in town.\" She hugged her.\n\nJoshua nudged me. \"See.\"\n\nMonette hug everyone and kissed Jojo on his cheek. He seemed to be enthralled by her. \n\nOn the drive back I couldn't stop thinking about the conversation I had with the guys. My friends have accepted her and my family has already claimed her. She fit right in with all the important people in my life. \n\n\"Why are you so quiet? You haven't said much since we left your parents. Everything okay?\"\n\n\"Yeah I'm okay. Just a lot on my mind.\"\n\n\"Care to share.\"\n\n\"It's some work stuff.\" I lied. \" I'll handle it when we get back to Philly.\"\n\n\"You sure, I may not understand all the jargon, but I am a great listener.\"\n\nI tucked a loose strand behind her ear. \"Don't worry about it I can handle it.\"\n\n\"Alright. Since we are pretty much packed. We still have a few hour to kill before calling it a night, what do you want to do?\"\n\n\"Well you know what I want to do.\" I grabbed her by waist pulling her towards me. \"And I recall making a promise to you once we returned to this room.\" I squeezed her ass. She moaned. \"But we have plenty of time for that later, so we can do whatever you like. Lady's choice.\"",
        "\"Um that's a hard choice. But I want to go dancing. You know any good reggae clubs.\"\n\n\"I can't say I do.\"\n\n\"I'll google some. Maybe you can show me some of those ballet moves you learned back in the day.\" She teased. I let her go, but not before giving her ass a nice firm smack.\n\n\"Ow. You know I like that big boy.\" \n\nHer\n\nI chose this popular joint called Blues Me I seen great reviews on. It was a nice sized place, but the way the chairs and tables were arranged made it feel intimate. There was a well stocked bar that stretched from one of the room to the other. It was reggae and soca night so all the rastas were out. A live band played new and old hits. \n\nThis took Greg totally out of his element. He stuck out like a sore thumb with his long red beard and way too casual outfit. He looked like a lost puppy as I escorted him to a booth tucked away in the corner, but still had a great view of the dance floor. \n\nThe smells and the music brought me back to my childhood when my parents owned an after hours club. My father was a full blooded rasta who loved his music and a good party. My three older sisters Toni, Kia, Roma and I spent many nights sleeping in the back room while my mother hosted and dad ran the bar. \n\nWe would hear the music through the walls. Sometimes when we couldn't sleep we would sneak through the kitchen into a small utility closet behind the bar where we could see what was going on. We knew if our parents caught us we were sure to get our asses whopped. \n\nThere were bodies gyrating against each other. The women would be dressed in tight form fitting outfits that left nothing to the imagination. They would move their bodies in salacious and sensual ways. It was like the were making love with their clothes on. We would sneak back to our room and practice the dance moves we saw. \n\n\"What can I get you sugas to drink?\" A pretty dark skin thick hipped woman with blue braids down her back asked.\n\n\"Can I get a tequila sunrise.\" I spoke first.\n\n\"Alright and you?\" she looked at Greg.\n\n\"I'll just take a beer.\"\n\n\"Ok I'll be back with drinks in a moment.\" She walked away her bubble butt bouncing behind her in tight leather pants. \n\nI caught Greg trying to peek on the sly. I cleared my throat. His eyes snapped back to me. \n\n\"I was just...\"\n\nI burst out laughing. \"I know what you were doing. It's okay she has a big ass. I was looking too. You know you can look at other women I promise I wont be offended.\" I touched his hand.\n\n\"Really?\" He looked into my face to see if I was lying.\n\n\"Yes really.\" I scooted closer to him to whisper in his ear. \"So you were thinking about hitting that jiggly ass from the back weren't you?\"\n\nHe smiled touching my thigh. \"You don't know me.\"\n\n\"I know how much you like seeing my ass do the wave while you're fucking me hard from the back.\" I took a quick swipe of his ear with my tongue.\n\nHe squeezed my thigh. \"You know I love that.\"\n\n\"So tell the truth, you were thinking about getting busy with our waitress.\" I moved my hand to his inner thigh. \"I wouldn't blame you her ass did look soft.\" \n\nHe looked at me in shock. \"You really know how to turn me on.\" He pulled my chin towards him and laid a juicy kiss on me. \n\n\"Alright loves, here's your drinks.\" Our waitress set our drinks in front of us. I looked at Greg he tried to focus his attention on the ice cold beer in front of him. It took everything in me not to laugh. \n\n\"Thank you. Looks great.\" I said.\n\nShe leaned over the table on Greg's side and placed two menus in front of us. He took a quick glance at her round ass. My hand slid to his crotch. He gasped. I smiled.\n\n\"You okay suga?\" she asked him.\n\nBefore he could answer I jumped in, \"He just has the hiccups. He'll be fine.\"\n\n\"Okay. The kitchen is open, so if your hungry I can take your orders now.\"\n\n\"Can you give us a second to look over the menus?\"\n\n\"No problem. I'm Juani by the way. Give me a holler if you find what you like.\" She winked at me before sauntering away with her hips in full swing. We both took notice.\n\nHe leaned into my ear, \"Did you see that? I think Jauni was flirting with you.\"\n\n\"You think?\" I sipped my drink.\n\n\"You really don't know you're doing it do you?\"\n\n\"Doing what?\" \n\n\"The way you look at people. The squint in your eyes. You sing when you talk it draws people in. Allures them. Makes them want to get to know you.\"\n\nI've never been told anything like that ever in my life.\n\n\"Is that what I did to you?\"\n\n\"Amongst other things.\" He sipped his beer. He put his arm around me and I leaned against his chest.\n\nThere was a silence between us. The club was jumping. The lead singer of the band sang the hell out of a hit by Shaggy. People were up dancing grinding their bodies together. It made for a hot show. The women wildly romped shake while the men held on trying to keep up with roll of their lady's hips. That got me excited. I had a slight buzz from my drink. My hips began to rotate in my seat.The band ended their set and everyone applauded. The lead singer had long red and blond dreadlocks almost reached his waist stepped back up to the mic.\n\n\"Alrighty is everyone having a good time tonight?\" A chorus of \"Yes's\" filled the room.\n\n\"Good good. Now it's about that time where we clear the dance floor and ask all the pretty gal's to come up. It's time for the Whine competition.\" The crowd went wild.\n\n\"As you know first place gets one hundred fifty dollars, second place one hundred and third seventy-five. So where's my sexy ladies at? C'mon on don't be shy.\"\n\nA few women poured onto the floor. I wanted to go too, but I wasn't too sure what Greg would think. I looked up at him and pleaded with my eyes. \n\n\"Go ahead.\" He smiled at me.\n\n\"Thanks boo.\" I kissed his lips before sliding out the booth. There was four of us in all including my waitress, the sexy Juani. \n\nThe rules were we had one minute to do our slow wind routine and once the music stopped we go back to the line. The winners were being chosen by the amount of applause they received. Someone placed a chair in the middle of the floor. A spotlight shown down on dance floor making the audience dark.\n\nR. Kelly's Slow Wind began to play. The first girl stepped up wearing tight bright yellow spandex pants and a green halter top the exposed her flat belly. She turned her back to the audience. She spread her legs wide. She rubbed her hands all over her tight round ass before she dropped into a split and bounced up and down. The crowd cheered. Her time was up.\n\nThe next girl went up. She was tall skinny, and light skinned with big pointy breast and a barely there ass. She spun around while rubbing her hands all over her body. She squeezed her breast through her tank top. she got down on all fours wiggling her hips and making her ass clap. They hollered. \n\nMy turn now. I was slightly nervous, but excited. \"You got this girl.\" Juani patted me on my back. \n\n\"Next contestant.\" The singer said.\n\nI made my way into the spotlight. If these suckas wanted a show I would give them one. I slowly wind my hips while I ran my fingers through my hair. I dipped low letting my ass sweep the floor. I could hear the men hooting. \n\n\"Damn.\" The singer said.\n\nI put my hands on my knees and worked the muscles in my asscheeks so the moved up and down one at a time. I worked my way up to the standing position and showed these rastas what a real assclap looked liked. The crowd went nuts. I went back to the line.\n\n\"Oh shit we got a competition now folks. Alright here's our last competitor. One of our favorites. Juani.\" He yelled. The whole place erupted. \n\nJuani walked up there like a pro. Sean Paul's Temperature played. her ass moved effortlessly. First clockwise then counter clockwise. It was amazing. Exhilarating. Sexy. She did things with her ass I've never seen before. I cheered her on too. \"Go Juani.\"\n\nShe walked over to me and licked her lips. She grabbed my hand pulling me towards the chair. She pushed at my shoulders until I sat down. \n\n\"Uh oh looks like Juani has found her a victim.\" The singer yelled.\n\nJuani climbed onto my thighs. She looked down at me. \"Enjoy the ride sexy.\"\n\nShe began to bounce up and down as if i had a dick. Her tits in my face. The scent of peaches and coconut wafted from her skin. She ground her pussy on the top of mine making me wet. She grabbed my hands and placed them on her soft ass as she rode me. I moaned squeezing her ass and just like that her time was up. She climbed off me, blew me a kiss, and helped me from the seat.\n\nThe lights went back up and the crowd was visible again. everyone was up on their feet. I looked over my shoulder and Greg was still sitting in our booth. He stroked his beard with wide eyes. By the look on his face I knew he was gonna fuck me good tonight. I was raved up and ready after Juani's dry fucking.\n\nThe girl in the yellow spandex got third place, I got second, and of course Juani got first place.I walked over to Greg smiling with my one hundred dollars fanning myself. \n\n\"Not bad for a one minute performance huh?\" I slid into the booth beside him. \n\nHe snatched me up. He took my mouth in hunger taking my breath away.\n\n\"Lets get out of here before we end up fucking in one of these bathrooms.\"\n\n\"Damn okay.\"\n\nWe paid the tab and I left Juani a fifty dollar tip from my winnings. We hurried outside and waved down the first cab that passed on the busy street. Luckily it pulled over. We hoped in and the driver sped off. \n\nWe couldn't keep our hands off of each other. One of my legs was thrown over his as we kissed.\n\n\"Where to?\" The driver an older Israeli man asked peeking in the rearview mirror at us.\n\nGreg broke off the kiss. \"Sheraton Downtown.\" he huffed out.\n\nI buried my face in his neck licking and sucking it. Loving his manly scent.\n\nHis hand moved under my shirt palming my left tit through my lacey bra. He pinched the hard nipple. I moaned and bite into his neck marking him. We were behaving like horny teenagers that couldn't keep our hands to ourselves. I looked up to see our driver glancing in his rearview mirror every few seconds licking his lips. Greg was wrecking havoc on my neck nibbling a spot that he discovered earlier this summer that made my knees weak and my pussy cream. \n\n\"Ah baby you know what that does to me.\" I moaned loudly. I reached into his lap and stroked his thickness that stretched down his inner thigh. I squeezed it. I felt it jump in my hand. \n\nThe bright lights of the hotel shone through the car. I tapped his shoulder to get his attention. \n\n\"We're here Greg.\"\n\nHe removed his hand from under my shirt. I adjusted my top while he reached into his pocket to pull out his wallet. His lips were red and swollen. I used my thumb to wipe my lipstick off his mouth. He handed the man a twenty which was double what our fare was. He helped me out of the car. \n\nI walked a few steps ahead of him putting an extra switch in my hips. I looked over my shoulder and sure enough he was watching my ass move in my skin tight jeans. \n\nWe got onto the empty elevator. I pressed the button for the fourteenth floor. Again our hands were all over each other. \n\n\"Do you know how badly you turn me on?\" He rubbed my ass.\n\n\"I have an idea.\" I rubbed the front of his pants.\n\nThe elevator dinged signaling someone was getting on the fifth floor. We untangled ourselves as an elderly white woman got on. Greg put his arms around my waist holding me secure in front of him. \n\nI spoke to her , \"Hello.\"\n\n\"Hi.\" She said dryly.\n\nShe stared at us out the corner of her eyes. She shook her head as she looked back and forth between Greg and I. She obviously disapproved of what she saw. I hated that. It was people like her and their irrational thinking was what was wrong with the world. I wicked idea.\n\nI decided to mess with her a little. I reached up to pull Greg's face down to mine. I tongued him down nastily and sloppily. Moaning loudly. He responded by grinding his dick into my ass. I ended the kiss by scrapping his bottom lip with my teeth. He grunted. I looked back at the old lady and she stood with her mouth wide open. The elevator dinged for our floor. I grabbed Greg's hand pulling him out the elevator. I turned around just before the doors slid close. \n\n\"You have a good night ma'am.\" \n\nShe twisted her mouth and turned away from us. I burst out laughing. \n\n\"Judgemental witch.\" \n\nGreg smacked my ass . \"You're a bad girl, Monette.\"\n\n\"You don't know the half. Now come fuck me.\" I pulled him by his belt loop to our door.\n\n\"Yes ma'am.\"\n\nWe barely got the door closed when he ripped open my sheer top. We were naked in seconds. I shoved him onto the bed. He looked at me in surprised as I climbed on top of him.\n\n\"I need you in me now.\" I reached behind me stroking his hardness.\n\n\"Do you baby.\" He put his hands behind his head. His green eyes were lust filled.\n\nI lifted up and slid down on his length. He stretched me open.\n\n\"Oh shit...mmm big dick.\" I put my hands on his chest pinching his nipples as I rode him up and down.\n\nMy pussy slurped him up. There was no better feeling than being stuffed like this. I rode him fast my ass slapping against his thighs.\n\n\"That's it baby take this dick. Make it your dick. Wet that shit up. Aw fuck.\" His eyes rolled in his head.\n\nI rotated my hips grinding down on him. \"You like how I danced tonight? You liked the way I shake my ass.\"\n\n\"You know I did.\" He put his hands on my hips. \"I didn't know you could move like that.\"\n\n\"It was all for you. It wasn't for the competition or the other people watching. I danced for you.\" I slowed my movements down milking him with my inner muscles.\n\n\"I...damn...I really enjoyed it. How are you doing that...fuck.\" He yelled.\n\n\"I'm a bad girl remember.\" I smirked. \"What about when Juani rode me in that chair? Did that turn you on?\"\n\n\"It took everything in me not to jerk off at the table. Did it turn you on?\"\n\n\"It made me really hot. I could feel her hot pussy through her thin pants as she bounced her soft ass on my lap.\" I rotated my hips slowly.\n\n\"Monette please move faster baby you're killing me.\" he pleaded.\n\nI moved a little faster making my tits bounce, \"Like this?\"\n\nHe pulled me down until we were chest to chest. \"No like this.\" He rolled our bodies over putting him on top. He put my legs in the hooks of his arms and pounded away at my tightness. \n\n\"Beat this pussy up. Yes...oh yes. Ooh right there. Make me cum.\" I screamed.\n\nHe was like an animal the way he handled me. His thrust were relentless as he grunted above me. Sweat dripped from his body onto mine. I reached down and squeezed his tight muscular ass.\n\nHe looked deep into my eyes. \"Come for me baby.\" \n\nAnd just like that my thighs twitched and my back arched as I yelled out. I came so hard tears came to my eyes. He didn't give me chance to recover before he flipped me over onto my stomach. \n\n\"On your knees.\" He commanded in his raspy voice.\n\nI managed to get up on all fours. I looked back at him. He was stroking his chin as if he was judging if I was in the right angle. I put a deep arch in my back. He smiled. Grabbing my hips he plunged in deep. \"Oh that's it Greggy. Fuck me until you cum.\" I screamed on the cusp of another orgasm. He reached around me and rubbed my clit relentlessly. I detonated and our explosions collided.\n\nHe washed my insides with his semen. He was buried so deep in me. He jerked one last time then scooped me up and spooned me from behind. His sweaty chest against my sweaty back. It felt right. Just as I drifted off I swear I heard him whisper in my hair, \"I love you.\" But I didn't have the energy to acknowledge it before darkness consumed me."
    ],
    "authorname": "leeleeMarie",
    "tags": [
        "black woman",
        "irishman",
        "interracial",
        "dance",
        "club",
        "on top"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/fling-maybe-ch-02"
}