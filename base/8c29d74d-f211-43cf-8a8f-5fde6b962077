{
    "title": "Limbo Ch. 02",
    "pages": [
        "This is the concluding part of my LW debut. I hope you enjoy it. Votes, comments and private feedback are most welcome for this effort.\n\nA shout out to my excellent editor, Bramblethorn, for all her efforts.\n\n\"No matter how much suffering you went through, you never wanted to let go of those memories.\" \u2015 Haruki Murakami\n\n<p align=\"center\">* *</p>\n\nThe next few weeks were sobering for Ethan. He made a conscious decision to end his post-divorce spree of one night stands and self-destruction. He had reached the nadir of his life. The only way out was up.\n\nAnd he was going to take it.\n\n<p align=\"center\">* *</p>\n\n\"Another case just came in,\" said one of the senior doctors, handing him a file.\n\nEthan groaned. One more kid had swallowed a coin. It was his third for the day. If only parents were more vigilant as to what their kids ate, the ER wouldn't be half as full. He gave a few cursory instructions to the nurse and sent the kid off with her.\n\nHe loved all of his job, with the minor exception of his weekly ER rotation. Sure, there was the occasional accident where he could make a real difference, but for the most part he was swabbing crotches and treating sprains.\n\nStill grumbling, he moved to the next privacy curtain. He pulled it aside and saw an equally bored patient.\n\n\"So what're you in here for?\"\n\n\"Nothing,\" she said sarcastically, her dirty blonde hair hiding one side of her face.\n\n\"Nothing?\"\n\n\"Do I need to say it twice to get through your thick skull?\" she said, clearly irritated. \"I thought you doctors were smart.\"\n\n\"Who brought her in?\" Ethan asked, stepping outside the curtain. A young EMT rushed over with a file.\n\n\"She tried to jump off the roof of an apartment complex. A tenant pulled her back just in time. Nothing more than a few cuts and bruises, but we need to keep her for a psych eval.\"\n\n\"I wasn't trying to jump off a roof, fucktard,\" came a voice from inside the curtain.\n\n\"I'll deal with her,\" said Ethan. He took the file and stepped back in.\n\n\"So, Ms Penderghast,\" he read from the first page. \"Do you like standing on the edge of rooftops for the view then?\"\n\n\"Yes!\" she yelled exasperatedly. \"I was looking for a good angle for a bird's eye view photo when that dumbass Good Samaritan yanked me back in.\"\n\n\"A photo?\"\n\n\"Wait,\" she said, retrieving a large bag from under the bed. She unzipped it and took out a nifty DSLR and an assortment of add-on lenses. \"Happy now?\"\n\n\"You're a photographer?\"\n\n\"On my better days. Tell you what, go to the waiting room and get me the most recent magazine you have.\"\n\nOut of curiosity, Ethan fetched the newest TIME magazine off the rack in the adjoining waiting room. His \"patient\" flipped through a few pages before coming to a full-page spread of the aftermath of heavy shelling in Gaza. She smiled and pointed to the tiny copyright in the corner.\n\n\"Samantha Penderghast.\"\n\n\"Sam, if you want to know me better.\"\n\n\"You're with TIME?\"\n\n\"I'm actually freelance, but I've given stuff for TIME, National Geographic and even some of the better papers. They call me when they need something memorable.\"\n\nEthan sat beside her and took a moment to admire the photo. It was almost artistic, the way it captured the smoke rising out of the remains.\n\n\"Admit it, you thought I was just another fruitcake with a camera, didn't you?\"\n\n\"Maybe a little.\"\n\nThere was a sheepish grin on Ethan's face while he skimmed through the rest of her file.\n\n\"All right then,\" he said getting up and straightening himself. \"I guess you're free to go now. I don't see anything wrong with you.\"\n\n\"Wish I could say the same,\" Sam replied.\n\n\"I beg your pardon.\"\n\n\"Do you know that photographers, at least good ones, are very perceptive? Most of my photos are days, even weeks, in the making until I find that one perfect moment. I can tell everything about someone by looking at them. The more you try to hide your weakness, the more of an open book you are.\"\n\nEthan stopped for a moment. She grinned derisively.\n\n\"Your ring finger has a band of light skin, where a wedding ring once was. Your clothes don't look old, yet they're two sizes too large for you. You've lost a lot of weight recently. The most telling thing, though, is your eyes. From the moment you opened the curtain till now, the only time I saw some brightness in them was when we talked. You haven't had much sleep lately, have you?\"\n\n\"What are you, my shrink?\"\n\n\"No,\" she smiled. \"Your friend, if you'll let me be.\"\n\n\"Look, I'm sorry you were dragged all the way here for no reason, but I think-\"\n\nEthan was rudely interrupted by the click of Sam's camera. She admired her handiwork on the digital screen behind it.\n\n\"Take a look,\" she offered, turning it towards him. He waved it off.\n\n\"That's my empty canvas now. I'm going to make you look much better. Then we'll take another picture. Sort of a before and after.\"\n\n\"I'm flattered, but I'm not in the right place for-\"\n\n\"Another relationship?\" she completed. \"Neither am I. No one said anything about friends, though.\"\n\nHe gave up, much to her delight.\n\n\"Great then. I have an extra pass to the launch of Neil deGrasse Tyson's new book this Saturday at Strand. Actually I don't, but I'll get one.\"\n\nEthan looked utterly bewildered as she planned out his weekend nonchalantly. She looked at his perplexion and broke into a fit of giggles.\n\n\"You think I'm one of a kind, just wait till you know me better.\"\n\n<p align=\"center\">* *</p>\n\n\"So, how was it?\"\n\n\"I'm more confused about black holes now than after I saw Interstellar,\" Ethan said.\n\nHe and Sam strolled down Fifth Avenue. Ethan had his fingers deep inside his pockets to guard against the chilly air. Sam had a scarf wrapped around her neck and wore a sweatshirt from the Rhode Island School of Design.\n\n\"Still, you've got to admit, it's fascinating. The idea of what is possibly out there, so far away that no one will ever see.\"\n\nEthan's phone began ringing. He took one look at the screen and rejected the call. Sam saw it, but chose to respect his privacy.\n\n\"I looked you up,\" he said. \"You missed telling me about the Pulitzer Prize earlier.\"\n\n\"I'm flattered,\" she beamed.\n\nThey walked to Washington Square Park. The pavement was lined with street entertainers. From impromptu artists to jugglers to musicians and all in between. Sam laughed and tipped everybody she passed. Ethan paused to admire a mime couple expertly acting out a scene.\n\n\"Don't let the setting fool you. There's some real talent here.\"\n\n\"A painting for the couple?\" suggested a sprightly young female artist.\n\n\"Actually we're just-\"\n\n\"Sure, why not?\" Sam interjected, shooting him an acid glare for good measure. She dragged a reluctant Ethan to the foliage while the artist set up her easel and palette.\n\n\"A little to the right... now put your arm around him. That's more like it,\" exclaimed the enthusiastic ponytailed artist. She attacked the canvas eagerly.\n\n\"While we wait, why don't you tell me a bit about yourself?\"\n\n\"Shouldn't a real photographer be able to guess?\" he chuckled. Her unamused look quashed that. He began after a pause.\n\n\"Born and brought up in Greenville, a town upstate. I moved here with Zoe straight after high school. Went to pre med and med at NYU on a scholarship and ten years later, here I am.\"\n\n\"That is like the shortest and most boring biography ever.\"\n\n\"What about you?\"\n\n\"I'm Irish from my Dad's side. My Mom's side has bits of German, French and Spanish. I'm basically half of Europe in one package. Born and brought up right here. Now, home is where my camera takes me.\"\n\nThey took a break to position themselves to their artist's liking once more. Cicadas spread their sound through the air and bird's chirped their way back to their nests. The road pulsed with the usual traffic.\n\n\"It's ready.\"\n\nThe faux couple went to see their likeness on canvas. The painting was incredibly detailed, outlining every curve of skin and contour of muscle against the fading evening light. Sam's portrait equivalent had a broad smile while Ethan's had a bad imitation of one.\n\nSam paid the artist generously for the truth in her rendition.\n\n<p align=\"center\">* *</p>\n\nA few days later, Sam insisted that Ethan accompany her to the Gagosian to see her friend's latest installation. He went to her loft in Soho, not really sure what to expect. He rang the doorbell and waited. A few second later, an unshaven man in a fedora opened the door.\n\n\"Sam's been waiting. I'm Damien, by the way.\"\n\nEthan shook hands with his new acquaintance. He was fond of rather flamboyant colours, wearing a trifecta of red, green and blue in the brightest shades conceivable. Simply looking at him for an extended period of time could cause migraines.\n\nHe followed him past the hall, covered with an eclectic array of pictures and paintings. There were several with Sam as the central figure of a group.\n\n\"She talks a lot about you, and I mean a lot,\" continued Damien.\n\nThe last room on the right was Sam's studio. Damien pushed the door open and ushered Ethan into it. For the first time, he got to see Sam in her element.\n\nHer straw blonde hair was neatly combed and parted, coming down on either side of her face. She wore a figure-hugging top and jeans. The strap of her camera went around her neck and she was intently fiddling with one of the controls at the back. A half smoked joint stuck out of the corner of her mouth.\n\n\"Sam, you have a visitor!\"\n\nShe looked up from her camera and broke into a smile.\n\n\"I see you've met Damien. He's a photographer too by the way, mostly fashion. He's what I meant when I said fruitcake with a camera earlier.\"\n\n\"Haha. That never gets old,\" Damien scowled, tossing his fedora onto the bed.\n\nEthan took a second to get his bearings right. The studio had vivid images and bright colours all around. He shook his disorientation off and asked.\n\n\"So are the two of you... involved?\"\n\n\"God no!\" said Damien, doubled up with laughter. \"She's not my type.\"\n\n\"A pretty face isn't your type?\" Ethan joked back.\n\n\"A pretty face, yes,\" he said plainly. \"But not hers. You on the other hand... you I'd take to bed in a heartbeat.\"\n\nDamien turned to face Sam with a shit-eating grin stretching from ear to ear.\n\n\"Give me one night and I'll turn him.\"\n\nSam broke into a fresh fit of laughter, as did her fellow photographer. They held each other for support while Ethan turned a shade of crimson.\n\n\"He's between relationships at the moment, that's why he's staying with me,\" she informed him. \"Damien's my best friend and a walking stereotype for all fashion photographers.\"\n\n\"Sorry for the rude surprise. Couldn't resist,\" said Damien, getting back upright. \"I hope my being gay isn't an issue with you.\"\n\n\"Not at all,\" said Ethan hurriedly. \"In fact, my sister's gay.\"\n\n\"I'll have to meet her someday.\"\n\nEthan smiled weakly, thinking whether he himself shared that wish.\n\n\"So you're definitely not gay?\" Damien asked, growing more crestfallen when Ethan shook his head. \"Not even a bit?\"\n\n\"Wow, I haven't seen you this upset since we saw The Red Wedding,\" smirked Samantha, zipping up her DSLR in her bag. \"C'mon, Ethan. Let's get going.\"\n\n\"It was nice meeting you, Damien.\"\n\n\"Likewise. Let me know when you're looking for a change of scenery.\"\n\n\"And by change of scenery, you mean?\"\n\n\"A night of good hard fucking, of course,\" Damien said with unnerving calm.\n\nEthan almost sprinted the last few steps out of Sam's loft.\n\n<p align=\"center\">* *</p>\n\n\"Don't let Damien get to you. He's a really sweet guy.\"\n\nThe Gagosian gallery was teeming with highbrow artists, even more highbrow critics and the occasional lost outsider. Try as he might, Ethan failed to see the art in onyx carvings of oversized faces, but the sculptures got rave reviews from all present.\n\n\"Ethan! Ethan! Meet Alexei, the man behind the art,\" she said while dragging an anorexic man with a cane. Like everything Samantha did, the enthusiasm exuded from every pore.\n\n\"So you're the famous Ethan,\" he remarked. \"Blink twice if you're here against your will.\"\n\nThey laughed and shared pleasantries. Alexei gave them a brief explanation of the art before going off in search of his agent.\n\n\"Let me know when you're about to die of boredom,\" she whispered into his ear.\n\nAn hour or so later, they were on the subway. Ethan received a call, he pondered answering it for a short while before swiping it shut. He noticed Sam looking downcast for the first time since he met her. He patted her shoulder.\n\n\"Penny for your thoughts?\"\n\n\"It's nothing, just some pseudo-philosophical nonsense.\"\n\n\"Try me. I'm a good listener.\"\n\n\"You mentioned my Pulitzer Prize earlier. Did you see the picture which earned me that medal?\"\n\n\"The picture of the young boys in Africa. Yes, I remember. They had just been released from a diamond mine.\"\n\n\"Not released,\" she added glumly. \"They had become old enough to understand how much diamonds are worth, maybe even risk smuggling some, so the rebels pulled them out of the mines and put them in their army to die.\"\n\n\"That's horrible.\"\n\n\"Not for me. My photo of them leaving the diamond mines won me the Pulitzer even while they walked towards certain death as child soldiers. My prize is bloodied with their childhood innocence.\"\n\nSilence reigned for a few minutes before Sam sighed heavily.\n\n\"It makes me wonder if the world is one large zero sum game where one person's happiness always comes at the cost of someone else's. Is it never possible for two people to create happiness from nothing?\"\n\nEthan scratched his chin while he pondered the question. A few months back he was sure of the answer, or so he thought.\n\n\"I'm the wrong person to ask,\" he admitted. \"Right now, I have a very biased perspective of relationships.\"\n\n\"You're not the only one,\" she said in a voice so soft that only Ethan heard it. She looked down at the dirty subway floor and resumed fiddling with her camera strap.\n\n\"So we're still on for Lorde next week?\"\n\n<p align=\"center\">* *</p>\n\nA friend.\n\nSamantha Penderghast had promised him a friend. Her definition of friend involved independent movies, exploring new restaurants and making fun of avant-garde theatre productions. She had an incorrigibly cheerful air about herself, determined to bring a smile to his face.\n\nOver the next few months, Ethan learned to smile again. His colleagues noticed that he no longer looked like an emaciated famine survivor. He went back to working sane hours, or as sane as his rapidly rising career would allow.\n\nHe became her perpetual plus one at parties. From rooftops in the Upper East Side to massive yachts in the Hudson, he navigated the zany, eccentric world of art and journalism with Sam as his guide.\n\nAt last came the dreaded day when Samantha asked him to be her plus one on a more personal occasion. They were eating at a Japanese fusion place at the time and her request caused a fair amount of sake to spill onto his pants.\n\n\"You want me to meet your family?\"\n\n\"Jeez, you make it sound like a colonoscopy,\" she laughed. \"I don't want you do anything, but my parents have been curious about the guy who keeps me busy nowadays. It's my Dad's birthday.\"\n\n\"How many people will be there?\" he blurted, dabbing the wet patch on his pants with the nearest serviette.\n\n\"My parents and my brother's family, that's all. My brother is deployed in Iraq, but his wife and daughter are here. They're the nicest people you'll meet.\"\n\n\"I'll take your word for it,\" he said, giving up on rescuing the pants. He lowered his voice and asked. \"Don't you think it gives the wrong idea?\"\n\n\"No one will think we're in a relationship.\"\n\n\"How do you know?\"\n\nSamantha put her fork down and took a deep breath. For an instant, Ethan saw that same downcast expression from the subway flit across her face. Inwardly, he cursed his timing.\n\n\"I'm sorry,\" he added hastily. \"You don't have to say anything.\"\n\n\"Thanks. It's just that I have good reason not go down that road again.\"\n\nBefore Ethan had a chance to apologise again, Sam flashed her familiar smile and asked the sommelier for a fresh bottle of sake.\n\n<p align=\"center\">* *</p>\n\n\"Will you stop acting like a girl? You look fine.\"\n\nEthan sat in their rented car a block away from Samantha's brother's home, making sure his tux left the right amount of space in the middle. It was a nice house in Westchester, on a sleepy suburban street. Sam finally convinced him he looked presentable.\n\nThey walked up to the door and rang the bell. Two pairs of footsteps, one rapid and light and one of an adult approached. The door swung open and a little girl who could not be more than three stood there.\n\n\"Aunt Sam,\" she squealed and jumped into Sam's arms. She lifted her niece all the way up and kissed her all over the length and breadth of her face.\n\n\"Lana! It's been so long. You're even more of an adorable little princess than I remember.\"\n\nShe put her down but kept her in a tight hug. A pleasant looking brunette lady came by.\n\n\"Now, now, Lana, let go of your aunt.\"\n\n\"Oh, give it a rest. I'm fine,\" Sam affirmed, carrying her niece in her arms.\n\n\"You must be Ethan,\" said the lady, extending her hand. \"I'm Thalia. I'm sure Sam has filled you in on the rest.\"\n\n\"It's a pleasure to meet you,\" he said, handing over a bottle of Chave Hermitage Blanc. \"Come on in, meet the rest of the tribe.\"\n\nEthan obliged. The house was small, but meticulously maintained. Photos aplenty adorned the walls leading to the kitchen and dining space. He paused in front of the main wall and saw a centrepiece photo with an intricately designed frame. It was of Sam, her niece, sister-in-law and presumably her parents and brother. Her brother was dressed in uniform, proudly displaying multiple awards and medals pinned to his chest.\n\n\"Don't let his pic fool you. Underneath all that military d\u00e9cor, he's a lovable rascal.\"\n\nEthan turned and saw Sam waiting with an outstretched hand. He grasped it and was led to the dining area where a large Belgian chocolate cake with innumerable candles was present. He met and shook hands with Sam's parents. Despite their age, they looked remarkably fit.\n\n\"Quick, let me blow out the candles before Ethan has a chance to count them.\"\n\nThere was a laugh and Sam's father blew them all out in three puffs. He cut out four slices and fed three to the ladies waiting. Lana took the last piece and smeared it all over her face.\n\n\"Lana,\" sighed her disapproving mother. Before anyone could prevent her, she took her daughter to the washroom.\n\n\"So, Samantha tells us you're a doctor.\"\n\n\"Yes, sir,\" he affirmed. \"I specialise in trauma care.\"\n\n\"Cut the sir out, will you? It's my birthday already. Don't make me feel any older than I am.\"\n\nThalia reappeared with a tray full of light snacks. Samantha took the initiative to open the bottle of wine and pour out five glasses.\n\n\"You work in the city, I presume?\" asked Sam's mother.\n\n\"At New York Presbyterian. I've actually got an offer recently from Mount Sinai. They've got a much bigger department for me.\"\n\n\"Cheers to that,\" said Thalia and toasted.\n\n\"Do you have a place of your own in the city? I hear it's a nightmare finding an apartment.\"\n\n\"Right now, it's only a small place near my work. I'll probably need to get a better one if I plan to invite you sometime.\"\n\n\"That sounds like fun.\"\n\nThe pastries and biscuits disappeared in a flash. Thalia dutifully went to refill the tray. She sat down beside Ethan on the couch.\n\n\"James told me this is his last tour. He's already lined up a job with a private security firm run by a few ex-army buddies of his.\"\n\nEverybody took a bite of the food while little Lana crawled onto Sam's lap.\n\n\"When is Daddy coming home?\"\n\n\"He's coming home very soon, Lana, and this time he's coming back for good.\"",
        "Lana clapped and squealed with joy. Sam lowered her mouth and kissed her all over her face once more.\n\n\"Sam's very close to her brother,\" her mother confided in Ethan. \"They were inseparable as kids. There wasn't a secret that one of them had that the other didn't know.\"\n\n\"Why don't we show him the tape?\" her father said. Thalia nodded and fetched a CD.\n\n\"This is from four years ago.\"\n\nThe flatscreen flickered to life. The first scene was of Sam's parents whispering between themselves. The video moved to the yard where a large neighbourhood party was in progress. Thalia, visibly pregnant, was pouring out some punch and chatting with her friends. The jerky camera panned to Sam trying to focus her zoom onto a nearby squirrel.\n\nThe video moved back to Sam's parents as they gesticulated in her direction. The video returned to her with her camera. All of a sudden, a large, hulking man came into the scene out of nowhere and lifted her clean off her feet with a hug.\n\nSam was whirled around and put down before she returned the hug with interest and a squeal which could have shattered glass. All the guests at the party gasped, none louder than Thalia. She rushed over and joined the hug.\n\nThere were cheers and claps all around. Captain James Penderghast had returned early from his tour of duty. The camera zoomed in on his face sandwiched between identical smiles by Sam and Thalia.\n\n\"And cut,\" said Sam.\n\nThey exchanged more banter for some more hours. Ethan felt as if he had known Sam's parents forever. Thalia was the perfect hostess, never letting him spend more than ten minutes without a tray of edibles within reach. Sam clung onto Lana throughout.\n\n\"Aunt Sam, do you want to see my new dress?\"\n\n\"Why I'd love to?\" she said. \"Maybe I'll even take a picture of you in it.\"\n\nLana led Sam by her hand upstairs. Her family watched them all the way to her room.\n\n\"I'm glad Sam has started making friends again,\" remarked her father.\n\n\"She looks so happy, almost like her old self before...\" began Thalia, quickly gauging that Ethan didn't know what was being talked about. She stopped awkwardly and clapped her palm over her mouth.\n\nEthan stared around the living room taking in the mortified expressions. The wheels turned furiously in his head before he spoke up.\n\n\"Whatever happened, you don't have to share it with me if you're not comfortable.\"\n\nThe other three people present looked at each other for a few long moments.\n\n\"Sam trusts you,\" said her mother quietly. \"That's enough reason for me.\"\n\nEthan grew increasingly more curious. He took a bite of a cookie and listened.\n\n\"I just want you to know that...\" began her mother, wiping the beginnings of a few tears. \"Sam may look carefree and spirited, but she's hurting deep down inside. She's been through hell and we know it. Remember that, always, when you're with her. Even if she doesn't talk about it, she relives it every night.\"\n\n\"She really likes you, you know?\" added Thalia. \"We thought she'd never trust a man again, but she's pushing down all her fears so that she can be your friend. Treat her right, okay?\"\n\n\"What happened to her?\"\n\nThalia looked from Sam's mother to her father and then back at Ethan with pursed lips. Finally, she spoke up.\n\n\"I'm sorry, but I can't tell you that. She'd never forgive me if I did. In time, maybe she'll tell you herself.\"\n\nThere was an awkward pause for a few minutes before Samantha reappeared with her niece in tow and a whole array of photographs. They bid their farewells and Ethan led her outside. He looked at her by his side, placidly hiding the immense weight of whatever her family kept from him.\n\nIn a sudden rush of emotions, he hugged her tightly for no apparent reason. She drew her head back and shot him a funny look.\n\n\"How much wine did you have while I was gone?\"\n\nHe simply smiled and helped her into the car. They drove back to the city. Ethan got off at his apartment. He climbed to the roof and gazed at the starry skies unfurled above him.\n\nHis phone started ringing. He lifted it to his eyes to see the familiar number he didn't want to speak to. But, he felt a tug at his heartstrings. The day had been about the importance of family, and it left a warm aftermath. Surely, he could blame it on the wine later. He picked up the call.\n\n\"You finally picked up.\"\n\n\"Hi, Val,\" he said. \"Beautiful night, isn't it?\"\n\n\"Yes it is. You're a hard man to get a hold of, Ethan. For the last ten years I get one tedious phone call on my birthday and Christmas and that's it. You can imagine how surprised I was to get your call that day.\"\n\n\"It was a moment of weakness, Val. I had just seen so many people die from drug overdose. That was when it really hit me that I had to move on.\"\n\n\"I need a moment of weakness to get a phone call from my own brother? That's really sad, you know. Do you know how many times I've tried calling you since?\"\n\n\"I know, but I'm sorry. I couldn't bring myself to answer.\"\n\nValerie was silent for a few seconds.\n\n\"Why?\" she asked earnestly. \"What have I done to deserve losing you?\"\n\n\"You know what,\" he sighed heavily. \"... and you know I'd rather not talk about it.\"\n\n\"NO!\" said the voice on the other end of the call with emphasis. \"This cold war between us has gone on for too long. It ends tonight. Whatever you want to say, you're going to say it to me and we're going to begin mending our relationship.\"\n\n\"Not now, Val. I'm not up for it.\"\n\n\"No time like the present. You're mad at me, I get it. Yell, scream and get it all out of your system. I'm not dropping this call until you do.\"\n\n\"Please, Val,\" he said in a tremulous tone. \"Please don't do this.\"\n\n\"I want my little brother back; the brother who was my best friend once, and I'll be damned if I don't do whatever it takes.\"\n\nEthan didn't say anything. The bitterness in his throat was evident.\n\n\"Everything you ever wanted to tell me, now's your chance. Don't hold any of it back.\"\n\nHe scoured his mind for the right words to express the multitude of emotions he felt. There was a brief pause before he began, slowly but with intensity.\n\n\"Valerie Cole, you don't have a brother. Not anymore. Do you remember all those times when Dad came home drunk and was going to beat you? I got in his way until you had locked yourself in your room and he only beat me instead. Do you remember all those times I stood up for you? I do. Do you remember how I fought for you when you came out to Mom and Dad? I do.\"\n\nHe paused to take a breath. A few stray tears had crept past his defences. Ten years of suppressed up rage and frustration had finally reached a tipping point. It was all coming out, whether he liked it or not.\n\n\"The one time I wanted you to stand up for me, the one time I needed your support, you weren't there. Dad told me not to marry Zoe and you took his side. You said it was because we were too young, but it was really because you didn't want to stand up to Dad.\"\n\nHis voice was cracking up now, but he was determined to go on.\n\n\"Mom wasn't there to protect me any more and I needed my elder sister. I begged and cried for my elder sister to be there for me, but she wasn't.\"\n\nHe cried bitterly into the phone. Fat tear drops rolled down his cheeks onto the concrete floor. His vision was too blurry to see the individual stars any more.\n\n\"Are you done?\" asked Valerie softly.\n\nHe shut the phone and trudged back down to his apartment. He wouldn't admit it, but he felt lighter than he had in ages.\n\n<p align=\"center\">* *</p>\n\nMount Sinai is a world-renowned hospital. Ethan was thrilled to see the state-of-the-art equipment, cutting-edge labs and some of the best medical teams to learn from.\n\nSadly, the one thing that didn't change was the necessity to do a weekly ER rotation. He stood in his white miracle-worker uniform and deftly dodged the latest woman who claimed to have a skin condition he just had to feel \"down there\".\n\nHis phone rang and he answered it.\n\n\"Hey, Sam. Yeah, I'm about to finish with the last few patients in the ER.\"\n\n\"The film festival starts in like ten minutes,\" she fumed on the other end.\n\n\"I'm sorry. Save me a seat, will you? I'll call you up once I get to Tribeca and you can tell security to let me in.\"\n\nThere was an exasperated groan and the call dropped. Ethan heartily cursed whoever came up with the idea of an ER rotation and moved on to the next privacy curtain.\n\n\"So, what-\"\n\nHis words froze in his throat. His knees felt like jelly and a sledgehammer had been slammed into his gut. He balled his hand into a fist so hard his knuckles turned white. His head began spinning and he felt momentarily disoriented.\n\nOn the bed, sporting a nasty bruise on her face and a bleeding lip, sat the woman formerly known as Zoe Moreno-Cole. She looked up at him, her swollen eye opening a sliver to greet him.\n\nEthan opened the file. He was determined to be professional. He was determined to show that she did not get to him.\n\n\"Mrs Moreno.\" She's decided to keep her maiden name.\n\nShe smiled as best as her lips would allow.\n\n\"What happened to you, Mrs Moreno?\"\n\n\"The tiles were wet in the washroom floor and I slipped. I caught the edge of the tub with my face. It was a stupid accident.\"\n\nEthan knew it was a bald-faced lie, but he continued with his forced professionalism. He felt the bruised areas for tenderness. His fingers lingered for a moment too long on her lips.\n\n\"Are you sure it was a fall in the washroom that caused this?\"\n\n\"Yes,\" she insisted. \"Please. It's not what it looks like.\"\n\n\"Okay then,\" he said. \"I think you have a fractured cheekbone. The orderly will take you to get an X-ray.\"\n\nContinuing with his coldly stoic manner, he made a few notes. He wasn't going to show any weakness. He wasn't going to show Zoe what she did to him.\n\n\"After you have your X-ray, tell the orderly to bring you to my office. Depending on the extent of damage, I can prescribe some pain meds.\"\n\nEthan wrote out his X-ray request and tore it from his pad.\n\n\"I'll go get an orderly.\"\n\nJust as he was about to leave, she held his hand. It wasn't hard, but it might as well have been with a vice because he couldn't move. Once more, his mind reeled back to her tender touch which had made ten years of his life so much less miserable.\n\nQuietly, he closed the privacy curtain all the way and turned to face her.\n\n\"Sorry,\" she said through her fattened lips.\n\n\"Sorry?\"\n\n\"I didn't know you're with Mount Sinai now. I wouldn't have come otherwise.\"\n\nZoe let go of his hand and let it slump by his side. She tried smiling as best she could.\n\n\"What do you want?\" he said raspily.\n\n\"Nothing. I have no agenda. I've caused you enough pain. I'm not going to be the reason for any more,\" she said. \"You don't have to treat me, Ethan.\"\n\n\"Like it or not, I do. I'm responsible for the ER today.\"\n\nHer good eye ran up and down the length of his figure.\n\n\"You look good, Ethan. Much better than I remember.\"\n\n\"Zoe, are you sure you got these bruises from a fall in the washroom? You're lying and not doing a good job of it.\"\n\n\"Yes!\" she pleaded. \"I don't care what you think. That's what happened.\"\n\n\"Did your husband do this to you? You know I have to file a police report if I think he did.\"\n\n\"Please, I beg you, don't. Don't make it any more worse for me than it is.\"\n\nHe offered her a handkerchief to wipe a few tears.\n\n\"You must be feeling vindicated now. I left you and I got what I deserved,\" she croaked.\n\n\"No. I never wanted this for you. No matter what you did, I never wanted you to get hurt.\"\n\nEven as he said this, he felt the sickly sweet feeling of Schadenfreude within. He'd be lying if he said he wasn't the smallest bit satisfied. It was but a human tendency.\n\n\"I believe you, Ethan. You're the best man I ever met. Our break-up tore me up from within, as I imagine it did to you.\"\n\n\"Yet you went through with it any way. Divorce him then, be free again. It's not like it'll be a first for you,\" he spat out bitterly.\n\nIt took a few deep breaths to get his calm back.\n\n\"I'm sorry, I didn't mean it like that,\" he added.\n\n\"It doesn't matter. It's my fault. I left the most wonderful man in the world for a silly rich girl fantasy. I deserve whatever I get.\"\n\n\"You think putting up with your husband beating you is punishment? You think you're punishing yourself for breaking up with me?\" Ethan said coldly. \"It is nothing compared to what I went through after you left me. You broke my heart into a million little pieces. Nothing you can do to yourself will come close.\"\n\nWith that, he left to call the orderly. He didn't even look back once at Zoe.\n\nAn hour or so later, he was in his apartment, curled up next to a bottle of single malt. All the memories he had worked so hard to contain came flooding back to him. The rosier it looked, the more painful it felt.\n\nHe walked to his bureau and opened the top drawer. Amidst all the clothes, he found a jewellery box. With trembling fingers, he opened it to see a threaded gold pendant. He opened the clasp and wistfully saw the twin pictures of him and Zoe.\n\nWith a choked sob in his throat, Ethan realised he had not moved on.\n\n<p align=\"center\">* *</p>\n\n\"I can't believe you missed the film festival yesterday. After all that effort I went through to get the tickets.\"\n\nEthan didn't answer. They sat at Marea, on the verge of enjoying the best tortelloni and ragu in Manhattan, but his mind was elsewhere. Samantha looked at him with narrowed eyes. Finally, she snapped her fingers in front of his face to grab his attention.\n\n\"I'm sorry, what?\" he blurted out.\n\n\"What's up with you?\" Sam asked pointedly. \"You haven't said two words today.\"\n\n\"I'm preoccupied, that's all.\"\n\n\"With what?\" she asked, raising her brow.\n\n\"Something at work,\" he waved off.\n\n\"You're lying,\" Sam declared, wiping her mouth with the serviette. Ethan looked down at his untouched food, suddenly not feeling very hungry.\n\n\"What can't you tell me?\" she asked earnestly, holding his palm. \"I won't judge, you know that.\"\n\n\"It's...\" he began, frantically searching for an excuse. Finally, he gave up and put his cutlery down.\n\n\"Zoe came to the ER yesterday.\"\n\nAs briefly and painlessly as possible, he told her about their meeting. Her eyes went wider with every subsequent sentence and she clutched his palm tightly. It took around ten of the longest minutes he had known.\n\n\"That's all?\" she asked. Ethan nodded.\n\n\"You have to tell the police.\"\n\n\"I can't,\" he said plainly. \"She begged me not to and said she'll refuse to press charges. There's no absolute proof her husband even did it.\"\n\n\"So what are you going to do, stand by and let her be abused? Is that the kind of man you are?\"\n\nHe didn't have an answer for it. He dearly wished he did.\n\n\"I know you, Ethan. If you don't do anything, you will regret it for a long time.\"\n\n\"Who's to say I won't regret it if I do?\"\n\nDamned if he did. Damned if he didn't.\n\n<p align=\"center\">* *</p>\n\n\"Don't look so gloomy. It's only for a month.\"\n\nEthan opened the door for Sam and her luggage. She was going to Hong Kong to cover the last few days of the student protests. He led her to the concourse entrance at JFK and waited for her to take out her documents for verification. She threw a sidelong glance at him, seeing a familiar moroseness she had tried to alleviate.\n\nAll of a sudden, she enveloped him in a hug and kissed him on the cheek.\n\n\"I'll come back as soon as I can. I promise.\"\n\nThey parted ways and Ethan went back to his apartment. It was still early in the morning, and he needed to get ready for work. It all felt as if he was going through the motions. He made himself a bare minimum breakfast and headed out.\n\nIt was all the same, yet it was different. He didn't realise how much he'd miss Sam.\n\n\"Dr Cole, there's a woman waiting in front of your office. She has been waiting for a while now.\"\n\nEthan saw Zoe on the couch. She was dressed simply and had a much less visible bruise on her face now. She almost looked like the woman he fell for over ten years ago.\n\n\"Come in,\" he beckoned. \"It's good to see you're healing well.\"\n\n\"Ethan, I want you to stop trying to protect me. I told you I'm not pressing charges. Yesterday, two officers showed up at my place asking me if I've been abused. I had to listen to them for an over an hour and they treated me like a battered woman who won't report her husband.\"\n\nThe irony of the sentence hung in the air.\n\n\"I had to get them out before Milos came back from work. It would have been much worse for me if he saw them.\"\n\n\"Do you hear yourself?\" Ethan said, banging his fist on the desk. \"You're terrified of him and yet you won't press charges.\"\n\nZoe recoiled in fear, her hazel eyes shimmering. A nurse nearby knocked on the office to ensure everything was all right. Ethan lied and sent her off before turning back to his ex-wife.\n\n\"I don't have time for this right now.\"\n\n\"Then I'll wait downstairs, like I used to.\"\n\n\"My shift has barely started. You plan to wait for eight hours?\"\n\n\"It was never a problem before.\" She smiled and got up.\n\nFor the rest of his day, Ethan walked in a daze. He went from patient to patient unable to focus. His paperwork was decidedly underdone and he was a silent spectator in the M&amp;M he was asked to be a part of. Six o'clock could not come soon enough.\n\nAs promised, Zoe sat patiently in the hospital lobby. She stood up and followed him outside. They walked to a nearby caf\u00e9 and sat down.\n\n\"Does your husband know you're here?\"\n\n\"Milos isn't here right now. He's in Edison making a sales call.\"\n\n\"Sales call? Isn't he an investment banker?\"\n\n\"He was. His firm was one of the biggest in the city. One day, he took a massive hit when he invested millions in a company whose stock tanked heavily. He lost his job and we lost everything -- the house, the cars, the portfolio... literally everything. He has been making sales calls for local businesses since.\"\n\nZoe looked at him and then at her cup.\n\n\"The first few months were like living in the clouds. We got married in Monaco and had our honeymoon in Milan. Every day was a new adventure. He took me to Key West, St Moritz and Tallinn in the same week.\"\n\n\"Sounds like your dream,\" Ethan said, taking a sip of his espresso. Zoe smiled at her ruminations.\n\n\"You probably won't believe me when I say that even in those days, I thought of you all the time. I thought of nothing but the hurt I caused you. It was so unfair. Sometimes I wished I could undo what I did, but I was too scared to try.\"\n\n\"What happened to him after the crash?\"\n\n\"Milos took it hard. He began drinking everyday. Whatever money I earned was too little to keep up his accustomed lifestyle. We sold our house to pay off his debts and moved to a rundown place in the projects. It was all we could afford.\"\n\n\"Is that when he started...?\" Ethan asked, pointing to her face. Zoe nodded ruefully.\n\n\"At first it was out of frustration because he couldn't land a steady job. Then it was because there was nothing more to drink. Then it was because he bet on the wrong horse. He needed an excuse. I am his most convenient target.\"\n\n\"Despite all of that, you won't press charges or leave him?\"\n\n\"No,\" she wailed. \"He's my husband. I promised to be by his side until death do us apart.\"\n\n\"I think you may be taking that part too seriously this time,\" he replied glibly. \"After all you made the same vows to me and had no problems taking them out with the trash.\"\n\n\"Please don't say it like that. For ten years, you have had nothing but my undivided and utmost love. If that meant anything to you, please don't.\"\n\nEthan quietly busied himself in his coffee.\n\n\"Milos is all I have. I can't leave him.\"\n\n\"You also have...\" he began immediately, stopping before he could complete the sentence. Zoe's eyes snapped up at his eyes and looked at him with that same piercing stare that made his heart race.",
        "\"Who else do I have? Is it you?\"\n\n\"No. It's not me and it will never be me. I won't take you back, not after what you did. Every time I see you, all I can think of is you and Milos in that damn hotel room. Nothing will ever change that.\"\n\n\"I miss you so much, Ethan, it hurts.\"\n\nHe felt a craving for her love well up within him. Old feelings he had worked so hard to bury raised their heads in unison, all wanting nothing more than to hold her and kiss her and feel the warmth of her touch again.\n\n... And then the image of that restaurant floated in his mind. It was almost a year ago, but every detail was rendered perfectly -- the rain, the drinks, the designer dress, the laughter and that fateful kiss, all of it rushed back to him like a suckerpunch back to reality. Quietly, he finished his coffee.\n\n\"Stop lying to yourself, Zoe. You miss the exotic vacations and sports cars. You don't miss me.\"\n\nThe rest of her coffee spilt onto the table as she did a poor job of stifling a sob. She was halfway to the door within the next second, trying to hold back her tears. Ethan caught a glimpse of her scampering past the glass front of the caf\u00e9, tears flowing down her face.\n\n<p align=\"center\">* *</p>\n\n\"Please let me in.\"\n\nEthan left his half-empty bottle and looked through the eye-hole. Zoe stood in the corridor wearing a look of unholy dread. He opened the door and she stumbled inside.\n\n\"I'm sorry to come here, Ethan. I didn't know where else to go.\"\n\n\"What happened?\"\n\n\"Milos got fired and he drank too much. He's angrier than I've ever seen him. He's throwing bottles, plates and anything else he can get his hands on. I ran and he followed me for a while before I took a bus. I can't go back to my place tonight. He'll kill me, I swear.\"\n\n\"How do you know where I live?\"\n\n\"I got your card from the ER yesterday,\" she panted, clearly exhausted from running. \"Can I please spend the night here? I'll go back in the morning when Milos is sober again.\"\n\n\"Yes, of course,\" he said before he had the time to think better. \"I'll make some dinner.\"\n\n\"Let me,\" Zoe said.\n\nShe opened the refrigerator and took out a few ingredients of her choice. It was almost like a flashback to a past life. So many things had happened since she last cooked for him.\n\n\"Please, Zoe, for God's sake press charges against him. You're going to get hurt sooner or later if you don't.\"\n\n\"Press charges for what? Getting drunk and vandalising the place? It'll only make him more angry.\"\n\nZoe focussed all her energy on preparing the perfect chicken breast. For a sliver of time, trapped between swathes of reality, all the mattered was making Ethan dinner. She forgot about her pending bills, her abusive husband and her broken dreams.\n\nShe had been a fool and now it was too late to do anything about it.\n\nThey ate. Zoe was especially famished. Ethan enjoyed a home-cooked meal for the first time in months. No one spoke for the entirety of dinner.\n\n\"Ethan, I want to ask you for one thing and one thing only. I want you to make love to me tonight. I miss your kisses, your touch and the words you whispered. Please, let me be your wife for one night.\"\n\nHe looked at her, startled by her request. She wiped the tears from her eyes and said.\n\n\"I cheated on you with Milos. It's only fair you get the same when I'm married to him.\"\n\n\"Two wrongs don't make a right, Zoe. They never did.\"\n\nBefore he could turn away, she dropped her dress to the floor. His eyes were arrested by her body covered in nothing more than flimsy underwear. There were welts and lacerations in various stages of healing along her torso.\n\n\"What has he done to you?\"\n\nEthan got up and walked to her slowly. Her underwear came off and joined the pile of clothing. Her sparkling eyes and smile were all gone, replaced by a look of hopeless disenchantment.\n\nHe held the small of her back and laid her down on his bed. His lips found her stomach and kissed along the taut skin. He kissed all her wounds, each of them tearing a gash into him. He kissed her puckered nipples and swirled his tongue over and around her breasts. Finally, he kissed her lips, the lips that had looked so ugly and deformed in the ER a few days ago.\n\n\"Please, Ethan I need it.\"\n\nHe took hold of Zoe's leg behind her knee and placed it over his shoulder. Finding the space he needed, he pressed the head of his cock against her entrance and pushed inside slowly. She groaned and writhed under him.\n\n\"It's been so long.\"\n\nShe said it and he thought it. He looked down at the sight of her luscious breasts on her sexy body. Every curve and bend of it was exactly as he remembered. He knew where to kiss, where to caress, where to touch and where to probe. He fucked her with long languid strokes, like the rhythm of the waves crashing against the beach.\n\nA series of groans of increasing pitch heralded her climax. Ethan pulled back completely before slamming back into her at once. He grabbed her hips and pistoned in and out of her. His fingers found her nipples once more and tweaked them gently while his mouth locked onto hers and kissed her with a torrid passion they had once known.\n\nThe stars exploded in her head and a riot of colours spread in all directions. Zoe felt her vision dissolve in a psychedelic whirl before going dark. Waves of orgasm crashed over her body, sending her into sensory overload.\n\nSlowly, she came back to her ex-husband's bed. His warm hands held her to his bare chest. She felt safe and protected in his arms, a feeling she had not known recently. It took every ounce of her self-control not to break down and cry on him. She drifted off to a peaceful sleep.\n\nThe morning sun filtered in through the windows onto her face. She stirred and tried to go back to her dreams. The body holding her also moved, sliding her onto the bed.\n\n\"It's morning, Zoe,\" Ethan said.\n\n\"I know. Let me sleep for a little longer and I'll get out of your hair, I promise.\"\n\n\"Stay for breakfast. It'd be nice to have a breakfast that didn't come from a food truck for once.\"\n\n\"As you wish,\" she murmured without opening her eyes.\n\nA simple course of bacon, eggs and toast never seemed so appetising. They ate in their acquired silence. Finally, Ethan couldn't take it any more and he spat out.\n\n\"Please, Zoe, press charges against Milos. I forgive you for what you did. You don't have to keep suffering for it. Now please go and get rid of him from your life.\"\n\nShe put her knife and fork down and took a deep breath.\n\n\"I'm going to ask you this, Ethan. If I leave Milos, will you marry me again? Can you find it within yourself to take me back?\"\n\nHe didn't say anything at first. Zoe eyed him for a few seconds before he spoke up.\n\n\"I'm sorry, Zoe, but I could never do that. I will love you forever, but I can't trust you again.\"\n\nShe reached across and grabbed his palm.\n\n\"I don't blame you, Ethan. What I did deserves the worst punishment possible. If that is being married to Milos Petric, so be it.\"\n\n\"But I said I forgive you...\"\n\nOnce more, Zoe looked at him with a face full of wistful longing.\n\n\"I never said I forgive myself.\"\n\n<p align=\"center\">* *</p>\n\n\"What? She came to your place last night?\"\n\nSam did not look impressed, not even from over eight thousand miles away on FaceTime. Ethan rubbed the sleep out of his eyes and nodded.\n\n\"What happened?\"\n\n\"She wanted a place to hide from her husband for a night. She made us dinner and we went to sleep.\"\n\nHe graciously left out the last part. Sam scanned his face for a few seconds before rolling over and lifting the phone in the air so he could look at her face from above.\n\n\"I have to go have lunch with some people from the local media now, but I'll get in touch later. You can count on it.\"\n\nEthan swiped his phone shut and spent the next hour browsing her Instagram feed. Sam had not only numerous pictures of the protests, but also of the dazzling Hong Kong skyline and marina. He stopped at a selfie of her face partly obscured by the sun rising over the coast. Her pale blonde hair billowed in the wind. Ignited by the sunlight, it formed a halo around her face. Her smile was a constant fixture in all the pictures.\n\nHe closed his phone and slid under the covers. He didn't know he would miss that smile so much.\n\n<p align=\"center\">* *</p>\n\nThe next day, Ethan couldn't bring himself to concentrate on his work. Every new patient who came in felt like Zoe. He hadn't heard from her. He had no idea about her health and well-being.\n\nZoe was still deeply entwined to his heart. He had to know how she was doing.\n\nHe talked to Samantha on and off, grateful for the time she could spare between her own work. She gave him a patient ear and told him it was natural to worry about someone he loved. There were times when he spoke the entire duration of the call and she simply listened and nodded. It gave him more comfort than he cared to admit.\n\nHe went to all their old haunts -- the coffee shops, the rotisseries, the malls. He was there in all of them, but not there.\n\nFinally, he walked past Washington Square Park, reliving their first date, if it could be called that. He stopped to admire a street artist creating a realistic chasm on the pavement. Many people had gathered to watch him work, some with their cameras out to take a picture.\n\n\"Hi, there.\"\n\nEthan turned around to see the effervescent young artist who had drawn a portrait of him and Samantha all those months back. She was dressed in a simple overall and beret.\n\n\"Your girlfriend's not with you this time?\"\n\n\"No. She's in Hong Kong for work.\"\n\n\"That's unfortunate,\" she pouted. \"How about a solo portrait then? I do a real mean solo.\"\n\n\"Why not?\"\n\nClapping excitedly, she dragged him into the park and sat him down beside a fountain. She smoothed out his hair and turned his head so it was partly lit by the evening sun.\n\n\"There, now hold that pose.\"\n\nEthan tried as best he could. The girl went to work on the canvas, furiously attacking it with rapid brush strokes. She stepped back and committed some more of him to memory before taking a fresh dab from her palette and redoubling her efforts.\n\n\"Are the two of you serious, mister?\"\n\n\"It's complicated.\"\n\nShe drew exquisite detail on Ethan's stubble and his eyes. Satisfied with her work, she stepped back to admire it.\n\n\"Have a look.\"\n\nThis time, the picture looked much happier. He looked more like his old self.\n\n\"How much do I owe you?\" he asked, taking out his wallet. He took a picture of the painting and sent it to Sam.\n\nWhen he finally reached home, he saw Zoe waiting outside his door. She was tired from standing against the wall.\n\n\"How long have you been waiting?\"\n\n\"A few hours,\" she smiled back. \"It's nothing. I just wanted to see you when you got back.\"\n\n\"Where's your husband?\"\n\n\"Milos? He's in Syracuse trying to get some temp work at his friend's agency.\"\n\nEthan eyed her from head to toe. She had helpfully parted her coat to display she didn't wear much underneath. The yearning look on her face spoke volumes for her reason for coming.\n\n\"So you're going to cheat your way through this marriage as well?\"\n\n\"At least this time it'll be with the one guy I'm crazy about.\"\n\nHe almost laughed at her proclamation. She wore the same despondent look as he had seen since she walked into the ER. The only time he had seen another expression framing her face was when they had sex.\n\nEthan cursed his pathological weakness for her. He was acutely unable to deny her that one ray of light in her murky life.\n\nHe opened the door and let her in. Within a few minute, her clothes had been discarded. She had a few fresh bruises on her torso. He kept his gaze riveted to hers, remembering the long nights spent just staring into her hazel irises.\n\nEthan kissed her briefly, then spun her around and bent her over the sofa. Her plump ass presented itself nicely. He parted the fleshy cheeks and thrust himself into her wetness. He pushed in and out for several minutes before he pulled away.\n\n\"I hate how you do this to me,\" he growled under his breath, sitting on the couch and wrapping his fist around his cock. Zoe straddled his legs and sank down on his erection. Her breasts jiggled against his chest. He kissed her deeply, trailing one long kiss down her face and neck. His cock fit inside her like she had been made for him.\n\nVery shortly, he emptied his balls inside her. Zoe raised herself and walked back, a thin trail of cum visible on her thigh. She threw him a wink and went to wash off.\n\nHis respite didn't last long. As soon as his unsheathed cock stirred back to life, he saw Zoe sitting seductively on the dining table and spreading her pussy.\n\n\"It is yours. It was always yours. I was a fool not to see it before.\"\n\nEthan got down on his knees and let his tongue spur her on to a series of orgasms, each eliciting a more powerful cry from her. He lifted her legs to one side of his shoulder and thrust down at an angle. His cock went deeper into her.\n\nHis expression was stony and his hips pumped her with emotionless, metronomic frequency. She squirmed and writhed from the eddies of pleasure radiating out of her pussy. Her skin was flushed and her nipples hard and erect. Zoe reached her hands out to caress the sweaty sparse hair on his chest.\n\nHe looked down to his cock alternately concealed and revealed inside her fleshy walls. It slid into her fully at each stroke, brushing against her G spot before pulling back all the way. He felt his balls churn and gum begin to gush out so he pulled out and let ropes of sticky white semen splatter across her stomach and breasts.\n\nThe next site of defilement was the kitchen counter and he duly drove her to delirium while she sat on the cold granite. His tongue worked overtime, scrubbing her velvety inner walls until her pouting wet lips were drenched in her arousal. He got up and his cock followed, sawing in and out of her with a staccato rhythm.\n\nHis recliner and the new rug for the living room followed. She rode him on the recliner, eyes clenched and lost in her own pleasure and he pushed her down on the rug, slamming into her most sensitive bits with every stroke.\n\nIt wasn't tender or loving any more. It wasn't love, but a cheap knock-off like an Fendi handbag bought on Canal Street. Even then, Zoe would give an arm and a leg for Ethan's second-hand love.\n\nIt took a few more hours to be satisfied that they had used up every surface of his new apartment. Every surface save his bed. Zoe grabbed his hand gently and led him to the edge. She pushed down by the shoulders and knelt between his legs.\n\n\"I'm going to miss this so much.\"\n\nHer mouth engulfed his cock, bobbing back and forth. Ethan groaned and ran his fingers through her silky hair, holding her head in place. He rocked his gently and let his cock move against her lips. The underside met with the rough layer of tastebuds.\n\nZoe pulled the erect member out of her mouth, watching a pearly bead of precum seep out at the head. It trailed down the shaft until she intercepted it with the tip of her tongue. She liked giving head voluntarily as opposed to after having her jaw almost dislocated by Milos.\n\nHer tongue trailed down his member, tracing the outline of each vein. She reached his balls and sucked them between her lips. Ethan closed his eyes and thought of the time when she did this for him and only him.\n\nBefore he could cum, she pressed her hand to his chest and pushed him down. Starting from his cock and balls, she kissed and licked her way up his body until finally her face lined up with his, as did her genitals.\n\n\"No matter what, I'll always love you,\" she whispered to him. He flipped her over and pulled his hips back. Their lovemaking was slow, studied and methodical, each movement stretched out in time so their bodies would remember the lingering effects.\n\nAfter a few minutes, he lay in bed, holding her to his sweaty frame. Zoe hummed with satisfaction.\n\n\"Let's stay like this a little longer.\"\n\n\"Zoe, please. I'll do anything you want, but you have to leave your husband. I'll even...\"\n\nEthan's words never reached from his throat to his mouth. She looked up at him wide-eyed for a few seconds waiting to see if he would complete the sentence. When he didn't, she smiled grimly and kissed him again.\n\n\"Don't say anything you truly don't mean, Ethan. At least give me that much respect. Don't hurt yourself by trying to save me. I'm past saving.\"\n\n\"No, please don't say that. I still love you.\"\n\n\"Me too, more than you will ever know and that's why I can't let you take me back. I can't live with myself if I see the pain on your face every time you see me. You'll try to hide it and you'll try to pretend you've moved on, for my sake, but I know you better. I know you'll die inside.\"\n\nEthan remained open-mouthed in amazement. Zoe sat up and checked the bedroom clock.\n\n\"It's time for me to go home. Milos will be back soon.\"\n\nEthan hurt deeply, but there wasn't a damn thing he could say to stop her going.\n\n\"Same time tomorrow,\" were her parting words.\n\n<p align=\"center\">* *</p>\n\nShe had broken his heart like a child's dreams, thrown away his marriage like spoilt leftovers and stomped on it on her way out. Ethan knew all of it. He remembered each excruciating detail in a twisted broken record in his head which showed him the same scenes from his life in an infinitely repeating loop.\n\nYet, why did it burn so much to see her lowered state of being? Why did his heart ache when all her bruises, welts and scars floated back to him? Why did he let her into his apartment and have sex with her again and again when she stood pleading?\n\nThe answer was in the same place it had always been. In a felt box, locked in a drawer in his cabinet. A beautiful gold pendant with two pictures from a lifetime ago. He opened it each night to stare at. It was a gateway to a past he wanted nothing more than to return to.\n\nOn the nights Zoe wasn't there, he stared at his little time machine and told his fable to a bottle of Scotch.\n\n<p align=\"center\">* *</p>\n\nEthan had sex with his ex-wife on and off for the next two weeks. It was satisfying for both of them, but lacked the spark of their marriage. It was always at his place, their dirty little secret.\n\nThen came the day he saw her at Mount Sinai hospital. He was on an extended shift and taking a break near the emergency entrance. Immediately he knew something was amiss.\n\nShe rushed in screaming for a doctor. The attending stopped her, but Ethan stepped in and took her aside.\n\n\"What happened?\"\n\n\"Milos was in a bar fight. He's badly hurt.\"\n\n\"Where is he?\"\n\n\"They're bringing him in from the ambulance. Please, Ethan, you have to save him.\"\n\nHe ran to the casualty entrance and saw the orderlies hauling someone onto a gurney. He rushed to the nearest EMT.\n\n\"How bad is it?\"\n\n\"Really bad. He has fractures in his neck, ribs and pelvis. There is massive internal bleeding. We barely got him to the hospital.\"\n\n\"Prep him for surgery asap,\" he hollered at the orderlies. \"Tell Dr Jorgenson to get a team together for emergency multi-system surgery. Find out his blood type and get five units of it from the bank.\"\n\nImmediately, he rushed off. Even while he ran, he made a call to have OR number 5 ready. The team had already assembled and had begun changing into scrubs. Ethan joined them, making sure he was completely sterilised.\n\nHe looked out through the glass doors of the OR and saw Zoe's face with tears staining her cheeks. The sight burnt a fissure through his heart. Even after everything, he still found it distressing when she cried.\n\nNow was not the time for distraction. He double checked himself and walked into the main theatre. His eyes were gritted and his determination was steely.\n\nDespite his personal feelings, Milos Petric was like any other patient who needed his help.",
        "Zoe sat in the waiting room. Her eyes were fixed to the clock. Seconds turned into minutes and minutes into hours. Each instant of time that ticked by with the maddening uncertainty of her husband's fate was torture. People went in and out of the waiting room, each footfall making her look up with hope.\n\nIt was past 2 AM when the doors of the OR opened. Ethan came out, still in his scrubs. His hands and the front of his gown had a few ugly splashes of blood. He looked too tired to walk upright, drained by the effort of the surgery. He stopped to lean against the wall of the casualty ward.\n\nZoe walked up to him softly and placed a palm on his shoulder. He turned his bleary gaze towards her and shook his head slowly.\n\n\"I'm so sorry. We tried our best. His ribs had broken completely and shards of bone punctured his lungs, kidneys, liver and heart. He also took a heavy blow to the head and was almost brain dead by the time he got here. There was nothing we could do.\"\n\nThere was a thud. Zoe's eyes closed and her knees buckled. She collapsed onto the floor. Ethan immediately got on his knees and cradled her head in his hands. Doctors and nurses converged on them.\n\n<p align=\"center\">* *</p>\n\nEthan spent the night in the hospital making sure Zoe was transferred to a cabin. She was sedated, partly because he couldn't bear to see her awake and distraught. The next day went by in a blur of bodies, paperwork and meetings.\n\nIt was evening when his Chief of Medicine insisted he get home and catch up on sleep. His legs felt like they were made of lead. He had seen Milos Petric's face for the third time the previous night, the first two being during Zoe's affair. In those moments, he had often fantasised about what he wanted to do to him. Maybe for the briefest instants, he even considered trying them.\n\nFantasies were cheap. When he saw the mangled body of his nemesis on his operating table, his blood ran cold. Milos' face was almost unrecognisable from the blows it had received. The skin from his neck to his groin was tinged blue with internal bleeding.\n\nIt was a fate he would not wish on his worst enemy, not even Milos Petric.\n\nEthan needed to get his mind off the inhumanity of the last night. He needed to talk to someone who would understand. He dialled a number that had recently found its way back on his speed dial.\n\n\"This is a surprise. From me having to call you endlessly till you picked up to getting a call from you. To what do I owe the honour?\"\n\n\"Very funny, Val. I just wanted to check in on you.\"\n\n\"Don't tell me. A patient of yours just died and you're suddenly feeling another moment of weakness, so you decided to call me. Am I right?\"\n\nEthan smiled. His sister was always remarkably perceptive when it came to him. His lengthy silence answered her question. She resumed.\n\n\"Well you called the right person, 'cause I've got an idea to take your mind off all of that. How about you drop by and visit us sometime?\"\n\n\"Drop by... Greenville?\"\n\n\"God, does it sound so awful when I say it? You spent two thirds of your life here, it can't be all bad. Spend a few days with us.\"\n\n\"Just so you and Dad can gloat about how my marriage blew up in my face like you predicted from the start? No thanks.\"\n\n\"Ethan,\" Valerie said, her tone abruptly turning serious. \"No one is going to say that. I know you don't like us, but we haven't seen you in ten bloody years.\"\n\nEthan paused to get his tired mind to think. Val spoke up again.\n\n\"Dad's missed you too. He's actually asked me to talk you into coming. He's too scared to do it himself.\"\n\n\"Dad wants me to come?\" he chortled. \"What happened? Did he lose his punching bag?\"\n\n\"Ethan!\" she yelled. \"Whatever has happened, that man is still our father and you're not going to talk about him that way.\"\n\n\"You're seriously standing up for him after all he's done?\"\n\n\"Yes,\" Val said strongly. \"I've told you before and I'll say it now, he's nothing like you remember. Ever since Mom died and you left, he's been to anger management classes and AA meetings regularly. Next month, he'll be five years sober.\"\n\n\"If you say so.\"\n\n\"Ethan, the one thing I have never done is lie to you and I don't intend to start now. I've said all I had to say. All I can do now is hope you can be the bigger man.\"\n\nThe call dropped. Ethan got up from the ambulance bay bench. Zoe's tear-stained face and Milos' blood-stained one floated in his head. It was so unfair that Milos could affect him even after his death.\n\nHe stepped out of the hospital to find Sam waiting for him with two mochaccino lattes and wide smile to boot.\n\n\"Miss me?\"\n\nIn a sudden burst of emotion, he threw his arms around her and gripped her tightly. She struggled to keep her hands steady and not spill the coffee on the pavement.\n\n\"More than I can tell you.\"\n\n<p align=\"center\">* *</p>\n\n\"I've never seen him like that, Damien. All he did was cry.\"\n\n\"Really?\" came the surprised reply.\n\nDamien rolled up the best cannabis from his stash into joints as he spoke. He handed one of his better creations to Sam and held out a lighter for her. She took a deep drag and resumed.\n\n\"It was all bottled up inside him. He let the floodgates open. He told me about his ex-wife and her husband. It was heartbreaking to watch.\"\n\n\"But it's over now and that's what matters.\"\n\n\"Hardly,\" she said, blowing a stream of smoke towards the ceiling.\n\nDamien looked at her and took a puff.\n\n\"He's still hung up on his ex. I'm sure he hooked up with her while I was away.\"\n\n\"Did he say he did?\"\n\n\"No, but he's hopeless at lying, especially to me. I knew right from the first day we chatted on FaceTime.\"\n\n\"And you never brought it up?\"\n\n\"It's none of my business,\" she said, clearing the shroud of smoke in front of her face. \"Not like I'm his girlfriend or anything.\"\n\nThere was a long silence. Sam finished off her joint before searching for another one on the coffee table. She lit it and let Manhattan's finest THC take over her senses once more.\n\n\"Who's fault is that? You fell for him and I'm the one who knows.\"\n\n\"He's still in a bad place after his marriage. I don't think I should be springing this-\" she began, cut off by her equally high roommate.\n\n\"Right. The better option is to let him pine endlessly after his ex-wife.\"\n\n\"You and I both know I'm not girlfriend material. God, it's been so long since I let a guy even touch me. Just fucking touch me.\"\n\n\"You didn't choose what happened to you,\" Damien said, partaking in a fresh joint himself. \"You shouldn't have to suffer for it for the rest of your life.\"\n\n\"But it happened! There's no denying it. There's no pretending otherwise. I'm damaged and we both know it. Ethan deserves someone better.\"\n\n\"Someone like your old self?\"\n\nSam nodded listlessly, letting out a few more fumes.\n\n\"Then be your old self. Show Ethan the Samantha Penderghast who loved life more than anyone I know.\"\n\n\"I'm trying, God dammit,\" she spat out. \"All those bloody shrinks keep telling me I need to accept what happened to me and move on. Like they've ever been locked in a room and raped for days. There is no moving on from what they did to me. It's survived, not endured.\"\n\n\"You're still stuck in that room, aren't you? It's your personal prison. If you stay trapped in limbo, they win. They broke you. You have to move on, Sam. You know I've always wanted the best for you. I know it's going to be hard, but-\"\n\n\"Ethan's got enough to deal with himself,\" she interjected. \"He's in a limbo of his own.\"\n\n\"He needs you, Sam... and I don't care if you admit it or not, you need him. The two of you are the only ones who can understand what you're going through. Trust him, for both your sakes.\"\n\nThey smoked in silence for a few minutes before Sam spoke up again.\n\n\"You make an awesome therapist when you're stoned, you know that.\"\n\n\"Apparently.\"\n\n\"Even if I did want to tell Ethan how I feel, it would be a complete mess. I'd scare him off for sure.\"\n\nDamien got up and stood with his arms outstretched. Samantha chortled at him.\n\n\"One day you will know the right words, and they will be simple.\"\n\n\"All right, Kerouac,\" she said, slinging his arm around his shoulder to keep him steady. \"That's enough weed for tonight. Let's get you to bed.\"\n\n\"I'm warning you, Sam,\" he declared boldly. \"If you don't make a move on Ethan, I swear I will. I'll make him so gay that his junk will not even wiggle the least bit when he looks at you.\"\n\nIgnoring the last comment, Sam carefully lay Damien down on his bed. She knelt by the bedside and held his head in his hands.\n\n\"Thanks, Damien. I really needed to hear you say those things.\"\n\n\"You're a fantastic person, Samantha. Any guy would be lucky to be with you. Now go tell Ethan that.\"\n\n\"I will.\"\n\n\"You're as hopeless a liar as he is,\" Damien mumbled in his stupor. \"Good night.\"\n\nSamantha stayed by his bedside until he was asleep.\n\n<p align=\"center\">* *</p>\n\nThe next day, Ethan remained quagmired in a pool of thoughts. The events of the last day had aged him years. He had spent a sleepless night staring at the blank wall and it showed. There was a pile of paperwork at his desk, but he couldn't bring himself to even get started.\n\nThere was a knock on his door.\n\n\"There's a Ms Penderghast here to see you.\"\n\n\"Send her in.\"\n\nSam entered his office and sat down opposite him. A small mountain of documents stood between them.\n\n\"I'm sorry for the mess,\" Ethan said without looking up. \"It's work related.\"\n\n\"How's Zoe doing?\" she asked, genuinely concerned.\n\n\"They discharged her in the morning. She told me she needs some time alone to figure things out and arrange for her husband's funeral. I don't know where she is.\"\n\n\"Do you need some time alone too?\" she asked. \"I can always meet you later.\"\n\n\"No, please. Stay. Talking to you yesterday made me feel much better.\"\n\n\"How about the two of us get away from it all for some time?\" Samantha suggested. \"I'm sure you have a few vacation days you can use.\"\n\nHe had barely nodding when she announced her idea. Oddly enough, Ethan didn't reject it straight away like he would have earlier.\n\n\"Why not?\" he reasoned. He was at the juncture of his life where he had no more bridges to burn, but one significant bridge to mend.\n\nSo he and Sam made plans to rent a car and drive up to his home town of Greenville.\n\n<p align=\"center\">* *</p>\n\n\"So this is where you grew up?\" Sam asked, looking at the clusters of houses along the main road.\n\n\"We're not actually in the main town, but yes,\" said Ethan, taking one hand off the wheel to point. \"That's my high school. They've renovated it now.\"\n\nShe raised her camera and took a quick snap. The small suburban style houses were a refreshing change from the rows of apartment complexes back in the city.\n\n\"I must say, this is not what I imagined when you mentioned 'a small town upstate'. Damn, I wish I had this department store in Soho.\"\n\n\"Believe it or not, ten years ago, it was your quintessential small town.\"\n\n\"What happened? Did someone find gold?\" Sam laughed.\n\n\"No, but my sister took it upon herself to scale up every small family owned business. People come from nearby towns to do their shopping here.\"\n\n\"Your sister. Are the two of you close?\"\n\n\"We haven't met in ten years. I've not visited Greenville and she's never dropped in on me when she's in the city. A couple of awkward phone calls a year is the extent of our relationships.\"\n\n\"Wow, I'm so sorry to hear that.\"\n\n\"We had a falling out about Zoe and that's when it started. Val and I actually used to be tight before that.\"\n\n\"Do your parents live here too?\" she asked. Ethan had never been forthcoming about his family and Samantha had never been one to pry, but he was different now.\n\n\"My Dad, yes. One of the main reasons my sister stays here is to take care of him. My Mom died of ovarian cancer when I was seventeen.\"\n\nSam took a few more pictures until Ethan drove up the gravelled approach to a grey two-storey house. It looked recently painted and considerable bigger than those down the street. He shut the engine and waited. She looked at him curiously to see him taking a deep breath to steady his nerves. Instinctively, she put a comforting palm on his shoulder.\n\n\"One step at a time. We can do this together.\"\n\nShe helped him out. They walked past an open garage. Sam counted a Maserati, a Jaguar and a Bentley among several other sleek models she didn't recognise.\n\n\"What does your sister do again?\"\n\n\"Entrepreneur.\"\n\nBoth of them turned around to see a woman in her early thirties with her hands on her waist and a lop-sided grin.\n\n\"Although if you want an official title, I'll have to say CEO.\"\n\nFor a few seconds, Ethan simply stared into her eyes. She looked so different than he remembered. Ten years had added a heady dose of stature and chutzpah. Underneath it, he wondered if she was still the same person.\n\nWith some prodding from Sam, he inched across the gap between him and his sister. Physically, it was a few feet. Emotionally, it was a canyon. Valerie waited patiently on the other side.\n\nFinally, he was close enough to see her blue eyes peering up at him. All of a sudden, she threw her arms around him and engulfed her brother in a fierce hug. Her face nuzzled against the front of his shirt.\n\n\"Welcome back, Ethan. Welcome home.\"\n\n<p align=\"center\">* *</p>\n\n\"This is a pleasant surprise. You didn't tell me you were seeing someone else.\"\n\n\"Aren't you going to introduce us?\" Sam nudged.\n\n\"Right, Val, this is my friend, Sam. Sam, you already know about my sister.\"\n\n\"It's a pleasure,\" said Sam shaking her hand. \"Ethan's told me about you.\"\n\n\"Nothing good, I imagine.\"\n\nSam looked perplexed for a few moments before Valerie playfully punched her brother's arm.\n\n\"I remember how you would tell me every tiny detail of your dates with Zoe, and not a word about Sam?\"\n\nEthan and Samantha stiffened at the last sentence. Sensing a raw nerve, Val hastily ushered them to the front door.\n\n\"I painted the old place. It looks better, right?\"\n\nHe nodded.\n\n\"So you're a CEO,\" Sam started. \"What does your company do?\"\n\n\"Venture capital. You may have heard of Cole and Greer PLC.\"\n\n\"Heard of it?\" gasped Sam. \"It's impossible to miss it on the Wall Street Journal. How come you stay all the way out here instead of the city?\"\n\n\"All of my work can be handled over the phone and video conference. I have my own private office here to monitor stocks if I really need to. Besides, I do drop by Manhattan once a month or so to let the board know I'm still alive.\"\n\nA breeze rippled through the morning air and blew against them. Valerie closed her eyes and imbibed the blissful feel of the country air against her skin.\n\n\"There are things you can't get in that concrete jungle, things more important than money. I like it here.\"\n\n\"Ethan told me earlier about how much you did for this town.\"\n\n\"It's a personal project of mine. I invest in small businesses across the country. I give them the capital they need to take themselves to the next level. There are plenty of success stories there, if you care for them.\"\n\n\"She owns a majority stake in... well just about every business in this town,\" Ethan added.\n\n\"That's enough about me. Let's meet the rest of the family.\"\n\n\"Ethan!\" announced a shrill voice he hadn't heard in ages. He saw a vaguely familiar woman come to the door to greet them.\n\n\"Sarah. I didn't recognise you for a second there,\" exclaimed Ethan, wrapping his arms around her. \"Sam, meet Sarah Gardner. She lived down the street.\"\n\n\"You missed the part about being the only one allowed into her treehouse,\" Val muttered. Sarah laughed it off and planted a quick peck on her lips.\n\n\"So how long have you been married?\" Sam asked.\n\n\"Five years next month,\" Valerie beamed. \"We even have an IVF baby. Where is Colin?\"\n\n\"He's asleep on his grandpa's lap, last I checked. We'll wake him up soon. Oh my God! I can't believe you're actually here, Ethan. I thought Val was pulling my leg when she told me.\"\n\nThey sat down in the cosy living room. Valerie beckoned to the maid to get some food.\n\n\"Sam, what do you do?\"\n\n\"I'm a photographer. Right now I'm with no magazine or paper in particular.\"\n\n\"Show them the magazine thing,\" Ethan said with a chuckle. Sam's glare did away with that idea.\n\n\"Do you stay in the city as well, Sam?\"\n\n\"Yeah.\"\n\n\"Colin's about to wake up,\" said a rough voice from the next room. \"Do one of you want to...\"\n\nThe sentence remained incomplete. Ethan got up and turned to face his father after ten years. His hair had turned almost completely white, but he lost none of his rugged skin underneath. Despite being on the wrong side of sixty, he still exercised regularly. His hulking frame obscured the doorway.\n\n\"I'll go check on Colin,\" said Sarah quickly and disappeared.\n\n\"I'll get the rest of the stuff from the car,\" started Sam, but Ethan held a hand out to stop her. His father's gaze darted to her and then back at Ethan.\n\nArthur Cole had spent his life on the police force at Greenville. On rare occasions, his life had been endangered in the line of duty.\n\nYet he was never so scared as he was facing his estranged son.\n\n\"It's nice to see you, Ethan. It's been so long since I last did.\"\n\nHe didn't know how to respond. Arthur read his silence and nodded gently.\n\n\"I know it's a lot to process. Take your time and tell me when you're ready. The only thing I want you to know is I'm ashamed of everything I put you and your sister through. I'd give my life to take it all back.\"\n\nThere was a lot that Ethan was tempted to say to his martinet father. Memories of welts and bruises, of sleeping in the cold porch all night, of not having dinner when he came down a minute late for it. They all reared their heads inside him.\n\nValerie stepped in and held Ethan's hand, guiding him towards his father. There was no hug, simply a frosty stare and a forced handshake.\n\nIt wasn't much, yet it was a start.\n\n<p align=\"center\">* *</p>\n\n\"You'll never guess where you're staying,\" said Val gleefully. \"The Woodford Inn.\"\n\nShe pointed towards the imposing building on the edge of town. Ethan gaped in awe at how the derelict nineteenth century house had been transformed. There was a fresh coat of paint and the windows had been replaced. It looked nothing like the haunted house from his childhood memories.\n\n\"No way! The old Woodford Inn. Nobody's stayed there for forty years.\"\n\n\"Well, I own it now, so I had it spruced up. It's got everything -- a jacuzzi, a four poster bed, a chef, a maid... the works.\"\n\n\"Quite a change from what I remember of it.\"\n\n\"Remember all the trouble we got into in that place,\" Valerie giggled.\n\n\"Only too well.\"\n\nVal held him by the shoulders and leaned against him.\n\n\"Admit it. You've missed this town. Even if it is just a tiny bit.\"\n\nSamantha stood a fair distance behind them taking snaps of the Colonial era building. Valerie turned to look her.\n\n\"If you don't mind me asking, Ethan, how serious are the two of you?\"\n\n\"She's a friend who's helped me deal with a lot. That's where we're comfortable and that's where we're at right now.\"\n\n\"Isn't it too soon after Zoe?\"\n\n\"She's not another Zoe. We're not a relationship.\"\n\n\"Are you sure she sees it the same way? She came all the way out here with you. That says a lot.\"\n\nEthan stopped and held his sister's hand to his chest.\n\n\"Valerie, you've never been anything but blunt and that's why I'm asking you this. All those years back, how did you know that Zoe and I would eventually break up?\"\n\n\"You were both too young. You had not seen enough of the world to commit to someone. That, and only that, was why I took Dad's side.\"\n\n\"And you were right,\" he cursed, kicking a rock.\n\n\"No I wasn't. You had ten years of a wonderful marriage. Do you know how many people go their whole lives without even that? For once, stop thinking about what went wrong and thank your stars for what you had.\"",
        "Sam and Ethan settled into the main bedroom. He had a hot shower and shaved himself. There was a party of sorts at his sister's place later on. Half the town was coming, if for nothing else than to see the return of the prodigal son.\n\nThere was a knock on the door. Valerie stood with a basket of muffins in her hand.\n\n\"Just like old times, eh Ethan?\"\n\n\"True,\" he admitted. \"Dad sends me to bed without dinner and Mom smuggles something upstairs through you once he's too drunk to notice.\"\n\n\"They're from Andie's Bakery down the street. You remember, right? Your favourite blueberry muffins.\"\n\n\"Sam, you have got to try these,\" Ethan said, hurriedly wolfing one down. \"Exactly like I remember it.\"\n\n\"They're complimentary. My guests get special treatment in this town. My brother, well, you can imagine. You can basically get anything you want for free while you're here.\"\n\n\"I'd like to visit Andie's Bakery later.\"\n\n\"They get orders from all over the state now. Big orders, like for weddings and conventions.\"\n\n\"You're kidding me, right? That small little patisserie.\"\n\n\"It's much bigger now,\" Val laughed. \"I'm a silent partner, after all.\"\n\n\"I'm special ordering a bunch of these to New York city,\" piped up Samantha. \"I have a party coming up soon. Could you get me their card?\"\n\n\"Speaking of parties, we're getting late for one. Come on, hurry up.\"\n\nWithin half an hour, Sam and Ethan stood wide-eyed in the midst of a throng of eager faces. He smiled and pretended to recognise everyone who shook hands with him. All of his classmates who were in town showed up, dismayed he didn't remember every last detail of their school lives.\n\nEthan had taken great pains to cut himself completely off from his past and it showed.\n\nHe made his excuses to the latest few people who were aghast he didn't remember them and went off in search of Valerie or Samantha. He spotted his sister mobbed by a group of pre-pubescent kids. Smiling, he walked to the table to get a better look at the game of three-card monte in progress.\n\n\"See if you can find the Queen,\" she said, swapping three face-down cards with great speed. The kids watched her hands with awe while trying to keep track of where their card was. Val finally finished and looked up.\n\n\"Which one is the Queen?\"\n\nThere was a buzz among the children as they compared their guesses. Ethan chuckled before he spoke.\n\n\"None of them. The Queen is in your pocket.\"\n\n\"Hey!\" she looked up with mock anger written on her face. \"You weren't playing.\"\n\n\"It's hardly a game if no one can win.\"\n\n\"There isn't any money at play here. I'm doing it for kicks.\"\n\n\"Back in high school, you made quite a lot of money peddling this trick to gullible city slickers.\"\n\n\"We all have to start somewhere,\" she laughed. \"C'mon, I'll introduce you to my friends.\"\n\nHe took a glance backwards to see Samantha absorbed in conversation with a group of college-aged girls. She had her camera out and was showing them the finer workings of it.\n\nAfter an hour of being paraded by his sister, Ethan grabbed a can of chilled Budweiser and headed for the front porch. Arthur sat in his rocking chair with the baby in his lap and a glass in his hand.\n\n\"Before you ask, it's fruit beer. No alcohol.\"\n\n\"Cheers,\" said Ethan and sat down beside him. They surveyed the milling crowd of chattering people in front of them.\n\n\"Beautiful, isn't he?\" Arthur said, lifting the sleeping baby. Ethan softly caressed his nephew's pale scalp and nodded.\n\n\"You've still not made up your mind whether or not to accept my apology, have you, son?\"\n\nEthan didn't answer. He took a sip of beer instead.\n\n\"It's okay. All I can hope for is that you will in time. It's my greatest regret that your mother never got to see this side of me. She died knowing me only as the monster I was.\"\n\n\"I'm glad you turned your life around. I really am.\"\n\n\"It took me so much therapy to understand such a simple truth. That I was hurting my own family, the people I should care for the most.\"\n\n\"You're a pacifist now?\"\n\n\"Let's just say I don't even allow your sister to put a bug zapper in the yard.\"\n\nEthan laughed and drank some more beer.\n\n\"Don't think I've forgotten how to hurt people, Ethan. If someone dares lay a finger on you, your sister, Sarah or even little Colin here, I swear on your mother's grave I will bring down the wrath of God on them. You hurt for your family, you don't hurt them.\"\n\nThe noise made little Colin stir. He cried softly. Arthur rocked him gently until he was asleep again.\n\n\"Tell me about Sam. Does she make you happy?\"\n\n\"She does. She really does.\"\n\n\"That's enough for me then. I'm not going to make the same mistake I made with you and Zoe. The two of you have my blessing.\"\n\nThe party dwindled to a close. Samantha had made quite an impression among the townies. Everybody who passed shook hands with her and Ethan and invited them for dinner. They smiled until their jaws ached. Finally, Valerie had her chauffeur drop them off at the Woodford Inn. Too tired to eat any more, they went to sleep.\n\n\"Wake up.\"\n\nSam scrunched her face without opening her eyes. Ethan shook her again.\n\n\"It isn't even morning,\" she groaned, pulling the duvet over her face. Undeterred, he yanked it back down and shook her awake.\n\n\"What do you have against sleep?\" she grumbled.\n\n\"There's something I want you to see,\" he said. \"It used to be my favourite thing about this place.\"\n\nSamantha jolted out of her semi-sleepy trance to see Ethan holding the window open. He stepped out of it onto a lower section of the roof and stuck his hand back in to help her.\n\n\"Careful now. Some of these tiles are loose.\"\n\nAfter some effort, both of them sat side by side staring at the horizon. There was the faintest flicker of red where the rising sun would make an appearance. Their view was unhindered and lovingly framed by two hills.\n\n\"You're about to see the most beautiful thing in this town.\"\n\nHe turned to see Samantha climbing back inside through the window. She reappeared a few minutes later clutching her camera.\n\n\"Ethan, have you ever taken a selfie using a DSLR? Well, we're about to take the most high resolution selfie ever.\"\n\nThey waited until part of the sun had risen. The glowing semi-circle in the distance was shrouded in clouds. Shafts of light perforated the wisps and lit up the sky. The redness smeared over the horizon melded seamlessly into the ephemeral mauve hue separating night and day. Sam took a few seconds to admire the kaleidoscope of colours before taking a photo. She turned away from the sun and held out the camera with the lens facing her.\n\n\"Come here, Ethan.\"\n\nBefore he could react, her lips planted a wet kiss on his cheek and the camera clicked. Her estimation was perfect. The light from the rising sun painted their faces. Even the sliver of a gap between them glowed with sunlight.\n\n\"This is not going on Instagram,\" she said happily. \"This is only for us.\"\n\nEthan felt his cheek where her lips had just been. His fingers felt the residual wetness. When her lips had been in contact with him, the sunrise suddenly seemed so utterly banal.\n\n\"Ethan, hello? I said, do you want to get it framed?\"\n\nHe didn't answer her question. His hand around her shoulder drew her closer and he locked his lips onto hers. He kissed her deeply and lovingly, exploring her mouth and savouring the intimacy. Samantha seemed too stunned to react to his oral assault. When he detached his lips, she looked dazed and her eyes were glassy.\n\n\"I'm sorry, Sam,\" Ethan said. \"I don't know what came over me. I shouldn't have.\"\n\n\"Fuck that,\" she replied and mashed her lips into his. Her tongue was aggressive, frothing and churning the inside of his mouth. She wrapped her arms around his neck and leaned into the kiss. Their eyes were closed. Her tongue danced with his, then sparred in his mouth.\n\nTheir lips detached and their eyes stared deep into each other, trying to find the meaning of what transpired.\n\n\"Not now,\" Sam whispered. He slung his hand over her shoulder and went back to admiring the sunrise.\n\n<p align=\"center\">* *</p>\n\nThe next day went by in a blur of laughter and colour. It was finally time for Ethan to once again leave home. Valerie took him aside before he left.\n\n\"This is my personal number, Ethan. Feel free to call me at any time for anything. Whatever you need, I will do everything in my power to give you. No questions asked.\"\n\nHe hugged his sister one last time before getting into the car. Sam was playing with little Colin's fingers out of the passenger side window.\n\n\"Goodbye, Sam. Come again real soon,\" hollered Sarah.\n\n\"You can count on it,\" she replied.\n\nIt was evening and they were nearing the city limits. It was Samantha's turn to drive. She abruptly took a detour to a hillock.\n\n\"Where are we going?\"\n\n\"To take some pictures, silly. It's been a while since I've tried trick photography.\"\n\nReluctantly, Ethan was dragged out of the car and stood up on a boulder. He held his hand out and Sam angled her lens to make him appear to hold a ball of fire, which was the setting sun. He was forced into a pose where he appeared to lift a distant hill. She had more in store for him, but he sullenly refused and went back to the car.\n\nFireflies lit up the air, specks of light fleetingly held by the near darkness. It was a mirror to the myriad stars strewn over the black tapestry of night above him. The crimson tinge of the setting sun fighting for its last bit of relevance for the day segued into the deepening twilight. The aria of homecoming birds and insects, the dim silver of the half moon, all of it and none of it made the moment special. Ethan's eyes were locked on the carefree spirit taking pictures of nature in front of him.\n\nTo think she could put up such a brave front despite what she had been through. He didn't know what. All he discerned from her parents was that it was traumatic. That was all he needed to know.\n\nProvidentially, his phone began to ring. He looked at the caller ID and furrowed his brow. It was Samantha's father.\n\n\"Mr Penderghast?\"\n\n\"Is Samantha with you?\"\n\nEthan knew something was wrong. The booming voice from the birthday wavered unseemly with dread.\n\n\"She's taking pictures at the moment. Should I call her?\"\n\n\"No don't. I can't bear to talk to her now. Ethan, I have to ask you to do something very hard. I'm sorry to put you through this.\"\n\n\"What is it?\"\n\n\"I have something I need you to tell Samantha. I'm not brave enough to do it myself.\"\n\nThere was a moment of silence punctuated by a barely audible yes. Ethan hardened himself for the worst.\n\n\"Tell Sam,\" the voice quivered even more. \"Tell her... her brother won't be coming home this time.\"\n\nThe rest of it was lost in heaving sobs. Ethan dropped the call and let his hand slump to his side. A long sigh escaped his lips. His mind flashed back to the party at her brother's place. He never had the chance to meet Samantha's brother, but he could tell he was loved and would be missed.\n\nHe barely knew her brother, yet he knew there was aching void in the Penderghast household now.\n\n\"Ethan, just one more pic and we can head back to the city.\"\n\nHis face turned to the contagious cheerfulness bubbling outside the window. Sam looked so happy and content with her life. There was a camera in her hand and all her pearly whites were visible between her lips.\n\n\"C'mon, Ethan, don't be a spoil-sport.\"\n\nHe couldn't bring himself to look at her. She put the camera down and craned her neck in through the window.\n\n\"What's wrong?\" she asked softly.\n\nCurse this burden that her father had given him. He was about to take away her smile. He had to be there and bear witness to the broad grin disappear from her face only to be replaced by something far harder to watch.\n\nQuietly, he opened the passenger side door and embraced her. He held Sam's bewildered face in his arms and closed his eyes.\n\nEthan wasn't a religious man, but he prayed for strength. Strength to see his friend cry.\n\n<p align=\"center\">* *</p>\n\nA man went to war for his country. A coffin wrapped in a flag was all that was left. Major James Penderghast had died in battle. The mission itself turned out to be a strategic success which would undoubtedly save many lives in the future.\n\nIt was poor succour for those left behind. The army had a decisive victory. A man was dead. Brother, son, husband, father -- all four wiped out in a hail of bullets bravely defending his country.\n\nTruly, the world was a zero-sum game. The cost was too high.\n\nSamantha saw the sharply dressed officers carrying her brother's coffin. All her life, she had imagined this scene in her nightmares. Now, she didn't have the luxury of waking up. Her bleary eyes turned to Thalia, desperately sniffling into a handkerchief.\n\nThe coffin was lowered to its final resting place. Guns were raised and prepared to fire.\n\n\"Mommy, why are they putting Daddy into the ground?\"\n\nLittle Lana held her mother's skirt and tugged at it while she asked.\n\n\"They're burying him, sweetheart,\" Thalia said, struggling to keep her voice steady.\n\n\"They can't bury him. He has to protect us. Daddy promised me that he would protect all of us.\"\n\nThalia lifted Lana into her arms and held her tightly to her chest. There was a yawning hole in her heart and she needed to feel her daughter's warmth, even if just to fool herself that it could be filled. Fat droplets of tears rolled off her face onto Lana.\n\n\"Stop burying, Daddy. Tell them to stop burying him. He promised he would protect us. He promised he would be there for my birthday. He has to be there,\" Lana wailed piteously.\n\nNot a single eye remained dry in the assembled crowd. Friends and fellow officers alike felt the chill of their own mortality. All his medals and commendations would now pass into memory. Memory, that damn crazy fool that tries to hold on to those who pass.\n\nSam stood a short distance away. Her heart bled and her eyes filled to the brim, but she had no one left to cry to. She couldn't bring herself to shed those tears, James would have never wanted that. Her family had already lost one pillar of support and she couldn't have them see another break down.\n\nFor the first time in her life, Samantha wanted to fall apart and let it all out. She reminded herself she had to be strong for her family now and she sucked it all in to that place inside her already overwhelmed with grief.\n\nHer body was almost too numb to feel the palm on her shoulder. She turned around slowly to see Ethan standing behind her a simple smile of understanding. She would not know it, but he was simply paying her back for the comfort and solace she had given him over the past year.\n\nThe dam of fortitude finally gave way. Sam grabbed his coat and pulled him to her. She buried her face in the front of his shirt and cried like she had never cried before.\n\nIn that moment, Samantha Penderghast realised she still had a shoulder to cry on.\n\nThe creator could not be so unkind as to take that away from her as well.\n\n<p align=\"center\">* *</p>\n\nEthan drove her to her place after the funeral. She spent the entire ride clutching him and crying softly. It was the first time he had seen this side of her and it was agonising to watch. All throughout, her face looked bereft of happiness and tears marked ugly rivulets on her mascara.\n\nHer bosom heaved with each sob. Some made it only as far as her throat.\n\nEthan draped his arm around her, holding her tightly. Samantha looked up at him, her eyes shimmering with tears.\n\n\"Thanks, Ethan.\"\n\n\"You're welcome.\"\n\n\"There's something I want you to know. About that night we kissed-\"\n\n\"Please, you don't have to think of that right now. We'll talk about it some other time.\"\n\n\"Ethan,\" she tapped her fist against his chest. \"Ethan, you're such a sweet guy. You've never tried to take advantage of me, never tried to force me. Do you know what my one motto in life is? I never wait. The only thing constant is change. Everyday is a new adventure with new places and new people. But I've realised over the past few months that some people are worth waiting for. You're one of them.\"\n\nThey drew up the building. She got out and looked back in through the lowered window.\n\n\"Whenever you're ready to take the next step, you'll find me right here, waiting to take it with you.\"\n\nSamantha stuck her neck back in and kissed Ethan deeply. Her soft lips left a lingering aftermath on his.\n\n\"I'll see you soon, Ethan.\"\n\nHe watched her slender form all the way to the door. He let a fingertip trace the outline of his lips where hers had just been. When they touched, for the briefest moment, he felt like he could be made whole again.\n\n<p align=\"center\">* *</p>\n\nAnother day, another pile of work. Hospital life was unerringly predictable in its volume. Ethan surveyed the work in front of him, not in the least bit interested in getting started. He paced his office, trying to wrap his brain around what Samantha told him the previous night.\n\nHe touched his lips and closed his eyes, his senses remembering the kiss. The way she smelled, felt and looked was indelibly etched into him. It was ambrosia. It was the lingering after-taste he craved for a long time ahead.\n\nAs the day finally drew to a close, Ethan readied himself to go back home. He carried a burden with him, one he intended to rid himself of.\n\nWhen he reached the lobby, he found a familiar face waiting for him.\n\n\"Zoe?\"\n\nShe looked terribly aged after the events of the past few months. She wore a simple dress and skirt with an overcoat. For a few seconds, she almost looked like the woman he once came home to after a long day's work.\n\n\"I came to say goodbye, Ethan. My cousin got me a job in a private clinic in Hartford. It took a lot of soul searching, but I've made up my mind that I need to get away from all of it. I need to start over in a place where I won't be reminded of my mistakes.\"\n\nHe smiled and placed his hands on her shoulders.\n\n\"I'm happy for you. I really am.\"\n\nIt was the first time since the divorce that he had seen her face without any blemishes. Zoe looked much better this way.\n\n\"So it's really the end.\"\n\n\"It's been the end for a year now,\" Zoe said. \"We've dragged it on for far too long.\"\n\nEthan let go of her and put his hands into his trouser pocket.\n\n\"I have something I want to give you.\"\n\nHe took out a felt box and handed it to Zoe. She opened it curiously and took out a specially crafted gold pendant with a clasp.\n\n\"Open it.\"\n\nShe pressed the tiny button on the inside and the pendant parted. What she saw inside made her hold her hand over her mouth and then to her chest to stifle her emotion. On one side was a picture of her taken in St Catherine's park with the sun streaming down. Ethan smiled at her from the other.\n\n\"I had this made for you over a year ago. In fact, I was going to give it to you the day I first saw you and Milos together.\"\n\n\"You kept it all this time.\"\n\n\"I tried to throw it away, I really did. I couldn't. For better or for worse, we shared ten wonderful years together. I couldn't pretend they didn't exist.\"\n\nZoe put the pendant on and clasped it behind her neck. Her eyes looked down to hide the glistening moisture.\n\n\"Zoe?\"\n\nShe hugged him and buried her face in his shoulder. Their lips met in a kiss. She wanted to commit all of the kiss to memory, a memory she would preserve for every lonely New England night.\n\n\"I want you to make one promise to me, Ethan Cole. Can you do that?\"\n\nHe nodded.\n\n\"Promise me you will tell the next person you're in relationship with that she's the luckiest girl in the world. Promise me that you'll love her like you loved me.\"\n\nAnd with that, the woman formerly known as Zoe Moreno-Cole left. Ethan watched her receding form all the way to her cab.",
        "That was it. The anchor of hate around his neck was finally off. He took his phone out and pressed a speed dial number.\n\n\"Sam. I'm ready. I'm coming over tonight.\"\n\n<p align=\"center\">* *</p>\n\nLater that night, Ethan stepped into Sam's apartment, unsure what to expect. Scented candles were lit all over the living room. Damien finished lighting the last one.\n\n\"You lucky dog, you,\" he grinned at him. \"I'll get out of your hair.\"\n\nDamien left, not before a final barb about him being okay with bisexuals as well. Ethan cringed a little bit.\n\n\"Come in,\" said a voice from her room.\n\nEthan opened the door and saw Samantha standing by her bedside wearing nothing. The light was a dim red and a slow quartet melody played in the background.\n\nHe simply stood there gawking like an idiot. His eyes drank in her naked frame, from her perfectly shaped hips, washboard stomach, to her perky breasts. Her eyes in turn bored into him, daring him to take the next step.\n\n\"Please, come here.\"\n\nShe sat down and patted the part of the bed next to her. Her gaze followed him all the way from the door to her side. She grasped his hands and held it to her chest.\n\n\"Thalia told me you have an idea of why I'm so averse to relationships. It was during Dad's birthday party, wasn't it?\"\n\nA silent nod answered her. Sam took a deep breath.\n\n\"How much did they tell you?\"\n\n\"Enough for me to know it was something truly horrifying. That's all I needed to know.\"\n\nShe tightened her grip on his wrist.\n\n\"Do you see me, Ethan?\" she asked. \"I'm naked in my truth for you. I want you to know all that happened before we take the next step forward.\"\n\n\"You don't have to tell me. I don't want you to relive any of it.\"\n\n\"I do,\" she insisted. \"It's not fair that all of you move on and I stay stuck in the worst moment of my life. Before that happened, I was the life of the party and that's who you deserve to be with. It's going to be the hardest thing I've ever done, but I'd like to tell you what happened to me.\"\n\nEthan smiled at her and brushed a few strands of her blonde hair off her face.\n\n\"I'd be honoured to hear it.\"\n\nSamantha smiled and snuggled her naked body into him. He cradled her head against his chest as she began.\n\n\"It was three years ago. I was visiting an artist friend of mine in Barcelona...\"\n\n<p align=\"center\">* *</p>\n\nEPILOGUE\n\n\"Oh my God! You're going to propose to her.\"\n\nEven from all the way in Greenville, Valerie was unable to hide her bubbling excitement.\n\n\"Yes,\" said Ethan, sitting at the edge of Sam's bed. He shot a glance backward to see her naked form peacefully curled up among the sheets. Her first sex in years had been nothing short of virtuoso. Parts of his body he had not known to be erogenous tingled with pleasure.\n\n\"Have you thought about how you're going to pop the question?\"\n\n\"Not really.\"\n\n\"Don't you worry. I'll be in Manhattan next weekend and I'll get you reservations at Le Cirque. Leave it all to me and I promise you, she won't forget the night.\"\n\n\"Won't you be busy with your work?\"\n\n\"Nonsense,\" Val waved off. \"I can't be too busy to help my brother.\"\n\n\"I'd appreciate that.\"\n\n\"Hold on, Sarah wants to talk to you.\"\n\nThe next voice Ethan heard over the phone was breathless and shrill in equal measure.\n\n\"Ethan! Congratulations. When is the wedding? What's your venue? What are you going to name your kids? Please name the baby Lily if it's a girl. I'd love to spoil a niece named Lily Cole.\"\n\n\"Whoa! Whoa! You're a few hundred steps ahead of us right now.\"\n\n\"I'm sorry, I'm so thrilled. I'll go get Arthur. Don't hang up.\"\n\nIn their family home in Greenville, Sarah rushed across the house to get Arthur on the line. Valerie finished rocking her baby to sleep before she picked up a framed picture of herself, Ethan and their mother from when she was ten. She smiled when she saw her protective grip around Ethan.\n\n\"Mom made me promise I'd look out for you,\" she thought to herself. \"That's all you need to know.\"\n\nShe was right. There were things in her world that Ethan didn't need to know about.\n\nLike the fact that ever since Ethan called her outside the rave, distraught over the tatters of his marriage, she had quietly gone about finding all she could on Zoe and the man she had hurt her brother to be with.\n\nAlso the fact that she had made a curious business decision over a year ago to sell a major portion of the stock her firm held in an emerging minerals company. The resulting selling spree made the company's shares worthless overnight.\n\nAlso the fact that Milos Petric had invested millions in that company. Millions in securities which vaporised in an instant, leaving him as financially bankrupt as he was morally.\n\nTruly, these were things that Ethan did not need to know. "
    ],
    "authorname": "LaRascasse",
    "tags": [
        "romance",
        "photographer",
        "samantha",
        "damien",
        "love",
        "valerie",
        "trauma"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/limbo-ch-02"
}