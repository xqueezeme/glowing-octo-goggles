{
    "title": "Ashley's Special Gift",
    "pages": [
        "Author's Note: Welcome to my winter contest entry, unlike some of my past work and my last particularly nasty entry, this one is in the spirit of the season and on the fun side. For those unfamiliar with me, a disclaimer; I enjoy telling a story and building up to the heat, if you're a fan of quicker stories, this may not be for you. Anyway, enough from me, time to get to the story! Lovecraft68\n\n*\n\nI jumped at the sound of the door opening and lifting my head from Brad's shoulder, saw Ashley coming through the door.\n\n\"Hey guys!\" she exclaimed, as she removed her long coat and hung it up next to ours in the closet in the front hall.\n\n\"Damn, she drives me crazy in that outfit.\" Brad said softly from where he was sitting next to me on the couch. \n\nI'm sure many wives would be upset at their husbands for checking out a pretty girl half their age. I, on the other hand, had already been thinking the same thing. Ashley was coming home from a shift at the restaurant Brad had gotten her a job at when she moved in with us several months ago. Ashley worked the bar area and her uniform consisted of a short red skirt with black stockings and matching heels. Her long legs showed why she was on the cheerleading squad at PC and although she was small on top the tight low cut black shirt did wonders for her chest. \n\n\"Hey honey.\" I called out to her as I watched her remove her hat and shake out her long blonde hair. \"How was work?\"\n\n\"It was great!\" she said in that sometimes sickeningly cheerful tone she always spoke in. \"I got awesome tips again!\"\n\n\"I wonder why.\" Brad said, shaking his head.\n\n\"Be nice.\" I whispered as I elbowed him in the side. \n\n\"What do you mean?\" Ashley asked.\n\nShe was now standing in front of us and I had to force my gaze away from her firm young thighs that were at eye level.\n\n\"Oh, come on Ashley,\" Brad laughed, \"Why do you think you get such good tips?\"\n\n\"Well,\" she shrugged. \"I guess because I have a big smile, and I'm always friendly.\"\n\n\"Really, you think that's it?\" I asked, unable to help playing along.\n\nAshley frowned and her normally big blue eyes narrowed in concentration. Suddenly she snapped her fingers. \"I know why!\" she smiled, \"Because it's close to Christmas so everyone's in a generous mood, right?\"\n\n\"Absolutely.\" Brad said with a completely straight face. \"They see you and all they're thinking about is giving.\"\n\n\"That's right.\" Ashley laughed and as always it made me smile, \"Tis the season!\"\n\nThe two of us laughed and although technically it was more at her than with her, I felt a wave of affection for our adorable little border. She really was a sweetheart.\n\n\"Well, it's late and I have an early class tomorrow so I'm going to head on up to bed.\"\n\nLeaning forward, she gave me a kiss on the cheek, \"Good night, Trish.\"\n\n\"Night honey.\" I said softly as found myself staring down her shirt. \n\nHer tits were small, but the red bra she was wearing had them pushed up quite well and I could just imagine the cute little pink nipples beneath the material. Ashley moved to the side and gave Brad a quick kiss good night as well. I couldn't help smiling when I saw Brad's gaze also go down her shirt. As she stood up, Ashley said, \"Thanks again for getting me the job Brad, I'm making enough money that I should be able to fly out and see my folks on February vacation!\"\n\n\"Thank you Ashley,\" he said, grinning.\n\n\"For what?\" \n\n\"For making me smile.\" He told her. \"You always put me in such a good mood!\"\n\n\"I do what I can!\" she said as she turned and headed for the stairs.\n\n\"Oh, you do plenty,\" Brad said under his breath as we both watched her begin to walk up the stairs. The higher she got the more of her thighs we could see and I knew that Brad, as I was, was hoping for a view of her firm little ass. We were disappointed however, as just before she got to the top; she stopped and worrying that we would get caught looking, both turned our heads back to the television. Ashley removed her phone from her skirt and started chirping away as she took the last of the stairs and vanished down the hallway. \n\n\"Do you really think she doesn't know she's hot?\" Brad asked, turning to look at me, \"Is she really that na\u00efve?\"\n\n\"I think she is.\" I told him. \"It goes beyond na\u00efve, she's just really sweet. I'm glad she couldn't live on campus; she'd get taken advantage of in a heartbeat. That's why Bill and Kate were thrilled we said she could stay with us when he got transferred, so we could look out for her.\"\n\n\"I'm sure Bill would just love the way we perv on her sometimes.\" Brad rolled his eyes.\n\n\"Yeah well, she doesn't even know when a guy is hitting on her, so I don't think it would occur to her, we've had a few little fantasies about her.\"\n\n\"You more than me.\" He said, \"I think she's adorable, you're the one who wants to corrupt her.\"\n\n\"Just me?\" I asked, cocking my head at him.\n\n\"You're the pervert out of the two of us.\" He said, still keeping a straight face.\n\n\"So you've never thought of that long blonde hair in your hands, or those big blue eyes looking up at you?\" I leaned forward and began whispering in his ear, \"Or better yet those soft full lips, pouting and trembling as she stares at your nice big dick and I tell her to suck it?\"\n\n\"Well,\" he said quietly, \"Maybe once or twice.\"\n\n\"Imagining those little squeals while you push your cock into the tightest little pussy you've ever had.\" I sighed, \"Hell Brad, I think she may even be cherry, imagine that.\"\n\nBrad had closed his eyes and was starting to breathe heavier. I squirmed in my seat as a warm sensation began to build between my legs. Running my fingers through Brad's sandy brown hair I continued.\n\n\"I can just imagine holding her, cupping those perfect little tits and whispering in her ear that it'll be okay as you ease into her.\" I exhaled softly in his ear, \"Of course that's after I get her ready for you by sucking on her little pink clit, making her cum nice and hard, getting that sweet little pussy hot and wet for you.\"\n\n\"Hot and wet, like you're getting?\" \n\n\"Oh yeah,\" I purred, feeling my thong sticking to my now very excited pussy. \"And you'll be so fucking hard watching us.\"\n\n\"I won't just be watching.\" Brad said and turning towards me, slipped his hand under my shirt. \"I'll be sucking and playing with Ashley's tits and spreading her open for your tongue.\"\n\nHis hand had made it up to my bra and pushing his fingers under it; Brad caught my swollen nipple and gave it a squeeze.\n\n\"Hmmm,\" I cooed as his fingers lightly caressed my tit. \"And you'd need time to rest because the two of us would suck you off wouldn't we?\"\n\n\"Oh, that would be hot!\" \n\nHis sentence ended in a groan when my hand found his cock and gave it a good hard squeeze through his slacks.\n\n\"Yeah baby?\" I whispered, rubbing my hand along the length of his hard cock, \"You like that idea; sweet little Ashley on her knees next to me. I'll take you nice and deep then feed your cock to her inch by inch? Nice and slow, those soft quivering lips struggling to take you into that pretty mouth? I....\"\n\nI was cut off, by Brad sliding his hand up my skirt and directly between my legs where he began rubbing my pussy through the thin material of my thong.\n\n\"Tell me more.\" He smiled.\n\n\"More,\" I asked, my hand tightening around his cock. \"About sweet little Ashley, our best friends adorable little daughter you claim not to think about?\"\n\n\"I wasn't until you started talking about her,\" he said, but this time couldn't keep the smile from his face.\n\n\"Well I'm glad you weren't thinking of our pretty little school girl, because right now.\" I pushed his hands from me and standing up, pulled my skirt up and began shimmying out of my thong, \"I want you to take care of your naughty school teacher.\"\n\nBrad licked his lips at the sight of my smooth pussy, but pointing at the stairs said, \"What if she comes down....\"\n\nHe stopped as I put my finger to his lips.\n\n\"She never comes back downstairs. She showers and goes into her room.\" I gave him a mocking sigh, \"Of course if you're getting to be such a prude we can only fool around in the bedroom then....Ohh!\"\n\nI gasped when Brad reached out and putting his hand between my thighs slid his fingers through my wet pussy. I opened my legs wider and groaned as he shoved his fingers up inside me and found my clit with his thumb. Leaning over, I braced my hands on his shoulders and one at a time raised my legs and put my knees on his thighs. Sitting up on my knees, I began pumping my hips into his plunging fingers and moaning as he rubbed my clit in slow circles.\n\n\"Damn you're wet.\" Brad said, looking up at me, his dark eyes bright with lust, \"You are a naughty teacher aren't you?\"\n\n\"So are you.\" I replied as I began unbuttoning my white blouse, \"Fingering your wife on the couch!\"\n\nI finished and yelped when grabbing the middle of my bra, Brad yanked it down hard. My full breasts popped out of the cups and I sighed contentedly as Brad's lips immediately found my rose colored nipple. He took my other nipple between his fingers and began teasing it gently as he worked my clit. I started bucking my hips faster as his talented fingers worked me over. After twenty years of marriage, Brad knew exactly how to touch me. Between that and getting myself worked up with my impure thoughts of seducing sweet little Ashley, I could already feel my thighs trembling in anticipation of a good hard orgasm. \n\nSpeaking of hard, Brad's cock had felt damn good through his pants and I couldn't wait to get a taste of it! My breath caught as he began to thrust his fingers harder into my sopping pussy and I began breathing heavier. I closed my eyes and started grinding my hips in a circular motion, working his fingers into my pussy and moving in rhythm with his thumb. Brad was breathing hard around my nipple and reaching down I undid the buttons to his shirt and started teasing his nipples with my long fingernails. \n\nI let my mind wander imagining Ashley's mouth on my other nipple, whimpering as she sucked a woman's tit for the first time. Brad would have his hand behind her, fingering her pussy from behind and causing her to moan and struggle to focus on my tit. I began to move my hips with more urgency as I envisioned, sucking on that young pink pussy. God, it had been so long since I'd tasted a woman! \n\n\"Oh yeah, baby.\" I purred, \"Make me cum for you and I'll take such good care of that nice big cock of yours!\" \n\nBrad moaned around my tit as I squeezed his nipples between my fingers and began to bounce up and down, driving his fingers even harder into my pussy. Letting his nipples go, I slipped my shirt off and leaned my head back, enjoying the feeling of my long black hair on my bare back. Opening my eyes, I turned my head and smiled at our reflection in the mirror over the fire place. Unable to resist posing, I raised my arms over my head, taking my long hair up with them and admired the sight of me topless, with Brad's face buried in my tit and his hand busy between my thighs.\n\nMy hips twitched and I began moaning softly as my body teetered on the edge. I started to turn my head to watch Brad working my nipple, when I caught movement out of the corner of my eye. I looked back up and swore I caught a glimpse of red at the top of the stairs. Shit! This would be the one time Ashley decided to come back downstairs. I was going to tell Brad to stop, but didn't see or hear her and began to wonder if I hadn't seen anything in the first place. \n\nI slowed my rocking and was getting ready to tell Brad we needed to stop just in case, but paused when I caught sight of Ashley's blonde hair. What made me hesitate was the small amount of her hair I could see was only a couple of feet from the floor along the edge of the wall. My eyes widened when it occurred t me that our sweet little house guest was watching us! Either she wasn't so sweet after all, or maybe she was just curious, but whatever the reason, it sent a thrill through me. \n\nReaching down, I cupped Brad's chin in my hand and prying his mouth from my nipple, lifted his face until he was looking at me. I gave him a quick kiss then whispered in his ear, \"We have an audience.\"\n\n\"What do you...\"\n\n\"Turn your head to the right and look in the mirror; you can just see the top of the staircase.\"\n\nI nuzzled my face into his neck as he turned his head under the pretense of me kissing him. Brad looked towards the mirror. He turned back to me and wrapping my arms around his shoulders, I placed my face against his. \n\n'You see her?\" \n\n\"Yeah,\" he said softly, then to my dismay started to slide his fingers from inside me, \"We'll stop then in a couple of minutes go up...\"\n\n\"No,\" I hissed in his ear, grabbing his wrist. \"She's sitting there watching! Little miss innocent, may not be so innocent!\"\n\n'Or,\" he said softly, his thumb beginning to rub my sensitive clit, \"She's curious.\"\n\n\"One way or another,\" I paused and released an exaggeratedly loud moan, \"Let's give her a show.\"\n\n\"Yeah, but she's our best friends...\"\n\n\"Are you that much of a prude these days?\" I asked in his ear, punctuating my sentence by giving his earlobe a hard nip with my teeth, I continued, \"Back in the day we fucked young girls, now you don't even want one watching?\"\n\n\"Oh, I'm a prude am I?\"\n\nI yelped in surprise when Brad leaned forward so fast I would have fallen off of his lap if he hadn't gotten his arm around my waist. He pulled his fingers from my pussy and turning me sideways on his lap got his arm under my legs. Brad grunted and the muscles in his arms bulged impressively as he stood while holding me against him. Carrying me over to one of the small recliners across from the couch he put me down and said quietly, \"Let's give her a real show, and put your legs over the arms of the chair.\"\n\n\"Hmm, now that's the pervert I know and love,\" I cooed as pulling my skirt up to my hips I threw my legs over the chair, exposing my smooth glistening pussy.\n\nSmiling down at me, Brad took his shirt off then unzipping his pants pulled them off so that he was standing there in just his black boxers. Taking advantage of Brad not yet blocking my pussy from our little spy's view, I spread my pussy open.\n\n\"How's my pussy look baby?\" I asked, speaking louder than I had to as I began sliding my fingers though my wet lips.\n\n\"Good enough to eat,\" Brad also spoke loudly, giving me a wink.\n\nHe started to get to his knees, but with a smile I said, \"No fair, I want to see what I'm going to taste!\" Brad hesitated and I added in a whisper, \"Come on baby, and show Ashley your nice hard cock.\" I winked, \"Give her something to think about while she plays with herself later.\"\n\nBrad grabbed his underwear and pulled them down, allowing his dripping prick to spring free. I licked my lips at the sight of it, and then held back a laugh as turning sideways, Brad made a show of kicking his underwear off and grabbing his clothes from the floor tossed them on the chair. This move allowed him to face our curious little tenant and figuring her eyes would be glued to my husband's impressive body, I looked up at the top of the staircase. Now that I knew where to look, I easily spotted her shadow against the opposite wall and I smiled when I realized I could see just the hint of her knees where she was crouched against the edge of the wall. \n\nI hadn't seen them before and realized she had eased even closer to the top of the stairs to watch. That sent a fresh wave of heat flowing between my legs and dipping my fingers inside my aching pussy I began pumping them in and out while telling Brad, \"Come on baby, show me how much you want your wife's pretty pussy.\"\n\nAfter taking another moment to pose for Ashley with his long hard cock standing up at attention, Brad turned, dropped to his knees in front of me and with an eagerness that I loved, buried his face between my legs. \n\n\"Oh, yes!\" I moaned loudly as he shoved his tongue inside of me, \"Tongue fuck me!\"\n\nBrad obediently began moving his head back and forth, his rigid tongue sliding in and out of my oozing slit. Removing my feet from the chair, I placed them on his shoulders and cupping my heavy breasts in my hands started stroking my nipples. Between my legs Brad started sucking my pussy. I gasped at the feeling of him slurping my juices from inside of me and moaned at the loud sucking sounds he was making. I started rocking my hips as Brad's lips smacked loudly against my wet flesh and again risked a glance at the top of the stairs. \n\nAshley was still there and the thought she was watching Brad lick me caused my hips to move even faster. As much as I would have loved for Brad to take his time and tease me, I wanted to cum quickly for our audience and give her a full performance so to speak. \n\n\"Suck my clit.\" I hissed, \"Make me cum nice and hard for you!\"\n\nBrad slid his tongue up through my soft wet lips and after tracing a slow teasing circle around my swollen button, sucked it between his lips.\n\n\"Oh, yeah!\" I groaned while squeezing my nipples harder, \"Right there baby! Suck your wife's hot little pussy!\"\n\nBrad did better than that. In addition to sucking my clit as hard as he had my pussy, he brought his hand up and drove two fingers roughly inside me. I cried out in pleasure as his fingers started pumping rapidly in and out of my dripping pussy as his tongue swirled around my excited flesh. I let my head fall back on the chair and closing my eyes envisioned Ashley's wide blue eyes as she watched Brad eat me out. I wondered if her slender fingers were sliding down between her legs, then gasped as Brad began pressing his tongue hard against my clit.\n\nI started breathing heavier and pumping my hips in time with his plunging fingers, driving them deeper inside me. \n\n\"Oh, just a little more!\" I whimpered as I felt my thighs starting to shake, \"Make me cum nice and loud!\" I said in a whisper, \"Let's give....oh fuck!\"\n\nI yelped in surprise as bringing his other hand up, Brad shoved a finger hard into my ass. My cry of surprise turned into a long loud squeal of pleasure as the brief pain followed by the pleasure of Brad's finger penetrating my ass sent me over the edge. Still squeezing my nipples, I wrapped my legs around Brad's head and started thrusting my hips. Brad groaned as I ground my convulsing pussy into his swirling tongue and thrusting fingers. He began to drive his fingers harder into both my holes and the feeling of my ass and pussy contracting around them sent me into another loud wail. \n\nAt this point I wasn't making a show for Ashley; I was really cumming this hard. Although Brad and I had a damn good sex life, it had been a long time since we'd had an added thrill like this. I cried out even louder as my quivering pussy released a warm flood of my juices into Brad's fingers. The room was filled with the wet sound of Brad's fingers slamming into my sopping pussy and the small yelps I was releasing as my orgasm sent waves of pleasure through me. After letting out a long shuddering moan, I let my legs fall from Brad's shoulders and forcing myself to sit up, said \"Bring me that cock!\"\n\nNot having to be told twice, Brad immediately stood up. I started to reach for him, but Brad stopped me by reaching down and grabbing my face in his hands, gave me a kiss. I moaned at the taste of my pussy from his lips and opened my mouth to greedily suck it from his tongue as he shoved it into my mouth. I briefly imagined tasting a pussy other than my own from his lips, and even better the thought of tasting a strange woman from his cock. Pulling my face from his, I pushed him straight and grabbing his cock, tried to guide it to my mouth. Again I was stopped, but this time didn't mind as Brad had pulled away to step over to the side of the chair.\n\nHe winked down at me and with a wink of my own; I slid onto my knees on the floor. At this angle Ashley would be able to watch me suck his cock and I eagerly opened wide and took him more than halfway down. Brad moaned and reaching down started to play with my tits as I began bobbing my head, sucking his long thick shaft in and out of my mouth. I sighed I pleasure at the sensation of his hard flesh sliding between my soft lips. I opened my eyes and looked towards the staircase. Ashley was still there and I could feel my pussy already beginning to heat up at the idea that she was watching me on my knees sucking cock like the dirty little slut I loved to be. ",
        "Brad had slid a hand up behind my head and wrapping it in my long black hair started pushing and pulling, guiding my mouth along his cock. I stopped moving and looking up at him, winked. Holding my head still, Brad started fucking my mouth. He was using long slow strokes, pulling his cock all the way out to the tip before pushing his entire length back between my waiting lips. He was moaning as I pressed my tongue hard against his shaft so I could lick every inch of him as he stood there using my mouth. \n\nBrad pushed his cock all the way into my mouth until my lips were at the base of his shaft and shaking my head slowly back and forth I reached up and grabbed his balls. I could tell by the soft whimper he emitted that Brad was pretty worked up and wouldn't be able to take too much more. Sliding my mouth from his cock, I started to pump it in my fist, enjoying the sight of his shaft glistening from my wet mouth. I was also getting a kick out of showing his cock off to Ashley and wondering if she'd ever even touched one. Unable to resist an added touch, I lifted his cock and ducking my head made a show of tonguing his balls. \n\n\"Oh fuck Trish,\" he groaned, \"Goddamn you can suck cock.\"\n\n\"I'll suck you off later; right now I need this big fat cock in my pussy!\"\n\nWith his back to Ashley, Brad whispered, \"Have I told you lately how much I love you?\"\n\n\"That's not love written on your face baby,\" I told him as I stood up and placing my hands on the arm of the couch pushed my ass at him, \"And it isn't going to be what's on my face in a few minutes, now get over here and fuck me!\"\n\nBrad leaned over and after giving me a quick kiss on the cheek got behind me and grabbed my hips. In the moment before he drove his hard cock into my needy pussy, I lifted my head towards the stairs so she could see the look on my face when...\n\n\"Oh fuck yeah!\" I screamed as Brad drove his cock into me so hard I felt his balls slap against my pussy. \n\nWith no hesitation, Brad began fucking the shit out me. His fingers were digging hard into my hips and he was slamming into me with all the power in his hips. I turned my head to look behind me and moaned at the sight of the muscles in his arms and chest bulge while he hammered away on my pussy like he hadn't had it in weeks. Brad went to the gym three times a week and the results were on full display as the sweat made his muscles stick out even more. Turning my head quickly I saw the shadow had moved back a little as I was now facing her, but did catch a glimpse of yellow hair as she was still trying to watch. \n\n\"That's it baby! Fuck me!\" I called out and started rocking back and forth on my arms, driving my pussy back into his thrusting cock. \n\nI started yelping with every thrust and could feel the sweat trickling down my back as my husband continued his relentless assault on my uncomplaining pussy. Damn he hadn't fucked me this hard since the last time we...All thoughts stopped when reaching forward, Brad grabbed a handful of my hair and pulled my head back. He had forced my face up towards the stairs and I could see even more of Ashley's knees than before. I cried out in surprise as Brad slapped my ass hard and somehow began to fuck me even harder. \n\n\"Fuck me!\" I screamed, \"Fuck that pussy! Give it to me baby...oh, yes!\"\n\nBrad had begun gasping and whipping his cock out, yanked me roughly off the couch. I landed on my knees and immediately spun around my mouth open. Brad was squeezing his cock at the base and as soon as I was facing him, let out a loud cry and began pumping it. A huge spurt of cum splashed against my lips and ran down my chin and onto my tits. His second spurt went directly into my mouth. I closed it then using my tongue pushed it out to dribble down my face with the rest of it. Brad was cumming more than he had in a long time and now aiming lower succeeded in painting each of my nipples before collapsing into a sitting position on the chair. \n\n\"Goddamn.\" He panted.\n\nI couldn't resist standing and turning to face the stairs to give Ashley a look at my cum covered face and tits. After the longest pause I felt I could get away with, I grabbed my shirt and began wiping Brad's cum from me. I kept my head down as I did, resisting the urge to see if she were still watching. When I finished, I rolled the shirt into a ball and dropping it on the floor, picked my skirt up and shimmied back into it. I put Brad's shirt on over my tits and turned to see he had moved and slipped his pants back on. \n\nHe got up and putting his arms around me whispered in my ear, \"Damn that was hot.\"\n\n\"It's been a long time since we had that kind of fun.\" I paused then decided to try to bring up something I'd been trying to discuss lately, \"You know Brad, we should...\"\n\n\"Let's have more fun.\" He interrupted.\n\nPulling away from me he made to sit on the couch, when he spoke loudly \"Hey, Trish you hear something?\"\n\nTrying not to laugh I began to turn around, \"Yeah, I thought I heard something on the stairs.\"\n\n\"Shit, is it Ashley?\" he gasped.\n\nBrad did such a good job of sounding serious, I had to pause to make sure I could keep my voice steady and managed to blurt out, \"Jesus, I hope not, damn, what is she saw us?\"\n\n\"I... ah, never mind,\" he waved his hand, \"I think I just saw that dumb plant in the mirror up there, always looks like a person crouching.\"\n\nBrad put his head down and plopping down on the couch next to him I gave him a huge kiss, \"What a perfect touch!\" I laughed, \"I love it when you're twisted.\"\n\n*****\n\n\"So you think she's playing with herself thinking about us?\" I asked from the corner of the couch, where I was reading a magazine.\n\nWell more accurately, trying to concentrate on the latest issue of People. It wasn't easy as my mind kept drifting back to our hot little scene from a half hour ago.\n\n\"You already asked me that.\" Brad said from the other side of the couch where he was watching sports center. \"And I said I bet she is.\"\n\n\"That doesn't get you hot?\" \n\n\"Yes, Trish it does, but I'm not going to keep thinking about it.\"\n\n\"Sor-ry!\" I snapped, \"You back in boring mode?\"\n\nBrad sighed and didn't answer right away. I'd been teasing him a lot lately that the two of us had been too settled down for too long and should spice things by inviting a little company, as we used to refer to it, over. Figuring he was going to ignore me, as he usually did, when I brought up the subject, I started to look back down at the magazine, but stopped as he spoke.\n\n\"Actually smart-ass, I said I wasn't thinking about that. What I have been wondering is...\" he gave me a wicked grin, \"Is if she's listened outside our door or caught us in the pool.\"\n\n\"Ooh.\" I cooed, \"I hadn't thought of that.\"\n\n\"I've thought of her crouching outside our door, hearing us fucking the shit out of each other and maybe touching herself. Better yet, her bedroom window does over look the pool and you and I did a lot of late night skinny dipping this past summer.\"\n\n\"So maybe this wasn't the first time?\"\n\n\"Who knows, but I bet it's the best view she's ever gotten.\" He laughed. \n\n\"She seems so sweet though, think it's an act?\" I asked.\n\n\"Not at all. Her parents were pretty damn strict and as pretty as she is, you ever see her around guys? She's shy and nervous.\" Brad shrugged, \"But I bet she's curious and I wouldn't be surprised if she watches porn and wonders.\" He laughed, \"I think we might be the closest she's gotten.\"\n\n\"Nah,\" I waved my hand at him, \"She was dating that kid Ben for almost a year, I doubt he'd have stuck around if she hadn't given him something.\"\n\n\"I don't know, she's a hot little thing, he might have waited and was probably screwing someone else. In fact didn't she find that out?\"\n\n\"Oh, yeah.\" I nodded, \"Poor little thing was in tears for days.\" I paused then asked, \"After you acted like we'd seen her, you think she'll be embarrassed around us, or play it off?\"\n\nAgain flashing that evil little grin that I'd seen so little of in the last couple of years, he asked, \"Want to find out?\"\n\n\"What are you thinking?\" I tossed the magazine onto the end table and sat up, eagerly awaiting his answer.\n\n\"How about we call her down here, tell her we want to talk to her, right away. See how she acts.\"\n\n\"But what are we really going to talk to her about?\"\n\nGetting up, Brad walked over to the mantle over the fire place and reaching into Ashley's Christmas stocking pulled out the red envelope containing a special surprise gift we'd decided to get her as well as her parents.\n\n\"Let's give her this a little early.\"\n\n\"You're a genius!\" I laughed, clapping my hands.\n\n\"Nah, just a boring history teacher.\" He sighed, \"Who married another boring teacher.\"\n\n\"Hey, Geometry isn't boring!\" I exclaimed. \n\n\"Probably not to your male students who get to stare at your legs, but for the most part it is.\" He answered coming over and sitting next to me. Pulling his phone from his hip, he pointed at me, \"Button your sweater.\"\n\nI looked down and laughed. After our romp, I slipped a red sweater over my bare tits, rather than go upstairs and change. I'd left it mostly unbuttoned to give Brad a great view of my tits, but now began buttoning it up.\n\n\"Hey Ashley?\" Brad spoke into the phone. \"Listen can you come down here?\" he paused and smiled at me. \"Yes, it is important; we need to talk to you about something. I don't want to discuss this over the phone so come down right now okay?\"\n\nHe hung up and laughed, \"She was asking me if everything was okay and when I said we had to talk she asked about what and she was stuttering!\"\n\n\"God we're mean!\" I said, but couldn't help laughing.\n\n\"Yeah, I wonder if Bill and Kate really knew what they were doing leaving her with us.\"\n\n\"Bill and Kate never knew about our habits.\" I reminded him. \"Besides, its fun to fantasize, but we'd never try anything with Ashley.\"\n\n\"I wouldn't anyway.\" He gave me a smirk.\n\n\"You wouldn't try anything on anyone these days.\" I returned the smirk.\n\nBrad looked pissed and started to say something, but we both stopped at the sound of soft footsteps on the stairs behind us. I turned to see Ashley reach the bottom of the steps and slowly make her way over to us. I felt a momentary feeling of guilt at the deer in a head light look in her big blue eyes as approached. That feeling changed to another, more pleasant feeling as I took in what she was wearing. \n\nDespite the fact it was winter, Ashley was always saying we kept the house to warm and was wearing a pair of pink shorts that showed even more of her legs than the skirt had. The matching pink red sox t-shirt fit far to loosely to show her small tits, but something about that turned me on more than if she were showing them off. With her long blonde hair in a pony tail and her eyes wide she looked so sweet and innocent; all I could think of was what it would be like to seduce her. \n\n\"Ummm, is everything okay,\" she asked as she stood in front of us.\n\nI waited for Brad to speak, but he remained silent. Before us Ashley was rocking nervously side to side. I let my eyes wander down her long legs to her bare feet with her adorable pink little toe nails and envisioned those feet up on Brad's shoulders as he...\n\n\"Everything's fine.\" Brad spoke, cutting off my impure thoughts. \"We just asked you down because we have something for you.\" \n\n\"Oh, really?\" she asked, a big smile slowly spreading across her face.\n\nI was wondering if Brad had decided not to mess with her, but then he changed gears.\n\n\"Yeah, but first, I was wondering, were you...\" he paused and made a show of looking nervous himself. \"Uh...were you by any chance on the stairs a little while ago?\"\n\nThe color drained from her face and her eyes grew even wider, \"I...Umm, well I...left my room to shower but....\" She made an effort at a casual shrug, \"Why do you ask?\"\n\n\"Oh, well no reason...\" Brad once again did a good job of looking around awkwardly \"We...uh, well we were kind of doing something and....\"\n\nThe color returned to Ashley's face with a vengeance. In seconds she went from pale to a shade of crimson that told me, she indeed had seen everything we were doing. She started to stammer something and at that point I needed to let her off the hook.\n\n\"We were discussing your Christmas gift and were afraid you'd heard us.\" I gave her a disarming smile, \"Now, were you snooping hon?\"\n\nAshley paused, and looked closely at me and I wondered if she knew I was helping her out or thought she really hadn't been seen when she thought she had. After a moment she shook her head vigorously, causing her pony tail to shake back and forth.\n\n\"Really Trish, I only took a shower and went back into my room, I was never near the stairs.\"\n\n\"Good.\" Brad said, \"Because we wanted this to be a surprise.\"\n\nHe held the red envelope out to her and as she took it she said, \"But Christmas isn't until next weekend.\"\n\n\"I know, but when you open it you'll see why we gave it to you early.\"\n\n\"You guys are so sweet.\" She laughed as she tore open the envelope and pulled out the card, as she opened it, she continued, \"You do so much for me, you don't have to...\"\n\nShe trailed off and her eyes widened and Brad and I looked at each other and smiled, but this time not at her expense, but at the fact she we'd made her happy.\n\n\"Oh my God!\" she exclaimed, holding up the round trip ticket to Florida we'd bought her. \"I'm going to get to go see mom and dad for Christmas! Oh thank you!\"\n\nAshley came forward and all but threw herself into my arms. She hugged me so tight I gasped and kissing my cheek said, \"Oh Trish thank you!\" \n\n\"You're welcome honey.\" I replied, hugging her back. \n\nI could feel my tits pressing against hers through our clothing and turning my head, noticed Brad staring at her ass as she bent over me. Letting me go, she moved over and gave Brad a hug and now it was my turn to look at that adorable firm little ass as she planted a kiss on his cheek as well.\n\n\"Thank you Brad!\" she stood up, \"Does my Mom and Dad know?\"\n\n\"Nope.\" Brad shook his head, \"You can call them when you get down there.\"\n\n\"I...this is too much!\" she said shaking her head.\n\n\"It's okay hon,\" I told her, \"It's a gift for your folks too, we know they're still getting settled down there and didn't have the money to fly you down. So it's for all of you.\"\n\n\"Yeah, but I feel really bad taking this.\" \n\n\"Why? Brad and I asked simultaneously.\n\n\"Because you guys have already done so much for me! You offered to let me stay with you so I could go to PC when Dad got transferred, and Brad got me the job at the restaurant. Plus you guys really take care of me! I....\" she put her head down, \"I didn't get you guys anything anywhere near this nice.\"\n\n\"Don't worry about it, Ashley.\" I said then patted the couch between us.\n\nAshley took her cue and sat down next to me. It was a tight fit between us and her bare leg was pressed against my calf. Taking a moment to savor that sensation as well as just the thought of her being between us, I continued, \"You deserve this, you're a good student, you help out a lot around the house and we really like having you around.\"\n\n\"Really?\" she looked back and forth at both of us.\n\n\"Yes, you always make us smile.\" Brad told her.\n\nIn more ways than one, I resisted adding as Ashley again kissed my cheek, then Brad's \n\n\"I...thank you again!\" she exclaimed, jumping up from the couch. \"And I promise I'm going to get you guys something really nice for Christmas.\"\n\n\"Please, we don't give to get Ashley.\" Brad said.\n\n\"I know you don't, and I don't know what it is yet, but I'm going to give you guys something really special!\"\n\n\"Just keep being you and we're even okay?\" Brad said, \"Do the right things and make your folks and us proud, that's what you can do for us. Right Trish?\"\n\n\"Absolutely.\" I nodded, Or, I thought, you could take those cute little shorts off and...\n\n\"Well, I'm still going to work on something great for you guys anyway!\" Ashley looked at the ticket again and laughed, \"I'm going to go upstairs and call some of my friends and then I'm going to start digging out my bathing suits! Mom says its warm enough to go swimming down there!\"\n\nWith that, Ashley turned away and practically skipped towards the stairs. I watched as she reached them taking two at a time quickly made her way out of sight. As she did I couldn't help staring at that sweet little ass and the backs of those well toned legs. \n\n\"It really is nice to make her happy.\" Brad said.\n\n\"It is.\" I agreed, \"We haven't been that excited over a present in forever.\"\n\n\"We're older; it's different for us now. We get what we want all year.\"\n\nI looked at him and thought that no; we hadn't gotten what we really wanted in quite awhile. At least not what I wanted, although I was pretty sure Brad wanted it too and was just feigning he didn't care. My gaze wandered over to the Christmas tree and the presents we had under there both for each other and some friends as well as a few small things for Ashley. I heard her voice in my head exclaiming she wanted to get us something special. What could Brad and I get for each other that could be that special. Turning back to see he was watching me I said softly,\n\n\"You know Brad, I just thought of what I'd really like for Christmas, a perfect gift.\"\n\n\"Really?\" he asked, \"You said you didn't have anything in mind, when I asked.\"\n\n\"Like I said, it really just came to me and...\" I gave him an enticing smile, \"I think you'd enjoy it as well.\"\n\n\"Oh?\" he smiled, \"Something from the Adam and Eve catalog?\"\n\n\"Nope.\" I shook my head, \"Even more fun.\"\n\n\"Well, you going to tell me?\"\n\nSliding over to him, I placed my lips to his ear and whispered, \"Brad, baby, I want a woman for Christmas.\"\n\n*****\n\n\"This again?\" Brad asked, pulling away from me. \"Christ Trish, we've been over this again and again and decided that...\"\n\n\"You decided.\" I pointed at him. \"You decided that after eighteen years of bringing another woman into our bed for a treat, one close call and you...\"\n\n\"Close call?\" He put his hands up, \"That's putting it mildly. Shit Trish, that girl you set us up to meet on Craig's list was one of my fucking students when she was in high school!\"\n\n\"I know,\" I put my hands up as well, \"I teach at the same school remember? In fact I recognized her first when we were walking up to the front of the motel.\"\n\n\"And she recognized us.\" He reminded me. \"She came over and asked how we were doing\" he rolled his eyes, \"Mr. and Mrs. Adams how are you?\"\n\n\"But she didn't realize we were the couple coming to meet her and I'm sure she bought our story that we were picking up some friends from out of town.\"\n\n\"Did she?\" he shook his head.\n\n\"We sat there in the car like we were waiting for someone and she was doing the same thing. You got two texts from her asking if we were showing before I just decided to drive off.\"\n\n\"And I texted we were running late and when we pulled out and took off, she was reading a book in her car she wasn't even looking. Hell Brad, you act like we were caught red handed.\"\n\n\"If we hadn't been late and had already been in the motel room, we fucking would have.\" He snapped. \n\n\"But it didn't happen and....\"\n\n\"But it could have.\" He said, lowering his voice. \"Trish we're high school teachers. A lot of our students are eighteen year old girls. Can you imagine what would happen to us if we were caught playing with one, even if she wasn't our student? It would be our jobs.\" He sighed, \"In fact ever since that happened all I can think of is how it hadn't happened before. Half those girls are college students and Rhode Island is a small state.\"\n\n\"Then we'll go to clubs.\" I suggested. \"If we recognize the girl we don't go near her.\"\n\n\"You remember every single student you've had in the last few years?\" he asked, \"I sure as hell don't.\"\n\n\"What, you think we've taught every girl under twenty five in the state, Brad?\"",
        "\"No, it's just...it was a wakeup call Trish. Back when we were messing around in college with other girls it was no big deal, we were a couple of partiers and you were into both. When we got out of school and had internships, we bounced around and weren't teaching kids anywhere near our taste shall we say.\"\n\n\"Then we'll go older.\" I shrugged. \"We both like playing with younger girls, but we can find one our age.\"\n\n\"How, you want to walk into swingers clubs or start advertising.\" He laughed. \"Then we'll get a woman that says \"hey aren't you my daughter's history teacher?\"\n\n\"And we'll ask her what she's doing at that club?\" I laughed.\n\n\"It won't be her job I'm sure.\"\n\n\"Then we'll go away for a few days and find one.\"\n\n\"Not every state is as loose as this one, with indoor prostitution laws. The girls in the other states are literally street walkers.\"\n\n\"Not in the clubs. Come on Brad! We used to have so much fun!\"\n\n\"Sorry I'm not enough to satisfy you.\" He waved his hand disgustedly.\n\n\"Oh, please. You know you keep me happy. We had another guy come on and play with me a couple of times back in college, but since then it's all women.\" Putting my hand in his lap, I squeezed his cock. \"You have all the cock I need honey, but goddamn, I'm craving pussy!\"\n\nHe started to speak, but I kept going, \"And our rule is we only play together. So you know I'll never try to find one alone Brad, and I love to see another woman with you and I love that look on your face when you watch me lick pussy! It was our special secret, and its not like we did it all the time, it was maybe three or four time s a year and...\" I shrugged, \"I'll make a deal with you, how about once a year around Christmas! A special gift!\"\n\n\"If you can settle for once a year, you can settle for not at all.\" He said quietly. \"Trish we have careers and don't forget that scare we had after that woman in Florida when I got that rash.\"\n\n\"It ended up being jock itch from you jogging all the time.\" I rolled my eyes.\n\n\"But we thought it was something else. It's hard to trust.....\"\n\n\"Stop being an ass Brad!\" I yelled at him, \"At least stop acting like it's just me.\"\n\n\"What do you mean?\" He asked, \"I...\"\n\n\"Just admit you want another fucking woman!\" I yelled, getting tired of his excuses. \"You know damn well you want one so don't put it all on me!\"\n\n\"Fine, I'd love to!\" He yelled back, \"I would love to be able to fuck around with a hot young girl, but it's not worth the risk!\"\n\n\"I'm not worth the risk?\" I asked, \"You don't think I'm important anymore?\" \n\n\"You are, another woman isn't!\" standing up quickly, he looked down at me. \"When we had that close call, you agreed it was a sign and we needed to stop.\"\n\n\"Oh, and you've never changed your mind about anything?\" I demanded. \"You want it and you know it!\"\n\n\"Can't always have what we want Trish.\" He said, \"This conversation's over.\" With a disgusted sigh he added, \"Christ you know how to ruin a night, maybe I really am just not enough for you.\"\n\nHe hadn't said that angrily and as he walked away, I felt a stab of regret that I'd pushed. Brad and I had a great marriage and an amazing sex life. Many women couldn't claim either of those let alone both. With a sigh, I sat back on the couch and thought that maybe he was right; it was time to grow up and settle down. I looked back at the tree and longed for the days when Brad and I would un-wrap a different kind of gift together. \n\n*****\n\nI jerked awake at the sound of a knock on the door and turning, looked at the clock on the nightstand. It was just after nine. I sat up on the bed and rolled my eyes as my I-pad fell off of my chest onto the bed. I'd come upstairs after my argument with Brad and tried to do some work on the last test I was giving my students before Christmas break. Between being physically relaxed from our hot romp in the living room, then getting emotional after our fight, it had taken its toll and I'd apparently dozed off. \n\nThe knock game again and I called out, \"Come in.\"\n\nThe door opened and Ashley entered. She was still wearing the shorts and t-shirt from earlier, but now her long blonde hair was down. Also like earlier, she looked nervous. \n\n\"Hey hon, everything okay?\" I asked.\n\n'Umm, well I was wondering if I could talk to you about something.\"\n\n\"Of course.\" I said and sliding over to the side of the bed, patted it. \"Come on over.\"\n\nAshley nodded and sitting down next to me looked down at the floor and began playing with her hair.\n\n\"Do you know where Brad is?\" I asked.\n\n\"I was just downstairs. He's in his office working, so I figured I would talk to you while he was busy.\" She sighed and went to put the piece of hair into her mouth.\n\nJust as I'd always seen her mother do, I reached out and pulled the hair from her mouth and asked \"Is everything okay, Ashley?\"\n\n\"I...I kind of wanted to ask you that.\" She said softly.\n\n\"What do you mean?\"\n\nAshley turned slightly so she was facing me and after taking a deep breath, began speaking.\n\n\"After I went upstairs and called a couple of friends I was going to study and remembered I left my I-Pod downstairs.\"\n\n\"Okay.\" I said as she paused.\n\n\"Well I started to head downstairs and I heard you guys fighting.\"\n\n\"Oh.\" I shrugged, \"Well sorry you heard that, but everyone fights hon.\" I laughed, \"Sometimes in the summer we could hear your mom yelling at your dad whenever he tried to fix something and made it worse.\"\n\n\"Yeah I know.\" She gave me a surprisingly serious look and putting her hand on my knee continued, \"Trish, you and Brad really mean a lot to me and well...it wasn't that you were fighting, but what you were fighting about.\"\n\nI felt a twisting feeling in my stomach as I remembered the topic of our argument. \"You sat and listened?\" I asked.\n\n\"I did.\" She put her head down.\n\n\"So you heard what it was about?\" Oh, great. How the hell was I going to explain this one?\n\n\"I heard you yelling about another woman.\" Ashley gave my knee a squeeze. \"Brad's cheating on you isn't he?\"\n\n\"Of course not!\" I exclaimed, relieved this wasn't what I'd thought.\n\n\"You don't have to cover for him.\" she said, \"I heard you tell him to admit he wanted another woman and he....\" Her eyes started to fill up, \"He told you he wanted to f...\" She blushed, \"Have sex with a hot young girl.\" \n\n\"Oh.\" I paused, trying to think of a way to answer her and she went on.\n\n\"There's really not another way to take that Trish. I...I'm really upset, you and Brad seem so happy and I always thought he was such a good guy! But he...\" she swallowed hard and a single tear rolled down her cheek, \"He's hurting you!\"\n\n\"Oh, honey,\" I reached out and wiped the tear from her cheek, \"He's not, he really is a good man. We're very happy together, we just...\"\n\n\"Then what was he talking about?\" she put her hands up, \"I heard you word for word, Trish, you told him to admit it and he did! You're just covering up for him!\"\n\nI frowned and looked down at the floor. Replaying the argument in my head, I realized that the only time we had been raising our voices was pretty much the part she's heard. Ashley hadn't heard the initial part. At first I thought that was a lucky break, but now she was convinced Brad was cheating. If she said anything to him, he would deny it as I was, but what if she said something to her parents? \n\nI looked back up to see she was looking at me and there were a couple more tears on her cheeks. I was touched that she cared enough about us that this would upset her and wanted to assure her we were okay, but how? She was right; if I'd heard that part I'd assume the same thing. \n\n\"Do you know who she is?\" Ashley asked, \"I heard you say she was young.\" He blue eyes widened. \"I...I heard him saying something about a student before the yelling started, is he...screwing around with his students?\"\n\n\"Hell no!\" I exclaimed, shit this was getting worse.\n\n\"Then who's the hot young girl?\" she shook her head, \"N...never mind, it's your business\"\n\n\"There's nothing....\" I began, but stopped when she grunted disgustedly then said quietly,\n\n\"Trish I...I love it here with you guys, but when I get back from Florida I'm going to move in with one of my friends, they lost their roommate and need someone to help with the rent.\"\n\n\"You...you're leaving us?\" I asked, shocked, \"But your folks...\"\n\n\"I...I can't live here knowing Brad's cheating and....I just can't.\" she shrugged, \"I won't tell my parents about it, I'll just say I've decided to be a big girl and live on my own.\"\n\nShe stood up and gave me a sad smile, \"I'm sorry, Trish, you deserve better and before I leave, I'm going to tell Brad that I think he's an...\"\n\n\"Ashley, sit down!\" I snapped and grabbing her wrist pulled her into a sitting position. \"I'm telling you, nothing bad is going on!\"\n\n\"Then what's going on?\" she asked, \"I told you I heard....\"\n\n\"You didn't hear everything.\" \n\nI took a deep breath and asked myself if I really wanted to tell her the truth. I didn't think she would say anything, but couldn't be sure. There was also the possibility she may think Brad and I were perverts and would want to leave anyway. As she looked at me expectantly, I weighed that against the fact she was convinced my husband was a cheating dog and was so upset by it, she was going to not only leave, but call Brad out for something he didn't do. Brad and I had also promised her parents we'd keep her with us at least until she'd finished school. Exhaling I said,\n\n\"Ashley, I'll tell you the truth, but only if you promise me you'll tell no one, not even your folks.\"\n\n\"I promise.\"\n\n\"I mean it, because this is something that could cost us our jobs.\"\n\n\"I promise, Trish, really.\" She nodded.\n\n\"Okay, first let me ask you something. Have you...\" I paused, then went ahead, figuring what the hell, \"Ashley have you had sex yet?\"\n\n\"Why are you asking me that?\" she asked, her face immediately turning red. \"What does that have to do with...\"\n\n\"It does only in the sense that I'm wondering how much you'll understand.\" I told her, conveniently leaving out the fact I was dying to know anyway.\n\n\"I...I slept with Ben, but he's the only one.\" She looked at me sadly. \"He dumped me almost right after I let him. I think that's all he was waiting for.\"\n\n\"So you don't have much experience?\" I couldn't help asking\n\n\"Not much, we only did it a few times.\" She frowned, \"He said I was too nervous and acted like a little girl.\"\n\n\"Ashley have you ever been with a girl?\"\n\nAgain an adorable blush and she shook her head, \"No, I...well I kissed Jen once on a dare, but it was only a kiss.\"\n\n\"Did you like it?\" I knew I was getting sidetracked, but when else could I ask her this?\n\n\"I...\" she shrugged, \"It wasn't like it meant anything. But...I do think she kissed better than Ben.\" She frowned, \"What does this have to do with you and Brad?\"\n\n\"Well, the thing is Ashley is you did hear right. I was telling him I knew he wanted to be with a pretty young girl, but that's because I want to be with one as well.\"\n\n\"What?\" she exclaimed, \"You...you like women?\"\n\n\"Look Ashley, some people have different views on things. A lot of couples are exclusive and that's fine for them. But back in college I liked to play with girls and guys. When I met Brad back in college, he and I would....well we would play with others. A couple of times it was another guy for me, but mostly it was girls. I loved being with them, but it wouldn't be right if I didn't let Brad play too.\"\n\n\"So you guys are like...swingers?\" she asked.\n\n\"Sort of, but usually they like other couples. We're strictly into women. Once we got older we would only do it here and there and the rule is always together and we had to agree on the girl.\" I stopped when I saw her looking at me like I was nuts. \"I know it sounds weird but...\"\n\n\"But you guys love each other right?\" \n\n\"Very much so!\" I told her. \"And we both enjoy this, its like our special treat and our little secret. Now for the last few years we would contact escort services and personal ads for the type of girl we...\"\n\n\"Hot young girls?\" she asked.\n\n\"Well...\" I sighed, \"Yes, we like young girls, not inappropriately young but...\"\n\n\"My age?\"\n\n\"Yes. And...\"\n\nI stopped when she pointed at herself, \"So would like...would I be a girl you guys would you know...like?\"\n\nThis was what I was afraid of, that she would now be uncomfortable around us. Putting my hands on her shoulders, I looked into her eyes and said, \"Ashley we would never think of you like that,\" that was a lie, but she didn't need to know that. \"We're very close to you and...\"\n\n\"But...okay, so if you didn't know me and was just looking at me, would I be?\"\n\n\"I can't lie, Ashley, you're absolutely adorable and sweet and well yeah that's kind of what we like.\"\n\n\"I thought you liked hot?\"\n\n\"We do and that's what we usually get. Escorts aren't exactly sweet, but sometimes we would find a girl without a lot of experience and we'd have a lot of fun kind of teaching her and.....\" \n\nI stopped and took a breath. It was bad enough I was risking our secret; I didn't need to get carried away. \n\n\"Anyway, a couple of years ago we were supposed to meet a girl at a motel and when we got there I recognized her as a girl that we had both taught at high school. We left, but it was a close call because...\"\n\n\"You would get in a lot of trouble.\" She pointed at me, \"You guys never did with any of the...\"\n\n\"Never.\" I assured her. \"But if someone found out I doubt they would believe it and schools wouldn't take that chance.\"\n\n\"I understand that, but what were you guys fighting about then?\"\n\n\"Because I would really like to do it again; I miss it and so does Brad. We argue about it here and there because I think we'll be fine, but now he's worried we'll get caught. I...I was telling him tonight we should do it as a Christmas present to ourselves and he got mad because I kept pushing.\"\n\n\"So you were mad because there isn't another woman?\" \n\n\"Well...\"\n\nI stopped, when to my delight, Ashley laughed, \"That would be a first! A woman mad her husband didn't want to play with another girl.\"\n\n\"Right, but anyway that's the truth Ashley. Brad is very loyal to me and I to him. We have never strayed and have only played together and if he doesn't ever want to again we won't, but I miss it.\"\n\nAshley nodded and frowned as if she were thinking of something. I waited for her to speak and when it didn't seem she was going to I asked, \"Ashley, you see why you can't tell anyone right?\"\n\n\"Oh.\" She started as if she had been lost in thought, \"Don't worry Trish, I promise!\"\n\nShe went silent again and I prodded her, \"Ashley, you don't think Brad and I are...sick or anything do you? I...I don't want you to be uncomfortable around us.\"\n\n\"Oh, no its okay.\" She smiled, \"I'd rather have it be that than you guys having trouble. If you guys are okay with it than that's great.\" She shrugged, \"Its really too bad you can't anymore, that must really suck.\"\n\n\"Well maybe Brad's right.\" I told her. \"Or maybe someday we will, but everything would have to be just right and we'd have to know there was no way we could get found out.\"\n\n\"Thank you for sharing your secret with me Trish, I'm glad you trust me.\"\n\n\"I do and I'm glad you don't think poorly of us.\"\n\n\"Never, you guys are way too good to me.\" She said as she stood up. \"I'm just glad you guys are okay.\"\n\nI stood up as well and gave her a hug \"We are honey, and I love that you care that much.\"\n\n\"I want to see you guys happy.\" She said in my ear, then to my surprise added, \"You never know, maybe Brad will change his mind.\"\n\n\"I doubt it honey, but thanks.\" As I did downstairs, I could feel her tits pressing into mine and quickly pulled away from her. \"And like I said, we won't bring it up again, okay?\"\n\n\"Okay.\" She nodded and turning away walked towards the door. \"Goodnight Trish.\"\n\n\"Night Ashley,\" I replied, staring at her ass in the tight shorts.\n\nShe reached the door and as she opened it, looked at me over her shoulder and smiled, \"You never know, Trish, after all it is Christmas; maybe you'll get a big surprise\"\n\n*****\n\n\"Hey honey, you ready for bed\" I asked from the doorway of Brad's office.\n\nHe looked up from his lap top and rubbing his eyes, sighed, \"I'm tired enough, but I need to try to get through some more of these reports.\"\n\n\"You still have the weekend,\" I told him, \"You look exhausted, babe, just come to bed.\"\n\n'I don't know I...\" he stopped when, untying the black robe I was wearing, I pulled it open to show him I was wearing nothing underneath. \n\n\"You were saying?\" I reached up and cupping my tits presented them to him.\n\n\"I...well I was saying that I can just finish this up tomorrow!\" he laughed.\n\n\"Now that's better.\" I nodded as I pulled the robe closed, \"If you're going to be working late you should be working on me.\"\n\n\"Maybe you should come over here and I'll work on you on my desk.\"\n\n\"No, I heard Ashley walking around in the hall a few minutes ago, I'm not sure if she came down here or not.\"\n\n\"Since when wouldn't you want to put on another show?\" he grinned.\n\n\"I don't know\" I shrugged, I hadn't told him about my talk with Ashley and didn't see why I needed to, but now that she knew, I didn't want her to see us again. \"Let's just go upstairs, besides that way we can just go to sleep.\" I flashed him my tits again, \"Come on lover, your wife's horny and you don't want her to start without you, do you?\"\n\n\"Can I watch if you do?\"\n\n\"Let's go.\" \n\nTurning away from him, I flipped my robe up, giving him a glimpse at my bare ass and headed for the stairs. I laughed as Brad came up behind me just as I'd started up the stairs and reaching under my robe gave my ass a hard squeeze. When I reached the top of the stairs he came up behind me and slipping his arms around my waist, kissed my neck. I ground my ass back into him and was thrilled at the feeling of his hard cock pressing into me through the sweat pants he was wearing.\n\n\"Hmm, I like that, but behave out here!\"\n\nI started out ahead of him and yelped when he caught my ass with a playful slap. I turned back to look at him and saw him giving me that mischievous smile that always melted me. I smiled back and began sauntering towards the bedroom, putting some extra swing into my hips. I was glad the argument of last night was forgotten. We entered the bedroom and before I could reach the bed, Brad grabbed me by the hips. Spinning me around to face him, he slid his hands inside the robe as he leaned forward and pressed his lips to mine. I moaned into his mouth as his fingers found my nipples and my own hand found his hard cock.\n\n\"Take these stupid pants off,\" I told him, \"We have to work on something sexy for you to wear.\"\n\n\"The only sexy thing I ever want on me is you.\" He laughed as he sat down on the bed, \"Now why don't you take them off for me?\"\n\n\"Oh, yes sir.\" I purred, dropping to my knees.\n\nAs Brad pulled his shirt off and tossed it aside, I grabbed the sides of his pants, he lifted his hips and after pulling them down just far enough for his cock to spring free, I took it into my mouth and sucked him down to his balls.\n\n'Oh damn!\" He moaned, \"Trish, you are...\"\n\nWe both jumped at a knock on the door. \n\nI removed his cock from my mouth and looked towards the door. The knock came again this time accompanied by Ashley's voice, \"Hey guys, umm, can I talk to you?\"\n\nI looked at Brad who shrugged. Standing up long enough to pull his pants back up, he sat back down on the bed and called out, \"Hold on a sec Ashley.\"\n\nI stood up and licking my lips, whispered, \"Shit, it's like getting caught in your bedroom when we stayed at your folks.\" \n\nTurning around, I called out, \"Come on in.\" and sat down next to him at the foot of the bed. The door opened and Ashley came in. My eyes widened and I looked over at Brad, who looked as if he was having a hard time keeping his mouth closed. Ashley was wearing a red robe shorter than mine. So short that I wondered if she turned around if I'd be able to see the cheeks of her ass. ",
        "Her long blond hair was down and looked as if she had teased it out and in addition to that as she approached I noticed she was wearing make-up. My eyes lingered on her soft full lips that were painted in the exact shade of deep red as her robe. The color was too old for her and gave her an almost trashy appearance, which immediately had me thinking of all the places that lipstick would look smeared across. Unable to avoid it, I dropped my gaze to her long legs and saw she was barefoot and her toe nails were in the same deep red as her lips. A quick glance at her hands showed her fingernails were also that color. \n\nWhen she was standing directly in front of us I again looked into her face and staring at her mascara coated eyelashes, wondered if she were going to tell us she was going out and just hadn't put a dress on yet. I did note that the robe was tied properly; showing only a little of her neckline. \n\n\"So, uh what's on your mind Ashley?\" Brad asked. \n\nI looked over and saw he was struggling to find a place for his eyes and I didn't blame him. Of course now that she knew I found women attractive it occurred to me I would have to be careful of where my eyes rested as well.\n\n\"I...well I...I'm leaving for Florida Monday morning so I wanted to give you guys your present tonight.\"\n\n\"It couldn't wait until tomorrow morning?\" I asked.\n\n\"Nope.\" She shook her head. \"I want to give it to you tonight,\" she gave us a nervous smile, \"I...I really hope you like it.\"\n\n\"I'm sure we will.\" Brad said and making a show of looking more closely at her asked, \"Where is it?\"\n\n\"Well,\" she giggled and as she had last night began rocking nervously from one foot to the other. \"You're pretty much looking at it.\"\n\nI looked over at Brad to see he was looking back at me. I shrugged, \"Okay, well you got us, what is it?\"\n\n\"You guys have to close your eyes.\" \n\nI glanced at Brad quickly again and then putting my head down, closed my eyes. \n\n\"No peeking.\" Ashley said, and then laughed, \"Brad your eyes aren't closed all the way.\"\n\nI elbowed him and he sighed, \"Okay.\"\n\nI sat there with my eyes closed and after a moment, Ashley said, \"O...Okay guys, you can open your eyes. \n\n\"I put my head up opened my eyes and exclaimed, \"Oh my God!\"\n\nI heard Brad say the same exact thing next to me, but didn't turn to look; my eyes were glued to the sight before us. Ashley had dropped her robe and was now standing before us in a red lace bra the cups of which were transparent enough to see her pink nipples. My eyes trailed down her soft smooth stomach to take in the matching red thong that barely covered her pussy. The stings of the thong were tied at the sides exposing the entire length of her leg right up to her hip. \n\nAshley's ensemble was completed by a red ribbon tied around her neck and as we both stared, she raised her arms over her head and said, \"Merry Christmas!\"\n\n\"I...Ashley, what are you doing?\" Brad managed to ask.\n\n\"I'm giving you guys what you've been wanting!\" she exclaimed, giving us a huge smile, \"Want to see the rest?\" \n\nWithout waiting for an answer, Ashley turned around to show us her backside. The thong was nothing more than a string in the back and I swallowed hard at the sight of her firm round ass cheeks. She turned back around and seeing the two of us sitting there speechless, frowned.\n\n\"You...you guys don't like me?\"\n\nI was too stunned to speak and was desperately trying to tell myself that no matter what, we couldn't do this. Next to me, Brad somehow found it within himself to speak again,\n\n\"Ashley, why...why would you think we wanted...um, that we would want to...\" he paused then shook his head, \"Fool around with you? We're a married couple, and you're...\"\n\n\"Well, after Trish told me about your secret and that you guys miss being able to....\"\n\n\"You told her?\" Brad yelled from next to me.\n\nI turned to face him and started stammering, \"I...I had to Brad, she heard us fighting and thought you were fooling around on me, I...I didn't want her to think that about you and she was going to move out and...\"\n\n\"Don't worry, Brad!\" she said softly, \"I won't tell anyone and it gave me this idea!\" she then pushed her lips out in a pout, \"But I guess I'm not pretty enough for you.\"\n\nThe sight of her lip trembling caused my pussy to begin to heat up. All I could imagine was how those soft quivering lips would feel beneath mine. Rein it in, Trish! Ashley put her head down and said, I...I'm sorry, I thought you guys would like me.\"\n\n\"Honey, its not that.\" I blurted, \"You're beautiful!\"\n\n\"Not hot though,\" she bent over to pick up the robe and I could see down into the cups of her bra. Staring at her pink nipples had my own nipples hardening and I said quickly, \n\nAshley, you're damn hot, trust me. Right Brad?\"\n\n\"I...I shouldn't answer that.\" He said, \"Ashley, please put your robe back on.\"\n\n\"Okay I...\" she stopped and stared at Brad, I followed her gaze and saw she was staring down into his lap. My eyes widened when I saw he was hard, his cock causing his pants to rise around his crotch. \"You...you look like you want to open your gift Brad!\" \n\nShe giggled and the sound sent a wave of heat through my pussy. If she didn't get dressed and leave soon, I was going to un-wrap that precious little gift with or without Brad. \n\n\"You...you're a very sexy girl Ashley.\" Brad whispered, \"But its not about your looks, we...we're supposed to watch out for you and care for you, we shouldn't...\"\n\n\"And I care for you guys, that's why I want to make you happy!\"\n\n\"We can't.\" Brad said sternly.\n\nAs much as I wanted to smack him, I knew he was right, we couldn't do this. She was our best friend's daughter and she really didn't know what she was getting into, hell the girl had barely gotten laid. That last thought wasn't helping my pussy and neither was knowing that Brad's cock was at attention from staring at Ashley's perfect little body.\n\n\"Ashley, we...appreciate you wanting to do this, but it's just because of what Trish told you and that's not a good reason to, well, you know.\" Brad put his hands out, \"So...\"\n\n\"It's not just what Trish said,\" Ashley walked up closer to us and I clasped my hands in my lap to stop from reaching out to her. \"I...I have something to tell you guys.\"\n\n\"Can you please put your robe on while you tell us?\" Brad implored.\n\nIgnoring him, Ashley stood in front of us and began speaking softly. \n\n\"I have to confess something to you guys.\"\n\n\"W...what's that?\" I managed to ask as my eyes were level with those adorable little tits. \n\n\"I lied to you last night. I was on the stairs watching while you guys were playing around.\"\n\n\"You were?\" Brad asked, trying to feign surprise. \n\nI noticed he had put his hands in his lap, but I had no doubt he was still hard. There was no way he couldn't be with this gorgeous little thing a foot away from us. \n\n\"I was, I was coming down to get a cup of coffee and I saw you. At first I thought Trish was just sitting in your lap, but then I saw your hand and...and Trish took her blouse off.\"\n\nShe began to turn as red as her lingerie and that sweet blush began to work me up more than her scantily clad body. This was our sweet little Ashley, but dressed to kill and ready to...\n\n\"I...crouched down and watched and...it really turned me on.\"\n\nShe'd said that last part in a barely audible whisper and it was an act of will not to lean forward and kiss her. \n\n\"It, it turned you on?\" Brad asked.\n\nHis tone made me turn to look at him and I saw he was sweating and he was no longer trying to look away. His eyes, as mine had been, were fixed on her chest. \n\n\"It..it did. It reminded me of the porns I watch sometimes. I...Brad you're a really good looking guy and Trish is so beautiful! And you guys were having so much fun! I....went into my room and...\" she looked away and whispered, \"You know...\"\n\n\"Tell us.\" Brad said softly, sending a shiver through me; his eyes were wide and he was beginning to get that look of lust on his face I remembered so well.\n\n\"Well I...I played with myself. Then I went to come back downstairs and heard you fighting and then Trish told me your secret.\" She let out a soft sigh that caused me to begin to breathe through my mouth. \"I went back to bed and just kept thinking.\"\n\n\"What were you thinking,\" I prodded.\n\nAshley looked nervously from my face to Brad's before speaking, \"I kept seeing you guys having sex, it was so hot! I...I was always nervous and it was never that fun! Then I was thinking of Trish saying how you'd have other women play with you and started picturing another girl with you.\"\n\nShe paused and giving us a shy little smile, that belied her racy ensemble, said, \"Then I thought about me with you and it hit me that I wanted to do something really special for you guys. Trish said you were afraid to do it because you could get in trouble, but you know you can trust me.\"\n\n\"But you're our best friends...\" Brad began.\n\n\"No,\" reaching out she placed her finger on Brad's lips, \"Not tonight I'm not. Tonight, I'm a pretty young girl who really wants to be as good to you guys as you have been to me and,\" she giggled again, \"Have some fun too.\"\n\n\"You...you really think it will be fun?\" I asked.\n\n\"It doesn't....\" Brad started, but stopped when I reached over and sliding my hand under his grabbed his hard cock and squeezed it. \"Oh.\" He gasped.\n\n\"I really want too!\" Ashley said, \"I want to be the best gift you guys ever get!\" she looked at us expectantly then began to pout again, \"I...you think I'm stupid don't you? I...I'm not someone you'd...\"\n\nAshley stopped, when making up my mind; I reached out and grabbed her hips. I pulled her towards and placing my lips on her stomach gave it a soft kiss.\n\n\"Oooh, That feels...nice.\" Ashley whispered as I began sliding my tongue up and down her stomach. \n\nI could see Brad staring out of the corner of my eye, but didn't care. I hoped he'd join in, but at this point I was ready to enjoy her alone if I had to. Still pressing my lips to Ashley's soft flesh, I slid my hands behind her and groaned as I grabbed her firm ass and squeezed it. Ashley gave a cute little yelp, and to my delight, put her arms around my shoulders. I stood up in front of her and running my hands up her back, slid them through her long blonde hair.\n\nI held her head gently in my hands and after looking into her wide blue eyes for a moment, leaned forward. Closing my eyes, I parted my lip, but didn't move forward. I wanted to see if she would come to me. I stayed there for a moment, wishing I could see the look on Brad's face, but all thoughts of my husband vanished, when I felt Ashley's soft lips graze mine. I resisted the urge to kiss her back and instead remained still, letting her kiss me a second time. \n\nThis kiss was a little firmer and she didn't pull back as quickly. I sighed softly, letting her know I was enjoying it and it paid off immediately. With a nervous little giggle, Ashley pressed her lips harder into mine and this time I did kiss her back. I still held back, but was now sliding my lips lightly across hers. Her mouth was working against mine, and I could feel her gaining confidence as I let her lead our kiss. What I could also feel was her hands on my back, rubbing me through the robe. \n\nI let her face go and dropping my hands, slipped my arms around her slim waist and pulled her into my embrace. She gasped and her lips parted from mine. Using that to my advantage, I turned my head to see Brad sitting there staring wide eyed at the two of us. He looked both nervous and excited, but between his legs the only reaction was excitement. His cock was straining against his pants and I knew that soon that cock would be out and in not just my warm mouth, but Ashley's as well.\n\nSpurred on by that thought, I leaned forward and captured those precious lips. This time I was more aggressive and as soon as she started to kiss me back, I opened my mouth and pressed my tongue against her lips. I felt her tense up in my arms, but her lips parted and I eagerly darted my tongue into her mouth. Ashley made a noise that was between a gasp and a moan as my tongue slid across hers. I moaned myself, as her tongue swirled over mine and I felt her start to relax against me. As she did, I could feel her small tits pressing into me through the robe and decided it was time to lose it so I could feel that firm young flesh against mine.\n\nBringing one hand up through her hair and keeping her face pressed to mine, I drew my other hand back between us and pulled the tie of my robe. When I felt it open, I broke the kiss and stepping back, quickly slipped it from my shoulders. \n\n\"Oh, wow.\" Ashley said, her blue eyes growing even wider. \"Trish, wow, you're...beautiful.\"\n\n\"You think so, honey,\" as she had done, I raised my arms over my head. \"Maybe I can be your gift too?\"\n\nI looked down to see Brad now staring at me, his eyes fixed between my legs. His eyes rose to my face and as I brought my arms down, I turned my head. Letting my arm cover my face, I mouthed, \"Yes?\" He nodded and gave me a smile that sent a wave of excitement through me. I whispered, \"Wait.\" And again he nodded. Turning back to Ashley, I opened my arms and said softly, \"Come here, honey.\"\n\nAshley hesitated, then looking down at my tits, stepped forward. To my surprise, she brought her hands up and placing them on my tits, leaned in and kissed me. Her kiss was firm and her tongue almost immediately probed my lips. I opened my mouth to accept it and moaned into the kiss as her small hands slid up and down my tits. I reached around her waist and sliding my hands up, found the clasp to her bra and slowly undid it. Again I felt her tense up, but her hands were now squeezing my tits and I had no doubt that she was going to continue. \n\nHer bra unhooked, I caressed her back, before moving my hands up to her shoulders. Grabbing the straps I eased them down her arms and again surprising me, she raised her arms over her head. Still kissing her, I slid the bra over her arms and tossed it away. I then pulled her hard against me and moaned at the sensation of her hard nipples pressing into my own tits. Ashley groaned in her throat and I started rocking side to side, sliding my tits across hers. I slipped my hands between us and capturing her small tits gave them a gentle squeeze. \n\nI sighed at how firm they were and cupping them slid my thumbs across her nipples. Ashley released a whimper that caused me to lose my patience and I bent my head to her perfect little tit quickly taking her hard pink nipple into my mouth.\n\n\"Oh Trish!\" Ashley exclaimed.\n\nI'd expected her to pull away, but instead, her hand found the back of my head and she arched her back, pressing her tit further into my mouth. I began rolling her other nipple between my fingers and became aware of Ashley's hips beginning to rock into me. Was she really just letting herself go here, or was she maybe not as sweet as she had lead us to believe? At this point I could care less! All I knew was that I was sucking and fondling the cutest pair of tits I'd ever seen and she was enjoying it. \n\nI switched off and started sucking her other nipple. Ashley began to moan softly and grabbing her hand I brought it to my right tit. Imitating me, she started rubbing my aching nipple between her fingers and I moaned around her nipple. I jerked back when I felt something brush against my chin and looking up saw that Brad had gotten up. He was standing behind Ashley and had slipped his arms around her. He had cupped her tits and I heard her moaning as he held them up for me and squeezed them. \n\nBrad had nuzzled his face into her hair and was kissing her neck and my pussy began to drip as Ashley let her head fall back, giving him better access to her soft flesh. Straightening, I turned her face to mine and gave her a soft kiss. She kissed me back and her tongue instantly found my mouth. I sighed at the feeling of Brad stroking one of my nipples and broke the kiss to look down and see he was fondling one of Ashley's tits, while playing with mine. Taking his hand, I placed it on hers and went back to kissing her. She was moaning softly and her hips rocking harder than before. \n\nI removed my lips from hers and leaning over kissed Brad's cheek. He lifted his face from her neck and I kissed him hard. He was ready for it, and now it was his tongue in my mouth. I could feel the backs of his hands pressed against my tits as he fondled hers. I took Ashley's hands in mine and brought them to my breasts. She immediately started fondling them and I sighed into Brad's kiss. I turned my head and once again found Ashley's perfect lips. After a brief kiss, I placed my hand on her cheek and turned her head to the side. \n\nIt was Brad's turn to find her lips and I leaned back to watch my husband make out with a girl half his age, while he played with her tits. Her fingers felt damn good on mine and as with the kiss, she was definitely growing bolder, squeezing my nipples harder. I was getting so worked up I became aware of the fact my own hips were moving. Opening my legs, I took Ashley's hand and quickly shoved it between my legs. She gasped as I started rubbing her hand across my hot wet flesh, and after a moment, I let her hand go. \n\nAshley continued to be more aggressive than I would have thought and I moaned when her hand continued to move without my urging. Her fingers slid through the wet folds of my pussy and I could feel them trembling against my moist flesh. The look on her face was one of nervous desire and it caused me to seek out those soft lips as Brad went back to her neck. After a long slow kiss, during which her fingers continued to caress me, I slid my lips to her ear and whispered, \"Put your fingers inside me.\"\n\nAshley paused and I added, \"Please?\"\n\nShe giggled and I released a loud moan as I felt her slowly push her fingers up inside me. I clamped my thighs shut and began to grind my hips. Ashley smiled and began to move her fingers gently back and forth. Reaching out, I placed my hand on the back of her head and guided her down to my tits. I watched as she tentatively flicked her tongue across my swollen nipple. I moaned louder than I needed to and inspired by the reaction, Ashley began licking my nipple. As she pressed her tongue against me, Brad came around so that he was now next to us and slid his arms around both our shoulders. \n\nI gave him a wonk and leaning over kissed him, as Ashley continued to finger me while teasing her soft tongue across my other nipple. Reaching down I grabbed Brad's cock through his pants and squeezed. He groaned softly and I began slowly stroking him. he was so hard I could feel him throbbing in my hand and my mouth began to water at the thought of having him in it very shortly. My attention was brought back to Ashley's mouth as she sucked my nipple into her mouth. I sighed at the feeling of her wet tongue swirling around it and unable to resist playing with her, I reached down and eased her hand from between my legs. \n\nAshley looked up from my tits as I lifted her hand up between us and after a quick look at Brad, placed her fingers against her lips. She swallowed nervously, and then closing her eyes, parted her lips. I slipped my fingers into her mouth and moaned as she started to suck on them. Brad's eyes were wide and he asked, \"How does she taste?\"\n\nAshley blushed furiously and easing my fingers from her mouth, smiled at him, \"Speaking of tasting,\" I grabbed the back of his head and roughly shoved it down to Ashley's tits. Brad didn't need any encouraging and she moaned as he began to eagerly devour her pink nipples. I watched him work his mouth from one perfect tit to the next before slowly dropping down to my knees. Leaning forward, I gave her stomach a soft kiss, then grabbing the sides of Brad's pants, yanked them down hard. ",
        "His swollen cock sprang out and I licked my lips at the sight of pre cum dripping from it. Pushing his pants down to the floor, I grabbed his cock and started pumping it. Brad moaned around Ashley's nipple and his hips jerked. Pressing his cock against my cheek I rubbed it back and forth, teasing him. Brad had his head turned to the side and was watching while he switched to teasing Ashley's nipple with the tip of his tongue. I saw she was watching as well and began sliding his cock across the other side of my face. I took my time, giving them both a show and enjoying the sensation of his sticky juices smearing across my cheeks.\n\nI slid Brad's cock to my lips and parting them darted my tongue out. He groaned when I stuck it into the tip of his cock and pulled back, taking a trail of pre cum with me. I made a show of slurping it back up, following it back to the purple head of his cock. After giving it a playful kiss, I opened my mouth and slowly took him into it. Brad sighed and I moaned at the sensation of his hard flesh sliding between my soft lips. Keeping my eyes, fixed on Ashley's, I took about half his length into my mouth. \n\nI paused then began bobbing my head in a slow steady rhythm. Brad reached down and after brushing my long dark hair from my face, rested his hand on the back of my head and began guiding my mouth along the length of his cock. I quickly took him all the way into my mouth until I could feel my lips touching the base of his shaft. Brad gasped as I held him there and still keeping my eyes locked on Ashley, I slowly worked him back out of my mouth. \n\nReaching out, I took her wrist and brought her hand down onto Brad's now very wet cock. She wrapped her slender fingers around his thick shaft and at my guidance began to stroke him.\n\n\"Oh, that feels good.\" Brad whispered, and then returned to sucking on her tit. \n\nI let her go and she continued to slowly stroke his cock. The look in her eyes was becoming less nervous as she played with my husband's cock and I could tell she was certainly more into him than me. That was just fine with me, at least for now, because I'd be damned if the night would end without that little pink tongue dancing across my clit. But for now, this was Brad's part of the gift and I planned on our little guest and I giving him one hell of a show.\n\nAs she stroked his cock faster, I ducked my head and began swirling my tongue around his balls. Brad was moaning softly and his hips were rocking as my tongue bathed his balls while Ashley jerked him off. I lifted my head and taking the tip of his cock into my mouth, I took him down until my lips were against her hand. Looking up at her I moaned encouragingly, \"Hmmm-mm\" and started to bob my head. To my delight Ashley took my meaning and started following my mouth with her hand, jerking him off while I blew him. \n\nBrad was no longer even making an effort to do anything but watch, although I did notice his hand had made its way down Ashley's back and was fondling her ass. Ashley didn't seem to mind, her attention was currently focused on watching me blow my husband while she played with him. Placing my hands on Brad's stomach, I gave him a push. Taking my meaning, he sat down on the bed. Ashley's hand remained on his cock and still keeping him in my mouth I slid up between his legs. \n\nI grabbed Ashley's other hand and tugged on it. She paused, looking down at me and removing Brad's cock from my mouth I asked, \"Want to share with me?\" Ashley gave me that shy little smile and my already sopping pussy received a fresh wave of moisture as she slowly sank to her knees next to me. She was still holding Brad's cock and leaning over, I again took it into my mouth. I bobbed my head several times, all the while keeping my eyes on hers. I slipped him from my mouth, and then placing my hand over hers, guided my husband's cock to her lips.\n\nShe looked nervously at me and I smiled, \"It's okay honey, I want you too.\" Closing her eyes, Ashley parted her lips and placing them over the head of Brad's cock, slowly took him into her mouth. She only went down a couple of inches, before she slid her mouth back to the tip. I started to tug on his cock, planning on taking it from her to give her another demonstration, when she surprised me by not only taking him back into her mouth but taking more than half his length this time. \n\nAshley started slowly bobbing her head and Brad moaned, \"Damn, Ashley, that feels good.\"\n\nShe opened her eyes and looking up at him, began to move her head faster. I started stroking his cock, following the wet trail Ashley's mouth left as she continued to blow him. Brad placed his hand on the back of her head and I heard her moan as he started guiding her along his cock. I smiled as I watched my husband's cock disappear between those full soft lips and began to wonder if she'd thought of Brad before this. She didn't seem as if she were overly experienced, but certainly didn't seem shy at all now that his cock was in her mouth. \n\nThis time I did tug on his cock and when her blue eyes met my gaze, I smiled, \"My turn.\"\n\nAshley obediently removed his cock from her mouth and gave me a thrill by placing her hand over mine and passing it to me. Before taking Brad's dripping dick back into my mouth I leaned over and kissed her softly, savoring the taste of his pre cum from her tongue. I then made a show of taking Brad all the way down to his base, and sliding my tongue out began licking his balls as I deep throated him. After a brief pause, I started sucking him fast and hard, taking him all the way down into my willing throat.\n\nI moaned in surprised pleasure when reaching out, she began to play with my nipples. I released Brad's cock with a loud slurping noise and passed it back to her. This time there was no hesitation at all. Ashley opened wide and began sucking him faster and more confidently than before. As she did, I ducked my head and Brad emitted a loud moan as I began sucking his balls while our no longer shy little guest sucked his cock. I ran my tongue from his balls and up the length of his shaft.\n\nAshley removed him from her mouth and after sharing a long tongue filled kiss over him, I started teasing my tongue across the tip of his cock. Ashley watched, and then as I'd hoped she would, began to tongue it as well. Brad sighed and his hips twitched as we teased across his sensitive head. I'm sure the sight of those tongues dancing across each other as well added to his pleasure. I pulled back and Ashley immediately took him back into her mouth and I smiled to myself, she'd wanted him before this, there was no doubt about it. \n\nShe was taking her time now, sucking him slowly and I could hear her moaning as she worked him in and out of her mouth. I placed my hand on her back and sliding it down grabbed her ass and gave it a hard squeeze. She moaned, and then squealed around Brad's cock when I slipped my fingers into her thong and directly into her pussy. I let out a breath at how hot and goddamn tight her pussy was as I began gently sliding my fingers in and out of her. \n\nAshley's moans were louder and I looked to see she had removed Brad's cock from her mouth and was now tonguing his balls while I finger fucked her. Sliding my fingers out, I pushed them through the folds of her pussy and finding the hard nub of her swollen clit started rubbing it.\n\n\"Oh!\" she moaned, \"Oh that feels so good!\"\n\nStill rubbing her clit, I turned my attention back to Brad and grabbing his cock, started sucking him. Brad was breathing hard and I could feel his thighs starting to tremble. I released his cock and quickly passed it over to Ashley, her eyes were closed and she was also breathing hard as my fingers had sped up on her clit. I pushed the spongy head of Brad's cock against her lips and still keeping her eyes closed she took him between her lips and began sucking on him. Brad's hips were rocking faster and he was starting to moan louder as Ashley slowly bobbed her head. \n\nI watched as several times she stopped for a moment as my fingers continued to dance across her clit. Like Brad, her hips were moving, grinding her clit into my fingers. My own pussy was dripping at the thought that both of them were going to cum any minute now. I pressed my fingers hard against her swollen flesh and started rubbing as quickly as I could. Ashley let out a yelp around Brad's cock and releasing it let out a loud squeal.\n\nHer hips began bucking wildly against my hand and she cried out, \"Oh Trish, Oh, yes! I...\" she trailed off into another loud squeal and I looked up at Brad who didn't seem to care that he was forgotten for the moment. Next to me, Ashley was bouncing up and down on her knees, her hips gyrating as her orgasm flowed through her. Her eyes were closed and her lips parted as she emitted a series of high pitched yelps that had me already anticipating what she would sound like when Brad fucked her. \n\nHer hips started to slow down and she was gasping rather than moaning. Knowing her orgasm had almost finished, I grabbed Brad's cock and began blowing him with a vengeance. I was taking him almost all the way down each time and his fingers tightened in my hair. His hips were moving, thrusting his cock deeper into my mouth and I could tell he was almost there. Next to me, Ashley was watching me with a mixed look of lust and embarrassment, her face was red, and she was beginning to sweat. Her eyes were as wide as they'd been all night as she watched me devour Brad's cock inches from her face. \n\nBrad gasped and sliding his throbbing prick from my mouth, I shoved it at Ashley. She took over, sucking him faster than before and as his moans began to sound desperate, I reached down and gave his balls a gentle squeeze. He cried out and a moment later, Ashley let out a surprised yelp that quickly turned into a gurgling sound as my husband's cock went off in her mouth. She jerked her head back, pulling his cock from her mouth. I grabbed it and began jerking him off, sending a huge spurt of cum into Ashley's face, causing her to emit another of those precious little squeals.\n\nAs much as I wouldn't have minded continuing to paint her face with Brad's cum, I also needed to taste him as well. Covering his squirting cock with my lips, my eyes rolled back as I felt the warm jet of his cum enter my mouth. I stroked him hard and fast, greedily sucking as well, trying to get every last drop from his beautiful cock. Brad was shoving my head, pushing his cock deeper into my mouth and I moaned as his cum trickled down my throat. With a moan that was more like a whimper, Brad let my hair go and stopped moving his hips. \n\nSliding his spent cock from my mouth, I looked at Ashley, loving the sight of Brad's cum on her lips and dripping down her chin. Grabbing her face in my hands, I kissed her hard and began licking and sucking Brad's cum from her face. Ashley stayed still for a moment, and then began to kiss me back. I opened my mouth and shoved my tongue into hers, my eyes on Brad as he watched us pass his cum back and forth as we kissed. When I'd gotten the last drop, I quickly stood up and grabbing Ashley's hands pulled her to her feet. \n\nWith an effort, Brad forced himself to stand, and once he had, I turned Ashley to the side and gave her a playful shove, sending her sprawling onto the bed. As soon as she'd landed on her back, I was back on my knees between her legs, my hands already reaching for her thong. I grabbed the sides of it and began to pull. When Ashley didn't lift her legs, I gave her a pout and doing the best I could to sound as sweet as she did, asked, \"Aww, aren't you going to let me unwrap my present?\"\n\nStanding behind me, Brad reached out and grabbing her ankles, guided her legs forward, placing her soft bare feet on my shoulders. \n\n\"Trish likes to give as much as she likes to receive,\" he laughed, \"Now let's see the best part of your gift.\"\n\n\"You really want to see?\" Ashley asked.\n\nI noticed she was directing that question at him and not me, but could care less; whatever it took to get that thong off was fine with me.\n\n\"Of course I do.\" Brad said softly, \"We can't lick it, if we can't see it!\"\n\nAshley produced another pussy inspiring giggle and pushing her feet against my shoulders, lifted her hips. I pulled her thong up her legs and when I reached her knees, she straightened her legs so I could remove it completely. Brad did the honors, taking it from me and I imagine tossing it to the side. I certainly wasn't watching because right now all I could focus on was the perfect smooth pink pussy in front of me. \n\nAshley had placed her feet back on my shoulders and wrapping my arms around her thighs; I pulled her closer to the edge of the bed and after placing a soft kiss on each of her trembling thighs, plunged my tongue inside her very wet pussy. She cried out as my tongue entered her hot little box, then again as I sucked hard. I sighed as I was rewarded with a mouthful of her sweet juices and began to swirl my tongue around inside her. I felt Brad's chest pressing against my back and saw him reach over me and place his thumb on her clit. \n\nAshley moaned and her hips jerked as he began rubbing her pink button in slow circles. Keeping my tongue rigid, I began rocking my head, tongue fucking her. Her hips started moving, pushing my tongue deeper and Brad's finger harder against her. I felt Brad's other hand trail down my back and moaned into her pussy as his fingers found mine. He quickly shoved two of them inside me and I cried out as his thumb pressed into my clit. Sliding my tongue from inside her I started working it up through the wet folds of her lips.\n\nBrad moved his thumb and using two fingers spread her wide for me. I teased my tongue around her hard button and felt a fresh wave of excitement flow through me at the soft sigh Ashley emitted as my tongue caressed her. I could feel her body relaxing and switched from licking to sucking her excited flesh into my mouth. I moaned around that flesh as Brad began rubbing my clit harder as his fingers slowly pumped into my pussy. I felt him lean further over me and sighed as his lips found my neck. He gently sucked on the skin between my neck and shoulder, before placing his lips at my ear and playfully licking my ear lobe, before whispering in my ear, \"You going to share?\"\n\nSmiling, I eased my head back and resting my cheek on Ashley's soft thigh watched Brad lean over my shoulder and slide his tongue up through her pussy. She moaned and reaching down, placed her hand on his head and began to run her fingers though his hair. \n\n\"I think she likes you better,\" I whispered in his ear.\n\n\"But you're going to make her cum, aren't you?\" he answered softly, before sucking her clit into his mouth. \n\nI watched transfixed by the sight of my husband's tongue working that beautiful pussy and let myself relax and enjoy his fingers gently working my pussy. Ashley gasped as Brad slipped a finger into her pussy and rolling his eyes, he whispered, \"Tight\".\n\nHe started slowly easing his finger in and out as he swirled his tongue around her clit. I could feel his once again hard cock pressing into my back and placing my lips to his ear, said, \"How about you make your wife cum, then fuck her, while I enjoy this pretty pussy?\"\n\n\"Words every man should hear,\" he laughed.\n\nHe gave Ashley's clit a few more teasing licks, slid his fingers from inside her and returned to his place behind me. I immediately replaced my fingers with his, and as my tongue once again found Ashley's delicious flesh, I imagined how tight she would be around his cock. I started sucking on her clit harder than I had before and pushing my fingers in faster and Ashley moaned and thrilled me, buy now running her fingers through my hair. \n\nThat thrill was eclipsed however, by the feeling of Brad grabbing my hips and pulling me back. Bracing my hand on the floor, while still fingering and licking our gift's pretty pussy; I pushed my ass in the air. I cried out in pleasure as with no hesitation, Brad slammed his long thick cock deep inside my yearning pussy. I stopped licking and started yelping as he hammered away, using long hard strokes that felt amazing. I looked up to see Ashley watching, she looked a little nervous and I wondered if she were afraid of Brad fucking her that hard. \n\nBrad slowed down fucking me and sliding his hand around my waist found my clit. I moaned as he began rubbing it, while fucking me and it was with an effort that I returned my tongue to Ashley's clit. I was glad I did though, as the added turn on of her moaning as my tongue swirled around her clit, heightened my overall arousal and I could feel my thighs starting to tremble. Brad was leaning over me to have his hand between my legs, so was now using short strokes that felt good, but I couldn't wait for him to tear into me again, but knew he wouldn't until I came.\n\nOn that note, I pressed my tongue hard against Ashley's clit, and started licking as fast as I could. She gasped and I felt her toes curl into my shoulders. My fingers were thrusting harder into her and I could feel her legs quivering. Behind me, Brad called out, \"Play with your tits Ashley, show them to me!\"\n\nI looked up to see that she had obeyed him and the sight of her cupping her perfect little tits and stroking her nipples with her thumbs sent me over the edge. I cried out into her pussy and arched my back as the orgasm I'd been dying for since we'd started, crashed through me. I slowed my licking down as I began yelping in pleasure as waves of pleasure crashed through me. I felt Brad's hand on the back of my head and a moment later, he shoved my face against Ashley's pussy. \n\n\"Don't be greedy baby,\" he laughed, \"Make her cum too!\"\n\nEven as my hips bucked wildly, driving against his cock and shoving him deeper, I started sucking hard on her clit, trying to get her to cum, before I finished. Brad had begun to fuck me harder and Ashley's hips were now moving faster, grinding her pussy into my face. \n\n\"Oh,\" she moaned, \"Right there Trish! Please don't stop I...Oh my god!\"\n\nAshley released a long loud squeal that sent a fresh surge through my already convulsing pussy. Pushing her feet against my shoulders, she lifted her hips off the bed and started bucking as wildly as I was. Brad was still holding my face to her pussy and I continued to lick and finger her as hard as I could. Brad let go of my head and I screamed into her quivering flesh as he began fucking the shit out of me. My own pussy was still contracting around Brad's thrusting cock and I couldn't help whimpering as I struggled to keep Ashley cumming as hard as possible.\n\nI didn't have to worry, with a loud squeal that had me thankful the windows were closed, Ashley arched her back and a moment later, cried out again as her pussy convulsed around my fingers and a wave of her warm sticky cum flowed around them. Her hips twitched several more times and she released a soft whimper and let her legs fall limply over my shoulders. I lifted my head from her pussy and began yelping even louder as Brad continued to slam the shit out of me. He was fucking me so hard his balls were slapping against my pussy and I loved every minute of it.\n\nAshley was watching and I smiled at the look on her face. Her blonde hair was sticking to her cheeks and she was red from passion now rather than embarrassment. Her eyes were locked on Brad fucking me and she no longer looked nervous, but excited. As good as Brad fucking me felt, it was time for him to sample our gift's tight little pussy. Looking over my shoulder I called out, \"I think Ashley's feeling neglected baby, why don't you give her some of that cock?\" \n\nI sighed as he slid from my pussy and sitting up on my knees turned around to see him standing. His hard cock was glistening and I couldn't resist taking him into my mouth and giving him a few quick sucks, enjoying the taste of my pussy from his hard flesh. Brad reached down and taking me by the shoulders, urged me to my feet. He gave me a long deep tongue filled kiss, then watched as I crawled up onto the bed next to Ashley. Laying on my side propped up on one elbow, I leaned over and kissed her softly as my other hand fund her hard right nipple and began teasing it. I broke the kiss and watched as Brad stepped up to the edge of the bed. He lifted he legs and placing her feet on his chest grabbed his cock and placed it against her pussy. ",
        "\"Oh, look at that.\" I whispered at the sight of my husband's big dick lying along her pick slit.\n\nI felt Ashley tense up next to me and I said softly, \"Don't worry honey, he'll go easy.\"\n\nBrad began sliding his cock through her pussy, pushing the swollen head through her wet flesh. Ashley moaned and began breathing heavier when he lingered on her clit. He began slapping his cock against her clit and she whimpered and started rocking her hips. With a smile, Brad slid his cock back through her pussy and eased the tip inside of her.\n\n\"Oh!\" she gasped as he pushed in a couple of inches, \"Oh that's...big!\"\n\n\"Brad eased further into her and moaned, \"Oh goddamn, she's tight!\"\n\nHe began pumping his hips, slowly sliding his cock about halfway in before pulling back out to the tip. Ashley groaned and I could feel her trembling next to me. Figuring I would help her relax I slid my hand down her soft stomach and reaching her pussy started gently rubbing her clit. Her breath caught and her hips thrust forward, pushing Brad deeper inside of her. He pushed forward and she whimpered as his cock slid fully into her. Brad paused, letting her pussy stretch around him and I started rubbing her clit faster. \n\nWhen she was beginning to moan rather than whimper, Brad started fucking her. He was using long slow strokes and the sight of his glistening cock, sliding in and out of that young pussy was enough to make me know I needed to cum again and soon. \n\n\"You like my husband's cock, honey?\" I asked her.\n\n\"I...it feels good.\" Ashley sighed, \"Damn it feels good! You both do!\"\n\n\"I like that!\" I whispered, leaning forward I tongued her nipple and added, \"And so do you honey, this is the best gift ever isn't it Brad?\n\n\"Oh fuck yeah,\" he moaned as he continued to take his time, shoving his big cock into that tight little box. \n\nI could see he wanted to go faster, but was holding me back. Ashley must have sensed it as well and whispered, \"You...you can go faster if you want.\"\n\nBrad winked at me, then grabbing her ankles spread her legs wide open and began fucking her harder. Ashley started to yelp with each thrust, but didn't complain as he began going faster. I continued to rub her clit and could feel her shaking beneath me. I smiled at the thought of her cumming hard on Brad's cock and looking up at him, said softly, \"Harder.\"\n\n\"No, I...oh!\" Ashley cried out as Brad began really fucking her now, using the same long hard strokes he had been with me.\n\nAs he picked up the pace, so did I, rubbing her clit in hard fast circles. I took her nipple into my mouth and began sucking on it while watching Brad slam his big dick into a hot girl half his age. I sighed around her tit thinking, could it get better than this. Well actually it could and I knew how, but first it was time for Ashley to cum for us for the third time. I increased the speed of my tongue and fingers and Brad, putting her legs back on his chest, leaned forward.\n\nAshley squealed as her legs were bent back so far her feet were almost next to her ears and Brad began hammering away on her. \n\n\"Oh fuck!\" she screamed, \"It it hurts... it oh!\"\n\nUndeterred, Brad continued to slam her and I rubbed her clit even harder. She was yelping continuously, but again the yelps were changing pitch. I sucked her entire tit into my mouth and catching her clit between my fingers, gave it a pinch. Ashley screamed loudly and her hips lifted from the bed. Her body seemed to pause, then as Brad drove deep inside her again, she screamed even louder and her hips began to buck wildly. I cried out in surprise as her hands wrapped themselves in my hair and squeezed so hard she was pulling it.\n\nThat pain was quickly forgotten as I heard Brad moaning as that amazingly tight pussy contracted around his plunging cock. \n\n\"Oh God, oh, God!\" Ashley cried over and over as her body writhed on the bed.\n\nBrad was breathing hard and the muscles in his shoulders and chest were flexed with effort as he continued his assault on her pretty pussy. Ashley released a loud whimper and her back arched so far I heard it crack, before she moaned and slumped back onto the bed. Brad began fucking her even faster and I could tell he was getting ready.\n\n\"Not like this!\" I cried out, \"It's our present and I want my favorite.\"\n\nKnowing what I meant, Brad smiled and slipped his cock from inside her. Ashley sighed softly and lay there panting. Rolling over onto my back, I opened my legs and reaching down, spread my pussy open, \"You're turn.\" I told her.\n\n\"But...But I never...\"\n\n\"I'll guide you.\" I told her, \"Now come give me my present honey.\"\n\nAshley swallowed hard, then rolling over got on her knees between my legs. I smiled when I saw Brad step over so that he was right behind her and I mouthed the word, \"Wait.\"\n\nHe nodded and my attention switched to Ashley. I moaned at the sight of that pretty face inches from my pussy. Her cheeks were glistening with sweat and she looked exhausted, but as I watched, she leaned forward and gave my thigh a kiss about an inch from my pussy. I could feel her lips trembling and loved the fact she was back to being nervous. Spreading my lips open as far as I could, I tapped my clit with my finger nail.\n\n\"Right there honey,\" I told her, \"Just lick it nice and easy.\"\n\nAshley nodded, then sticking her tongue out, flicked it across my swollen clit. \n\n\"That's right, just like that.\" I encouraged her.\n\nAshley licked me again, but this time continued, swirling her tongue around my clit as I had done to her. I moaned and behind her, Brad said, \"Put your fingers inside, feel how wet you made her.\"\n\nAshley obeyed, and I sighed as I felt her slender fingers enter me. She began licking fastr and then stopping, started to kiss my thighs.\n\n\"Don't tease honey,\" I said softly, \"We're going to make this nice and quick, \"this time anyway I thought, \"Just keep licking my clit, nothing fancy, just keep that cute little tongue right there.\"\n\nAshley returned to my clit and I sighed contentedly as she did as I asked. As her soft tongue slid across my excited button, I brought my hands up and began playing with my nipples. I was worked up and could already feel another orgasm building within me. Knowing it wasn't going to take much more, I nodded at Brad who grabbing Ashley's hips, slid his cock inside her.\n\nShe whimpered into my pussy as Brad began to fuck her. As before, he started slow so she would concentrate on me. Even with him going easy, her tongue was missing my clit as she moaned and squirmed against his cock. Reaching down I grabbed her hair and gently held her face to my pussy. Her tongue found its place and she began licking faster than before. Wrapping my fingers in her hair, I started thrusting my hips, working my clit harder against her tongue.\n\nMy eyes shifted behind her and took in the sight of Brad's cock entering her from behind. His large hands on her slender hips looked good, but nowhere near as good as his cock plunging into that young pink flesh. I gasped as I felt the orgasm, beginning to race through me. Squeezing my nipple harder, I moaned, \"That's it honey, a little more, oh make me cum Ashley!\"\n\nShe started licking me harder and as my legs began shaking, I called out to Brad, \"Fuck her!\"\n\nAs soon as I'd said it, I brought my legs up and wrapping my thighs around Ashley's head, pinned her to my pussy. Brad reared back and started fucking her hard and fast and between my legs, Ashley let out a scream that sent me over the edge. I threw my head back and howled in ecstasy as an orgasm far stronger than my first one, tore through me. I started bucking my hips, grinding my pussy into Ashley's trapped face. She was squealing between my legs, but her tongue was still moving and I screamed again as the orgasm continued to slam though me.\n\nThe entire time I came, I watched Brad fuck her. He was pulling cock all the way out before driving into her and she was so wet her pussy was making sucking sounds each time he slid out. I lifted my hips off the bed and released a long loud squeal as my pussy convulsed and I felt it gush into Ashley's face. I fell back onto the bed gasping. I'd cum so hard the room was spinning, but at the same time, I was completely caught up and wanted more of my husband's cock before he came. \n\nDropping my legs, from Ashley's head, I grabbed her shoulders and pulled her up towards me. Ashley crawled up until her face was over mine and grabbing her hair I pulled her down into a long kiss. I moaned at the taste of her pussy from her soft lips, then heard her squeal and felt her body jerk against mine as Brad followed her up the bed and began fucking her. She squealed into my mouth and wrapping my legs around her waist and my arms around her shoulder, I pulled her down, pinning her to me. \n\n\"Fuck me!\" I called out.\n\nBrad didn't have to be told twice and I yelped as I felt his cock begin to pound into my sopping pussy. He gave me several long hard strokes, then sliding out of me, drove back into Ashley. She started yelping in my ear as he pounded away on her, before going back inside of me. I was pretty sure at that point that Brad was sharing my thought of it not getting any better than this as he went from his wife's pussy to our hot little companions. \n\nI could see he was sweating and his breath was coming in short gasps, telling me he couldn't hold back much longer, he was fucking the shit out of me and in between my own yelps I gasped, \"Give it to her baby!\"\n\nI groaned as he slipped from inside of me, but smiled as Ashley immediately began to squeal as he fucked the shit out of her. \n\n\"Oh my fucking god\" she screamed in my ear. \n\nI had my arm around her shoulders, cradling her head into my neck as I watched Brad slamming the shit out of her. He was moaning continuously and catching his eye, I smiled and nodded. He gave Ashley several more pumps that were so hard she would have slid off me if I wasn't holding her, then with a groan, Brad pulled his cock from her and grabbed the base, holding his cum back. I quickly rolled over, shoving Ashley onto her back and cupping her tits, squeezed them together, and then opened my mouth. \n\nBrad leaned over to me and with a loud cry released his cock. A huge spurt of cum entered my mouth and rather than swallow it, I held it there. He continued pumping his cock, sending spurt after spurt of hot cum into my waiting mouth. When he released a pathetic whimper and he had nothing left, I lowered my face and keeping my mouth open, drooled his cum out and all over Ashley's pretty little tits.\n\n\"Oh, that's...warm!\" Ashley giggled, causing me to smile even as I let the cum flow from my mouth.\n\nWhen I was done, I looked Brad in the eye and as he sat there panting made a show of sucking up his cum and swallowing it. The last few drops, I scooped up with my tongue and sliding over Ashley's face kissed her, pressing it to her lips. I sat back and watched as she licked it from her lips and with an exhausted smile asked, \"Was....was I a good present?\n\n\"The best.\" Brad said.\n\nLeaning over, he gave her a kiss then all but fell onto the bed on his back next to her. I laid down next to her and we both rolled over on our sides so we were looking down on her.\n\n\"Really honey, thank you.\" I told her, you don't know how much we missed that.\"\n\n\"Good.\" She said, still trying to catch her breath, \"I...I wanted it to be special.\"\n\n\"Oh, it was special.\" Brad laughed.\n\n\"Okay,\" I began, \"I'm going to ask you something.\"\n\n\"What is it, did I do something wrong?\" She asked, looking nervously from Brad and back to me.\n\n\"Not at all.\" I assured her, \"Quite the opposite, once we got going you didn't seem that shy and I was wondering if you'd,\" I shrugged, \"Had more experience, than you let on.\"\n\n\"No,\" she shook her head,\" I...I just really wanted to make you guys happy and....\" That shy smile from before returned, \"I guess I should fess up, I've watched you guys before last night, I saw you in the pool a few times and I...\" she giggled and started to blush, \"thought about it even before you told me your secret, so I guess I was a little selfish because this was a gift for me too.\"\n\n\"Ashley, you can be selfish anytime!\" I laughed as I gave her a kiss on her cheek.\n\nShe gave me a huge smile and my eyes trailed down the bed, taking in the sight of her tight young body laying between ours. \n\n\"So why tonight?\" Brad asked, \"You're leaving for Florida Monday, tonight's only Friday.\"\n\nAshley laughed, and said, \"Yeah, but this way we have all weekend!\"\n\n\"All weekend?\" I repeated, my nipples already hardening.\n\n\"Well yeah,\" Ashley exclaimed, \"And if you want when I come back too! I mean you said you used to want this a lot, unless,\" she frowned, \"You don't like being with the same girl\"\n\n\"Well we...\" Brad stopped and blurted, \"You're saying you...you'd want to after this?\"\n\n\"Of course!\" she laughed, \"That's what makes a good gift no?\"\n\n\"What do you mean?\" I asked.\n\n\"Well,\" she began, reaching out and putting a hand on each of our thighs. \"I always thought something like a certificate to a restaurant is stupid, you can only use it once, but me?\" she released another of those adorable giggles and Brad and I both gasped as her hands found their way between our legs, \"I want to be the gift that keeps on giving!\"\n\nMerry Christmas!\n\nAuthor's note: Well I hope you enjoyed my story, it is a contest entry so please take the time to vote and comment if you enjoyed it, and even if you didn't, all comments are welcome. We have a lot of fun here, but I'd like to take a moment to be serious. This has been a tough year for a lot of people and for people who don't have much Christmas is a tough time. Years ago I had lost my job and if it weren't for a local charity and good friends, my young daughters would not have had much of a Christmas. So coming into this holiday season if you have something extra, please make it a point to give to those who are not as fortunate as yourself. It can really make a difference in someone's life and a smile on a child's face. I wish you and yours a Merry Christmas and Happy safe New Year. As always thanks for reading! Lovecraft68"
    ],
    "authorname": "lovecraft68",
    "tags": [
        "threesome",
        "ffm threesome",
        "lesbian sex",
        "older couple younger woan",
        "oral sex",
        "menage a trois",
        "double blow job",
        "chrsitmas"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/ashleys-special-gift"
}