{
    "title": "Androshorts: Passion and Compassion",
    "pages": [
        "Being a homeworker makes being told I can't leave the house and must work from home that much easier. I work in advertising and I'm responsible for some publicity that you'll remember.\n\nAbout four months before I'd split up with my partner of six years, school teacher Nicky who had decided that after all of that time and our gorgeous son Michael we were wholly incompatible and she could no longer bare to be in my company. She stormed out and wouldn't speak to me for a fortnight, talking only through texts and emails, most of which were me asking her to come back and her swearing at me. When we did start to talk again, she looked amazing but maintained her angry distance, and we shared the care of our son who was just four and waiting to start school the next September.\n\nIt was a very quiet Friday evening as Nicky had picked Mikey up from me on what would be his last day at his pre-school as they were closing because of the coronavirus and it was his weekend with her. There was a knock at my door that was very hurried and as I stood and walked to it, it knocked again.\n\n\"Yeah OK, I'm coming,\" I shouted, It was gone six pm, I wasn't expecting anything through the post and the strange layout of the local properties meant I hardly ever got asked to take a parcel for anyone else.\n\n\"Rick!\" shouted a familiar female voice, \"hurry up!\"\n\nBy the time she'd finished panicking I was there and opening the front door to Nicky. There she was looking very flustered but that was nothing new over the last year.\n\nIn one of our final arguments where she'd accused me of being insensitive, uncaring, having an eye for other women and myriad other shit that even I, the self-deriding piss-taker, thought was really unfair. In response I'd said that in the Oxford English Dictionary under the term 'anxiety state chronic' it said 'See Nicky'.\n\nUnkind you may think but believe me, tame and timid compared to what she had been throwing at me for the previous weeks.\n\nNicky is curvy, dark-haired, horrendously intelligent, generally charming, outrageously attractive but if there was an Olympic Sport for Worst Case Scenario (unlikely and inappropriate conclusion drawing) she would be team captain and three times gold medal winner, and gold or silver for 'stating the completely bloody obvious' at Commonwealth Games level. If she'd won the 'OMG!' World Cup it would have been half-empty.\n\nI had previously stopped watching disaster movies, those 'the doctor will see you now' and 'police live from the streets' programmes and spent most of my almost four months without her getting back into all the movies and box sets I'd avoided, and while the global pandemic came as a bit of a real shock, particularly as I have older parents, I must confess from a stress and anxiety point of view, no longer sharing a house with newly anxious Nicky was actually a bit of a blessing. \n\nShe'd always been a tiny bit negative but had been improving, even her friends said that living with me had chilled her out considerably, but as Mikey grew into a gorgeous little boy she seemed to get slightly more silly about the trivia and was often quite down.\n\nBecause I work from home and our son lives with me I proudly consider myself a househusband, and always have. I value my free time - particularly with him - and often work in the evening's when he is in bed, so I tend to buy my groceries early mornings when I'm on my way home from dropping him off at pre-school, in advance, in bulk and often online so I was quite well provided for in that respect and had shopped locally for a few things just in case there was a lock-down. \n\nMy evening working was another of those things she decided she had issues with, even though it was quite minimal and meant I was able to care for Mikey at home while she went back to work full time, and still bring in a quite ridiculous amount of money for my artistic advertising talents. \n\nBut here she was on my doorstep with our son and surrounded by at least four large bags. Mikey looked at his Mum with some concern and she grinned back at him and indicated he should go inside. He bounded in as normal.\n\n\"Hey Nicky?\" I said with a big grin knowing the answer before I'd even asked the question, \"Problem?\"\n\n\"Sophia and her family are just on their way back from The States and have to isolate at home for two weeks so we have nowhere to stay, Rick...\" she spluttered, \"I was wondering... well hoping really... that you might let me stay here? I'll only need to sleep on the sofa, just for a while Rick,\" she said with a just trembling hand flipping her hair back, \"only for a week or two while Sophia and her family go into self-isolation,\" I saw her eyes brim with tears, \"then I'll be out of your hair.\" She tried extremely hard to smile. \n\n\"OK mate,\" I said seeing her very real distress, \"that's fine, stay as long as you like.\"\n\nI was still a bit cross with her storming off and dumping me with no discussion only vitriol, but the whole Covid19 thing was getting just a bit serious. I'd made a point of staying cordial with her in the weeks then months since we broke up, but will confess to being a bit of a piss-taker, especially as she had gotten rather short and nasty with me and I found that the happier I seemed, the nastier it made her - and her mother it turned out when I rang her parents house to pass on a work message that had come to my house phone by mistake.\n\nHer Mother thanked me for passing it on and said she would make sure the school got Nicola's NEW home phone number,\n\n\"That way I'll never need to hear your IDIOT voice again Mr McKenzie, please -- NEVER call this number again. While my daughter put up with you buffoonery, I do not share her infatuation nor her patience, stay away from her you... you MORON!\" she said with a growled sigh so heavily laced with derision, a tone she'd practised for many hears for moments just like this. I could almost see her tight-lipped mouth, judgemental stare and fluttering eyelids she had when she was holding court, breaking into a smile at the thought of her latest, cruel and cutting put-down -- this was why God himself had put her on this earth, her raison d'etre, her calling... \n\n\"And it's always such as pleasure to speak to you as well, always a pleasure. Kindness itself, always so kind... MAGGIE...\" I knew she would just hate being called Maggie, and if she hadn't slammed down the phone I would have shortened it to Mags given the opportunity. OK, I might have been a bit of a comedian but I'd never been nasty or insulting to her.\n\nNicky rang me an hour later and shouted at me about that one and how she'd be the one that got the real backlash for my humour. I said that she was presumably happy for her mother to insult me while I thanked her for it, and whatever was going on with us I wasn't sure how I'd earned those particular insults.\n\nOn reflection it probably did lead to her moving out to stay with her friend.\n\nShe was really cross that time, and a few days later it struck me that her anger might have been about my one disastrous date that had happened a few days before. Although I hadn't told Mikey, he overheard me Facetiming Janice, the woman in question and he'd asked about her. \n\nI'd known Janice through our mutual love of performance comedy at our colleges then at University and we'd had something going on, but on reflection we were just 'fuck buddies' - for part of our second and then most of our third years. When her latest witty video cropped up on Facebook during my 'end of the second month' misery I sent her a message congratulating her on her talent and asking how she was. \n\nOver the week, we'd been chatting about the old days and what great fun it had all been, so I asked if she'd like to have a curry one evening. I'd picked a Wednesday night that Mikey stayed with his Mum and perhaps he'd said something about Daddy arranging to see his old friend for dinner.\n\nIt was a horrible time and with the benefit of hindsight I did ask myself if it was revenge, the idea that seeing someone else would ease the break from the woman I'd been in love with.\n\nIt was fucking stupid, and on reflection I knew that at the time.\n\nI met Janice at 'The Jester', a 'performance pub' popular with the students from the two local colleges and somewhere that both local bands could play and the next generation of comedians could cut their teeth. I'd gone down reasonably well there along with my guitar, doing stand-up while at college and during University breaks.\n\nThis was the first mistake; it was obviously 'her local' but being Wednesday there were no comics or bands and it devoid of both punters and atmosphere but she ordered two pints of the strong brew the pub was famous for. It was heady stuff and I was only halfway down my first with one to go when she ordered her third and seemed in no rush to do anything else. \n\nOnce a few of the locals did arrive it turned out that they all reckoned themselves as comics as well, although it was obvious no one else did. Being so incredibly witty they then figured that the nerdy lightweight sat with Jan was OK to take the piss out of and any attempt from me to join in the banter was knocked straight back at me and it was obvious that I wasn't part of the clique or the conversation. \n\nI tried to smile through it, then just ignored them to drink my beer and try and chat quietly to Jan. I couldn't join in their conversation but they could evidently join in ours, but my lack of response to their gargantuan wit was just making them a bit cross and work harder at the jokes that were now just louder and badly veiled insults as they drank more strong beer. All Jan did was smile, and after half an hour or so and her third beer she joined in.\n\nI looked across at the very pretty girl I'd once had very real feelings for and saw what she had become. The very promising, very funny, one-time Edinburgh Fringe and televised (Channel Four) Footlights stand-up comedian had barely changed visibly since our last piss-up and shag before finals but here she was in the scruffy denim, heavy coat and big rigger boots just like her companions, the only difference being she had showered and washed her hair where no one else seemed to have bothered with that inessential in some time.\n\nWhile she still regularly performed in local comedy clubs her dreams of fame were obviously still to come and what had once been very clever and relevant comedy had descended to bitter meanness once she'd started to get drunk. After forty five minutes of character assassination in which she had played a fair part, I quietly asked if she'd like to go to the nearby Indian for the promised meal that this evening had been about.\n\nHer friends butted in again and complained loudly that the pub needed all the business it could get and just because 'the skinny, four-eyed homo' couldn't stand the pace, why should their home-from-home suffer loss of revenue. One even threw in that the pies where to die for -- literally.\n\nHa-fucking-ha.\n\n\"I ate before I came out,\" said Jan staring into her glass and not at me and waving a 'conversation over' hand gesture.\n\n\"Oh, OK then...\"\n\nSo it was just going to be a drinking session was it? I was a grown-up and would still have to be reasonably compos mentis the next morning for work. Besides, I'd grown out of the whole 'getting horrendously pissed, laying awake half the night next to the toilet', I had a son I was responsible for who would need collecting from his pre-school just after lunch. \n\nMy compatriots, even the girl I'd come out to see, were getting more obnoxious by the minute.\n\nNah, fuck it; it was time to leave.\n\nI stood, finished my beer and handed the glass across the bar, and picked up my coat to a loud orchestrated \"ooooooooooooooh\".\n\n\"Well gentlemen, thank you so much for your kind, warm, effusive welcome, I'm off -- my stomach thinks my throats been cut and there's a biryani with my name on it out there somewhere.\"\n\n\"A cut throat,\" said the skinny one with Hank Marvin glasses, long greasy hair and thin pale hairy legs showing from his too-short corduroy trousers, \"I'm sure one of us could oblige!\" he gave a bit of a forced and false unfunny chuckle.\n\n\"Yeah,\" I said, \"I'll be sure to stand still for you mate, is it just you or are you going to phone a friend?\"\n\nThere was a stream of angry words now back from them. Apparently the rule that they could say what they liked to me but I couldn't be nasty-funny back to them still stood, and the landlady called for order and they seemed to have settled.\n\n\"I've never met any of you before yet I'm the bad guy, I don't know what the fuck I've ever done to you but in my book threatening to cut my throat is never a sign that I'm being accepted into the gang, mind you... your loss boys.\"\n\nThe shortest one, the closest I've ever seen a real human look-a-like Gollum, stood,\n\n\"You think you can just turn up in Jan's life after seven years and expect 'favours' from her?\" he made the exclamation mark sign in the air with 'favours', \"She ain't your quick fuck ya' know!?\"\n\nI looked at Jan with raised eyebrows at how quickly word had seemed to travel, and she was taking long pulls at her beer now with no eye contact with me, and the hobbit was not impressed, and leapt to her defence again. \"Who the fuck are you huh? Just who THE FUCK are you!?\" he had some cheers on the back of that one, stabbing his grubby, long-nailed finger in my direction and I returned his glare, which he took exception to, \"don't you look at me like that you gay twat, I'll fucking have you!\"\n\n\"Fair enough!\" I took a step closer and leaned down to him, my smile having altogether left my face, \"why don't you stand up and 'have me'... oh you are standing up, I do apologise; hang on I'll ask the landlady for a box for you to stand on.\" \n\nSmeagol stepped back and fell into his chair, stroking his six or seven-a-side hairs back on his sweaty skull, his anger evident but now abated. \n\nThe Comedy Club were well versed in comedic insults but the suggestion that it could come to blows shut them all up and it became a staring match. They stared and I smiled and shook my head, raised eyebrows, and arms out to my sides ready for Precious to make his attack.\n\nThe next hero stood and stepped closer to me, his arms raised like mine and the smell from the underarms of his camouflage jacket where enough to make me stand back, and as he opened his mouth to speak I shut him down quickly.\n\n\"I surrender Rambo!\" I said, wafting a hand in front of my face, \"fuck me, I'm not prepared for biological warfare, Jeeeeesus!\" He quickly dropped his arms, but the smell was little better, \"talking of 'biological' GI Joe, couple of Ariel 2-in-1 tabs will sort that jacket mate!\" I nodded, smiled and winked to him, \"bung it in the washing machine the next time you play dungeons and dragons online. Piece of piss.\" I looked at him with my head to one side, \"Actually, next time you have a shower, the D&D can wait!\" I smiled again.\n\nThe silence was really uncomfortable now,\n\n\"Well, seems you boys can dish it out but you can't take it, shame that,\" my tone had an air of admonition to it and they all stared at the table or their beer like negligent school boys, I looked at Jan, \"you boys also seem to know more about mine and Jan's evening than I do, so on that bombshell it's time I left. Jan, I'd like to say it was nice but it hasn't been, sorry if I upset you in any way.\" I bowed to the landlady, \"l was wondering why the lounge bar looked so empty, now I can see.\" The landlady raised her eyebrows and pursed her lips if that thought hadn't occurred to her. \n\nI looked back across the room and saw Jan and her mates; while most of them had a good twenty or more years on her, worse than that she had the same 'miserable old man' look that they did, and I could see them all for what they were; bad-tempered, cynical drunks defending their territory and their prematurely aged friend, intent that she was part of THEIR group and she wasn't going to get away.\n\n\"What do you mean?!\" said the last, the fat, greying, bearded buffoon that insisted he was an unemployed English lecturer.\n\n\"Well if other friends get the sort of welcome that I did, I'm not surprised the place is struggling to stay open, goodnight Jan.\" Giving up on my comedic skills I threw in a final riposte, \"Goodnight gentleman, may flights of angels sing thee back to your empty flats and angry lives -- make sure you keep Jan down there with you, if you can't have any fun, why should she?\"\n\n\"Fuck you!\" she snarled at my back.\n\nI stepped out the door. Before I was ten steps from the place there was a hand on my shoulder and I spun, ready for a punch-up.\n\n\"What the fuck Eric?!\" snarled Jan \"get back in there and apologise to my friends!\"\n\n\"Why?\"\n\n\"You come into our pub and you... you insulted them!\"\n\n\"I insulted them? When Jan, exactly when did the skinny, short-sighted homo insult them mate? Oh yeah, after all of their insults and threats for the first hour, sorry about that. Oh, but you probably never noticed, what with you joining in.\" \n\n\"Oh for fuck's sake Eric, man up and grow a pair will you?\" She snarled, \"you made it quite clear what tonight was all about...\"\n\n\"Did I? No mate, we talked about the old days and as far as I was concerned it was going to be for a laugh and chat, a couple of pints and a meal with an old university buddy, not her cabal of knights of the beer-stained round table, and I don't remember saying we were going to do anything but that. All of your mates seemed to know somehow though? So, I've just decided to call it a night.\"\n\nShe folded her arms and looked slightly guilty,\n\n\"I didn't tell them anything, they are just looking out for me, we were just out for a good time.\"\n\n\"Believe it or not, being sniped at by your pissed protectors for just being an old friend that they didn't know wasn't that good. If I wanted abuse I could've just invited my Ex round.\"\n\n\"Ex?\" she sneered grabbing it with both metaphorical hands, \"so that's all I was going to be was it, a revenge fuck?\"\n\n\"No Jan it wasn't that at all, I actually fancied a curry and a laugh with YOU, nothing else...\" I took a deep breath, I'd had enough of this 'good time' and leaned forward and kissed her cheek, \"See ya.\" I turned and carried on my walk.\n\n\"We're no different you know!\" she shouted after me as I walked, \"You and me? No different at all!\" getting louder as I got further away, \"You're no better than us, don't you dare look down on us!\"\n\nI stopped and turned, one more try.\n\n\"US! Jan, those grumpy old men have thirty years on you! Don't let them...\"\n\n\"Don't you fucking DARE judge me!\"\n\n\"Sorry Jan,\" with hands up in surrender I walked away and reached a corner and turned into it, wherever it went. Two corners down was a brightly lit chip shop still open and I bought a huge bag and walked home feeling worse than before.\n\nAnother woman amazingly angry at me for fuck's sake; She was right though, who was I to judge anybody. That had been seven weeks before and the first woman to really lose her temper with me and point out my shortcomings was here on my doorstep and looked like she was about to fall apart; that strong girl, troubled so much more than before.\n\nThis was no time for revenge or 'I told you so'.\n\nI could see that she was right on the edge and buzzing with some significant anxiety so I took her bags and brought them in. I took her hand and led her to the sofa sitting her down and kneeling in front of her looking her up and down. OK, I wasn't two metres away from her but if she had it, then Mikey had it and I could never be two metres away from him. Bugger social distancing, I'd take my chance.\n\n\"I'm so sorry Rick...\" she said with a trembling bottom lip, \"I just... I didn't know where else to go.\"\n\n\"Nick,\" I said with a soft smile, all thoughts of shouting, angry women out of my head, \"don't worry, you're safe now.\"",
        "She mouthed a soundless 'thank you'.\n\nI stepped into the open plan kitchen, washed my hands for some reason, and made three mugs of tea as Mikey found the remote and started searching for his favourite TV channels. I gave her a mug and she took it gratefully holding it with both hands. She looked at me and I could see that she was still holding back tears, and that was a really big one for her. Nicky hardly ever cried -- ever, she just got angry - and it must have been quite a significant problem for it to result in this.\n\n\"Look, why don't you give Mikey his bath; then you have one - relax a bit,\" I smiled. I knew I was onto a winner as her parents' house and the one she was staying at the moment only had showers, \"there's nowhere you have to be, I've got enough food to feed the five thousand, Tesco are still delivering, so please... relax Nick, you've got this.\"\n\n\"Thanks Rick,\" she said and I could see her shoulders drop as she relaxed just a bit. She returned my smile.\n\n\"That's better,\" I said, \"Mikey!? Bath time!\" He jumped up from where he'd been sat and we had some chat about why he had to have a bath that early. I explained that plans had changed and both him and Mummy were staying at our house for a while and if he was a good boy, I'd get something nice for tea. That was enough and he ran to the bathroom.\n\nI took her hand and squeezed it,\n\n\"It'll be fine I promise.\"\n\nNicky smiled at his disappearing form and finished her tea, said another silent 'thank you Rick' and headed to the bathroom and I could hear the water running. \n\nThen to my real but very pleased surprised I could hear her laughing with him as she took off his clothes, then the splashing added to the laughter - not something I'd heard her do before in the bath. \n\nHer son, her teeny-tiny fragile baby boy in gallons of water had always been serious stuff, but there were songs being sung, games going on and a lot of splashing and chuckles. \n\nI peeked my head around the door and saw that she had stripped off her black slacks and silky blouse and was just in her matching bra and panties. In the months that had passed her body was even more impressive and the tiny amount of contentment spread had gone, and she was obviously back at the gym. Her arse looked amazing in the black high cut lacy shorts, especially as she bent forward and played with our boy in a manner I'd certainly never seen before, how I played with him when it was just him and me in fact, when Mum wasn't in the room to be all serious and grown-up.\n\n\"Rick! What part of a 3/4 year old, gallons of water in a slippery steel container don't you get!\" she would all but screech at me as me and him flung water at each other.\n\nI tried not to ogle her but it was so obvious, and far from Nicky having some insane 'can't you see I'm here in my underwear' control freakery she just rolled her eyes and smiled and nodded to the space next to her and I knelt down and joined in the fun. \n\nThe water eventually cooled and this lovely family moment was over, so Nicky pulled the plug, stood him and dried him. I picked him out of the bath, carried him through to his bedroom and I dressed him in his PJ's while she re-filled the bath for herself. \n\nI sat Mikey in front of the TV with a Disney film and opened a bottle of wine; I knew that while she bathed she had always enjoyed a glass and I knocked the door. \n\n\"Are you decent?\"\n\n\"I'm naked in the bath, it depends on your definition of decent?\" \n\n\"Well scoot down in the bath under the bubbles and I'll bring you in a glass of wine, your choice.\" I heard the swoosh of water and guessed she had lowered herself and I pushed open the door.\n\n\"There aren't any bubbles...\" she hadn't slid down into the slightly steamy water at all and her arm was held up for the glass, her great boobs up and out of the water both slightly hidden yet elevated by her other arm under them, those dark nipples I was so well acquainted with previously erect and pointing up at me. She smiled and took the glass.\n\nI backed out of the bathroom, fuck but she still had it. \n\nSomewhere between passion and compassion I dug around under the stairs for the box I chucked all of her scented candles in after she left and finding them put them on a tray and lit them. Pushing the door open with my foot I stepped in, turned off the light and placed them around the tub, glancing down at the just visible groove at the apex of her thighs crowned by a thin Brazillian as she rolled slightly to watch.\n\n\"Oh Rick,\" she sighed, \"thank you!\"\n\n\"You're welcome,\" I said, \"special occasion!\" I turned the tap to add some more hot water, switched on my new bathroom Bluetooth speaker and pulled the door closed behind me as started it to play a set list of easy and nice bluesy evening music from my phone and it rolled straight into The Lighthouse Family's version of 'Ain't no sunshine when she's gone'. \n\nSpooky.\n\nI ordered pizza because it was one of Mikey's all-time favourites and while he was his usual chilled self, I knew that whatever the disruptions of the day might have been, a large pepperoni and a large ham and mushroom with garlic bread and wedges would settle him right down and he'd sleep through the night, and I had a fairly good idea it would work on his Mum too. She appeared in one of her T-shirt nightdresses and sat in the large recliner armchair looking gorgeous but for some reason not making eye contact with me.\n\nWe ate our pizza and everything was rather nice. Mikey was pleased to be home with both Mum and Dad, eating pizza just made it even better. She didn't even complain when I poured him a glass of Coke which was most unlike her. She looked at me, smiled and shook her head again.\n\nOnce he'd finished his dinner she pulled him onto her lap and hugged him for a while, not something she had done since he was quite small; she 'didn't want to hold him back' she'd insisted. I did of course and she really hadn't approved.\n\nHe started to yawn, so she plonked him back on his feet,\n\n\"Give Daddy a kiss night-night Mikey!\" she said and he trotted across to me and did so, giving me a big hug with his tiny arms that I loved so much. She called him Mikey; She NEVER called him Mikey?\n\nAfter Nicky put him to bed, she came back into the sitting room but looked quite wasted and was looking sidelong at the sofa and the sleeping bag she had brought with her.\n\n\"Nick,\" I said as I tidied away the cardboard boxes and the glasses, \"go sleep in my bed.\" \n\n\"It's fine Rick, honestly, I don't want to impose...\"\n\n\"Don't be daft Nicky, you're hanging on by your chin strap look, please - just until I come in if you want.\"\n\nI saw her shoulders drop, and she eventually gave up the struggle with my logic.\n\n\"Thanks Rick,\" she said with a smile and she headed into the kitchen. Watching her bend to put the empty Coke bottle into the recycling bin it was obvious that she wasn't wearing panties under the nightdress - she had only started to wear a nightdress after Mikey was old enough to walk around the flat. She stopped by my chair and I thought for a moment she was going to bend down and kiss me like she had when we'd lived together but stopped herself instead picking up the wrapped sleeping bag and dropping it on the sofa, \"just give me a shake Rick,\" she said, \"I'll sleep here, it'll be fine.\"\n\nAn hour and a half later I went to bed and there she was, asleep on what had been her side of the bed looking more comfortable than I'd seen her in years. She'd asked that I wake her so she could sleep on the sofa, but damn it she looked so peaceful and rested that only the worst kind of bastard would have done that. \n\nI thought about going down and sleeping on the sofa; fuck that, why should I. The bed was huge, and almost brand new - instead I raised the duvet and slid in next to her. I normally slept naked but left my boxers on just in case.\n\nThe passage door was open and the small nightlight was on just in case Mikey woke up, it was just enough to illuminate her pretty face and gently closed eyes crowned by her perfectly shaped eyebrows. Her perfume smelled really nice this close, it was HER smell; I had stripped the bed the night after she insisted she wasn't coming home anymore because that gentle floral fragrance I could still smell was torture.\n\nI lay on my side happy that there was plenty of room for us both in the king-size that I'd bought a month or so back. I slid the tiniest bit closer to her in the way that I had before almost without thinking about it, Nicky responded to the slight shift in the mattress and huge duvet and scootched inches closer to me like she always had, her warm hand lying on my shoulder.\n\nI lay there and thought about having her back in my bed if not exactly my life, at least not how she'd used to be. I'd seen her naked and semi-naked and like it or not as I felt her warmth next to me there was nothing I could do about the throbbing erection in my pants.\n\nNicky had been an amazing lover, extremely sexy and very responsive and in our almost six years together our bed time experiences were the very best. It's just a crying shame that she was such a crazy psycho-control-beast for the last year.\n\nOur son Michael was unplanned and the result of a weekend wedding we'd gone to in Italy, but wholly welcome and we didn't think twice when Nicky noticed that she had missed a second period. \n\nShe was always a bit of a control freak and a natural schoolteacher, trouble is after Mikey's birth she became much more of a grown-up and had started to treat everyone like a pupil and was constantly telling people, well me really, what to do next even though they were adults and knew as well if not better than her. \n\nAs Mikey's grew up this had slowly increased, for instance every time I cooked she would be checking what I was doing, asking what she thought were rational points but I figured unnecessary interfering and often quite insulting nagging.\n\nHer Mother had also been a teacher and at her best did make Nicky look quite angelic at her worst. For that reason and her only slightly hidden dislike of me meant that I never really had much to do with her outside of holidays and family celebrations. Her father worked for the Department of Transport and I understood from Nicky that he had a study while Mum had the kitchen and sitting room and the pair of them rarely met other than meal times and when they went to bed.\n\nI had an awful notion that this was happening to us, and was brave - or perhaps stupid - enough to ask her how we could deal with it; after all, I was crazy in love with her and didn't want to lose her or what we'd had.\n\nShe reacted really badly and stormed out of the flat, calling me all of the F'ing B's and C's that she could lay her pierced tongue to. She went straight to her parents' house and stayed there, but this didn't last long and after a couple of weeks she moved out because of her Mum's constant need to control her daughter's life, point out her shortcomings (including her job and lack of promotion, the fact that she lived in a flat not a house, me and Mikey) and the desire to continually state the fucking obvious. I did hope that this might help Nicky see what I meant and how thoroughly nasty her Mother was.\n\nNow the thing is... while I could barely stand the old cow, she was worth a fortune to me...\n\nStill crashing and burning from both Nicky's leaving and Jan's insults I took a slightly different look at a job I was offered which then became my biggest single contract ever - for a panty-shield and tampon campaign of all things.\n\nI angrily wrote a script, suggested a famous American SNL comedian then talked the rep's through it with a fair amount of attitude. \n\nThe premise was that simple one - sanitary supplies would be so much cheaper, easier to use and more talked about if men had periods as well. My comedian, a female, would take a contrary position of course and throw in things about the how lucky women were, how menstruation has happened for millennia and women should shut up and get on with it. As well as telling off all of the viewers (that statistically half of whom were having, would have or have had periods) she talked in veiled terms about the kind of things that never seem to get a mention of outside of the quality Sunday supplements and high-end womens' magazines.\n\nConfession time - the appalling character that nagged and tried to silence the panty-shield and tampon wearing masses? She was actually a straight-up Mid-Atlantic copy of Nicky's Mum. I even showed the reps a short piece of video I'd taken of the real McCoy and they both loved and hated her, and the Ad exec asked if there was a way he could actually meet her because I think they didn't believe she was real. The character was so horrible that the campaign went straight out and was big on both sides of the Atlantic and everyone was talking about it.\n\nThe extra money was quite significant and meant that I didn't have to ask Nicky to contribute anything to Mikey's upkeep or towards the mortgage that I'd been able to pay off, I then bought some new stuff and redecorated. The flat was mine and Nicky had never once suggested that I should be the one to move out; her flat was across town and rented out to another teacher friend, but that tenancy still had the best part of six months to run.\n\nI guessed that it had been her mother's insistence that her late twenties daughter follow her 'my house, my rules' shit and with some other banter that had driven her from the virtually free and convenient parental abode to renting a room from a colleague at her school in her three storey townhouse, with the option to put up a small bed for Mikey to sleep on when it was her evening or weekend to have him. \n\nThe colleague was flying back from a long weekend in New York and put her entire family into self-isolation just before her weekend and that was that, she's at my place with all of Mikey's things and what looked like most of hers and looking gorgeous, well I thought so.\n\nI woke in the night, to find that I had turned to my side and so had she so we were spooned together, my arm around her and flat on her waist with her hand over top of it. I gave her a squeeze and she purred and I felt her push back into me, nice.\n\nI woke the next morning on my back and she was lying against me with my arm around her, her arm across my belly and hand under the elastic waistband of my boxer shorts, her fingers in my pubic hair and spread either side of my morning wood now resting on the back of her hand, her index and middle fingers just touching my scrotum. This hadn't been uncommon in the old days and I remember waking like that lots of times, it often went waaaaay further. I stayed very still.\n\nNicky sighed and purred just a bit and I sneaked one of my eyes open and saw that her nightdress had slid down a bit at the front and her great cleavage was very pleasant to look at. I closed my eyes and lay back, pleased to feel female hands on my genitalia again after so long.\n\nShe started to stir, and I felt her fingers gently push down either side of my penis and gently scratch at my pubic hair. She whipped her hand out which made me 'wake up'.\n\n\"Oh...\" I said innocently at the girl with her head on my pillow and her face an inch from mine, \"morning Nick!\"\n\n\"Morning Rick,\" she said with some admonition, \"I thought you were going to wake me up?\"\n\n\"And what kind of bastard would I have been to do that?\" I rolled on my side to face her, \"you'd obviously had a really tough day or two, and you looked so amazingly comfortable I couldn't wake you!\" she raised her eyebrows in response, \"Jesus Nick, I'm a gentleman!\" I smiled, wanting desperately to reach out and brush away the stray lock of hair hanging across her cheek.\n\n\"This is an extremely comfy Bed Rick,\" she stretched, \"New?\"\n\n\"Yes,\" I replied, \"had a bit of a result with a big campaign,\" I didn't mention it was based on her mother, \"and lashed out on a few things; this, the TV there, the dishwasher, new kitchen,\" I smiled again, \"when I climbed in you were miles away, I didn't think we'd even get close...\"\n\n\"I didn't mean to touch you!\" she burst out.\n\n\"You touched me?\" I said with a grin.\n\n\"I... I woke up with my hand down your pants this morning, and you were... how do I put it, pleased to see me?\"\n\n\"Morning wood,\" I looked down, \"Sorry, thing has a mind of its own, especially when a beautiful woman has a hand on it.\"\n\nShe giggled and blushed,\n\n\"It wasn't like that!\"\n\n\"I know,\" I said, and snapped out of it, \"don't worry; you stay where you are, and I'll get the tea.\"\n\nI rolled out of bed and noticed in the mirror doors on my Ikea wardrobes that she was checking me out, but more than that I saw that as she yawned and stretched, those lovely dark nipples I'd seen cresting through her bath water the night before were hard and poking into the thin cotton of her T-shirt.\n\nHmmm...\n\nI went to the kitchen and a quick peek around Mikey's bedroom door showed my little boy still half asleep but starting to stir. In the entrance to the kitchen was a pull-up rail I'd had installed and after clicking the on-button on the kettle I did ten reps on the thing, seeing as I was being scrutinised.\n\nI made tea and thought about the beautiful woman in my bedroom with just a T-shirt between her and nakedness. Still nice to look at and the smell of her perfume, it still turned me on outrageously.\n\nAs the kettle clicked off and I poured the hot water I heard the sound of a young yawn behind me and there was my baby boy rubbing the sleep from his eyes,\n\n\"Where's Mummy?\" he said in mid-yawn.\n\n\"She's still in bed Buddy,\" OK, whatever thought I might have had in my head disappeared, I felt mischievous, \"why don't you run in and put on the TV and have a cuddle for a few minutes.\" She was never happy with him being in our bed once he stopped being a baby and became a little person, it was one of things we fell out about, but he would jump in with me in the mornings all of the time now. Worse than that we would watch the TV I'd installed as soon as she'd moved out.\n\nHe grinned and ran off and I heard him leap and land with a cry of delight from Nicky.\n\nNow that was strange, like her parents she had never been that tactile, if her playing in the bath with him hadn't been enough of a surprise the sound of her evidently tickling him and rough-housing in my bed certainly was.\n\nI took the three cups of tea I'd made and the box of biscuits under my arm and walked the short distance to my bedroom and as I turned into the room I was greeted by the sight of her gorgeous bare bottom as she bent over him to tuck the duvet around him, she stood and turned.\n\n\"Oh! Sorry Rick, I... err,\" she brushed the material down, \"I just need the bathroom, excuse me!\" and she slid past actually holding her boobs down so they didn't brush against me. My first glance had showed me she was actually covering her erect nipples so obvious that close up.\n\nI put the tray down and slid in next to Mikey, slipping an arm around him and handing him the plastic box with the biscuits in. He expertly opened it, taking two digestives and reaching over me to dunk one in his Captain America mug.\n\nMikey was like me and really liked a cup of tea. My parents had started it and always made him one, while Nicky and her mother were most against it. Tea was for adults, children had juices or squash, water even better; they also needed to play quietly and not disturb Grandma or Grandpa Fraser. \n\nFuck that; when Mikey stayed with my parents he was positively encouraged to play around, get noisy AND messy, eat sweeties, cake and crisps, play around with the dogs and generally tire himself, and his grandparents, out. \n\nHer mother had not taken to grandparenthood at all well, and I remembered biting my tongue when we'd first told her. The snooty bitch had a look on her face like Nicky had contracted a venereal disease, had done something that only the poor and the ignorant did, and we had done it to annoy her.",
        "\"Couldn't you have prevented it?\" she sighed with that look on her face like the sewers had all flooded into her garden and it was my fault.\n\nMy Parents were ecstatic from the start, especially my Mum who while worshiping her older grandchildren was just waiting to be a Baby-Granny again and offered any and all assistance we might need and brought a huge basket of baby things for us when Mikey was born, and this still carried on as he grew.\n\nHer mother didn't -- she never visited Nicky in the hospital, never came to the house or offered any of that new Mum advice that maternal grandma's are supposed to; My Mum stepped into the frame perfectly however and loved every second of it, and even that annoyed the miserable Mrs Fraser. \n\nWhen we visited for the first time with Mikey, her Mother was quite concerned that we didn't put him down anywhere in case her grey and magnolia, sterile, unchanging, terminally boring, soulless house might become dirty, infected with baby milk, vomit or poop. When his nappy needed changing, I took him out to the car and did it, sitting there and looking at my phone and listening to my stereo for at least forty five minutes, blaming a work phone call for my continued absence. \n\nNicky complained but I countered her argument with, \"your Mum doesn't want our son in her house - didn't she make that obvious enough for you?\"\n\nIt was hard to argue with.\n\nThe snooty bitch then announced that she wanted to be called Grandmama -- like the Queen; I could barely control my mirth and from that presumptuous point Michael became Mikey, and this time it WAS just to annoy her. She really didn't want grandchildren but hey, not her choice. My Parents were Nanny Mac and Grampy Mac and loved him twice as much as soon as Mrs Fraser's dislike became evident at his christening. \n\nPretentious old bag, I was pleased I'd made so much money out of her.\n\nThe TV was on and we were watching morning cartoons when Nicky came back from the bathroom, stopping in the doorway with a very genuine smile on her face at the scene before her. She folded her arms, rolled her eyes and shook her head, stepping to her side of the bed and sitting down, slipping her long slim legs under the duvet, reaching over Mikey to take her mug from me, the same National Union of Teachers one she'd used when she'd lived here.\n\nShe sipped, smiled then reached out for a biscuit herself, eating between meals -- what?\n\nOnce satisfied she too settled and slid down a bit to watch the cartoons, slipping an arm under mine and around Mikey as well.\n\nIt was a lovely cuddle and we sat there for an hour watching his various favourites with him and me singing the theme tune to Spongebob Squarepants and Nicky laughed.\n\nSoon we were all getting up and heading for the kitchen and a quite splendid breakfast of toast and a variety of toppings, still in our various nightwear with no one really in a hurry to do anything.\n\nI worked from home anyway and was quite well forward in the projects I had going on so I had some free time for family stuff, Nicky's school had closed the day before and other than some learning materials to email out to her class and some monitoring on Monday there was little for her to do either.\n\n\"Come on then Mikey,\" I said, \"time to get washed and dressed!\"\n\nNicky just grinned and started to pack our plates and cups into the dishwasher, another new purchase since she'd left. She didn't seem to mind though, it turned out that the house she lived in had one.\n\nBy the time Mikey had washed his hands and face and cleaned his teeth, and I did likewise it was just a bit after twelve and way past the kind of time that Nicky would normally be done and out by, her family was one of those 'early to bed, early to rise, then up and out and doing' families that couldn't condone the concept of the lie-in. Her mother considered me lazy because I'd once said that when I didn't actually have to be anywhere on a Saturday morning, I very occasionally liked to lay in bed with a cup of something, a book or perhaps listen to the news then that slow Radio 4 morning stuff that is all so well done. \n\nIn her evil mind she extrapolated that into 'he spends his life in bed' and this seemed to infuriate her because as everyone knew 'early to bed, early to rise, makes a man healthy, wealthy and wise'. The fact I very occasionally slept in (young child allowing of course), didn't leap from my bed and go straight for my workbench, a shovel or a plough and got very well paid for what I did while not appearing to move from a computer in a small side room off of my lounge drove her mad as well I learned later. \n\nShe had looked rather disappointed when she discovered that her daughter's boyfriend didn't have a 'profession' and shook her head and smiled, knowing she had been let down by her daughter yet again. I delighted in telling her that the 'professions' were so twentieth century in concept and that, for instance, I had earned twice the salary of a headteacher for the last three years and while my degree was in English Literature, my Master's was in Classical poetry. \n\nShe didn't have a Master's, had encouraged Nicky to get one, then as soon as she discovered I did, they were instantly devalued and not worth the paper or the time. So I bought a shiny frame for mine that had languished in my bottom drawer with my other education certificates and put it in our living room over the fire place above the Fraser family portrait, the three unsmiling souls impeccably dressed against a fake bookcase, next to my family picture of Nicky and I, my Mum and Dad and my sister Judy and her husband on the beach at Brixham, all with ice cream. Her mother never came to our house but I really hoped she would one day just for that certificate, that frame cost almost a fiver.\n\nI took Mikey to his room and dressed him in his jeans and a T-shirt and sent him on his way with a hug, couldn't get enough of them. I stood and put my boxers in the laundry basket for the quick walk to my bedroom and there was Nicky with her T-shirt hanging over her forearms and her lovely naked body on display to match mine.\n\n\"Oh!\" she said, and held the just removed T-shirt over her midriff, and looked at me.\n\n\"Sorry Nick,\" I said, \"I just...\"\n\n\"Rick,\" she said with a smile, \"whatever our circumstances we've both seen enough of each other with no clothes on not to be worried about this.\" As if re-enforced by that statement she slipped the T-shirt off of her arms, folded it and laid it on her pillow. I was pleased to see that but didn't mention it.\n\n\"OK,\" I said with a grateful sigh, then a pause, \"you still look fantastic Nicky,\" I said, my head to one side as I looked her up and down.\n\nShe did the slightest half-twirl, with the tiniest curtsey making her perfect arse to stick out just enough.\n\n\"Thank you!\" she squeaked, and she adopted the same pose I had, \"Not looking so bad yourself Rick.\"\n\n\"And the bathroom is all yours!\" I said indicating the open doorway.\n\nShe nodded with a big smile and walked down the short passage and I swear she sashayed, making sure that everything moved in the way she wanted it to.\n\nStill fucking hot!\n\n\"Mummy, I can't get CBeebies on!\" said Mikey and I turned and looked; but rather than her arm across her boobs and hand over her puss, she stepped forward into the living room, knelt down and put an arm around him and took the remote with the other.\n\n\"Tell me the number!\" she whispered to him as if she was embarrassed that she didn't know it.\n\nHe whispered it back, she tapped the right buttons and suddenly the theme tune to the Tweenies was playing. He kissed her cheek, hugged her around the neck and was back to the sofa.\n\nNicky stood, touched her cheek where he'd kissed her and slipped into the bathroom almost with a skip.\n\nWe had lunch and decided we would walk to the park and it was really nice, with Mikey between us swinging from our arms at every opportunity. He played on the swings, on the roundabout and had a great time, little did I know that after the very next day the playground would be closed and taped off the day after.\n\nWe went home and I cooked our evening meal without any advice or interruption and there was another Disney film, a new one that none of us had seen. Mikey was impressed but once he was in bed and asleep, Nicky and I both tore lumps out of the live action version of what had been a fantastic cartoon.\n\n\"Would you like another glass of wine Nick?\" I asked. There was still half a bottle in the fridge.\n\n\"No thanks,\" she said.\n\n\"Tea?\"\n\n\"Rick, I know I'm a temporary guest and everything but please, you don't have to wait on me!\"\n\n\"Sorry Nick,\" I said, \"I'm just conscious that you might be a bit... strung out by all of this.\"\n\nShe smiled,\n\n\"I am, and I do know that's what you're doing but please don't worry, it's no easier for you than it is for me.\" She smiled and stood, \"I'll make you a cup of tea, how's that?\"\n\n\"Perfect,\" I said.\n\nI was watching the late movie 'Zero Dark Thirty' that I hadn't seen before where Nicky had,\n\n\"I'm going to bed Rick,\" she said with a smile, \"Am I still OK to...\" she nodded towards the bedroom.\n\n\"Of course,\" I said, \"I'll just catch the end of this.\"\n\n\"Oh,\" she said a mischievous grin, \"Miss Scarlet does it in the library with the lead pipe.\"\n\n\"Damn,\" I said, \"spoiler.\"\n\nShe smiled and dipped slightly, but then stopped herself,\n\n\"Night Rick,\" she waved quickly and was gone.\n\nThere is was; it was her precursor to encouraging me to come to bed with her. The dip; in better days this was followed by the opening of a few buttons on her top to show the cleavage followed finally by popping the buttons on her trousers or her skirt to walk half naked to our bedroom, generally with me behind her.\n\nSimilarly that was probably why she had turned down the wine. It wasn't that I intended to get her into bed but even Nicky admitted that a couple of glasses of wine were just the thing to get her 'nicely in the mood'.\n\nI watched the end of the film very impressed by the whole thing, loving the strong cast and the quite 'warts and all' aspect.\n\nI went to bed and Nicky was there, snuggled up and sound asleep. I stripped down to my boxers and slid in next to her.\n\nAnd there it was.\n\nI could smell her perfume; I knew that she'd put some on when we'd gone out for our walk, but none since, but here I was laying next to her and I could smell it strongly. I held my breath and leaned forward and sniffed.\n\nYeah, she obviously sprayed it before getting into bed!\n\nWell two could play at that game!\n\nWhen I woke next morning a bit before six, I'd forgotten to pull the blind and the sun was coming in, and we were spooning again but this time my covered erection was pushing hard against her bottom her nightdress having rode up, in fact nestling quite nicely between her buttocks. I pulled her even closer, slipping an arm under her pillow to slide it around her neck while the other was still on her waist. The arm around her neck made its way into the neck of her nightdress and down to cup her wonderful warm breast, while the other sneaked in from beneath to hold and caress the other.\n\nI lay there and it was quite lovely, and her subconscious must have thought so too, as her nipples hardened into the palms of my hands, and her arms lay across mine. As I drifted off, I even felt her rub her arse against my erection.\n\nThe tape-recorded sounds of church bells rung out from the empty bell tower of the 1950's red brick and concrete block church built as a temporary replacement for the one that the Luftwaffe had destroyed seventy five odd years before and was a walk down the road from my place.\n\n\"Good morning Rick!\" said Nicky stretching out her arms but not removing mine from her lovely body, \"you slept well I see?\" She rubbed her arse against my erection again.\n\nI made a great play of coming around, slowly removing my groin from her bottom and gently sliding my arm from out of her T-shirt but still under her. The other one from underneath was a lot easier to remove but I will confess that I gave her right boob a squeeze before I let go.\n\n\"Sorry Nick,\" I said stretching like she had, \"was right out of it.\"\n\n\"Hmmm...\" she said.\n\n\"Oh, so it's OK for you to all but masturbate me yesterday morning while you were asleep...\"\n\nShe rolled over, a shocked smile on her face, which was quite close to mine.\n\n\"I did no such thing!\"\n\n\"Virtually!\" I said defensively but with a grin.\n\n\"Oh Eric!\" she said; just in the way she always had in those happier times. She pursed her lips and narrowed her eyes, but I was pleased to note did not remove my arm that was now lying on her waist, nor did she re-arranged her T-shirt to cover those parts that I'd previously been either holding or thinking about holding, \"you never change do you!\" she said, leaning forward, \"still a fucking pervert!\"\n\n\"Ah, NO!\" I said, \"I rather think you'll find that if I'd tied you to the bed and spanked you with your hairbrush, THAT would have made me a pervert!\"\n\nI knew that the thought of that kind of thing turned her on and she had once, while slightly pissed and back from watching Fifty Shades of Grey at the cinema, lay across my lap while I lifted her dress and pulled down her panties and lightly spanked her.\n\nShe took a deep breath and grinned, knowing what I knew.\n\nThere was the sound of a flushing toilet and running water and we knew that Mikey was up. She kissed the end of my nose and rolled out of bed, eventually straightening her nightdress over her quite delectable bare bottom. \n\nShe stood in the doorway, and held out her arms,\n\n\"MIKEY!\" she called out, and there was the thunder of quite small feet then her coming back into the room spinning our giggling son a few times before dropping him on the bed, \"You wait there with Daddy, it's my turn to get the tea and toast.\"\n\nMikey slid in next to me reaching across for the TV remote on my bedside table, and before we knew it cartoons were playing.\n\nWe had another nice, lazy messing-around-in-the-flat day with Mikey in charge of what was going on and what we did, We had a quite respectable Sunday roast and we all took a share in the preparation and actually sat up to the small dining table that overlooked the garden.\n\nMikey had started to yawn, so as I loaded the dishwasher Nicky told Mikey it was bath time.\n\n\"Can I have bubbles!\" he shouted and aware that Mum wasn't quite so funky as me added, \"Daddy lets me have bubbles!\"\n\n\"Then you can have bubbles!\" she smiled at him, tucking her hands into the back pockets of her jeans and holding her bottom, something I had wanted to do since I'd seen it the morning before.\n\nShe took his hand and led him to the bathroom.\n\nI cleaned up, loaded and switched on the dishwasher and made Nicky a coffee. Yes, I'd even bought one of those funky kitchen sized coffee machines that could steam milk, but made her an Americano, her favourite.\n\nI pushed the bathroom door open to the sound of laughter and Nicky leaning over the bath and a huge mass of white bubbles that I could see included my little boy, a pile of them on his head and his face a picture of the simple joy that moment gave.\n\nMy pleasure was immediate too. His Mum was wearing another matching bra and panty set, white with black polka dot string disappearing into the cleft of her bottom to reappear with the faint hint of the cleft of her puss between her thighs as she leaned forward to splash him, managing to get a fair amount of bubbles and water on her at the same time.\n\n\"Here,\" I said handing her the coffee, \"refreshment.\"\n\nShe sat back and I could see that the white and spotty balcony bra that was giving her such a splendid cleavage was soaking wet and virtually transparent, which for some reason made the whole thing so much more sexy.\n\n\"Oh Wow Rick!\" she purred as she sipped at her coffee, \"this is lovely!\"\n\n\"New machine in the kitchen,\" I said, \"treated myself.\"\n\n\"Is this decaf?\"\n\n\"Of course it is,\" I said, then looked at her wonderful breasts, I paused, \"Why, do you think I was trying to keep you awake tonight?\"\n\n\"Eric!\" she hissed at me, then grinned and bit her lip before continuing to drink her coffee.\n\nIt was the same again as the night before; she pulled the plug and stood Mikey up, while I rubbed him down with the towel and lifted him out.\n\n\"I'll get rid of all the bubbles!\" she grinned and taking the shower head started to wash the soft white mountains of remaining suds towards the drain.\n\n\"Come on then Mikey,\" I said swinging the door open and letting him out. I turned to pick up Nicky's now empty mug only to be greeted by the sight of her perfect arse pointing right at me as she stood bent at the waist with a supporting hand on her knee, her slightly splashed panties giving me the best view of her pussy that I'd had in months. As if to add insult to injury her spraying the bathtub gave her bottom the most wonderful swaying motion, the same as she did when we had gone at it with her on her hands and knees. She turned to me,\n\n\"I'm soaked!\"\n\n\"All part of the 'bubbles' thing Nicky!\" I said.\n\nShe reached behind her to unclip her bra and those perfect boobs spilled out,\n\n\"Seeing as I'm already wet, I'm going to grab a shower - wash my hair too,\" she turned and pushed down her wet panties, pushing her bottom out to me again!\n\nWow! Upping the game were we? She stepped into the shower and pulled the glass door behind her. I would have given up a fortnight TV privileges just to stand there and watch.\n\nBut I couldn't; much as I had a feeling she wouldn't have objected, if we were just friends that had seen each other naked lots it could be a bit creepy and I would play the waiting game if I needed to. Mikey was long since dry and ready for bed so he waved to her and she waved back, calling out to me and asking if she could borrow some of 'my' shampoo.\n\n\"Please?\" she said hugging herself and giving me a view of that great cleavage yet again.\n\n\"Help yourself!\" I said, knowing she would soon see my erection pushing against the fly of my jeans if I didn't leave soon.\n\nMikey asked for a drink before bed and I of course gave in making him a small hot chocolate, which got me thinking to what his Mum liked on a cosy evening. \n\nWhile he sat and drank, I ran to the bedroom, stripped it and remade it with fresh linen. Again I knew that Nicky loved nothing more after a shower than getting into a bed with crisp, fresh laundered sheets and pillow cases. If I had a shower before I went to bed this would just add to it.\n\nI got Mikey settled into his bed just in time for his Mum to come out from the bathroom wrapped in just a towel to give him a hug and kiss him goodnight.\n\nI turned off his light, read him a few pages of that week's book and pulled the door half shut so he could still see the passageway nightlight.\n\nI went back into the living room, hoping that the teasing that had been going on could be reconsidered but it was to find Nicky still in her towel, sat in front of the TV and staring at the thing.\n\n\"Rick,\" she said, \"you need to watch this...\"\n\nWe'd been watching cartoons and movies all day and had somehow missed the advice about the Prime Minister's televised address about the lockdown and flicking through the channels Nicky had found it just as he'd started to talk.\n\nI had planned to sit on the sofa with my one-time partner with some bedtime hot drinks all very sweet and cosy and discuss options on a phased return to our previous living arrangements.\n\nBut here she was, white-faced, nail biting and staring at probably the most significant speech either of us would ever hear short of a declaration of war.\n\nI sat next to her; the towel still tightly wrapped.\n\nThe speech finished and there was one of those 'we're taking you back to the studio for some expert comment' moments.",
        "We sat and watched as the presenter expanded on what the PM had said and what the impact of that was going to be.\n\nI stood and walked across to the kitchen and made tea instead of the hot chocolate like I'd thought about before.\n\nI handed one across to her,\n\n\"Thank you.\"\n\nAll of that cheeky warmth we'd had was gone and she picked up her phone, fuck.\n\n\"Hi Mum,\" she said, \"yes... yes, I'm fine -- how are you?\"\n\nThe usual polite introduction she always had with any discussion, 'Good manners Nicola, they cost nothing!'\n\nThere was some chatter from the other end and I could hear the nasal, high-pitched whine that went for speech whenever that fucking witch ever opened her mouth. Nicky had phoned her, but it was essential that Mother spoke first, obviousl; because she was so much wiser, cleverer and generally more important than... well, everyone really.\n\n\"So... Mum listen... yes, I know... yes...\" She sipped her tea and looked across at me and shook her head, \"yes... what now?\" she narrowed her eyes as her Mother probably gave her the benefit of her years of experience in fighting global pandemics. \"No, Mikey and... all right MICHEAL and I are... we're staying with Eric at his place. YES! Because...\" I guessed she stopped while her Mother gave forth on how the global pandemic she was such an expert on was probably my fault, \"Sophia and her family have gone into voluntary isolation because they're just back from... because... Mum! Because this is his home that's why!... He's not allowed to play at your house... because he's a bloody four-year old that's why! He is NOT badly behaved... Yeah and I'm a schoolteacher too... I know Rick only has a small garden, but you won't even let him in yours... Mother! Will you...\"\n\nBloody hell! She was arguing with the font of all knowledge and wisdom! Those two weeks she'd lived there when she first moved out had seen a real sea-change - this was huge... this was class three's teacher arguing with Einstein, this was the Sunday league player telling Alex Fergusson where he'd gone wrong for all those years, Moses saying to God that didn't he think that eight would be a better amount of commandments, particularly that whole 'coveting' thing, no one really covets like they used to.\n\n\"Alright, yes... I know you can get your own shopping...\" despite Nicky's Herculean efforts, her offers of support were doomed by sheer intransigence, in fact the witch felt she was the one that should be taking care of everyone else -- probably not me I expect, \"sorry to have bothered you.\"\n\nShe all but punched the front of the phone to disconnect the call. I could see that her pretty face was halfway between rage and tears, perhaps we'd need the hot chocolate after all.\n\nShe went to bed about half an hour later, despite my efforts to try and talk to her about it, I really didn't want her to lose it with me again.\n\nI made the hot chocolate, switched everything off and walked to the bedroom to find her laying down and staring at her phone, nightdress on, towel over the radiator. I turned off the passage light and handed her the steaming mug.\n\n\"Thought you might need that.\" I said and stripped down to my boxers and slid in next to her, but still some distance away, my nice clean and fresh sheets unnoticed.\n\nI took my mug and turned on my bedside lamp, looking at Nicky who seemed very grateful for the tiny luxury, one that I hadn't made since she'd left.\n\n\"Thanks Rick,\" she said and sipped with eyes closed against the badness. She took a second sip and her eyes sprung open again, \"that bloody woman!\" she almost screeched; excellent, at last we could talk about it and get it off her mind, \"I just wanted to make sure she was alright you know?\" She sipped some more chocolate, \"but noooo... what the bloody hell does the government know, she was more concerned about having to cancel the Townswomen's Guild flower show than she was about Mikey! She was even more pissed to know we were both here though,\" she gave that half-closed eye flutter that her mother did when annoyed and imparting wisdom, \"She doesn't like him being there but It's much better that Michael comes to stay with her rather than HIM!\" she snapped in the squeaky pulpit voice her mother used, \"Oh yeah, much better that he be cooped up in something like a fourteenth century monastery with a vow of silence and a thousand hail Mary's for breaking into a trot! COW!\"\n\nI'd never seen her this cross with her mother, but I stayed quiet of course; the last time I'd suggested something unpleasant about Mummy dearest, she left me. \n\nShe sipped some more of her hot chocolate and looked at me, getting it straight away.\n\n\"OK Rick,\" she said with as much of a grin as she could manage, \"I'll give you that one.\"\n\nI so desperately wanted to come in with the Dad joke, 'you'll give me one?' but guessed that this wasn't the time.\n\nI took a deep breath,\n\n\"The world begins and ends with her Nicky,\" I said, \"everything else - you, me, our son even - is just another little troubling irritation stopping her from getting on with making sure the world understands it's all about her... mate.\"\n\nI'd been working on a term of endearment since she'd moved back in; I dearly wanted to go with the ones I'd used before, particularly 'Baby' which had been her favourite right from when I called her it the first time. Cheesy I know, but that was how we had been.\n\nShe let both my 'mate' and my description of her Mum go by, and after finishing her drink, plonked her mug down, she was in 'that' state again -- not just angry but there was something else ticking away there as well.\n\nI saw that she reached for her phone again, stopped, and put it back down which meant she was still upset. I could think of only one thing to do. I finished mine, turned off my light and got lower and rolled to roughly the middle of the bed. She was lying on her back with her arms tightly folded, so I rolled close and gently taking her right shoulder pulled her on to my chest and into a hug.\n\n\"Not now Rick, yeah?\" she said.\n\n\"Just go with me on this Nicky, please?\"\n\n\"Rick, I'm not in the...\"\n\n\"You don't have to be in the mood, just lay here quietly - with me.\"\n\nI pulled the duvet up and over her and she felt deliciously soft and warm against me.\n\nAfter a few moments I felt her now unfolded arm snake across me and I reciprocated, pulling her into a hug, and as I had done on so many occasions gently stroked her hair and I felt her relax into me. Moments later there was the slight, barely noticeable shoulder heaves as she cried into my shoulder, and I held her tight and let her get it out of her system.\n\nAfter a few minutes she stopped and reached over to me to my bedside table and a box of tissues. She sat up a bit and wiped her face, blowing her nose at the end.\n\n\"Better?\" I said.\n\n\"Much,\" she threw her used tissue to the waste bin, \"Thanks Rick!\" She leaned forward and kissed my cheek, \"Oh,\" she said and reached over me for another tissue and mopped my neck and shoulder and the few tears she'd dropped there. \"Sorry, I really don't know why I let her affect me like that, I should be used to her by now.\"\n\n\"Don't worry, she's your Mum,\" I rolled on to my side looking straight into her face, \"Families, they are the reason we get to pick our friends.\"\n\n\"Yeah!\" she grinned, laying her head on her pillow just across from me. She wrinkled her nose and there were her freckles just over it, more evident thanks to the early spring sun we'd been enjoying, \"thanks Rick, I really mean it.\"\n\n\"Don't worry about it,\" I said, not wanting her to start crying again.\n\n\"You didn't have to take us in.\"\n\n\"I kinda did Nick, Mikey lives here?\"\n\n\"Alright, you didn't have to take me in.\"\n\n\"And where would you have gone Miss Fraser hmm?\" she grinned again, \"Yeah, not to your parents, Mikey would have been running home at the end of the first evening!\"\n\n\"Yeah probably,\" she let her sad smile fade with a soft sigh, \"Chasing after me I expect.\"\n\n\"Come here,\" I said softly, \"I think we both need this.\"\n\n\"Need what?\" she said, the faintest grin just visible in the ambient light. \n\n\"A cuddle Nicky, nothing more.\"\n\n\"That would be nice Rick,\" she switched around so I could spoon her and she wriggled her bottom into my groin. I slipped my right arm under her pillow and over her shoulder and my left over her waist to settle my hand over her still flat tummy. A moment later her hands were over mine giving them a squeeze and I felt her rub her cheek against my arm. \"did you change the sheets?\"\n\n\"Yeah...\"\n\n\"Thanks Rick...\" I could just detect a tremble in her whisper and felt her kiss my arm that was around her.\n\nWhat my bedside clock told me was an hour later both hands were on both of her tits, with her hands over top and giving the very occasional squeeze, which was how we always did it before.\n\nIt was very nice.\n\nIt got nicer at some strange time in the night when I briefly woke to find she had turned in my arms to face me with her lips pressing against mine and her tongue invading my mouth as I returned her kiss. It lasted no longer than four seconds, four very nice seconds I'll grant you, but that was it and she pushed her delectable body against mine in our cuddle and I could hear her slow steady breathing again. I held her even tighter.\n\nJust as I started to get very comfortable in that first light 'slowly coming around still half-asleep' torpor, feeling that warm body against mine her right arm high on my chest and thinking about risking a hand on the curvaceous bare bottom just sticking out from under the duvet, the piano introduction of The Bangles 'Manic Monday' broke the silence to remind me it was work o'clock.\n\nThe hand that was going to so innocently and accidentally rest on her gorgeous bum instead reached across to my bedside table and my phone and I had to use the hand that had previously been around her to swipe the snooze button.\n\nShe gave a slightly grumpy sighed 'humph' sound, her face against mine, \n\n\"Wassa'time?\" she mumbled, her soft lips moving against my cheek.\n\n\"Half six,\" I said, pressing my cheek against hers, \"sorry, it's still in non-lockdown mode, It gives me fifteen minutes to come around before I have to shower and then get Mikey up, washed, dressed and breakfasted and to his pre-school.\"\n\n\"Six forty-five to get Mikey to pre-school?\" she said with some surprise. With two of us it had been a much simpler deal and we were rarely getting out of bed much before seven fifteen, sometimes seven thirty if one of us had been horny.\n\n\"He's like his Daddy,\" I said, \"You can't rush him first thing. And his lunch box has to be a bit special.\"\n\nShe grinned,\n\n\"Well he can have a lie in this morning, in fact we can ALL have a lie in.\" Although she was right up against me, she still made a bit of a wiggle as if she were trying to get even closer, her face warm against mine.\n\nI rolled out of bed at a bit after seven, Nicky still snoozing off the previous nights trials and tribulations with her perfect bottom on display, improved by her raising her right knee high into the space that I had just been laying in and I had a brief glimpse of her bare puss.\n\nChrist but this girl was turning me on and I desperately hoped that she knew just what she was doing!\n\nI filled the kettle and switched it on, got out cups and loaded my four slice toaster before wandering into Mikey's room, picking him up and taking him through to my bed where I laid his still sleeping form next to his Mum, even going so far as to put her hand on his chest.\n\nBy the time breakfast was made and loaded onto a tray, I could hear the first stirrings of life from Nicky and the sound of early morning cartoons. She was still a bit snoozy but was hugging our son and he didn't seem to mind at all.\n\n\"Rick!\" she said stretching in great delight, \"I could get used to this breakfast in bed routine!\"\n\nI sat down, and folded down the legs on the tray and put it across Nicky's lap. They tray was another new purchase that I had bought, stuck down the size of the fridge and completely forgotten about.\n\n\"Oh Wow!\" she said, sitting up a bit more, \"Hey look Mikey, look how Daddy's treating us to breakfast in bed!\"\n\nThere was a big pile of toasted fried egg sandwiches and Mikey's grin was almost as big as his Mummy's, which made Mummy's grow even more. \n\nWe all tucked in and the pile reduced. Mikey sat up, wiped his eggy mouth on the back of his hand and kissed my cheek.\n\n\"They were yummy, thanks Daddy!\"\n\nNicky tutted him, took a tissue from the tray and wiped his face properly, she then kissed his cheek noisily and he giggled and scooted just out of her reach wiping his kissed and now clean cheek with his hand and making for the TV remote, settling just out of kissing distance at least. She handed around the cups of tea I'd made and sipped hers gratefully putting the still hot cup on her bedside table. Next she placed the tray on the floor beside the bed.\n\nShe looked at me, kneeling up herself,\n\n\"They were reeeeeeally yummy... thanks Daddy!\" she leaned forward and I think was going to kiss my cheek but the slightest turn of my head had her soft lips touching mine, and rather than the loud slurp I was expecting it was the soft touch, closed eyes and the gentlest, almost surprised sigh.\n\n\"You're very welcome,\" I said when she pulled back from me, a surprised look on her face, red cheeks and a hint from the low neck line of her nightdress of that red flush she got to her chest when she was getting excited or emotional about anything.\n\nShe looked like she wanted to say something but settled instead for putting her hand across the red patch on her chest telling me more about how she felt than she did, guiltily rolling her eyes and pursing her lips.\n\n\"I've got to get to my computer,\" I said breaking the silence, \"some of us have got to work for a living!\"\n\nNicky gave me the most delicious look,\n\n\"Oh you poor thing!\" she purred.\n\n\"Whereas you, the public employee, gets to stay home on full pay.\"\n\n\"Yeah,\" she turned on her hips and lay back down again resting Cleopatra-like against the piled pillows and headboard her T-shirt riding high up those great thighs of hers, \"full pay at... what... A sixth of your annual salary?\"\n\n\"So I'm to be punished for being successful?\"\n\nShe paused,\n\n\"Oh, if only...\"\n\nBiting her bottom lip, she pulled up her knees to tuck her feet under the duvet and in doing so exposed her bottom and puss to me yet again, only for a short time but it was enough.\n\nIt was my turn to roll my eyes, shake my head and grin. I stood, my erection obvious in the front of my boxers,\n\n\"Time for a cold shower I think,\" I said, not hiding my condition from her as I walked out of the bedroom.\n\nI was able to get my head around my work relatively quickly and was running through ideas for a couple of contracts when there was a tap on my shoulder,\n\n\"Sorry Rick, I've got to log my laptop into the Wi-Fi -- where's the password written down?\"\n\n\"S'alright, give it here,\" I said, holding out a hand.\n\n\"Just tell me,\" she said, \"I don't want to keep you from what you're doing.\"\n\n\"It's fine mate honest.\"\n\n\"I won't tell anyone!\"\n\n\"Oh, I know that,\" I said guiltily.\n\n\"Tell me!\" she said with a rising inflection, holding her laptop to her chest. \n\n\"OK,\" I said, \"easy one to remember, 'nicolasperfectarse'...\" I paused for effect, \"all lower case,\" I said and told her which letters were substituted with numbers and the one symbol.\n\nHer mouth fell open, \n\n\"Eric!\" she almost screeched, \"that's... you wicked...\"\n\nI raised a restraining hand,\n\n\"Now Nicola,\" I said, \"the password instructions with my new router were quite specific, they said pick three words, something memorable, something you won't forget.\" I rolled my chair back the tiniest bit to look at her shapely bottom now lovingly wrapped in blue faded denim, \"and let's be honest, no man in his right mind would forget your perfect arse.\" \n\nShe blushed again, and I could see her chest doing the same; she hugged her laptop to her, confirmed the last few figures, nodded a greatly suppressed grin and walked back to the living room, looking over her shoulder at the last minute to check that I was still watching her wiggle her way back to the sofa.\n\nAll day we were on tenterhooks -- she would bring me the occasional mug of coffee, then at lunchtime she brought me a sandwich and a packet of crisps and I swear she had tucked her T-shirt tighter into her jeans to give me the whole curvy picture and it was worth the look.\n\nShe never seemed to sit still, she played some games with Mikey, checked her emails from school, sent a few, played with Mikey again, and still would appear at the end of the passage just to look at me, or was it so I could look at her. \n\nAfter lunch she took Mikey for a walk and they came back with him slightly grumpy because they had arrived find a couple of council men in fluorescent yellow taping off the playground. Fair play to them, they didn't rush and told him which piece they would do next so he could have a go before it was closed. I'm not sure how much of it was municipal good nature and how much of it was because of the gorgeous and curvy yummy-mummy pushing him on the swings, spinning the roundabout or bouncing him on the see-saw.\n\nThey came back just gone three and she decided that they would bake some sponge cakes and by the time I was ready to finish for the day, the warm kitchen smelled sweetly of vanilla, almond and chocolate. \n\nI'd never known Nicky to bake, not at all; not for me, not for Nicky, not for anyone. If there was a school bake sale she would buy stuff for it.\n\nBut here she was with my Kindle propped up with a BBC webpage, slightly flowery cheeks and our boy stood on a chair next to her even more so, getting all domesticated. A cooling tray with three dozen small sponge cakes, with various amounts of frosting of different colours and amounts of sprinkles on.\n\n\"Look Daddy!\" said my boy jumping up and down on his chair, buzzing with the pleasure of it.\n\n\"I think Daddy should try the first one,\" Nicky whispered to him, her face as illuminated as his. I'd never seen her like this with him before.\n\nI stepped across and took one with white icing and a few jelly tots stuck on. I took a bite, it was quite lovely and it showed on my face. Nicky hi-fived Mikey and they took a cake each.\n\nOK, we were locked down in our houses to make sure that we didn't spread this illness but I had never felt quite so good as this day, with my gorgeous son more in touch with his Mum than he had ever been and my former girlfriend/partner equally so.\n\nI made tea and loaded the dishwasher while Mikey and Mummy got very serious and cleaned up and put away. She cooked a tea of chicken curry with rice and we all tucked in. By seven Mikey was flagging.\n\n\"Bathtime Baby Boy!\" she said and Mikey did kind of grumble his way to the bathroom but I heard the hot water running and the cry of 'bubbles!' suggesting that he'd got his way again.\n\nThe noise suggested that a good time was being had and again I made some more decaf and popped my head into the bathroom. She was knelt in exactly the same place with that perfect pert arse pointing back at me again, this time with a tiny black lace string that I'd never seen before, Jesus, I would have had her wear it three times a week it looked so fucking sexy. I passed her the mug of coffee I'd made for her, and she sat back to drink it. So intrigued by her fantastic bottom I hadn't seen that she had removed her bra. She held her coffee in both hands, this action doing a great job in supporting her great breasts, her large dark and hardened nipples pointing straight at me again.\n\n\"This is lovely Rick,\" she said with the cutest smile. What WAS she going to do next?!\n\nI figured I'd need to play it a bit carefully. I wanted her back in my arms but that last thing I wanted to do was miss-read the signs and end up driving her away from me again. OK, the message I was getting was pretty clear but I kind of wanted this decision to be hers, and not something that would get thrown back in my face if she had another one of those moments where everything was my fault again.",
        "I drank my coffee and we just sat there grinning at each other, occasionally turning to splash Mikey or squirt him with one of the bath toys I'd bought him in his Mum's absence. I finished and took both our cups and stood, nodding towards the kitchen.\n\nI stood, opened the door and put the mugs into the dishwasher.\n\nI thought about the beautiful woman naked but for a semi-transparent triangle of lace and what could finally get us past this sex thing that was going on between us.\n\nI went into my room, stripped, grabbed my towel and went back into the bathroom.\n\nNicky stopped her idle chatter with Mikey as she was drying him to look up at my body, I will confess that I'd done some pull-ups on the bar and was a bit pumped.\n\nI pulled the cord for the electric shower and stepped in behind the clear glass door and turned on the water, washing myself all over and even shaving.\n\nI could see that the tables were a bit turned now, and it was Nicky watching me being provocative rather than the other way around. It got to the point that Mikey had to point out to her that she'd been rubbing his back almost constantly and she snapped out of it, looking back at him with a smile.\n\nI had to turn around to hide the half-hearted erection I'd started to get with her distracted attention to me.\n\nBy the time I'd finished, Mikey was dry and in his PJ's and as I hung my towel to dry I could hear her reading his book to him and him joining in with the repeating passages and telling Nicky off when she said the wrong word. She then tried to convince him it was the right word but he corrected her by spelling it out and she made big congratulatory noises and kissing him lots of times.\n\nI'd hardly seen her with Mikey since she'd moved out, but I'd never seen such a change in one person -- it was wonderful and I'll confess that I felt a big lump in my throat.\n\nBy the time I headed back to the living room, Mikey's door was half-closed and he was already asleep. I leaned down, kissed him and stepped out again, and into the living room and there she was, naked but for those really sexy black string panties, the sides pulled up high on her hips like the fashion models did.\n\nI stood there in just my stretchy boxers and a T-shirt. She looked across the room at me.\n\n\"You bastard,\" she hissed, still with a hint of a grin on her pretty face.\n\n\"What now?\"\n\n\"You're doing this on purpose aren't you?\"\n\n\"Doing WHAT on purpose?\"\n\n\"Making me want you...\" she all but spat out, \"Making me want you sexually!\"\n\n\"Nicky, if I have a way of making a woman want me sexually please tell me what it is. No! write it down so I can practice.\"\n\n\"Bastard!\" she said with a smile and a shake of her head, \"You conniving, wicked bastard!\" she hit me playfully, \"This is some bloody game you've come up with in your head isn't it? You get me as horny as fuck, then if we end up screwing each other it becomes my fault!\"\n\n\"How can making love with someone be anyone's fault? If you want to make love, then that's about hormones and any feeling or passion you may have for the other person -- if you're horny - you're horny... please don't try to make this my fault.\"\n\nShe moved closer to me,\n\n\"So Eric, you just happened to put on the T-shirt that shows all of the muscles did you?\" she stroked a hand across my chest and shoulder.\n\n\"Actually yeah, straight off of the pile in my drawer, go check.\" That was a lie, it had always been one of her favourites that I'd buried in the wardrobe when she left and I'd dug it out the night after she arrived and put it on top of my pile of shirts in my drawer. I did those pull-up's, just to give the pec's and the ab's a bit of an edge, and they'd worked!\n\n\"And this scent, aftershave?\"\n\n\"Deodorant, put it on after getting out of the shower.\" Again, another lie, it was a fragrance that was the same brand as the deodorant and body spray that I wore. \n\nShe moved right up close and pushed me back and down onto the sofa. She knelt across me, resting her bottom on my lap and her hands on my shoulders.\n\n\"You're fucking lying again Ricky McKenzie,\" she got up very close to me her bare bosom pushing against me, and took a deep breath, \"Hmmm... body spray...\" She put her nose so close to my face that I could smell the perfume she'd sprayed on. I moved my head fractionally, so her face touched mine.\n\nI very gently pushed my cheek softly against hers and rubbed, it was really nice. I had even shaved so my cheek wouldn't be abrasive.\n\n\"Hmm...\" I moved my face slightly and she moved hers, so in moments our lips were touching and we had our first real kiss in four months. She slipped her arms around my neck and we really got down to it.\n\nShe stopped, grabbed the hem of my T-shirt and pulled it up and off, and I put my hands to her waist and pulled her just a little bit closer, her wonderful bare tits pushing into my chest.\n\nWe kissed for a few minutes, and my hands strayed across her back, her shoulders and finally down to cup her still perfect arse and as I gave it a gentle squeeze she gave just the tiniest sigh of pleasure into my mouth.\n\n\"Nicky,\" I whispered to her, \"this isn't about who's fault this is going to be, I don't know about you but I'd very much like to make love with you. If you'd rather not, for Christ's sake tell me now.\"\n\nWe broke apart and I knew that she was either going to slap my face or drag me to bed. Fortunately for me, she stood up and took my hand and pulled me to my bedroom.\n\nShe looked into Mikey's room,\n\n\"Sound asleep,\" I whispered.\n\n\"Why do you think I took him to the park and baked cakes with him all afternoon?\"\n\n\"I have a vague idea.\" \n\nShe smiled a 'let's do it' smile. We walked quite quickly to the bedroom and she turned and sat on the bed laying back at speed and pulling up the duvet. \n\nI got in on the other side and did the same, pulling her to me so we could resume our quite wonderful kissing. Within moments she was dragging down my boxers leaving me naked and ready for her and she took the opportunity to grab, stroke or caress whatever she wanted.\n\nI took me only a few moments to do the same and her panties were off and her perfect naked body was next to me and open for my enjoyment.\n\nWe still both knew what our partner enjoyed the most and I knew that as she slowly started to masturbate me, the smile on her face was the just the same as the one I undoubtedly had as I lay the flat of my hand across her pussy to slide my middle finger up her labial groove slipping inside just enough to collect some lubrication which I could then use as I started a slow circular massage of her erecting clitoris.\n\n\"Oooh Riiiiick,\" she purred as she pushed her groin up into my hand and writhed her shoulders and hips, grinding into the mattress in her pleasure. I had the thought that she was as frustrated as I was and just as keen to make love and reach that wonderful fulfilment. She quickly put a hand behind my head and pulled my face down to her open mouth and we kissed.\n\nRight there and then whatever our differences had been I knew that I wanted her back, I wanted my gorgeous Nicola back in my life and this was a great way of achieving it.\n\nI rolled across her and heard her purred \"oh yeah...\" but I slipped down, kissing from her great tits, her nipples, down her belly until I reached her tummy and the groove of her pussy, \"Rick, no...oooh!\" her tone changed as I lowered my mouth onto the crown of her puss and sucked, licked and nibbled at her nub until her hands were behind my head and cradling my scalp as I brought her to orgasm again and again.\n\nFinally I knew that she'd had enough and I wanted to fuck her, and that she would want me to do it again and again in the way that we had for almost all of our time together.\n\nI rolled to one side and reached into my bedside table rifling through the old box of condoms I hoped was still there, found it and ripped it open, quickly slipping it into place and sliding back over her.\n\n\"Condom?\" she whispered.\n\n\"Yeah,\" I said, \"thought it best - wasn't sure if you were still on the pill.\"\n\n\"Yeah,\" she said, \"still am,\" she took a breath, \"there's not been anyone else Rick, I swear.\"\n\nI kissed her again,\n\n\"My neither,\" I said smiling at her.\n\n\"But...\" she looked quizzically at me, \"your date?\"\n\n\"An old friend and it was one pint of beer, getting abused by her and her mates then a solitary walk home with a bag of chips, nothing else I promise.\"\n\nShe smiled and stroked my face,\n\n\"Then if you want to take the condom off... you can.\" that was enough for me and I reached down and pulled it off, flinging it aside in the direction of where the waste bin was and raised my groin until it was level with hers, then lowering myself between her raised thighs ready for me.\n\n\"Oh Rick,\" she gasped as I slid into her, \"fuck me!\"\n\nAnd I did so.\n\n\"Christ but you're still soooo good at that,\" Nicky hissed as I slowly pushed in and out of her, gasping as little individual tremors coursed through her as I fucked her, \"Oh shit,\" she said clinging to me, \"Rick... just like that, yeah keep... Ooooh fuck yeah!\" she cried out as I fucked her through her next orgasm then to mine.\n\nWe lay in each others arms getting our breath back, her face glowing and her hands stroking my face, my neck and shoulders, kissing me.\n\nWe lay in bed watching TV, occasionally dashing to the kitchen for more of Mikey's cakes, some cold Cokes, and just being together and close again.\n\nWe lay together and watched a movie. Such a simple thing, and I had quite forgotten how nice it was. Much as we had hinted at making love again, I looked to my right saw that Nicky was sound asleep in my arms, where I'd wanted her since the night she left. I switched off the TV, snuggled down next to her and was asleep myself in moments.\n\nWe woke up next morning in each other's arms both amazingly relaxed and with huge smiles and without even thinking kissed passionately. She reached down.\n\n\"Aah there it is!\" she said grabbing my morning wood and raised her leg to sit astride me and lower herself down.\n\n\"Didn't want to let you down Miss Fraser,\" I said.\n\n\"Well Mr McKenzie, I've woken up with the thing pressing into me for the last three mornings, only fair I finally make use of it.\"\n\n\"Help yourself Miss Fraser.\"\n\nShe smiled and kissed me.\n\n\"Oh fuck yeeeeeah...\" she hissed as she lowered herself up and down on me, \"You'll never know quite how much I've missed that,\" she said, laying down and kissing me again.\n\n\"Trust me, I've missed it every bit as much as you have, I promise.\" She seemed to like that and her face lit up again as she rode me.\n\n\"Really? Well, you'd better fuck me then hadn't you Mr McKenzie!\" she climbed off of me, moved slightly to my left and got onto her hands and knees.\n\nOh fuck, YEAH!\n\nIt was one of the most wonderful moments, pure raw and unadulterated lust and we went at it like jackrabbits with Nicky hissing back over her shoulder, \"Fuck me Rick, fuck me, yeah, pleeeeeease!\"\n\nI did so and twenty minutes later we were laying in each other's arms, a little tired, very hot and quite surprised about how wonderful it had been. We had just started to kiss again when a pair of spiderman pyjamas appeared bleary eyed at the bedroom door, yawning and stretching.\n\n\"Baby Boy!\" said Nicky, and Mikey giggled and trotted across to her side of the bed, \"Here, you climb in Mikey, Mummy has to go to the bathroom.\" She looked at me, stepping out of bed quite carefully and waddling out of the door.\n\nShe returned some minutes later with our usual tea and toast breakfast, only difference being that Mummy and Daddy were both naked, Mum's hair was a bit messed up and we both looked just a little bit soppy and silly when we stared at each other.\n\nI got up, showered and dressed and left Nicky and Mikey to the TV and went to work at my desk.\n\nAt 1030 she brought me a coffee, placed it carefully on my desk then sat on my lap wrapping her arms around my neck and we passed a very pleasant five minutes kissing.\n\nThis kind of thing went on for that day, and again she made a point of doing lots of things with Mikey, initially to keep him busy, then to tire him out but finally because she was enjoying it so much.\n\nI cooked tea which we had up to the table again, we played a board game after we'd eaten, watched some TV and Mikey started to flag again.\n\n\"Just a wash and clean your teeth tonight Baby Boy,\" she said casting me a sideways look, and stroking down the short black denim skirt she was wearing, leaving both hands on the cheeks of her arse absent-mindedly which just drew my attention to it even more.\n\nMikey made no complaint, and as I tidied away our dinner things and the board game, I could hear them both laughing and chatting as he was got ready for bed.\n\nThey reappeared ten minutes later with Mikey in his PJ's and in Nicky's arms, it was so lovely to watch. \n\nWe both put him to bed and she read to him while I sat on the floor. We kissed him goodnight at the same time and it was amazing. I stood up first and gave Nicky my hand, pulling her to her feet, and as it happened into my arms,\n\n\"Goodnight baby boy,\" she said hugging me, \"I love you!\"\n\n\"Love you Mummy, love you Daddy!\" I thought I would burst and the hug from Nicky let me know it was mutual.\n\nWe slowly stepped out of the room and she softly pulled me to the bedroom and pulled me down on to the bed. We kissed and in contrast to the previous nights slowly undressed each other touching, caressing and enjoying the sensual touch of that other person. She pulled the folded duvet up and over us.\n\n\"Make love to me Ricky,\" she whispered.\n\nShe didn't really need to ask but it was so nice.\n\nWhen we woke the next morning we were spooning again and my erection was against her. With no further ado, I was pushing it between her thighs and just into her pussy from behind. It was enough to bring my lightly snoozing lover round and she tilted her hips and pushed back against me with a sigh, taking my hand and pulling it around to her boobs and pushing back against me, her face against mine as we made the most wonderful tender love.\n\nAfter her first orgasm she pulled away from me to lie flat and then pull me over her into the nicest missionary and it was glorious with both of us finishing together, rolling to our sides and smooching and Frenching away a few minutes before falling asleep again.\n\nMikey was climbing into our bed at a bit after seven and Nicky slid out and headed to the bathroom just in time, coming back with more tea and toast.\n\nI got up and showered and headed to my computer and the world of work, while Nicky showered herself and Mikey with great noise and enjoyment before both heading out for a walk for a few trips around the park, and to Mikey's chagrin past the locked up and taped off play equipment. Nicky did point out that he was actually the last person to play on them and no one else would get a go for months -- he seemed quite satisfied with that.\n\nShe came home, did some more schoolwork for her two dozen pupils all stuck at home just like her and had a Skype chat with her friend Sophia and I could half-hear from across the room that she was saying in the cleanest manner possible that things were good at Rick's Place and getting better by the day.\n\n\"Did you do the thing I told you?\" she said.\n\n\"Whaaaaat?\" said Nicky.\n\n\"It involved your knees Sweetie,\" said Soph, \"You OWE the boy, DOCTOR'S ORDERS!\"\n\nI could hear some very embarrassed laughter from across the room and some more banter, then proper schoolwork for two of her class that would need extra support at home.\n\nAt eleven she brought me coffee having had a lesson from me that morning on how to operate my new machine, with me stood directly behind her with my arms around and showing her which buttons operated what, the coffee bean grinder and the milk steamer, it was rather sweet. Again she sat on my lap and put her arms around my neck and we kissed, both tasting of the excellent coffee we'd just drunk.\n\nMikey appeared and decided he was going to sit on Mum's lap and it got a bit crowded and I thought about the strength of my office chair, but thought 'fuck it' -- I wouldn't have missed that moment for an entire Stationery store's worth of office chairs.\n\nShe cooked tea and we were around the table again, Mikey looked so amazingly happy and smiley that all of the bad shit in the last year seemed to drift away into the ether.\n\nRather than TV, she pulled him onto her lap and with a stack of books just read to him, simple boring Thomas the Tank Engine books that I'd owned when I was his age, and it was enchanting to watch, with him occasionally narrating what was going on in the picture and how naughty Thomas, James, Henry and Percy were being. She just hugged him.\n\nAs he started to suck his thumb, she lifted him up and pulled him towards the bathroom for a very quick wash, using Nanny Mac's term, 'a lick and a promise'. I'd really never seen her so attentive and so loving to him before.\n\nShe had never been mean to Mikey, not once but she had never shown this level of such loving attention and just straight up pleasure in our son before. Once he'd grown out of nappies and became a little person she kicked into gear and as soon as pre-school was on the cards it was like Mikey was a job, an investment and anything so trashy as playtime had to be leading to something, needed an outcome and an output -- this was her son and if he was going to reach his full potential there wasn't going to be room for such childish things.\n\nExcept when I was there of course, or when he went to Nanny and Grampy's place. OK, he could read and was starting to write but he hadn't even started school yet. So to see her just being a Mum was delightful and warmed my heart. \n\nI stepped across and I think they both saw the delight in my face as I kissed him goodnight and let his Mum put him to bed. I stepped across to my desk and checked something and could see into his room and there she was knelt next to his bed, closing the book, stroking his hair back from his cheek, kissing him and telling him how much she loved him -- four or five times in fact.\n\nThat was a bit of a worry; it kind of smacked of that 'last goodbye' thing. \n\nNah, surely not, I'd never seen her this happy before.\n\nI got the wine from the fridge and poured a couple of glasses taking them and the bottle to the sofa. She came out from his room turning off lights as she went. She saw me and the wine and giggled.\n\n\"Ricky,\" she said, \"if you got the wine to get me in the mood, trust me you really didn't need to,\" she sashayed across the room and sat next to me, she did take the glass mind you.\n\n\"You OK Nicky?\"\n\nShe looked to her right and Mikey's room,\n\n\"Yeah,\" she said with a big grin, \"I just love that boy so much!\"\n\n\"You... you aren't thinking of leaving are you?\"\n\n\"No!\" she said in surprise, \"no, absolutely not!\" She thought for a moment, \"no, me telling Mikey that I loved him all those times, that was me trying to make up for those I'd missed, not banking a few because I was going!\" she leaned in closer, \"but thank you for worrying about me!\" She kissed me.\n\n\"Only... I...\" I decided to just spit it out, \"truth is... you don't have to go once your mate is out of isolation, you can live here with Mikey and me.\"\n\n\"But...\"\n\nShe stopped and took a sip of wine.\n\n\"But what Nick?\"\n\nShe couldn't make eye contact with me. I could see that she was really thinking about something.\n\n\"Rick...\" she eventually gasped, \"I... Oh shit, this is so embarrassing! I've really missed you!\" her head shot straight back up again and she looked straight in the eye, \"I mean... like every day, every night! I... I haven't slept properly since the night I moved out, Rick... please,\" her voice cracked the tiniest bit, \"I KNOW I'm not the easiest bitch in the world to live with but...\"",
        "\"Nick,\" I hissed leaning in and stroking her hair back from her face to kiss it, \"Take a deep breath.\"\n\n\"Please,\" she said, desperately holding back tears, \"I could see it... I could see what I was doing, I knew what I was saying was wrong but...\"\n\n\"But now you've realised that it's what you were brought up with, you realised that you were turning into your Mum?\"\n\n\"Bastard,\" she grinned wiping her eyes and giggling, \"but yes, I could see why Dad hides from her and why she feels that everyone hates her.\"\n\n\"And why is that?\"\n\nShe smiled,\n\n\"Probably because everyone does hate her, because she's such a nasty, opinionated cow.\" She pulled me to her, \"But I don't want that to be me! Ricky, help me, please?\"\n\n\"Of course!\" I said stroking her cheek, \"just look at how you've changed in the last three months!\"\n\n\"I've changed?\"\n\n\"Hell yeah!\" I said with a beaming smile, \"you play with Mikey! You hug him all of the time, You've played with Mikey in the bath IN YOUR UNDERWEAR! Your very sexy underwear I might add,\" I pulled her face down to mine and kissed her, \"the old Nicola would have screamed the place down if someone she wasn't in a relationship with had seen her perfect arse beautifully dissected by black lace as she bent over the bath to splash her little boy.\" I started to kiss her quite passionately. \n\n\"Rick...\" she said with some hesitancy but still moving her face around so I could kiss her cheeks, chin, and the bit she loved most, her neck, \"I... I did that on purpose -- all three times,\" she closed her eyes as I kissed her lips, \"don't get me wrong, I love bathing Mikey but it was just an excuse - I was horny! I felt hornier than I have in years.\" \n\n\"What? Horny in general or because of Little Ol' me?\"\n\n\"You,\" she said, \"Kind you,\" she kissed me, \"Sweet you,\" another kiss, \"Caring you,\" she kissed me again, \"Warm and wonderful, hot bath with scented candles, wine and relaxing music you...\" she put down her glass and knelt across on me again, settling in the same as she had the night before.\n\n\"On Friday night it was all I could do not to walk out of the bathroom naked and drag you to bed, but I felt so ashamed of how I'd treated you and here you were being your wonderful self again, I was so embarrassed.\"\n\n\"I wasn't sure Nick. I really wanted to, you were so fucking sexy but I was terrified I'd wreck it!\" I reached around her and her tiny mini skirt had scrunched up tight around the tops of her thighs and raised it to stop it digging in and my hands on her great arse soon told me that she had removed her panties and that bare pussy was grinding against me, her arms around my neck. \n\nShe grinned rudely giving my shoulders a tiny shake, \n\n\"Do you realise just how long I stood in your bedroom on Saturday morning, waiting for you to come in so you could discover me bent over and tucking in Mikey, then later that morning waiting for you to come out of the bathroom and catch me just as I was taking off my nightie? The amount of time it takes me to pull my nightie down over my bottom when I get out of bed, considering I pull it up in the first place, the number of times I've flashed you?\"\n\n\"You did all that?\"\n\n\"Yeah!\" she breathed with a giggle, \"I'm so sorry Ricky.\"\n\n\"OK,\" I said, \"don't worry.\"\n\n\"But...\"\n\n\"But nothing, it doesn't alter the fact Nicky, you play with Mikey, you hug him as much if not more than I do, you're playing games with him, singing songs with him, reading books and not like you're trying to educate him - it's so lovely, that's the change Nicky.\"\n\nShe closed her eyes for a moment, then opened them,\n\n\"You remember when Mum was rude to you and you called her 'Maggie'?\" I nodded, suppressing my grin, \"Well, we had a bit of an argument after that.\"\n\n\"Thought you might have done,\" I took a deep breath, \"I never meant to make life harder for you an...\"\n\n\"It wasn't that,\" she said, her face pale for a moment, \"She...\" I could see that Nicky was holding in some real pain.\n\n\"Like Shrek says Nick, 'better out than in'.\"\n\n\"The real argument that had me storming out wasn't because you'd called her 'Maggie', it was because... because...\" I could see the emotion swelling up along with her eyes, \"Because she told me that I should take our break-up as an opportunity to be rid of both you and Mikey...\" her voice petered out at the end of her statement.\n\n\"What?\"\n\n\"She said that Mikey was such a drain on my life and my career, and I was far better off without him, and with your kind of income I could probably even get away with not paying any maintenance for him. She half closed her fluttering eyelids and adopted that fucking voice of hers, 'you'll be well shot of the pair of them DEAR - damned children, such a mistake I always think'.\" Nicky tried to smile through that.\n\n\"Fucking hell mate,\" I said, anything to break the tension in the room.\n\n\"Yeah, well I asked if by children, she meant me as well.\" Big fat tears were running down her face now, \"well she admitted that while I wasn't planned, she had mostly enjoyed 'the challenge of raising me'. I said I was sorry to have been such a disappointment to her.\" \n\n\"Christ,\" I said pulling her even closer to me, \"What a fucking charming woman.\"\n\n\"Yeah, she followed up that little pearl with how much she regretted not convincing me, cajoling me even, to have Mikey aborted when I first told her I was pregnant...\"\n\n\"Wha...\" She told me later just how my eyes opened wide and my nostrils flared.\n\n\"That's why I never told you about it Rick,\" she said hugging me this time, as she broke down in floods of tears.\n\n\"Fucking hell Nicky?\" I said, \"I can see why you moved out.\"\n\n\"I was so lucky Rick,\" she took the sleeve of my T-shirt and wiped her eyes with it, \"I did regret not coming straight back here, but to be honest it was better that I didn't.\" I was treading very dangerous territory here so just smiled and nodded, \"You know my friend Sophia, the girl I rent a room from?\"\n\n\"We met a few times, you were chatting to her this morning.\"\n\n\"We've been mates ever since I've been teaching. She's the child psychologist that covers our school...\" she looked down, \"Well... when I started to live at her place she could see that all was not well. She noticed me as I watched how she was with her children,\" I could see Nicky's eyes close again, \"She was so easy with her kids Rick, so playful with them; from her six year old up to the cool wannabe teenager, she doesn't just love them she enjoys them, so does her husband Pete.\"\n\n\"That's parenthood Nick,\" I said giving her a squeeze.\n\n\"Not how I was raised!\" she hugged me back, \"my first weekend there without Mikey and the revelation that not only did Mum not actually like him, that she wished...\" she choked that one back, \"well, it was so strange to watch all of them.\n\nOnce they were all in bed, Soph knocked the top off of a couple of beers and said that she saw my surprise in how they all played together.\" The next big tear ran down her face, \"I explained that I had never really seen that kind of thing before and how different my growing up had been and...\" she caught her breath, \"then she said how firm and straight I always appeared with Mikey... and how I was still the only person that called him Michael!\" her voice petered out some so I kissed her again and stroked her dark hair back from her pretty elfin face. \n\n\"Don't worry Bab... Nick,\" I added quickly.\n\n\"Please...\" she gasped with a slight tremble of her bottom lip, \"please call me 'Baby' again, like you used to?\" \n\n\"OK... Baby,\" I said, and with a sighed 'Oh Rick' she was kissing me and reaching down, and unbuttoning and dragging down my shorts, then pulling out and then sliding on to the erection I hadn't really noticed I had, slipping easily into her flushed pussy and we made love sat on the sofa, tearing off our remaining clothes and clinging to each other like we'd never let go.\n\nTen minutes later and slowly catching our breath, still sat on my lap with me inside her she caught up with the story again.\n\n\"So Soph opened some more beers and asked me all about Mum, my childhood and all that, and I told her that I now knew that not only was I was an accident, Mum felt that Mikey should have been aborted.\n\nShe hugged me, and just made me talk, to say all of things on my mind and before you know it she's telling me lots of lovely stories about her kids and then backing it all up with the relevant psychobabble which of course all made perfect sense to my teacher brain.\n\nThe next morning little Charlotte is in my bedroom and dragging me down for family Sunday breakfast and didn't let go of my hand the whole morning, 'ask Auntie Nicky to read your book to you Charlie' I get next and before you now it I'm on her sofa with Charlie on my lap and reading 'The wonkey donkey' to three of her kids; they were the ones that taught me to make fairy cakes! Of course after a week of all of that interaction I just couldn't get to Mikey fast enough\"\n\n\"I remember that Friday!\" I said, \"You were all over him!\" even though the moment was perfect there was something I had to get off my chest, \"I was really hurt,\" I said, \"I couldn't see why you had never been that wonderful with him before you left and I figured... well I figured it must have been me.\"\n\n\"No!\" she burst out holding my face and kissing me, \"you must never think that,\" she was hugging me so tight, \"I was in a bad place before and that was the beginning of my trip out of it Ricky, I promise!\"\n\n\"Yeah,\" I grinned and let out a huge relaxing breath, \"you were wearing those tight blue jeans and that blue top, you looked amazing. I was so jealous.\"\n\n\"Jealous of who?!\"\n\n\"Whoever you were looking that fucking amazing for!\"\n\nShe wiped her face and leaned back rolling her eyes, \"that was...\" she closed them, \"it was for you!\" she squeaked, I laughed to let her know it was OK. She leaned forward and kissed me yet again, \"I'm glad you noticed; I'd had my hair and make-up done and everything - you were... SUPPOSED to ask me in for a drink or offer me dinner.\"\n\nI thought back to that evening, indeed she hadn't appeared in any rush to leave but in my confused and quite angry state I'd just taken it as a 'just look how well I'm doing without you' statement.\n\nShe continued,\n\n\"After my great realisation, Soph had pointed out that apparently while you hadn't been perfect this was rather on me, and not only should I go straight to your place and if not actually apologise then at the very least explain -- she actually said I should in fact go down on my knees and ask for forgiveness, she did suggest I do something else while I was down there!\" \n\n\"I always liked Sophia,\" I said with a smile pulling her now cooled body, virtually naked but for her scrunched up skirt still around her waist, back to mine.\n\n\"Yeah, well I didn't did I, my stupid pride wouldn't let me and I'd hoped some curves and some cleavage would do it and you'd just charm me back into your life, but you didn't.\"\n\n\"Sorry Nick...\"\n\n\"No Rick, please!\" she kissed me again, \"Soph did warn me before I left; afterwards when I was sat in her kitchen crying, she said you blokes didn't go with the subtle stuff and if I wasn't going to actually say anything then I should just have brought a bottle of wine, sat on the sofa with you and took my skinny jeans off halfway through the second glass and taken it from there, but... I didn't. \n\nSoph told me that much as I thought I was above all of that sort of thing, I was still suffering from post-natal depression and that was probably why I'd reacted so badly to you and your suggestion about me turning into Mum. She did say that there was a strong chance I was still a bit of a cow mind you, and I really should get back with you because you were such a nice guy, and before someone else got you.\n\nThen of course Mikey told me that you'd gone out with an old friend, and... well, I put two and two together and somehow ended up with five, and it all got a bit sad after that and I was rather mean to you, so;\" she raised herself up and took both of my hands in hers, \"Eric Michael McDonald, please accept my apologies for what a mean and insensitive cow I was to you and how nasty I was, I have no excuse; if you can find it in your heart to forgive me I'd very much like to be in love with you again?\"\n\n\"ARE you in love with me?\"\n\n\"I never stopped being in love with you Rick,\" she said quietly, \"when I say I'd like to be in love with you, what I mean is for us to be in love again, for you to be...\" her face creased up and fresh tears appeared in her eyes, \"for you to be in love with me?\"\n\nI was so touched that I pulled her back to me and we kissed, deep, hard and long,\n\n\"Nicola Margaret Fraser, I never stopped being in love with you either.\" Her face broke into the biggest smile, \"but there is one change I will be insisting on;\" she narrowed her eyes as I paused for effect, \"will you marry me?\"\n\n\"Yes please!\" she said looking radiant.\n\nWe kissed, grinning like idiots and eventually laughing and hugging each other with so much released tension. I asked her if we couldn't take this discussion, the last of the wine and each other to bed and carry on where we had left off.\n\nWe did.\n\nLaying in bed after making love again, we looked on the internet and using a couple of her other rings for sizing she chose her engagement ring, a bright emerald to match her bright green eyes and which also happened to be her birthstone. It arrived two days later and after we had finished our Friday night pizza, I called Mikey to me and whispered into his ear.\n\n\"Nicola?\" I said and she peaked around the kitchen.\n\n\"Yes Babe?\" She turned and looked across to me.\n\n\"You've got to come here Mummy!\" said Mikey importantly.\n\n\"Wassup Baby Boy?\" she said kneeling down to face our son and kissing his bright red cheek of course.\n\n\"Daddy wants to ask you something,\" he said with a big grin.\n\n\"Really?\" she said turning to face me just the other side of Mikey.\n\n\"Nicola Margaret Fraser, will you marry me?\" I tapped Mikey's shoulder and he held out the ring in its box.\n\n\"Oh my Boys!\" she laughed in real delight, looking down at the collection of gems set in gold, \"yes!\" she gave me her hand, extending her ring finger so Mikey could take it out of the box and slip it on.\n\nMikey gave her a big kiss and a hug,\n\n\"Oh thank you Baby Boy!\" She turned to face me, \"and thank you Daddy,\" she put a very gentle hand to my cheek, \"thank you for everything...\" we kissed again.\n\nWe haven't actually set a date yet, but as soon as the lockdown allows, we'll be doing it. We had a skype chat with my parents who were delighted to see Nicky back in my life, and as we all three sat on the sofa Mikey was on her lap the whole time.\n\n\"Mummy's got something to show you Nanny!\" said Mikey excitedly.\n\n\"Really Mikey, and what's that?\" said Dad.\n\nNicky held up her hand to the camera and it was obvious the type of ring it was and on which finger\n\n\"Oh!\" said my Mum, \"Oh how perfect!\"\n\nNicky and Mum chatted about weddings, and what kind of thing the bride-to-be wanted. While Nicky wasn't a terribly 'Churchie' kind of person that was the service she wanted, saying that she wanted to use the tiny church across the road from the school she taught at.\n\nI could see that my Mum had picked up on the fact that Nicky's Mum wouldn't really want anything to do with the wedding in the same way she hadn't wanted anything to do with those first 'New Mum' moments. \n\nWhile I was pretty sure the evil Mrs Fraser would come, I knew that any arrangements above the legal minimum would seem wholly pointless to her, the woman that had married her husband at a lunchtime Registry office ceremony and both had gone back to work afterwards.\n\nMum was kind enough to do this without pointing out the fact, nor asking how and why Nicky and I were back together again after months apart.\n\n\"Nix Darling?\" said Mum, using the name for her that she always had.\n\nOooohkay, I thought, what was she going to do?\n\n\"Yes?\"\n\n\"I'm guessing you don't have your mother's or a family wedding dress?\"\n\n\"No,\" she said sadly, \"My aunt had my Grandmother's one and after she'd worn it she gave it to one of her daughters who wore it, who then sold it to a friend.\"\n\n\"Oh what a cow!\" said my Mum, \"Well then,\" she stopped for a moment, \"Eric? bugger off and make some tea and take Mikey with you. Nix, move closer to the screen honey...\"\n\nWhat was going down was my Mum emailing Nicky pictures of her wedding dress that even I knew still nestled safely in tissue paper in her spare bedroom, freshly laundered six years before when my sister had worn it to marry her husband.\n\nBy the time Mikey and I were allowed back, a beaming and tearful Nicky was chatting with Mum about other things they could arrange between them and how much my sister would love to be involved.\n\nWe were still only a fortnight into the lockdown and nothing was going to happen too soon that was for sure, but it cemented my parents further into Nicky's heart even more so than before.\n\nThat night, after putting Nicky to bed, I was in the kitchen and making more coffee,\n\n\"Ricky?\" I could hear Nicky's 'I want...' voice.\n\n\"Yes Baby?\"\n\n\"Come here, for a moment?\"\n\nI walked through to the our bedroom to find her sat at her dressing table, beautifully made-up, hair looking amazing and wearing a three line pearl choker, black stockings and suspenders, black heels and nothing else.\n\nMy mouth dropped open and I expected her to pull me to the bed. Instead she smiled, stood up and walked towards me, with a huge smile on her face.\n\n\"I've actually always wanted to dress up like this!\" she giggled. She reached behind me, closed the bedroom door, then knelt in front of me, undoing and then pulling down my shorts and boxers. \"I told Sophia that we were engaged today! She cried, but then insisted that I still have to do this...\"\n\nShe took my stiffening cock into her mouth, and spent the most delightful five minutes sucking me before I came in her mouth. I said that Sophia should be invited to our wedding, seeing as she looked after us both so well.\n\nAt the end of our first lockdown month, I was putting clean laundry back into chests of drawers and I could see Nicky was routing through the small dressing table drawer that she'd emptied her toiletries bag into,\n\n\"Fuck,\" she hissed, \"I'm out of contraceptive pills!\"\n\n\"When do you need to start taking them?\" I knew her period had stared a few days before.\n\n\"Tomorrow night, I was sure I had another strip!\"\n\nThe strangest thing, I could remember one of the last things she did before our break-up was to receive a year's supply.\n\n\"Did you take them while we were apart?\" I asked.\n\n\"Yeah,\" she said with some cringing embarrassment, \"you see I always meant to come back to you! Our separation was only temporary, and I would soon be back in your arms and in your bed, and I'd need them. Sadly it took a global plague to get me here!\"\n\n\"You can order some more online,\" I said, \"or...\"\n\nShe turned to face me,\n\n\"Or... what?\"\n\n\"Or not,\" I confirmed, \"I bet Mikey would love being a big brother.\"\n\n\"Eric McKenzie, you fucking beauty!\" she hissed to me. She looked at her watch then back over her shoulder, \"Mikey Baby? Time to get ready for bed!\"\n\nThe following morning she was checking her other bags to make sure she really had no more pills, and picked up the kitchen pad we used for a shopping list.\n\n\"I'll need some more pads,\" she said, \"my monthlies tend to be a bit more serious when I'm not on the pill.\"\n\n\"You should use the super-extra,\" I said using the same voice as the SNL comedian did on the TV adverts.\n\n\"Watched a few adverts and now you're a menstruation expert?\" she said with a giggle.\n\n\"Yes, and I'll think you'll find I'm more that 'a bit' of an expert.\"\n\n\"Really?\" she said folding her arms.",
        "\"Really, that advert you accused me of watching, well... I didn't just watch it.\" I hoped desperately this wouldn't see her out of the door again screaming and after all, I had to tell her sometime, \"well it's actually one of mine.\"\n\n\"You mean...\" her face crept into the hugest smile, \"THAT tampon commercial?\" I nodded, \"I use those by the way.\"\n\nI smiled,\n\n\"Good,\" I said, \"All the more money for me.\"\n\n\"And that awful woman...\" she sprung forward and pushed me back against the worktop as it hit her, \"The vicious cow with the eyelid flutter... THAT'S MY MUM ISN'T IT!\"\n\n\"Yeah!\" I said, \"Although if you ever tell her I do have plausible deniability.\"\n\nShe held her angry look for as long as she could then broke, laughing long and hard, hugging me tight.\n\n\"The eye flutter and the nasal whine, the rising inflection. If it wasn't for the fact that Mum rarely watches TV I'm amazed she hasn't tumbled to it.\"\n\n\"It came to me while we were separated,\" I said, \"it was when I called you about the message that had been left on the house phone and she was called me an idiot. I was offered that campaign the next day when I was still really angry.\"\n\n\"And it paid for our new bed?\"\n\n\"Our new bed, Mikey's new bed, the bedroom TV, the dishwasher, new doors on all of the kitchen cupboards, my coffeemaker, and... well that was only after I cleared the last of the mortgage with it.\"\n\nHer mouth fell open at that. She slipped her arms around my neck,\n\n\"I'm in love with a man of property!\" she kissed me, \"and that is quite a painless but still quite sweet revenge Ricky,\" she said, \"and at least you know that your source of new material is only a phone call away!\"\n\nAnd that was what we did, rather than being angry with her cow of a mother, she now had a way back at her.\n\nThe advert campaign was a rolling one, with new scenes thrown in every few months, all playing on the ever present but often unspoken concept of menstruation in a mens' world, and the actress using my words did it brilliantly, we even have one for planned for the advert break for the Superbowl the next year. \n\nIf I was short of something for my nasty, snarky 'period Lady' to say, Nicky would phone her Mother for a chat and turn on the speaker so I could hear. Next she would say something that she knew her mother would vehemently disagree with and I'd be there with my voice recorder and notebook. We're saving the announcement of our engagement for when I'm really short of material.\n\nWhen she disconnects the call I simply say, \"Ker'ching!\"\n\nIt's good to have enemies."
    ],
    "authorname": "Androgynousother",
    "tags": [
        "covid19 2020",
        "romance",
        "straight sex"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/androshorts-passion-and-compassion"
}