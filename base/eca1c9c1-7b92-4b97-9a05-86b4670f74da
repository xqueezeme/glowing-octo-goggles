{
    "title": "Kahlea",
    "pages": [
        "My name is Bud, at least that is my nickname. I lived this story and now maybe I can die happy but first I want to share my story. I am obviously a man and was just about to turn 50. I have had ups and downs in my life and right now I am on an up. \n\nI was married, unfortunately, and have two daughters both out of high school. I stayed married all these years because I do dearly love my daughters, to split with their mother would cause them pain and force them to make choices. When I married my wife I was deeply in love with her but as the years went by she changed, or maybe I did. She moved out of our bedroom over 6 years before. She claimed I snored, well I do but it was never a problem before. I pressed and never got the real answer. I tried to be a good patient husband and loving father and I think I succeeded. But my wife kept getting more distant, to the point where she would leave the house and not even bother to say she was going out and just plain ignore me. Make dinner and feed the girls but not tell me dinner was ready. It broke my heart. I finally just said fuck it and ignored her. To say things are not good is an understatement. The only good thing is we didn't fight. Hell we barely spoke to each other.\n\nSo with all this understood maybe the rest of the story will make sense and maybe you can understand that I was lonely and not just a shit.\n\nIt was February, convention season in the industry I work in. I have, for years made a habit of going to the big annual convention. Partly for business, to see what's new and keep up with trends, and yes partly to get away. They always hold these things in warm places. Vegas, Florida, Southern California, Houston. It gives those of us in the colder climes a chance to warm up and play a little golf in the middle of winter. I took full advantage of the situation. The convention usually runs for 5 days I would always be gone for at least 7 maybe 10. Arriving a few days early and staying late. It was after all my vacation. I didn't take one during the summer, why bother, my wife wouldn't go with me anyway. \n\nThe people who owned the company I ran, approved of my \"vacation\" and never had any trouble paying for my expenses. I always offered to share the cost with the company but was always rebuffed. They just plain appreciated the work I did as it enabled them to live lives of leisure. For several years I had chosen one or two subordinates to travel with me, partly as a reward for their good work and partly as a chance to learn new industry techniques.\n\nThis year I was traveling alone. The guy who was supposed to go with me had disappointed me two days before we were to leave. I heard, thru the grapevine that he was quitting and actually would not be returning to work when we got back. He planned on getting the free trip and thumbing his nose at us. I fired his ass the same day. The only other person I considered taking was unable to go as his wife was pregnant and due any day. So I wrote off the first class ticket and resigned myself to losing the deposit on his room at the hotel. In the long run it was cheaper than taking a traitor for a week in Vegas.\n\nLet me step back. I don't mind when somebody decides to change jobs. Hell I've done it enough in my life, sometimes you just have to. I do object to sneaks. If you're going to quit be a man stand up and say so. I can respect that. But to accept the trip, and not give notice so you can enjoy yourself at someone else's expense, that plain sucks.\n\nSo I made the hour and a half drive to the airport and was sitting in the waiting area contemplating the first leg of the trip and then an hour lay over in Cincinnati before the final 4 hours to Vegas and some relaxation. \n\nI have lived in a small town for the last 25 years so am used to knowing everybody and having everybody know me. We joke that our town is so small we have to drive a half hour to the Wal-Mart. I have lived in cities when I was younger and travel regularly so am not uncomfortable in urban settings. When I travel or am in the city, I put on my city persona. Ignore the world and everyone in it, but keep your eyes open also. When I am home I am much like the rest of the town, open and friendly. Stop and give someone a ride home, Wave to everyone as you drive down the street, Take 15 minutes to get to the table in the diner because you stop and talk to everyone on the way. Just small town stuff.\n\nSo I am sitting in the airport with my city persona and am surprised when somebody calls my name.\n\n\"Hi Mr. Jenkins. What are you doing here?\" I am immediately suspect of this voice. Why would someone know me here? What do they want? Full city mode, in other words.\n\nI looked over and to my surprise was greeted by a familiar face. A young girl from town, who works in the grocery, went to school with my youngest daughter, \"name?name? can't remember her name. Kahlea! That's it.\" I know her father in passing. Stop shake hands say hello that's all.\n\nKahlea was a beautiful young girl. 5'6\" give or take about 115 to 120 lbs. long blond hair and the most beautiful green eyes. She had a nice shape, I noticed it often at the grocery where she worked. She had what can best be described as an athletic build. Strong legs a flat stomach and a nicely rounded ass with the shape we all find attractive. Her breasts were nicely rounded and showed well through the tight shirts she wore. Not big, but well defined, probably a C cup.\n\nI recovered from my surprise. \"Well hello Kahlea, what are you doing here?\"\n\n\"I'm going on vacation to Vegas.\" She proudly exclaims\n\n\"Who are you with?\"\n\nNow she pauses and the smile turns to a sad frown. \"No-one I'm by myself. My two timing boyfriend was supposed to go with me, but I dumped him and I didn't want to waste the money. I couldn't find anyone else to go with me so I figured I'd go by myself.\"\n\n\"Kahlea, your not 21 yet. They won't let you gamble or drink. Your not planning on getting in trouble out there are you?\"\n\nShe gets a sly smile. \"I got Jen's ID.\" Now Jen is her sister who is 4 years older than her and they do look a lot alike. When they were both working at the store I had trouble telling them apart.\n\nI sigh, and think to myself, \"Not my kid, not my problem.\" But when you live in a small town you sort of adopt all the kids, if for no other reason than you know their name and their parents.\n\n\"Kahlea, I don't want to lecture you and you should have fun but Vegas can be a perfect place to get into trouble. Promise me you'll be good or at least careful.\"\n\n\"I'm 18 and can take care of myself.\" She replied indignantly\n\nOpps! I stepped on teenage pride. \"I know. I'm just saying that if you need help out there, I'd like to give you my cell phone #. You can call me. I'll be there about 10 days, OK?\" Then as an after thought, \"Say maybe you can help me. Since we're both traveling alone maybe you can help me out. I'd be willing to pay you.\"\n\n\"What would I have to do?\"\n\n\"Well I'm going to go to a convention and I may need someone to help me keep notes and carry samples and stuff. Just a couple of hours for two or three days. I had to fire the person I was taking with me, I could use the help.\"\n\n\"I don't know? I am supposed to be on vacation.\"\n\n\"How much money do you have with you?\"\n\nShe proudly raises her head \"I saved up and have $350 to spend.\"\n\nI groan inwardly. There have been days in Vegas where I went thru that much in an hour. \"Well that should be enough. But wouldn't it be nice to have another $300. I'm offering you $100 a day to help me.\"\n\nHer eyes got big. I had a good idea what she made at the grocery as both my kids had worked there at one time or another and I had just offered her what amounted to a weeks take home for a days work. I could see she was interested. \"Today's Friday. The convention doesn't start till Monday so you would have the whole weekend then part of Monday, Tuesday and Wednesday to help me then the rest of the week for yourself. I really would appreciate it.\"\n\n\"Well Ok, since you really need the help. But that's too much money for what you describe.\"\n \"Well that's the offer. If you think it's too much wait for the first day and see how tired you are before you refuse it.\"\n\n\"Ok fair enough.\" She agreed.\n\nWe spent the time waiting for our plane to be called, chatting. It became obvious that she had been nervous and was relieved to find somebody she knew to talk to. Even though we really didn't know each other I was a safe familiar face. After all what can be more benign than the father of one of your school friends, someone you had seen around since you were 6 years old.\n\nOur conversation turned to the flight and I asked about her seat assignment. She was all excited to tell me she had a window seat and wanted to be able to take pictures. She had never been on a plane before and was not scared but excited. I called up the mental image of the planes seating chart and was not exactly sure where she was but I had my suspicions. So I dug out my laptop and signed onto the \"net\" through the airports wireless connection, then to the airlines site. It was as I feared. The published seating chart had her sitting on a window over the wing. There was no way she was going to see anything.\n\n\"Come on.\" I told her \"We're going to get your seat changed to a good one.\" And I took her by the hand and led her up to the boarding counter.\n\nShe protested all the way, \"I cant' afford to change seats. They'll charge me for it.\"\n\n\"Look Kahlea, I can get it changed for you for free. Just follow my lead and be quiet.\"\n\nWe got to the counter and I proceeded to work on the clerk. She didn't want to let Kahlea change to the extra First Class seat I had already paid for because her name was not on the ticket and they wanted me to cancel the ticket and pay the premium price for it all over again. I raised hell, between that, my frequent flier card and my threat to move to another airline that was leaving a half hour later I got my way. I tried to get Kahlea her money back but had to settle for a voucher for her unused ticket to be used at a later date.\n\nWe just finished the paperwork when they started boarding us. I could tell the attendants were glad to see me leave and get on the plane. \"Another jerk out of my hair.\" was written all over their faces.\n\nKahlea was still unsure about accepting the ticket. I insisted and once we were onboard I led her back to the seat she would have occupied. She looked at it and at the big First Class couches and back at her old seat and the view of the wing. \"Thank you.\" She said. \"But I still don't feel right about it. That's an expensive seat.\" As we settled in I explained how I had come to have an extra ticket and that the company had paid for it and would lose the money if we did not use it. Besides since it went on my frequent flier card I got credit for the miles so she was doing me a favor. Finally she accepted it and settled in.\n\nThe first leg of the flight was uneventful a bit over an hour and we landed in Cincinnati for an hour layover. It was near lunch time so I treated my new young friend to a burger in one of the airport pubs while we waited. I was glad I had found her. She would have probably managed fine on her own but you could tell she was a little overwhelmed by the airports and the different gates and terminals. She just would have been uncomfortable by herself. I was feeling very paternal toward this little girl. The second leg was even less exciting than the first. I fell asleep and stayed that way for most of it. I woke about an hour from Vegas and found myself covered in a blanket with a pillow under my head. The three Scotches I had at lunch had taken their toll. I looked over a Kahlea and saw her staring out of the window fascinated by the sight of the ground 30,000 feet below. She heard me stir and glance over and smiled.\n\n\"Have a good nap?\" She asked.\n\n\"Yeah, I did. Where did the blanket come from.\"\n\n\"The stewardess brought it. She thinks you're my boyfriend.\" She said with an evil grin.\n\n\"How did she get that idea?\" I asked.\n\n\"Well once you fell asleep she came over and asked me if my father would want a blanket. I told her you weren't my father and I must have been a little snotty about it because she apologized all over the place and then asked if my \"Gentleman companion\" would like a blanket. I could see by her face what she was thinking. So I played it up a little. I told her that you would want coffee when you first woke also, like I knew, from experience exactly what you wanted when you woke up.\" She giggled a little, \"She should be showing up with coffee any minute now.\"\n\nI barely had time to realize what had gone on while I slept when the stewardess did show up with coffee for me and apologized for insulting my \"companion\" with her assumption. I brushed it off and thanked her, chuckling all the while.\n\nAs I sipped my coffee I realized that I had not asked Kahlea where she was staying.\n\n\"Oh I got a great deal on a room for a week. It was only $200 for the whole week.\" She answered. She gave me the name of the hotel and it was not one I was familiar with and I discounted it as Vegas is full of hotels and Motels and just because it is not a big name on The Strip, doesn't mean its not a perfectly good place. But $200 for a week was cheap. I was going to spend nearly that on my room for a night, of course I had booked a small suite, what they called a Jr. Suite, really not much more than an oversized room big enough for a sitting area along with the King sized bed and desk.\n\nWe landed and I led Kahlea thru the deplaning process and the terminal to the baggage carousel. She was upset her bags weren't waiting and I laughed and explained that they never were it would take a few minutes. She asked me where she should go to get a bus to get to her hotel. That was when I realized that she had no transportation plans. I offered to drop her off with the rental car I had reserved.\n\n\"I couldn't impose like that. You've already been so nice to me.\" She demurred\n\n\"It's not an imposition besides I will have to know where you are if you decide to help he out this week, won't I.\"\n\nShe agreed and gave me the address she had written down. I grabbed my cell phone and called the VIP desk for the rental car company. I told them I had arrived and would be there shortly that they should have my car and paperwork ready. Also I needed directions to the Red Spur Motel and gave them the address. The clerk paused and then said \"Yes Sir, will you be staying there?\"\n\nI told him I would not but needed to go there. Our bags arrived and I loaded them on a cart and pushed it to the rental car desk, where I was ushered behind the counter to the manager's office. He was very polite when he asked \"Are you planning on parking the car in the area of the Red Spur?\" I must have looked puzzled when I told him that I was not. \"I'm sorry for intruding but we have lost a few cars in that area of town, and well I must ask that you not leave the car unattended there.\" I agreed and felt a tightening of my gut for the little girl I had befriended. He handed me the keys and I signed the papers. He apologized again and had an attendant load my bags in the car. I looked at the map they had given me and the red lined route to the address I had given them. It was to an area of town that I was not familiar with, but one that was easy to get too. I started out and drove over the familiar route from the airport and down past the convention center. Then I got to an area of town I did not know and quickly found the Red Spur. I pulled into the lot and looked at Kahlea.\n\n\"You're not staying here?\"\n\n\"I have to I already paid for it.\" came the distressed reply.\n\nHer distress was due to the sight before us. The place was a dump! Badly in need of paint and repair. There was broken glass in the parking lot as well as one car up on cinderblocks. There was a man on the ground leaning against the signpost, he was either drunk, drugged, sleeping or dead. I was not about to go find out which. One of the doors to a room was hanging open, half off its hinges and there were bullet holes in one of the windows. It was the kind of place I would have gone to in my much younger and wilder days, if I had been looking for a cheap whore. It was not the kind of place I was going to let this little girl off at. Not and be able to go home and smile at her parents when we ran across each other.\n\nShe began to open the door and get out. \"Get back in this car, young lady.\" I ordered in my best enraged father voice. It worked, she jumped back into the car and closed the door. \"Now I'm going to go in and get your money back. You lock the doors and do not open them no matter what, until I get back.\"\n\nI took a deep breath and got out of the car. I heard the automatic locks click before I stepped away. I went into the office and calmly explained why I was there. I got a uncaring shrug and \"no refunds\" from the clerk. I nearly lost it and I slipped back to the way I would have acted 30 years earlier. I threatened and bullied until the manager appeared carrying a baseball bat. He was apparently taken back by the man in the expensive suit standing at his counter and shouting obscenities and threats, as he stopped in his tracks. I told him I wanted the girls $200 back. He did not hesitate. He reached into his pocket and peeled off 4 fifty's and handed them to me, with an apology. \"Please tell the bosses I'm sorry for the misunderstanding.\" I took the money and started out the door, as it closed behind me I could hear him berating the clerk. \"Are you trying to get us killed? Can't you tell when a guy's hooked up.\" He was screaming. I smiled, he apparently mistook me for someone having to do with the underworld. I was not about to correct him I just wanted to get out of there.\n\nI got in the car and got the headed for the hotel I had booked. As we drove away I noticed Kahlea was crying. \"What's wrong Kahlea?\"\n\n\"I can't stay there, I don't have enough money for someplace else. This is a disaster and I dragged you into it because you're nice to me.\"\n\nI drove in silence for a couple of minutes until I got to a part of town that appeared a little safer and I pulled over. \"Kahlea, look, I'm sorry but I couldn't let you stay there. You'd be afraid all the time and may end up getting hurt. I could never live with myself if I had left you there, especially if something happened to you.\" I paused and handed her a handkerchief. \"Now, just like the airplane ticket, I have another room reserved for that guy I fired. You can stay there. It costs a little more than that dump but you'll be safer and you can pay me back when we get home. Ok?\"\n\n\"How much more is it?\" She asked\n\n\"Only a couple of dollars a day\" I lied. While I had not booked the guy a room equal to mine it was still a $75 a night room, but I was not going to tell her that.\n\n\"Well if you're sure it'll be Ok and you let me pay you back.\"\n\n\"I'm sure.\"\n\nNow she started to cry again as she threw her arms around me and kissed my cheek. \"Thank you for being nice to me.\"\n\nNow I was embarrassed. \"You're welcome now stop crying and fix your makeup. This is a nice hotel and I don't want them thinking I am some pervert with a kidnap victim checking in.\"\n\nShe released me and smiled through the tears as she got herself together.\n\nWe arrived and Kahlea was amazed at the difference in what she had chosen and what I had booked. The Valet unloaded our car and parked it and a bellman took charge of our bags. I ushered her to the checkin holding her elbow so she wouldn't get lost and to give her a comfort level with the huge busy lobby of the 5 star hotel. I had reserved the rooms in the company name but they still make you check in as individuals. I took Kahlea's ID from her and took care of the details. As the clerk was entering all the info she stopped and looked at me. \"We originally had you assigned to different floors, I assume you want adjoining rooms.\" I simply nodded, slightly embarrassed at what the girl was discreetly asking. It wasn't that I had any designs on Kahlea but I knew she would feel better, especially after the debacle to the place she had chosen, if a friendly face were close by. It really was not worth the effort to correct the clerk's misconception. The more I would deny it the more convinced she would be and in truth I knew she didn't care anyway other than to get me comfortable as it was my name on the credit card.",
        "The bellman escorted us and our bags to our rooms and on the way down the hall I suggested we take care of the young lady first. He opened her door and I went in and did a quick once around the room to be sure everything was Ok. He did his thing with the blinds and the AC unit and I left her there. He dropped my bags in my room and I gave him a comfortable tip as he left. As soon as the door was closed I opened the door between the rooms and knocked on Kahlea's half. I smiled as I heard her open the door to the hall and then close it and I knocked again. This time I was answered by a tentative \"Yes, who is it.\" \n\n\"It's just me. Unlock the door for a second please.\" I heard the bolt click back and the door opened a crack as she peeked around it, then when she saw it really was me she pulled it all the way open. I explained how the rooms were connected and told her that I would leave my door unlocked and open if she needed anything to just unlock hers and come in. \"I sleep like a log so if you knock I won't hear it just come in and shake me if I'm sleeping.\"\n\nShe looked at me shyly and I could see the tears starting again. She started to thank me again but couldn't get the words out and threw her arms around me again and started to cry. I let her cry for a bit and patted her back to calm her then led her over to the sitting area in my room and sat with her on the couch.\n\n\"It's such a beautiful room, so big and nice. You are so nice to me. I don't know how to thank you. I mean I know you but it's not like we were family or anything and you've done all this for me.\"\n\n\"Well Kahlea, when you're this far from home anybody from your town is like family in a way. And when you're from a small town it's even more so. This is your vacation and you saved up for it. Now the plane ticket and the room would have been wasted if you didn't use them so you may as well accept your luck and enjoy yourself. Now what are you planning to do with yourself.\"\n\nShe sniffled a bit \"I don't know. It's a little overwhelming. I didn't think it would be such a big city and everything is so strange.\"\n\n\"Well you look tired. Why don't you go and get settled in your room, maybe get a bath and relax, take a nap. I have to call my office and check my e-mail and stuff. I'm still working you know. Then after a while, once you're rested, I'll be your tour guide and show you around the strip a bit so you get an idea what's here and where you are and all. Then if you'll let me I'll take you to dinner. I hate to eat alone and with all the good restaurants in town it's a shame to eat hamburgers and pizza. Now does that sound like a plan?\"\n\nShe smiled and shook her head. \"I guess I am tired, too much excitement. A bath and a nap sound good.\" She got up and headed for her room, then stopped before she passed thru the doors. \"Do all hotel rooms connect like this?\"\n\n\"No,\" I answered. \"some do.\"\n\n\"Oh. Why did they give us ones that connect like this?\"\n\nI was slightly embarrassed at the answer \"The girl that checked us in assumed we ... wanted connecting rooms.\" She looked at me puzzled \"She assumed you were my mistress.\"\n\nKahlea's eyes got big and her jaw dropped open. \"Oh my God. I'm so embarrassed. She thought we ... that you and I ... We have to tell her.\"\n\nNow I smiled at her embarrassment \"It wouldn't do any good the more you claim not the more she'll think you are. Besides when in your life will you ever see her again. Let her think what she wants, she sees so much of it that it probably didn't even register to her anyway.\"\n\nKahlea stood there mortified for a few more seconds then started to giggle. \"Ok let her think I have a sugar daddy.\" She disappeared into her room and closed the door and as I sat there I realized she did not lock it, just pushed it closed.\n\nI took my own advice and after calling my office and checking my e-mail I took a quick shower and changed into comfortable casual clothes, then put my feet up and put the TV on. I must have dozed off, because suddenly Kahlea was standing over me and shaking my arm. My eyes opened and she sighed \"Thank God, I was afraid something happened to you, you wouldn't wake up.\"\n\nI smiled at her, \"I warned you that I sleep like a log.\"\n\n\"I guess so!\"\n\n\"Feel better now? Are you ready to go exploring?\"\n\n\"Much and yes I am. I can't believe how hungry I am and its only 4:30 in the afternoon.\"\n\n\"You're forgetting about the time change. It's 4:30 here but 7:30 to your stomach. We'll grab a snack, go exploring then get a late dinner. What are you hungry for, seafood, steak, Italian.\"\n\n\"Oh I don't know, does it matter?\"\n\n\"Only in what direction we go first. There is a really good Italian Restaurant in the hotel across the street and a great steakhouse in the other direction.\"\n\n\"Well I do like Italian food.\"\n\n\"Great, I'll call and get us reservations. Do you have your walking shoes on? The strip is a couple of miles long.\"\n\nShe scampered to change her shoes while I made dinner reservations. Then we started walking. We were staying at the far end of the Strip, near the airport and I walked her all the way to the other end. We stopped and went into a lot of shops and casinos along the way. She was spellbound by the varying themes and the setups of the hotels. I was able to time it close to right for our dinner reservations and we got there about a half hour before our time. We sat in the bar and waited. I ordered her a wine cooler while we waited. She was tired and sat there exhausted after having walked the Strip in both directions. So by the time we got our table she was glad to sit in a comfortable chair. We each ordered another drink, hers a wine cooler again and mine, as usual a scotch. Then wine with dinner and a delicious meal. We were both stuffed by the time we left. \n\nFor her part Kahlea had more to drink than she ever had before and she was tipsy, not drunk but definitely having fun and relaxed. During the meal the conversation turned to plans for the next day. She really had not made any and wanted to know what I had planned. I told her I had a 10AM tee off time at a local Golf course. Since she seemed a little disappointed I asked her if she would like to come along. She admitted to having tried to play but felt she wasn't very good, but yes it was going to be a nice day and it might be fun.\n\nAs we strolled back to our own hotel I realized how much fun I had had. I was really enjoying myself. We walked thru the casino and I stopped at the Roulette table to lose some money and she was fascinated by the game and how it was played. I stayed longer than I anticipated as I explained the game to her. I should have paid more attention to Kahlea and less to the table. She found out she could order drinks from the girls and they were complimentary, in other words free. I am not sure how many she had but when we stood to leave she nearly collapsed. \n\n\"Oh shit\" I thought to myself and helped her to the elevator as discreetly as I could. Like most people she got talkative when she was drunk and the whole way back to the room she told me how wonderful I was and how I was so much nicer than any boy she had ever gone out with. \"Just what I need\" I thought \"An appreciative drunk teenager with a case of hero worship.\" \n\nI got her into her room and onto the bed. Then I opened the door to my room and told her she should get to bed and get some sleep. I reminded her that if she needed anything to come get me as I closed the door. For myself I was tired also and had had a couple of drinks so stripped down and crawled into bed.\n\nI woke fairly early the next morning and felt well rested and only a little hung over. I peeked in to Kahlea's room and saw that she had fallen asleep in her clothes and was still sound asleep. I called room service and ordered a large pot of coffee and two cups along with toast to be delivered a half hour later, then I got in the shower and relaxed in the hot water. I finished my shower and had a robe on when the coffee arrived. The waiter set it up on the table and left when I turned I saw Kahlea standing in the doorway looking like death warmed over. Hung over with out question. \n\nI felt sorry for her, but laughed at the same time. I invited her in and poured her coffee and got her to eat a piece of toast. \"Drink the coffee, then go get a shower. By the time you are done you'll feel alive at least.\" She did as she was told and left with a second cup of coffee to shower. I dressed and watched the morning news while I waited. She came back a bit later, wearing a robe, looking better and obviously feeling better. She wanted another cup of coffee and helped herself then returned to her room. I chuckled at how at home she made herself. She had just walked into the room as though it were her own and talked like we were old friends.\n\nShe returned dressed and ready for breakfast, \"I am hungry but I also feel a little yucky in my stomach.\" She admitted. We had a light breakfast and headed for the golf course. It was a beautiful day, perfect bright and sunny, 75 degrees, just right for playing golf. The course was empty enough that they allowed us to play as a two some, not pairing us with anyone. We had just finished the ninth hole when the discussion changed.\n\n\"I don't mean to stick my nose in, and I've only spent the last 24 hours with you but it bugs me and I have to tell you, your wife doesn't know how lucky she is to have you.\"\n\n\"Well thank you. Unfortunately I have to agree with you.\"\n\n\"I know that things aren't good for you at home.\" She said.\n\nI was stunned although I probably shouldn't have been, living in a small town does have its drawbacks. I didn't say anything, just shrugged. She continued. \"She tells people how much she doesn't want to be married anymore and how you don't even share a room anymore. I know its none of my business but why do you stay?\"\n\n\"I don't want to put my girls through a divorce.\" I answered.\n\n\"They are waiting for you to. They have been for years. They know you aren't happy.\"\n\nI didn't say anything as I contemplated what she told me. Obviously she knew more about what my kids thought than I did. They were the same age, went to school together and admittedly they did not talk to me much. Trying to hold a conversation with them was like pulling teeth. They were always off doing their own thing or with their mother. I admitted then that was one of the reasons I hung around. I was afraid that they would abandon me for their mother and I would be totally alone.\n\n\"I'm sorry I should mind my own business and keep my mouth shut. I just never knew you before except who you were, and I've had so much fun the last day. I know you went way out of your way to help me. I could not imagine most anyone doing that for someone they barely know.\" She said.\n\n\"No, its Ok. You haven't said anything that isn't true or that I don't know already. It's just hard to change your life and sometimes its easier to be miserable.\"\n\nShe studied me for a minute as I drove the cart and then as I pulled up to the Tee she leaned over and kissed me on the cheek. \"Well for this week it is my job to make you unmiserable and help you have a good time, just like you are doing for me.\" She announced with all the certainty of a teenager.\n\nWe played the rest of the game without bringing up the subject again and I did put it out of my mind and enjoy myself. It helped a lot how sweet Kahlea was and how much fun she obviously was having. Her energy and attitude were contagious.\n\nWe finished the game and on the way to the hotel she asked what I planned to do with the rest of the day. I admitted that I was tired and was going to be lazy and rest before dinner then see what there was to do in the evening. I asked her what she would like to do.\n\n\"Well I hate to admit it but I am tired too. I have to remember not to drink so much. I felt awful this morning.\" She said\n\nI laughed. \"The trick is to know how drunk you are getting and them before you go to bed drink a bottle or two of water. The water helps replace the fluids the alcohol drains off your body and it helps dilute the poison in your stomach. You may still get a hangover but not as bad.\"\n\n\"Why didn't you tell me that last night?\" She asked annoyed.\n\n\"Because even if I had you would not have listened. Everyone has to have a hangover before they appreciate how not to have one.\"\n\nShe laughed, \"You're probably right.\"\n\nWe got back to the hotel and into our rooms. She was no sooner in hers than the connecting door opened and she walked into mine. \"I'm going to go get a soda from the machine. Do you want one?\" She asked.\n\n\"Yeah that would be good. Thanks\" I answered.\n\nShe left and I flipped on the TV and laid down on the bed to watch it. Kahlea returned a few minutes later and handed me the soda she had gotten me and plopped onto the bed next to me. \"Whatcha watching?\" She asked as though it were the most natural thing in the world to lay on the bed with me watching TV.\n\n\"Just flipping channels, but this movie looks good. I've seen it before but I probably won't be awake long enough to care.\" I chuckled.\n\n\"Can I watch with you?\" Kahlea asked with all the innocence of youth.\n\n\"Sure, get yourself comfortable.\" I allowed.\n\nWe watched for a while and sooner or later I did fall asleep, as did Kahlea. I woke an hour or so later to find myself on my back with pillows under my head, the TV still on and Kahlea asleep next to me. She had my left arm wrapped into hers and her other arm stretched over me with her hand resting on my chest. She had cuddled right up to me in her sleep. I smiled over at her. She looked like an angel asleep like that and I did not want to wake her. I found the remote on the bed next to me and flipped channels until I found something else to watch. She stayed curled up against me for another half hour before she woke up on her own. \n\nShe opened her eyes and looked at me and smiled. \"I had a good nap\" she purred as she stretched. Then instead of rolling away when she finished stretching she actually pulled closer and laid her arm all the way across me in a hug. \"You're comfortable to sleep against, nice and warm and you don't snore\" She offered\n\nI laughed \"Well my wife disagrees with you.\"\n\n\"Well she's and idiot anyway, treating you like she does. But I'm not going to talk about that.\" She offered with disdain in her voice. \"So are you hungry yet? Or do you want to eat later\"\n\n\"Well it's still early. I was thinking about getting a shower then maybe doing some shopping before dinner.\" I answered.\n\n\"Shopping?\" Her ears perked right up. \n\n\"Yeah,\" I laughed \"Whenever I come out here I like to go to the western wear stores and see if I can get anything, it's cheaper than at home. I do need a new cowboy hat my old one is getting raggedy.\"\n\n\"I've seen you in that it looks good on you.\"\n\nWell there is something else my wife and you disagree on.\" I laughed \"I sometimes wear it just to piss her off.\"\n\nKahlea giggled. \"Shopping sounds like fun. I always wanted a hat and boots.\"\n\nWell then let me up so I can shower then we'll head out shopping and I know just the place for dinner and some cheap gambling. They have a 25 cent minimum on the table instead of the $5 like last night.\n\nKahlea squealed with delight \"Even I can afford to play then.\"\n\nShe jumped up and announced she was going to get ready. I rolled out of bed and headed for the shower. Having gotten a quick shower and slipped on a pair of slacks and a shirt I was walking across the room when Kahlea appeared at the connecting door holding up two different tops against her. \"Is this place dressy? Which one would be better?\"\n\nI looked and either would have been suitable. \"Either one is fine.\" I answered.\n\n\"\"Well which one do you like better? The white one or the red one?\" and as she asked she dropped one then raised it and dropped the other. I couldn't help but notice that as she dropped each one she exposed a naked tit to my view. She was standing there asking me which I liked with no top or bra on giving me a view of her beautiful round firm tits. I stammered for a reply and just wanting to get the embarrassment over with. \"The White one is great. \" I answered as I looked away.\n\nSo far all the time I had spent with her I had not viewed her as a woman, just a cute little girl, like one of my own daughters. Now I had had a view of her as a woman and my entire mindset changed. She went back into her room and was back in less than a minute wearing the white top I had chosen. It was then that I realized it was a tight white top which bared her midriff. To top it off she had put it on over her very nicely rounded tits without a bra. There was very little left to the imagination. The material was thin enough that her nipples were prominent and her areoles visible.\n\n\"Uh, Kahlea. That one might not be the best either.\" I offered.\n\nShe broke into a pout \"You don't like it.\"\n\n\"No its not that it is very nice and shows what a beautiful woman you are. It's just a little revealing.\"\n\nShe looked at me puzzled for a few seconds and then a sly smile crossed her face. \"I don't care what they see and if people think I am your hot young mistress then let'em think that. Besides you said it makes me beautiful.\"\n\nWell that was not exactly what I said but it was close. I did not want to hurt her feelings so I just shrugged and mentally resigned myself to walking around with my dick hard all night. I called the valet to have my rental car brought around and we headed down to the lobby. As we rode the elevator and walked through the gaming area and lobby, I noticed that Kahlea was getting quite a few stares from the men we passed. I believe she noticed the same thing because as we walked through the gaming area she took hold of my arm and pulled close to me while her head went up in the air just a bit, as if to say \"I'm taken and you can't have me.\"\n\nWe drove to the first of the three stores I usually frequent when I'm in town and I found a pair of boots that fit and I liked. Fitting them for me is always a problem and I thought nothing of the $250 price tag. I noticed Kahlea looking over a pair also and had her try them on. \n \"I can't afford them but they are very nice.\" She demurred\n\n\"Well maybe we can make a deal and get them on sale but we have to know if they fit.\" I suggested.\n\nReluctantly she tried on the ones she had been eyeing. We found they were a good fit and the heels did make he legs look longer, they just looked good on her. I told the sales girl to put them in with mine.\n\n\"No, I can't let you buy them and they are so expensive.\"\n\n\"Good boots are expensive but they will last a long time too so they're worth it.\" The salesgirl scoped them up and took them to the counter. She either was afraid of losing the sale or had worked there long enough to hear similar arguments. Our next stop was the store where I always bought my hats. The place was stuck off the tourist circuit so the prices were reasonable and the selection excellent. I found myself a new hat a dark Grey 6X beaver. Here again I told Kahlea to pick out a hat that would look good with her boots. She demurred again claiming they were too expensive.\n\n\"How can you tell, there's no prices on any of them. But that one is only $10.\" I said as I pointed to a $100 hat. The store used codes for the pricing and I had learned how to read them. I winked at the clerk as he was about to open his mouth and spoil my fun. He clapped his jaw shut and smiled. Once she thought the hats were cheap she allowed me to show her how to choose a good one. She chose a white 5X beaver that really did look great on her. While we were checking out I picked her out a nice belt with a silver and turquoise buckle. She insisted on wearing her hat as we left, she was having fun and I was enjoying watching her have fun. I even let her give the clerk $20 for her hat and belt and he just added the difference to my bill.",
        "Our next stop was at a store that was part of a chin of western wear stores. They were a little higher priced but they had a better selection of clothes than the other two. I was looking for a new sport coat and a couple of dress shirts in western styles. I looked through the racks and picked out a coat and Kahlea promptly turned her nose up at it. \"It looks like something my grandfather would wear.\" With that she pulled one off the rack and added. \"This one would look good on you and not make you look old.\" I was a little hesitant as it was not my usual style but tried it on anyway. As I looked in the mirror I noticed her talking to the young girl who was helping us. Since they were both smiling and nodding their heads I figured that maybe it was a good choice after all. So I turned to them and asked \"Well, what do you think?\" \n\n\"Perfect\" Kahlea gushed.\n\nThe sales girl looked at it and offered \"It looks better on you than the other one would.\" \n\nOk two to one I bowed to female sensibilities. Next they picked out three shirts for me. I did not even bother to look at them as I felt that my taste would be overridden anyway. The only stipulation I put down was that they not be gaudy, \"I don't want to look like a rodeo clown: I growled. My selections were made and piled on the counter then I turned to Kahlea. \"Now, if I'm going to dress like this we can't have you dressed like an eastern city slicker.\"\n\n\"No, you already bought me the boots.\" She insisted.\n\n\"Yes and the boots need a pair of jeans and dress slacks as well as a couple of tops otherwise they won't look right.\" I countered. Then to the salesgirl \"Take her back and get her what she needs.\"\n\nThe girl took Kahlea by the hand and led her back to the women's section and as they went away I heard her tell Kahlea \"If your dad wants to buy you clothes, let him.\"\n\nThen Kahlea's response \"He's not my dad. He's my ... companion.\"\n\nThe salesgirl stopped in the middle of the aisle. \"Well lucky you. He must like you a lot. By the way he's treating you I can tell you have a good one.\"\n\nI could see Kahlea's blush from where I was and I was pretending not to hear, just looking around. They continued to the women's wear and I gave them a minute and followed. They first picked out a pair of slacks that she tried on. They looked so right on her I told them to get a second pair. Then to the jeans. Kahlea let the other girl pick out a pair and she went into try them on. When she came out I could tell by her face that she liked them. Part of me did also but another part, the more conservative part didn't. \"How did you get into those things. Did you spray them on?\" I asked. They were the tightest fit in jeans I had ever seen. They showed every nook and cranny of her body. I saw the salesgirl lean over and whisper to her, then Kahlea look at me and giggle. \"But I really like them.\" She said.\n\nOk so she got her way, and I got a hug and a kiss. The kiss was different than the other pecks she had given me before. This one landed right on my lips and was soft and inviting. Not the quick peck you give a friend. Alarm bells were going off in the back of my head and I realized I had been hearing them for a while but it felt so damn good to have a woman touch me and give me a kiss. I couldn't fight it. I shut the alarms down with a stern \"She's just a friendly little girl. Don't be a pervert with a dirty mind.\"\n\nKahlea wanted to wear her new jeans and cowboy hat to dinner, I went out to the car and brought in her boots also. She left her tight, show all top on and when she was done, damn did she look HOT. I carried our purchases to the car and she followed me. Next I drove us to the hotel/casino where I planned dinner. The valet took the car and As Kahlea swung her legs out and stood the whole place stopped and checked her out. She waited until I came around the car and then tucked her arm into mine as we entered the place. We had a nice dinner and spent a while playing the low stakes tables. Kahlea was having a blast betting quarters on roulette winning some and losing some. I watched her play and could not help but notice her nipples were poking at her top straining the material to break free. Just watching her bounce around whenever she would win gave me a ferocious hardon.\n\nShe tired after a while and we decided to head back to our hotel. We left the car and headed in when we heard music from the small dance floor they had at one end of the casino. I could tell she was interested so asked if she'd like to go over and dance a bit. Her eyes lit up and a huge smile crossed her face. We drank and danced for almost two hours before I got to tired and too drunk to continue. I wasn't plastered just feeling happy and lazy. Kahlea had apparently learned her lesson the previous evening and kept to a couple of drinks and some bottled water.\n\nAs we headed for the elevator she tucked her arm in mine and pulled close resting her head on my arm. \"I had a lot of fun today, thank you, and thank you for all the clothes and the boots. I love them.\"\n\n\"Your welcome and they look damn good on you. You are about the hottest woman I've seen all night.\" I told her as we boarded the elevator. She pulled closer to me and when the elevator door closed she leaned up and kissed me on the lips again. This time it was a very soft and lingering kiss. Her mouth was open, waiting for a response. Oh how I wanted to slip my tongue into that mouth and wrap my arms around her. But the alarm bells started going off again and I gently broke the kiss and gave her a peck on the forehead as I pulled away. It was not a rejection of her advance it was more of an \"I'm not sure\". Which in reality I wasn't. She accepted it and rested her head on my chest and hugged me until the elevator reached our floor.\n\nWe reached the rooms and she stood by my door waiting for me to open it and the alarms kept going off. I slipped the card in and unlocked the door. I pushed it open and she walked in and I right behind her. As we stepped into the room she turned and kissed me again. Softly, slowly, with her mouth open. I let her and returned the kiss gently. As she broke away I looked at her and said \"I've had a lot to drink tonight I am going to sleep like a log.\"\n\nShe smiled up at me and leaned in to give me a quick peck again and just said goodnight as she took her protruding nipples and her painted on jeans over to her own room. I noticed that again, she did not even close the door between our rooms but left it standing wide open. I sighed, fantasizing about what could have been as I stripped down and crawled into bed. I had had a lot to drink and dropped off immediately into dreamland.\n\nI woke the next morning, my head fuzzy from the alcohol the night before but generally feeling rested and content. It was Sunday and I still had almost a week before I had to go back to reality. Suddenly I heard a noise and detected movement beside me. I glanced over and saw Kahlea's face lying on the pillow next to me. Thoughts raced through my head.\n\n\"Oh shit what did I do? Did I drink that much last night?\" I distinctly remembered the kisses. Twice she had kissed me and I had not rebuffed her. \"Had I let her into my bed? Had I forced her?\" I did not remember anything except going to bed. \"I have had a couple of lost weekends in my time and more than a few forgotten nights. Was this one of them how much did I drink?\"\n\nI laid there frozen in fear and self loathing, thinking that somehow I had gotten this little girl, a girl more than 30 years younger than I, a girl the same age as my youngest daughter into bed and had sex with her.\n\nI am not sure how long I lay there a few minutes or an hour, I don't know. Eventually she woke up. She rolled away from me a bit and stretched, I noticed that she was wearing one of those long T shits that women sometimes wear as nightgowns. Then as she finished her stretch she brought her arm down across my chest and gave me a little hug as she had the previous day.\n\n\"Good Morning.\" She said \"I hope you don't mind but I got a little scared in that big room by myself so I came in here and laid on top of your covers. I guess I fell asleep and ended up underneath.\" As she finished she snuggled closer. \n\nI was still petrified but my mind eased a bit at her explanation. \"Well I am glad to see that one of us has clothes on.\" I said.\n\nShe looked at me puzzled and then ran her hand down under the covers from where it rested on my chest. She did not stop until she got a handful of my cock. She pulled her hand back startled \"Oh my God I'm sorry, I didn't know that that was going to happen I mean I did not mean to touch you like that. I was just so comfortable and sleepy I did not realize what you meant.\" Even though she was apologetic and from her deep blush very embarrassed. She made no move to pull away, other than to release my cock.\n\nShe was so damn cute when she was embarrassed I could not be upset, \"That's OK. It was an accident. But I have to admit that it has been a long time since I have been naked in bed with a beautiful woman. Much less since one grabbed me there.\"\n\nHer blush deepened but she still made no move to slide away or get up, instead she simply laid her arm back across my chest and giggled. I was a bit confused, \"You seem awfully calm for a girl who suddenly found herself in bed with a naked man.\"\n\n\"Why not? Like I told you yesterday you're comfortable to sleep against, and I know you won't do anything to me that I don't want you to, so I can relax and be comfortable. Besides, it feels naughty to lay in bed with a naked man.\" She giggled.\n\n\"Ok Miss Naughty how about some coffee.\"\n\n\"That sounds good. Then what are we going to do?\"\n\n\"Well I said as I reached for the phone for room service. \"I have not been doing my workout lately so I was going to go to the gym for a bit then maybe a swim and come back here for a shower. Beyond that I didn't have any plans.\"\n\n\"A swim? It is nicer here than at home but still a little chilly for a swim.\"\n\n\"Not in the indoor pool.\"\n\n\"Indoor pool? I didn't know they had an indoor pool. Can I go with you.\"\n\n\"Of course you can.\"\n\nI flicked on the TV and tuned in the news while we waited for the coffee. We laid peacefully together while we waited. I had a raging hardon but was able to conceal it by keeping my leg up a bit. Kahlea just lay with her arm across me and her head in the crook of my shoulder. Occasionally she would move her hand a bit and stroke my chest. The alarms in my head were ringing like crazy but like the previous day, it just felt so damn nice to be close to someone who cared even a little, I silenced them. \"Fuck it I don't care.\" Was what I thought. \"I'm not pursuing her or trying to seduce her and not doing anything except lying in bed watching TV.\n\nShortly there was a knock on the door, our coffee had arrived. \"You better get that as you're the one with clothes on.\" I told her. She giggled and slid out of bed to answer the door. The young man who delivered it gave her the once over and then glanced at the old geezer in the bed and a look of envy and disgust crossed his face. As he set the tray on the table I said \"Kahlea get my cash from my pants and give the boy a tip.\" Now it was my turn for surprises. She was facing the waiter with her back to me and I had noted that what I thought was a nightgown was actually just an oversized T shirt and did not come that far down over her legs. As she bent at the waist to pick up my pants I realized that she had nothing on underneath the T shirt. I got a perfect view of her ass and pussy. And a perfect ass and pussy it was too. She stayed bent over for a good 30 seconds rooting thru my pockets looking for my cash until she found it and stood up again. Now 30 seconds does not sound like a long time but in a situation like that it seemed like 30 minutes.\n\nShe gave the boy his tip and let him out then teased me some more by leaning over the table to pour the coffee. Now if all that wasn't bad enough, she brought two cups of coffee to the bed and crawled up on it and sat cross legged facing me on the bed as she talked and drank her coffee. I thought I was going to bust a nut, or shoot my load into the sheets. As she sat there the T shirt obviously rode up and there was nothing between me and her very nicely shaved pussy. \n\nI held my eyes in my head and acted the gentlemen, pretending I didn't see anything at all while she chatted away. I finished my coffee and as nonchalantly as possible mentioned that I needed to get up and get my workout shorts on and a T shirt. She did not take the hint at first. So then I asked her if she was going to get her suit on for the pool. \n\n\"Oh I almost forgot.\" She exclaimed as she jumped up and ran to her room. I took the opportunity to quickly get up and make myself decent. It was a good thing I moved fast because it took her no time at all before she was back wearing one of the skimpiest thong bikinis I have ever seen. The top covered nothing more than her nipples and the bottom just barely covered her pussy. I had put my suit on and pulled my gym shorts on over it, so at least my hardon was constrained by my swim trunks and the bulge hidden inside the loose fitting gym shorts. I had to suggest she wear a T shirt between our rooms and the pool, to cover her bare ass, noting that we had to walk through at least part of the casino floor to get to the pool. She giggled a little embarrassed. Besides I told her we could get breakfast after our swim but they would not seat us dressed as she was.\n\nShe pulled a t shirt on and a pair of loose fitting shorts and we made it o the gym. I did my 30 minutes on the treadmill and some weight training then into the pool. Kahlea had hung out in the gym for a bit but grew bored quickly. At 18 you don't have to work to stay in shape at 50 you do. We swam around for a bit and played games, tossing a ball and of course she tried to dunk me a couple of times. It was a lot of innocent fun even though I did get to lay my hands on parts of her body that I normally would not have. Soon we were both tired out and hungry, so we crawled out and dried off and made ourselves presentable for the buffet breakfast, very casual. We were actually overdressed compared to some people. Since we had worked up an appetite we both stuffed ourselves before heading back to the rooms.\n\nOnce again I noticed that Kahlea waited for me to open my door and went in that way, rather than use her own key and door. I was tired out from the exercise and from a full stomach but wanted to take a shower. When I mentioned my immediate plans, Kahlea told me she was going to watch TV while I showered. I assumed she meant in her room but never questioned it. I stepped into the bathroom and stripped down for the shower. The hot water felt good on my muscles and after the shower and shave I felt more human again but still lazy from the food. Without thinking I stepped out of the bathroom carrying my dirty laundry and crossed half the room before I realized Kahlea was lying on my bed watching TV and staring at me open mouthed as I crossed the room naked. I immediately covered myself with my laundry and grabbed a pair of shorts before ducking back into the bathroom to quickly dress. Somewhere during my embarrassment I mumbled an apology. Then as I ducked into the bathroom heard a giggle as a reply. Once I had pants on I came back out and apologized again. \n\n\"That's Ok I guess I should have warned you I was out here. I can't say I'm sorry though it was an interesting show. Very educational.\" She said\n\n\"Now I was even more embarrassed by her teasing me. \"Oh is that so. I suppose you expect me to believe that you've never seen a naked man before.\"\n\n\"Well I have seen my boyfriend or actually my ex-boyfriend. But I have to tell you he was not as well equipped as you are.\"\n\nNow I was embarrassed again but not about to let this little girl get the better of me. \"Oh and how much of him have you seen?\"\n\n\"Not that much. He always wanted to have sex but I wanted to wait. I mean I did things to him with my hand and once or twice with my mouth and I let him touch me, but that's it. I guess that's why he started fucking that Susan girl, that I caught him with.\"\n\nI could see the hurt on her face and I was sorry I started trying to get back. I moved over to the bed and sat down and hugged her lightly. \"Any boy who would chase after someone else when he had you is just stupid, and doesn't deserve you.\" I told her.\n\n\"I know I keep telling myself that. I had planned on letting him take my virginity on this trip. I knew he wanted to and I knew if I waited too long I would lose him. Then a week before we leave I caught him with his pants down and his cock in her pussy pumping away in the backseat of his car.\"\n\n\"In a way I am actually relieved. It didn't even hurt except for the betrayal. We had been dating so long that everyone expected us to get married and I guess I just accepted it too. Now I know I really did not love him. I was just doing what everybody wanted me to do. But I made up my mind I am going to do what I want from now on.\"\n\n\"So enough depressing stuff about me, how about if we just lay here and watch one of those movies for a while then later we can figure out what to do. I haven't seen this one and I really would like to.\"\n\n\"Ok I agreed. But don't get mad if I fall asleep.\"\n\n\"I won't but I have to warn you that if you fall asleep, after what I saw earlier, I may just have my way with you.\" She said with a leer.\n\nSo we got comfortable on the bed and dialed in one of the first run movies the hotel offered and settled in. I did fall asleep and it did not take long. I am not sure how long I was asleep but I woke slowly and realized that my shorts had been pulled down and my cock was standing straight up in the air. I laid there frozen, not knowing what to do. She was just looking. \n\nI did not want to embarrass her by letting her know I caught her. After a few minutes, the angel on my right shoulder won and I decided that I couldn't let her take this farther and I knew if I did not stop her it would go farther because I was definitely getting horny for her little body still clad only in the thong bikini. So I groaned a bit and moved a little. She stopped and stayed still. Then I did it again and she gently pulled my shorts back up to cover me.\n\nI pretended to sleep for another 15 minutes then \"woke up\". The movie was still playing and she was tucked in against my side. I beat myself up a little over what I could have had. Again I realized it felt damn good to have her next to me in my bed. That was when I took my first chance and snuggled closer to her letting my arm pull her to me. She looked up at me and smiled and I saw a glint of something in her eye, I wasn't sure what it was and it was gone too quickly to be certain.\n\nI didn't care about the movie, I did care about the little girl snuggled into me. Little girl was not really correct. Once we reach a certain age anyone under 30 is a little girl. This was a young woman and as I laid there with my arm around her a thought occurred to me. \"Could she be manipulating me into something? She had steadily increased her attention and the amount of contact as well as the amount of skin visible for the last two days. Or was this just simply a friendly young woman who was scared to be so far from home and alone and too proud to admit it.\" I chastised myself again for thinking evil thoughts. \"You are not going to take advantage of this kid. You are going to be nice to her and help her.\" But it felt so natural and so comforting to lay with her like this.\n\nAnother half hour went by and the movie credits began to roll, soon the screen changed to the advertising page, trying to interest us in spending another $9.99 for another movie. She picked up the remote and flicked thru the selections. I really wasn't paying attention, just laying there in a kind of stupor. Then I was suddenly shocked out of it as I realized she was flipping through the adult movie selections. \"Oh shit. If she puts one of those on there is no way I will be able to lay here with her and not do something stupid.\" Ran through my mind.",
        "Quickly, I asked her \"What do you want to do the rest of the day. You aren't going to waste your vacation laying around watching TV are you.\" She stretched and smiled at me. \n\n\"I don't know I am pretty comfortable here like this. I could be content to stay here. But if you want to do something that's Ok.\" She answered.\n\nI thought furiously. \"How about if we go down to that really tall hotel and go up to the top to see the view. I hear they have a rollercoaster at the top that you can ride on.\"\n\nThat got her attention, roller coasters and young women always go together. \"Cool,\" She exclaimed as she jumped up \"Can we go there?\"\n\n\"Sure but you'll have to get changed and I need to finish dressing.\"\n\n\"Ok\" she called as she bounded out of the room. I stood to get my gym shorts off and pull underwear and jeans on. I had just pulled my jeans up and had not even had a chance to close them yet when she returned to my room, wearing only a pair of thong panties, carrying a pair of shorts and a top. She was babbling away as she got dressed, first pulling on the shorts then sitting down on the bed facing me while she pulled on her socks and sneakers and finally pulling her top on. All very nonchalant, like being half dressed in front of me was the most natural thing. I finished closing up my pants as quickly as I could and pulled on a casual shirt, trying all the time not to look at her beautiful young breasts, and not at all succeeding.\n\nFinally she was dressed and I was no longer distracted, at least not as much, and she turned to me and said, \"I am so glad you are not all hung up on the skin thing, I mean when I get dressed and all. It's nice to be comfortable around you.\"\n\nI looked at her and laughed a bit. \"Well hung up? No, I'm not hung up, I will admit that having you run around my room half naked is a bit distracting. You are a beautiful women and I might be old but I'm not dead.\"\n\n\"You're not old! You're just ... mature. Besides I don't mind if you look at me. It's nice to be appreciated, to know somebody finds me attractive. Do you remember, yesterday in that store when I tried the jeans on and you were saying how tight they were, and the girl was whispering to me.?\"\n\nI glanced at her as we walked out of the room and down the hall \"Yeah, I remember.\"\n\n\"Well do you have any idea what she was saying?\"\n\n\"No I don't. What was she saying?\"\n\n\"She said that you might be complaining with your mouth about how tight they were, but the bulge in your pants was saying how much you liked them.\"\n\nNow I was embarrassed again and I am sure it showed as I could feel my face heat up. When she noticed my blush she giggled and pulled closer to me. \"Don't be embarrassed I was flattered that I had that kind of effect on you. I mean ever since we've been here you have been a perfect gentleman and never really showed that you noticed me, as a woman, at all. It was really nice to see that I could interest you.\"\n\n\"Kahlea if I were younger or you were older I would be showing a lot of interest in you. But you're the same age as my youngest daughter. That's a little bit too much for me.\"\n\n\"Well, I don't see where age should be a big deal. It wouldn't bother me.\"\n\nNeither of us said anything after that for a few minutes. I chose to take the new monorail to our destination rather than drive and look for parking, figuring we could either walk back and sightsee or take the monorail again or some of both. The ride down was nice with nothing more said about sex or relationships. We went up to the top of the hotel and rode the rollercoaster, which damn near gave me a heart attack, then stood around on the observation deck looking at all the sights. On the way back we went to the Star Trek exhibit at another hotel and wandered through the exhibits, went on the ride they had then had a drink in the Quarks bar with costumed Klingons walking amongst us. By the time we were done it was early evening. I decided that a visit to the Hard Rock was a good idea for dinner and as a treat for Kahlea. Truth be told I liked the place, it was fun and interesting with a lot of \"old\" music running, perfect for someone of my advanced years.\n\nKahlea was thrilled with the place and the display of costumes and instruments from some of the legends of Rock. We ate and listened to the music then walked thru the display areas of the hotel. It's amazing how much time you can spend looking at things like that. Before leaving we visited the Bar for a drink and sat and talked some about inconsequential things. Finally it was 9:00 PM and we took a cab back to our hotel. All in all it was a nice relaxing afternoon of sight seeing. By the time we got back to the room we were tired and in the back of my mind was the start of the show the next day. Exhibits opened at noon and I wanted to get registered and get started on the work aspect of my trip.\n\nWe entered the room and set our packages down, souvenir T shirts and things, and Kahlea looked at me with her demur little girl look \"Can I ask a favor.\"\n\nWithout thinking I answered \"Sure, what is it?\"\n\nWell your room has that huge bathtub and mine is just a regular one. I'd really like to take a bath in the big one. If it's alright with you.\"\n\nThat was an easy and harmless request. I smiled as I answered \"Sure go ahead. I'm going to put the TV on and get ready for bed. It's early but tomorrow starts the work part of my trip.\"\n\n\"Oh, thank you. Am I still going to help you at the convention thing?\"\n\n\"I'd like that, if you're willing?\"\n\n\"Ok, I think it might be fun. Besides after all you've done for me the least I can do is carry stuff for you and help out. Now I'm gong to take a nice soaky bath.\" She announced as she went to her room to gather up her bath things. She was back a couple of minutes later carrying her stuff and her T shirt night gown and wearing just her thong panties as she walked through my room and into my bathroom. I laid on the bed with the TV on and noticed that she did not bother to close the bathroom door and that from my position on the bed I could see into the bathroom through the mirror on the wall and in the reflection of the bathroom I could see the bathroom mirror and in that I had an unobstructed view of the bathtub. \n\nI tried not to look to be polite and proper but I just could not help staring as she lowered her luscious young body into the water then sat there enjoying her bath. I watched her bathe herself for what seemed like forever. Then suddenly she looked into the mirror and our eyes met and a huge grin spread across her face as she stared at me. My first reaction was to look away. Like a little boy caught peeking and embarrassed he got caught but my eyes were drawn back to the mirror and the sight of her in my tub. She kept looking at me from time to time and smiling saying nothing. Eventually she got out and dried herself off, taking her time with the towel and checking to make sure I was watching. Then when she was done instead of putting on her T shirt she simply walked out and climbed up onto the bed and laid on her belly looking at the TV. He perfect round ass cheeks staring me in the face and her pussy inches from my hand. \"Watcha watchin?\" she asked as though it were the most natural thing in the world. \n\nNow she had me. I had no idea what was on TV. What I had been watching for the last half hour was her naked body. I wasn't sure what to answer so I decided on the truth \"You, I've been watching you.\"\n\nShe looked back over her shoulder and smiled. \"I know. It makes me feel good to have you watch me. I'm glad you don't think I'm too fat or ugly or something.\" As she finished her statement she turned around on the bed to put her head at the same end as mine and laid on her side. I now had a perfect close up view of her body next to me in bed, and a hardon to match the sight.\n\nShe took hold of my arm and pulled close to me, hugging my arm. \"Thanks.\" She said \"Thanks for making me feel good about myself.\" And she leaned over and kissed me on the lips. A long slow lingering kiss, then she laid her head on my chest and said nothing more. \n\nWe stayed like that for a long while just letting the TV run and at least for my part not paying attention to it. Finally I shook myself out of neverland and said \"Well, I guess its bedtime.\" And I reached up and turned off the light. She made no move to leave, but instead looked up at me. \n\n\"Is it Ok if I stay with you again tonight.\"\n\nI looked back at her \"If I say no, you'll just come back after I'm asleep anyway. Won't you?\"\n\nShe smiled by way of a response. \"Ok but you better put something on. I don't know what will happen if I wake in the middle of the night and find a naked woman in my bed.\"\n\nShe giggled and got up and put her T shirt on before crawling under the covers and snuggling up to me. I laid there a long time before I was able to go to sleep, all the time arguing with myself about whether I should put my hands on this nymph. She was open enough about her body that it seemed like an invitation and she had dropped what I thought were hints. On the other hand maybe she was just a very open and uninhibited person and her comments were innocent. In the end the fact that she was over 30 years younger than I won out and I decided that it was too much like child molesting. I eventually drifted off to sleep, half afraid that I would wake in the middle of the night with her lips around my dick, half hoping too.\n\nWhen I woke it was dawn and she was still sleeping beside me, her one hand gripping my arm and the other laying on my chest, while her head was lying against my arm. I had a near desperate need to take a leak so as carefully as I could I slipped out of her grasp and headed for the toilet. I took care of business and decided that it would be a good chance to get a shower so I started the water running and slipped out of my shorts before stepping into the stream of hot water. \n\nI was enjoying the stream of hot water as I dumped some shampoo and worked it into my hair then rinsed it out. Just then, with my eyes closed and the shower rinsing the soap off of my face I heard the glass door open and Kahlea's voice, \"Room for two in here?\" She asked as she stepped in. \n\nI sputtered the water off of my face and wiped my eyes to see the naked nymph standing next to me holding a washcloth and bar of soap. She was lathering up the cloth as I looked on dumbfounded. Finally I regained my voice. \"What do you think you're doing?\" I asked\n\n\"Saving time showering with a friend.\" She answered with a smile \"Oh what's the big deal. You've already seen everything I have and I've seen all of your important parts. Now turn around and let me do your back.\"\n\nI didn't know what to do but comply. Her answer had been so matter of fact and natural that she made it seem like an everyday thing. I turned and put my back to her and she began to wash me down. Rubbing the cloth over my back and down my sides. It seemed more like a massage than a bath and in a few seconds I was almost in a trance with the pleasure of it. It wasn't a sexual feeling but it was extremely sensual. Before long she finished my back and before I knew it she had her hand on my ass rubbing the cloth across it and down the back of my thighs and my legs.\n\nAs she finished she stood back up and before I could turn or do anything she had reached around and was washing my chest and shoulders, rubbing the soapy cloth across my skin. She proceeded down across my abdomen and then to my relief/frustration down my legs completely ignoring my cock and balls. I assumed she considered it to private and was going to let me do it myself, that is until she stood up and without hesitation began to wash my privates. To my embarrassment I had a hardon and she only made it worse as she ran the soapy rag up and down my shaft. I was beginning to wonder if she was going to masturbate me or wash me as she was spending a lot more time than was needed on that. \n\nThen just as suddenly she stopped and held out the cloth to me. \"Would you do my back for me?'\n\nWhat else could I say, of course I would. I took the cloth and she turned and presented me with her back and perfect ass. I started at her shoulders and began to work down her arms and back to her ass. I took my time trying to mimic what she had done for me. I think I succeeded as I heard her purr like a cat. Then down her legs as I stood up I could not resist and took a moment to run the rag over her ass again. Then I stopped.\n\nShe looked back over her shoulder \"You can do the rest if you'd like.\" She offered. I hesitated and then thought \"in for a penny, in for a pound.\" And reached around her and began to wash her shoulders and belly. This meant I had to stand closer to her than I had before and it left my 7 \u00bd inch cock pressed against her back. I was extremely self conscious of the fact but short of standing back and leaning forward to reach her, a very awkward position, I didn't see any way around it. She did not seem disturbed by it at all. \n\nI ignored her tits and sex and moved down to wash her legs. Once done I stood up again and held the washcloth out for her. Instead of taking it she leaned back against me and said \"You missed some spots.\" Again I hesitated. Now her body was pressed fully against mine and my balls were pressed against her ass, my dick in the small of her back. I surrendered to the inevitable and lay the washcloth on her breast and started to wash them. I felt her nipple stiffen under my touch and at the same time my dick jumped a bit. Then I moved to her other breast and did the same. She leaned back against me even more and then as I moved my hand off of her breasts and down onto her stomach she grasped my wrist and gently pushed my hand and the washcloth down to her sex. I gently washed her there, running the soapy rag over her while she held my wrist. I felt her draw a deep breath and then release it and she pulled my wrist back up to her breasts and directed me to rub her there some more. \n\nI was lost in the sensuality of what we were doing when I suddenly felt her free hand reach back between us and encircle my manhood. Then as I ran my soapy clothe over her hard nipples she stroked me. Slowly at first then more vigorously. I wanted to stop her, I knew I should stop her. I wanted to stop myself, but I couldn't. It was the first time in years that a woman had touched my sex and done anything even remotely sexual and it felt so good. It didn't last long though. In no time at all I shot a huge load of cum up her back and as I felt my cock pulse with the exit of my seed she slowed her actions. Until I was spent and the last of my sperm was just oozing out of the end of my prick. By this time I had wrapped both of my arms around her and had one hand on her breasts, rubbing them, pinching her nipples and circling her areoles while my other hand was rubbing her pubic mound and sliding a finger through her wet and waiting slit. Sliding down over her clit to her entrance and spreading her natural wetness over her. I continued to hold her like this while I spent myself on her back and then I felt her shudder as she orgasamed from my touch. I continued to hold her then guilt washed over me. \n\n\"I'm sorry I should not have done that. I should not have taken advantage of you like that. God I'm such a pig.\"\n\nShe turned in my arms \"You didn't take advantage of me. I wanted you to do that. I wanted to touch you and feel you touch me. Thank you it was even better than I imagined.\" Then she leaned forward and laid her lips on mine and this time she let her tongue slide out and across my lips, then between them finding the opening she sought. She brought her tongue to dance with mine. We stood there and kissed for a long time until she finally broke it off and reached behind herself to turn the water off. She stepped out of the shower drawing me out holding my hand as she reached for a towel. Then she dried me off and handed me a towel so I could do the same for her. \n\nI was powerless to do anything. I was completely under her spell as she led me back into the room and over to the bed. She laid me down and crawled in beside me. \"It looks like you are ready for more she said as she grasped my still hard cock. It had been so long since I had shared myself with someone my body was not about to quit yet despite my maturity. She stroked me a few times then moved her head down and took me into her mouth. \n\nThe feel of her velvety smooth mouth sliding over the head of my cock was ambrosia, nearly more than I could stand. She sucked lightly then slid off of me and looked into my eyes. \"I want to do this but I don't really know how. I want to make you happy.\" And she dropped her mouth back around my meat and sucked me in again.\n\n\"You're doing just fine. Just don't stop, not yet.\" And she didn't she sucked and bobbed and licked me until I felt another orgasm rising inside of my balls and building ready for release. Then I warned her \"If you keep that up your going to get a mouthful.\" She paused for a second as though considering and then began again sucking harder and jacking my exposed shaft with her little hand. I could contain it no longer and I started to pulse and pump my seed into her mouth. She took it as best she could swallowing almost as fast as I gave it to her, but she lost some and it leaked out around her lips and ran down the corners of her mouth. Finally I was done and she swallowed the last of it and licked my deflating cock clean.\n\nCrawling up to me she kissed my cheek, \"Thank you, I wanted to do that. I never tasted it before. I was afraid it would be gross but I really like it.\" \n\n\"I should be thanking you for that\" I said.\n\n\"No,\" she answered, \"I've wanted to do that since Saturday. I wanted to make you feel good. I never had this feeling before. I want to be with you and to make you happy and I don't care what it takes. Like what I just did. I've done it before but I didn't really want to but I could tell how much you liked it and the more you liked it the more I wanted to do it.\" then she paused again. \"I have a favor to ask.\"\n\n\"Right now Kahlea I would grant you just about anything you asked\" I answered. \n\nShe giggled. \"No this is serious. I want to give myself to you I want you to take my virginity.\" Before I could come out of my shock and object she kept rushing through her request. \"I know it's important and a big step and everything. I've always wanted to wait for someone special and for it to feel right and even though I had decided to let my ex-boyfriend take me It still didn't feel right and I just kinda decided that I had to, but now I want to, and I want you to. It just feels as though we should, like natural.\"\n\nI took a minute to think, then I answered. \"Kahlea if that is what you want now than that is what you will want later so I want you to think about what you are asking and offering. Intercourse is fun and it feels good but it feels special when you love the person and it is infinitely better. So you might want to wait until you have somebody you're in love with to share yourself with. But if you still feel the same way later, tonight or tomorrow or the day after we'll talk about it again. Besides right now I think you drained me dry. At my age I shouldn't be able to cum twice in succession like I did.\" \n\nShe looked at me with a wicked grin. \"It's my youth rubbing off on you. Just think how much would rub off if you put that thing inside me.\"\n\nI laughed, \"Now that is a scary thought. I've found the fountain of youth.\" She giggled at me. \"Now let's get dressed and get some breakfast, today I can't be lazy I have to do some work.\" I announced. Then I looked at her and kissed her gently. \"Thank you again. That was very nice and I could tell you wanted to do it.\"\n\nI was looking for an excuse, a way to escape, because now as the sexual euphoria wore off, my conscious was kicking in and I was beginning to kick myself. I had just allowed this young girl to perform sex acts on me. She was the same age as my own daughter. What a pervert I am. I must have done something to entice her, to lead her on. I was sure she was reacting to my helping her out and being nice to her. I had never had any intention of taking her to bed.",
        "I should have put a stop to it when she first started getting close to me. When she first started with the hugs and kisses and especially the first time she crawled in bed with me. I should have take a firm stand and explained that it was not proper. But I didn't, it felt so nice to have someone close to me. Someone to hug me and give me a kiss and especially to lay next to me and hold me in bed. I had missed that so much over the last few years. I had to admit to myself that I did let her go on because she made me feel good. Now I had to find some way to extract myself. But I had to do it in a way that she accepted it, after all I couldn't have her going back to the small town we lived in and telling people I had seduced her and taken advantage of her.\n\nWe dressed and prepared for a day of work at the show. Once we checked in and started making the rounds of the vendor's booths, I had something to occupy my mind other than Kahlea. She was a good helper. She collected all the literature I wanted and a few samples that were offered and dutifully stood close by incase I needed something. She even carried some of my business cards to hand out to people I wanted to talk to later. In short she became my good right hand. Sometimes it was uncanny the way she would be able to anticipate what I wanted or needed and be right there with it. We worked the aisles until it closed down at 5 PM and then headed back to the room.\n\nI was tired, 5 hours on my feet talking and thinking had taken a toll, but one look over and I could tell Kahlea was even more tired. She fell asleep in the car on the short ride back to the hotel. I smiled to myself, \"I guess I wore her out.\" We arrived and I woke her as the valet took the car. A sleepy Kahlea followed along as I headed for the elevators.\n\nOnce we started the trip to our floor I looked over at her, \"Tired?\" I asked\n\n\"I didn't know we were going to work so hard.\" She answered.\n\nI laughed out loud, \"So I wore you out. Well you did very well. It really helped having you along.\" She brightened at the praise. \"Don't worry an hours rest and you'll feel better.\"\n\nI let us into my room and stepped into the bathroom to drain my bladder and when I came out I found her sound asleep on the bed. She must have set her stuff down and passed out. I pulled the sheet over her and let her sleep and poured myself a drink then sat on the couch with my feet up and the TV on while I considered all the things that had happened over the last couple of days.\n\nI had really enjoyed the time I spent with Kahlea and yes, to a certain extent I had treated her like a girlfriend. I had taken her to nice restraints, bought her clothes and other presents and generally taken care of her. My intentions had been honorable. Starting out, I just was being friendly on the plane, then that hideous motel she had booked into, I felt protective of her. Then as we spent time together I had developed a fondness for her and had actually, now that I considered it, been glad that she seemed to reciprocate. I had to decide what to do. Should I cut this off and say no further or should I let it develop.\n\nI reached a decision, sort of. I was going to lay all the cards on the table so to speak and talk to Kahlea as an adult and see what her reaction would be. From there I would decide where to go.\n\nI let her sleep about an hour before I woke her. I was getting hungry and knew she would wake starved. Once she got the muzzyness out of her head I asked her what she wanted to do about dinner. \n\n\"What ever you want to do is fine.\" She answered. But I could tell she really did not want to go and do much.\n\n\"Ok how about if we take it easy tonight. We'll go down to one of the restaurants in the hotel here and grab something light.\"\n\n\"That sounds good. Then we can come back up here?\" She asked\n\n\"Yeah if you want or maybe go for a walk or something. We'll take it easy, because tomorrow night is that dinner party one of my suppliers is giving and that might be a late night. You don't have to go if you don't want to but you're welcome to come along.\"\n\n\"Ok, I think I would like to go. I kind of like this business world of yours. I really felt as though I did something today not like when I check out peoples groceries. Just let me get cleaned up and we can go downstairs.\"\n\nShe stood up and pulled her top off and unhooked her bra as though I weren't even there then moved into my bathroom and washed up. She came out and went over to her room to retrieve some clean clothes then brought them to my room to dress. I noticed that she had dropped every pretext of using the other room for anything other than a place to keep her clothing and I suspected that before long, if I allowed it, she would move her bags over also.\n\nWe took the elevator down and checked out the restaurants in the hotel, they had 6 different ones plus a couple of fast food stands off of the casino. In all we had a choice of over 10 different types of cuisine. We settled on one where there was no line and that wasn't fast food and took a table and ordered. Dinner was light and so was the conversation. I had planned on having a discussion with her here but chickened out and delayed it till later. After eating I suggested a short walk out to the pool area. It was a beautiful warm night and a walk after a meal is good. She agreed and tucked her arm in mine as we walked outside. We strolled around the courtyard and through the pool area. Actually areas as there were three different ones.\n\n\"Kahlea, can we have a serious discussion about what we are doing?\" I asked suddenly.\n\nShe looked at me and smiled. \"I was wondering when you would get around to it. So let me start and maybe make it easier on you. I know you are a little bothered by what we did this morning. I know that the age difference between us bothers you and I know you are concerned that people might think you seduced me or something like that. I also understand that you like being with me and are having fun and that you like being close to me and everything. But you sometimes almost fell like a child molester. How am I doing so far?\"\n\n\"So far you are right on the money.\" I answered a little taken back at how squarely she had hit the nail on the head.\n\n\"Good. Now I am going to make a confession and try to answer some of your worries. When you first took me from that dump and brought me here, I was a little worried. I knew I could not stay there but I was worried that you might try to take advantage of me. But you set that aside immediately, by the time I went to bed, even though I was drunk. I wasn't worried anymore. Then when I woke up with all my clothes on. I knew you were a special person. A lot of men and most boys would have at least tried to take advantage of my state. But you did not. So at some point over the next day or so I decided that I like you and as time went on and we spent more time together I tested you by letting you see me naked and showing off and everything. Not once did you ever make and advance or try to do anything. That's why I got in the shower with you this morning. I wanted to. I wanted to be close to you and I wanted to make love to you, and I still do. I know I am just a kid to you, but I am old enough to know that I care for somebody and that they treat me well. It's not just that you took me out or bought me things. It's the way you treat me. You treat me like an equal, like somebody and I can tell you care for me as well, even though you don't want to admit it. If you were younger or I were older this would not even come up.\"\n\nShe paused and stopped, turning toward me and looking into my eyes. \"Most of my friends started having sex when they were 15 or 16 I choose to wait for somebody special and for when I was ready. I decided I am ready and I found somebody special. If it doesn't work out and the only time we have is while we are here then that's fine. At least we had that time. I know you are married and I know that it's important to you. I don't understand it because she treats you like crap but that's your decision. All I want is for us to be together for a few days and if at the end you think it won't work or I think it won't work than we just had a few nice days but if we both think it may work then we can decide if we want to try some more and see if we can move on. There how am I doing?\"\n\n\"Fine,\" I answered \"There are a couple of things you didn't cover though. First is my daughters. They are important to me and what they think is important. I am not sure how they would feel about me having an affair with one of their classmates but my bet is it would not be good. Second is, yes I am married and that is not something I take lightly. But you're right the way the marriage is I can get over that pretty easily. But I suppose the biggest thing is the age difference and the fact that I can't make any promises past the end of the week. I just don't know.\"\n\n\"I'm not asking for anything past the end of the week. Just the next couple of days. After that, if you want to go back to the way things were that's fine. I understand, I really do. As far as your girls are concerned, I already told you they are waiting for you to leave. I think they would understand that and as for my being their age, that might be a bit of a problem but I think if I talk to them they will understand.\" She answered.\n\nI looked into her eyes and realized that she had thought this through pretty thoroughly and that she was rational and serious. This was not the whim of a teenager this was the thought out plan of a young woman. I took her hand and turned to continue our walk while I rolled everything around in my head. We walked in silence for a few minutes. Then she asked me. \"Even if you decide that we were wrong this morning and that we should just be friends I would like to be able to sleep with you, curled up against you, I have never felt so safe and warm as I have these last two nights. Please?\"\n\nThere are few things she could have said that would have melted my heart the way that did. I was already leaning toward letting this affair go on for a few days and taking the little bit of pleasure from life I had found. But her last request tipped the scales. At that moment she had me and I just squeezed her hand and moved toward the inside of the hotel and the elevators.\n\nWe arrived at the room and I opened the door and let her in. I hadn't said anything yet. I was afraid to say anything. We moved into the room and she stood there in the center of the room with her hands clasped in front of her, head down looking at the floor but her eyes up watching me. I set the keycard down on the table and paused. I stepped up to her and took her chin in my hand and raised it up until her beautiful green eyes were looking into mine, then I leaned forward and kissed her softly on the lips. I let the kiss linger for long minutes before I broke away. As I broke the kiss I answered her question by simply saying \"Yes.\" And I leaned down to kiss her again, this time with my lips slightly open. My lips met hers and my tongue slid out and caressed her lips as they opened to receive my tongue and for both of our tongues to intertwine and dance through our mouths.\n\nOur kiss grew more passionate with each passing second and shortly she was fumbling at my belt, frantically trying to get it open and get to my manhood. I broke our kiss and grasped her hands in mine and held then still. Then as I looked her in the eyes I asked her, \"Do you want to fuck or make love?\" She looked at me puzzled for a second then understanding dawned on her face.\n\n\"I want to make love.\" She answered.\n\nI smiled at her, \"Then slow down and enjoy what I do to you, because I will do everything I can to make certain that your first time is memorable and pleasant.\" As I finished I leaned forward and kissed her again, gently and I let my tongue slide into her mouth. I felt her relax and I released her hands. She placed her hands on my sides and ran them up and down me as I continued my slow tongue dance with her and worked at the buttons on her blouse, one by one opening them to expose the creamy white skin beneath. Finally I had opened the last of them and pushed her top aside and off of her shoulders, exposing her bare breasts to my touch. I moved my kiss from her lips around her cheek to her ear gently sucking her earlobe into my mouth and running my tongue beneath her ear and down her neck, kissing her gently as my hands encased her breasts and my thumbs, in unison, massaged her nipples and flicked across the buds that were standing at hard attention there. She moaned in response and I moved my right hand down to the waistband of her shorts and undid the button holding them closed followed by the zipper. The shorts dropped to the floor leaving her standing before me in just a pair of briefs.\n\nI continued to explore her body with my hands and my mouth. Gently kissing her shoulders and neck and moving down to kiss my way across her breasts, lingering on her nipples to suck each one into my mouth and nibble on it. I avoided touching her sex for now contenting myself with running my hands over her perfectly rounded ass and to the base of it, onto her thighs. She was wet, so wet her panties had soaked thru and the moisture had begun to wick up them and the smell of sex permeated the room. Her musk filled my nostrils and worked at my own primal urges. I fought them down and continued to concentrate on my goal.\n\nI backed her up to the bed and laid her down following her and lowering myself, placing my face in her chest. I leaned up and kissed the hollow of her throat and worked myself down to kiss the top of her cleavage and around her breasts. She whimpered as I drew each nipple into my mouth and allowed my tongue to slide over them as my hand worked her briefs off of her bottom and down her legs exposing her shaved pussy to me. Her panties were around her knees and she worked her legs to free them from the entanglement. As they broke free and her legs were no longer held together she spread them wide on the king sized bed inviting me into her most private area. \n\nI noticed her invitation and laid a hand on her mound, letting my hand slide over it and a finger gently and tentatively explore her slit, finding it hot and very wet. I massaged her mound and teased her slit for a few minutes while I licked and sucked her nipples. When I sensed she was approaching the pinnacle of frustration I slid my finger down her slit and let it slide into her entrance, once there I worked it back and forth feeling her warm wetness lubricate its passage. I began moving my kisses lower down across her belly until I reached the top of her mound and lingering there.\n\nSuddenly her head came up and she looked at me with big round eyes. \"What are you going to do? Are you going to ... to... to lick me there?\"\n\nI smiled up at her. \"I had planned on it and hoped so. Would you prefer I didn't?\"\n\n\"I don't know? No one ever has. My sister told me it was wonderful but, it seems icky.\"\n\n\"Well it's not icky. It's one of my favorite things about making love, eating pussy. I really want to.\" As I spoke to her I withdrew my finger from her pussy and reentered her with two fingers sliding them in and out rapidly. She groaned and dropped back on the bed.\n\n\"Go ahead do whatever you want. As long as it feels this good you can do anything.\" She breathed\n\nI smiled as I kissed my way to her slit, letting my tongue slide out and separate her lips. Her clit was already peeking out from its hood and I felt its hard nub beneath my tongue as I slid over it. She gasped and jerked her body in response. \n\nI licked my way thru her pussy, up and down occasionally letting my tongue contact her clit and finally resting at the entrance to her pussy, lingering there licking gently around the entrance, then suddenly driving forward deep into her love tunnel. I forced my tongue inside her as deep as I could go and licked around, scooping up all the juices I could as she withered around above me. I had been ready for her reaction. Before I drove my tongue into her I had positioned her legs over my shoulders and my arms around each leg, locking them in place and allowing me to use my fingers to stimulate her, stroking her labia. The flow of juice from her increased and I alternated between deep diving and sucking on her clit until I felt her legs begin to tremble and her breathing was ragged. That was when I locked onto her clit and sucked it between my lips and allowed my teeth to scrape over it, that sent her over the edge into orgasm and as she spasmed and her pussy released a flood of sweet nectar I dropped my open mouth down to catch the flood. But I did not let her rest I immediately returned to eating her and within another minute she was shaking in orgasm again and pleading with me to stop. I ignored her pleas and enjoyed the flood of teenaged pussy juice flowing freely. \n\nAfter her fourth orgasm I let her legs slide from my shoulder and planted a gentle kiss on her pussy before sliding myself up to lay next to her. She was breathing heavily recovering, and I leaned over and set a gentle kiss on her lips. As I pulled my head back she grasped the back of my head in a death grip and pulled me to her locking me into a frantic open mouthed kiss, trying to suck my face into hers. She kissed me and licked my face, licking her own juices off of me. Pulling back she said \"You can eat me anytime but you have to promise to let me lick my juice off your face when you're done. It is so hot knowing where your face was and that I am tasting myself. Now when are you going to fuck me? Please I want you to take my cherry.'\n \"Don't worry I will. You just lay there and recover a few minutes, while I enjoy touching your body.\" As I answered her I slid an arm underneath her and drew her close in an embrace. While I held her with one arm I stroked her body with my free hand. Exploring and enjoying the softness and the smoothness of her skin, occasionally kissing her and allowing her to come down from her sexual euphoria and experiencing the warmth and closeness of the afterglow.\n\nOnce her breathing had returned to normal I allowed my stroking to reach her sex again and I began to stimulate her. She was purring in my ear as I slid a finger inside her and let it slowly work its way around. Then I asked her \"So are you having a good time?\"\n\nShe answered slowly \"Ummm. The best, that was wonderful. I have never cum so much in my life even when I played with myself.\"\n\nI smiled at her admission \"Well maybe we should work on getting my pants and shirt off so I can finish what I started that is assuming you still want me to.\"\n\nShe answered me with a kiss and her hands began to work at getting my belt off and pants open. She was less fumble fingered this time as some of the urgency had left her. Soon she had me open and exposed and slid my pants down then my shirt came off and I was as naked as she was. \n\nShe grasped my cock and started jacking me almost as soon as my shirt hit the floor and as I enjoyed her touch she slid down the bed and took me in her mouth and began lightly sucking on me. \"Careful,\" I admonished her, \"if you get me too worked up doing that you will have to wait for what you want.\"\n\nShe let my dick slide out of her mouth \"I just liked doing it so much this morning. But don't worry just a little.\" Then she went back to giving me head. She worked my cock in her mouth for a few minutes and I knew if she kept going I was going to blast into her mouth and that would be the end of my taking her cherry for tonight. So I took her head in my hands ad drew her up to kiss me. Kiss me she did, long and deep. She seemed as though she were trying to crawl down my throat and on a hunch I moved my hand down between her legs and found she was so wet, wetter than she had been before I started eating her. \"She gets off giving head\" I thought to myself \"That's good to remember.\" But now since she was so wet and I was sooo ready I rolled her over onto her back and slid between her legs.",
        "She laid before me legs spread wide and I on my knees with my cock lying on the top of her pussy. I slid it back and forth in her slit a few times and her eyes closed as a smile crossed her face. \"Are you ready for this?\" I asked. She simply smiled bigger and nodded so I slid the head of my cock down to her entrance and let it separate her lips as I worked it around her, not quite inside but just about. She moaned a bit as I lubricated us both and then I slid in just a bit, just enough so that my head disappeared inside her and her eyes flew open and her mouth formed the little \"O\" and I stopped and gave her tiny thrusts back and forth before I fed another inch into her pussy, then another inch and I felt the resistance of her hymen. She was so wet I was having no trouble getting in but I could feel how tight she was. Her pussy was wrapped around my cock with a firm grip as if to say \"I am not letting go of this\" I drew back until I was nearly out of her and slowly pushed forward until I felt it again then I repeated the movement several times. Finally she looked at me and in a breathy voice all she said was \"Deeper, more.\" \n\nI smiled at her and said \"Last chance Kahlea if I go any further I will take something you can only give once and it will hurt a little.\"\n\nShe looked at me and her beautiful green eyes softened and I could see the tears filling them up and I was scared. \"I know it will hurt a little, I expect it. But you are the one I want to give this to. More than I want you to take it I want to make it a gift to a man I love.\" Her words stunned me and as I knelt there in shock at her pronouncement she slammed herself onto me pulling my hips into her with her hands and jamming her pussy onto my rod and I felt her tear and she let out a low throated scream and laid still.\n\nI was at first afraid I had hurt her more than I should have. But then she opened her eyes and she stared into mine. \"It's yours. It feels wonderful to have you all the way inside. I am so glad I waited for you.\" and she pulled me to her and began to work her hips against mine. The sensations that created banished thoughts of what she had said to the back of my mind and the old primal urges slammed to the front and I began to pump on her. I was sliding my cock in and out of her tight teenaged pussy. It was glorious. The feel of her pussy muscles gripping and milking my cock as I moved inside her. Sliding through her silky wetness. Then I remembered how I wanted to do her and I slowed down, a change of rhythm, slower for a little then suddenly hard, slamming into her then slower again. \n\nShe squealed as I slammed her and ohhed as I slowed down then gave contented grunts when I assumed a rhythm. I leaned forward and managed to get a tit in my mouth and chewed gently, on her nipple while I fucked her and kissed he lips lovingly before ramming her again. Then slowing and stopping and just letting my cock rest inside of her until she began to hump on me. For a few strokes I even came all the way out and then in again. Then after a while I settled into a steady rhythm laying close to her and holding her while I did her. That was when I felt her tighten on my cock and grip it then the flood of juice as she came with a sharp intake of breath and a deep sigh. I did not let her rest but continued to pump on her in that steady rhythm and soon she came again and I knew I had found the way she wanted it. Soon after that I felt the unstoppable rising in my balls and the freight train rush through my cock as I slammed into her and held it there while ropes of cum spurted from the head of my cock and slammed against the walls of her pussy and against her cervix. \n\nShe opened her eyes and stared at me as my cum drenched her insides and puddle in her womb. \"Feel that?\" I asked. She nodded in response to my question. \"That's my sperm looking for your eggs, trying to make a baby for us.\" She opened her eyes wider and groaned as the idea of a child excited her and she came again. I rolled off of her and laid beside her pulling her to me and kissing her forehead, then her eyes, then her lips and holding her close. It felt so good to hold a woman again and she put her arms around me and stroked my back and kissed my neck as I held her.\n\n\"I've been told the first time is not so great.\" She said. \"If that's true then I can't wait for the second because I thought I died and went to heaven.\"\n\n\"I'm glad you liked it, and thank you for the gift. It was very special to me and meant a lot.\" She looked at me puzzled and I smiled \"Your virginity, it meant a lot to be that you gave it to me.\"\n\nNow she grinned \"I can't imagine giving it to anyone else. By the way I meant what I said.\"\n\n\"I know you did\" I answered and kissed her neck again. She sighed the contented sigh of good sex and cuddled closer to me as she slowly drifted off to sleep. I laid there holding her, her leg thrown up over mine and her pussy pressed against my thigh. I could feel our combined juices running out of her and onto my leg, it seemed to make me content and I followed her off to sleep. \n\nI woke a few hours later to feel her massaging my cock, trying to bring it back to life and as it grew so did my desire for her and I rolled her over and took her again. This time slow and steady the whole time and once she reached her peak and gushed her juices over me I laid back down to sleep again. I woke once more with dawn breaking over the mountains and snuggled up against her. She was awake and smiled at me, kissing me slowly and deeply then sliding down and taking me in her mouth. \"This is for being such a good lover.\" she said before she sucked my cock into her mouth.\n\nShe gave me a very fine blowjob that morning and in the middle of it I pulled her legs around and ate her pussy to climax before I spewed my load into her mouth. She swallowed all of it this time licking her lips and crawled back up to join me. She kissed me before dropping off to sleep and I could taste myself on her and I am sure she could taste her own juices on my lips.\n\nI woke again an hour or so later. She was curled up against my chest and it felt so comfortable and natural, but I woke her anyway. \"Come on sleepyhead. Time to get up and shower.\"\n\nShe opened her eyes and stretched, \"Are you going to wash my back again?\"\n\n\"I wouldn't miss it.\" I answered as I crawled out of our bed and swatted her ass to get her moving. We were in the shower for a long time. I did wash her back again and her front and then I fingered her to orgasm as she stood there leaning her back against my chest. I discovered that when she orgasamed standing up she squirted. A great gush of girl cum squirted out of her as I did her that morning. She tried to suck me off again but after the previous night and twice more afterward it was no use. I could keep an erection but just could not cum.\n\nWe dried off and dressed and went to breakfast. We held hand s as we went down in the elevator and walked to the restaurant. Then as we sat and ate I realized something, I was happy. I had not been happy in years. I smiled and was enjoying myself, the best part was I knew why. In the middle of eating I got up and walked around the table to Kahlea's chair and grasped her by the shoulders and stood her up then I kissed her a great big open mouthed kiss, in public and for no reason. As we broke it I realized that half the restaurant was watching us, but I just didn't care. I let her sit back down and she stared at me.\n\n\"Not that I'm complaining but what was that for?\" She asked\n\n\"That was for making me a very happy man.\" I answered she blushed and went back to her food. We returned to the room after we ate and prepared to go work the show again. I felt a need to touch her all the time, in the elevator walking along, in the room. Just touch, not sexual, just to be close. I knew I was doing it but wasn't sure why I had this need. It puzzled me.\n\nWe spent some time at the show. I had not planned on staying long today. The big formal dinner given by one of my suppliers was tonight and there were things I had to do to get ready. Top among them was to get Kahlea an appropriate dress. She had not come packing anything remotely formal so when we left the show at 1 PM and I pulled into one of the upscale malls that are located around the Strip she was puzzled. When we walked into a woman's boutique she was even more puzzled. Then when I choose a dress and told the salesgirl that I wanted it in Kahlea's size and shoes to match she was stunned.\n\nBack at the hotel I dropped her off at the hairdresser in the hotel and ordered the works choosing a style that would give her a little maturity to match the dress. By the time she was done and dressed she looked every bit of 22 and gorgeous. Still a lot younger than I had any right to be with but I just didn't care. We went to the dinner and I mixed and mingled as I should Kahlea stayed by my side the entire time, holding my arm or with my arm around her waist. I heard all the jealous women muttering about cradle robbing, trophy wives, young enough to be his daughter and all and ignored it. The only one that got my dander up was one woman who said to her friend that I must have hired a hooker to bring to the party. That one got a response as I turned to her and loudly enough for a good many people to hear answered her \"Just because you once worked the streets doesn't mean everyone else did.\" \n\nKahlea was hurt by the comment but picked her head up at my defense of her and smiled at the woman's protestations. I could not resist the final jab as we walked away, a quote from Shakespeare \"Me doth thinks she protests too much.\" It brought snickers and a few stifled laughs, but after that people were more careful what they said within earshot. Despite the insulting woman, we both had a good time and I choose to walk back to our hotel with a beautiful woman on my arm. I was on cloud nine and had not felt so good in years.\n\nWe returned to our room and Kahlea took off the dress I had bought her and hung it up in the adjoining room. She returned wearing an oversized T shirt. I looked at her and asked \"Kahlea, do you want to continue what we have here?\"\n\nShe looked at me with a little fear in her eyes \"Yes, I do.\"\n\nI smiled before responding \"So do I. But then why do you keep your clothes over there. Not to be cheap or anything but it seems kind of silly to be paying for a room just to store your clothes in. But if it makes you more comfortable that I don't mind.\"\n\n\"You never invited me to move my stuff in so I figured you wanted me to keep it there incase you got tired of me.\" She answered looking at the floor.\n\n\"Well consider yourself invited. First thing in the morning we move all your stuff over here and check you out of that room. I'll get another key from the desk for this one for you.\"\n\n\"Now that's the first problem solved. Second one is I noticed you have not called home since we've been here. Don't you think your parents would like to know you're safe?\"\n\n\"I doubt it.\" She answered with a venom that surprised me. \"When Daddy found out I was going to come out here alone he tried to stop me and when I insisted on coming he told me that if I was old enough to travel to Vegas by myself I could damn well find another place to live and support myself.\"\n\nI had had no idea that this was a problem but could imagine it. I did know her father was a bit of a loud mouth and pretty opinionated. \"Call anyway, no matter how mad he was he's still your father and he still loves you and worries about you. At least try, but it will have to wait till morning because it's already 1 AM there.\"\n\n\"Ok\" she agreed \"if you think I should I will at least maybe Jen will talk to me.\"\n\n\"Good now come to bed and hug me. I need to feel you close to me.\" She smiled and crawled under the sheets with me. \n\n\"I really like giving you hugs.\" she said \"and blowjobs.\" She added with a leer, as she grasped my cock in her hand.\n\n\"I laughed, \"Oh my god, she's become a sex fiend.\" I exclaimed in mock surprise.\n\nShe stared at me with a serious look on her face \"Only since you stuck that thing of yours in me and I found out what I've been missing.\" Then she smiled \"I am so glad you did too. It's the best thing in the world. I'm not just talking about the physical sensation either. That's great, but I get such and emotional high too, knowing what your doing and what we might be making if I weren't on the pill. The thought of your sperm swimming in me looking for an egg to make a baby with you. Well it gets me so high I can't describe it.\" She explained as she cuddled closer to me.\n\nI hugged her tighter. The thought of her walking around pregnant with my child suddenly seemed very appealing and even though I knew it would not be a good idea for a variety of reasons, I could not get the image out of my mind. I leaned down and kissed her, drawing her to me again. She was on top of me and to the side as I kissed her very deeply and slowly. I felt myself get dizzy and then I recovered. Soon I wanted more than a kiss and I let my hand wander down to her ass and I rubbed it as I kissed her and nibbled her ears and neck. Slowly I slid my hand father down until I was at the entrance to her pussy and I slid a finger in. She groaned and she was wet and hot. I pulled her body fully on top of me and using both hands slid her T shirt off. I could feel her breasts against my chest and her hard nipples pushing at my skin. \n\nWe kissed some more, breaking sometimes so I could suck a nipple into my mouth and all the time I was moving her around, little by little to position her where I wanted her. Soon her pussy was resting on top of my cock and I was slowly humping her letting my cock slide back and forth through her slit, teasing her. When she was ready I moved my hips down freeing my cock and then arranged myself to plunge into her. I slowly did plunge in. She was still to tight to jam it in all at once so I took my time sliding myself in. \n\nOnce I was fully inside I urged her to sit up and ride me. When she got all the way up her eyes went wide as I pushed myself up from the hips and entered her completely. She never realized how deep I could go into her. From this position I could get in father than I could when she was on her back. Soon her eyes adjusted to that sleepy \"I am getting fucked\" look and she started to slide up and down on me. While it felt so good I did stop her and showed her how to rotate her hips and slide back and forth, which caused her clit to stimulate against my pubic bone and hair. Her eyes closed fully when she tried this and I thought she was going to pass out. She didn't she just kept riding me until she came with a gush that sent her juices running down over my balls and onto the bed. That gush was followed by a shudder throughout her body. She stopped and stayed still on me then opened her eyes \"What you do to me, I can't begin to describe it.\" and she closed her eyes and started to ride me again. Her body was wracked by two more orgasms in rapid succession. After the second one I pulled her down to hold her close.\n\n\"You like that position, don't you?\" I asked\n\n\"Oh, yeah.\" Was all she answered.\n\n\"Want to try another one?\" I asked\n\n\"Will it be as good as this one was?\" She asked\n\n\"I don't know, but we'll never know if we don't try.\"\n\n\"Ok, what do I do.\"\n\n\"Get up on you hands and knees.\"\n\n\"Oh, doggy style I heard about this.\" She said as she slid off me and took the position. I kneeled behind her, looking down at her open pussy and puckered rosebud. I grasped my cock and rubbed it over her pussy to tease her and then slid it up over her asshole, then back to her pussy. I repeated this a few times and she was starting to hump back against me. The last time I slid over her ass I paused at her rosebud. I was tempted to slide it up her ass but decided against it as too much of a surprise. We would have to work up to that. So I slid back to her pussy and let myself go inside.\n\nShe was stretched out a little by now and she was loose around me so I started to pound on her. I could feel myself hitting bottom and her grunts every time I did. \"How about this? Do you like it like this?\" I asked her.\n\n\"I like it anyway you give it to me. I thought you were going to do my ass for a while there.\"\n\n\"I thought about it but figured I ask first.\"\n\n\"You can fuck me anywhere you want. I love your cock in me. Maybe later you can do my ass, if you want. If it makes you happy I want it.\"\n\nI felt myself getting close. He talk about ass fucking and doing whatever I wanted got me super excited and the cum started to rush down my cock and explode inside her. As she felt the explosion and my cum slam against her, the hot juices pooling inside her she came in a loud scream and gush of juice that soaked my cock and balls and dripped off onto the covers of the bed. I collapsed on top of her and she fell spread eagle on the bed. We lay like that for a while. My dick was still hard inside her and I would occasionally move a bit for her. Every time I did she would whimper a bit. After a while I decided I was crushing her and slid off to the side. I enfolded her in an embrace and hugged her close to me.\n\n\"Thank You, that was wonderful, again\" she said as she smiled at me over her shoulder. We pulled the covers over us and fell asleep with her spooning against me. I slept well that night. Comfortable, safe, sated and loved.\n\nI woke early the next morning, before sunrise. I lay in bed with Kahlea curled in my arms and my mind raced. I needed to work some things out in my head. Too much was happening too fast. So I quietly slipped out of bed without waking Kahlea and dressed. I went down stairs and got a coffee from the Starbucks stand. I was the first customer at 5AM and I walked outside and down the strip. Vegas may never close but it gets awfully quiet outside at that time of day or night whatever you want to call it. I walked a few blocks then turned onto a side street and walked that way until I reached another major intersection then I turned again and headed back for the hotel. The coffee and fresh air and mostly the time alone to think had helped me clear my head and make some decisions. \n\nBy this time it was a bit after 9AM at home and 6 AM here I had some calls to make. I ordered another coffee and found a quiet place to sit. That is not an easy feat in a Vegas casino, but I found one anyway. First I called my attorney, I caught him coming in the door and I told him to prepare the paperwork for a divorce, don't file or serve it but get it ready. I was tired of being miserable and life was slipping by. Next I called the management company that handled the apartment buildings I had bought a few years earlier and asked the agent which apartments were empty. She listed them and I was in luck a few years earlier I had hired a guy to watch over things and he had insisted that because he had 4 kids part of the deal was two apartments joined with a connecting doorway. He quit a few months later and I was stuck trying to rent a double apartment and as usual it was empty. I told the agent to have their handyman put doors on the opening, get them cleaned, new carpet and appliances and hold those units for me.\n\nNext I called my secretary, I told her to take my American Express and go furniture shopping. I told her to get basic furniture picked out and ready for delivery on Monday to the apartments I had set aside, \"I want a king sized bed, Dresser, nightstand, couch, chair, recliner, and a dinette set. Talk to the rental agent about getting it in. Also I'm coming back Monday evening but don't look for me in the office till Wednesday or later. Call me if you need me.\" She wanted to know what was going on. I just told her I'd tell her when I was ready. She went over some items from the office. It seems my traitorous ex-employee took two people with him. They left no notice just never showed up. Neither of them was a great loss, so it was more an annoyance than anything. I told her get an ad place and set up interviews for the following Friday. Other than that things were running fine. There were some papers for me to review and sign that were moderately urgent. I told her to fax them to the Hotel and I would get them back to her.",
        "It was now 7:30 in the morning. I grabbed two more cups of coffee and a couple of Danish and went back up to the room. Kahlea was still sleeping so I woke her up. She took the coffee gratefully and was disappointed that I was dressed already. \"I was hoping for a little more sex this morning.\" She pouted.\n\nI laughed, \"Don't worry clothes aren't permanent they come off besides I need to get a shower, I'll let you wash my back if your good.\"\n\n\"I'm always good,\" She answered pouting then turned it to a smile, \"and when I'm bad, I'm really good.\"\n\nWell I couldn't argue with that so I just smiled and said \"I know it's early and you may not be fully awake but I want to have a serious talk.\"\n\n\"Ok.\" She said but I could see the apprehension in her face.\n\n\"First. I want to thank you. The last couple of days I have been very happy. You have reminded me that I could be and I made some decisions because of it. Now I need you to think before you answer me on the next things.\" I paused and she looked at me with a serious expression. Then I continued. \"Do you want to continue this relationship after we leave here?\" \n\nThere was no hesitation from her at all \"Yes, I do. As long as we can find a way I would very much like to keep seeing you. I don't care if you're married or what other people will think.\"\n\n\"What about your family.\" I asked.\n\nShe paused. \"I haven't called home yet. But if I know my father he won't let me back anyway. He's stubborn and he's been after me to start my life anyway. Since I decided not to go to college he thinks I should get a full time job and move out or get married. This trip was like the straw that broke the camels back for him.\"\n\n\"Well call him anyway and if nothing else just tell him you're alright.\" I said. \"Now I have something I want you to think about. What I am about to tell you is sort of a secret so you have to keep quiet about it.\"\n\nShe looked at me puzzled but agreed. \"A few years ago I bought a couple of apartment buildings down where I work. I have them in the name of a company I own that nobody knows about, especially my wife. I have a management company running them for me and I pay them a lot of money to do that. Right now there are two empty apartments, side by side with a connecting door like these hotel rooms. I am going to file for divorce and move into one of them. I am going to hire an apartment manager and get rid of the management company or at least cut down their duties and save some money.\" I paused again and noticed she was looking at me probably wondering where I was going with all this. \n\n\"I am going to offer the apartment manager a part time job. Collect rents and keep an eye on things in return for a free apartment. I can't do it myself or my wife may figure out that I own the place. So what do you think do you want the job? Free apartment utilities included.\"\n\nShe stared at me, completely stunned. \"But it's so far away from my job, and I don't have furniture or anything?\"\n\n\"Okay so it'll be a furnished apartment and I'll get you some pots pans and dishes as a housewarming present. I also know of a company that has a few positions open and I happen to know the general manager.\"\n\nHer eyes got big \"You mean I would be working for you? But what happens when you get tired of me.\" She started to pout.\n\n\"Even if by some miracle that happens, then I'm not going to throw you out and fire you. That is unless you're cheating on me. All I'm doing here is offering to help you get started out in life. You would be in the apartment next to me and with connecting doors we would probably only really be using one of them except when people visit. Until the divorce is final we need to keep it low key, and the only other problem is at work. You'll be working for someone who works for me and we can't let anyone know we are anything but co-workers.\" I paused again and looked down then back into her eyes.\n\n\"Kahlea, I don't want to get your hopes up or promise anything, but you make me very happy and I don't know if I'm ready for a committed long term relationship with a girl 30 years younger than I am but I am willing to try. We can see what happens and where it goes. For right now I will say that I can see it would be easy to fall for you and if nothing else we get along well. If after a while you decide I'm to old for you and you want a younger guy that's Ok we just stay friends and go our separate ways and if I find that I can't keep up with a young girl and want to meet an old lady like me than the same holds true. This is a big risk for both of us. But you more than I because in 20 years you'll still be young at 38, still able to have children and I'll be 70, maybe in a home, incapacitated maybe not. Besides that there are things I lived through that you think of as history and believe it or not that makes a difference in how we both look at the world. So don't answer me now. Think about it till tonight or tomorrow. Now come wash my back for me.\"\n\nWe went into the shower and like the two previous days washed each other and dried each other then moved back to the bed and made slow tender love. I spent a great deal of time eating her young tasty pussy and she took me inside her and I pumped on her pussy till she came again before I allowed myself to spray my seed into her womb again. We spent most of the morning in bed finally getting dressed for a lazy lunch. The afternoon was spent sightseeing. I took her for a long drive into the desert and to Hoover Dam. I pulled off on a dirt side road and showed her some of the desert life before I took her clothes off and made love to her again out in the open. She was shy at first about being naked outdoors like that but soon decided she like the free feeling it gave her and I had to coax her back into her clothes for the drive back to the hotel.\n\nI made us dinner reservations at a well known restaurant and in the middle of dinner she looked at me and said \"Yes, I want to try. I know there will be problems and I think we can work them out. For instance, right now I don't want children, but I know that will probably change in the future and I know you may not want to have them because you already have raised yours but we will cross that bridge when we come to it. Right now I am happy being with you and I believe I am in love with you so we will try.\"\n\nI smiled at her and just said \"Thank you\" and continued my meal. Inside I was doing handstands because one of the things I had decided this morning was that I had fallen in love with this little girl who was the same age as my daughter. I knew what it felt like because I had been there before and I knew I had it again.\n\nWe spent the rest of the trip almost as a honeymoon, and when we got back we went to work on the details. My wife was happy for the divorce. We fought over some things but she walked away with less than she wanted but more than she expected. My kids were relieved I found out and later when they found about Kahlea and I were at first upset then grossed out then after Kahlea told them how she had seduced me and how happy I made her they accepted it now they come and visit her more than me. Kahlea worked for me for about a year them we got her a job elsewhere, partly so she could move up and partly so we could \"come out of the closet\". \n\nShe was right I didn't really want children again at first but changed my mind later, before she was even ready. Now 5 years later we are married and have 2 boys. I still love her as much as ever and she still looks at me with a glow on her face and that little something in her eye. We never have had a fight and damn few disagreements. I still worry about getting old and dying on her while she is still young. But there is little I can do about it except what the doctors tell me to, that and give her all the good times I can while I can. "
    ],
    "authorname": "builder216",
    "tags": [],
    "category": "Mature",
    "url": "https://www.literotica.com/s/kahlea"
}