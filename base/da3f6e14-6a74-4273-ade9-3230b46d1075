{
    "title": "Cousin Pt. 04",
    "pages": [
        "Chapter 20\n\nLisa followed Dan's car until they finally reached town. Dan pulled into the parking lot of a small restaurant and Lisa pulled up and parked beside him. Dan got out of his car and came around to Lisa's door as she was getting out herself. \"Let's grab something to eat here and make some plans,\" he said.\n\n\"All right,\" Lisa agreed. \"I don't even have your address or phone number yet.\" Then she put on an overly dramatic pout and added, \"Say. You do have a last name, don't you fellow?\"\n\nDan laughed and replied in kind, \"Sure. But I only tell that to girls I've gotten to know. Do you think sleeping with you for a month is enough to qualify?\"\n\n\"Yeah, I guess you're right,\" Lisa said. \"We should maybe wait and see how we get along before we get too friendly.\" This caused both of them to break up laughing and they headed inside with their arms around each other.\n\nOnce they were seated and had ordered, the couple turned a little more serious. Dan said, \"Lisa, I really do want to keep seeing you. And wonderful as it is, sex isn't the only reason.\"\n\nLisa reached across the table and took his hand. \"Me too. And for more than just the sex. But let's not forget about the sex altogether.\"\n\n\"Not likely,\" Dan laughed. \"Here.\" He got a couple of pieces of paper from his shirt pocket, handed one to Lisa, and started to write on the other. \"I'll give you my address and number and you do the same for me. Say, I haven't even asked where you're living this year. Will you still have a roommate now that Diana has gone back out West?\"\n\nLisa picked up a pen and started to write on her own sheet of paper. \"No, I've got a small apartment all to myself this year. Just one bedroom and pretty small, but all mine. What about you?\"\n\n\"I'm sharing a place with another guy, but he goes home almost every other weekend. And I do have a room to myself. Look, it'll probably take a week or so for us to settle in.\" Lisa nodded. \"How about if I come down the Friday after Labor Day?\"\n\n\"That's two weeks. Seems a long time to wait, but I guess we really will be pretty busy the first couple of weeks. Look, Dan, I know we agreed this is just fun games and that we'd wait to see if anything more developed. I'm not trying to tie you down and if you want to date other girls, I certainly don't mean to stop you.\"\n\nDan held up his hand to stop her. \"Lisa, right now I don't have the slightest interest in seeing anyone else. Do you?\"\n\nLisa froze and her heart skipped a beat. She looked directly into Dan's eyes and slowly shook her head. \"No. I don't. Right now there is only one male interest in my life.\" She hesitated a second and then added, \"And I'm beginning to think there may never be any other.\"\n\nDan laid his hand over hers and squeezed. Without moving his eyes from hers he said, \"Lisa, I wish I had really noticed you years ago. But now I have and I don't intend to stop. We agreed to wait and see what developed, but I think something has already started. I won't say the magic three words yet because I've always promised myself that I would only say them to one girl and I have to be completely sure before I do. I'm not quite there yet, but I've surprised myself at how close I am. I've been really hoping you feel the same way.\"\n\n\"Seven years ago, Dan, it was a real crush I had on you. Four weeks ago when I pulled up and saw you that crush intensified and became pure lust. Now I think it's something a lot more. But, OK, let's give it a little while to be sure.\"\n\nThey continued to hold hands and stare into each other's eyes until the waitress arrived with their meal. In fact the spell wasn't broken until she actually set the first plate down on the table. Then, somewhat embarrassed, the couple pulled apart and turned their attention to their food. The waitress, a pretty high school senior, finished placing their food and as she turned to leave, smiled to herself, dreaming that someday some man would look at her like that.\n\nThe mood broken, Dan and Lisa finished their meal with lighter conversation. The feelings were there below the surface but were so new that both of the young people were somewhat afraid to examine them closely. After they had paid the check and returned to their cars, they stood facing each other. \"I'll be turning off on Route six in a few miles,\" Lisa said. \"I'll probably get the phone installed by Tuesday, and I'll call you as soon as I can with my number.\"\n\n\"All right,\" Dan agreed. \"My roommate already has ours in, so you can call at the number I gave you.\" He put his hands on her shoulders and said, \"I'm going to miss you, Lisa.\"\n\n\"You'd better or I'll really whip your ass when I do see you,\" Lisa said.\n\n\"Won't you do that even if I do miss you? I know I plan to do it to yours.\"\n\n\"Well,\" Lisa smiled, \"yes, but if you miss me I'll probably let you whip mine first.\"\n\nDan pulled her to him and the couple kissed long and hard, oblivious to the smiling looks of other patrons leaving the restaurant. When they finally broke apart, neither said anything, but got into their own cars and left.\n\nThe first two weeks of school were indeed as busy as they had guessed. There was registration, books to buy, utilities to arrange for apartments, and a million other details. Not to mention homework when classes started. Neither Physics nor Computer Science was the type of major where you could ignore the material until the test. Both Dan and Lisa had to spend time studying every night right from the first class. But they still found time for phone calls. Dan decided he had better look closely at his budget because, in addition to gas and car expenses, the phone bill was probably going to become a major item this semester.\n\nLabor Day weekend came and Dan spent most of it trying to get a head start on the next week's material: he wasn't expecting to have a lot of study time the next weekend. Lisa spent time studying also, but made a couple of shopping trips for items she hadn't really considered necessary before. Items such as candles and some romantic music.\n\nThe next week seemed to drag for both of them. When Dan left his last class about two on Friday afternoon he didn't even go back to his apartment, but immediately pointed his car towards Lisa's school and set out on the two hour drive. He only stopped once to pick up a single rose and was at Lisa's door by four o'clock. Lisa was waiting. The moment she opened the door, she pulled Dan inside. She gave the door a push and even before it closed had her mouth locked to his and was unbuttoning his shirt. Later Dan was sure they must have set a record at undressing and hadn't moved more than four feet from the door before they were pounding away at each other.\n\nAfterwards, when they finally began to calm down, Lisa said, \"You really did miss me, didn't you?\"\n\n\"Nah,\" Dan said, \"I was just horny for any piece of ass I could find.\"\n\nLisa slapped his ass and retorted, \"In that case, Mister, maybe you should go find one somewhere else.\" But her caress to his face gave the lie to any real irritation at his teasing.\n\nDan spoke softly, \"You have no idea how much I've missed you, Lisa. I don't want to waste a minute of this weekend.\"\n\n\"Don't worry,\" Lisa replied. \"I've stocked up and if you want we can stay here all weekend. I've even got the shades closed so we won't have to get dressed. That way we won't waste any time undressing.\"\n\nDan laughed. \"That sounds like a plan I would have thought up. Lisa you are definitely the sexiest woman anywhere.\"\n\n\"I don't know about that,\" Lisa said. \"But I don't intend to give you any time to find another one to compare me with.\"\n\nThe couple moved to the couch and spent the next three hours necking and petting and by seven thirty had made love twice more. Finally Lisa said, \"We'd better stop for a little while so we don't wear out completely before Sunday afternoon. Besides I have dinner in the oven and if we leave it much longer it'll be overdone and there won't be anything to eat around here.\"\n\n\"Oh, I can think of something,\" Dan quipped.\n\n\"I didn't mean for dessert, Silly,\" Lisa said. Come on, the table's set and there's salad in the refrigerator. I'll get the lasagna.' She took the dish from the oven where it had been keeping warm and brought it to the table while Dan retrieved two bowls of salad from the refrigerator. Lisa lit the candles, started music, and turned off the lights.\n\n\"I'll admit I've never had a woman cook such a romantic dinner and then eat it with me in the nude,\" Dan said. \"But from now on I will highly recommend the experience.\"\n\nLisa sat next to him and giggled. \"It is different, isn't it?\" Then running her hand up the inside of his leg she added, \"But it will save time when we get to dessert.\"\n\nDan and Lisa spent the entire weekend in her apartment, never even opening the door. Most of it was spent playing sex games. They quickly lost count of how many times they made love, but in addition they played a lot of BDSM games. Because Lisa's apartment was not isolated, but touched others, they had to hold the noise down. But, Lisa explained, this didn't mean they couldn't play. She handed Dan a leather strap and some soft velvet ropes and then stretched herself face down on the bed. Dan grinned and stretched her tightly as he tied her wrists and ankles to the bed corners. A pillow doubled and placed beneath her hips raised her ass invitingly. The first few strokes of the strap were not hard and served only to excite Lisa. When he finally did land a hard swat, Lisa cried out. Then she said, \"This won't do. I don't want anyone hearing me.\" Then, thinking a second, she added, \"Dan, get a scarf out of the top right dresser drawer.\"\n\nDan dug into the drawer and found a large, light green, silk-like scarf. He brought it over to the bed. \"Now stuff it into my mouth and gag me,\" Lisa said.\n\n\"Are you sure?\" Dan asked.\n\n\"Well, I want you to whip me and I can't have the neighbors hearing. We don't need the police breaking in, do we? Anyway, this will let me yell without making any real noise.\"\n\n\"All right,\" Dan agreed. \"But you can't use your safeword with that in your mouth. Here.\" He dug into the pocket of his pants where they were lying on the floor and came back with a quarter which he placed in her hand. \"If you drop this I'll stop just like you had said the safeword.\"\n\n\"I trust you,\" Lisa said. \"I don't think it's really necessary, but, OK, I'll use the coin if I need it. Now gag me and get back to what you were doing.\"\n\nDan bunched the scarf and stuffed it into her mouth, making sure she could breathe easily. He went back to the drawer and found another scarf which he used to tie around her head, holding the first scarf in place. When he was finished he asked Lisa if she was OK, and, receiving a nod, raised the strap and once again brought it down on her bare ass. Soon the blows were hard enough to bring a cry with each, but the gag limited the noise and Dan was sure nothing would be heard outside the apartment.  When Dan decided Lisa had had enough, he dropped the strap and climbed on the bed, straddling her hips. His hard cock slid inside her sopping vagina with no resistance. Dan left the gag in place and as they reached their climax, Lisa screamed but the gag limited this also. Dan had to bury his mouth against Lisa's neck to stifle his own cries.\n\nWhen Dan had released her, Lisa said, \"I know some girls get hot if they're gagged during sex, but I won't say it turned me on. But it wasn't really too bad. It would be nice to be far enough away from people that we didn't have to worry about that, though.\"\n\n\"Yeah,\" Dan said. \"like we were up at the farm. Sometime we'll have a real place to ourselves. In the meantime, I guess we'd better buy a few scarfs.\"\n\nDan had brought his homemade cat with him and before the weekend was over both he and Lisa had felt it all over their bodies. It wasn't the dungeon, but the cat, the ropes, a few clothes pins and butterfly paper clips, and a few other items let them try a variety of different things. By Sunday afternoon both were sore but couldn't stop grinning at each other. As Dan finally got ready to leave, Lisa said, \"Next time I'll come to your place. When?\"\n\n\"How about tonight?\" Dan asked. \"No, seriously, I would love that, but we don't want to flunk out this semester. My roommate is going to be gone the weekend after next. Do you think you can wait until then?\"\n\n\"I guess I can wait,\" Lisa said. \"I won't like it, but I'll wait. And, like you said, we don't want to blow our grades.\"\n\nAfter a long embrace, Dan left and started the two hour drive back.\n\nTwo weeks and many phone calls later, Lisa's little red car pulled into the parking lot of Dan's apartment building. She pulled a small backpack from the right seat, locked the car, and headed into the building. Dan had seen her pull in and when she came into the third floor hall, he had the door open and was waiting for her. This time they were able to last until they reached the couch on the far side of the living room.\n\nThis was to become the pattern for the next month. Lisa and Dan alternated traveling to the other's apartment. Their desire was always so intense they never made it to the bedroom for the first encounter and usually spent the entire weekend naked in the apartment. Dan once remarked right after one of their immediate passionate bouts that he was beginning to understand the meaning of true lust. To this Lisa replied, \"Yes, I believe I am too. But I think we're just beginning. I want you more each time.\"\n\nOne October Sunday morning Lisa awoke in Dan's bed, her wrists and ankles still bound to the posts, to find Dan studying her. \"Hi,\" she said.\n\nDan didn't say anything. He just continued to look intently at her face for another couple of minutes. Then he lowered his head and gently kissed each nipple. He kissed her throat, her nose, each eyelid and her lips. Then he looked back into her eyes and said, \"Lisa, I love you.\"\n\nLisa found she was holding her breath and couldn't speak. He repeated it. Then it broke and she exclaimed, \"Oh, Dan, I love you, too. I love you and I think I always have. I know I always will.\" She was trying to reach up and pull him down to her, but the ropes prevented it. \"Untie these damn ropes and I'll show you how much.\"\n\nDan unfastened her ankles, but left her wrists tied. He lowered himself on top of her and, as his cock found its way inside, said, \"I think you can show me even if I don't untie you, don't you.\" Any reply was blocked as their mouths locked together.\n\nLater after Dan had released her they spent hours just lying together and talking. Before Lisa left that day they had said the magic words at least a hundred times and made love another three times. The next week both of them had their schoolwork suffer as they dreamed of the future.\n\nThey were on the phone every night. At one time Lisa said, \"We've got a fall festival coming up here next weekend. No classes Thursday or Friday. Any chance you could take off those two days? We could have a long weekend together.\"\n\n\"Think we could last four days without exhaustion?\" Dan teased. \"But I guess we managed last summer,\" he answered his own question. \"Let me check and I'll let you know tomorrow.\"\n\nDan looked over his class schedule. He had three exams the following week: one on Tuesday and two in his Wednesday classes. This was excellent! He'd have to study like heck anyway and his classes Thursday and Friday would probably be spent going over the exams.\n\nThe next night when they spoke Dan said, \"Looks like I can skip Thursday and Friday. But I've got an even better idea,\" Dan replied. \"How about a trip up into the mountains. There's this nice, isolated cabin a friend has said we can use. No electricity, no running water, but a nice stone fireplace and nothing but woods within a mile.\"\n\n\"Oh, that would be wonderful!\" Lisa said.\n\n\"It's about a three hour drive from here,\" Dan said. \"I'll get us some food. Anything special you'd like.\"\n\n\"You know exactly what I want,\" Lisa said. \"And you probably can guess what to get for food, too. Suppose I drive over there Wednesday night after class and then we can leave early Thursday morning. Your roommate won't mind if I spend the night, will he?\" \n\n\"No, he wouldn't mind. And anyway he's been spending most nights over at his girlfriend's place lately.\"\n\n\"OK,\" Lisa said. \"What should I bring with me?\"\n\n\"You're the only really important thing. You might want to bring a couple of towels and remember it can be pretty chilly up there this time of year. I'll bring some sheets and he said blankets and all the kitchen stuff are up there already. If you'd like to play games, bring any toys you want. I plan to.\"\n\n\"You know it,\" Lisa said. \"No one for a mile. We can skip the gags this time. OK, I should be there about eight on Wednesday night. Go ahead and eat supper and I'll get a hamburger on the way. I love you.\"\n\n\"I love you, too. See you Wednesday.\"\n\nFor the most part Dan buried himself in his books and when Tuesday and Wednesday finally came, he was pleasantly surprised at how well he knew the material. He left his last class at three and made a shopping trip to pick up their food. He also stopped at another shop to get an item he'd ordered earlier. As he looked at it he hoped Lisa would be happy with the surprise.\n\nWednesday had been cloudy all day and was still overcast when Lisa pulled up to the apartment about a quarter after eight. Again she locked her car and headed upstairs. As had become their usual custom, it was twenty minutes before the couple picked up their clothes and left the living room. \"We'd better get dressed,\" Dan said. \"Rick has an eight o'clock evening class, but he'll probably stop by here before going over to Judy's place.\"\n\n\"You mean he isn't gone and could have walked in on us?\" Lisa asked incredulously. \"What would he have thought?\"\n\n\"He would have definitely thought that you were the nicest piece of ass he'd seen in quite a while and probably wouldn't have wanted to go to Judy's tonight. But I was sure he was going to be in class, so we didn't have to worry. Actually he's very nice. You'll most likely get a chance to meet him tonight.\"\n\n\"That's fine,\" Lisa replied. As she was pulling on her jeans, she added, \"But I'm happy I won't have to be introduced naked.\"\n\nAs Dan had expected, about ten after nine, Rick came into the apartment. Dan was in the living room and Lisa was in the kitchen. \"Hey, Lisa,\" Dan called. \"Come on out and meet Rick.\"\n\nLisa appeared in the kitchen doorway and Rick couldn't help but stare. He let out a loud whistle and said, \"Hi, Lisa. If Dan ever mistreats you, come directly to me. I guarantee I'll take care of you.\"\n\nLisa laughed and Dan said, \"Rick, Lisa. Lisa, Rick.\"\n\n\"Nice to finally meet you,\" Lisa said. \"I'll keep your offer in mind if he ever is mean to me, but I don't think that's likely.\" As she said this she had walked over to Dan and put her arm around him.\n\nRick looked at the two of them and then said, \"I'm just here for a second to pick up some stuff, so you two can have the place to yourselves in a minute.\"\n\n\"Well, you've got it until Sunday if you want,\" Dan said. \"We'll probably get back some time in the late afternoon.\"\n\n\"Well, nice to have met you, Lisa,\" Rick said. \"Have a good weekend.\" He then disappeared into his bedroom and ten minutes later they heard the apartment door open and close as he left.\n\n\"Which car do you want to take?\" Lisa asked.\n\n\"We'd better take the Blazer,\" Dan replied. \"The road up there might be kind of rough for your little red job. Besides, the Blazer is easier to pack.\"\n\n\"All right,\" Lisa agreed. \"Want to pack stuff tonight? I left my junk out in the car anyway.\"\n\n\"Might as well,\" Dan said. \"Most everything is already in a couple of boxes. We can load everything but the last minute stuff - the cooler, my shaving kit and so on. Let's go ahead and then we can get an early start.\"",
        "The couple carried their food and equipment downstairs and Lisa retrieved her backpack and another small bag from her car and loaded it into the back of the Blazer. Dan looked up at the overcast sky and said, \"I hope it doesn't rain all weekend. Maybe it'll clear up.\"\n\nLisa nodded. \"Me, too. But if it does rain, I'm sure we can find something to do, don't you think?\"\n\nDan kissed her and said, \"I'm sure we can. But I'm looking forward to doing it outside too.\"\n\nThey went back upstairs and into the apartment. \"Speaking of things to do,\" Dan said, maybe we should go to bed and start doing them if we want to get some sleep before tomorrow.\"\n\n\"I thought you'd never ask,\" Lisa said, heading towards the bedroom and shedding her clothing on the way.\n\n     Cousin - Ch. 21\n\nDespite the fact that it was after midnight before they had finally settled down to sleep, both Dan and Lisa woke by six. But it was an hour later before they had finally gotten out of bed and had a quick shower. Lisa pulled the blinds back and looked out onto a perfectly clear, brilliantly blue fall morning with the sun shining brightly. The colored leaves seemed almost to glow in the clear air. \"Oh, it looks lovely! A perfect fall morning. Let's just find something for breakfast on the way and get going.\"\n\n\"That's fine with me,\" Dan said. \"The sooner we get going, the sooner we get there and the sooner I can get you out of those clothes again.\"\n\n\"Just see that you wait until we're alone, Lover. Come on,\" she added as she gathered her few last minute items together.\n\nBy seven thirty they were on their way, having stopped at a fast food place to pick up some breakfast. The day was crisp and cool, but gave promise of warming as they wound their way out of town on a two lane state highway. They made one more stop on the way for gas and ice but were soon alone on the mountain roads. They drove for an hour and a half on the state road and then turned off on a smaller one. Lisa had the map Dan's friend had given him and was able to navigate with little trouble. However, when they finally turned off the last gravel county road onto the unmarked dirt lane leading back to the cabin, both Dan and Lisa had to search hard for it. It was the only road around, but they were still unsure if it was the right one until they finally found a small wooden sign hidden behind the shrubs at the turnoff.\n\nThe lane wound another quarter mile through the dense autumn woods and suddenly broke into a small clearing where it ended beside a cabin. The building was done in the traditional log cabin style, but Dan was sure power tools had been used to put it together. It was rectangular, about sixteen by twenty-four, with a porch across one of the gable ends. Windows on each long side were tightly shuttered and the single door on the porch was padlocked. Dan produced a key and removed the lock. He opened the door and he and Lisa entered and looked around. There was only the one large room. There was a sink and counter on the left wall near the front with an iron wood stove beyond. A huge stone fireplace was centered on the wall with windows flanking each side of it. Opposite the fireplace, under a wide window, was a picnic style table and benches and a pair of large rustic chairs with strung leather seats. At the far end were a set of bunks; however, unlike most bunk beds, these appeared to be at least queen sized. A large cabinet was located at the end of the bunks. In the far left corner they noticed a small door and when they investigated, found a sort of bathroom. That is, there was a stand with a wash basin, a chemical toilet, and what looked like a tiled shower stall, except there was no running water. Dan said, \"James told me that when they built the place they planned to add a generator and an electric pump so they could fill a tank up near the ceiling. That way they could at least have showers. However, for now we'll have to heat water to wash. At least this way there's a drain we can dump it down.\"\n\nAs Dan unshuttered the windows, Lisa looked around the place. An oil lamp hung from the exposed ceiling joists and a couple of others were on the table and counter. Several candles were also spread around. A large stack of wood and kindling was ready next to the fireplace and a sheepskin rug was spread before it. Looking inside the counter cabinets and drawers she found kitchen equipment and a small propane stove. \"It's nice we won't have to completely rough it,\" she commented. \"I have cooked over a wood stove, but it's a lot easier with gas. Besides, it's faster and will leave more time for other things,\" she said as she wrapped her arms around Dan's neck.\n\nThey kissed for a couple of minutes and as they pulled apart, Dan said, \"Let's get the stuff inside and then maybe go for a walk. Perfect fall weather can't last forever and we should take advantage of it.\"\n\n\"Great!\" Lisa said. \"But I hope you have more in mind than just a walk.\"\n\n\"Oh, I expect we might find something to interest us along the way,\" Dan threw back.\n\nThey brought their stuff inside and decided to put together a quick lunch they could take with them. They loaded things into their day packs and then set out. The temperature had climbed to near seventy with only the slightest of breezes. The sky remained an intense blue with a few scattered white clouds. \"You couldn't paint a prettier picture of a fall day,\" Lisa said. \"Say, have you got any idea where we're going?\"\n\n\"Not really,\" Dan replied. \"There seems to be some kind of path here and I have a topo map. If we just keep track of where we go we shouldn't get lost.\"\n\n\"OK,\" Lisa said, \"let's explore.\" She put her arm around Dan and walked beside him until the path narrowed.\n\nThe trail continued, but began to look more like an animal trail until, after about a mile, it intersected another small path. Stopping to look at the map Dan concluded, \"Looks like this is a Forest Service trail. Nowhere near anything though. I guess it's just part of the fire trail system. But we can follow it to some others. Remember what this turn-off looks like.\"\n\n\"I've got a better idea,\" Lisa said. She dug into her pack and produced a piece of string and a bright blue cloth ditty bag. \"We'll just tie this to a branch and pick it up on the way back later. OK?\"\n\n\"That ought to work,\" Dan said. \"The forest trails should be marked and that blue sack will make this one easy to spot. I doubt that we'll have to worry about anyone stealing it.\"\n\nThe trail continued mostly uphill and they gradually began to see open areas through the foliage where the land dropped off. After another hour the path began to drop again. Through the trees they could see what looked like a mountain lake. \"Let's go down there for lunch,\" Lisa suggested.\n\n\"That sounds good,\" Dan agreed and the two left the trail to descend towards the water. When they got closer they were able to see that the lake had a small stream flowing in at one end and out over some small rapids at the other. They found a spot beneath some pine trees where the ground was covered with fallen needles. The dark green of the pines contrasted vividly with the reds and yellows of the maples and hickories, making them seem even more intense.\n\nDan and Lisa spread a light nylon ground cloth and pulled out their lunch. \"I love it out here,\" Lisa said. \"You can't hear anything but the breeze and I don't have to think about strings or loops or computer architecture or anything like that.\"\n\n\"It does beat concentrating on Heisenberg's Uncertainty Principle,\" Dan agreed. \"It is nice to forget school for awhile.\"\n\nAfter a minute or two Lisa asked, \"What are you thinking about?\"\n\n\"About how beautiful you look. About how much I love you. About how much I want to pull your clothes off and ravish your hot body.\"\n\nLisa put down her water bottle and leaned back on the nylon. \"Well, what's stopping you, Stud?\" she asked.\n\nDan grinned and bent over her to kiss her lips. \"Nothing,\" he said as he began to unbutton her shirt. Soon his tongue was working on her hard nipples and Lisa's breath was coming in short, quick gasps. She fumbled with his belt and quickly had her hands wrapped around his hardening cock. Dan lowered his face and trailed his tongue down her flat stomach, pausing for a second to unfasten her jeans and then going on to end up licking her wet slit.\n\nSoon both were completely naked and Dan was pounding into Lisa while she strained to meet each thrust. When it was over they lay entwined with Lisa's face pressed into the hollow of Dan's neck and his hand lightly stroking her bottom. But in a few minutes the breeze, which they had hardly noticed before, began to feel a little cool. \"Brrrr,\" Lisa said. \"It was a little warmer the last time we did this.\"\n\n\"Well, I suppose we could give it up until summer,\" Dan teased.\n\n\"Not likely,\" Lisa shot back. \"You've really given me a taste for it and I'm not going to stop now.\"\n\n\"Well, then, I suppose we could get dressed,\" Dan said.\n\n\"I've got a better idea,\" Lisa replied. \"Maybe this will warm things up.\" She lowered her mouth to his groin and began to lick and suck his soft member.\n\n\"Woman, you really are insatiable,\" Dan said. Then he quickly added, \"But I'm certainly not complaining,\" as he started to stroke her where ever he could reach. Within a couple of minutes Lisa was straddling his reclining form and bouncing up and down on his hard cock while he fondled her breasts and rose to meet her every thrust. This time after their cries of climax broke the quiet countryside, they slipped back into their clothes.\n\nThey continued on and explored some of the trails for several hours. Once more during the afternoon they found a quiet spot and took a break. They had been necking heavily for awhile, both of their shirts were off and Lisa's jeans were down to her knees when she suddenly said, \"Just a second, Dan.\" Puzzled, and a little irritated, he stopped while she reached into her pack. Then she pulled out some rope and said, \"Tie me up.\"\n\nDan relaxed and took the ropes from her. \"I think that might be a good idea,\" he said. \"In fact I'm sure you not only should be tied but you probably need to be punished for stopping like that.\"\n\nLisa's breathing picked up a little. She lowered her head and said, \"I'm sure I deserve it. Go ahead.\"\n\nDan tied her wrists together in front of her and then used the end of the rope to tie them over her head to a nearby tree. He looked around and found a branch, about five feet long, which he used like a spreader bar to hold her ankles wide apart. He took four more pieces of the quarter inch cotton rope and wrapped them around his hand, leaving thirty inch strands dangling. Then, using the rope like a whip, began to lash her ass. Lisa's skin gradually turned red and the strokes began to bring small cries. Dan switched to his leather belt and landed another half dozen strokes across her naked rear, each one causing a loud cry. He moved behind her, pressing her bare body against the rough tree bark and entered her pussy from behind. While he pounded her from behind he let his right hand reach around between Lisa and the tree and play with her clit. Soon Lisa was screaming into her climax followed immediately by Dan's own.\n\nWhen Dan released her and they were once more slipping into their clothes, Dan commented, \"You really like this BDSM stuff, don't you?\"\n\n\"Yes, I'll admit it.\" Then Lisa hesitated a second. \"You don't think I'm getting too deep into it, do you? I mean I don't want to get hung up on this stuff.\"\n\n\"No, I told you not to worry about that. As long as we keep it as just fun and games and can take it or leave it, there's no problem. If it ever got so you couldn't enjoy sex without getting spanked or whatever, then maybe it would be time to be concerned. But I think you still like straight sex, don't you?\"\n\n\"No,\" Lisa replied. \"Actually I don't just like it - I love it! I've always liked sex, but with you I find myself horny all the time and I love everything - straight, crooked, or otherwise.\"\n\nDan laughed. \"You have described my feelings perfectly. Lisa, you must know that we're both pretty highly sexed. I mean we make love at least four or five times a day when we're together. Sometimes a lot more. But we're not addicted. We manage to handle school and while I'll certainly admit that I'm often horny when you're not with me, I still can work on Physics. And I know you are doing fine with your classes. No, we're not addicted or anything, just very much in love, very horny, and very, very lucky.\"\n\n\"OK, I'll agree with all that,\" Lisa said. \"And you know what? We've been going like this for three months and I'm still just as hot for you as that first day at the farm. If anything, more so, because now I know I'm in love with you. But in addition to the love, there is still the lust. I love it when you whip my ass and I love doing the same to you. I guess I shouldn't worry so much about it and just enjoy everything.\"\n\n\"I'll go along with that,\" Dan said. Then he looked at his watch. \"But right now I think we had better head back to the cabin. If we wait too much longer, it's going to get dark before we make it back and I don't want to try an unfamiliar path in the dark.\" Lisa nodded and they picked up their stuff and headed back towards the trail.\n\nThe sun had set and dusk was rapidly falling by the time they came back into the clearing around the cabin. The temperature had also started to drop rapidly and both Dan and Lisa had put on their jackets. As Dan was unlocking the door, Lisa said, \"Let's get a fire going. I have the feeling it's going to cool off quite a bit more.\" Then she added with a sly look, \"And I don't want to have to keep on too many clothes, do you?\"\n\n\"One fire, coming right up,\" Dan immediately agreed.\n\nDan soon had a fire roaring in the fireplace and the chill was rapidly disappearing inside the cabin. Lisa said, \"How about beef stew? I know we brought a couple of steaks, but they'll keep until tomorrow.\"\n\n\"That sounds fine to me,\" Dan said. \"Need any help?\"\n\n\"How hard is it to empty a can into a pot and turn on the gas?\" Lisa said. \"But I guess you could slice some of that French bread.\"\n\nDan had lit the oil lamp hanging from the ceiling and now also lit a couple of candles. He then moved beside Lisa, kissed her neck, and got out the bread and some butter. They worked in silence, each moving beside the other, and soon had the food ready to set on the table. Suddenly Lisa said, \"You know, Dan, I like being with you.\"\n\nDan interrupted, \"I should hope so.\"\n\n\"No,\" Lisa went on. \"I mean I really like just being with you. It feels right to be making supper with you, to have you beside me. It's just comfortable. In fact, it always feels comfortable and nice with you. And I mean it doesn't matter if we're fixing supper, walking, just sitting, or fucking like mad. I like being with you.\"\n\nDan stopped and put his arms around her. \"I've felt the same way since you showed up at the farm last summer. I think that must be part of what being in love is all about. Now we'd better eat before the food gets cold or, more likely, before I start tearing your clothes off again.\"\n\n\"All right. As long as you promise to tear them off later,\" Lisa said.\n\nWhen they had finished and cleaned up the dishes, it was a little after eight. They used flashlights to refill the Jerry cans of water at the stream down the hill beside the cabin and to make a quick trip to the outhouse out back. When they came back inside, Dan barred the door and asked, \"What would you like to do now?\"\n\n\"That's a really dumb question. Sort like the one the cop asked Joan.\"\n\nDan looked a little confused. \"What do you mean?\"\n\n\"I guess I've never told you that story, have I?\" Lisa asked. \"Well, freshman year there was this girl on my floor in the dorm. She was, what in times past might have been called, a fast number. She was really nicely built and had about a forty inch chest and used to wear the tightest and shortest skirts I'd ever seen. Needless to say she had an active social life. She also didn't mind talking about it. Well, anyway, once she was telling several of us a story about when she was in high school. Seems she and this guy were out parking in some Lovers' Lane. He was down to his underwear and Joan was completely bare when this cop comes by and shines his flashlight into the car. The two started to untangle and the cop said, 'Well, well, what do we have here?' Joan didn't even make an attempt to get dressed or even cover herself, but looked right at the cop and said, 'What does it look like we have here?' The cop was so embarrassed he turned bright red and just mumbled that they should move on. I've always thought that was an example of a really dumb question.\"\n\nDan was laughing uncontrollably. Finally he was able to compose himself and said, \"Well, I guess it was kind of dumb. I expect I already know what you want to do now. Just maybe not exactly what.\"\n\n\"Well,\" Lisa relented, laughing herself, \"I wouldn't mind some more rough stuff. Like I said over the phone, we can forget about the gag up here, can't we?\"\n\n\"In that case, Wench,\" Dan said as he advanced towards her, \"let's get you into something a little less comfortable.\"\n\nIn a couple of minutes Dan had Lisa's hands stretched over her head with the rope tied to one of the ceiling joists. He used a broom handle to tie her legs apart, and of course she was completely naked. He spent ten minutes walking around her, licking, kissing and teasing her taut body, exciting her hard nipples and causing her pussy to flood. Then he stopped and went to his pack. \"Let's see what sort of toys I brought,\" he said over his shoulder as he began to dig through it.\n\n\"Well, I certainly hope you didn't forget the cat,\" Lisa said. \"I love the feel of it and I also plan to use it on you later.\"\n\n\"Don't worry,\" Dan replied. \"I'll see to it that you get to feel the cat quite a lot before I'm done tonight. As to using it on me, well, we'll have to see.\" He stood up and came back in front of Lisa. \"I picked these up last week. Now seems like a good time to try them out, don't you think?\" He held up a pair of nipple clamps, each with a small lead weight attached.\n\n\"Go ahead,\" Lisa taunted. \"That is, if you can figure out how to use them.\"\n\nDan had been moving one towards her right breast, but stopped. \"For that crack,\" he said, and held the clamp in front of her face as he tightened the spring a half turn. Lisa's nipples were already rock hard and extremely sensitive as Dan rolled them between his thumbs and forefingers. He let the clamp close over her right nipple, bringing a gasp from Lisa. The look on her face indicated that it really hurt. \"A little tighter than the last set we played with, isn't it?\" Lisa nodded. Then Dan added seriously, \"Too tight?\" Lisa bit her lip and shook her head. \"All right, then,\" Dan said, and added the second clamp.\n\nHe tugged and twisted at the clamps for a couple of minutes and then picked up the homemade leather cat he had first used on her in the barn last summer. He let the long, soft tails drag across her tortured tits, her shoulders, and down across her ass and thighs. \"I'm going to work you over really nicely,\" he said. \"But let's make it a little more interesting first.\" He picked up a small bullet vibrator, turned it on and slipped it into her sopping pussy. Then he held up a medium sized butt plug. \"I also bought this last week,\" he said. He used a tube of lubricant to slick the device and then slowly and firmly pushed it into her tight ass. Once it was buried to the flared base, Dan touched a switch and the plug began to vibrate also. Lisa was already squirming and Dan could tell she was well on her way to coming.\n\nHe stepped back and raised the cat. He brought it down sharply and Lisa felt trails of fire across her ass, causing her to cry out. Dan repeated the stroke from another direction with similar results. For the next ten minutes he whipped her ass and thighs and then switched around to her stomach, pussy, and tortured tits. Before he stopped Lisa had come three times and was working towards a fourth.",
        "Dan released her and immediately pulled her over to the picnic table. He placed a folded blanket at one end and faced her towards it. He spread her legs and tied them to the table legs and then bent her forward along the length of the table. The weight was taken off the clamps as Lisa's tits pressed against the wood of the table, but, if anything, the pressure caused her nipples to hurt more. Dan stretched her arms forward and tied them to the far table legs. Once more he picked up the cat and proceeded to deliver another twenty strokes to her back and ass, the last five each bringing a scream. Dropping the cat, he then removed the two vibrators and plunged his hard cock into her wet and convulsing pussy. But after a dozen strokes he pulled out and placed the head against her tight rear opening. \"Do it, Dan,\" Lisa cried. \"Fuck my ass!\"\n\nDan didn't hesitate to follow her instructions and pushed all the way inside in a single long, slow stroke. He held there, pressing deeply into her tight bottom, and then began to slowly move in and out. In less than a minute he went over the top bringing Lisa with him.\n\nDan released Lisa from her bondage and held her close. \"Not too rough, was I?\" he asked.\n\n\"No,\" Lisa replied. \"If you ever do get too rough I won't hesitate to use the safewords. I'm not saying it doesn't hurt, but it's a good hurt. I mean it really turns me on. Maybe it is like you hear sometimes that pain and pleasure are closely related.\"\n\n\"I know what you mean,\" Dan said. \"I know it really hurts when you whip my ass, but I really like it, too.\"\n\n\"Speaking of which,\" Lisa said. \"I do want a chance at you tonight, too, but maybe we'd better rest a little first.\"\n\n\"OK,\" Dan said. Let me build up the fire a little and let's see if we can find somewhere comfortable to sit and watch it.\"\n\nDan put a couple of more pieces of wood into the fireplace and pushed them into place with the poker. When he looked around, Lisa was dragging one of the picnic benches over in front of the fire. She turned it onto its side with the legs facing away from the fireplace and the flat bench top towards it. While Dan looked on in curiosity she brought over several blankets. She placed a heavily folded blanket over the bench top and spread the others on the floor in front of it. Finally she turned towards Dan and said, \"Those chairs aren't wide enough for both of us and the bench isn't really comfortable to sit on for a long time, especially if we aren't dressed. This way we can sit on the floor and lie back against the bench.\"\n\n\"A nice little nest,\" Dan observed. \"Here. Let's add a couple of the pillows and it'll be perfect.\" The couple settled in front of the fire, Dan's arm around Lisa and her body pressed close to his.\n\nFor the next hour they talked and casually stroked each other. Once Dan murmured, \"It feels so right being with you like this. I don't just mean sexy - it's definitely that - just right.\" Lisa nodded and snuggled deeper into his embrace.\n\nAfter a time their exploring hands began to arouse them once more and finally Lisa said, \"I'm ready to play some more. Are you up to it?\"\n\nDan laughed and placed his own hand around Lisa's which was wrapped around his erect cock. \"Doesn't it feel like I'm up to it?\"\n\n\"In that case,\" Lisa shot back, \"I think it's time for you to be on the receiving end. Come on, Lover. I'm going to really whip your ass.\" She pulled Dan over to the end of the table and soon had his legs stretched apart and tied to the table legs. \"Mind if I borrow these?\" she asked, holding up the nipple clamps. Not waiting for an answer she pinched Dan's nipples, making them hard, and then snapped a clamp on each. She then stretched Dan forward along the table and soon had him fastened in the position she had occupied an hour before. She pulled him extremely taut and then teased and tickled him with her fingers. She lubed her middle finger and probed his anus, twisting and pulling it in and out.\n\nFinally she pulled the finger out and said, \"One more thing. I think I saw just the item in the cabinet over there.\" She first went to the sack of toys she had brought and picked up something and then went to the cabinet and returned with a six inch cast iron frying pan.\n\n\"What are you planning to do with that?\" Dan asked, apprehension in his voice.\n\n\"You'll soon find out,\" Lisa answered, not reducing his tension. She then took the first object, which had been a piece of velvet ribbon, and used it to tie tightly around his balls. Finally she tied the frying pan to the ribbon and let it hang, stretching his scrotum. \"Now,\" she said picking up the cat, \"it's time to remind you that both of us can use this little toy.\" She swung the whip in a hard stroke across Dan's ass. His cry wasn't done when she added a second stroke. Then a third. Then a fourth. For the next several minutes she laid lash after lash across his bound body, mostly on his helpless rear. It was soon crisscrossed with red lines and Dan was crying out with most strokes. Now and then she'd stop to fondle his cock and balls or to tug at the dangling pan. Occasionally she'd reach under his chest and tug the nipple clamps to a new and more uncomfortable position.\n\nAfter a half hour of this kind of torment, Lisa put down the cat and said, \"I bought a new toy last week, too. We'll see how you like it.\" She then went back to her bag and got something out that Dan couldn't see. She went directly behind him where he couldn't twist around to see and fumbled with the item for a few seconds. When she turned back, she had on a harness with a seven inch heavily ribbed dildo sticking out. Once again she used her fingers to lubricate his rectum and then the fake cock before pressing it against his anus. As she pushed the intruder home, Dan groaned, but tried to wiggle his ass to help with the penetration. Lisa pounded his rear for ten minutes, sometimes applying a leather strap to his flanks and back and making the dildo twist and wiggle as she moved it in and out. Twice she came herself before Dan groaned and shot his own load.\n\nAs she untied him, Dan said, \"You know, I never thought about anal sex much before last summer and never about being on the receiving end. But your ramming that thing into me is one of the hottest things I've ever experienced. Especially when I'm tied and you've gotten me all hot with the cat.\"\n\n\"I'm glad you like it,\" Lisa said, \"because I love it, too. Almost as much as having you fuck my own ass. It's really wonderful that we both find the same things fun.\"\n\n\"If we didn't, it wouldn't work and we wouldn't be doing them,\" Dan said. \"And as long as we know we're both honest about what we like, we can explore and try new stuff without worrying about it.\"\n\nOnce again they built up the fire and cuddled in front of it. Soon both were dozing off and finally Dan said, \"Come on, Beautiful. I think it's time to get that lovely body into bed.\" Lisa nodded and the two of them spread the sheets on the lower bunk along with a couple of blankets and then crawled into bed. As they kissed and Lisa snuggled her body against Dan's, she said, \"You know one thing you've done to me? I don't think I ever want to wear a nightgown again.\"\n\n\"Stay with me,\" Dan murmured back, \"and you'll never have it suggested.\"\n\nCousin - Ch. 22\n\nThe next morning Dan and Lisa woke to another clear, sunny day. But it was also very chilly in the cabin. Snuggling deeper under the covers Lisa said, \"We're going to have to get this place warmer before I get out of here. Tell you what, why don't you be brave and get out and get a fire going and I promise to warm you back up when you come back into bed.\"\n\n\"I can't resist an offer like that,\" Dan replied, kissing her. Then he threw off all the covers bringing a squeal from Lisa as she scrambled to pull them back up to her chin. Dan laughed and went over to the fire place. He stirred the ashes and found some live coals. Adding some kindling, he soon had flames crackling and he put on some larger pieces of wood. \"OK,\" he said. \"I've done my part, now it's your turn.\" He slipped under the covers and pressed himself against Lisa.\n\nLisa squealed again. \"You're cold!,\" she cried.\n\n\"I know that,\" Dan said. \"Remember, you were going to do something about it.\"\n\n\"Well, I did promise,\" Lisa said coyly. She began to rub her front against Dan's and let her hands slide over his back and buttocks, occasionally stroking his hardening cock and full balls.\n\n\"I do believe it is getting warmer,\" Dan said.\n\n\"Let's see if we can make it really hot,\" Lisa murmured as she slid her tongue into his ear and let her finger poke at the edge of his anus.\n\nDan was keeping his hands busy also and very soon the two were coupled and thrusting hard against one another. After they had yelled out their climaxes, Dan commented, \"I guess it worked. We didn't even notice that we kicked the covers onto the floor.\"\n\n\"It is a toss-up which is hotter,\" Lisa said. \"You or the fire.\"\n\n\"The fire doesn't come close to you,\" Dan replied. \"Say, do you know how a smart Boy Scout makes a fire?\"\n\n\"I'll bite,\" Lisa replied.\n\nDan looked at her for a second and murmured, \"That might have possibilities.\" Then he added, \"No, a smart Boy Scout makes a fire by rubbing together with a Girl Scout.\"\n\nLisa swung a pillow at him. \"That was awful. Funny, but awful.\"\n\n\"I guess you'll just have to find some way to get even,\" Dan said.\n\nLisa thought for a second and then said, \"OK. Have you heard about the smart cookie who made a living peddling Girl Scouts?\"\n\nDan drew back dramatically and clutched his chest. \"Oh, oh, that was too much. You win, My Lady, I yield.\" Then he couldn't hold it any longer and his laughter mingled with Lisa's.\n\nWhen they had calmed down Lisa said, \"You know, I hate to admit it, but it's still a little cool in here to stay like this. I'm afraid I'd better put some clothes on.\"\n\n\"Yeah,\" Dan agreed. \"I don't like it any better than you do - probably less, in fact - but, I guess you're right. Just kiss me first. Properly.\"\n\n\"Properly?\" Lisa asked.\n\n\"Like this,\" Dan said. He pulled her to him and held her naked body tightly against his own as his hands roamed over her back and ass and his tongue tangled with hers for a long, long French kiss.\n\nWhen they came apart, Lisa said, \"Oh. You mean there's some other way to kiss?\"\n\nDan laughed and slapped her ass as he handed her her clothes and reached for his own.\n\nAs they pulled on their clothes Lisa asked, \"What would you like for breakfast. I mean besides that.\"\n\nDan had opened his mouth to make a wisecrack, but instead answered, \"How about bacon and eggs. We want to use the stuff from the cooler before the ice melts.\"\n\n\"Sounds good to me,\" Lisa replied. \"All those calories and fat and stuff.\"\n\n\"Don't worry. I'm sure we'll find some way to burn them off. Speaking of which, what would you like to do today?\" Lisa opened her mouth to reply and Dan quickly put in, \"I mean besides that.\"\n\nLisa giggled but then said, \"It looks like it's going to be another perfect fall day. Suppose we pack a nice lunch - maybe we can find something warm. You brought the back packing stove, didn't you?\" Dan nodded and Lisa went on, \"Then we could find some nice spot on that map of yours and make an all day hike of it.\"\n\n\"That sounds like a great plan,\" Dan said enthusiastically. \"There was a trail that went all the way to the top of that mountain we were looking at yesterday. You know, the one beyond the ridge where we stopped. It's a different trail, too, so we won't be retracing anything.\"\n\n\"That sounds fine.\" Then she added, \"As long as it's not so far that we won't have time for, shall we say, a couple of rest stops.\"\n\n\"I'm sure we can work them in,\" Dan said. \"Here, let me have some of the bread and I'll see if I can toast it by the fire while you finish the eggs.\"\n\nWhen they had finished breakfast they began to gather things together. \"Don't forget the weather can change awfully fast,\" Dan said. \"In fact I wouldn't be surprised to see snow up here this time of October. Make sure you've got your waterproof jacket.\"\n\n\"Hey, I might like being naked, but I'm not dumb. It's right at the top of my list.\"\n\n\"Sorry,\" Dan replied. \"I know you're no stranger to these mountains. Force of habit. How about some chicken noodle soup? We've got an envelope here. And maybe some cheese and crackers.\"\n\n\"Fine,\" Lisa answered. \"Throw in a couple of pieces of fruit. And maybe some trail mix and a couple of chocolate bars. I'm planning on burning a lot of calories.\"\n\n\"And I plan to help you,\" Dan said. \"OK. Fruit, chocolate, and some nuts.\"\n\n\"You mean nuts beside us?\"\n\n\"You do have a sharp tongue, Wench. But I love you anyway.\"\n\n\"Anyway and every way and anytime and all the time it seems,\" Lisa said. \"And am I ever glad about that.\"\n\nDan stopped her and put his arms around her. \"That's right, Lisa. And I never plan to stop. Wait and see, I'll still be chasing after you body when I have to hobble on a cane.\"\n\nLisa hugged him back and said, \"No more than I plan to be chasing after yours.\" They shared a deep kiss and then returned to packing everything into their packs.\n\nIt was still before eight when they started down the trail. After a couple of minutes, Lisa asked, \"Dan, did you pack any toys?\"\n\nDan looked a little embarrassed. \"Just a few pieces of rope. I thought maybe today we'd hold off on the whipping and stuff. Maybe a little bondage, but no really rough stuff. I feel more romantic than sadistic. I hope you don't mind?\"\n\nLisa stopped and kissed him. \"You must be reading my mind! That was exactly what I was going to suggest. And you're never sadistic. It's all fun and games, remember? But today, like you said, let's just be lovers.\" Then she added, \"Maybe bound lovers, sometime.\"\n\nThey hiked on through the splendid forest acutely aware of the beauty and of each other, frequently reminded by quick touches and gentle caresses. Late in the morning they stopped to rest in a sunny area above a tumbling mountain stream. Soon their rest turned to arousal and within a few minutes both had shed their clothes and were locked in a tight sixty nine. Dan drove Lisa to three orgasms before finally coming in her mouth as she sucked down and swallowed each drop. The sun felt warm and they snuggled together for another fifteen minutes before once again getting dressed and starting on down the trail.\n\nThe trail had been climbing for some time as they headed up the flank of the mountain. Both decided to wait for lunch until they reached the top and pushed on. About one they left the edge of the forest at the peak and came out onto a grassy, flat topped plateau. They shed their packs and walked around looking at the magnificent views. Far below them they could see a river winding its way between hills and along the bottom of ridges. Other ridges fell away in waves as they looked into the far distance. At only one point could they see any sign of civilization: A small village and a road were visible down near the river, but it must have been at least ten miles off.\n\nAfter a few minutes, Dan said, \"This is really beautiful, but I'm hungry. We can set the stove on that rock over there and start the soup.\"\n\n\"Good. I'm ready to eat,\" Lisa said. \"This weather gives me an appetite.\" Then she looked directly at him and added, \"Not to mention I have a strong craving for dessert.\"\n\n\"I'm always in favor of that kind of dessert,\" Dan said. \"Let's spread the cloth here and get the food ready.\"\n\nThey found a place near several small trees, but still in the sunshine where they could overlook the valley below. Soon their soup was ready and they dug into lunch. Half way through Lisa looked around and said, \"The view couldn't be any better. This place is wonderful.\"\n\nDan stopped and looked at Lisa. \"I can think of something that would make it better. Take off your shirt.\"\n\nLisa grinned at him. \"That sounds like a dare, Lover. OK, but take yours off too.\" Dan smiled back and both the young people began to unbutton their shirts. When they were bare, the sun felt warm enough that they weren't cold. Of course if a breeze started that could change, but right now all was quiet.\n\nThey continued to eat, but both were intensely aware of the other and Dan noticed, as he frequently looked at Lisa breasts, that her nipples were swollen and hard. Lisa, for her part, was vividly aware of the bulge in Dan's jeans. They quickly finished their food and then came together, Lisa's hard nipples drawing burning lines against Dan's chest as he pulled her to him. They kissed and when their mouths separated Dan whispered, \"You know, we're still overdressed.\"\n\n\"Then let's do something about it,\" Lisa breathed back. They each undressed the other and lay together on the nylon cloth, caressing and exciting with their hands and tongues. Lisa rolled Dan onto his back and straddled his hips. She used her hand to guide his hard cock into her dripping slit and sank down, deeply impaling herself. letting out a satisfied groan in the process. They froze like this for perhaps a minute and then Lisa began to move up and down with a twisting motion. Dan groaned and thrust his hips up to meet her each time. His hands lightly brushed back and forth across her nipples, occasionally squeezing her breasts or sometimes going around to squeeze her ass cheeks. They became more and more aroused until the quiet of the mountain top was broken by their mingled loud cries.\n\nLisa lowered herself and stretched full length atop Dan. His hands held her taut ass and gently squeezed and rubbed. For several minutes they lay like that while Dan's softening member slowly slipped out of Lisa tight pussy. When he finally withdrew, they rolled onto their sides, still facing and clinging to each other. \"If you're not cold, let's just stay like this for a while,\" Dan said.\n\nLisa had her arms around his neck and squeezed. \"I'm fine,\" she said. \"Dan, I love being naked with you. I know I've heard some girls say that as soon as sex is over, they want to get dressed. Put on a nightgown or robe of something. But I love just being with you and it feels wonderful just to be together without worrying about clothes.\"\n\n\"I'm glad. As long as we don't need clothes for protection from the temperature or such, I want to keep being naked with you. I love looking at you, I love touching you, I love tasting you. Of course, there might be times, even if we're alone, when it wouldn't be too practical. For example, I expect it would be awfully hard to concentrate of particle equations if you were naked in the same room.\"\n\nLisa laughed. \"I expect it might. I wouldn't want to try a complicated program while your wonderful naked body was within view, either. And, Dan that brings up something. I've got a surprise. I decided this driving back and forth every other week is a real drag. I applied for transfer to your school and Tuesday I got the acceptance. So if you would like, starting in January, I'll be in the same town.\"\n\nDan looked at her. \"Lisa, I would love that. But I don't want you compromising your studies for me. Your career is just as important to me as it is to you.\"\n\n\"Hold on,\" Lisa broke in. \"Both programs are excellent. It doesn't make any difference to me. Really. And I would be much happier being nearer to you.\"\n\nDan kissed her. \"If you really mean that, then I would love it. In fact, if you want, we could even share an apartment. Of course, if you want privacy and your own place, I'll be happy to see you whenever we can.\"\n\n\"Dan, I would love to move in with you. Or you with me. Or whatever. But what about your roommate? I'm not sure I'd like sharing with him too.\"\n\n\"Actually, Rick is graduating at the end of this semester. He finished a term early and I've been wondering what to do for a roommate next term. If you would like to move in, I can't think of a better one.\"",
        "\"I would love that, Dan. But if I do we will have to set some rules. Like I said I really like being naked with you and you know we both love the sex. And a lot of it. A whole lot of it. But, like you said, if we try to stay undressed or are constantly arousing each other, we'll both blow school, and I don't want that to happen. To either of us.\"\n\n\"Agreed,\" Dan quickly said. \"We'll restrict this stuff to playtime. I'm sure that, if anything, the anticipation will make it even better.\"\n\n\"Oh, and one more thing,\" Lisa said. \"Be sure to keep your collection of video tapes. You got me hooked on that stuff last summer.\"\n\nDan laughed. \"I'll even add to them. And maybe even get a bigger TV.\"\n\nThey hugged and kissed some more, holding each other tightly. Soon they were both becoming aroused when Dan reached over to his pack and brought out a couple of pieces of soft rope. He looked a question at Lisa and received the slightest of nods in reply. Quickly he wrapped the rope around her wrists and then pulled them above her head and tied them to the trunk of a nearby tree. He then started to let his tongue trail down her body, circling her breasts and eventually licking and sucking hard on her nipples. Lisa strained against the ropes as her breathing became more and more ragged, but Dan continued to tease and excite her. He extended his attention to her pussy and clit, licking and flicking his tongue across the hard nubbin. Lisa rose over the edge into a hard climax, but Dan didn't stop and drove her on to three more. Finally, seeing that Lisa was becoming worn from the nearly continuous orgasms, Dan moved over her and plunged his hard member into her. Before he finally reached his own climax, Lisa had come twice more.\n\nAs Dan released her and they began to cool down, Lisa said, \"That was wonderful! But we really will have to restrict ourselves if we're going to live together. Otherwise I know I'd never want to stop playing at all.\"\n\nDan nodded and kissed her long and hard. Finally the couple had to begin getting dressed or, as Dan pointed out, they would be returning home in the dark.\n\nAs they finally left the woods and entered into the clearing where the cabin stood, the sun was just setting, casting low rays of orange light through the sparsely leaved trees and shining across the distant ridges to the east of the cabin. \"Looks like we just made it,\" Dan observed. \"Could have been a half hour earlier if we hadn't taken such a long rest break back there.\"\n\nLisa stretched up and kissed his cheek. \"Are you complaining?\"\n\n\"Not in the least,\" Dan replied. \"Just observing.\" Then he kissed her back.\n\nThey entered the cabin and dropped their packs. \"Want the steaks tonight?\" Lisa asked.\n\n\"That sounds lovely. I'm certainly hungry enough for them. I'll go make a fire outside and we can grill them there as soon as it burns down to some coals. Do you want to wait for baked potatoes?\"\n\n\"Let's just fry some on the stove in here. I think I might starve if we have to wait another hour and a half. There's that bag of salad, too. Go ahead and get some coals ready, Dan, and I'll get the other stuff ready. Oh, and you might want to make a fire in the fireplace, too. It's going to be cooling off pretty soon.\"\n\n\"Two fires, coming up,\" Dan replied. Then he added. \"We're burning quite a bit of wood, so tomorrow we'd better cut some more. We might like to borrow this cabin again sometime and James would probably be unhappy if the next time he came up there wasn't any wood. Anyway, he told me there was a pile of logs ready to cut and a chain saw in the storage locker out back along with the kerosene. It shouldn't really take too long.\"\n\n\"That sounds OK,\" Lisa called out to him. \"We probably won't want to spend all day walking again anyhow.\"\n\nDan walked over to the stone fire ring near the corner of the front porch. This was just a circle of stone, about a foot high, set in a cleared area. There was a stainless steel grill leaning against the wall nearby which could be laid across the stones to make a good cooking surface. Dan quickly got some small kindling ignited and then carefully added some small, dry split oak pieces. When the blaze was burning healthily, he went back into the cabin and started another fire in the large fireplace. This time he added several larger logs that would burn for quite a while.\n\n\"Nice that you can start a fire so well,\" Lisa complimented. \"Half the guys I've seen at picnics or on hikes can't even keep a match going.\"\n\n\"Yeah, but it's a good thing we don't have to depend totally on wood,\" Dan commented. \"Otherwise I'd have to spend all my time either building fires or cutting wood. Sometimes I wonder how our ancestors found enough time to give this country a population of two hundred and fifty million.\"\n\nLisa laughed. \"Maybe they were just looking for an easier way to keep warm. What I've always wondered is how they managed it when they sewed themselves into their underwear in the fall and didn't take it off until spring.\"\n\nDan came over behind her, reached around and placed his hands over her breasts and nuzzled at her neck. \"I definitely like our way better,\" he said.\n\nLisa turned to give him a kiss. \"Me, too,\" she said.\n\nWhen Dan had the steaks almost done Lisa appeared with plates and tableware which she set on the small rustic table which was on the porch. \"Let's eat out here. One of the nice things about October is no bugs.\"  Dan looked up at her. \"OK, but it's cooling off enough that we'll probably need to put on jackets or sweatshirts.\"\n\n\"That's all right,\" Lisa said. \"We can make up for that later when we go in.\" She went back into the cabin and returned in a minute with two bowls of salad, a plate of fried potatoes, and the last of the French bread. One more trip and she had drinks and a red glass candle holder along with a couple of sweatshirts. The sun was down and it was rapidly becoming dark as well as cool.\n\nDan brought the steaks to the table and shrugged into his sweatshirt. He and Lisa sat side by side and ate while dusk ended and a million stars began to appear. When they were finished, they quickly carried the dishes back inside and then once more came out. Dan took Lisa's hand and led her off the porch so they could look up at the sky. \"There will be a quarter moon up later,\" he said, \"but now you can really see the stars. I miss that when we're in town.\"\n\n\"Uh huh,\" Lisa murmured. \"And just listen to the quiet. Coming out somewhere like this does more to decompress than all the tranquilizers in the world.\"\n\nDan had his arm around her and squeezed. \"I get the same feeling whenever I pull up at Tom and Mary's place. Someday I want to live out away from everything. But sometimes I wonder if I'll have to compromise that to have a job and just have somewhere like this for weekends. At least, I'd have to have that.\"\n\n\"What do you want to do?\" Lisa asked. \"I mean once you graduate. Do you know what kind of a job you're looking for? You said you wanted to go to grad school first, right?\"\n\n\"That's the plan,\" Dan replied. \"What I'd really like to do is teach Physics somewhere pretty much like here. I mean like at school, obviously not right here.\" This brought a laugh from Lisa. \"What about you? What are you planning to do?\"\n\n\"Well, I've really gotten into programming. It seems to be something I have a knack for and I enjoy doing it. Not to mention if you're a good programmer it pays well. And, not being overly modest, I'll admit I'm a good programmer. I've even done a couple for local companies and gotten paid for it this semester. Another nice thing is that with programming, all I need is a computer and a telephone. I could actually do it somewhere like this if there were power lines.\"\n\n\"I'll bet you are a very good programmer. One of the things I like about you, Lisa, is that you are not falsely modest. There's an old Arab proverb I've always liked: 'Modesty in the face of ability is hypocrisy'.\"\n\nLisa smiled and said, \"You mean, in other words, if you've got it, flaunt it.\"\n\nDan laughed. \"Yeah, something like that.\"\n\nFor a while longer the couple stayed out, looking up at the stars, pointing out constellations. There were a couple of meteors and once they saw a satellite making its silent way across the sky. A yellow glow began to show in the east and soon the remains of the Hunter's Moon began to rise over a distant ridge. Lisa shivered and Dan held her closer and asked, \"Cold? Want to go inside?\"\n\n\"Yes, and I'm not sure,\" Lisa replied. This is beautiful and it'll probably be a long time before we get to do this again. But it is getting cool and there are a couple of other things I want to do tonight, too.\"        \"Oh? Anything that involves me?\" Dan asked.\n\n\"It would be a biological impossibility without you,\" Lisa answered back. She kissed him and then pulled him in the direction of the cabin door.\n\nOnce inside Dan went to build up the fire and Lisa once again lit the candle in the red glass holder they had used at supper. \"We don't need a lamp, do we?\" she asked.\n\n\"Not as long as I can see your lovely face,\" Dan answered. \"Besides firelight and candlelight are incredibly sexy, don't you think?\"\n\nLisa had pulled off her sweatshirt and then unbuttoned her shirt. Now she took it off and joined Dan by the fire. \"Definitely!\" she said, putting her arms around his neck and kissing him. Without breaking the kiss, she unzipped and removed his sweatshirt and then rapidly got his shirt off also. Dan let his hands roam over her bare back and pressed her tightly to him. He could feel each of her hard nipples pressing against his chest.\n\nWhen they ended the kiss both turned and without a word began to set up the bench and blanket \"nest\" they had had the previous night. They removed their boots and the rest of their clothing and were soon stretched out together, naked, in front of the fire. This time their lovemaking was long and slow. Despite their obvious passion there was nearly an hour of stroking and kissing before Dan finally held himself above her reclining form and entered her in a single long slow stroke. And it was another fifteen minutes before their arousal finally overwhelmed them and brought both to a shuddering climax. Afterwards they lay entwined, whispering lovers' words to each other.\n\nOnce Dan rose to add wood to the fire but returned immediately and in another hour, passion once more overtook them. This time when they calmed down Lisa said, \"Let's drag a mattress over here and spend the night.\"\n\n\"All right,\" Dan agreed. \"I can't think of anything I'd like better.\" He bent and kissed each of her nipples and then rose. Lisa joined him and they pulled the thin mattress pad from the lower bunk and brought it over.\n\nLisa spread the sheets over the pad and piled a couple of blankets near their feet \"in case the fire goes out.\"\n\n\"If I can help it,\" Dan replied, \"that won't happen for at least a hundred years.\" He then wrapped his arms around her and kissed her deeply. Soon they were again thrusting against each other, totally lost to any world except their own little island in front of the fire.  \n\n    Cousin - Ch. 23\n\nOnce during the middle of the night Dan awoke to find Lisa leaving the warmth of the covers. By the time he was fully awake she was across the room and heading into the small bathroom area. The air in the cabin was chilled and only a few orange embers remained of the fire. As the cool air struck him Dan shivered. He called out, \"Aren't you cold?\"\n\n\"Yes, but nature called. You can do something about it in a minute.\"\n\n\"I can manage that,\" Dan replied, \"but I think I'll just build the fire up a little, too. OK?\"\n\n\"Go right ahead,\" Lisa said, coming back and quickly moving under the covers. Dan had already moved to put some more wood on the fire and when the blaze was starting again, made his own trip into the bathroom.\n\nWhen he returned and climbed in with Lisa they clung to each other, both of them shivering slightly. \"Rather have some flannel pajamas?\" Dan asked.\n\n\"Absolutely not!\" Lisa replied. \"Would you? Me, I like being naked with you even if it means a little shivering once in a while.\"\n\n\"You do beat hell out of flannel,\" Dan replied. \"Say, did you know that the Germans actually did some experiments during World War II and determined that a cold man would warm up faster with one naked woman than with two?\"\n\n\"You're kidding?\" Lisa said. \"I know they did some really cruel and bizarre experiments, but why would they do something like that?\"\n\n\"I don't know. I can guess maybe they were interested in reviving flyers who were shot down in the North Sea. I just remember reading about it somewhere. Anyway, one naked woman is definitely warming me up right now.\"\n\n\"Oh,\" Lisa teased, her hand on his hardening genitals, \"you mean you're not cold any more?\"\n\nDan sucked in his breath. \"I seem to notice that you're not shivering any more either.\"\n\n\"Maybe we've just gotten used to the cold,\" Lisa said.\n\nDan rolled her onto her back and stretched himself above her. \"Enough talk,\" he said and locked his mouth to hers.\n\nWhen next he awoke, Lisa was still sleeping against him and sunlight was coming through the windows. The fire was again nearly out, only a little smoke still rising from the ashes. Dan gently stroked her round buttocks several times and then eased himself out from the covers long enough to build up the fire once more. When he returned he saw that Lisa had her eyes open and was watching him. \"I love you,\" she said.\n\n\"I love you,\" Dan replied.\n\nLisa pulled back the covers invitingly and said, \"Then come prove it.\"\n\nThe couple spent the next hour playing and making love. As they snuggled together afterwards, Lisa commented, \"It seems the cabin is warmer now.\"\n\n\"Yes, but I think we'll have to give the fire some credit,\" Dan answered. Then added, \"Some, but definitely not all of the credit.\"\n\nLisa threw off the covers and sat up, followed by Dan. \"It really isn't too cool,\" she said. \"We've got some of those bagels left. Let's grab them and some cream cheese and eat breakfast over here.\" Then striking a pose she added, \"Nothing like a naked breakfast, is there?\"\n\nDan laughed and got up to get the food. He brought it and a couple of cans of orange juice back over and sat down next to Lisa. He leaned back against the bench and said, \"Here. Sit on my lap.\" Lisa rearranged herself and was soon sitting across Dan's legs. She could feel his cock against her and as she leaned back against his chest, Dan reached around to fondle her breasts. In a minute they began to eat, still comfortably resting against each other.\n\nWhen they had finished eating and had been necking a little, Dan said, \"Much as I like what we're doing, maybe we'd better get up and dressed and get some wood cut. If we keep on doing this instead, by this afternoon I may not have the energy left to ravish you repeatedly like I'm planning.\"\n\n\"We wouldn't want that to happen. I've really been looking forward to being ravished. After all, it's been so long since it's happened.\"\n\n\"Maybe all of forty-five minutes,\" Dan said.\n\n\"Like I said,\" Lisa responded, \"it's been a long time.\"\n\nAfter another embrace and a long kiss, the couple stood up and started pulling on their clothes. \"Another beautiful fall day,\" Dan commented. \"Sooner or later it's got to break, but let's enjoy it while we can.\"\n\nThey put on their boots and headed outside. Around back of the cabin was a stack of logs. They had been felled and the branches removed, but were twelve to twenty feet long. Dan went to the small storage locker. Actually this was more like a short shed, about six by six by four feet tall. He unlocked the padlock and opened the short door. Reaching inside he pulled out a chain saw and gas can. He ducked back in and reemerged with two sets of ear protectors and an ax. \"Here,\" he said, tossing one of the Mickey Mouse earmuffs to Lisa. \"Don't want to hurt your ears.\" He checked the oil and gas in the saw and then took it over to the log pile where there was a small X-shaped saw horse. Lisa helped him get the end of the first log up on it and then stood back.\n\nWhile he was checking the saw, Lisa said, \"Did you hear about the dumb backwoodsman who bought a chain saw guaranteed to cut five cords of wood a day?\"\n\nDan shook his head and Lisa went on, \"Well, three days later he brought it back and said that he'd tried each day, but he could only cut a cord and a half. The salesman agreed to check it out and the two of them took it out back. The salesman pulled the cord and started the saw and the woodsman said, 'What's that noise?'.\"\n\nDan laughed and said, Let's hope this one makes a noise.\" He pulled the cord and after a couple of tries the engine settled into a steady roar. He cut a couple of logs into fireplace lengths and then shut down the saw. \"Let's carry them over there by the chopping block and I can split them when I get done.\"\n\nThe two of them moved the cut pieces and set another log onto the sawhorse. As Dan was getting ready to start the saw again, the sharp sound of an ax sinking into wood made him look around. Lisa was just picking up the two pieces of the log she had split. As Dan watched she set another piece upright on the block and stepped back. She swung the double bitted ax high overhead with an easy practiced motion and brought it down squarely on the piece which fell in half. Dan watched in astonishment as she split two more, each time with a fluid motion and no wasted effort and each time striking exactly where she aimed. \"You really seem to know how to handle that,\" he finally said.\n\nLisa stopped and looked around at him. \"I'm a country girl, remember? And you didn't really think I would have let my brother know how to do something I couldn't, now did you?\"\n\nDan just shook his head. \"You truly are amazing,\" he said. Lisa smiled and then they both went back to their separate tasks. Before too long Dan had a large pile of cut logs and then he and Lisa took turns splitting and carrying them.\n\nThe day had warmed considerably and by the time the wood was stacked against the cabin both Dan and Lisa were sweating heavily. \"I could really use a hot shower,\" Lisa said. \"Might be nice if there was hot running water here, wouldn't it?\"\n\n\"Tell you what,\" Dan said. \"I'll show you how to take a pioneer shower.\"\n\nLisa looked at him. \"A pioneer shower?\" Then she froze and said, \"You're not going to throw me in the creek again. Not at this time of year, Dan. It's way too cold for that.\"\n\n\"Hold on, hold on,\" Dan interrupted, laughing. \"I promise, no creek. Just put a couple of kettles of water on to heat and I promise you'll like it.\"\n\n\"OK, if you promise,\" Lisa said, and headed into the cabin.\n\nDan put the tools away and came inside. If a few minutes there were two kettles of boiling water. Dan took a couple of buckets of cold water and added hot, testing the temperature as he did. \"All right, let's strip down and I'll show you how the pioneers did it.\"\n\nThe two of them undressed and Dan carried the buckets into the bathroom area. He had Lisa stand in the tiled area which had been designed for a real shower at some time in the future. Dan had looked it over earlier and had found that the tank above the shower was already installed, just no pump to fill it. He stood on a chair and emptied the water into the tank and then joined Lisa. Dan took a washcloth and wet it in the water remaining in one of the buckets and soaped it up. He then proceeded to wash Lisa, not surprisingly paying special attention to her breasts, ass and pussy. He started to soap himself, but Lisa took the cloth and lathered him herself. Dan pulled her close letting their soapy bodies slide over each other while he let his hands explore. Lisa let her own hands begin to roam and soon both were becoming aroused. Finally Dan opened the valve and a light spray of warm water came from the shower head above them. It wasn't a high pressure stream - the water only had gravity and a short drop behind it - but it did rinse them. They continued to play with each other while the warm water lasted and when it was gone, began to dry one another.",
        "\"Are you sure the pioneers took showers like this?\" Lisa asked.\n\n\"Sure,\" Dan said. \"Why so you think pioneers had such large families?\"\n\nLisa laughed and slapped him on the ass. \"Well, I'm still not sure I believe that about the pioneers, but I don't intend to let that nice hard-on go to waste. You did say something about ravishment, didn't you?\"\n\n\"That I did, my lady, that I did,\" Dan said. He scooped her up into his arms and carried her over to the bed which was still on the floor in front of the fireplace. He laid her on her back and lowered his head, first kissing her and then working his way down across her breasts, pausing to suck at each nipple, and then on down to her slit. He worked steadily and soon Lisa was pulling his head more tightly against her crotch and arching her back uncontrollably. He stopped and pulled his head back. Lisa pulled him on top of her and almost desperately reached to guide his hard cock inside her. Dan didn't need any more urging and started pounding her deeply. Within just a few minutes both were straining against each other as they started becoming lost in orgasm. \n\nWhen they finally lay back, Lisa said, \"I believe you said something about 'repeatedly', didn't you?\"\n\n\"I did, but you'll have to wait at least a couple of minutes. Remember men need a little recovery time. And I am a man, after all.\"\n\n\"That you definitely are,\" Lisa murmured. Then she asked, \"Just what did you have in mind for this afternoon?\"\n\n\"Nothing in particular,\" Dan said. \"What would you like? That is, as long as it involves sex.\"\n\n\"It will that,\" Lisa replied. \"I don't know. I suppose we should eat some lunch first. And, Dan, do you want to play some rough games today or do you want to just do like yesterday?\"\n\n\"I wouldn't mind either,\" Dan said. \"If you'd like I'd certainly enjoy some more 'sex and torture' games.\"\n\n\"Yeah, I think I'd like that today. You may do your worst and then ravish me. Just make sure you don't forget the ravishing part.\"\n\nDan grinned. \"I won't forget. Maybe later we can trade off. But I guess you're right and we should see about some lunch first. How about we take something outside along with a blanket and have a picnic? A naked picnic.\"\n\n\"Might be a little cool,\" Lisa replied. \"But let's give it a try and see.\"\n\nThey dug through the food and settled on cheese, crackers, summer sausage, and some fruit. The day was actually fairly warm - surprisingly so for October. Lisa guessed the temperature was actually only about seventy-two or so, but if the wind stayed down, in the sunshine it probably wouldn't seem too cold to be undressed. And anyway they could warm up later in interesting ways. They carried the food and the blanket outside and found a flat spot in the sunshine which was somewhat protected if the breeze decided to increase.\n\nThey sat cross legged and facing each other. Both stared at the other unashamedly. \"I'm really happy you like sex,\" Dan said at one point. \"You aren't afraid to let me know what you enjoy and I really like that.\"\n\n\"Frankly,\" Lisa said, \"I've never understood what there is to be ashamed about. I know a lot of girls - actually a lot more than you might imagine - feel they should wait until they are married. I have no problem with that and, really, for a lot of them I'm sure it's a lot better. Skipping the moral side, if they feel it's something that should only be when they're married, they would be miserable if they gave in earlier. The problem with a lot of them is that they then try to pretend that sex holds no interest for them now. They'd be a lot better off if they just masturbated every day and released the pressure. Now, I don't go around sleeping with just anyone. In fact, never with anyone I'm not in a good relationship with. And, in reality, there haven't been that many. I've never gone to bed with some guy I've just met.\" Dan started to say something, but Lisa beat him to it. \"You didn't count. I've known you for years even if we were not involved that way. If I'm not involved with someone, I still get horny, but then I just, as we said last summer, visit Pa Hand and his five sons. I'll admit, sometimes one of them might bring along a vibrator or some such.\" She and Dan both laughed at that. \"Anyway, I fully expect to settle to one man eventually - right now, I can only imagine that it'll be you.\"\n\nDan said, \"Yes, I really can't imagine you suppressing sex. Anymore than I could. We both enjoy it too much. It's just so nice that both of us are so highly sexed and that we love each other. I know we won't keep up forever the frequency we have been. It's probably not physically possible. But for now I want you every time I see you. Of course, seeing you naked so much helps that along.\" He stared pointedly at her nipples, hard and sticking out from a combination of the cool air and the hot talk. Lisa stared back just a pointedly at his erect cock.\n\n\"Well, I wouldn't worry about the frequency now,\" she said. \"Let's just enjoy it and as long as we don't wear ourselves out totally, let's continue to fuck whenever we want.\"\n\nDan laughed. \"OK for now. But like we said if we live together, there will have to be some limits.\"\n\n\"I know,\" Lisa replied. \"I'm mostly just teasing. We can both put things in separate boxes and when we've got to study, for example, I'm sure either of us could put a lock on the sex box.\"\n\n\"Sort of like a mental chastity belt, huh?\" Dan asked.\n\n\"I hadn't thought of it that way, but yes. Sort of like that,\" Lisa said. \"But right now we don't have to study. Let's get this stuff cleaned up and then you can use and abuse me as you wish.\"\n\nDan kissed her and then they gathered everything up and started back to the cabin. On the way back Dan said, \"Speaking of chastity belts, have you heard about George, who was going off to the crusades? Seems George had a beautiful young wife and he was afraid to leave her alone in England without a chastity belt. But then he got to thinking about what if he were killed? He didn't want his wife left locked inside the belt if that should happen. After all, she was young and beautiful and should probably marry again if he died. So he thought about what he could do and at last decided he should leave the key with the one friend he could really trust, John. He and John had known each other since they were kids and they trusted each other with their lives. So he gave the key to John with instructions not to mention it to anyone unless John received word he had been killed. When the day finally came for George to ride off, he left his tearful wife waving from the castle gate and started down the road. In about twenty minutes he looked over his shoulder and saw a cloud of dust. A rider was fast approaching behind him. He reined in and in a few minutes he could make out John riding hard to catch up. When John was about fifty yards off he yelled, 'Hey, George, you gave me the wrong key.\"\n\nLisa broke out laughing. \"Where do you get these bad jokes?\" she asked. \"You seem to have one for any occasion. And they are all the 'groan' type. And they are all dirty.\"\n\n\"You mean there are other kinds of jokes?\" Dan asked with a straight face.\n\nLisa gave up and contented herself with goosing him as he started up the steps onto the porch.\n\nThey worked together cleaning things up, never missing a chance to rub against each other when they passed. This and their verbal teasing kept both of the young people aroused and in ready anticipation. When they had finally finished Lisa turned to Dan and said, \"Very well, Captain, I'm ready for my punishment.\"\n\nDan responded, \"That you will receive, Wench. Your screams will soon echo across these hills.\" Then he stopped the dramatic tone and said, \"But you'd better make a bathroom stop first. In a few minutes you will find that impossible.\"\n\nThey each took a quick trip to the outhouse and when Lisa came back Dan was waiting with a bag of toys. He led her over to a large tree near the edge of the clearing. \"Not too cold to play outside, are you?\" he asked.\n\n\"I don't even feel cold now,\" Lisa said, \"and I expect things to get warmer. And Dan. Be a little rough with me. I feel horny as hell and want you to really make me feel things.\"\n\nDan nodded in understanding. \"Certainly, Wench. I shall not slack on your correction.\" He used two pieces of soft rope to wrap a number of times around each of her wrists and then tossed the free ends across an overhead branch located about nine feet off the ground. Dan pulled the two ropes tight, forcing Lisa to stretch as far as possible without her feet leaving the ground. He tied them off with her wrists spread a good four feet apart. Next he used two more ropes to tie her ankles apart, forcing her up onto her toes and leaving every part of her body completely exposed.\n\nLisa was not surprised to see Dan take the cat from his bag and then to drag the soft tails across her stretched form. Her nipples were already quite hard and sensitive, but the soft leather caressing them made them really ache. In a minute Dan drew the cat back and began to lightly lash her taut buttocks. The whip felt more like a soft caress at first but Dan increased the severity of the blows and soon each began to sting. As the stinging got harder, Dan switched to other parts of her body, still increasing the strength with each blow. He whipped her back and thighs, her stomach, and her breasts. The strokes began to really hurt and Lisa started to gasp and cry out as they landed. Soon red lines were forming across her more sensitive parts.\n\nDan began to concentrate on her breasts and soon both were red from multiple lashes to the top and bottom as well as the occasional strikes directly onto her nipples. These brought screams, but no safe word. Dan stopped for a minute and, while Lisa hung there watching, went down near the stream below the cabin. He returned in less than a minute, stripping the leaves and bark from a small green willow switch. He flicked the switch, an extremely flexible rod about three and a half feet long, a half inch across at one end, tapering to a very thin shaft at the other end. The slick, peeled surface looked almost wet in the sunlight. Dan hesitated a second. \"This will probably hurt. Tell me if it's too much, OK?\"\n\nLisa nodded. She was obviously getting very turned on from the whipping and Dan noticed her pussy twitch almost uncontrollably. He raised the switch and brought it down with a singing sound across Lisa's ass. A red line appeared immediately and she screamed. Dan waited for her to settle and looked a question at her. He received the slightest of nods in return and once more applied the supple switch. Again Lisa screamed but before it died Dan had added a third stripe. Twice more the switch fell, each time bringing a scream from Lisa, but also sending her to a higher state of arousal. Dan stopped and Lisa's breath was coming in rapid gasps. She managed to get out, \"One more, Dan, I'm almost there.\"\n\nHe raised the switch and then changed his target bringing it down across her breasts right at the edge of the nipples. This scream was louder that the others and Lisa started convulsing into the throws of a hard orgasm. Dan let her come down and was surprised when she said, \"That hurt like hell, but it really made me come. I don't think I've ever come that hard just from the whip before. But don't stop yet. I'm still horny and I want more. Just don't mark me too badly.\"\n\nDan put down the switch and picked up the cat again. He landed several medium blows on Lisa's tight ass, each bringing a sharp intake of breath and a sigh. He switched back to her breasts, bringing the whip up underhanded to the bottom of her tits. He changed to her pussy and applied several strokes directly between her legs. During this treatment, L:isa came twice more. Dan stopped and went to his bag. He returned with the two nipple clamps and let the first close over Lisa's already tortured right nipple. She cried out, but then bit her lip. He attached the other to her left nipple and once more started applying the cat. He whipped her harder and harder, making her strain against her bonds. Finally he delivered a series of especially hard lashes to her ass cheeks and then dropped the whip and moved between her legs. With Lisa spread so widely and tightly, Dan was at just the right height to plunge his hard dick deeply inside her. And that is exactly what he did. Lisa began to come the instant he penetrated her and then came again before Dan did himself.\n\nDan removed the clamps, bringing another cry as the blood returned. Next he released her ankle restraints and then her wrists. Lisa lowered her arms and rubbed her strained wrists. \"God, that was hot, Dan. I couldn't take that kind of whipping very often, but it really turned me on.\" Then she added, \"But I'm afraid we'll have to be a little careful with that switch. It's a really intense kind of pain and it did really do something to me, but it still hurts and looks like it almost broke the skin.\"\n\n\"I know,\" Dan replied. \"I hope it wasn't too hard.\" Lisa shook her head. \"I held back a lot but this thing is wicked and it doesn't take much. You know when Lewis and Clark made their trip something happened a few weeks after they left that required several of the men to be disciplined. They used willow switches - probably heavier than these, though - and made the men run a gauntlet naked. And they were trying to really hurt, not just tease. So this is obviously harsh enough for real discipline of hardened frontier men. Still, I think I'd like you to try it on me, too. Just be a little careful.\"\n\n\"Well, I just might,\" Lisa said. \"And I've got another toy I'd like to try on you. Feel like being on the receiving end now?\"\n\n\"That sounds good to me,\" Dan responded. \"And, Lisa. I'm pretty horny, too. So don't you be too gentle either. OK?\"\n\nLisa gave him a wicked smile. \"After the way you laid that switch across my tits, you think I might be too gentle? You're in for a real surprise, Buster. Come here.\" She used a piece of rope to tie Dan's hands behind his back and then said, \"Now wait here a minute while I run get something.\"\n\nShe darted back to the cabin and in a minute had returned with a small bag of her own. \"OK, now spread them and bend over.\" Dan spread his legs and bent forward from the waist. He looked over his shoulder at Lisa while she approached him from behind. He could see she had something in her hand and in a few seconds discovered it was lube when her cool, slick finger penetrated his anus. Lisa worked the slick gel in and out and all around his tight opening and made sure several gobs found their way inside. Then she removed her finger and pulled something else from the bag. This was a string of five anal beads which she held up in front of Dan for him to see. \"One of the girls at school lent these to me. She raves about them and insists they will drive a man up the wall, so I want to find out.\" She applied more lube to the beads and began to insert them, one after another, into Dan's anus, pushing each as deep as possible with her finger. The beads increased from about three fourths of an inch in diameter to an inch and a quarter and Lisa had to push to make the last of them go inside. A T-shaped handle was left dangling outside.\n\nDan's cock was rigid and rock hard from the stimulation and Lisa helped it along by tickling his balls. \"OK, Lover, you can stand up now.\" She untied his hands from behind his back but soon had him arranged much as she had just been: Stretched into a taut X between the tree limb and the ground. She continued to tease him, playing with his cock and balls, kissing and biting his nipples, and occasionally tugging lightly on the string of beads.\n\nFinally she moved back and picked up the two nipple clamps. She applied these, tightening each until Dan gave out a small grunt. She then picked up the cat and began to whip him. Much as he had done, she began lightly stroking his ass with the soft leather. She increased the strength of the strokes and moved over his body making sure the lash landed everywhere. Soon red lines began to appear and she had Dan crying out at each stroke.\n\nAfter a particularly severe series of lashes, Lisa put the cat down and picked up the willow switch Dan had used on her. She swung it sharply through the air several times, each swing bringing a singing sound and causing Dan to cringe. After several such practice swings she brought the switch squarely across Dan's bare buttocks. An immediate red line appeared accompanied by a sharp scream. But, as Lisa had done, he refrained from using the safeword. She added two more lines on his ass and then sent a stinging blow across the lower front of his stomach, just above his jutting cock. Her target then changed to the insides of his thighs and each of four strokes was highlighted by a sharp scream.\n\nDan was straining against his bonds and his breath was coming in hard gasps. \"I think you get the idea of the switch,\" Lisa said as she dropped it and once again picked up the cat. Dan continued to breathe in hard gulps and just nodded his head. Lisa resumed her attack with the multitailed whip, landing a number of blows across both the front and back of Dan's tightly bound body. Finally, when it appeared Dan was beginning to weaken a little in his struggles, Lisa dropped the cat also and then knelt in front of his bound form. She let her lips and tongue just barely touch his hard and straining member and her hands began to roam across the reddened welts on his ass. For the next ten minutes she continued to tease with her tongue, lips, and hands. She tugged on the weighted nipple clamps, she tickled the exposed underside of his balls, she pulled gently on the string of anal beads. Her tongue swirled around the head of his hard cock, lightly flicking into the small opening, and at irregular intervals she pulled the head deep into the back of her mouth. Dan was moaning and straining hard against his bonds, trying to get his cock deeper into her mouth and trying to rub against her any way he could. Finally she opened her mouth wide and pulled his cock far back into her throat. At the same time she began to pull gently but firmly on the string of beads. Just as the first bead popped out of Dan's tight rectum he began to come. Lisa sucked hard, swallowing his juices, and at the same time pulled harder on the string of beads. One by one the other beads popped out and Dan exploded in spurt after spurt. When at last he stopped he hung limply from his wrists and Lisa used her tongue to clean his softening cock.\n\nWhen she released him, Dan stumbled a little and then pulled her into a tight embrace. \"Wow! That was incredible,\" he exclaimed. \"I don't think I've ever come that hard. We're going to have to get a set of those beads of our own. Have you ever tried them on yourself?\"\n\nLisa squeezed him back. \"No, but the idea sounds fun. They certainly did seem to have an effect on you.\"\n\n\"That's putting it mildly.\" They continued to hold each other for a minute and then both seemed to suddenly become aware that it had begun to cool off while they had been playing. Dan shivered and looked up at the sky. It had become cloudy and there seemed to be a dark line of clouds approaching from the northwest. \"I think maybe October is finally arriving,\" he said. \"We've going to have to get dressed or get inside and warm the place up.\"\n\nLisa was also aware of the change in temperature and noticed the breeze which was now coming up. \"Yeah, I guess you're right. I love being naked with you, but we shouldn't be stupid about it.\"\n\nThey picked up their toys and, with their arms around each other, headed back inside the cabin. Once there they began to get dressed and Lisa said, \"Let's go for a little walk. I'll bet it's going to start raining before too long and I'd like to go out one more time first.\"",
        "\"I'll bet you're right. We can go out for a little while and if we don't go too far we can probably make it back before it starts to rain too much.\" Dan had pulled on jeans and a thick sweater. Now he reached for his hiking boots. When he and Lisa were both dressed - both in jeans and sweaters - he got their jackets from the wall hooks and the couple started out the door.\n\n\"Let's go up that way,\" Dan said, pointing along the stream behind the cabin in a direction different from their previous trips. There seemed to be a path which followed the creek downstream into the woods. As they followed the narrow track the stream began to fall farther and farther below them and in about a quarter mile they were skirting the face of a steep hill - almost a cliff - and looking far down at the stream and out across a series of hills on the far side. They came to an overhanging rock ledge sticking about four feet out from the hillside.\n\nLisa pulled Dan in under the overhang and into a hot, deep kiss. When they broke the kiss, both spoke at once: \"I love you.\" They laughed and Dan sat on a boulder sticking partly out of the hillside below the overhang and then pulled Lisa down onto his lap. After a few more long kisses, they just held each other and watched the dark clouds which were now moving rapidly down the sky on an increasing wind. The temperature was falling rapidly and any trace of blue was now gone from the sky.\n\nLisa snuggled against Dan and he let his hand wander under her jacket and sweater. As his fingers closed around and squeezed one of her nipples she gave a little cry. \"Ouch! My tits seem to be a little sore.\"\n\nDan quit squeezing, but kept his hand over her breast. \"What do you supposed could have caused that?\" he asked playfully.\n\n\"Well, I can think of a couple of things,\" Lisa answered. \"But whichever it was I can definitely say it was worth it.\" She kissed him again and snuggled closer. They sat and watched the clouds, Dan gently stroking her breasts under the sweater and Lisa pressing back against him.\n\nSuddenly a gust of wind carried a few cold raindrops under the ledge and onto their faces. \"We'd better start back,\" Dan said, \"before we end up getting soaked.\" Then he added, \"besides, if we get a fire going in the cabin we can get rid of some of these clothes again.\"\n\nLisa stood up, letting his hand slide out from under her sweater. \"That, I'm in favor of,\" she said and pulled him to his feet as she started back along the trail.\n\nBy the time they reached the cabin the rain had begun to fall harder and the air had chilled even more. As they climbed onto the porch and shook off the water, both noticed the sky had darkened considerably. They went into the cabin and found it almost too dark to navigate at first. Lisa lit one of the oil lamps while Dan took off his jacket. The cabin air was still far too cold to remove anything else and Dan set immediately to starting a fire in the fireplace. When he had a good blaze going, he stood and said, \"It's getting towards suppertime. Suppose I start a fire in the stove, too, and warm the place up enough so we can make it a perfect day with three naked meals.\"\n\n\"You have a one track mind,\" Lisa shot back. \"And am I ever glad it's on the right track. Go ahead and I'll see about heating some of that potato soup we brought. It ought to go well with this kind of weather.\"\n\nLisa busied herself opening cans and starting the propane stove while Dan started a second fire in the iron stove. By the time the soup was warmed, the stove had combined with the fireplace and the temperature inside the cabin was becoming very warm despite the driving rain striking the outside. Lisa turned the soup down to a simmer and set bowls on the table, along with some bread. Then she turned to face Dan and, pulling her sweater over her head, said, \"OK, ready to undress for dinner?\"\n\n\"Of course,\" Dan replied, pulling off his own sweater. In a minute both were once more completely naked. After a long, hot kiss Dan said, \"Lisa, I bought something I'd like you to wear tonight. OK?\"\n\nLisa struck a sexy pose and over lowered lashes said, \"You mean you have something that will look better than my own natural charms?\"\n\nDan looked at her and quietly said, \"Yes, actually. I think that, even as wonderful as they are, this will improve them.\"\n\nLisa looked a little puzzled. She wasn't hurt by the remark - she knew Dan liked the way she looked - but she wondered what he had found. Some lacy undergarment? But that didn't really seem like Dan. \"All right,\" she finally said. \"What is it?\"\n\nDan stood looking at her a second. \"It's a surprise,\" he finally said. \"Close you eyes while I get it out.\"\n\nPuzzled, Lisa closed her eyes and waited. Dan went to his pack and dug into one of the pockets. He pulled something out and then went to stand facing Lisa. He took her left hand in his, raised it and said, \"OK, open your eyes.\"\n\nLisa opened her eyes and looked at Dan. Then she let her gaze drop to where he was holding her left hand in his and in his right was a silver colored ring with a flashing stone. \"Lisa, will you marry me?\" Dan asked in a quiet, sure voice.\n\nFor a second Lisa froze. Then a smile broke across her face. Later Dan was sure he had seen the light from that smile refract in the diamond. \"Yes! Yes! Oh, Dan, yes!\"\n\nDan slipped the ring on her finger and their arms locked around each other. For long minutes they held a deep kiss, their love an almost visible thing flowing between them. Then they moved, somehow it seemed without even using their feet, over to the bed. For the next twenty minutes they were lost to the world, sensing only each other. A bear could have broken into the cabin, a marauding herd of bandits could have stormed the room, or an earth quake could have shaken the building from its foundations and neither would have noticed. Fortunately none of these occurred. When at last they did come back to reality, Dan observed, \"A naked proposal does save time, doesn't it?\"\n\nLisa laughed. \"Naked proposal. Naked breakfast. Naked lunch. Naked dinner. Naked dinner! I forgot all about the soup.\" She leaped up and ran to the stove where she found the soup still simmering and none the worse for the delay. She came back to Dan and put her arms around his neck. \"I love you.\"\n\n\"Almost as much as the soup,\" he quipped. Lisa started to protest, but he stopped her. \"I'm just kidding. Come on, and let's make it a complete naked day.\"\n\nLaughing, they made their way to the table and sat down to eat. From the attention they paid to the food, they could have been eating puppy chow. Both were lost with each other and with watching the oil light sparkle on Lisa's diamond. When they finished, they quickly moved the dishes back to the sink and soon were again busy on the bed, once more lost completely in each other.\n\nDan blinked his eyes open. He must have fallen asleep and, yes, Lisa was sleeping, pressed tightly against him. He looked towards the fireplace and discovered the fire was still going but had died down to a small flame. A rattle of rain struck the window and a gust of cool air sent shivers down his back. He tried to slip his arm out from around Lisa's shoulder as smoothly as possible, but her eyes blinked open. She smiled up at him and pulled him down for a kiss. Then she, too, shivered and said, \"It's getting cold. How long were we asleep?\"\n\nDan pulled himself free and started towards the fireplace. \"I wasn't watching the time, but I'd guess about an hour. Let me get the fire going again and get this place warm. Or would you rather get dressed?\"\n\n\"No way, Lover,\" Lisa shot back. \"I intend to keep you naked and wear you out tonight. Oh, Dan, I love you and I am definitely hot for your body.\"\n\nDan was poking the fire to a new life and looked at her over his shoulder. \"We'll see who wears out first, Beautiful.\" Then he added thoughtfully, \"You know, when we're married we'll probably be able to save a lot of money on clothes since we don't seem to wear them much.\"\n\nLisa laughed. \"Are you complaining?\" Dan shook his head. Lisa went on, \"I didn't think so. It feels so, I don't know, so 'right' being with you like this.\"\n\nThe fire was now rapidly growing and Dan added another couple of logs. He also opened the door of the iron stove and shoved in some more wood and adjusted the damper. He returned to Lisa and put his hands on her shoulders. \"I intend for it to stay 'right' for a long, long time,\" he said. He kissed her then and when they finally pulled apart both were beginning to breathe a little faster once more. Lisa stroked Dan's hardening cock. He sucked in his breath and said, \"You do turn me on, Wench.\"\n\n\"I hope so,\" Lisa murmured. \"And I plan to keep on doing so.\" Another quick kiss and Lisa looked up at Dan and innocently said, \"Since we are going to be married, don't you think maybe it might be a good idea for you to start practicing a little wife beating?\"\n\nDan laughed. \"You mean you feel like some more games? You're not too sore already?\" he asked.\n\n\"Well, I do hurt in quite a few places,\" Lisa replied, \"but it's a good hurt. Yeah, I think I would like another session if you don't damage me too much. But make me feel it, Dan. I'm still not completely sure about this - that there's not something a little wrong with us for liking this kind of thing - but I really do get turned on by it. Both sides of it. You do, too, don't you?\"\n\nDan looked directly into her eyes and said, \"You know I do. And I don't think there's anything to worry about. So some people might consider it a little kinky or even a little worse. But we like it, it turns us on, and no one is ever really hurt. I haven't gotten the urge to go any further, have you? I mean, you're no more interested in getting branded - or in branding me - or anything like that than you were when we started this stuff last summer, are you?\" Lisa shook her head. Dan went on, \"It's not like we're being drawn into some dark activity that is controlling our lives. It's just fun games. And if it seems strange to other people that we enjoy being tied up and punished, well, it seems strange to me that a lot of people enjoy chasing a little white ball around with a stick and trying to knock it into a hole in the ground.\"\n\nLisa broke out laughing. \"Well, I'm not sure you can directly compare what we do with playing golf. But then, again, maybe you can. I guess as long as no one gets really hurt - or wants to be - and as long as it doesn't take over the rest of our lives, I don't really see anything wrong with our games. I guess it's just one of those kind of things that, it seems so wonderful, there must be something wrong with it. Anyway, I'm ready for you to get in a little advanced wife-beating practice.\"\n\n\"In that case,\" Dan replied, \"let's see what we can do.\" He began by tying her hands together in front of her. He then had her bend over the edge of the bed and he applied lube to her rectum, pushing his finger deeply inside. Lisa was not surprised when he picked up the string of anal beads and began to insert them, one at a time, inside her ass. The sensation of each bead slipping inside in response to Dan's pressing finger made her pussy twitch and a flood of moisture start. When all five beads were imbedded deeply inside her tight bottom, Dan pulled Lisa to the center of the room and tossed a rope over one of the exposed ceiling joists. He tied this to her bound wrists and used it to pull her up onto her tip toes and then tied off the other end. He found a short stick and used it as a spreader bar to open her legs until her ankles were two feet apart and her toes were barely touching the floor. Her arms and shoulders strained, holding almost her entire weight.\n\nDan then dug out two lengths of velvet ribbon and used them to encircle the base of each of Lisa's breasts. He tied these bands and soon her breasts became taut, engorged mounds, the skin stretched tightly and her nipples sticking out in hard nubs. He used his fingers to tease her slit and gently squeeze her now-hard clit. Next he took the ends of the tails of the cat and used them to lightly sting her breasts, landing many lightly burning lashes on their tops, sides, bottoms, and the ends of her sensitive and already sore nipples. The action was very obviously making Lisa quite aroused. He switched targets and lashed her open pussy lips and her clit itself. Occasionally he gave a gentle tug on the string of beads. At one point he stopped and retrieved a ten inch dildo, covered with a series of small, rubber protrusions, not spikes, exactly, but pointed and flexible. He worked this almost all the way inside her flooded pussy and then flipped a switch, causing it to vibrate.\n\nDan went to the counter and returned with a small iron frying pan. \"One more thing and we'll give you a test, Woman,\" he teased. He attached the pan to the end of the string of anal beads. \"Now you are to use your muscles to see than neither of these two things slip out, understand? If either of them falls, you will be really punished.\"\n\nLisa nodded and bit her lip. She was already almost on the verge of coming and she knew that an orgasm would probably make her lose control for a second. The pan on the end of the beads was heavy and it was taking all her concentration to clamp down on her anal muscles enough to keep it from pulling the string free. And the vibrations of the dildo threatened to cause spasms in her pussy which would surely force the intruder out.\n\nDan picked up the willow switch, but held it near the thin end, leaving only about ten inches of very thin branch projecting. He used this to lightly sting her breasts and nipples. He struck, not to really hurt, but to startle, in an effort to make her lose control. Then he switched to the cat and the lashes changed in intensity to where they were causing real pain. Lisa jerked at each stroke, straining at her bonds, and often crying out, but she managed to hold the two devices inside her. Then Dan stopped and began to lick and suck at her swollen nipples. The velvet ribbons were still making her breasts hard and sensitive and the effect of his tongue on her hard nipples was magnified ten times. Lisa was almost unable to control herself when Dan suddenly pulled back and once again struck her ass with the cat in a hard, stinging blow. It was followed immediately with several others to her ass, breasts, and pubes, pushing her into the uncontrollable throws of an intense orgasm. The first bead popped free and Lisa clamped down, but the convulsions in her pelvic region overrode her control and the other four beads and the dildo followed the first bead and Lisa gave into an incredibly hard - and loud - orgasm.\n\nWhen her contractions had started to subside, Dan shook his head and said, \"Couldn't control yourself, I see. Well, we'll just have to give you some real punishment now, won't we?\"\n\nLisa was still shaking and could only wonder what he had in mind. Dan untied the velvet ribbons and the returning blood brought cries from the suspended girl. He left her legs spread, but released the ropes holding her wrists. He helped her over to the end of the table and let her use her bound hands to steady herself while he set about arranging a new device. Dan took two brooms that were standing against the wall and laid them side by side in opposite directions. He used some rope to bind the two handles together and then to fasten a blanket in a tight roll around their length. He took the finished product over and bound one end to the vertical bed post, about three feet off the ground, and the other end to the end of the table. He now had a padded cylinder, about five inches in diameter and four feet long, suspended horizontally three feet off the floor. He released Lisa's wrists and, leaving her legs spread by the bar, placed her facing the cylinder. Now that her breasts had had a short rest, he once more tied the velvet bands tightly around their bases and then had her bend over the padded bar and tied her hands to her ankles, effectively bending her in half.\n\nThe bar was high enough that Lisa had to stretch her toes to stand and, with her wrists bound, could hardly move. Dan now applied the weighted nipple clamps, tightening them until Lisa thought she couldn't stand any more. When he let them hang, the upside down direction of her breasts resulted in a whole new set of sensations as the heavy weights pulled her already sore nipples, stretching them tightly. Dan reinserted the vibrating, spiked dildo into her wet pussy and then once more picked up the cat. \"Now I'll show you how a wife is properly beaten,\" he said, bringing the cat down across her exposed ass in a hard, sharp swing. Dan continued to whip Lisa on the ass, her back, her sides, and the backs of her legs, sometimes letting the tails strike directly between her open pussy lips across the vibrator. After fifteen minutes of this treatment Lisa had come three more times, but Dan was still not ready to quit. He stepped up behind her and in a single long, slow stroke pushed his hard cock into her rectum, not stopping until it's entire length was buried deeply inside her taut bottom. Lisa had begun to come as Dan slid his length into her and now, as he began to move out and back in, she continued into one long, drawn out orgasm, lasting until after Dan had spurted his load deep inside her tight rear.\n\nWhen they had recovered, Dan released her and removed the clamps and ribbons from her breasts. When he had all her bonds removed Lisa commented, \"Now that was definitely a proper wife beating.\"\n\nDan replied, \"And that's just an example of what you'll get if you don't follow my every instruction and whim exactly, Wench.\"\n\n\"In that case,\" Lisa said, \"I will certainly endeavor to remain a totally and completely independent woman.\"\n\nDan laughed and added, \"Well, maybe I should also say that it's also an example of what you'll get if you do follow my every instruction and whim exactly.\"\n\n\"I certainly hope so,\" Lisa murmured appreciatively.\n\nOnce more the couple embraced and Dan felt Lisa almost flow against him. \"Tired?\" he asked.\n\n\"Um Hum,\" she nodded. \"I feel almost like jello.\"\n\n\"Maybe we should get you cleaned up a little and then sleep for awhile.\" Dan had placed a kettle of water on the wood stove earlier and now he used it to fill a basin. He took a wash cloth and wiped Lisa and himself and them dried them with a large towel. \n\nWhen he had finished, Lisa said, \"Dan, tie me to the bed tonight.\"\n\n\"You'd rather do that than settle in front of the fire again tonight?\" he asked.\n\nLisa stopped and thought a second. \"I'm not sure. I really love being tied down so you can do whatever you want to me, but it was awfully nice over there in front of the fire. How about this. We'll sleep in front of the fire, but tie my hands behind my back.\"\n\nDan grinned. \"I expect I can arrange that.\" They once more dragged a mattress and blankets over in front of the fire place and placed one of the table benches on its side to form a back to their nest. Dan banked the fire with several large logs and did the same for the wood stove, using the damper to slow the fire. He blew out the oil lamp, leaving the cabin lighted only by the flickering flames from the fire place. Hard gusts of cold rain frequently blew against the windows and the rest of the world seemed a long way off.\n\nHe then used a piece of soft rope to bind Lisa's hands behind her and helped her down onto the blankets. \"If you like being tied so much, I'll have to see about keeping you like that a lot on nights,\" he said. But then he added, \"But not all of them. Sometimes I want you to tie me to the bed instead.\"\n\nHe leaned over and kissed Lisa and she said, \"I think I like both sides of that arrangement. Dan, I suppose we're bound to get a little tired of all these games someday, but for now I can't seem to get enough. But whether the whipping and bondage ever gets old, I know I'll never get tired of making love with you. Not if we live to be two hundred. I love you so much. And as for tonight. I know you're in charge - I can't do much like this - but I expect to be soundly fucked several times before morning.\"",
        "Dan kissed her again. \"Don't worry about getting tired of the games. If that ever happens, well, we'll see about it then. But remember, it doesn't look like Tom and Mary have tired of it in all these years. That dungeon is well used. And, Darling, I love you just as much. As for tonight, well, I expect you won't be disappointed. In fact I think I'll start right now. He bent to kiss her breasts and suck at her sore nipples and soon Lisa was responding, trying to rub herself against him and thrust her hips towards his. Soon he entered her and then spent the next several minutes slowly thrusting in and out until their passion overtook them and they once again strained against each other in loving climax.\n\nThree more times before dawn, Dan took her and each time Lisa was as eager as he. After the last time, as gray light was coming to the windows, Dan said, \"Many more and we'll be in the same shape as Aunt Mary and Uncle Tom in their honeymoon picture: me too tired to stand up and you too sore to sit down.\"\n\nLisa giggled. \"Then let's just be sure to practice a lot and stay in shape,\" she teased. \"Untie me and build up the fire and we can have one more naked breakfast before we have to leave.\"\n\nAfter they had eaten they cleaned the cabin. The sky was still overcast, but the rain had settled into a slow, cold mist that would probably last at least all day. Staring out the window, Lisa said, \"I love weather like this, as long as I don't have to be out in it all the time. But it would be nice to see a little sun again so I can see if this really sparkles.\" She held up the diamond on her left hand.\n\n\"Of course it will sparkle,\" Dan asserted. \"It said so on the outside of the Cracker Jack box when I got it.\"\n\nLisa gave him a playful swat on the ass. \"I don't believe a word of that. This is obviously the most beautiful ring in the world. But I wouldn't care if you had gotten it out of a Cracker Jack box as long as the proposal is real.\"\n\n\"It's definitely real,\" Dan assured her. \"Lisa, you are the most wonderful thing that's ever happened to me and I don't intend to ever let you go. I love you.\"\n\nLisa smiled at him, pulled him against her side, and gave him a quick kiss on the cheek. If she thought about it, it certainly seemed strange to be standing here, naked, beside a naked man, and doing common things like watching the rain through the window. But then, it also seemed natural. Six months ago, even though she was comfortable with her own body and with being nude, she would never have imagined doing something like this and could never in a million years have guessed how normal it would feel. Then she thought to herself, \"It is natural. And I want it to be natural for the rest of our lives.\" She squeezed Dan to her again and settled her head against his shoulder.\n\nLater that morning they made love one more time, long and slowly enjoying each other before the fire. But finally it was time to be sure the fire was out, close the cabin and start back. When they had the car loaded and stood on the front porch locking the cabin door, Lisa pulled Dan towards her and said, \"This has been the most wonderful weekend of my life. Thank you.\"\n\n\"No, thank you,\" Dan replied. \"You've made it the most wonderful of my life too. But I have the feeling there will be a lot of others at least this good in our future. \n\n    Cousin - Ch. 24\n\nThe next few weeks were especially busy for the couple. The fall semester was well into it's full swing and both Dan and Lisa found that being so in love used more of their time than they would have thought. They could no longer wait for two weeks to see each other and so each weekend one or the other made a trip. In addition, two of these weekends were taken up by trips to parents. They had called relatives the night they returned from the cabin to announce their engagement and of course both sets of parents wanted to see them. At least they had the enthusiastic support of both sides. Everyone knew everyone else and everyone was well pleased with their choice of each other. Still the trips were somewhat of a strain. Neither was ready to acknowledge that they needed only one room and thus both put on the pretense that they didn't sleep together.\n\nUnknown to the couple both sets of parents saw through their acting and had a hard time playing along. As Lisa's parents waved goodby while they drove off, her mother commented, \"I'll bet she's already got her hand on his pants. The poor girl tried so hard not to shock us and it was so obvious she was ready to rape him any second.\"\n\nHer father laughed. \"Sort of like her mother, huh?\"\n\n\"Well, maybe enjoying a good rape is genetic,\" she replied, letting her own hand begin to explore her husband's crotch. Then she added, \"And since we have an hour or two before dinner time ...\"\n\nHe kissed her and took her hand, leading the way back inside. \"Just an hour or two? Well, I suppose we can fit in a quickie.\" Laughing, they started upstairs.\n\nDan and Lisa had decided to set a date next June right after Dan graduated. That left a full semester, but both assumed that things would be a little easier with them living together in the spring. Lisa had told her parents that she was transferring to Dan's school, but not about living arrangements. She didn't really think they would object, but saw no need to mention it unless it came up.\n\nWith school work and family visits and a lot of other things, Dan and Lisa found that even when they were together they didn't have much time for bondage games. That didn't mean they skipped sex. Far from it. It did seem to Lisa that whenever circumstances allowed she could hardly keep her hands off Dan and that he seemed to be the same. \"Oh, I really hope this feeling lasts,\" she thought to herself more than once. And usually she followed that thought by \"And I'm going to do everything I can to see that it does.\"\n\nOne weekend in the middle of November when Dan arrived at Lisa's apartment - after their typical half hour \"greeting\" - Lisa said, \"I know you've been expecting me to come over to your place for Thanksgiving weekend, but tell me what you thing about this. I was talking to Aunt Mary yesterday - she seems as excited about this wedding as if she were my mother - and she invited both of us up to see them. Is that all right with you?\"\n\n\"Sounds great. That way we won't have to fix our own dinner and since they know we sleep together we can find something more interesting to do while the turkey is roasting.\"\n\nLisa swatted his ass. \"You're hopeless. But you're right. It will be nice to be able to just relax together again. Maybe we'll even get lucky and get a chance to raid their dungeon.\"\n\n\"I definitely wouldn't mind that, but I wouldn't count on it either. Someday, we'll have to have one of our own.\"\n\n\"Um Hum,\" Lisa agreed. \"I'd definitely like that. Anyway, I told her I'd check with you, but that I thought we probably could. She said anytime would be fine. When do you think you could get away?\"\n\n\"Well, I'll probably have to go to a class Wednesday morning, but usually afternoon classes are canceled the Wednesday before Thanksgiving. Do they do that over here, too?\"\n\n\"Yes,\" Lisa replied. \"In fact, most professors cancel everything Wednesday. I expect I'll be free after my class late Tuesday.\"\n\n\"I expect I'll have to go to that one Wednesday morning, but you could drive over then and we could go up to their place right afterwards. That would get us there by two thirty or three.\"\n\n\"OK. Oh, Aunt Mary also said that they had some news for us, too. I don't have any idea what, do you?\"\n\n\"Nope,\" Dan answered. \"I guess we'll just have to wait and find out.\"\n\nThat Wednesday afternoon found them heading up into the mountains under a clear blue sky dotted with a few white clouds. The air was cold - in the thirties - but the road was clear and by a quarter of three they were pulling into the farmhouse yard. Tom and Mary greeted them with hugs and a handshake and led them inside to where a welcome fire blazed in the big fireplace. \"Just leave your bags in the hall and you can take them upstairs when you're ready,\" Tom said. \"Now sit and tell us all about your plans. We want to congratulate you both again. I don't think either of you could have made a better choice.\"\n\nThey talked about the wedding date and other plans and then, after a few minutes, Mary said, \"I'm going to have to make another apology and ask you guys to forgive us for being bad hosts again. It seems that when I invited you up here I didn't know that someone - not mentioning Tom's name - had made arrangements for us to meet with a financial advisor on Friday.\"\n\n\"I'm sorry about this, too,\" Tom put in. \"He's normally in New York and is back home over in Johnsondale just for the holiday weekend. He's done work for us since he lived here before he went up north to the city and he's really good. He agreed as a special favor to see us on Friday and I really can't ask him to change now.\"\n\n\"So,\" Mary went on, \"I'm afraid we're going to be gone all day Friday. Probably won't get home until after ten or eleven. If you two don't mind, you can use the house like it was yours and find something to do while we're gone.\"\n\n\"Oh, Aunt Mary,\" Lisa said, \"don't worry about it. With school and everything, Dan and I haven't had too much time together anyway, so we really don't mind.\"\n\nThey spent the next hour talking. At one point Mary asked, \"Have you made any long range plans? I know, Lisa, that you have another year to go and, Dan, you said you were going to grad school, right?\"\n\n\"Un huh,\" Dan answered. \"You know Lisa is transferring next semester and it looks like she'll still be able to finish next year. I've been offered an Assistantship for next year and I expect I'll keep one while I finish. I'm guessing I can get my doctorate in three to four years.\"\n\n\"What are you planning to do then?\" Mary asked.\n\n\"What I'd really like to do is teach college. One of my professors has already told me he plans to retire in about four years and indicated that if I'm interested he would help me get in line for his position when that happens. That would be ideal if we can bring it off.\"\n\n\"What about you, Lisa?\" Tom asked.\n\n\"Well, like Dan said, I should finish next year. I haven't made up my mind for sure, but probably I'll go on for a Master's. You know I've already sold some programming. It's something I like and seem to be pretty good at, so I expect I'll keep doing it. If I'm lucky I can stay independent and just write programs on contract. That way it doesn't matter where I am so I can go wherever Dan's working.\" Then she added, \"Of course, if Dan gets the teaching position at school, there are also a lot of companies where I could work that are located in the area.\"\n\n\"The important thing,\" Mary said, \"is that you like what you're doing and where you're doing it. When we were first married your uncle worked for an aircraft firm out in California. The pay was great and for four years he continued to get advances and raises. But we hated California. Kept missing these green hills. You know they call California the Golden State because it's dry as a bone. Anyway, we finally decided it wasn't worth it. He quit and we moved back here to the family farm. We aren't really true farmers either, so Tom did some consulting jobs and then started to write articles and training manuals.\"\n\n\"Yeah,\" Tom put in, \"I found I really like that and it still let us live up here. I can't imagine we could have found a better setup.\"\n\nThat night it seemed quite natural when Dan and Lisa went together to the room they had shared on the last visit. They were so comfortable with their aunt and uncle that they felt no embarrassment whatsoever. Lisa spent that night bound to the bed and even though they tried to keep as quiet as possible, Lisa wouldn't have been surprised if Tom and Mary had presented them a full count of the number of shattering climaxes she had reached. But nothing was said at breakfast about the nocturnal activities. Actually Mary was wondering if Dan and Lisa had heard the two loud finishes she and Tom had had.\n\nLisa helped Mary in the kitchen that morning while Dan and Tom attended to a couple of things outside. There were some fallen trees that needed clearing and it was much easier with two large men than it would have been with just Tom himself. Around three o'clock everyone sat down to a traditional Thanksgiving turkey dinner. \"It's nice to have more than just the two of us when you go to such trouble for a big meal,\" Mary commented. \"We always have a big dinner anyway, but sometimes it seems a little silly for just the two of us. Not to mention we have turkey for the next week and a half.\"\n\nAfter dinner was finished and the dishes cleared away, everyone went in by the fire again. The day had again been clear and cold, but the forecast had indicated that by Friday night there might be light snow moving in. As the four of them sat around talking, the subject turned to the farm itself. At one point Dan asked, \"I know the farm has been in the family for well over a hundred years, but I've never really heard how that came about. Do you have any idea?\"\n\nTom quickly said, \"You don't know what you just asked. This is a favorite subject of Mary's and I'm sure she'll be glad to tell you in detail.\"\n\n\"Now, Tom,\" Mary chided, \"if he didn't want to know he wouldn't have asked. Besides someone should keep the family history alive. I've found a lot of old family papers and diaries and so on and have a fair idea of what's happened. But, seriously, Dan and Lisa, if you get bored, let me know. I find this fascinating, but you might not. You're family, so don't be afraid to say 'Enough!'. I really won't be offended.\"\n\nBoth Dan and Lisa answered almost together.\n\n\"Don't be silly, Aunt Mary. I'd love to hear it.\"\n\n\"Don't worry. I'm fascinated by this, too.\"\n\n\"OK, don't say I didn't warn you,\" Tom said. Mary gave him a playful swat but their smiles showed both were kidding.\n\n\"All right,\" Mary began. \"The farm was originally bought by your great great grandfather, Dan, in 1867. His name was Jamie Duncan and he arrived here from Scotland with his new wife, Marnie, in 1867. Both were just twenty-two and had grown up on neighboring farms in the Highlands. It was right after the Civil War had ended and there was land available at reasonable prices up here because so many families had been either largely or completely wiped out. They bought the place and started to farm. They eventually had two boys and a girl: The girl, the youngest, married a soldier and moved west and everyone seems to have lost track of her. The oldest, a boy named Brian, worked on the farm until the Alaska gold rush. He went off to the Klondike to make his fortune in 1898, but died up there the next year. The middle boy, John, was your great grandfather. He stayed on the farm and inherited it when Jamie and Marnie died in 1897. They were both swept away in a flash flood trying to rescue someone else.\"\n\n\"Anyway, John married a local girl, your great grandmother, Nancy, and they had a boy and a girl. The girl was your great aunt Elizabeth and the boy was your grandfather, Richard. He married your grandmother Ellen in 1925 and they had four kids. Richard never left the farm, but Elizabeth married and moved over to Ohio. Their oldest boy, James, was killed shortly after D- day. His sister, your aunt Patricia, still lives over in the next county, as you know. Your father, David, was the third of their children and as you know, Dan, he decided farming was not for him. Tom was the youngest and you know we moved here in 1966 when Richard and Ellen retired and moved south.\"\n\n\"Now that the state and national forests have most of the land, there aren't many other people up here, but when Jamie and Marnie were farming the place, there were a fair number of other farms in the area. Today, farming up here isn't really very practical, but we've loved the place.\"\n\n\"If you really are interested in the family history, there is a whole collection of papers in the study. You might like to look through them some time. Of course it isn't really my family: it's Tom's. You know my family lived a hundred miles from here and I met Tom at college, the same place my sister, Janice, met your father, Lisa. But I've been seriously thinking about writing a novel about Jamie and Marnie - their diaries make them sound like really interesting people.\"\n\n\"That sounds like a wonderful idea, Aunt Mary,\" Lisa said. \"Novels based on real people and real diaries are the most interesting. And since I'm going to be in the family even more, I'd love to read about them.\"\n\n\"Well, maybe I'll get the time someday soon,\" Mary commented. \"But since we have to leave early tomorrow, tonight I'd better forget about being an author and get some sleep instead.\"\n\nEveryone decided to turn in and good nights were said all around. Tom tended to the fire and then everyone headed upstairs. An hour or so later, Dan and Lisa were both lying spent, drifting in and out of sleep, when Lisa thought she heard the basement door open and close. She sat up and listened, but didn't hear anything else. Dan woke and asked what she was doing and she told him what she had thought she heard. He listened for a minute, hearing nothing, and then began stroking Lisa in all the right places. Within a few minutes the couple were busy and wouldn't have heard a whole platoon marching up from the basement.\n\nThe next morning Dan and Lisa got up early to have breakfast with their aunt and uncle before they left. \"We'll clean up,\" Lisa offered as they were finishing. \"You two go ahead so you won't have to rush.\"\n\n\"If you really don't mind,\" Mary said. \"It is getting a little late. But don't spend too much time working. We'll be gone until ten or eleven so you two will have to feed yourselves.\" Then she added, \"And we'll be sure to make some noise when we come in so you don't have to worry about putting your clothes on too soon.\"\n\nLisa blushed crimson. \"Aunt Mary!\" she said, but even though she was embarrassed, her smile showed she didn't really resent the teasing. Their aunt and uncle were so obviously physical people who didn't hesitate to touch or kiss in front of them that the remarks didn't really seem too much out of place.\n\nMary laughed, but smiled back at them. \"Have fun, you two.\" Then she and Tom headed for their car and drove off.\n\nAs their car left the farmyard, Tom said, \"That was kind of mean, wasn't it?\"\n\n\"Not at all,\" Mary replied. \"I was just kidding and they know we know they're sleeping together. Don't you remember your parents teasing us a few times?\"\n\n\"Well, yeah, I guess I do. I even seem to remember your mom and dad doing it a couple of times. Did you get everything fixed downstairs?\"\n\n\"It's all ready,\" Mary answered. \"We'll have a pretty good idea if they borrow the playroom again. But I'm sure they will. You're not having second thoughts about this, are you, Tom?\"\n\n\"No, we're getting everything taken care of today. It's just if they only looked at the playroom last summer out of curiosity and found it a little too much, I don't want to overwhelm them. But I think you're right. I'll bet they're heading downstairs right now.\"\n\nTom was exactly right. As soon as the car was out of sight, Dan and Lisa headed towards the basement dungeon. \"We can clean up the dishes when we come up for lunch,\" Lisa said. \"I've wanted back in there since last August.\"\n\n\"You and me both, Wench,\" Dan said. \"I can hardly wait to get you stretched and abuse your fair body.\"\n\n\"That makes two of us,\" Lisa said. \"I want you available for my every whim, too. In fact, I think we should flip for it to see who goes first.\"\n\n\"If you want, you can pick,\" Dan replied. \"I like both sides.\"\n\n\"So do I,\" Lisa said. \"But let's let chance decide. Have you got a coin? OK, heads I'm the first victim, tails it you.\"",
        "Dan flipped the quarter which landed with the head side down. Lisa smiled at it as she picked it up and returned it to Dan. \"OK, lover, let's get you naked and tied up nice and tight.\"\n\nThey opened the secret door and went inside. The dungeon looked the same as last summer and both stopped inside the door to look around at the wide array of toys and equipment. \"We definitely have to have one of these someday,\" Dan said. \"Come on, let's strip.\"\n\nWithin a minute their clothes were piled by the door and Lisa was heading towards one of the drawers to get wrist and ankle cuffs for Dan. When she had them firmly in place she led him over to one of the whipping benches. He was soon bent over the padded waist bar, his legs spread widely apart, and his hands stretched tightly out in front of him. Lisa pulled the bonds even tighter so he could hardly move at all. \"Now let's see what we can to,\" Lisa mused as she looked over the rows of toys. She settled on a heavy pair of nipple clamps and a weighted \"parachute\" for his balls. She spent ten minutes teasing his bound body, stroking his cock to a full erection and tormenting his nipples and balls with sharp tugs on the clamps and the parachute. Then she chose a wide leather strap and stepped behind him to the side.\n\nIt had been several weeks since they had had a chance for a real spanking and the first blow from the strap across his buttocks was much harder than Dan expected. He let out a howl and pulled against his restraints. Lisa hesitated long enough to be sure she hadn't struck too hard - no safe word - and then swung again. After five strokes she laid the strap down and retrieved a thirty inch cat. For the next twenty minutes she tormented his ass, back, thighs, and stomach with the multitailed whip. By that time Dan was breathing hard and almost gasping for breath. Lisa found a tube of lube and used it to insert her finger deeply into his rectum. As she worked it in and out she teased his cock and balls and further tormented his nipples. Dan was obviously becoming more and more aroused by the intense stimulation and when Lisa stopped for a minute and moved away, he let out a groan of frustration. But she was back almost immediately, moving behind him and starting to push the strap-on dildo deeply inside his already distended rectum. Not surprisingly, Dan lasted only a few seconds under this intense activity before he shot his load, helped along by Lisa's hand wrapped tightly around his cock. Lisa continued to fuck his ass and gave into her own orgasm in less than another minute.\n\nAs Lisa untied Dan she noticed that his cock was still hard and full. \"Still have something left?\" she asked teasingly, as she stroked his hard member.\n\nDan pulled away and turned towards her. \"I'm saving that until I've put you a little more in your place, Wench,\" he said. \"Ready for your turn?\"\n\nLisa held out her wrists. \"Go ahead, Captain. Do your worst.\" Then she added, \"Or is that your best?\"\n\nDan put cuffs on her wrist and ankles. \"We'll see what you think about it in a few minutes. I'm planning on making up for lost time and torturing you properly.\"\n\n\"As long as you don't leave any marks Tom and Mary can see,\" Lisa said.\n\n\"Don't worry,\" Dan replied. \"That's one of the nice things about November: jeans and long sleeved sweaters.\"\n\nHe led her over near the center of the room and fastened her wrist cuffs to two widely spread ceiling chains. Her ankles were then stretched to floor rings three and a half feet apart, leaving the naked girl stretched tightly, her weight largely hanging from her wrists and her feet unable to remain flat on the floor. Dan circled his victim, teasing her nipples and sliding his hand up and down the inside of her legs. Lisa's breathing once more became rapid and moisture began to drop from her engorged pussy. He twisted and pulled her nipples until they were hard and standing out from her tight breasts. Finally he stepped back and picked up a shorter cat than Lisa had used on him. This one had eighteen inch tails and he proceeded to lay them across her taut breasts. Soon the swollen globes were cris-crossed with a number of fine red lines and her nipples were sticking out even more. He changed targets and began to apply the leather thongs to her bare pubes and pussy lips. Her clit was aroused and sticking out, so an occasional lash landed directly across it, bringing a sharp cry.\n\nLisa was rapidly approaching orgasm and Dan laid down the small cat and picked up the larger model Lisa had used earlier. He stepped back and brought the instrument down hard across her round ass. Lisa's scream attested to the severity of the blow, but she made no attempt to stop him. He delivered another dozen and a half lashes and then stopped, leaving her gasping. \"Don't stop,\" she cried. \"More, Dan, more.\"\n\n\"Don't worry, Lover, I'm nowhere near finished yet,\" he reassured her. \"But I have some other things in mind. You'll just have to be frustrated a little longer,\" he added as he let his fingers stroke up between her spread legs and rub lightly across her hard, exposed nub.\n\nDan then moved one of the leather horses over and positioned it with the end directly in front of Lisa. He lowered her arms, but left her legs tied widely apart. \"You remember the drill,\" he said. \"Lean forward along the length.\"\n\nThe end of the padded leather came against Lisa's pubic bone and when she lay forward, her ass stuck out invitingly. Dan used a wide leather belt to fasten her waist down tightly to the horse. Lisa was then lying with her torso along the length of padded leather. Dan disconnected her wrists from the slack ceiling chains but then connected them together and to the end of a single chain, hanging directly above her back. When he pulled up on the chain, Lisa's arms were pulled up and back so her back arched against the waist belt. Dan knew this position placed quite a strain on her, but she had really enjoyed it last summer. Dan now rolled her sore nipples between his thumbs and forefingers until they were once again extremely hard. He let a nipple clamp close over her left tit, bringing a sharp cry. This was followed by a similar yowl as he placed the other clamp on her right side. Two eight ounce weights added to her discomfort. Dan gave the weights a swing and watched as Lisa reacted to the changing hurts.\n\nDan then took a large dildo vibrator, one covered with small rubber protrusions, and inserted it deeply into her sopping pussy. He used a strap to secure it to the end of the horse so it couldn't slip out and then turned it on. The effect was immediate. Lisa began to squirm and pull at her bonds. Dan grinned and ran his hand over her exposed back and striped ass. He let it linger and probe her anus, again bringing an immediate reaction. He applied some lube, using his finger to work it deeply inside, twisting and moving in and out as he did so. He then took a vibrating butt plug and pushed it inside her rear until it was seated with only the wide T-handle remaining outside. Now he once more applied the long tailed cat and spent the next twenty minutes lashing and teasing the girl's bound body. Her cries and screams alternated with her sounds of pleasure and Lisa came three times during this harsh treatment. Finally Dan decided she had had enough of the whip and put it down. Lisa was still twisting and pulling at her bonds, obviously still very much aroused.\n\nDan grasped the handle of the butt plug and slowly pulled it out. As the plug left her anus Lisa let out a long sigh and shuddered into another orgasm. But Dan wasn't finished. He left the large dildo inserted in her pussy, vibrating away, and then lubed his own cock and began to press it into Lisa's tight rear passage. Soon he was embedded all the way, his pubic hair scratching against her reddened flesh and his cock lodged deeply inside her distended bowels. Dan began to pound in and out until, within a couple of minutes, he could last no longer and, bringing Lisa with him, came deeply inside her with a long, long climax.\n\nWhen the couple had calmed down a little, Dan released her and they cleaned up and then spent a little while exploring until they were ready to begin once more. For the next couple of hours they played in the dungeon, even though of necessity, everything couldn't be as intense as the first couple of times had been.\n\nAt about eleven thirty they decided they needed a break. \"Let's see about some food,\" Dan said, and the couple started for the dungeon door. When they reached the exit they stopped to reach for their clothes. Then both looked at each other and said together, \"Naked lunch!\" Then, laughing, they left their clothes where they were and headed upstairs.\n\nAfter eating, Dan and Lisa decided they had better get things cleaned up in the kitchen so they washed and put away the things from breakfast and lunch. As she stood washing dishes, Lisa was once more struck by how normal it seemed to be standing here, naked, with Dan, doing ordinary things like the dishes. Well, maybe not really normal, but definitely comfortable. She hoped they would always be this comfortable with each other.\n\nWhen they had finished both were ready to head downstairs again because, as Dan put it, \"we don't know when we'll get a chance at this toy store again.\"\n\nLisa quickly agreed but cautioned that they had better take it a little easier that afternoon if they wanted to still be able to move normally when their aunt and uncle returned.\n\n\"Don't worry,\" Dan said, \"I have something a little less, shall we say, strenuous in mind right now.\" He went over to one wall and pulled out a strange looking bar stool. This device had started life as a plain wooden stool, but had been modified. The round wooden seat had been cut in a curved hour-glass shape so that the person seated on it could close their legs to within two or three inches. It curved smoothly back out to its original circular shape at the front and back, but there were two inch holes cut through the seat both front and rear. The entire thing was mounted on a piece of plywood so that it was nearly impossible to overturn.\n\nDan had Lisa sit on the stool and it immediately became apparent where the two holes lined up. Although the seat was unpadded, it was well smoothed and her legs fit comfortably into the side notches. It was tall enough so that her toes just touched the floor. Dan used straps on the stool legs to anchor Lisa's own legs at the ankle, above and below the knee, and above mid- thigh. When he finished she had almost no freedom of movement below the waist. He put padded cuffs on her wrists and attached them to a chain hanging from the ceiling. He raised the chain so that her hands were above her head, but not stretched tightly.\n\nLisa was becoming excited from the position alone and still did not have any idea what Dan was planning until he went to a drawer and returned with a feather duster. He began to lightly tickle her all over her exposed body. Lisa's helpless laughter echoed in the room as he found and attacked her most sensitive spots. After a few minutes he stopped and found her pussy was dripping. He then retrieved two dildos, inserted one into her dripping pussy, and lubed the other before pressing it deeply into her ass. Dowels were inserted into prepared places on the stool to hold the two intruders in place. Then he once more began his feathery assault. For the next half hour the room rang with Lisa's shrieks of laughter as Dan varied his teasing from the lightest of touches to a full out attack with the feathers. Occasionally he let her have a brief rest from her laughter while he pinched her nipples or stimulated her in other ways.\n\nBy the end of the time Lisa had come five times and was showing signs of becoming exhausted. Dan's cock was still rock hard with his own desire, but he released her from the bonds and let her recover.\n\nIn a few minutes when Lisa's breathing had returned to normal, she said, \"OK, Lover, payback time.\" She led him over to a padded table and bound him on his back with his arms and legs stretched and attached to the table ends. She than began to run her fingers lightly up and down his ribs, and for the next forty five minutes it was Dan's strained laughter that filled the room. Lisa used her fingers as well as the feathers to torment the bound man, but the only attention she paid to his aching cock was an occasional tickle.\n\nFinally as she saw that Dan was reaching his limit, she put down the feather duster and climbed up onto the table, straddling his waist. She looked into his eyes and said, \"Now let's see how long we can last.\" With this she lowered herself over his rampant member, burying it to the hilt in her hot slit. Then she froze, holding herself motionless. When Dan had relaxed a little she used her internal muscles to squeeze and stimulate him, but never all the way to climax. By carefully controlling her own desire she was able to prolong their coupling for another half hour when they both finally became too excited to hold off any longer. As Lisa ground down against his groin and Dan spurted his load deeply inside her, the room echoed with a new set of sounds.\n\nWhen Lisa had released Dan and they had rested awhile, she suggested one more game before they quit. She tied Dan's wrist and ankle cuffs so that he was stretched between the floor and ceiling in a taut X-shape. Then she donned wrist and ankle cuffs herself. After a short trip to the bathroom area she returned with two large enema bags, each holding a full three liters of hot water. These she hung near the ceiling and made one more trip to get two Bardex nozzles. She lubed Dan's rectum and worked the large nozzle inside before pumping it as large as he could handle. Then she worked the other nozzle into her own rear and pumped it up also. Finally, with the two hoses attached from the bags to the nozzles she moved to face Dan and anchored her own ankles to the same rings as his. She used her hands to place his cock, which had become hard again from all the activities, into her pussy and a strap around both of their waists to hold them together. Then, stretching, she clipped her wrist cuffs to Dan's and opened the valves.\n\nThe flow rate had been set very low and Dan and Lisa hung against each other as the hot water began to fill them. They had played this game before and both knew that to make this best they would need to prolong it and hold off their climaxes as long as possible. The enemas took nearly ten minutes to fill them and by the time the bags were empty, both of the young people were straining both against the pressures inside their bowels and against each other's sex. When they could finally stand it no more and had come in strained explosive orgasms, they hung limply as their full bellies began to transfer the intense pleasure into cramps. Lisa unhooked her own wrists and then released Dan's so they could remove the rest of their bonds. When they were finally free Lisa could wait no longer and made Dan continue to hold while she emptied herself. The instant she moved, Dan took her place and started his own relief.\n\n\"That is definitely a hot way to fuck,\" Dan said. \"But I think we'd better take a shower and get cleaned up. Then, much as I dislike the idea, we'd better get this place cleaned up and back in order so Uncle Tom and Aunt Mary won't be any the wiser.\"\n\n\"I expect you're right,\" Lisa replied, heading for the shower area, \"but maybe just one more? I'd like to feel the cat another time. Who knows when we'll get a chance at a place like this again.\"\n\n\"I'll never turn down lashing your beautiful body, Wench. I'll even try to be careful so you can still sit down tonight. Or at least by tomorrow. Maybe next summer we can find some way to be up here for a little while by ourselves again. We definitely have to build our own dungeon one of these days.\"\n\nAfter their shower they put away most of the toys, arranging the playroom the way it had been when they came in and, in the process, giving themselves a chance to rest a little. After everything was cleaned up and dried, Dan once more put cuffs on Lisa's wrists and ankles. He tied her stretched into a very tight X-shape between floor and ceiling and then began to use the thirty inch cat. He whipped her ass most heavily, but didn't limit himself to it alone. Instead he laid lashes across her breasts and stomach, back and thighs, and even up between her legs. Lisa cried out and sometimes screamed but never called her safeword. Actually Dan was always careful not to do any real damage, but used the whip to sting, exciting her sexually as much as actually hurting her. Not surprisingly he found himself becoming just as excited. After Lisa was covered by a net of red lines, Dan untied her wrists, bent her over a padded bar, and reattached her wrists to her ankles. A few more strokes with the cat and then Dan could wait no longer and plunged his cock into her waiting pussy. Neither lasted more than a few seconds and were soon crying out their climaxes.\n\nAfter he released her, Lisa gave Dan what he had come to think of as a \"full body kiss,\" holding herself tightly against him while her tongue tried for his tonsils. He, of course, responded in kind. At last the couple broke apart and then proceeded to replace the cuffs and cat and made one last check to see that everything was returned to its proper place before locking the room and heading upstairs.\n\nWhen Tom and Mary returned about ten thirty, they found the couple, both dressed in jeans and long sleeved sweaters, in front of the fireplace, an old movie on television, and both sound asleep with Lisa snuggled under Dan's arm. As the door opened, Dan began to come awake enough to look a little embarrassed when Mary said, \"I see you two had time to get your clothes back on.\" Lisa started to come awake and Mary added, \"Tom and I are going to get a little snack. Why don't you two go ahead and go to bed. We'll still have plenty of time the next couple of days to talk.\"\n\nDan yawned and finally he and Lisa agreed. They said good-night and headed upstairs while Tom and Mary went into the kitchen. When the upstairs door closed, Tom commented a little ironically in a quiet voice, \"I wonder what they could have been doing to wear themselves out so.\"\n\nMary laughed. \"You stay up here in case one of them decides to come back down for something. I'll go check things out downstairs.\"\n\nShe then disappeared through the door to the basement while Tom made some hot chocolate and got out some cheese and crackers. In about ten minutes Mary came back from downstairs with almost a smirk on her face.\n\n\"From the look on your face I'd guess you were right and your hidden threads showed that they did borrow the playroom?\" Tom said.\n\n\"You might say that,\" Mary answered. \"I can see why they were so tired. I can't be sure about everything but I can say that someone did have out a couple of sets of cuffs, at least two cats and a couple of straps, several dildos, two - count them - two Bardex sets and two of the large bags, and - get this - a strap-on. Maybe some other stuff I missed.\"\n\n\"Wow!\" exclaimed Tom. \"They seem to really be into this. I think it took us a little longer to work up to that.\"\n\n\"Well, we didn't have a nicely stocked playroom to explore,\" Mary replied.\n\nTom nodded and said, \"I guess this ends any question. I'm ready to go through with it tomorrow, are you?\"\n\n\"Oh, Tom, certainly. I can't think of a better way to handle things. This looks like it will work out just right all the way around.\"\n\nEveryone slept late Saturday morning, so they decided on a brunch instead of breakfast. The snow had come the night before and now a light layer of white covered the landscape. It was no longer snowing, but the temperature was falling even as the sky cleared to a hard, intense blue. The fire was welcome when, after eating, everyone moved into the room and settled down.",
        "\"Well,\" Tom began, \"I think Mary told you we had some news, too. This will probably come as a real surprise, but we've decided to move. While we were on the trip last summer we met a guy who owned a piece of a small off-shore island near Carolina. He has a house there and no one else for a half mile in any direction. In fact there are only about five places on the island and a lot of the time most everyone is somewhere else. Anyway, he let me know last month that he's interested in selling and we decided we'd like to try it by the ocean for a change.\"\n\nDan and Lisa both looked completely surprised. \"If that's what you want it sounds wonderful,\" Lisa said. \"You can still write from there, so it does give you a lot of freedom.\"\n\n\"I probably will write some,\" Tom replied. \"And Mary may get to write that novel she told you about. But - and there's no reason you should know at all - we really don't have to.\"\n\n\"You see,\" Mary put in, \"When we were first married and Tom was making all that money out in California, we started to invest. Tom is a very good judge of the future and we bought into several companies which have done rather well, including Intel and Microsoft. We can live - really quite comfortably - on just the dividends.\"\n\n\"Are you keeping the place here?\" Dan asked.\n\n\"No,\" Tom replied, \"We decided to let it go.\"\n\nDan and Lisa looked a little disappointed, but Mary went on before they had much chance to think about it. \"There's something else we want to say. Dan and Lisa, we know about your borrowing our playroom downstairs.\"\n\nThe couple looked completely dismayed. \"Oh, Aunt Mary, we're really sorry,\" Lisa began.\n\nBut before she could continue, Mary went on, \"No, No, don't worry about it. We told you to use the house as if it were your own. We didn't say just part of the house. You have nothing to apologize for. What I want to say is that we know you've tried some of these things and we don't mind at all. As you've probably guessed, Tom and I enjoy a lot of the same stuff. I would like to ask you a couple of things, however. Please don't be embarrassed. You'll see I've got a reason. First, are you into real domination - you know, master-slave stuff - or just playing bondage games?\"\n\nLisa had turned a little red and Dan hesitated some before finally saying, \"No, it's just games. We even take turns and none of it carries over into any of the rest of our lives. It just seems fun. Besides, I don't think either of us find humiliation or real domination fun at all. Or even tolerable.\"  Mary nodded to herself. \"OK, one other thing. How careful are you? Do you know about safewords and such and about never leaving anyone alone and so on?\"\n\nThis time Lisa brought herself to speak. \"Yes, we're both far to practical to take any kind of chances. We also have our own rules and no one is ever really hurt or goes too far.\"\n\nOnce more Mary nodded to herself. \"OK. Now to be fair, let me tell you a couple of things. Tom and I first got into this the first year we were married. We tried some spanking games - everyone had heard of them even back then in the dark ages - and found we really liked the stimulation. We take turns, too, by the way. We didn't start out with the playroom you see downstairs, but over the years we've added stuff and after we moved back here we started fixing up that part of the basement. You may remember there used to be a couple of rooms over it where the porch is now. They were in pretty bad shape so when we tore them down and built the porch we poured a new basement in that part. When you two started coming here in the summer we decided we had better hide it and built the secret entrance. Sometime you'll have to tell me how you found it and got inside, by the way.\"\n\n\"Anyway, as you can see we've tried a lot of things. And we've found we like most of them. We have rules pretty much like yours and we watch to make sure we don't start getting addicted to the point where it effects the rest of our lives. You have probably guessed that we really like sex. And I suspect the same is true of you two. When we were first married we probably averaged five times a day. Some days a lot more. We don't quite make that now, but it's still unusual for a day to go by without a little lovemaking. We usually make a trip to the playroom two or three times a week. By the way, if you read Marnie's diary you'll probably find she was a pretty hot number herself. And so was Jamie. From some of the things she wrote, I even think she and Jamie might have been into a few of these games themselves. But Tom and I decided long ago that as long as we both enjoyed it and no one was hurt - physically or psychologically - there was nothing wrong with a good whipping or such now and then. After all, some people spend a lot of time, money, and effort on golf for a lot less pleasure.\"\n\nAt the mention of golf, both Dan and Lisa broke out laughing. Tom and Mary looked confused and Lisa said, \"It's just something Dan said a few weeks ago. Never mind.\"\n\nTom shrugged. \"So we don't want you two to feel guilty about it or anything, we just want you to feel free to ask questions if they ever come up. We know how hard it is to find someone with whom you can discuss this kind of thing. But on to another subject.\" He turned towards his wife. \"Have you got it, Mary?\"\n\nShe nodded and pulled a large envelope from behind her. Tom went on. Since we're planning on moving in April, and even though we'll be back for your wedding, we wanted to give you your wedding gift early.\"\n\nMary handed the envelope to Dan and said, \"Go ahead and open it.\"\n\nDan handed the envelope to Lisa and she pulled the flap open. She pulled out several sheets of paper and began to read it together with Dan. In a few seconds, Dan looked up and said, \"This is the deed to the farm. You've made out a transfer to us, but, much as we'd love to have it - more than you can imagine - we can't afford it.\"\n\n\"That's right,\" Lisa said, \"Even up here this property must still be worth quite a bit.\"\n\n\"No, you miss the idea,\" Tom said. \"We don't want to sell it to you: We've given it to you free and clear.\"\n\nThe couple looked astounded. Dan's jaw actually dropped open - something he was sure never happened in real life. \"That's wonderful,\" Lisa said. \"But it's too much. I know you said you have stocks to live on, but you can't just give away this place.\"\n\nMary smiled. \"Lisa, Darling, I said we had some stocks. I know it's none of your business, but so you'll feel better about this, I'll tell you the stocks are now worth about eight million and I expect the market to keep going up.\"\n\nDan's jaw dropped open for a second time and this time was joined by Lisa's.\n\nMary went on. \"Besides, I told you yesterday that this place has been in the family for over a hundred and twenty years. We don't have any children to pass it on to and no one else in the family is really interested in being responsible for it. You two must know that we have thought of you as children we would have loved to have ourselves. We couldn't be more proud of either of you and the fact that you have fallen in love with each other makes this the best of all possible things we could have imagined. If you look in there\" - indicating the envelope - \"you will also find that there are some shares of stock. It should be enough to cover the property taxes with the dividends. And before you say anything else, we can afford it. We don't expect you to farm the place. We don't even really farm it ourselves. We don't even expect you to live here full time - at least not now, maybe never. But we've seen the way you look at the land. You two love this mountain as much as we. And I expect you will be as happy here as we have been. I even think Jamie and Marnie would be pleased.\"\n\nLisa ran to her aunt and threw her arms around her. \"Thank you, Aunt Mary. I don't know what to say, but you are right. We do love it and will always love it.\"\n\nAfter a few more minutes of profuse thanks, Mary said, \"There's just one thing. We're leaving the playroom just as it is. We'll have fun building another one on our island. But if we come back to visit, we might like to borrow it sometime.\"\n\nEveryone laughed and Dan assured them it would always be available.\n\nThat night Dan and Lisa were too excited to sleep and stayed awake making plans - and making love - until almost dawn. When they left to drive back to school at three that afternoon they were still on such a high that Tom said he could actually see the glow around them. As they drove away, Tom said, \"Well, Lover, I think we made the right decision.\"\n\n\"I know we did,\" Mary answered. Then she added, \"But while we still have the place to ourselves, I think I'd like to go downstairs and get as sore as Lisa must have been after Friday. That is, if you think you're man enough and won't wear out too soon.\"\n\nTom laughed and gave her a swat on the ass. \"Come on, Woman, and we'll see who wears out first.\"\n\nSpring came and went and finally June arrived and their wedding. As at every wedding everyone agreed that there had never been a more beautiful bride or a more handsome groom. During the reception after the ceremonies, One of Dan's relatives asked where they were going for their honeymoon.\n\n\"That's classified,\" Dan replied. But I can tell you we have found the most beautiful spot on earth and that we'll be able to spend six weeks alone enjoying it.\"\n\nTwo weeks later Dan and Lisa lay sleeping in the grass among a grove of ancient trees on the hill behind the farmhouse. Both were naked and the warm June sun filtered through the leaves to light their bodies. Dan was face down and Lisa was on her side, pressed against him, with her leg lying over his. Faint red lines showed on both of their buttocks where they had been playing earlier.\n\nLisa came slowly to a half awake state as she heard voices a little farther up the hill. \"See who has found our special place and seem to have been enjoying it, Woman. This must be the new couple.\"\n\n\"Aye, and a lovely pair they are. Yon man is a big one and handsome built, for sure.\"\n\nLisa blinked and looked towards the ridge top, fifteen yards away. She saw a couple who looked to be in their forties or maybe a little older, but still in good shape. She could tell because the man - well over six feet tall - was wearing only a pair of trousers. The woman, who looked younger by several years except when Lisa looked at her eyes, had on an old fashioned long dress, but it was open and hanging from her hips so she was bare from the waist up. The man had his arm around her shoulders and was caressing her breast. Her breasts were firm and Lisa could see that her nipples were standing erect. The air had a shimmering quality to it and Lisa couldn't be sure what she saw was the same from second to second.\n\n\"Aye,\" the man went on, \"Yon lass reminds me of you some thirty years ago.\"\n\n\"What's this?\" the woman said in mock resentment. \"Do ye mean to tell me that I'm no longer woman enough for you, Jamie Duncan?\"\n\n\"Now you know better, Wench. You always have and you always will be woman enough for me.\"\n\nThe woman stepped away from the man and then stepped out of her dress completely, folding it over her arm and leaving her completely naked. Lisa noticed she had long, smooth legs. \"Then suppose ye come and prove it, my big highland stud. That is if you think you are man enough,\" she said provocatively.\n\n\"Ach,\" the man responded, \"Perhaps I will. And perhaps I should take my strap to your tight arse for that remark, Wench.\"\n\n\"Is that a promise? Or maybe you're not man enough for that either.\" She laughed and started towards the hill top.\n\nThe man started after her, unbuckling and removing his wide leather belt as he went.\n\nLisa blinked and came more awake. She propped herself up on one elbow and looked where she had seen the couple. There was a slight shimmer in the air. Maybe it was just the heated atmosphere. Then she heard a sharp squeal of almost girlish laughter. Or maybe it was just the wind in the trees. She blinked and stared harder. Had she actually seen and heard the ghosts of Jamie and Marnie Duncan? Or was it just the remains of a leftover dream?\n\nDan blinked and came awake. He rolled over and smiled up at her. She had just decided that she must have still been dreaming and let herself be pulled into Dan's embrace when she heard another sharp peel of laugher.\n\nShe started to pull back up but Dan held her tighter and kissed her deeply. She asked herself if what she had seen and heard was real. Then, as Dan held her tightly and she returned his kiss, she decided that he was real, she was real, and the rest didn't matter at all."
    ],
    "authorname": "professorjames",
    "tags": [
        "lisa dan",
        "mary lisa",
        "lisa spent",
        "lisa wait",
        "lisa lowered",
        "idea lisa",
        "lisa headed",
        "released lisa",
        "mary commented",
        "spent ten"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/cousin-pt-04"
}