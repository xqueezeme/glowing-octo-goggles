{
    "title": "Mine...Yours Pt. 12",
    "pages": [
        "Author's Note: Wow...took a while to get this out. Finally had more time again, and will get more out as I am able. I would like to thank everyone for their comments. I love getting them and each time I see a new one it just spurs me on to write that much faster. I ask that those of you who are anonymous, please put down a couple of initials or a pseudonym I can use to keep track of you all. That way when I get a chance I can answer questions for you.\n\nThank you all for reading.\n\nSincerely,\n\nPayenbrant.\n\n*****\n\nChapter 34: Past (continued)\n\nI said nothing, just stared out from under my hood at Gwen who took a few steps closer to me. I got scared, but not as much as I would have a day or two ago. It was almost as if having to be on my own, without my Master, made some of the emotions I had trouble with seem less. They didn't seem so huge anymore. Maybe it was learning as much as I have about the people around me made me better able to cope. Maybe it was the shock of Greg getting hurt the way he had and what Mr. Brooks and I had done about it.\n\nI don't know...\n\nAll I know is things made more sense to me and I didn't feel the extremes of emotions as much anymore. Well, the exception being how I ripped apart Tarfal. I think Greg would say something like, \"That's fine...he had it coming!\"\n\nI watched Gwen warily as she looked me over, \"You are! You really are a virgin succubus! How is that even possible?\" Jemima stepped closer too, but she seemed to be watching Gwen more than me. Gwen had pulled another book out of her backpack and I was starting to wonder if her bag didn't happen to have magic in it like that one lady in the movie...what was it called? She was a witch that watched over two small children and Nancy loved that movie. She would sing along with the lady about, \"...tidying up a nursery.\" I only watched it because Greg had suggested I watch something called \"Disney Movies.\" Nancy told me that was the one I should start with.\n\nI scented her bag, but caught only her smell, no magic on the actual fabric. She pulled out a small tattered book that was handwritten, and carefully leafed through the pages. What she saw made her look up at me in surprise.\n\n\"Lucretia...I...I have questions, can we meet back at our house? I have some enchiladas in the freezer we can bake and I want to, if you don't mind...\" She wrung her hands a little and then blurted out a stream of words that made me thing of water running from a hose.\n\n\"I know you want to go back to Greg, but he's fine and I have never met a virgin succubus and I want a chance to ask you questions because I want to know if the wish is real and why you haven't lost it yet since I thought that was the first thing you all did!\" Gwen took a deep breath and then held her hands to her temples staring off past my shoulder.\n\n\"If you...no, you are a virgin. That's obvious since Greg is still alive and this could mean all of our research is slanted on your kind of outsiders which means we have been getting it all wrong and then why did I have to learn all those lessons if they were skewed...?\"\n\nJemima put a hand on Gwen's shoulder, and gave me a slightly proprietary look as she kissed Gwen's cheek. It didn't bother me, I had my own...sweetheart... Just thinking that word made me smile inside. Thinking of my Greg made me feel warm along with the ache. Surprisingly my lower lips clenched! I ran a hand over my hip curiously. The only times I felt that were when I was in a fight, not just a sparring session, but like the last time I fought with Greg, when I let my armor come out. I never got a chance to talk with him afterwards, but I wanted to tell him he had done very well. He had moved so fast to dodge my attacks, he had been so smooth and graceful in his movements...\n\nI had wanted to drain him so badly right then!\n\nIt was normal for me to get aroused from the hunt, but this. I had felt such a rush of sensation when I had made myself vulnerable to Greg. He had been going downstairs to train in his basement. Seemed silly to me to train down in the dark, but...that's the way my Master is. I can't argue with the results he received from it either. He had seemed sad, and I remembered how he had been vulnerable to me. Still amazes me that he did that! Greg had shown me the type of relationship he wanted, he had trusted me. So now I showed him trust as well, to let him feel better.\n\nHis teeth on my neck, and his hands on my body...I had almost orgasmed just from that! Later on, when we had been kissing on the roof as we watched the sun sink...set I mean. He had trusted me and I had held back. That trust was valuable to me, I can't explain it, how much it meant to me. Now here I am getting aroused at the thought. How many changes am I going to be going through, and when will it stop? How...Will I still be me? I glanced aside at where Tarfal had been beaten and grinned a little to myself.\n\nNo...I will always be me! I don't think that will ever change...\n\n\"...want some enchiladas?\" I heard Jemima ask. I turned to look at her. \"I can't eat them myself since I am on a liquid diet, but that means there should be more for you.\" Jemima finished with a smile. It was easy enough to guess they had invited me over to have Gwen pump me for more information about what it meant to be a succubae who had never had sex. I didn't see what the big deal was, but it was something that had caused a stir amongst my sisters. Since I could always take energy with a kiss, I had never had sex. I saw no point to it. Mother had told me that I should lose my maidenhead soon since...well. \n\nWhoever takes the maidenhead of a succubus is granted one wish, the older a succubus is...the more powerful the wish. Most succubae lose theirs once they reach the age of maturity. I was going to lose mine 40 years after that in front of Balmont's entire court. After I escaped and came home...I had no interest in it. Time passed, I grew older and still had my maidenhead. From what Mother told me most wishes were for long life, wealth and riches. Several were to just survive the experience with one of our kind!\n\nThat is only after reaching maturity, I wonder what kind of wish my Greg would...? \n\nI pushed that thought away. I know Master cares for me, and he enjoys my company. I don't believe he wants me that way. I am his friend, and he enjoys kissing me. But I feel the need for more, but I am afraid... No, not afraid.\n\nI am...Afraid. \n\nI could kill him since I have never done this act, this sex, with someone before! I wish I had listened to Mother and lost this curse, then I would know how to control it, I could lay down with my Master and feel him, taste him, drink of him...\n\nJemima is staring at me, \"Are you alright Lucretia? Looks like you were having some deep thoughts there.\" \n\nI nodded, \"Yes...I think I would like some enchiladas. Ummm...meet you all at your house?\"\n\nGwen still looked flustered as Jemima took her hand in hers, \"Yeah Lucky, we will meet you there. I got the good brand of root beer you like too.\"\n\nI smiled at that, gave a careful sweep of the area and shifted to my regular form and took off into the night sky.\n\nI like the sky here, it's a different color than at home, and the stars are generally one color. Compared to the dark purple sky of home, with its multi-colored stars that seem to wink on and off as you watch them. The sky here is more peaceful. A rich black with pin holes of light peeking through. I tried to replicate it once with a piece of velvet cloth that Greg and I found in one of the dumpsters at work. I poked holes in the cloth with my claws and put it over the light in my room but it didn't work very well.\n\nI also blend in better, my dark grey skin against the black, no one notices me and I am free to fly as I wish. Sometimes when Greg is alone at work I take that time just to fly and watch the world underneath me. I watch the people, how the act and how they treat others. I listen carefully to what they have to say, and how they say it. I see how women dress and how it is similar to what I like to wear or how it is different. Humans are so different from each other.\n\nOne woman wears a high necked dress and a strange cloth over her head and is speaking plainly to a woman who has ink in her skin and is wearing next to nothing. I wondered why the woman wore a long dress while the other wore so much less. I don't normally wear clothing, except when in human form. I had asked my Master about that and he just scratched his head a little. He does that sometimes when he is not sure how to answer me.\n\n\"Well, Lucretia. When you are all grey skinned and wings...clothing just looks wrong on you. I mean, how are you going to wear a shirt with wings anyway? But when you look human...\" I remember him blushing and looking down and away a little as he cleared his throat.\n\n\"When you're human looking, and naked you're kind of distracting. I don't really want to walk into stuff or trip and fall all of the time from looking at you!\"\n\nI didn't mind him looking at me at all! Honestly it didn't occur to me that it would be a problem. He had been quick to assure me it wasn't, but after a few days of him walking into chairs and door frames I relented and started wearing clothing again. It was nice to have him not be so...what is the phrase? \n\nNo...it's a word...? Ah! Klutz! It was nice to have him not be such a klutz.\n\nI arrived back at home and landed in the backyard. I looked around at the fruit trees, and the yard. I noticed my broken sliding glass door and sighed. I forgot to open it when I flew out to help Gregory.\n\nI walked inside and saw my stereo equipment was turned off. That surprised me. Normally it would play on repeat until...\n\n\"Good evening Lucretia...\" a male voice said behind me.\n\nFor a moment I thought it was Balmont and I spun to face him, but it was a slender man standing in the broken doorway of my bedroom. He had a long peacoat, and a dark baseball cap, and his green eyes glittered in the dark. Like how Greg's glows when he is using his power. I remembered those eyes...\n\n\"You failed in your job Lucretia...\" He said quietly. \"I hired you to destroy the Gatewatch, and you failed.\"\n\nI remembered the wizard now, I tried to catch his scent but it was clouded. He stepped into my room making me bristle and I growled at him. He paused, considering me, then stepped back outside.\n\n\"You made me assurances, saying you were more than strong enough to do the job, and I watched and took pleasure in your devious way of handling the situation. Causing an orgy...feeding off the energy and then planning on killing everyone there? It was a masterful plan...until it wasn't.\" He said as he ran his thumb over some broken glass in the door frame. It pricked him slightly. I then could smell him more clearly and I opened my eyes wide in surprise as his scent filled my nose.\n\nI could never describe his scent since it had always been muddled with magic, I kind of knew it, but it still smelled different with the interference of the energies he contained. Most wizards and mages are careful to always hold onto their magic, to keep it at the ready so we can't smell them. This is why I had slashed Gregory's leg when we first met, so I could accurately get his scent to track him. A part of me winced inside as I remembered doing that, but I didn't care about him then like I do now.\n\nI now could smell my summoner accurately, and I remembered where I had smelled this scent before...\n\n\"Nancy...\" I said softly. His head came up and his glittering green eyes narrowed. \n\n\"What did you say?\" He replied in a low quiet tone.\n\n\"You smell like Nancy...the rat.\" I said a little louder, taking a step forward. My claws on my feet tapped the floor underneath me.\n\n\"Your Allan Wade Dickson...you had a familiar named Nancy Drew.\" I said a little louder. \"You threw her away for a...tiger striped cat.\"\n\nHe paused while watching me carefully. \"I don't see how that applies to you failing in your contract. You have been close to your targets for months now and never finished the job, why?\"\n\nI chuckled, \"You know as well as I do the reason why! You would have felt it, the shift in allegiance. I have a new Master now. All old contracts are null and void when new leadership is established.\"\n\nAllan nodded his head in understanding, then crossed his arms and his voice took on a business like tone. \"I see...so when your contract is at an end would you be interested in finishing the original job for me?\"\n\nI didn't want to, not really. I had made friends with Gwen and Jemima, maybe not Hildy...not yet at any rate. But I didn't want to see them die. However, it would not be good to shut all negotiations down. Let him leave with a hope for things in the future, while I make my own plans. William needed to know the identity of the wizard, and so did my other friends.\n\n\"I am open to renegotiating our deal...based on what you have paid so far. The spell for replicating food was handy. Perhaps you have another to add to the offer?\"\n\nAllan shook his head and gave a low chuckle, \"No, I don't think so...well, maybe...depends on if you can get me a trophy from them? Maybe bring me the cards of the witch, a few liter of the vampire's blood and the canines of the Werewolf and we can talk about another spell?\"\n\nI pretended to consider, but on the inside I was disgusted at the thought of what he was asking me to do. I was picturing in my mind taking Gwen's cards from cold, lifeless fingers. Jemima struggling as I had her pinned and drained her blood into a mountain dew bottle, or ripping Hildy's teeth from her head. I shuddered and Allan must have misinterpreted it. He smiled openly.\n\n\"Ah, the famous blood lust of Lucretia! I sometimes wondered if you were more valkyrie than succubus.\" \n\nI forced myself to smile back and wondered at my own reactions. A small part of me liked the idea, but a much bigger portion felt it was wrong to do such a thing.\n\n\"When my contract with my current Master is done, then I will find you to reopen negotiations.\" I said finally. Allan nodded and began to leave, then asked over his shoulder as he walked into the backyard.\n\n\"Just curious, but have you fucked your current master yet?\" I grit my teeth at the offhanded way he said that, but bit back the harsh response. I remembered that to a succubus sex was just business, so it was normal to ask these kinds of questions.\n\n\"No...\" I said pleasantly. Not a half second later something struck me hard and fast in the back of my head. I was knocked forward through the air past the grinning form of Allan Dickson into my backyard. I tumbled in the grass, pulling my wings in so I could roll easily. I finished the roll and groggily got to my feet. I shook off the shock of the blow and grinned.\n\nSo...who was going to be my next victim?\n\n\"That's all I needed to hear...\" A rich, deep voice said as a large dark form moved out from my room. I couldn't understand how something so big had hidden itself so well that I didn't notice it in my own house. Forward swept horns, aggressive and menacing showed first in the moonlight as a large head with long hair pushed forward, four wings with rich brown feathers spotted with pure white feathers followed behind him. He was huge, his chest was heavily muscled and he was larger around than our refrigerator in the kitchen. He stood tall on the porch just outside of my door, wings spread, I saw the white feathers coincided with my memories of hurting his wings. \n\nIt made me grin wider\n\nThis was it! I had him! Here and now! I had a Master who had given me no limitations, I was at the peak of my power and now my enemy was right in front of me! I rushed forward, my wings folded into spears. I felt the lawn tearing under my claws as I dug in for traction. Then slammed hard into a green shifting barrier of translucent energy...\n\nI stumbled back, shocked and shook my head once. I saw Allan standing with one arm extended towards me, his fingers spread. \n\n\"Thought I came here unprepared Little Bird?\" Balmont's voice sent chills through me. \"Thought that I wouldn't have someone to anchor me in this realm of forgotten lords? You underestimate me that much?\"\n\nThen I heard a small clinking sound of metal on metal, and it made that earlier chill feel like a warm wind in comparison to the ball of ice in my belly. I knew that sound very well. My fingers itched, as they wanted to move to cover my shoulder and hip. My eyes searched over him and saw it. Thick links the size of walnuts, dark as coal except for scripting and pictures of different spells engraved in silvery metal etched in every link. I knew each spell I knew by heart, I had been presented that chain as my spell book by Balmont. Only I had learned to late what it really signified.\n\nHe held up his right arm, around which it was wrapped from elbow to wrist. He shook his arm once, slowly from side to side, and I flinched as I heard those links clink together.\n\n\"So you remember your leash Little Bird?\" He said softly. \"You remember how to perch on my wrist? To fight when I wish you to fight? You remember your Master?\"\n\nI growled and shook my head at him, squaring my shoulders.\n\n\"I am Not your bird! I am Not your pet! I am the daughter of a Queen and I Have a Master!\" I shouted at him. My legs still felt weak as I watched that damn chain. The metal digging into my flesh and the cold seeping into my body as I was locked in place...\n\nNever Again! I would die first!\n\nThe green shield from Allan vanished, and I considered my old employer, \"You brought him over...? Why?\"\n\nAllan's face changed, and he looked almost crazed with anger as he spat out, \"You failed! That's why you stupid whore bitch!\" \n\nI took a half step back even though I was a good distance from the porch. The calm cool collected Allan of just a few minutes ago was gone, replaced with someone who looked insane!\n\n\"A simple job! SIMPLE! You almost had them too and then you fucked it up! A human comes in and beats you, I don't care if he is a mage or not. You are a damn succubus and are supposed to turn men's minds to mush and you can't even do that right!\" \n\nBalmont placed a hand on Allans back, rubbing him gently. A wing went out to shadow the smaller wizard.\n\n\"Allan Wade Dickson sacrificed much to bring me here, to get his revenge.\" Balmont said slowly. \"He contacted me about his desire to see the Gatewatch destroyed for killing his Sire. Told me how you tried and failed.\"\n\nAllan looked up then and said in a much calmer tone of voice, \"My Dad summoned a being from the fourth Plane and used it to learn how to cure a form of breast cancer my Mom had. Soon we published the results, my Mom was cured...then the Gatewatch came. Two men and a woman. My dad told them what he had done and why...said he would do it again to save someone he loved. They killed him right there. The woman stepped forward and we found out too late she was a vampire when she drained him right in our living room!\"\n\nI pondered this, still watching Balmont warily and wondering what this all meant...then it hit me.\n\n\"That was the old Gatewatch...the new members haven't done anything to you so why kill them?\" I asked\n\nAllan looked about ready to fly into a rage, but Balmont's hand on his back soothed him. I was curious about this, I knew it meant something...\n\n\"I want to hurt the old Gatewatch like they hurt me...death is too quick, torture too fast. Even if I could make it last the rest of my lifetime it wouldn't do a thing. Mom went insane after watching Dad be murdered in front of us. The vampire did something to Mom so she wouldn't remember, thought he died in a traffic accident. She ended up dying herself a few years later. Now it's just me...me and all I want to do is to make them suffer.\"\n\nHis face hardened after saying all of that and he looked up at Balmont who gave him a reassuring smile. ",
        "\"Now I have power, real power! Now I will kill the new Gatewatch and their parents will feel that pain for as long as they live!\"\n\nI nodded once, and shrugged. Made sense after a fashion. Theoretically it made a lot of sense. It would be effective but it still didn't answer my real question.\n\n\"I understand all that...but what did you need this chjorzit here for?\" I asked while pointing a claw at Balmont who grimaced at me. He gave his arm a shake making the chain clink again and my legs went weak.\n\nAllan gazed up adoringly at Balmont and kissed the massive hand of my old master. \"He will give me my revenge. After you failed I needed to get someone more powerful. He came to my call, and promised his service in return for my service to him.\" Allan fixed me with a stare.\n\n\"So simple a contract, he just pricked his palm and I did the same to my own...we clasped hands and each said one word.\" Allan stared dreamily up at Balmont who turned his head to me and his dark eyes were malevolent as he said, \"MINE!\" \n\nAllan's lips softly replied, \"Yours...\"\n\nChapter 35: Old and New.\n\nMy mouth opened wide in shock! What had Allan done? He had...the echo of what I had done, binding me to my Master but twisted in this way made me feel sick, almost nauseous.\n\n\"You fool! He will kill you...when he is done he will destroy you!\" I shouted at Allan. He didn't even turn to look at me.\n\n\"As long as the Gatewatch pays...I do not care.\" Allan said. \"I will give it all to make my pain stop and theirs begin.\" \n\nBalmont rumbled his approval and patted the wizard on the head affectionately like a good pet. Then he turned his eyes on me.\n\n\"So Little Bird... How do you want to do this?\" He asked. He flexed his arms making the chain creak around his forearm. My eyes darted to it for a moment before going back to his face. He grinned maliciously. \n\n\"You don't have the element of surprise now. Stories of your battle prowess spread throughout my realm. How you took on my entire court and left me broken and bleeding...\" His smile became a sneer.\n\n\"I will chain you to my wrist again, after I take your maidenhead and make you bleed! You will know your master!\"\n\nThe moment he said \"master\" he shook his arm and my eyes dropped to the chain around his arm he attacked with his other and flecks of darkness shot from his other hand. I opened my right wing and called up my armor at the same time. Those flecks exploded into flame against my wing, and I flexed whipping the burning mass back at Balmont who irritably shook it off of himself.\n\n\"I already know my Master...\" I said, cocking my head, putting a hand on my hip and waving my finger at him like Jemima taught me to do. She said I was dark enough for it, she called it \"Blackitude!\"\n\n\"And he is most definitely not you!\" I finished. Then I jumped and took off, winging away as fast as I could. I wanted a battlefield of my choosing, and I was very sure there would be a lot of collateral damage. I liked my house, and Greg and I had waited a long time before it had been finished getting fixed up. I had no desire to see it damaged.\n\nI heard the rush of air and saw in my peripheral vision Balmont giving chase. He must have been upset that his initial attack didn't work. I noticed that he didn't fly quite as well as he used too and it made me smile wider. I began beating the air harder as I thought of where to have our encounter. No place with people, they would just get in the way anyway. No place with anything really valuable...so the forest was right out. I loved the trees and plants too much for them to be destroyed. I remembered fairly close to where my Greg worked was a construction yard with office buildings around it. A good size too, almost like an arena with half finished structures in place.\n\nPerfect!\n\nA sudden silver flash made me roll in the air to the side as silver bolts flashed past me.\n\n\"You run? Full of fear then Little Bird...too much of a coward to face me?!\" I heard Balmont call. I risked a glance to see him chasing me, the wizard Allan riding on his back, keeping a low profile. I saw him raise his hand and give a shout that was swallowed up in the noise of the wind. I juked the same direction as more silver bolts flashed towards me, but I saw them alter course and follow me!\n\nI dove straight down and rushed towards the ground, then looped upwards trying to shake my attackers. I whirled in mid air holding my fingers in front of me. With a grunt I uttered a word then turned and continued flying. A mirror image of dust kept flying in my place and those silver bolts pierced my doppelganger and exploded with bright light! I heard a cry of triumph from Allan, then Balmont shouted something harsh and the wizard went quiet.\n\nThe chjorzit wasn't fooled. Figured, he wouldn't be a lord if he could be fooled by such a simple trick. I continued making my way to the construction yard. When I landed I instantly took note of my surroundings. I began placing small glyphs of great power over the ground in greater concentric rings. I had thought briefly of contacting the Gatewatch, but this was my fight. Besides, those women are pretty tough, and I planned on killing Balmont myself. Especially since now I know how strongly he is in this realm. He could die a true death, same as me.\n\nOn the other hand he is also here just as powerfully as me...hmmm...hope he likes my surprises then!\n\nI was ready and hiding in shadow, watching carefully as Balmont landed at the edge of the clearning. I was inside of the structure, slowly breathing through slightly parted lips. A part of me wanted to rush out and attack! Wanted to feel my enemy crumble under my fingers as I tasted his flesh and tore him apart! If anyone ever deserved it it was him!\n\n\"Out of the night that covers me...black as the pit from pole to pole...I thank whatever gods may be...for my unconquerable soul!\" I softly intoned.\n\nI saw Balmont slowly walk around the edges of the clearing, presumably looking for me perhaps. Allan went the other way. I wasn't too impressed with his magic ability. It was a pain to be sure, and his initial defensive shield had stopped my first charge, but he was inconsequential. First priority was the one with wings.\n\nI saw him undo my chain...no, not my chain! I saw him undo the chain from his arm and casually lash it back and forth. I gritted my teeth remembering how it felt the first time he struck me with it...how he had ordered me to stand there and take it! How I couldn't move, how I was helpless...\n\nI heard Balmont speak something and shoved those thoughts away as I saw him move, kneeling on the ground. He put both of his splayed hands to the asphalt and I felt a slow rumble in the earth. Soon beings began to raise up behind him. Creatures formed of rubble and pipe and stone. I cursed softly under my breath. He was creating doppelgangers of his own. He wanted to avoid my traps by having them come in first to disrupt them, find me and then attack me when I was flushed from hiding. I was tempted to run again, but my anger wouldn't let me.\n\nI wasn't sure if I could take him in a straight fight the way he was now. I could take out Allan first but he had just enough magical know how to keep me occupied until Balmont could get me. This was fast turning into a bad situation, and the way I saw it I only knew for sure one way out of it...\n\nAttack...!\n\nBut things had to be in place, so I watched as the dummies moved forward.\n\n\"Lucretia! My pet!\" I heard Balmont call. \"Why do you delay what we both know will happen? How about we make a deal?\"\n\nI couldn't help it, I wanted to hear what he had to offer. Succubae are all about making deals after all, it's in our nature.\n\n\"All I want is your maidenhead. I will be your first. I will let you go after that. If you don't resist me...I might even make sure I don't hurt you...\" He chuckled at that. \n\n\"Worried about your master? He won't know, it could be a deal between just the two of us... What he doesn't know won't hurt him. Better than me taking you by force, and then since you resisted I could always hunt him down and rip him in half because you made it harder on me than you had too.\"\n\nHe began pacing, which got me excited. He could move within range soon and I needed to be ready.\n\n\"I hear things in the gossip of the realms. Lucretia the Killer, Lucretia Blood Stalker, Lucretia the Grey...cares for her master. A succubus who cares! What a weakness...a joke.\"\n\nHe paused and was within range! I raised my hands and slowly closed them into fists. I started to gather my energy when I heard his next words and my throat seized up as he spoke.\n\n\"You know he is just toying with you don't you? How could a human care for a monster? You don't look anything like one of their women. You don't look anything like what a succubus should either. No chest or hips to speak of, thin face, no long flowing hair.\" He crossed his arms and stood in place continuing to speak.\n\n\"I had thought to try to bind your eldest sister Seneca to me. Now that is a real Succubae! All curves and flesh and hair. Why do you think it took me so long to want to take you? Only wanted to do it once because I had to! Wouldn't so much as touch you other wise. You are an ugly glob of clay Lucretia, being the daughter of a Queen is the only thing that makes you remotely attractive.\"\n\nMy fists were shaking so hard as I gathered up my energy, but I heard what he said next...\n\n\"If that is how I feel about you, then what would your master feel...its all a lie. HE doesn't care about you, and he never will.\"\n\nI knew it was a lie, that the chjorzit was just trying to goad me into something foolish. I just knew it, yet at the same time, it hurt! It felt like the time I had swallowed a tray of lemonade ice cubes Gwen had made for our sweet tea. A large cold feeling filled my belly, and it roiled like boiling water inside me.\n\nI gasped out a sob as he touched on a very real fear of mine and I channeled all of that emotion and the tears that wanted to fall into my attack. \n\nA chained barbed spearhead materialized between my fists and flew out to slam into Balmont's chest. He threw his arms wide with a roar and I grabbed the chain and began dragging him to me as quickly as I could. He passed near one of the glyphs and it exploded, large chunks of ice stabbing through him making him scream in pain. Then he passed over a glyph of fire and stalagmites of molten rock twisted through his body making him give a weak cry as he began twitching. It made me smile seeing him get weaker. I dragged him through several glyphs as his doppelgangers orientated on me and began to rush towards me.\n\nI pulled him into a final glyph that opened the ground up underneath his charred, broken and bleeding body. He plummeted to the bottom of a large hole, then it filled back in over the top of him, encasing him in dirt, concrete and asphalt. When the trap had run it's course, it was as if there had never been a hole to begin with. In his damaged state he would never be able to get out, and the wizard would not be able to get to him in time! \n\nHe was dead!\n\nI crowed out happily as I prepared my wings. The ridges of each one sharpened into blades and I whirled into the doppelgangers! Dropping low one second, rising up the next. Taking them off at their legs or just slashing them entirely in two. Oh it felt wonderful! For the last one I spun and brought out one leg to bring the claw on my heel right on it's misshapen head. I drove it face first directly to the ground, then smiled as I spat on it and walked away as it broke apart.\n\nI saw the wizard Allan, kneeling, his hands clasped. I wondered if he was going to beg for mercy. I wondered if I should give him mercy after all he had done.\n\nNo...Allan was crazy. His need for revenge was overwhelming any sort of sanity he did possess. I walked up to him and looked down as he knelt, his eyes meeting mine. His eyes looked so old in that young face. A face that appeared to be aging quickly. I wondered at that...could this be what Gwen was talking about how stress ages people prematurely? Then I saw it was still happening! Allan appeared to be aging ten years right in front of my eyes! \n\nAn explosion behind me made me whirl and dance out of range of Allan in case he tried anything. Balmont was pulling himself out of the rubble, hand over hand crawling out of the charred hole. He was panting as he stood up and shook himself. I could see the giant rents and burns in his flesh closing rapidly and my eyes widened in realization. \n\nHe was draining the life energy from Allan to heal himself! \n\n\"I wonder if you could do the same thing Little Bird?\" Balmont said suddenly. I grimaced and spread my wing blades...ready to move.\n\n\"I know you have it in you to draw energy from your master...will you do that to someone you care about? Drain them...make them become less so that you can become stronger? I can't let you find out.\" \n\nThen he disappeared and I felt claws rake down my side and across my belly! I cried out as I felt my armor shatter all down my side and things break and tear inside of me! One of my eyes was covered in blood and I wiped my face, wincing as I did so. I pressed a shaking palm to my eye and I felt nothing...I pressed harder and still felt nothing. I tentatively touch a finger and my claw moved all around the socket...my eye was gone!\n\nA moment of panic filled me, then I concentrated on healing for a moment and Balmont smiled. \n\n\"This should be interesting...\" he mused as he scratched the side of his neck, dislodging more of the debris from the hole I had put him in.\n\nI was still bleeding...I was telling my body to heal and still bleeding! That moment of panic came back and it became Panic!\n\nI saw Balmont raise his large hand as if on cue...His nails had grown out into heavy thick claws, short and blunt. He considered them before looking me over. \n\n\"Poison, of my own make. You can't heal from it, except if you use up your stored energy. So...will you draw from your Master?\" He shook his other hand limbering it up. Claws grew on those fingers too.\n\n\"Lets see Lucretia, how long your master can hold out with you drawing from him. I bet my servant lasts longer!\" Then he rushed me and slammed me into the ground! I rolled and called to that bundle of energy I had taken from the werewolves. It was just enough to heal up my major wounds, but my eye was a lost cause. With his next charge he came in roaring like a dragon, which is horrifying but dragons have eyes on the side of their heads so there is a blind spot you can exploit. So dragons never really concerned me that much. \n\nFor this attack I ducked and curled my armored wings around myself and then raised up launching him into the air. He spread his wings when I slammed the end of another chain into his back and yanked him down back to the earth on another glyph I had spread out. I saw lighting dance and curl around his form as he bared his teeth and yanked me into the magical trap. I allowed myself to be pulled, my one good eye showing fear until I hit the edge of the trap and ran right in. He looked shocked for a moment before I slammed my clawed fingers down into his head.\n\n\"I am my father's daughter! Lightning is my friend!\" \n\nI beat him back and forth, my claws ripping across his skin faster than he could heal. I figured if I could keep the damage up then I could hopefully make him use up Allan's energy before he could heal up too much. Then Allan would die and we could have more of an even fight. I drop kicked his head hard and was about ready to follow it up when I heard a groan from behind me and a wall of fire appeared around me.\n\nFire is not my friend...\n\nI leaped out of the fiery cage and tumbled across the ground, wincing at the where the fire had burned me through cracks in my armor. Normally fire hurts but I can heal fast enough to keep up with it. This though, I couldn't afford to expend the extra energy. I saw Allan collapse and grey hair begin to form at his temples.\n\nThen I heard the clinking of the chain...and my heart stopped for a moment.\n\n\"Enough toying with you Little Bird! Time to learn your PLACE!\" I heard Balmont bellow. I rolled as I heard the whistling sound of air through the links in the chain. It missed me, mostly... a furrow of dark asphalt was torn from the ground and a good chunk of armor from my legs. I screamed more from fear and shock than from pain. The chain came down again as I tried to scramble away but my legs weren't working very well since they were trembling so bad.\n\nFear, oh the bitter taste of Fear was in my mouth. The second time the chain hit I froze, mouth open, trying to scream. It was all coming back to me...\n\nI was scared then as I was now, my arms began to curl around my body as my wings tried to shield me. I curled up my legs and began to pull in my tail as the blows fell. I felt his hand grab my tail and pull me to him! I cried out and I felt the chain rip across my already wounded belly tearing it open. \n\nI lay on my back crying, and felt water on my face. I hadn't noticed it before...but that storm I had seen rolling in earlier with Mr. Brooks had finally arrived. I stared up at the clouds and had a thought...\n\nI could barely move but I cracked my lips open as rain fell on my face. \"Lord of Mr. Brooks...I don't know what to do...help...\" Then I felt Balmont's fist smash into my face, driving my horns into the ground beneath me.\n\nI felt my legs being pulled apart. \"You made me work for it Little Bird, now it's not going to be pleasant at all for you!\" I felt his claw finger slide over my belly and my own blood being slathered over my lower lips.\n\n\"There, now your'e nice and ready for me. Hold this for me...\" I felt the chain coil onto my chest, its cold weight pinning me down as surely as if I had been frozen in place with a spell. I felt rough hands pull my legs further apart and push them back to my shoulders, making me cry out as my split open belly gushed fresh blood.\n\n\"Don't scream for me yet...save your breath for when I really get going...I have waited a long time for this moment Little Bird!\"\n\nThen, I felt something shift inside of me, a small tickle at the back of my mind...a warmth began to fill me as something began to open. An awareness that I was intimately familiar with began seeping into my body, and I laughed once which made me cough and I hacked some of my blood out onto my chin. My one good eye blearily looked up into an intent but slightly puzzled looking Balmont's face. He opened his mouth and appeared to be about to speak when there was a rushing pop sound and a blue flash followed by a shrill scream! \n\nBalmont pushed his hand on my chest making me wheeze as he turned his head. His hand covered my chest and arms down to my elbows. I had forgotten just how massive he was. I looked over as best as I could and saw...\n\nMy Master! He had woken up!\n\nGregory was wearing his old faded blue jeans that had bloodstains on them from the werewolf attack. He also was wearing a flannel shirt that looked to be too long on him, and I recognized it as Mr. Brook's shirt. He was holding Allan around the throat with one hand, and was holding Allan's other arm by the elbow outstretched from his body.\n\n\"Cast a spell like that at me again and I will...\" Gregory punctuated the sentence by jerking his hand and Allan screamed as his arm now dangled uselessly at his side. Gregory let him fall and slowly turned around to face Balmont who still had me pinned down and was ready to take me.\n\nHis eyes, oh my Greg's eyes were glowing blue, like flashlights! He rolled his neck once and grinned.\n\n\"I don't know who you are...and honestly I don't care. You let go of my friend or I will rip you a new asshole!\" He said with a smile that showed all of his teeth.\n\nBalmont seemed to consider. \"We appear to be at an impasse young mage. How about we make a deal? I could always...\" Balmont whipped his head to the side as Gregory kicked the ground, a blue shield enveloping his leg, and a chunk of concrete clipped Balmont's horns knocking his head to the side.",
        "\"You dare...Ooomph!\" He bellowed as Gregory slammed into his chest knocking him off of me. I had always known Master could move quickly when he wanted to, but this was amazing! One moment he had been fifty to sixty feet away, then he had charged with his shoulder into Balmont's chest in the blink of an eye.\n\nI heard a wordless cry from my Master as he raised and lowered his fists slamming them into my old master again and again. I tried to move to help but I couldn't, everything was going very dark. I placed my hands on my stomach, feeling the massive tear in my flesh and whimpered as I tried to hold it closed. Was this what my Greg had felt when he was lying on the ground? Would I be close to death too? I heard my Master fighting and closed my eyelids. The rain felt good, I would just sleep for a bit and when I would wake up we would be in bed, my Gregory and me.\n\nI was so glad my Master was awake...\n\nChapter 36: The Door\n\n(Gregory's Viewpoint) \n\n24 hours earlier...\n\nI could hear my name being called but I ignored it. I wanted to sleep. Sleep was always a good thing. Not so much in jail because I would always dream of the outside world, or of nightmares. Nightmares I almost always had in jail, but when I woke up from them I was almost always happy to see the concrete walls around me and know that it was just a dream. The happy dreams that were the worst. In my dreams I would wake up in my old bed and get up, have a cup of coffee. Or I would go out for a walk and see the farmer's fields around my home and watch the clouds turn bright in the morning sun. Then get ready to go to work.\n\nSleep with no dreams was a wonderful luxury and I was prepared to take full advantage of it by going back to sleep and forgetting all about the real world. I wanted nothing to do with werewolves, witches, warlocks, or talking rats, or vampires or chupacabra or any of it! I wanted to fade away to nothing and never come back!\n\n\"Gregory?\"\n\nBesides...what was life to me now? I was labeled a monster, treated like a monster, and viewed as one? This was my perfect opportunity to pass on right? I mean...heaven is out there right? Go to heaven and see God if heaven exists and then it all will be out in the open and everyone will know that I am blameless of that sin. Course I have done a bunch of other foolish stuff and that will all be out in the open too. Hmmm, maybe we can gloss over some of the more embarrassing things? They weren't really bad but were VERY embarrassing.\n\n\"Gregory? You need to wake up now.\"\n\nSuicide...is it suicide to really give up on life? For so long I had been merely surviving...existing. Now that I know I have been hurt badly if I gave up and let myself move on to the next life would that be considered suicide...or just merely giving up? Is there a difference?\n\n\"Gregory, we need you...Lucretia needs you...can't you feel it?\"\n\nWish that voice would leave me alone...Lucretia. Yeah...what about Lucretia huh? She is the most kickass person I know. Even if she isn't human she is more human to me than anyone I know outside of immediate family. Talk about patient, I am one moody son of a gun. A depressing wet blanket. She puts up with all of that! She saved me from more than just those werewolves...she saved me from me! She made me curious about life. I am supposed to teach her about women am I? Teach her how to seduce a man? I don't know the first thing about any of it! I gave her free will and what does she do? She obeys me...she tries out all of my suggestions and puts up with my orders even when I seem to be clueless. I feel like the blind leading someone who can see half the time...I don't deserve to have someone so incredible in my life.\n\nI sometimes wish she had killed me.\n\n\"Child...do you truly wish that? If that were true then this has all been a waste, and all has been for naught.\" A voice made of spun sugar with a touch of sour lime spoke. I opened my eyes and found myself in front of my Door. The words on the floor were crumbled and dust. The final word emblazoned on my door itself shone with an eerie orange light. I turned and saw a slight woman with a mouth full of sharp teeth. Her skin and hair were as white as newly fallen snow and her eyes were a pearlescent white that were looking straight into mine.\n\n\"Hi...ummm...Mother.\" I said lamely. Lucretia's mom always freaked me out a little. She smiled, and it made my spine tingle.\n\n\"Greetings Gregory. You still wish to die?\" she asked.\n\n\"No, not really. I was just having a pity party for myself.\" I replied.\n\nShe cocked her head regarding me. \"A pity...party? Festivities for something that is useless?\" I sighed.\n\n\"Its not useless, well, actually it is kinda useless but feels good for a short time. Sort of.\" \n\nShe seemed to roll this concept around for a moment and then glanced back at me. \"So are you done with this pity party now?\" I snorted and nodded my head.\n\n\"Good because it will be time for you to wake up shortly.\" She said with a nod of her head. She walked over to my door and stood beside it, indicating the symbol.\n\n\"Do you know what this is?\" she asked me. I nodded. \"It means Surpass.\" She smiled and again I got the heebie jeebies! Why is it that when Lucretia smiles at me her sharp teeth are hardly noticeable...but when Mother does it, it makes me want to run and hide?\n\n\"You are correct young mage, now...you have passed the tests of the other words. Become, you have chosen what you wish to become. Grow, you are growing into what you have chosen to become. Learn, you are learning how to grow into what you have chosen to become...\" She paused, and ran her fingers over the symbol and I felt it like a feathers brush on the back of my neck when she did it.\n\n\"I wish to know why you have not Surpassed this obstacle...why is this Door still here?\" She asked me.\n\nI shrugged. \"It's done its job so far, keeping everything inside so I don't have to deal with it\" She shook her head and growled slightly.\n\n\"What has it really done for you boy!\" she spat at me. I recoiled away from her. She appeared to take hold of herself. She ran clawed fingers through her white hair and gave me a sweet smile.\n\n\"I am not very good at having patience with those who cannot see...\" she said softly.\n\n\"What am I supposed to see?\" I asked, feeling very confused. She sighed and waved a hand and made a large mirror appear in front of me.\n\n\"Tell me what you see...\" she said in that odd voice of hers. I pondered my reflection. I saw myself, naked, but not feeling shame for it. Even if I was in front of Mother who I considered a female I felt no shame in my body, no desire to cover up. I wondered if it was the fact that this whole exchange was happening in my mind that made it that way for me.\n\n\"I see me...\" I said slowly. I was trying to figure out if this was a trick question or not.\n\n\"Would you like me to tell you what I see?\" Mother said after a moment. She seemed almost disappointed. Well, I have disappointed a lot of people so why not a succubus queen? Round out the whole collection!\n\nShe chuckled dryly, \"You do not disappoint me young one. As I said, I am not very good at patience. It is no fault of yours, only mine.\" \n\nShe stood next to me looking at her own reflection for a moment and seemed about ready to preen then caught herself and looked me over.\n\n\"I see a very strong aspect of who Gregory Brooks is, and I would very much enjoy meeting the man.\" She said quietly.\n\nI looked down at her in surprise...hadn't expected that. Her words made something inside of me tremble with a sharp pang of fear. Like when you reach inside of a drawer for the fillet knife and you grasp it in your hand and feel the bite of the edge of the blade in your palm. You freeze for a moment and then slowly draw your hand out to see if you have been cut. Something like that.\n\nShe nodded her head as if reading my mind.\n\n\"Did you believe that you were Gregory, and that you had pushed your emotions and feelings away into a dark place?\" I nodded and she laughed a short sharp bark of a laugh.\n\n\"That is impossible to do, to really do! All you have done is hide who you are and allow the world to be your cage.\" She raised up a hand and patted my dumbfounded cheek.\n\nYou are the aspect of Survival...Gregory Bastion Brooks. Oh more of you has leaked through than you know. Your sense of Justice and your innocent Trust have come through. I sense Compassion has made itself know as well. Your Door never really was there and I have been waiting all of this time for you to break the final seal and open it. I have wanted you to become whole again, instead of just ignoring who you are and trying to live your life without caring.\"\n\nMy mind was whirling with all of this information . What was she saying? If this was true and for some reason it appeared to resonate within me as true, then I had been...what had I been doing all this time?! \n\n\"Trying to protect yourself from the harsh realities of this world...\" Mother answered. \"You had always believed that you do the best you can with what you have, do no harm to others and no one will hurt you. This is a lie that many believe.\"\n\nShe waved a hand and the mirror dissipated into nothing, taking my reflection with it. \"There is a rule that you believe yes? People believe what they want to believe. That is the rule yes? It has been written in many different books and you humans quote it often enough so one would think they would listen to it.\"\n\nShe sighed and shook her head, \"You tell someone something and they see fault with it or offense even though none was meant and then they chastise you for it. Even a simple slip of a word or two can cause others to despise you or wish you harm. No Gregory...you cannot live a good life just by being a good person.\"\n\nI took a step back from her hand grabbed the sides of my head.\n\n\"Listen to me Gregory Bastion Brooks...\" Mother began.\n\n\"I am!\" I shouted back at her in angry exasperation, and walked right up to peer down at her face. \"You say that you have a hard time with patience? Well then, let me point out to you to have a little more patience and give me a chance to breathe!\" I panted at her.\n\n\"You want me to open that Door and your asking me why I don't and your telling me a whole bunch of bullshit and having me look in mirrors and spout a bunch of words at me that make no sense...\" I paused and considered what I had just said.\n\n\"Actually they do kind of make sense but it doesn't really apply right now. You asked me a question, and I want to answer it.\" I took a deep breath, glared at the Door and then sighed out my air.\n\n\"I am afraid...\" I said softly.\n\n\"Of what?\" Mother asked.\n\n\"Of...I don't know...the unknown? I haven't really been whole in a while and I know I got a lot of pain locked up in there.\"\n\nMother nodded, \"There must also be a lot of good, after all you like yourself don't you?\" I glanced back at Mother before staring at the Door.\n\n\"The unknown is really very frightening to me, Sounds weird to say it like that but it is...What am I supposed to do if I can't handle it...I...I don't know what to...\"\n\nMother interrupted me, \"Lucretia will help you...if you can Surpass your own fear in time.\" \n\nThat pegged something inside of me, maybe it was Mother's tone of voice but it carried a clear and distinct warning in it.\n\n\"You need to Surpass your fear to Learn to Grow into what you have chosen to Become.\" Mother said simply.\n\nI waited for more, but it didn't come. \"What does Lucretia have to do with it?\" I asked slowly. Mother shook her head.\n\n\"No...Mother it is important, please tell me. There is something your keeping from me.\" I asked sternly. The quaver in my voice gave away my emotions.\n\nMother sighed and looked down as she crossed her arms under her breasts.\n\n\"If you do not Surpass...Lucretia will die.\"\n\nThose words hung in the air as if drawn there. I heard them but also could see them like bold print glowing darkly on the inside of my forehead. The moment of silence lengthened as I stared hard at Mother. \n\n\"Surpass my fear? That's it...get this Door open and...and Lucretia won't die?\" My voice was rough and choked as I stumble towards the Door. It didn't even occur to me at the time to question what Mother was telling me. I felt it in my entire being, she believed it and so did I.\n\nMy hands found the locked wheel and I saw the little bit of play in the chain, I began inspecting it, looking for a weak link. Normally the Door always wants to open, now it was still and silent. I glared at it. Of all the times for it to behave...now was a very bad time to do that!\n\n\"Come on!\" I groaned, searching the chain. I heard Mother speaking to me.\n\n\"You need to get over your fear first Gregory...\" I didn't even turn around as I spoke.\n\n\"Damn getting over fear! Damn tests and damn the waiting! I don't care if I am afraid, fearful, or a scaredy cat! I need to get over this to help Lucretia...? Then I will!\"\n\nThe chain broke in my hands and the wheel spun without me touching it, and a second later I heard the clink of metal as the bolts fell into their unlocked position.\n\n\"Well done.\" Mother said behind me. I stood up and squared my shoulders. I grabbed a hold of the door and I saw the symbol on the door glitter again. I took my other hand and wiped it off.\n\n\"I guess I just needed a reason to open it that was bigger than my fear.\" I muttered to myself. I opened the Door and stepped through.\n\n(Addendum)\n\nMother stood quietly watching as the Door opened, then shut and vanished from view.\n\n\"I do not see why I had to be the one to tell him these things...is it not a parents job to do?\" Mother said quietly.\n\n\"You are a parent yourself...\" Mr. Brooks said. He stepped forward to stand next to Mother, staring at the blank wall that had once held a portal that his son had locked. \"Why did you not do the same thing with Lucretia.?\"\n\nMother glanced at the much bigger man next to her and shrugged. \"I tried...many times. But...she would not listen.\" Mr. Brooks nodded in agreement.\n\n\"Sometimes we have to hear it from someone who is not a parent, and sometimes from someone who is not a friend for us to believe it.\" He paused for a moment, then smiled. \"Probably why people go to see therapists so often!\"\n\nMother gave him a questioning look to which Mr. Brooks replied, \"A therapist is someone that people pay a fee to listen to their problems and offer advice or an outside opinion to help them.\"\n\nMother snorted and shook her head, \"Humans are strange...!\" Mr. Brooks nodded, smiling as well.\n\nThe succubus queen hesitated a moment, then looked Mr. Brooks squarely in the eye.\n\n\"When you summoned me, after so long...I was curious.\" She stopped, again considering her words.\n\nMr. Brooks continued instead, \"I only knew that I felt the prompting to summon you and tell you of the problems of my son and find a solution with you. It made no sense to me either...but here we are.\" He placed a hand on Mother's shoulder. \"I never dreamed we would be helping your daughter.\" He thought a moment and smiled a little, \"I really like her, a lot. Didn't think that I would.\"\n\nMother grinned a shark tooth grin at him and he matched it with his own. \"Gregory is very much like his father when he was younger, he is good for my daughter.\" She turned from Mr. Brooks and began to walk away. \n\n\"Yes, we are helping them...and accomplishing so much more as well!\"\n\nChapter 37: Bandages.\n\nI thought for sure I would be surrounded by blue light or white or something dark and dreary. I wasn't though. The moment the Door opened I felt it disappear from my fingertips and I was blinking at sunshine on my face. I held up a hand as I blinked and squinted to adjust my vision. After I could see again I looked at, and then goggled at my surroundings!\n\nIt was a giant pasture bordered by wheat fields and vineyards. The grass was thick and lush and I could feel it between my toes. I took in a deep breath of clean air and almost purred in satisfaction. The sun felt good on my body, like I had been in the dark for too long and my skin was thirstily drinking in the golden light.\n\n\"Your back!\" said a surprised voice. I turned and saw what I thought was a smaller version of myself dressed all in black with a hood on. He spun once and slammed a small globe on the ground causing a flash of smoke to appear with a bang! When the smoke cleared, he was gone!\n\nI heard a lighter flick and looked next to me to see Justice standing beside me. \"Do I even want to know?\" I asked him.\n\nHe rolled his now lit cigarette to the other side of his mouth as he pocketed the lighter. \"Near as I can tell, since I have no idea what aspect he is, he was the part of you that wanted to be a ninja when you were young.\" \n\nI made a sound that was somewhere between a gasp and a laugh. \"Seriously? That is so...I don't know...geeky?\" \n\nTrust pulled at my hand to get my attention and I looked down at myself...wow this was going to get confusing! \"Come on! Lets get this done! He is waiting...\"\n\nWho was waiting? I'd kind of thought that I was the lead dog. I was Survival after all. Wasn't I the most important aspect of...well...myself? Trust began leading me down into the pasture. And I began to see more faces. I saw the studious part of me reading next to the lazy part of me fishing. I had always thought those two kind of went hand in hand since I enjoyed reading so much. I saw a few aspects hunting, one that was a boy with a slingshot. The other as a teen with a bow and arrow, and the final very close to they way I looked now give me a glance and a nod before aiming at his target with a rifle.\n\nThere were so many, too numerous to count...all variations of the major aspects of who I was. Walking through them, being led by the hand by Trust and being followed closely by Justice...I began to feel it all again. I began to remember all of those memories that I had pushed away because it hurt to think about them now. I began to remember old friends who I hadn't seen in ages and the bittersweet taste of those memories filled my mind. A memory of getting punched by bullies and then getting up and even while crying fighting back against them. I don't remember how it ended as even more memories flooded in.\n\nTrust stopped walking and I was standing beside a pool next to a large tree. Looked to be a sequoia of some kind. I looked down at the pool, it was glowing softly, a rich blue that looked like a piece of the sky above had fallen down to nestle in the grass. It made me think of Chicken Little with the whole shtick of \"The sky is falling! The sky is falling!\" It made me chuckle quietly to myself.\n\n\"Something funny?\" a raspy voice asked behind me. I immediately stopped laughing turning to face who I knew it was. I had only ever seen his face, covered in bandages, now I could see all of him. He was as tall as me, and as wide. His fingers twitched at his sides and his red-rimmed eyes looked like they had been crying. I watched him carefully as he moved a little to the side, closer to the pool.\n\n\"I asked you a QUESTION!\" he thundered and all the other aspects moved to give us more space. Trust and Justice stayed by my side. The bandage man gave them each a look that could have melted lead.\n\n\"Traitors...he left US! Now you side with HIM?\" He took a step forward and Justice met him.\n\n\"There is no him or you or us you pain blinded idiot!\" He opened his mouth to say more when the end of one of the bandages came up and wrapped around Justices's head and mouth. It was as if he had been plugged into an electrical socket and his body twitched and spasmed like he was having seizures! Trust moved to help him but I held him back and we watched Justice thrash on the ground, trying to scream but unable to.\n\n\"There you go Justice...see what I have had to endure for YEARS! Because of HIM!\" he said while pointing at me. ",
        "Trust spoke up then and in his high childlike voice said, \"So what?\" The bandage covered aspect of myself fixed him with his eyes and waited.\n\n\"So what? We need to all be one, because this is killing me, its killing all of me!\" He turned to me and looked into my eyes. \"Isn't it hurting you too?\" I swallowed, unable to look away from that innocent child's face. He put his hands on my waist.\n\n\"I searched everywhere for good memories to bring you back to us when we would visit you. Justice and I would go down to your box and wait for you to come out. It was dark in there and dirty, but we would wait in there for you to come back and notice us again. We wanted you to be free, to be with us again so we could all be one...\"\n\nTears came to his eyes, \"Now you're here, and you need to...you need to...AHH!\" He screamed as a bandage wrapped around him and he was tossed to the side to lay next to a motionless Justice. I did't even think, I just attacked. There is one thing I don't tolerate, and that's hurting kids! Well, beyond a wholesome discipline like spankings and such. I plowed into that walking linen bandage and started pounding on him!\n\nHe just began laughing, and began laughing even harder when my shields came up and my power flowed into my body. What was with this guy, I was hitting him hard enough to break bricks like Styrofoam and he was laughing?\n\nI was yanked back by the bandages but they didn't seem to hurt me like it did the other aspects...he stood and dusted himself off, and I really took a close look at him. He was wrapped like a mummy from head to toe in pure white linen cloth, even around his fingers and toes. Just a nose hole and some eye holes was all that could be seen.\n\nHis movements were pained, made sense when I remembered that he had told me that those bandages were the pain of nine years of what had happened to me wrapped around him...but what aspect was he?\n\nThe others all made sense, the costumes, mannerisms and all that showed me who and what they were. I had nothing to go on here! Well it felt pain, that was something...but so did my other aspects. It seemed to be able to use power like my own, even told me how it would allow me the use of it sometimes. Appeared to want to teach me, and guide me sometimes...though it had kind of a cruel way to go about it!\n\nSo what feels emotion and pain and is linked to all of my other apects and fellings and yet is still linked to me after a fashion when I concentrate on Survival alone...\n\nShit!\n\n\"You're my Heart...!\" I exclaimed softly.\n\nThe head snapped to face me. I began walking towards him, hands outstretched. There was so much I wanted to say! So much I should do! Just saying what he was out loud seemed so insufficient. Just recognizing him...what had I done?\n\nI came closer still and he braced as if from a strike but instead I ran fingers over those bandages, I could feel tears prickling at the corners of my eyes as I tried to feel his features to remember. I started pulling and trying to tear the cloth then found the knot and started unwrapping the linen from around his head as he faced me stoically not moving a muscle until soon I saw him...\n\nMy face, frozen in time...the expression of dismay that showed how my heart had fallen inside of me when the guilty verdict came down. A young man of 26 looked into my eyes and said softly, the rasp still there but not as strong. \"How could you do it to me? How could you take me and wrap me up like that? How...? He stopped as I hugged him tight and began sobbing. It was as if a little piece of who I was was coming back, not smothered anymore by the pain.\n\n\"I thought that...\" I sniffed and hugged him tighter. \"I thought that if I pushed it all down around you, that I wouldn't feel it...I was going crazy I tell you! I was going to go postal or do something stupid! So I...So that's what I did...I am so sorry.\"\n\nHe pulled back just a little and stared into my red-rimmed eyes, now a match for his own.\n\n\"I can't forgive you...\" he said softly, as the bandages slowly began to wind up his neck. I saw this and grabbed the linen, trying to pull it back down. I was pulling as hard as I could and even with my power it wouldn't budge, then I had a thought and I turned to look around at those who were watching, and I saw a young man with a kind face in overalls and a straw hat.\n\n\"You, Compassion?\" He nodded and his smile showed through his lips exposing a gap toothed grin. He came forward and I took his hand, without even hardly a thought I felt him slide into me, and like a jigsaw puzzle I had a larger picture inside of my mind.\n\n\"Even with Compassion, I can't forgive you...\" my Heart told me. I nodded in agreement. \n\n\"No, I can't...but I can forgive myself.\" I replied. I softly took the end of the bandage and it yielded to my fingers as I began to unwind it.\n\n\"What are you doing?\" My Heart asked sharply. I smiled sadly as I continued unwinding the bandage. I felt a pickling begin in my fingers, like a low hum of electricity was flowing through the fabric.\n\n\"This should never have been placed on you. Pain is meant to be shared, not shouldered alone...\" I said quietly. My Heart's eyes widened and his hands came up to grab at mine. \n\n\"No! Don't take it away! I need this...I need this strength, this power!\" His fingers dug into my wrists and I paused to consider him, my younger self.\n\n\"No, you don't need it...\" I thought a moment and then amended my words. \"I.don't need this pain. I need something different to fuel me, to make me move on. I need a different form of protection...\"\n\nMy heart stared at me and whispered softly, \"Lucretia...?\" I nodded. \"She needs me...?\" I nodded again, slowly.\n\n\"How do I get this off?\" My heart said as he began pulling on the bandages. I felt a hand on my waist and looked down to see Trust looking up at me. \n\n\"Pain is meant to be shared, to be carried by many people. That way it is, made smaller with every hand that touches it.\" He took the end of the linen cloth from my fingers and clenched it in his own grubby fingers and looked up at me with a quavering smile.\n\n\"See?\" He said bravely, as his hand began to jerk and tears formed in the corners of his eyes. \"It's not so bad...\" \n\nI ruffled his hair as he sniffed and wiped the sleeve of his shirt over his eyes. \"Pass it on...\" I told him.\n\nSoon every single aspect of who I was, the hunters, the knights, the boys and men all came forward and all took a piece of the bandage and kept pulling. My Heart grimaced and groaned as the cloth began to pull from him, in some areas it tried to stick in place and he yelled that he wanted it to stay, but I spoke to him/myself calmly and softly and pulled a little harder. Sometimes I had to give a yank and we all cried out together as flesh sometimes came along with the bandage!\n\nAfter a period of time, I don't know how long, we were all standing together in a group, every hand holding onto the linen, my Heart holding onto the end. He looked up at me, smiling a tremulous smile and said. \"We...no..I am FREE!\"\n\nThen all the aspects began to move towards me, each holding a piece of bandage. In moments they sank into me and I could feel in my mind who and what I was. It shocked me to realize I had hidden away so much of who I had been or was or whatever! It was...weird and yet comforting. Like sitting in a bean bag chair for the first time when you thought a straight ladder back chair was the only way to go.\n\nI opened my eyes and felt, for the first time, almost complete. What I had felt before when Justice and Trust came in was NOTHINNG compare to this. I saw Heart looking at me, the final piece of myself. He was still holding one end of the bandage and carefully fingering it before he looked into my eyes.\n\n\"Never again...you hear me? Never. Again!\" \n\nI nodded, and with a cry he leapt forward and hugged me...and disappeared. The world shook under my feet, and the glow intensified from the pond. I stepped over to it, admiring it's size and depth. Didn't take a scientist to figure out that this is where my power lay. I had tasted it before, and knew what I was now. I was a telekinetic mage. I could move things with a thought, and protect myself from harm. I was like an X-men character! I almost slapped myself in the face at that!\n\nI stepped closer and caught the reflection of the blue sky above, that was slowly changing to purple and orange, the sun was setting. Made sense, I was whole now. I knew who I was. Now...how do I get out of here?\n\nI thought about jumping into the pond...maybe have a cool transportation event like in the movie Tron. Then shrugged. Maybe I should just wait and see what happens? \n\nThe blue glow was getting stronger, and I was surprised at the intensity of it. Was the power waiting for me really that strong? I searched back in my mind and couldn't remember a thing that would explain to me where it came from...\n\n\"It's a Brooks family thing...\" I heard my Dad's voice behind me. It also came so suddenly that I jumped in place!\n\n\"Whoa! Dad! What the he...heck!\" I caught myself before swearing. He was standing there, smiling at me and I could have sworn I saw tears in his eyes. He sniffed once and coughed.\n\n\"Its so good to see my son back!\" He said. Then stepped forward to wrap his arms around me. I could feel his chest shaking as he kissed the top of my head and his arms tightened almost painfully around me.\n\n\"The Brooks family always has one every few generations. Don't know how it started but every now and then we have a family member pop up who is special, gifted. We don't say anything about it because sometimes it skips several generations. We just take it as it comes.\" He said as he wiped his eyes and stepped back, smiling at me.\n\n\"Your Grandfather knew plants, could talk to them and help them grow. We thought that was going to be it, and then my younger brother, your Uncle Grover, turned into a bear cub in his crib. Now you, my son...you're a mage!\" He glanced up at the sky and smiled wider at what he saw.\n\n\"And a very powerful one at that too...\"\n\nI looked up but didn't really see anything. \"What do you mean?\" I asked. He looked back down at me and spoke quickly.\n\n\"There isn't much time son...Lucretia is fighting her old master even as we speak. She is not strong enough to fight him and the wizard he has bound to his service...\" I blinked and shook my head trying to keep up.\n\n\"Lucretia, old master, and...huh?\" I stuttered.\n\nMy Dad put his hands on my shoulders squaring me up to face him. \"That doesn't mean anything right now, important thing is you understand this. Lucretia needs you...you must go to her. Feel her...Find her. That's the most important...Feel Her...Find Her...Save Her...Understand?\"\n\n\"Feel Her...Find Her...Save Her. Sounds simple enough.\" I said slowly, giving a lopsided grin at the end. Dad nodded and gave me a startlingly fierce grin in return. Kinda creepy to see that on him. My Dad was an easy going guy all about honor and stuff. Not violent at all, I knew he could be but still...\n\nCreepy!\n\nI turned from him and got ready to jump in the pond. I had read this story before. Power in pool, jump in pool and go home. Made sense.\n\n\"What are you doing?\" Dad asked. I looked over my shoulder. \"Umm...power is based out of this pond, because it's glowing? Jump in and go home right? Or wake up from this weird dream my head likes to do to me every now and then...?\"\n\nDad laughed very hard, and covered his mouth before putting his hands on his hips and smiling at me. \"Only you Gregory! Oh my son...are you in for a surprise!\"\n\nI didn't know what he meant, but...oh well. I looked back into the pool that was the glowing with the same blue light as my power. Wondered if it was cold? Just jumping in like this fully would be a heck of a shock if this pond was cold! \n\nI tucked and jumped, thinking I'd land feet first, but instead I kept going up, and up and up! I shouted in surprise and looked up at where I was...falling? Or...man this is confusing. I saw the sky flickering with the same blue as my power, I looked down and saw the pond reflecting that same light. Did that mean...?\n\nI thought the pond had been the seat, the center of my abilities, but now I realized it was so much bigger than I thought it had been. I remembered what my Heart had told me just a while a go before I knew what it was, that I had been using just a fraction of my abilities! I smiled as a warmth filled me. \n\nI was whole...I had power...I still had pain, but it was spread out over who I was.\n\nI was me!\n\nThe sky swallowed me up and I closed my eyes in contentment.\n\nChapter 38: Lord.\n\n\"Gregory! Put me down right NOW!\" I opened my eyes to see Mom looking right into them. She looked angry, flustered and very...well...put out I think is the best way to say it.\n\nI also wasn't touching her, and I don't really remember Mom being tall enough for me to look her in the eyes, and why was she holding her arms out like that? \n\n\"M...\" I had to cough, like my throat hadn't been used in a while. \"Ahem! Mom?\" I tried again.\n\n\"Gregory, yes I know your awake now and I am glad you are. I love you but could you please put me down!?\" Mom said rapidly.\n\nI swiveled my eyes and gasped as I realized that I was floating above my hospital bed and Mom was being held up as well! I looked back with wide eyes and cut the feeling of energy towards Mom making her scream as she fell!\n\n...Right into Dad's arms. \n\nWhew! I looked down at my arm that was feeling pain and saw the needle still taped into place from the IV. I hardly thought about it before it slid cleanly out of my vein. I was still floating over the bed in a hospital gown, and again without even hardly thinking about it I righted myself and stood on my own two feet! I rolled my neck and experimentally flexed my arms and rolled my shoulders. I was feeling pretty good actually. I remembered the werewolf attack and grimaced a little. I felt my shoulder again, the left one, and realized I had no pain. I looked over at Mom who had righted herself and now hugged me and began bawling!\n\n\"My baby! I was so worried and scared for you! Then Lucretia was here and then Gwen came here and fixed you up. Your foot was broken so badly your toes stuck out in different directions and she fixed you, but you wouldn't wake up! Then you woke up and I started floating in the air with you then you opened your eyes and...I am so happy your okay!\" She clutched me tighter and continued crying.\n\nLucretia had been here? Of course she had been...she had saved me. Saved me...Find Her...What had...?\n\nI felt a fear, and an anger that wasn't my own bloom inside of my belly and I growled. Dad took Mom's elbow and gently pulled her back.\n\n\"Come on Honey, Greg has something he needs to do...\" She looked up at him in surprise. \"But he is just out of the hospital bed...\" I tuned the rest of them out as I concentrated on what I was feeling. The feelings were so strong and they pointed towards...There!\n\nI started walking and would have walked out of the room before Dad put a hand on me, I turned to him with a snarl as a part of myself long buried began to surface. He just smiled at me, his face awash in a soft blue light I assumed came from my eyes. \n\n\"Need these or your going to get arrested for indecent exposure. Wish we would have brought you some clean clothes.\"\n\nI looked down and took the old jeans of mine and Dad shrugged out of his flannel shirt and handed it to me. I had always hated going commando, and was careful how I zipped up my pants. I put on Dad's shirt and left it unbuttoned, \"I love you guys, I need to go.\" Mom gasped.\n\n\"Gregory, please...be careful.\" I snorted at that which made Dad frown. I gave Mom a quick hug. \"See you all soon. I need to go.\"\n\nHow did I know where to go, I didn't...I just knew the direction. I just felt, her...I felt my Lucretia. Same as when she hung out with Jemima and Gwen the first time and got upset by the movie. I had taken her to other movies, not to too many movie theaters though. I took her to see a matinee showing of Ironman, the first one which was being replayed for cheap at a restaurant. It's a real treat since you can order food and they bring it to you in the theater. She ended up standing and throwing her drink and my drink and our plates of left over chili cheese fries and my hamburger at the screen! All this while she is telling \"Tony Stark\" why he was an idiot!\n\nWe had been asked to leave, no surprise.\n\nI ran down the hospital stairs instead of the elevator and ended up jumping the rail and falling the three stories to the bottom floor with a dull thud. My power had slowed my fall, and then pushed me forward just like how I had practiced holding myself off of the ground earlier. Strangely different though, I began pulling myself along faster, my range of only two inches was gone, it was more like, I have no idea the range! I would reach out, picking a streetlight base or parked car and pull myself there with a thought, and fast!\n\nThe speed I was making my body move was starting to hurt, so I began to harden my shield around me. I was ignoring the pedestrians and traffic, thankfully not much of those out on a rainy night. I felt her in the direction of my route where I pick up dumpsters in the industrial district. I was moving faster and faster...telephone poles blurring past me as I raced along on a cushion of air not even moving my feet! I saw lightning and fire and heard roaring as I got closer...then a sound caught my ears...one I never heard before and prayed I would never hear again.\n\nLucretia screaming in fright and in pain! It tripped something inside of me and my body seemed to take over! My shield became opaque completely covering me from head to toe. This panicked me because now I couldn't see, Lucretia liked to give me a hard time about this since when I did this she called me a turtle. She had been fascinated by turtles, because they would crawl into their shells and couldn't see anything going on around them, but were still protected. More than one box turtle had been surprised when she had swallowed them whole, but I made her spit them back out. It had been unnerving to see her throat bulge like that!\n\nAnyway I couldn't see and was racing forward towards the sounds of her screams and trying to stop myself from holding that shield when I had an idea that made me want to groan in exasperation at myself.\n\nI opened my Sight...and could see through my shield. I saw several cars parked close to the construction zone where this battle seemed to be taking place and I saw a large, thing. Looked like a minotaur with wings but with a man face instead of a bull face. And four wings? Guess he would need the extra lift to get that much bulk off of the ground. My Sight showed me a glowing line of green energy constantly flowing from a kneeling man to the giant that was now holding Lucretia on the ground. I figured she would have a few tricks for him and zipped closer to the man. He saw me and raised a hand in my direction.\n\nSilver flashing bolts shot towards me and I let them come, speeding up and slamming into them making them give off a ringing pop as I did. I let my shield fall but held my Sight in place as I looked at this...person. He looked deranged and his specter behind him looked to be shouting but I wasn't hearing the words. Another who looked even more insane if that were possible was shouting at someone else and not even looking at me. There was another behind him that was crying and wailing like it had lost it's best friend.\n\nI determined, in my personal opinion...this man needed professional help! He also had cast a spell of some sort at me, and was helping the unfriendly winged giant hurt my Lucretia! The very thought of that made my blood boil! I saw him start to raise his other hand towards me, slowly as if not trying to attract my attention. I grabbed it by the elbow with my other hand, maybe a little too tightly because he screamed again.",
        "\"Cast a spell like that at me again and I will...\" I finished by squeezing mildly for me, but I heard a sound like celery being torn and he screamed again as I let his arm fall down useless against his side. He should be grateful he was still breathing considering my mood! I turned to look at the remaining players in this battle, I could feel my eyes flashing a brighter shade of blue as I saw my Lucretia folded in half and exposed and bleeding and a giant with a truly impressive penis...no, can't say penis. That thing looked big enough to club an ox unconscious!\n\n\"I don't know who you are...and honestly I don't care. You let go of my friend or I will rip you a new asshole!\" I said. I grinned at him, waiting for him to move or say something. It was obvious what he was going to do. He was a rapist ass wipe and even if he backed off of my Lucretia...he was dead!\n\nI ignored what he started to say, I saw that he had raised up just enough that I had time to strike!\n\nI called on my power and kicked hard at the pavement. With a little mental force it created a nice make shift cannonball that whistled through the air and struck him on his horns! I hadn't cared if it had missed. I just needed it as a distraction. I planted my kicking foot and zipped towards him myself with a yell and bum rushed him off of my succubus! He went over onto his back and I started slamming my fists and yelling at the top of my lungs, just wailing on him! I felt a horn break under my fists and his skull shatter, I was winning!\n\nThen his legs came up and shoved me off of him, and he rolled to his feet. I watched in amazement as injuries were almost completely healed. I had done almost nothing to him! I saw the line of energy between him and the...well not just a man. Maybe a wizard, or another mage? Either way, that green line of energy was getting thicker. \n\n\"What is your name?\" The jolly winged giant asked. I side stepped a little and turned so I could keep the wizard and this crazy looking Outsider in view. That rage that I had always ignored was in the forefront of my mind and I wondered for the first time if it had been a bad idea for me to open that door and step outside into who I really was. Then I stopped, and physically shrugged...it felt good, and I seemed to be thinking clearly...so it really wasn't a bad thing at all.\n\nSpeaking of thinking clearly, why wasn't the big guy attacking me? Seemed able to heal from the damage I had given him. My Sight was showing he was back to full health, but what was going on in the corner of my vision caught my attention and I warily turned my head just enough to get a good peek at the wiz kid...his hair was white, and all of that green energy flowing through that link, was the wizards!\n\n\"Do you see little mage?\" The giant said in a low rumble. \"I am actually protecting you in a way.\" He spread his arms and gestured to Lucretia, lying in a heavy indent on the ground, a thick dark chain piled on her chest. \n\n\"She is a succubus, she drains energy...life...your life. Little by little she will take all that you have and what does she offer in return? Sexual pleasure?\" He chuckled and grinned, showing off massive teeth in that large head. \n\n\"You can find sexual pleasure with anyone or anything! If your tastes run different than human men or women I know of several beings that would leap at the chance to lay down with a human and it would cost you nothing...\" He paused and tilted his head a little as if thinking. \n\n\"They might even make it worth your while. I know of at least two, a sylph and a dragoness that would relish the pleasure of a human male in their bower!\"\n\nI said nothing, thought nothing. He continued, \"So much effort you put forth for someone who means to kill you. All of us in the Planes heard of your Binding. The daughter of the Queen of the 6th Plane bound to a mortal in an open agreement. It was unheard of, and almost laughable.\" He paused and considered me again while crossing his massive arms over a chest the size of two whiskey barrels.\n\n\"Now that I see you and felt a bit of your strength I think I understand it now...\" He glanced over at my friend.\n\n\"You have great Will, and through the power of it...you forced her to act the way you wished her too. That is very commendable. Otherwise she may have killed you sooner...\"\n\nHe clapped his hands once and rubbed them together briskly, his wings flexing. \"Now! To business...I wish to take and kill Lucretia, you wish her to be whole. I offer you this, I will let it be know that you wish companionship. I will use my contacts to find a suitable companion for you and take the contract upon myself. No danger to you at all, I will take the risks. That way you have a faithful companion for the entire term of the contract who will leave you alone and unmolested. They will be obedient and subservient and cater to your whims and desires.\"\n\nHis eyes hardened and seemed to grow hot, I could almost see the falling rain his and turn to steam as it fell on his face.\n\n\"If you choose to continue to fight me...I will unmake you. Tear off your arms and legs as I violate every member of your family and your friends before I eat them before killing you. Then I will STILL destroy Lucretia the Grey!\" He settled down and resumed a predatory smile.\n\n\"Now tell me...little mage...what do you decide?\"\n\nI smiled back quietly, almost dreamily as I looked past his shoulder. \"I choose, for you to die...\" \n\nThen one of the parked cars that I had been slowly rolling with my power closer and closer while he was talking slammed into his back driving him to the ground! I held out my hand indicating another one from the parking lot and beckoned sharply. It raised into the air and slammed down on the squealing monster!\n\nI curled the fingers of both of my hands together slowly, the mounds of wreckage bent to my thoughts and began to curl around this creatures body. He was able to, amazingly enough, push himself to his knees!\n\n\"I will destroy you! You and everything you value! I, Balmont! Ruler of the 5th Plane will destroy you!\"\n\nI smiled and held him in place.\n\n\"Lucretia told me, bound as strongly as she was to me...she could die a true death here...whatever that means...I think you know what that is.\" I snarled as I squeezed my hands tighter, I felt a strong phantom pressure holding against my fingers as Balmost pushed harder. His eyes blazed and flame appeared around me, I shut my eyes and my shield came into being pushing the flames away to give me room. It expanded from the two inch range of my body to form a full circle 8 feet on all sides around me. A wall of pale blue that let me breath and though I felt heat, I was not burned. \n\nThe monster, no...he was called Balmont? Balmont roared in frustration again and tried to push out of the prison of twisted metal and glass. I focused on him and roared myself with effort as I pushed against that phantom pressure in my palms. The squeal of twisted metal and glass increased as the two cars began to shift and compress around Balmonts body, pinning his arms and legs together. I wondered why I didn't see that green line of energy anymore, but I didn't worry about questioning my luck and I just kept squishing. Soon the metal had wrapped comepletely around his form leaving just his head sticking out.\n\nBalmont kept staring at me with hate filled eyes, and I grinned back at him with anger in my own.\n\n\"Never...EVER...screw with me and my family or my friends! You ignorant fuck!\" I yelled at him, then I closed my eyes and squeezed, yelling again with the effort. I could feel the pressure in my palms as I began to roll the object in my hands and the tube began to shift, folding on itself and warping. I heard a braying call like a bull in pain that suddenly cut off as I began rolling the pressure in my hands. It felt like when I was a child, rolling modeling clay, and you had to warm it up first.\n\nThen I guess the fuel from the gas tanks in the cars ignited from the left over fire that had sprung up around me and things really got interesting! The pressure became more fluid with the heat and I registered it dimly. I was focused on my enemy though and I rolled it faster and faster, increasing the force and gritting my teeth hard as I did so. Then, as if a switch had flipped in my brain...I stopped, and let my hands fall. I heard a heavy clunk, as something hit the asphalt. I looked in the direction and found what was left of Balmont...\n\n...At least I think it was...\n\nThe two cars wrapped around him, with him in the center, were fused together and gleaming with only a few imperfections here and there. It was a very smooth and shiny sphere. I wondered for a moment about how big Balmont was, and how big those two cars were and shook my head in surprise.\n\nFor the sphere was the size of a bowling ball! I am pretty sure he was dead.\n\nA small moan caught my attention and I looked over at the wizard and walked over to him. He had wrinkles and long white hair and his eyes were milky as he peered at me.\n\n\"I just wanted to avenge my family...my family...you understand don't you? I will not stop until the Gatewatch is hurt as much as they have hurt me!\" He said in an old man's quavering voice. \n\nI nodded my head, \"You would do anything for family...kill others and sacrifice yourself for them...I understand that. I really, honestly do.\" Then I drew my foot back and kicked him in the face! He went out like a light. \n\nWanting to kill the Gatewatch? No, hurt the Gatewatch...seems I have come full circle to where my whole experiences started with them. Hildy, Jemima, and Gwen...Then meeting Lucretia who wanted to kill them. \n\nLucretia? I spun and stared across at my friend, where she lay in the rain...not moving!\n\nChapter 39: Love\n\n\"No!\" I shouted while sprinting across the wet asphalt. The rain was blinding me, and I nearly stumbled and fell on my face dodging through all the holes in the melted surface. Lucretia and Balmont really did a number on the parking area with all of those pyrotechnic displays! I fell to my knees next to my succubus, she was still in her full combat get up. I threw that heavy length of chain off of her so I could better examine the injuries. Her obsidian armor was cracked and whole chunks were missing from it. Black blood oozed from several major lacerations on her chest, arms, abdomen and legs. She opened one black eye to look at me, the other appeared to have been gouged out since the socket was empty and that side of her face was a gory ruin. \n\nI wanted to help her but I didn't know where to start! She looked so messed up, so hurt! The wounds on her abdomen looked to be the most life threatening so I ripped my Dad's flannel shirt off and started packing the wound with it. She gasped and groaned when I did that, and blinked up at me with one eye. Then sighed, smiled and turned her head to the side. As I held the makeshift compress in place, the reality of this situation began to sink in. Before when she was injured, she healed quickly. For some reason she wasn't now. Why? What is different?\n\n\"Lucretia, why aren't you healing?\" Her good eye closed and she ignored me.\n\n\"Damn it! Stay awake! Tell me!\" I shouted. Her eye slowly opened again, and she appeared to have to really concentrate on my face before her one-eyed gaze cleared.\n\n\"Poison...can't heal...weak.\" She said faintly.\n\nI felt ice water run down my back, and it wasn't the cold rain either! Poison? Lucretia could take a bullet from a Desert Eagle to the forehead at close range and it would only piss her off! There was no way that something as simple as poison would...wait. She said, \"...weak.\" That must mean...oh no! I put a hand alongside her face, on the non-torn up flesh. My voice broke and I felt tears mixing with the rainwater on my cheeks as I spoke again.\n\n\"Sweetheart? How much energy do you have left?\" I choked out. Her long-fingers held my hand more tightly to her face.\n\n\"None...\" she said quietly. She slowly rubbed her face against my fingers and turned her face to gently kiss them. \"I am dying...my Greg.\"\n\nThose words just about killed me! After everything we had gone through. The arguments, the laughs, the temper tantrums on both of our parts, facing down a Balmont...something or other! No way would something like this stop us! We had come too far! I thought about what my life was like before I had Lucretia in it, and compared it to what my life was like now with her apart of it. No question, she had made it better, I felt more alive now than I had in years. She filled me with a joy I had never known before. She was my best friend, my partner my...L...my L...Oh...\n\nShe was my Love! \n\nI love her...I love her! I felt her shift and groan, more black blood oozed out from under my fingers. The t-shirt was soaked through. I leaned down and kissed her lips, soft little pecks at first and I was whispering to her between each caress of my mouth on hers.\n\n\"Please Lucretia...kiss me sweetheart...come on...feed on me...\" I started to press a little harder and she began to react a little. I felt a little tingle as suddenly the warmth left my lips and a small ringing filled my ears. Lucretia gasped and her body bucked under my hands. Her one good eye shot open and it locked on my face. I licked my lips and tasted the bitter tang of her black blood. I spat it off to one side and I saw her panting; her face turned farther away from me.\n\n\"No! Greg...NO!\" she gasped out. \"I will NOT feed on you!\"\n\nThis was a surprise. She had told me many times that she wanted to taste me, to feed on me. Heck, when I finally got her to open up about why she wanted to eat my energy so much was that because of who and what I was, it was a rare combination. Sure, I was your average guy...but the way I was raised, the kind of person I was, pushing through the bad things that had happened to me and especially when I finally overcame a lot of the pain in my past made me extraordinarily tasty. The telekinetic mage was just an added bonus, like that parsley garnish used at restaurants.\n\nMaybe I am like some rare kind of twinkie, you know, the ones with frosting and strawberry jam filling?\n\n\"You need energy to heal, your body can't keep up with the damage AND the poison in your system right?\" I pressed. I kissed her cheek and felt her shudder under me.\n\n\"No!\" she said again.\n\n\"Damn it! If you die on me I will beat you so bad! I will spank you so hard you won't be able to even stand up without it hurting!\" I growled.\n\n\"I will not feed on you!\" she said.\n\nI continued my little pecks on her cheek, my lips always right there, waiting for her to turn her head.\n\n\"Please...pretty please? Feed on me? I am your Master and I am asking you to feed on me. Come on, I know you want to, you even swore to do it? Remember? The first time we met, you swore by the Empty Throne to drain every drop of energy in my body...remember? Come on sweetie...\" I kept pressing her, nearly lying on top of her. A couple of times I did get just a touch of my lips and hers. Many times we had kissed, but she had never really drawn anything from me, now it must be almost instinctual for her nature. Each time when our lips touched I felt a little pulling sensation as something was drawn out of me into her. Of course each time she would jerk her head away! I finally stopped and watched her. She was trembling, and tears were sliding from her one good eye. \n\n\"Why won't you Lucretia...just tell me why you won't?\" I asked desperately. My face was right above hers, blocking the rain from falling on her head. Of course my own tears were still falling and I could see them glistening on her cheek in place of the raindrops.\n\n\"It would kill you!\" Lucretia whimpered finally. \"I don't want to kill you!\"\n\n\"You don't KNOW that!\" I hissed. Actually, she would know that, her being a succubus and all I am sure she knows her own limits. Not that I cared...she was going to die, and this was the only way I could see how to save her. Funny thing is that I never thought I would live to see 40. I thought either the roving vigilantes, or whatever would kill me before I had a chance to make it to that age. I never saw this happening to me. That being said, this would be a much better way to die. If I had to choose a way to go, saving the life of the person I loved is the best way in my book.\n\n\"How am I supposed to live with myself if I kill you?\" Lucretia said, openly crying now. \"I would rather die than do that!\" She continued sobbing, now bringing up her hand to cover her nose and mouth. I could hear her whines and soft cries behind the cover. Sneaky...now I can't kiss her!\n\n\"I gave you an order, Lucretia. As your Master...\" I firmly began. \n\nShe interrupted me with a snarl. \"As my Master you GAVE me FREE WILL! So I exercise my FREE WILL to say fuck you!\" She covered her mouth up with her hand again. I tried a new tact...\n\nTruth.\n\n\"Try this on then for size, Lucretia. You ask me how you could live with yourself if you killed me? How about this, look at it through my eyes! My best friend is dying...DYING! I can save her, I can help her. All I have to do is be willing to take the chance of dying myself. It's just a chance...not a for sure thing. If I don't she is going to die.\" My heart was in my throat as I began to finish my statement. I would be saying something out loud to someone else that I hadn't said to anyone in years. But if anyone deserved to hear it, it was this badly wounded Outsider lying under me.\n\n\"How could I live with myself if I didn't take the chance to help someone who I love? It would kill me if I didn't do anything to save you. You thought about that, huh? Lucretia I love you! I love you damn it, and if you feel anything for me at all you will let me help you!\" \n\nShe held still beneath me, her body rigid and I saw her mouth a word, it was hard to tell with blood on her lips which word it was. I think she was repeating one I just said. .She began to sob harder, great heaving gasps that almost pushed me off of her. Now I saw it, the tear duct by her ruined eye was now leaking tears as well, cutting a path through her sticky black blood. She moved her hand from her mouth and through her gasps I could hear her say, \"I...LOVE...you...too!\" Then she dissolved into tears again.\n\nI had waited my whole life to hear those words said back to me, and know the person who said them meant it. It had been a dream I thought would never be. That I could love someone and they would love me back. Not out of pity, not out of \"If someone says it to you it's only polite to say it back.\" To hear it being said from the heart, and know that...oh...oh I can't put it into words! Something inside me broke and I wanted to sing, dance, laugh and weep all at the same time!\n\nI began kissing her lips again, and she let me! Then she pushed on my shoulders, stopping me. \"Wait...listen...wait...need to tell you!\" I stopped her with another kiss that made her body arch under me and a deep groan issue from her chest. \n\n\"Talk later...gotta feed you first.\" I said, planting another deep lip lock on her mouth. She turned and said, \"No, listen to me! Important!\" I backed off a little and waited.\n\n\"I don't want to take too much. You stop me, all right? Promise you will stop me?\" She pleaded.\n\nI wanted to promise her, I really did. But I couldn't. I had a million thoughts circling through my head. Even if it took everything inside of me to get her better I would gladly give it and more. What if her body was healed but the poison stayed in her system, she would need more energy to fight that off? What if she was attacked again while still weak from this fight and she didn't have enough energy to save herself? The most prominent of all the thoughts flowing in my head was this one...\n\nI loved her!\n\nI loved her so much and I would do everything in my power to protect her! I would give her all of my love and I would find more. I would dig deep, scour myself to give her everything of what I was. She was mine, and she deserved it. She LOVED me, and I would give her my all, no reservations. I would give much more if I could, she deserved better than me. I gently kissed the top of her head right between her two horns. Her eye was wide as I moved back down so we were face to face. I remembered us having our first kiss on the roof of our house and what we had said to each other up there. I smiled at the memory and said those words now.",
        "\"Lucretia...say it again?\"\n\n\"Say what again?\" She asked, her voice quavering.\n\n\"You know...what you just said?\" I asked with a lopsided grin.\n\n\"Are you fishing for a compliment?\" She choked out with a smile.\n\n\"Yes...please?\" I asked with a wheedling tone.\n\nHer hands came up to hold my cheeks, I could feel them shivering, whether from nerves, or pain I don't know.\n\n\"I love you more than I love anything I have ever known. I love you Gregory Bastion Brooks. My Master. My Lord. My Friend. My Greg!\"\n\nThat said it all, right there. Enough talk, time to prove my feelings to the woman I love. I kissed her and held my mouth to hers. The tip of my tongue gently touched hers and I poured all of the feelings, all of my heart all of who I was into her!\n\nIt started as a trickle, best things in life always seem to. I have seen her rip all the energy out of a body with a quick smooch and a scream from the victim. This was different...it was almost like she was trying to hold herself back. I wouldn't let her. I gripped her hand in mine, our scars touching letting her feel the pulse of my love, and I could feel an answering echo in her. I gently used my other arm to lift her ruined body closer to me. I could feel her hunger as the trickle grew to a stream and then a flood. Her other arm came up to reach around me and held me tight. I could feel coldness seeping into my lips, and I have to admit, the feeling of energy coursing through and out of my body was rather disconcerting to say the least!\n\nDidn't matter though, for my love, for her...I would go through worse than this. I closed my eyes and focused on her, my Lucretia. I visualized the energy sinking into her poor broken limbs, into her head, in to her beautiful clawed legs. I wanted her better...I needed her to be well! I tried to show her how much I cared in the way I kissed her. To let her know that no matter what I was so grateful for her, and everything she had done for me...whether she even understood what she had done for me or not. I guess she got my point because I heard her sob and tasted more tears than blood.\n\nI felt happy to die then. I know it's a weird thing to say...but it was true. I had found love, I had finally found love in the most crazy and unexpected place in the entire world. If someone had told me several months ago I would fall in love with a succubus and she would love me in return? I would have not said anything, just rolled my eyes and walk away. Now here I was, standing in her arms, her wings enfolded around us both, and I felt better than I had ever felt in my entire life!\n\nWait a minute...I thought we were lying on the ground?\n\nI opened my eyes to see both of Lucretia's eyes gazing into mine and we were still making out like kissing had just been discovered! Both, of her eyes? When did...? My hands roamed over her, I could feel her skin, soft and unbroken under my questing fingers. She must have gotten the wrong impression because her clawed hands found their way to my belt buckle. She pulled her mouth from mine to urgently whisper. \n\n\"I need you my love! Right now! I need you!\"\n\nI didn't have time to say anything as suddenly my pants were around my ankles and Lucretia gave a quick beat of her wings to lift and land on me. I sank deep into her with one quick thrust and felt something tear inside of her! She threw back her head and gave a cry of orgasmic release that must have rattled the windows of the office buildings around us! Her arms went around my neck and shoulders and she began to grind on my pelvis. I was so hard I felt I was going to burst any second. I ignored the sensations and pulled Lucretia upright so her breasts were in my face. I didn't understand much of what was going on, except somehow, my love was well. She was better, she was in my arms, and she felt so good!\n\nLucretia was doing things with her hips, hands and body that I never dreamed were possible! The feel of her was exquisite, all soft and hard and curves. I could taste her sweat that was like a mix of vanilla, salt and citrus as I kissed her breasts and gently nipped at her nipples. I heard her gasp and give another shriek as she came again upon me. This time I lost my footing and she rode me down to the ground. I was wondering why I wasn't dead yet, honestly. I mean, she had warned me that it would be dangerous for her to drain me with her as wounded as she was but I felt fine. I felt better than fine! Currently I was doing so well I thought I could take on an entire Ironman Triathalon course backwards while whistling the star spangled banner!\n\nI looked up at my beautiful Lucretia and she was smiling down at me with tears running down her cheeks. How could I ever have thought she looked scary? I pulled her down for another kiss and I felt her long fingers lace themselves along the back of my head as she looked on me in wonder.\n\n\"I am so FULL!\" she almost shouted.\n\n\"I didn't think I was all that big...sorry.\" I said with a laugh. She shook her head and then I felt her tighten on me. Her eyes closed and with a whine followed by a deep groan she came again! I had to clench up not to come myself. She gave a few more shudders, continued riding me, her mouth open and panting.\n\n\"Not that my love, though it feels just fine...\" she was quick to reassure me. Her grin was lopsided and she caressed her stomach with one hand. \"I am full! I don't know how but I am so FULL! I kept on drawing from you and you kept on giving and giving and I couldn't stop and there was still more I...I...RAAAH!\" She screamed and came again! Boy...was she sensitive or what?\n\nThis time I couldn't stop myself, feeling her tighten on me again like that. My poor body was going crazy after not having sex in so many years. I could feel my own orgasm beginning and I gripped her hips tightly with my hands. I dug in my fingertips and yanked her down onto me as I pushed up as hard as my straining muscles would allow. I felt the back of her tunnel kiss the head of my dick as I pushed up, making her give another scream as we joined as intimately as two beings could do on a physical level.\n\nMy own pleasure boiled over and four years of celibacy came shooting out of me into this being I loved. My eyes were shut tight and I saw lights and bright flashes behind my closed eyelids. I thought my heart might almost burst from the pleasure I felt, and for every pulse that my cock shot out deep into Lucretia's womb I felt pain. Not pain as in I was hurting. More like the pain you get from a muscle group you haven't used in forever.\n\nMy succubus writhed on top of me moaning in apparent rapture as I filled her with my seed. Abruptly she became still and fell forward onto my chest. I could feel her breathing in panting gasps as her arms circled around my head. \n\nEverything was still around us, no sounds could be heard. We were in our own little world of touches, sighs, warmth and soft words of endearment.\n\n\"You were my first.\" Lucretia said quietly. He lips caressed along the outer edge of my ear as she spoke.\n\n\"I love you so much.\" I didn't know what else to say. I was still reeling from the fact that I was alive, and in love, and had sex in the first time in forever! Then what she said got through my addled brain.\n\n\"You were a virgin?\" I asked in surprise. I remembered the tearing sensation I had felt, and then felt silly for asking the question. Couldn't feel silly for very long. I had an affectionate female on top of me. Hard to feel bad when you have that in your arms!\n\n\"Balmont was the only other Master I had than you, and he didn't want me for sex. So yes, I was. Not anymore though. You have it now.\" Her dark eyes were bright and she giggled drunkenly as she rolled off of me onto her back. My fingers found hers and we squeezed our hands together in a tight grip. \n\n\"Is it done?\" I asked. She raised her head to lazily look around, she spotted the bowling ball that was Balmonts tombstone. She arched an eyebrow at me and I just chuckled.\n\n\"Yes...Balmot is gone, forever. He is part of the Void now.\" She replied.\n\n\"If he is part of the...Void...does that mean he is still around?\" Lucretia smirked.\n\n\"Gregory...think about it. What is a void?\"\n\nOh...Duh!\n\nI laid there thinking, enjoying the feel of Lucretia's hand in mine. Then I realized that my bare ass was sore. Looked down and saw that my jeans and underwear were pushed around my ankles! I looked over at Lucretia who had the decency to blush, but didn't look away from her examination of my rising erection.\n\n\"You are a little slut, you know that right?\" I chided. She giggled and then gazed back at my face with a smile and bright eyes.\n\n\"What am I going to do with you?\" I asked in mock exasperation. Her response was surprisingly serious in spite of the smile on her lips. \"Take me home and never let me go?\"\n\n\"That sounds like a wonderful idea.\" A voice said behind us.\n\nLucretia and I scrambled to our feet and I quickly raised my pants and was fastening the buckle as Mother appeared before us.\n\n\"You are victorious daughter, and you seem no worse for wear.\" Mother stated as she looked over her taller offspring. She looked more closely at Lucretia's belly and a soft smile crossed her features.\n\n\"Did you consume an entire village or did you...?\" Her voice trailed off as she looked more closely at something I couldn't see. She appeared surprised, but almost as if she expected whatever she saw.\n\n\"So you know now?\" she asked Lucretia.\n\n\"Know what Mother?\" \n\n\"The secret to my power?\" Mother returned. Lucretia looked confused...as I probably looked as well.\n\nMother pointed at Lucretia's belly. \"You don't even realize what you have done do you?\" Lucretia looked down and rubbed her stomach. \n\n\"I fed off of Greg, and then...\" she blushed but pressed on. \"...then he became my first.\" \n\nMother chortled, \"If that was all then you would be correct!\" She continued. \"Think of this daughter...why would I have you come to this Plane and learn how to seduce men? I never seemed to care about it before...why now? If I really wanted you to learn, why would I choose someone who is broken to try to teach you? Hmmm? I could have just teamed you up with a succubae that was older, who had more experience. I could have found a woman who could do a better job than a man with a broken heart. Think daughter, why?\"\n\nLucretia looked around nervously, I could see her trying to come up with an answer. I stepped closer and took her hand in mine, my thumb caressed her fingers in a familiar gesture and she smiled at me.\n\n\"That is why...right there.\" Mother stated. Her arms were crossed as she looked us over. \"That is the reason I wanted you bound to him.\" We still looked confused, so Mother rolled her eyes and began to explain.\n\n\"You, my daughter, are one of the most powerful succubae of this age. In raw power and strength none come close to you. That is because of your father and I...we love each other.\" Lucretia gasped at this. I admit I was stunned as well. \n\nMother...in love? Just seemed as wrong as a cat dating a cricket!\"\n\n\"A well kept secret, known to many but only realized by a few, is that we draw more energy from our prey the more feelings they have for us. Fear is the easiest one to exploit, and it certainly is satisfying. Love is a more dangerous, and unpredictable form of energy. It can provide vast quantities of power that would consume us if we tried to take it from our prey. The only way we can handle it, is if we love whom we are feeding from. Do you understand now?\" Mother asked. She continued even though she hadn't waited for our response. Her finger pointed to me.\n\n\"You, Gregory Bastion Brooks. You were a man with a broken heart and incapable of love.\" Then she pointed another finger at Lucretia. \"You, Lucretia. An angry succubus, who trusted nothing and no one.\" She brought her fingers together right next to each other and smiled in a knowing fashion.\n\n\"Together you were able to heal each other in a most unexpected fashion. Only someone whose heart was broken can do what you did Gregory. I asked you to teach her how to seduce men. Did you really think I meant for you to do that? No, I knew that you would instead teach her how to love! Lucretia? Did you really think you needed to learn all those lessons about how to be human? Once I heard him state the terms of his contract, I knew that he would heal your wounds as well. I knew that you would grow to love him as I grew to love your father.\"\n\nShe then glanced pointedly at Lucretia's stomach. \"You love him, he loves you, you have consummated your love to each other and...something has changed in you both.\" Her smile grew wider still.\n\n\"It will be interesting to watch your progress down this path you have chosen.\" She tapped her lips with her fingertips thoughtfully. \n\n\"I wish to thank you both for destroying Lord Balmont. I have long wanted to add his Planes riches and space to my own. As a form pf payment for your services to me I offer you the ability to call me when you have need of me Gregory. For Lucretia I give you my boon. Fair?\"\n\nI stood there with my mouth open in surprise. I could feel Lucretia bristling next to me, but I opened my mouth before Lucretia's temper caused her to say something she might regret. \n\n\"You mean you set this all up? How? Why?\"\n\nMother's smile was positively vulpine, \"Lord Balmont insulted my daughter, and insulted me by proxy. I just set in motion the events for his downfall. I was confident you two could dispose of him, which you both did quite handily. Lucretia got her revenge and unlocked the potential for vast amounts of power. You received that which you have always dreamed of. I received massive amounts of influence and doubled the size of my kingdom.\"\n\nLucretia began to nod, with understanding it seems. I was still hot under the collar. Seemed a terrible risk to go through. What if that bastard Balmont had won the confrontation? Not to mention, Lucretia had been wounded incredibly bad. I said as much to Mother who turned sharp eyes on me. I almost felt like I had been physically cut from that look!\n\n\"Do you question my methods?\" she asked softly?\n\n\"If I say that I do, are you going to kill me?\" I returned. She stared at me for a long moment, I wasn't sure what she was going to do. She had shown a side of herself before that was almost playful, but what if I really had pissed her off?\n\nShe came closer, until she was standing only a few inches in front of me, and placed her hand on my sternum, in the center of my chest. \"I will tell you one thing, and hopefully it will answer your questions...yes?\"\n\nI shrugged slowly and nodded my head. She leaned closer, her lips almost touching mine. When she spoke I felt a heat that almost bordered on pain flood my entire body!\n\n\"I...AM...QUEEN!\"\n\nI shuddered with the naked force of those words and then felt Mothers small hand stroke my hair. \"Sometimes it is important for you humans to remember the basics, am I right.\" It wasn't a question!\n\n\"Yes, um...yeah. Uh Huh.\" I gasped.\n\nShe nodded, gently kissed Lucretia's forehead, and turned to walk away. I was surprised she didn't do her disappearing act but then I saw her stop to look at the bowling ball of Balmont. She reached down and picked it up. Then she disappeared. \n\nGuess she needed a new paperweight...\n\nI stared after her, thinking and wondering. Then I felt clawed hands touch my arm, and a pair of cool breasts gently squeezed around them. A pair of horns rubbed along my chin and a wing stretched up and over my head, covering me from the rain.\n\nI turned a little and watched as her other wing came up to cover me and we were in a leathery arbor of her wings as my lover gazed up into my eyes.\n\n\"Your...Dad told me I would know what it is I felt for you eventually, when I heard it. He said I would just know.\" Her hand slid over my chest, sliding up the side of my neck and she had a pleased soft smile on her lips as she watched her hand's progress. \n\n\"When you went to sleep after the werewolves attacked, you called me...Sweetheart...did that mean you loved me then?\" She asked.\n\n\"I think so...I was kind of loopy when I said that.\" I chuckled a little and her eyes crinkled at the corners as she gave me a narrowed look, but she was smiling too.\n\n\"We need to leave, I think. I want to go back home now.\" Lucretia said as she looked around the area. I nodded, and then a small flash of silver caught my eye. I went over and saw the chain lying on the ground. I picked it up and saw Lucretia shiver out of the corner of my eye. I took the bloody flannel shirt and wrapped up the chain in it and tied it tight. Seemed like a bad idea to leave it lying around, and I was curious about how it seemed to affect my love in such a strange way, like she feared it or something. Covering it seemed to have been a good idea since she seemed more relaxed but watched the bundle warily.\n\n\"Ready to go home?\" I asked. She nodded. So I took her hand in mine and started walking towards the bus stop. She stopped me.\n\n\"I have a faster way...\" Which was all the warning I got before she wrapped her arms around me from behind and shot up into the night sky!\n\n\"Sonofabi...!\" Then at the speed we were going made the rest of the words get rammed down my own throat! I wisely shut my mouth as we sped through the pouring rain. Lucretia seemed to be in a hurry because she barely slowed down as we landed in the back yard and pulled me into our house. The moment the door was close she sighed and stretched, her clawed hands above her head and her wings going out to the side.\n\n\"Oh it feels good to be home with you!\" She crowed and then dropped her arms and wings to smile at me with bright eyes. I set my package down and just looked at her, a smile growing wider on my lips. I stepped towards her. A need was growing, a desire building...\n\n...it was coming from me, but I could feel it being answered by her as well. She came at me in a rush and I squeezed her dark grey body against mine kissing her hard, feeling her sharp teeth nipping at my lips and her long tongue trying to push further in my mouth but I wouldn't let her. It made her whine in frustration, and that sound made me groan with want. \n\nI dropped to my knees and pushed her against the wall by her hips, I saw her wings go wide, splayed out like wallpaper as I gently pulled her legs apart just enough to lick...\n\nI saw stars as both of her hands slapped the back of my head with a cry that hurt my ears. I heard a thunk as her head slammed back and she continued looking up at the ceiling as I tasted a pussy for the first time in, well...years. I didn't even look at it, I was like a man possessed stirring my tongue through sweet tangy folds that gripped me as warm juice slid into my mouth with the extra trickling through my goatee and down my neck! I felt the prickle of her claws as Lucretia gripped me tighter, hearing her whimpering and starting a little wail as her hips undulated under my hands. Her tail came around to drape over my shoulders and I could hear her wing tips start a little drumming motion against the walls as I continued to drink, touch, and taste.\n\nI made a milkshake once from those little orange vanilla cream popsicles you can buy at walmart. It was thick, rich, and delicious. Threw it all in a blender and then when it was creamy I tried it. One of the best drinks I ever had. Until now...I would give up Mountain Dew for this taste!\n\n\"Greg...its happening again...!\" She panted. I doubled my efforts and I saw her throat convulse as she kept staring at the ceiling. \"Master! My Love!\" She said again, a tone of panic in her voice. I just groaned into her, my upper lip rubbing what felt like her clit, and I let my teeth gently graze her lips as I pushed my tongue into her again.\n\nLucretia began to tremble, her whole body vibrating under my hands and mouth. I could hear her talons on her feet tapping the floor. Then her throat convulsed and a high pitched shriek came out of her mouth that made the plates rattle in the cupboards and I thought my ears might start bleeding! Then she sagged, her wings drooping, and her tail and arms going limp, leaning against the wall. I shakily stood up onto my feet, and Lucretia just stayed leaning against the wall, her head back. It looked uncomfortable!",
        "\"You okay?\" I asked softly. I moved forward and almost laughed...but wisely didn't. That thunk I had heard?\n\nLucretia had thrown her head back and her horns had gone through the drywall and lodged in a 2X4 stud in the wall.\n\nShe saw me looking and chuckled herself. \"I could just rip out of the wall, but our house has been damaged enough, didn't want to add to it.\"\n\nDamaged enough? What was she talking about? What had I missed while I had been out of it?\n\nI helped her pull out without damaging the wall too much further. Then brushed the dust off of her and she watched me with languid eyes, Like a cat that has just had a good meal and now wants to find a warm place in the sun to rest. I considered her, then said. \"Would you mind changing into your human shape...there is something I have always wanted to do.\" She nodded, and after a moments hesitation changed to her human for, naked...and oh so beautiful! \n\nHow is it that my love can have three different forms and each one to me is so incredibly lovely. I wondered if I might be partial to any particular form, and then dismissed it. It was all her, the window dressing didn't matter, only what was inside. A lesson I had always known but never really had grasped the concept of until she had come into my life.\n\nYeah, some great teacher I turned out to be. Which brought up questions I had about Mother and her actions. Still felt like I was missing a big chunk of the story there but I would worry about that later. For now...I was going to fulfill one of my personal dreams I never thought I would get the chance to.\n\nI bent a little and my right arm went around Lucretia's waist, and my left went under her knees and I lifted her up into my arms. She gave an undignified squawk of protest, then giggled as I snuggled her into my chest. I began walking to the stairs that led up to the second floor where my room was.\n\n\"Lucretia...?\"\n\n\"Yes Master?\"\n\n\"I am going to take you now to Our bed, in Our room.\" She went still and silent as I crested the stairs and I stood there, still holding her.\n\nShe wiggled a little and looked up into my face. \"What do you mean?\" \n\nI continued to my bed and gently laid her down and then took off my jeans and laid down next to her and pulled her warm body next to me, bright eyes staring into mine.\n\n\"I want you with me. I want you in my room. The other room is still yours but I want...need you with me. I love you, and I am pretty sure you love me.\" I ran my free hand over the side of her face and down her arm and over her hips. Then slid around to cup her naked backside and press her hips in closer to mine. Her mouth made a small noise that sounded like a whimper when I did this and she nestled in tighter against my growing hardness.\n\n\"Remember the binding?\" I asked, and she nodded. \"It is like that, but a little different now between us...\" I fumbled for how to make my thoughts known to her. Then hit upon a way she might understand.\n\nI held my palm with it's scar on it up to her and said, \"Mine...\" She looked a little puzzled but curious and held her palm against mine and said, \"Yours...\"\n\nThen I slowly moved my fingers, interlacing them together with hers so we had a tight grip on each other and I said softly, \"...Ours!\"\n\nHers eyes began to change to black and she bit her lower lip. Then in a rush she was all grey skin, tail and wings and she pounced on my, kissing me all over my face and clutching me tightly.\n\n\"Just when I think I am as full of emotion as I can take you push me further you wretched...wonderful human!\" She growled.\n\nI started laughing and she joined in as she lay on me. I began to feel sleepy, and some time passed. I was close to nodding off when I felt Lucretia stir on my stomach, and then slide off to the side.\n\n\"Gregory?\" \n\n\"Mhm?\" I muttered back, sleep befuddling my brain.\n\nThat's my only excuse for why things happened next that happened...seriously.\n\n\"You beat Balmont and Allan Wade Dickson?\" She asked a little incredulously. I shifted and rolled over, pulling my pillow into a more comfortable position.\n\n\"Yuhuh...\" I murmured, not caring, just wanting sleep.\n\n\"How?\" Lucretia asked.\n\n\"Was mir powerful thn them...\" I mumbled while starting to fall back to sleep.\n\n\"You were what?\" I missed the low, dangerous tone to her voice.\n\n\"I am trying to sleep sweetheart!\" I grumped grouchily.\n\n\"You slept for two whole days, now answer my question! How did you beat them!?\" She growled loudly.\n\n\"I just used my power and squished Balmont, and then left a decrepit old wizard behind okay!\" I grumped at her and rolled back over in med and put my pillow into it's head box formation. \n\n\"You know...\" Lucretia said softly, maybe it was loudly...head boxes are good at muffling sound. \"You know I really wanted to beat Balmont myself.\"\n\n\"Good for you...can I sleep now?\" I muttered. I felt the tip of a clawed finger touch my nose and a giggle. I could smell her breath and pulled the pillow tighter.\n\n\"Since you beat Balmont, that must mean that you are stronger than he was, or smarter...\" Lucretia said again. I felt her hand slide over my ass under the blankets and I pushed her hand away.\n\n\"Yes, I am...stronger...smarter...all of it!\" I grouched and pulled the blankets tighter around me.\n\n\"Mhmmm!\" I heard her murmur. \"I want to fight you Master!\" She purred into the other end of my head box. I scooted over. Crazy woman! I am tired, want sleep. We had sex, one and a half times. Well the first time was kind of a fast and hard romp, not really up to the standards of a good lover. The second I call a half of a time since it was just oral. But I was tired. I had been hurt, I had found myself and I had found love...\n\n...I was tired and I wanted sleep!\n\nI felt vibrations on the floor of feet walking away, and then heard the rasp of the window opening. I started to remove my head box as I heard Lucretia muttering to herself, \"Next time...always open the windows or doors so I don't break them going through.\"\n\nI pulled the pillow all the way down just in time to see Lucretia sprint back to me and pick me up...\n\n\"Lets test your new strength then shall we...my Love?\" She kissed me so hard and so fiercely my toes curled and my body went rigid.\n\n\"Hope your shield is still strong!\" She crowed and launched me head first out of the window and into our dark backyard!\n\nTo be continued..."
    ],
    "authorname": "payenbrant",
    "tags": [
        "succubus",
        "sex offender",
        "virgin",
        "first time",
        "love",
        "mage",
        "lord",
        "nonconsensual",
        "fight",
        "revenge"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/mine-yours-pt-12"
}