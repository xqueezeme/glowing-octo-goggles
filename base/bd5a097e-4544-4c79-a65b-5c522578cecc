{
    "title": "Alex & Alexa Ch. 09",
    "pages": [
        "Discalimer: All characters portrayed in sexual activity are 18 years of age or older. Reviews are always welcome, flames in all caps or poorly spelled will be snickered at, no excuses. Enjoy! \n\nChapter 9 - Title Up for Grabs \n\n\"Plop-plops.\" \n\n\"Um... git.\" \n\n\"Wanker.\" \n\n\"Pillock.\" \n\n\"Dubya.\" \n\n\"Ooh, good one! Chuffed.\" \n\n\"Yobbo.\" \n\n\"What in God's name are you two doing?\" my mother asked with a frown as she walked by us. Alexa and I were sitting across from one another at the dining room table and drinking coffee. She grinned at her older sister. \n\n\"We're suggesting words we think no one will hear Her Majesty Queen Elizabeth ever use.\" Alexa replied, her eyes glinting with mirth. \n\nMom rolled her eyes. \"Ladies and gentlemen, two of the brightest young minds of our age...\" \n\nShe now looked at my dad for support. He was leaning back against the counter, sipping at his own cup of coffee. \"Do you believe these two?\" \n\nDad looked down at his fingers and began counting. \"Actually, you two forgot 'bollocks', 'fanny', 'goolies', 'squidgy', and 'todger'...\" \n\n\"Oh my God,\" my mother sighed in exasperation. \"You're worse than the two of them!\" \n\n\"You don't want to play?\" he asked, smirking. \n\n\"That depends, 'enry 'iggins,\" mom said flatly, turning around to hold up the heavy glass container of our blender. \"Just 'ow badly do you want a Vitamix blender lodged in your bonce?\" \n\nDad laughed loudly and went over to hug my mother, taking her into his powerful arms and encasing her in his embrace. She closed her eyes and almost purred, clearly very content. They held the pose for several seconds before he released her and they picked up their briefcases. \n\n\"Right, we'll be on campus until about nine,\" mom announced. \"Allie, have fun on your date with Jeanie, if such a thing is possible. Alex, have fun saving Hyrule or Skyrim or wherever it is you're off to. See you both tonight!\" \n\nAnd then they were gone. We were silent for a few moments before Alexa sighed and looked at me. \"So, yeah. No idea when I'll be back. I think it's safe to say this date with Jeanie will be rather... physical.\" \n\nI nodded. \"Seems likely. Does that bother you?\" \n\nShe shook her head but made a wry face. \"I... normally sex wouldn't. You know me, I'm pretty liberated about my body. But I feel like I'm almost cheating on you, Alex. And that's kind of crazy.\" \n\n\"I know what you mean,\" I said in agreement. \"I'm set for a date Wednesday night with a girl named Heather and I feel the same way.\" \n\n\"It's because we're in love,\" she sighed heavily, leaning against the table. \"You and I love one another so much and now we are being forced to date other people, because... well, it can never happen, it can never get out, can it?\" \n\n\"No, it really can't,\" I said in resignation. \"I feel really cheated by that. But, you need to know that I'm not begrudging you this, Alexa. I can't be all jealous and possessive of you going out and dating, it wouldn't be fair.\" \n\n\"Oh, you're wonderful,\" she said softly, her blue eyes shining. \"I think it's okay for you to be a little jealous and possessive of me, I won't mind.\" \n\nI smiled back, unreasonably heartened by her words. \n\n\"Besides,\" she lilted, getting off her chair and wiggling her way around the table, clad in her plush bath robe. \"My date with Jeanie isn't until tonight. If your parents are guaranteed to stay away, you have plenty of time to ravish me and remind me what other potential suitors have to measure against...\" \n\n\"My day is suddenly looking up,\" I said cheerfully as she drew close to me, undoing her belt and letting the robe drop to the floor. My aunt stood in front of me in all her naked glory, her silken skin beckoning to be kissed and caressed. Her perfect, opulent breasts begged to be teased and sucked on. \"God, you're so beautiful...\" I breathed. \n\nShe took me by the hand and began leading me upstairs, forgetting her robe on the floor. If my parents came home and saw it, there'd be some questions I really didn't want to answer, but at this point I was willing to take that risk. \n\nI followed her into her room, where she turned around and pressed herself to me, kissing me deeply and passionately. I held her body to mine, enthralled by the feel of her. I could not foresee getting tired of it in a thousand years. As we kissed, Alexa began pulling my t-shirt over my head and then managed to pull my shorts down over my hips until they dropped to the floor. My rapidly-swelling cock pressed against her smooth pussy now while we wrapped our arms around one another and kissed hungrily, tongues slithering into one another's mouths. \n\n\"God, I love you so much, Alex,\" she moaned through our kiss. \"I'm so in love with you.\" \n\n\"I love you too, Alexa,\" was my reply. Our hands wandered freely around one another's bodies now, exploring and groping eagerly. \"Let me lick you...\" \n\nI didn't wait but simply pushed her backwards- her knees touched the edge of the bed and she buckled with a gasp at my directness, falling onto her bed. She had barely bounced on the mattress before she spread her legs wantonly, inviting me to eat her already wet womanhood. As I leaned in, she reached down and used her fingers to spread her netherlips wide, exposing herself to me. Her coral-coloured inner pink glistened, begging for my tongue. \n\nAlexa moaned loudly and shuddered as I pressed my mouth to her pussy, snaking my tongue inside her. She tasted sweet and I felt her legs wrap around my shoulders while her hands tangled in my hair, rocking my head. My hands clamped down on her thighs, pinning her to me while I began to lash her slit mercilessly. There was no foreplay involved, I just wanted her as wet as possible for when I fucked her. \n\n\"Gnnnnnn, Alex!\" she gasped, almost doubling over as I tortured her. \"Fuck, you're going to make me cum! Oh God!\" \n\nShe pushed up with her hips suddenly, crushing her pussy to my face and gripping my head tightly. Her groan of pleasure was guttaral, shameless as she came, slathering my face with her essence. I couldn't believe how quickly she'd cum. \n\nAlexa pulled me up to her face and kissed me, hard. Her tongue plunged into my mouth, tangling with mine as she tasted herself greedily. Her hips ground against mine, her sopping pussy hungry for my swollen, throbbing cock. She pulled back from the kiss, her eyes flashing with lust. \n\n\"Fuck me, Alex,\" she hissed, her hands massaging the back of my neck in her need. \"Fuck me and make me scream as you cum in me. I'll suck your cock after, but please fuck me now...\" \n\nI nodded and pinned her down, her loud moan all I could hear as I pressed my cock head between her slippery lips and sank deep inside her. She pressed back up against me, taking me in to the hilt. Her hands grabbed my ass cheeks and she began bucking voraciously. \n\nI looked down into my aunt's eyes and she stared back into mine intently, lost in one another. I slid my cock in and out of her pussy, which flexed and gripped me tightly as we established a heated rhythm between us like I'd never known with any other girl. Her legs wrapped around my waist and she rocked against me. \n\nWe made no attempt to prolong our lovemaking, we just wanted to cum together. I could feel the sweat on our bodies as we fucked, panting as we stared into one another's eyes. The sticky, wet sucking sounds of my member pushing back and forth inside her made us both wild with desire. My balls slapped against her as I pushed harder and harder, propping myself on top of her with my hands. \n\n\"Oh, shit, Alex!\" she gasped, her eyes wide, her whole body shaking. I pressed desperately, trying to reach as deep inside her as I could, arching my back as that tingling, boiling fire welled up in me. I clenched my teeth as I strained, calling out her name. \n\nAlexa crushed herself to me, crying out loudly, her pussy devouring my cum as I lashed her insides with my warm offering. I thumped against her madly with she locked her legs around me in a vise, her nails raking along my back. She almost wailed as she came, eyes squeezed shut while she worked her pussy around my cock. She pulled me down to her and we kissed deeply and lovingly, expressing our deepest emotions for one another. And I never wanted this moment to end. \n\nI finally sagged down on top of her and she hugged me gently, almost purring as she whispered in my ear about how much she loved me. Her lips planted soft kisses along my neck and shoulder while her fingers caressed my back. I still moved slowly in and out of her and she squeezed my ebbing cock with her pussy. I slowly rolled onto my back, bringing her with me so she was on top with me still inside her. She giggled and kissed my nose. \n\n\"You and I are ridiculous,\" she cooed, tracing a fingernail along my cheek. \"I have no idea how I'm going to get any work done at the university if I cannot keep my hands off you.\" \n\n\"I've been wondering that too,\" I admitted, nodding. \"Then I decided that I didn't care and I'd just deal with that issue when it came around.\" \n\n\"Fair enough,\" she agreed. \"It'll be interesting to see how much privacy we actually have.\" \n\n\"Oh, we'll get plenty,\" I replied, reaching up and caressing her magnificent breast. \"The Linguistics profs will do their best to not be around so that we can do their work uninterrupted and my parents will be away in another faculty, busily doing their own thing.\" \n\n\"Whether that's fucking one another or one of their students,\" she said, closing her eyes and trembling at my touch. \"Ohhhh, God, that feels good... but I have to pee. Come with me...\" \n\nShe slowly pulled herself off me, took my hand and dragged me out of the room and to the bathroom down the hall. She plunked herself down on the seat and shivered as she started to pee. I stood nearby watching but then she took gentle hold of my cock and pulled me over by it. As she sat, she leaned forward and took my manhood in her mouth, moaning as she tasted our mingled cum on my shaft. \n\n\"Mmmmmm,\" she sighed happily. \"I love how we taste together, Alex.\" \n\nI closed my eyes and held her head gently while she sucked contentedly on my cock and peed. She finally finished her first task and continued with the second for a while longer, eventually releasing me and smiling up at me. \n\n\"A girl can't get too much of that,\" she purred. \"We could just shower together, but I do believe we'd both fit easily enough if we shared a bath.\" \n\nI nodded. \"I'd like that. Go get your robe and then wait in your room while I get the water going.\" \n\nShe nodded as she rose from the seat, kissing my cheek and wiggling out of the room. I put my plan into action quickly. \n\n*** \n\nAlexa responded to my call some minutes later, coming back through the bathroom door and pausing- the room was dim, lit only candles I had spaced about. The radio in the corner was playing mellow classical music and I had infused the water in the tub with scented oil and found some of my mother's rose petals in a cupboard to spread on the surface. \n\nAlexa stared in silence for several seconds, her flawless skin and lustrous golden hair glowing in the flickering candlelight. I smiled and then shrugged. \"Hope I got this right, never tried to do a romantic bath for a girl before, y'know?\" \n\n\"It's wonderful, Alex,\" she murmured. \"You made everything perfect. You're even playing Debussy.\" \n\nI smiled again and nodded. \"Seemed appropriate. I'd have played this at the little glade the first day we'd made love, if I'd had a music player with me.\" \n\nShe walked into the bathroom, looking into my eyes as she approached. I took her hand and eased her into the tub. She knelt and smirked up at me, crooking her finger and beckoning me in. Without hesitation I joined her and she laid me down gently, so she could settle in on top of me. The water level was perilously close to the lip of the tub, but I didn't care. \n\n\"Mmmmm, this is paradise, ma coeur,\" she purred as she lay on me, facing up and pulling my hands over her breasts. \"I could stay like this forever.\" \n\nI gently caressed her breasts and kissed her neck. She hummed and rubbed her cheek against mine. We turned our faces and kissed softly, her fingernails grazing my cheek. Everything about this girl and everything she did was so completely erotic in every sense- it was like she'd been put on this earth for the express purpose of making love. \n\nI don't know how long we lay in the tub, letting the oiled water soak into our skin and simply caressing one another, but it didn't matter. There was only the music, the flickering candlelight, the warm water, and each other. Time meant nothing. I did not doubt we would be making love before getting out, but right now we found simple perfection in holding one another close. \n\n\"Alex,\" she whispered, slowly turning over to face me, her breasts pressed to my chest, her pussy against my cock. She looked deep into my eyes. \"Are you absolutely sure you're okay with me going on this date with Jeanie?\" \n\nI nodded. \"I think you need to. First, it'll thrown my parents off the trail. Second, you messing around with a girl wouldn't bother me. I'm serious. I just... I know I have to give you up eventually, Alexa, so anything I can do to prolong our time together is good by me, even if it means dating other people as a ruse.\" \n\nShe considered my words and then looked into my eyes again. \"What about you? Do you think this Heather girl is likely to put out for you?\" \n\nI nodded. \"I've gone out with her before, she dropped her panties pretty quickly on that first date.\" \n\nAlexa giggled. \"Well, I should be jealous, but I know better than to be, since it's all a ruse. If you're getting laid, at least your dad will sense it and think you're on the right track.\" \n\nWe kissed then, with me holding her tight and our lips pressing together. Our wet bodies moved together, the scented oil in the water adding a romantic layer to the moment, along with the serene music. Her body felt like heaven against me and I found myself thinking for the millionth time I'd never tire of it. How could I? \n\nWe made out for some time, with Alexa squirming her breasts, stomach and pussy against me slowly, sensuously. This had a predicatable effect on my anatomy and she smiled at me warmly. Without a word between us, she pressed her netherlips against my cock and settled down, sighing quietly. She laid her cheek against my chest. \n\n\"Don't fuck me just yet,\" she whispered. \"Just let me feel you inside me...\" \n\nWe just stayed where we were, content to be together. I could feel my cock throbbing inside her and I could feel her heartbeat inside her tight pussy. It thrilled me to think we were somehow that in tune with one another, that bonded. Alexa seemed to agree. \n\n\"It's because we're in love,\" she murmured. \"That's why everything we do together feels perfect. I can't really remember ever feeling this content before.\" \n\nEverything she said was true, there was no denying it. If I could have stayed her in this tub with her, my cock embedded in her pussy and not moved a muscle except to kiss her, I'd count myself the happiest man in the world, and the luckiest. \n\nHer hands slowly reached up behind my neck and began gently massaging and caressing the base of my skull. My whole body relaxed and she purred as she felt it. Her fingers were absolutely magical, and while I harboured no doubt they'd pleasured many other lovers before me this way, there was a satisfaction in knowing that what she was doing for me here and now meant more to her than any other time in the past with anyone else, even her friend Freja. \n\n\"I absolutely revere you, Alex,\" she whispered, her lips pressed to my chest as she spoke. \"I want to spend my whole life pleasuring you, making you the happiest of men.\" \n\nI nodded and kissed the top of her head. \"I feel the same way. I worship the ground you walk on and there's just such a certainty and purity about my feelings for you, Alexa. I'm so glad I can express them to you, even if it's taboo everywhere else.\" \n\nShe slowly raised herself until she was looking into my eyes. The flickering tendrils of light from the candles were reflected in those sapphire galaxies I was so lost in. The universe, eternity in her eyes. I smiled. \"It must be true love.\" \n\nShe smiled in return. \"Of course, but please tell me your reason for saying so.\" \n\n\"Because lame Eighties love ballads sound wonderful when I think about you.\" \n\nMy aunt beamed a megawatt smile and giggled. \"Funny, I tend to think of Motown romantic songs when I think of you.\" \n\nI raised my eyebrow. \"Motown?\" \n\nAlexa nodded and shrugged. \"It was a big fixure in my life as I grew up. Mom loved Motown.\" \n\nI grinned. \"Want to know what my dad's song for my mother is?\" \n\n\"Oh, gods, the mind doth boggle at the prospect, knowing Michael,\" she said, wrinkling her nose. \"Okay, I'll bite. What is it?\" \n\n\"It won't surprise you, it's 'All Of Me Loves All Of You' by the Bay City Rollers.\" \n\nShe dropped her head and giggled. I could feel her breasts jiggling against my pecs. She finally looked up, her eyes dancing with mirth. \"I can absolutely see that. Those two are so weird.\" \n\n\"It's their wedding dance song.\" I said flatly. \"Every anniversary, there they are, Seventies-dancing away to it.\" \n\n\"How does one even dance to the Bay City Rollers?\" she mused. \n\n\"It defies description, but tartan pants are involved.\" I replied. \"I've been trying to get them to update their playlist, but no luck.\" \n\nShe giggled again and leaned in to rub her nose against mine. \"So, do you have a song for me? A song that describes me or how you feel about me?\" \n\nI nodded readily. \"Two actually.\" \n\n\"Goodness, I'm flattered,\" my aunt said, smiling. \"What are they?\" \n\n\"First one is 'She's So High' by Tal Bachman,\" I replied. \"It rings really true for me about my feelings for you.\" \n\n\"Well, who am I to refuse to be put on a pedestal?\" she said sweetly, fanning herself. \"And indeed I'm all natural with no tucks or silicone, maybe just not as random as the girl in the video. What about the second song? You said you had two for me?\" \n\nI nodded again. \"That one was easy and describes you perfectly. 'Any Way You Want It' by Journey.\" \n\nShe stopped and thought about what I said, some great realization dawning on her. \"Oh... my... God, Alex,\" she murmured. \"That's perfect. I've been wondering what my own personal anthem was my entire life and you absolutely nailed it without trying. Damn you.\" \n\nI chuckled. \"Happy to help. Do you have a song for me?\" \n\nAlexa blushed. \"Maybe...\" \n\n\"Well, go on, tell me.\" I pressed, nudging her. \n\n\"It's not even a Motown song,\" she mumured. \"It's 'Strangers In The Night' by Sinatra.\" \n\nI pulled her close, holding her to me and kissed her, deeply and lovingly. \"You're too wonderful for mere words.\" \n\nWe stopped talking and she held me close, moving and undulating on me slowly. The music played and we kissed, lost in one another. Several minutes later, we both moaned and sighed as we came in unison, not strident and frenzied, but gentle and warm. My cum filled her and she squeezed my cock ardently, looking into one another's eyes. Alexa exhaled deeply, pressing her breasts against me and her forehead to mine. \n\n\"A moment like this should never have to end...\" she whispered. \n\nWe moved slowly and said nothing for several minutes, simply content to be together. Finally, though, she took up a sponge and began washing my body reverently, allowing me to do the same to her. Once we'd exited the tub and dried one another off, we walked hand-in-hand downstairs to my room, collapsing on the bed together. \n\n\"You sure you're okay with me dating Jeanie?\" she asked, smiling down as she lay half on top of me. \n\nI returned the smile and brushed a strand of hair from her lovely face. \"I already said I was, and to be honest, Alexa, I'm kinda looking forward to it. Even if we could be together as a couple, I wouldn't object at all if you were having sex with girls.\" ",
        "She giggled and poked my nose. \"You are such a male,\" she teased. \"Okay, I promise to have as much fun as I possibly can and I'll take lots and lots of pictures and videos for you.\" \n\n\"Now who could say no to that?\" I laughed as I pulled her down to kiss her. \n\n*** \n\nI'd been invited out to hang with some friends, but begged off as not feeling well so I could stay home and play games. Not because I wanted to play video games, but because Alexa had been bombarding me with pictures and videos all night of her date with Jeanie and I sure as hell didn't want to be out and distracted while that was happening. \n\nMy game spent at least half the night on 'Pause' as I gaped at my cellphone screen. Jeanie had come by in her car and picked up my aunt, with Alexa and I feigning familial disinterest in one another's goings-on. But soon enough, I began receiving pics of the two of them while they were out. As the evening progressed, though, the pictures got more intimate, seemingly. She sent me several of the two of them kissing or fondling one another's breasts through their shirts since they were still in public. \n\nThey apparently had gone to a club because Alexa sent me pics and video of the two of them on a noisy dance floor, squirming and grinding on one another. One video evolved from dancing into a very deep and involved tongue kiss. \n\nSome minutes later, in the darkness of Jeanie's car, there was a video involving lots of kissing and moaning as they groped one another feverishly. I watched as Jeanie pulled Alexa's top down and sucked her nipple into her mouth. My aunt shuddered and clasped Jeanie's head, but looked at me directly while she filmed, her eyes glassy with need. My cock, quite pridictably, got hard and I pulled it out as the pictures and videos kept streaming in. \n\nUpstairs, I heard the door close and footsteps, my parents talking with one another. My father's voice boomed down the stairs. \n\n\"We're back,\" he announced. \"Heard from your aunt?\" \n\n\"I got a one text message from her, just checking in,\" I said, telling the truth. I'd only recieved one actual text message, the rest were pics and videos. \"So I guess she's fine.\" \n\n\"Yeah, we got the same message, so I guess she just sent a blast,\" dad replied. \"Well, good she's having fun. We brought home Indian, y'want some?\" \n\n\"I'll get it later,\" I answered. \"On the Ogma Infinium quest at the moment.\" That was also true, it just happened to be paused. \n\nThere was a pause and then dad spoke again. \"Your mom says the bathroom smells like her scented oils. Did Allie borrow some for a bath?\" \n\n\"I think there was something about that, I told her where to find it,\" I replied. \"Probably wanted to smell all pretty for her date. I think some candles got used, too. Want me to ask when I see her?\" \n\n\"No, it's not a big deal,\" dad said. \"Your mom just wanted to make sure she wasn't having olfactory hallucinations. Have a good night, Alex.\" \n\n\"G'night, dad.\" \n\nWith my parents thrown off the scent, I returned to my cellphone, which had taken in three more pictures and two more videos during my brief conversation with my dad. I saw Alexa and Jeanie kissing just inside a front door, which I could only assume was Jeanie's place. Videos of them getting undressed as they kissed and staggered toward an apartment bedroom followed until they were both naked. \n\nI wondered how on earth Jeanie was cool with Alexa doing this constant filming, but then it occured to me that my aunt had probably told her she filmed as much of her life as she could anyway. Jeanie also struck me as the type who probably didn't care about being flimed and if she asked if she was sharing, Alexa could simply say that she was sending them to Freja, no harm done. \n\nThe next half hour of pictures and videos were a jumble of slippery activity where they were lying on Jeanie's bed, kissing in a tangle of limbs, sucking on one another's breasts, licking and fingering one another's pussies while they both came several times. I was rapt as I watched Alexa's glorious body, gyrating and squirming, glistening with pleasure. I'd been stroking my cock for some time now, my head almost spinning. I couldn't believe how much watching this was turning me on. \n\nI watched as they pressed their slippery pussies together and began writhing and grinding, both girls panting and moaning loudly. I knew from talking with her that Alexa loved this more than just about anything and you could tell from her eagerness that she was in her element. Their wet netherlips mingled and clits kissed, the camera zoomed in as Alexa tried to keep it steady while she girl-fucked Jeanie. \n\nThe orgasm they had was so intense that they both screamed, causing me to hastily turn down the volume on my phone in case my parents heard it and thought I was watching porn. A few seconds later, another video followed, showing their pussies glued together, undulating gently in their post-ogasmic bliss. The camera trailed up Alexa's lovely body to her face and she smiled at me tiredly and blew a kiss. \n\nThat was the last video for nearly half an hour. To be honest, I was okay with that, because I now had the chance to transfer all the pics and videos onto my laptop and watched them in sequence, jerking off furiously. I grunted and came hard as I watched Alexa and Jeanie cumming while scissoring, catching my desperate load in an old towel. Breathing heavily, I lay back on my bed and stared at the ceiling, thoroughly spent. I couldn't believe how hot that was. \n\nThe next video was a complete surprise- Jeanie's face appeared on my screen and she was grinning wickedly. \n\n\"Hi, I think you're name is Alex?\" she said. \"I conned your aunt into giving me her phone for a moment and telling you that we're doing all sorts of nasty things to one another!\" \n\nAnd then as if I needed proof, she showed herself kissing my aunt, their tongues tangling as they lay together, heads on a large pillow. This continued for a about ten seconds before the phone was pointed somewhere randomly and I heard Jeanie ask. \"Oh, hey, he's eighteen or older right?\" \n\nI heard Alexa mutter something and then lots of shifting before the video ended. I blinked and shook my head for a moment as I tried to figure out what had just happened- had Alexa told Jeanie about us? \n\nNo, that didn't seem likely. There was way too much at risk. Which meant the obvious conclusion was that Jeanie, wild space cadet that she was, wanted to troll someone and asked Alexa if she could try to give me the jibblies by showing her having sex with my aunt. There was no need to inform her how that would backfire now, was there? \n\nPictures and videos began arriving again soon after, showing them in the various stages of heated fucking, like Alexa wearing a strap-on and sliding it in and out of Jeanie's pussy or ass, the two of them locked in a trembling, sweaty 69 or Alexa shaking and gasping while Jeanie tongued and fingered her rosy little knot. \n\nThe location finally changed from the bedroom to the bathroom, where they were laughing and taking silly videos of Jeanie peeing and then inside the shower. Thank God for Alexa's European, water-proof phone. They lathered and cleaned one another, along with kneeling to suck on and finger one another's pussies until they came. Alexa favoured me with another video of their pussies squirming together wetly, covered in shower gel as the water beat down on them. \n\nThen another Jeanie video, this time showing Alexa out of the shower and still gloriously naked but holding a towel and looking at the camera, seeming not pleased. \n\n\"So, this is what your aunt looks like naked, Alvin,\" she said. \"Whaddya think?\" \n\n\"First of all, his name is Alex,\" Alexa said, trying to sound annoyed. \"And second of all, are you trying to kill him?\" \n\n\"Hey, he's a big, strong boy like his dad, right?\" Jeanie chided, still filming and getting closer to my aunt. \"He should be able to survive seeing his hot auntie naked. You might as well put on a show now, he's seeing all this.\" \n\nAlexa, who had been in the process of wrapping the towel around her body, rolled her eyes and sighed, opening it back up to expose herself. Jeanie got up close and panned down Alexa's body over several seconds, finally focusing on her smooth, bare pussy. Alexa had her legs pressed together in some attempt at modesty, but Jeanine was apparently having none of that and coaxed them apart. \n\n\"So yeah, that's your aunt's cunt,\" Jeanie remarked from behind the camera. \"Really pretty, really wet, really tight and really, really tasty...\" \n\nTo emphasize her point, she poked her head into the shot and showed herself flicking her tongue up and down Alexa's lips. One of Alexa's hands came to rest gently on her lover's head. Finally, Jeanie stood and nestled up to Alexa, the two of them smiling at the camera. \n\n\"So she's here with me, doing this and you're apparently back home playing Skyrim or something.\" Jeanie teased. \"Which of us is having the better night?\" \n\nThe video ended with the two of them kissing again. \n\nI put my phone down and rubbed my face for several seconds, trying to banish the disbelief from my brain. I sure as hell had no objections to what I'd seen, I just hoped Alexa knew what she was doing. \n\nThere seemed to be no further pics or videos, so I returned to playing my game until I got drowsy and shut off the system. I transfered all the files to my computer and then shut out the lights and settled in to sleep. \n\n*** \n\nI heard someone quietly come inside, followed by some whispering and giggling. Then there were quiet 'goodbyes' and the door softly shut. Feet padded through the kitchen and the door to my cave opened. Alexa quietly came downstairs in the dark and crawled onto my bed. I reached out and pulled her into my arms, kissing her deeply. She sighed and melted against me, almost in relief, back where she belonged in my embrace. \n\n\"Well, if my inbox is any indication, you had a wild evening.\" I said, grinning in the dark and poking her nose. She giggled and nodded. \n\n\"I have to admit, the lesbian sex was great, no question, that girl is a perv. But I also have to admit, that whole time I was missing you.\" \n\n\"I'm flattered,\" I said, holding her to me, letting her bury her face in my shoulder, kissing me. \"Because I was really enjoying the show. Think you'll see her again?\" \n\n\"I... no, probably not,\" Alexa sighed. \"Not that way, anyway.\" \n\n\"Why?\" I asked. \n\n\"Because she's fucking your dad and your mom.\" Alexa said flatly. \n\n\"Which means that it feels like you've almost fucked your sister and your brother-in-law.\" I concluded. \"Brutal. You sure you're okay fucking me?\" \n\nShe giggled. \"That's different, I'm in love with you. But I can't get my head around that her pussy has had my sister's tongue in it or that her tongue's been in my sister's ass and Mike's dick has pounded that it.\" \n\nI made a wry face I'm sure she could see even in the dark. \"Yeah, I won't be able to see her as sexy or fuckable anymore either. I have a hard enough time remembering that I came out of the vagina my dad's been in.\" \n\n\"Ew!\" she squeaked, giggling again. \"I'm so weirded out, Karen, Mike and I have shared a girl, even if it's only indirectly. And they knew I was going to date her and probably knew she'd put out and they let me do it anyway.\" \n\n\"Yeah, they're real free spirits, my parents,\" I sighed, holding her close and trying to not think of that quadrangle. \"Should we delete all the videos and pics?\" \n\nShe shook her head. \"No, that sex was damned hot, we'll watch it together, at least when we can stop remembering that she fucks your parents.\" \n\n\"Gonna be a while then,\" I muttered. \"I was a little confused when she began messaging me.\" \n\nAlexa nodded. \"She wanted to troll you. She may not know your name occasionally, but she thinks your hot, especially since you're over eighteen, although I'm not sure she would have waited if you weren't. She asked me if she could fuck you and I said to leave me the hell out of that dirty litle equation.\" \n\n\"You and me both.\" \n\n\"She also thinks that you and I fucking would be hot,\" she added. \"Or a threesome between us would be spectacular. I expressed what I can only describe as a grossed-out horror I wasn't actually feeling. I made it seem like fucking my nephew was the worst idea I'd ever heard. She laughed and dropped the subject. I think once she was done teasing you for the evening she went on to her next amusement.\" \n\n\"Well, as long as there's no fallout from it, no harm done and you got laid,\" I concluded, kissing the top of her head. \"I think Freja knowing is more than enough.\" \n\n\"Hm, no argument there,\" Alexa mused. \"I wouldn't trust Jeanie with a secret if she was the only other person on earth. She's a demon in the sack, but they do come smarter.\" \n\n\"Her parents must've made a huge contribution to the university to keep her in my parents' courses,\" I sighed. \"I'm just glad you're back in my arms.\" \n\n\"I agree,\" she purred. \"So... want to fuck me?\" \n\n\"I dunno,\" I said, sounding wary. \"That pussy has indirectly touched my mother's...\" \n\nShe almost laughed out loud as she thwapped me. \n\n*** \n\nWednesday night came around and I was on my date with Heather. Predictably, her panties had come off relatively early in the evening and we were in the back seat of my car with her impaled on my cock. She groaned lustily as she ground on my lap, staring down at me. \n\n\"Gnnnn, fuck, you feel just how I remember, Alex,\" she panted, bouncing up and down, her hands around my neck. \"You and that big fucking monster dick of yours. I love how you tear me apart.\" \n\nI nodded and bit her shoulder so that I didn't have to talk. Our sweaty bodies slid together feverishly in the darkness of the empty lot outside High Park. Heather's body wasn't an erotic fantasy, like Alexa's, but there was certainly nothing to complain about. Her heavy breasts were lush and soft, caressing my chest while she squeezed me with her wet pussy. My fingers dug into her meaty ass cheeks as I pulled her tight against me, her wetness glistening on my fingers. \n\nThe date had gone smoothly enough up to this point, with my parents sending me out the door and Alexa waving absently from the living room, where she was reading a book. We'd already said our heart-felt goodbyes a few minutes earlier in private. We both knew I was going to fuck and she made me promise to try and take pictures or video if Heather would allow it. \n\nWe'd gone to dinner at a local pizza joint, where Heather had made it clear we were going to fuck before the evening was out and discussing where. We then had gone to see an action movie and sat in the back row, where she leaned over my lap, pulled my cock out and sucked on me ardently, to make sure I was ready to go. I then drove us to High Park and was ready to get out and go find a dark corner of the huge expanse, when she expressed the need to fuck right then and there in my car, she wasn't willing to wait. \n\nSo here we were, rutting like animals in my car, and try as I might to do the right thing by my date, I just could not keep imagies of my lovely aunt from entering my head, unbidden. It made me fuck Heather harder, not that she was complaining about the results. I crushed her against me and she was wracked with spasms, moaning loudly and cumming. I bucked my hips beneath her and came, thankfully wearing a condom. She collapsed against me and was breathing heavily, almost in a swoon. I kept my arms around her and kissed her neck. \n\nShe finally sighed and listed her head to smile at me. \"It's a good thing you're so smart, or I'd be in real trouble here.\" \n\nI blinked and looked at her quizically. \"Come again?\" \n\n\"Soon enough, I just need a minute,\" she quipped, winking. \"I just meant that you're too smart for me, Alex de Bourne. I plan to marry rich, get a divorce and live off the alimony. You're too smart to fall for that and you're too smart for me to fall in love with you, I wouldn't be able to marry you.\" \n\n\"That's an interesting reason to not fall in love.\" I allowed. \n\n\"Don't get me wrong, I'm totally in love with sex with you,\" she added, trying to make sure she hadn't hurt my feelings. \"I love your cock and you're an amazing fuck, but I think that's what we can be, fuck buddies. Would being a booty call bother you?\" \n\nI raised an eyebrow, giving her the chance to continue. \n\n\"You're too smart for me to date,\" she sighed. \"I don't want to disappoint you by dating you and coming up short. But I think our sex is hot enough for us to agree to exercise our bodies on one another, you know? We can be casual friends and hook up, we just shouldn't seriously try to date.\" \n\n\"I know what you mean,\" I said finally. \"We can certainly talk about it, Heather. I've certainly had worse proposals that 'fuck-buddy' thrown my way.\" \n\nThis answer seemed to suit her very well and she smiled naughtily while pulling herself off me, slipping off the condom and sucking my cock eagerly, licking me clean. We went on to fuck twice more that evening, with the last time seeing me fuck her ass and cum deep inside her. I'd promised Alexa I would take pictures and videos, which I did, with Heather's permission. She said as long as I wasn't showing it off to any guys, she had no problem with it. I guess it never occurred to her I'd be showing them to my aunt. \n\nI pulled up into the driveway of her house that she shared and she pulled herself onto my lap and we made out for several minutes before she finally exited my car and went inside. I could see two other girls in the house greet her at the door and they seemed to be eagerly asking questions. I drove off, shaking my head and wondering what I was going to do. \n\nHeather was a nice girl. And the sex was great, it felt really good, she was a great fuck. But she just didn't compare to Alexa- not in terms of looks, not in terms of her sexual skills, not in terms of how she made me feel. Alexa made everyone else seem like goldfish food. \n\nAnd that was a problem. I just wish I knew what to do about it. \n\nOf course Alexa felt this way too. We both had thrown ourselves into dating other people with all the energy we could, desperate to find an alternative to the agonizing bond between us, something that would allow each of us to ease away, with as little pain as possible, leading full and fulfilling lives with other people. \n\nNothing. I couldn't even fuck another girl and keep my mind off Alexa. I wanted the girl I was fucking to be her. And the girl I was dating, whoever she happened to be, didn't deserve this from me. I was very glum on the way home, considering I'd just gotten laid repeatedly by a hot chick who liked to fuck. \n\nThe house was dark except for a dim light in the living room. Alexa had told me that would be the signal if she was awake and alone. My insides were quite confused, because I was eager to see her, to hold her and kiss her, but I didn't know what to tell her. I didn't even know why I was so reticent about this. I fucked a girl and felt nothing except my continued love for her. \n\nAnd against all possible logic, that was a problem. \n\nI came in quietly and looked in the living room. Alexa was reading the Decameron while lying on the couch and saw me. She smiled warmly, put the book down, and held her arms out for a hug. I walked over and knelt down, taking her in my arms and kissing her deeply, lovingly, with everything I had. She sighed into my mouth, returning the kiss with such incredible devotion that I was instantly lost in her. She was like my own private universe. \n\nShe pulled back from the kiss and smiled, her eyes shining with love and kindness. \"No luck, I take it?\" \n\nI shook my head. \"Nope, still in love with you and only you.\" \n\n\"Well, drat,\" she said, winking. \"You had no more luck than I had. I fucked Jeanie near to death and I am still only in love with you. We must be going about this wrong.\" ",
        "\"Then who wants to be right?\" I asked, sitting on the couch while she snuggled into me, tracing her fingers over my shirt. \"I wish I knew what to do.\" \n\n\"Well, I have it realtively easy,\" she mused, caressing me. \"I am decidedly bisexual and can play the field if I like. You, you're just stuck fucking girls.\" \n\n\"Normally that wouldn't be an issue for me,\" I sighed. \"I should have really enjoyed that date and that sex tonight. And I guess I did, speaking objectively, Heather's good at sex. But she's not you and she doesn't hold my heart. It feels unfair, to all three of us. I guess it's a plus that she thinks I'm too smart and only wants to be fuck-buddies.\" \n\nAlexa giggled. \"So pretty much the same as Jeanie. I can't imagine trying to be in a serious relationship with her, even if she weren't fucking your parents.\" \n\nShe screwed up her face and made a 'bleh' sound. \"Shit. I just grossed myself out. May I have your cock?\" \n\nI looked around for a moment. \"Here? Now?\" \n\nShe nodded. \"I want to taste another girl on you. See what it's like. And no, I don't want to hear about how your penis passed through your mother's vagina once and therefore indirectly touched Jeanie's. Just hand it over...\" \n\nI chuckled and stood, allowing Alexa to sit up on the couch and unzip my pants, dropping them and exposing my cock. She held it gently and seemed to breathe in the scent. \n\n\"Well now, it's not so bad...\" she whispered before taking me inside her mouth, her tongue rolling around my now-swelling shaft expertly. She held her mouth at the base of my cock, eyes closed, as if feeling something. \n\n\"She's a little salty,\" she mused, pulling back and smiling up at me. \"But not unpleasant. She can't be a total slag.\" \n\n\"Another word the queen would never use,\" I replied, grinning. \"Slag.\" \n\nAlexa giggled and popped my cock back into her mouth, bobbing back and forth until I was good and hard. She finally looked up again and took her mouth off me, pumping my shaft with her hand. \"How many times did you cum today?\" \n\n\"Three.\" I said simply. \n\nShe considered and shrugged while looking at my throbbing dick. \"Well, you might have a little left in you, we'll see. I'm taking you downstairs.\" \n\nShe lead me down to my room and put me on the bed, undressing quickly and crawling on top of me. Without a word between us, she lined her pussy up with my throbbing member and sank down onto it, taking me all the way in. We both groaned in relief as she sat still on top of me. Then she pinned my wrists beside my head and looked down into my eyes as she began to undulate slowly on top of me. \n\n\"I could taste the condom you wore too,\" she whispered. \"I'm sorry you had to do that, but I guess I'm relieved, too. I love having your cum all to myself.\" \n\nI smirked. \"If we ever have the three-way you want with Freja, it's gonna be awkward to fuck you without one and then have to slip one on to fuck her.\" \n\nAlexa giggled and leaned in to kiss the tip of my nose. \"I think if we're sharing someone, I'll be willing to make an exception, my love.\" \n\nShe shuddered and gasped softly as I tilted my hips up, penetrating deep inside her. Her fingers gripped my wrists tight as the pleasure rippled through her. \n\n\"Naughty,\" she sighed. \"But auntie loves it.\" \n\nWe pumped and writhed against one another in the darkness for some minutes before she crushed herself to me and moaned as loud as she dared into my pillow, cumming hard. I felt the ecstasy flood through me, although my offering deep inside her pussy was spare- Heather had milked it out of me earlier in the evening. \n\n\"Don't worry, Alex,\" Alexa whispered as she pressed her body down on top of me and smothered my face in kisses. \"I'm just relieved to have you back inside of me. My day is not complete unless you're in me, Alex.\" \n\nI caressed her face. \"I'm in love with you.\" \n\nShe smiled and gently brushed her lips against mine, whispering it back. \n\nNot a damn thing had been solved. \n\n*** \n\n\"So, your mother and I have just found out we're getting raises,\" dad announced as we all sat around the kitchen island, drinking coffee. \"Good ones.\" \n\n\"Hey, that's awesome!\" I said, genuinely thrilled for them while Alexa clasped her hands in delight and threw herself against her sister, giving her a hug. \"And you were doing pretty darn well already.\" \n\nDad nodded. \"It doubles our income and jumps us a few tax brackets,\" he said, waving it off modestly. \"But it does mean that we can do a few things we've been planning on sooner than we'd expected.\" \n\n\"We were anticipating raises, yes,\" mom said, finally breaking out of Alexa's bearhug. \"But modest ones, not anything quite so extravagant. We initially protested, but it turns out the university has recieved some very generous donations recently, so they can expand several key departments and still pay your father and I what they think we're worth.\" \n\n\"So we'll be building that expansion on the house we've talked about,\" dad said, nodding. \"If we get a good design, we'll actually turn most of the backyard into an atrium, with the outlying part being visible gardens. How does that sound.\" \n\n\"I've been wondering since I got here why your house was built in this particular shape,\" Alexa said, her mind obviously picturing what my parents had in store. \"Because it was meant to be added onto, like another piece you didn't have yet.\" \n\nMom nodded. \"Third phase will be to allow for a glass roof over the atrium that can be put up in the late fall and removed in the spring, so that we can use it all year-round. Until then, having a courtyard of our own is nothing to sneeze at.\" \n\n\"We've also been considering buying the dorm apartments next door,\" dad added. \"The guy who currently owns it is a sleeze. If we own it, we can write it off in taxes because we'll continue to house students there. If you or Alexa felt the need for your own space, you could move next door.\" \n\n\"However,\" mom said, leaning against the island and drinking her coffee. \"We wanted to talk to you both about the expansion. What if you each got your own considerable amount of space in the new addition? Good-sized bedrooms, your own bathrooms and big closets and dens and so on?\" \n\nAlexa's eyes went wide while I raised my eyebrow. \"I didnt know you two had abandonment issues.\" \n\nDad laughed. \"Not even close, your mom and I have plenty of misbehaviour planned for when you're out on your own, eaglet. But this addition needs users and since you're both going to university here in the city, it makes sense to give you first crack. When you leave, your mom and I might take in some needy students or something.\" \n\n\"My own private space?\" Alexa breathed. \"It's almost like having my own house.\" \n\nMom nodded. \"No need for any answers yet, your father and I have a lot of consultations to make with contractors and such. And to be honest, the reason we told you about the raises is because we're going to go celebrate tonight. So make sure you're dressed nicely.\" \n\nAlexa giggled and clapped her hands before giving me a hug and dashing upstairs. Mom watched her run off and shook her head while dad chuckled. \"She's in a good mood,\" mom mused. \"I take it her date with Jeanie went well?\" \n\nI sighed. \"That'd be my guess. Jeanie ganked her phone at one point and kept sending me videos of her doing things to Alexa and teasing me about sitting at home playing games.\" \n\nDad snorted and burst out laughing while mom looked shocked for a moment and then concerned. \"You're... you're not... are you okay?\" \n\nI rolled my eyes. \"I'm fine, mother.\" \n\n\"She shouldn't have done that, it's irresponsible,\" she said somewhat tersely. I could tell her ire was rising. I played my one card to diffuse the situation before things became complicated. \n\n\"Could've been worse, she might've messaged me from your phone.\" I said pointedly. \n\nMy mother stopped dead. Even my father stopped laughing and went silent before coughing into his hand. I could see her cheeks go pink as what I had said sunk in. \n\n\"Oh, Jesus, you know,\" she breathed. \"Alex, I-\" \n\nI held up my hand. \"You don't have to account to me about anything, you're the best parents a guy could ask for. You aren't amazing in spite of this thing, it's just part of who you are. And frankly, now that I've seen Jeanie, the less I know, the better.\" \n\n\"Which means Alexa knows,\" mom muttered. \"What did she have to say?\" \n\n\"Well, I don't like discussing these things with my aunt,\" I stated, telling a half-truth. \"But to quote her, she doubts she'll see Jeanie again, now that she knows dad's been inside her and you've bumped donuts with her.\" \n\nMy dad's roaring laughter echoed in my ears for several minutes afterward. \n\n*** \n\nSince we were going out to celebrate, mom and Alexa went shopping for new dresses. They'd no doubt be purchasing something sexy and slinky if I knew mom and I couldn't wait to see Alexa. Dad and I simply opted for our good suits. \n\n\"Did you have a good time the other night with Heather?\" dad asked casually as we put on our ties while standing in the living room. We'd agreed to meet them at the bar of our restaurant of choice so that we'd be pleasantly surprised by what they were wearing. \n\n\"Yeah, it was a good night,\" I answered. \"She hasn't really changed since my last date with her.\" \n\nDad chuckled. \"We went to school with her mom, everyone called her 'Give-It-Away Colson. Except your mother, who called her Miss Good'n'Plenty. Like mother, like daughter, I take it?\" \n\n\"Definitely.\" I said. \"But she says I'm too smart for her to seriously date, so we're more likely to just be friends with benefits from the sound of it. Not that I am objecting.\" \n\n\"Well, as long as you're careful, I guess,\" dad mused. \"Chances are your mom is talking with Alexa and making sure things aren't awkward all of a sudden. Anything you want to ask or know?\" \n\n\"Nope,\" I said as I adjusted my tie, looking in the mirror. \"Less I know, the better. And to be honest, if you two are happy, there's no reason for me not to be on your behalf. It's like I tell my gay guy friends, I'm happy for them, do whatever the hell you want, just make sure I don't have to see it or hear about it.\" \n\n\"Very enlightened,\" dad laughed. \"Your mom and I have had student playmates for a lot of years, so this is nothing new. This is just the first time it's ever come up because your aunt went out with Jeanie.\" \n\n\"And that didn't worry you two?\" I asked, shrugging. \"Let's face it, she was gonna find out.\" \n\nDad nodded. \"We'd talked about it, figured we might need to talk to Alexa, but we weren't sure you'd find out.\" \n\n\"Well, she doesn't know many people yet and I'm more or less her age, so I'm kinda her default confidant.\" I reasoned. \n\n\"Yeah, you really are on the short end of the stick there,\" he agreed. \"You're her nephew and you get most of the workload concerning her because you're so close in age.\" \n\n\"Eh, it's not that bad,\" I added, trying to sound accomodating. \"There are worse things than having an intelligent and funny aunt.\" \n\nDad slipped on his jacket and clapped me on the shoulder. \"Alright, let's get going, they'll probably be there soon and waiting for us.\" \n\nI couldn't wait to see what Alexa was wearing. \n\n*** \n\nMom and Alexa were indeed waiting for us when we got to the lounge. They must have seen us coming in the mirror behind the bar, because they were facing away from us and turned around upon our approach. Dad and I both nearly stopped dead in our tracks. \n\nDrop-dead gorgeous was not even close to beginning to describe Alexa- her sultry figure was clad in a black cocktail dress that hugged her curves perfectly. The neckline was low and drew attention to her magnificent bust. The dress ended somewhere above mid-thigh with a split on the side, revealing miles of shapely leg. She'd done her hair up in a coil that was elegant with just enough hint of cheerful messy to be fun. \n\nMom was wearing a deep royal blue dress that accented her curvaceous figure and bathykolpian nature. Mom's dark, lush hair hung down and spilled over her shoulders. Both women were wearing silve jewelry that complimented their attire. \n\nAlexa smirked as I tried not to stare, dumbstruck. Thankfully, dad might have been equally amazed, but at least he could speak. \n\n\"Whoops, we're in the wrong lounge, Alex,\" he said. \"Apparently only angels drink here.\" \n\nAlexa blushed and giggled while mom smiled and rolled her eyes, doubtless used to dad's unusual and often cheesy flattery. She took him by the hand and pulled him over to a seat beside her while I sat on the outside of Alexa. We all laughed and enjoyed some drinks before heading into the elegant dining room and having a wonderful dinner. I tried not to blush as I kept feeling Alexa's foot graze up and down my leg under the table. \n\nDinner was over and we were all drinking port with poached pears for dessert. Mom was apparently under the influence enough to try and seduce dad, not that this required any work on her part. She leaned into my father and whispered something in his ear. He listened, nodded and they both stood up, finishing their glasses of port quickly. \n\n\"Alex, be a sport and pay the bill, will you?\" dad asked as he led mom away from the table. \"Order yourselves another round or something, we'll be back in a... whenever.\" \n\nI blinked as I watched them leave, trying to do the math in my head about whether my bank account could possibly handle this unexpected burden and leave a generous tip. Alexa snickered, knowing what was going through my mind. \n\n\"Your bank account can handle it.\" Alexa said sweetly, winking at me. \n\n\"And why would you know that?\" \n\n\"Well, your mom tried to help me open up an account today and I can't have one on my own just yet, so she attached me to yours. So I know how much is in your account. You've got this covered and Mike will no doubt reimburse you. Grace under pressure, right?\" \n\nI frowned. \"How did she do that without my signature?\" \n\nAlexa shrugged. \"She knew the branch manager of your bank and she helped us directly, apparently they're good friends. I saw some looks between them and the woman asked how your dad was in a nuanced voice. I think they're fucking her.\" \n\n\"And I'm beginning to think I live in a brothel.\" I sighed, causing her to giggle again and pat my arm. I ordered more drinks for us and then paid the bill. We waited for about half an our before mom and dad got back, trying very hard to look unruffled and dignified. They sat down as if nothing had happened and mom looked at me as she picked up her glass. \"What?\" \n\n\"Ab-so-lutely nothing.\" I replied. \n\n\"Damn straight.\" \n\n\"Well, at least I am.\" I quipped, causing Alexa to double over and begin giggling until tears were running down her face while mom almost choked on her port. Dad simply looked away and up at the ceiling. \n\nWith mom and dad's horny demons seemingly sated for now, we decided to vist another establishment, this one more of a club, with lots of pulsing music and flashing lights. Mom and dad were not nearly as out of place in these environs as one might imagine and were having quite a good time. Alexa and mom were dancing and definitely the center of attention on the floor. They were dancing together but not 'dancing together' as so many other girls out on the town often do. Mom seemed to be throwing some sort of provocative mating dance in my father's direction while Alexa was trying to not obviously throw one my way. \n\nAt some point, mom must have called her friends, Dr Stevenson and his wife Helen, who now showed up. Now those two seemed out of place in this loud club full of gyrating rhythms and flesh. They almost huddled together for protection but were assured by mom and dad's presence. \n\nEventually, all the evening's drinks had a predictable effect on my system and I excused myself to the bathroom. A few minutes later, dad also came into the john to relieve himself. We'd both finished and were coming back together when we paused, noticing something was wrong. \n\nA group of guys who were wearing biker clothing seemed to have gathered in a cluster around mom, Alexa and the Stevensons. One of them was standing close to Alexa, seeming to try and get her to open her legs so he could stand between them. Alexa was getting angry, as was my mother, while the Stevensons were pale with fright. There were maybe ten guys. \n\nThe one guy tried to use his hands to pull Alexa's legs apart when she rammed her knee into his crotch, causing him to grunt and double over. Another swore and raised his hand to slap her when mom's hand flashed out and her nails dug into his eyes. He screeched and reeled away but another made to hit her. \n\nDad was on them like a tiger. \n\nIf there is one rule I have ever learned in my life, it is to never enrage my father. Never threaten his family or the people he cares about. \n\nI was only a heartbeat behind him, but dad was already in there like a maelstrom and the men harrassing my mom and aunt backed up quickly in shock. Dad punched one of them square in the face, knocking him backward and through a round wooden table that splintered under the impact. He grabbed another and rammed his knee into the man's chest before throwing him down onto his face. People were stampeding away from the scene in a panic. \n\nIt didn't take the bikers long to rally and start fighting back against us. One tried to get behind dad, but I grabbed his arm and wrenched it, hard. There was a wet popping sound as his wrist and elbow dislocated at the same moment. He cried out in pain and I shoved him aside, lunging in at another. I ducked under a punch that was so slow you could have preserved it in amber. My fist rammed into the guy's sternum and another cracked across his jaw before he went down. \n\nMom kept Alexa and the Stevensons back against the bar, knowing better than to interfere while dad and I fought to push the men away from them. Their numbers were starting to work against me, because while I'm very adept at the fighting styles I'd learned, I'm not a patch on the raging engine of destruction my father becomes when you threaten his woman. \n\nClearly they thought he was the bigger threat (literally), because they were converging on him, one of the injured ones having stood back up to join the fight. This allowed me to grab one who wasn't paying attention and ram my knee into his lower back, dropping him. Dad slammed his fist across the jaw of another and blood sprayed in a wide arc. He grabbed two more and rammed their skulls together, a loud crack echoing across the club. I threw another aside and he tumbled into the bar next to mom. She scowled at him and broke a beer bottle over his head. He slumped down and went to sleep. \n\nI couldn't stop what happened next, I was tussling with a biker and not able to disengage. The injured biker who had stood up pulled a knife and lunged in, ramming it into my father's side. Dad grunted and grabbed the man by the wrist holding the knife, making sure he couldn't get away. Glaring down at the biker, he smashed his forhead right into the man's face, which dissolved in a welter of blood and bone before punching him, hard. His neck snapped backward like he'd received a Tyson uppercut and he collapsed to the floor. \n\nIn spite of the shouts of panic, feet running every which way and the cries of fright, the seeming silence that followed the brawl was deafening. Dad was towering over the carnage, his suit ripped, his chest heaving, teeth clenched and eyes blazing. I glanced over at Alexa, who had her hands over her mouth, her eyes wide with what might have been shock or fright. \n\nIt was then that I noticed the spreading red stain on my dad's shirt just above his belt. \n\nMom leapt out of her chair and rushed up to me while Alexa hustled the terrified Stevensons around behind the bar away from any harm before hurrying to join my mom at my side. Dad was still nearby, standing over the bikers, waiting to see if any were stupid enough to get up. ",
        "Mom was fussing over me, checking me or injuries when Alexa came up. I assured her I was fine, they hadn't laid a finger on me. One she was confident I was telling the truth, she looked at Alexa and put my arm around my aunt's shoulder. \n\n\"Allie, take my son and sit him down and look after him. I need to be with my husband now.\" \n\nAnd then she turned and walked up to my father quietly, standing on front of him. He may have been spattered in blood, both his own and the bikers', his muscles bulging and his tendons tighter than ships' cables, but the sight of his wife softened him instantly. He looked down at my mom and pulled her into his arms, hugging her close. She sighed and nuzzled her face into his shoulder, relieved. \n\nAlexa dutifully walked me over to the bar and sat me down, doing her own mini examination of me to make sure mom had missed nothing. I absently let her do what she liked while I watched my parents in wonder- mom knelt and pulled his ragged shirt up, exposing the knife-wound. Her expression didn't betray anything about the severity of the injury. She then walked him over to one of the bar stools and sat him on it, standing between his legs and pressing her forehead to his, whispering to him. My father smiled and held her gently. \n\nThe bartender approached them and said the police and ambulances were on the way. Mom smiled to him and nodded before returning her attention to dad. We were just close enough to hear what they were saying to one another. \n\n\"Don't worry,\" dad was saying. \"The knife didn't hit anything vital.\" \n\n\"Then why didn't he stab you in the head, you giant oaf?\" mom whispered, teasing him. \"I guess we have another sexy scar to add to the list of things that turn me on about you.\" \n\n\"I don't think this one's going to be too sexy.\" \n\n\"They're all sexy, Michael. Trust me on this.\" \n\nHer hand was holding a folded cloth that she was pressing against the knife wound, even as she was keeping him occupied. Her free hand's index finger trailed down his massive chest beneath the unbuttoned shirt, heading toward his pants. \n\n\"Trying to give me a massive erection to keep the blood away from my boo-boo?\" he asked, smiling. \n\n\"Whatever it takes, my love,\" mom said gently. \"There's no one like you and I'm not complete without you.\" \n\nAlexa and I watched silently from some distance away. Her hand reached over and squeezed mine. \n\n\"Wow,\" she said quietly. \"Look at her. I hope I'm that desperately in love with you.\" \n\nI nodded. \"I hope I don't need to get stabbed for you to figure it out.\" \n\nAlexa turned and looked at me and smiled, resuming examining me so that it looked like she was doing something practical. \"You were very brave, Alex. Those were five-to-one odds.\" \n\n\"Yeah, that's some serious Henry the Fifth Agincourt shit right there,\" I sighed. \"My dad had it handled, Godzilla would think twice about pissing him off.\" \n\n\"You're not worried about him?\" she asked as she lifted my arm to check my ribs. \n\nI shook my head. \"I suppose I should be, I mean, he got stabbed and is bleeding out and all, but I'm not. Dad's had worse things happen to him, believe me.\" \n\n\"It was terrifying to watch him,\" Alexa breathed, shuddering as she thought of something she'd witnessed during the fight. \"Mike's big and imposing, but I've never been frightened by him before. He's like a killing machine.\" \n\n\"Well, I doubt they're dead,\" I replied, shrugging. \"Probably wish they were, though.\" \n\nAlexa stopped what she was doing and pressed her face against my shoulder from the side and her hands clenching my shirt, almost shaking. \n\n\"Alex, what if it had been you that got stabbed?\" she asked in a tiny voice. \"I don't know what I'd do.\" \n\nI put one of my hands over hers and squeezed it assuringly. \"Don't worry, I'm pretty sure I can survive a knife wound.\" \n\n\"Only if they stabbed you in the head.\" Alexa muttered, echoing my mother's sentiments before finally composing herself. I think I was still too high on adrenaline to feel anything and I looked around almost in a daze- the club was pretty much obliterated in a large radius around us, the remains of tables and chairs everywhere, strewn through with biker bodies. Most of them were unmoving. Those that were could do little more than twitch. Most of the club's patrons had stampeded out soon after the fight began, those who were still there were spaced around the walls, gaping in shock. \n\nMom was still holding dad and whispering to him. The bartender was on the phone while the Stevensons had finally come back out from behind the bar and were standing nearby mom and dad, wondering if they should do anything. \n\nThe music had stopped. The silence was indeed deafening. \n\n\"Y'better let me up,\" I said, rising from my chair. \"I'm gonna go stand near the bikers, make sure none of them get up.\" \n\nAlexa nodded and came with me, holding a beer bottle in her hand just in case. I caught dad's eyes as I walked into the center of the room and he smiled and winked at me, plainly in good spirits despite bleeding out. I became aware of the wail of approaching sirens. Maybe a minute later, police and parameds rushed into the club, not knowing exactly what to expect. \n\nMom stepped aside dutifully but remained near dad as a two medics began examining him. Other checked the bikers while the police began handcuffing those not in need of serious attention. One officer approached Alexa and I and began asking us questions. He originally wanted us to come down to the station but once it was apparent that it was my father who had been stabbed, he agreed they could get all their answers from the hospital. \n\nSince we'd been drinking, Alexa and I allowed the Stevensons to take us to the hospital, while mom rode in the ambulance with dad, who protested the need for one at all. A stern look from my mom told him to play nice with the good parameds and we were off. We sat in the back of the Stevenson's sedan, saying very little but just holding hands. \n\nArriving at the hospital, we found mom waiting outside the emergency ward, sitting by herself and staring off into nothingness. Alexa hugged her and asked how my dad was doing. Mom smiled and informed us that he was very conscious, very alert, and hadn't shut up or stopped telling jokes the whole way here. Doubtless the poor parameds stuck in the ambulance with them were considering tanquilizing him just to get him to shut up. \n\nWe were all laughing but mom's eyes were glistening as she fought back her tears. Alexa and I sat on each side of her and held her close. She took a deep breath to compose herself. \n\n\"I have to admit, Alex, I'm a little paranoid about having you this close,\" she said quietly. \"This doesn't seem to have been a good week for being in proximity to me. First my little sister, now my husband...\" \n\nAlexa pulled her head back and frowned at mom. \"You can't be that retarded, Karen, to think you're somehow cursed or a smite magnet. Even your big-foreheaded husband's quantum math skills couldn't prove you cause disasters.\" \n\n\"You so sure?\" mom asked, her eyes glassy. This had been a very emotional two weeks for her all around. \n\n\"If they were, he wouldn't have been stabbed by that dinky little knife,\" Alexa said, smiling and caressing my mom's cheek. \"Alex already allayed my fears and told me he's been through worse, so there's nothing to worry about.\" \n\nMom sighed and leaned her head on Alexa's shoulder while my aunt kissed her older sister's cheek, consoling her. I stayed right beside mom, regardless of what she thought, and held her hand. Within half an hour, a doctor came out of the emergency rooms and removed his mask to speak to us. \n\n\"Well, the good news is, he's perfectly fine. The knife hit no vital organs and what blood he has lost we are already replacing. Stitching him up once we were sure there were no internal injuries was a breeze.\" \n\n\"Can we see him?\" I asked. \n\n\"That's the bad part,\" the doctor admitted. \"He refused to be put under while we were examining him and stitching him up, he just kept talking. So, we might have knocked him out for a while, just so that he was quiet.\" \n\nMom shook her head and sighed while Alexa burst into fits of giggles. The Stevensons, sitting across from us, also began to laugh. The doctor grinned and told us he'd be awake and available to visit in a few hours. The stay would be a short one, no doubt. \n\n\"I need to stay the night, at least the first one,\" mom said, her tone brooking no argument. \"I can sleep in a chair, but I need to be with him, doctor. This is not up for discussion.\" \n\nHe smiled and nodded. \"That won't be a problem. I've heard the police are waiting to talk to you all, so you might want to take care of that before he wakes up.\" \n\nWe did indeed give our statements to the police, fully corroborated by the bartender's account as well as other witnesses. They'd talk to dad when he woke up, but they eventually determined that the principal grievance actually belonged to Alexa, whom the bikers had first harrassed. \n\n\"They may have been taught a lesson, ma'am, but the law does provide you with recourse to press charges, up to and including aggravated assault, possibly. Would you like to press charges?\" \n\nAlexa lowered her head and thought deeply for several seconds. \"I don't know,\" she murmured. \"I've come back so recently, I don't want to complicate my residency with legal proceedings like this. Karen?\" \n\nMom took Alexa's hand and squeezed it. \"I'll be honest, Allie, I'm of two minds. Chances are if Mike was here, he'd say they've suffered enough, you know what he's like.\" \n\nThey both looked at me now. \"Alex?\" mom asked softly. \"You get a say too.\" \n\nThinking like dad was probably the right thing to do. But my memory of the event was seen through a black filter of boiling fury. I could have lost Alexa. \n\n\"They tried to hurt my aunt, mom.\" I growled, the look in my eyes apparently dangerous enough to give even her pause. \"Your sister, my aunt. They tried to hurt her. Let them rot in jail, even if they're crippled.\" \n\nMom considered and nodded before looking at the officers. \"We'll be pressing charges to the fullest extent of the law, officer. Since Alexa is the principal victim and complainant, my husband will doubtless agree when he wakes up. You have our answer.\" \n\nThe cop nodded and walked away. Mom turned and looked at me, her eyes uncharacteristically soft. \n\n\"Alex, I know how you feel. They might have killed my husband. You are right to be enraged, your wonderful aunt only just came into our lives and we're blessed for it. But don't let this fury colour your judgement from hereon out, you'll hate it down the road when it brings you no satisfaction or peace. Don't lose sight of everything your father and I have taught you when the going gets tough.\" \n\nI looked at Alexa and nodded, a silent understanding passing between us. She had deferred her own decision to my anger and I would never lose sight of that again. I couldn't. I owed her that. \n\n*** \n\n\"Rather amusing that your father was put in the same room Alexa was in just a few days ago, wouldn't you say?\" Mr Stevenson mused as we drove back downtown to retrieve the vehicles. The cops had determined I was sober enough to drive, so I would take my car home while The Stevensons brought my father's vehicle back. \n\n\"And you could see the look in Karen's eyes, the wheels turning in her head when she saw the size of the shower stall,\" Mrs Stevenson added, laughing. \"If Mike's stitches are strong enough, I've no doubt he'll be getting lucky in there before he's discharged.\" \n\nAlexa and I said nothing, but she squeezed my hand. \n\n\"The university is going to have a stroke,\" Mr Stevenson sighed. \"First Karen's in a potentially fatal car accident and less than a full week later, Mike is stabbed in a bar brawl. Good thing they already got their raises in writing. I don't think you two will need to worry about coming in to do any of the university work, at least until he is discharged.\" \n\nAlexa opted to ride with me, not surprisingly, once we had retrieved the cars and begun heading home. She seemed somewhat quiet and pensive, not that I blamed her. \n\n\"Should we have insisted on staying longer, after he woke up?\" she asked, looking at me, hoping she didn't need to feel guilty. \n\nI shook my head. \"Nope. That was definitely mom and dad personal time, nobody in their right mind would interfere. I feel bad for the nurses and so on who will keep interrupting them.\" \n\nShe leaned her head back against the passenger chair and sighed, looking at the ceiling. It was getting on toward dawn now that we'd left the hospital. It had been such a fantastic evening up until that fight in the bar. I couldn't remember any of us being happier or more excited. \n\n\"I think you and I have some serious competition for 'greatest romance of the age',\" she mused. \"I don't know when I've ever seen two people so desperately in love before.\" \n\n\"I think you and I are the upstart challengers for that title,\" I replied. \"If I'm as in love with you as dad is with mom, then I'm pretty damned amazing.\" \n\nAlexa giggled and caressed my arm, looking over at me. \"Karen won't leave his side, will she?\" \n\nI shook my head. \"Not unless you and I are suddenly taken hostage by terrorists, not a chance. The house is ours for two nights, guaranteed. Hell, mom'll be so focused on dad she'll probably forget to call or text me except minimally. She'll simply expect us to show up and then get lost when they want alone time.\" \n\n\"I'll be happy for our uninterrupted alone time,\" she purred, smiling at me. \"Unless, of course, you have another date on your itinerary.\" \n\nI laughed. \"You are the only thing on my itinerary. I want to spend as much of the next two days as possible making love to my aunt, who I am so crazy about.\" \n\nAnd what a pleasure it would be to prove that to her. \n\n*** \n\nAlexa moaned and panted loudly as she ground her hips down onto me in eager circles, my cock deep inside her pussy. I was squeezing her breasts and pinching her nipples while I fucked her, pumping in and out of her tight wetness. I shuddered as she squeezed me with her slippery, clenching walls, her sticky desire glistening all over our groins. \n\n\"Gnnnnnn, Alex...\" she gasped, her golden locks spilling around her shoulders as she rode me. \"Alex, you're so deep, God, I can't take it!\" \n\n\"Let me cum in you Alexa,\" I groaned, squeezing her tits harder and tilting my hips up to reach even deeper inside her. \"Please, let me cum in you!\" \n\nShe pressed her hips down with all her might, arching her back and neck before crying out my name. She pinned me to her bed and screamed, bucking furiously as she came. I growled as I felt my cock pulsing and releasing torrents of my pearly cum deep inside her greedy pussy. We thrashed and writhed like animals in heat, locked to one another. Her fingernails dug into my chest and I was squeezing her breasts so tight I was leaving red welts. \n\nShe collapsed on top of me, chest heaving, exhausted. I wrapped my arms around her tiredly, also overcome by waves of pleasure and a delicious, gratifying fatigue. Her sweet breath on my cheek imbued me with a great sense of serenity, like my life was complete as long as we were together like this. There was no way this was wrong. \n\n\"Alex,\" she finally said in a tiny voice. \"I'll keep dating girls and you need to keep doing the same, but I'm certain now, I can never be without you. I don't care if I have to change my name legally or sit on top of the microwave until the radiation changes my genome so we're no longer related, but I can't live without you. We need to find a way to be married. I need you for my husband.\" \n\nI held her tight and kissed her, knowing the truth of her words. \"I know. We'll keep up the facade until we figure it out. We'll figure out how to be husband and wife without destroying our family and our future. You have my word from this moment on, Alexa. I plan to make you my wife.\" \n\nThere was a certainty to my tone and in my conviction that defied all logic, I know this. Historical evidence and societal traditions made our desire to marry next to impossible, not just for legal reasons, but out of consideration for our family. How would my parents' peers view Alexa's and my relationship when it became public? \n\nBecause it would. \n\nMy parents were incredibly popular professors, but as a result they also had their petty, jealous detractors. It would be selfish to damage their careers, after everything they'd ever done for me and most recently for Alexa. Maybe other countries had laws, it's the sort of thing I could look into, but it changed very little realistically about what we were considering and the impact it would have. Prejudices about being married to a blood-relative, legal or not, could affect your employment or applications for employment. You couldn't magically make people not discriminate. The stigma of incestuous marriage aside, what would it mean about children? \n\nI think the truly scary part was that I saw these issues now as obstacles, rather than sound arguments to re-examine my course of action. I was madly in love with my aunt and behind my rational thought, this was all that actually mattered to me. \n\nDamn the rest of it. \n\nWe'd just have to find a way. \n\n*** \n\nAuthor's Notes: So, finally an update. What can I say, life's been distrssingly busy. \n\nYes, Alex and Alexa will be seeing other people as a cover, meaning there might occasionally be sex with said other people. Since you now have evidence of their devotion to one another, I'm sure you will somehow mystically survive the trauma. \n\nI promise you, there's no need to fill my inbox or Comments sections with treatises on incest and marriage in other countries. I know stuff, it's Alex and Alexa who don't, bombard their email inboxes instead. \n\nA lot of people have been raving about Mike and Karen as a couple, so I featured them in this chapter a little more, or at least more of their relationship and its dynamic. I think it really helps to fill them out as characters, to introduce new sides to them and so on. \n\nPlease stop screaming that you don't want to see Alex with his mom or Alexa with Mike, it's not going to happen, it never was. Chill. Worst I might have done was give Alexa and Karen a fling, but I decided against that a long time ago. One set of Lannister-style incest is enough. \n\nMore twists and turns await, I'm thinking this story will probably be at least twice as big as it is now, so plenty to come and I won't let it get stale. Up next, My Naughty Neighbour and The Great Khan, followed by Sapphic Serenity. Spring is soon here and love will be in the air. \n\nPunctuated by lots of violence and blood in The Great Khan's case. :-/ \n\nKeep your stick on the ice! \n\n- Management (Savagely Canadian)"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "incest",
        "aunt",
        "nephew",
        "romance",
        "violence",
        "humour",
        "taboo"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/alex-and-alexa-ch-09"
}