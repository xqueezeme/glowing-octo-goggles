{
    "title": "Baseballed Ch. 02",
    "pages": [
        "Anthony stood there with a baseball bat behind his head, his fists grasping it causing his biceps to bulge in two huge mounds of flesh. His huge hairy chest flared out making his natural v-shaped body even more pronounced. He wasn't wearing a cap so his freshly-washed hair hung down into his face contrasting to high and tight sides of his head. His new scruffy goatee made him look more mature and masculine. His gaze turned my way, I caught his eye for a second, or so I told myself. I figured he was looking at the girl with big tits walking near me. He turned back and kept talking to his coach. He twisted his muscular ribs and the end of the bat hit the ground in front of him. The aluminum rested between his hairy thick thighs like a giant metal cock and that wasn't far from the absolute truth. He leaned forward a bit, resting his weight on it as he listened to his coach. The last sight I saw as I walked into class was his big muscular ass covered by the thin material of his gym short and wondered if he was wearing a jockstrap.\n\nAfter class, I was in no rush to leave even though it was late and starting to get dark. It was the evening when Anthony had his tutoring session. I got a soda and walked to the parking lot. Anthony's truck was still there, several spots down from mine. A group of girls, cosmetology students, walked past me and loaded up into their cars, leaving me, Anthony and a few staff cars left in the parking lot.\n\nI got in my car and tried to crank it. My car wouldn't start. Alrighty then, I thought as I saw Anthony walking down the covered walkway toward the parking lot. I got out and opened the hood as Anthony walked into the parking lot wearing his baggy gym shorts and a muscle-hugging white t-shirt with the baseball logo on it. \n\n\"Yo, Kent!\" he yelled to me. \"You having car trouble, dude?\" he asked opening his truck door, throwing in his backpack. He pulled his shirt off and slapped on a cap backward. He walked over to my car. \"Let me have a look at it.\"\n\n\"I'd appreciate that. My parents left for the weekend and I have no clue what to do,\" I told him. \"But I don't want to mess up your plans for a Friday night.\"\n\n\"I ain't doing shit tonight, man,\" he answered as he leaned under the hood. I could see every sinewy strong muscle in his back. He looked around the engine and then walked back to his truck. He grabbed a flashlight and a can of smokeless tobacco.\n\nI looked at the can in his hand, disappointedly. He saw me.\n\n\"This is just some herbal stuff, no tobacco. Damn, you're as bad as my ma and those fucking cheerleaders,\" he chuckled as he took a pinch and put it under his lip. \"Ya'll need to just be fucking happy I quit the hard shit.\"\n\nAnthony was the epitome of a redneck in his habits, like his life was a country-western video and he was the dippin', beer-drinkin', truck-drivin' star. Fuck, I thought to myself as I took in the sight of him - thick muscled body, hairy torso, jet black hair, tanned olive complexion. He seemed to hardly ever keep his shirt on for very long.\n\nHe put the can down and grabbed the big flashlight. He asked me a few questions and I moved closer. The smell of wintergreen and his natural musky scent was intoxicating. I noticed his ass was particularly defined in his shorts, the two halves of his ass looking like two round melons.\n\n\"You made anybody mad lately?\"\n\n\"What?\"\n\n\"You've got a cable missing. You could get another at the auto store but it closed at five. Somebody didn't want you going anywhere. Maybe somebody's idea of a joke.\"\n\n\"You're kidding me, right?\" I said, looking under the hood.\n\n\"I shit you not. You're dead in the water, dude.\"\n\n\"Show me,\" I asked him, trying to look outraged and shocked.\n\nAnthony got close to me and I thought I'd pass out from the gorgeous heat and scent of his big hairy body. He twisted a bit and pointed.\n\n\"Right there, the cable...\" he started.\n\n\"I don't see,\" I interrupted.\n\nAnthony got behind me, pressing into me. He stretched over me and put his hand on some thing and fluttered his fingers.\n\n\"See my fingers? The cable should be connected here.\"\n\n\"Ohhhhhh,\" I responded, but mostly because I could, even through my shorts, feel his hog of a cock sliding against the crack of my ass. \"Oh, I gotcha now.\" I turned my face to his and gently pushed my ass against his crotch. There was a still silence and then Anthony flicked the light off, still looking at me. \n\n\"I appreciate you taking a look. I owe you one,\" I told him, smiling.\n\nAnthony pulled away and grabbed his can of fake dip. He walked back to his truck and put everything inside. He turned away and spat in the grass, looking like he was adjusting his crotch. He walked back toward me.\n\n\"That car's not going anywhere. I can give you a ride home or wherever,\" he said, scratching at his hairy chest.\n\n\"That'd be great! Like I said, my parents are away for three-days and I won't have any other way home.\"\n\n\"Let's go,\" Anthony said motioning me to his truck.\n\nI debated locking the car since nothing was inside and it wasn't going anywhere. But I decided to lock it anyway, just in case.\n\nAnthony was pulling his shirt back on and straightening his cap when I got to his truck. He motioned for me to get in.\n\nAnthony's truck was pristine, except for the shotgun shells and empty soda bottles. He put the shells in a side compartment and threw all but one of the bottles into the bed of his truck.\n\n\"Ready?\" he asked as he twisted the cap off the empty bottle, dropping it into a catch-all. He spit into the bottle and cranked up the big truck. \n\nI didn't say much at first on the way home. I just breathed in the smell of the truck. It smelled of Anthony - musk, leather, wintergreen, and motor oil.\n\nBeing an only child, his parents had bought him a brand-new truck for his twenty-first birthday. A major league scout was coming to watch him play, and they were placing their bets on an easy retirement.\n\n\"I'm surprised you weren't hanging out with Jamie or going into the city...it being a Friday night and all,\" I finally said.\n\n\"Nah, Jamie and I ain't having much to say lately.\" He spat in his bottle and wedged it between his legs. Caught him eating Megan's pussy the other night when they thought I was out at the gym.\"\n\n\"Damn,\" I told him, sympathetically.\n\n\"Naw, it wasn't a bad thing. We were going to split up anyways. Jamie and I had planned on fucking her together. I've wanted to spit-roast her with him for ages. Get both of our cocks into that juicy pussy at the same time and literally bang the fuck out of it together.\" He glanced over at me at the stop sign and gestured with his hands, two fingers pumping in and out of his fist. \"Don't discount the feeling of your hard cock rubbing against your buddy's cock inside a fuckin' tight cheerleader's shaved pussy. We both spooged deep inside and creampied the fuck outta her cunt. We had that pussy leaking fuckin' streams of cum.\" He moved the bottle and I could make out his big cock lolling against his thick thigh inside his shorts. He wasn't wearing his jockstrap.\n\n\"Anyway, they've got a date tonight. They'll probably be fucking when I get to the apartment. Might be a replay of the other night,\" he said, crossing his fingers. \"I could use some tight fuckin' pussy on my dick tonight,\" he said as we pulled into my driveway.\n\nI pulled open the door, but before I got out I turned back toward Anthony.\n\n\"If you're not doing anything, you wanna come in for a beer or something? I figure I owe you two at least.\"\n\nAnthony paused for a second.\n\nWell, why not? I don't have nothin' else going on,\" he said, smiling.\n\nOutside his truck, Anthony around at the big brightly lit house. He gave a soft whistle as we walked inside. \"Nice house, dude!\" \n\n\"Well, it's not mine,\" I laughed as I showed him into the big den.\n\n\"Damn, what a TV!\" Anthony said, looking amazed at the huge television my dad bought to watch football games on. \"I think I'm fuckin' in love!\"\n\nI picked up the remote and tossed it at him.\n\n\"Turn it on and make yourself at home,\" I told him, laughing.\n\n\"Shit! It's like being in movie theatre!\" I heard him yell from the kitchen.\n\nWhen I got back, Anthony was laid back in my dad's leather recliner, wearing nothing but his gym shorts. He looked so delicious laid back in the leather chair, his hands clasped together on his hairy chest. He was watching a baseball game.\n\nI handed him the bottle and he downed half of it. He stretched his body out on the chair.\n\n\"Damn, dude, this is the life. The only fuckin' thing that'd make this any better would some big-tittied blonde bouncin' on my cock tellin' me how damn hot I am.\"\n\n\"Well, you are pretty damn hot.\" Fuck, I thought to myself as soon as I said it.\n\n\"What?\" he said, sitting up in the leather chair. \"What did you say?\"\n\n\"Uhm...I just said you're a really...uhm...hot guy,\" I said rather meekly, running my finger over the lip of my beer bottle. I took a deep breath and looked up.\n\n\"You think so?\" He crossed his legs and put on his cap, pushing it a bit to the side. \"The chicks are always all over me, telling me all kinds of shit. They just want this big dick filling up their pussies; you know what I'm saying?\" He grabbed at his crotch. \"Nice to hear you queer guys like it too, appreciating it for the fuckin' art it is. I mean this fuckin' shit needs to be in a museum!\" he joked, flexing his biceps. He grabbed his beer and finished it.\n\nI asked if he wanted another beer.\n\n\"Yeah, dude, thanks! You're a nice lil' guy to have around the house.\" He reached out and slapped me across the ass as I went by. \"Damn, you've got a soft round hot girl's ass!\" he commented and laughed. I noticed he adjusted his crotch as he laid back and grabbed the television remote. \"Uhm. Let's find a movie to watch. You've got every damn channel they make. You game?\"\n\nI'm always game, I muttered to myself. In the kitchen, I took a deep breath and leaned against the counter. My dick was getting harder and harder as I felt the sting in my ass from his spank. Fuck, I thought, I want him to spank me all night. I had the half-naked star baseball player in the den...I stopped and turned toward the sound of a \"Whoo-hoo, you bad little boy!\"\n\nI grabbed his beer and rushed into the den. Anthony grabbed the beer from hand and took a sip between laughs. I had forgotten to remove the flashdrive loaded with porn I had been watching earlier today from the player. Anthony turned up the volume.\n\n\"I need to play in the game coach. Maybe we can work something out, I've seen the way you look at my ass in the locker room,\" said the twinky porn actor, dressed like a baseball player, pulling down his pants just past his ass cheeks as he teased the big hairy shirtless coach. The coach turned his baseball cap backward and dropped to his knees, licking the twink's smooth round ass.\n\n\"Motherfucker, he eating that round ass like a pussy!\" Anthony said as he leaned forward in the recliner and watching the action on the huge television. \"Damn!\"\n\nI stood there for a second before I sat down on the sofa, grabbing a pillow to hide my crotch.\n\nOn the screen, the coach stood up and dropped his shorts, revealing a big thick cock. He spit on the twink's ass as he positioned himself, lining up with the tight pink hole.\n\n\"Fuckin' shit, he's plowing that ass like it's best pussy he ever had,\" Anthony muttered as he watched with rapt attention the action on the screen. He sat with his elbows on his thighs, leaning forward and watching...studying... everything that happened on the TV. He glanced over at me a couple times. \"You like his shit?\" he finally asked as the coach began fucking the twink even harder and asking if the twink liked getting his boypussy fucked. I nodded my head and grabbed the pillow.\n\nAnthony leaned back in the recliner; there was a very prominent tent in his shorts.\n\n\"Come here,\" he motioned to me with his finger. \n\nI cautiously stood up and put the pillow down. Even in the dim light, I knew he saw my bulging shorts.\n\n\"Come the fuck here,\" Anthony said rather softly and calmly.\n\nI moved toward him slowly. Anthony's hands rubbed over his thick hairy chest, the tent in his shorts swayed a bit.\n\n\"You like watching those big cocks, those big baseball cocks?\" \n\nI nodded my head. \n\n\"You like watching that big hairy baseball coach fucking that ballplayer's soft ass?\"\n\nI nodded again.\n\nAnthony pushed his shorts down revealing his big fat cock. It barely stood up on its own it was so thick and long. It bounced a bit wanting to loll against Anthony's massive thighs.\n\n\"Why watch that and jack your cock, when there's a real one you can have?\" He grabbed around his cock and shook it in my direction. \"You like my cock? I bet you do. I bet you dream about it in your mouth and ass.\"\n\n\"Yes.\"\n\n\"Come and get it, boy.\"\n\nI leaned over and nervously took the head of Anthony's cock into my mouth. I twirled my tongue around the head as I locked my lips behind it. \n\n\"Gotdamn, mutherfuckin' yes!\" Anthony hissed between clenched teeth as I savored and sucked his big prick. I explored every inch of the shaft; I nibbled at and engulfed his big full nuts with my mouth.\n\n\"It's like a big baseball bat,\" I said to him breathlessly as my hand struggled to encircle it. \n\nI went back down on the head and felt his hand on the back of my neck pushing me further down. I pushed back and felt his hand grab a handful of my hair and push harder against me. I sucked in a deep breath as I sank down on his thick meat. It filled throat, spearing into my gullet. I turned my eyes upward and saw his smirking lips, his head nodding me on. He didn't release me until I began to gag. He patted my cheek and motioned for me to move. He stood up and his shorts fell to the floor. There stood the hottest man I had ever seen wearing nothing but a baseball cap. The light from the TV highlighted every muscle on his body; every hair on his torso seemed to glow in the electric blue light.\n\n\"Strip down. I want to see your ass.\"\n\nHe stood there stroking his big cock as I took my clothes off, glancing at the TV every once in awhile or rubbing a nipple in his mass of hair.\n\nI got naked and stood there displaying myself to this huge alpha male. He gestured for me to turn around. He made a soft wolf whistle.\n\n\"Bend over.\"\n\nI bent over, hands on my knees.\n\n\"Spread your ass cheeks. Show me that pussy.\"\n\nI pulled my ass cheeks apart. Anthony walked over and pushed my hands away. I felt his hands push open my ass cheeks. He didn't say anything as he looked at my asshole. His hands pulled away. I jumped a bit when he spanked both my ass cheeks with his big meat hands. He gave me a couple more hard smacks, making my ass cheeks blush.\n\n\"Get on the couch and poke out your ass.\" \n\nI knelt on the sofa and poked my ass out, looking like a girl on cam showing off her assets in some online ad. Anthony walked over and sat on the edge with one knee on the carpet. He twisted his body and got a good look at my tender red bubble butt. I felt his big warm rough hands rub over the cheeks.\n\n\"I don't give a fuck who you are, that is a sexy ass!\" He spread my cheeks again to reveal my tight pink hole. \"So there's that boypussy,\" he said, tapping a finger against it. I tightened my ass and relaxed it. \"Yeah, wink at me, tight little pussy, tell me how much you want me stretching the fuck outta you,\" he said, before spitting onto it. \n\nHe leaned forward and let his tongue dance around my bussy, spreading the saliva over my winking center. He leaned back and positioned his fat thumb right on my hole and pushed into me.\n\nI groaned and tightened my ass.\n\n\"Fuck, don't break my thumb!\" he laughed, pulling his thumb away. He stood up and positioned me. He got behind me, positioning the head of his pre-cum dripping cock at my hole.\n\n\"My bag. There's some lube in my book bag pocket,\" I said without thinking.\n\nAnthony looked around until he saw my bag. He went over and opened it, riffling inside it. I heard him laugh and I remembered something. I hung my head in shame and gritted my teeth, not knowing what Anthony was going to do to me. \n\nI was surprised as I felt the cold lube run into the crack of my ass. I heard the bottle as Anthony squeezed it for a load to coat his cock. He moved around behind me, positioning the big red cockhead with my tight pink hole and pushed forward. I gave a low guttural moan, almost a scream, as Anthony stretched me open, forcing his horsecock into me. Instinctively, I clenched down on the pain.\n\n\"Don't squeeze down so tight I'm trying to get in. Relax and let this fat cock sink into that tight pussy. Open that boypussy up and let me inside, dude. Take what you've been wanting.\"\n\nI pushed out and took a deep breath as the big cock pushed against my ass ring steady and persistent, finally pushing past it and going deep into my guts.\n\n\"Fucking hot hole pulling my cock inside. Got-fuckin'-damn, baby! This is the damn tightest pussy I ever fucked, so fucking hot and deep!\" Anthony growled as his hips started a slight shallow thrust. \"Yeah, take that big baseball bat, baby. Let Anthony take possession of that pussy.\"\n\nHe slapped a hand across one of my ass cheeks. I groaned as my ass tightened around his big cock. Anthony began rocking harder into me. He grabbed my shoulders and pulled me deeper onto his cock. Precum dripped from my cock in a stream as the big cockhead slid over my prostate. All I could do was grunt as he picked up speed. I could hear his timed breaths like he probably made when working out as he pistoned his hips rhythmically forward. I could feel droplets of his sweat falling onto my back.\n\n\"You want me to breed that pussy with my cum? You want this baseballer cum? I wanna fill that fuckin' pussy with my muscle seed, baby,\" Anthony spit out the words between breaths. \n\n\"Fuck my pussy and breed me. Shoot that cum load into my hole,\" I begged, my body shaking as he rammed into my hole.\n\nAnthony growled as his strokes got shorter and faster. He grabbed my hair and pulled my head backward as he fell forward onto me. I felt his mouth against my neck as he roared, his body tensing as he filled my ass with his hot sperm. His thick hairy chest, wet with sweat, felt steaming hot against my back.\n\n\"Fuck, fuck, fuck, fuck...,\" he kept muttering as the final little jerks of his big muscled body released those last spasms of cum. He didn't move for a second.\n\nHe lifted up and pulled his still-hard cock out of me. He motioned for me to lie on my back. He hooked his arm under my knees and pushed my legs back. I felt his hand rub against my ass. He smeared his cum onto my cock and started jerking me. He moved so his cock could sink back into me and he started a gentle rocking of his hips. I grabbed at him and held tightly onto his muscled arms as he jerked an orgasm out of me. Tears rolled down my cheeks as I held myself tight against his hard muscles. My ass clamped down on his big cock as I came. He laughed with pleasure as my ass milked his cock.\n\nSuddenly, he released my cock and grabbed my legs, one in each hand. He pushed them to my chest as he looked at me smiling. We locked eyes as he started thrusting hard in and out of me. His mouth was tight as he started a deep throaty whine.\n\n\"Hmmmm-hmmmm, hmmmm-hummm,\" was the only sound he made against his tight lips, his eye focused completely on mine. His body jerked and he cried out, bearing his teeth and throwing his head back. He grabbed a lungful of air with a sucking groan. His head fell forward, and I felt a spray of sweat hit me.\n\n\"I've never fuckin' came twice like that in a pussy before. Damn, so this is what I've been missing? Damn glad I brought you home tonight. Couldn't have been planned any better,\" he finally said, giving me a quick smile and pulling his spent cock out of me. He sat back on the couch, wiping a hand over his sweaty face.",
        "\"I guess we need to hit the showers,\" he said grinning. \"Then we can get that cable out of your book bag and go put it back on your car.\" He laughed and reached over and patted my belly, smearing cum over it. \"But, you know, we could just wait and go do it in the morning.\"\n\n \n"
    ],
    "authorname": "TAHammer",
    "tags": [
        "gay male",
        "gay",
        "muscles",
        "hairy",
        "straight guy",
        "bisexual guy",
        "athlete",
        "sports",
        "redneck guy",
        "country guy"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/baseballed-ch-02"
}