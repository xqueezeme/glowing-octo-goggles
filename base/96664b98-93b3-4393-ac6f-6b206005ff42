{
    "title": "Collateral Ch. 17",
    "pages": [
        "Jake eyed the belt with growing unease. Klaus was balancing the scary object, ever so lightly, and that seemed hypnotizing. He could not tear his eyes off it. \n\n\"I believe you know the drill, Jake,\" Klaus began speaking. \n\nThis time, Jake was not fooled. This was Klaus when angry. Never mind the even tone, the controlled gestures. He was going to get it good.\n\n\"You will obey each word I say,\" Klaus continued. \"Undress and come here. On all fours.\"\n\nJake took one deep breath and pulled off his t-shirt. He quickly kicked off his sneakers and took off his jeans. One stolen glance at Klaus's face told him he could not hope for forgiveness. Not this time. So he lowered himself to the carpet and proceeded to crawl towards Klaus. \n\nQuickly, his face was inches away from the belt. \n\n\"Good. Now lick,\" Klaus said.\n\nHe looked up, unsure of whether he understood the order. Klaus swung the belt lightly, caressing his face in a false gesture of affection. So he stuck out his tongue and licked the leather, his eyes flicking upwards, taking in the man and his dominant stance. \n\nBlue eyes could burn with cold, cold fire. Then suddenly, an idea hit him. He grabbed the belt with one hand and pulled hard at it. He could feel the vibration in Klaus's wrist as the man took a stronger hold of the belt in his hand. \n\nJake looked up, saying nothing, but begging with his eyes. There was a flicker of surprise in the cold beautiful eyes, and the hold on the belt released. \n\nSlowly, Jake took the belt and proceeded to wrap it around his neck. He touched it carefully, not yet sure what he was getting himself into. But he stalled no longer, and handed Klaus the other end. He placed one small chaste kiss on the back of Klaus's hand, now wrapped around the belt, as well.\n\nThe man's voice was thick as he spoke again.\n\n\"You may come to think that this was a bad idea. You should back out right now.\"\n\nJake shook his head. Of course it was a bad idea. But he didn't want that belt on his ass. The idea was terrifying. \n\n\"I will need a verbal confirmation for that,\" Klaus said.\n\n\"Yes. Do what you want to do now,\" Jake replied, hoping his voice was not trembling and he didn't look as weak as he felt.\n\n\"Then go climb the bed. Ass to me.\"\n\nJake obeyed turning quickly, surprised of how the belt suddenly pulled taught around his neck. His sharp intake of breath took even him by surprise.\n\n\"Easy,\" Klaus whispered, in a gentler tone this time, stepping closer to Jake. \n\nLong elegant fingers came to his neck, adjusting the belt and making sure there was enough room for Jake to breathe. Klaus guided him onto the bed, placing himself behind Jake. \n\nHe did not dare look behind, but it sounded like the man was pulling out his cock. \n\n\"It is going to get a little rough. No, I should not lie to you,\" the man's voice was laced with sarcasm now. \"It will be plenty rough.\"\n\nHe heard the man spitting and he braced himself for the invasion. The burn in his ass was real, and he cursed as he grabbed one pillow to muffle his cries. Klaus pulled back, adding more spit to Jake's hole and his dick. After the initial shock, Jake willed himself to relax. And with the second push, the Klaus's cock slid in half way.\n\nIt was still painful, and his body was fighting, refusing to relax and let Klaus in. But Klaus was in no mood of slow preparation and his usual gentle coaxing with plenty of lube. He thrust inside again, and Jake gasped and arched his back. \n\nA strong hand on the belt yanked him back and upwards.\n\n\"Please indulge me in hearing you cry out,\" Klaus demanded.\n\nDamn the guy and his sadistic streak. But this was what mattered. This was what both of them were there for anyway.\n\n\"Maybe you will have to do better than this,\" Jake spoke, his words a bit strangled.\n\n\"Are you this ready to kick the hornet's nest?\" Klaus asked, and pushed himself all the way in, making Jake hiss.\n\n\"Yes. I want your best,\" Jake whispered. \"And your worst.\"\n\nHe had no idea words could have such power. The belt loosened and he was forced forward with his head down, kept there by a strong hand, while his ass began taking the pounding of his young life. \n\nWhile still painful, it felt insanely good, to be dominated like that. Jake grabbed his own cock, groaning and moaning with each thrust. Klaus's initial angry thrusts became one fluid motion that was making the both of them move in unison. Jake's cries of pain were mixed with pleasure, to a point that he could not tell what was real anymore. \n\nHe could not fight or maybe didn't want to, so he succumbed. To the rhythmic move of Klaus's hips, slamming against him, over and over again. To the hand grabbing his hair and pushing him down. To the way his dick was getting impossibly stiff with each thrust, like he could not have enough. \n\n\"Fuck, Jake,\" Klaus asked. \"Are you really enjoying this?\"\n\n\"Yes, yes!\" Jake yelled back. \"Give it to me hard already.\"\n\nIt could not have gotten much harder. Yet, it was happening, the bed creaking loudly under them, the air he breathed nothing but fire, and the sudden explosion of his dick, that came right after Klaus slammed deeper into him and came inside him with a loud groan.\n\nThey collapsed on the bed, heaving, and fighting for air. Klaus moved only to pull the belt on Jake's neck a little looser. \n\nAnd they lay on the bed like that, just breathing hard, clutching at each other.\n\n***\n\nKlaus took in Jake's profile, the way his Adam's apple bobbed up and down. A small tinge of guilt climbed up his throat. \n\n\"Are you okay?\" he whispered, as he stroked Jake's neck.\n\nLazy dark eyes moved to meet his. \n\n\"Are you still pissed at me?\"\n\n\"No, not anymore.\"\n\n\"Then I'm okay,\" he said with a faint smile.\n\nKlaus pulled the boy closer to him and kissed his damp forehead. Then he placed another kiss lower, and lower, until their lips met and Jake reacted, by biting sharply on soft flesh.\n\n\"Ouch!\" Klaus winced. \"What is this for?\"\n\n\"You looked way too happy in that picture, with that douchebag all over you,\" Jake said.\n\n\"You make me regret not giving you the proper punishment. You know it cannot count as much if you enjoy it.\"\n\n\"I think it's exactly why it was better like this,\" Jake smiled, both with lips and eyes.\n\nKlaus could feel laughter bubbling in his chest. \n\n\"You are such a naughty little thing. I should ask. How did you know?\"\n\n\"Well, you know. Collar? Leash? Those were dead giveaways for what you like, man,\" Jake shrugged.\n\nKlaus pulled him closer. He hadn't expected this, Jake to be so quick to understand what he wanted. Other lovers had at most been enthusiastic, whenever trying something new, but he had the distinct sensation that Jake was reading him, without even having to talk about it.\n\n\"You're trying to change the subject,\" the same fascinating eyes glared now. \n\n\"I do not understand how you can feel so ill at ease. I made a promise, did I not?\"\n\nJake exhaled and pouted.\n\n\"What are you doing with a guy like me, Klaus?\" he asked, and the look in his eyes was vulnerable now. \"You could have any of those guys flown in just to suck your cock. God knows you have the money for that.\"\n\n\"Those guys? What do you mean?\" Klaus frowned.\n\nJake rolled his eyes in an almost childish gesture. \n\n\"Your lovers. Your exes. The guys you fucked. They're all like fucking supermodels. You know that's not fair.\"\n\nKlaus pressed his index finger against his lips, trying hard not to laugh. If Jake only knew. The boy looked and saw a charmed life, filled with pleasures and no boundaries, but the truth was somewhere else. The week away had changed him, and Klaus was not that much of a hypocrite to ignore what that meant. \n\n\"Fair?\" he chose to tease the raven-haired beauty in his bed a little more. \"You should stop talking in half truths. Come, out with everything. I am tired, and I was not expecting to engage in rough sex the first thing back home. So do me the pleasure of getting everything off your chest, without having me drag you every step of the way.\"\n\nJake made a small annoyed sound, but he suddenly began talking.\n\n\"I have like, nothing on these guys. Am I a supermodel? Far from that,\" he snorted in that self-deprecating way of his Klaus wanted to wipe definitely from the boy's persona. \"Am I rich? Hmm, let me check my bank account. Oops, I don't have one. Do I know how to suck dick a thousand different ways? No, only a few, but I bet those guys know. They're like those people who like to be burned with candle wax and stuff, I think.\"\n\nThe small tirade ended with a sigh.\n\n\"Are you finished?\" Klaus asked. \"What else do you have against yourself?\"\n\n\"They're ... them. And I'm me.\"\n\n\"True. You are nothing like them.\"\n\nJake looked away.\n\n\"See? You agree with me. So why?\"\n\nKlaus seemed to ponder, looking at the ceiling, as if he was expecting some divine intervention to come to the rescue. But just as quickly, he pulled Jake closer, this time by the improvised collar, and forced the boy to look him in the eyes. \n\n\"You are nothing like them and that makes you special.\"\n\n\"Yeah, in a bad way,\" Jake bit his bottom lip hard.\n\n\"No. Not in a bad way. What is the only thing you ever truly asked from me?\"\n\n\"To go to school.\"\n\n\"That came after I introduced you to the field of work you are now in. And I talked to your foreman. I know he pushed you towards this. He did the right thing. What I mean is what you truly asked for me to do?\"\n\nJake scrunched his nose and began thinking. Klaus came to the rescue and provided the answer.\n\n\"You asked me to protect your brother. You could have asked for anything. You can ask for anything. I can and I will buy it for you. But instead, you just kept on insisting for me to protect your brother. Do you know what that tells me about you?\"\n\n\"Fuck if I know,\" Jake smiled a little, looking puzzled.\n\n\"Responsibility makes a man, Jake. Believe it or not, at this point, you are your brother's keeper.\"\n\nKlaus hesitated. It could not serve the young man to know about the restless gangs and the plan he had to put in motion. Jake had done Diaz a huge favor. When the going was to get rough, Diaz was going to walk through the fire unscathed like a Middle Eastern magician walking on hot coals. \n\n\"If you say so,\" Jake said, looking every bit as unconvinced as he was before.\n\n\"Do you say those men are more beautiful than you?\"\n\n\"Yeah, like are you blind or something? Or are your eyes weak? Wait, do you wear glasses?\"\n\n\"On occasion,\" Klaus smiled.\n\n\"For real?\" Jake blinked a few times and blushed suddenly.\n\n\"What is this?\" Klaus grinned. \"Would you like to see me wearing glasses?\"\n\n\"Yeah,\" Jake came back and smiled sheepishly. \"You would be like a cool teacher, right?\"\n\n\"I sense my little kinky lover getting more out of his shell. Is that something you would like for us to play? Are you in need of a little discipline, my naughty student?\"\n\n\"Fuck,\" Jake whispered. \"I am, I mean, I would like to play that.\"\n\n\"Look who is the expert at derailing conversations now. None of the men I slept with in the past can compare to you. As far as physical appearance is concerned.\"\n\n\"Bullshit,\" Jake protested. \"You should wear those glasses more often.\"\n\n\"I mean it. You are the most beautiful man I have ever had,\" Klaus said with conviction. \"They may be posing for fashion magazines or work at the gym five times a week, but you are like this without even thinking about it. That is the difference.\"\n\n\"I'm all scarred and everything.\"\n\n\"I like your scars. They are part of who you are. And I want you to tell me the story behind each and every one.\"\n\n\"That'll teach you not to waste your time on crap,\" Jake spoke, but his eyes were gleaming.\n\n\"What was next? That you are not rich like them. I do not care about money. I have plenty, in case you have not noticed. So that is not part of the criteria on which I pick a lover.\"\n\n\"Street trash is not that either,\" Jake snorted.\n\n\"Jake,\" Klaus warned. \"I am truly tired. I wish I could fuck all your insecurities out of you, but I am in no shape to do that. Particularly thanks to you and your little shenanigans. And as far as being kinky, you top everyone else so far. You, surprisingly, do not need as much guidance as I thought you would. I appreciated each lover I have had in my bed, but you are the first one to truly surprise me. You push all the right buttons.\"\n\n\"How about Hans?\" Jake shot quickly and recoiled like he wanted to hide.\n\n\"You had to go there,\" Klaus said with a tired sigh. \"Fine. But I need something in return.\"\n\n\"Shoot,\" Jake shrugged.\n\nKlaus placed his index finger on the long white scar on the inside of Jake's arm. \n\n\"The story of this scar.\"\n\nJake's face darkened. So it was true. There was a painful story behind that one particular fading wound. Klaus wanted to know it. To learn everything the young man had ever experienced, everything he had lived. And Klaus wanted to be part of everything Jake's life was going to be from this point forward.\n\n\"Deal?\" he insisted. \n\n\"Deal,\" Jake whispered. \"But not right now. You're tired, right? And I could use a break, too.\"\n\n\"A break from what?\"\n\n\"Nothing,\" Jake said quickly.\n\n\"You know it is not nothing. Speak.\"\n\n\"I must have ... spent too much time online reading about your ...\" Jake struggled with the words, \"past flames.\"\n\nKlaus laughed. He ruffled the boy's hair. \n\n\"That serves you right, I must say. You are the only one for me.\"\n\n\"Right now.\"\n\n\"We will talk about this,\" Klaus placed a small peck on Jake's forehead.\n\n\"You were pretty clear. By the time you leave, we should have already broken up or something.\"\n\n\"Things have changed.\"\n\n\"Like how?\"\n\n\"Let's just shower and sleep. We will talk tomorrow. I want to make sure that you understand everything.\"\n\n\"Why? Do you think I'm stupid?\"\n\n\"No. Just stubborn and a hot-head.\"\n\nKlaus could barely wait to talk about it, too. But it could wait. Just like the dark history behind the fading scar.\n\n***\n\nIt felt exhilarating to go down to breakfast and find Klaus reading the newspaper, with a fresh coffee and an ashtray in front of him. Jake could not stop thinking that the scene was pretty domestic and he found that comforting in some way.\n\n\"Morning,\" he said, still yawning and rubbing his eyes.\n\nKlaus folded the newspaper and Jake had to blink a few times. Tell the guy a thing ... He was wearing thin rimmed reading glasses that were making him look a little bit older but in a distinguished way. There was nothing distinguished, however, about the perverted smile that fluttered over the man's perfect lips. Jake groaned.\n\n\"You know I have to go to work,\" he glared and he was about to take a seat when Klaus gestured for him to come closer.\n\n\"Good morning,\" Klaus spoke. \n\nJake leaned in and placed a small kiss on the guy's mouth. Short and sweet, and doing his best to ignore the firm hand briefly pulling him closer to prolong the kiss.\n\n\"You do look nice with glasses,\" Jake murmured. \"But I suppose you already know this.\"\n\n\"A friendly reminder never hurts,\" Klaus joked. \"Sit and have breakfast. I have to leave early today, so I had to get up before you. I still hoped to see you before leaving. Your bed head is a sight to behold, I must add.\"\n\nJake ran his fingers through his hair.\n\n\"I did comb,\" he said, a bit miffed.\n\n\"I was talking about how you looked earlier, sprawled all over my bed,\" Klaus chuckled softly. \"You are a possessive one when it comes to territory. I may start to think that I need a larger bed.\" \n\n\"No way,\" Jake grabbed one of the mini muffins neatly placed on a plate. \"I'd just roll to your side and still be all over you, even if you get a bed that goes wall to wall. Ah, shit, you didn't sleep well because of me, right?\"\n\n\"Nothing of the kind. I have business to attend to, and that is why I had to get up from your arms earlier than I would have wanted. It pleases me that you prefer to sleep wrapped around me. I always know exactly where you are.\"\n\nKlaus took off his glasses and folded them. Then he rose and placed a small peck on Jake's forehead.\n\n\"Be good today,\" he said.\n\nJake snorted.\n\n\"You don't have to tell me that. You are the one who has supermodels fighting over him.\"\n\n\"You do know how to flatter my ego. But all I have on schedule are business meetings, nothing more. No supermodels fighting over me, I think.\"\n\n\"Good to know. Just don't wear those glasses everywhere. People might just start drooling over you.\"\n\n\"Hush,\" Klaus pulled at his hair a little and made him roll back his head, until he was forced to accept a rough kiss. \"See you tonight.\"\n\nJake's heart sank a little. He had to think about what he was going to say. Brace himself for it. Hope that Klaus was not going to see him the same Diaz saw him.\n\n***\n\nUneventful days were always a good thing. But Klaus did not believe in this calmness. The agent he had on the ground was yet to come back with his latest findings. Planning ahead was vital for this to succeed. In two months time, he would have no more reason to care about such trifle things anymore. \n\nBut there was always an upside to unhurried days. He could, for the moment, focus on Jake and the plans he had for the both of them. \n\nJake almost stumbled on the stairs as he hurried to greet him that night. Thompson had told him that he had taken Jake home about an hour before, and the boy had run upstairs to shower off the work dirt and change. Klaus was pleased with how good the boy looked lately. He was still rough around the edges, and he was always going to be, but he was developing a new shine. It was something in his eyes. The moment of their first encounter, Klaus had thought of him as a diamond in the rough. He had thought that new clothes and better living standards were needed to make the young man lose that raggedness about his being, the too protruding bones, the restlessness he carried with him like a badge.\n\nBut those were not the things that had changed. Jake's eyes were now full of wonder, expressive, rebellious and anxious. Now, the fear that seemed to live in them all the time was more subdued, and Klaus liked the relaxed way Jake behaved around him.\n\nKlaus embraced the young man and kissed him loudly. And he just continued to kiss him as they climbed the stairs. By the moment they were in his room upstairs, they were almost out of breath.\n\nMaybe it was a good thing after all that Jake preferred the more hands on approach. And Klaus had to admit that taking his lover from behind aroused him to no end. Jake assumed the position without being told anything. But this time, Klaus chose to use proper lubricant. Jake was still sore after their much too torrid last time, and it served no one to be careless. No matter what his rambunctious little lover had in mind, Klaus was the one responsible with his wellbeing and hurting him for no reason was not part of how he treated a lover.\n\nHe buried one hand in the dark mane and kept Jake in place, using the other to steady the frantic hips that wanted nothing but to push against him. It was freeing to enjoy so much power. Before, he used to think that being overly considerate to Jake in bed was his strongest point in winning over the boy. Yet Jake was forcing him to reevaluate his actions. The young man liked to be taken in hand, and Klaus loved to do it, as well.\n\nAnd Jake was a little moaner, too, never leaving Klaus guessing. The boy liked it and he was loud about it. It made Klaus hotter and want him so much more. His resolution was firm. And he had no more reason to postpone his feelings and wants.\n\nMinutes later, they reached their peak, and this time, Klaus preferred to remain inside a while longer, crushing Jake with his weight, wanting to infuse himself with the other one's being, breathing, smell, and power.\n\n***\n\n\"There are many good schools in Germany.\"",
        "\"What?\" Jake's voice was raspy from too much overly generous expressing of his passion earlier.\n\n\"Exactly what you heard,\" Klaus caressed his lover's chest slowly, as they lay on their sides, looking at each other.\n\n\"You mean ...\" Jake bit his lip. \"Do you, like, want me to go to school...there?\"\n\nKlaus grinned.\n\n\"Bingo.\"\n\n\"Why?\" Jake's dark eyes fluttered shut.\n\nThat was another sign of strong emotions he had noticed in the boy.\n\n\"I would say that it is fairly obvious.\"\n\n\"You want me to go with you? To Germany? Like in Europe? When?\"\n\n\"Once I finish the project here. At the beginning of next year. You could start school here and arrange for a transfer later on. Or just wait to start there next year.\"\n\nJake's eyes were now wide like spinners. Klaus enjoyed the young man's predicament a bit too much, perhaps.\n\n\"But ...why?\" this time there was so much insecurity in the boy's voice that Klaus felt compelled to put him at ease.\n\n\"I want you there, with me. I am now certain I do not wish to leave you behind.\"\n\n\"Are you sure? Because I thought you wanted to break up.\"\n\nKlaus took pleasure in twisting a perky nipple. Jake grunted, but did not pull away.\n\n\"No one is going to break up.\"\n\n\"I don't know, man. You might grow tired of me. Not now. But once I'm there. And then, what I'm supposed to do?\"\n\nKlaus rose from the bed and brought a pen and paper from the small desk in the bedroom.\n\n\"Here. Write it down. The amount of money you need to feel safe if I grow tired of you, as you say. Which will not happen, but it is for your peace of mind.\"\n\nJake seemed to ponder.\n\n\"How much does the plane ticket cost from your home to here?\"\n\n\"One thousand at best, I suppose,\" Klaus spoke.\n\nDutifully, Jake began writing down the sum, and after some scribbling handed it back. Klaus took the pen and paper from his hands.\n\n\"You would never make it in business like this,\" Klaus said with a smile and added a few extra zeroes, then handed the young man the paper back.\n\nJake's eyes grew wide.\n\n\"I'm like a high class prostitute or something?\" he asked. \"That's a fortune.\"\n\nKlaus laughed.\n\n\"No, you are not a prostitute. I will write a check with this amount and give it to you. If we ever break up, you are covered. What do you say?\"\n\n\"You must be crazy,\" Jake mumbled. \"Throwing so much money away for a fuck?\"\n\n\"A great fuck,\" Klaus laughed. \"And I intend to use you thoroughly. But let us not joke anymore, you are more to me than just a great fuck. I want to take you to Germany, because I see no end in sight for you and me.\"\n\nJake stared at him in disbelief, gaping like a fish a few times.\n\n\"Tell me I'm dreaming,\" he murmured. \"Here, pinch my arm.\"\n\nThis time, Klaus pinched both the young man's nipples, quite harshly.\n\n\"I do not understand why you find this so extraordinary.\"\n\nJake batted his hands away, his cheeks slowly coloring despite his dark complexion.\n\n\"You don't huh? What happened to the Ice Lord? The guy who said no relationships or something?\"\n\n\"Oh, you think I want to pursue a relationship with you?\" Klaus joked. \"I was thinking more along the lines of an arrangement that makes you my sex slave. I simply need to stave my hunger, preferably by devouring you little by little. Of course, I need to plan ahead. You are a bit too skinny and you might not be enough. And where do I get another Jake?\"\n\n\"They sell them at Walmart. A dime a dozen,\" Jake snorted. \"The prepackaged food aisle.\"\n\n\"Are you fond of your nipples or should I attempt to tear them off completely?\"\n\nJake placed his hands protectively over his chest.\n\n\"Stay away from me, you perverted sadist,\" he said.\n\n\"Your answer, Jake,\" Klaus demanded.\n\n\"Like right now?\" Jake looked away.\n\n\"I can wait. But not too long. I need to know.\"\n\n\"Okay.\"\n\n\"All right, how much time do you need to think about it?\"\n\n\"No. That was my answer. Okay. I mean, I'll go with you.\"\n\n\"Are you sure?\" Klaus felt a bit taken aback by the boy's quick determination.\n\n\"Breaking up with you makes me rich. Staying with you means I go to school and get a good job. It's like a win-win,\" Jake shrugged.\n\nKlaus could tell that was not the reason, but he had to let his lover have his pride. After all, he was asking a great deal right now, and Jake's hasty decision could only mean one thing.\n\nThat the words spoken that night, drunken stupor aside, were true.\n\nTBC\n\n***\n\nAuthor's note: Thank you for reading! And also for your patience! I am resuming more regular posting, now that I'm back. And I want to address my deepest thanks to everyone supporting me with comments and feedback. Until next time!"
    ],
    "authorname": "laurasfox",
    "tags": [
        "gay novel",
        "gay romance",
        "anal",
        "anal sex",
        "romance",
        "romantic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/collateral-ch-17"
}